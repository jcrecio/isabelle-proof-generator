{"file_name": "/home/qj213/afp-2021-10-22/thys/LinearQuantifierElim/Thys/Logic.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LinearQuantifierElim", "problem_names": ["lemmas atoms_map_fm[simp] = fm.set_map", "lemma amap_fm_list_disj:\n  \"amap\\<^sub>f\\<^sub>m h (list_disj fs) = list_disj (map (amap\\<^sub>f\\<^sub>m h) fs)\"", "lemma qfree_and[simp]: \"\\<lbrakk> qfree \\<phi>\\<^sub>1; qfree \\<phi>\\<^sub>2 \\<rbrakk> \\<Longrightarrow> qfree(and \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)\"", "lemma qfree_or[simp]: \"\\<lbrakk> qfree \\<phi>\\<^sub>1; qfree \\<phi>\\<^sub>2 \\<rbrakk> \\<Longrightarrow> qfree(or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)\"", "lemma qfree_neg[simp]: \"qfree(neg \\<phi>) = qfree \\<phi>\"", "lemma qfree_foldr_Or[simp]:\n \"qfree(foldr Or fs \\<phi>) = (qfree \\<phi> \\<and> (\\<forall>\\<phi> \\<in> set fs. qfree \\<phi>))\"", "lemma qfree_list_conj[simp]:\nassumes \"\\<forall>\\<phi> \\<in> set fs. qfree \\<phi>\" shows \"qfree(list_conj fs)\"", "lemma qfree_list_disj[simp]:\nassumes \"\\<forall>\\<phi> \\<in> set fs. qfree \\<phi>\" shows \"qfree(list_disj fs)\"", "lemma qfree_map_fm: \"qfree (map\\<^sub>f\\<^sub>m f \\<phi>) = qfree \\<phi>\"", "lemma atoms_list_disjE:\n  \"a \\<in> atoms(list_disj fs) \\<Longrightarrow> a \\<in> (\\<Union>\\<phi> \\<in> set fs. atoms \\<phi>)\"", "lemma atoms_list_conjE:\n  \"a \\<in> atoms(list_conj fs) \\<Longrightarrow> a \\<in> (\\<Union>\\<phi> \\<in> set fs. atoms \\<phi>)\"", "lemma nqfree_qfree[simp]: \"nqfree \\<phi> \\<Longrightarrow> qfree \\<phi>\"", "lemma nqfree_map_fm: \"nqfree (map\\<^sub>f\\<^sub>m f \\<phi>) = nqfree \\<phi>\"", "lemma nqfree_nnf: \"qfree \\<phi> \\<Longrightarrow> nqfree(nnf \\<phi>)\"", "lemma qfree_nnf[simp]: \"qfree(nnf \\<phi>) = qfree \\<phi>\"", "lemma I_neg[simp]: \"I (neg \\<phi>) xs = I (Neg \\<phi>) xs\"", "lemma I_and[simp]: \"I (and \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) xs = I (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) xs\"", "lemma I_list_conj[simp]:\n \"I (list_conj fs) xs = (\\<forall>\\<phi> \\<in> set fs. I \\<phi> xs)\"", "lemma I_or[simp]: \"I (or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) xs = I (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) xs\"", "lemma I_list_disj[simp]:\n \"I (list_disj fs) xs = (\\<exists>\\<phi> \\<in> set fs. I \\<phi> xs)\"", "lemma I_nnf: \"I (nnf \\<phi>) xs = I \\<phi> xs\"", "lemma I_dnf:\n\"nqfree \\<phi> \\<Longrightarrow> (\\<exists>as\\<in>set (dnf \\<phi>). \\<forall>a\\<in>set as. I\\<^sub>a a xs) = I \\<phi> xs\"", "lemma normal_simps[simp]:\n\"normal TrueF\"\n\"normal FalseF\"\n\"normal (Atom a) \\<longleftrightarrow> anormal a\"\n\"normal (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) \\<longleftrightarrow> normal \\<phi>\\<^sub>1 \\<and> normal \\<phi>\\<^sub>2\"\n\"normal (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) \\<longleftrightarrow> normal \\<phi>\\<^sub>1 \\<and> normal \\<phi>\\<^sub>2\"\n\"normal (Neg \\<phi>) \\<longleftrightarrow> normal \\<phi>\"\n\"normal (ExQ \\<phi>) \\<longleftrightarrow> normal \\<phi>\"", "lemma normal_aneg[simp]: \"anormal a \\<Longrightarrow> normal (aneg a)\"", "lemma normal_and[simp]:\n  \"normal \\<phi>\\<^sub>1 \\<Longrightarrow> normal \\<phi>\\<^sub>2 \\<Longrightarrow> normal (and \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)\"", "lemma normal_or[simp]:\n  \"normal \\<phi>\\<^sub>1 \\<Longrightarrow> normal \\<phi>\\<^sub>2 \\<Longrightarrow> normal (or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)\"", "lemma normal_list_disj[simp]:\n  \"\\<forall>\\<phi>\\<in>set fs. normal \\<phi> \\<Longrightarrow> normal (list_disj fs)\"", "lemma normal_nnf: \"normal \\<phi> \\<Longrightarrow> normal(nnf \\<phi>)\"", "lemma normal_map_fm:\n  \"\\<forall>a. anormal(f a) = anormal(a) \\<Longrightarrow> normal (map\\<^sub>f\\<^sub>m f \\<phi>) = normal \\<phi>\"", "lemma anormal_nnf:\n  \"qfree \\<phi> \\<Longrightarrow> normal \\<phi> \\<Longrightarrow> \\<forall>a\\<in>atoms(nnf \\<phi>). anormal a\"", "lemma atoms_dnf: \"nqfree \\<phi> \\<Longrightarrow> as \\<in> set(dnf \\<phi>) \\<Longrightarrow> a \\<in> set as \\<Longrightarrow> a \\<in> atoms \\<phi>\"", "lemma anormal_dnf_nnf:\n  \"as \\<in> set(dnf(nnf \\<phi>)) \\<Longrightarrow> qfree \\<phi> \\<Longrightarrow> normal \\<phi> \\<Longrightarrow> a \\<in> set as \\<Longrightarrow> anormal a\""], "translations": [["", "lemmas atoms_map_fm[simp] = fm.set_map"], ["", "fun amap_fm :: \"('a \\<Rightarrow> 'b fm) \\<Rightarrow> 'a fm \\<Rightarrow> 'b fm\" (\"amap\\<^sub>f\\<^sub>m\") where\n\"amap\\<^sub>f\\<^sub>m h TrueF = TrueF\" |\n\"amap\\<^sub>f\\<^sub>m h FalseF = FalseF\" |\n\"amap\\<^sub>f\\<^sub>m h (Atom a) = h a\" |\n\"amap\\<^sub>f\\<^sub>m h (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) = and (amap\\<^sub>f\\<^sub>m h \\<phi>\\<^sub>1) (amap\\<^sub>f\\<^sub>m h \\<phi>\\<^sub>2)\" |\n\"amap\\<^sub>f\\<^sub>m h (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) = or (amap\\<^sub>f\\<^sub>m h \\<phi>\\<^sub>1) (amap\\<^sub>f\\<^sub>m h \\<phi>\\<^sub>2)\" |\n\"amap\\<^sub>f\\<^sub>m h (Neg \\<phi>) = neg (amap\\<^sub>f\\<^sub>m h \\<phi>)\""], ["", "lemma amap_fm_list_disj:\n  \"amap\\<^sub>f\\<^sub>m h (list_disj fs) = list_disj (map (amap\\<^sub>f\\<^sub>m h) fs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. amap\\<^sub>f\\<^sub>m h (list_disj fs) = Disj fs (amap\\<^sub>f\\<^sub>m h)", "by(induct fs) (auto simp:list_disj_def or_def)"], ["", "fun qfree :: \"'a fm \\<Rightarrow> bool\" where\n\"qfree(ExQ f) = False\" |\n\"qfree(And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) = (qfree \\<phi>\\<^sub>1 \\<and> qfree \\<phi>\\<^sub>2)\" |\n\"qfree(Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) = (qfree \\<phi>\\<^sub>1 \\<and> qfree \\<phi>\\<^sub>2)\" |\n\"qfree(Neg \\<phi>) = (qfree \\<phi>)\" |\n\"qfree \\<phi> = True\""], ["", "lemma qfree_and[simp]: \"\\<lbrakk> qfree \\<phi>\\<^sub>1; qfree \\<phi>\\<^sub>2 \\<rbrakk> \\<Longrightarrow> qfree(and \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>qfree \\<phi>\\<^sub>1; qfree \\<phi>\\<^sub>2\\<rbrakk>\n    \\<Longrightarrow> qfree (and \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)", "by(simp add:and_def)"], ["", "lemma qfree_or[simp]: \"\\<lbrakk> qfree \\<phi>\\<^sub>1; qfree \\<phi>\\<^sub>2 \\<rbrakk> \\<Longrightarrow> qfree(or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>qfree \\<phi>\\<^sub>1; qfree \\<phi>\\<^sub>2\\<rbrakk>\n    \\<Longrightarrow> qfree (or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)", "by(simp add:or_def)"], ["", "lemma qfree_neg[simp]: \"qfree(neg \\<phi>) = qfree \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qfree (neg \\<phi>) = qfree \\<phi>", "by(simp add:neg_def)"], ["", "lemma qfree_foldr_Or[simp]:\n \"qfree(foldr Or fs \\<phi>) = (qfree \\<phi> \\<and> (\\<forall>\\<phi> \\<in> set fs. qfree \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qfree (foldr Or fs \\<phi>) =\n    (qfree \\<phi> \\<and> (\\<forall>\\<phi>\\<in>set fs. qfree \\<phi>))", "by (induct fs) auto"], ["", "lemma qfree_list_conj[simp]:\nassumes \"\\<forall>\\<phi> \\<in> set fs. qfree \\<phi>\" shows \"qfree(list_conj fs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qfree (list_conj fs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. qfree (list_conj fs)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. qfree (list_conj fs)", "fix fs \\<phi>"], ["proof (state)\ngoal (1 subgoal):\n 1. qfree (list_conj fs)", "have \"\\<lbrakk> \\<forall>\\<phi> \\<in> set fs. qfree \\<phi>; qfree \\<phi> \\<rbrakk> \\<Longrightarrow> qfree(foldr and fs \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>\\<phi>\\<in>set fs. qfree \\<phi>; qfree \\<phi>\\<rbrakk>\n    \\<Longrightarrow> qfree (foldr and fs \\<phi>)", "by (induct fs) auto"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>\\<phi>\\<in>set fs. qfree \\<phi>; qfree \\<phi>\\<rbrakk>\n  \\<Longrightarrow> qfree (foldr and fs \\<phi>)\n\ngoal (1 subgoal):\n 1. qfree (list_conj fs)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>\\<phi>\\<in>set ?fsa2. qfree \\<phi>;\n   qfree ?\\<phi>2\\<rbrakk>\n  \\<Longrightarrow> qfree (foldr and ?fsa2 ?\\<phi>2)\n\ngoal (1 subgoal):\n 1. qfree (list_conj fs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>\\<phi>\\<in>set ?fsa2. qfree \\<phi>;\n   qfree ?\\<phi>2\\<rbrakk>\n  \\<Longrightarrow> qfree (foldr and ?fsa2 ?\\<phi>2)\n\ngoal (1 subgoal):\n 1. qfree (list_conj fs)", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>\\<phi>\\<in>set ?fsa2. qfree \\<phi>;\n   qfree ?\\<phi>2\\<rbrakk>\n  \\<Longrightarrow> qfree (foldr and ?fsa2 ?\\<phi>2)\n  \\<forall>\\<phi>\\<in>set fs. qfree \\<phi>\n\ngoal (1 subgoal):\n 1. qfree (list_conj fs)", "by (fastforce simp add:list_conj_def)"], ["proof (state)\nthis:\n  qfree (list_conj fs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma qfree_list_disj[simp]:\nassumes \"\\<forall>\\<phi> \\<in> set fs. qfree \\<phi>\" shows \"qfree(list_disj fs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qfree (list_disj fs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. qfree (list_disj fs)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. qfree (list_disj fs)", "fix fs \\<phi>"], ["proof (state)\ngoal (1 subgoal):\n 1. qfree (list_disj fs)", "have \"\\<lbrakk> \\<forall>\\<phi> \\<in> set fs. qfree \\<phi>; qfree \\<phi> \\<rbrakk> \\<Longrightarrow> qfree(foldr or fs \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>\\<phi>\\<in>set fs. qfree \\<phi>; qfree \\<phi>\\<rbrakk>\n    \\<Longrightarrow> qfree (foldr or fs \\<phi>)", "by (induct fs) auto"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>\\<phi>\\<in>set fs. qfree \\<phi>; qfree \\<phi>\\<rbrakk>\n  \\<Longrightarrow> qfree (foldr or fs \\<phi>)\n\ngoal (1 subgoal):\n 1. qfree (list_disj fs)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>\\<phi>\\<in>set ?fsa2. qfree \\<phi>;\n   qfree ?\\<phi>2\\<rbrakk>\n  \\<Longrightarrow> qfree (foldr or ?fsa2 ?\\<phi>2)\n\ngoal (1 subgoal):\n 1. qfree (list_disj fs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>\\<phi>\\<in>set ?fsa2. qfree \\<phi>;\n   qfree ?\\<phi>2\\<rbrakk>\n  \\<Longrightarrow> qfree (foldr or ?fsa2 ?\\<phi>2)\n\ngoal (1 subgoal):\n 1. qfree (list_disj fs)", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>\\<phi>\\<in>set ?fsa2. qfree \\<phi>;\n   qfree ?\\<phi>2\\<rbrakk>\n  \\<Longrightarrow> qfree (foldr or ?fsa2 ?\\<phi>2)\n  \\<forall>\\<phi>\\<in>set fs. qfree \\<phi>\n\ngoal (1 subgoal):\n 1. qfree (list_disj fs)", "by (fastforce simp add:list_disj_def)"], ["proof (state)\nthis:\n  qfree (list_disj fs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma qfree_map_fm: \"qfree (map\\<^sub>f\\<^sub>m f \\<phi>) = qfree \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qfree (map\\<^sub>f\\<^sub>m f \\<phi>) = qfree \\<phi>", "by (induct \\<phi>) simp_all"], ["", "lemma atoms_list_disjE:\n  \"a \\<in> atoms(list_disj fs) \\<Longrightarrow> a \\<in> (\\<Union>\\<phi> \\<in> set fs. atoms \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> atoms (list_disj fs) \\<Longrightarrow>\n    a \\<in> \\<Union> (atoms ` set fs)", "apply(induct fs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<in> atoms (list_disj []) \\<Longrightarrow>\n    a \\<in> \\<Union> (atoms ` set [])\n 2. \\<And>aa fs.\n       \\<lbrakk>a \\<in> atoms (list_disj fs) \\<Longrightarrow>\n                a \\<in> \\<Union> (atoms ` set fs);\n        a \\<in> atoms (list_disj (aa # fs))\\<rbrakk>\n       \\<Longrightarrow> a \\<in> \\<Union> (atoms ` set (aa # fs))", "apply (simp add:list_disj_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa fs.\n       \\<lbrakk>a \\<in> atoms (list_disj fs) \\<Longrightarrow>\n                a \\<in> \\<Union> (atoms ` set fs);\n        a \\<in> atoms (list_disj (aa # fs))\\<rbrakk>\n       \\<Longrightarrow> a \\<in> \\<Union> (atoms ` set (aa # fs))", "apply (auto simp add:list_disj_def Logic.or_def split:if_split_asm)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma atoms_list_conjE:\n  \"a \\<in> atoms(list_conj fs) \\<Longrightarrow> a \\<in> (\\<Union>\\<phi> \\<in> set fs. atoms \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> atoms (list_conj fs) \\<Longrightarrow>\n    a \\<in> \\<Union> (atoms ` set fs)", "apply(induct fs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<in> atoms (list_conj []) \\<Longrightarrow>\n    a \\<in> \\<Union> (atoms ` set [])\n 2. \\<And>aa fs.\n       \\<lbrakk>a \\<in> atoms (list_conj fs) \\<Longrightarrow>\n                a \\<in> \\<Union> (atoms ` set fs);\n        a \\<in> atoms (list_conj (aa # fs))\\<rbrakk>\n       \\<Longrightarrow> a \\<in> \\<Union> (atoms ` set (aa # fs))", "apply (simp add:list_conj_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa fs.\n       \\<lbrakk>a \\<in> atoms (list_conj fs) \\<Longrightarrow>\n                a \\<in> \\<Union> (atoms ` set fs);\n        a \\<in> atoms (list_conj (aa # fs))\\<rbrakk>\n       \\<Longrightarrow> a \\<in> \\<Union> (atoms ` set (aa # fs))", "apply (auto simp add:list_conj_def Logic.and_def split:if_split_asm)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "fun dnf :: \"'a fm \\<Rightarrow> 'a list list\" where\n\"dnf TrueF = [[]]\" |\n\"dnf FalseF = []\" |\n\"dnf (Atom \\<phi>) = [[\\<phi>]]\" |\n\"dnf (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) = [d1 @ d2. d1 \\<leftarrow> dnf \\<phi>\\<^sub>1, d2 \\<leftarrow> dnf \\<phi>\\<^sub>2]\" |\n\"dnf (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) = dnf \\<phi>\\<^sub>1 @ dnf \\<phi>\\<^sub>2\""], ["", "fun nqfree :: \"'a fm \\<Rightarrow> bool\" where\n\"nqfree(Atom a) = True\" |\n\"nqfree TrueF = True\" |\n\"nqfree FalseF = True\" |\n\"nqfree (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) = (nqfree \\<phi>\\<^sub>1 \\<and> nqfree \\<phi>\\<^sub>2)\" |\n\"nqfree (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) = (nqfree \\<phi>\\<^sub>1 \\<and> nqfree \\<phi>\\<^sub>2)\" |\n\"nqfree \\<phi> = False\""], ["", "lemma nqfree_qfree[simp]: \"nqfree \\<phi> \\<Longrightarrow> qfree \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nqfree \\<phi> \\<Longrightarrow> qfree \\<phi>", "by (induct \\<phi>) simp_all"], ["", "lemma nqfree_map_fm: \"nqfree (map\\<^sub>f\\<^sub>m f \\<phi>) = nqfree \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nqfree (map\\<^sub>f\\<^sub>m f \\<phi>) = nqfree \\<phi>", "by (induct \\<phi>) simp_all"], ["", "fun \"interpret\" :: \"('a \\<Rightarrow> 'b list \\<Rightarrow> bool) \\<Rightarrow> 'a fm \\<Rightarrow> 'b list \\<Rightarrow> bool\" where\n\"interpret h TrueF xs = True\" |\n\"interpret h FalseF xs = False\" |\n\"interpret h (Atom a) xs = h a xs\" |\n\"interpret h (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) xs = (interpret h \\<phi>\\<^sub>1 xs \\<and> interpret h \\<phi>\\<^sub>2 xs)\" |\n\"interpret h (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) xs = (interpret h \\<phi>\\<^sub>1 xs \\<or> interpret h \\<phi>\\<^sub>2 xs)\" |\n\"interpret h (Neg \\<phi>) xs = (\\<not> interpret h \\<phi> xs)\" |\n\"interpret h (ExQ \\<phi>) xs = (\\<exists>x. interpret h \\<phi> (x#xs))\""], ["", "subsection\\<open>Atoms\\<close>"], ["", "text\\<open>The locale ATOM of atoms provides a minimal framework for the\ngeneric formulation of theory-independent algorithms, in particular\nquantifier elimination.\\<close>"], ["", "locale ATOM =\nfixes aneg :: \"'a \\<Rightarrow> 'a fm\"\nfixes anormal :: \"'a \\<Rightarrow> bool\"\nassumes nqfree_aneg: \"nqfree(aneg a)\"\nassumes anormal_aneg: \"anormal a \\<Longrightarrow> \\<forall>b\\<in>atoms(aneg a). anormal b\"\n\nfixes I\\<^sub>a :: \"'a \\<Rightarrow> 'b list \\<Rightarrow> bool\"\nassumes I\\<^sub>a_aneg: \"interpret I\\<^sub>a (aneg a) xs = (\\<not> I\\<^sub>a a xs)\"\n\nfixes depends\\<^sub>0 :: \"'a \\<Rightarrow> bool\"\nand decr :: \"'a \\<Rightarrow> 'a\" \nassumes not_dep_decr: \"\\<not>depends\\<^sub>0 a \\<Longrightarrow> I\\<^sub>a a (x#xs) = I\\<^sub>a (decr a) xs\"\nassumes anormal_decr: \"\\<not> depends\\<^sub>0 a \\<Longrightarrow> anormal a \\<Longrightarrow> anormal(decr a)\"\n\nbegin"], ["", "fun atoms\\<^sub>0 :: \"'a fm \\<Rightarrow> 'a list\" where\n\"atoms\\<^sub>0 TrueF = []\" |\n\"atoms\\<^sub>0 FalseF = []\" |\n\"atoms\\<^sub>0 (Atom a) = (if depends\\<^sub>0 a then [a] else [])\" |\n\"atoms\\<^sub>0 (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) = atoms\\<^sub>0 \\<phi>\\<^sub>1 @ atoms\\<^sub>0 \\<phi>\\<^sub>2\" |\n\"atoms\\<^sub>0 (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) = atoms\\<^sub>0 \\<phi>\\<^sub>1 @ atoms\\<^sub>0 \\<phi>\\<^sub>2\" |\n\"atoms\\<^sub>0 (Neg \\<phi>) = atoms\\<^sub>0 \\<phi>\""], ["", "abbreviation I where \"I \\<equiv> interpret I\\<^sub>a\""], ["", "fun nnf :: \"'a fm \\<Rightarrow> 'a fm\" where\n\"nnf (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) = And (nnf \\<phi>\\<^sub>1) (nnf \\<phi>\\<^sub>2)\" |\n\"nnf (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) = Or (nnf \\<phi>\\<^sub>1) (nnf \\<phi>\\<^sub>2)\" |\n\"nnf (Neg TrueF) = FalseF\" |\n\"nnf (Neg FalseF) = TrueF\" |\n\"nnf (Neg (Neg \\<phi>)) = (nnf \\<phi>)\" |\n\"nnf (Neg (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)) = (Or (nnf (Neg \\<phi>\\<^sub>1)) (nnf (Neg \\<phi>\\<^sub>2)))\" |\n\"nnf (Neg (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)) = (And (nnf (Neg \\<phi>\\<^sub>1)) (nnf (Neg \\<phi>\\<^sub>2)))\" |\n\"nnf (Neg (Atom a)) = aneg a\" |\n\"nnf \\<phi> = \\<phi>\""], ["", "lemma nqfree_nnf: \"qfree \\<phi> \\<Longrightarrow> nqfree(nnf \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qfree \\<phi> \\<Longrightarrow> nqfree (nnf \\<phi>)", "by(induct \\<phi> rule:nnf.induct)\n  (simp_all add: nqfree_aneg and_def or_def)"], ["", "lemma qfree_nnf[simp]: \"qfree(nnf \\<phi>) = qfree \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qfree (nnf \\<phi>) = qfree \\<phi>", "by (induct \\<phi> rule:nnf.induct)(simp_all add: nqfree_aneg)"], ["", "lemma I_neg[simp]: \"I (neg \\<phi>) xs = I (Neg \\<phi>) xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I (neg \\<phi>) xs = I (Neg \\<phi>) xs", "by(simp add:neg_def)"], ["", "lemma I_and[simp]: \"I (and \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) xs = I (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I (and \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) xs =\n    I (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) xs", "by(simp add:and_def)"], ["", "lemma I_list_conj[simp]:\n \"I (list_conj fs) xs = (\\<forall>\\<phi> \\<in> set fs. I \\<phi> xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I (list_conj fs) xs = (\\<forall>\\<phi>\\<in>set fs. I \\<phi> xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. I (list_conj fs) xs = (\\<forall>\\<phi>\\<in>set fs. I \\<phi> xs)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. I (list_conj fs) xs = (\\<forall>\\<phi>\\<in>set fs. I \\<phi> xs)", "fix fs \\<phi>"], ["proof (state)\ngoal (1 subgoal):\n 1. I (list_conj fs) xs = (\\<forall>\\<phi>\\<in>set fs. I \\<phi> xs)", "have \"I (foldr and fs \\<phi>) xs = (I \\<phi> xs \\<and> (\\<forall>\\<phi> \\<in> set fs. I \\<phi> xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I (foldr and fs \\<phi>) xs =\n    (I \\<phi> xs \\<and> (\\<forall>\\<phi>\\<in>set fs. I \\<phi> xs))", "by (induct fs) auto"], ["proof (state)\nthis:\n  I (foldr and fs \\<phi>) xs =\n  (I \\<phi> xs \\<and> (\\<forall>\\<phi>\\<in>set fs. I \\<phi> xs))\n\ngoal (1 subgoal):\n 1. I (list_conj fs) xs = (\\<forall>\\<phi>\\<in>set fs. I \\<phi> xs)", "}"], ["proof (state)\nthis:\n  I (foldr and ?fsa2 ?\\<phi>2) xs =\n  (I ?\\<phi>2 xs \\<and> (\\<forall>\\<phi>\\<in>set ?fsa2. I \\<phi> xs))\n\ngoal (1 subgoal):\n 1. I (list_conj fs) xs = (\\<forall>\\<phi>\\<in>set fs. I \\<phi> xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  I (foldr and ?fsa2 ?\\<phi>2) xs =\n  (I ?\\<phi>2 xs \\<and> (\\<forall>\\<phi>\\<in>set ?fsa2. I \\<phi> xs))\n\ngoal (1 subgoal):\n 1. I (list_conj fs) xs = (\\<forall>\\<phi>\\<in>set fs. I \\<phi> xs)", "by(simp add:list_conj_def)"], ["proof (state)\nthis:\n  I (list_conj fs) xs = (\\<forall>\\<phi>\\<in>set fs. I \\<phi> xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma I_or[simp]: \"I (or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) xs = I (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I (or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) xs =\n    I (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) xs", "by(simp add:or_def)"], ["", "lemma I_list_disj[simp]:\n \"I (list_disj fs) xs = (\\<exists>\\<phi> \\<in> set fs. I \\<phi> xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I (list_disj fs) xs = (\\<exists>\\<phi>\\<in>set fs. I \\<phi> xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. I (list_disj fs) xs = (\\<exists>\\<phi>\\<in>set fs. I \\<phi> xs)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. I (list_disj fs) xs = (\\<exists>\\<phi>\\<in>set fs. I \\<phi> xs)", "fix fs \\<phi>"], ["proof (state)\ngoal (1 subgoal):\n 1. I (list_disj fs) xs = (\\<exists>\\<phi>\\<in>set fs. I \\<phi> xs)", "have \"I (foldr or fs \\<phi>) xs = (I \\<phi> xs \\<or> (\\<exists>\\<phi> \\<in> set fs. I \\<phi> xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I (foldr or fs \\<phi>) xs =\n    (I \\<phi> xs \\<or> (\\<exists>\\<phi>\\<in>set fs. I \\<phi> xs))", "by (induct fs) auto"], ["proof (state)\nthis:\n  I (foldr or fs \\<phi>) xs =\n  (I \\<phi> xs \\<or> (\\<exists>\\<phi>\\<in>set fs. I \\<phi> xs))\n\ngoal (1 subgoal):\n 1. I (list_disj fs) xs = (\\<exists>\\<phi>\\<in>set fs. I \\<phi> xs)", "}"], ["proof (state)\nthis:\n  I (foldr or ?fsa2 ?\\<phi>2) xs =\n  (I ?\\<phi>2 xs \\<or> (\\<exists>\\<phi>\\<in>set ?fsa2. I \\<phi> xs))\n\ngoal (1 subgoal):\n 1. I (list_disj fs) xs = (\\<exists>\\<phi>\\<in>set fs. I \\<phi> xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  I (foldr or ?fsa2 ?\\<phi>2) xs =\n  (I ?\\<phi>2 xs \\<or> (\\<exists>\\<phi>\\<in>set ?fsa2. I \\<phi> xs))\n\ngoal (1 subgoal):\n 1. I (list_disj fs) xs = (\\<exists>\\<phi>\\<in>set fs. I \\<phi> xs)", "by(simp add:list_disj_def)"], ["proof (state)\nthis:\n  I (list_disj fs) xs = (\\<exists>\\<phi>\\<in>set fs. I \\<phi> xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma I_nnf: \"I (nnf \\<phi>) xs = I \\<phi> xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I (nnf \\<phi>) xs = I \\<phi> xs", "by(induct rule:nnf.induct)(simp_all add: I\\<^sub>a_aneg)"], ["", "lemma I_dnf:\n\"nqfree \\<phi> \\<Longrightarrow> (\\<exists>as\\<in>set (dnf \\<phi>). \\<forall>a\\<in>set as. I\\<^sub>a a xs) = I \\<phi> xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nqfree \\<phi> \\<Longrightarrow>\n    (\\<exists>as\\<in>set (dnf \\<phi>).\n        \\<forall>a\\<in>set as. I\\<^sub>a a xs) =\n    I \\<phi> xs", "by (induct \\<phi>) (fastforce)+"], ["", "definition \"normal \\<phi> = (\\<forall>a \\<in> atoms \\<phi>. anormal a)\""], ["", "lemma normal_simps[simp]:\n\"normal TrueF\"\n\"normal FalseF\"\n\"normal (Atom a) \\<longleftrightarrow> anormal a\"\n\"normal (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) \\<longleftrightarrow> normal \\<phi>\\<^sub>1 \\<and> normal \\<phi>\\<^sub>2\"\n\"normal (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) \\<longleftrightarrow> normal \\<phi>\\<^sub>1 \\<and> normal \\<phi>\\<^sub>2\"\n\"normal (Neg \\<phi>) \\<longleftrightarrow> normal \\<phi>\"\n\"normal (ExQ \\<phi>) \\<longleftrightarrow> normal \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (normal TrueF &&& normal FalseF &&& normal (Atom a) = anormal a) &&&\n    (normal (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) =\n     (normal \\<phi>\\<^sub>1 \\<and> normal \\<phi>\\<^sub>2) &&&\n     normal (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) =\n     (normal \\<phi>\\<^sub>1 \\<and> normal \\<phi>\\<^sub>2)) &&&\n    normal (Neg \\<phi>) = normal \\<phi> &&&\n    normal (ExQ \\<phi>) = normal \\<phi>", "by(auto simp:normal_def)"], ["", "lemma normal_aneg[simp]: \"anormal a \\<Longrightarrow> normal (aneg a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. anormal a \\<Longrightarrow> normal (aneg a)", "by (simp add:anormal_aneg normal_def)"], ["", "lemma normal_and[simp]:\n  \"normal \\<phi>\\<^sub>1 \\<Longrightarrow> normal \\<phi>\\<^sub>2 \\<Longrightarrow> normal (and \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>normal \\<phi>\\<^sub>1; normal \\<phi>\\<^sub>2\\<rbrakk>\n    \\<Longrightarrow> normal (and \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)", "by (simp add:Logic.and_def)"], ["", "lemma normal_or[simp]:\n  \"normal \\<phi>\\<^sub>1 \\<Longrightarrow> normal \\<phi>\\<^sub>2 \\<Longrightarrow> normal (or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>normal \\<phi>\\<^sub>1; normal \\<phi>\\<^sub>2\\<rbrakk>\n    \\<Longrightarrow> normal (or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)", "by (simp add:Logic.or_def)"], ["", "lemma normal_list_disj[simp]:\n  \"\\<forall>\\<phi>\\<in>set fs. normal \\<phi> \\<Longrightarrow> normal (list_disj fs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ball (set fs) normal \\<Longrightarrow> normal (list_disj fs)", "apply(induct fs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Ball (set []) normal \\<Longrightarrow> normal (list_disj [])\n 2. \\<And>a fs.\n       \\<lbrakk>Ball (set fs) normal \\<Longrightarrow>\n                normal (list_disj fs);\n        Ball (set (a # fs)) normal\\<rbrakk>\n       \\<Longrightarrow> normal (list_disj (a # fs))", "apply (simp add:list_disj_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a fs.\n       \\<lbrakk>Ball (set fs) normal \\<Longrightarrow>\n                normal (list_disj fs);\n        Ball (set (a # fs)) normal\\<rbrakk>\n       \\<Longrightarrow> normal (list_disj (a # fs))", "apply (simp add:list_disj_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma normal_nnf: \"normal \\<phi> \\<Longrightarrow> normal(nnf \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. normal \\<phi> \\<Longrightarrow> normal (nnf \\<phi>)", "by(induct \\<phi> rule:nnf.induct) simp_all"], ["", "lemma normal_map_fm:\n  \"\\<forall>a. anormal(f a) = anormal(a) \\<Longrightarrow> normal (map\\<^sub>f\\<^sub>m f \\<phi>) = normal \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a. anormal (f a) = anormal a \\<Longrightarrow>\n    normal (map\\<^sub>f\\<^sub>m f \\<phi>) = normal \\<phi>", "by(induct \\<phi>) auto"], ["", "lemma anormal_nnf:\n  \"qfree \\<phi> \\<Longrightarrow> normal \\<phi> \\<Longrightarrow> \\<forall>a\\<in>atoms(nnf \\<phi>). anormal a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>qfree \\<phi>; normal \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>atoms (nnf \\<phi>). anormal a", "apply(induct \\<phi> rule:nnf.induct)"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2.\n       \\<lbrakk>\\<lbrakk>qfree \\<phi>\\<^sub>1;\n                 normal \\<phi>\\<^sub>1\\<rbrakk>\n                \\<Longrightarrow> Ball (atoms (nnf \\<phi>\\<^sub>1)) anormal;\n        \\<lbrakk>qfree \\<phi>\\<^sub>2; normal \\<phi>\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> Ball (atoms (nnf \\<phi>\\<^sub>2)) anormal;\n        qfree (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2);\n        normal (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> Ball\n                          (atoms (nnf (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)))\n                          anormal\n 2. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2.\n       \\<lbrakk>\\<lbrakk>qfree \\<phi>\\<^sub>1;\n                 normal \\<phi>\\<^sub>1\\<rbrakk>\n                \\<Longrightarrow> Ball (atoms (nnf \\<phi>\\<^sub>1)) anormal;\n        \\<lbrakk>qfree \\<phi>\\<^sub>2; normal \\<phi>\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> Ball (atoms (nnf \\<phi>\\<^sub>2)) anormal;\n        qfree (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2);\n        normal (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> Ball\n                          (atoms (nnf (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)))\n                          anormal\n 3. \\<lbrakk>qfree (Neg TrueF); normal (Neg TrueF)\\<rbrakk>\n    \\<Longrightarrow> Ball (atoms (nnf (Neg TrueF))) anormal\n 4. \\<lbrakk>qfree (Neg FalseF); normal (Neg FalseF)\\<rbrakk>\n    \\<Longrightarrow> Ball (atoms (nnf (Neg FalseF))) anormal\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>qfree \\<phi>; normal \\<phi>\\<rbrakk>\n                \\<Longrightarrow> Ball (atoms (nnf \\<phi>)) anormal;\n        qfree (Neg (Neg \\<phi>)); normal (Neg (Neg \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> Ball (atoms (nnf (Neg (Neg \\<phi>)))) anormal\n 6. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2.\n       \\<lbrakk>\\<lbrakk>qfree (Neg \\<phi>\\<^sub>1);\n                 normal (Neg \\<phi>\\<^sub>1)\\<rbrakk>\n                \\<Longrightarrow> Ball (atoms (nnf (Neg \\<phi>\\<^sub>1)))\n                                   anormal;\n        \\<lbrakk>qfree (Neg \\<phi>\\<^sub>2);\n         normal (Neg \\<phi>\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> Ball (atoms (nnf (Neg \\<phi>\\<^sub>2))) anormal;\n        qfree (Neg (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2));\n        normal (Neg (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2))\\<rbrakk>\n       \\<Longrightarrow> Ball\n                          (atoms\n                            (nnf (Neg (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2))))\n                          anormal\n 7. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2.\n       \\<lbrakk>\\<lbrakk>qfree (Neg \\<phi>\\<^sub>1);\n                 normal (Neg \\<phi>\\<^sub>1)\\<rbrakk>\n                \\<Longrightarrow> Ball (atoms (nnf (Neg \\<phi>\\<^sub>1)))\n                                   anormal;\n        \\<lbrakk>qfree (Neg \\<phi>\\<^sub>2);\n         normal (Neg \\<phi>\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> Ball (atoms (nnf (Neg \\<phi>\\<^sub>2))) anormal;\n        qfree (Neg (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2));\n        normal (Neg (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2))\\<rbrakk>\n       \\<Longrightarrow> Ball\n                          (atoms\n                            (nnf (Neg (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2))))\n                          anormal\n 8. \\<And>a.\n       \\<lbrakk>qfree (Neg (Atom a)); normal (Neg (Atom a))\\<rbrakk>\n       \\<Longrightarrow> Ball (atoms (nnf (Neg (Atom a)))) anormal\n 9. \\<lbrakk>qfree TrueF; normal TrueF\\<rbrakk>\n    \\<Longrightarrow> Ball (atoms (nnf TrueF)) anormal\n 10. \\<lbrakk>qfree FalseF; normal FalseF\\<rbrakk>\n     \\<Longrightarrow> Ball (atoms (nnf FalseF)) anormal\nA total of 13 subgoals...", "apply(unfold normal_def)"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2.\n       \\<lbrakk>\\<lbrakk>qfree \\<phi>\\<^sub>1;\n                 Ball (atoms \\<phi>\\<^sub>1) anormal\\<rbrakk>\n                \\<Longrightarrow> Ball (atoms (nnf \\<phi>\\<^sub>1)) anormal;\n        \\<lbrakk>qfree \\<phi>\\<^sub>2;\n         Ball (atoms \\<phi>\\<^sub>2) anormal\\<rbrakk>\n        \\<Longrightarrow> Ball (atoms (nnf \\<phi>\\<^sub>2)) anormal;\n        qfree (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2);\n        Ball (atoms (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)) anormal\\<rbrakk>\n       \\<Longrightarrow> Ball\n                          (atoms (nnf (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)))\n                          anormal\n 2. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2.\n       \\<lbrakk>\\<lbrakk>qfree \\<phi>\\<^sub>1;\n                 Ball (atoms \\<phi>\\<^sub>1) anormal\\<rbrakk>\n                \\<Longrightarrow> Ball (atoms (nnf \\<phi>\\<^sub>1)) anormal;\n        \\<lbrakk>qfree \\<phi>\\<^sub>2;\n         Ball (atoms \\<phi>\\<^sub>2) anormal\\<rbrakk>\n        \\<Longrightarrow> Ball (atoms (nnf \\<phi>\\<^sub>2)) anormal;\n        qfree (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2);\n        Ball (atoms (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)) anormal\\<rbrakk>\n       \\<Longrightarrow> Ball\n                          (atoms (nnf (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)))\n                          anormal\n 3. \\<lbrakk>qfree (Neg TrueF); Ball (atoms (Neg TrueF)) anormal\\<rbrakk>\n    \\<Longrightarrow> Ball (atoms (nnf (Neg TrueF))) anormal\n 4. \\<lbrakk>qfree (Neg FalseF); Ball (atoms (Neg FalseF)) anormal\\<rbrakk>\n    \\<Longrightarrow> Ball (atoms (nnf (Neg FalseF))) anormal\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>qfree \\<phi>; Ball (atoms \\<phi>) anormal\\<rbrakk>\n                \\<Longrightarrow> Ball (atoms (nnf \\<phi>)) anormal;\n        qfree (Neg (Neg \\<phi>));\n        Ball (atoms (Neg (Neg \\<phi>))) anormal\\<rbrakk>\n       \\<Longrightarrow> Ball (atoms (nnf (Neg (Neg \\<phi>)))) anormal\n 6. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2.\n       \\<lbrakk>\\<lbrakk>qfree (Neg \\<phi>\\<^sub>1);\n                 Ball (atoms (Neg \\<phi>\\<^sub>1)) anormal\\<rbrakk>\n                \\<Longrightarrow> Ball (atoms (nnf (Neg \\<phi>\\<^sub>1)))\n                                   anormal;\n        \\<lbrakk>qfree (Neg \\<phi>\\<^sub>2);\n         Ball (atoms (Neg \\<phi>\\<^sub>2)) anormal\\<rbrakk>\n        \\<Longrightarrow> Ball (atoms (nnf (Neg \\<phi>\\<^sub>2))) anormal;\n        qfree (Neg (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2));\n        Ball (atoms (Neg (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)))\n         anormal\\<rbrakk>\n       \\<Longrightarrow> Ball\n                          (atoms\n                            (nnf (Neg (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2))))\n                          anormal\n 7. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2.\n       \\<lbrakk>\\<lbrakk>qfree (Neg \\<phi>\\<^sub>1);\n                 Ball (atoms (Neg \\<phi>\\<^sub>1)) anormal\\<rbrakk>\n                \\<Longrightarrow> Ball (atoms (nnf (Neg \\<phi>\\<^sub>1)))\n                                   anormal;\n        \\<lbrakk>qfree (Neg \\<phi>\\<^sub>2);\n         Ball (atoms (Neg \\<phi>\\<^sub>2)) anormal\\<rbrakk>\n        \\<Longrightarrow> Ball (atoms (nnf (Neg \\<phi>\\<^sub>2))) anormal;\n        qfree (Neg (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2));\n        Ball (atoms (Neg (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)))\n         anormal\\<rbrakk>\n       \\<Longrightarrow> Ball\n                          (atoms\n                            (nnf (Neg (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2))))\n                          anormal\n 8. \\<And>a.\n       \\<lbrakk>qfree (Neg (Atom a));\n        Ball (atoms (Neg (Atom a))) anormal\\<rbrakk>\n       \\<Longrightarrow> Ball (atoms (nnf (Neg (Atom a)))) anormal\n 9. \\<lbrakk>qfree TrueF; Ball (atoms TrueF) anormal\\<rbrakk>\n    \\<Longrightarrow> Ball (atoms (nnf TrueF)) anormal\n 10. \\<lbrakk>qfree FalseF; Ball (atoms FalseF) anormal\\<rbrakk>\n     \\<Longrightarrow> Ball (atoms (nnf FalseF)) anormal\nA total of 13 subgoals...", "apply(simp_all)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2.\n       \\<lbrakk>\\<forall>x\\<in>atoms (nnf \\<phi>\\<^sub>1). anormal x;\n        \\<forall>x\\<in>atoms (nnf \\<phi>\\<^sub>2). anormal x;\n        qfree \\<phi>\\<^sub>1 \\<and> qfree \\<phi>\\<^sub>2;\n        \\<forall>x\\<in>atoms \\<phi>\\<^sub>1 \\<union> atoms \\<phi>\\<^sub>2.\n           anormal x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>atoms (nnf \\<phi>\\<^sub>1) \\<union>\n  atoms (nnf \\<phi>\\<^sub>2).\n                            anormal x\n 2. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2.\n       \\<lbrakk>\\<forall>x\\<in>atoms (nnf \\<phi>\\<^sub>1). anormal x;\n        \\<forall>x\\<in>atoms (nnf \\<phi>\\<^sub>2). anormal x;\n        qfree \\<phi>\\<^sub>1 \\<and> qfree \\<phi>\\<^sub>2;\n        \\<forall>x\\<in>atoms \\<phi>\\<^sub>1 \\<union> atoms \\<phi>\\<^sub>2.\n           anormal x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>atoms (nnf \\<phi>\\<^sub>1) \\<union>\n  atoms (nnf \\<phi>\\<^sub>2).\n                            anormal x\n 3. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2.\n       \\<lbrakk>\\<forall>x\\<in>atoms (nnf (Neg \\<phi>\\<^sub>1)). anormal x;\n        \\<forall>x\\<in>atoms (nnf (Neg \\<phi>\\<^sub>2)). anormal x;\n        qfree \\<phi>\\<^sub>1 \\<and> qfree \\<phi>\\<^sub>2;\n        \\<forall>x\\<in>atoms \\<phi>\\<^sub>1 \\<union> atoms \\<phi>\\<^sub>2.\n           anormal x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>atoms\n   (nnf (Neg \\<phi>\\<^sub>1)) \\<union>\n  atoms (nnf (Neg \\<phi>\\<^sub>2)).\n                            anormal x\n 4. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2.\n       \\<lbrakk>\\<forall>x\\<in>atoms (nnf (Neg \\<phi>\\<^sub>1)). anormal x;\n        \\<forall>x\\<in>atoms (nnf (Neg \\<phi>\\<^sub>2)). anormal x;\n        qfree \\<phi>\\<^sub>1 \\<and> qfree \\<phi>\\<^sub>2;\n        \\<forall>x\\<in>atoms \\<phi>\\<^sub>1 \\<union> atoms \\<phi>\\<^sub>2.\n           anormal x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>atoms\n   (nnf (Neg \\<phi>\\<^sub>1)) \\<union>\n  atoms (nnf (Neg \\<phi>\\<^sub>2)).\n                            anormal x\n 5. \\<And>a.\n       anormal a \\<Longrightarrow> \\<forall>x\\<in>atoms (aneg a). anormal x", "apply (blast dest:anormal_aneg)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma atoms_dnf: \"nqfree \\<phi> \\<Longrightarrow> as \\<in> set(dnf \\<phi>) \\<Longrightarrow> a \\<in> set as \\<Longrightarrow> a \\<in> atoms \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nqfree \\<phi>; as \\<in> set (dnf \\<phi>);\n     a \\<in> set as\\<rbrakk>\n    \\<Longrightarrow> a \\<in> atoms \\<phi>", "by(induct \\<phi> arbitrary: as a rule:nqfree.induct)(auto)"], ["", "lemma anormal_dnf_nnf:\n  \"as \\<in> set(dnf(nnf \\<phi>)) \\<Longrightarrow> qfree \\<phi> \\<Longrightarrow> normal \\<phi> \\<Longrightarrow> a \\<in> set as \\<Longrightarrow> anormal a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>as \\<in> set (dnf (nnf \\<phi>)); qfree \\<phi>; normal \\<phi>;\n     a \\<in> set as\\<rbrakk>\n    \\<Longrightarrow> anormal a", "apply(induct \\<phi> arbitrary: a as rule:nnf.induct)"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2 a as.\n       \\<lbrakk>\\<And>a as.\n                   \\<lbrakk>as \\<in> set (dnf (nnf \\<phi>\\<^sub>1));\n                    qfree \\<phi>\\<^sub>1; normal \\<phi>\\<^sub>1;\n                    a \\<in> set as\\<rbrakk>\n                   \\<Longrightarrow> anormal a;\n        \\<And>a as.\n           \\<lbrakk>as \\<in> set (dnf (nnf \\<phi>\\<^sub>2));\n            qfree \\<phi>\\<^sub>2; normal \\<phi>\\<^sub>2;\n            a \\<in> set as\\<rbrakk>\n           \\<Longrightarrow> anormal a;\n        as \\<in> set (dnf (nnf (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)));\n        qfree (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2);\n        normal (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2); a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 2. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2 a as.\n       \\<lbrakk>\\<And>a as.\n                   \\<lbrakk>as \\<in> set (dnf (nnf \\<phi>\\<^sub>1));\n                    qfree \\<phi>\\<^sub>1; normal \\<phi>\\<^sub>1;\n                    a \\<in> set as\\<rbrakk>\n                   \\<Longrightarrow> anormal a;\n        \\<And>a as.\n           \\<lbrakk>as \\<in> set (dnf (nnf \\<phi>\\<^sub>2));\n            qfree \\<phi>\\<^sub>2; normal \\<phi>\\<^sub>2;\n            a \\<in> set as\\<rbrakk>\n           \\<Longrightarrow> anormal a;\n        as \\<in> set (dnf (nnf (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2)));\n        qfree (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2);\n        normal (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2); a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 3. \\<And>a as.\n       \\<lbrakk>as \\<in> set (dnf (nnf (Neg TrueF))); qfree (Neg TrueF);\n        normal (Neg TrueF); a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 4. \\<And>a as.\n       \\<lbrakk>as \\<in> set (dnf (nnf (Neg FalseF))); qfree (Neg FalseF);\n        normal (Neg FalseF); a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 5. \\<And>\\<phi> a as.\n       \\<lbrakk>\\<And>a as.\n                   \\<lbrakk>as \\<in> set (dnf (nnf \\<phi>)); qfree \\<phi>;\n                    normal \\<phi>; a \\<in> set as\\<rbrakk>\n                   \\<Longrightarrow> anormal a;\n        as \\<in> set (dnf (nnf (Neg (Neg \\<phi>))));\n        qfree (Neg (Neg \\<phi>)); normal (Neg (Neg \\<phi>));\n        a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 6. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2 a as.\n       \\<lbrakk>\\<And>a as.\n                   \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>1)));\n                    qfree (Neg \\<phi>\\<^sub>1); normal (Neg \\<phi>\\<^sub>1);\n                    a \\<in> set as\\<rbrakk>\n                   \\<Longrightarrow> anormal a;\n        \\<And>a as.\n           \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>2)));\n            qfree (Neg \\<phi>\\<^sub>2); normal (Neg \\<phi>\\<^sub>2);\n            a \\<in> set as\\<rbrakk>\n           \\<Longrightarrow> anormal a;\n        as \\<in> set (dnf (nnf (Neg (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2))));\n        qfree (Neg (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2));\n        normal (Neg (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2));\n        a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 7. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2 a as.\n       \\<lbrakk>\\<And>a as.\n                   \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>1)));\n                    qfree (Neg \\<phi>\\<^sub>1); normal (Neg \\<phi>\\<^sub>1);\n                    a \\<in> set as\\<rbrakk>\n                   \\<Longrightarrow> anormal a;\n        \\<And>a as.\n           \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>2)));\n            qfree (Neg \\<phi>\\<^sub>2); normal (Neg \\<phi>\\<^sub>2);\n            a \\<in> set as\\<rbrakk>\n           \\<Longrightarrow> anormal a;\n        as \\<in> set (dnf (nnf (Neg (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2))));\n        qfree (Neg (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2));\n        normal (Neg (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2));\n        a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 8. \\<And>a aa as.\n       \\<lbrakk>as \\<in> set (dnf (nnf (Neg (Atom a))));\n        qfree (Neg (Atom a)); normal (Neg (Atom a));\n        aa \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal aa\n 9. \\<And>a as.\n       \\<lbrakk>as \\<in> set (dnf (nnf TrueF)); qfree TrueF; normal TrueF;\n        a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 10. \\<And>a as.\n        \\<lbrakk>as \\<in> set (dnf (nnf FalseF)); qfree FalseF;\n         normal FalseF; a \\<in> set as\\<rbrakk>\n        \\<Longrightarrow> anormal a\nA total of 13 subgoals...", "apply(simp_all add: normal_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2 a as.\n       \\<lbrakk>\\<And>a as.\n                   \\<lbrakk>as \\<in> set (dnf (nnf \\<phi>\\<^sub>1));\n                    a \\<in> set as\\<rbrakk>\n                   \\<Longrightarrow> anormal a;\n        \\<And>a as.\n           \\<lbrakk>as \\<in> set (dnf (nnf \\<phi>\\<^sub>2));\n            a \\<in> set as\\<rbrakk>\n           \\<Longrightarrow> anormal a;\n        \\<exists>x\\<in>set (dnf (nnf \\<phi>\\<^sub>1)).\n           as \\<in> (@) x ` set (dnf (nnf \\<phi>\\<^sub>2));\n        qfree \\<phi>\\<^sub>1 \\<and> qfree \\<phi>\\<^sub>2;\n        \\<forall>a\\<in>atoms \\<phi>\\<^sub>1 \\<union> atoms \\<phi>\\<^sub>2.\n           anormal a;\n        a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 2. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2 a as.\n       \\<lbrakk>\\<And>a as.\n                   \\<lbrakk>as \\<in> set (dnf (nnf \\<phi>\\<^sub>1));\n                    a \\<in> set as\\<rbrakk>\n                   \\<Longrightarrow> anormal a;\n        \\<And>a as.\n           \\<lbrakk>as \\<in> set (dnf (nnf \\<phi>\\<^sub>2));\n            a \\<in> set as\\<rbrakk>\n           \\<Longrightarrow> anormal a;\n        as \\<in> set (dnf (nnf \\<phi>\\<^sub>1)) \\<or>\n        as \\<in> set (dnf (nnf \\<phi>\\<^sub>2));\n        qfree \\<phi>\\<^sub>1 \\<and> qfree \\<phi>\\<^sub>2;\n        \\<forall>a\\<in>atoms \\<phi>\\<^sub>1 \\<union> atoms \\<phi>\\<^sub>2.\n           anormal a;\n        a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 3. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2 a as.\n       \\<lbrakk>\\<And>a as.\n                   \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>1)));\n                    a \\<in> set as\\<rbrakk>\n                   \\<Longrightarrow> anormal a;\n        \\<And>a as.\n           \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>2)));\n            a \\<in> set as\\<rbrakk>\n           \\<Longrightarrow> anormal a;\n        as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>1))) \\<or>\n        as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>2)));\n        qfree \\<phi>\\<^sub>1 \\<and> qfree \\<phi>\\<^sub>2;\n        \\<forall>a\\<in>atoms \\<phi>\\<^sub>1 \\<union> atoms \\<phi>\\<^sub>2.\n           anormal a;\n        a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 4. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2 a as.\n       \\<lbrakk>\\<And>a as.\n                   \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>1)));\n                    a \\<in> set as\\<rbrakk>\n                   \\<Longrightarrow> anormal a;\n        \\<And>a as.\n           \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>2)));\n            a \\<in> set as\\<rbrakk>\n           \\<Longrightarrow> anormal a;\n        \\<exists>x\\<in>set (dnf (nnf (Neg \\<phi>\\<^sub>1))).\n           as \\<in> (@) x ` set (dnf (nnf (Neg \\<phi>\\<^sub>2)));\n        qfree \\<phi>\\<^sub>1 \\<and> qfree \\<phi>\\<^sub>2;\n        \\<forall>a\\<in>atoms \\<phi>\\<^sub>1 \\<union> atoms \\<phi>\\<^sub>2.\n           anormal a;\n        a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 5. \\<And>a aa as.\n       \\<lbrakk>as \\<in> set (dnf (aneg a)); anormal a;\n        aa \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal aa", "apply clarify"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2 a as x xa.\n       \\<lbrakk>\\<And>a as.\n                   \\<lbrakk>as \\<in> set (dnf (nnf \\<phi>\\<^sub>1));\n                    a \\<in> set as\\<rbrakk>\n                   \\<Longrightarrow> anormal a;\n        \\<And>a as.\n           \\<lbrakk>as \\<in> set (dnf (nnf \\<phi>\\<^sub>2));\n            a \\<in> set as\\<rbrakk>\n           \\<Longrightarrow> anormal a;\n        \\<forall>a\\<in>atoms \\<phi>\\<^sub>1 \\<union> atoms \\<phi>\\<^sub>2.\n           anormal a;\n        a \\<in> set (x @ xa); x \\<in> set (dnf (nnf \\<phi>\\<^sub>1));\n        xa \\<in> set (dnf (nnf \\<phi>\\<^sub>2)); qfree \\<phi>\\<^sub>1;\n        qfree \\<phi>\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 2. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2 a as.\n       \\<lbrakk>\\<And>a as.\n                   \\<lbrakk>as \\<in> set (dnf (nnf \\<phi>\\<^sub>1));\n                    a \\<in> set as\\<rbrakk>\n                   \\<Longrightarrow> anormal a;\n        \\<And>a as.\n           \\<lbrakk>as \\<in> set (dnf (nnf \\<phi>\\<^sub>2));\n            a \\<in> set as\\<rbrakk>\n           \\<Longrightarrow> anormal a;\n        as \\<in> set (dnf (nnf \\<phi>\\<^sub>1)) \\<or>\n        as \\<in> set (dnf (nnf \\<phi>\\<^sub>2));\n        qfree \\<phi>\\<^sub>1 \\<and> qfree \\<phi>\\<^sub>2;\n        \\<forall>a\\<in>atoms \\<phi>\\<^sub>1 \\<union> atoms \\<phi>\\<^sub>2.\n           anormal a;\n        a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 3. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2 a as.\n       \\<lbrakk>\\<And>a as.\n                   \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>1)));\n                    a \\<in> set as\\<rbrakk>\n                   \\<Longrightarrow> anormal a;\n        \\<And>a as.\n           \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>2)));\n            a \\<in> set as\\<rbrakk>\n           \\<Longrightarrow> anormal a;\n        as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>1))) \\<or>\n        as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>2)));\n        qfree \\<phi>\\<^sub>1 \\<and> qfree \\<phi>\\<^sub>2;\n        \\<forall>a\\<in>atoms \\<phi>\\<^sub>1 \\<union> atoms \\<phi>\\<^sub>2.\n           anormal a;\n        a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 4. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2 a as.\n       \\<lbrakk>\\<And>a as.\n                   \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>1)));\n                    a \\<in> set as\\<rbrakk>\n                   \\<Longrightarrow> anormal a;\n        \\<And>a as.\n           \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>2)));\n            a \\<in> set as\\<rbrakk>\n           \\<Longrightarrow> anormal a;\n        \\<exists>x\\<in>set (dnf (nnf (Neg \\<phi>\\<^sub>1))).\n           as \\<in> (@) x ` set (dnf (nnf (Neg \\<phi>\\<^sub>2)));\n        qfree \\<phi>\\<^sub>1 \\<and> qfree \\<phi>\\<^sub>2;\n        \\<forall>a\\<in>atoms \\<phi>\\<^sub>1 \\<union> atoms \\<phi>\\<^sub>2.\n           anormal a;\n        a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 5. \\<And>a aa as.\n       \\<lbrakk>as \\<in> set (dnf (aneg a)); anormal a;\n        aa \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal aa", "apply (metis UnE set_append)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2 a as.\n       \\<lbrakk>\\<And>a as.\n                   \\<lbrakk>as \\<in> set (dnf (nnf \\<phi>\\<^sub>1));\n                    a \\<in> set as\\<rbrakk>\n                   \\<Longrightarrow> anormal a;\n        \\<And>a as.\n           \\<lbrakk>as \\<in> set (dnf (nnf \\<phi>\\<^sub>2));\n            a \\<in> set as\\<rbrakk>\n           \\<Longrightarrow> anormal a;\n        as \\<in> set (dnf (nnf \\<phi>\\<^sub>1)) \\<or>\n        as \\<in> set (dnf (nnf \\<phi>\\<^sub>2));\n        qfree \\<phi>\\<^sub>1 \\<and> qfree \\<phi>\\<^sub>2;\n        \\<forall>a\\<in>atoms \\<phi>\\<^sub>1 \\<union> atoms \\<phi>\\<^sub>2.\n           anormal a;\n        a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 2. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2 a as.\n       \\<lbrakk>\\<And>a as.\n                   \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>1)));\n                    a \\<in> set as\\<rbrakk>\n                   \\<Longrightarrow> anormal a;\n        \\<And>a as.\n           \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>2)));\n            a \\<in> set as\\<rbrakk>\n           \\<Longrightarrow> anormal a;\n        as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>1))) \\<or>\n        as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>2)));\n        qfree \\<phi>\\<^sub>1 \\<and> qfree \\<phi>\\<^sub>2;\n        \\<forall>a\\<in>atoms \\<phi>\\<^sub>1 \\<union> atoms \\<phi>\\<^sub>2.\n           anormal a;\n        a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 3. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2 a as.\n       \\<lbrakk>\\<And>a as.\n                   \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>1)));\n                    a \\<in> set as\\<rbrakk>\n                   \\<Longrightarrow> anormal a;\n        \\<And>a as.\n           \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>2)));\n            a \\<in> set as\\<rbrakk>\n           \\<Longrightarrow> anormal a;\n        \\<exists>x\\<in>set (dnf (nnf (Neg \\<phi>\\<^sub>1))).\n           as \\<in> (@) x ` set (dnf (nnf (Neg \\<phi>\\<^sub>2)));\n        qfree \\<phi>\\<^sub>1 \\<and> qfree \\<phi>\\<^sub>2;\n        \\<forall>a\\<in>atoms \\<phi>\\<^sub>1 \\<union> atoms \\<phi>\\<^sub>2.\n           anormal a;\n        a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 4. \\<And>a aa as.\n       \\<lbrakk>as \\<in> set (dnf (aneg a)); anormal a;\n        aa \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal aa", "apply metis"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2 a as.\n       \\<lbrakk>\\<And>a as.\n                   \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>1)));\n                    a \\<in> set as\\<rbrakk>\n                   \\<Longrightarrow> anormal a;\n        \\<And>a as.\n           \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>2)));\n            a \\<in> set as\\<rbrakk>\n           \\<Longrightarrow> anormal a;\n        as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>1))) \\<or>\n        as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>2)));\n        qfree \\<phi>\\<^sub>1 \\<and> qfree \\<phi>\\<^sub>2;\n        \\<forall>a\\<in>atoms \\<phi>\\<^sub>1 \\<union> atoms \\<phi>\\<^sub>2.\n           anormal a;\n        a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 2. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2 a as.\n       \\<lbrakk>\\<And>a as.\n                   \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>1)));\n                    a \\<in> set as\\<rbrakk>\n                   \\<Longrightarrow> anormal a;\n        \\<And>a as.\n           \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>2)));\n            a \\<in> set as\\<rbrakk>\n           \\<Longrightarrow> anormal a;\n        \\<exists>x\\<in>set (dnf (nnf (Neg \\<phi>\\<^sub>1))).\n           as \\<in> (@) x ` set (dnf (nnf (Neg \\<phi>\\<^sub>2)));\n        qfree \\<phi>\\<^sub>1 \\<and> qfree \\<phi>\\<^sub>2;\n        \\<forall>a\\<in>atoms \\<phi>\\<^sub>1 \\<union> atoms \\<phi>\\<^sub>2.\n           anormal a;\n        a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 3. \\<And>a aa as.\n       \\<lbrakk>as \\<in> set (dnf (aneg a)); anormal a;\n        aa \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal aa", "apply metis"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<phi>\\<^sub>1 \\<phi>\\<^sub>2 a as.\n       \\<lbrakk>\\<And>a as.\n                   \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>1)));\n                    a \\<in> set as\\<rbrakk>\n                   \\<Longrightarrow> anormal a;\n        \\<And>a as.\n           \\<lbrakk>as \\<in> set (dnf (nnf (Neg \\<phi>\\<^sub>2)));\n            a \\<in> set as\\<rbrakk>\n           \\<Longrightarrow> anormal a;\n        \\<exists>x\\<in>set (dnf (nnf (Neg \\<phi>\\<^sub>1))).\n           as \\<in> (@) x ` set (dnf (nnf (Neg \\<phi>\\<^sub>2)));\n        qfree \\<phi>\\<^sub>1 \\<and> qfree \\<phi>\\<^sub>2;\n        \\<forall>a\\<in>atoms \\<phi>\\<^sub>1 \\<union> atoms \\<phi>\\<^sub>2.\n           anormal a;\n        a \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal a\n 2. \\<And>a aa as.\n       \\<lbrakk>as \\<in> set (dnf (aneg a)); anormal a;\n        aa \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal aa", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa as.\n       \\<lbrakk>as \\<in> set (dnf (aneg a)); anormal a;\n        aa \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> anormal aa", "apply (metis anormal_aneg atoms_dnf nqfree_aneg)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "end"]]}