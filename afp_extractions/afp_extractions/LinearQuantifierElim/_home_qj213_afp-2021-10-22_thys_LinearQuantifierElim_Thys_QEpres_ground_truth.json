{"file_name": "/home/qj213/afp-2021-10-22/thys/LinearQuantifierElim/Thys/QEpres.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LinearQuantifierElim", "problem_names": ["lemma I_hd_coeffs1:\nassumes 0: \"\\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\" shows\n  \"(\\<exists>x. \\<forall>a \\<in> set(hd_coeffs1 as). I\\<^sub>Z a (x#xs)) =\n   (\\<exists>x. \\<forall>a \\<in> set as. I\\<^sub>Z a (x#xs))\" (is \"?B = ?A\")", "lemma I_cyclic:\nassumes \"is_dvd a\" and \"hd_coeff a = 1\" and \"i mod divisor a = j mod divisor a\"\nshows \"I\\<^sub>Z a (i#e) = I\\<^sub>Z a (j#e)\"", "lemma I_qe_pres\\<^sub>1:\nassumes norm: \"\\<forall>a \\<in> set as. divisor a \\<noteq> 0\"\nand hd: \"\\<forall>a \\<in> set as. hd_coeff_is1 a\"\nshows \"Z.I (qe_pres\\<^sub>1 as) xs = (\\<exists>x. \\<forall>a\\<in> set as. I\\<^sub>Z a (x#xs))\"", "lemma  divisors_hd_coeffs1:\nassumes div0: \"\\<forall>a\\<in>set as. divisor a \\<noteq> 0\" and hd0: \"\\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\"\nand a: \"a\\<in>set (hd_coeffs1 as)\" shows \"divisor a \\<noteq> 0\"", "lemma hd_coeff_is1_hd_coeffs1:\nassumes hd0: \"\\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\"\nand a: \"a\\<in>set (hd_coeffs1 as)\" shows \"hd_coeff_is1 a\"", "lemma I_qe_pres\\<^sub>1_o:\n \"\\<lbrakk> \\<forall>a \\<in> set as. divisor a \\<noteq> 0; \\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0 \\<rbrakk> \\<Longrightarrow>\n  Z.I ((qe_pres\\<^sub>1 \\<circ> hd_coeffs1) as) e = (\\<exists>x. \\<forall>a\\<in> set as. I\\<^sub>Z a (x#e))\"", "lemma qfree_qe_pres_o: \"qfree ((qe_pres\\<^sub>1 \\<circ> hd_coeffs1) as)\"", "lemma normal_qe_pres\\<^sub>1_o:\n  \"\\<forall>a \\<in> set as. hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0 \\<Longrightarrow>\n   Z.normal ((qe_pres\\<^sub>1 \\<circ> hd_coeffs1) as)\"", "theorem I_pres_qe: \"Z.normal \\<phi> \\<Longrightarrow>  Z.I (qe_pres \\<phi>) xs = Z.I \\<phi> xs\"", "theorem qfree_pres_qe: \"qfree (qe_pres f)\""], "translations": [["", "lemma I_hd_coeffs1:\nassumes 0: \"\\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\" shows\n  \"(\\<exists>x. \\<forall>a \\<in> set(hd_coeffs1 as). I\\<^sub>Z a (x#xs)) =\n   (\\<exists>x. \\<forall>a \\<in> set as. I\\<^sub>Z a (x#xs))\" (is \"?B = ?A\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x. \\<forall>a\\<in>set (hd_coeffs1 as). I\\<^sub>Z a (x # xs)) =\n    (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>x. \\<forall>a\\<in>set (hd_coeffs1 as). I\\<^sub>Z a (x # xs)) =\n    (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))", "let ?m = \"zlcms(map hd_coeff as)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>x. \\<forall>a\\<in>set (hd_coeffs1 as). I\\<^sub>Z a (x # xs)) =\n    (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))", "have \"?m>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < zlcms (map hd_coeff as)", "using 0"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < zlcms (map hd_coeff as)", "by(simp add:zlcms_pos)"], ["proof (state)\nthis:\n  0 < zlcms (map hd_coeff as)\n\ngoal (1 subgoal):\n 1. (\\<exists>x. \\<forall>a\\<in>set (hd_coeffs1 as). I\\<^sub>Z a (x # xs)) =\n    (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))", "have \"?A = (\\<exists>x. \\<forall>a \\<in> set as. I\\<^sub>Z (hd_coeff1 ?m a) (?m*x#xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)) =\n    (\\<exists>x.\n        \\<forall>a\\<in>set as.\n           I\\<^sub>Z (hd_coeff1 (zlcms (map hd_coeff as)) a)\n            (zlcms (map hd_coeff as) * x # xs))", "by (simp add:I_hd_coeff1_mult_a[OF \\<open>?m>0\\<close>] dvd_zlcms 0)"], ["proof (state)\nthis:\n  (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)) =\n  (\\<exists>x.\n      \\<forall>a\\<in>set as.\n         I\\<^sub>Z (hd_coeff1 (zlcms (map hd_coeff as)) a)\n          (zlcms (map hd_coeff as) * x # xs))\n\ngoal (1 subgoal):\n 1. (\\<exists>x. \\<forall>a\\<in>set (hd_coeffs1 as). I\\<^sub>Z a (x # xs)) =\n    (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))", "also"], ["proof (state)\nthis:\n  (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)) =\n  (\\<exists>x.\n      \\<forall>a\\<in>set as.\n         I\\<^sub>Z (hd_coeff1 (zlcms (map hd_coeff as)) a)\n          (zlcms (map hd_coeff as) * x # xs))\n\ngoal (1 subgoal):\n 1. (\\<exists>x. \\<forall>a\\<in>set (hd_coeffs1 as). I\\<^sub>Z a (x # xs)) =\n    (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))", "have \"\\<dots> = (\\<exists>x. ?m dvd x+0 \\<and> (\\<forall>a \\<in> set as. I\\<^sub>Z (hd_coeff1 ?m a) (x#xs)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x.\n        \\<forall>a\\<in>set as.\n           I\\<^sub>Z (hd_coeff1 (zlcms (map hd_coeff as)) a)\n            (zlcms (map hd_coeff as) * x # xs)) =\n    (\\<exists>x.\n        zlcms (map hd_coeff as) dvd x + 0 \\<and>\n        (\\<forall>a\\<in>set as.\n            I\\<^sub>Z (hd_coeff1 (zlcms (map hd_coeff as)) a) (x # xs)))", "by(rule unity_coeff_ex[THEN meta_eq_to_obj_eq])"], ["proof (state)\nthis:\n  (\\<exists>x.\n      \\<forall>a\\<in>set as.\n         I\\<^sub>Z (hd_coeff1 (zlcms (map hd_coeff as)) a)\n          (zlcms (map hd_coeff as) * x # xs)) =\n  (\\<exists>x.\n      zlcms (map hd_coeff as) dvd x + 0 \\<and>\n      (\\<forall>a\\<in>set as.\n          I\\<^sub>Z (hd_coeff1 (zlcms (map hd_coeff as)) a) (x # xs)))\n\ngoal (1 subgoal):\n 1. (\\<exists>x. \\<forall>a\\<in>set (hd_coeffs1 as). I\\<^sub>Z a (x # xs)) =\n    (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))", "finally"], ["proof (chain)\npicking this:\n  (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)) =\n  (\\<exists>x.\n      zlcms (map hd_coeff as) dvd x + 0 \\<and>\n      (\\<forall>a\\<in>set as.\n          I\\<^sub>Z (hd_coeff1 (zlcms (map hd_coeff as)) a) (x # xs)))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)) =\n  (\\<exists>x.\n      zlcms (map hd_coeff as) dvd x + 0 \\<and>\n      (\\<forall>a\\<in>set as.\n          I\\<^sub>Z (hd_coeff1 (zlcms (map hd_coeff as)) a) (x # xs)))\n\ngoal (1 subgoal):\n 1. (\\<exists>x. \\<forall>a\\<in>set (hd_coeffs1 as). I\\<^sub>Z a (x # xs)) =\n    (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))", "by(simp add:hd_coeffs1_def)"], ["proof (state)\nthis:\n  (\\<exists>x. \\<forall>a\\<in>set (hd_coeffs1 as). I\\<^sub>Z a (x # xs)) =\n  (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation \"is_dvd a \\<equiv> case a of Le _ _ \\<Rightarrow> False | _ \\<Rightarrow> True\""], ["", "definition\n\"qe_pres\\<^sub>1 as =\n (let ds = filter is_dvd as; (d::int) = zlcms(map divisor ds); ls = lbounds as\n  in if ls = []\n     then Disj [0..d - 1] (\\<lambda>n. list_conj(map (Atom \\<circ> asubst n []) ds))\n     else\n     Disj ls (\\<lambda>(li,lks).\n       Disj [0..d - 1] (\\<lambda>n.\n         list_conj(map (Atom \\<circ> asubst (li + n) (-lks)) as))))\""], ["", "text\\<open>\\noindent Note the optimization in the case @{prop\"ls = []\"}: only the\ndivisibility atoms are tested, not the inequalities. This complicates\nthe proof.\\<close>"], ["", "lemma I_cyclic:\nassumes \"is_dvd a\" and \"hd_coeff a = 1\" and \"i mod divisor a = j mod divisor a\"\nshows \"I\\<^sub>Z a (i#e) = I\\<^sub>Z a (j#e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)", "proof (cases a)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x11 x12.\n       a = Le x11 x12 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)\n 2. \\<And>x21 x22 x23.\n       a = Dvd x21 x22 x23 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)\n 3. \\<And>x31 x32 x33.\n       a = NDvd x31 x32 x33 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)", "case (Dvd d l ks)"], ["proof (state)\nthis:\n  a = Dvd d l ks\n\ngoal (3 subgoals):\n 1. \\<And>x11 x12.\n       a = Le x11 x12 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)\n 2. \\<And>x21 x22 x23.\n       a = Dvd x21 x22 x23 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)\n 3. \\<And>x31 x32 x33.\n       a = NDvd x31 x32 x33 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)", "with \\<open>hd_coeff a = 1\\<close>"], ["proof (chain)\npicking this:\n  hd_coeff a = 1\n  a = Dvd d l ks", "obtain ks' where [simp]: \"ks = 1#ks'\""], ["proof (prove)\nusing this:\n  hd_coeff a = 1\n  a = Dvd d l ks\n\ngoal (1 subgoal):\n 1. (\\<And>ks'. ks = 1 # ks' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(simp split:list.splits)"], ["proof (state)\nthis:\n  ks = 1 # ks'\n\ngoal (3 subgoals):\n 1. \\<And>x11 x12.\n       a = Le x11 x12 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)\n 2. \\<And>x21 x22 x23.\n       a = Dvd x21 x22 x23 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)\n 3. \\<And>x31 x32 x33.\n       a = NDvd x31 x32 x33 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)", "have \"(l + (i + \\<langle>ks',e\\<rangle>)) mod d = (l + (j + \\<langle>ks',e\\<rangle>)) mod d\" (is \"?l=?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "have \"?l = (l mod d + (i + \\<langle>ks',e\\<rangle>) mod d) mod d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l mod d + (i + \\<langle>ks',e\\<rangle>) mod d) mod d", "by (simp add: mod_add_eq)"], ["proof (state)\nthis:\n  (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n  (l mod d + (i + \\<langle>ks',e\\<rangle>) mod d) mod d\n\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "also"], ["proof (state)\nthis:\n  (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n  (l mod d + (i + \\<langle>ks',e\\<rangle>) mod d) mod d\n\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "have \"(i + \\<langle>ks',e\\<rangle>) mod d = (i mod d + \\<langle>ks',e\\<rangle> mod d) mod d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (i + \\<langle>ks',e\\<rangle>) mod d =\n    (i mod d + \\<langle>ks',e\\<rangle> mod d) mod d", "by (simp add: mod_add_eq)"], ["proof (state)\nthis:\n  (i + \\<langle>ks',e\\<rangle>) mod d =\n  (i mod d + \\<langle>ks',e\\<rangle> mod d) mod d\n\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "also"], ["proof (state)\nthis:\n  (i + \\<langle>ks',e\\<rangle>) mod d =\n  (i mod d + \\<langle>ks',e\\<rangle> mod d) mod d\n\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "have \"i mod d = j mod d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i mod d = j mod d", "using \\<open>i mod divisor a = j mod divisor a\\<close> Dvd"], ["proof (prove)\nusing this:\n  i mod divisor a = j mod divisor a\n  a = Dvd d l ks\n\ngoal (1 subgoal):\n 1. i mod d = j mod d", "by simp"], ["proof (state)\nthis:\n  i mod d = j mod d\n\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "also"], ["proof (state)\nthis:\n  i mod d = j mod d\n\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "have \"(j mod d + \\<langle>ks',e\\<rangle> mod d) mod d = (j + \\<langle>ks',e\\<rangle>) mod d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (j mod d + \\<langle>ks',e\\<rangle> mod d) mod d =\n    (j + \\<langle>ks',e\\<rangle>) mod d", "by(rule mod_add_eq)"], ["proof (state)\nthis:\n  (j mod d + \\<langle>ks',e\\<rangle> mod d) mod d =\n  (j + \\<langle>ks',e\\<rangle>) mod d\n\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "also"], ["proof (state)\nthis:\n  (j mod d + \\<langle>ks',e\\<rangle> mod d) mod d =\n  (j + \\<langle>ks',e\\<rangle>) mod d\n\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "have \"(l mod d + (j + \\<langle>ks',e\\<rangle>) mod d) mod d = ?r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (l mod d + (j + \\<langle>ks',e\\<rangle>) mod d) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "by(rule mod_add_eq)"], ["proof (state)\nthis:\n  (l mod d + (j + \\<langle>ks',e\\<rangle>) mod d) mod d =\n  (l + (j + \\<langle>ks',e\\<rangle>)) mod d\n\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "finally"], ["proof (chain)\npicking this:\n  (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n  (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "show ?thesis"], ["proof (prove)\nusing this:\n  (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n  (l + (j + \\<langle>ks',e\\<rangle>)) mod d\n\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "."], ["proof (state)\nthis:\n  (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n  (l + (j + \\<langle>ks',e\\<rangle>)) mod d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n  (l + (j + \\<langle>ks',e\\<rangle>)) mod d\n\ngoal (3 subgoals):\n 1. \\<And>x11 x12.\n       a = Le x11 x12 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)\n 2. \\<And>x21 x22 x23.\n       a = Dvd x21 x22 x23 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)\n 3. \\<And>x31 x32 x33.\n       a = NDvd x31 x32 x33 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n  (l + (j + \\<langle>ks',e\\<rangle>)) mod d\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)", "using Dvd"], ["proof (prove)\nusing this:\n  (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n  (l + (j + \\<langle>ks',e\\<rangle>)) mod d\n  a = Dvd d l ks\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)", "by (simp add:dvd_eq_mod_eq_0)"], ["proof (state)\nthis:\n  I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)\n\ngoal (2 subgoals):\n 1. \\<And>x11 x12.\n       a = Le x11 x12 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)\n 2. \\<And>x31 x32 x33.\n       a = NDvd x31 x32 x33 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x11 x12.\n       a = Le x11 x12 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)\n 2. \\<And>x31 x32 x33.\n       a = NDvd x31 x32 x33 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)", "case (NDvd d l ks)"], ["proof (state)\nthis:\n  a = NDvd d l ks\n\ngoal (2 subgoals):\n 1. \\<And>x11 x12.\n       a = Le x11 x12 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)\n 2. \\<And>x31 x32 x33.\n       a = NDvd x31 x32 x33 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)", "with \\<open>hd_coeff a = 1\\<close>"], ["proof (chain)\npicking this:\n  hd_coeff a = 1\n  a = NDvd d l ks", "obtain ks' where [simp]: \"ks = 1#ks'\""], ["proof (prove)\nusing this:\n  hd_coeff a = 1\n  a = NDvd d l ks\n\ngoal (1 subgoal):\n 1. (\\<And>ks'. ks = 1 # ks' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(simp split:list.splits)"], ["proof (state)\nthis:\n  ks = 1 # ks'\n\ngoal (2 subgoals):\n 1. \\<And>x11 x12.\n       a = Le x11 x12 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)\n 2. \\<And>x31 x32 x33.\n       a = NDvd x31 x32 x33 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)", "have \"(l + (i + \\<langle>ks',e\\<rangle>)) mod d = (l + (j + \\<langle>ks',e\\<rangle>)) mod d\" (is \"?l=?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "have \"?l = (l mod d + (i + \\<langle>ks',e\\<rangle>) mod d) mod d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l mod d + (i + \\<langle>ks',e\\<rangle>) mod d) mod d", "by (simp add: mod_add_eq)"], ["proof (state)\nthis:\n  (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n  (l mod d + (i + \\<langle>ks',e\\<rangle>) mod d) mod d\n\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "also"], ["proof (state)\nthis:\n  (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n  (l mod d + (i + \\<langle>ks',e\\<rangle>) mod d) mod d\n\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "have \"(i + \\<langle>ks',e\\<rangle>) mod d = (i mod d + \\<langle>ks',e\\<rangle> mod d) mod d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (i + \\<langle>ks',e\\<rangle>) mod d =\n    (i mod d + \\<langle>ks',e\\<rangle> mod d) mod d", "by (simp add: mod_add_eq)"], ["proof (state)\nthis:\n  (i + \\<langle>ks',e\\<rangle>) mod d =\n  (i mod d + \\<langle>ks',e\\<rangle> mod d) mod d\n\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "also"], ["proof (state)\nthis:\n  (i + \\<langle>ks',e\\<rangle>) mod d =\n  (i mod d + \\<langle>ks',e\\<rangle> mod d) mod d\n\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "have \"i mod d = j mod d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i mod d = j mod d", "using \\<open>i mod divisor a = j mod divisor a\\<close> NDvd"], ["proof (prove)\nusing this:\n  i mod divisor a = j mod divisor a\n  a = NDvd d l ks\n\ngoal (1 subgoal):\n 1. i mod d = j mod d", "by simp"], ["proof (state)\nthis:\n  i mod d = j mod d\n\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "also"], ["proof (state)\nthis:\n  i mod d = j mod d\n\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "have \"(j mod d + \\<langle>ks',e\\<rangle> mod d) mod d = (j + \\<langle>ks',e\\<rangle>) mod d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (j mod d + \\<langle>ks',e\\<rangle> mod d) mod d =\n    (j + \\<langle>ks',e\\<rangle>) mod d", "by(rule mod_add_eq)"], ["proof (state)\nthis:\n  (j mod d + \\<langle>ks',e\\<rangle> mod d) mod d =\n  (j + \\<langle>ks',e\\<rangle>) mod d\n\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "also"], ["proof (state)\nthis:\n  (j mod d + \\<langle>ks',e\\<rangle> mod d) mod d =\n  (j + \\<langle>ks',e\\<rangle>) mod d\n\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "have \"(l mod d + (j + \\<langle>ks',e\\<rangle>) mod d) mod d = ?r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (l mod d + (j + \\<langle>ks',e\\<rangle>) mod d) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "by(rule mod_add_eq)"], ["proof (state)\nthis:\n  (l mod d + (j + \\<langle>ks',e\\<rangle>) mod d) mod d =\n  (l + (j + \\<langle>ks',e\\<rangle>)) mod d\n\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "finally"], ["proof (chain)\npicking this:\n  (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n  (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "show ?thesis"], ["proof (prove)\nusing this:\n  (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n  (l + (j + \\<langle>ks',e\\<rangle>)) mod d\n\ngoal (1 subgoal):\n 1. (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n    (l + (j + \\<langle>ks',e\\<rangle>)) mod d", "."], ["proof (state)\nthis:\n  (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n  (l + (j + \\<langle>ks',e\\<rangle>)) mod d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n  (l + (j + \\<langle>ks',e\\<rangle>)) mod d\n\ngoal (2 subgoals):\n 1. \\<And>x11 x12.\n       a = Le x11 x12 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)\n 2. \\<And>x31 x32 x33.\n       a = NDvd x31 x32 x33 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n  (l + (j + \\<langle>ks',e\\<rangle>)) mod d\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)", "using NDvd"], ["proof (prove)\nusing this:\n  (l + (i + \\<langle>ks',e\\<rangle>)) mod d =\n  (l + (j + \\<langle>ks',e\\<rangle>)) mod d\n  a = NDvd d l ks\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)", "by (simp add:dvd_eq_mod_eq_0)"], ["proof (state)\nthis:\n  I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)\n\ngoal (1 subgoal):\n 1. \\<And>x11 x12.\n       a = Le x11 x12 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x11 x12.\n       a = Le x11 x12 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)", "case Le"], ["proof (state)\nthis:\n  a = Le x11_ x12_\n\ngoal (1 subgoal):\n 1. \\<And>x11 x12.\n       a = Le x11 x12 \\<Longrightarrow>\n       I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)", "thus ?thesis"], ["proof (prove)\nusing this:\n  a = Le x11_ x12_\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)", "using \\<open>is_dvd a\\<close>"], ["proof (prove)\nusing this:\n  a = Le x11_ x12_\n  is_dvd a\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)", "by simp"], ["proof (state)\nthis:\n  I\\<^sub>Z a (i # e) = I\\<^sub>Z a (j # e)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma I_qe_pres\\<^sub>1:\nassumes norm: \"\\<forall>a \\<in> set as. divisor a \\<noteq> 0\"\nand hd: \"\\<forall>a \\<in> set as. hd_coeff_is1 a\"\nshows \"Z.I (qe_pres\\<^sub>1 as) xs = (\\<exists>x. \\<forall>a\\<in> set as. I\\<^sub>Z a (x#xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Z.I (qe_pres\\<^sub>1 as) xs =\n    (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Z.I (qe_pres\\<^sub>1 as) xs =\n    (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))", "let ?lbs = \"lbounds as\""], ["proof (state)\ngoal (1 subgoal):\n 1. Z.I (qe_pres\\<^sub>1 as) xs =\n    (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))", "let ?ds = \"filter is_dvd as\""], ["proof (state)\ngoal (1 subgoal):\n 1. Z.I (qe_pres\\<^sub>1 as) xs =\n    (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))", "let ?lcm = \"zlcms(map divisor ?ds)\""], ["proof (state)\ngoal (1 subgoal):\n 1. Z.I (qe_pres\\<^sub>1 as) xs =\n    (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))", "let ?Ds = \"{a \\<in> set as. is_dvd a}\""], ["proof (state)\ngoal (1 subgoal):\n 1. Z.I (qe_pres\\<^sub>1 as) xs =\n    (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))", "let ?Us = \"{a \\<in> set as. case a of Le _ (k#_) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}\""], ["proof (state)\ngoal (1 subgoal):\n 1. Z.I (qe_pres\\<^sub>1 as) xs =\n    (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))", "let ?Ls = \"{a \\<in> set as. case a of Le _ (k#_) \\<Rightarrow> k > 0 | _ \\<Rightarrow> False}\""], ["proof (state)\ngoal (1 subgoal):\n 1. Z.I (qe_pres\\<^sub>1 as) xs =\n    (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))", "have as: \"set as = ?Ds \\<union> ?Ls \\<union> ?Us\" (is \"_ = ?S\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. set as =\n    {a \\<in> set as. is_dvd a} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. set as =\n    {a \\<in> set as. is_dvd a} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. set as =\n    {a \\<in> set as. is_dvd a} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. set as =\n    {a \\<in> set as. is_dvd a} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}", "assume \"x \\<in> set as\""], ["proof (state)\nthis:\n  x \\<in> set as\n\ngoal (1 subgoal):\n 1. set as =\n    {a \\<in> set as. is_dvd a} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}", "hence \"x \\<in> ?S\""], ["proof (prove)\nusing this:\n  x \\<in> set as\n\ngoal (1 subgoal):\n 1. x \\<in> {a \\<in> set as. is_dvd a} \\<union>\n            {a \\<in> set as.\n             case a of Le x [] \\<Rightarrow> False\n             | Le x (k # xa) \\<Rightarrow> 0 < k\n             | _ \\<Rightarrow> False} \\<union>\n            {a \\<in> set as.\n             case a of Le x [] \\<Rightarrow> False\n             | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}", "using hd"], ["proof (prove)\nusing this:\n  x \\<in> set as\n  \\<forall>a\\<in>set as. hd_coeff_is1 a\n\ngoal (1 subgoal):\n 1. x \\<in> {a \\<in> set as. is_dvd a} \\<union>\n            {a \\<in> set as.\n             case a of Le x [] \\<Rightarrow> False\n             | Le x (k # xa) \\<Rightarrow> 0 < k\n             | _ \\<Rightarrow> False} \\<union>\n            {a \\<in> set as.\n             case a of Le x [] \\<Rightarrow> False\n             | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}", "by (cases x rule: atom.exhaust)(auto split:list.splits)"], ["proof (state)\nthis:\n  x \\<in> {a \\<in> set as. is_dvd a} \\<union>\n          {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> 0 < k\n           | _ \\<Rightarrow> False} \\<union>\n          {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}\n\ngoal (1 subgoal):\n 1. set as =\n    {a \\<in> set as. is_dvd a} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}", "}"], ["proof (state)\nthis:\n  ?x2 \\<in> set as \\<Longrightarrow>\n  ?x2\n  \\<in> {a \\<in> set as. is_dvd a} \\<union>\n        {a \\<in> set as.\n         case a of Le x [] \\<Rightarrow> False\n         | Le x (k # xa) \\<Rightarrow> 0 < k\n         | _ \\<Rightarrow> False} \\<union>\n        {a \\<in> set as.\n         case a of Le x [] \\<Rightarrow> False\n         | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}\n\ngoal (1 subgoal):\n 1. set as =\n    {a \\<in> set as. is_dvd a} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}", "moreover"], ["proof (state)\nthis:\n  ?x2 \\<in> set as \\<Longrightarrow>\n  ?x2\n  \\<in> {a \\<in> set as. is_dvd a} \\<union>\n        {a \\<in> set as.\n         case a of Le x [] \\<Rightarrow> False\n         | Le x (k # xa) \\<Rightarrow> 0 < k\n         | _ \\<Rightarrow> False} \\<union>\n        {a \\<in> set as.\n         case a of Le x [] \\<Rightarrow> False\n         | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}\n\ngoal (1 subgoal):\n 1. set as =\n    {a \\<in> set as. is_dvd a} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}", "{"], ["proof (state)\nthis:\n  ?x2 \\<in> set as \\<Longrightarrow>\n  ?x2\n  \\<in> {a \\<in> set as. is_dvd a} \\<union>\n        {a \\<in> set as.\n         case a of Le x [] \\<Rightarrow> False\n         | Le x (k # xa) \\<Rightarrow> 0 < k\n         | _ \\<Rightarrow> False} \\<union>\n        {a \\<in> set as.\n         case a of Le x [] \\<Rightarrow> False\n         | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}\n\ngoal (1 subgoal):\n 1. set as =\n    {a \\<in> set as. is_dvd a} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. set as =\n    {a \\<in> set as. is_dvd a} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}", "assume \"x \\<in> ?S\""], ["proof (state)\nthis:\n  x \\<in> {a \\<in> set as. is_dvd a} \\<union>\n          {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> 0 < k\n           | _ \\<Rightarrow> False} \\<union>\n          {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}\n\ngoal (1 subgoal):\n 1. set as =\n    {a \\<in> set as. is_dvd a} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}", "hence \"x \\<in> set as\""], ["proof (prove)\nusing this:\n  x \\<in> {a \\<in> set as. is_dvd a} \\<union>\n          {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> 0 < k\n           | _ \\<Rightarrow> False} \\<union>\n          {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}\n\ngoal (1 subgoal):\n 1. x \\<in> set as", "by auto"], ["proof (state)\nthis:\n  x \\<in> set as\n\ngoal (1 subgoal):\n 1. set as =\n    {a \\<in> set as. is_dvd a} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}", "}"], ["proof (state)\nthis:\n  ?x2\n  \\<in> {a \\<in> set as. is_dvd a} \\<union>\n        {a \\<in> set as.\n         case a of Le x [] \\<Rightarrow> False\n         | Le x (k # xa) \\<Rightarrow> 0 < k\n         | _ \\<Rightarrow> False} \\<union>\n        {a \\<in> set as.\n         case a of Le x [] \\<Rightarrow> False\n         | Le x (k # xa) \\<Rightarrow> k < 0\n         | _ \\<Rightarrow> False} \\<Longrightarrow>\n  ?x2 \\<in> set as\n\ngoal (1 subgoal):\n 1. set as =\n    {a \\<in> set as. is_dvd a} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}", "ultimately"], ["proof (chain)\npicking this:\n  ?x2 \\<in> set as \\<Longrightarrow>\n  ?x2\n  \\<in> {a \\<in> set as. is_dvd a} \\<union>\n        {a \\<in> set as.\n         case a of Le x [] \\<Rightarrow> False\n         | Le x (k # xa) \\<Rightarrow> 0 < k\n         | _ \\<Rightarrow> False} \\<union>\n        {a \\<in> set as.\n         case a of Le x [] \\<Rightarrow> False\n         | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}\n  ?x2\n  \\<in> {a \\<in> set as. is_dvd a} \\<union>\n        {a \\<in> set as.\n         case a of Le x [] \\<Rightarrow> False\n         | Le x (k # xa) \\<Rightarrow> 0 < k\n         | _ \\<Rightarrow> False} \\<union>\n        {a \\<in> set as.\n         case a of Le x [] \\<Rightarrow> False\n         | Le x (k # xa) \\<Rightarrow> k < 0\n         | _ \\<Rightarrow> False} \\<Longrightarrow>\n  ?x2 \\<in> set as", "show ?thesis"], ["proof (prove)\nusing this:\n  ?x2 \\<in> set as \\<Longrightarrow>\n  ?x2\n  \\<in> {a \\<in> set as. is_dvd a} \\<union>\n        {a \\<in> set as.\n         case a of Le x [] \\<Rightarrow> False\n         | Le x (k # xa) \\<Rightarrow> 0 < k\n         | _ \\<Rightarrow> False} \\<union>\n        {a \\<in> set as.\n         case a of Le x [] \\<Rightarrow> False\n         | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}\n  ?x2\n  \\<in> {a \\<in> set as. is_dvd a} \\<union>\n        {a \\<in> set as.\n         case a of Le x [] \\<Rightarrow> False\n         | Le x (k # xa) \\<Rightarrow> 0 < k\n         | _ \\<Rightarrow> False} \\<union>\n        {a \\<in> set as.\n         case a of Le x [] \\<Rightarrow> False\n         | Le x (k # xa) \\<Rightarrow> k < 0\n         | _ \\<Rightarrow> False} \\<Longrightarrow>\n  ?x2 \\<in> set as\n\ngoal (1 subgoal):\n 1. set as =\n    {a \\<in> set as. is_dvd a} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}", "by blast"], ["proof (state)\nthis:\n  set as =\n  {a \\<in> set as. is_dvd a} \\<union>\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> 0 < k\n   | _ \\<Rightarrow> False} \\<union>\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> k < 0\n   | _ \\<Rightarrow> False}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set as =\n  {a \\<in> set as. is_dvd a} \\<union>\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> 0 < k\n   | _ \\<Rightarrow> False} \\<union>\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> k < 0\n   | _ \\<Rightarrow> False}\n\ngoal (1 subgoal):\n 1. Z.I (qe_pres\\<^sub>1 as) xs =\n    (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))", "have 1: \"\\<forall>a \\<in> ?Ds. hd_coeff a = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>{a \\<in> set as. is_dvd a}. hd_coeff a = 1", "using hd"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>set as. hd_coeff_is1 a\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>{a \\<in> set as. is_dvd a}. hd_coeff a = 1", "by(fastforce split:atom.splits)"], ["proof (state)\nthis:\n  \\<forall>a\\<in>{a \\<in> set as. is_dvd a}. hd_coeff a = 1\n\ngoal (1 subgoal):\n 1. Z.I (qe_pres\\<^sub>1 as) xs =\n    (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))", "show ?thesis  (is \"?QE = (\\<exists>x. ?P x)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. Z.I (qe_pres\\<^sub>1 as) xs =\n    (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. Z.I (qe_pres\\<^sub>1 as) xs \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n 2. \\<exists>x.\n       \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs) \\<Longrightarrow>\n    Z.I (qe_pres\\<^sub>1 as) xs", "assume \"?QE\""], ["proof (state)\nthis:\n  Z.I (qe_pres\\<^sub>1 as) xs\n\ngoal (2 subgoals):\n 1. Z.I (qe_pres\\<^sub>1 as) xs \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n 2. \\<exists>x.\n       \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs) \\<Longrightarrow>\n    Z.I (qe_pres\\<^sub>1 as) xs", "{"], ["proof (state)\nthis:\n  Z.I (qe_pres\\<^sub>1 as) xs\n\ngoal (2 subgoals):\n 1. Z.I (qe_pres\\<^sub>1 as) xs \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n 2. \\<exists>x.\n       \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs) \\<Longrightarrow>\n    Z.I (qe_pres\\<^sub>1 as) xs", "assume \"?lbs = []\""], ["proof (state)\nthis:\n  lbounds as = []\n\ngoal (2 subgoals):\n 1. Z.I (qe_pres\\<^sub>1 as) xs \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n 2. \\<exists>x.\n       \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs) \\<Longrightarrow>\n    Z.I (qe_pres\\<^sub>1 as) xs", "with \\<open>?QE\\<close>"], ["proof (chain)\npicking this:\n  Z.I (qe_pres\\<^sub>1 as) xs\n  lbounds as = []", "obtain n where \"n < ?lcm\" and\n        A: \"\\<forall>a \\<in> ?Ds. I\\<^sub>Z a (n#xs)\""], ["proof (prove)\nusing this:\n  Z.I (qe_pres\\<^sub>1 as) xs\n  lbounds as = []\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n < zlcms (map divisor (filter is_dvd as));\n         \\<forall>a\\<in>{a \\<in> set as. is_dvd a}.\n            I\\<^sub>Z a (n # xs)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 1"], ["proof (prove)\nusing this:\n  Z.I (qe_pres\\<^sub>1 as) xs\n  lbounds as = []\n  \\<forall>a\\<in>{a \\<in> set as. is_dvd a}. hd_coeff a = 1\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n < zlcms (map divisor (filter is_dvd as));\n         \\<forall>a\\<in>{a \\<in> set as. is_dvd a}.\n            I\\<^sub>Z a (n # xs)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp:IZ_asubst qe_pres\\<^sub>1_def)"], ["proof (state)\nthis:\n  n < zlcms (map divisor (filter is_dvd as))\n  \\<forall>a\\<in>{a \\<in> set as. is_dvd a}. I\\<^sub>Z a (n # xs)\n\ngoal (2 subgoals):\n 1. Z.I (qe_pres\\<^sub>1 as) xs \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n 2. \\<exists>x.\n       \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs) \\<Longrightarrow>\n    Z.I (qe_pres\\<^sub>1 as) xs", "have \"?Ls = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False} =\n    {}", "using \\<open>?lbs = []\\<close> set_lbounds[of as]"], ["proof (prove)\nusing this:\n  lbounds as = []\n  set (lbounds as) =\n  {uu_.\n   \\<exists>i k ks.\n      uu_ = (i, ks) \\<and> Le i (k # ks) \\<in> set as \\<and> 0 < k}\n\ngoal (1 subgoal):\n 1. {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False} =\n    {}", "by (auto simp add:filter_empty_conv split:atom.split list.split)"], ["proof (state)\nthis:\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> 0 < k\n   | _ \\<Rightarrow> False} =\n  {}\n\ngoal (2 subgoals):\n 1. Z.I (qe_pres\\<^sub>1 as) xs \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n 2. \\<exists>x.\n       \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs) \\<Longrightarrow>\n    Z.I (qe_pres\\<^sub>1 as) xs", "have \"\\<exists>x. ?P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "assume \"?Us = {}\""], ["proof (state)\nthis:\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> k < 0\n   | _ \\<Rightarrow> False} =\n  {}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "with \\<open>?Ls = {}\\<close>"], ["proof (chain)\npicking this:\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> 0 < k\n   | _ \\<Rightarrow> False} =\n  {}\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> k < 0\n   | _ \\<Rightarrow> False} =\n  {}", "have \"set as = ?Ds\""], ["proof (prove)\nusing this:\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> 0 < k\n   | _ \\<Rightarrow> False} =\n  {}\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> k < 0\n   | _ \\<Rightarrow> False} =\n  {}\n\ngoal (1 subgoal):\n 1. set as = {a \\<in> set as. is_dvd a}", "using as"], ["proof (prove)\nusing this:\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> 0 < k\n   | _ \\<Rightarrow> False} =\n  {}\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> k < 0\n   | _ \\<Rightarrow> False} =\n  {}\n  set as =\n  {a \\<in> set as. is_dvd a} \\<union>\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> 0 < k\n   | _ \\<Rightarrow> False} \\<union>\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> k < 0\n   | _ \\<Rightarrow> False}\n\ngoal (1 subgoal):\n 1. set as = {a \\<in> set as. is_dvd a}", "by(simp (no_asm_use))blast"], ["proof (state)\nthis:\n  set as = {a \\<in> set as. is_dvd a}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "hence \"?P n\""], ["proof (prove)\nusing this:\n  set as = {a \\<in> set as. is_dvd a}\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>set as. I\\<^sub>Z a (n # xs)", "using A"], ["proof (prove)\nusing this:\n  set as = {a \\<in> set as. is_dvd a}\n  \\<forall>a\\<in>{a \\<in> set as. is_dvd a}. I\\<^sub>Z a (n # xs)\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>set as. I\\<^sub>Z a (n # xs)", "by auto"], ["proof (state)\nthis:\n  \\<forall>a\\<in>set as. I\\<^sub>Z a (n # xs)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>set as. I\\<^sub>Z a (n # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", ".."], ["proof (state)\nthis:\n  \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n\ngoal (1 subgoal):\n 1. {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "assume \"?Us \\<noteq> {}\""], ["proof (state)\nthis:\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> k < 0\n   | _ \\<Rightarrow> False} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "let ?M = \"{\\<langle>tl ks, xs\\<rangle> - i|ks i. Le i ks \\<in> ?Us}\""], ["proof (state)\ngoal (1 subgoal):\n 1. {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "let ?m = \"Min ?M\""], ["proof (state)\ngoal (1 subgoal):\n 1. {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "have \"finite ?M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n      Le i ks\n      \\<in> {a \\<in> set as.\n             case a of Le x [] \\<Rightarrow> False\n             | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n      Le i ks\n      \\<in> {a \\<in> set as.\n             case a of Le x [] \\<Rightarrow> False\n             | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}}", "have \"finite ( (\\<lambda>Le i ks \\<Rightarrow> \\<langle>tl ks, xs\\<rangle> - i) `\n                         {a\\<in>set as. \\<exists>i k ks. k<0 \\<and> a = Le i (k#ks)} )\"\n            (is \"finite ?B\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     ((\\<lambda>x.\n          case x of Le i ks \\<Rightarrow> \\<langle>tl ks,xs\\<rangle> - i) `\n      {a \\<in> set as. \\<exists>i k ks. k < 0 \\<and> a = Le i (k # ks)})", "by simp"], ["proof (state)\nthis:\n  finite\n   ((\\<lambda>x.\n        case x of Le i ks \\<Rightarrow> \\<langle>tl ks,xs\\<rangle> - i) `\n    {a \\<in> set as. \\<exists>i k ks. k < 0 \\<and> a = Le i (k # ks)})\n\ngoal (1 subgoal):\n 1. finite\n     {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n      Le i ks\n      \\<in> {a \\<in> set as.\n             case a of Le x [] \\<Rightarrow> False\n             | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}}", "also"], ["proof (state)\nthis:\n  finite\n   ((\\<lambda>x.\n        case x of Le i ks \\<Rightarrow> \\<langle>tl ks,xs\\<rangle> - i) `\n    {a \\<in> set as. \\<exists>i k ks. k < 0 \\<and> a = Le i (k # ks)})\n\ngoal (1 subgoal):\n 1. finite\n     {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n      Le i ks\n      \\<in> {a \\<in> set as.\n             case a of Le x [] \\<Rightarrow> False\n             | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}}", "have \"?B = ?M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        case x of Le i ks \\<Rightarrow> \\<langle>tl ks,xs\\<rangle> - i) `\n    {a \\<in> set as. \\<exists>i k ks. k < 0 \\<and> a = Le i (k # ks)} =\n    {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n     Le i ks\n     \\<in> {a \\<in> set as.\n            case a of Le x [] \\<Rightarrow> False\n            | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}}", "using hd"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>set as. hd_coeff_is1 a\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        case x of Le i ks \\<Rightarrow> \\<langle>tl ks,xs\\<rangle> - i) `\n    {a \\<in> set as. \\<exists>i k ks. k < 0 \\<and> a = Le i (k # ks)} =\n    {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n     Le i ks\n     \\<in> {a \\<in> set as.\n            case a of Le x [] \\<Rightarrow> False\n            | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}}", "by(fastforce simp:image_def neq_Nil_conv split:atom.splits list.splits)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      case x of Le i ks \\<Rightarrow> \\<langle>tl ks,xs\\<rangle> - i) `\n  {a \\<in> set as. \\<exists>i k ks. k < 0 \\<and> a = Le i (k # ks)} =\n  {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n   Le i ks\n   \\<in> {a \\<in> set as.\n          case a of Le x [] \\<Rightarrow> False\n          | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n      Le i ks\n      \\<in> {a \\<in> set as.\n             case a of Le x [] \\<Rightarrow> False\n             | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}}", "finally"], ["proof (chain)\npicking this:\n  finite\n   {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n    Le i ks\n    \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}}", "show ?thesis"], ["proof (prove)\nusing this:\n  finite\n   {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n    Le i ks\n    \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n      Le i ks\n      \\<in> {a \\<in> set as.\n             case a of Le x [] \\<Rightarrow> False\n             | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}}", "by auto"], ["proof (state)\nthis:\n  finite\n   {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n    Le i ks\n    \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite\n   {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n    Le i ks\n    \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}}\n\ngoal (1 subgoal):\n 1. {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "have \"?M \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n     Le i ks\n     \\<in> {a \\<in> set as.\n            case a of Le x [] \\<Rightarrow> False\n            | Le x (k # xa) \\<Rightarrow> k < 0\n            | _ \\<Rightarrow> False}} \\<noteq>\n    {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n     Le i ks\n     \\<in> {a \\<in> set as.\n            case a of Le x [] \\<Rightarrow> False\n            | Le x (k # xa) \\<Rightarrow> k < 0\n            | _ \\<Rightarrow> False}} \\<noteq>\n    {}", "from \\<open>?Us \\<noteq> {}\\<close>"], ["proof (chain)\npicking this:\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> k < 0\n   | _ \\<Rightarrow> False} \\<noteq>\n  {}", "obtain i k ks where \"Le i (k#ks) \\<in> ?Us \\<and> k<0\""], ["proof (prove)\nusing this:\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> k < 0\n   | _ \\<Rightarrow> False} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. (\\<And>i k ks.\n        Le i (k # ks)\n        \\<in> {a \\<in> set as.\n               case a of Le x [] \\<Rightarrow> False\n               | Le x (k # xa) \\<Rightarrow> k < 0\n               | _ \\<Rightarrow> False} \\<and>\n        k < 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (fastforce split:atom.splits list.splits)"], ["proof (state)\nthis:\n  Le i (k # ks)\n  \\<in> {a \\<in> set as.\n         case a of Le x [] \\<Rightarrow> False\n         | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False} \\<and>\n  k < 0\n\ngoal (1 subgoal):\n 1. {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n     Le i ks\n     \\<in> {a \\<in> set as.\n            case a of Le x [] \\<Rightarrow> False\n            | Le x (k # xa) \\<Rightarrow> k < 0\n            | _ \\<Rightarrow> False}} \\<noteq>\n    {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  Le i (k # ks)\n  \\<in> {a \\<in> set as.\n         case a of Le x [] \\<Rightarrow> False\n         | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False} \\<and>\n  k < 0\n\ngoal (1 subgoal):\n 1. {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n     Le i ks\n     \\<in> {a \\<in> set as.\n            case a of Le x [] \\<Rightarrow> False\n            | Le x (k # xa) \\<Rightarrow> k < 0\n            | _ \\<Rightarrow> False}} \\<noteq>\n    {}", "by auto"], ["proof (state)\nthis:\n  {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n   Le i ks\n   \\<in> {a \\<in> set as.\n          case a of Le x [] \\<Rightarrow> False\n          | Le x (k # xa) \\<Rightarrow> k < 0\n          | _ \\<Rightarrow> False}} \\<noteq>\n  {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n   Le i ks\n   \\<in> {a \\<in> set as.\n          case a of Le x [] \\<Rightarrow> False\n          | Le x (k # xa) \\<Rightarrow> k < 0\n          | _ \\<Rightarrow> False}} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "let ?k = \"(n - ?m) div ?lcm + 1\""], ["proof (state)\ngoal (1 subgoal):\n 1. {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "let ?x = \"n - ?k * ?lcm\""], ["proof (state)\ngoal (1 subgoal):\n 1. {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "have \"\\<forall>a \\<in> ?Ds. I\\<^sub>Z a (?x # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>{a \\<in> set as. is_dvd a}.\n       I\\<^sub>Z a\n        ((n -\n          ((n -\n            Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n                 Le i ks\n                 \\<in> {a \\<in> set as.\n                        case a of Le x [] \\<Rightarrow> False\n                        | Le x (k # xa) \\<Rightarrow> k < 0\n                        | _ \\<Rightarrow> False}}) div\n           zlcms (map divisor (filter is_dvd as)) +\n           1) *\n          zlcms (map divisor (filter is_dvd as))) #\n         xs)", "proof (intro allI ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> {a \\<in> set as. is_dvd a} \\<Longrightarrow>\n       I\\<^sub>Z a\n        ((n -\n          ((n -\n            Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n                 Le i ks\n                 \\<in> {a \\<in> set as.\n                        case a of Le x [] \\<Rightarrow> False\n                        | Le x (k # xa) \\<Rightarrow> k < 0\n                        | _ \\<Rightarrow> False}}) div\n           zlcms (map divisor (filter is_dvd as)) +\n           1) *\n          zlcms (map divisor (filter is_dvd as))) #\n         xs)", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> {a \\<in> set as. is_dvd a} \\<Longrightarrow>\n       I\\<^sub>Z a\n        ((n -\n          ((n -\n            Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n                 Le i ks\n                 \\<in> {a \\<in> set as.\n                        case a of Le x [] \\<Rightarrow> False\n                        | Le x (k # xa) \\<Rightarrow> k < 0\n                        | _ \\<Rightarrow> False}}) div\n           zlcms (map divisor (filter is_dvd as)) +\n           1) *\n          zlcms (map divisor (filter is_dvd as))) #\n         xs)", "assume \"a \\<in> ?Ds\""], ["proof (state)\nthis:\n  a \\<in> {a \\<in> set as. is_dvd a}\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> {a \\<in> set as. is_dvd a} \\<Longrightarrow>\n       I\\<^sub>Z a\n        ((n -\n          ((n -\n            Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n                 Le i ks\n                 \\<in> {a \\<in> set as.\n                        case a of Le x [] \\<Rightarrow> False\n                        | Le x (k # xa) \\<Rightarrow> k < 0\n                        | _ \\<Rightarrow> False}}) div\n           zlcms (map divisor (filter is_dvd as)) +\n           1) *\n          zlcms (map divisor (filter is_dvd as))) #\n         xs)", "let ?d = \"divisor a\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> {a \\<in> set as. is_dvd a} \\<Longrightarrow>\n       I\\<^sub>Z a\n        ((n -\n          ((n -\n            Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n                 Le i ks\n                 \\<in> {a \\<in> set as.\n                        case a of Le x [] \\<Rightarrow> False\n                        | Le x (k # xa) \\<Rightarrow> k < 0\n                        | _ \\<Rightarrow> False}}) div\n           zlcms (map divisor (filter is_dvd as)) +\n           1) *\n          zlcms (map divisor (filter is_dvd as))) #\n         xs)", "have 2: \"?d dvd ?lcm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor a dvd zlcms (map divisor (filter is_dvd as))", "using \\<open>a \\<in> ?Ds\\<close>"], ["proof (prove)\nusing this:\n  a \\<in> {a \\<in> set as. is_dvd a}\n\ngoal (1 subgoal):\n 1. divisor a dvd zlcms (map divisor (filter is_dvd as))", "by(simp add:dvd_zlcms)"], ["proof (state)\nthis:\n  divisor a dvd zlcms (map divisor (filter is_dvd as))\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> {a \\<in> set as. is_dvd a} \\<Longrightarrow>\n       I\\<^sub>Z a\n        ((n -\n          ((n -\n            Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n                 Le i ks\n                 \\<in> {a \\<in> set as.\n                        case a of Le x [] \\<Rightarrow> False\n                        | Le x (k # xa) \\<Rightarrow> k < 0\n                        | _ \\<Rightarrow> False}}) div\n           zlcms (map divisor (filter is_dvd as)) +\n           1) *\n          zlcms (map divisor (filter is_dvd as))) #\n         xs)", "have \"?x mod ?d = n mod ?d\" (is \"?l = ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (n -\n     ((n -\n       Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n            Le i ks\n            \\<in> {a \\<in> set as.\n                   case a of Le x [] \\<Rightarrow> False\n                   | Le x (k # xa) \\<Rightarrow> k < 0\n                   | _ \\<Rightarrow> False}}) div\n      zlcms (map divisor (filter is_dvd as)) +\n      1) *\n     zlcms (map divisor (filter is_dvd as))) mod\n    divisor a =\n    n mod divisor a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (n -\n     ((n -\n       Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n            Le i ks\n            \\<in> {a \\<in> set as.\n                   case a of Le x [] \\<Rightarrow> False\n                   | Le x (k # xa) \\<Rightarrow> k < 0\n                   | _ \\<Rightarrow> False}}) div\n      zlcms (map divisor (filter is_dvd as)) +\n      1) *\n     zlcms (map divisor (filter is_dvd as))) mod\n    divisor a =\n    n mod divisor a", "have \"?l = (?r - ((?k * ?lcm) mod ?d)) mod ?d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n -\n     ((n -\n       Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n            Le i ks\n            \\<in> {a \\<in> set as.\n                   case a of Le x [] \\<Rightarrow> False\n                   | Le x (k # xa) \\<Rightarrow> k < 0\n                   | _ \\<Rightarrow> False}}) div\n      zlcms (map divisor (filter is_dvd as)) +\n      1) *\n     zlcms (map divisor (filter is_dvd as))) mod\n    divisor a =\n    (n mod divisor a -\n     ((n -\n       Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n            Le i ks\n            \\<in> {a \\<in> set as.\n                   case a of Le x [] \\<Rightarrow> False\n                   | Le x (k # xa) \\<Rightarrow> k < 0\n                   | _ \\<Rightarrow> False}}) div\n      zlcms (map divisor (filter is_dvd as)) +\n      1) *\n     zlcms (map divisor (filter is_dvd as)) mod\n     divisor a) mod\n    divisor a", "by (simp add: mod_diff_eq)"], ["proof (state)\nthis:\n  (n -\n   ((n -\n     Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n          Le i ks\n          \\<in> {a \\<in> set as.\n                 case a of Le x [] \\<Rightarrow> False\n                 | Le x (k # xa) \\<Rightarrow> k < 0\n                 | _ \\<Rightarrow> False}}) div\n    zlcms (map divisor (filter is_dvd as)) +\n    1) *\n   zlcms (map divisor (filter is_dvd as))) mod\n  divisor a =\n  (n mod divisor a -\n   ((n -\n     Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n          Le i ks\n          \\<in> {a \\<in> set as.\n                 case a of Le x [] \\<Rightarrow> False\n                 | Le x (k # xa) \\<Rightarrow> k < 0\n                 | _ \\<Rightarrow> False}}) div\n    zlcms (map divisor (filter is_dvd as)) +\n    1) *\n   zlcms (map divisor (filter is_dvd as)) mod\n   divisor a) mod\n  divisor a\n\ngoal (1 subgoal):\n 1. (n -\n     ((n -\n       Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n            Le i ks\n            \\<in> {a \\<in> set as.\n                   case a of Le x [] \\<Rightarrow> False\n                   | Le x (k # xa) \\<Rightarrow> k < 0\n                   | _ \\<Rightarrow> False}}) div\n      zlcms (map divisor (filter is_dvd as)) +\n      1) *\n     zlcms (map divisor (filter is_dvd as))) mod\n    divisor a =\n    n mod divisor a", "also"], ["proof (state)\nthis:\n  (n -\n   ((n -\n     Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n          Le i ks\n          \\<in> {a \\<in> set as.\n                 case a of Le x [] \\<Rightarrow> False\n                 | Le x (k # xa) \\<Rightarrow> k < 0\n                 | _ \\<Rightarrow> False}}) div\n    zlcms (map divisor (filter is_dvd as)) +\n    1) *\n   zlcms (map divisor (filter is_dvd as))) mod\n  divisor a =\n  (n mod divisor a -\n   ((n -\n     Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n          Le i ks\n          \\<in> {a \\<in> set as.\n                 case a of Le x [] \\<Rightarrow> False\n                 | Le x (k # xa) \\<Rightarrow> k < 0\n                 | _ \\<Rightarrow> False}}) div\n    zlcms (map divisor (filter is_dvd as)) +\n    1) *\n   zlcms (map divisor (filter is_dvd as)) mod\n   divisor a) mod\n  divisor a\n\ngoal (1 subgoal):\n 1. (n -\n     ((n -\n       Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n            Le i ks\n            \\<in> {a \\<in> set as.\n                   case a of Le x [] \\<Rightarrow> False\n                   | Le x (k # xa) \\<Rightarrow> k < 0\n                   | _ \\<Rightarrow> False}}) div\n      zlcms (map divisor (filter is_dvd as)) +\n      1) *\n     zlcms (map divisor (filter is_dvd as))) mod\n    divisor a =\n    n mod divisor a", "have \"(?k * ?lcm) mod ?d = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((n -\n      Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n           Le i ks\n           \\<in> {a \\<in> set as.\n                  case a of Le x [] \\<Rightarrow> False\n                  | Le x (k # xa) \\<Rightarrow> k < 0\n                  | _ \\<Rightarrow> False}}) div\n     zlcms (map divisor (filter is_dvd as)) +\n     1) *\n    zlcms (map divisor (filter is_dvd as)) mod\n    divisor a =\n    0", "by(simp add: dvd_eq_mod_eq_0[symmetric] dvd_mult[OF 2])"], ["proof (state)\nthis:\n  ((n -\n    Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n         Le i ks\n         \\<in> {a \\<in> set as.\n                case a of Le x [] \\<Rightarrow> False\n                | Le x (k # xa) \\<Rightarrow> k < 0\n                | _ \\<Rightarrow> False}}) div\n   zlcms (map divisor (filter is_dvd as)) +\n   1) *\n  zlcms (map divisor (filter is_dvd as)) mod\n  divisor a =\n  0\n\ngoal (1 subgoal):\n 1. (n -\n     ((n -\n       Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n            Le i ks\n            \\<in> {a \\<in> set as.\n                   case a of Le x [] \\<Rightarrow> False\n                   | Le x (k # xa) \\<Rightarrow> k < 0\n                   | _ \\<Rightarrow> False}}) div\n      zlcms (map divisor (filter is_dvd as)) +\n      1) *\n     zlcms (map divisor (filter is_dvd as))) mod\n    divisor a =\n    n mod divisor a", "finally"], ["proof (chain)\npicking this:\n  (n -\n   ((n -\n     Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n          Le i ks\n          \\<in> {a \\<in> set as.\n                 case a of Le x [] \\<Rightarrow> False\n                 | Le x (k # xa) \\<Rightarrow> k < 0\n                 | _ \\<Rightarrow> False}}) div\n    zlcms (map divisor (filter is_dvd as)) +\n    1) *\n   zlcms (map divisor (filter is_dvd as))) mod\n  divisor a =\n  (n mod divisor a - 0) mod divisor a", "show ?thesis"], ["proof (prove)\nusing this:\n  (n -\n   ((n -\n     Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n          Le i ks\n          \\<in> {a \\<in> set as.\n                 case a of Le x [] \\<Rightarrow> False\n                 | Le x (k # xa) \\<Rightarrow> k < 0\n                 | _ \\<Rightarrow> False}}) div\n    zlcms (map divisor (filter is_dvd as)) +\n    1) *\n   zlcms (map divisor (filter is_dvd as))) mod\n  divisor a =\n  (n mod divisor a - 0) mod divisor a\n\ngoal (1 subgoal):\n 1. (n -\n     ((n -\n       Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n            Le i ks\n            \\<in> {a \\<in> set as.\n                   case a of Le x [] \\<Rightarrow> False\n                   | Le x (k # xa) \\<Rightarrow> k < 0\n                   | _ \\<Rightarrow> False}}) div\n      zlcms (map divisor (filter is_dvd as)) +\n      1) *\n     zlcms (map divisor (filter is_dvd as))) mod\n    divisor a =\n    n mod divisor a", "by simp"], ["proof (state)\nthis:\n  (n -\n   ((n -\n     Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n          Le i ks\n          \\<in> {a \\<in> set as.\n                 case a of Le x [] \\<Rightarrow> False\n                 | Le x (k # xa) \\<Rightarrow> k < 0\n                 | _ \\<Rightarrow> False}}) div\n    zlcms (map divisor (filter is_dvd as)) +\n    1) *\n   zlcms (map divisor (filter is_dvd as))) mod\n  divisor a =\n  n mod divisor a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (n -\n   ((n -\n     Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n          Le i ks\n          \\<in> {a \\<in> set as.\n                 case a of Le x [] \\<Rightarrow> False\n                 | Le x (k # xa) \\<Rightarrow> k < 0\n                 | _ \\<Rightarrow> False}}) div\n    zlcms (map divisor (filter is_dvd as)) +\n    1) *\n   zlcms (map divisor (filter is_dvd as))) mod\n  divisor a =\n  n mod divisor a\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> {a \\<in> set as. is_dvd a} \\<Longrightarrow>\n       I\\<^sub>Z a\n        ((n -\n          ((n -\n            Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n                 Le i ks\n                 \\<in> {a \\<in> set as.\n                        case a of Le x [] \\<Rightarrow> False\n                        | Le x (k # xa) \\<Rightarrow> k < 0\n                        | _ \\<Rightarrow> False}}) div\n           zlcms (map divisor (filter is_dvd as)) +\n           1) *\n          zlcms (map divisor (filter is_dvd as))) #\n         xs)", "thus \"I\\<^sub>Z a (?x#xs)\""], ["proof (prove)\nusing this:\n  (n -\n   ((n -\n     Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n          Le i ks\n          \\<in> {a \\<in> set as.\n                 case a of Le x [] \\<Rightarrow> False\n                 | Le x (k # xa) \\<Rightarrow> k < 0\n                 | _ \\<Rightarrow> False}}) div\n    zlcms (map divisor (filter is_dvd as)) +\n    1) *\n   zlcms (map divisor (filter is_dvd as))) mod\n  divisor a =\n  n mod divisor a\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((n -\n       ((n -\n         Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n              Le i ks\n              \\<in> {a \\<in> set as.\n                     case a of Le x [] \\<Rightarrow> False\n                     | Le x (k # xa) \\<Rightarrow> k < 0\n                     | _ \\<Rightarrow> False}}) div\n        zlcms (map divisor (filter is_dvd as)) +\n        1) *\n       zlcms (map divisor (filter is_dvd as))) #\n      xs)", "using A I_cyclic[of a n ?x] \\<open>a \\<in> ?Ds\\<close> 1"], ["proof (prove)\nusing this:\n  (n -\n   ((n -\n     Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n          Le i ks\n          \\<in> {a \\<in> set as.\n                 case a of Le x [] \\<Rightarrow> False\n                 | Le x (k # xa) \\<Rightarrow> k < 0\n                 | _ \\<Rightarrow> False}}) div\n    zlcms (map divisor (filter is_dvd as)) +\n    1) *\n   zlcms (map divisor (filter is_dvd as))) mod\n  divisor a =\n  n mod divisor a\n  \\<forall>a\\<in>{a \\<in> set as. is_dvd a}. I\\<^sub>Z a (n # xs)\n  \\<lbrakk>is_dvd a; hd_coeff a = 1;\n   n mod divisor a =\n   (n -\n    ((n -\n      Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n           Le i ks\n           \\<in> {a \\<in> set as.\n                  case a of Le x [] \\<Rightarrow> False\n                  | Le x (k # xa) \\<Rightarrow> k < 0\n                  | _ \\<Rightarrow> False}}) div\n     zlcms (map divisor (filter is_dvd as)) +\n     1) *\n    zlcms (map divisor (filter is_dvd as))) mod\n   divisor a\\<rbrakk>\n  \\<Longrightarrow> I\\<^sub>Z a (n # ?e) =\n                    I\\<^sub>Z a\n                     ((n -\n                       ((n -\n                         Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n                              Le i ks\n                              \\<in> {a \\<in> set as.\n                                     case a of Le x [] \\<Rightarrow> False\n                                     | Le x (k # xa) \\<Rightarrow> k < 0\n                                     | _ \\<Rightarrow> False}}) div\n                        zlcms (map divisor (filter is_dvd as)) +\n                        1) *\n                       zlcms (map divisor (filter is_dvd as))) #\n                      ?e)\n  a \\<in> {a \\<in> set as. is_dvd a}\n  \\<forall>a\\<in>{a \\<in> set as. is_dvd a}. hd_coeff a = 1\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((n -\n       ((n -\n         Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n              Le i ks\n              \\<in> {a \\<in> set as.\n                     case a of Le x [] \\<Rightarrow> False\n                     | Le x (k # xa) \\<Rightarrow> k < 0\n                     | _ \\<Rightarrow> False}}) div\n        zlcms (map divisor (filter is_dvd as)) +\n        1) *\n       zlcms (map divisor (filter is_dvd as))) #\n      xs)", "by auto"], ["proof (state)\nthis:\n  I\\<^sub>Z a\n   ((n -\n     ((n -\n       Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n            Le i ks\n            \\<in> {a \\<in> set as.\n                   case a of Le x [] \\<Rightarrow> False\n                   | Le x (k # xa) \\<Rightarrow> k < 0\n                   | _ \\<Rightarrow> False}}) div\n      zlcms (map divisor (filter is_dvd as)) +\n      1) *\n     zlcms (map divisor (filter is_dvd as))) #\n    xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>a\\<in>{a \\<in> set as. is_dvd a}.\n     I\\<^sub>Z a\n      ((n -\n        ((n -\n          Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n               Le i ks\n               \\<in> {a \\<in> set as.\n                      case a of Le x [] \\<Rightarrow> False\n                      | Le x (k # xa) \\<Rightarrow> k < 0\n                      | _ \\<Rightarrow> False}}) div\n         zlcms (map divisor (filter is_dvd as)) +\n         1) *\n        zlcms (map divisor (filter is_dvd as))) #\n       xs)\n\ngoal (1 subgoal):\n 1. {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "moreover"], ["proof (state)\nthis:\n  \\<forall>a\\<in>{a \\<in> set as. is_dvd a}.\n     I\\<^sub>Z a\n      ((n -\n        ((n -\n          Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n               Le i ks\n               \\<in> {a \\<in> set as.\n                      case a of Le x [] \\<Rightarrow> False\n                      | Le x (k # xa) \\<Rightarrow> k < 0\n                      | _ \\<Rightarrow> False}}) div\n         zlcms (map divisor (filter is_dvd as)) +\n         1) *\n        zlcms (map divisor (filter is_dvd as))) #\n       xs)\n\ngoal (1 subgoal):\n 1. {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "have \"\\<forall>a\\<in> ?Us. I\\<^sub>Z a (?x#xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>{a \\<in> set as.\n                    case a of Le x [] \\<Rightarrow> False\n                    | Le x (k # xa) \\<Rightarrow> k < 0\n                    | _ \\<Rightarrow> False}.\n       I\\<^sub>Z a\n        ((n -\n          ((n -\n            Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n                 Le i ks\n                 \\<in> {a \\<in> set as.\n                        case a of Le x [] \\<Rightarrow> False\n                        | Le x (k # xa) \\<Rightarrow> k < 0\n                        | _ \\<Rightarrow> False}}) div\n           zlcms (map divisor (filter is_dvd as)) +\n           1) *\n          zlcms (map divisor (filter is_dvd as))) #\n         xs)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> {a \\<in> set as.\n                case a of Le x [] \\<Rightarrow> False\n                | Le x (k # xa) \\<Rightarrow> k < 0\n                | _ \\<Rightarrow> False} \\<Longrightarrow>\n       I\\<^sub>Z a\n        ((n -\n          ((n -\n            Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n                 Le i ks\n                 \\<in> {a \\<in> set as.\n                        case a of Le x [] \\<Rightarrow> False\n                        | Le x (k # xa) \\<Rightarrow> k < 0\n                        | _ \\<Rightarrow> False}}) div\n           zlcms (map divisor (filter is_dvd as)) +\n           1) *\n          zlcms (map divisor (filter is_dvd as))) #\n         xs)", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> {a \\<in> set as.\n                case a of Le x [] \\<Rightarrow> False\n                | Le x (k # xa) \\<Rightarrow> k < 0\n                | _ \\<Rightarrow> False} \\<Longrightarrow>\n       I\\<^sub>Z a\n        ((n -\n          ((n -\n            Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n                 Le i ks\n                 \\<in> {a \\<in> set as.\n                        case a of Le x [] \\<Rightarrow> False\n                        | Le x (k # xa) \\<Rightarrow> k < 0\n                        | _ \\<Rightarrow> False}}) div\n           zlcms (map divisor (filter is_dvd as)) +\n           1) *\n          zlcms (map divisor (filter is_dvd as))) #\n         xs)", "assume \"a \\<in> ?Us\""], ["proof (state)\nthis:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> {a \\<in> set as.\n                case a of Le x [] \\<Rightarrow> False\n                | Le x (k # xa) \\<Rightarrow> k < 0\n                | _ \\<Rightarrow> False} \\<Longrightarrow>\n       I\\<^sub>Z a\n        ((n -\n          ((n -\n            Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n                 Le i ks\n                 \\<in> {a \\<in> set as.\n                        case a of Le x [] \\<Rightarrow> False\n                        | Le x (k # xa) \\<Rightarrow> k < 0\n                        | _ \\<Rightarrow> False}}) div\n           zlcms (map divisor (filter is_dvd as)) +\n           1) *\n          zlcms (map divisor (filter is_dvd as))) #\n         xs)", "then"], ["proof (chain)\npicking this:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}", "obtain l ks where [simp]: \"a = Le l (-1#ks)\""], ["proof (prove)\nusing this:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}\n\ngoal (1 subgoal):\n 1. (\\<And>l ks.\n        a = Le l (- 1 # ks) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using hd"], ["proof (prove)\nusing this:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}\n  \\<forall>a\\<in>set as. hd_coeff_is1 a\n\ngoal (1 subgoal):\n 1. (\\<And>l ks.\n        a = Le l (- 1 # ks) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(fastforce split:atom.splits list.splits)"], ["proof (state)\nthis:\n  a = Le l (- 1 # ks)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> {a \\<in> set as.\n                case a of Le x [] \\<Rightarrow> False\n                | Le x (k # xa) \\<Rightarrow> k < 0\n                | _ \\<Rightarrow> False} \\<Longrightarrow>\n       I\\<^sub>Z a\n        ((n -\n          ((n -\n            Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n                 Le i ks\n                 \\<in> {a \\<in> set as.\n                        case a of Le x [] \\<Rightarrow> False\n                        | Le x (k # xa) \\<Rightarrow> k < 0\n                        | _ \\<Rightarrow> False}}) div\n           zlcms (map divisor (filter is_dvd as)) +\n           1) *\n          zlcms (map divisor (filter is_dvd as))) #\n         xs)", "have \"?m \\<le> \\<langle>ks,xs\\<rangle> - l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n         Le i ks\n         \\<in> {a \\<in> set as.\n                case a of Le x [] \\<Rightarrow> False\n                | Le x (k # xa) \\<Rightarrow> k < 0\n                | _ \\<Rightarrow> False}}\n    \\<le> \\<langle>ks,xs\\<rangle> - l", "using Min_le_iff[OF \\<open>finite ?M\\<close> \\<open>?M \\<noteq> {}\\<close>] \\<open>a \\<in> ?Us\\<close>"], ["proof (prove)\nusing this:\n  (Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n        Le i ks\n        \\<in> {a \\<in> set as.\n               case a of Le x [] \\<Rightarrow> False\n               | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}}\n   \\<le> ?x) =\n  (\\<exists>a\\<in>{\\<langle>tl ks,xs\\<rangle> - i |ks i.\n                   Le i ks\n                   \\<in> {a \\<in> set as.\n                          case a of Le x [] \\<Rightarrow> False\n                          | Le x (k # xa) \\<Rightarrow> k < 0\n                          | _ \\<Rightarrow> False}}.\n      a \\<le> ?x)\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}\n\ngoal (1 subgoal):\n 1. Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n         Le i ks\n         \\<in> {a \\<in> set as.\n                case a of Le x [] \\<Rightarrow> False\n                | Le x (k # xa) \\<Rightarrow> k < 0\n                | _ \\<Rightarrow> False}}\n    \\<le> \\<langle>ks,xs\\<rangle> - l", "by fastforce"], ["proof (state)\nthis:\n  Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n       Le i ks\n       \\<in> {a \\<in> set as.\n              case a of Le x [] \\<Rightarrow> False\n              | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}}\n  \\<le> \\<langle>ks,xs\\<rangle> - l\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> {a \\<in> set as.\n                case a of Le x [] \\<Rightarrow> False\n                | Le x (k # xa) \\<Rightarrow> k < 0\n                | _ \\<Rightarrow> False} \\<Longrightarrow>\n       I\\<^sub>Z a\n        ((n -\n          ((n -\n            Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n                 Le i ks\n                 \\<in> {a \\<in> set as.\n                        case a of Le x [] \\<Rightarrow> False\n                        | Le x (k # xa) \\<Rightarrow> k < 0\n                        | _ \\<Rightarrow> False}}) div\n           zlcms (map divisor (filter is_dvd as)) +\n           1) *\n          zlcms (map divisor (filter is_dvd as))) #\n         xs)", "moreover"], ["proof (state)\nthis:\n  Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n       Le i ks\n       \\<in> {a \\<in> set as.\n              case a of Le x [] \\<Rightarrow> False\n              | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}}\n  \\<le> \\<langle>ks,xs\\<rangle> - l\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> {a \\<in> set as.\n                case a of Le x [] \\<Rightarrow> False\n                | Le x (k # xa) \\<Rightarrow> k < 0\n                | _ \\<Rightarrow> False} \\<Longrightarrow>\n       I\\<^sub>Z a\n        ((n -\n          ((n -\n            Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n                 Le i ks\n                 \\<in> {a \\<in> set as.\n                        case a of Le x [] \\<Rightarrow> False\n                        | Le x (k # xa) \\<Rightarrow> k < 0\n                        | _ \\<Rightarrow> False}}) div\n           zlcms (map divisor (filter is_dvd as)) +\n           1) *\n          zlcms (map divisor (filter is_dvd as))) #\n         xs)", "have \"(n - ?m) mod ?lcm < ?lcm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n -\n     Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n          Le i ks\n          \\<in> {a \\<in> set as.\n                 case a of Le x [] \\<Rightarrow> False\n                 | Le x (k # xa) \\<Rightarrow> k < 0\n                 | _ \\<Rightarrow> False}}) mod\n    zlcms (map divisor (filter is_dvd as))\n    < zlcms (map divisor (filter is_dvd as))", "by(simp add: pos_mod_bound[OF zlcms_pos] norm)"], ["proof (state)\nthis:\n  (n -\n   Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n        Le i ks\n        \\<in> {a \\<in> set as.\n               case a of Le x [] \\<Rightarrow> False\n               | Le x (k # xa) \\<Rightarrow> k < 0\n               | _ \\<Rightarrow> False}}) mod\n  zlcms (map divisor (filter is_dvd as))\n  < zlcms (map divisor (filter is_dvd as))\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> {a \\<in> set as.\n                case a of Le x [] \\<Rightarrow> False\n                | Le x (k # xa) \\<Rightarrow> k < 0\n                | _ \\<Rightarrow> False} \\<Longrightarrow>\n       I\\<^sub>Z a\n        ((n -\n          ((n -\n            Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n                 Le i ks\n                 \\<in> {a \\<in> set as.\n                        case a of Le x [] \\<Rightarrow> False\n                        | Le x (k # xa) \\<Rightarrow> k < 0\n                        | _ \\<Rightarrow> False}}) div\n           zlcms (map divisor (filter is_dvd as)) +\n           1) *\n          zlcms (map divisor (filter is_dvd as))) #\n         xs)", "ultimately"], ["proof (chain)\npicking this:\n  Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n       Le i ks\n       \\<in> {a \\<in> set as.\n              case a of Le x [] \\<Rightarrow> False\n              | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}}\n  \\<le> \\<langle>ks,xs\\<rangle> - l\n  (n -\n   Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n        Le i ks\n        \\<in> {a \\<in> set as.\n               case a of Le x [] \\<Rightarrow> False\n               | Le x (k # xa) \\<Rightarrow> k < 0\n               | _ \\<Rightarrow> False}}) mod\n  zlcms (map divisor (filter is_dvd as))\n  < zlcms (map divisor (filter is_dvd as))", "show \"I\\<^sub>Z a (?x#xs)\""], ["proof (prove)\nusing this:\n  Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n       Le i ks\n       \\<in> {a \\<in> set as.\n              case a of Le x [] \\<Rightarrow> False\n              | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}}\n  \\<le> \\<langle>ks,xs\\<rangle> - l\n  (n -\n   Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n        Le i ks\n        \\<in> {a \\<in> set as.\n               case a of Le x [] \\<Rightarrow> False\n               | Le x (k # xa) \\<Rightarrow> k < 0\n               | _ \\<Rightarrow> False}}) mod\n  zlcms (map divisor (filter is_dvd as))\n  < zlcms (map divisor (filter is_dvd as))\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((n -\n       ((n -\n         Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n              Le i ks\n              \\<in> {a \\<in> set as.\n                     case a of Le x [] \\<Rightarrow> False\n                     | Le x (k # xa) \\<Rightarrow> k < 0\n                     | _ \\<Rightarrow> False}}) div\n        zlcms (map divisor (filter is_dvd as)) +\n        1) *\n       zlcms (map divisor (filter is_dvd as))) #\n      xs)", "by(simp add:minus_mod_eq_mult_div [symmetric] algebra_simps)"], ["proof (state)\nthis:\n  I\\<^sub>Z a\n   ((n -\n     ((n -\n       Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n            Le i ks\n            \\<in> {a \\<in> set as.\n                   case a of Le x [] \\<Rightarrow> False\n                   | Le x (k # xa) \\<Rightarrow> k < 0\n                   | _ \\<Rightarrow> False}}) div\n      zlcms (map divisor (filter is_dvd as)) +\n      1) *\n     zlcms (map divisor (filter is_dvd as))) #\n    xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>a\\<in>{a \\<in> set as.\n                  case a of Le x [] \\<Rightarrow> False\n                  | Le x (k # xa) \\<Rightarrow> k < 0\n                  | _ \\<Rightarrow> False}.\n     I\\<^sub>Z a\n      ((n -\n        ((n -\n          Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n               Le i ks\n               \\<in> {a \\<in> set as.\n                      case a of Le x [] \\<Rightarrow> False\n                      | Le x (k # xa) \\<Rightarrow> k < 0\n                      | _ \\<Rightarrow> False}}) div\n         zlcms (map divisor (filter is_dvd as)) +\n         1) *\n        zlcms (map divisor (filter is_dvd as))) #\n       xs)\n\ngoal (1 subgoal):\n 1. {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "moreover"], ["proof (state)\nthis:\n  \\<forall>a\\<in>{a \\<in> set as.\n                  case a of Le x [] \\<Rightarrow> False\n                  | Le x (k # xa) \\<Rightarrow> k < 0\n                  | _ \\<Rightarrow> False}.\n     I\\<^sub>Z a\n      ((n -\n        ((n -\n          Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n               Le i ks\n               \\<in> {a \\<in> set as.\n                      case a of Le x [] \\<Rightarrow> False\n                      | Le x (k # xa) \\<Rightarrow> k < 0\n                      | _ \\<Rightarrow> False}}) div\n         zlcms (map divisor (filter is_dvd as)) +\n         1) *\n        zlcms (map divisor (filter is_dvd as))) #\n       xs)\n\ngoal (1 subgoal):\n 1. {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "have \"set as = ?Ds \\<union> ?Us\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set as =\n    {a \\<in> set as. is_dvd a} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}", "using as \\<open>?Ls = {}\\<close>"], ["proof (prove)\nusing this:\n  set as =\n  {a \\<in> set as. is_dvd a} \\<union>\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> 0 < k\n   | _ \\<Rightarrow> False} \\<union>\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> k < 0\n   | _ \\<Rightarrow> False}\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> 0 < k\n   | _ \\<Rightarrow> False} =\n  {}\n\ngoal (1 subgoal):\n 1. set as =\n    {a \\<in> set as. is_dvd a} \\<union>\n    {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}", "by (simp (no_asm_use)) blast"], ["proof (state)\nthis:\n  set as =\n  {a \\<in> set as. is_dvd a} \\<union>\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> k < 0\n   | _ \\<Rightarrow> False}\n\ngoal (1 subgoal):\n 1. {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>a\\<in>{a \\<in> set as. is_dvd a}.\n     I\\<^sub>Z a\n      ((n -\n        ((n -\n          Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n               Le i ks\n               \\<in> {a \\<in> set as.\n                      case a of Le x [] \\<Rightarrow> False\n                      | Le x (k # xa) \\<Rightarrow> k < 0\n                      | _ \\<Rightarrow> False}}) div\n         zlcms (map divisor (filter is_dvd as)) +\n         1) *\n        zlcms (map divisor (filter is_dvd as))) #\n       xs)\n  \\<forall>a\\<in>{a \\<in> set as.\n                  case a of Le x [] \\<Rightarrow> False\n                  | Le x (k # xa) \\<Rightarrow> k < 0\n                  | _ \\<Rightarrow> False}.\n     I\\<^sub>Z a\n      ((n -\n        ((n -\n          Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n               Le i ks\n               \\<in> {a \\<in> set as.\n                      case a of Le x [] \\<Rightarrow> False\n                      | Le x (k # xa) \\<Rightarrow> k < 0\n                      | _ \\<Rightarrow> False}}) div\n         zlcms (map divisor (filter is_dvd as)) +\n         1) *\n        zlcms (map divisor (filter is_dvd as))) #\n       xs)\n  set as =\n  {a \\<in> set as. is_dvd a} \\<union>\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> k < 0\n   | _ \\<Rightarrow> False}", "have \"?P(?x)\""], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>{a \\<in> set as. is_dvd a}.\n     I\\<^sub>Z a\n      ((n -\n        ((n -\n          Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n               Le i ks\n               \\<in> {a \\<in> set as.\n                      case a of Le x [] \\<Rightarrow> False\n                      | Le x (k # xa) \\<Rightarrow> k < 0\n                      | _ \\<Rightarrow> False}}) div\n         zlcms (map divisor (filter is_dvd as)) +\n         1) *\n        zlcms (map divisor (filter is_dvd as))) #\n       xs)\n  \\<forall>a\\<in>{a \\<in> set as.\n                  case a of Le x [] \\<Rightarrow> False\n                  | Le x (k # xa) \\<Rightarrow> k < 0\n                  | _ \\<Rightarrow> False}.\n     I\\<^sub>Z a\n      ((n -\n        ((n -\n          Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n               Le i ks\n               \\<in> {a \\<in> set as.\n                      case a of Le x [] \\<Rightarrow> False\n                      | Le x (k # xa) \\<Rightarrow> k < 0\n                      | _ \\<Rightarrow> False}}) div\n         zlcms (map divisor (filter is_dvd as)) +\n         1) *\n        zlcms (map divisor (filter is_dvd as))) #\n       xs)\n  set as =\n  {a \\<in> set as. is_dvd a} \\<union>\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> k < 0\n   | _ \\<Rightarrow> False}\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>set as.\n       I\\<^sub>Z a\n        ((n -\n          ((n -\n            Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n                 Le i ks\n                 \\<in> {a \\<in> set as.\n                        case a of Le x [] \\<Rightarrow> False\n                        | Le x (k # xa) \\<Rightarrow> k < 0\n                        | _ \\<Rightarrow> False}}) div\n           zlcms (map divisor (filter is_dvd as)) +\n           1) *\n          zlcms (map divisor (filter is_dvd as))) #\n         xs)", "by auto"], ["proof (state)\nthis:\n  \\<forall>a\\<in>set as.\n     I\\<^sub>Z a\n      ((n -\n        ((n -\n          Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n               Le i ks\n               \\<in> {a \\<in> set as.\n                      case a of Le x [] \\<Rightarrow> False\n                      | Le x (k # xa) \\<Rightarrow> k < 0\n                      | _ \\<Rightarrow> False}}) div\n         zlcms (map divisor (filter is_dvd as)) +\n         1) *\n        zlcms (map divisor (filter is_dvd as))) #\n       xs)\n\ngoal (1 subgoal):\n 1. {a \\<in> set as.\n     case a of Le x [] \\<Rightarrow> False\n     | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>set as.\n     I\\<^sub>Z a\n      ((n -\n        ((n -\n          Min {\\<langle>tl ks,xs\\<rangle> - i |ks i.\n               Le i ks\n               \\<in> {a \\<in> set as.\n                      case a of Le x [] \\<Rightarrow> False\n                      | Le x (k # xa) \\<Rightarrow> k < 0\n                      | _ \\<Rightarrow> False}}) div\n         zlcms (map divisor (filter is_dvd as)) +\n         1) *\n        zlcms (map divisor (filter is_dvd as))) #\n       xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", ".."], ["proof (state)\nthis:\n  \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n\ngoal (2 subgoals):\n 1. Z.I (qe_pres\\<^sub>1 as) xs \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n 2. \\<exists>x.\n       \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs) \\<Longrightarrow>\n    Z.I (qe_pres\\<^sub>1 as) xs", "}"], ["proof (state)\nthis:\n  lbounds as = [] \\<Longrightarrow>\n  \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n\ngoal (2 subgoals):\n 1. Z.I (qe_pres\\<^sub>1 as) xs \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n 2. \\<exists>x.\n       \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs) \\<Longrightarrow>\n    Z.I (qe_pres\\<^sub>1 as) xs", "moreover"], ["proof (state)\nthis:\n  lbounds as = [] \\<Longrightarrow>\n  \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n\ngoal (2 subgoals):\n 1. Z.I (qe_pres\\<^sub>1 as) xs \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n 2. \\<exists>x.\n       \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs) \\<Longrightarrow>\n    Z.I (qe_pres\\<^sub>1 as) xs", "{"], ["proof (state)\nthis:\n  lbounds as = [] \\<Longrightarrow>\n  \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n\ngoal (2 subgoals):\n 1. Z.I (qe_pres\\<^sub>1 as) xs \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n 2. \\<exists>x.\n       \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs) \\<Longrightarrow>\n    Z.I (qe_pres\\<^sub>1 as) xs", "assume \"?lbs \\<noteq> []\""], ["proof (state)\nthis:\n  lbounds as \\<noteq> []\n\ngoal (2 subgoals):\n 1. Z.I (qe_pres\\<^sub>1 as) xs \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n 2. \\<exists>x.\n       \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs) \\<Longrightarrow>\n    Z.I (qe_pres\\<^sub>1 as) xs", "with \\<open>?QE\\<close>"], ["proof (chain)\npicking this:\n  Z.I (qe_pres\\<^sub>1 as) xs\n  lbounds as \\<noteq> []", "obtain il ksl m\n        where \"\\<forall>a\\<in>set as. I\\<^sub>Z (asubst (il + m) ksl a) xs\""], ["proof (prove)\nusing this:\n  Z.I (qe_pres\\<^sub>1 as) xs\n  lbounds as \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<And>il m ksl.\n        \\<forall>a\\<in>set as.\n           I\\<^sub>Z (asubst (il + m) ksl a) xs \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(auto simp:qe_pres\\<^sub>1_def)"], ["proof (state)\nthis:\n  \\<forall>a\\<in>set as. I\\<^sub>Z (asubst (il + m) ksl a) xs\n\ngoal (2 subgoals):\n 1. Z.I (qe_pres\\<^sub>1 as) xs \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n 2. \\<exists>x.\n       \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs) \\<Longrightarrow>\n    Z.I (qe_pres\\<^sub>1 as) xs", "hence \"?P(il + m + \\<langle>ksl,xs\\<rangle>)\""], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>set as. I\\<^sub>Z (asubst (il + m) ksl a) xs\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>set as.\n       I\\<^sub>Z a ((il + m + \\<langle>ksl,xs\\<rangle>) # xs)", "by(simp add:IZ_asubst)"], ["proof (state)\nthis:\n  \\<forall>a\\<in>set as.\n     I\\<^sub>Z a ((il + m + \\<langle>ksl,xs\\<rangle>) # xs)\n\ngoal (2 subgoals):\n 1. Z.I (qe_pres\\<^sub>1 as) xs \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n 2. \\<exists>x.\n       \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs) \\<Longrightarrow>\n    Z.I (qe_pres\\<^sub>1 as) xs", "hence \"\\<exists>x. ?P x\""], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>set as.\n     I\\<^sub>Z a ((il + m + \\<langle>ksl,xs\\<rangle>) # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", ".."], ["proof (state)\nthis:\n  \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n\ngoal (2 subgoals):\n 1. Z.I (qe_pres\\<^sub>1 as) xs \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n 2. \\<exists>x.\n       \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs) \\<Longrightarrow>\n    Z.I (qe_pres\\<^sub>1 as) xs", "}"], ["proof (state)\nthis:\n  lbounds as \\<noteq> [] \\<Longrightarrow>\n  \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n\ngoal (2 subgoals):\n 1. Z.I (qe_pres\\<^sub>1 as) xs \\<Longrightarrow>\n    \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n 2. \\<exists>x.\n       \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs) \\<Longrightarrow>\n    Z.I (qe_pres\\<^sub>1 as) xs", "ultimately"], ["proof (chain)\npicking this:\n  lbounds as = [] \\<Longrightarrow>\n  \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n  lbounds as \\<noteq> [] \\<Longrightarrow>\n  \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "show \"\\<exists>x. ?P x\""], ["proof (prove)\nusing this:\n  lbounds as = [] \\<Longrightarrow>\n  \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n  lbounds as \\<noteq> [] \\<Longrightarrow>\n  \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "by blast"], ["proof (state)\nthis:\n  \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs) \\<Longrightarrow>\n    Z.I (qe_pres\\<^sub>1 as) xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs) \\<Longrightarrow>\n    Z.I (qe_pres\\<^sub>1 as) xs", "assume \"\\<exists>x. ?P x\""], ["proof (state)\nthis:\n  \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs) \\<Longrightarrow>\n    Z.I (qe_pres\\<^sub>1 as) xs", "then"], ["proof (chain)\npicking this:\n  \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)", "obtain x where x: \"?P x\""], ["proof (prove)\nusing this:\n  \\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs) \\<Longrightarrow>\n    Z.I (qe_pres\\<^sub>1 as) xs", "show ?QE"], ["proof (prove)\ngoal (1 subgoal):\n 1. Z.I (qe_pres\\<^sub>1 as) xs", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs\n 2. \\<not> ?P \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "assume \"?lbs = []\""], ["proof (state)\nthis:\n  lbounds as = []\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs\n 2. \\<not> ?P \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "moreover"], ["proof (state)\nthis:\n  lbounds as = []\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs\n 2. \\<not> ?P \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "have \"\\<exists>x. 0 \\<le> x \\<and> x < ?lcm \\<and> (\\<forall>a \\<in> ?Ds. I\\<^sub>Z a (x # xs))\"\n        (is \"\\<exists>x. ?P x\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<ge>0.\n       x < zlcms (map divisor (filter is_dvd as)) \\<and>\n       (\\<forall>a\\<in>{a \\<in> set as. is_dvd a}. I\\<^sub>Z a (x # xs))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> ?x \\<and>\n    ?x < zlcms (map divisor (filter is_dvd as)) \\<and>\n    (\\<forall>a\\<in>{a \\<in> set as. is_dvd a}. I\\<^sub>Z a (?x # xs))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> ?x \\<and>\n    ?x < zlcms (map divisor (filter is_dvd as)) \\<and>\n    (\\<forall>a\\<in>{a \\<in> set as. is_dvd a}. I\\<^sub>Z a (?x # xs))", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> ?x \\<and>\n    ?x < zlcms (map divisor (filter is_dvd as)) \\<and>\n    (\\<forall>a\\<in>{a \\<in> set as. is_dvd a}. I\\<^sub>Z a (?x # xs))", "assume \"a \\<in> ?Ds\""], ["proof (state)\nthis:\n  a \\<in> {a \\<in> set as. is_dvd a}\n\ngoal (1 subgoal):\n 1. 0 \\<le> ?x \\<and>\n    ?x < zlcms (map divisor (filter is_dvd as)) \\<and>\n    (\\<forall>a\\<in>{a \\<in> set as. is_dvd a}. I\\<^sub>Z a (?x # xs))", "hence \"I\\<^sub>Z a ((x mod ?lcm) # xs) = I\\<^sub>Z a (x # xs)\""], ["proof (prove)\nusing this:\n  a \\<in> {a \\<in> set as. is_dvd a}\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a (x mod zlcms (map divisor (filter is_dvd as)) # xs) =\n    I\\<^sub>Z a (x # xs)", "using 1"], ["proof (prove)\nusing this:\n  a \\<in> {a \\<in> set as. is_dvd a}\n  \\<forall>a\\<in>{a \\<in> set as. is_dvd a}. hd_coeff a = 1\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a (x mod zlcms (map divisor (filter is_dvd as)) # xs) =\n    I\\<^sub>Z a (x # xs)", "by (fastforce del:iffI intro: I_cyclic\n                simp: mod_mod_cancel dvd_zlcms)"], ["proof (state)\nthis:\n  I\\<^sub>Z a (x mod zlcms (map divisor (filter is_dvd as)) # xs) =\n  I\\<^sub>Z a (x # xs)\n\ngoal (1 subgoal):\n 1. 0 \\<le> ?x \\<and>\n    ?x < zlcms (map divisor (filter is_dvd as)) \\<and>\n    (\\<forall>a\\<in>{a \\<in> set as. is_dvd a}. I\\<^sub>Z a (?x # xs))", "}"], ["proof (state)\nthis:\n  ?a2 \\<in> {a \\<in> set as. is_dvd a} \\<Longrightarrow>\n  I\\<^sub>Z ?a2 (x mod zlcms (map divisor (filter is_dvd as)) # xs) =\n  I\\<^sub>Z ?a2 (x # xs)\n\ngoal (1 subgoal):\n 1. 0 \\<le> ?x \\<and>\n    ?x < zlcms (map divisor (filter is_dvd as)) \\<and>\n    (\\<forall>a\\<in>{a \\<in> set as. is_dvd a}. I\\<^sub>Z a (?x # xs))", "thus \"?P(x mod ?lcm)\""], ["proof (prove)\nusing this:\n  ?a2 \\<in> {a \\<in> set as. is_dvd a} \\<Longrightarrow>\n  I\\<^sub>Z ?a2 (x mod zlcms (map divisor (filter is_dvd as)) # xs) =\n  I\\<^sub>Z ?a2 (x # xs)\n\ngoal (1 subgoal):\n 1. 0 \\<le> x mod zlcms (map divisor (filter is_dvd as)) \\<and>\n    x mod zlcms (map divisor (filter is_dvd as))\n    < zlcms (map divisor (filter is_dvd as)) \\<and>\n    (\\<forall>a\\<in>{a \\<in> set as. is_dvd a}.\n        I\\<^sub>Z a (x mod zlcms (map divisor (filter is_dvd as)) # xs))", "using x norm"], ["proof (prove)\nusing this:\n  ?a2 \\<in> {a \\<in> set as. is_dvd a} \\<Longrightarrow>\n  I\\<^sub>Z ?a2 (x mod zlcms (map divisor (filter is_dvd as)) # xs) =\n  I\\<^sub>Z ?a2 (x # xs)\n  \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n  \\<forall>a\\<in>set as. divisor a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> x mod zlcms (map divisor (filter is_dvd as)) \\<and>\n    x mod zlcms (map divisor (filter is_dvd as))\n    < zlcms (map divisor (filter is_dvd as)) \\<and>\n    (\\<forall>a\\<in>{a \\<in> set as. is_dvd a}.\n        I\\<^sub>Z a (x mod zlcms (map divisor (filter is_dvd as)) # xs))", "by(simp add: zlcms_pos)"], ["proof (state)\nthis:\n  0 \\<le> x mod zlcms (map divisor (filter is_dvd as)) \\<and>\n  x mod zlcms (map divisor (filter is_dvd as))\n  < zlcms (map divisor (filter is_dvd as)) \\<and>\n  (\\<forall>a\\<in>{a \\<in> set as. is_dvd a}.\n      I\\<^sub>Z a (x mod zlcms (map divisor (filter is_dvd as)) # xs))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x\\<ge>0.\n     x < zlcms (map divisor (filter is_dvd as)) \\<and>\n     (\\<forall>a\\<in>{a \\<in> set as. is_dvd a}. I\\<^sub>Z a (x # xs))\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs\n 2. \\<not> ?P \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "ultimately"], ["proof (chain)\npicking this:\n  lbounds as = []\n  \\<exists>x\\<ge>0.\n     x < zlcms (map divisor (filter is_dvd as)) \\<and>\n     (\\<forall>a\\<in>{a \\<in> set as. is_dvd a}. I\\<^sub>Z a (x # xs))", "show ?thesis"], ["proof (prove)\nusing this:\n  lbounds as = []\n  \\<exists>x\\<ge>0.\n     x < zlcms (map divisor (filter is_dvd as)) \\<and>\n     (\\<forall>a\\<in>{a \\<in> set as. is_dvd a}. I\\<^sub>Z a (x # xs))\n\ngoal (1 subgoal):\n 1. Z.I (qe_pres\\<^sub>1 as) xs", "by (auto simp:qe_pres\\<^sub>1_def IZ_asubst)"], ["proof (state)\nthis:\n  Z.I (qe_pres\\<^sub>1 as) xs\n\ngoal (1 subgoal):\n 1. lbounds as \\<noteq> [] \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. lbounds as \\<noteq> [] \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "assume \"?lbs \\<noteq> []\""], ["proof (state)\nthis:\n  lbounds as \\<noteq> []\n\ngoal (1 subgoal):\n 1. lbounds as \\<noteq> [] \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "let ?L = \"{i - \\<langle>ks,xs\\<rangle> |ks i. (i,ks) \\<in> set(lbounds as)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. lbounds as \\<noteq> [] \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "let ?lm = \"Max ?L\""], ["proof (state)\ngoal (1 subgoal):\n 1. lbounds as \\<noteq> [] \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "let ?n = \"(x - ?lm) mod ?lcm\""], ["proof (state)\ngoal (1 subgoal):\n 1. lbounds as \\<noteq> [] \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "have \"finite ?L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}", "have \"finite((\\<lambda>(i,ks). i-\\<langle>ks,xs\\<rangle>) ` set(lbounds as) )\" (is \"finite ?B\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     ((\\<lambda>(i, ks). i - \\<langle>ks,xs\\<rangle>) ` set (lbounds as))", "by simp"], ["proof (state)\nthis:\n  finite\n   ((\\<lambda>(i, ks). i - \\<langle>ks,xs\\<rangle>) ` set (lbounds as))\n\ngoal (1 subgoal):\n 1. finite\n     {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}", "also"], ["proof (state)\nthis:\n  finite\n   ((\\<lambda>(i, ks). i - \\<langle>ks,xs\\<rangle>) ` set (lbounds as))\n\ngoal (1 subgoal):\n 1. finite\n     {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}", "have \"?B = ?L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(i, ks). i - \\<langle>ks,xs\\<rangle>) ` set (lbounds as) =\n    {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>(i, ks). i - \\<langle>ks,xs\\<rangle>) ` set (lbounds as) =\n  {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}\n\ngoal (1 subgoal):\n 1. finite\n     {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}", "finally"], ["proof (chain)\npicking this:\n  finite {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}", "show ?thesis"], ["proof (prove)\nusing this:\n  finite {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}\n\ngoal (1 subgoal):\n 1. finite\n     {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}", "by auto"], ["proof (state)\nthis:\n  finite {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}\n\ngoal (1 subgoal):\n 1. lbounds as \\<noteq> [] \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "moreover"], ["proof (state)\nthis:\n  finite {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}\n\ngoal (1 subgoal):\n 1. lbounds as \\<noteq> [] \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "have \"?L \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i - \\<langle>ks,xs\\<rangle> |ks i.\n     (i, ks) \\<in> set (lbounds as)} \\<noteq>\n    {}", "using \\<open>?lbs \\<noteq> []\\<close>"], ["proof (prove)\nusing this:\n  lbounds as \\<noteq> []\n\ngoal (1 subgoal):\n 1. {i - \\<langle>ks,xs\\<rangle> |ks i.\n     (i, ks) \\<in> set (lbounds as)} \\<noteq>\n    {}", "by(fastforce simp:neq_Nil_conv)"], ["proof (state)\nthis:\n  {i - \\<langle>ks,xs\\<rangle> |ks i.\n   (i, ks) \\<in> set (lbounds as)} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. lbounds as \\<noteq> [] \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "ultimately"], ["proof (chain)\npicking this:\n  finite {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}\n  {i - \\<langle>ks,xs\\<rangle> |ks i.\n   (i, ks) \\<in> set (lbounds as)} \\<noteq>\n  {}", "have \"?lm \\<in> ?L\""], ["proof (prove)\nusing this:\n  finite {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}\n  {i - \\<langle>ks,xs\\<rangle> |ks i.\n   (i, ks) \\<in> set (lbounds as)} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}\n    \\<in> {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}", "by(rule Max_in)"], ["proof (state)\nthis:\n  Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}\n  \\<in> {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}\n\ngoal (1 subgoal):\n 1. lbounds as \\<noteq> [] \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "then"], ["proof (chain)\npicking this:\n  Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}\n  \\<in> {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}", "obtain li lks where \"(li,lks)\\<in> set ?lbs\" and lm: \"?lm = li-\\<langle>lks,xs\\<rangle>\""], ["proof (prove)\nusing this:\n  Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}\n  \\<in> {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}\n\ngoal (1 subgoal):\n 1. (\\<And>li lks.\n        \\<lbrakk>(li, lks) \\<in> set (lbounds as);\n         Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n              (i, ks) \\<in> set (lbounds as)} =\n         li - \\<langle>lks,xs\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (li, lks) \\<in> set (lbounds as)\n  Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)} =\n  li - \\<langle>lks,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. lbounds as \\<noteq> [] \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "moreover"], ["proof (state)\nthis:\n  (li, lks) \\<in> set (lbounds as)\n  Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)} =\n  li - \\<langle>lks,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. lbounds as \\<noteq> [] \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "have n: \"0 \\<le> ?n \\<and> ?n < ?lcm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (x -\n             Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n                  (i, ks) \\<in> set (lbounds as)}) mod\n            zlcms (map divisor (filter is_dvd as)) \\<and>\n    (x -\n     Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n          (i, ks) \\<in> set (lbounds as)}) mod\n    zlcms (map divisor (filter is_dvd as))\n    < zlcms (map divisor (filter is_dvd as))", "using norm"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>set as. divisor a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> (x -\n             Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n                  (i, ks) \\<in> set (lbounds as)}) mod\n            zlcms (map divisor (filter is_dvd as)) \\<and>\n    (x -\n     Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n          (i, ks) \\<in> set (lbounds as)}) mod\n    zlcms (map divisor (filter is_dvd as))\n    < zlcms (map divisor (filter is_dvd as))", "by(simp add:zlcms_pos)"], ["proof (state)\nthis:\n  0 \\<le> (x -\n           Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n                (i, ks) \\<in> set (lbounds as)}) mod\n          zlcms (map divisor (filter is_dvd as)) \\<and>\n  (x -\n   Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)}) mod\n  zlcms (map divisor (filter is_dvd as))\n  < zlcms (map divisor (filter is_dvd as))\n\ngoal (1 subgoal):\n 1. lbounds as \\<noteq> [] \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "moreover"], ["proof (state)\nthis:\n  0 \\<le> (x -\n           Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n                (i, ks) \\<in> set (lbounds as)}) mod\n          zlcms (map divisor (filter is_dvd as)) \\<and>\n  (x -\n   Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)}) mod\n  zlcms (map divisor (filter is_dvd as))\n  < zlcms (map divisor (filter is_dvd as))\n\ngoal (1 subgoal):\n 1. lbounds as \\<noteq> [] \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "{"], ["proof (state)\nthis:\n  0 \\<le> (x -\n           Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n                (i, ks) \\<in> set (lbounds as)}) mod\n          zlcms (map divisor (filter is_dvd as)) \\<and>\n  (x -\n   Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)}) mod\n  zlcms (map divisor (filter is_dvd as))\n  < zlcms (map divisor (filter is_dvd as))\n\ngoal (1 subgoal):\n 1. lbounds as \\<noteq> [] \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. lbounds as \\<noteq> [] \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "assume \"a \\<in> set as\""], ["proof (state)\nthis:\n  a \\<in> set as\n\ngoal (1 subgoal):\n 1. lbounds as \\<noteq> [] \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "with x"], ["proof (chain)\npicking this:\n  \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n  a \\<in> set as", "have \"I\\<^sub>Z a (x # xs)\""], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n  a \\<in> set as\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a (x # xs)", "by blast"], ["proof (state)\nthis:\n  I\\<^sub>Z a (x # xs)\n\ngoal (1 subgoal):\n 1. lbounds as \\<noteq> [] \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "have \"I\\<^sub>Z a ((li + ?n - \\<langle>lks,xs\\<rangle>) # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "assume \"a \\<in> ?Ls\""], ["proof (state)\nthis:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False}\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "then"], ["proof (chain)\npicking this:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False}", "obtain i ks where [simp]: \"a = Le i (1#ks)\""], ["proof (prove)\nusing this:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False}\n\ngoal (1 subgoal):\n 1. (\\<And>i ks.\n        a = Le i (1 # ks) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using hd"], ["proof (prove)\nusing this:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False}\n  \\<forall>a\\<in>set as. hd_coeff_is1 a\n\ngoal (1 subgoal):\n 1. (\\<And>i ks.\n        a = Le i (1 # ks) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(fastforce split:atom.splits list.splits)"], ["proof (state)\nthis:\n  a = Le i (1 # ks)\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "from \\<open>a \\<in> ?Ls\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False}", "have \"i-\\<langle>ks,xs\\<rangle> \\<in> ?L\""], ["proof (prove)\nusing this:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> 0 < k | _ \\<Rightarrow> False}\n\ngoal (1 subgoal):\n 1. i - \\<langle>ks,xs\\<rangle>\n    \\<in> {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}", "by(fastforce simp:set_lbounds)"], ["proof (state)\nthis:\n  i - \\<langle>ks,xs\\<rangle>\n  \\<in> {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "hence \"i-\\<langle>ks,xs\\<rangle> \\<le> li - \\<langle>lks,xs\\<rangle>\""], ["proof (prove)\nusing this:\n  i - \\<langle>ks,xs\\<rangle>\n  \\<in> {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}\n\ngoal (1 subgoal):\n 1. i - \\<langle>ks,xs\\<rangle> \\<le> li - \\<langle>lks,xs\\<rangle>", "using lm[symmetric] \\<open>finite ?L\\<close> \\<open>?L \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  i - \\<langle>ks,xs\\<rangle>\n  \\<in> {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}\n  li - \\<langle>lks,xs\\<rangle> =\n  Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}\n  finite {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)}\n  {i - \\<langle>ks,xs\\<rangle> |ks i.\n   (i, ks) \\<in> set (lbounds as)} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. i - \\<langle>ks,xs\\<rangle> \\<le> li - \\<langle>lks,xs\\<rangle>", "by auto"], ["proof (state)\nthis:\n  i - \\<langle>ks,xs\\<rangle> \\<le> li - \\<langle>lks,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  i - \\<langle>ks,xs\\<rangle> \\<le> li - \\<langle>lks,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "using n"], ["proof (prove)\nusing this:\n  i - \\<langle>ks,xs\\<rangle> \\<le> li - \\<langle>lks,xs\\<rangle>\n  0 \\<le> (x -\n           Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n                (i, ks) \\<in> set (lbounds as)}) mod\n          zlcms (map divisor (filter is_dvd as)) \\<and>\n  (x -\n   Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)}) mod\n  zlcms (map divisor (filter is_dvd as))\n  < zlcms (map divisor (filter is_dvd as))\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "by simp"], ["proof (state)\nthis:\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "}"], ["proof (state)\nthis:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> 0 < k\n           | _ \\<Rightarrow> False} \\<Longrightarrow>\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "moreover"], ["proof (state)\nthis:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> 0 < k\n           | _ \\<Rightarrow> False} \\<Longrightarrow>\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "{"], ["proof (state)\nthis:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> 0 < k\n           | _ \\<Rightarrow> False} \\<Longrightarrow>\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "assume \"a \\<in> ?Us\""], ["proof (state)\nthis:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "then"], ["proof (chain)\npicking this:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}", "obtain i ks where [simp]: \"a = Le i (-1#ks)\""], ["proof (prove)\nusing this:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}\n\ngoal (1 subgoal):\n 1. (\\<And>i ks.\n        a = Le i (- 1 # ks) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using hd"], ["proof (prove)\nusing this:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0 | _ \\<Rightarrow> False}\n  \\<forall>a\\<in>set as. hd_coeff_is1 a\n\ngoal (1 subgoal):\n 1. (\\<And>i ks.\n        a = Le i (- 1 # ks) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(fastforce split:atom.splits list.splits)"], ["proof (state)\nthis:\n  a = Le i (- 1 # ks)\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "have \"Le li (1#lks) \\<in> set as\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Le li (1 # lks) \\<in> set as", "using \\<open>(li,lks) \\<in> set ?lbs\\<close> hd"], ["proof (prove)\nusing this:\n  (li, lks) \\<in> set (lbounds as)\n  \\<forall>a\\<in>set as. hd_coeff_is1 a\n\ngoal (1 subgoal):\n 1. Le li (1 # lks) \\<in> set as", "by(auto simp:set_lbounds)"], ["proof (state)\nthis:\n  Le li (1 # lks) \\<in> set as\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "hence \"li - \\<langle>lks,xs\\<rangle> \\<le> x\""], ["proof (prove)\nusing this:\n  Le li (1 # lks) \\<in> set as\n\ngoal (1 subgoal):\n 1. li - \\<langle>lks,xs\\<rangle> \\<le> x", "using x"], ["proof (prove)\nusing this:\n  Le li (1 # lks) \\<in> set as\n  \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs)\n\ngoal (1 subgoal):\n 1. li - \\<langle>lks,xs\\<rangle> \\<le> x", "by auto"], ["proof (state)\nthis:\n  li - \\<langle>lks,xs\\<rangle> \\<le> x\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "hence \"(x - ?lm) mod ?lcm \\<le> x - ?lm\""], ["proof (prove)\nusing this:\n  li - \\<langle>lks,xs\\<rangle> \\<le> x\n\ngoal (1 subgoal):\n 1. (x -\n     Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n          (i, ks) \\<in> set (lbounds as)}) mod\n    zlcms (map divisor (filter is_dvd as))\n    \\<le> x -\n          Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n               (i, ks) \\<in> set (lbounds as)}", "using lm"], ["proof (prove)\nusing this:\n  li - \\<langle>lks,xs\\<rangle> \\<le> x\n  Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)} =\n  li - \\<langle>lks,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. (x -\n     Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n          (i, ks) \\<in> set (lbounds as)}) mod\n    zlcms (map divisor (filter is_dvd as))\n    \\<le> x -\n          Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n               (i, ks) \\<in> set (lbounds as)}", "by(simp add: zmod_le_nonneg_dividend)"], ["proof (state)\nthis:\n  (x -\n   Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)}) mod\n  zlcms (map divisor (filter is_dvd as))\n  \\<le> x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  (x -\n   Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)}) mod\n  zlcms (map divisor (filter is_dvd as))\n  \\<le> x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "using \\<open>I\\<^sub>Z a (x # xs)\\<close> lm"], ["proof (prove)\nusing this:\n  (x -\n   Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)}) mod\n  zlcms (map divisor (filter is_dvd as))\n  \\<le> x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}\n  I\\<^sub>Z a (x # xs)\n  Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)} =\n  li - \\<langle>lks,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "by auto"], ["proof (state)\nthis:\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "}"], ["proof (state)\nthis:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0\n           | _ \\<Rightarrow> False} \\<Longrightarrow>\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "moreover"], ["proof (state)\nthis:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0\n           | _ \\<Rightarrow> False} \\<Longrightarrow>\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "{"], ["proof (state)\nthis:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0\n           | _ \\<Rightarrow> False} \\<Longrightarrow>\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "assume \"a \\<in> ?Ds\""], ["proof (state)\nthis:\n  a \\<in> {a \\<in> set as. is_dvd a}\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "have ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "proof(rule I_cyclic[THEN iffD2, OF _ _ _ \\<open>I\\<^sub>Z a (x # xs)\\<close>])"], ["proof (state)\ngoal (3 subgoals):\n 1. is_dvd a\n 2. hd_coeff a = 1\n 3. (li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) mod\n    divisor a =\n    x mod divisor a", "show \"is_dvd a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_dvd a", "using \\<open>a \\<in> ?Ds\\<close>"], ["proof (prove)\nusing this:\n  a \\<in> {a \\<in> set as. is_dvd a}\n\ngoal (1 subgoal):\n 1. is_dvd a", "by simp"], ["proof (state)\nthis:\n  is_dvd a\n\ngoal (2 subgoals):\n 1. hd_coeff a = 1\n 2. (li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) mod\n    divisor a =\n    x mod divisor a", "show \"hd_coeff a = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd_coeff a = 1", "using \\<open>a \\<in> ?Ds\\<close> hd"], ["proof (prove)\nusing this:\n  a \\<in> {a \\<in> set as. is_dvd a}\n  \\<forall>a\\<in>set as. hd_coeff_is1 a\n\ngoal (1 subgoal):\n 1. hd_coeff a = 1", "by(fastforce split:atom.splits list.splits)"], ["proof (state)\nthis:\n  hd_coeff a = 1\n\ngoal (1 subgoal):\n 1. (li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) mod\n    divisor a =\n    x mod divisor a", "have \"li + (x-?lm) mod ?lcm - \\<langle>lks,xs\\<rangle> = ?lm + (x-?lm) mod ?lcm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. li +\n    (x -\n     Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n          (i, ks) \\<in> set (lbounds as)}) mod\n    zlcms (map divisor (filter is_dvd as)) -\n    \\<langle>lks,xs\\<rangle> =\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)} +\n    (x -\n     Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n          (i, ks) \\<in> set (lbounds as)}) mod\n    zlcms (map divisor (filter is_dvd as))", "using lm"], ["proof (prove)\nusing this:\n  Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)} =\n  li - \\<langle>lks,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. li +\n    (x -\n     Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n          (i, ks) \\<in> set (lbounds as)}) mod\n    zlcms (map divisor (filter is_dvd as)) -\n    \\<langle>lks,xs\\<rangle> =\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)} +\n    (x -\n     Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n          (i, ks) \\<in> set (lbounds as)}) mod\n    zlcms (map divisor (filter is_dvd as))", "by arith"], ["proof (state)\nthis:\n  li +\n  (x -\n   Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)}) mod\n  zlcms (map divisor (filter is_dvd as)) -\n  \\<langle>lks,xs\\<rangle> =\n  Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)} +\n  (x -\n   Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)}) mod\n  zlcms (map divisor (filter is_dvd as))\n\ngoal (1 subgoal):\n 1. (li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) mod\n    divisor a =\n    x mod divisor a", "hence \"(li + (x-?lm) mod ?lcm - \\<langle>lks,xs\\<rangle>) mod divisor a =\n                     (?lm + (x-?lm) mod ?lcm) mod divisor a\""], ["proof (prove)\nusing this:\n  li +\n  (x -\n   Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)}) mod\n  zlcms (map divisor (filter is_dvd as)) -\n  \\<langle>lks,xs\\<rangle> =\n  Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)} +\n  (x -\n   Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)}) mod\n  zlcms (map divisor (filter is_dvd as))\n\ngoal (1 subgoal):\n 1. (li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) mod\n    divisor a =\n    (Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n          (i, ks) \\<in> set (lbounds as)} +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as))) mod\n    divisor a", "by (simp only:)"], ["proof (state)\nthis:\n  (li +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)}) mod\n   zlcms (map divisor (filter is_dvd as)) -\n   \\<langle>lks,xs\\<rangle>) mod\n  divisor a =\n  (Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)} +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)}) mod\n   zlcms (map divisor (filter is_dvd as))) mod\n  divisor a\n\ngoal (1 subgoal):\n 1. (li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) mod\n    divisor a =\n    x mod divisor a", "also"], ["proof (state)\nthis:\n  (li +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)}) mod\n   zlcms (map divisor (filter is_dvd as)) -\n   \\<langle>lks,xs\\<rangle>) mod\n  divisor a =\n  (Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)} +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)}) mod\n   zlcms (map divisor (filter is_dvd as))) mod\n  divisor a\n\ngoal (1 subgoal):\n 1. (li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) mod\n    divisor a =\n    x mod divisor a", "have \"\\<dots> =\n        (?lm mod divisor a + (x-?lm) mod ?lcm mod divisor a) mod divisor a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n          (i, ks) \\<in> set (lbounds as)} +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as))) mod\n    divisor a =\n    (Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n          (i, ks) \\<in> set (lbounds as)} mod\n     divisor a +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) mod\n     divisor a) mod\n    divisor a", "by (simp add: mod_add_eq)"], ["proof (state)\nthis:\n  (Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)} +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)}) mod\n   zlcms (map divisor (filter is_dvd as))) mod\n  divisor a =\n  (Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)} mod\n   divisor a +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)}) mod\n   zlcms (map divisor (filter is_dvd as)) mod\n   divisor a) mod\n  divisor a\n\ngoal (1 subgoal):\n 1. (li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) mod\n    divisor a =\n    x mod divisor a", "also"], ["proof (state)\nthis:\n  (Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)} +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)}) mod\n   zlcms (map divisor (filter is_dvd as))) mod\n  divisor a =\n  (Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)} mod\n   divisor a +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)}) mod\n   zlcms (map divisor (filter is_dvd as)) mod\n   divisor a) mod\n  divisor a\n\ngoal (1 subgoal):\n 1. (li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) mod\n    divisor a =\n    x mod divisor a", "have\n        \"\\<dots> = (?lm mod divisor a + (x-?lm) mod divisor a) mod divisor a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n          (i, ks) \\<in> set (lbounds as)} mod\n     divisor a +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) mod\n     divisor a) mod\n    divisor a =\n    (Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n          (i, ks) \\<in> set (lbounds as)} mod\n     divisor a +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     divisor a) mod\n    divisor a", "using \\<open>is_dvd a\\<close> \\<open>a\\<in> set as\\<close>"], ["proof (prove)\nusing this:\n  is_dvd a\n  a \\<in> set as\n\ngoal (1 subgoal):\n 1. (Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n          (i, ks) \\<in> set (lbounds as)} mod\n     divisor a +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) mod\n     divisor a) mod\n    divisor a =\n    (Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n          (i, ks) \\<in> set (lbounds as)} mod\n     divisor a +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     divisor a) mod\n    divisor a", "by(simp add: mod_mod_cancel dvd_zlcms)"], ["proof (state)\nthis:\n  (Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)} mod\n   divisor a +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)}) mod\n   zlcms (map divisor (filter is_dvd as)) mod\n   divisor a) mod\n  divisor a =\n  (Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)} mod\n   divisor a +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)}) mod\n   divisor a) mod\n  divisor a\n\ngoal (1 subgoal):\n 1. (li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) mod\n    divisor a =\n    x mod divisor a", "also"], ["proof (state)\nthis:\n  (Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)} mod\n   divisor a +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)}) mod\n   zlcms (map divisor (filter is_dvd as)) mod\n   divisor a) mod\n  divisor a =\n  (Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)} mod\n   divisor a +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)}) mod\n   divisor a) mod\n  divisor a\n\ngoal (1 subgoal):\n 1. (li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) mod\n    divisor a =\n    x mod divisor a", "have \"\\<dots> = (?lm + (x-?lm)) mod divisor a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n          (i, ks) \\<in> set (lbounds as)} mod\n     divisor a +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     divisor a) mod\n    divisor a =\n    (Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n          (i, ks) \\<in> set (lbounds as)} +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)})) mod\n    divisor a", "by(rule mod_add_eq)"], ["proof (state)\nthis:\n  (Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)} mod\n   divisor a +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)}) mod\n   divisor a) mod\n  divisor a =\n  (Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)} +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)})) mod\n  divisor a\n\ngoal (1 subgoal):\n 1. (li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) mod\n    divisor a =\n    x mod divisor a", "also"], ["proof (state)\nthis:\n  (Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)} mod\n   divisor a +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)}) mod\n   divisor a) mod\n  divisor a =\n  (Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)} +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)})) mod\n  divisor a\n\ngoal (1 subgoal):\n 1. (li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) mod\n    divisor a =\n    x mod divisor a", "have \"\\<dots> = x mod divisor a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n          (i, ks) \\<in> set (lbounds as)} +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)})) mod\n    divisor a =\n    x mod divisor a", "by simp"], ["proof (state)\nthis:\n  (Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)} +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)})) mod\n  divisor a =\n  x mod divisor a\n\ngoal (1 subgoal):\n 1. (li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) mod\n    divisor a =\n    x mod divisor a", "finally"], ["proof (chain)\npicking this:\n  (li +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)}) mod\n   zlcms (map divisor (filter is_dvd as)) -\n   \\<langle>lks,xs\\<rangle>) mod\n  divisor a =\n  x mod divisor a", "show \"(li + ?n - \\<langle>lks,xs\\<rangle>) mod divisor a = x mod divisor a\""], ["proof (prove)\nusing this:\n  (li +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)}) mod\n   zlcms (map divisor (filter is_dvd as)) -\n   \\<langle>lks,xs\\<rangle>) mod\n  divisor a =\n  x mod divisor a\n\ngoal (1 subgoal):\n 1. (li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) mod\n    divisor a =\n    x mod divisor a", "using norm"], ["proof (prove)\nusing this:\n  (li +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)}) mod\n   zlcms (map divisor (filter is_dvd as)) -\n   \\<langle>lks,xs\\<rangle>) mod\n  divisor a =\n  x mod divisor a\n  \\<forall>a\\<in>set as. divisor a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) mod\n    divisor a =\n    x mod divisor a", "by(auto simp: zlcms_pos)"], ["proof (state)\nthis:\n  (li +\n   (x -\n    Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n         (i, ks) \\<in> set (lbounds as)}) mod\n   zlcms (map divisor (filter is_dvd as)) -\n   \\<langle>lks,xs\\<rangle>) mod\n  divisor a =\n  x mod divisor a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "}"], ["proof (state)\nthis:\n  a \\<in> {a \\<in> set as. is_dvd a} \\<Longrightarrow>\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "ultimately"], ["proof (chain)\npicking this:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> 0 < k\n           | _ \\<Rightarrow> False} \\<Longrightarrow>\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0\n           | _ \\<Rightarrow> False} \\<Longrightarrow>\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n  a \\<in> {a \\<in> set as. is_dvd a} \\<Longrightarrow>\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> 0 < k\n           | _ \\<Rightarrow> False} \\<Longrightarrow>\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0\n           | _ \\<Rightarrow> False} \\<Longrightarrow>\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n  a \\<in> {a \\<in> set as. is_dvd a} \\<Longrightarrow>\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "using \\<open>a \\<in> set as\\<close> as"], ["proof (prove)\nusing this:\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> 0 < k\n           | _ \\<Rightarrow> False} \\<Longrightarrow>\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n  a \\<in> {a \\<in> set as.\n           case a of Le x [] \\<Rightarrow> False\n           | Le x (k # xa) \\<Rightarrow> k < 0\n           | _ \\<Rightarrow> False} \\<Longrightarrow>\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n  a \\<in> {a \\<in> set as. is_dvd a} \\<Longrightarrow>\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n  a \\<in> set as\n  set as =\n  {a \\<in> set as. is_dvd a} \\<union>\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> 0 < k\n   | _ \\<Rightarrow> False} \\<union>\n  {a \\<in> set as.\n   case a of Le x [] \\<Rightarrow> False | Le x (k # xa) \\<Rightarrow> k < 0\n   | _ \\<Rightarrow> False}\n\ngoal (1 subgoal):\n 1. I\\<^sub>Z a\n     ((li +\n       (x -\n        Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n             (i, ks) \\<in> set (lbounds as)}) mod\n       zlcms (map divisor (filter is_dvd as)) -\n       \\<langle>lks,xs\\<rangle>) #\n      xs)", "by blast"], ["proof (state)\nthis:\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  I\\<^sub>Z a\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n\ngoal (1 subgoal):\n 1. lbounds as \\<noteq> [] \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "}"], ["proof (state)\nthis:\n  ?a2 \\<in> set as \\<Longrightarrow>\n  I\\<^sub>Z ?a2\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n\ngoal (1 subgoal):\n 1. lbounds as \\<noteq> [] \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 as) xs", "ultimately"], ["proof (chain)\npicking this:\n  (li, lks) \\<in> set (lbounds as)\n  Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)} =\n  li - \\<langle>lks,xs\\<rangle>\n  0 \\<le> (x -\n           Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n                (i, ks) \\<in> set (lbounds as)}) mod\n          zlcms (map divisor (filter is_dvd as)) \\<and>\n  (x -\n   Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)}) mod\n  zlcms (map divisor (filter is_dvd as))\n  < zlcms (map divisor (filter is_dvd as))\n  ?a2 \\<in> set as \\<Longrightarrow>\n  I\\<^sub>Z ?a2\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  (li, lks) \\<in> set (lbounds as)\n  Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)} =\n  li - \\<langle>lks,xs\\<rangle>\n  0 \\<le> (x -\n           Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n                (i, ks) \\<in> set (lbounds as)}) mod\n          zlcms (map divisor (filter is_dvd as)) \\<and>\n  (x -\n   Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)}) mod\n  zlcms (map divisor (filter is_dvd as))\n  < zlcms (map divisor (filter is_dvd as))\n  ?a2 \\<in> set as \\<Longrightarrow>\n  I\\<^sub>Z ?a2\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n\ngoal (1 subgoal):\n 1. Z.I (qe_pres\\<^sub>1 as) xs", "using \\<open>?lbs \\<noteq> []\\<close>"], ["proof (prove)\nusing this:\n  (li, lks) \\<in> set (lbounds as)\n  Max {i - \\<langle>ks,xs\\<rangle> |ks i. (i, ks) \\<in> set (lbounds as)} =\n  li - \\<langle>lks,xs\\<rangle>\n  0 \\<le> (x -\n           Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n                (i, ks) \\<in> set (lbounds as)}) mod\n          zlcms (map divisor (filter is_dvd as)) \\<and>\n  (x -\n   Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n        (i, ks) \\<in> set (lbounds as)}) mod\n  zlcms (map divisor (filter is_dvd as))\n  < zlcms (map divisor (filter is_dvd as))\n  ?a2 \\<in> set as \\<Longrightarrow>\n  I\\<^sub>Z ?a2\n   ((li +\n     (x -\n      Max {i - \\<langle>ks,xs\\<rangle> |ks i.\n           (i, ks) \\<in> set (lbounds as)}) mod\n     zlcms (map divisor (filter is_dvd as)) -\n     \\<langle>lks,xs\\<rangle>) #\n    xs)\n  lbounds as \\<noteq> []\n\ngoal (1 subgoal):\n 1. Z.I (qe_pres\\<^sub>1 as) xs", "by (simp (no_asm_simp) add:qe_pres\\<^sub>1_def IZ_asubst split_def)\n           (force simp del:int_nat_eq)"], ["proof (state)\nthis:\n  Z.I (qe_pres\\<^sub>1 as) xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Z.I (qe_pres\\<^sub>1 as) xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Z.I (qe_pres\\<^sub>1 as) xs =\n  (\\<exists>x. \\<forall>a\\<in>set as. I\\<^sub>Z a (x # xs))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  divisors_hd_coeffs1:\nassumes div0: \"\\<forall>a\\<in>set as. divisor a \\<noteq> 0\" and hd0: \"\\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\"\nand a: \"a\\<in>set (hd_coeffs1 as)\" shows \"divisor a \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor a \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. divisor a \\<noteq> 0", "let ?m = \"zlcms(map hd_coeff as)\""], ["proof (state)\ngoal (1 subgoal):\n 1. divisor a \\<noteq> 0", "from a"], ["proof (chain)\npicking this:\n  a \\<in> set (hd_coeffs1 as)", "have \"a = Dvd ?m 0 [1] \\<or> (\\<exists>b \\<in> set as. a = hd_coeff1 ?m b)\"\n    (is \"?A \\<or> ?B\")"], ["proof (prove)\nusing this:\n  a \\<in> set (hd_coeffs1 as)\n\ngoal (1 subgoal):\n 1. a = Dvd (zlcms (map hd_coeff as)) 0 [1] \\<or>\n    (\\<exists>b\\<in>set as. a = hd_coeff1 (zlcms (map hd_coeff as)) b)", "by(auto simp:hd_coeffs1_def)"], ["proof (state)\nthis:\n  a = Dvd (zlcms (map hd_coeff as)) 0 [1] \\<or>\n  (\\<exists>b\\<in>set as. a = hd_coeff1 (zlcms (map hd_coeff as)) b)\n\ngoal (1 subgoal):\n 1. divisor a \\<noteq> 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  a = Dvd (zlcms (map hd_coeff as)) 0 [1] \\<or>\n  (\\<exists>b\\<in>set as. a = hd_coeff1 (zlcms (map hd_coeff as)) b)\n\ngoal (1 subgoal):\n 1. divisor a \\<noteq> 0", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. a = Dvd (zlcms (map hd_coeff as)) 0 [1] \\<Longrightarrow>\n    divisor a \\<noteq> 0\n 2. \\<exists>b\\<in>set as.\n       a = hd_coeff1 (zlcms (map hd_coeff as)) b \\<Longrightarrow>\n    divisor a \\<noteq> 0", "assume ?A"], ["proof (state)\nthis:\n  a = Dvd (zlcms (map hd_coeff as)) 0 [1]\n\ngoal (2 subgoals):\n 1. a = Dvd (zlcms (map hd_coeff as)) 0 [1] \\<Longrightarrow>\n    divisor a \\<noteq> 0\n 2. \\<exists>b\\<in>set as.\n       a = hd_coeff1 (zlcms (map hd_coeff as)) b \\<Longrightarrow>\n    divisor a \\<noteq> 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  a = Dvd (zlcms (map hd_coeff as)) 0 [1]\n\ngoal (1 subgoal):\n 1. divisor a \\<noteq> 0", "using hd0"], ["proof (prove)\nusing this:\n  a = Dvd (zlcms (map hd_coeff as)) 0 [1]\n  \\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. divisor a \\<noteq> 0", "by(auto)"], ["proof (state)\nthis:\n  divisor a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set as.\n       a = hd_coeff1 (zlcms (map hd_coeff as)) b \\<Longrightarrow>\n    divisor a \\<noteq> 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set as.\n       a = hd_coeff1 (zlcms (map hd_coeff as)) b \\<Longrightarrow>\n    divisor a \\<noteq> 0", "assume ?B"], ["proof (state)\nthis:\n  \\<exists>b\\<in>set as. a = hd_coeff1 (zlcms (map hd_coeff as)) b\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set as.\n       a = hd_coeff1 (zlcms (map hd_coeff as)) b \\<Longrightarrow>\n    divisor a \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  \\<exists>b\\<in>set as. a = hd_coeff1 (zlcms (map hd_coeff as)) b", "obtain b where \"b \\<in> set as\" and [simp]: \"a = hd_coeff1 ?m b\""], ["proof (prove)\nusing this:\n  \\<exists>b\\<in>set as. a = hd_coeff1 (zlcms (map hd_coeff as)) b\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in> set as;\n         a = hd_coeff1 (zlcms (map hd_coeff as)) b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  b \\<in> set as\n  a = hd_coeff1 (zlcms (map hd_coeff as)) b\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set as.\n       a = hd_coeff1 (zlcms (map hd_coeff as)) b \\<Longrightarrow>\n    divisor a \\<noteq> 0", "hence b: \"hd_coeff b \\<noteq> 0\" \"divisor b \\<noteq> 0\""], ["proof (prove)\nusing this:\n  b \\<in> set as\n  a = hd_coeff1 (zlcms (map hd_coeff as)) b\n\ngoal (1 subgoal):\n 1. hd_coeff b \\<noteq> 0 &&& divisor b \\<noteq> 0", "using div0 hd0"], ["proof (prove)\nusing this:\n  b \\<in> set as\n  a = hd_coeff1 (zlcms (map hd_coeff as)) b\n  \\<forall>a\\<in>set as. divisor a \\<noteq> 0\n  \\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. hd_coeff b \\<noteq> 0 &&& divisor b \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  hd_coeff b \\<noteq> 0\n  divisor b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set as.\n       a = hd_coeff1 (zlcms (map hd_coeff as)) b \\<Longrightarrow>\n    divisor a \\<noteq> 0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor a \\<noteq> 0", "proof (cases b)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x11 x12. b = Le x11 x12 \\<Longrightarrow> divisor a \\<noteq> 0\n 2. \\<And>x21 x22 x23.\n       b = Dvd x21 x22 x23 \\<Longrightarrow> divisor a \\<noteq> 0\n 3. \\<And>x31 x32 x33.\n       b = NDvd x31 x32 x33 \\<Longrightarrow> divisor a \\<noteq> 0", "case (Le i ks)"], ["proof (state)\nthis:\n  b = Le i ks\n\ngoal (3 subgoals):\n 1. \\<And>x11 x12. b = Le x11 x12 \\<Longrightarrow> divisor a \\<noteq> 0\n 2. \\<And>x21 x22 x23.\n       b = Dvd x21 x22 x23 \\<Longrightarrow> divisor a \\<noteq> 0\n 3. \\<And>x31 x32 x33.\n       b = NDvd x31 x32 x33 \\<Longrightarrow> divisor a \\<noteq> 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  b = Le i ks\n\ngoal (1 subgoal):\n 1. divisor a \\<noteq> 0", "using b"], ["proof (prove)\nusing this:\n  b = Le i ks\n  hd_coeff b \\<noteq> 0\n  divisor b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. divisor a \\<noteq> 0", "by(auto split:list.splits)"], ["proof (state)\nthis:\n  divisor a \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<And>x21 x22 x23.\n       b = Dvd x21 x22 x23 \\<Longrightarrow> divisor a \\<noteq> 0\n 2. \\<And>x31 x32 x33.\n       b = NDvd x31 x32 x33 \\<Longrightarrow> divisor a \\<noteq> 0", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x21 x22 x23.\n       b = Dvd x21 x22 x23 \\<Longrightarrow> divisor a \\<noteq> 0\n 2. \\<And>x31 x32 x33.\n       b = NDvd x31 x32 x33 \\<Longrightarrow> divisor a \\<noteq> 0", "case [simp]: (Dvd d i ks)"], ["proof (state)\nthis:\n  b = Dvd d i ks\n\ngoal (2 subgoals):\n 1. \\<And>x21 x22 x23.\n       b = Dvd x21 x22 x23 \\<Longrightarrow> divisor a \\<noteq> 0\n 2. \\<And>x31 x32 x33.\n       b = NDvd x31 x32 x33 \\<Longrightarrow> divisor a \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  b = Dvd d i ks", "obtain k ks' where [simp]: \"ks = k#ks'\""], ["proof (prove)\nusing this:\n  b = Dvd d i ks\n\ngoal (1 subgoal):\n 1. (\\<And>k ks'. ks = k # ks' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using b"], ["proof (prove)\nusing this:\n  b = Dvd d i ks\n  hd_coeff b \\<noteq> 0\n  divisor b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>k ks'. ks = k # ks' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto split:list.splits)"], ["proof (state)\nthis:\n  ks = k # ks'\n\ngoal (2 subgoals):\n 1. \\<And>x21 x22 x23.\n       b = Dvd x21 x22 x23 \\<Longrightarrow> divisor a \\<noteq> 0\n 2. \\<And>x31 x32 x33.\n       b = NDvd x31 x32 x33 \\<Longrightarrow> divisor a \\<noteq> 0", "have k: \"k \\<in> set(map hd_coeff as)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<in> set (map hd_coeff as)", "using \\<open>b \\<in> set as\\<close>"], ["proof (prove)\nusing this:\n  b \\<in> set as\n\ngoal (1 subgoal):\n 1. k \\<in> set (map hd_coeff as)", "by force"], ["proof (state)\nthis:\n  k \\<in> set (map hd_coeff as)\n\ngoal (2 subgoals):\n 1. \\<And>x21 x22 x23.\n       b = Dvd x21 x22 x23 \\<Longrightarrow> divisor a \\<noteq> 0\n 2. \\<And>x31 x32 x33.\n       b = NDvd x31 x32 x33 \\<Longrightarrow> divisor a \\<noteq> 0", "have \"zlcms (map hd_coeff as) div k \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zlcms (map hd_coeff as) div k \\<noteq> 0", "using b hd0 dvd_zlcms[OF k]"], ["proof (prove)\nusing this:\n  hd_coeff b \\<noteq> 0\n  divisor b \\<noteq> 0\n  \\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\n  k dvd zlcms (map hd_coeff as)\n\ngoal (1 subgoal):\n 1. zlcms (map hd_coeff as) div k \\<noteq> 0", "by(auto simp add:dvd_def)"], ["proof (state)\nthis:\n  zlcms (map hd_coeff as) div k \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<And>x21 x22 x23.\n       b = Dvd x21 x22 x23 \\<Longrightarrow> divisor a \\<noteq> 0\n 2. \\<And>x31 x32 x33.\n       b = NDvd x31 x32 x33 \\<Longrightarrow> divisor a \\<noteq> 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  zlcms (map hd_coeff as) div k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. divisor a \\<noteq> 0", "using b"], ["proof (prove)\nusing this:\n  zlcms (map hd_coeff as) div k \\<noteq> 0\n  hd_coeff b \\<noteq> 0\n  divisor b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. divisor a \\<noteq> 0", "by (simp)"], ["proof (state)\nthis:\n  divisor a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       b = NDvd x31 x32 x33 \\<Longrightarrow> divisor a \\<noteq> 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       b = NDvd x31 x32 x33 \\<Longrightarrow> divisor a \\<noteq> 0", "case [simp]: (NDvd d i ks)"], ["proof (state)\nthis:\n  b = NDvd d i ks\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       b = NDvd x31 x32 x33 \\<Longrightarrow> divisor a \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  b = NDvd d i ks", "obtain k ks' where [simp]: \"ks = k#ks'\""], ["proof (prove)\nusing this:\n  b = NDvd d i ks\n\ngoal (1 subgoal):\n 1. (\\<And>k ks'. ks = k # ks' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using b"], ["proof (prove)\nusing this:\n  b = NDvd d i ks\n  hd_coeff b \\<noteq> 0\n  divisor b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>k ks'. ks = k # ks' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto split:list.splits)"], ["proof (state)\nthis:\n  ks = k # ks'\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       b = NDvd x31 x32 x33 \\<Longrightarrow> divisor a \\<noteq> 0", "have k: \"k \\<in> set(map hd_coeff as)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<in> set (map hd_coeff as)", "using \\<open>b \\<in> set as\\<close>"], ["proof (prove)\nusing this:\n  b \\<in> set as\n\ngoal (1 subgoal):\n 1. k \\<in> set (map hd_coeff as)", "by force"], ["proof (state)\nthis:\n  k \\<in> set (map hd_coeff as)\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       b = NDvd x31 x32 x33 \\<Longrightarrow> divisor a \\<noteq> 0", "have \"zlcms (map hd_coeff as) div k \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zlcms (map hd_coeff as) div k \\<noteq> 0", "using b hd0 dvd_zlcms[OF k]"], ["proof (prove)\nusing this:\n  hd_coeff b \\<noteq> 0\n  divisor b \\<noteq> 0\n  \\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\n  k dvd zlcms (map hd_coeff as)\n\ngoal (1 subgoal):\n 1. zlcms (map hd_coeff as) div k \\<noteq> 0", "by(auto simp add:dvd_def)"], ["proof (state)\nthis:\n  zlcms (map hd_coeff as) div k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       b = NDvd x31 x32 x33 \\<Longrightarrow> divisor a \\<noteq> 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  zlcms (map hd_coeff as) div k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. divisor a \\<noteq> 0", "using b"], ["proof (prove)\nusing this:\n  zlcms (map hd_coeff as) div k \\<noteq> 0\n  hd_coeff b \\<noteq> 0\n  divisor b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. divisor a \\<noteq> 0", "by (simp)"], ["proof (state)\nthis:\n  divisor a \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  divisor a \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  divisor a \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hd_coeff_is1_hd_coeffs1:\nassumes hd0: \"\\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\"\nand a: \"a\\<in>set (hd_coeffs1 as)\" shows \"hd_coeff_is1 a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd_coeff_is1 a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hd_coeff_is1 a", "let ?m = \"zlcms(map hd_coeff as)\""], ["proof (state)\ngoal (1 subgoal):\n 1. hd_coeff_is1 a", "from a"], ["proof (chain)\npicking this:\n  a \\<in> set (hd_coeffs1 as)", "have \"a = Dvd ?m 0 [1] \\<or> (\\<exists>b \\<in> set as. a = hd_coeff1 ?m b)\"\n    (is \"?A \\<or> ?B\")"], ["proof (prove)\nusing this:\n  a \\<in> set (hd_coeffs1 as)\n\ngoal (1 subgoal):\n 1. a = Dvd (zlcms (map hd_coeff as)) 0 [1] \\<or>\n    (\\<exists>b\\<in>set as. a = hd_coeff1 (zlcms (map hd_coeff as)) b)", "by(auto simp:hd_coeffs1_def)"], ["proof (state)\nthis:\n  a = Dvd (zlcms (map hd_coeff as)) 0 [1] \\<or>\n  (\\<exists>b\\<in>set as. a = hd_coeff1 (zlcms (map hd_coeff as)) b)\n\ngoal (1 subgoal):\n 1. hd_coeff_is1 a", "thus ?thesis"], ["proof (prove)\nusing this:\n  a = Dvd (zlcms (map hd_coeff as)) 0 [1] \\<or>\n  (\\<exists>b\\<in>set as. a = hd_coeff1 (zlcms (map hd_coeff as)) b)\n\ngoal (1 subgoal):\n 1. hd_coeff_is1 a", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. a = Dvd (zlcms (map hd_coeff as)) 0 [1] \\<Longrightarrow> hd_coeff_is1 a\n 2. \\<exists>b\\<in>set as.\n       a = hd_coeff1 (zlcms (map hd_coeff as)) b \\<Longrightarrow>\n    hd_coeff_is1 a", "assume ?A"], ["proof (state)\nthis:\n  a = Dvd (zlcms (map hd_coeff as)) 0 [1]\n\ngoal (2 subgoals):\n 1. a = Dvd (zlcms (map hd_coeff as)) 0 [1] \\<Longrightarrow> hd_coeff_is1 a\n 2. \\<exists>b\\<in>set as.\n       a = hd_coeff1 (zlcms (map hd_coeff as)) b \\<Longrightarrow>\n    hd_coeff_is1 a", "thus ?thesis"], ["proof (prove)\nusing this:\n  a = Dvd (zlcms (map hd_coeff as)) 0 [1]\n\ngoal (1 subgoal):\n 1. hd_coeff_is1 a", "using hd0"], ["proof (prove)\nusing this:\n  a = Dvd (zlcms (map hd_coeff as)) 0 [1]\n  \\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. hd_coeff_is1 a", "by simp"], ["proof (state)\nthis:\n  hd_coeff_is1 a\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set as.\n       a = hd_coeff1 (zlcms (map hd_coeff as)) b \\<Longrightarrow>\n    hd_coeff_is1 a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set as.\n       a = hd_coeff1 (zlcms (map hd_coeff as)) b \\<Longrightarrow>\n    hd_coeff_is1 a", "assume ?B"], ["proof (state)\nthis:\n  \\<exists>b\\<in>set as. a = hd_coeff1 (zlcms (map hd_coeff as)) b\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set as.\n       a = hd_coeff1 (zlcms (map hd_coeff as)) b \\<Longrightarrow>\n    hd_coeff_is1 a", "then"], ["proof (chain)\npicking this:\n  \\<exists>b\\<in>set as. a = hd_coeff1 (zlcms (map hd_coeff as)) b", "obtain b where \"b \\<in> set as\" and [simp]: \"a = hd_coeff1 ?m b\""], ["proof (prove)\nusing this:\n  \\<exists>b\\<in>set as. a = hd_coeff1 (zlcms (map hd_coeff as)) b\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in> set as;\n         a = hd_coeff1 (zlcms (map hd_coeff as)) b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  b \\<in> set as\n  a = hd_coeff1 (zlcms (map hd_coeff as)) b\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set as.\n       a = hd_coeff1 (zlcms (map hd_coeff as)) b \\<Longrightarrow>\n    hd_coeff_is1 a", "hence b: \"hd_coeff b \\<noteq> 0\""], ["proof (prove)\nusing this:\n  b \\<in> set as\n  a = hd_coeff1 (zlcms (map hd_coeff as)) b\n\ngoal (1 subgoal):\n 1. hd_coeff b \\<noteq> 0", "using hd0"], ["proof (prove)\nusing this:\n  b \\<in> set as\n  a = hd_coeff1 (zlcms (map hd_coeff as)) b\n  \\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. hd_coeff b \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  hd_coeff b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set as.\n       a = hd_coeff1 (zlcms (map hd_coeff as)) b \\<Longrightarrow>\n    hd_coeff_is1 a", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. hd_coeff_is1 a", "using b"], ["proof (prove)\nusing this:\n  hd_coeff b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. hd_coeff_is1 a", "by (cases b) (auto simp: sgn_if split:list.splits)"], ["proof (state)\nthis:\n  hd_coeff_is1 a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  hd_coeff_is1 a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma I_qe_pres\\<^sub>1_o:\n \"\\<lbrakk> \\<forall>a \\<in> set as. divisor a \\<noteq> 0; \\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0 \\<rbrakk> \\<Longrightarrow>\n  Z.I ((qe_pres\\<^sub>1 \\<circ> hd_coeffs1) as) e = (\\<exists>x. \\<forall>a\\<in> set as. I\\<^sub>Z a (x#e))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>a\\<in>set as. divisor a \\<noteq> 0;\n     \\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> Z.I ((qe_pres\\<^sub>1 \\<circ> hd_coeffs1) as) e =\n                      (\\<exists>x.\n                          \\<forall>a\\<in>set as. I\\<^sub>Z a (x # e))", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>a\\<in>set as. divisor a \\<noteq> 0;\n     \\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> Z.I (qe_pres\\<^sub>1 (hd_coeffs1 as)) e =\n                      (\\<exists>x.\n                          \\<forall>a\\<in>set as. I\\<^sub>Z a (x # e))", "apply(subst I_qe_pres\\<^sub>1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>a\\<in>set as. divisor a \\<noteq> 0;\n     \\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>set (hd_coeffs1 as).\n                         divisor a \\<noteq> 0\n 2. \\<lbrakk>\\<forall>a\\<in>set as. divisor a \\<noteq> 0;\n     \\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>set (hd_coeffs1 as). hd_coeff_is1 a\n 3. \\<lbrakk>\\<forall>a\\<in>set as. divisor a \\<noteq> 0;\n     \\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>x.\n                          \\<forall>a\\<in>set (hd_coeffs1 as).\n                             I\\<^sub>Z a (x # e)) =\n                      (\\<exists>x.\n                          \\<forall>a\\<in>set as. I\\<^sub>Z a (x # e))", "apply(simp add: divisors_hd_coeffs1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>a\\<in>set as. divisor a \\<noteq> 0;\n     \\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>set (hd_coeffs1 as). hd_coeff_is1 a\n 2. \\<lbrakk>\\<forall>a\\<in>set as. divisor a \\<noteq> 0;\n     \\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>x.\n                          \\<forall>a\\<in>set (hd_coeffs1 as).\n                             I\\<^sub>Z a (x # e)) =\n                      (\\<exists>x.\n                          \\<forall>a\\<in>set as. I\\<^sub>Z a (x # e))", "apply(simp add: hd_coeff_is1_hd_coeffs1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>a\\<in>set as. divisor a \\<noteq> 0;\n     \\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>x.\n                          \\<forall>a\\<in>set (hd_coeffs1 as).\n                             I\\<^sub>Z a (x # e)) =\n                      (\\<exists>x.\n                          \\<forall>a\\<in>set as. I\\<^sub>Z a (x # e))", "using I_hd_coeffs1"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>set ?as. hd_coeff a \\<noteq> 0 \\<Longrightarrow>\n  (\\<exists>x. \\<forall>a\\<in>set (hd_coeffs1 ?as). I\\<^sub>Z a (x # ?xs)) =\n  (\\<exists>x. \\<forall>a\\<in>set ?as. I\\<^sub>Z a (x # ?xs))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>a\\<in>set as. divisor a \\<noteq> 0;\n     \\<forall>a\\<in>set as. hd_coeff a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>x.\n                          \\<forall>a\\<in>set (hd_coeffs1 as).\n                             I\\<^sub>Z a (x # e)) =\n                      (\\<exists>x.\n                          \\<forall>a\\<in>set as. I\\<^sub>Z a (x # e))", "apply(simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition \"qe_pres = Z.lift_dnf_qe (qe_pres\\<^sub>1 \\<circ> hd_coeffs1)\""], ["", "lemma qfree_qe_pres_o: \"qfree ((qe_pres\\<^sub>1 \\<circ> hd_coeffs1) as)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qfree ((qe_pres\\<^sub>1 \\<circ> hd_coeffs1) as)", "by(auto simp:qe_pres\\<^sub>1_def intro!:qfree_list_disj)"], ["", "lemma normal_qe_pres\\<^sub>1_o:\n  \"\\<forall>a \\<in> set as. hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0 \\<Longrightarrow>\n   Z.normal ((qe_pres\\<^sub>1 \\<circ> hd_coeffs1) as)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>set as.\n       hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0 \\<Longrightarrow>\n    Z.normal ((qe_pres\\<^sub>1 \\<circ> hd_coeffs1) as)", "supply image_cong_simp [cong del]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>set as.\n       hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0 \\<Longrightarrow>\n    Z.normal ((qe_pres\\<^sub>1 \\<circ> hd_coeffs1) as)", "apply(auto simp:qe_pres\\<^sub>1_def Z.normal_def\n   dest!:atoms_list_disjE atoms_list_conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) = []; divisor x = 0; 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)));\n        x \\<in> set (hd_coeffs1 as); is_dvd x\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(simp add: hd_coeffs1_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor x = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        x = Dvd (zlcms (map hd_coeff as)) 0 [1] \\<or>\n        x \\<in> hd_coeff1 (zlcms (map hd_coeff as)) ` set as;\n        is_dvd x\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor x = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd x; x = Dvd (zlcms (map hd_coeff as)) 0 [1]\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor x = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd x;\n        x \\<in> hd_coeff1 (zlcms (map hd_coeff as)) ` set as\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor x = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd x;\n        x \\<in> hd_coeff1 (zlcms (map hd_coeff as)) ` set as\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply (clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa);\n        xa \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(case_tac xa)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa x11 x12.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = Le x11 x12\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x21 x22 x23.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = Dvd x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(rename_tac list)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa x11 list.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = Le x11 list\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x21 x22 x23.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = Dvd x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(case_tac list)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n xa x11 list.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = Le x11 list; list = []\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x11 list a lista.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = Le x11 list; list = a # lista\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>n xa x21 x22 x23.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = Dvd x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa x11 list a lista.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = Le x11 list; list = a # lista\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x21 x22 x23.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = Dvd x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply (simp split:if_split_asm)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa x21 x22 x23.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = Dvd x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(rename_tac list)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa x21 x22 list.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = Dvd x21 x22 list\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(case_tac list)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa x21 x22 list.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = Dvd x21 x22 list; list = []\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = Dvd x21 x22 list; list = a # lista\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = Dvd x21 x22 list; list = a # lista\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply (simp split:if_split_asm)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd 0 x22 (0 # lista) \\<in> set as; xa = Dvd 0 x22 (0 # lista);\n        list = 0 # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a = 0; x21 = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        zlcms (map hd_coeff as) div a = 0 \\<or> x21 = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        zlcms (map hd_coeff as) div a = 0 \\<or> x21 = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(erule disjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0; zlcms (map hd_coeff as) div a = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0; x21 = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0; x21 = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0; zlcms (map hd_coeff as) div a = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0; zlcms (map hd_coeff as) div a = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(simp add:zdiv_eq_0_iff)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(subgoal_tac \"a \\<in> set(map hd_coeff as)\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and> a < zlcms (map hd_coeff as);\n        a \\<in> set (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> a \\<in> set (map hd_coeff as)\n 3. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> a \\<in> set (map hd_coeff as)\n 2. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and> a < zlcms (map hd_coeff as);\n        a \\<in> set (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply force"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and> a < zlcms (map hd_coeff as);\n        a \\<in> set (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(subgoal_tac \"\\<forall>i\\<in> set(map hd_coeff as). i \\<noteq> 0\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and> a < zlcms (map hd_coeff as);\n        a \\<in> set (map hd_coeff as);\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and> a < zlcms (map hd_coeff as);\n        a \\<in> set (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\n 3. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and> a < zlcms (map hd_coeff as);\n        a \\<in> set (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\n 2. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and> a < zlcms (map hd_coeff as);\n        a \\<in> set (map hd_coeff as);\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa x21 x22 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and> a < zlcms (map hd_coeff as);\n        a \\<in> set (map hd_coeff as);\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply (metis elem_le_zlcms linorder_not_le zlcms_pos)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(rename_tac list)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa x31 x32 list.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 list\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(case_tac list)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa x31 x32 list.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 list; list = []\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 list; list = a # lista\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0; 0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        is_dvd (hd_coeff1 (zlcms (map hd_coeff as)) xa); xa \\<in> set as;\n        xa = NDvd x31 x32 list; list = a # lista\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply (simp split:if_split_asm)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd 0 x32 (0 # lista) \\<in> set as; xa = NDvd 0 x32 (0 # lista);\n        list = 0 # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a = 0; x31 = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        zlcms (map hd_coeff as) div a = 0 \\<or> x31 = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        zlcms (map hd_coeff as) div a = 0 \\<or> x31 = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(simp add:zdiv_eq_0_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(subgoal_tac \"\\<forall>i\\<in> set(map hd_coeff as). i \\<noteq> 0\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0;\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\n 3. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\n 2. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0;\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0;\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(subgoal_tac \"a \\<in> set(map hd_coeff as)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0;\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0;\n        a \\<in> set (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0;\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> a \\<in> set (map hd_coeff as)\n 3. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0;\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> a \\<in> set (map hd_coeff as)\n 2. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0;\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0;\n        a \\<in> set (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply force"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0;\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0;\n        a \\<in> set (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0; \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0;\n        a \\<in> set (map hd_coeff as);\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0; \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0;\n        a \\<in> set (map hd_coeff as);\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply (metis elem_le_zlcms linorder_not_le)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0; \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0;\n        a \\<in> set (map hd_coeff as);\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0; \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0;\n        a \\<in> set (map hd_coeff as);\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0; \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0;\n        a \\<in> set (map hd_coeff as); x31 = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply (metis linorder_not_le zlcms_pos)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa x31 x32 list a lista.\n       \\<lbrakk>0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) =\n        [];\n        a \\<noteq> 0; \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0;\n        a \\<in> set (map hd_coeff as); x31 = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds (hd_coeffs1 as) \\<noteq> []; divisor x = 0;\n        (aa, b) \\<in> set (lbounds (hd_coeffs1 as));\n        x \\<in> set (hd_coeffs1 as); 0 \\<le> n;\n        n < zlcms (map divisor (filter is_dvd (hd_coeffs1 as)))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(simp add: hd_coeffs1_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor x = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        x = Dvd (zlcms (map hd_coeff as)) 0 [1] \\<or>\n        x \\<in> hd_coeff1 (zlcms (map hd_coeff as)) ` set as;\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as)))\n                     as))))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor x = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        x = Dvd (zlcms (map hd_coeff as)) 0 [1]\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor x = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        x \\<in> hd_coeff1 (zlcms (map hd_coeff as)) ` set as\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b n x.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor x = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        x \\<in> hd_coeff1 (zlcms (map hd_coeff as)) ` set as\\<rbrakk>\n       \\<Longrightarrow> False", "apply (clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b n xa.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as\\<rbrakk>\n       \\<Longrightarrow> False", "apply(case_tac xa)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>aa b n xa x11 x12.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = Le x11 x12\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x21 x22 x23.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = Dvd x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "apply(rename_tac list)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>aa b n xa x11 list.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = Le x11 list\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x21 x22 x23.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = Dvd x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "apply(case_tac list)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>aa b n xa x11 list.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = Le x11 list; list = []\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x11 list a lista.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = Le x11 list; list = a # lista\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n xa x21 x22 x23.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = Dvd x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>aa b n xa x11 list a lista.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = Le x11 list; list = a # lista\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x21 x22 x23.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = Dvd x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "apply (simp split:if_split_asm)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b n xa x21 x22 x23.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = Dvd x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "apply(rename_tac list)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b n xa x21 x22 list.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = Dvd x21 x22 list\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "apply(case_tac list)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>aa b n xa x21 x22 list.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = Dvd x21 x22 list; list = []\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = Dvd x21 x22 list; list = a # lista\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = Dvd x21 x22 list; list = a # lista\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "apply (simp split:if_split_asm)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd 0 x22 (0 # lista) \\<in> set as; xa = Dvd 0 x22 (0 # lista);\n        list = 0 # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a = 0; x21 = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        zlcms (map hd_coeff as) div a = 0 \\<or> x21 = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        zlcms (map hd_coeff as) div a = 0 \\<or> x21 = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "apply(erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0; zlcms (map hd_coeff as) div a = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0; x21 = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0; x21 = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0; zlcms (map hd_coeff as) div a = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0; zlcms (map hd_coeff as) div a = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "apply(simp add:zdiv_eq_0_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "apply(subgoal_tac \"a \\<in> set(map hd_coeff as)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and> a < zlcms (map hd_coeff as);\n        a \\<in> set (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> a \\<in> set (map hd_coeff as)\n 3. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> a \\<in> set (map hd_coeff as)\n 2. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and> a < zlcms (map hd_coeff as);\n        a \\<in> set (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "apply force"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and> a < zlcms (map hd_coeff as);\n        a \\<in> set (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "apply(subgoal_tac \"\\<forall>i\\<in> set(map hd_coeff as). i \\<noteq> 0\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and> a < zlcms (map hd_coeff as);\n        a \\<in> set (map hd_coeff as);\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and> a < zlcms (map hd_coeff as);\n        a \\<in> set (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\n 3. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and> a < zlcms (map hd_coeff as);\n        a \\<in> set (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\n 2. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and> a < zlcms (map hd_coeff as);\n        a \\<in> set (map hd_coeff as);\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b n xa x21 x22 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        Dvd x21 x22 (a # lista) \\<in> set as; xa = Dvd x21 x22 (a # lista);\n        list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and> a < zlcms (map hd_coeff as);\n        a \\<in> set (map hd_coeff as);\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "apply (metis elem_le_zlcms linorder_not_le zlcms_pos)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b n xa x31 x32 x33.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False", "apply(rename_tac list)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b n xa x31 x32 list.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 list\\<rbrakk>\n       \\<Longrightarrow> False", "apply(case_tac list)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b n xa x31 x32 list.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 list; list = []\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 list; list = a # lista\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>\\<forall>a\\<in>set as.\n                   hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        divisor (hd_coeff1 (zlcms (map hd_coeff as)) xa) = 0;\n        (aa, b)\n        \\<in> set (lbounds\n                    (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                     map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        xa \\<in> set as; xa = NDvd x31 x32 list; list = a # lista\\<rbrakk>\n       \\<Longrightarrow> False", "apply (simp split:if_split_asm)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd 0 x32 (0 # lista) \\<in> set as; xa = NDvd 0 x32 (0 # lista);\n        list = 0 # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a = 0; x31 = 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        zlcms (map hd_coeff as) div a = 0 \\<or> x31 = 0\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        zlcms (map hd_coeff as) div a = 0 \\<or> x31 = 0\\<rbrakk>\n       \\<Longrightarrow> False", "apply(simp add:zdiv_eq_0_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0\\<rbrakk>\n       \\<Longrightarrow> False", "apply(subgoal_tac \"\\<forall>i\\<in> set(map hd_coeff as). i \\<noteq> 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0;\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\n 2. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0;\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0;\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> False", "apply(subgoal_tac \"a \\<in> set(map hd_coeff as)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0;\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0;\n        a \\<in> set (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0;\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> a \\<in> set (map hd_coeff as)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0;\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> a \\<in> set (map hd_coeff as)\n 2. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0;\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0;\n        a \\<in> set (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> False", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0;\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a \\<or>\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0;\n        \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0;\n        a \\<in> set (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> False", "apply(erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0; \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0;\n        a \\<in> set (map hd_coeff as);\n        0 \\<le> zlcms (map hd_coeff as) \\<and>\n        zlcms (map hd_coeff as) < a\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0; \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0;\n        a \\<in> set (map hd_coeff as);\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0\\<rbrakk>\n       \\<Longrightarrow> False", "apply (metis elem_le_zlcms linorder_not_le)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0; \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0;\n        a \\<in> set (map hd_coeff as);\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as) \\<or>\n        x31 = 0\\<rbrakk>\n       \\<Longrightarrow> False", "apply(erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0; \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0;\n        a \\<in> set (map hd_coeff as);\n        zlcms (map hd_coeff as) \\<le> 0 \\<and>\n        a < zlcms (map hd_coeff as)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0; \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0;\n        a \\<in> set (map hd_coeff as); x31 = 0\\<rbrakk>\n       \\<Longrightarrow> False", "apply (metis linorder_not_le zlcms_pos)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b n xa x31 x32 list a lista.\n       \\<lbrakk>(aa, b)\n                \\<in> set (lbounds\n                            (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n                             map (hd_coeff1 (zlcms (map hd_coeff as))) as));\n        0 \\<le> n;\n        n < lcm (zlcms (map hd_coeff as))\n             (zlcms\n               (map divisor\n                 (filter is_dvd\n                   (map (hd_coeff1 (zlcms (map hd_coeff as))) as))));\n        NDvd x31 x32 (a # lista) \\<in> set as;\n        xa = NDvd x31 x32 (a # lista); list = a # lista;\n        \\<forall>a\\<in>set as.\n           hd_coeff a \\<noteq> 0 \\<and> divisor a \\<noteq> 0;\n        lbounds\n         (Dvd (zlcms (map hd_coeff as)) 0 [1] #\n          map (hd_coeff1 (zlcms (map hd_coeff as))) as) \\<noteq>\n        [];\n        a \\<noteq> 0; \\<forall>i\\<in>set (map hd_coeff as). i \\<noteq> 0;\n        a \\<in> set (map hd_coeff as); x31 = 0\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "theorem I_pres_qe: \"Z.normal \\<phi> \\<Longrightarrow>  Z.I (qe_pres \\<phi>) xs = Z.I \\<phi> xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Z.normal \\<phi> \\<Longrightarrow>\n    Z.I (qe_pres \\<phi>) xs = Z.I \\<phi> xs", "by(simp add:qe_pres_def Z.I_lift_dnf_qe_anormal I_qe_pres\\<^sub>1_o qfree_qe_pres_o normal_qe_pres\\<^sub>1_o del:o_apply)"], ["", "theorem qfree_pres_qe: \"qfree (qe_pres f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qfree (qe_pres f)", "by(simp add:qe_pres_def Z.qfree_lift_dnf_qe qfree_qe_pres_o del:o_apply)"], ["", "end"]]}