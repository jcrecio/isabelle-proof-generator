{"file_name": "/home/qj213/afp-2021-10-22/thys/LinearQuantifierElim/Thys/QEdlo_inf.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LinearQuantifierElim", "problem_names": ["lemma nolb_And[simp]:\n  \"nolb (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) xs l x = (nolb \\<phi>\\<^sub>1 xs l x \\<and> nolb \\<phi>\\<^sub>2 xs l x)\"", "lemma nolb_Or[simp]:\n  \"nolb (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) xs l x = (nolb \\<phi>\\<^sub>1 xs l x \\<and> nolb \\<phi>\\<^sub>2 xs l x)\"", "lemma innermost_intvl:\n \"\\<lbrakk> nqfree \\<phi>; nolb \\<phi> xs l x; l < x; x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x#xs); l < y; y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> DLO.I \\<phi> (y#xs)\"", "lemma I_subst_peps2:\n \"nqfree \\<phi> \\<Longrightarrow> xs!l < x \\<Longrightarrow> nolb \\<phi> xs (xs!l) x \\<Longrightarrow> x \\<notin> EQ \\<phi> xs\n \\<Longrightarrow> \\<forall>y \\<in> {xs!l <.. x}. DLO.I \\<phi> (y#xs)\n \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs\"", "lemma dense_interval:\nassumes \"finite L\" \"l \\<in> L\" \"l < x\" \"P(x::'a::dlo)\"\nand dense: \"\\<And>y l. \\<lbrakk> \\<forall>y\\<in>{l<..<x}. y \\<notin> L; l<x; l<y; y\\<le>x \\<rbrakk> \\<Longrightarrow> P y\"\nshows \"\\<exists>l\\<in>L. l<x \\<and> (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and> (\\<forall>y. l<y \\<and> y\\<le>x \\<longrightarrow> P y)\"", "lemma I_subst_peps:\n  \"nqfree \\<phi> \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n  (\\<exists>leps>xs!l. \\<forall>x. xs!l < x \\<and> x \\<le> leps \\<longrightarrow> DLO.I \\<phi> (x#xs))\"", "theorem I_qe_eps1:\nassumes \"nqfree \\<phi>\" shows \"DLO.I (qe_eps\\<^sub>1 \\<phi>) xs = (\\<exists>x. DLO.I \\<phi> (x#xs))\"\n  (is \"?QE = ?EX\")", "lemma qfree_asubst_peps: \"qfree (asubst\\<^sub>+ k a)\"", "lemma qfree_subst_peps: \"nqfree \\<phi> \\<Longrightarrow> qfree (subst\\<^sub>+ \\<phi> k)\"", "lemma qfree_qe_eps\\<^sub>1: \"nqfree \\<phi> \\<Longrightarrow> qfree(qe_eps\\<^sub>1 \\<phi>)\"", "lemma qfree_qe_eps: \"qfree(qe_eps \\<phi>)\"", "lemma I_qe_eps: \"DLO.I (qe_eps \\<phi>) xs = DLO.I \\<phi> xs\""], "translations": [["", "lemma nolb_And[simp]:\n  \"nolb (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) xs l x = (nolb \\<phi>\\<^sub>1 xs l x \\<and> nolb \\<phi>\\<^sub>2 xs l x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nolb (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) xs l x =\n    (nolb \\<phi>\\<^sub>1 xs l x \\<and> nolb \\<phi>\\<^sub>2 xs l x)", "apply(clarsimp simp:nolb_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>y\\<in>{l<..<x}.\n        \\<forall>i.\n           y = xs ! i \\<longrightarrow>\n           Less (Suc i) 0\n           \\<notin> set (DLO.atoms\\<^sub>0 \\<phi>\\<^sub>1) \\<and>\n           Less (Suc i) 0 \\<notin> set (DLO.atoms\\<^sub>0 \\<phi>\\<^sub>2)) =\n    ((\\<forall>y\\<in>{l<..<x}.\n         \\<forall>i.\n            y = xs ! i \\<longrightarrow>\n            Less (Suc i) 0\n            \\<notin> set (DLO.atoms\\<^sub>0 \\<phi>\\<^sub>1)) \\<and>\n     (\\<forall>y\\<in>{l<..<x}.\n         \\<forall>i.\n            y = xs ! i \\<longrightarrow>\n            Less (Suc i) 0 \\<notin> set (DLO.atoms\\<^sub>0 \\<phi>\\<^sub>2)))", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma nolb_Or[simp]:\n  \"nolb (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) xs l x = (nolb \\<phi>\\<^sub>1 xs l x \\<and> nolb \\<phi>\\<^sub>2 xs l x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nolb (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) xs l x =\n    (nolb \\<phi>\\<^sub>1 xs l x \\<and> nolb \\<phi>\\<^sub>2 xs l x)", "apply(clarsimp simp:nolb_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>y\\<in>{l<..<x}.\n        \\<forall>i.\n           y = xs ! i \\<longrightarrow>\n           Less (Suc i) 0\n           \\<notin> set (DLO.atoms\\<^sub>0 \\<phi>\\<^sub>1) \\<and>\n           Less (Suc i) 0 \\<notin> set (DLO.atoms\\<^sub>0 \\<phi>\\<^sub>2)) =\n    ((\\<forall>y\\<in>{l<..<x}.\n         \\<forall>i.\n            y = xs ! i \\<longrightarrow>\n            Less (Suc i) 0\n            \\<notin> set (DLO.atoms\\<^sub>0 \\<phi>\\<^sub>1)) \\<and>\n     (\\<forall>y\\<in>{l<..<x}.\n         \\<forall>i.\n            y = xs ! i \\<longrightarrow>\n            Less (Suc i) 0 \\<notin> set (DLO.atoms\\<^sub>0 \\<phi>\\<^sub>2)))", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "context notes [[simp_depth_limit=3]]\nbegin"], ["", "lemma innermost_intvl:\n \"\\<lbrakk> nqfree \\<phi>; nolb \\<phi> xs l x; l < x; x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x#xs); l < y; y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> DLO.I \\<phi> (y#xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nqfree \\<phi>; nolb \\<phi> xs l x; l < x;\n     x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x # xs); l < y;\n     y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> DLO.I \\<phi> (y # xs)", "proof(induct \\<phi>)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>nqfree TrueF; nolb TrueF xs l x; l < x; x \\<notin> EQ TrueF xs;\n     DLO.I TrueF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> DLO.I TrueF (y # xs)\n 2. \\<lbrakk>nqfree FalseF; nolb FalseF xs l x; l < x;\n     x \\<notin> EQ FalseF xs; DLO.I FalseF (x # xs); l < y;\n     y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> DLO.I FalseF (y # xs)\n 3. \\<And>xa.\n       \\<lbrakk>nqfree (Atom xa); nolb (Atom xa) xs l x; l < x;\n        x \\<notin> EQ (Atom xa) xs; DLO.I (Atom xa) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (Atom xa) (y # xs)\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; nolb \\<phi>1 xs l x; l < x;\n                 x \\<notin> EQ \\<phi>1 xs; DLO.I \\<phi>1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi>1 (y # xs);\n        \\<lbrakk>nqfree \\<phi>2; nolb \\<phi>2 xs l x; l < x;\n         x \\<notin> EQ \\<phi>2 xs; DLO.I \\<phi>2 (x # xs); l < y;\n         y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> DLO.I \\<phi>2 (y # xs);\n        nqfree (And \\<phi>1 \\<phi>2); nolb (And \\<phi>1 \\<phi>2) xs l x;\n        l < x; x \\<notin> EQ (And \\<phi>1 \\<phi>2) xs;\n        DLO.I (And \\<phi>1 \\<phi>2) (x # xs); l < y; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (And \\<phi>1 \\<phi>2) (y # xs)\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; nolb \\<phi>1 xs l x; l < x;\n                 x \\<notin> EQ \\<phi>1 xs; DLO.I \\<phi>1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi>1 (y # xs);\n        \\<lbrakk>nqfree \\<phi>2; nolb \\<phi>2 xs l x; l < x;\n         x \\<notin> EQ \\<phi>2 xs; DLO.I \\<phi>2 (x # xs); l < y;\n         y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> DLO.I \\<phi>2 (y # xs);\n        nqfree (Or \\<phi>1 \\<phi>2); nolb (Or \\<phi>1 \\<phi>2) xs l x;\n        l < x; x \\<notin> EQ (Or \\<phi>1 \\<phi>2) xs;\n        DLO.I (Or \\<phi>1 \\<phi>2) (x # xs); l < y; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (Or \\<phi>1 \\<phi>2) (y # xs)\n 6. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; nolb \\<phi> xs l x; l < x;\n                 x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi> (y # xs);\n        nqfree (Neg \\<phi>); nolb (Neg \\<phi>) xs l x; l < x;\n        x \\<notin> EQ (Neg \\<phi>) xs; DLO.I (Neg \\<phi>) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (Neg \\<phi>) (y # xs)\n 7. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; nolb \\<phi> xs l x; l < x;\n                 x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi> (y # xs);\n        nqfree (ExQ \\<phi>); nolb (ExQ \\<phi>) xs l x; l < x;\n        x \\<notin> EQ (ExQ \\<phi>) xs; DLO.I (ExQ \\<phi>) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (ExQ \\<phi>) (y # xs)", "case (Atom a)"], ["proof (state)\nthis:\n  nqfree (Atom a)\n  nolb (Atom a) xs l x\n  l < x\n  x \\<notin> EQ (Atom a) xs\n  DLO.I (Atom a) (x # xs)\n  l < y\n  y \\<le> x\n\ngoal (7 subgoals):\n 1. \\<lbrakk>nqfree TrueF; nolb TrueF xs l x; l < x; x \\<notin> EQ TrueF xs;\n     DLO.I TrueF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> DLO.I TrueF (y # xs)\n 2. \\<lbrakk>nqfree FalseF; nolb FalseF xs l x; l < x;\n     x \\<notin> EQ FalseF xs; DLO.I FalseF (x # xs); l < y;\n     y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> DLO.I FalseF (y # xs)\n 3. \\<And>xa.\n       \\<lbrakk>nqfree (Atom xa); nolb (Atom xa) xs l x; l < x;\n        x \\<notin> EQ (Atom xa) xs; DLO.I (Atom xa) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (Atom xa) (y # xs)\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; nolb \\<phi>1 xs l x; l < x;\n                 x \\<notin> EQ \\<phi>1 xs; DLO.I \\<phi>1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi>1 (y # xs);\n        \\<lbrakk>nqfree \\<phi>2; nolb \\<phi>2 xs l x; l < x;\n         x \\<notin> EQ \\<phi>2 xs; DLO.I \\<phi>2 (x # xs); l < y;\n         y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> DLO.I \\<phi>2 (y # xs);\n        nqfree (And \\<phi>1 \\<phi>2); nolb (And \\<phi>1 \\<phi>2) xs l x;\n        l < x; x \\<notin> EQ (And \\<phi>1 \\<phi>2) xs;\n        DLO.I (And \\<phi>1 \\<phi>2) (x # xs); l < y; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (And \\<phi>1 \\<phi>2) (y # xs)\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; nolb \\<phi>1 xs l x; l < x;\n                 x \\<notin> EQ \\<phi>1 xs; DLO.I \\<phi>1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi>1 (y # xs);\n        \\<lbrakk>nqfree \\<phi>2; nolb \\<phi>2 xs l x; l < x;\n         x \\<notin> EQ \\<phi>2 xs; DLO.I \\<phi>2 (x # xs); l < y;\n         y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> DLO.I \\<phi>2 (y # xs);\n        nqfree (Or \\<phi>1 \\<phi>2); nolb (Or \\<phi>1 \\<phi>2) xs l x;\n        l < x; x \\<notin> EQ (Or \\<phi>1 \\<phi>2) xs;\n        DLO.I (Or \\<phi>1 \\<phi>2) (x # xs); l < y; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (Or \\<phi>1 \\<phi>2) (y # xs)\n 6. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; nolb \\<phi> xs l x; l < x;\n                 x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi> (y # xs);\n        nqfree (Neg \\<phi>); nolb (Neg \\<phi>) xs l x; l < x;\n        x \\<notin> EQ (Neg \\<phi>) xs; DLO.I (Neg \\<phi>) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (Neg \\<phi>) (y # xs)\n 7. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; nolb \\<phi> xs l x; l < x;\n                 x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi> (y # xs);\n        nqfree (ExQ \\<phi>); nolb (ExQ \\<phi>) xs l x; l < x;\n        x \\<notin> EQ (ExQ \\<phi>) xs; DLO.I (ExQ \\<phi>) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (ExQ \\<phi>) (y # xs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. DLO.I (Atom a) (y # xs)", "proof (cases a)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x11 x12.\n       a = Less x11 x12 \\<Longrightarrow> DLO.I (Atom a) (y # xs)\n 2. \\<And>x21 x22. a = Eq x21 x22 \\<Longrightarrow> DLO.I (Atom a) (y # xs)", "case (Less i j)"], ["proof (state)\nthis:\n  a = Less i j\n\ngoal (2 subgoals):\n 1. \\<And>x11 x12.\n       a = Less x11 x12 \\<Longrightarrow> DLO.I (Atom a) (y # xs)\n 2. \\<And>x21 x22. a = Eq x21 x22 \\<Longrightarrow> DLO.I (Atom a) (y # xs)", "then"], ["proof (chain)\npicking this:\n  a = Less i j", "show ?thesis"], ["proof (prove)\nusing this:\n  a = Less i j\n\ngoal (1 subgoal):\n 1. DLO.I (Atom a) (y # xs)", "using Atom"], ["proof (prove)\nusing this:\n  a = Less i j\n  nqfree (Atom a)\n  nolb (Atom a) xs l x\n  l < x\n  x \\<notin> EQ (Atom a) xs\n  DLO.I (Atom a) (x # xs)\n  l < y\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. DLO.I (Atom a) (y # xs)", "unfolding nolb_def"], ["proof (prove)\nusing this:\n  a = Less i j\n  nqfree (Atom a)\n  \\<forall>y\\<in>{l<..<x}. y \\<notin> LB (Atom a) xs\n  l < x\n  x \\<notin> EQ (Atom a) xs\n  DLO.I (Atom a) (x # xs)\n  l < y\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. DLO.I (Atom a) (y # xs)", "by (clarsimp simp: nth.simps Ball_def split:if_split_asm nat.splits)\n         (metis not_le_imp_less order_antisym order_less_trans)+"], ["proof (state)\nthis:\n  DLO.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22. a = Eq x21 x22 \\<Longrightarrow> DLO.I (Atom a) (y # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22. a = Eq x21 x22 \\<Longrightarrow> DLO.I (Atom a) (y # xs)", "case (Eq i j)"], ["proof (state)\nthis:\n  a = Eq i j\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22. a = Eq x21 x22 \\<Longrightarrow> DLO.I (Atom a) (y # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  a = Eq i j\n\ngoal (1 subgoal):\n 1. DLO.I (Atom a) (y # xs)", "using Atom"], ["proof (prove)\nusing this:\n  a = Eq i j\n  nqfree (Atom a)\n  nolb (Atom a) xs l x\n  l < x\n  x \\<notin> EQ (Atom a) xs\n  DLO.I (Atom a) (x # xs)\n  l < y\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. DLO.I (Atom a) (y # xs)", "apply(clarsimp simp:EQ_def nolb_def nth_Cons')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = Eq i j; l < x;\n     \\<forall>k.\n        x = xs ! k \\<longrightarrow>\n        (Suc k = i \\<longrightarrow> 0 < j) \\<and>\n        (Suc k = j \\<longrightarrow> 0 < i);\n     (if i = 0 then x else xs ! (i - 1)) =\n     (if j = 0 then x else xs ! (j - 1));\n     l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> (i = 0 \\<longrightarrow>\n                       0 < j \\<longrightarrow> y = xs ! (j - Suc 0)) \\<and>\n                      (0 < i \\<longrightarrow>\n                       (j = 0 \\<longrightarrow> xs ! (i - Suc 0) = y) \\<and>\n                       (0 < j \\<longrightarrow>\n                        xs ! (i - Suc 0) = xs ! (j - Suc 0)))", "apply(case_tac \"i=0 \\<and> j=0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a = Eq i j; l < x;\n     \\<forall>k.\n        x = xs ! k \\<longrightarrow>\n        (Suc k = i \\<longrightarrow> 0 < j) \\<and>\n        (Suc k = j \\<longrightarrow> 0 < i);\n     (if i = 0 then x else xs ! (i - 1)) =\n     (if j = 0 then x else xs ! (j - 1));\n     l < y; y \\<le> x; i = 0 \\<and> j = 0\\<rbrakk>\n    \\<Longrightarrow> (i = 0 \\<longrightarrow>\n                       0 < j \\<longrightarrow> y = xs ! (j - Suc 0)) \\<and>\n                      (0 < i \\<longrightarrow>\n                       (j = 0 \\<longrightarrow> xs ! (i - Suc 0) = y) \\<and>\n                       (0 < j \\<longrightarrow>\n                        xs ! (i - Suc 0) = xs ! (j - Suc 0)))\n 2. \\<lbrakk>a = Eq i j; l < x;\n     \\<forall>k.\n        x = xs ! k \\<longrightarrow>\n        (Suc k = i \\<longrightarrow> 0 < j) \\<and>\n        (Suc k = j \\<longrightarrow> 0 < i);\n     (if i = 0 then x else xs ! (i - 1)) =\n     (if j = 0 then x else xs ! (j - 1));\n     l < y; y \\<le> x; \\<not> (i = 0 \\<and> j = 0)\\<rbrakk>\n    \\<Longrightarrow> (i = 0 \\<longrightarrow>\n                       0 < j \\<longrightarrow> y = xs ! (j - Suc 0)) \\<and>\n                      (0 < i \\<longrightarrow>\n                       (j = 0 \\<longrightarrow> xs ! (i - Suc 0) = y) \\<and>\n                       (0 < j \\<longrightarrow>\n                        xs ! (i - Suc 0) = xs ! (j - Suc 0)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = Eq i j; l < x;\n     \\<forall>k.\n        x = xs ! k \\<longrightarrow>\n        (Suc k = i \\<longrightarrow> 0 < j) \\<and>\n        (Suc k = j \\<longrightarrow> 0 < i);\n     (if i = 0 then x else xs ! (i - 1)) =\n     (if j = 0 then x else xs ! (j - 1));\n     l < y; y \\<le> x; \\<not> (i = 0 \\<and> j = 0)\\<rbrakk>\n    \\<Longrightarrow> (i = 0 \\<longrightarrow>\n                       0 < j \\<longrightarrow> y = xs ! (j - Suc 0)) \\<and>\n                      (0 < i \\<longrightarrow>\n                       (j = 0 \\<longrightarrow> xs ! (i - Suc 0) = y) \\<and>\n                       (0 < j \\<longrightarrow>\n                        xs ! (i - Suc 0) = xs ! (j - Suc 0)))", "apply(case_tac \"i\\<noteq>0 \\<and> j\\<noteq>0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a = Eq i j; l < x;\n     \\<forall>k.\n        x = xs ! k \\<longrightarrow>\n        (Suc k = i \\<longrightarrow> 0 < j) \\<and>\n        (Suc k = j \\<longrightarrow> 0 < i);\n     (if i = 0 then x else xs ! (i - 1)) =\n     (if j = 0 then x else xs ! (j - 1));\n     l < y; y \\<le> x; \\<not> (i = 0 \\<and> j = 0);\n     i \\<noteq> 0 \\<and> j \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (i = 0 \\<longrightarrow>\n                       0 < j \\<longrightarrow> y = xs ! (j - Suc 0)) \\<and>\n                      (0 < i \\<longrightarrow>\n                       (j = 0 \\<longrightarrow> xs ! (i - Suc 0) = y) \\<and>\n                       (0 < j \\<longrightarrow>\n                        xs ! (i - Suc 0) = xs ! (j - Suc 0)))\n 2. \\<lbrakk>a = Eq i j; l < x;\n     \\<forall>k.\n        x = xs ! k \\<longrightarrow>\n        (Suc k = i \\<longrightarrow> 0 < j) \\<and>\n        (Suc k = j \\<longrightarrow> 0 < i);\n     (if i = 0 then x else xs ! (i - 1)) =\n     (if j = 0 then x else xs ! (j - 1));\n     l < y; y \\<le> x; \\<not> (i = 0 \\<and> j = 0);\n     \\<not> (i \\<noteq> 0 \\<and> j \\<noteq> 0)\\<rbrakk>\n    \\<Longrightarrow> (i = 0 \\<longrightarrow>\n                       0 < j \\<longrightarrow> y = xs ! (j - Suc 0)) \\<and>\n                      (0 < i \\<longrightarrow>\n                       (j = 0 \\<longrightarrow> xs ! (i - Suc 0) = y) \\<and>\n                       (0 < j \\<longrightarrow>\n                        xs ! (i - Suc 0) = xs ! (j - Suc 0)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = Eq i j; l < x;\n     \\<forall>k.\n        x = xs ! k \\<longrightarrow>\n        (Suc k = i \\<longrightarrow> 0 < j) \\<and>\n        (Suc k = j \\<longrightarrow> 0 < i);\n     (if i = 0 then x else xs ! (i - 1)) =\n     (if j = 0 then x else xs ! (j - 1));\n     l < y; y \\<le> x; \\<not> (i = 0 \\<and> j = 0);\n     \\<not> (i \\<noteq> 0 \\<and> j \\<noteq> 0)\\<rbrakk>\n    \\<Longrightarrow> (i = 0 \\<longrightarrow>\n                       0 < j \\<longrightarrow> y = xs ! (j - Suc 0)) \\<and>\n                      (0 < i \\<longrightarrow>\n                       (j = 0 \\<longrightarrow> xs ! (i - Suc 0) = y) \\<and>\n                       (0 < j \\<longrightarrow>\n                        xs ! (i - Suc 0) = xs ! (j - Suc 0)))", "apply(case_tac \"i=0 \\<and> j\\<noteq>0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a = Eq i j; l < x;\n     \\<forall>k.\n        x = xs ! k \\<longrightarrow>\n        (Suc k = i \\<longrightarrow> 0 < j) \\<and>\n        (Suc k = j \\<longrightarrow> 0 < i);\n     (if i = 0 then x else xs ! (i - 1)) =\n     (if j = 0 then x else xs ! (j - 1));\n     l < y; y \\<le> x; \\<not> (i = 0 \\<and> j = 0);\n     \\<not> (i \\<noteq> 0 \\<and> j \\<noteq> 0);\n     i = 0 \\<and> j \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (i = 0 \\<longrightarrow>\n                       0 < j \\<longrightarrow> y = xs ! (j - Suc 0)) \\<and>\n                      (0 < i \\<longrightarrow>\n                       (j = 0 \\<longrightarrow> xs ! (i - Suc 0) = y) \\<and>\n                       (0 < j \\<longrightarrow>\n                        xs ! (i - Suc 0) = xs ! (j - Suc 0)))\n 2. \\<lbrakk>a = Eq i j; l < x;\n     \\<forall>k.\n        x = xs ! k \\<longrightarrow>\n        (Suc k = i \\<longrightarrow> 0 < j) \\<and>\n        (Suc k = j \\<longrightarrow> 0 < i);\n     (if i = 0 then x else xs ! (i - 1)) =\n     (if j = 0 then x else xs ! (j - 1));\n     l < y; y \\<le> x; \\<not> (i = 0 \\<and> j = 0);\n     \\<not> (i \\<noteq> 0 \\<and> j \\<noteq> 0);\n     \\<not> (i = 0 \\<and> j \\<noteq> 0)\\<rbrakk>\n    \\<Longrightarrow> (i = 0 \\<longrightarrow>\n                       0 < j \\<longrightarrow> y = xs ! (j - Suc 0)) \\<and>\n                      (0 < i \\<longrightarrow>\n                       (j = 0 \\<longrightarrow> xs ! (i - Suc 0) = y) \\<and>\n                       (0 < j \\<longrightarrow>\n                        xs ! (i - Suc 0) = xs ! (j - Suc 0)))", "apply (fastforce split:if_split_asm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = Eq i j; l < x;\n     \\<forall>k.\n        x = xs ! k \\<longrightarrow>\n        (Suc k = i \\<longrightarrow> 0 < j) \\<and>\n        (Suc k = j \\<longrightarrow> 0 < i);\n     (if i = 0 then x else xs ! (i - 1)) =\n     (if j = 0 then x else xs ! (j - 1));\n     l < y; y \\<le> x; \\<not> (i = 0 \\<and> j = 0);\n     \\<not> (i \\<noteq> 0 \\<and> j \\<noteq> 0);\n     \\<not> (i = 0 \\<and> j \\<noteq> 0)\\<rbrakk>\n    \\<Longrightarrow> (i = 0 \\<longrightarrow>\n                       0 < j \\<longrightarrow> y = xs ! (j - Suc 0)) \\<and>\n                      (0 < i \\<longrightarrow>\n                       (j = 0 \\<longrightarrow> xs ! (i - Suc 0) = y) \\<and>\n                       (0 < j \\<longrightarrow>\n                        xs ! (i - Suc 0) = xs ! (j - Suc 0)))", "apply(case_tac \"i\\<noteq>0 \\<and> j=0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a = Eq i j; l < x;\n     \\<forall>k.\n        x = xs ! k \\<longrightarrow>\n        (Suc k = i \\<longrightarrow> 0 < j) \\<and>\n        (Suc k = j \\<longrightarrow> 0 < i);\n     (if i = 0 then x else xs ! (i - 1)) =\n     (if j = 0 then x else xs ! (j - 1));\n     l < y; y \\<le> x; \\<not> (i = 0 \\<and> j = 0);\n     \\<not> (i \\<noteq> 0 \\<and> j \\<noteq> 0);\n     \\<not> (i = 0 \\<and> j \\<noteq> 0); i \\<noteq> 0 \\<and> j = 0\\<rbrakk>\n    \\<Longrightarrow> (i = 0 \\<longrightarrow>\n                       0 < j \\<longrightarrow> y = xs ! (j - Suc 0)) \\<and>\n                      (0 < i \\<longrightarrow>\n                       (j = 0 \\<longrightarrow> xs ! (i - Suc 0) = y) \\<and>\n                       (0 < j \\<longrightarrow>\n                        xs ! (i - Suc 0) = xs ! (j - Suc 0)))\n 2. \\<lbrakk>a = Eq i j; l < x;\n     \\<forall>k.\n        x = xs ! k \\<longrightarrow>\n        (Suc k = i \\<longrightarrow> 0 < j) \\<and>\n        (Suc k = j \\<longrightarrow> 0 < i);\n     (if i = 0 then x else xs ! (i - 1)) =\n     (if j = 0 then x else xs ! (j - 1));\n     l < y; y \\<le> x; \\<not> (i = 0 \\<and> j = 0);\n     \\<not> (i \\<noteq> 0 \\<and> j \\<noteq> 0);\n     \\<not> (i = 0 \\<and> j \\<noteq> 0);\n     \\<not> (i \\<noteq> 0 \\<and> j = 0)\\<rbrakk>\n    \\<Longrightarrow> (i = 0 \\<longrightarrow>\n                       0 < j \\<longrightarrow> y = xs ! (j - Suc 0)) \\<and>\n                      (0 < i \\<longrightarrow>\n                       (j = 0 \\<longrightarrow> xs ! (i - Suc 0) = y) \\<and>\n                       (0 < j \\<longrightarrow>\n                        xs ! (i - Suc 0) = xs ! (j - Suc 0)))", "apply (fastforce split:if_split_asm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = Eq i j; l < x;\n     \\<forall>k.\n        x = xs ! k \\<longrightarrow>\n        (Suc k = i \\<longrightarrow> 0 < j) \\<and>\n        (Suc k = j \\<longrightarrow> 0 < i);\n     (if i = 0 then x else xs ! (i - 1)) =\n     (if j = 0 then x else xs ! (j - 1));\n     l < y; y \\<le> x; \\<not> (i = 0 \\<and> j = 0);\n     \\<not> (i \\<noteq> 0 \\<and> j \\<noteq> 0);\n     \\<not> (i = 0 \\<and> j \\<noteq> 0);\n     \\<not> (i \\<noteq> 0 \\<and> j = 0)\\<rbrakk>\n    \\<Longrightarrow> (i = 0 \\<longrightarrow>\n                       0 < j \\<longrightarrow> y = xs ! (j - Suc 0)) \\<and>\n                      (0 < i \\<longrightarrow>\n                       (j = 0 \\<longrightarrow> xs ! (i - Suc 0) = y) \\<and>\n                       (0 < j \\<longrightarrow>\n                        xs ! (i - Suc 0) = xs ! (j - Suc 0)))", "apply arith"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  DLO.I (Atom a) (y # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  DLO.I (Atom a) (y # xs)\n\ngoal (6 subgoals):\n 1. \\<lbrakk>nqfree TrueF; nolb TrueF xs l x; l < x; x \\<notin> EQ TrueF xs;\n     DLO.I TrueF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> DLO.I TrueF (y # xs)\n 2. \\<lbrakk>nqfree FalseF; nolb FalseF xs l x; l < x;\n     x \\<notin> EQ FalseF xs; DLO.I FalseF (x # xs); l < y;\n     y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> DLO.I FalseF (y # xs)\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; nolb \\<phi>1 xs l x; l < x;\n                 x \\<notin> EQ \\<phi>1 xs; DLO.I \\<phi>1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi>1 (y # xs);\n        \\<lbrakk>nqfree \\<phi>2; nolb \\<phi>2 xs l x; l < x;\n         x \\<notin> EQ \\<phi>2 xs; DLO.I \\<phi>2 (x # xs); l < y;\n         y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> DLO.I \\<phi>2 (y # xs);\n        nqfree (And \\<phi>1 \\<phi>2); nolb (And \\<phi>1 \\<phi>2) xs l x;\n        l < x; x \\<notin> EQ (And \\<phi>1 \\<phi>2) xs;\n        DLO.I (And \\<phi>1 \\<phi>2) (x # xs); l < y; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (And \\<phi>1 \\<phi>2) (y # xs)\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; nolb \\<phi>1 xs l x; l < x;\n                 x \\<notin> EQ \\<phi>1 xs; DLO.I \\<phi>1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi>1 (y # xs);\n        \\<lbrakk>nqfree \\<phi>2; nolb \\<phi>2 xs l x; l < x;\n         x \\<notin> EQ \\<phi>2 xs; DLO.I \\<phi>2 (x # xs); l < y;\n         y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> DLO.I \\<phi>2 (y # xs);\n        nqfree (Or \\<phi>1 \\<phi>2); nolb (Or \\<phi>1 \\<phi>2) xs l x;\n        l < x; x \\<notin> EQ (Or \\<phi>1 \\<phi>2) xs;\n        DLO.I (Or \\<phi>1 \\<phi>2) (x # xs); l < y; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (Or \\<phi>1 \\<phi>2) (y # xs)\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; nolb \\<phi> xs l x; l < x;\n                 x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi> (y # xs);\n        nqfree (Neg \\<phi>); nolb (Neg \\<phi>) xs l x; l < x;\n        x \\<notin> EQ (Neg \\<phi>) xs; DLO.I (Neg \\<phi>) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (Neg \\<phi>) (y # xs)\n 6. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; nolb \\<phi> xs l x; l < x;\n                 x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi> (y # xs);\n        nqfree (ExQ \\<phi>); nolb (ExQ \\<phi>) xs l x; l < x;\n        x \\<notin> EQ (ExQ \\<phi>) xs; DLO.I (ExQ \\<phi>) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (ExQ \\<phi>) (y # xs)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<lbrakk>nqfree TrueF; nolb TrueF xs l x; l < x; x \\<notin> EQ TrueF xs;\n     DLO.I TrueF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> DLO.I TrueF (y # xs)\n 2. \\<lbrakk>nqfree FalseF; nolb FalseF xs l x; l < x;\n     x \\<notin> EQ FalseF xs; DLO.I FalseF (x # xs); l < y;\n     y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> DLO.I FalseF (y # xs)\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; nolb \\<phi>1 xs l x; l < x;\n                 x \\<notin> EQ \\<phi>1 xs; DLO.I \\<phi>1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi>1 (y # xs);\n        \\<lbrakk>nqfree \\<phi>2; nolb \\<phi>2 xs l x; l < x;\n         x \\<notin> EQ \\<phi>2 xs; DLO.I \\<phi>2 (x # xs); l < y;\n         y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> DLO.I \\<phi>2 (y # xs);\n        nqfree (And \\<phi>1 \\<phi>2); nolb (And \\<phi>1 \\<phi>2) xs l x;\n        l < x; x \\<notin> EQ (And \\<phi>1 \\<phi>2) xs;\n        DLO.I (And \\<phi>1 \\<phi>2) (x # xs); l < y; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (And \\<phi>1 \\<phi>2) (y # xs)\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; nolb \\<phi>1 xs l x; l < x;\n                 x \\<notin> EQ \\<phi>1 xs; DLO.I \\<phi>1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi>1 (y # xs);\n        \\<lbrakk>nqfree \\<phi>2; nolb \\<phi>2 xs l x; l < x;\n         x \\<notin> EQ \\<phi>2 xs; DLO.I \\<phi>2 (x # xs); l < y;\n         y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> DLO.I \\<phi>2 (y # xs);\n        nqfree (Or \\<phi>1 \\<phi>2); nolb (Or \\<phi>1 \\<phi>2) xs l x;\n        l < x; x \\<notin> EQ (Or \\<phi>1 \\<phi>2) xs;\n        DLO.I (Or \\<phi>1 \\<phi>2) (x # xs); l < y; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (Or \\<phi>1 \\<phi>2) (y # xs)\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; nolb \\<phi> xs l x; l < x;\n                 x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi> (y # xs);\n        nqfree (Neg \\<phi>); nolb (Neg \\<phi>) xs l x; l < x;\n        x \\<notin> EQ (Neg \\<phi>) xs; DLO.I (Neg \\<phi>) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (Neg \\<phi>) (y # xs)\n 6. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; nolb \\<phi> xs l x; l < x;\n                 x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi> (y # xs);\n        nqfree (ExQ \\<phi>); nolb (ExQ \\<phi>) xs l x; l < x;\n        x \\<notin> EQ (ExQ \\<phi>) xs; DLO.I (ExQ \\<phi>) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (ExQ \\<phi>) (y # xs)", "case And"], ["proof (state)\nthis:\n  \\<lbrakk>nqfree \\<phi>1_; nolb \\<phi>1_ xs l x; l < x;\n   x \\<notin> EQ \\<phi>1_ xs; DLO.I \\<phi>1_ (x # xs); l < y;\n   y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> DLO.I \\<phi>1_ (y # xs)\n  \\<lbrakk>nqfree \\<phi>2_; nolb \\<phi>2_ xs l x; l < x;\n   x \\<notin> EQ \\<phi>2_ xs; DLO.I \\<phi>2_ (x # xs); l < y;\n   y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> DLO.I \\<phi>2_ (y # xs)\n  nqfree (And \\<phi>1_ \\<phi>2_)\n  nolb (And \\<phi>1_ \\<phi>2_) xs l x\n  l < x\n  x \\<notin> EQ (And \\<phi>1_ \\<phi>2_) xs\n  DLO.I (And \\<phi>1_ \\<phi>2_) (x # xs)\n  l < y\n  y \\<le> x\n\ngoal (6 subgoals):\n 1. \\<lbrakk>nqfree TrueF; nolb TrueF xs l x; l < x; x \\<notin> EQ TrueF xs;\n     DLO.I TrueF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> DLO.I TrueF (y # xs)\n 2. \\<lbrakk>nqfree FalseF; nolb FalseF xs l x; l < x;\n     x \\<notin> EQ FalseF xs; DLO.I FalseF (x # xs); l < y;\n     y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> DLO.I FalseF (y # xs)\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; nolb \\<phi>1 xs l x; l < x;\n                 x \\<notin> EQ \\<phi>1 xs; DLO.I \\<phi>1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi>1 (y # xs);\n        \\<lbrakk>nqfree \\<phi>2; nolb \\<phi>2 xs l x; l < x;\n         x \\<notin> EQ \\<phi>2 xs; DLO.I \\<phi>2 (x # xs); l < y;\n         y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> DLO.I \\<phi>2 (y # xs);\n        nqfree (And \\<phi>1 \\<phi>2); nolb (And \\<phi>1 \\<phi>2) xs l x;\n        l < x; x \\<notin> EQ (And \\<phi>1 \\<phi>2) xs;\n        DLO.I (And \\<phi>1 \\<phi>2) (x # xs); l < y; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (And \\<phi>1 \\<phi>2) (y # xs)\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; nolb \\<phi>1 xs l x; l < x;\n                 x \\<notin> EQ \\<phi>1 xs; DLO.I \\<phi>1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi>1 (y # xs);\n        \\<lbrakk>nqfree \\<phi>2; nolb \\<phi>2 xs l x; l < x;\n         x \\<notin> EQ \\<phi>2 xs; DLO.I \\<phi>2 (x # xs); l < y;\n         y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> DLO.I \\<phi>2 (y # xs);\n        nqfree (Or \\<phi>1 \\<phi>2); nolb (Or \\<phi>1 \\<phi>2) xs l x;\n        l < x; x \\<notin> EQ (Or \\<phi>1 \\<phi>2) xs;\n        DLO.I (Or \\<phi>1 \\<phi>2) (x # xs); l < y; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (Or \\<phi>1 \\<phi>2) (y # xs)\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; nolb \\<phi> xs l x; l < x;\n                 x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi> (y # xs);\n        nqfree (Neg \\<phi>); nolb (Neg \\<phi>) xs l x; l < x;\n        x \\<notin> EQ (Neg \\<phi>) xs; DLO.I (Neg \\<phi>) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (Neg \\<phi>) (y # xs)\n 6. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; nolb \\<phi> xs l x; l < x;\n                 x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi> (y # xs);\n        nqfree (ExQ \\<phi>); nolb (ExQ \\<phi>) xs l x; l < x;\n        x \\<notin> EQ (ExQ \\<phi>) xs; DLO.I (ExQ \\<phi>) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (ExQ \\<phi>) (y # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>nqfree \\<phi>1_; nolb \\<phi>1_ xs l x; l < x;\n   x \\<notin> EQ \\<phi>1_ xs; DLO.I \\<phi>1_ (x # xs); l < y;\n   y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> DLO.I \\<phi>1_ (y # xs)\n  \\<lbrakk>nqfree \\<phi>2_; nolb \\<phi>2_ xs l x; l < x;\n   x \\<notin> EQ \\<phi>2_ xs; DLO.I \\<phi>2_ (x # xs); l < y;\n   y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> DLO.I \\<phi>2_ (y # xs)\n  nqfree (And \\<phi>1_ \\<phi>2_)\n  nolb (And \\<phi>1_ \\<phi>2_) xs l x\n  l < x\n  x \\<notin> EQ (And \\<phi>1_ \\<phi>2_) xs\n  DLO.I (And \\<phi>1_ \\<phi>2_) (x # xs)\n  l < y\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. DLO.I (And \\<phi>1_ \\<phi>2_) (y # xs)", "by (fastforce)"], ["proof (state)\nthis:\n  DLO.I (And \\<phi>1_ \\<phi>2_) (y # xs)\n\ngoal (5 subgoals):\n 1. \\<lbrakk>nqfree TrueF; nolb TrueF xs l x; l < x; x \\<notin> EQ TrueF xs;\n     DLO.I TrueF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> DLO.I TrueF (y # xs)\n 2. \\<lbrakk>nqfree FalseF; nolb FalseF xs l x; l < x;\n     x \\<notin> EQ FalseF xs; DLO.I FalseF (x # xs); l < y;\n     y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> DLO.I FalseF (y # xs)\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; nolb \\<phi>1 xs l x; l < x;\n                 x \\<notin> EQ \\<phi>1 xs; DLO.I \\<phi>1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi>1 (y # xs);\n        \\<lbrakk>nqfree \\<phi>2; nolb \\<phi>2 xs l x; l < x;\n         x \\<notin> EQ \\<phi>2 xs; DLO.I \\<phi>2 (x # xs); l < y;\n         y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> DLO.I \\<phi>2 (y # xs);\n        nqfree (Or \\<phi>1 \\<phi>2); nolb (Or \\<phi>1 \\<phi>2) xs l x;\n        l < x; x \\<notin> EQ (Or \\<phi>1 \\<phi>2) xs;\n        DLO.I (Or \\<phi>1 \\<phi>2) (x # xs); l < y; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (Or \\<phi>1 \\<phi>2) (y # xs)\n 4. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; nolb \\<phi> xs l x; l < x;\n                 x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi> (y # xs);\n        nqfree (Neg \\<phi>); nolb (Neg \\<phi>) xs l x; l < x;\n        x \\<notin> EQ (Neg \\<phi>) xs; DLO.I (Neg \\<phi>) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (Neg \\<phi>) (y # xs)\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; nolb \\<phi> xs l x; l < x;\n                 x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi> (y # xs);\n        nqfree (ExQ \\<phi>); nolb (ExQ \\<phi>) xs l x; l < x;\n        x \\<notin> EQ (ExQ \\<phi>) xs; DLO.I (ExQ \\<phi>) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (ExQ \\<phi>) (y # xs)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<lbrakk>nqfree TrueF; nolb TrueF xs l x; l < x; x \\<notin> EQ TrueF xs;\n     DLO.I TrueF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> DLO.I TrueF (y # xs)\n 2. \\<lbrakk>nqfree FalseF; nolb FalseF xs l x; l < x;\n     x \\<notin> EQ FalseF xs; DLO.I FalseF (x # xs); l < y;\n     y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> DLO.I FalseF (y # xs)\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; nolb \\<phi>1 xs l x; l < x;\n                 x \\<notin> EQ \\<phi>1 xs; DLO.I \\<phi>1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi>1 (y # xs);\n        \\<lbrakk>nqfree \\<phi>2; nolb \\<phi>2 xs l x; l < x;\n         x \\<notin> EQ \\<phi>2 xs; DLO.I \\<phi>2 (x # xs); l < y;\n         y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> DLO.I \\<phi>2 (y # xs);\n        nqfree (Or \\<phi>1 \\<phi>2); nolb (Or \\<phi>1 \\<phi>2) xs l x;\n        l < x; x \\<notin> EQ (Or \\<phi>1 \\<phi>2) xs;\n        DLO.I (Or \\<phi>1 \\<phi>2) (x # xs); l < y; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (Or \\<phi>1 \\<phi>2) (y # xs)\n 4. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; nolb \\<phi> xs l x; l < x;\n                 x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi> (y # xs);\n        nqfree (Neg \\<phi>); nolb (Neg \\<phi>) xs l x; l < x;\n        x \\<notin> EQ (Neg \\<phi>) xs; DLO.I (Neg \\<phi>) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (Neg \\<phi>) (y # xs)\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; nolb \\<phi> xs l x; l < x;\n                 x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi> (y # xs);\n        nqfree (ExQ \\<phi>); nolb (ExQ \\<phi>) xs l x; l < x;\n        x \\<notin> EQ (ExQ \\<phi>) xs; DLO.I (ExQ \\<phi>) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (ExQ \\<phi>) (y # xs)", "case Or"], ["proof (state)\nthis:\n  \\<lbrakk>nqfree \\<phi>1_; nolb \\<phi>1_ xs l x; l < x;\n   x \\<notin> EQ \\<phi>1_ xs; DLO.I \\<phi>1_ (x # xs); l < y;\n   y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> DLO.I \\<phi>1_ (y # xs)\n  \\<lbrakk>nqfree \\<phi>2_; nolb \\<phi>2_ xs l x; l < x;\n   x \\<notin> EQ \\<phi>2_ xs; DLO.I \\<phi>2_ (x # xs); l < y;\n   y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> DLO.I \\<phi>2_ (y # xs)\n  nqfree (Or \\<phi>1_ \\<phi>2_)\n  nolb (Or \\<phi>1_ \\<phi>2_) xs l x\n  l < x\n  x \\<notin> EQ (Or \\<phi>1_ \\<phi>2_) xs\n  DLO.I (Or \\<phi>1_ \\<phi>2_) (x # xs)\n  l < y\n  y \\<le> x\n\ngoal (5 subgoals):\n 1. \\<lbrakk>nqfree TrueF; nolb TrueF xs l x; l < x; x \\<notin> EQ TrueF xs;\n     DLO.I TrueF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> DLO.I TrueF (y # xs)\n 2. \\<lbrakk>nqfree FalseF; nolb FalseF xs l x; l < x;\n     x \\<notin> EQ FalseF xs; DLO.I FalseF (x # xs); l < y;\n     y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> DLO.I FalseF (y # xs)\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; nolb \\<phi>1 xs l x; l < x;\n                 x \\<notin> EQ \\<phi>1 xs; DLO.I \\<phi>1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi>1 (y # xs);\n        \\<lbrakk>nqfree \\<phi>2; nolb \\<phi>2 xs l x; l < x;\n         x \\<notin> EQ \\<phi>2 xs; DLO.I \\<phi>2 (x # xs); l < y;\n         y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> DLO.I \\<phi>2 (y # xs);\n        nqfree (Or \\<phi>1 \\<phi>2); nolb (Or \\<phi>1 \\<phi>2) xs l x;\n        l < x; x \\<notin> EQ (Or \\<phi>1 \\<phi>2) xs;\n        DLO.I (Or \\<phi>1 \\<phi>2) (x # xs); l < y; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (Or \\<phi>1 \\<phi>2) (y # xs)\n 4. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; nolb \\<phi> xs l x; l < x;\n                 x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi> (y # xs);\n        nqfree (Neg \\<phi>); nolb (Neg \\<phi>) xs l x; l < x;\n        x \\<notin> EQ (Neg \\<phi>) xs; DLO.I (Neg \\<phi>) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (Neg \\<phi>) (y # xs)\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; nolb \\<phi> xs l x; l < x;\n                 x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi> (y # xs);\n        nqfree (ExQ \\<phi>); nolb (ExQ \\<phi>) xs l x; l < x;\n        x \\<notin> EQ (ExQ \\<phi>) xs; DLO.I (ExQ \\<phi>) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (ExQ \\<phi>) (y # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>nqfree \\<phi>1_; nolb \\<phi>1_ xs l x; l < x;\n   x \\<notin> EQ \\<phi>1_ xs; DLO.I \\<phi>1_ (x # xs); l < y;\n   y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> DLO.I \\<phi>1_ (y # xs)\n  \\<lbrakk>nqfree \\<phi>2_; nolb \\<phi>2_ xs l x; l < x;\n   x \\<notin> EQ \\<phi>2_ xs; DLO.I \\<phi>2_ (x # xs); l < y;\n   y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> DLO.I \\<phi>2_ (y # xs)\n  nqfree (Or \\<phi>1_ \\<phi>2_)\n  nolb (Or \\<phi>1_ \\<phi>2_) xs l x\n  l < x\n  x \\<notin> EQ (Or \\<phi>1_ \\<phi>2_) xs\n  DLO.I (Or \\<phi>1_ \\<phi>2_) (x # xs)\n  l < y\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. DLO.I (Or \\<phi>1_ \\<phi>2_) (y # xs)", "by (fastforce)"], ["proof (state)\nthis:\n  DLO.I (Or \\<phi>1_ \\<phi>2_) (y # xs)\n\ngoal (4 subgoals):\n 1. \\<lbrakk>nqfree TrueF; nolb TrueF xs l x; l < x; x \\<notin> EQ TrueF xs;\n     DLO.I TrueF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> DLO.I TrueF (y # xs)\n 2. \\<lbrakk>nqfree FalseF; nolb FalseF xs l x; l < x;\n     x \\<notin> EQ FalseF xs; DLO.I FalseF (x # xs); l < y;\n     y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> DLO.I FalseF (y # xs)\n 3. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; nolb \\<phi> xs l x; l < x;\n                 x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi> (y # xs);\n        nqfree (Neg \\<phi>); nolb (Neg \\<phi>) xs l x; l < x;\n        x \\<notin> EQ (Neg \\<phi>) xs; DLO.I (Neg \\<phi>) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (Neg \\<phi>) (y # xs)\n 4. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; nolb \\<phi> xs l x; l < x;\n                 x \\<notin> EQ \\<phi> xs; DLO.I \\<phi> (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> DLO.I \\<phi> (y # xs);\n        nqfree (ExQ \\<phi>); nolb (ExQ \\<phi>) xs l x; l < x;\n        x \\<notin> EQ (ExQ \\<phi>) xs; DLO.I (ExQ \\<phi>) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> DLO.I (ExQ \\<phi>) (y # xs)", "qed simp+"], ["", "lemma I_subst_peps2:\n \"nqfree \\<phi> \\<Longrightarrow> xs!l < x \\<Longrightarrow> nolb \\<phi> xs (xs!l) x \\<Longrightarrow> x \\<notin> EQ \\<phi> xs\n \\<Longrightarrow> \\<forall>y \\<in> {xs!l <.. x}. DLO.I \\<phi> (y#xs)\n \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nqfree \\<phi>; xs ! l < x; nolb \\<phi> xs (xs ! l) x;\n     x \\<notin> EQ \\<phi> xs;\n     \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi> (y # xs)\\<rbrakk>\n    \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs", "proof(induct \\<phi>)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>nqfree TrueF; xs ! l < x; nolb TrueF xs (xs ! l) x;\n     x \\<notin> EQ TrueF xs;\n     \\<forall>y\\<in>{xs ! l<..x}. DLO.I TrueF (y # xs)\\<rbrakk>\n    \\<Longrightarrow> DLO.I (subst\\<^sub>+ TrueF l) xs\n 2. \\<lbrakk>nqfree FalseF; xs ! l < x; nolb FalseF xs (xs ! l) x;\n     x \\<notin> EQ FalseF xs;\n     \\<forall>y\\<in>{xs ! l<..x}. DLO.I FalseF (y # xs)\\<rbrakk>\n    \\<Longrightarrow> DLO.I (subst\\<^sub>+ FalseF l) xs\n 3. \\<And>xa.\n       \\<lbrakk>nqfree (Atom xa); xs ! l < x; nolb (Atom xa) xs (xs ! l) x;\n        x \\<notin> EQ (Atom xa) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (Atom xa) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Atom xa) l) xs\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; xs ! l < x;\n                 nolb \\<phi>1 xs (xs ! l) x; x \\<notin> EQ \\<phi>1 xs;\n                 \\<forall>y\\<in>{xs ! l<..x}.\n                    DLO.I \\<phi>1 (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>1 l) xs;\n        \\<lbrakk>nqfree \\<phi>2; xs ! l < x; nolb \\<phi>2 xs (xs ! l) x;\n         x \\<notin> EQ \\<phi>2 xs;\n         \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>2 l) xs;\n        nqfree (And \\<phi>1 \\<phi>2); xs ! l < x;\n        nolb (And \\<phi>1 \\<phi>2) xs (xs ! l) x;\n        x \\<notin> EQ (And \\<phi>1 \\<phi>2) xs;\n        \\<forall>y\\<in>{xs ! l<..x}.\n           DLO.I (And \\<phi>1 \\<phi>2) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (And \\<phi>1 \\<phi>2) l) xs\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; xs ! l < x;\n                 nolb \\<phi>1 xs (xs ! l) x; x \\<notin> EQ \\<phi>1 xs;\n                 \\<forall>y\\<in>{xs ! l<..x}.\n                    DLO.I \\<phi>1 (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>1 l) xs;\n        \\<lbrakk>nqfree \\<phi>2; xs ! l < x; nolb \\<phi>2 xs (xs ! l) x;\n         x \\<notin> EQ \\<phi>2 xs;\n         \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>2 l) xs;\n        nqfree (Or \\<phi>1 \\<phi>2); xs ! l < x;\n        nolb (Or \\<phi>1 \\<phi>2) xs (xs ! l) x;\n        x \\<notin> EQ (Or \\<phi>1 \\<phi>2) xs;\n        \\<forall>y\\<in>{xs ! l<..x}.\n           DLO.I (Or \\<phi>1 \\<phi>2) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Or \\<phi>1 \\<phi>2) l) xs\n 6. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; xs ! l < x;\n                 nolb \\<phi> xs (xs ! l) x; x \\<notin> EQ \\<phi> xs;\n                 \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi> (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs;\n        nqfree (Neg \\<phi>); xs ! l < x; nolb (Neg \\<phi>) xs (xs ! l) x;\n        x \\<notin> EQ (Neg \\<phi>) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (Neg \\<phi>) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l) xs\n 7. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; xs ! l < x;\n                 nolb \\<phi> xs (xs ! l) x; x \\<notin> EQ \\<phi> xs;\n                 \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi> (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs;\n        nqfree (ExQ \\<phi>); xs ! l < x; nolb (ExQ \\<phi>) xs (xs ! l) x;\n        x \\<notin> EQ (ExQ \\<phi>) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (ExQ \\<phi>) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l) xs", "case FalseF"], ["proof (state)\nthis:\n  nqfree FalseF\n  xs ! l < x\n  nolb FalseF xs (xs ! l) x\n  x \\<notin> EQ FalseF xs\n  \\<forall>y\\<in>{xs ! l<..x}. DLO.I FalseF (y # xs)\n\ngoal (7 subgoals):\n 1. \\<lbrakk>nqfree TrueF; xs ! l < x; nolb TrueF xs (xs ! l) x;\n     x \\<notin> EQ TrueF xs;\n     \\<forall>y\\<in>{xs ! l<..x}. DLO.I TrueF (y # xs)\\<rbrakk>\n    \\<Longrightarrow> DLO.I (subst\\<^sub>+ TrueF l) xs\n 2. \\<lbrakk>nqfree FalseF; xs ! l < x; nolb FalseF xs (xs ! l) x;\n     x \\<notin> EQ FalseF xs;\n     \\<forall>y\\<in>{xs ! l<..x}. DLO.I FalseF (y # xs)\\<rbrakk>\n    \\<Longrightarrow> DLO.I (subst\\<^sub>+ FalseF l) xs\n 3. \\<And>xa.\n       \\<lbrakk>nqfree (Atom xa); xs ! l < x; nolb (Atom xa) xs (xs ! l) x;\n        x \\<notin> EQ (Atom xa) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (Atom xa) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Atom xa) l) xs\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; xs ! l < x;\n                 nolb \\<phi>1 xs (xs ! l) x; x \\<notin> EQ \\<phi>1 xs;\n                 \\<forall>y\\<in>{xs ! l<..x}.\n                    DLO.I \\<phi>1 (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>1 l) xs;\n        \\<lbrakk>nqfree \\<phi>2; xs ! l < x; nolb \\<phi>2 xs (xs ! l) x;\n         x \\<notin> EQ \\<phi>2 xs;\n         \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>2 l) xs;\n        nqfree (And \\<phi>1 \\<phi>2); xs ! l < x;\n        nolb (And \\<phi>1 \\<phi>2) xs (xs ! l) x;\n        x \\<notin> EQ (And \\<phi>1 \\<phi>2) xs;\n        \\<forall>y\\<in>{xs ! l<..x}.\n           DLO.I (And \\<phi>1 \\<phi>2) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (And \\<phi>1 \\<phi>2) l) xs\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; xs ! l < x;\n                 nolb \\<phi>1 xs (xs ! l) x; x \\<notin> EQ \\<phi>1 xs;\n                 \\<forall>y\\<in>{xs ! l<..x}.\n                    DLO.I \\<phi>1 (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>1 l) xs;\n        \\<lbrakk>nqfree \\<phi>2; xs ! l < x; nolb \\<phi>2 xs (xs ! l) x;\n         x \\<notin> EQ \\<phi>2 xs;\n         \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>2 l) xs;\n        nqfree (Or \\<phi>1 \\<phi>2); xs ! l < x;\n        nolb (Or \\<phi>1 \\<phi>2) xs (xs ! l) x;\n        x \\<notin> EQ (Or \\<phi>1 \\<phi>2) xs;\n        \\<forall>y\\<in>{xs ! l<..x}.\n           DLO.I (Or \\<phi>1 \\<phi>2) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Or \\<phi>1 \\<phi>2) l) xs\n 6. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; xs ! l < x;\n                 nolb \\<phi> xs (xs ! l) x; x \\<notin> EQ \\<phi> xs;\n                 \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi> (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs;\n        nqfree (Neg \\<phi>); xs ! l < x; nolb (Neg \\<phi>) xs (xs ! l) x;\n        x \\<notin> EQ (Neg \\<phi>) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (Neg \\<phi>) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l) xs\n 7. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; xs ! l < x;\n                 nolb \\<phi> xs (xs ! l) x; x \\<notin> EQ \\<phi> xs;\n                 \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi> (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs;\n        nqfree (ExQ \\<phi>); xs ! l < x; nolb (ExQ \\<phi>) xs (xs ! l) x;\n        x \\<notin> EQ (ExQ \\<phi>) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (ExQ \\<phi>) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l) xs", "thus ?case"], ["proof (prove)\nusing this:\n  nqfree FalseF\n  xs ! l < x\n  nolb FalseF xs (xs ! l) x\n  x \\<notin> EQ FalseF xs\n  \\<forall>y\\<in>{xs ! l<..x}. DLO.I FalseF (y # xs)\n\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ FalseF l) xs", "by simp (metis antisym_conv1 linorder_neq_iff)"], ["proof (state)\nthis:\n  DLO.I (subst\\<^sub>+ FalseF l) xs\n\ngoal (6 subgoals):\n 1. \\<lbrakk>nqfree TrueF; xs ! l < x; nolb TrueF xs (xs ! l) x;\n     x \\<notin> EQ TrueF xs;\n     \\<forall>y\\<in>{xs ! l<..x}. DLO.I TrueF (y # xs)\\<rbrakk>\n    \\<Longrightarrow> DLO.I (subst\\<^sub>+ TrueF l) xs\n 2. \\<And>xa.\n       \\<lbrakk>nqfree (Atom xa); xs ! l < x; nolb (Atom xa) xs (xs ! l) x;\n        x \\<notin> EQ (Atom xa) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (Atom xa) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Atom xa) l) xs\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; xs ! l < x;\n                 nolb \\<phi>1 xs (xs ! l) x; x \\<notin> EQ \\<phi>1 xs;\n                 \\<forall>y\\<in>{xs ! l<..x}.\n                    DLO.I \\<phi>1 (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>1 l) xs;\n        \\<lbrakk>nqfree \\<phi>2; xs ! l < x; nolb \\<phi>2 xs (xs ! l) x;\n         x \\<notin> EQ \\<phi>2 xs;\n         \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>2 l) xs;\n        nqfree (And \\<phi>1 \\<phi>2); xs ! l < x;\n        nolb (And \\<phi>1 \\<phi>2) xs (xs ! l) x;\n        x \\<notin> EQ (And \\<phi>1 \\<phi>2) xs;\n        \\<forall>y\\<in>{xs ! l<..x}.\n           DLO.I (And \\<phi>1 \\<phi>2) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (And \\<phi>1 \\<phi>2) l) xs\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; xs ! l < x;\n                 nolb \\<phi>1 xs (xs ! l) x; x \\<notin> EQ \\<phi>1 xs;\n                 \\<forall>y\\<in>{xs ! l<..x}.\n                    DLO.I \\<phi>1 (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>1 l) xs;\n        \\<lbrakk>nqfree \\<phi>2; xs ! l < x; nolb \\<phi>2 xs (xs ! l) x;\n         x \\<notin> EQ \\<phi>2 xs;\n         \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>2 l) xs;\n        nqfree (Or \\<phi>1 \\<phi>2); xs ! l < x;\n        nolb (Or \\<phi>1 \\<phi>2) xs (xs ! l) x;\n        x \\<notin> EQ (Or \\<phi>1 \\<phi>2) xs;\n        \\<forall>y\\<in>{xs ! l<..x}.\n           DLO.I (Or \\<phi>1 \\<phi>2) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Or \\<phi>1 \\<phi>2) l) xs\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; xs ! l < x;\n                 nolb \\<phi> xs (xs ! l) x; x \\<notin> EQ \\<phi> xs;\n                 \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi> (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs;\n        nqfree (Neg \\<phi>); xs ! l < x; nolb (Neg \\<phi>) xs (xs ! l) x;\n        x \\<notin> EQ (Neg \\<phi>) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (Neg \\<phi>) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l) xs\n 6. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; xs ! l < x;\n                 nolb \\<phi> xs (xs ! l) x; x \\<notin> EQ \\<phi> xs;\n                 \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi> (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs;\n        nqfree (ExQ \\<phi>); xs ! l < x; nolb (ExQ \\<phi>) xs (xs ! l) x;\n        x \\<notin> EQ (ExQ \\<phi>) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (ExQ \\<phi>) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l) xs", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<lbrakk>nqfree TrueF; xs ! l < x; nolb TrueF xs (xs ! l) x;\n     x \\<notin> EQ TrueF xs;\n     \\<forall>y\\<in>{xs ! l<..x}. DLO.I TrueF (y # xs)\\<rbrakk>\n    \\<Longrightarrow> DLO.I (subst\\<^sub>+ TrueF l) xs\n 2. \\<And>xa.\n       \\<lbrakk>nqfree (Atom xa); xs ! l < x; nolb (Atom xa) xs (xs ! l) x;\n        x \\<notin> EQ (Atom xa) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (Atom xa) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Atom xa) l) xs\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; xs ! l < x;\n                 nolb \\<phi>1 xs (xs ! l) x; x \\<notin> EQ \\<phi>1 xs;\n                 \\<forall>y\\<in>{xs ! l<..x}.\n                    DLO.I \\<phi>1 (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>1 l) xs;\n        \\<lbrakk>nqfree \\<phi>2; xs ! l < x; nolb \\<phi>2 xs (xs ! l) x;\n         x \\<notin> EQ \\<phi>2 xs;\n         \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>2 l) xs;\n        nqfree (And \\<phi>1 \\<phi>2); xs ! l < x;\n        nolb (And \\<phi>1 \\<phi>2) xs (xs ! l) x;\n        x \\<notin> EQ (And \\<phi>1 \\<phi>2) xs;\n        \\<forall>y\\<in>{xs ! l<..x}.\n           DLO.I (And \\<phi>1 \\<phi>2) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (And \\<phi>1 \\<phi>2) l) xs\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; xs ! l < x;\n                 nolb \\<phi>1 xs (xs ! l) x; x \\<notin> EQ \\<phi>1 xs;\n                 \\<forall>y\\<in>{xs ! l<..x}.\n                    DLO.I \\<phi>1 (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>1 l) xs;\n        \\<lbrakk>nqfree \\<phi>2; xs ! l < x; nolb \\<phi>2 xs (xs ! l) x;\n         x \\<notin> EQ \\<phi>2 xs;\n         \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>2 l) xs;\n        nqfree (Or \\<phi>1 \\<phi>2); xs ! l < x;\n        nolb (Or \\<phi>1 \\<phi>2) xs (xs ! l) x;\n        x \\<notin> EQ (Or \\<phi>1 \\<phi>2) xs;\n        \\<forall>y\\<in>{xs ! l<..x}.\n           DLO.I (Or \\<phi>1 \\<phi>2) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Or \\<phi>1 \\<phi>2) l) xs\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; xs ! l < x;\n                 nolb \\<phi> xs (xs ! l) x; x \\<notin> EQ \\<phi> xs;\n                 \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi> (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs;\n        nqfree (Neg \\<phi>); xs ! l < x; nolb (Neg \\<phi>) xs (xs ! l) x;\n        x \\<notin> EQ (Neg \\<phi>) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (Neg \\<phi>) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l) xs\n 6. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; xs ! l < x;\n                 nolb \\<phi> xs (xs ! l) x; x \\<notin> EQ \\<phi> xs;\n                 \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi> (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs;\n        nqfree (ExQ \\<phi>); xs ! l < x; nolb (ExQ \\<phi>) xs (xs ! l) x;\n        x \\<notin> EQ (ExQ \\<phi>) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (ExQ \\<phi>) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l) xs", "case (Atom a)"], ["proof (state)\nthis:\n  nqfree (Atom a)\n  xs ! l < x\n  nolb (Atom a) xs (xs ! l) x\n  x \\<notin> EQ (Atom a) xs\n  \\<forall>y\\<in>{xs ! l<..x}. DLO.I (Atom a) (y # xs)\n\ngoal (6 subgoals):\n 1. \\<lbrakk>nqfree TrueF; xs ! l < x; nolb TrueF xs (xs ! l) x;\n     x \\<notin> EQ TrueF xs;\n     \\<forall>y\\<in>{xs ! l<..x}. DLO.I TrueF (y # xs)\\<rbrakk>\n    \\<Longrightarrow> DLO.I (subst\\<^sub>+ TrueF l) xs\n 2. \\<And>xa.\n       \\<lbrakk>nqfree (Atom xa); xs ! l < x; nolb (Atom xa) xs (xs ! l) x;\n        x \\<notin> EQ (Atom xa) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (Atom xa) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Atom xa) l) xs\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; xs ! l < x;\n                 nolb \\<phi>1 xs (xs ! l) x; x \\<notin> EQ \\<phi>1 xs;\n                 \\<forall>y\\<in>{xs ! l<..x}.\n                    DLO.I \\<phi>1 (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>1 l) xs;\n        \\<lbrakk>nqfree \\<phi>2; xs ! l < x; nolb \\<phi>2 xs (xs ! l) x;\n         x \\<notin> EQ \\<phi>2 xs;\n         \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>2 l) xs;\n        nqfree (And \\<phi>1 \\<phi>2); xs ! l < x;\n        nolb (And \\<phi>1 \\<phi>2) xs (xs ! l) x;\n        x \\<notin> EQ (And \\<phi>1 \\<phi>2) xs;\n        \\<forall>y\\<in>{xs ! l<..x}.\n           DLO.I (And \\<phi>1 \\<phi>2) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (And \\<phi>1 \\<phi>2) l) xs\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; xs ! l < x;\n                 nolb \\<phi>1 xs (xs ! l) x; x \\<notin> EQ \\<phi>1 xs;\n                 \\<forall>y\\<in>{xs ! l<..x}.\n                    DLO.I \\<phi>1 (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>1 l) xs;\n        \\<lbrakk>nqfree \\<phi>2; xs ! l < x; nolb \\<phi>2 xs (xs ! l) x;\n         x \\<notin> EQ \\<phi>2 xs;\n         \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>2 l) xs;\n        nqfree (Or \\<phi>1 \\<phi>2); xs ! l < x;\n        nolb (Or \\<phi>1 \\<phi>2) xs (xs ! l) x;\n        x \\<notin> EQ (Or \\<phi>1 \\<phi>2) xs;\n        \\<forall>y\\<in>{xs ! l<..x}.\n           DLO.I (Or \\<phi>1 \\<phi>2) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Or \\<phi>1 \\<phi>2) l) xs\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; xs ! l < x;\n                 nolb \\<phi> xs (xs ! l) x; x \\<notin> EQ \\<phi> xs;\n                 \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi> (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs;\n        nqfree (Neg \\<phi>); xs ! l < x; nolb (Neg \\<phi>) xs (xs ! l) x;\n        x \\<notin> EQ (Neg \\<phi>) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (Neg \\<phi>) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l) xs\n 6. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; xs ! l < x;\n                 nolb \\<phi> xs (xs ! l) x; x \\<notin> EQ \\<phi> xs;\n                 \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi> (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs;\n        nqfree (ExQ \\<phi>); xs ! l < x; nolb (ExQ \\<phi>) xs (xs ! l) x;\n        x \\<notin> EQ (ExQ \\<phi>) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (ExQ \\<phi>) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l) xs", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ (Atom a) l) xs", "proof(cases \"(l,a)\" rule:asubst_peps.cases)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>k.\n       (l, a) = (k, Less 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs\n 2. \\<And>k j.\n       (l, a) = (k, Less 0 (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs\n 3. \\<And>k i.\n       (l, a) = (k, Less (Suc i) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs\n 4. \\<And>k i j.\n       (l, a) = (k, Less (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs\n 5. \\<And>k.\n       (l, a) = (k, Eq 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs\n 6. \\<And>k v.\n       (l, a) = (k, Eq 0 (Suc v)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs\n 7. \\<And>k v.\n       (l, a) = (k, Eq (Suc v) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs\n 8. \\<And>k i j.\n       (l, a) = (k, Eq (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs", "case 3"], ["proof (state)\nthis:\n  (l, a) = (k_, Less (Suc i_) 0)\n\ngoal (8 subgoals):\n 1. \\<And>k.\n       (l, a) = (k, Less 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs\n 2. \\<And>k j.\n       (l, a) = (k, Less 0 (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs\n 3. \\<And>k i.\n       (l, a) = (k, Less (Suc i) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs\n 4. \\<And>k i j.\n       (l, a) = (k, Less (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs\n 5. \\<And>k.\n       (l, a) = (k, Eq 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs\n 6. \\<And>k v.\n       (l, a) = (k, Eq 0 (Suc v)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs\n 7. \\<And>k v.\n       (l, a) = (k, Eq (Suc v) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs\n 8. \\<And>k i j.\n       (l, a) = (k, Eq (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs", "thus ?thesis"], ["proof (prove)\nusing this:\n  (l, a) = (k_, Less (Suc i_) 0)\n\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ (Atom a) l) xs", "using Atom"], ["proof (prove)\nusing this:\n  (l, a) = (k_, Less (Suc i_) 0)\n  nqfree (Atom a)\n  xs ! l < x\n  nolb (Atom a) xs (xs ! l) x\n  x \\<notin> EQ (Atom a) xs\n  \\<forall>y\\<in>{xs ! l<..x}. DLO.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ (Atom a) l) xs", "by (auto simp: nolb_def EQ_def Ball_def)\n         (metis One_nat_def antisym_conv1 not_less_iff_gr_or_eq)"], ["proof (state)\nthis:\n  DLO.I (subst\\<^sub>+ (Atom a) l) xs\n\ngoal (7 subgoals):\n 1. \\<And>k.\n       (l, a) = (k, Less 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs\n 2. \\<And>k j.\n       (l, a) = (k, Less 0 (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs\n 3. \\<And>k i j.\n       (l, a) = (k, Less (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs\n 4. \\<And>k.\n       (l, a) = (k, Eq 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs\n 5. \\<And>k v.\n       (l, a) = (k, Eq 0 (Suc v)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs\n 6. \\<And>k v.\n       (l, a) = (k, Eq (Suc v) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs\n 7. \\<And>k i j.\n       (l, a) = (k, Eq (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs", "qed (insert Atom, auto simp: nolb_def EQ_def Ball_def)"], ["proof (state)\nthis:\n  DLO.I (subst\\<^sub>+ (Atom a) l) xs\n\ngoal (5 subgoals):\n 1. \\<lbrakk>nqfree TrueF; xs ! l < x; nolb TrueF xs (xs ! l) x;\n     x \\<notin> EQ TrueF xs;\n     \\<forall>y\\<in>{xs ! l<..x}. DLO.I TrueF (y # xs)\\<rbrakk>\n    \\<Longrightarrow> DLO.I (subst\\<^sub>+ TrueF l) xs\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; xs ! l < x;\n                 nolb \\<phi>1 xs (xs ! l) x; x \\<notin> EQ \\<phi>1 xs;\n                 \\<forall>y\\<in>{xs ! l<..x}.\n                    DLO.I \\<phi>1 (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>1 l) xs;\n        \\<lbrakk>nqfree \\<phi>2; xs ! l < x; nolb \\<phi>2 xs (xs ! l) x;\n         x \\<notin> EQ \\<phi>2 xs;\n         \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>2 l) xs;\n        nqfree (And \\<phi>1 \\<phi>2); xs ! l < x;\n        nolb (And \\<phi>1 \\<phi>2) xs (xs ! l) x;\n        x \\<notin> EQ (And \\<phi>1 \\<phi>2) xs;\n        \\<forall>y\\<in>{xs ! l<..x}.\n           DLO.I (And \\<phi>1 \\<phi>2) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (And \\<phi>1 \\<phi>2) l) xs\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; xs ! l < x;\n                 nolb \\<phi>1 xs (xs ! l) x; x \\<notin> EQ \\<phi>1 xs;\n                 \\<forall>y\\<in>{xs ! l<..x}.\n                    DLO.I \\<phi>1 (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>1 l) xs;\n        \\<lbrakk>nqfree \\<phi>2; xs ! l < x; nolb \\<phi>2 xs (xs ! l) x;\n         x \\<notin> EQ \\<phi>2 xs;\n         \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>2 l) xs;\n        nqfree (Or \\<phi>1 \\<phi>2); xs ! l < x;\n        nolb (Or \\<phi>1 \\<phi>2) xs (xs ! l) x;\n        x \\<notin> EQ (Or \\<phi>1 \\<phi>2) xs;\n        \\<forall>y\\<in>{xs ! l<..x}.\n           DLO.I (Or \\<phi>1 \\<phi>2) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Or \\<phi>1 \\<phi>2) l) xs\n 4. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; xs ! l < x;\n                 nolb \\<phi> xs (xs ! l) x; x \\<notin> EQ \\<phi> xs;\n                 \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi> (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs;\n        nqfree (Neg \\<phi>); xs ! l < x; nolb (Neg \\<phi>) xs (xs ! l) x;\n        x \\<notin> EQ (Neg \\<phi>) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (Neg \\<phi>) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l) xs\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; xs ! l < x;\n                 nolb \\<phi> xs (xs ! l) x; x \\<notin> EQ \\<phi> xs;\n                 \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi> (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs;\n        nqfree (ExQ \\<phi>); xs ! l < x; nolb (ExQ \\<phi>) xs (xs ! l) x;\n        x \\<notin> EQ (ExQ \\<phi>) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (ExQ \\<phi>) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l) xs", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<lbrakk>nqfree TrueF; xs ! l < x; nolb TrueF xs (xs ! l) x;\n     x \\<notin> EQ TrueF xs;\n     \\<forall>y\\<in>{xs ! l<..x}. DLO.I TrueF (y # xs)\\<rbrakk>\n    \\<Longrightarrow> DLO.I (subst\\<^sub>+ TrueF l) xs\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; xs ! l < x;\n                 nolb \\<phi>1 xs (xs ! l) x; x \\<notin> EQ \\<phi>1 xs;\n                 \\<forall>y\\<in>{xs ! l<..x}.\n                    DLO.I \\<phi>1 (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>1 l) xs;\n        \\<lbrakk>nqfree \\<phi>2; xs ! l < x; nolb \\<phi>2 xs (xs ! l) x;\n         x \\<notin> EQ \\<phi>2 xs;\n         \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>2 l) xs;\n        nqfree (And \\<phi>1 \\<phi>2); xs ! l < x;\n        nolb (And \\<phi>1 \\<phi>2) xs (xs ! l) x;\n        x \\<notin> EQ (And \\<phi>1 \\<phi>2) xs;\n        \\<forall>y\\<in>{xs ! l<..x}.\n           DLO.I (And \\<phi>1 \\<phi>2) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (And \\<phi>1 \\<phi>2) l) xs\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; xs ! l < x;\n                 nolb \\<phi>1 xs (xs ! l) x; x \\<notin> EQ \\<phi>1 xs;\n                 \\<forall>y\\<in>{xs ! l<..x}.\n                    DLO.I \\<phi>1 (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>1 l) xs;\n        \\<lbrakk>nqfree \\<phi>2; xs ! l < x; nolb \\<phi>2 xs (xs ! l) x;\n         x \\<notin> EQ \\<phi>2 xs;\n         \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>2 l) xs;\n        nqfree (Or \\<phi>1 \\<phi>2); xs ! l < x;\n        nolb (Or \\<phi>1 \\<phi>2) xs (xs ! l) x;\n        x \\<notin> EQ (Or \\<phi>1 \\<phi>2) xs;\n        \\<forall>y\\<in>{xs ! l<..x}.\n           DLO.I (Or \\<phi>1 \\<phi>2) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Or \\<phi>1 \\<phi>2) l) xs\n 4. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; xs ! l < x;\n                 nolb \\<phi> xs (xs ! l) x; x \\<notin> EQ \\<phi> xs;\n                 \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi> (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs;\n        nqfree (Neg \\<phi>); xs ! l < x; nolb (Neg \\<phi>) xs (xs ! l) x;\n        x \\<notin> EQ (Neg \\<phi>) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (Neg \\<phi>) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l) xs\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; xs ! l < x;\n                 nolb \\<phi> xs (xs ! l) x; x \\<notin> EQ \\<phi> xs;\n                 \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi> (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs;\n        nqfree (ExQ \\<phi>); xs ! l < x; nolb (ExQ \\<phi>) xs (xs ! l) x;\n        x \\<notin> EQ (ExQ \\<phi>) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (ExQ \\<phi>) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l) xs", "case Or"], ["proof (state)\nthis:\n  \\<lbrakk>nqfree \\<phi>1_; xs ! l < x; nolb \\<phi>1_ xs (xs ! l) x;\n   x \\<notin> EQ \\<phi>1_ xs;\n   \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>1_ (y # xs)\\<rbrakk>\n  \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>1_ l) xs\n  \\<lbrakk>nqfree \\<phi>2_; xs ! l < x; nolb \\<phi>2_ xs (xs ! l) x;\n   x \\<notin> EQ \\<phi>2_ xs;\n   \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>2_ (y # xs)\\<rbrakk>\n  \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>2_ l) xs\n  nqfree (Or \\<phi>1_ \\<phi>2_)\n  xs ! l < x\n  nolb (Or \\<phi>1_ \\<phi>2_) xs (xs ! l) x\n  x \\<notin> EQ (Or \\<phi>1_ \\<phi>2_) xs\n  \\<forall>y\\<in>{xs ! l<..x}. DLO.I (Or \\<phi>1_ \\<phi>2_) (y # xs)\n\ngoal (5 subgoals):\n 1. \\<lbrakk>nqfree TrueF; xs ! l < x; nolb TrueF xs (xs ! l) x;\n     x \\<notin> EQ TrueF xs;\n     \\<forall>y\\<in>{xs ! l<..x}. DLO.I TrueF (y # xs)\\<rbrakk>\n    \\<Longrightarrow> DLO.I (subst\\<^sub>+ TrueF l) xs\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; xs ! l < x;\n                 nolb \\<phi>1 xs (xs ! l) x; x \\<notin> EQ \\<phi>1 xs;\n                 \\<forall>y\\<in>{xs ! l<..x}.\n                    DLO.I \\<phi>1 (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>1 l) xs;\n        \\<lbrakk>nqfree \\<phi>2; xs ! l < x; nolb \\<phi>2 xs (xs ! l) x;\n         x \\<notin> EQ \\<phi>2 xs;\n         \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>2 l) xs;\n        nqfree (And \\<phi>1 \\<phi>2); xs ! l < x;\n        nolb (And \\<phi>1 \\<phi>2) xs (xs ! l) x;\n        x \\<notin> EQ (And \\<phi>1 \\<phi>2) xs;\n        \\<forall>y\\<in>{xs ! l<..x}.\n           DLO.I (And \\<phi>1 \\<phi>2) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (And \\<phi>1 \\<phi>2) l) xs\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; xs ! l < x;\n                 nolb \\<phi>1 xs (xs ! l) x; x \\<notin> EQ \\<phi>1 xs;\n                 \\<forall>y\\<in>{xs ! l<..x}.\n                    DLO.I \\<phi>1 (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>1 l) xs;\n        \\<lbrakk>nqfree \\<phi>2; xs ! l < x; nolb \\<phi>2 xs (xs ! l) x;\n         x \\<notin> EQ \\<phi>2 xs;\n         \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>2 l) xs;\n        nqfree (Or \\<phi>1 \\<phi>2); xs ! l < x;\n        nolb (Or \\<phi>1 \\<phi>2) xs (xs ! l) x;\n        x \\<notin> EQ (Or \\<phi>1 \\<phi>2) xs;\n        \\<forall>y\\<in>{xs ! l<..x}.\n           DLO.I (Or \\<phi>1 \\<phi>2) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Or \\<phi>1 \\<phi>2) l) xs\n 4. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; xs ! l < x;\n                 nolb \\<phi> xs (xs ! l) x; x \\<notin> EQ \\<phi> xs;\n                 \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi> (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs;\n        nqfree (Neg \\<phi>); xs ! l < x; nolb (Neg \\<phi>) xs (xs ! l) x;\n        x \\<notin> EQ (Neg \\<phi>) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (Neg \\<phi>) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l) xs\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; xs ! l < x;\n                 nolb \\<phi> xs (xs ! l) x; x \\<notin> EQ \\<phi> xs;\n                 \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi> (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs;\n        nqfree (ExQ \\<phi>); xs ! l < x; nolb (ExQ \\<phi>) xs (xs ! l) x;\n        x \\<notin> EQ (ExQ \\<phi>) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (ExQ \\<phi>) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l) xs", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>nqfree \\<phi>1_; xs ! l < x; nolb \\<phi>1_ xs (xs ! l) x;\n   x \\<notin> EQ \\<phi>1_ xs;\n   \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>1_ (y # xs)\\<rbrakk>\n  \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>1_ l) xs\n  \\<lbrakk>nqfree \\<phi>2_; xs ! l < x; nolb \\<phi>2_ xs (xs ! l) x;\n   x \\<notin> EQ \\<phi>2_ xs;\n   \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>2_ (y # xs)\\<rbrakk>\n  \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>2_ l) xs\n  nqfree (Or \\<phi>1_ \\<phi>2_)\n  xs ! l < x\n  nolb (Or \\<phi>1_ \\<phi>2_) xs (xs ! l) x\n  x \\<notin> EQ (Or \\<phi>1_ \\<phi>2_) xs\n  \\<forall>y\\<in>{xs ! l<..x}. DLO.I (Or \\<phi>1_ \\<phi>2_) (y # xs)\n\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ (Or \\<phi>1_ \\<phi>2_) l) xs", "by(simp add: Ball_def)(metis order_refl innermost_intvl)"], ["proof (state)\nthis:\n  DLO.I (subst\\<^sub>+ (Or \\<phi>1_ \\<phi>2_) l) xs\n\ngoal (4 subgoals):\n 1. \\<lbrakk>nqfree TrueF; xs ! l < x; nolb TrueF xs (xs ! l) x;\n     x \\<notin> EQ TrueF xs;\n     \\<forall>y\\<in>{xs ! l<..x}. DLO.I TrueF (y # xs)\\<rbrakk>\n    \\<Longrightarrow> DLO.I (subst\\<^sub>+ TrueF l) xs\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>1; xs ! l < x;\n                 nolb \\<phi>1 xs (xs ! l) x; x \\<notin> EQ \\<phi>1 xs;\n                 \\<forall>y\\<in>{xs ! l<..x}.\n                    DLO.I \\<phi>1 (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>1 l) xs;\n        \\<lbrakk>nqfree \\<phi>2; xs ! l < x; nolb \\<phi>2 xs (xs ! l) x;\n         x \\<notin> EQ \\<phi>2 xs;\n         \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi>2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi>2 l) xs;\n        nqfree (And \\<phi>1 \\<phi>2); xs ! l < x;\n        nolb (And \\<phi>1 \\<phi>2) xs (xs ! l) x;\n        x \\<notin> EQ (And \\<phi>1 \\<phi>2) xs;\n        \\<forall>y\\<in>{xs ! l<..x}.\n           DLO.I (And \\<phi>1 \\<phi>2) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (And \\<phi>1 \\<phi>2) l) xs\n 3. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; xs ! l < x;\n                 nolb \\<phi> xs (xs ! l) x; x \\<notin> EQ \\<phi> xs;\n                 \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi> (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs;\n        nqfree (Neg \\<phi>); xs ! l < x; nolb (Neg \\<phi>) xs (xs ! l) x;\n        x \\<notin> EQ (Neg \\<phi>) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (Neg \\<phi>) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l) xs\n 4. \\<And>\\<phi>.\n       \\<lbrakk>\\<lbrakk>nqfree \\<phi>; xs ! l < x;\n                 nolb \\<phi> xs (xs ! l) x; x \\<notin> EQ \\<phi> xs;\n                 \\<forall>y\\<in>{xs ! l<..x}. DLO.I \\<phi> (y # xs)\\<rbrakk>\n                \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs;\n        nqfree (ExQ \\<phi>); xs ! l < x; nolb (ExQ \\<phi>) xs (xs ! l) x;\n        x \\<notin> EQ (ExQ \\<phi>) xs;\n        \\<forall>y\\<in>{xs ! l<..x}. DLO.I (ExQ \\<phi>) (y # xs)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l) xs", "qed simp_all"], ["", "end"], ["", "lemma dense_interval:\nassumes \"finite L\" \"l \\<in> L\" \"l < x\" \"P(x::'a::dlo)\"\nand dense: \"\\<And>y l. \\<lbrakk> \\<forall>y\\<in>{l<..<x}. y \\<notin> L; l<x; l<y; y\\<le>x \\<rbrakk> \\<Longrightarrow> P y\"\nshows \"\\<exists>l\\<in>L. l<x \\<and> (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and> (\\<forall>y. l<y \\<and> y\\<le>x \\<longrightarrow> P y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "let ?L = \"{l\\<in>L. l < x}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "let ?ll = \"Max ?L\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "have \"?L \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {l \\<in> L. l < x} \\<noteq> {}", "using \\<open>l \\<in> L\\<close> \\<open>l<x\\<close>"], ["proof (prove)\nusing this:\n  l \\<in> L\n  l < x\n\ngoal (1 subgoal):\n 1. {l \\<in> L. l < x} \\<noteq> {}", "by (blast intro:order_less_imp_le)"], ["proof (state)\nthis:\n  {l \\<in> L. l < x} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "hence \"\\<forall>y. ?ll<y \\<and> y<x \\<longrightarrow> y \\<notin> L\""], ["proof (prove)\nusing this:\n  {l \\<in> L. l < x} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<forall>y.\n       Max {l \\<in> L. l < x} < y \\<and> y < x \\<longrightarrow>\n       y \\<notin> L", "using \\<open>finite L\\<close>"], ["proof (prove)\nusing this:\n  {l \\<in> L. l < x} \\<noteq> {}\n  finite L\n\ngoal (1 subgoal):\n 1. \\<forall>y.\n       Max {l \\<in> L. l < x} < y \\<and> y < x \\<longrightarrow>\n       y \\<notin> L", "by force"], ["proof (state)\nthis:\n  \\<forall>y.\n     Max {l \\<in> L. l < x} < y \\<and> y < x \\<longrightarrow> y \\<notin> L\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "moreover"], ["proof (state)\nthis:\n  \\<forall>y.\n     Max {l \\<in> L. l < x} < y \\<and> y < x \\<longrightarrow> y \\<notin> L\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "have \"?ll \\<in> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max {l \\<in> L. l < x} \\<in> L", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. Max {l \\<in> L. l < x} \\<in> ?A\n 2. ?A \\<subseteq> L", "show \"?ll \\<in> ?L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max {l \\<in> L. l < x} \\<in> {l \\<in> L. l < x}", "using \\<open>finite L\\<close> Max_in[OF _ \\<open>?L \\<noteq> {}\\<close>]"], ["proof (prove)\nusing this:\n  finite L\n  finite {l \\<in> L. l < x} \\<Longrightarrow>\n  Max {l \\<in> L. l < x} \\<in> {l \\<in> L. l < x}\n\ngoal (1 subgoal):\n 1. Max {l \\<in> L. l < x} \\<in> {l \\<in> L. l < x}", "by simp"], ["proof (state)\nthis:\n  Max {l \\<in> L. l < x} \\<in> {l \\<in> L. l < x}\n\ngoal (1 subgoal):\n 1. {l \\<in> L. l < x} \\<subseteq> L", "show \"?L \\<subseteq> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {l \\<in> L. l < x} \\<subseteq> L", "by blast"], ["proof (state)\nthis:\n  {l \\<in> L. l < x} \\<subseteq> L\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Max {l \\<in> L. l < x} \\<in> L\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "moreover"], ["proof (state)\nthis:\n  Max {l \\<in> L. l < x} \\<in> L\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "have \"?ll < x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max {l \\<in> L. l < x} < x", "using \\<open>finite L\\<close> \\<open>?L \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  finite L\n  {l \\<in> L. l < x} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Max {l \\<in> L. l < x} < x", "by simp"], ["proof (state)\nthis:\n  Max {l \\<in> L. l < x} < x\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>y.\n     Max {l \\<in> L. l < x} < y \\<and> y < x \\<longrightarrow> y \\<notin> L\n  Max {l \\<in> L. l < x} \\<in> L\n  Max {l \\<in> L. l < x} < x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>y.\n     Max {l \\<in> L. l < x} < y \\<and> y < x \\<longrightarrow> y \\<notin> L\n  Max {l \\<in> L. l < x} \\<in> L\n  Max {l \\<in> L. l < x} < x\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "using \\<open>l < x\\<close> \\<open>?L \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>y.\n     Max {l \\<in> L. l < x} < y \\<and> y < x \\<longrightarrow> y \\<notin> L\n  Max {l \\<in> L. l < x} \\<in> L\n  Max {l \\<in> L. l < x} < x\n  l < x\n  {l \\<in> L. l < x} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "by(blast intro!:dense greaterThanLessThan_iff[THEN iffD1])"], ["proof (state)\nthis:\n  \\<exists>l\\<in>L.\n     l < x \\<and>\n     (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n     (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma I_subst_peps:\n  \"nqfree \\<phi> \\<Longrightarrow> DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n  (\\<exists>leps>xs!l. \\<forall>x. xs!l < x \\<and> x \\<le> leps \\<longrightarrow> DLO.I \\<phi> (x#xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nqfree \\<phi> \\<Longrightarrow>\n    DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I \\<phi> (x # xs))", "proof(induct \\<phi>)"], ["proof (state)\ngoal (7 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    DLO.I (subst\\<^sub>+ TrueF l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I TrueF (x # xs))\n 2. nqfree FalseF \\<Longrightarrow>\n    DLO.I (subst\\<^sub>+ FalseF l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I FalseF (x # xs))\n 3. \\<And>x.\n       nqfree (Atom x) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom x) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>xa.\n              xs ! l < xa \\<and> xa \\<le> leps \\<longrightarrow>\n              DLO.I (Atom x) (xa # xs))\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>nqfree \\<phi>1 \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi>1 l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi>1 (x # xs));\n        nqfree \\<phi>2 \\<Longrightarrow>\n        DLO.I (subst\\<^sub>+ \\<phi>2 l) xs \\<longrightarrow>\n        (\\<exists>leps>xs ! l.\n            \\<forall>x.\n               xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n               DLO.I \\<phi>2 (x # xs));\n        nqfree (And \\<phi>1 \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (And \\<phi>1 \\<phi>2) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (And \\<phi>1 \\<phi>2) (x # xs))\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>nqfree \\<phi>1 \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi>1 l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi>1 (x # xs));\n        nqfree \\<phi>2 \\<Longrightarrow>\n        DLO.I (subst\\<^sub>+ \\<phi>2 l) xs \\<longrightarrow>\n        (\\<exists>leps>xs ! l.\n            \\<forall>x.\n               xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n               DLO.I \\<phi>2 (x # xs));\n        nqfree (Or \\<phi>1 \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Or \\<phi>1 \\<phi>2) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Or \\<phi>1 \\<phi>2) (x # xs))\n 6. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (Neg \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Neg \\<phi>) (x # xs))\n 7. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (ExQ \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (ExQ \\<phi>) (x # xs))", "case TrueF"], ["proof (state)\nthis:\n  nqfree TrueF\n\ngoal (7 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    DLO.I (subst\\<^sub>+ TrueF l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I TrueF (x # xs))\n 2. nqfree FalseF \\<Longrightarrow>\n    DLO.I (subst\\<^sub>+ FalseF l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I FalseF (x # xs))\n 3. \\<And>x.\n       nqfree (Atom x) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom x) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>xa.\n              xs ! l < xa \\<and> xa \\<le> leps \\<longrightarrow>\n              DLO.I (Atom x) (xa # xs))\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>nqfree \\<phi>1 \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi>1 l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi>1 (x # xs));\n        nqfree \\<phi>2 \\<Longrightarrow>\n        DLO.I (subst\\<^sub>+ \\<phi>2 l) xs \\<longrightarrow>\n        (\\<exists>leps>xs ! l.\n            \\<forall>x.\n               xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n               DLO.I \\<phi>2 (x # xs));\n        nqfree (And \\<phi>1 \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (And \\<phi>1 \\<phi>2) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (And \\<phi>1 \\<phi>2) (x # xs))\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>nqfree \\<phi>1 \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi>1 l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi>1 (x # xs));\n        nqfree \\<phi>2 \\<Longrightarrow>\n        DLO.I (subst\\<^sub>+ \\<phi>2 l) xs \\<longrightarrow>\n        (\\<exists>leps>xs ! l.\n            \\<forall>x.\n               xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n               DLO.I \\<phi>2 (x # xs));\n        nqfree (Or \\<phi>1 \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Or \\<phi>1 \\<phi>2) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Or \\<phi>1 \\<phi>2) (x # xs))\n 6. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (Neg \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Neg \\<phi>) (x # xs))\n 7. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (ExQ \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (ExQ \\<phi>) (x # xs))", "thus ?case"], ["proof (prove)\nusing this:\n  nqfree TrueF\n\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ TrueF l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I TrueF (x # xs))", "by simp (metis no_ub)"], ["proof (state)\nthis:\n  DLO.I (subst\\<^sub>+ TrueF l) xs \\<longrightarrow>\n  (\\<exists>leps>xs ! l.\n      \\<forall>x.\n         xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n         DLO.I TrueF (x # xs))\n\ngoal (6 subgoals):\n 1. nqfree FalseF \\<Longrightarrow>\n    DLO.I (subst\\<^sub>+ FalseF l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I FalseF (x # xs))\n 2. \\<And>x.\n       nqfree (Atom x) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom x) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>xa.\n              xs ! l < xa \\<and> xa \\<le> leps \\<longrightarrow>\n              DLO.I (Atom x) (xa # xs))\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>nqfree \\<phi>1 \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi>1 l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi>1 (x # xs));\n        nqfree \\<phi>2 \\<Longrightarrow>\n        DLO.I (subst\\<^sub>+ \\<phi>2 l) xs \\<longrightarrow>\n        (\\<exists>leps>xs ! l.\n            \\<forall>x.\n               xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n               DLO.I \\<phi>2 (x # xs));\n        nqfree (And \\<phi>1 \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (And \\<phi>1 \\<phi>2) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (And \\<phi>1 \\<phi>2) (x # xs))\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>nqfree \\<phi>1 \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi>1 l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi>1 (x # xs));\n        nqfree \\<phi>2 \\<Longrightarrow>\n        DLO.I (subst\\<^sub>+ \\<phi>2 l) xs \\<longrightarrow>\n        (\\<exists>leps>xs ! l.\n            \\<forall>x.\n               xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n               DLO.I \\<phi>2 (x # xs));\n        nqfree (Or \\<phi>1 \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Or \\<phi>1 \\<phi>2) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Or \\<phi>1 \\<phi>2) (x # xs))\n 5. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (Neg \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Neg \\<phi>) (x # xs))\n 6. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (ExQ \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (ExQ \\<phi>) (x # xs))", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. nqfree FalseF \\<Longrightarrow>\n    DLO.I (subst\\<^sub>+ FalseF l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I FalseF (x # xs))\n 2. \\<And>x.\n       nqfree (Atom x) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom x) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>xa.\n              xs ! l < xa \\<and> xa \\<le> leps \\<longrightarrow>\n              DLO.I (Atom x) (xa # xs))\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>nqfree \\<phi>1 \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi>1 l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi>1 (x # xs));\n        nqfree \\<phi>2 \\<Longrightarrow>\n        DLO.I (subst\\<^sub>+ \\<phi>2 l) xs \\<longrightarrow>\n        (\\<exists>leps>xs ! l.\n            \\<forall>x.\n               xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n               DLO.I \\<phi>2 (x # xs));\n        nqfree (And \\<phi>1 \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (And \\<phi>1 \\<phi>2) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (And \\<phi>1 \\<phi>2) (x # xs))\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>nqfree \\<phi>1 \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi>1 l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi>1 (x # xs));\n        nqfree \\<phi>2 \\<Longrightarrow>\n        DLO.I (subst\\<^sub>+ \\<phi>2 l) xs \\<longrightarrow>\n        (\\<exists>leps>xs ! l.\n            \\<forall>x.\n               xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n               DLO.I \\<phi>2 (x # xs));\n        nqfree (Or \\<phi>1 \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Or \\<phi>1 \\<phi>2) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Or \\<phi>1 \\<phi>2) (x # xs))\n 5. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (Neg \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Neg \\<phi>) (x # xs))\n 6. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (ExQ \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (ExQ \\<phi>) (x # xs))", "case (Atom a)"], ["proof (state)\nthis:\n  nqfree (Atom a)\n\ngoal (6 subgoals):\n 1. nqfree FalseF \\<Longrightarrow>\n    DLO.I (subst\\<^sub>+ FalseF l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I FalseF (x # xs))\n 2. \\<And>x.\n       nqfree (Atom x) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom x) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>xa.\n              xs ! l < xa \\<and> xa \\<le> leps \\<longrightarrow>\n              DLO.I (Atom x) (xa # xs))\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>nqfree \\<phi>1 \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi>1 l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi>1 (x # xs));\n        nqfree \\<phi>2 \\<Longrightarrow>\n        DLO.I (subst\\<^sub>+ \\<phi>2 l) xs \\<longrightarrow>\n        (\\<exists>leps>xs ! l.\n            \\<forall>x.\n               xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n               DLO.I \\<phi>2 (x # xs));\n        nqfree (And \\<phi>1 \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (And \\<phi>1 \\<phi>2) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (And \\<phi>1 \\<phi>2) (x # xs))\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>nqfree \\<phi>1 \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi>1 l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi>1 (x # xs));\n        nqfree \\<phi>2 \\<Longrightarrow>\n        DLO.I (subst\\<^sub>+ \\<phi>2 l) xs \\<longrightarrow>\n        (\\<exists>leps>xs ! l.\n            \\<forall>x.\n               xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n               DLO.I \\<phi>2 (x # xs));\n        nqfree (Or \\<phi>1 \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Or \\<phi>1 \\<phi>2) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Or \\<phi>1 \\<phi>2) (x # xs))\n 5. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (Neg \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Neg \\<phi>) (x # xs))\n 6. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (ExQ \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (ExQ \\<phi>) (x # xs))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I (Atom a) (x # xs))", "proof (cases \"(l,a)\" rule: asubst_peps.cases)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>k.\n       (l, a) = (k, Less 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 2. \\<And>k j.\n       (l, a) = (k, Less 0 (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 3. \\<And>k i.\n       (l, a) = (k, Less (Suc i) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 4. \\<And>k i j.\n       (l, a) = (k, Less (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 5. \\<And>k.\n       (l, a) = (k, Eq 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 6. \\<And>k v.\n       (l, a) = (k, Eq 0 (Suc v)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 7. \\<And>k v.\n       (l, a) = (k, Eq (Suc v) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 8. \\<And>k i j.\n       (l, a) = (k, Eq (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))", "case 2"], ["proof (state)\nthis:\n  (l, a) = (k_, Less 0 (Suc j_))\n\ngoal (8 subgoals):\n 1. \\<And>k.\n       (l, a) = (k, Less 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 2. \\<And>k j.\n       (l, a) = (k, Less 0 (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 3. \\<And>k i.\n       (l, a) = (k, Less (Suc i) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 4. \\<And>k i j.\n       (l, a) = (k, Less (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 5. \\<And>k.\n       (l, a) = (k, Eq 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 6. \\<And>k v.\n       (l, a) = (k, Eq 0 (Suc v)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 7. \\<And>k v.\n       (l, a) = (k, Eq (Suc v) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 8. \\<And>k i j.\n       (l, a) = (k, Eq (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (l, a) = (k_, Less 0 (Suc j_))\n\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I (Atom a) (x # xs))", "using Atom"], ["proof (prove)\nusing this:\n  (l, a) = (k_, Less 0 (Suc j_))\n  nqfree (Atom a)\n\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I (Atom a) (x # xs))", "apply(auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>l = k_; a = Less 0 (Suc j_); xs ! k_ < xs ! j_\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps>xs ! k_.\n                         \\<forall>x.\n                            xs ! k_ < x \\<and>\n                            x \\<le> leps \\<longrightarrow>\n                            x < xs ! j_", "apply(drule dense)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>l = k_; a = Less 0 (Suc j_);\n     \\<exists>y>xs ! k_. y < xs ! j_\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps>xs ! k_.\n                         \\<forall>x.\n                            xs ! k_ < x \\<and>\n                            x \\<le> leps \\<longrightarrow>\n                            x < xs ! j_", "apply(metis One_nat_def xt1(7))"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n  (\\<exists>leps>xs ! l.\n      \\<forall>x.\n         xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n         DLO.I (Atom a) (x # xs))\n\ngoal (7 subgoals):\n 1. \\<And>k.\n       (l, a) = (k, Less 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 2. \\<And>k i.\n       (l, a) = (k, Less (Suc i) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 3. \\<And>k i j.\n       (l, a) = (k, Less (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 4. \\<And>k.\n       (l, a) = (k, Eq 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 5. \\<And>k v.\n       (l, a) = (k, Eq 0 (Suc v)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 6. \\<And>k v.\n       (l, a) = (k, Eq (Suc v) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 7. \\<And>k i j.\n       (l, a) = (k, Eq (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>k.\n       (l, a) = (k, Less 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 2. \\<And>k i.\n       (l, a) = (k, Less (Suc i) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 3. \\<And>k i j.\n       (l, a) = (k, Less (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 4. \\<And>k.\n       (l, a) = (k, Eq 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 5. \\<And>k v.\n       (l, a) = (k, Eq 0 (Suc v)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 6. \\<And>k v.\n       (l, a) = (k, Eq (Suc v) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 7. \\<And>k i j.\n       (l, a) = (k, Eq (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))", "case 3"], ["proof (state)\nthis:\n  (l, a) = (k_, Less (Suc i_) 0)\n\ngoal (7 subgoals):\n 1. \\<And>k.\n       (l, a) = (k, Less 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 2. \\<And>k i.\n       (l, a) = (k, Less (Suc i) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 3. \\<And>k i j.\n       (l, a) = (k, Less (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 4. \\<And>k.\n       (l, a) = (k, Eq 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 5. \\<And>k v.\n       (l, a) = (k, Eq 0 (Suc v)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 6. \\<And>k v.\n       (l, a) = (k, Eq (Suc v) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 7. \\<And>k i j.\n       (l, a) = (k, Eq (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (l, a) = (k_, Less (Suc i_) 0)\n\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I (Atom a) (x # xs))", "using Atom"], ["proof (prove)\nusing this:\n  (l, a) = (k_, Less (Suc i_) 0)\n  nqfree (Atom a)\n\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I (Atom a) (x # xs))", "apply(auto)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>l = k_; a = Less (Suc k_) 0; i_ = k_\\<rbrakk>\n    \\<Longrightarrow> Ex ((<) (xs ! k_))\n 2. \\<lbrakk>l = k_; a = Less (Suc i_) 0; i_ \\<noteq> k_;\n     xs ! i_ < xs ! k_\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps>xs ! k_.\n                         \\<forall>x.\n                            xs ! k_ < x \\<and>\n                            x \\<le> leps \\<longrightarrow>\n                            xs ! i_ < x\n 3. \\<lbrakk>l = k_; a = Less (Suc i_) 0; i_ \\<noteq> k_;\n     xs ! i_ = xs ! k_\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps. xs ! k_ < leps", "apply (metis no_ub)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>l = k_; a = Less (Suc i_) 0; i_ \\<noteq> k_;\n     xs ! i_ < xs ! k_\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps>xs ! k_.\n                         \\<forall>x.\n                            xs ! k_ < x \\<and>\n                            x \\<le> leps \\<longrightarrow>\n                            xs ! i_ < x\n 2. \\<lbrakk>l = k_; a = Less (Suc i_) 0; i_ \\<noteq> k_;\n     xs ! i_ = xs ! k_\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps. xs ! k_ < leps", "apply (metis no_ub less_trans)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>l = k_; a = Less (Suc i_) 0; i_ \\<noteq> k_;\n     xs ! i_ = xs ! k_\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps. xs ! k_ < leps", "apply (metis no_ub)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n  (\\<exists>leps>xs ! l.\n      \\<forall>x.\n         xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n         DLO.I (Atom a) (x # xs))\n\ngoal (6 subgoals):\n 1. \\<And>k.\n       (l, a) = (k, Less 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 2. \\<And>k i j.\n       (l, a) = (k, Less (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 3. \\<And>k.\n       (l, a) = (k, Eq 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 4. \\<And>k v.\n       (l, a) = (k, Eq 0 (Suc v)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 5. \\<And>k v.\n       (l, a) = (k, Eq (Suc v) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 6. \\<And>k i j.\n       (l, a) = (k, Eq (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>k.\n       (l, a) = (k, Less 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 2. \\<And>k i j.\n       (l, a) = (k, Less (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 3. \\<And>k.\n       (l, a) = (k, Eq 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 4. \\<And>k v.\n       (l, a) = (k, Eq 0 (Suc v)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 5. \\<And>k v.\n       (l, a) = (k, Eq (Suc v) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 6. \\<And>k i j.\n       (l, a) = (k, Eq (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))", "case 4"], ["proof (state)\nthis:\n  (l, a) = (k_, Less (Suc i_) (Suc j_))\n\ngoal (6 subgoals):\n 1. \\<And>k.\n       (l, a) = (k, Less 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 2. \\<And>k i j.\n       (l, a) = (k, Less (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 3. \\<And>k.\n       (l, a) = (k, Eq 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 4. \\<And>k v.\n       (l, a) = (k, Eq 0 (Suc v)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 5. \\<And>k v.\n       (l, a) = (k, Eq (Suc v) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 6. \\<And>k i j.\n       (l, a) = (k, Eq (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (l, a) = (k_, Less (Suc i_) (Suc j_))\n\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I (Atom a) (x # xs))", "using Atom"], ["proof (prove)\nusing this:\n  (l, a) = (k_, Less (Suc i_) (Suc j_))\n  nqfree (Atom a)\n\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I (Atom a) (x # xs))", "by(auto)(metis no_ub)"], ["proof (state)\nthis:\n  DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n  (\\<exists>leps>xs ! l.\n      \\<forall>x.\n         xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n         DLO.I (Atom a) (x # xs))\n\ngoal (5 subgoals):\n 1. \\<And>k.\n       (l, a) = (k, Less 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 2. \\<And>k.\n       (l, a) = (k, Eq 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 3. \\<And>k v.\n       (l, a) = (k, Eq 0 (Suc v)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 4. \\<And>k v.\n       (l, a) = (k, Eq (Suc v) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 5. \\<And>k i j.\n       (l, a) = (k, Eq (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>k.\n       (l, a) = (k, Less 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 2. \\<And>k.\n       (l, a) = (k, Eq 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 3. \\<And>k v.\n       (l, a) = (k, Eq 0 (Suc v)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 4. \\<And>k v.\n       (l, a) = (k, Eq (Suc v) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 5. \\<And>k i j.\n       (l, a) = (k, Eq (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))", "case 5"], ["proof (state)\nthis:\n  (l, a) = (k_, Eq 0 0)\n\ngoal (5 subgoals):\n 1. \\<And>k.\n       (l, a) = (k, Less 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 2. \\<And>k.\n       (l, a) = (k, Eq 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 3. \\<And>k v.\n       (l, a) = (k, Eq 0 (Suc v)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 4. \\<And>k v.\n       (l, a) = (k, Eq (Suc v) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 5. \\<And>k i j.\n       (l, a) = (k, Eq (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (l, a) = (k_, Eq 0 0)\n\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I (Atom a) (x # xs))", "using Atom"], ["proof (prove)\nusing this:\n  (l, a) = (k_, Eq 0 0)\n  nqfree (Atom a)\n\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I (Atom a) (x # xs))", "by(auto)(metis no_ub)"], ["proof (state)\nthis:\n  DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n  (\\<exists>leps>xs ! l.\n      \\<forall>x.\n         xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n         DLO.I (Atom a) (x # xs))\n\ngoal (4 subgoals):\n 1. \\<And>k.\n       (l, a) = (k, Less 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 2. \\<And>k v.\n       (l, a) = (k, Eq 0 (Suc v)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 3. \\<And>k v.\n       (l, a) = (k, Eq (Suc v) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 4. \\<And>k i j.\n       (l, a) = (k, Eq (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>k.\n       (l, a) = (k, Less 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 2. \\<And>k v.\n       (l, a) = (k, Eq 0 (Suc v)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 3. \\<And>k v.\n       (l, a) = (k, Eq (Suc v) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 4. \\<And>k i j.\n       (l, a) = (k, Eq (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))", "case 8"], ["proof (state)\nthis:\n  (l, a) = (k_, Eq (Suc i_) (Suc j_))\n\ngoal (4 subgoals):\n 1. \\<And>k.\n       (l, a) = (k, Less 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 2. \\<And>k v.\n       (l, a) = (k, Eq 0 (Suc v)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 3. \\<And>k v.\n       (l, a) = (k, Eq (Suc v) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 4. \\<And>k i j.\n       (l, a) = (k, Eq (Suc i) (Suc j)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (l, a) = (k_, Eq (Suc i_) (Suc j_))\n\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I (Atom a) (x # xs))", "using Atom"], ["proof (prove)\nusing this:\n  (l, a) = (k_, Eq (Suc i_) (Suc j_))\n  nqfree (Atom a)\n\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I (Atom a) (x # xs))", "by(auto)(metis no_ub)"], ["proof (state)\nthis:\n  DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n  (\\<exists>leps>xs ! l.\n      \\<forall>x.\n         xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n         DLO.I (Atom a) (x # xs))\n\ngoal (3 subgoals):\n 1. \\<And>k.\n       (l, a) = (k, Less 0 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 2. \\<And>k v.\n       (l, a) = (k, Eq 0 (Suc v)) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))\n 3. \\<And>k v.\n       (l, a) = (k, Eq (Suc v) 0) \\<Longrightarrow>\n       DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n       (\\<exists>leps>xs ! l.\n           \\<forall>x.\n              xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n              DLO.I (Atom a) (x # xs))", "qed (insert Atom, auto)"], ["proof (state)\nthis:\n  DLO.I (subst\\<^sub>+ (Atom a) l) xs \\<longrightarrow>\n  (\\<exists>leps>xs ! l.\n      \\<forall>x.\n         xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n         DLO.I (Atom a) (x # xs))\n\ngoal (5 subgoals):\n 1. nqfree FalseF \\<Longrightarrow>\n    DLO.I (subst\\<^sub>+ FalseF l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I FalseF (x # xs))\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>nqfree \\<phi>1 \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi>1 l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi>1 (x # xs));\n        nqfree \\<phi>2 \\<Longrightarrow>\n        DLO.I (subst\\<^sub>+ \\<phi>2 l) xs \\<longrightarrow>\n        (\\<exists>leps>xs ! l.\n            \\<forall>x.\n               xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n               DLO.I \\<phi>2 (x # xs));\n        nqfree (And \\<phi>1 \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (And \\<phi>1 \\<phi>2) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (And \\<phi>1 \\<phi>2) (x # xs))\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>nqfree \\<phi>1 \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi>1 l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi>1 (x # xs));\n        nqfree \\<phi>2 \\<Longrightarrow>\n        DLO.I (subst\\<^sub>+ \\<phi>2 l) xs \\<longrightarrow>\n        (\\<exists>leps>xs ! l.\n            \\<forall>x.\n               xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n               DLO.I \\<phi>2 (x # xs));\n        nqfree (Or \\<phi>1 \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Or \\<phi>1 \\<phi>2) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Or \\<phi>1 \\<phi>2) (x # xs))\n 4. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (Neg \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Neg \\<phi>) (x # xs))\n 5. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (ExQ \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (ExQ \\<phi>) (x # xs))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. nqfree FalseF \\<Longrightarrow>\n    DLO.I (subst\\<^sub>+ FalseF l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I FalseF (x # xs))\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>nqfree \\<phi>1 \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi>1 l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi>1 (x # xs));\n        nqfree \\<phi>2 \\<Longrightarrow>\n        DLO.I (subst\\<^sub>+ \\<phi>2 l) xs \\<longrightarrow>\n        (\\<exists>leps>xs ! l.\n            \\<forall>x.\n               xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n               DLO.I \\<phi>2 (x # xs));\n        nqfree (And \\<phi>1 \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (And \\<phi>1 \\<phi>2) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (And \\<phi>1 \\<phi>2) (x # xs))\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>nqfree \\<phi>1 \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi>1 l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi>1 (x # xs));\n        nqfree \\<phi>2 \\<Longrightarrow>\n        DLO.I (subst\\<^sub>+ \\<phi>2 l) xs \\<longrightarrow>\n        (\\<exists>leps>xs ! l.\n            \\<forall>x.\n               xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n               DLO.I \\<phi>2 (x # xs));\n        nqfree (Or \\<phi>1 \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Or \\<phi>1 \\<phi>2) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Or \\<phi>1 \\<phi>2) (x # xs))\n 4. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (Neg \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Neg \\<phi>) (x # xs))\n 5. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (ExQ \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (ExQ \\<phi>) (x # xs))", "case And"], ["proof (state)\nthis:\n  nqfree \\<phi>1_ \\<Longrightarrow>\n  DLO.I (subst\\<^sub>+ \\<phi>1_ l) xs \\<longrightarrow>\n  (\\<exists>leps>xs ! l.\n      \\<forall>x.\n         xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n         DLO.I \\<phi>1_ (x # xs))\n  nqfree \\<phi>2_ \\<Longrightarrow>\n  DLO.I (subst\\<^sub>+ \\<phi>2_ l) xs \\<longrightarrow>\n  (\\<exists>leps>xs ! l.\n      \\<forall>x.\n         xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n         DLO.I \\<phi>2_ (x # xs))\n  nqfree (And \\<phi>1_ \\<phi>2_)\n\ngoal (5 subgoals):\n 1. nqfree FalseF \\<Longrightarrow>\n    DLO.I (subst\\<^sub>+ FalseF l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I FalseF (x # xs))\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>nqfree \\<phi>1 \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi>1 l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi>1 (x # xs));\n        nqfree \\<phi>2 \\<Longrightarrow>\n        DLO.I (subst\\<^sub>+ \\<phi>2 l) xs \\<longrightarrow>\n        (\\<exists>leps>xs ! l.\n            \\<forall>x.\n               xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n               DLO.I \\<phi>2 (x # xs));\n        nqfree (And \\<phi>1 \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (And \\<phi>1 \\<phi>2) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (And \\<phi>1 \\<phi>2) (x # xs))\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>nqfree \\<phi>1 \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi>1 l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi>1 (x # xs));\n        nqfree \\<phi>2 \\<Longrightarrow>\n        DLO.I (subst\\<^sub>+ \\<phi>2 l) xs \\<longrightarrow>\n        (\\<exists>leps>xs ! l.\n            \\<forall>x.\n               xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n               DLO.I \\<phi>2 (x # xs));\n        nqfree (Or \\<phi>1 \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Or \\<phi>1 \\<phi>2) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Or \\<phi>1 \\<phi>2) (x # xs))\n 4. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (Neg \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Neg \\<phi>) (x # xs))\n 5. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (ExQ \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (ExQ \\<phi>) (x # xs))", "thus ?case"], ["proof (prove)\nusing this:\n  nqfree \\<phi>1_ \\<Longrightarrow>\n  DLO.I (subst\\<^sub>+ \\<phi>1_ l) xs \\<longrightarrow>\n  (\\<exists>leps>xs ! l.\n      \\<forall>x.\n         xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n         DLO.I \\<phi>1_ (x # xs))\n  nqfree \\<phi>2_ \\<Longrightarrow>\n  DLO.I (subst\\<^sub>+ \\<phi>2_ l) xs \\<longrightarrow>\n  (\\<exists>leps>xs ! l.\n      \\<forall>x.\n         xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n         DLO.I \\<phi>2_ (x # xs))\n  nqfree (And \\<phi>1_ \\<phi>2_)\n\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ (And \\<phi>1_ \\<phi>2_) l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I (And \\<phi>1_ \\<phi>2_) (x # xs))", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>leps lepsa.\n       \\<lbrakk>nqfree \\<phi>1_; nqfree \\<phi>2_;\n        DLO.I (subst\\<^sub>+ \\<phi>1_ l) xs;\n        DLO.I (subst\\<^sub>+ \\<phi>2_ l) xs; xs ! l < leps;\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I \\<phi>1_ (x # xs);\n        xs ! l < lepsa;\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> lepsa \\<longrightarrow>\n           DLO.I \\<phi>2_ (x # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>xs ! l.\n                            \\<forall>x.\n                               xs ! l < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               DLO.I \\<phi>1_ (x # xs) \\<and>\n                               DLO.I \\<phi>2_ (x # xs)", "apply(rule_tac x=\"min leps lepsa\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>leps lepsa.\n       \\<lbrakk>nqfree \\<phi>1_; nqfree \\<phi>2_;\n        DLO.I (subst\\<^sub>+ \\<phi>1_ l) xs;\n        DLO.I (subst\\<^sub>+ \\<phi>2_ l) xs; xs ! l < leps;\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I \\<phi>1_ (x # xs);\n        xs ! l < lepsa;\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> lepsa \\<longrightarrow>\n           DLO.I \\<phi>2_ (x # xs)\\<rbrakk>\n       \\<Longrightarrow> xs ! l < min leps lepsa \\<and>\n                         (\\<forall>x.\n                             xs ! l < x \\<and>\n                             x \\<le> min leps lepsa \\<longrightarrow>\n                             DLO.I \\<phi>1_ (x # xs) \\<and>\n                             DLO.I \\<phi>2_ (x # xs))", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  DLO.I (subst\\<^sub>+ (And \\<phi>1_ \\<phi>2_) l) xs \\<longrightarrow>\n  (\\<exists>leps>xs ! l.\n      \\<forall>x.\n         xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n         DLO.I (And \\<phi>1_ \\<phi>2_) (x # xs))\n\ngoal (4 subgoals):\n 1. nqfree FalseF \\<Longrightarrow>\n    DLO.I (subst\\<^sub>+ FalseF l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I FalseF (x # xs))\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>nqfree \\<phi>1 \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi>1 l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi>1 (x # xs));\n        nqfree \\<phi>2 \\<Longrightarrow>\n        DLO.I (subst\\<^sub>+ \\<phi>2 l) xs \\<longrightarrow>\n        (\\<exists>leps>xs ! l.\n            \\<forall>x.\n               xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n               DLO.I \\<phi>2 (x # xs));\n        nqfree (Or \\<phi>1 \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Or \\<phi>1 \\<phi>2) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Or \\<phi>1 \\<phi>2) (x # xs))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (Neg \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Neg \\<phi>) (x # xs))\n 4. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (ExQ \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (ExQ \\<phi>) (x # xs))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. nqfree FalseF \\<Longrightarrow>\n    DLO.I (subst\\<^sub>+ FalseF l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I FalseF (x # xs))\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>nqfree \\<phi>1 \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi>1 l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi>1 (x # xs));\n        nqfree \\<phi>2 \\<Longrightarrow>\n        DLO.I (subst\\<^sub>+ \\<phi>2 l) xs \\<longrightarrow>\n        (\\<exists>leps>xs ! l.\n            \\<forall>x.\n               xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n               DLO.I \\<phi>2 (x # xs));\n        nqfree (Or \\<phi>1 \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Or \\<phi>1 \\<phi>2) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Or \\<phi>1 \\<phi>2) (x # xs))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (Neg \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Neg \\<phi>) (x # xs))\n 4. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (ExQ \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (ExQ \\<phi>) (x # xs))", "case Or"], ["proof (state)\nthis:\n  nqfree \\<phi>1_ \\<Longrightarrow>\n  DLO.I (subst\\<^sub>+ \\<phi>1_ l) xs \\<longrightarrow>\n  (\\<exists>leps>xs ! l.\n      \\<forall>x.\n         xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n         DLO.I \\<phi>1_ (x # xs))\n  nqfree \\<phi>2_ \\<Longrightarrow>\n  DLO.I (subst\\<^sub>+ \\<phi>2_ l) xs \\<longrightarrow>\n  (\\<exists>leps>xs ! l.\n      \\<forall>x.\n         xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n         DLO.I \\<phi>2_ (x # xs))\n  nqfree (Or \\<phi>1_ \\<phi>2_)\n\ngoal (4 subgoals):\n 1. nqfree FalseF \\<Longrightarrow>\n    DLO.I (subst\\<^sub>+ FalseF l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I FalseF (x # xs))\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>nqfree \\<phi>1 \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi>1 l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi>1 (x # xs));\n        nqfree \\<phi>2 \\<Longrightarrow>\n        DLO.I (subst\\<^sub>+ \\<phi>2 l) xs \\<longrightarrow>\n        (\\<exists>leps>xs ! l.\n            \\<forall>x.\n               xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n               DLO.I \\<phi>2 (x # xs));\n        nqfree (Or \\<phi>1 \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Or \\<phi>1 \\<phi>2) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Or \\<phi>1 \\<phi>2) (x # xs))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (Neg \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Neg \\<phi>) (x # xs))\n 4. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (ExQ \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (ExQ \\<phi>) (x # xs))", "thus ?case"], ["proof (prove)\nusing this:\n  nqfree \\<phi>1_ \\<Longrightarrow>\n  DLO.I (subst\\<^sub>+ \\<phi>1_ l) xs \\<longrightarrow>\n  (\\<exists>leps>xs ! l.\n      \\<forall>x.\n         xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n         DLO.I \\<phi>1_ (x # xs))\n  nqfree \\<phi>2_ \\<Longrightarrow>\n  DLO.I (subst\\<^sub>+ \\<phi>2_ l) xs \\<longrightarrow>\n  (\\<exists>leps>xs ! l.\n      \\<forall>x.\n         xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n         DLO.I \\<phi>2_ (x # xs))\n  nqfree (Or \\<phi>1_ \\<phi>2_)\n\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ (Or \\<phi>1_ \\<phi>2_) l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I (Or \\<phi>1_ \\<phi>2_) (x # xs))", "by force"], ["proof (state)\nthis:\n  DLO.I (subst\\<^sub>+ (Or \\<phi>1_ \\<phi>2_) l) xs \\<longrightarrow>\n  (\\<exists>leps>xs ! l.\n      \\<forall>x.\n         xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n         DLO.I (Or \\<phi>1_ \\<phi>2_) (x # xs))\n\ngoal (3 subgoals):\n 1. nqfree FalseF \\<Longrightarrow>\n    DLO.I (subst\\<^sub>+ FalseF l) xs \\<longrightarrow>\n    (\\<exists>leps>xs ! l.\n        \\<forall>x.\n           xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n           DLO.I FalseF (x # xs))\n 2. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (Neg \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (Neg \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (Neg \\<phi>) (x # xs))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>nqfree \\<phi> \\<Longrightarrow>\n                DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<longrightarrow>\n                (\\<exists>leps>xs ! l.\n                    \\<forall>x.\n                       xs ! l < x \\<and> x \\<le> leps \\<longrightarrow>\n                       DLO.I \\<phi> (x # xs));\n        nqfree (ExQ \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> DLO.I (subst\\<^sub>+ (ExQ \\<phi>) l)\n                          xs \\<longrightarrow>\n                         (\\<exists>leps>xs ! l.\n                             \\<forall>x.\n                                xs ! l < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                DLO.I (ExQ \\<phi>) (x # xs))", "qed simp_all"], ["", "definition\n\"qe_eps\\<^sub>1(\\<phi>) =\n(let as = DLO.atoms\\<^sub>0 \\<phi>; lbs = lbounds as; ebs = ebounds as\n in list_disj (inf\\<^sub>- \\<phi> # map (subst\\<^sub>+ \\<phi>) lbs @ map (subst \\<phi>) ebs))\""], ["", "theorem I_qe_eps1:\nassumes \"nqfree \\<phi>\" shows \"DLO.I (qe_eps\\<^sub>1 \\<phi>) xs = (\\<exists>x. DLO.I \\<phi> (x#xs))\"\n  (is \"?QE = ?EX\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs = (\\<exists>x. DLO.I \\<phi> (x # xs))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs \\<Longrightarrow>\n    \\<exists>x. DLO.I \\<phi> (x # xs)\n 2. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "let ?as = \"DLO.atoms\\<^sub>0 \\<phi>\""], ["proof (state)\ngoal (2 subgoals):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs \\<Longrightarrow>\n    \\<exists>x. DLO.I \\<phi> (x # xs)\n 2. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "let ?ebs = \"ebounds ?as\""], ["proof (state)\ngoal (2 subgoals):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs \\<Longrightarrow>\n    \\<exists>x. DLO.I \\<phi> (x # xs)\n 2. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "assume ?QE"], ["proof (state)\nthis:\n  DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n\ngoal (2 subgoals):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs \\<Longrightarrow>\n    \\<exists>x. DLO.I \\<phi> (x # xs)\n 2. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "{"], ["proof (state)\nthis:\n  DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n\ngoal (2 subgoals):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs \\<Longrightarrow>\n    \\<exists>x. DLO.I \\<phi> (x # xs)\n 2. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "assume \"DLO.I (inf\\<^sub>- \\<phi>) xs\""], ["proof (state)\nthis:\n  DLO.I (inf\\<^sub>- \\<phi>) xs\n\ngoal (2 subgoals):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs \\<Longrightarrow>\n    \\<exists>x. DLO.I \\<phi> (x # xs)\n 2. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "hence ?EX"], ["proof (prove)\nusing this:\n  DLO.I (inf\\<^sub>- \\<phi>) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs)", "using \\<open>?QE\\<close> min_inf[of \\<phi> xs] \\<open>nqfree \\<phi>\\<close>"], ["proof (prove)\nusing this:\n  DLO.I (inf\\<^sub>- \\<phi>) xs\n  DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n  nqfree \\<phi> \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. DLO.I (inf\\<^sub>- \\<phi>) xs = DLO.I \\<phi> (y # xs)\n  nqfree \\<phi>\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs)", "by(auto simp add:qe_eps\\<^sub>1_def amap_fm_list_disj)"], ["proof (state)\nthis:\n  \\<exists>x. DLO.I \\<phi> (x # xs)\n\ngoal (2 subgoals):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs \\<Longrightarrow>\n    \\<exists>x. DLO.I \\<phi> (x # xs)\n 2. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "}"], ["proof (state)\nthis:\n  DLO.I (inf\\<^sub>- \\<phi>) xs \\<Longrightarrow>\n  \\<exists>x. DLO.I \\<phi> (x # xs)\n\ngoal (2 subgoals):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs \\<Longrightarrow>\n    \\<exists>x. DLO.I \\<phi> (x # xs)\n 2. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "moreover"], ["proof (state)\nthis:\n  DLO.I (inf\\<^sub>- \\<phi>) xs \\<Longrightarrow>\n  \\<exists>x. DLO.I \\<phi> (x # xs)\n\ngoal (2 subgoals):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs \\<Longrightarrow>\n    \\<exists>x. DLO.I \\<phi> (x # xs)\n 2. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "{"], ["proof (state)\nthis:\n  DLO.I (inf\\<^sub>- \\<phi>) xs \\<Longrightarrow>\n  \\<exists>x. DLO.I \\<phi> (x # xs)\n\ngoal (2 subgoals):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs \\<Longrightarrow>\n    \\<exists>x. DLO.I \\<phi> (x # xs)\n 2. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "assume \"\\<forall>i \\<in> set ?ebs. \\<not>DLO.I \\<phi> (xs!i # xs)\"\n           \"\\<not> DLO.I (inf\\<^sub>- \\<phi>) xs\""], ["proof (state)\nthis:\n  \\<forall>i\\<in>set (ebounds (DLO.atoms\\<^sub>0 \\<phi>)).\n     \\<not> DLO.I \\<phi> (xs ! i # xs)\n  \\<not> DLO.I (inf\\<^sub>- \\<phi>) xs\n\ngoal (2 subgoals):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs \\<Longrightarrow>\n    \\<exists>x. DLO.I \\<phi> (x # xs)\n 2. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "with \\<open>?QE\\<close> \\<open>nqfree \\<phi>\\<close>"], ["proof (chain)\npicking this:\n  DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n  nqfree \\<phi>\n  \\<forall>i\\<in>set (ebounds (DLO.atoms\\<^sub>0 \\<phi>)).\n     \\<not> DLO.I \\<phi> (xs ! i # xs)\n  \\<not> DLO.I (inf\\<^sub>- \\<phi>) xs", "obtain l where \"DLO.I (subst\\<^sub>+ \\<phi> l) xs\""], ["proof (prove)\nusing this:\n  DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n  nqfree \\<phi>\n  \\<forall>i\\<in>set (ebounds (DLO.atoms\\<^sub>0 \\<phi>)).\n     \\<not> DLO.I \\<phi> (xs ! i # xs)\n  \\<not> DLO.I (inf\\<^sub>- \\<phi>) xs\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        DLO.I (subst\\<^sub>+ \\<phi> l) xs \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(fastforce simp: I_subst qe_eps\\<^sub>1_def set_ebounds set_lbounds)"], ["proof (state)\nthis:\n  DLO.I (subst\\<^sub>+ \\<phi> l) xs\n\ngoal (2 subgoals):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs \\<Longrightarrow>\n    \\<exists>x. DLO.I \\<phi> (x # xs)\n 2. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "then"], ["proof (chain)\npicking this:\n  DLO.I (subst\\<^sub>+ \\<phi> l) xs", "obtain leps where \"DLO.I \\<phi> (leps#xs)\""], ["proof (prove)\nusing this:\n  DLO.I (subst\\<^sub>+ \\<phi> l) xs\n\ngoal (1 subgoal):\n 1. (\\<And>leps.\n        DLO.I \\<phi> (leps # xs) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using I_subst_peps[OF \\<open>nqfree \\<phi>\\<close>]"], ["proof (prove)\nusing this:\n  DLO.I (subst\\<^sub>+ \\<phi> l) xs\n  DLO.I (subst\\<^sub>+ \\<phi> ?l) ?xs \\<longrightarrow>\n  (\\<exists>leps>?xs ! ?l.\n      \\<forall>x.\n         ?xs ! ?l < x \\<and> x \\<le> leps \\<longrightarrow>\n         DLO.I \\<phi> (x # ?xs))\n\ngoal (1 subgoal):\n 1. (\\<And>leps.\n        DLO.I \\<phi> (leps # xs) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  DLO.I \\<phi> (leps # xs)\n\ngoal (2 subgoals):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs \\<Longrightarrow>\n    \\<exists>x. DLO.I \\<phi> (x # xs)\n 2. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "hence ?EX"], ["proof (prove)\nusing this:\n  DLO.I \\<phi> (leps # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs)", ".."], ["proof (state)\nthis:\n  \\<exists>x. DLO.I \\<phi> (x # xs)\n\ngoal (2 subgoals):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs \\<Longrightarrow>\n    \\<exists>x. DLO.I \\<phi> (x # xs)\n 2. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>i\\<in>set (ebounds (DLO.atoms\\<^sub>0 \\<phi>)).\n              \\<not> DLO.I \\<phi> (xs ! i # xs);\n   \\<not> DLO.I (inf\\<^sub>- \\<phi>) xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x. DLO.I \\<phi> (x # xs)\n\ngoal (2 subgoals):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs \\<Longrightarrow>\n    \\<exists>x. DLO.I \\<phi> (x # xs)\n 2. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "ultimately"], ["proof (chain)\npicking this:\n  DLO.I (inf\\<^sub>- \\<phi>) xs \\<Longrightarrow>\n  \\<exists>x. DLO.I \\<phi> (x # xs)\n  \\<lbrakk>\\<forall>i\\<in>set (ebounds (DLO.atoms\\<^sub>0 \\<phi>)).\n              \\<not> DLO.I \\<phi> (xs ! i # xs);\n   \\<not> DLO.I (inf\\<^sub>- \\<phi>) xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x. DLO.I \\<phi> (x # xs)", "show ?EX"], ["proof (prove)\nusing this:\n  DLO.I (inf\\<^sub>- \\<phi>) xs \\<Longrightarrow>\n  \\<exists>x. DLO.I \\<phi> (x # xs)\n  \\<lbrakk>\\<forall>i\\<in>set (ebounds (DLO.atoms\\<^sub>0 \\<phi>)).\n              \\<not> DLO.I \\<phi> (xs ! i # xs);\n   \\<not> DLO.I (inf\\<^sub>- \\<phi>) xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x. DLO.I \\<phi> (x # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs)", "by blast"], ["proof (state)\nthis:\n  \\<exists>x. DLO.I \\<phi> (x # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "let ?as = \"DLO.atoms\\<^sub>0 \\<phi>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "let ?ebs = \"ebounds ?as\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "assume ?EX"], ["proof (state)\nthis:\n  \\<exists>x. DLO.I \\<phi> (x # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "then"], ["proof (chain)\npicking this:\n  \\<exists>x. DLO.I \\<phi> (x # xs)", "obtain x where x: \"DLO.I \\<phi> (x#xs)\""], ["proof (prove)\nusing this:\n  \\<exists>x. DLO.I \\<phi> (x # xs)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        DLO.I \\<phi> (x # xs) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  DLO.I \\<phi> (x # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "{"], ["proof (state)\nthis:\n  DLO.I \\<phi> (x # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "assume \"DLO.I (inf\\<^sub>- \\<phi>) xs\""], ["proof (state)\nthis:\n  DLO.I (inf\\<^sub>- \\<phi>) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "hence ?QE"], ["proof (prove)\nusing this:\n  DLO.I (inf\\<^sub>- \\<phi>) xs\n\ngoal (1 subgoal):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "using \\<open>nqfree \\<phi>\\<close>"], ["proof (prove)\nusing this:\n  DLO.I (inf\\<^sub>- \\<phi>) xs\n  nqfree \\<phi>\n\ngoal (1 subgoal):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "by(auto simp:qe_eps\\<^sub>1_def)"], ["proof (state)\nthis:\n  DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "}"], ["proof (state)\nthis:\n  DLO.I (inf\\<^sub>- \\<phi>) xs \\<Longrightarrow>\n  DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "moreover"], ["proof (state)\nthis:\n  DLO.I (inf\\<^sub>- \\<phi>) xs \\<Longrightarrow>\n  DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "{"], ["proof (state)\nthis:\n  DLO.I (inf\\<^sub>- \\<phi>) xs \\<Longrightarrow>\n  DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "assume \"\\<exists>k \\<in> set ?ebs. DLO.I (subst \\<phi> k) xs\""], ["proof (state)\nthis:\n  \\<exists>k\\<in>set (ebounds (DLO.atoms\\<^sub>0 \\<phi>)).\n     DLO.I (subst \\<phi> k) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "hence ?QE"], ["proof (prove)\nusing this:\n  \\<exists>k\\<in>set (ebounds (DLO.atoms\\<^sub>0 \\<phi>)).\n     DLO.I (subst \\<phi> k) xs\n\ngoal (1 subgoal):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "by(auto simp:qe_eps\\<^sub>1_def)"], ["proof (state)\nthis:\n  DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "}"], ["proof (state)\nthis:\n  \\<exists>k\\<in>set (ebounds (DLO.atoms\\<^sub>0 \\<phi>)).\n     DLO.I (subst \\<phi> k) xs \\<Longrightarrow>\n  DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "moreover"], ["proof (state)\nthis:\n  \\<exists>k\\<in>set (ebounds (DLO.atoms\\<^sub>0 \\<phi>)).\n     DLO.I (subst \\<phi> k) xs \\<Longrightarrow>\n  DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "{"], ["proof (state)\nthis:\n  \\<exists>k\\<in>set (ebounds (DLO.atoms\\<^sub>0 \\<phi>)).\n     DLO.I (subst \\<phi> k) xs \\<Longrightarrow>\n  DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "assume \"\\<not> DLO.I (inf\\<^sub>- \\<phi>) xs\"\n    and \"\\<forall>k \\<in> set ?ebs. \\<not> DLO.I (subst \\<phi> k) xs\""], ["proof (state)\nthis:\n  \\<not> DLO.I (inf\\<^sub>- \\<phi>) xs\n  \\<forall>k\\<in>set (ebounds (DLO.atoms\\<^sub>0 \\<phi>)).\n     \\<not> DLO.I (subst \\<phi> k) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "hence noE: \"\\<forall>e \\<in> EQ \\<phi> xs. \\<not> DLO.I \\<phi> (e#xs)\""], ["proof (prove)\nusing this:\n  \\<not> DLO.I (inf\\<^sub>- \\<phi>) xs\n  \\<forall>k\\<in>set (ebounds (DLO.atoms\\<^sub>0 \\<phi>)).\n     \\<not> DLO.I (subst \\<phi> k) xs\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>EQ \\<phi> xs. \\<not> DLO.I \\<phi> (e # xs)", "using \\<open>nqfree \\<phi>\\<close>"], ["proof (prove)\nusing this:\n  \\<not> DLO.I (inf\\<^sub>- \\<phi>) xs\n  \\<forall>k\\<in>set (ebounds (DLO.atoms\\<^sub>0 \\<phi>)).\n     \\<not> DLO.I (subst \\<phi> k) xs\n  nqfree \\<phi>\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>EQ \\<phi> xs. \\<not> DLO.I \\<phi> (e # xs)", "by (auto simp:set_ebounds EQ_def I_subst nth_Cons' split:if_split_asm)"], ["proof (state)\nthis:\n  \\<forall>e\\<in>EQ \\<phi> xs. \\<not> DLO.I \\<phi> (e # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "hence \"x \\<notin> EQ \\<phi> xs\""], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>EQ \\<phi> xs. \\<not> DLO.I \\<phi> (e # xs)\n\ngoal (1 subgoal):\n 1. x \\<notin> EQ \\<phi> xs", "using x"], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>EQ \\<phi> xs. \\<not> DLO.I \\<phi> (e # xs)\n  DLO.I \\<phi> (x # xs)\n\ngoal (1 subgoal):\n 1. x \\<notin> EQ \\<phi> xs", "by fastforce"], ["proof (state)\nthis:\n  x \\<notin> EQ \\<phi> xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "obtain l where \"l \\<in> LB \\<phi> xs\" \"l < x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>l \\<in> LB \\<phi> xs; l < x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using LBex[OF \\<open>nqfree \\<phi>\\<close> x \\<open>\\<not> DLO.I(inf\\<^sub>- \\<phi>) xs\\<close> \\<open>x \\<notin> EQ \\<phi> xs\\<close>]"], ["proof (prove)\nusing this:\n  \\<exists>l\\<in>LB \\<phi> xs. l < x\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>l \\<in> LB \\<phi> xs; l < x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  l \\<in> LB \\<phi> xs\n  l < x\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "have \"\\<exists>l\\<in>LB \\<phi> xs. l<x \\<and> nolb \\<phi> xs l x \\<and>\n            (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> DLO.I \\<phi> (y#xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>LB \\<phi> xs.\n       l < x \\<and>\n       nolb \\<phi> xs l x \\<and>\n       (\\<forall>y.\n           l < y \\<and> y \\<le> x \\<longrightarrow> DLO.I \\<phi> (y # xs))", "using dense_interval[where P = \"\\<lambda>x. DLO.I \\<phi> (x#xs)\", OF finite_LB \\<open>l\\<in>LB \\<phi> xs\\<close> \\<open>l<x\\<close> x] x innermost_intvl[OF \\<open>nqfree \\<phi>\\<close> _ _ \\<open>x \\<notin> EQ \\<phi> xs\\<close>]"], ["proof (prove)\nusing this:\n  (\\<And>y l.\n      \\<lbrakk>\\<forall>y\\<in>{l<..<x}. y \\<notin> LB \\<phi> xs; l < x;\n       l < y; y \\<le> x\\<rbrakk>\n      \\<Longrightarrow> DLO.I \\<phi> (y # xs)) \\<Longrightarrow>\n  \\<exists>l\\<in>LB \\<phi> xs.\n     l < x \\<and>\n     (\\<forall>y\\<in>{l<..<x}. y \\<notin> LB \\<phi> xs) \\<and>\n     (\\<forall>y.\n         l < y \\<and> y \\<le> x \\<longrightarrow> DLO.I \\<phi> (y # xs))\n  DLO.I \\<phi> (x # xs)\n  \\<lbrakk>nolb \\<phi> xs ?l x; ?l < x; DLO.I \\<phi> (x # xs); ?l < ?y;\n   ?y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> DLO.I \\<phi> (?y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>LB \\<phi> xs.\n       l < x \\<and>\n       nolb \\<phi> xs l x \\<and>\n       (\\<forall>y.\n           l < y \\<and> y \\<le> x \\<longrightarrow> DLO.I \\<phi> (y # xs))", "by (simp add:nolb_def)"], ["proof (state)\nthis:\n  \\<exists>l\\<in>LB \\<phi> xs.\n     l < x \\<and>\n     nolb \\<phi> xs l x \\<and>\n     (\\<forall>y.\n         l < y \\<and> y \\<le> x \\<longrightarrow> DLO.I \\<phi> (y # xs))\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "then"], ["proof (chain)\npicking this:\n  \\<exists>l\\<in>LB \\<phi> xs.\n     l < x \\<and>\n     nolb \\<phi> xs l x \\<and>\n     (\\<forall>y.\n         l < y \\<and> y \\<le> x \\<longrightarrow> DLO.I \\<phi> (y # xs))", "obtain m\n      where *: \"Less (Suc m) 0 \\<in> set ?as \\<and> xs!m < x \\<and> nolb \\<phi> xs (xs!m) x\n            \\<and> (\\<forall>y. xs!m < y \\<and> y \\<le> x \\<longrightarrow> DLO.I \\<phi> (y#xs))\""], ["proof (prove)\nusing this:\n  \\<exists>l\\<in>LB \\<phi> xs.\n     l < x \\<and>\n     nolb \\<phi> xs l x \\<and>\n     (\\<forall>y.\n         l < y \\<and> y \\<le> x \\<longrightarrow> DLO.I \\<phi> (y # xs))\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        Less (Suc m) 0 \\<in> set (DLO.atoms\\<^sub>0 \\<phi>) \\<and>\n        xs ! m < x \\<and>\n        nolb \\<phi> xs (xs ! m) x \\<and>\n        (\\<forall>y.\n            xs ! m < y \\<and> y \\<le> x \\<longrightarrow>\n            DLO.I \\<phi> (y # xs)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Less (Suc m) 0 \\<in> set (DLO.atoms\\<^sub>0 \\<phi>) \\<and>\n  xs ! m < x \\<and>\n  nolb \\<phi> xs (xs ! m) x \\<and>\n  (\\<forall>y.\n      xs ! m < y \\<and> y \\<le> x \\<longrightarrow> DLO.I \\<phi> (y # xs))\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "then"], ["proof (chain)\npicking this:\n  Less (Suc m) 0 \\<in> set (DLO.atoms\\<^sub>0 \\<phi>) \\<and>\n  xs ! m < x \\<and>\n  nolb \\<phi> xs (xs ! m) x \\<and>\n  (\\<forall>y.\n      xs ! m < y \\<and> y \\<le> x \\<longrightarrow> DLO.I \\<phi> (y # xs))", "have \"DLO.I (subst\\<^sub>+ \\<phi> m) xs\""], ["proof (prove)\nusing this:\n  Less (Suc m) 0 \\<in> set (DLO.atoms\\<^sub>0 \\<phi>) \\<and>\n  xs ! m < x \\<and>\n  nolb \\<phi> xs (xs ! m) x \\<and>\n  (\\<forall>y.\n      xs ! m < y \\<and> y \\<le> x \\<longrightarrow> DLO.I \\<phi> (y # xs))\n\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ \\<phi> m) xs", "using noE"], ["proof (prove)\nusing this:\n  Less (Suc m) 0 \\<in> set (DLO.atoms\\<^sub>0 \\<phi>) \\<and>\n  xs ! m < x \\<and>\n  nolb \\<phi> xs (xs ! m) x \\<and>\n  (\\<forall>y.\n      xs ! m < y \\<and> y \\<le> x \\<longrightarrow> DLO.I \\<phi> (y # xs))\n  \\<forall>e\\<in>EQ \\<phi> xs. \\<not> DLO.I \\<phi> (e # xs)\n\ngoal (1 subgoal):\n 1. DLO.I (subst\\<^sub>+ \\<phi> m) xs", "by(auto intro!: I_subst_peps2[OF \\<open>nqfree \\<phi>\\<close>])"], ["proof (state)\nthis:\n  DLO.I (subst\\<^sub>+ \\<phi> m) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "with *"], ["proof (chain)\npicking this:\n  Less (Suc m) 0 \\<in> set (DLO.atoms\\<^sub>0 \\<phi>) \\<and>\n  xs ! m < x \\<and>\n  nolb \\<phi> xs (xs ! m) x \\<and>\n  (\\<forall>y.\n      xs ! m < y \\<and> y \\<le> x \\<longrightarrow> DLO.I \\<phi> (y # xs))\n  DLO.I (subst\\<^sub>+ \\<phi> m) xs", "have ?QE"], ["proof (prove)\nusing this:\n  Less (Suc m) 0 \\<in> set (DLO.atoms\\<^sub>0 \\<phi>) \\<and>\n  xs ! m < x \\<and>\n  nolb \\<phi> xs (xs ! m) x \\<and>\n  (\\<forall>y.\n      xs ! m < y \\<and> y \\<le> x \\<longrightarrow> DLO.I \\<phi> (y # xs))\n  DLO.I (subst\\<^sub>+ \\<phi> m) xs\n\ngoal (1 subgoal):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "by(simp add:qe_eps\\<^sub>1_def bex_Un set_lbounds set_ebounds) metis"], ["proof (state)\nthis:\n  DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<not> DLO.I (inf\\<^sub>- \\<phi>) xs;\n   \\<forall>k\\<in>set (ebounds (DLO.atoms\\<^sub>0 \\<phi>)).\n      \\<not> DLO.I (subst \\<phi> k) xs\\<rbrakk>\n  \\<Longrightarrow> DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. DLO.I \\<phi> (x # xs) \\<Longrightarrow>\n    DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "ultimately"], ["proof (chain)\npicking this:\n  DLO.I (inf\\<^sub>- \\<phi>) xs \\<Longrightarrow>\n  DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n  \\<exists>k\\<in>set (ebounds (DLO.atoms\\<^sub>0 \\<phi>)).\n     DLO.I (subst \\<phi> k) xs \\<Longrightarrow>\n  DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n  \\<lbrakk>\\<not> DLO.I (inf\\<^sub>- \\<phi>) xs;\n   \\<forall>k\\<in>set (ebounds (DLO.atoms\\<^sub>0 \\<phi>)).\n      \\<not> DLO.I (subst \\<phi> k) xs\\<rbrakk>\n  \\<Longrightarrow> DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "show ?QE"], ["proof (prove)\nusing this:\n  DLO.I (inf\\<^sub>- \\<phi>) xs \\<Longrightarrow>\n  DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n  \\<exists>k\\<in>set (ebounds (DLO.atoms\\<^sub>0 \\<phi>)).\n     DLO.I (subst \\<phi> k) xs \\<Longrightarrow>\n  DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n  \\<lbrakk>\\<not> DLO.I (inf\\<^sub>- \\<phi>) xs;\n   \\<forall>k\\<in>set (ebounds (DLO.atoms\\<^sub>0 \\<phi>)).\n      \\<not> DLO.I (subst \\<phi> k) xs\\<rbrakk>\n  \\<Longrightarrow> DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n\ngoal (1 subgoal):\n 1. DLO.I (qe_eps\\<^sub>1 \\<phi>) xs", "by blast"], ["proof (state)\nthis:\n  DLO.I (qe_eps\\<^sub>1 \\<phi>) xs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma qfree_asubst_peps: \"qfree (asubst\\<^sub>+ k a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qfree (asubst\\<^sub>+ k a)", "by(cases \"(k,a)\" rule:asubst_peps.cases) simp_all"], ["", "lemma qfree_subst_peps: \"nqfree \\<phi> \\<Longrightarrow> qfree (subst\\<^sub>+ \\<phi> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nqfree \\<phi> \\<Longrightarrow> qfree (subst\\<^sub>+ \\<phi> k)", "by(induct \\<phi>) (simp_all add:qfree_asubst_peps)"], ["", "lemma qfree_qe_eps\\<^sub>1: \"nqfree \\<phi> \\<Longrightarrow> qfree(qe_eps\\<^sub>1 \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nqfree \\<phi> \\<Longrightarrow> qfree (qe_eps\\<^sub>1 \\<phi>)", "apply(simp add:qe_eps\\<^sub>1_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. nqfree \\<phi> \\<Longrightarrow>\n    qfree\n     (list_disj\n       (inf\\<^sub>- \\<phi> #\n        map (subst\\<^sub>+ \\<phi>) (lbounds (DLO.atoms\\<^sub>0 \\<phi>)) @\n        map (subst \\<phi>) (ebounds (DLO.atoms\\<^sub>0 \\<phi>))))", "apply(rule qfree_list_disj)"], ["proof (prove)\ngoal (1 subgoal):\n 1. nqfree \\<phi> \\<Longrightarrow>\n    \\<forall>\\<phi>\n             \\<in>set (inf\\<^sub>- \\<phi> #\n                       map (subst\\<^sub>+ \\<phi>)\n                        (lbounds (DLO.atoms\\<^sub>0 \\<phi>)) @\n                       map (subst \\<phi>)\n                        (ebounds (DLO.atoms\\<^sub>0 \\<phi>))).\n       qfree \\<phi>", "apply (auto simp:qfree_min_inf qfree_subst_peps qfree_map_fm)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition \"qe_eps = DLO.lift_nnf_qe qe_eps\\<^sub>1\""], ["", "lemma qfree_qe_eps: \"qfree(qe_eps \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qfree (qe_eps \\<phi>)", "by(simp add: qe_eps_def DLO.qfree_lift_nnf_qe qfree_qe_eps\\<^sub>1)"], ["", "lemma I_qe_eps: \"DLO.I (qe_eps \\<phi>) xs = DLO.I \\<phi> xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DLO.I (qe_eps \\<phi>) xs = DLO.I \\<phi> xs", "by(simp add:qe_eps_def DLO.I_lift_nnf_qe qfree_qe_eps\\<^sub>1 I_qe_eps1)"], ["", "end"]]}