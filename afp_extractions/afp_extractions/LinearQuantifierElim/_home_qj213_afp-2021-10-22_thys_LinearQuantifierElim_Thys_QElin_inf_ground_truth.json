{"file_name": "/home/qj213/afp-2021-10-22/thys/LinearQuantifierElim/Thys/QElin_inf.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LinearQuantifierElim", "problem_names": ["lemma nolb_And[simp]:\n  \"nolb (And f g) xs l x = (nolb f xs l x \\<and> nolb g xs l x)\"", "lemma nolb_Or[simp]:\n  \"nolb (Or f g) xs l x = (nolb f xs l x \\<and> nolb g xs l x)\"", "lemma innermost_intvl:\n  \"\\<lbrakk> nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs; R.I f (x#xs); l < y; y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> R.I f (y#xs)\"", "lemma EQ2_Or[simp]: \"EQ2 (Or f g) xs = (EQ2 f xs \\<union> EQ2 g xs)\"", "lemma EQ2_And[simp]: \"EQ2 (And f g) xs = (EQ2 f xs \\<union> EQ2 g xs)\"", "lemma innermost_intvl2:\n  \"\\<lbrakk> nqfree f; nolb f xs l x; l < x; x \\<notin> EQ2 f xs; R.I f (x#xs); l < y; y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> R.I f (y#xs)\"", "lemma I_subst_peps2:\n \"nqfree f \\<Longrightarrow> r+\\<langle>cs,xs\\<rangle> < x \\<Longrightarrow> nolb f xs (r+\\<langle>cs,xs\\<rangle>) x\n \\<Longrightarrow> \\<forall>y \\<in> {r+\\<langle>cs,xs\\<rangle> <.. x}. R.I f (y#xs) \\<and> y \\<notin> EQ2 f xs\n \\<Longrightarrow> R.I (subst\\<^sub>+ f (r,cs)) xs\"", "lemma I_subst_peps:\n  \"nqfree f \\<Longrightarrow> R.I (subst\\<^sub>+ f (r,cs)) xs \\<Longrightarrow>\n  (\\<exists>leps>r+\\<langle>cs,xs\\<rangle>. \\<forall>x. r+\\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow> R.I f (x#xs))\"", "lemma dense_interval:\nassumes \"finite L\" \"l \\<in> L\" \"l < x\" \"P(x::real)\"\nand dense: \"\\<And>y l. \\<lbrakk> \\<forall>y\\<in>{l<..<x}. y \\<notin> L; l<x; l<y; y\\<le>x \\<rbrakk> \\<Longrightarrow> P y\"\nshows \"\\<exists>l\\<in>L. l<x \\<and> (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and> (\\<forall>y. l<y \\<and> y\\<le>x \\<longrightarrow> P y)\"", "theorem I_eps1:\nassumes \"nqfree f\" shows \"R.I (qe_eps\\<^sub>1 f) xs = (\\<exists>x. R.I f (x#xs))\"\n  (is \"?QE = ?EX\")", "lemma qfree_asubst_peps: \"qfree (asubst\\<^sub>+ rcs a)\"", "lemma qfree_subst_peps: \"nqfree \\<phi> \\<Longrightarrow> qfree (subst\\<^sub>+ \\<phi> rcs)\"", "lemma qfree_qe_eps\\<^sub>1: \"nqfree \\<phi> \\<Longrightarrow> qfree(qe_eps\\<^sub>1 \\<phi>)\"", "lemma qfree_qe_eps: \"qfree(qe_eps \\<phi>)\"", "lemma I_qe_eps: \"R.I (qe_eps \\<phi>) xs = R.I \\<phi> xs\""], "translations": [["", "lemma nolb_And[simp]:\n  \"nolb (And f g) xs l x = (nolb f xs l x \\<and> nolb g xs l x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nolb (And f g) xs l x = (nolb f xs l x \\<and> nolb g xs l x)", "apply(clarsimp simp:nolb_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>y\\<in>{l<..<x}.\n        \\<forall>r c cs.\n           y = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n           Less r (c # cs) \\<notin> set (atoms\\<^sub>0 f) \\<and>\n           Less r (c # cs) \\<notin> set (atoms\\<^sub>0 g) \\<or>\n           \\<not> 0 < c) =\n    ((\\<forall>y\\<in>{l<..<x}.\n         \\<forall>r c cs.\n            Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<longrightarrow>\n            y = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n            \\<not> 0 < c) \\<and>\n     (\\<forall>y\\<in>{l<..<x}.\n         \\<forall>r c cs.\n            Less r (c # cs) \\<in> set (atoms\\<^sub>0 g) \\<longrightarrow>\n            y = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n            \\<not> 0 < c))", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma nolb_Or[simp]:\n  \"nolb (Or f g) xs l x = (nolb f xs l x \\<and> nolb g xs l x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nolb (Or f g) xs l x = (nolb f xs l x \\<and> nolb g xs l x)", "apply(clarsimp simp:nolb_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>y\\<in>{l<..<x}.\n        \\<forall>r c cs.\n           y = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n           Less r (c # cs) \\<notin> set (atoms\\<^sub>0 f) \\<and>\n           Less r (c # cs) \\<notin> set (atoms\\<^sub>0 g) \\<or>\n           \\<not> 0 < c) =\n    ((\\<forall>y\\<in>{l<..<x}.\n         \\<forall>r c cs.\n            Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<longrightarrow>\n            y = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n            \\<not> 0 < c) \\<and>\n     (\\<forall>y\\<in>{l<..<x}.\n         \\<forall>r c cs.\n            Less r (c # cs) \\<in> set (atoms\\<^sub>0 g) \\<longrightarrow>\n            y = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n            \\<not> 0 < c))", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "context notes [[simp_depth_limit=4]]\nbegin"], ["", "lemma innermost_intvl:\n  \"\\<lbrakk> nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs; R.I f (x#xs); l < y; y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> R.I f (y#xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs;\n     R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I f (y # xs)", "proof(induct f)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>nqfree TrueF; nolb TrueF xs l x; l < x; x \\<notin> EQ TrueF xs;\n     R.I TrueF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I TrueF (y # xs)\n 2. \\<lbrakk>nqfree FalseF; nolb FalseF xs l x; l < x;\n     x \\<notin> EQ FalseF xs; R.I FalseF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I FalseF (y # xs)\n 3. \\<And>xa.\n       \\<lbrakk>nqfree (Atom xa); nolb (Atom xa) xs l x; l < x;\n        x \\<notin> EQ (Atom xa) xs; R.I (Atom xa) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (Atom xa) (y # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; nolb f1 xs l x; l < x;\n                 x \\<notin> EQ f1 xs; R.I f1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f1 (y # xs);\n        \\<lbrakk>nqfree f2; nolb f2 xs l x; l < x; x \\<notin> EQ f2 xs;\n         R.I f2 (x # xs); l < y; y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> R.I f2 (y # xs);\n        nqfree (And f1 f2); nolb (And f1 f2) xs l x; l < x;\n        x \\<notin> EQ (And f1 f2) xs; R.I (And f1 f2) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (And f1 f2) (y # xs)\n 5. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; nolb f1 xs l x; l < x;\n                 x \\<notin> EQ f1 xs; R.I f1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f1 (y # xs);\n        \\<lbrakk>nqfree f2; nolb f2 xs l x; l < x; x \\<notin> EQ f2 xs;\n         R.I f2 (x # xs); l < y; y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> R.I f2 (y # xs);\n        nqfree (Or f1 f2); nolb (Or f1 f2) xs l x; l < x;\n        x \\<notin> EQ (Or f1 f2) xs; R.I (Or f1 f2) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (Or f1 f2) (y # xs)\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs;\n                 R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f (y # xs);\n        nqfree (Neg f); nolb (Neg f) xs l x; l < x;\n        x \\<notin> EQ (Neg f) xs; R.I (Neg f) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (Neg f) (y # xs)\n 7. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs;\n                 R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f (y # xs);\n        nqfree (ExQ f); nolb (ExQ f) xs l x; l < x;\n        x \\<notin> EQ (ExQ f) xs; R.I (ExQ f) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (ExQ f) (y # xs)", "case (Atom a)"], ["proof (state)\nthis:\n  nqfree (Atom a)\n  nolb (Atom a) xs l x\n  l < x\n  x \\<notin> EQ (Atom a) xs\n  R.I (Atom a) (x # xs)\n  l < y\n  y \\<le> x\n\ngoal (7 subgoals):\n 1. \\<lbrakk>nqfree TrueF; nolb TrueF xs l x; l < x; x \\<notin> EQ TrueF xs;\n     R.I TrueF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I TrueF (y # xs)\n 2. \\<lbrakk>nqfree FalseF; nolb FalseF xs l x; l < x;\n     x \\<notin> EQ FalseF xs; R.I FalseF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I FalseF (y # xs)\n 3. \\<And>xa.\n       \\<lbrakk>nqfree (Atom xa); nolb (Atom xa) xs l x; l < x;\n        x \\<notin> EQ (Atom xa) xs; R.I (Atom xa) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (Atom xa) (y # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; nolb f1 xs l x; l < x;\n                 x \\<notin> EQ f1 xs; R.I f1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f1 (y # xs);\n        \\<lbrakk>nqfree f2; nolb f2 xs l x; l < x; x \\<notin> EQ f2 xs;\n         R.I f2 (x # xs); l < y; y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> R.I f2 (y # xs);\n        nqfree (And f1 f2); nolb (And f1 f2) xs l x; l < x;\n        x \\<notin> EQ (And f1 f2) xs; R.I (And f1 f2) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (And f1 f2) (y # xs)\n 5. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; nolb f1 xs l x; l < x;\n                 x \\<notin> EQ f1 xs; R.I f1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f1 (y # xs);\n        \\<lbrakk>nqfree f2; nolb f2 xs l x; l < x; x \\<notin> EQ f2 xs;\n         R.I f2 (x # xs); l < y; y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> R.I f2 (y # xs);\n        nqfree (Or f1 f2); nolb (Or f1 f2) xs l x; l < x;\n        x \\<notin> EQ (Or f1 f2) xs; R.I (Or f1 f2) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (Or f1 f2) (y # xs)\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs;\n                 R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f (y # xs);\n        nqfree (Neg f); nolb (Neg f) xs l x; l < x;\n        x \\<notin> EQ (Neg f) xs; R.I (Neg f) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (Neg f) (y # xs)\n 7. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs;\n                 R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f (y # xs);\n        nqfree (ExQ f); nolb (ExQ f) xs l x; l < x;\n        x \\<notin> EQ (ExQ f) xs; R.I (ExQ f) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (ExQ f) (y # xs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. R.I (Atom a) (y # xs)", "proof (cases a)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x11 x12. a = Less x11 x12 \\<Longrightarrow> R.I (Atom a) (y # xs)\n 2. \\<And>x21 x22. a = Eq x21 x22 \\<Longrightarrow> R.I (Atom a) (y # xs)", "case [simp]: (Less r cs)"], ["proof (state)\nthis:\n  a = Less r cs\n\ngoal (2 subgoals):\n 1. \\<And>x11 x12. a = Less x11 x12 \\<Longrightarrow> R.I (Atom a) (y # xs)\n 2. \\<And>x21 x22. a = Eq x21 x22 \\<Longrightarrow> R.I (Atom a) (y # xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. R.I (Atom a) (y # xs)", "proof (cases cs)"], ["proof (state)\ngoal (2 subgoals):\n 1. cs = [] \\<Longrightarrow> R.I (Atom a) (y # xs)\n 2. \\<And>aa list. cs = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "case Nil"], ["proof (state)\nthis:\n  cs = []\n\ngoal (2 subgoals):\n 1. cs = [] \\<Longrightarrow> R.I (Atom a) (y # xs)\n 2. \\<And>aa list. cs = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  cs = []\n\ngoal (1 subgoal):\n 1. R.I (Atom a) (y # xs)", "using Atom"], ["proof (prove)\nusing this:\n  cs = []\n  nqfree (Atom a)\n  nolb (Atom a) xs l x\n  l < x\n  x \\<notin> EQ (Atom a) xs\n  R.I (Atom a) (x # xs)\n  l < y\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. R.I (Atom a) (y # xs)", "by (simp add:depends\\<^sub>R_def)"], ["proof (state)\nthis:\n  R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa list. cs = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "case [simp]: (Cons c cs)"], ["proof (state)\nthis:\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "hence \"r < c*x + \\<langle>cs,xs\\<rangle>\""], ["proof (prove)\nusing this:\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. r < c * x + \\<langle>cs,xs\\<rangle>", "using Atom"], ["proof (prove)\nusing this:\n  cs__ = c # cs\n  nqfree (Atom a)\n  nolb (Atom a) xs l x\n  l < x\n  x \\<notin> EQ (Atom a) xs\n  R.I (Atom a) (x # xs)\n  l < y\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. r < c * x + \\<langle>cs,xs\\<rangle>", "by simp"], ["proof (state)\nthis:\n  r < c * x + \\<langle>cs,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "{"], ["proof (state)\nthis:\n  r < c * x + \\<langle>cs,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "assume \"c=0\""], ["proof (state)\nthis:\n  c = 0\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  c = 0\n\ngoal (1 subgoal):\n 1. R.I (Atom a) (y # xs)", "using Atom"], ["proof (prove)\nusing this:\n  c = 0\n  nqfree (Atom a)\n  nolb (Atom a) xs l x\n  l < x\n  x \\<notin> EQ (Atom a) xs\n  R.I (Atom a) (x # xs)\n  l < y\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. R.I (Atom a) (y # xs)", "by simp"], ["proof (state)\nthis:\n  R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "}"], ["proof (state)\nthis:\n  c = 0 \\<Longrightarrow> R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "moreover"], ["proof (state)\nthis:\n  c = 0 \\<Longrightarrow> R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "{"], ["proof (state)\nthis:\n  c = 0 \\<Longrightarrow> R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "assume \"c<0\""], ["proof (state)\nthis:\n  c < 0\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "hence \"x < (r - \\<langle>cs,xs\\<rangle>)/c\" (is \"_ < ?u\")"], ["proof (prove)\nusing this:\n  c < 0\n\ngoal (1 subgoal):\n 1. x < (r - \\<langle>cs,xs\\<rangle>) / c", "using \\<open>r < c*x + \\<langle>cs,xs\\<rangle>\\<close>"], ["proof (prove)\nusing this:\n  c < 0\n  r < c * x + \\<langle>cs,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. x < (r - \\<langle>cs,xs\\<rangle>) / c", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  x < (r - \\<langle>cs,xs\\<rangle>) / c\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "have ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. R.I (Atom a) (y # xs)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> R.I (Atom a) (y # xs) \\<Longrightarrow> False", "assume \"\\<not> R.I (Atom a) (y#xs)\""], ["proof (state)\nthis:\n  \\<not> R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<not> R.I (Atom a) (y # xs) \\<Longrightarrow> False", "hence \"?u \\<le> y\""], ["proof (prove)\nusing this:\n  \\<not> R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. (r - \\<langle>cs,xs\\<rangle>) / c \\<le> y", "using Atom \\<open>c<0\\<close>"], ["proof (prove)\nusing this:\n  \\<not> R.I (Atom a) (y # xs)\n  nqfree (Atom a)\n  nolb (Atom a) xs l x\n  l < x\n  x \\<notin> EQ (Atom a) xs\n  R.I (Atom a) (x # xs)\n  l < y\n  y \\<le> x\n  c < 0\n\ngoal (1 subgoal):\n 1. (r - \\<langle>cs,xs\\<rangle>) / c \\<le> y", "by (auto simp add: field_simps)"], ["proof (state)\nthis:\n  (r - \\<langle>cs,xs\\<rangle>) / c \\<le> y\n\ngoal (1 subgoal):\n 1. \\<not> R.I (Atom a) (y # xs) \\<Longrightarrow> False", "with \\<open>x<?u\\<close>"], ["proof (chain)\npicking this:\n  x < (r - \\<langle>cs,xs\\<rangle>) / c\n  (r - \\<langle>cs,xs\\<rangle>) / c \\<le> y", "show False"], ["proof (prove)\nusing this:\n  x < (r - \\<langle>cs,xs\\<rangle>) / c\n  (r - \\<langle>cs,xs\\<rangle>) / c \\<le> y\n\ngoal (1 subgoal):\n 1. False", "using Atom \\<open>c<0\\<close>"], ["proof (prove)\nusing this:\n  x < (r - \\<langle>cs,xs\\<rangle>) / c\n  (r - \\<langle>cs,xs\\<rangle>) / c \\<le> y\n  nqfree (Atom a)\n  nolb (Atom a) xs l x\n  l < x\n  x \\<notin> EQ (Atom a) xs\n  R.I (Atom a) (x # xs)\n  l < y\n  y \\<le> x\n  c < 0\n\ngoal (1 subgoal):\n 1. False", "by(auto simp:depends\\<^sub>R_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "}"], ["proof (state)\nthis:\n  c < 0 \\<Longrightarrow> R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "moreover"], ["proof (state)\nthis:\n  c < 0 \\<Longrightarrow> R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "{"], ["proof (state)\nthis:\n  c < 0 \\<Longrightarrow> R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "assume \"c>0\""], ["proof (state)\nthis:\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "hence \"x > (r - \\<langle>cs,xs\\<rangle>)/c\" (is \"_ > ?l\")"], ["proof (prove)\nusing this:\n  0 < c\n\ngoal (1 subgoal):\n 1. (r - \\<langle>cs,xs\\<rangle>) / c < x", "using \\<open>r < c*x + \\<langle>cs,xs\\<rangle>\\<close>"], ["proof (prove)\nusing this:\n  0 < c\n  r < c * x + \\<langle>cs,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. (r - \\<langle>cs,xs\\<rangle>) / c < x", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (r - \\<langle>cs,xs\\<rangle>) / c < x\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "then"], ["proof (chain)\npicking this:\n  (r - \\<langle>cs,xs\\<rangle>) / c < x", "have \"?l < y\""], ["proof (prove)\nusing this:\n  (r - \\<langle>cs,xs\\<rangle>) / c < x\n\ngoal (1 subgoal):\n 1. (r - \\<langle>cs,xs\\<rangle>) / c < y", "using Atom \\<open>c>0\\<close>"], ["proof (prove)\nusing this:\n  (r - \\<langle>cs,xs\\<rangle>) / c < x\n  nqfree (Atom a)\n  nolb (Atom a) xs l x\n  l < x\n  x \\<notin> EQ (Atom a) xs\n  R.I (Atom a) (x # xs)\n  l < y\n  y \\<le> x\n  0 < c\n\ngoal (1 subgoal):\n 1. (r - \\<langle>cs,xs\\<rangle>) / c < y", "by (auto simp:depends\\<^sub>R_def Ball_def nolb_def)\n               (metis linorder_not_le antisym order_less_trans)"], ["proof (state)\nthis:\n  (r - \\<langle>cs,xs\\<rangle>) / c < y\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  (r - \\<langle>cs,xs\\<rangle>) / c < y\n\ngoal (1 subgoal):\n 1. R.I (Atom a) (y # xs)", "using \\<open>c>0\\<close>"], ["proof (prove)\nusing this:\n  (r - \\<langle>cs,xs\\<rangle>) / c < y\n  0 < c\n\ngoal (1 subgoal):\n 1. R.I (Atom a) (y # xs)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "}"], ["proof (state)\nthis:\n  0 < c \\<Longrightarrow> R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "ultimately"], ["proof (chain)\npicking this:\n  c = 0 \\<Longrightarrow> R.I (Atom a) (y # xs)\n  c < 0 \\<Longrightarrow> R.I (Atom a) (y # xs)\n  0 < c \\<Longrightarrow> R.I (Atom a) (y # xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  c = 0 \\<Longrightarrow> R.I (Atom a) (y # xs)\n  c < 0 \\<Longrightarrow> R.I (Atom a) (y # xs)\n  0 < c \\<Longrightarrow> R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. R.I (Atom a) (y # xs)", "by force"], ["proof (state)\nthis:\n  R.I (Atom a) (y # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22. a = Eq x21 x22 \\<Longrightarrow> R.I (Atom a) (y # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22. a = Eq x21 x22 \\<Longrightarrow> R.I (Atom a) (y # xs)", "case [simp]: (Eq r cs)"], ["proof (state)\nthis:\n  a = Eq r cs\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22. a = Eq x21 x22 \\<Longrightarrow> R.I (Atom a) (y # xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. R.I (Atom a) (y # xs)", "proof (cases cs)"], ["proof (state)\ngoal (2 subgoals):\n 1. cs = [] \\<Longrightarrow> R.I (Atom a) (y # xs)\n 2. \\<And>aa list. cs = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "case Nil"], ["proof (state)\nthis:\n  cs = []\n\ngoal (2 subgoals):\n 1. cs = [] \\<Longrightarrow> R.I (Atom a) (y # xs)\n 2. \\<And>aa list. cs = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  cs = []\n\ngoal (1 subgoal):\n 1. R.I (Atom a) (y # xs)", "using Atom"], ["proof (prove)\nusing this:\n  cs = []\n  nqfree (Atom a)\n  nolb (Atom a) xs l x\n  l < x\n  x \\<notin> EQ (Atom a) xs\n  R.I (Atom a) (x # xs)\n  l < y\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. R.I (Atom a) (y # xs)", "by (simp add:depends\\<^sub>R_def)"], ["proof (state)\nthis:\n  R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa list. cs = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "case [simp]: (Cons c cs)"], ["proof (state)\nthis:\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "hence \"r = c*x + \\<langle>cs,xs\\<rangle>\""], ["proof (prove)\nusing this:\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. r = c * x + \\<langle>cs,xs\\<rangle>", "using Atom"], ["proof (prove)\nusing this:\n  cs__ = c # cs\n  nqfree (Atom a)\n  nolb (Atom a) xs l x\n  l < x\n  x \\<notin> EQ (Atom a) xs\n  R.I (Atom a) (x # xs)\n  l < y\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. r = c * x + \\<langle>cs,xs\\<rangle>", "by simp"], ["proof (state)\nthis:\n  r = c * x + \\<langle>cs,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "{"], ["proof (state)\nthis:\n  r = c * x + \\<langle>cs,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "assume \"c=0\""], ["proof (state)\nthis:\n  c = 0\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  c = 0\n\ngoal (1 subgoal):\n 1. R.I (Atom a) (y # xs)", "using Atom"], ["proof (prove)\nusing this:\n  c = 0\n  nqfree (Atom a)\n  nolb (Atom a) xs l x\n  l < x\n  x \\<notin> EQ (Atom a) xs\n  R.I (Atom a) (x # xs)\n  l < y\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. R.I (Atom a) (y # xs)", "by simp"], ["proof (state)\nthis:\n  R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "}"], ["proof (state)\nthis:\n  c = 0 \\<Longrightarrow> R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "moreover"], ["proof (state)\nthis:\n  c = 0 \\<Longrightarrow> R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "{"], ["proof (state)\nthis:\n  c = 0 \\<Longrightarrow> R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "assume \"c\\<noteq>0\""], ["proof (state)\nthis:\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. R.I (Atom a) (y # xs)", "using \\<open>r = c*x + \\<langle>cs,xs\\<rangle>\\<close> Atom"], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n  r = c * x + \\<langle>cs,xs\\<rangle>\n  nqfree (Atom a)\n  nolb (Atom a) xs l x\n  l < x\n  x \\<notin> EQ (Atom a) xs\n  R.I (Atom a) (x # xs)\n  l < y\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. R.I (Atom a) (y # xs)", "by (auto simp: depends\\<^sub>R_def split: if_splits)"], ["proof (state)\nthis:\n  R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "}"], ["proof (state)\nthis:\n  c \\<noteq> 0 \\<Longrightarrow> R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list. cs__ = aa # list \\<Longrightarrow> R.I (Atom a) (y # xs)", "ultimately"], ["proof (chain)\npicking this:\n  c = 0 \\<Longrightarrow> R.I (Atom a) (y # xs)\n  c \\<noteq> 0 \\<Longrightarrow> R.I (Atom a) (y # xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  c = 0 \\<Longrightarrow> R.I (Atom a) (y # xs)\n  c \\<noteq> 0 \\<Longrightarrow> R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. R.I (Atom a) (y # xs)", "by force"], ["proof (state)\nthis:\n  R.I (Atom a) (y # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  R.I (Atom a) (y # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  R.I (Atom a) (y # xs)\n\ngoal (6 subgoals):\n 1. \\<lbrakk>nqfree TrueF; nolb TrueF xs l x; l < x; x \\<notin> EQ TrueF xs;\n     R.I TrueF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I TrueF (y # xs)\n 2. \\<lbrakk>nqfree FalseF; nolb FalseF xs l x; l < x;\n     x \\<notin> EQ FalseF xs; R.I FalseF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; nolb f1 xs l x; l < x;\n                 x \\<notin> EQ f1 xs; R.I f1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f1 (y # xs);\n        \\<lbrakk>nqfree f2; nolb f2 xs l x; l < x; x \\<notin> EQ f2 xs;\n         R.I f2 (x # xs); l < y; y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> R.I f2 (y # xs);\n        nqfree (And f1 f2); nolb (And f1 f2) xs l x; l < x;\n        x \\<notin> EQ (And f1 f2) xs; R.I (And f1 f2) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (And f1 f2) (y # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; nolb f1 xs l x; l < x;\n                 x \\<notin> EQ f1 xs; R.I f1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f1 (y # xs);\n        \\<lbrakk>nqfree f2; nolb f2 xs l x; l < x; x \\<notin> EQ f2 xs;\n         R.I f2 (x # xs); l < y; y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> R.I f2 (y # xs);\n        nqfree (Or f1 f2); nolb (Or f1 f2) xs l x; l < x;\n        x \\<notin> EQ (Or f1 f2) xs; R.I (Or f1 f2) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (Or f1 f2) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs;\n                 R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f (y # xs);\n        nqfree (Neg f); nolb (Neg f) xs l x; l < x;\n        x \\<notin> EQ (Neg f) xs; R.I (Neg f) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (Neg f) (y # xs)\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs;\n                 R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f (y # xs);\n        nqfree (ExQ f); nolb (ExQ f) xs l x; l < x;\n        x \\<notin> EQ (ExQ f) xs; R.I (ExQ f) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (ExQ f) (y # xs)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<lbrakk>nqfree TrueF; nolb TrueF xs l x; l < x; x \\<notin> EQ TrueF xs;\n     R.I TrueF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I TrueF (y # xs)\n 2. \\<lbrakk>nqfree FalseF; nolb FalseF xs l x; l < x;\n     x \\<notin> EQ FalseF xs; R.I FalseF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; nolb f1 xs l x; l < x;\n                 x \\<notin> EQ f1 xs; R.I f1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f1 (y # xs);\n        \\<lbrakk>nqfree f2; nolb f2 xs l x; l < x; x \\<notin> EQ f2 xs;\n         R.I f2 (x # xs); l < y; y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> R.I f2 (y # xs);\n        nqfree (And f1 f2); nolb (And f1 f2) xs l x; l < x;\n        x \\<notin> EQ (And f1 f2) xs; R.I (And f1 f2) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (And f1 f2) (y # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; nolb f1 xs l x; l < x;\n                 x \\<notin> EQ f1 xs; R.I f1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f1 (y # xs);\n        \\<lbrakk>nqfree f2; nolb f2 xs l x; l < x; x \\<notin> EQ f2 xs;\n         R.I f2 (x # xs); l < y; y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> R.I f2 (y # xs);\n        nqfree (Or f1 f2); nolb (Or f1 f2) xs l x; l < x;\n        x \\<notin> EQ (Or f1 f2) xs; R.I (Or f1 f2) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (Or f1 f2) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs;\n                 R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f (y # xs);\n        nqfree (Neg f); nolb (Neg f) xs l x; l < x;\n        x \\<notin> EQ (Neg f) xs; R.I (Neg f) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (Neg f) (y # xs)\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs;\n                 R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f (y # xs);\n        nqfree (ExQ f); nolb (ExQ f) xs l x; l < x;\n        x \\<notin> EQ (ExQ f) xs; R.I (ExQ f) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (ExQ f) (y # xs)", "case (And f1 f2)"], ["proof (state)\nthis:\n  \\<lbrakk>nqfree f1; nolb f1 xs l x; l < x; x \\<notin> EQ f1 xs;\n   R.I f1 (x # xs); l < y; y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> R.I f1 (y # xs)\n  \\<lbrakk>nqfree f2; nolb f2 xs l x; l < x; x \\<notin> EQ f2 xs;\n   R.I f2 (x # xs); l < y; y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> R.I f2 (y # xs)\n  nqfree (And f1 f2)\n  nolb (And f1 f2) xs l x\n  l < x\n  x \\<notin> EQ (And f1 f2) xs\n  R.I (And f1 f2) (x # xs)\n  l < y\n  y \\<le> x\n\ngoal (6 subgoals):\n 1. \\<lbrakk>nqfree TrueF; nolb TrueF xs l x; l < x; x \\<notin> EQ TrueF xs;\n     R.I TrueF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I TrueF (y # xs)\n 2. \\<lbrakk>nqfree FalseF; nolb FalseF xs l x; l < x;\n     x \\<notin> EQ FalseF xs; R.I FalseF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; nolb f1 xs l x; l < x;\n                 x \\<notin> EQ f1 xs; R.I f1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f1 (y # xs);\n        \\<lbrakk>nqfree f2; nolb f2 xs l x; l < x; x \\<notin> EQ f2 xs;\n         R.I f2 (x # xs); l < y; y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> R.I f2 (y # xs);\n        nqfree (And f1 f2); nolb (And f1 f2) xs l x; l < x;\n        x \\<notin> EQ (And f1 f2) xs; R.I (And f1 f2) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (And f1 f2) (y # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; nolb f1 xs l x; l < x;\n                 x \\<notin> EQ f1 xs; R.I f1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f1 (y # xs);\n        \\<lbrakk>nqfree f2; nolb f2 xs l x; l < x; x \\<notin> EQ f2 xs;\n         R.I f2 (x # xs); l < y; y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> R.I f2 (y # xs);\n        nqfree (Or f1 f2); nolb (Or f1 f2) xs l x; l < x;\n        x \\<notin> EQ (Or f1 f2) xs; R.I (Or f1 f2) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (Or f1 f2) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs;\n                 R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f (y # xs);\n        nqfree (Neg f); nolb (Neg f) xs l x; l < x;\n        x \\<notin> EQ (Neg f) xs; R.I (Neg f) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (Neg f) (y # xs)\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs;\n                 R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f (y # xs);\n        nqfree (ExQ f); nolb (ExQ f) xs l x; l < x;\n        x \\<notin> EQ (ExQ f) xs; R.I (ExQ f) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (ExQ f) (y # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>nqfree f1; nolb f1 xs l x; l < x; x \\<notin> EQ f1 xs;\n   R.I f1 (x # xs); l < y; y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> R.I f1 (y # xs)\n  \\<lbrakk>nqfree f2; nolb f2 xs l x; l < x; x \\<notin> EQ f2 xs;\n   R.I f2 (x # xs); l < y; y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> R.I f2 (y # xs)\n  nqfree (And f1 f2)\n  nolb (And f1 f2) xs l x\n  l < x\n  x \\<notin> EQ (And f1 f2) xs\n  R.I (And f1 f2) (x # xs)\n  l < y\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. R.I (And f1 f2) (y # xs)", "by (fastforce)"], ["proof (state)\nthis:\n  R.I (And f1 f2) (y # xs)\n\ngoal (5 subgoals):\n 1. \\<lbrakk>nqfree TrueF; nolb TrueF xs l x; l < x; x \\<notin> EQ TrueF xs;\n     R.I TrueF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I TrueF (y # xs)\n 2. \\<lbrakk>nqfree FalseF; nolb FalseF xs l x; l < x;\n     x \\<notin> EQ FalseF xs; R.I FalseF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; nolb f1 xs l x; l < x;\n                 x \\<notin> EQ f1 xs; R.I f1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f1 (y # xs);\n        \\<lbrakk>nqfree f2; nolb f2 xs l x; l < x; x \\<notin> EQ f2 xs;\n         R.I f2 (x # xs); l < y; y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> R.I f2 (y # xs);\n        nqfree (Or f1 f2); nolb (Or f1 f2) xs l x; l < x;\n        x \\<notin> EQ (Or f1 f2) xs; R.I (Or f1 f2) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (Or f1 f2) (y # xs)\n 4. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs;\n                 R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f (y # xs);\n        nqfree (Neg f); nolb (Neg f) xs l x; l < x;\n        x \\<notin> EQ (Neg f) xs; R.I (Neg f) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (Neg f) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs;\n                 R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f (y # xs);\n        nqfree (ExQ f); nolb (ExQ f) xs l x; l < x;\n        x \\<notin> EQ (ExQ f) xs; R.I (ExQ f) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (ExQ f) (y # xs)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<lbrakk>nqfree TrueF; nolb TrueF xs l x; l < x; x \\<notin> EQ TrueF xs;\n     R.I TrueF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I TrueF (y # xs)\n 2. \\<lbrakk>nqfree FalseF; nolb FalseF xs l x; l < x;\n     x \\<notin> EQ FalseF xs; R.I FalseF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; nolb f1 xs l x; l < x;\n                 x \\<notin> EQ f1 xs; R.I f1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f1 (y # xs);\n        \\<lbrakk>nqfree f2; nolb f2 xs l x; l < x; x \\<notin> EQ f2 xs;\n         R.I f2 (x # xs); l < y; y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> R.I f2 (y # xs);\n        nqfree (Or f1 f2); nolb (Or f1 f2) xs l x; l < x;\n        x \\<notin> EQ (Or f1 f2) xs; R.I (Or f1 f2) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (Or f1 f2) (y # xs)\n 4. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs;\n                 R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f (y # xs);\n        nqfree (Neg f); nolb (Neg f) xs l x; l < x;\n        x \\<notin> EQ (Neg f) xs; R.I (Neg f) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (Neg f) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs;\n                 R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f (y # xs);\n        nqfree (ExQ f); nolb (ExQ f) xs l x; l < x;\n        x \\<notin> EQ (ExQ f) xs; R.I (ExQ f) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (ExQ f) (y # xs)", "case (Or f1 f2)"], ["proof (state)\nthis:\n  \\<lbrakk>nqfree f1; nolb f1 xs l x; l < x; x \\<notin> EQ f1 xs;\n   R.I f1 (x # xs); l < y; y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> R.I f1 (y # xs)\n  \\<lbrakk>nqfree f2; nolb f2 xs l x; l < x; x \\<notin> EQ f2 xs;\n   R.I f2 (x # xs); l < y; y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> R.I f2 (y # xs)\n  nqfree (Or f1 f2)\n  nolb (Or f1 f2) xs l x\n  l < x\n  x \\<notin> EQ (Or f1 f2) xs\n  R.I (Or f1 f2) (x # xs)\n  l < y\n  y \\<le> x\n\ngoal (5 subgoals):\n 1. \\<lbrakk>nqfree TrueF; nolb TrueF xs l x; l < x; x \\<notin> EQ TrueF xs;\n     R.I TrueF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I TrueF (y # xs)\n 2. \\<lbrakk>nqfree FalseF; nolb FalseF xs l x; l < x;\n     x \\<notin> EQ FalseF xs; R.I FalseF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; nolb f1 xs l x; l < x;\n                 x \\<notin> EQ f1 xs; R.I f1 (x # xs); l < y;\n                 y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f1 (y # xs);\n        \\<lbrakk>nqfree f2; nolb f2 xs l x; l < x; x \\<notin> EQ f2 xs;\n         R.I f2 (x # xs); l < y; y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> R.I f2 (y # xs);\n        nqfree (Or f1 f2); nolb (Or f1 f2) xs l x; l < x;\n        x \\<notin> EQ (Or f1 f2) xs; R.I (Or f1 f2) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (Or f1 f2) (y # xs)\n 4. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs;\n                 R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f (y # xs);\n        nqfree (Neg f); nolb (Neg f) xs l x; l < x;\n        x \\<notin> EQ (Neg f) xs; R.I (Neg f) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (Neg f) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs;\n                 R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f (y # xs);\n        nqfree (ExQ f); nolb (ExQ f) xs l x; l < x;\n        x \\<notin> EQ (ExQ f) xs; R.I (ExQ f) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (ExQ f) (y # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>nqfree f1; nolb f1 xs l x; l < x; x \\<notin> EQ f1 xs;\n   R.I f1 (x # xs); l < y; y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> R.I f1 (y # xs)\n  \\<lbrakk>nqfree f2; nolb f2 xs l x; l < x; x \\<notin> EQ f2 xs;\n   R.I f2 (x # xs); l < y; y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> R.I f2 (y # xs)\n  nqfree (Or f1 f2)\n  nolb (Or f1 f2) xs l x\n  l < x\n  x \\<notin> EQ (Or f1 f2) xs\n  R.I (Or f1 f2) (x # xs)\n  l < y\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. R.I (Or f1 f2) (y # xs)", "by (fastforce)"], ["proof (state)\nthis:\n  R.I (Or f1 f2) (y # xs)\n\ngoal (4 subgoals):\n 1. \\<lbrakk>nqfree TrueF; nolb TrueF xs l x; l < x; x \\<notin> EQ TrueF xs;\n     R.I TrueF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I TrueF (y # xs)\n 2. \\<lbrakk>nqfree FalseF; nolb FalseF xs l x; l < x;\n     x \\<notin> EQ FalseF xs; R.I FalseF (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I FalseF (y # xs)\n 3. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs;\n                 R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f (y # xs);\n        nqfree (Neg f); nolb (Neg f) xs l x; l < x;\n        x \\<notin> EQ (Neg f) xs; R.I (Neg f) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (Neg f) (y # xs)\n 4. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs;\n                 R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> R.I f (y # xs);\n        nqfree (ExQ f); nolb (ExQ f) xs l x; l < x;\n        x \\<notin> EQ (ExQ f) xs; R.I (ExQ f) (x # xs); l < y;\n        y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> R.I (ExQ f) (y # xs)", "qed simp+"], ["", "definition \"EQ2 = EQ\""], ["", "lemma EQ2_Or[simp]: \"EQ2 (Or f g) xs = (EQ2 f xs \\<union> EQ2 g xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EQ2 (Or f g) xs = EQ2 f xs \\<union> EQ2 g xs", "by(auto simp:EQ2_def)"], ["", "lemma EQ2_And[simp]: \"EQ2 (And f g) xs = (EQ2 f xs \\<union> EQ2 g xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EQ2 (And f g) xs = EQ2 f xs \\<union> EQ2 g xs", "by(auto simp:EQ2_def)"], ["", "lemma innermost_intvl2:\n  \"\\<lbrakk> nqfree f; nolb f xs l x; l < x; x \\<notin> EQ2 f xs; R.I f (x#xs); l < y; y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> R.I f (y#xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ2 f xs;\n     R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I f (y # xs)", "unfolding EQ2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nqfree f; nolb f xs l x; l < x; x \\<notin> EQ f xs;\n     R.I f (x # xs); l < y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> R.I f (y # xs)", "by(blast intro:innermost_intvl)"], ["", "lemma I_subst_peps2:\n \"nqfree f \\<Longrightarrow> r+\\<langle>cs,xs\\<rangle> < x \\<Longrightarrow> nolb f xs (r+\\<langle>cs,xs\\<rangle>) x\n \\<Longrightarrow> \\<forall>y \\<in> {r+\\<langle>cs,xs\\<rangle> <.. x}. R.I f (y#xs) \\<and> y \\<notin> EQ2 f xs\n \\<Longrightarrow> R.I (subst\\<^sub>+ f (r,cs)) xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nqfree f; r + \\<langle>cs,xs\\<rangle> < x;\n     nolb f xs (r + \\<langle>cs,xs\\<rangle>) x;\n     \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n        R.I f (y # xs) \\<and> y \\<notin> EQ2 f xs\\<rbrakk>\n    \\<Longrightarrow> R.I (subst\\<^sub>+ f (r, cs)) xs", "proof(induct f)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>nqfree TrueF; r + \\<langle>cs,xs\\<rangle> < x;\n     nolb TrueF xs (r + \\<langle>cs,xs\\<rangle>) x;\n     \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n        R.I TrueF (y # xs) \\<and> y \\<notin> EQ2 TrueF xs\\<rbrakk>\n    \\<Longrightarrow> R.I (subst\\<^sub>+ TrueF (r, cs)) xs\n 2. \\<lbrakk>nqfree FalseF; r + \\<langle>cs,xs\\<rangle> < x;\n     nolb FalseF xs (r + \\<langle>cs,xs\\<rangle>) x;\n     \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n        R.I FalseF (y # xs) \\<and> y \\<notin> EQ2 FalseF xs\\<rbrakk>\n    \\<Longrightarrow> R.I (subst\\<^sub>+ FalseF (r, cs)) xs\n 3. \\<And>xa.\n       \\<lbrakk>nqfree (Atom xa); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Atom xa) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Atom xa) (y # xs) \\<and>\n           y \\<notin> EQ2 (Atom xa) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Atom xa) (r, cs)) xs\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f1 xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f1 (y # xs) \\<and> y \\<notin> EQ2 f1 xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f1 (r, cs)) xs;\n        \\<lbrakk>nqfree f2; r + \\<langle>cs,xs\\<rangle> < x;\n         nolb f2 xs (r + \\<langle>cs,xs\\<rangle>) x;\n         \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n            R.I f2 (y # xs) \\<and> y \\<notin> EQ2 f2 xs\\<rbrakk>\n        \\<Longrightarrow> R.I (subst\\<^sub>+ f2 (r, cs)) xs;\n        nqfree (And f1 f2); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (And f1 f2) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (And f1 f2) (y # xs) \\<and>\n           y \\<notin> EQ2 (And f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (And f1 f2) (r, cs)) xs\n 5. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f1 xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f1 (y # xs) \\<and> y \\<notin> EQ2 f1 xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f1 (r, cs)) xs;\n        \\<lbrakk>nqfree f2; r + \\<langle>cs,xs\\<rangle> < x;\n         nolb f2 xs (r + \\<langle>cs,xs\\<rangle>) x;\n         \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n            R.I f2 (y # xs) \\<and> y \\<notin> EQ2 f2 xs\\<rbrakk>\n        \\<Longrightarrow> R.I (subst\\<^sub>+ f2 (r, cs)) xs;\n        nqfree (Or f1 f2); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Or f1 f2) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Or f1 f2) (y # xs) \\<and>\n           y \\<notin> EQ2 (Or f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Or f1 f2) (r, cs)) xs\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f (y # xs) \\<and> y \\<notin> EQ2 f xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f (r, cs)) xs;\n        nqfree (Neg f); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Neg f) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Neg f) (y # xs) \\<and> y \\<notin> EQ2 (Neg f) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\n 7. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f (y # xs) \\<and> y \\<notin> EQ2 f xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f (r, cs)) xs;\n        nqfree (ExQ f); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (ExQ f) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (ExQ f) (y # xs) \\<and> y \\<notin> EQ2 (ExQ f) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs", "case FalseF"], ["proof (state)\nthis:\n  nqfree FalseF\n  r + \\<langle>cs,xs\\<rangle> < x\n  nolb FalseF xs (r + \\<langle>cs,xs\\<rangle>) x\n  \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n     R.I FalseF (y # xs) \\<and> y \\<notin> EQ2 FalseF xs\n\ngoal (7 subgoals):\n 1. \\<lbrakk>nqfree TrueF; r + \\<langle>cs,xs\\<rangle> < x;\n     nolb TrueF xs (r + \\<langle>cs,xs\\<rangle>) x;\n     \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n        R.I TrueF (y # xs) \\<and> y \\<notin> EQ2 TrueF xs\\<rbrakk>\n    \\<Longrightarrow> R.I (subst\\<^sub>+ TrueF (r, cs)) xs\n 2. \\<lbrakk>nqfree FalseF; r + \\<langle>cs,xs\\<rangle> < x;\n     nolb FalseF xs (r + \\<langle>cs,xs\\<rangle>) x;\n     \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n        R.I FalseF (y # xs) \\<and> y \\<notin> EQ2 FalseF xs\\<rbrakk>\n    \\<Longrightarrow> R.I (subst\\<^sub>+ FalseF (r, cs)) xs\n 3. \\<And>xa.\n       \\<lbrakk>nqfree (Atom xa); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Atom xa) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Atom xa) (y # xs) \\<and>\n           y \\<notin> EQ2 (Atom xa) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Atom xa) (r, cs)) xs\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f1 xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f1 (y # xs) \\<and> y \\<notin> EQ2 f1 xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f1 (r, cs)) xs;\n        \\<lbrakk>nqfree f2; r + \\<langle>cs,xs\\<rangle> < x;\n         nolb f2 xs (r + \\<langle>cs,xs\\<rangle>) x;\n         \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n            R.I f2 (y # xs) \\<and> y \\<notin> EQ2 f2 xs\\<rbrakk>\n        \\<Longrightarrow> R.I (subst\\<^sub>+ f2 (r, cs)) xs;\n        nqfree (And f1 f2); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (And f1 f2) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (And f1 f2) (y # xs) \\<and>\n           y \\<notin> EQ2 (And f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (And f1 f2) (r, cs)) xs\n 5. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f1 xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f1 (y # xs) \\<and> y \\<notin> EQ2 f1 xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f1 (r, cs)) xs;\n        \\<lbrakk>nqfree f2; r + \\<langle>cs,xs\\<rangle> < x;\n         nolb f2 xs (r + \\<langle>cs,xs\\<rangle>) x;\n         \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n            R.I f2 (y # xs) \\<and> y \\<notin> EQ2 f2 xs\\<rbrakk>\n        \\<Longrightarrow> R.I (subst\\<^sub>+ f2 (r, cs)) xs;\n        nqfree (Or f1 f2); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Or f1 f2) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Or f1 f2) (y # xs) \\<and>\n           y \\<notin> EQ2 (Or f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Or f1 f2) (r, cs)) xs\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f (y # xs) \\<and> y \\<notin> EQ2 f xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f (r, cs)) xs;\n        nqfree (Neg f); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Neg f) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Neg f) (y # xs) \\<and> y \\<notin> EQ2 (Neg f) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\n 7. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f (y # xs) \\<and> y \\<notin> EQ2 f xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f (r, cs)) xs;\n        nqfree (ExQ f); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (ExQ f) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (ExQ f) (y # xs) \\<and> y \\<notin> EQ2 (ExQ f) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs", "thus ?case"], ["proof (prove)\nusing this:\n  nqfree FalseF\n  r + \\<langle>cs,xs\\<rangle> < x\n  nolb FalseF xs (r + \\<langle>cs,xs\\<rangle>) x\n  \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n     R.I FalseF (y # xs) \\<and> y \\<notin> EQ2 FalseF xs\n\ngoal (1 subgoal):\n 1. R.I (subst\\<^sub>+ FalseF (r, cs)) xs", "by simp (metis antisym_conv1 linorder_neq_iff)"], ["proof (state)\nthis:\n  R.I (subst\\<^sub>+ FalseF (r, cs)) xs\n\ngoal (6 subgoals):\n 1. \\<lbrakk>nqfree TrueF; r + \\<langle>cs,xs\\<rangle> < x;\n     nolb TrueF xs (r + \\<langle>cs,xs\\<rangle>) x;\n     \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n        R.I TrueF (y # xs) \\<and> y \\<notin> EQ2 TrueF xs\\<rbrakk>\n    \\<Longrightarrow> R.I (subst\\<^sub>+ TrueF (r, cs)) xs\n 2. \\<And>xa.\n       \\<lbrakk>nqfree (Atom xa); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Atom xa) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Atom xa) (y # xs) \\<and>\n           y \\<notin> EQ2 (Atom xa) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Atom xa) (r, cs)) xs\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f1 xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f1 (y # xs) \\<and> y \\<notin> EQ2 f1 xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f1 (r, cs)) xs;\n        \\<lbrakk>nqfree f2; r + \\<langle>cs,xs\\<rangle> < x;\n         nolb f2 xs (r + \\<langle>cs,xs\\<rangle>) x;\n         \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n            R.I f2 (y # xs) \\<and> y \\<notin> EQ2 f2 xs\\<rbrakk>\n        \\<Longrightarrow> R.I (subst\\<^sub>+ f2 (r, cs)) xs;\n        nqfree (And f1 f2); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (And f1 f2) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (And f1 f2) (y # xs) \\<and>\n           y \\<notin> EQ2 (And f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (And f1 f2) (r, cs)) xs\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f1 xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f1 (y # xs) \\<and> y \\<notin> EQ2 f1 xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f1 (r, cs)) xs;\n        \\<lbrakk>nqfree f2; r + \\<langle>cs,xs\\<rangle> < x;\n         nolb f2 xs (r + \\<langle>cs,xs\\<rangle>) x;\n         \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n            R.I f2 (y # xs) \\<and> y \\<notin> EQ2 f2 xs\\<rbrakk>\n        \\<Longrightarrow> R.I (subst\\<^sub>+ f2 (r, cs)) xs;\n        nqfree (Or f1 f2); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Or f1 f2) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Or f1 f2) (y # xs) \\<and>\n           y \\<notin> EQ2 (Or f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Or f1 f2) (r, cs)) xs\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f (y # xs) \\<and> y \\<notin> EQ2 f xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f (r, cs)) xs;\n        nqfree (Neg f); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Neg f) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Neg f) (y # xs) \\<and> y \\<notin> EQ2 (Neg f) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f (y # xs) \\<and> y \\<notin> EQ2 f xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f (r, cs)) xs;\n        nqfree (ExQ f); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (ExQ f) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (ExQ f) (y # xs) \\<and> y \\<notin> EQ2 (ExQ f) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<lbrakk>nqfree TrueF; r + \\<langle>cs,xs\\<rangle> < x;\n     nolb TrueF xs (r + \\<langle>cs,xs\\<rangle>) x;\n     \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n        R.I TrueF (y # xs) \\<and> y \\<notin> EQ2 TrueF xs\\<rbrakk>\n    \\<Longrightarrow> R.I (subst\\<^sub>+ TrueF (r, cs)) xs\n 2. \\<And>xa.\n       \\<lbrakk>nqfree (Atom xa); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Atom xa) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Atom xa) (y # xs) \\<and>\n           y \\<notin> EQ2 (Atom xa) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Atom xa) (r, cs)) xs\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f1 xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f1 (y # xs) \\<and> y \\<notin> EQ2 f1 xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f1 (r, cs)) xs;\n        \\<lbrakk>nqfree f2; r + \\<langle>cs,xs\\<rangle> < x;\n         nolb f2 xs (r + \\<langle>cs,xs\\<rangle>) x;\n         \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n            R.I f2 (y # xs) \\<and> y \\<notin> EQ2 f2 xs\\<rbrakk>\n        \\<Longrightarrow> R.I (subst\\<^sub>+ f2 (r, cs)) xs;\n        nqfree (And f1 f2); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (And f1 f2) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (And f1 f2) (y # xs) \\<and>\n           y \\<notin> EQ2 (And f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (And f1 f2) (r, cs)) xs\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f1 xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f1 (y # xs) \\<and> y \\<notin> EQ2 f1 xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f1 (r, cs)) xs;\n        \\<lbrakk>nqfree f2; r + \\<langle>cs,xs\\<rangle> < x;\n         nolb f2 xs (r + \\<langle>cs,xs\\<rangle>) x;\n         \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n            R.I f2 (y # xs) \\<and> y \\<notin> EQ2 f2 xs\\<rbrakk>\n        \\<Longrightarrow> R.I (subst\\<^sub>+ f2 (r, cs)) xs;\n        nqfree (Or f1 f2); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Or f1 f2) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Or f1 f2) (y # xs) \\<and>\n           y \\<notin> EQ2 (Or f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Or f1 f2) (r, cs)) xs\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f (y # xs) \\<and> y \\<notin> EQ2 f xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f (r, cs)) xs;\n        nqfree (Neg f); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Neg f) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Neg f) (y # xs) \\<and> y \\<notin> EQ2 (Neg f) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f (y # xs) \\<and> y \\<notin> EQ2 f xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f (r, cs)) xs;\n        nqfree (ExQ f); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (ExQ f) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (ExQ f) (y # xs) \\<and> y \\<notin> EQ2 (ExQ f) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs", "case (Atom a)"], ["proof (state)\nthis:\n  nqfree (Atom a)\n  r + \\<langle>cs,xs\\<rangle> < x\n  nolb (Atom a) xs (r + \\<langle>cs,xs\\<rangle>) x\n  \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n     R.I (Atom a) (y # xs) \\<and> y \\<notin> EQ2 (Atom a) xs\n\ngoal (6 subgoals):\n 1. \\<lbrakk>nqfree TrueF; r + \\<langle>cs,xs\\<rangle> < x;\n     nolb TrueF xs (r + \\<langle>cs,xs\\<rangle>) x;\n     \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n        R.I TrueF (y # xs) \\<and> y \\<notin> EQ2 TrueF xs\\<rbrakk>\n    \\<Longrightarrow> R.I (subst\\<^sub>+ TrueF (r, cs)) xs\n 2. \\<And>xa.\n       \\<lbrakk>nqfree (Atom xa); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Atom xa) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Atom xa) (y # xs) \\<and>\n           y \\<notin> EQ2 (Atom xa) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Atom xa) (r, cs)) xs\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f1 xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f1 (y # xs) \\<and> y \\<notin> EQ2 f1 xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f1 (r, cs)) xs;\n        \\<lbrakk>nqfree f2; r + \\<langle>cs,xs\\<rangle> < x;\n         nolb f2 xs (r + \\<langle>cs,xs\\<rangle>) x;\n         \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n            R.I f2 (y # xs) \\<and> y \\<notin> EQ2 f2 xs\\<rbrakk>\n        \\<Longrightarrow> R.I (subst\\<^sub>+ f2 (r, cs)) xs;\n        nqfree (And f1 f2); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (And f1 f2) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (And f1 f2) (y # xs) \\<and>\n           y \\<notin> EQ2 (And f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (And f1 f2) (r, cs)) xs\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f1 xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f1 (y # xs) \\<and> y \\<notin> EQ2 f1 xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f1 (r, cs)) xs;\n        \\<lbrakk>nqfree f2; r + \\<langle>cs,xs\\<rangle> < x;\n         nolb f2 xs (r + \\<langle>cs,xs\\<rangle>) x;\n         \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n            R.I f2 (y # xs) \\<and> y \\<notin> EQ2 f2 xs\\<rbrakk>\n        \\<Longrightarrow> R.I (subst\\<^sub>+ f2 (r, cs)) xs;\n        nqfree (Or f1 f2); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Or f1 f2) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Or f1 f2) (y # xs) \\<and>\n           y \\<notin> EQ2 (Or f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Or f1 f2) (r, cs)) xs\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f (y # xs) \\<and> y \\<notin> EQ2 f xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f (r, cs)) xs;\n        nqfree (Neg f); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Neg f) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Neg f) (y # xs) \\<and> y \\<notin> EQ2 (Neg f) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f (y # xs) \\<and> y \\<notin> EQ2 f xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f (r, cs)) xs;\n        nqfree (ExQ f); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (ExQ f) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (ExQ f) (y # xs) \\<and> y \\<notin> EQ2 (ExQ f) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "proof(cases \"((r,cs),a)\" rule:asubst_peps.cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "case (1 r cs s d ds)"], ["proof (state)\nthis:\n  ((r, cs), a) = ((r, cs), Less s (d # ds))\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "{"], ["proof (state)\nthis:\n  ((r, cs), a) = ((r, cs), Less s (d # ds))\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "assume \"d=0\""], ["proof (state)\nthis:\n  d = 0\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "hence ?thesis"], ["proof (prove)\nusing this:\n  d = 0\n\ngoal (1 subgoal):\n 1. R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "using Atom 1"], ["proof (prove)\nusing this:\n  d = 0\n  nqfree (Atom a)\n  r + \\<langle>cs,xs\\<rangle> < x\n  nolb (Atom a) xs (r + \\<langle>cs,xs\\<rangle>) x\n  \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n     R.I (Atom a) (y # xs) \\<and> y \\<notin> EQ2 (Atom a) xs\n  ((r, cs), a) = ((r, cs), Less s (d # ds))\n\ngoal (1 subgoal):\n 1. R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "by auto"], ["proof (state)\nthis:\n  R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "}"], ["proof (state)\nthis:\n  d = 0 \\<Longrightarrow> R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "moreover"], ["proof (state)\nthis:\n  d = 0 \\<Longrightarrow> R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "{"], ["proof (state)\nthis:\n  d = 0 \\<Longrightarrow> R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "assume \"d<0\""], ["proof (state)\nthis:\n  d < 0\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "have \"s < d*x + \\<langle>ds,xs\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s < d * x + \\<langle>ds,xs\\<rangle>", "using Atom 1"], ["proof (prove)\nusing this:\n  nqfree (Atom a)\n  r + \\<langle>cs,xs\\<rangle> < x\n  nolb (Atom a) xs (r + \\<langle>cs,xs\\<rangle>) x\n  \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n     R.I (Atom a) (y # xs) \\<and> y \\<notin> EQ2 (Atom a) xs\n  ((r, cs), a) = ((r, cs), Less s (d # ds))\n\ngoal (1 subgoal):\n 1. s < d * x + \\<langle>ds,xs\\<rangle>", "by simp"], ["proof (state)\nthis:\n  s < d * x + \\<langle>ds,xs\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "moreover"], ["proof (state)\nthis:\n  s < d * x + \\<langle>ds,xs\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "have \"d*x < d*(r + \\<langle>cs,xs\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d * x < d * (r + \\<langle>cs,xs\\<rangle>)", "using \\<open>d<0\\<close> Atom 1"], ["proof (prove)\nusing this:\n  d < 0\n  nqfree (Atom a)\n  r + \\<langle>cs,xs\\<rangle> < x\n  nolb (Atom a) xs (r + \\<langle>cs,xs\\<rangle>) x\n  \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n     R.I (Atom a) (y # xs) \\<and> y \\<notin> EQ2 (Atom a) xs\n  ((r, cs), a) = ((r, cs), Less s (d # ds))\n\ngoal (1 subgoal):\n 1. d * x < d * (r + \\<langle>cs,xs\\<rangle>)", "by (simp add: mult_strict_left_mono_neg)"], ["proof (state)\nthis:\n  d * x < d * (r + \\<langle>cs,xs\\<rangle>)\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "ultimately"], ["proof (chain)\npicking this:\n  s < d * x + \\<langle>ds,xs\\<rangle>\n  d * x < d * (r + \\<langle>cs,xs\\<rangle>)", "have \"s < d * (r + \\<langle>cs,xs\\<rangle>) + \\<langle>ds,xs\\<rangle>\""], ["proof (prove)\nusing this:\n  s < d * x + \\<langle>ds,xs\\<rangle>\n  d * x < d * (r + \\<langle>cs,xs\\<rangle>)\n\ngoal (1 subgoal):\n 1. s < d * (r + \\<langle>cs,xs\\<rangle>) + \\<langle>ds,xs\\<rangle>", "by(simp add:algebra_simps)"], ["proof (state)\nthis:\n  s < d * (r + \\<langle>cs,xs\\<rangle>) + \\<langle>ds,xs\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "hence ?thesis"], ["proof (prove)\nusing this:\n  s < d * (r + \\<langle>cs,xs\\<rangle>) + \\<langle>ds,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "using 1"], ["proof (prove)\nusing this:\n  s < d * (r + \\<langle>cs,xs\\<rangle>) + \\<langle>ds,xs\\<rangle>\n  ((r, cs), a) = ((r, cs), Less s (d # ds))\n\ngoal (1 subgoal):\n 1. R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "by (auto simp add: iprod_left_add_distrib algebra_simps)"], ["proof (state)\nthis:\n  R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "}"], ["proof (state)\nthis:\n  d < 0 \\<Longrightarrow> R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "moreover"], ["proof (state)\nthis:\n  d < 0 \\<Longrightarrow> R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "{"], ["proof (state)\nthis:\n  d < 0 \\<Longrightarrow> R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "let ?L = \"(s - \\<langle>ds,xs\\<rangle>) / d\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "let ?U = \"r + \\<langle>cs,xs\\<rangle>\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "assume \"d>0\""], ["proof (state)\nthis:\n  0 < d\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "hence \"?U < x\" and \"\\<forall>y. ?U < y \\<and> y < x \\<longrightarrow> y \\<noteq> ?L\"\n        and \"\\<forall>y. ?U < y \\<and> y \\<le> x \\<longrightarrow> ?L < y\""], ["proof (prove)\nusing this:\n  0 < d\n\ngoal (1 subgoal):\n 1. r + \\<langle>cs,xs\\<rangle> < x &&&\n    \\<forall>y.\n       r + \\<langle>cs,xs\\<rangle> < y \\<and> y < x \\<longrightarrow>\n       y \\<noteq> (s - \\<langle>ds,xs\\<rangle>) / d &&&\n    \\<forall>y.\n       r + \\<langle>cs,xs\\<rangle> < y \\<and> y \\<le> x \\<longrightarrow>\n       (s - \\<langle>ds,xs\\<rangle>) / d < y", "using Atom 1"], ["proof (prove)\nusing this:\n  0 < d\n  nqfree (Atom a)\n  r + \\<langle>cs,xs\\<rangle> < x\n  nolb (Atom a) xs (r + \\<langle>cs,xs\\<rangle>) x\n  \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n     R.I (Atom a) (y # xs) \\<and> y \\<notin> EQ2 (Atom a) xs\n  ((r, cs), a) = ((r, cs), Less s (d # ds))\n\ngoal (1 subgoal):\n 1. r + \\<langle>cs,xs\\<rangle> < x &&&\n    \\<forall>y.\n       r + \\<langle>cs,xs\\<rangle> < y \\<and> y < x \\<longrightarrow>\n       y \\<noteq> (s - \\<langle>ds,xs\\<rangle>) / d &&&\n    \\<forall>y.\n       r + \\<langle>cs,xs\\<rangle> < y \\<and> y \\<le> x \\<longrightarrow>\n       (s - \\<langle>ds,xs\\<rangle>) / d < y", "by(simp_all add:nolb_def depends\\<^sub>R_def Ball_def field_simps)"], ["proof (state)\nthis:\n  r + \\<langle>cs,xs\\<rangle> < x\n  \\<forall>y.\n     r + \\<langle>cs,xs\\<rangle> < y \\<and> y < x \\<longrightarrow>\n     y \\<noteq> (s - \\<langle>ds,xs\\<rangle>) / d\n  \\<forall>y.\n     r + \\<langle>cs,xs\\<rangle> < y \\<and> y \\<le> x \\<longrightarrow>\n     (s - \\<langle>ds,xs\\<rangle>) / d < y\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "hence \"?L < ?U \\<or> ?L = ?U\""], ["proof (prove)\nusing this:\n  r + \\<langle>cs,xs\\<rangle> < x\n  \\<forall>y.\n     r + \\<langle>cs,xs\\<rangle> < y \\<and> y < x \\<longrightarrow>\n     y \\<noteq> (s - \\<langle>ds,xs\\<rangle>) / d\n  \\<forall>y.\n     r + \\<langle>cs,xs\\<rangle> < y \\<and> y \\<le> x \\<longrightarrow>\n     (s - \\<langle>ds,xs\\<rangle>) / d < y\n\ngoal (1 subgoal):\n 1. (s - \\<langle>ds,xs\\<rangle>) / d < r + \\<langle>cs,xs\\<rangle> \\<or>\n    (s - \\<langle>ds,xs\\<rangle>) / d = r + \\<langle>cs,xs\\<rangle>", "by (metis linorder_neqE_linordered_idom order_refl)"], ["proof (state)\nthis:\n  (s - \\<langle>ds,xs\\<rangle>) / d < r + \\<langle>cs,xs\\<rangle> \\<or>\n  (s - \\<langle>ds,xs\\<rangle>) / d = r + \\<langle>cs,xs\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "hence ?thesis"], ["proof (prove)\nusing this:\n  (s - \\<langle>ds,xs\\<rangle>) / d < r + \\<langle>cs,xs\\<rangle> \\<or>\n  (s - \\<langle>ds,xs\\<rangle>) / d = r + \\<langle>cs,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "using Atom 1 \\<open>d>0\\<close>"], ["proof (prove)\nusing this:\n  (s - \\<langle>ds,xs\\<rangle>) / d < r + \\<langle>cs,xs\\<rangle> \\<or>\n  (s - \\<langle>ds,xs\\<rangle>) / d = r + \\<langle>cs,xs\\<rangle>\n  nqfree (Atom a)\n  r + \\<langle>cs,xs\\<rangle> < x\n  nolb (Atom a) xs (r + \\<langle>cs,xs\\<rangle>) x\n  \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n     R.I (Atom a) (y # xs) \\<and> y \\<notin> EQ2 (Atom a) xs\n  ((r, cs), a) = ((r, cs), Less s (d # ds))\n  0 < d\n\ngoal (1 subgoal):\n 1. R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "by (simp add: iprod_left_add_distrib field_simps)"], ["proof (state)\nthis:\n  R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "}"], ["proof (state)\nthis:\n  0 < d \\<Longrightarrow> R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "ultimately"], ["proof (chain)\npicking this:\n  d = 0 \\<Longrightarrow> R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n  d < 0 \\<Longrightarrow> R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n  0 < d \\<Longrightarrow> R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "show ?thesis"], ["proof (prove)\nusing this:\n  d = 0 \\<Longrightarrow> R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n  d < 0 \\<Longrightarrow> R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n  0 < d \\<Longrightarrow> R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n\ngoal (1 subgoal):\n 1. R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "by force"], ["proof (state)\nthis:\n  R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n\ngoal (3 subgoals):\n 1. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "case 2"], ["proof (state)\nthis:\n  ((r, cs), a) = (rcs_, Eq r_ (d_ # ds_))\n\ngoal (3 subgoals):\n 1. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "thus ?thesis"], ["proof (prove)\nusing this:\n  ((r, cs), a) = (rcs_, Eq r_ (d_ # ds_))\n\ngoal (1 subgoal):\n 1. R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "using Atom"], ["proof (prove)\nusing this:\n  ((r, cs), a) = (rcs_, Eq r_ (d_ # ds_))\n  nqfree (Atom a)\n  r + \\<langle>cs,xs\\<rangle> < x\n  nolb (Atom a) xs (r + \\<langle>cs,xs\\<rangle>) x\n  \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n     R.I (Atom a) (y # xs) \\<and> y \\<notin> EQ2 (Atom a) xs\n\ngoal (1 subgoal):\n 1. R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "by (fastforce simp: nolb_def EQ2_def depends\\<^sub>R_def field_simps split: if_split_asm)"], ["proof (state)\nthis:\n  R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n\ngoal (2 subgoals):\n 1. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n 2. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs", "qed (insert Atom, auto)"], ["proof (state)\nthis:\n  R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n\ngoal (5 subgoals):\n 1. \\<lbrakk>nqfree TrueF; r + \\<langle>cs,xs\\<rangle> < x;\n     nolb TrueF xs (r + \\<langle>cs,xs\\<rangle>) x;\n     \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n        R.I TrueF (y # xs) \\<and> y \\<notin> EQ2 TrueF xs\\<rbrakk>\n    \\<Longrightarrow> R.I (subst\\<^sub>+ TrueF (r, cs)) xs\n 2. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f1 xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f1 (y # xs) \\<and> y \\<notin> EQ2 f1 xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f1 (r, cs)) xs;\n        \\<lbrakk>nqfree f2; r + \\<langle>cs,xs\\<rangle> < x;\n         nolb f2 xs (r + \\<langle>cs,xs\\<rangle>) x;\n         \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n            R.I f2 (y # xs) \\<and> y \\<notin> EQ2 f2 xs\\<rbrakk>\n        \\<Longrightarrow> R.I (subst\\<^sub>+ f2 (r, cs)) xs;\n        nqfree (And f1 f2); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (And f1 f2) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (And f1 f2) (y # xs) \\<and>\n           y \\<notin> EQ2 (And f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (And f1 f2) (r, cs)) xs\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f1 xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f1 (y # xs) \\<and> y \\<notin> EQ2 f1 xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f1 (r, cs)) xs;\n        \\<lbrakk>nqfree f2; r + \\<langle>cs,xs\\<rangle> < x;\n         nolb f2 xs (r + \\<langle>cs,xs\\<rangle>) x;\n         \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n            R.I f2 (y # xs) \\<and> y \\<notin> EQ2 f2 xs\\<rbrakk>\n        \\<Longrightarrow> R.I (subst\\<^sub>+ f2 (r, cs)) xs;\n        nqfree (Or f1 f2); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Or f1 f2) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Or f1 f2) (y # xs) \\<and>\n           y \\<notin> EQ2 (Or f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Or f1 f2) (r, cs)) xs\n 4. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f (y # xs) \\<and> y \\<notin> EQ2 f xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f (r, cs)) xs;\n        nqfree (Neg f); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Neg f) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Neg f) (y # xs) \\<and> y \\<notin> EQ2 (Neg f) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f (y # xs) \\<and> y \\<notin> EQ2 f xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f (r, cs)) xs;\n        nqfree (ExQ f); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (ExQ f) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (ExQ f) (y # xs) \\<and> y \\<notin> EQ2 (ExQ f) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<lbrakk>nqfree TrueF; r + \\<langle>cs,xs\\<rangle> < x;\n     nolb TrueF xs (r + \\<langle>cs,xs\\<rangle>) x;\n     \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n        R.I TrueF (y # xs) \\<and> y \\<notin> EQ2 TrueF xs\\<rbrakk>\n    \\<Longrightarrow> R.I (subst\\<^sub>+ TrueF (r, cs)) xs\n 2. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f1 xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f1 (y # xs) \\<and> y \\<notin> EQ2 f1 xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f1 (r, cs)) xs;\n        \\<lbrakk>nqfree f2; r + \\<langle>cs,xs\\<rangle> < x;\n         nolb f2 xs (r + \\<langle>cs,xs\\<rangle>) x;\n         \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n            R.I f2 (y # xs) \\<and> y \\<notin> EQ2 f2 xs\\<rbrakk>\n        \\<Longrightarrow> R.I (subst\\<^sub>+ f2 (r, cs)) xs;\n        nqfree (And f1 f2); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (And f1 f2) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (And f1 f2) (y # xs) \\<and>\n           y \\<notin> EQ2 (And f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (And f1 f2) (r, cs)) xs\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f1 xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f1 (y # xs) \\<and> y \\<notin> EQ2 f1 xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f1 (r, cs)) xs;\n        \\<lbrakk>nqfree f2; r + \\<langle>cs,xs\\<rangle> < x;\n         nolb f2 xs (r + \\<langle>cs,xs\\<rangle>) x;\n         \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n            R.I f2 (y # xs) \\<and> y \\<notin> EQ2 f2 xs\\<rbrakk>\n        \\<Longrightarrow> R.I (subst\\<^sub>+ f2 (r, cs)) xs;\n        nqfree (Or f1 f2); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Or f1 f2) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Or f1 f2) (y # xs) \\<and>\n           y \\<notin> EQ2 (Or f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Or f1 f2) (r, cs)) xs\n 4. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f (y # xs) \\<and> y \\<notin> EQ2 f xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f (r, cs)) xs;\n        nqfree (Neg f); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Neg f) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Neg f) (y # xs) \\<and> y \\<notin> EQ2 (Neg f) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f (y # xs) \\<and> y \\<notin> EQ2 f xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f (r, cs)) xs;\n        nqfree (ExQ f); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (ExQ f) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (ExQ f) (y # xs) \\<and> y \\<notin> EQ2 (ExQ f) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs", "case Or"], ["proof (state)\nthis:\n  \\<lbrakk>nqfree f1_; r + \\<langle>cs,xs\\<rangle> < x;\n   nolb f1_ xs (r + \\<langle>cs,xs\\<rangle>) x;\n   \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n      R.I f1_ (y # xs) \\<and> y \\<notin> EQ2 f1_ xs\\<rbrakk>\n  \\<Longrightarrow> R.I (subst\\<^sub>+ f1_ (r, cs)) xs\n  \\<lbrakk>nqfree f2_; r + \\<langle>cs,xs\\<rangle> < x;\n   nolb f2_ xs (r + \\<langle>cs,xs\\<rangle>) x;\n   \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n      R.I f2_ (y # xs) \\<and> y \\<notin> EQ2 f2_ xs\\<rbrakk>\n  \\<Longrightarrow> R.I (subst\\<^sub>+ f2_ (r, cs)) xs\n  nqfree (Or f1_ f2_)\n  r + \\<langle>cs,xs\\<rangle> < x\n  nolb (Or f1_ f2_) xs (r + \\<langle>cs,xs\\<rangle>) x\n  \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n     R.I (Or f1_ f2_) (y # xs) \\<and> y \\<notin> EQ2 (Or f1_ f2_) xs\n\ngoal (5 subgoals):\n 1. \\<lbrakk>nqfree TrueF; r + \\<langle>cs,xs\\<rangle> < x;\n     nolb TrueF xs (r + \\<langle>cs,xs\\<rangle>) x;\n     \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n        R.I TrueF (y # xs) \\<and> y \\<notin> EQ2 TrueF xs\\<rbrakk>\n    \\<Longrightarrow> R.I (subst\\<^sub>+ TrueF (r, cs)) xs\n 2. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f1 xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f1 (y # xs) \\<and> y \\<notin> EQ2 f1 xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f1 (r, cs)) xs;\n        \\<lbrakk>nqfree f2; r + \\<langle>cs,xs\\<rangle> < x;\n         nolb f2 xs (r + \\<langle>cs,xs\\<rangle>) x;\n         \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n            R.I f2 (y # xs) \\<and> y \\<notin> EQ2 f2 xs\\<rbrakk>\n        \\<Longrightarrow> R.I (subst\\<^sub>+ f2 (r, cs)) xs;\n        nqfree (And f1 f2); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (And f1 f2) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (And f1 f2) (y # xs) \\<and>\n           y \\<notin> EQ2 (And f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (And f1 f2) (r, cs)) xs\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f1 xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f1 (y # xs) \\<and> y \\<notin> EQ2 f1 xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f1 (r, cs)) xs;\n        \\<lbrakk>nqfree f2; r + \\<langle>cs,xs\\<rangle> < x;\n         nolb f2 xs (r + \\<langle>cs,xs\\<rangle>) x;\n         \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n            R.I f2 (y # xs) \\<and> y \\<notin> EQ2 f2 xs\\<rbrakk>\n        \\<Longrightarrow> R.I (subst\\<^sub>+ f2 (r, cs)) xs;\n        nqfree (Or f1 f2); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Or f1 f2) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Or f1 f2) (y # xs) \\<and>\n           y \\<notin> EQ2 (Or f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Or f1 f2) (r, cs)) xs\n 4. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f (y # xs) \\<and> y \\<notin> EQ2 f xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f (r, cs)) xs;\n        nqfree (Neg f); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Neg f) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Neg f) (y # xs) \\<and> y \\<notin> EQ2 (Neg f) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f (y # xs) \\<and> y \\<notin> EQ2 f xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f (r, cs)) xs;\n        nqfree (ExQ f); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (ExQ f) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (ExQ f) (y # xs) \\<and> y \\<notin> EQ2 (ExQ f) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>nqfree f1_; r + \\<langle>cs,xs\\<rangle> < x;\n   nolb f1_ xs (r + \\<langle>cs,xs\\<rangle>) x;\n   \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n      R.I f1_ (y # xs) \\<and> y \\<notin> EQ2 f1_ xs\\<rbrakk>\n  \\<Longrightarrow> R.I (subst\\<^sub>+ f1_ (r, cs)) xs\n  \\<lbrakk>nqfree f2_; r + \\<langle>cs,xs\\<rangle> < x;\n   nolb f2_ xs (r + \\<langle>cs,xs\\<rangle>) x;\n   \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n      R.I f2_ (y # xs) \\<and> y \\<notin> EQ2 f2_ xs\\<rbrakk>\n  \\<Longrightarrow> R.I (subst\\<^sub>+ f2_ (r, cs)) xs\n  nqfree (Or f1_ f2_)\n  r + \\<langle>cs,xs\\<rangle> < x\n  nolb (Or f1_ f2_) xs (r + \\<langle>cs,xs\\<rangle>) x\n  \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n     R.I (Or f1_ f2_) (y # xs) \\<and> y \\<notin> EQ2 (Or f1_ f2_) xs\n\ngoal (1 subgoal):\n 1. R.I (subst\\<^sub>+ (Or f1_ f2_) (r, cs)) xs", "by(simp add:Ball_def)(metis order_refl innermost_intvl2)"], ["proof (state)\nthis:\n  R.I (subst\\<^sub>+ (Or f1_ f2_) (r, cs)) xs\n\ngoal (4 subgoals):\n 1. \\<lbrakk>nqfree TrueF; r + \\<langle>cs,xs\\<rangle> < x;\n     nolb TrueF xs (r + \\<langle>cs,xs\\<rangle>) x;\n     \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n        R.I TrueF (y # xs) \\<and> y \\<notin> EQ2 TrueF xs\\<rbrakk>\n    \\<Longrightarrow> R.I (subst\\<^sub>+ TrueF (r, cs)) xs\n 2. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f1 xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f1 (y # xs) \\<and> y \\<notin> EQ2 f1 xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f1 (r, cs)) xs;\n        \\<lbrakk>nqfree f2; r + \\<langle>cs,xs\\<rangle> < x;\n         nolb f2 xs (r + \\<langle>cs,xs\\<rangle>) x;\n         \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n            R.I f2 (y # xs) \\<and> y \\<notin> EQ2 f2 xs\\<rbrakk>\n        \\<Longrightarrow> R.I (subst\\<^sub>+ f2 (r, cs)) xs;\n        nqfree (And f1 f2); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (And f1 f2) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (And f1 f2) (y # xs) \\<and>\n           y \\<notin> EQ2 (And f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (And f1 f2) (r, cs)) xs\n 3. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f (y # xs) \\<and> y \\<notin> EQ2 f xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f (r, cs)) xs;\n        nqfree (Neg f); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (Neg f) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (Neg f) (y # xs) \\<and> y \\<notin> EQ2 (Neg f) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\n 4. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; r + \\<langle>cs,xs\\<rangle> < x;\n                 nolb f xs (r + \\<langle>cs,xs\\<rangle>) x;\n                 \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n                    R.I f (y # xs) \\<and> y \\<notin> EQ2 f xs\\<rbrakk>\n                \\<Longrightarrow> R.I (subst\\<^sub>+ f (r, cs)) xs;\n        nqfree (ExQ f); r + \\<langle>cs,xs\\<rangle> < x;\n        nolb (ExQ f) xs (r + \\<langle>cs,xs\\<rangle>) x;\n        \\<forall>y\\<in>{r + \\<langle>cs,xs\\<rangle><..x}.\n           R.I (ExQ f) (y # xs) \\<and> y \\<notin> EQ2 (ExQ f) xs\\<rbrakk>\n       \\<Longrightarrow> R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs", "qed simp_all"], ["", "end"], ["", "lemma I_subst_peps:\n  \"nqfree f \\<Longrightarrow> R.I (subst\\<^sub>+ f (r,cs)) xs \\<Longrightarrow>\n  (\\<exists>leps>r+\\<langle>cs,xs\\<rangle>. \\<forall>x. r+\\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow> R.I f (x#xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                         \\<forall>x.\n                            r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                            x \\<le> leps \\<longrightarrow>\n                            R.I f (x # xs)", "proof(induct f)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>nqfree TrueF; R.I (subst\\<^sub>+ TrueF (r, cs)) xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                         \\<forall>x.\n                            r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                            x \\<le> leps \\<longrightarrow>\n                            R.I TrueF (x # xs)\n 2. \\<lbrakk>nqfree FalseF; R.I (subst\\<^sub>+ FalseF (r, cs)) xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                         \\<forall>x.\n                            r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                            x \\<le> leps \\<longrightarrow>\n                            R.I FalseF (x # xs)\n 3. \\<And>x.\n       \\<lbrakk>nqfree (Atom x);\n        R.I (subst\\<^sub>+ (Atom x) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>xa.\n                               r + \\<langle>cs,xs\\<rangle> < xa \\<and>\n                               xa \\<le> leps \\<longrightarrow>\n                               R.I (Atom x) (xa # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1;\n                 R.I (subst\\<^sub>+ f1 (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f1 (x # xs);\n        \\<lbrakk>nqfree f2; R.I (subst\\<^sub>+ f2 (r, cs)) xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                             \\<forall>x.\n                                r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                R.I f2 (x # xs);\n        nqfree (And f1 f2);\n        R.I (subst\\<^sub>+ (And f1 f2) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (And f1 f2) (x # xs)\n 5. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1;\n                 R.I (subst\\<^sub>+ f1 (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f1 (x # xs);\n        \\<lbrakk>nqfree f2; R.I (subst\\<^sub>+ f2 (r, cs)) xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                             \\<forall>x.\n                                r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                R.I f2 (x # xs);\n        nqfree (Or f1 f2);\n        R.I (subst\\<^sub>+ (Or f1 f2) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Or f1 f2) (x # xs)\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (Neg f); R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Neg f) (x # xs)\n 7. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (ExQ f); R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (ExQ f) (x # xs)", "case TrueF"], ["proof (state)\nthis:\n  nqfree TrueF\n  R.I (subst\\<^sub>+ TrueF (r, cs)) xs\n\ngoal (7 subgoals):\n 1. \\<lbrakk>nqfree TrueF; R.I (subst\\<^sub>+ TrueF (r, cs)) xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                         \\<forall>x.\n                            r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                            x \\<le> leps \\<longrightarrow>\n                            R.I TrueF (x # xs)\n 2. \\<lbrakk>nqfree FalseF; R.I (subst\\<^sub>+ FalseF (r, cs)) xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                         \\<forall>x.\n                            r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                            x \\<le> leps \\<longrightarrow>\n                            R.I FalseF (x # xs)\n 3. \\<And>x.\n       \\<lbrakk>nqfree (Atom x);\n        R.I (subst\\<^sub>+ (Atom x) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>xa.\n                               r + \\<langle>cs,xs\\<rangle> < xa \\<and>\n                               xa \\<le> leps \\<longrightarrow>\n                               R.I (Atom x) (xa # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1;\n                 R.I (subst\\<^sub>+ f1 (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f1 (x # xs);\n        \\<lbrakk>nqfree f2; R.I (subst\\<^sub>+ f2 (r, cs)) xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                             \\<forall>x.\n                                r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                R.I f2 (x # xs);\n        nqfree (And f1 f2);\n        R.I (subst\\<^sub>+ (And f1 f2) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (And f1 f2) (x # xs)\n 5. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1;\n                 R.I (subst\\<^sub>+ f1 (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f1 (x # xs);\n        \\<lbrakk>nqfree f2; R.I (subst\\<^sub>+ f2 (r, cs)) xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                             \\<forall>x.\n                                r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                R.I f2 (x # xs);\n        nqfree (Or f1 f2);\n        R.I (subst\\<^sub>+ (Or f1 f2) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Or f1 f2) (x # xs)\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (Neg f); R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Neg f) (x # xs)\n 7. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (ExQ f); R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (ExQ f) (x # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  nqfree TrueF\n  R.I (subst\\<^sub>+ TrueF (r, cs)) xs\n\ngoal (1 subgoal):\n 1. \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I TrueF (x # xs)", "by simp (metis less_add_one)"], ["proof (state)\nthis:\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I TrueF (x # xs)\n\ngoal (6 subgoals):\n 1. \\<lbrakk>nqfree FalseF; R.I (subst\\<^sub>+ FalseF (r, cs)) xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                         \\<forall>x.\n                            r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                            x \\<le> leps \\<longrightarrow>\n                            R.I FalseF (x # xs)\n 2. \\<And>x.\n       \\<lbrakk>nqfree (Atom x);\n        R.I (subst\\<^sub>+ (Atom x) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>xa.\n                               r + \\<langle>cs,xs\\<rangle> < xa \\<and>\n                               xa \\<le> leps \\<longrightarrow>\n                               R.I (Atom x) (xa # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1;\n                 R.I (subst\\<^sub>+ f1 (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f1 (x # xs);\n        \\<lbrakk>nqfree f2; R.I (subst\\<^sub>+ f2 (r, cs)) xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                             \\<forall>x.\n                                r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                R.I f2 (x # xs);\n        nqfree (And f1 f2);\n        R.I (subst\\<^sub>+ (And f1 f2) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (And f1 f2) (x # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1;\n                 R.I (subst\\<^sub>+ f1 (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f1 (x # xs);\n        \\<lbrakk>nqfree f2; R.I (subst\\<^sub>+ f2 (r, cs)) xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                             \\<forall>x.\n                                r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                R.I f2 (x # xs);\n        nqfree (Or f1 f2);\n        R.I (subst\\<^sub>+ (Or f1 f2) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Or f1 f2) (x # xs)\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (Neg f); R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Neg f) (x # xs)\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (ExQ f); R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (ExQ f) (x # xs)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<lbrakk>nqfree FalseF; R.I (subst\\<^sub>+ FalseF (r, cs)) xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                         \\<forall>x.\n                            r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                            x \\<le> leps \\<longrightarrow>\n                            R.I FalseF (x # xs)\n 2. \\<And>x.\n       \\<lbrakk>nqfree (Atom x);\n        R.I (subst\\<^sub>+ (Atom x) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>xa.\n                               r + \\<langle>cs,xs\\<rangle> < xa \\<and>\n                               xa \\<le> leps \\<longrightarrow>\n                               R.I (Atom x) (xa # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1;\n                 R.I (subst\\<^sub>+ f1 (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f1 (x # xs);\n        \\<lbrakk>nqfree f2; R.I (subst\\<^sub>+ f2 (r, cs)) xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                             \\<forall>x.\n                                r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                R.I f2 (x # xs);\n        nqfree (And f1 f2);\n        R.I (subst\\<^sub>+ (And f1 f2) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (And f1 f2) (x # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1;\n                 R.I (subst\\<^sub>+ f1 (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f1 (x # xs);\n        \\<lbrakk>nqfree f2; R.I (subst\\<^sub>+ f2 (r, cs)) xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                             \\<forall>x.\n                                r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                R.I f2 (x # xs);\n        nqfree (Or f1 f2);\n        R.I (subst\\<^sub>+ (Or f1 f2) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Or f1 f2) (x # xs)\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (Neg f); R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Neg f) (x # xs)\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (ExQ f); R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (ExQ f) (x # xs)", "case (Atom a)"], ["proof (state)\nthis:\n  nqfree (Atom a)\n  R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n\ngoal (6 subgoals):\n 1. \\<lbrakk>nqfree FalseF; R.I (subst\\<^sub>+ FalseF (r, cs)) xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                         \\<forall>x.\n                            r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                            x \\<le> leps \\<longrightarrow>\n                            R.I FalseF (x # xs)\n 2. \\<And>x.\n       \\<lbrakk>nqfree (Atom x);\n        R.I (subst\\<^sub>+ (Atom x) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>xa.\n                               r + \\<langle>cs,xs\\<rangle> < xa \\<and>\n                               xa \\<le> leps \\<longrightarrow>\n                               R.I (Atom x) (xa # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1;\n                 R.I (subst\\<^sub>+ f1 (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f1 (x # xs);\n        \\<lbrakk>nqfree f2; R.I (subst\\<^sub>+ f2 (r, cs)) xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                             \\<forall>x.\n                                r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                R.I f2 (x # xs);\n        nqfree (And f1 f2);\n        R.I (subst\\<^sub>+ (And f1 f2) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (And f1 f2) (x # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1;\n                 R.I (subst\\<^sub>+ f1 (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f1 (x # xs);\n        \\<lbrakk>nqfree f2; R.I (subst\\<^sub>+ f2 (r, cs)) xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                             \\<forall>x.\n                                r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                R.I f2 (x # xs);\n        nqfree (Or f1 f2);\n        R.I (subst\\<^sub>+ (Or f1 f2) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Or f1 f2) (x # xs)\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (Neg f); R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Neg f) (x # xs)\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (ExQ f); R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (ExQ f) (x # xs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "proof (cases \"((r,cs),a)\" rule: asubst_peps.cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "case (1 r cs s d ds)"], ["proof (state)\nthis:\n  ((r, cs), a) = ((r, cs), Less s (d # ds))\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "{"], ["proof (state)\nthis:\n  ((r, cs), a) = ((r, cs), Less s (d # ds))\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "assume \"d=0\""], ["proof (state)\nthis:\n  d = 0\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  d = 0\n\ngoal (1 subgoal):\n 1. \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "using Atom 1"], ["proof (prove)\nusing this:\n  d = 0\n  nqfree (Atom a)\n  R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n  ((r, cs), a) = ((r, cs), Less s (d # ds))\n\ngoal (1 subgoal):\n 1. \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "by auto (metis less_add_one)"], ["proof (state)\nthis:\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Atom a) (x # xs)\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "}"], ["proof (state)\nthis:\n  d = 0 \\<Longrightarrow>\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Atom a) (x # xs)\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "moreover"], ["proof (state)\nthis:\n  d = 0 \\<Longrightarrow>\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Atom a) (x # xs)\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "{"], ["proof (state)\nthis:\n  d = 0 \\<Longrightarrow>\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Atom a) (x # xs)\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "assume \"d<0\""], ["proof (state)\nthis:\n  d < 0\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "with Atom 1"], ["proof (chain)\npicking this:\n  nqfree (Atom a)\n  R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n  ((r, cs), a) = ((r, cs), Less s (d # ds))\n  d < 0", "have \"r + \\<langle>cs,xs\\<rangle> < (s - \\<langle>ds,xs\\<rangle>)/d\" (is \"?a < ?b\")"], ["proof (prove)\nusing this:\n  nqfree (Atom a)\n  R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n  ((r, cs), a) = ((r, cs), Less s (d # ds))\n  d < 0\n\ngoal (1 subgoal):\n 1. r + \\<langle>cs,xs\\<rangle> < (s - \\<langle>ds,xs\\<rangle>) / d", "by(simp add:field_simps iprod_left_add_distrib)"], ["proof (state)\nthis:\n  r + \\<langle>cs,xs\\<rangle> < (s - \\<langle>ds,xs\\<rangle>) / d\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "then"], ["proof (chain)\npicking this:\n  r + \\<langle>cs,xs\\<rangle> < (s - \\<langle>ds,xs\\<rangle>) / d", "obtain x where \"?a < x\" \"x < ?b\""], ["proof (prove)\nusing this:\n  r + \\<langle>cs,xs\\<rangle> < (s - \\<langle>ds,xs\\<rangle>) / d\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>r + \\<langle>cs,xs\\<rangle> < x;\n         x < (s - \\<langle>ds,xs\\<rangle>) / d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(metis dense)"], ["proof (state)\nthis:\n  r + \\<langle>cs,xs\\<rangle> < x\n  x < (s - \\<langle>ds,xs\\<rangle>) / d\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "hence \" \\<forall>y. ?a < y \\<and> y \\<le> x \\<longrightarrow> s < d*y + \\<langle>ds,xs\\<rangle>\""], ["proof (prove)\nusing this:\n  r + \\<langle>cs,xs\\<rangle> < x\n  x < (s - \\<langle>ds,xs\\<rangle>) / d\n\ngoal (1 subgoal):\n 1. \\<forall>y.\n       r + \\<langle>cs,xs\\<rangle> < y \\<and> y \\<le> x \\<longrightarrow>\n       s < d * y + \\<langle>ds,xs\\<rangle>", "using \\<open>d<0\\<close>"], ["proof (prove)\nusing this:\n  r + \\<langle>cs,xs\\<rangle> < x\n  x < (s - \\<langle>ds,xs\\<rangle>) / d\n  d < 0\n\ngoal (1 subgoal):\n 1. \\<forall>y.\n       r + \\<langle>cs,xs\\<rangle> < y \\<and> y \\<le> x \\<longrightarrow>\n       s < d * y + \\<langle>ds,xs\\<rangle>", "by (simp add:field_simps)\n      (metis add_le_cancel_right mult_le_cancel_left order_antisym linear mult.commute xt1(8))"], ["proof (state)\nthis:\n  \\<forall>y.\n     r + \\<langle>cs,xs\\<rangle> < y \\<and> y \\<le> x \\<longrightarrow>\n     s < d * y + \\<langle>ds,xs\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>y.\n     r + \\<langle>cs,xs\\<rangle> < y \\<and> y \\<le> x \\<longrightarrow>\n     s < d * y + \\<langle>ds,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "using 1 \\<open>?a<x\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>y.\n     r + \\<langle>cs,xs\\<rangle> < y \\<and> y \\<le> x \\<longrightarrow>\n     s < d * y + \\<langle>ds,xs\\<rangle>\n  ((r, cs), a) = ((r, cs), Less s (d # ds))\n  r + \\<langle>cs,xs\\<rangle> < x\n\ngoal (1 subgoal):\n 1. \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "by auto"], ["proof (state)\nthis:\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Atom a) (x # xs)\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "}"], ["proof (state)\nthis:\n  d < 0 \\<Longrightarrow>\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Atom a) (x # xs)\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "moreover"], ["proof (state)\nthis:\n  d < 0 \\<Longrightarrow>\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Atom a) (x # xs)\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "{"], ["proof (state)\nthis:\n  d < 0 \\<Longrightarrow>\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Atom a) (x # xs)\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "let ?a = \"s - d * r\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "let ?b = \"\\<langle>d *\\<^sub>s cs + ds,xs\\<rangle>\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "assume \"d>0\""], ["proof (state)\nthis:\n  0 < d\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "with Atom 1"], ["proof (chain)\npicking this:\n  nqfree (Atom a)\n  R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n  ((r, cs), a) = ((r, cs), Less s (d # ds))\n  0 < d", "have \"?a < ?b \\<or> ?a = ?b\""], ["proof (prove)\nusing this:\n  nqfree (Atom a)\n  R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n  ((r, cs), a) = ((r, cs), Less s (d # ds))\n  0 < d\n\ngoal (1 subgoal):\n 1. s - d * r < \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle> \\<or>\n    s - d * r = \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle>", "by auto"], ["proof (state)\nthis:\n  s - d * r < \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle> \\<or>\n  s - d * r = \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  s - d * r < \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle> \\<or>\n  s - d * r = \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. s - d * r < \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle> \\<Longrightarrow>\n    \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)\n 2. s - d * r = \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle> \\<Longrightarrow>\n    \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "assume \"?a = ?b\""], ["proof (state)\nthis:\n  s - d * r = \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle>\n\ngoal (2 subgoals):\n 1. s - d * r < \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle> \\<Longrightarrow>\n    \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)\n 2. s - d * r = \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle> \\<Longrightarrow>\n    \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  s - d * r = \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "using \\<open>d>0\\<close> Atom 1"], ["proof (prove)\nusing this:\n  s - d * r = \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle>\n  0 < d\n  nqfree (Atom a)\n  R.I (subst\\<^sub>+ (Atom a) (r, cs)) xs\n  ((r, cs), a) = ((r, cs), Less s (d # ds))\n\ngoal (1 subgoal):\n 1. \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "by(simp add:field_simps iprod_left_add_distrib)\n            (metis add_0_left add_less_cancel_right distrib_left mult.commute mult_strict_left_mono)"], ["proof (state)\nthis:\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Atom a) (x # xs)\n\ngoal (1 subgoal):\n 1. s - d * r < \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle> \\<Longrightarrow>\n    \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s - d * r < \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle> \\<Longrightarrow>\n    \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "assume \"?a < ?b\""], ["proof (state)\nthis:\n  s - d * r < \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. s - d * r < \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle> \\<Longrightarrow>\n    \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "{"], ["proof (state)\nthis:\n  s - d * r < \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. s - d * r < \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle> \\<Longrightarrow>\n    \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. s - d * r < \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle> \\<Longrightarrow>\n    \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "assume \"r+\\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> r+\\<langle>cs,xs\\<rangle> + 1\""], ["proof (state)\nthis:\n  r + \\<langle>cs,xs\\<rangle> < x \\<and>\n  x \\<le> r + \\<langle>cs,xs\\<rangle> + 1\n\ngoal (1 subgoal):\n 1. s - d * r < \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle> \\<Longrightarrow>\n    \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "hence \"d*(r + \\<langle>cs,xs\\<rangle>) < d*x\""], ["proof (prove)\nusing this:\n  r + \\<langle>cs,xs\\<rangle> < x \\<and>\n  x \\<le> r + \\<langle>cs,xs\\<rangle> + 1\n\ngoal (1 subgoal):\n 1. d * (r + \\<langle>cs,xs\\<rangle>) < d * x", "using \\<open>d>0\\<close>"], ["proof (prove)\nusing this:\n  r + \\<langle>cs,xs\\<rangle> < x \\<and>\n  x \\<le> r + \\<langle>cs,xs\\<rangle> + 1\n  0 < d\n\ngoal (1 subgoal):\n 1. d * (r + \\<langle>cs,xs\\<rangle>) < d * x", "by(metis mult_strict_left_mono)"], ["proof (state)\nthis:\n  d * (r + \\<langle>cs,xs\\<rangle>) < d * x\n\ngoal (1 subgoal):\n 1. s - d * r < \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle> \\<Longrightarrow>\n    \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "hence \"s < d*x + \\<langle>ds,xs\\<rangle>\""], ["proof (prove)\nusing this:\n  d * (r + \\<langle>cs,xs\\<rangle>) < d * x\n\ngoal (1 subgoal):\n 1. s < d * x + \\<langle>ds,xs\\<rangle>", "using \\<open>d>0\\<close> \\<open>?a < ?b\\<close>"], ["proof (prove)\nusing this:\n  d * (r + \\<langle>cs,xs\\<rangle>) < d * x\n  0 < d\n  s - d * r < \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. s < d * x + \\<langle>ds,xs\\<rangle>", "by (simp add:algebra_simps iprod_left_add_distrib)"], ["proof (state)\nthis:\n  s < d * x + \\<langle>ds,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. s - d * r < \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle> \\<Longrightarrow>\n    \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "}"], ["proof (state)\nthis:\n  r + \\<langle>cs,xs\\<rangle> < ?x2 \\<and>\n  ?x2 \\<le> r + \\<langle>cs,xs\\<rangle> + 1 \\<Longrightarrow>\n  s < d * ?x2 + \\<langle>ds,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. s - d * r < \\<langle>d *\\<^sub>s cs + ds,xs\\<rangle> \\<Longrightarrow>\n    \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  r + \\<langle>cs,xs\\<rangle> < ?x2 \\<and>\n  ?x2 \\<le> r + \\<langle>cs,xs\\<rangle> + 1 \\<Longrightarrow>\n  s < d * ?x2 + \\<langle>ds,xs\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "using 1 \\<open>d>0\\<close>"], ["proof (prove)\nusing this:\n  r + \\<langle>cs,xs\\<rangle> < ?x2 \\<and>\n  ?x2 \\<le> r + \\<langle>cs,xs\\<rangle> + 1 \\<Longrightarrow>\n  s < d * ?x2 + \\<langle>ds,xs\\<rangle>\n  ((r, cs), a) = ((r, cs), Less s (d # ds))\n  0 < d\n\ngoal (1 subgoal):\n 1. \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "by(force simp: iprod_left_add_distrib)"], ["proof (state)\nthis:\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Atom a) (x # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Atom a) (x # xs)\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "}"], ["proof (state)\nthis:\n  0 < d \\<Longrightarrow>\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Atom a) (x # xs)\n\ngoal (4 subgoals):\n 1. \\<And>ra csa s d ds.\n       ((r, cs), a) = ((ra, csa), Less s (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 4. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "ultimately"], ["proof (chain)\npicking this:\n  d = 0 \\<Longrightarrow>\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Atom a) (x # xs)\n  d < 0 \\<Longrightarrow>\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Atom a) (x # xs)\n  0 < d \\<Longrightarrow>\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Atom a) (x # xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  d = 0 \\<Longrightarrow>\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Atom a) (x # xs)\n  d < 0 \\<Longrightarrow>\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Atom a) (x # xs)\n  0 < d \\<Longrightarrow>\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Atom a) (x # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Atom a) (x # xs)", "by (metis less_linear)"], ["proof (state)\nthis:\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Atom a) (x # xs)\n\ngoal (3 subgoals):\n 1. \\<And>rcs ra d ds.\n       ((r, cs), a) = (rcs, Eq ra (d # ds)) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 2. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Less v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)\n 3. \\<And>rcs v.\n       ((r, cs), a) = (rcs, Eq v []) \\<Longrightarrow>\n       \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n          \\<forall>x.\n             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n             x \\<le> leps \\<longrightarrow>\n             R.I (Atom a) (x # xs)", "qed (insert Atom, auto split:if_split_asm intro: less_add_one)"], ["proof (state)\nthis:\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Atom a) (x # xs)\n\ngoal (5 subgoals):\n 1. \\<lbrakk>nqfree FalseF; R.I (subst\\<^sub>+ FalseF (r, cs)) xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                         \\<forall>x.\n                            r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                            x \\<le> leps \\<longrightarrow>\n                            R.I FalseF (x # xs)\n 2. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1;\n                 R.I (subst\\<^sub>+ f1 (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f1 (x # xs);\n        \\<lbrakk>nqfree f2; R.I (subst\\<^sub>+ f2 (r, cs)) xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                             \\<forall>x.\n                                r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                R.I f2 (x # xs);\n        nqfree (And f1 f2);\n        R.I (subst\\<^sub>+ (And f1 f2) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (And f1 f2) (x # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1;\n                 R.I (subst\\<^sub>+ f1 (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f1 (x # xs);\n        \\<lbrakk>nqfree f2; R.I (subst\\<^sub>+ f2 (r, cs)) xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                             \\<forall>x.\n                                r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                R.I f2 (x # xs);\n        nqfree (Or f1 f2);\n        R.I (subst\\<^sub>+ (Or f1 f2) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Or f1 f2) (x # xs)\n 4. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (Neg f); R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Neg f) (x # xs)\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (ExQ f); R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (ExQ f) (x # xs)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<lbrakk>nqfree FalseF; R.I (subst\\<^sub>+ FalseF (r, cs)) xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                         \\<forall>x.\n                            r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                            x \\<le> leps \\<longrightarrow>\n                            R.I FalseF (x # xs)\n 2. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1;\n                 R.I (subst\\<^sub>+ f1 (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f1 (x # xs);\n        \\<lbrakk>nqfree f2; R.I (subst\\<^sub>+ f2 (r, cs)) xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                             \\<forall>x.\n                                r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                R.I f2 (x # xs);\n        nqfree (And f1 f2);\n        R.I (subst\\<^sub>+ (And f1 f2) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (And f1 f2) (x # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1;\n                 R.I (subst\\<^sub>+ f1 (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f1 (x # xs);\n        \\<lbrakk>nqfree f2; R.I (subst\\<^sub>+ f2 (r, cs)) xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                             \\<forall>x.\n                                r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                R.I f2 (x # xs);\n        nqfree (Or f1 f2);\n        R.I (subst\\<^sub>+ (Or f1 f2) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Or f1 f2) (x # xs)\n 4. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (Neg f); R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Neg f) (x # xs)\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (ExQ f); R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (ExQ f) (x # xs)", "case And"], ["proof (state)\nthis:\n  \\<lbrakk>nqfree f1_; R.I (subst\\<^sub>+ f1_ (r, cs)) xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                       \\<forall>x.\n                          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                          x \\<le> leps \\<longrightarrow>\n                          R.I f1_ (x # xs)\n  \\<lbrakk>nqfree f2_; R.I (subst\\<^sub>+ f2_ (r, cs)) xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                       \\<forall>x.\n                          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                          x \\<le> leps \\<longrightarrow>\n                          R.I f2_ (x # xs)\n  nqfree (And f1_ f2_)\n  R.I (subst\\<^sub>+ (And f1_ f2_) (r, cs)) xs\n\ngoal (5 subgoals):\n 1. \\<lbrakk>nqfree FalseF; R.I (subst\\<^sub>+ FalseF (r, cs)) xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                         \\<forall>x.\n                            r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                            x \\<le> leps \\<longrightarrow>\n                            R.I FalseF (x # xs)\n 2. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1;\n                 R.I (subst\\<^sub>+ f1 (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f1 (x # xs);\n        \\<lbrakk>nqfree f2; R.I (subst\\<^sub>+ f2 (r, cs)) xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                             \\<forall>x.\n                                r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                R.I f2 (x # xs);\n        nqfree (And f1 f2);\n        R.I (subst\\<^sub>+ (And f1 f2) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (And f1 f2) (x # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1;\n                 R.I (subst\\<^sub>+ f1 (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f1 (x # xs);\n        \\<lbrakk>nqfree f2; R.I (subst\\<^sub>+ f2 (r, cs)) xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                             \\<forall>x.\n                                r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                R.I f2 (x # xs);\n        nqfree (Or f1 f2);\n        R.I (subst\\<^sub>+ (Or f1 f2) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Or f1 f2) (x # xs)\n 4. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (Neg f); R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Neg f) (x # xs)\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (ExQ f); R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (ExQ f) (x # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>nqfree f1_; R.I (subst\\<^sub>+ f1_ (r, cs)) xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                       \\<forall>x.\n                          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                          x \\<le> leps \\<longrightarrow>\n                          R.I f1_ (x # xs)\n  \\<lbrakk>nqfree f2_; R.I (subst\\<^sub>+ f2_ (r, cs)) xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                       \\<forall>x.\n                          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                          x \\<le> leps \\<longrightarrow>\n                          R.I f2_ (x # xs)\n  nqfree (And f1_ f2_)\n  R.I (subst\\<^sub>+ (And f1_ f2_) (r, cs)) xs\n\ngoal (1 subgoal):\n 1. \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (And f1_ f2_) (x # xs)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>leps lepsa.\n       \\<lbrakk>nqfree f1_; nqfree f2_; R.I (subst\\<^sub>+ f1_ (r, cs)) xs;\n        R.I (subst\\<^sub>+ f2_ (r, cs)) xs;\n        r + \\<langle>cs,xs\\<rangle> < leps;\n        \\<forall>x.\n           r + \\<langle>cs,xs\\<rangle> < x \\<and>\n           x \\<le> leps \\<longrightarrow>\n           R.I f1_ (x # xs);\n        r + \\<langle>cs,xs\\<rangle> < lepsa;\n        \\<forall>x.\n           r + \\<langle>cs,xs\\<rangle> < x \\<and>\n           x \\<le> lepsa \\<longrightarrow>\n           R.I f2_ (x # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I f1_ (x # xs) \\<and> R.I f2_ (x # xs)", "apply(rule_tac x=\"min leps lepsa\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>leps lepsa.\n       \\<lbrakk>nqfree f1_; nqfree f2_; R.I (subst\\<^sub>+ f1_ (r, cs)) xs;\n        R.I (subst\\<^sub>+ f2_ (r, cs)) xs;\n        r + \\<langle>cs,xs\\<rangle> < leps;\n        \\<forall>x.\n           r + \\<langle>cs,xs\\<rangle> < x \\<and>\n           x \\<le> leps \\<longrightarrow>\n           R.I f1_ (x # xs);\n        r + \\<langle>cs,xs\\<rangle> < lepsa;\n        \\<forall>x.\n           r + \\<langle>cs,xs\\<rangle> < x \\<and>\n           x \\<le> lepsa \\<longrightarrow>\n           R.I f2_ (x # xs)\\<rbrakk>\n       \\<Longrightarrow> r + \\<langle>cs,xs\\<rangle> < min leps lepsa \\<and>\n                         (\\<forall>x.\n                             r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                             x \\<le> min leps lepsa \\<longrightarrow>\n                             R.I f1_ (x # xs) \\<and> R.I f2_ (x # xs))", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (And f1_ f2_) (x # xs)\n\ngoal (4 subgoals):\n 1. \\<lbrakk>nqfree FalseF; R.I (subst\\<^sub>+ FalseF (r, cs)) xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                         \\<forall>x.\n                            r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                            x \\<le> leps \\<longrightarrow>\n                            R.I FalseF (x # xs)\n 2. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1;\n                 R.I (subst\\<^sub>+ f1 (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f1 (x # xs);\n        \\<lbrakk>nqfree f2; R.I (subst\\<^sub>+ f2 (r, cs)) xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                             \\<forall>x.\n                                r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                R.I f2 (x # xs);\n        nqfree (Or f1 f2);\n        R.I (subst\\<^sub>+ (Or f1 f2) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Or f1 f2) (x # xs)\n 3. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (Neg f); R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Neg f) (x # xs)\n 4. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (ExQ f); R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (ExQ f) (x # xs)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>nqfree FalseF; R.I (subst\\<^sub>+ FalseF (r, cs)) xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                         \\<forall>x.\n                            r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                            x \\<le> leps \\<longrightarrow>\n                            R.I FalseF (x # xs)\n 2. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1;\n                 R.I (subst\\<^sub>+ f1 (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f1 (x # xs);\n        \\<lbrakk>nqfree f2; R.I (subst\\<^sub>+ f2 (r, cs)) xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                             \\<forall>x.\n                                r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                R.I f2 (x # xs);\n        nqfree (Or f1 f2);\n        R.I (subst\\<^sub>+ (Or f1 f2) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Or f1 f2) (x # xs)\n 3. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (Neg f); R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Neg f) (x # xs)\n 4. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (ExQ f); R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (ExQ f) (x # xs)", "case Or"], ["proof (state)\nthis:\n  \\<lbrakk>nqfree f1_; R.I (subst\\<^sub>+ f1_ (r, cs)) xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                       \\<forall>x.\n                          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                          x \\<le> leps \\<longrightarrow>\n                          R.I f1_ (x # xs)\n  \\<lbrakk>nqfree f2_; R.I (subst\\<^sub>+ f2_ (r, cs)) xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                       \\<forall>x.\n                          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                          x \\<le> leps \\<longrightarrow>\n                          R.I f2_ (x # xs)\n  nqfree (Or f1_ f2_)\n  R.I (subst\\<^sub>+ (Or f1_ f2_) (r, cs)) xs\n\ngoal (4 subgoals):\n 1. \\<lbrakk>nqfree FalseF; R.I (subst\\<^sub>+ FalseF (r, cs)) xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                         \\<forall>x.\n                            r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                            x \\<le> leps \\<longrightarrow>\n                            R.I FalseF (x # xs)\n 2. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1;\n                 R.I (subst\\<^sub>+ f1 (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f1 (x # xs);\n        \\<lbrakk>nqfree f2; R.I (subst\\<^sub>+ f2 (r, cs)) xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                             \\<forall>x.\n                                r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                                x \\<le> leps \\<longrightarrow>\n                                R.I f2 (x # xs);\n        nqfree (Or f1 f2);\n        R.I (subst\\<^sub>+ (Or f1 f2) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Or f1 f2) (x # xs)\n 3. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (Neg f); R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Neg f) (x # xs)\n 4. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (ExQ f); R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (ExQ f) (x # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>nqfree f1_; R.I (subst\\<^sub>+ f1_ (r, cs)) xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                       \\<forall>x.\n                          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                          x \\<le> leps \\<longrightarrow>\n                          R.I f1_ (x # xs)\n  \\<lbrakk>nqfree f2_; R.I (subst\\<^sub>+ f2_ (r, cs)) xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                       \\<forall>x.\n                          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                          x \\<le> leps \\<longrightarrow>\n                          R.I f2_ (x # xs)\n  nqfree (Or f1_ f2_)\n  R.I (subst\\<^sub>+ (Or f1_ f2_) (r, cs)) xs\n\ngoal (1 subgoal):\n 1. \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n       \\<forall>x.\n          r + \\<langle>cs,xs\\<rangle> < x \\<and>\n          x \\<le> leps \\<longrightarrow>\n          R.I (Or f1_ f2_) (x # xs)", "by force"], ["proof (state)\nthis:\n  \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n     \\<forall>x.\n        r + \\<langle>cs,xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I (Or f1_ f2_) (x # xs)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>nqfree FalseF; R.I (subst\\<^sub>+ FalseF (r, cs)) xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                         \\<forall>x.\n                            r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                            x \\<le> leps \\<longrightarrow>\n                            R.I FalseF (x # xs)\n 2. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (Neg f); R.I (subst\\<^sub>+ (Neg f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (Neg f) (x # xs)\n 3. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I (subst\\<^sub>+ f (r, cs)) xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                                     \\<forall>x.\n  r + \\<langle>cs,xs\\<rangle> < x \\<and> x \\<le> leps \\<longrightarrow>\n  R.I f (x # xs);\n        nqfree (ExQ f); R.I (subst\\<^sub>+ (ExQ f) (r, cs)) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>leps>r + \\<langle>cs,xs\\<rangle>.\n                            \\<forall>x.\n                               r + \\<langle>cs,xs\\<rangle> < x \\<and>\n                               x \\<le> leps \\<longrightarrow>\n                               R.I (ExQ f) (x # xs)", "qed simp_all"], ["", "lemma dense_interval:\nassumes \"finite L\" \"l \\<in> L\" \"l < x\" \"P(x::real)\"\nand dense: \"\\<And>y l. \\<lbrakk> \\<forall>y\\<in>{l<..<x}. y \\<notin> L; l<x; l<y; y\\<le>x \\<rbrakk> \\<Longrightarrow> P y\"\nshows \"\\<exists>l\\<in>L. l<x \\<and> (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and> (\\<forall>y. l<y \\<and> y\\<le>x \\<longrightarrow> P y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "let ?L = \"{l\\<in>L. l < x}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "let ?ll = \"Max ?L\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "have \"?L \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {l \\<in> L. l < x} \\<noteq> {}", "using \\<open>l \\<in> L\\<close> \\<open>l<x\\<close>"], ["proof (prove)\nusing this:\n  l \\<in> L\n  l < x\n\ngoal (1 subgoal):\n 1. {l \\<in> L. l < x} \\<noteq> {}", "by (blast intro:order_less_imp_le)"], ["proof (state)\nthis:\n  {l \\<in> L. l < x} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "hence \"\\<forall>y. ?ll<y \\<and> y<x \\<longrightarrow> y \\<notin> L\""], ["proof (prove)\nusing this:\n  {l \\<in> L. l < x} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<forall>y.\n       Max {l \\<in> L. l < x} < y \\<and> y < x \\<longrightarrow>\n       y \\<notin> L", "using \\<open>finite L\\<close>"], ["proof (prove)\nusing this:\n  {l \\<in> L. l < x} \\<noteq> {}\n  finite L\n\ngoal (1 subgoal):\n 1. \\<forall>y.\n       Max {l \\<in> L. l < x} < y \\<and> y < x \\<longrightarrow>\n       y \\<notin> L", "by force"], ["proof (state)\nthis:\n  \\<forall>y.\n     Max {l \\<in> L. l < x} < y \\<and> y < x \\<longrightarrow> y \\<notin> L\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "moreover"], ["proof (state)\nthis:\n  \\<forall>y.\n     Max {l \\<in> L. l < x} < y \\<and> y < x \\<longrightarrow> y \\<notin> L\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "have \"?ll \\<in> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max {l \\<in> L. l < x} \\<in> L", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. Max {l \\<in> L. l < x} \\<in> ?A\n 2. ?A \\<subseteq> L", "show \"?ll \\<in> ?L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max {l \\<in> L. l < x} \\<in> {l \\<in> L. l < x}", "using \\<open>finite L\\<close> Max_in[OF _ \\<open>?L \\<noteq> {}\\<close>]"], ["proof (prove)\nusing this:\n  finite L\n  finite {l \\<in> L. l < x} \\<Longrightarrow>\n  Max {l \\<in> L. l < x} \\<in> {l \\<in> L. l < x}\n\ngoal (1 subgoal):\n 1. Max {l \\<in> L. l < x} \\<in> {l \\<in> L. l < x}", "by simp"], ["proof (state)\nthis:\n  Max {l \\<in> L. l < x} \\<in> {l \\<in> L. l < x}\n\ngoal (1 subgoal):\n 1. {l \\<in> L. l < x} \\<subseteq> L", "show \"?L \\<subseteq> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {l \\<in> L. l < x} \\<subseteq> L", "by blast"], ["proof (state)\nthis:\n  {l \\<in> L. l < x} \\<subseteq> L\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Max {l \\<in> L. l < x} \\<in> L\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "moreover"], ["proof (state)\nthis:\n  Max {l \\<in> L. l < x} \\<in> L\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "have \"?ll < x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max {l \\<in> L. l < x} < x", "using \\<open>finite L\\<close> \\<open>?L \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  finite L\n  {l \\<in> L. l < x} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Max {l \\<in> L. l < x} < x", "by simp"], ["proof (state)\nthis:\n  Max {l \\<in> L. l < x} < x\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>y.\n     Max {l \\<in> L. l < x} < y \\<and> y < x \\<longrightarrow> y \\<notin> L\n  Max {l \\<in> L. l < x} \\<in> L\n  Max {l \\<in> L. l < x} < x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>y.\n     Max {l \\<in> L. l < x} < y \\<and> y < x \\<longrightarrow> y \\<notin> L\n  Max {l \\<in> L. l < x} \\<in> L\n  Max {l \\<in> L. l < x} < x\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "using \\<open>l < x\\<close> \\<open>?L \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>y.\n     Max {l \\<in> L. l < x} < y \\<and> y < x \\<longrightarrow> y \\<notin> L\n  Max {l \\<in> L. l < x} \\<in> L\n  Max {l \\<in> L. l < x} < x\n  l < x\n  {l \\<in> L. l < x} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>L.\n       l < x \\<and>\n       (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)", "by(blast intro!:dense greaterThanLessThan_iff[THEN iffD1])"], ["proof (state)\nthis:\n  \\<exists>l\\<in>L.\n     l < x \\<and>\n     (\\<forall>y\\<in>{l<..<x}. y \\<notin> L) \\<and>\n     (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> P y)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n\"qe_eps\\<^sub>1(f) =\n(let as = R.atoms\\<^sub>0 f; lbs = lbounds as; ebs = ebounds as\n in list_disj (inf\\<^sub>- f # map (subst\\<^sub>+ f) lbs @ map (subst f) ebs))\""], ["", "theorem I_eps1:\nassumes \"nqfree f\" shows \"R.I (qe_eps\\<^sub>1 f) xs = (\\<exists>x. R.I f (x#xs))\"\n  (is \"?QE = ?EX\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. R.I (qe_eps\\<^sub>1 f) xs = (\\<exists>x. R.I f (x # xs))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. R.I (qe_eps\\<^sub>1 f) xs \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n 2. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "let ?as = \"R.atoms\\<^sub>0 f\""], ["proof (state)\ngoal (2 subgoals):\n 1. R.I (qe_eps\\<^sub>1 f) xs \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n 2. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "let ?ebs = \"ebounds ?as\""], ["proof (state)\ngoal (2 subgoals):\n 1. R.I (qe_eps\\<^sub>1 f) xs \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n 2. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "assume ?QE"], ["proof (state)\nthis:\n  R.I (qe_eps\\<^sub>1 f) xs\n\ngoal (2 subgoals):\n 1. R.I (qe_eps\\<^sub>1 f) xs \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n 2. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "{"], ["proof (state)\nthis:\n  R.I (qe_eps\\<^sub>1 f) xs\n\ngoal (2 subgoals):\n 1. R.I (qe_eps\\<^sub>1 f) xs \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n 2. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "assume \"R.I (inf\\<^sub>- f) xs\""], ["proof (state)\nthis:\n  R.I (inf\\<^sub>- f) xs\n\ngoal (2 subgoals):\n 1. R.I (qe_eps\\<^sub>1 f) xs \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n 2. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "hence ?EX"], ["proof (prove)\nusing this:\n  R.I (inf\\<^sub>- f) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs)", "using \\<open>?QE\\<close> min_inf[of f xs] \\<open>nqfree f\\<close>"], ["proof (prove)\nusing this:\n  R.I (inf\\<^sub>- f) xs\n  R.I (qe_eps\\<^sub>1 f) xs\n  nqfree f \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<le>x. R.I (inf\\<^sub>- f) xs = R.I f (y # xs)\n  nqfree f\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs)", "by(auto simp add:qe_eps\\<^sub>1_def amap_fm_list_disj)"], ["proof (state)\nthis:\n  \\<exists>x. R.I f (x # xs)\n\ngoal (2 subgoals):\n 1. R.I (qe_eps\\<^sub>1 f) xs \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n 2. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "}"], ["proof (state)\nthis:\n  R.I (inf\\<^sub>- f) xs \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n\ngoal (2 subgoals):\n 1. R.I (qe_eps\\<^sub>1 f) xs \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n 2. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "moreover"], ["proof (state)\nthis:\n  R.I (inf\\<^sub>- f) xs \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n\ngoal (2 subgoals):\n 1. R.I (qe_eps\\<^sub>1 f) xs \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n 2. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "{"], ["proof (state)\nthis:\n  R.I (inf\\<^sub>- f) xs \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n\ngoal (2 subgoals):\n 1. R.I (qe_eps\\<^sub>1 f) xs \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n 2. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "assume \"\\<forall>x \\<in> EQ f xs. \\<not>R.I f (x#xs)\"\n           \"\\<not> R.I (inf\\<^sub>- f) xs\""], ["proof (state)\nthis:\n  \\<forall>x\\<in>EQ f xs. \\<not> R.I f (x # xs)\n  \\<not> R.I (inf\\<^sub>- f) xs\n\ngoal (2 subgoals):\n 1. R.I (qe_eps\\<^sub>1 f) xs \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n 2. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "with \\<open>?QE\\<close> \\<open>nqfree f\\<close>"], ["proof (chain)\npicking this:\n  R.I (qe_eps\\<^sub>1 f) xs\n  nqfree f\n  \\<forall>x\\<in>EQ f xs. \\<not> R.I f (x # xs)\n  \\<not> R.I (inf\\<^sub>- f) xs", "obtain r cs where \"R.I (subst\\<^sub>+ f (r,cs)) xs\""], ["proof (prove)\nusing this:\n  R.I (qe_eps\\<^sub>1 f) xs\n  nqfree f\n  \\<forall>x\\<in>EQ f xs. \\<not> R.I f (x # xs)\n  \\<not> R.I (inf\\<^sub>- f) xs\n\ngoal (1 subgoal):\n 1. (\\<And>r cs.\n        R.I (subst\\<^sub>+ f (r, cs)) xs \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (fastforce simp: qe_eps\\<^sub>1_def set_ebounds diff_divide_distrib eval_def I_subst \\<open>nqfree f\\<close>)"], ["proof (state)\nthis:\n  R.I (subst\\<^sub>+ f (r, cs)) xs\n\ngoal (2 subgoals):\n 1. R.I (qe_eps\\<^sub>1 f) xs \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n 2. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "then"], ["proof (chain)\npicking this:\n  R.I (subst\\<^sub>+ f (r, cs)) xs", "obtain leps where \"R.I f (leps#xs)\""], ["proof (prove)\nusing this:\n  R.I (subst\\<^sub>+ f (r, cs)) xs\n\ngoal (1 subgoal):\n 1. (\\<And>leps.\n        R.I f (leps # xs) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using I_subst_peps[OF \\<open>nqfree f\\<close>]"], ["proof (prove)\nusing this:\n  R.I (subst\\<^sub>+ f (r, cs)) xs\n  R.I (subst\\<^sub>+ f (?r, ?cs)) ?xs \\<Longrightarrow>\n  \\<exists>leps>?r + \\<langle>?cs,?xs\\<rangle>.\n     \\<forall>x.\n        ?r + \\<langle>?cs,?xs\\<rangle> < x \\<and>\n        x \\<le> leps \\<longrightarrow>\n        R.I f (x # ?xs)\n\ngoal (1 subgoal):\n 1. (\\<And>leps.\n        R.I f (leps # xs) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  R.I f (leps # xs)\n\ngoal (2 subgoals):\n 1. R.I (qe_eps\\<^sub>1 f) xs \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n 2. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "hence ?EX"], ["proof (prove)\nusing this:\n  R.I f (leps # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs)", ".."], ["proof (state)\nthis:\n  \\<exists>x. R.I f (x # xs)\n\ngoal (2 subgoals):\n 1. R.I (qe_eps\\<^sub>1 f) xs \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n 2. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>x\\<in>EQ f xs. \\<not> R.I f (x # xs);\n   \\<not> R.I (inf\\<^sub>- f) xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n\ngoal (2 subgoals):\n 1. R.I (qe_eps\\<^sub>1 f) xs \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n 2. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "ultimately"], ["proof (chain)\npicking this:\n  R.I (inf\\<^sub>- f) xs \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n  \\<lbrakk>\\<forall>x\\<in>EQ f xs. \\<not> R.I f (x # xs);\n   \\<not> R.I (inf\\<^sub>- f) xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x. R.I f (x # xs)", "show ?EX"], ["proof (prove)\nusing this:\n  R.I (inf\\<^sub>- f) xs \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n  \\<lbrakk>\\<forall>x\\<in>EQ f xs. \\<not> R.I f (x # xs);\n   \\<not> R.I (inf\\<^sub>- f) xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x. R.I f (x # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs)", "by blast"], ["proof (state)\nthis:\n  \\<exists>x. R.I f (x # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "let ?as = \"R.atoms\\<^sub>0 f\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "let ?ebs = \"ebounds ?as\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "assume ?EX"], ["proof (state)\nthis:\n  \\<exists>x. R.I f (x # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "then"], ["proof (chain)\npicking this:\n  \\<exists>x. R.I f (x # xs)", "obtain x where x: \"R.I f (x#xs)\""], ["proof (prove)\nusing this:\n  \\<exists>x. R.I f (x # xs)\n\ngoal (1 subgoal):\n 1. (\\<And>x. R.I f (x # xs) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  R.I f (x # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "{"], ["proof (state)\nthis:\n  R.I f (x # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "assume \"R.I (inf\\<^sub>- f) xs\""], ["proof (state)\nthis:\n  R.I (inf\\<^sub>- f) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "hence ?QE"], ["proof (prove)\nusing this:\n  R.I (inf\\<^sub>- f) xs\n\ngoal (1 subgoal):\n 1. R.I (qe_eps\\<^sub>1 f) xs", "using \\<open>nqfree f\\<close>"], ["proof (prove)\nusing this:\n  R.I (inf\\<^sub>- f) xs\n  nqfree f\n\ngoal (1 subgoal):\n 1. R.I (qe_eps\\<^sub>1 f) xs", "by(auto simp:qe_eps\\<^sub>1_def)"], ["proof (state)\nthis:\n  R.I (qe_eps\\<^sub>1 f) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "}"], ["proof (state)\nthis:\n  R.I (inf\\<^sub>- f) xs \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "moreover"], ["proof (state)\nthis:\n  R.I (inf\\<^sub>- f) xs \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "{"], ["proof (state)\nthis:\n  R.I (inf\\<^sub>- f) xs \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "assume \"\\<exists>rcs \\<in> set ?ebs. R.I (subst f rcs) xs\""], ["proof (state)\nthis:\n  \\<exists>rcs\\<in>set (ebounds (atoms\\<^sub>0 f)). R.I (subst f rcs) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "hence ?QE"], ["proof (prove)\nusing this:\n  \\<exists>rcs\\<in>set (ebounds (atoms\\<^sub>0 f)). R.I (subst f rcs) xs\n\ngoal (1 subgoal):\n 1. R.I (qe_eps\\<^sub>1 f) xs", "by(auto simp:qe_eps\\<^sub>1_def)"], ["proof (state)\nthis:\n  R.I (qe_eps\\<^sub>1 f) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "}"], ["proof (state)\nthis:\n  \\<exists>rcs\\<in>set (ebounds (atoms\\<^sub>0 f)).\n     R.I (subst f rcs) xs \\<Longrightarrow>\n  R.I (qe_eps\\<^sub>1 f) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "moreover"], ["proof (state)\nthis:\n  \\<exists>rcs\\<in>set (ebounds (atoms\\<^sub>0 f)).\n     R.I (subst f rcs) xs \\<Longrightarrow>\n  R.I (qe_eps\\<^sub>1 f) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "{"], ["proof (state)\nthis:\n  \\<exists>rcs\\<in>set (ebounds (atoms\\<^sub>0 f)).\n     R.I (subst f rcs) xs \\<Longrightarrow>\n  R.I (qe_eps\\<^sub>1 f) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "assume \"\\<not> R.I (inf\\<^sub>- f) xs\"\n    and \"\\<forall>rcs \\<in> set ?ebs. \\<not> R.I (subst f rcs) xs\""], ["proof (state)\nthis:\n  \\<not> R.I (inf\\<^sub>- f) xs\n  \\<forall>rcs\\<in>set (ebounds (atoms\\<^sub>0 f)).\n     \\<not> R.I (subst f rcs) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "hence noE: \"\\<forall>e \\<in> EQ f xs. \\<not> R.I f (e#xs)\""], ["proof (prove)\nusing this:\n  \\<not> R.I (inf\\<^sub>- f) xs\n  \\<forall>rcs\\<in>set (ebounds (atoms\\<^sub>0 f)).\n     \\<not> R.I (subst f rcs) xs\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>EQ f xs. \\<not> R.I f (e # xs)", "using \\<open>nqfree f\\<close>"], ["proof (prove)\nusing this:\n  \\<not> R.I (inf\\<^sub>- f) xs\n  \\<forall>rcs\\<in>set (ebounds (atoms\\<^sub>0 f)).\n     \\<not> R.I (subst f rcs) xs\n  nqfree f\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>EQ f xs. \\<not> R.I f (e # xs)", "by (force simp:set_ebounds I_subst diff_divide_distrib eval_def split:if_split_asm)"], ["proof (state)\nthis:\n  \\<forall>e\\<in>EQ f xs. \\<not> R.I f (e # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "hence \"x \\<notin> EQ f xs\""], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>EQ f xs. \\<not> R.I f (e # xs)\n\ngoal (1 subgoal):\n 1. x \\<notin> EQ f xs", "using x"], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>EQ f xs. \\<not> R.I f (e # xs)\n  R.I f (x # xs)\n\ngoal (1 subgoal):\n 1. x \\<notin> EQ f xs", "by fastforce"], ["proof (state)\nthis:\n  x \\<notin> EQ f xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "obtain l where \"l \\<in> LB f xs\" \"l < x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>l \\<in> {(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n                          Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and>\n                          0 < c};\n         l < x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using LBex[OF \\<open>nqfree f\\<close> x \\<open>\\<not> R.I(inf\\<^sub>- f) xs\\<close> \\<open>x \\<notin> EQ f xs\\<close>]"], ["proof (prove)\nusing this:\n  \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n                  Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}.\n     l < x\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>l \\<in> {(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n                          Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and>\n                          0 < c};\n         l < x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  l \\<in> {(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}\n  l < x\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "have \"\\<exists>l\\<in>LB f xs. l<x \\<and> nolb f xs l x \\<and>\n            (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> R.I f (y#xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n                    Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and>\n                    0 < c}.\n       l < x \\<and>\n       nolb f xs l x \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> R.I f (y # xs))", "using dense_interval[where P = \"\\<lambda>x. R.I f (x#xs)\", OF finite_LB \\<open>l\\<in>LB f xs\\<close> \\<open>l<x\\<close> x] x innermost_intvl[OF \\<open>nqfree f\\<close> _ _ \\<open>x \\<notin> EQ f xs\\<close>]"], ["proof (prove)\nusing this:\n  (\\<And>y l.\n      \\<lbrakk>\\<forall>y\\<in>{l<..<x}.\n                  y \\<notin> {(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n                              Less r (c # cs)\n                              \\<in> set (atoms\\<^sub>0 f) \\<and>\n                              0 < c};\n       l < x; l < y; y \\<le> x\\<rbrakk>\n      \\<Longrightarrow> R.I f (y # xs)) \\<Longrightarrow>\n  \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n                  Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}.\n     l < x \\<and>\n     (\\<forall>y\\<in>{l<..<x}.\n         y \\<notin> {(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n                     Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and>\n                     0 < c}) \\<and>\n     (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> R.I f (y # xs))\n  R.I f (x # xs)\n  \\<lbrakk>nolb f xs ?l x; ?l < x; R.I f (x # xs); ?l < ?y;\n   ?y \\<le> x\\<rbrakk>\n  \\<Longrightarrow> R.I f (?y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n                    Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and>\n                    0 < c}.\n       l < x \\<and>\n       nolb f xs l x \\<and>\n       (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> R.I f (y # xs))", "by (simp add:nolb_def)"], ["proof (state)\nthis:\n  \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n                  Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}.\n     l < x \\<and>\n     nolb f xs l x \\<and>\n     (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> R.I f (y # xs))\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "then"], ["proof (chain)\npicking this:\n  \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n                  Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}.\n     l < x \\<and>\n     nolb f xs l x \\<and>\n     (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> R.I f (y # xs))", "obtain r c cs\n      where *: \"Less r (c#cs) \\<in> set(R.atoms\\<^sub>0 f) \\<and> c>0 \\<and>\n            (r - \\<langle>cs,xs\\<rangle>)/c < x \\<and> nolb f xs ((r - \\<langle>cs,xs\\<rangle>)/c) x\n            \\<and> (\\<forall>y. (r - \\<langle>cs,xs\\<rangle>)/c < y \\<and> y \\<le> x \\<longrightarrow> R.I f (y#xs))\""], ["proof (prove)\nusing this:\n  \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n                  Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}.\n     l < x \\<and>\n     nolb f xs l x \\<and>\n     (\\<forall>y. l < y \\<and> y \\<le> x \\<longrightarrow> R.I f (y # xs))\n\ngoal (1 subgoal):\n 1. (\\<And>r c cs.\n        Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and>\n        0 < c \\<and>\n        (r - \\<langle>cs,xs\\<rangle>) / c < x \\<and>\n        nolb f xs ((r - \\<langle>cs,xs\\<rangle>) / c) x \\<and>\n        (\\<forall>y.\n            (r - \\<langle>cs,xs\\<rangle>) / c < y \\<and>\n            y \\<le> x \\<longrightarrow>\n            R.I f (y # xs)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and>\n  0 < c \\<and>\n  (r - \\<langle>cs,xs\\<rangle>) / c < x \\<and>\n  nolb f xs ((r - \\<langle>cs,xs\\<rangle>) / c) x \\<and>\n  (\\<forall>y.\n      (r - \\<langle>cs,xs\\<rangle>) / c < y \\<and>\n      y \\<le> x \\<longrightarrow>\n      R.I f (y # xs))\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "then"], ["proof (chain)\npicking this:\n  Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and>\n  0 < c \\<and>\n  (r - \\<langle>cs,xs\\<rangle>) / c < x \\<and>\n  nolb f xs ((r - \\<langle>cs,xs\\<rangle>) / c) x \\<and>\n  (\\<forall>y.\n      (r - \\<langle>cs,xs\\<rangle>) / c < y \\<and>\n      y \\<le> x \\<longrightarrow>\n      R.I f (y # xs))", "have \"R.I (subst\\<^sub>+ f (r/c, (-1/c) *\\<^sub>s cs)) xs\""], ["proof (prove)\nusing this:\n  Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and>\n  0 < c \\<and>\n  (r - \\<langle>cs,xs\\<rangle>) / c < x \\<and>\n  nolb f xs ((r - \\<langle>cs,xs\\<rangle>) / c) x \\<and>\n  (\\<forall>y.\n      (r - \\<langle>cs,xs\\<rangle>) / c < y \\<and>\n      y \\<le> x \\<longrightarrow>\n      R.I f (y # xs))\n\ngoal (1 subgoal):\n 1. R.I (subst\\<^sub>+ f (r / c, (- 1 / c) *\\<^sub>s cs)) xs", "using noE"], ["proof (prove)\nusing this:\n  Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and>\n  0 < c \\<and>\n  (r - \\<langle>cs,xs\\<rangle>) / c < x \\<and>\n  nolb f xs ((r - \\<langle>cs,xs\\<rangle>) / c) x \\<and>\n  (\\<forall>y.\n      (r - \\<langle>cs,xs\\<rangle>) / c < y \\<and>\n      y \\<le> x \\<longrightarrow>\n      R.I f (y # xs))\n  \\<forall>e\\<in>EQ f xs. \\<not> R.I f (e # xs)\n\ngoal (1 subgoal):\n 1. R.I (subst\\<^sub>+ f (r / c, (- 1 / c) *\\<^sub>s cs)) xs", "by(auto intro!: I_subst_peps2[OF \\<open>nqfree f\\<close>]\n        simp:EQ2_def diff_divide_distrib algebra_simps)"], ["proof (state)\nthis:\n  R.I (subst\\<^sub>+ f (r / c, (- 1 / c) *\\<^sub>s cs)) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "with *"], ["proof (chain)\npicking this:\n  Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and>\n  0 < c \\<and>\n  (r - \\<langle>cs,xs\\<rangle>) / c < x \\<and>\n  nolb f xs ((r - \\<langle>cs,xs\\<rangle>) / c) x \\<and>\n  (\\<forall>y.\n      (r - \\<langle>cs,xs\\<rangle>) / c < y \\<and>\n      y \\<le> x \\<longrightarrow>\n      R.I f (y # xs))\n  R.I (subst\\<^sub>+ f (r / c, (- 1 / c) *\\<^sub>s cs)) xs", "have ?QE"], ["proof (prove)\nusing this:\n  Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and>\n  0 < c \\<and>\n  (r - \\<langle>cs,xs\\<rangle>) / c < x \\<and>\n  nolb f xs ((r - \\<langle>cs,xs\\<rangle>) / c) x \\<and>\n  (\\<forall>y.\n      (r - \\<langle>cs,xs\\<rangle>) / c < y \\<and>\n      y \\<le> x \\<longrightarrow>\n      R.I f (y # xs))\n  R.I (subst\\<^sub>+ f (r / c, (- 1 / c) *\\<^sub>s cs)) xs\n\ngoal (1 subgoal):\n 1. R.I (qe_eps\\<^sub>1 f) xs", "by(simp add:qe_eps\\<^sub>1_def bex_Un set_lbounds) metis"], ["proof (state)\nthis:\n  R.I (qe_eps\\<^sub>1 f) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<not> R.I (inf\\<^sub>- f) xs;\n   \\<forall>rcs\\<in>set (ebounds (atoms\\<^sub>0 f)).\n      \\<not> R.I (subst f rcs) xs\\<rbrakk>\n  \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs\n\ngoal (1 subgoal):\n 1. \\<exists>x. R.I f (x # xs) \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "ultimately"], ["proof (chain)\npicking this:\n  R.I (inf\\<^sub>- f) xs \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs\n  \\<exists>rcs\\<in>set (ebounds (atoms\\<^sub>0 f)).\n     R.I (subst f rcs) xs \\<Longrightarrow>\n  R.I (qe_eps\\<^sub>1 f) xs\n  \\<lbrakk>\\<not> R.I (inf\\<^sub>- f) xs;\n   \\<forall>rcs\\<in>set (ebounds (atoms\\<^sub>0 f)).\n      \\<not> R.I (subst f rcs) xs\\<rbrakk>\n  \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs", "show ?QE"], ["proof (prove)\nusing this:\n  R.I (inf\\<^sub>- f) xs \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs\n  \\<exists>rcs\\<in>set (ebounds (atoms\\<^sub>0 f)).\n     R.I (subst f rcs) xs \\<Longrightarrow>\n  R.I (qe_eps\\<^sub>1 f) xs\n  \\<lbrakk>\\<not> R.I (inf\\<^sub>- f) xs;\n   \\<forall>rcs\\<in>set (ebounds (atoms\\<^sub>0 f)).\n      \\<not> R.I (subst f rcs) xs\\<rbrakk>\n  \\<Longrightarrow> R.I (qe_eps\\<^sub>1 f) xs\n\ngoal (1 subgoal):\n 1. R.I (qe_eps\\<^sub>1 f) xs", "by blast"], ["proof (state)\nthis:\n  R.I (qe_eps\\<^sub>1 f) xs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma qfree_asubst_peps: \"qfree (asubst\\<^sub>+ rcs a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qfree (asubst\\<^sub>+ rcs a)", "by(cases \"(rcs,a)\" rule:asubst_peps.cases) simp_all"], ["", "lemma qfree_subst_peps: \"nqfree \\<phi> \\<Longrightarrow> qfree (subst\\<^sub>+ \\<phi> rcs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nqfree \\<phi> \\<Longrightarrow> qfree (subst\\<^sub>+ \\<phi> rcs)", "by(induct \\<phi>) (simp_all add:qfree_asubst_peps)"], ["", "lemma qfree_qe_eps\\<^sub>1: \"nqfree \\<phi> \\<Longrightarrow> qfree(qe_eps\\<^sub>1 \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nqfree \\<phi> \\<Longrightarrow> qfree (qe_eps\\<^sub>1 \\<phi>)", "apply(simp add:qe_eps\\<^sub>1_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. nqfree \\<phi> \\<Longrightarrow>\n    qfree\n     (list_disj\n       (inf\\<^sub>- \\<phi> #\n        map (subst\\<^sub>+ \\<phi>) (lbounds (atoms\\<^sub>0 \\<phi>)) @\n        map (subst \\<phi>) (ebounds (atoms\\<^sub>0 \\<phi>))))", "apply(rule qfree_list_disj)"], ["proof (prove)\ngoal (1 subgoal):\n 1. nqfree \\<phi> \\<Longrightarrow>\n    \\<forall>\\<phi>\n             \\<in>set (inf\\<^sub>- \\<phi> #\n                       map (subst\\<^sub>+ \\<phi>)\n                        (lbounds (atoms\\<^sub>0 \\<phi>)) @\n                       map (subst \\<phi>) (ebounds (atoms\\<^sub>0 \\<phi>))).\n       qfree \\<phi>", "apply (auto simp:qfree_min_inf qfree_subst_peps qfree_map_fm)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition \"qe_eps = R.lift_nnf_qe qe_eps\\<^sub>1\""], ["", "lemma qfree_qe_eps: \"qfree(qe_eps \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qfree (qe_eps \\<phi>)", "by(simp add: qe_eps_def R.qfree_lift_nnf_qe qfree_qe_eps\\<^sub>1)"], ["", "lemma I_qe_eps: \"R.I (qe_eps \\<phi>) xs = R.I \\<phi> xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R.I (qe_eps \\<phi>) xs = R.I \\<phi> xs", "by(simp add:qe_eps_def R.I_lift_nnf_qe qfree_qe_eps\\<^sub>1 I_eps1)"], ["", "end"]]}