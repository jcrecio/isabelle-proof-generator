{"file_name": "/home/qj213/afp-2021-10-22/thys/LinearQuantifierElim/Thys/LinArith.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LinearQuantifierElim", "problem_names": ["lemma is_Less_iff: \"is_Less f = (\\<exists>r rs. f = Less r rs)\"", "lemma is_Eq_iff: \"(\\<forall>i j. a \\<noteq> Less i j) = (\\<exists>i j. a = Eq i j)\"", "lemma set_lbounds:\n \"set(lbounds as) = {(r/c, (-1/c) *\\<^sub>s cs)|r c cs. Less r (c#cs) \\<in> set as \\<and> c>0}\"", "lemma set_ubounds:\n \"set(ubounds as) = {(r/c, (-1/c) *\\<^sub>s cs)|r c cs. Less r (c#cs) \\<in> set as \\<and> c<0}\"", "lemma set_ebounds:\n  \"set(ebounds as) = {(r/c, (-1/c) *\\<^sub>s cs)|r c cs. Eq r (c#cs) \\<in> set as \\<and> c\\<noteq>0}\"", "lemma I_asubst:\n \"I\\<^sub>R (asubst t a) xs = I\\<^sub>R a (eval t xs # xs)\"", "lemma I_subst:\n  \"qfree \\<phi> \\<Longrightarrow> R.I (subst \\<phi> t) xs = R.I \\<phi> (eval t xs # xs)\"", "lemma I_subst_pretty:\n  \"qfree \\<phi> \\<Longrightarrow> R.I (subst \\<phi> (r,cs)) xs = R.I \\<phi> ((r + \\<langle>cs,xs\\<rangle>) # xs)\"", "lemma qfree_min_inf: \"qfree \\<phi> \\<Longrightarrow> qfree(inf\\<^sub>- \\<phi>)\"", "lemma qfree_plus_inf: \"qfree \\<phi> \\<Longrightarrow> qfree(inf\\<^sub>+ \\<phi>)\"", "lemma min_inf:\n  \"nqfree f \\<Longrightarrow> \\<exists>x. \\<forall>y\\<le>x. R.I (inf\\<^sub>- f) xs = R.I f (y # xs)\"\n  (is \"_ \\<Longrightarrow> \\<exists>x. ?P f x\")", "lemma plus_inf:\n  \"nqfree f \\<Longrightarrow> \\<exists>x. \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f) xs = R.I f (y # xs)\"\n  (is \"_ \\<Longrightarrow> \\<exists>x. ?P f x\")", "lemma LBex:\n \"\\<lbrakk> nqfree f; R.I f (x#xs); \\<not>R.I (inf\\<^sub>- f) xs; x \\<notin> EQ f xs \\<rbrakk>\n  \\<Longrightarrow> \\<exists>l\\<in> LB f xs. l < x\"", "lemma UBex:\n \"\\<lbrakk> nqfree f; R.I f (x#xs); \\<not>R.I (inf\\<^sub>+ f) xs; x \\<notin> EQ f xs \\<rbrakk>\n  \\<Longrightarrow> \\<exists>u\\<in> UB f xs. x < u\"", "lemma finite_LB: \"finite(LB f xs)\"", "lemma finite_UB: \"finite(UB f xs)\""], "translations": [["", "lemma is_Less_iff: \"is_Less f = (\\<exists>r rs. f = Less r rs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Less f = (\\<exists>r rs. f = Less r rs)", "by(induct f) auto"], ["", "lemma is_Eq_iff: \"(\\<forall>i j. a \\<noteq> Less i j) = (\\<exists>i j. a = Eq i j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>i j. a \\<noteq> Less i j) = (\\<exists>i j. a = Eq i j)", "by(cases a) auto"], ["", "fun neg\\<^sub>R :: \"atom \\<Rightarrow> atom fm\" where\n\"neg\\<^sub>R (Less r t) = Or (Atom(Less (-r) (-t))) (Atom(Eq r t))\" |\n\"neg\\<^sub>R (Eq r t) = Or (Atom(Less r t)) (Atom(Less (-r) (-t)))\""], ["", "fun hd_coeff :: \"atom \\<Rightarrow> real\" where\n\"hd_coeff (Less r cs) = (case cs of [] \\<Rightarrow> 0 | c#_ \\<Rightarrow> c)\" |\n\"hd_coeff (Eq r cs) = (case cs of [] \\<Rightarrow> 0 | c#_ \\<Rightarrow> c)\""], ["", "definition \"depends\\<^sub>R a = (hd_coeff a \\<noteq> 0)\""], ["", "fun decr\\<^sub>R :: \"atom \\<Rightarrow> atom\" where\n\"decr\\<^sub>R (Less r rs) = Less r (tl rs)\" |\n\"decr\\<^sub>R (Eq r rs) = Eq r (tl rs)\""], ["", "fun I\\<^sub>R :: \"atom \\<Rightarrow> real list \\<Rightarrow> bool\" where\n\"I\\<^sub>R (Less r cs) xs = (r < \\<langle>cs,xs\\<rangle>)\" |\n\"I\\<^sub>R (Eq r cs) xs = (r = \\<langle>cs,xs\\<rangle>)\""], ["", "definition \"atoms\\<^sub>0 = ATOM.atoms\\<^sub>0 depends\\<^sub>R\""], ["", "(* FIXME !!! (incl: display should hide params)*)"], ["", "interpretation R: ATOM neg\\<^sub>R \"(\\<lambda>a. True)\" I\\<^sub>R depends\\<^sub>R decr\\<^sub>R\n  rewrites \"ATOM.atoms\\<^sub>0 depends\\<^sub>R = atoms\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ATOM neg\\<^sub>R (\\<lambda>a. True) I\\<^sub>R depends\\<^sub>R\n     decr\\<^sub>R &&&\n    ATOM.atoms\\<^sub>0 depends\\<^sub>R = atoms\\<^sub>0", "proof goal_cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ATOM neg\\<^sub>R (\\<lambda>a. True) I\\<^sub>R depends\\<^sub>R\n     decr\\<^sub>R\n 2. ATOM.atoms\\<^sub>0 depends\\<^sub>R = atoms\\<^sub>0", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. ATOM neg\\<^sub>R (\\<lambda>a. True) I\\<^sub>R depends\\<^sub>R\n     decr\\<^sub>R\n 2. ATOM.atoms\\<^sub>0 depends\\<^sub>R = atoms\\<^sub>0", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ATOM neg\\<^sub>R (\\<lambda>a. True) I\\<^sub>R depends\\<^sub>R\n     decr\\<^sub>R", "apply(unfold_locales)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a. nqfree (neg\\<^sub>R a)\n 2. \\<And>a.\n       True \\<Longrightarrow> \\<forall>b\\<in>atoms (neg\\<^sub>R a). True\n 3. \\<And>a xs.\n       interpret I\\<^sub>R (neg\\<^sub>R a) xs = (\\<not> I\\<^sub>R a xs)\n 4. \\<And>a x xs.\n       \\<not> depends\\<^sub>R a \\<Longrightarrow>\n       I\\<^sub>R a (x # xs) = I\\<^sub>R (decr\\<^sub>R a) xs\n 5. \\<And>a.\n       \\<lbrakk>\\<not> depends\\<^sub>R a; True\\<rbrakk>\n       \\<Longrightarrow> True", "apply(case_tac a)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a x11 x12.\n       a = Less x11 x12 \\<Longrightarrow> nqfree (neg\\<^sub>R a)\n 2. \\<And>a x21 x22. a = Eq x21 x22 \\<Longrightarrow> nqfree (neg\\<^sub>R a)\n 3. \\<And>a.\n       True \\<Longrightarrow> \\<forall>b\\<in>atoms (neg\\<^sub>R a). True\n 4. \\<And>a xs.\n       interpret I\\<^sub>R (neg\\<^sub>R a) xs = (\\<not> I\\<^sub>R a xs)\n 5. \\<And>a x xs.\n       \\<not> depends\\<^sub>R a \\<Longrightarrow>\n       I\\<^sub>R a (x # xs) = I\\<^sub>R (decr\\<^sub>R a) xs\n 6. \\<And>a.\n       \\<lbrakk>\\<not> depends\\<^sub>R a; True\\<rbrakk>\n       \\<Longrightarrow> True", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a xs.\n       interpret I\\<^sub>R (neg\\<^sub>R a) xs = (\\<not> I\\<^sub>R a xs)\n 2. \\<And>a x xs.\n       \\<not> depends\\<^sub>R a \\<Longrightarrow>\n       I\\<^sub>R a (x # xs) = I\\<^sub>R (decr\\<^sub>R a) xs", "apply(case_tac a)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a xs x11 x12.\n       a = Less x11 x12 \\<Longrightarrow>\n       interpret I\\<^sub>R (neg\\<^sub>R a) xs = (\\<not> I\\<^sub>R a xs)\n 2. \\<And>a xs x21 x22.\n       a = Eq x21 x22 \\<Longrightarrow>\n       interpret I\\<^sub>R (neg\\<^sub>R a) xs = (\\<not> I\\<^sub>R a xs)\n 3. \\<And>a x xs.\n       \\<not> depends\\<^sub>R a \\<Longrightarrow>\n       I\\<^sub>R a (x # xs) = I\\<^sub>R (decr\\<^sub>R a) xs", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a xs x11 x12.\n       a = Less x11 x12 \\<Longrightarrow>\n       (\\<langle>x12,xs\\<rangle> < x11 \\<or>\n        x11 = \\<langle>x12,xs\\<rangle>) =\n       (\\<not> x11 < \\<langle>x12,xs\\<rangle>)\n 2. \\<And>a xs x21 x22.\n       a = Eq x21 x22 \\<Longrightarrow>\n       (x21 < \\<langle>x22,xs\\<rangle> \\<or>\n        \\<langle>x22,xs\\<rangle> < x21) =\n       (x21 \\<noteq> \\<langle>x22,xs\\<rangle>)\n 3. \\<And>a x xs.\n       \\<not> depends\\<^sub>R a \\<Longrightarrow>\n       I\\<^sub>R a (x # xs) = I\\<^sub>R (decr\\<^sub>R a) xs", "apply arith"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a xs x21 x22.\n       a = Eq x21 x22 \\<Longrightarrow>\n       (x21 < \\<langle>x22,xs\\<rangle> \\<or>\n        \\<langle>x22,xs\\<rangle> < x21) =\n       (x21 \\<noteq> \\<langle>x22,xs\\<rangle>)\n 2. \\<And>a x xs.\n       \\<not> depends\\<^sub>R a \\<Longrightarrow>\n       I\\<^sub>R a (x # xs) = I\\<^sub>R (decr\\<^sub>R a) xs", "apply arith"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a x xs.\n       \\<not> depends\\<^sub>R a \\<Longrightarrow>\n       I\\<^sub>R a (x # xs) = I\\<^sub>R (decr\\<^sub>R a) xs", "apply(case_tac a)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a x xs x11 x12.\n       \\<lbrakk>\\<not> depends\\<^sub>R a; a = Less x11 x12\\<rbrakk>\n       \\<Longrightarrow> I\\<^sub>R a (x # xs) =\n                         I\\<^sub>R (decr\\<^sub>R a) xs\n 2. \\<And>a x xs x21 x22.\n       \\<lbrakk>\\<not> depends\\<^sub>R a; a = Eq x21 x22\\<rbrakk>\n       \\<Longrightarrow> I\\<^sub>R a (x # xs) =\n                         I\\<^sub>R (decr\\<^sub>R a) xs", "apply(simp_all add:depends\\<^sub>R_def split:list.splits)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ATOM neg\\<^sub>R (\\<lambda>a. True) I\\<^sub>R depends\\<^sub>R decr\\<^sub>R\n\ngoal (1 subgoal):\n 1. ATOM.atoms\\<^sub>0 depends\\<^sub>R = atoms\\<^sub>0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ATOM.atoms\\<^sub>0 depends\\<^sub>R = atoms\\<^sub>0", "case 2"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. ATOM.atoms\\<^sub>0 depends\\<^sub>R = atoms\\<^sub>0", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ATOM.atoms\\<^sub>0 depends\\<^sub>R = atoms\\<^sub>0", "by(simp add:atoms\\<^sub>0_def)"], ["proof (state)\nthis:\n  ATOM.atoms\\<^sub>0 depends\\<^sub>R = atoms\\<^sub>0\n\ngoal:\nNo subgoals!", "qed"], ["", "setup \\<open>Sign.revert_abbrev \"\" @{const_abbrev R.I}\\<close>"], ["", "setup \\<open>Sign.revert_abbrev \"\" @{const_abbrev R.lift_nnf_qe}\\<close>"], ["", "subsubsection\\<open>Shared constructions\\<close>"], ["", "fun combine :: \"(real * real list) \\<Rightarrow> (real * real list) \\<Rightarrow> atom\" where\n\"combine (r\\<^sub>1,cs\\<^sub>1) (r\\<^sub>2,cs\\<^sub>2) = Less (r\\<^sub>1-r\\<^sub>2) (cs\\<^sub>2 - cs\\<^sub>1)\""], ["", "(* More efficient combination than rhs of combine_conv below; unused\nlemma combine_code:\n  \"combine (r1,c1,cs1) (r2,c2,cs2) =\n  Less (c1*r2-c2*r1) (zipwith0 (%x y. c1*y-c2*x) cs1 cs2)\"\napply(rule sym)\napply(simp)\napply(induct cs1 arbitrary:cs2)\n apply simp\napply(case_tac cs2)\n apply simp\napply simp\ndone*)"], ["", "definition \"lbounds as = [(r/c, (-1/c) *\\<^sub>s cs). Less r (c#cs) \\<leftarrow> as, c>0]\""], ["", "definition \"ubounds as = [(r/c, (-1/c) *\\<^sub>s cs). Less r (c#cs) \\<leftarrow> as, c<0]\""], ["", "definition \"ebounds as = [(r/c, (-1/c) *\\<^sub>s cs). Eq r (c#cs) \\<leftarrow> as, c\\<noteq>0]\""], ["", "lemma set_lbounds:\n \"set(lbounds as) = {(r/c, (-1/c) *\\<^sub>s cs)|r c cs. Less r (c#cs) \\<in> set as \\<and> c>0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (lbounds as) =\n    {(r / c, (- 1 / c) *\\<^sub>s cs) |r c cs.\n     Less r (c # cs) \\<in> set as \\<and> 0 < c}", "by(force simp: lbounds_def split:list.splits atom.splits if_splits)"], ["", "lemma set_ubounds:\n \"set(ubounds as) = {(r/c, (-1/c) *\\<^sub>s cs)|r c cs. Less r (c#cs) \\<in> set as \\<and> c<0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (ubounds as) =\n    {(r / c, (- 1 / c) *\\<^sub>s cs) |r c cs.\n     Less r (c # cs) \\<in> set as \\<and> c < 0}", "by(force simp: ubounds_def split:list.splits atom.splits if_splits)"], ["", "lemma set_ebounds:\n  \"set(ebounds as) = {(r/c, (-1/c) *\\<^sub>s cs)|r c cs. Eq r (c#cs) \\<in> set as \\<and> c\\<noteq>0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (ebounds as) =\n    {(r / c, (- 1 / c) *\\<^sub>s cs) |r c cs.\n     Eq r (c # cs) \\<in> set as \\<and> c \\<noteq> 0}", "by(force simp: ebounds_def split:list.splits atom.splits if_splits)"], ["", "abbreviation EQ where\n\"EQ f xs \\<equiv> {(r - \\<langle>cs,xs\\<rangle>)/c|r c cs. Eq r (c#cs) \\<in> set(R.atoms\\<^sub>0 f) \\<and> c\\<noteq>0}\""], ["", "abbreviation LB where\n\"LB f xs \\<equiv> {(r - \\<langle>cs,xs\\<rangle>)/c|r c cs. Less r (c#cs) \\<in> set(R.atoms\\<^sub>0 f) \\<and> c>0}\""], ["", "abbreviation UB where\n\"UB f xs \\<equiv> {(r - \\<langle>cs,xs\\<rangle>)/c|r c cs. Less r (c#cs) \\<in> set(R.atoms\\<^sub>0 f) \\<and> c<0}\""], ["", "fun asubst :: \"real * real list \\<Rightarrow> atom \\<Rightarrow> atom\" where\n\"asubst (r,cs) (Less s (d#ds)) = Less (s - d*r) (d *\\<^sub>s cs + ds)\" |\n\"asubst (r,cs) (Eq s (d#ds)) = Eq (s - d*r) (d *\\<^sub>s cs + ds)\" |\n\"asubst (r,cs) (Less s []) = Less s []\" |\n\"asubst (r,cs) (Eq s []) = Eq s []\""], ["", "abbreviation \"subst \\<phi> rcs \\<equiv> map\\<^sub>f\\<^sub>m (asubst rcs) \\<phi>\""], ["", "definition eval :: \"real * real list \\<Rightarrow> real list \\<Rightarrow> real\" where\n\"eval rcs xs = fst rcs + \\<langle>snd rcs,xs\\<rangle>\""], ["", "lemma I_asubst:\n \"I\\<^sub>R (asubst t a) xs = I\\<^sub>R a (eval t xs # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I\\<^sub>R (asubst t a) xs = I\\<^sub>R a (eval t xs # xs)", "proof(cases a)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x11 x12.\n       a = Less x11 x12 \\<Longrightarrow>\n       I\\<^sub>R (asubst t a) xs = I\\<^sub>R a (eval t xs # xs)\n 2. \\<And>x21 x22.\n       a = Eq x21 x22 \\<Longrightarrow>\n       I\\<^sub>R (asubst t a) xs = I\\<^sub>R a (eval t xs # xs)", "case (Less r cs)"], ["proof (state)\nthis:\n  a = Less r cs\n\ngoal (2 subgoals):\n 1. \\<And>x11 x12.\n       a = Less x11 x12 \\<Longrightarrow>\n       I\\<^sub>R (asubst t a) xs = I\\<^sub>R a (eval t xs # xs)\n 2. \\<And>x21 x22.\n       a = Eq x21 x22 \\<Longrightarrow>\n       I\\<^sub>R (asubst t a) xs = I\\<^sub>R a (eval t xs # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  a = Less r cs\n\ngoal (1 subgoal):\n 1. I\\<^sub>R (asubst t a) xs = I\\<^sub>R a (eval t xs # xs)", "by(cases t, cases cs,\n    simp_all add:eval_def distrib_left iprod_left_add_distrib)\n    arith"], ["proof (state)\nthis:\n  I\\<^sub>R (asubst t a) xs = I\\<^sub>R a (eval t xs # xs)\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       a = Eq x21 x22 \\<Longrightarrow>\n       I\\<^sub>R (asubst t a) xs = I\\<^sub>R a (eval t xs # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       a = Eq x21 x22 \\<Longrightarrow>\n       I\\<^sub>R (asubst t a) xs = I\\<^sub>R a (eval t xs # xs)", "case (Eq r cs)"], ["proof (state)\nthis:\n  a = Eq r cs\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       a = Eq x21 x22 \\<Longrightarrow>\n       I\\<^sub>R (asubst t a) xs = I\\<^sub>R a (eval t xs # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  a = Eq r cs\n\ngoal (1 subgoal):\n 1. I\\<^sub>R (asubst t a) xs = I\\<^sub>R a (eval t xs # xs)", "by(cases t, cases cs, simp_all add:eval_def distrib_left iprod_left_add_distrib)\n      arith"], ["proof (state)\nthis:\n  I\\<^sub>R (asubst t a) xs = I\\<^sub>R a (eval t xs # xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma I_subst:\n  \"qfree \\<phi> \\<Longrightarrow> R.I (subst \\<phi> t) xs = R.I \\<phi> (eval t xs # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qfree \\<phi> \\<Longrightarrow>\n    R.I (subst \\<phi> t) xs = R.I \\<phi> (eval t xs # xs)", "by(induct \\<phi>)(simp_all add:I_asubst)"], ["", "lemma I_subst_pretty:\n  \"qfree \\<phi> \\<Longrightarrow> R.I (subst \\<phi> (r,cs)) xs = R.I \\<phi> ((r + \\<langle>cs,xs\\<rangle>) # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qfree \\<phi> \\<Longrightarrow>\n    R.I (subst \\<phi> (r, cs)) xs =\n    R.I \\<phi> ((r + \\<langle>cs,xs\\<rangle>) # xs)", "by(simp add:I_subst eval_def)"], ["", "fun min_inf :: \"atom fm \\<Rightarrow> atom fm\" (\"inf\\<^sub>-\") where\n\"inf\\<^sub>- (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) = and (inf\\<^sub>- \\<phi>\\<^sub>1) (inf\\<^sub>- \\<phi>\\<^sub>2)\" |\n\"inf\\<^sub>- (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) = or (inf\\<^sub>- \\<phi>\\<^sub>1) (inf\\<^sub>- \\<phi>\\<^sub>2)\" |\n\"inf\\<^sub>- (Atom(Less r (c#cs))) =\n  (if c<0 then TrueF else if c>0 then FalseF else Atom(Less r cs))\" |\n\"inf\\<^sub>- (Atom(Eq r (c#cs))) = (if c=0 then Atom(Eq r cs) else FalseF)\" |\n\"inf\\<^sub>- \\<phi> = \\<phi>\""], ["", "fun plus_inf :: \"atom fm \\<Rightarrow> atom fm\" (\"inf\\<^sub>+\") where\n\"inf\\<^sub>+ (And \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) = and (inf\\<^sub>+ \\<phi>\\<^sub>1) (inf\\<^sub>+ \\<phi>\\<^sub>2)\" |\n\"inf\\<^sub>+ (Or \\<phi>\\<^sub>1 \\<phi>\\<^sub>2) = or (inf\\<^sub>+ \\<phi>\\<^sub>1) (inf\\<^sub>+ \\<phi>\\<^sub>2)\" |\n\"inf\\<^sub>+ (Atom(Less r (c#cs))) =\n  (if c>0 then TrueF else if c<0 then FalseF else Atom(Less r cs))\" |\n\"inf\\<^sub>+ (Atom(Eq r (c#cs))) = (if c=0 then Atom(Eq r cs) else FalseF)\" |\n\"inf\\<^sub>+ \\<phi> = \\<phi>\""], ["", "lemma qfree_min_inf: \"qfree \\<phi> \\<Longrightarrow> qfree(inf\\<^sub>- \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qfree \\<phi> \\<Longrightarrow> qfree (inf\\<^sub>- \\<phi>)", "by(induct \\<phi> rule:min_inf.induct) simp_all"], ["", "lemma qfree_plus_inf: \"qfree \\<phi> \\<Longrightarrow> qfree(inf\\<^sub>+ \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qfree \\<phi> \\<Longrightarrow> qfree (inf\\<^sub>+ \\<phi>)", "by(induct \\<phi> rule:plus_inf.induct) simp_all"], ["", "lemma min_inf:\n  \"nqfree f \\<Longrightarrow> \\<exists>x. \\<forall>y\\<le>x. R.I (inf\\<^sub>- f) xs = R.I f (y # xs)\"\n  (is \"_ \\<Longrightarrow> \\<exists>x. ?P f x\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. nqfree f \\<Longrightarrow>\n    \\<exists>x. \\<forall>y\\<le>x. R.I (inf\\<^sub>- f) xs = R.I f (y # xs)", "proof(induct f)"], ["proof (state)\ngoal (7 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>x.\n       nqfree (Atom x) \\<Longrightarrow>\n       \\<exists>xa.\n          \\<forall>y\\<le>xa.\n             R.I (inf\\<^sub>- (Atom x)) xs = R.I (Atom x) (y # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs);\n        nqfree (And f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (And f1 f2)) xs =\n                               R.I (And f1 f2) (y # xs)\n 5. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 6. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 7. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "case (Atom a)"], ["proof (state)\nthis:\n  nqfree (Atom a)\n\ngoal (7 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>x.\n       nqfree (Atom x) \\<Longrightarrow>\n       \\<exists>xa.\n          \\<forall>y\\<le>xa.\n             R.I (inf\\<^sub>- (Atom x)) xs = R.I (Atom x) (y # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs);\n        nqfree (And f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (And f1 f2)) xs =\n                               R.I (And f1 f2) (y # xs)\n 5. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 6. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 7. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "proof (cases a)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x11 x12.\n       a = Less x11 x12 \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n 2. \\<And>x21 x22.\n       a = Eq x21 x22 \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "case (Less r cs)"], ["proof (state)\nthis:\n  a = Less r cs\n\ngoal (2 subgoals):\n 1. \\<And>x11 x12.\n       a = Less x11 x12 \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n 2. \\<And>x21 x22.\n       a = Eq x21 x22 \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "proof(cases cs)"], ["proof (state)\ngoal (2 subgoals):\n 1. cs = [] \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n 2. \\<And>aa list.\n       cs = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "case Nil"], ["proof (state)\nthis:\n  cs = []\n\ngoal (2 subgoals):\n 1. cs = [] \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n 2. \\<And>aa list.\n       cs = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  cs = []\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "using Less"], ["proof (prove)\nusing this:\n  cs = []\n  a = Less r cs\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "by simp"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "case (Cons c cs)"], ["proof (state)\nthis:\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "{"], ["proof (state)\nthis:\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "assume \"c=0\""], ["proof (state)\nthis:\n  c = 0\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  c = 0\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "using Less Cons"], ["proof (prove)\nusing this:\n  c = 0\n  a = Less r cs__\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "by simp"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "}"], ["proof (state)\nthis:\n  c = 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "moreover"], ["proof (state)\nthis:\n  c = 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "{"], ["proof (state)\nthis:\n  c = 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "assume \"c<0\""], ["proof (state)\nthis:\n  c < 0\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "hence \"?P (Atom a) ((r - \\<langle>cs,xs\\<rangle> + 1)/c)\""], ["proof (prove)\nusing this:\n  c < 0\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<le>(r - \\<langle>cs,xs\\<rangle> + 1) / c.\n       R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "using Less Cons"], ["proof (prove)\nusing this:\n  c < 0\n  a = Less r cs__\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<le>(r - \\<langle>cs,xs\\<rangle> + 1) / c.\n       R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "by(auto simp add: field_simps)"], ["proof (state)\nthis:\n  \\<forall>y\\<le>(r - \\<langle>cs,xs\\<rangle> + 1) / c.\n     R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>y\\<le>(r - \\<langle>cs,xs\\<rangle> + 1) / c.\n     R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", ".."], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "}"], ["proof (state)\nthis:\n  c < 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "moreover"], ["proof (state)\nthis:\n  c < 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "{"], ["proof (state)\nthis:\n  c < 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "assume \"c>0\""], ["proof (state)\nthis:\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "hence \"?P (Atom a) ((r - \\<langle>cs,xs\\<rangle> - 1)/c)\""], ["proof (prove)\nusing this:\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<le>(r - \\<langle>cs,xs\\<rangle> - 1) / c.\n       R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "using Less Cons"], ["proof (prove)\nusing this:\n  0 < c\n  a = Less r cs__\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<le>(r - \\<langle>cs,xs\\<rangle> - 1) / c.\n       R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "by(auto simp add: field_simps)"], ["proof (state)\nthis:\n  \\<forall>y\\<le>(r - \\<langle>cs,xs\\<rangle> - 1) / c.\n     R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>y\\<le>(r - \\<langle>cs,xs\\<rangle> - 1) / c.\n     R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", ".."], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "}"], ["proof (state)\nthis:\n  0 < c \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "ultimately"], ["proof (chain)\npicking this:\n  c = 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n  c < 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n  0 < c \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  c = 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n  c < 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n  0 < c \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "by force"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       a = Eq x21 x22 \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       a = Eq x21 x22 \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "case (Eq r cs)"], ["proof (state)\nthis:\n  a = Eq r cs\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       a = Eq x21 x22 \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "proof(cases cs)"], ["proof (state)\ngoal (2 subgoals):\n 1. cs = [] \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n 2. \\<And>aa list.\n       cs = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "case Nil"], ["proof (state)\nthis:\n  cs = []\n\ngoal (2 subgoals):\n 1. cs = [] \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n 2. \\<And>aa list.\n       cs = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  cs = []\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "using Eq"], ["proof (prove)\nusing this:\n  cs = []\n  a = Eq r cs\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "by simp"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "case (Cons c cs)"], ["proof (state)\nthis:\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "{"], ["proof (state)\nthis:\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "assume \"c=0\""], ["proof (state)\nthis:\n  c = 0\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  c = 0\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "using Eq Cons"], ["proof (prove)\nusing this:\n  c = 0\n  a = Eq r cs__\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "by simp"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "}"], ["proof (state)\nthis:\n  c = 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "moreover"], ["proof (state)\nthis:\n  c = 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "{"], ["proof (state)\nthis:\n  c = 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "assume \"c<0\""], ["proof (state)\nthis:\n  c < 0\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "hence \"?P (Atom a) ((r - \\<langle>cs,xs\\<rangle> + 1)/c)\""], ["proof (prove)\nusing this:\n  c < 0\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<le>(r - \\<langle>cs,xs\\<rangle> + 1) / c.\n       R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "using Eq Cons"], ["proof (prove)\nusing this:\n  c < 0\n  a = Eq r cs__\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<le>(r - \\<langle>cs,xs\\<rangle> + 1) / c.\n       R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "by(auto simp add: field_simps)"], ["proof (state)\nthis:\n  \\<forall>y\\<le>(r - \\<langle>cs,xs\\<rangle> + 1) / c.\n     R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>y\\<le>(r - \\<langle>cs,xs\\<rangle> + 1) / c.\n     R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", ".."], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "}"], ["proof (state)\nthis:\n  c < 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "moreover"], ["proof (state)\nthis:\n  c < 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "{"], ["proof (state)\nthis:\n  c < 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "assume \"c>0\""], ["proof (state)\nthis:\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "hence \"?P (Atom a) ((r - \\<langle>cs,xs\\<rangle> - 1)/c)\""], ["proof (prove)\nusing this:\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<le>(r - \\<langle>cs,xs\\<rangle> - 1) / c.\n       R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "using Eq Cons"], ["proof (prove)\nusing this:\n  0 < c\n  a = Eq r cs__\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<le>(r - \\<langle>cs,xs\\<rangle> - 1) / c.\n       R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "by(auto simp add: field_simps)"], ["proof (state)\nthis:\n  \\<forall>y\\<le>(r - \\<langle>cs,xs\\<rangle> - 1) / c.\n     R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>y\\<le>(r - \\<langle>cs,xs\\<rangle> - 1) / c.\n     R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", ".."], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "}"], ["proof (state)\nthis:\n  0 < c \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<le>x.\n             R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "ultimately"], ["proof (chain)\npicking this:\n  c = 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n  c < 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n  0 < c \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  c = 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n  c < 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n  0 < c \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)", "by force"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<le>x. R.I (inf\\<^sub>- (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (6 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs);\n        nqfree (And f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (And f1 f2)) xs =\n                               R.I (And f1 f2) (y # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 6. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs);\n        nqfree (And f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (And f1 f2)) xs =\n                               R.I (And f1 f2) (y # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 6. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "case (And f1 f2)"], ["proof (state)\nthis:\n  nqfree f1 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<le>x. R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs)\n  nqfree f2 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs)\n  nqfree (And f1 f2)\n\ngoal (6 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs);\n        nqfree (And f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (And f1 f2)) xs =\n                               R.I (And f1 f2) (y # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 6. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "then"], ["proof (chain)\npicking this:\n  nqfree f1 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<le>x. R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs)\n  nqfree f2 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs)\n  nqfree (And f1 f2)", "obtain x1 x2 where \"?P f1 x1\" \"?P f2 x2\""], ["proof (prove)\nusing this:\n  nqfree f1 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<le>x. R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs)\n  nqfree f2 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs)\n  nqfree (And f1 f2)\n\ngoal (1 subgoal):\n 1. (\\<And>x1 x2.\n        \\<lbrakk>\\<forall>y\\<le>x1.\n                    R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n         \\<forall>y\\<le>x2.\n            R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce+"], ["proof (state)\nthis:\n  \\<forall>y\\<le>x1. R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs)\n  \\<forall>y\\<le>x2. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs)\n\ngoal (6 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs);\n        nqfree (And f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (And f1 f2)) xs =\n                               R.I (And f1 f2) (y # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 6. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "hence \"?P (And f1 f2) (min x1 x2)\""], ["proof (prove)\nusing this:\n  \\<forall>y\\<le>x1. R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs)\n  \\<forall>y\\<le>x2. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs)\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<le>min x1 x2.\n       R.I (inf\\<^sub>- (And f1 f2)) xs = R.I (And f1 f2) (y # xs)", "by(force simp:and_def)"], ["proof (state)\nthis:\n  \\<forall>y\\<le>min x1 x2.\n     R.I (inf\\<^sub>- (And f1 f2)) xs = R.I (And f1 f2) (y # xs)\n\ngoal (6 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs);\n        nqfree (And f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (And f1 f2)) xs =\n                               R.I (And f1 f2) (y # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 6. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>y\\<le>min x1 x2.\n     R.I (inf\\<^sub>- (And f1 f2)) xs = R.I (And f1 f2) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (And f1 f2)) xs = R.I (And f1 f2) (y # xs)", ".."], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<le>x.\n        R.I (inf\\<^sub>- (And f1 f2)) xs = R.I (And f1 f2) (y # xs)\n\ngoal (5 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 4. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 4. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "case (Or f1 f2)"], ["proof (state)\nthis:\n  nqfree f1 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<le>x. R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs)\n  nqfree f2 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs)\n  nqfree (Or f1 f2)\n\ngoal (5 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 4. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "then"], ["proof (chain)\npicking this:\n  nqfree f1 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<le>x. R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs)\n  nqfree f2 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs)\n  nqfree (Or f1 f2)", "obtain x1 x2 where \"?P f1 x1\" \"?P f2 x2\""], ["proof (prove)\nusing this:\n  nqfree f1 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<le>x. R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs)\n  nqfree f2 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs)\n  nqfree (Or f1 f2)\n\ngoal (1 subgoal):\n 1. (\\<And>x1 x2.\n        \\<lbrakk>\\<forall>y\\<le>x1.\n                    R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n         \\<forall>y\\<le>x2.\n            R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce+"], ["proof (state)\nthis:\n  \\<forall>y\\<le>x1. R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs)\n  \\<forall>y\\<le>x2. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs)\n\ngoal (5 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 4. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "hence \"?P (Or f1 f2) (min x1 x2)\""], ["proof (prove)\nusing this:\n  \\<forall>y\\<le>x1. R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs)\n  \\<forall>y\\<le>x2. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs)\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<le>min x1 x2.\n       R.I (inf\\<^sub>- (Or f1 f2)) xs = R.I (Or f1 f2) (y # xs)", "by(force simp:or_def)"], ["proof (state)\nthis:\n  \\<forall>y\\<le>min x1 x2.\n     R.I (inf\\<^sub>- (Or f1 f2)) xs = R.I (Or f1 f2) (y # xs)\n\ngoal (5 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<le>x. R.I (inf\\<^sub>- f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 4. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>y\\<le>min x1 x2.\n     R.I (inf\\<^sub>- (Or f1 f2)) xs = R.I (Or f1 f2) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<le>x.\n          R.I (inf\\<^sub>- (Or f1 f2)) xs = R.I (Or f1 f2) (y # xs)", ".."], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<le>x.\n        R.I (inf\\<^sub>- (Or f1 f2)) xs = R.I (Or f1 f2) (y # xs)\n\ngoal (4 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<le>x. R.I (inf\\<^sub>- FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 4. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<le>x.\n                      R.I (inf\\<^sub>- f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<le>x.\n                               R.I (inf\\<^sub>- (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "qed simp_all"], ["", "lemma plus_inf:\n  \"nqfree f \\<Longrightarrow> \\<exists>x. \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f) xs = R.I f (y # xs)\"\n  (is \"_ \\<Longrightarrow> \\<exists>x. ?P f x\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. nqfree f \\<Longrightarrow>\n    \\<exists>x. \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f) xs = R.I f (y # xs)", "proof(induct f)"], ["proof (state)\ngoal (7 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>x.\n       nqfree (Atom x) \\<Longrightarrow>\n       \\<exists>xa.\n          \\<forall>y\\<ge>xa.\n             R.I (inf\\<^sub>+ (Atom x)) xs = R.I (Atom x) (y # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs);\n        nqfree (And f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (And f1 f2)) xs =\n                               R.I (And f1 f2) (y # xs)\n 5. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 6. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 7. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "case (Atom a)"], ["proof (state)\nthis:\n  nqfree (Atom a)\n\ngoal (7 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>x.\n       nqfree (Atom x) \\<Longrightarrow>\n       \\<exists>xa.\n          \\<forall>y\\<ge>xa.\n             R.I (inf\\<^sub>+ (Atom x)) xs = R.I (Atom x) (y # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs);\n        nqfree (And f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (And f1 f2)) xs =\n                               R.I (And f1 f2) (y # xs)\n 5. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 6. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 7. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "proof (cases a)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x11 x12.\n       a = Less x11 x12 \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n 2. \\<And>x21 x22.\n       a = Eq x21 x22 \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "case (Less r cs)"], ["proof (state)\nthis:\n  a = Less r cs\n\ngoal (2 subgoals):\n 1. \\<And>x11 x12.\n       a = Less x11 x12 \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n 2. \\<And>x21 x22.\n       a = Eq x21 x22 \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "proof(cases cs)"], ["proof (state)\ngoal (2 subgoals):\n 1. cs = [] \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n 2. \\<And>aa list.\n       cs = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "case Nil"], ["proof (state)\nthis:\n  cs = []\n\ngoal (2 subgoals):\n 1. cs = [] \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n 2. \\<And>aa list.\n       cs = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  cs = []\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "using Less"], ["proof (prove)\nusing this:\n  cs = []\n  a = Less r cs\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "by simp"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "case (Cons c cs)"], ["proof (state)\nthis:\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "{"], ["proof (state)\nthis:\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "assume \"c=0\""], ["proof (state)\nthis:\n  c = 0\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  c = 0\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "using Less Cons"], ["proof (prove)\nusing this:\n  c = 0\n  a = Less r cs__\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "by simp"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "}"], ["proof (state)\nthis:\n  c = 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "moreover"], ["proof (state)\nthis:\n  c = 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "{"], ["proof (state)\nthis:\n  c = 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "assume \"c<0\""], ["proof (state)\nthis:\n  c < 0\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "hence \"?P (Atom a) ((r - \\<langle>cs,xs\\<rangle> - 1)/c)\""], ["proof (prove)\nusing this:\n  c < 0\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<ge>(r - \\<langle>cs,xs\\<rangle> - 1) / c.\n       R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "using Less Cons"], ["proof (prove)\nusing this:\n  c < 0\n  a = Less r cs__\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<ge>(r - \\<langle>cs,xs\\<rangle> - 1) / c.\n       R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "by(auto simp add: field_simps)"], ["proof (state)\nthis:\n  \\<forall>y\\<ge>(r - \\<langle>cs,xs\\<rangle> - 1) / c.\n     R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>y\\<ge>(r - \\<langle>cs,xs\\<rangle> - 1) / c.\n     R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", ".."], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "}"], ["proof (state)\nthis:\n  c < 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "moreover"], ["proof (state)\nthis:\n  c < 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "{"], ["proof (state)\nthis:\n  c < 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "assume \"c>0\""], ["proof (state)\nthis:\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "hence \"?P (Atom a) ((r - \\<langle>cs,xs\\<rangle> + 1)/c)\""], ["proof (prove)\nusing this:\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<ge>(r - \\<langle>cs,xs\\<rangle> + 1) / c.\n       R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "using Less Cons"], ["proof (prove)\nusing this:\n  0 < c\n  a = Less r cs__\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<ge>(r - \\<langle>cs,xs\\<rangle> + 1) / c.\n       R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "by(auto simp add: field_simps)"], ["proof (state)\nthis:\n  \\<forall>y\\<ge>(r - \\<langle>cs,xs\\<rangle> + 1) / c.\n     R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>y\\<ge>(r - \\<langle>cs,xs\\<rangle> + 1) / c.\n     R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", ".."], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "}"], ["proof (state)\nthis:\n  0 < c \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "ultimately"], ["proof (chain)\npicking this:\n  c = 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n  c < 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n  0 < c \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  c = 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n  c < 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n  0 < c \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "by force"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       a = Eq x21 x22 \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       a = Eq x21 x22 \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "case (Eq r cs)"], ["proof (state)\nthis:\n  a = Eq r cs\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       a = Eq x21 x22 \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "proof(cases cs)"], ["proof (state)\ngoal (2 subgoals):\n 1. cs = [] \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n 2. \\<And>aa list.\n       cs = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "case Nil"], ["proof (state)\nthis:\n  cs = []\n\ngoal (2 subgoals):\n 1. cs = [] \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n 2. \\<And>aa list.\n       cs = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  cs = []\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "using Eq"], ["proof (prove)\nusing this:\n  cs = []\n  a = Eq r cs\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "by simp"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "case (Cons c cs)"], ["proof (state)\nthis:\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "{"], ["proof (state)\nthis:\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "assume \"c=0\""], ["proof (state)\nthis:\n  c = 0\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  c = 0\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "using Eq Cons"], ["proof (prove)\nusing this:\n  c = 0\n  a = Eq r cs__\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "by simp"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "}"], ["proof (state)\nthis:\n  c = 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "moreover"], ["proof (state)\nthis:\n  c = 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "{"], ["proof (state)\nthis:\n  c = 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "assume \"c<0\""], ["proof (state)\nthis:\n  c < 0\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "hence \"?P (Atom a) ((r - \\<langle>cs,xs\\<rangle> - 1)/c)\""], ["proof (prove)\nusing this:\n  c < 0\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<ge>(r - \\<langle>cs,xs\\<rangle> - 1) / c.\n       R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "using Eq Cons"], ["proof (prove)\nusing this:\n  c < 0\n  a = Eq r cs__\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<ge>(r - \\<langle>cs,xs\\<rangle> - 1) / c.\n       R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "by(auto simp add: field_simps)"], ["proof (state)\nthis:\n  \\<forall>y\\<ge>(r - \\<langle>cs,xs\\<rangle> - 1) / c.\n     R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>y\\<ge>(r - \\<langle>cs,xs\\<rangle> - 1) / c.\n     R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", ".."], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "}"], ["proof (state)\nthis:\n  c < 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "moreover"], ["proof (state)\nthis:\n  c < 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "{"], ["proof (state)\nthis:\n  c < 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "assume \"c>0\""], ["proof (state)\nthis:\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "hence \"?P (Atom a) ((r - \\<langle>cs,xs\\<rangle> + 1)/c)\""], ["proof (prove)\nusing this:\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<ge>(r - \\<langle>cs,xs\\<rangle> + 1) / c.\n       R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "using Eq Cons"], ["proof (prove)\nusing this:\n  0 < c\n  a = Eq r cs__\n  cs__ = c # cs\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<ge>(r - \\<langle>cs,xs\\<rangle> + 1) / c.\n       R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "by(auto simp add: field_simps)"], ["proof (state)\nthis:\n  \\<forall>y\\<ge>(r - \\<langle>cs,xs\\<rangle> + 1) / c.\n     R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "hence ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>y\\<ge>(r - \\<langle>cs,xs\\<rangle> + 1) / c.\n     R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", ".."], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "}"], ["proof (state)\nthis:\n  0 < c \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       cs__ = aa # list \\<Longrightarrow>\n       \\<exists>x.\n          \\<forall>y\\<ge>x.\n             R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "ultimately"], ["proof (chain)\npicking this:\n  c = 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n  c < 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n  0 < c \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  c = 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n  c < 0 \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n  0 < c \\<Longrightarrow>\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)", "by force"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ (Atom a)) xs = R.I (Atom a) (y # xs)\n\ngoal (6 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs);\n        nqfree (And f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (And f1 f2)) xs =\n                               R.I (And f1 f2) (y # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 6. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs);\n        nqfree (And f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (And f1 f2)) xs =\n                               R.I (And f1 f2) (y # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 6. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "case (And f1 f2)"], ["proof (state)\nthis:\n  nqfree f1 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs)\n  nqfree f2 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs)\n  nqfree (And f1 f2)\n\ngoal (6 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs);\n        nqfree (And f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (And f1 f2)) xs =\n                               R.I (And f1 f2) (y # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 6. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "then"], ["proof (chain)\npicking this:\n  nqfree f1 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs)\n  nqfree f2 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs)\n  nqfree (And f1 f2)", "obtain x1 x2 where \"?P f1 x1\" \"?P f2 x2\""], ["proof (prove)\nusing this:\n  nqfree f1 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs)\n  nqfree f2 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs)\n  nqfree (And f1 f2)\n\ngoal (1 subgoal):\n 1. (\\<And>x1 x2.\n        \\<lbrakk>\\<forall>y\\<ge>x1.\n                    R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n         \\<forall>y\\<ge>x2.\n            R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce+"], ["proof (state)\nthis:\n  \\<forall>y\\<ge>x1. R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs)\n  \\<forall>y\\<ge>x2. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs)\n\ngoal (6 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs);\n        nqfree (And f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (And f1 f2)) xs =\n                               R.I (And f1 f2) (y # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 6. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "hence \"?P (And f1 f2) (max x1 x2)\""], ["proof (prove)\nusing this:\n  \\<forall>y\\<ge>x1. R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs)\n  \\<forall>y\\<ge>x2. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs)\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<ge>max x1 x2.\n       R.I (inf\\<^sub>+ (And f1 f2)) xs = R.I (And f1 f2) (y # xs)", "by(force simp:and_def)"], ["proof (state)\nthis:\n  \\<forall>y\\<ge>max x1 x2.\n     R.I (inf\\<^sub>+ (And f1 f2)) xs = R.I (And f1 f2) (y # xs)\n\ngoal (6 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs);\n        nqfree (And f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (And f1 f2)) xs =\n                               R.I (And f1 f2) (y # xs)\n 4. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 6. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>y\\<ge>max x1 x2.\n     R.I (inf\\<^sub>+ (And f1 f2)) xs = R.I (And f1 f2) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (And f1 f2)) xs = R.I (And f1 f2) (y # xs)", ".."], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<ge>x.\n        R.I (inf\\<^sub>+ (And f1 f2)) xs = R.I (And f1 f2) (y # xs)\n\ngoal (5 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 4. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 4. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "case (Or f1 f2)"], ["proof (state)\nthis:\n  nqfree f1 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs)\n  nqfree f2 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs)\n  nqfree (Or f1 f2)\n\ngoal (5 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 4. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "then"], ["proof (chain)\npicking this:\n  nqfree f1 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs)\n  nqfree f2 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs)\n  nqfree (Or f1 f2)", "obtain x1 x2 where \"?P f1 x1\" \"?P f2 x2\""], ["proof (prove)\nusing this:\n  nqfree f1 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs)\n  nqfree f2 \\<Longrightarrow>\n  \\<exists>x. \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs)\n  nqfree (Or f1 f2)\n\ngoal (1 subgoal):\n 1. (\\<And>x1 x2.\n        \\<lbrakk>\\<forall>y\\<ge>x1.\n                    R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n         \\<forall>y\\<ge>x2.\n            R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce+"], ["proof (state)\nthis:\n  \\<forall>y\\<ge>x1. R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs)\n  \\<forall>y\\<ge>x2. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs)\n\ngoal (5 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 4. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "hence \"?P (Or f1 f2) (max x1 x2)\""], ["proof (prove)\nusing this:\n  \\<forall>y\\<ge>x1. R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs)\n  \\<forall>y\\<ge>x2. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs)\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<ge>max x1 x2.\n       R.I (inf\\<^sub>+ (Or f1 f2)) xs = R.I (Or f1 f2) (y # xs)", "by(force simp:or_def)"], ["proof (state)\nthis:\n  \\<forall>y\\<ge>max x1 x2.\n     R.I (inf\\<^sub>+ (Or f1 f2)) xs = R.I (Or f1 f2) (y # xs)\n\ngoal (5 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f1 f2.\n       \\<lbrakk>nqfree f1 \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f1) xs = R.I f1 (y # xs);\n        nqfree f2 \\<Longrightarrow>\n        \\<exists>x.\n           \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ f2) xs = R.I f2 (y # xs);\n        nqfree (Or f1 f2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Or f1 f2)) xs =\n                               R.I (Or f1 f2) (y # xs)\n 4. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 5. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>y\\<ge>max x1 x2.\n     R.I (inf\\<^sub>+ (Or f1 f2)) xs = R.I (Or f1 f2) (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>y\\<ge>x.\n          R.I (inf\\<^sub>+ (Or f1 f2)) xs = R.I (Or f1 f2) (y # xs)", ".."], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>y\\<ge>x.\n        R.I (inf\\<^sub>+ (Or f1 f2)) xs = R.I (Or f1 f2) (y # xs)\n\ngoal (4 subgoals):\n 1. nqfree TrueF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ TrueF) xs = R.I TrueF (y # xs)\n 2. nqfree FalseF \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>y\\<ge>x. R.I (inf\\<^sub>+ FalseF) xs = R.I FalseF (y # xs)\n 3. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (Neg f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (Neg f)) xs =\n                               R.I (Neg f) (y # xs)\n 4. \\<And>f.\n       \\<lbrakk>nqfree f \\<Longrightarrow>\n                \\<exists>x.\n                   \\<forall>y\\<ge>x.\n                      R.I (inf\\<^sub>+ f) xs = R.I f (y # xs);\n        nqfree (ExQ f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<forall>y\\<ge>x.\n                               R.I (inf\\<^sub>+ (ExQ f)) xs =\n                               R.I (ExQ f) (y # xs)", "qed simp_all"], ["", "context notes [[simp_depth_limit = 4]]\nbegin"], ["", "lemma LBex:\n \"\\<lbrakk> nqfree f; R.I f (x#xs); \\<not>R.I (inf\\<^sub>- f) xs; x \\<notin> EQ f xs \\<rbrakk>\n  \\<Longrightarrow> \\<exists>l\\<in> LB f xs. l < x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nqfree f; R.I f (x # xs); \\<not> R.I (inf\\<^sub>- f) xs;\n     x \\<notin> EQ f xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c\ncs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}.\n                         l < x", "apply(induct f)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrakk>nqfree TrueF; R.I TrueF (x # xs);\n     \\<not> R.I (inf\\<^sub>- TrueF) xs; x \\<notin> EQ TrueF xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c\ncs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 TrueF) \\<and> 0 < c}.\n                         l < x\n 2. \\<lbrakk>nqfree FalseF; R.I FalseF (x # xs);\n     \\<not> R.I (inf\\<^sub>- FalseF) xs; x \\<notin> EQ FalseF xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c\ncs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 FalseF) \\<and> 0 < c}.\n                         l < x\n 3. \\<And>xa.\n       \\<lbrakk>nqfree (Atom xa); R.I (Atom xa) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (Atom xa)) xs;\n        x \\<notin> EQ (Atom xa) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs.\n   Less r (c # cs) \\<in> set (atoms\\<^sub>0 (Atom xa)) \\<and> 0 < c}.\n                            l < x\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; R.I f1 (x # xs);\n                 \\<not> R.I (inf\\<^sub>- f1) xs;\n                 x \\<notin> EQ f1 xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l\n     \\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f1) \\<and> 0 < c}.\n                                     l < x;\n        \\<lbrakk>nqfree f2; R.I f2 (x # xs); \\<not> R.I (inf\\<^sub>- f2) xs;\n         x \\<notin> EQ f2 xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) /\n    c |\n    r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<and> 0 < c}.\n                             l < x;\n        nqfree (And f1 f2); R.I (And f1 f2) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (And f1 f2)) xs;\n        x \\<notin> EQ (And f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs.\n   Less r (c # cs) \\<in> set (atoms\\<^sub>0 (And f1 f2)) \\<and> 0 < c}.\n                            l < x\n 5. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; R.I f1 (x # xs);\n                 \\<not> R.I (inf\\<^sub>- f1) xs;\n                 x \\<notin> EQ f1 xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l\n     \\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f1) \\<and> 0 < c}.\n                                     l < x;\n        \\<lbrakk>nqfree f2; R.I f2 (x # xs); \\<not> R.I (inf\\<^sub>- f2) xs;\n         x \\<notin> EQ f2 xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) /\n    c |\n    r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<and> 0 < c}.\n                             l < x;\n        nqfree (Or f1 f2); R.I (Or f1 f2) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (Or f1 f2)) xs;\n        x \\<notin> EQ (Or f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs.\n   Less r (c # cs) \\<in> set (atoms\\<^sub>0 (Or f1 f2)) \\<and> 0 < c}.\n                            l < x\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I f (x # xs);\n                 \\<not> R.I (inf\\<^sub>- f) xs; x \\<notin> EQ f xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l\n     \\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}.\n                                     l < x;\n        nqfree (Neg f); R.I (Neg f) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (Neg f)) xs;\n        x \\<notin> EQ (Neg f) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 (Neg f)) \\<and> 0 < c}.\n                            l < x\n 7. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I f (x # xs);\n                 \\<not> R.I (inf\\<^sub>- f) xs; x \\<notin> EQ f xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l\n     \\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}.\n                                     l < x;\n        nqfree (ExQ f); R.I (ExQ f) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (ExQ f)) xs;\n        x \\<notin> EQ (ExQ f) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 (ExQ f)) \\<and> 0 < c}.\n                            l < x", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>nqfree FalseF; R.I FalseF (x # xs);\n     \\<not> R.I (inf\\<^sub>- FalseF) xs; x \\<notin> EQ FalseF xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c\ncs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 FalseF) \\<and> 0 < c}.\n                         l < x\n 2. \\<And>xa.\n       \\<lbrakk>nqfree (Atom xa); R.I (Atom xa) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (Atom xa)) xs;\n        x \\<notin> EQ (Atom xa) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs.\n   Less r (c # cs) \\<in> set (atoms\\<^sub>0 (Atom xa)) \\<and> 0 < c}.\n                            l < x\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; R.I f1 (x # xs);\n                 \\<not> R.I (inf\\<^sub>- f1) xs;\n                 x \\<notin> EQ f1 xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l\n     \\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f1) \\<and> 0 < c}.\n                                     l < x;\n        \\<lbrakk>nqfree f2; R.I f2 (x # xs); \\<not> R.I (inf\\<^sub>- f2) xs;\n         x \\<notin> EQ f2 xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) /\n    c |\n    r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<and> 0 < c}.\n                             l < x;\n        nqfree (And f1 f2); R.I (And f1 f2) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (And f1 f2)) xs;\n        x \\<notin> EQ (And f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs.\n   Less r (c # cs) \\<in> set (atoms\\<^sub>0 (And f1 f2)) \\<and> 0 < c}.\n                            l < x\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; R.I f1 (x # xs);\n                 \\<not> R.I (inf\\<^sub>- f1) xs;\n                 x \\<notin> EQ f1 xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l\n     \\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f1) \\<and> 0 < c}.\n                                     l < x;\n        \\<lbrakk>nqfree f2; R.I f2 (x # xs); \\<not> R.I (inf\\<^sub>- f2) xs;\n         x \\<notin> EQ f2 xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) /\n    c |\n    r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<and> 0 < c}.\n                             l < x;\n        nqfree (Or f1 f2); R.I (Or f1 f2) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (Or f1 f2)) xs;\n        x \\<notin> EQ (Or f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs.\n   Less r (c # cs) \\<in> set (atoms\\<^sub>0 (Or f1 f2)) \\<and> 0 < c}.\n                            l < x\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I f (x # xs);\n                 \\<not> R.I (inf\\<^sub>- f) xs; x \\<notin> EQ f xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l\n     \\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}.\n                                     l < x;\n        nqfree (Neg f); R.I (Neg f) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (Neg f)) xs;\n        x \\<notin> EQ (Neg f) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 (Neg f)) \\<and> 0 < c}.\n                            l < x\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I f (x # xs);\n                 \\<not> R.I (inf\\<^sub>- f) xs; x \\<notin> EQ f xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l\n     \\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}.\n                                     l < x;\n        nqfree (ExQ f); R.I (ExQ f) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (ExQ f)) xs;\n        x \\<notin> EQ (ExQ f) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 (ExQ f)) \\<and> 0 < c}.\n                            l < x", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>nqfree (Atom xa); R.I (Atom xa) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (Atom xa)) xs;\n        x \\<notin> EQ (Atom xa) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs.\n   Less r (c # cs) \\<in> set (atoms\\<^sub>0 (Atom xa)) \\<and> 0 < c}.\n                            l < x\n 2. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; R.I f1 (x # xs);\n                 \\<not> R.I (inf\\<^sub>- f1) xs;\n                 x \\<notin> EQ f1 xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l\n     \\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f1) \\<and> 0 < c}.\n                                     l < x;\n        \\<lbrakk>nqfree f2; R.I f2 (x # xs); \\<not> R.I (inf\\<^sub>- f2) xs;\n         x \\<notin> EQ f2 xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) /\n    c |\n    r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<and> 0 < c}.\n                             l < x;\n        nqfree (And f1 f2); R.I (And f1 f2) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (And f1 f2)) xs;\n        x \\<notin> EQ (And f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs.\n   Less r (c # cs) \\<in> set (atoms\\<^sub>0 (And f1 f2)) \\<and> 0 < c}.\n                            l < x\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; R.I f1 (x # xs);\n                 \\<not> R.I (inf\\<^sub>- f1) xs;\n                 x \\<notin> EQ f1 xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l\n     \\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f1) \\<and> 0 < c}.\n                                     l < x;\n        \\<lbrakk>nqfree f2; R.I f2 (x # xs); \\<not> R.I (inf\\<^sub>- f2) xs;\n         x \\<notin> EQ f2 xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) /\n    c |\n    r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<and> 0 < c}.\n                             l < x;\n        nqfree (Or f1 f2); R.I (Or f1 f2) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (Or f1 f2)) xs;\n        x \\<notin> EQ (Or f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs.\n   Less r (c # cs) \\<in> set (atoms\\<^sub>0 (Or f1 f2)) \\<and> 0 < c}.\n                            l < x\n 4. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I f (x # xs);\n                 \\<not> R.I (inf\\<^sub>- f) xs; x \\<notin> EQ f xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l\n     \\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}.\n                                     l < x;\n        nqfree (Neg f); R.I (Neg f) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (Neg f)) xs;\n        x \\<notin> EQ (Neg f) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 (Neg f)) \\<and> 0 < c}.\n                            l < x\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I f (x # xs);\n                 \\<not> R.I (inf\\<^sub>- f) xs; x \\<notin> EQ f xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l\n     \\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}.\n                                     l < x;\n        nqfree (ExQ f); R.I (ExQ f) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (ExQ f)) xs;\n        x \\<notin> EQ (ExQ f) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 (ExQ f)) \\<and> 0 < c}.\n                            l < x", "apply(rename_tac a)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>nqfree (Atom a); R.I (Atom a) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (Atom a)) xs;\n        x \\<notin> EQ (Atom a) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 (Atom a)) \\<and> 0 < c}.\n                            l < x\n 2. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; R.I f1 (x # xs);\n                 \\<not> R.I (inf\\<^sub>- f1) xs;\n                 x \\<notin> EQ f1 xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l\n     \\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f1) \\<and> 0 < c}.\n                                     l < x;\n        \\<lbrakk>nqfree f2; R.I f2 (x # xs); \\<not> R.I (inf\\<^sub>- f2) xs;\n         x \\<notin> EQ f2 xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) /\n    c |\n    r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<and> 0 < c}.\n                             l < x;\n        nqfree (And f1 f2); R.I (And f1 f2) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (And f1 f2)) xs;\n        x \\<notin> EQ (And f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs.\n   Less r (c # cs) \\<in> set (atoms\\<^sub>0 (And f1 f2)) \\<and> 0 < c}.\n                            l < x\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; R.I f1 (x # xs);\n                 \\<not> R.I (inf\\<^sub>- f1) xs;\n                 x \\<notin> EQ f1 xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l\n     \\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f1) \\<and> 0 < c}.\n                                     l < x;\n        \\<lbrakk>nqfree f2; R.I f2 (x # xs); \\<not> R.I (inf\\<^sub>- f2) xs;\n         x \\<notin> EQ f2 xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) /\n    c |\n    r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<and> 0 < c}.\n                             l < x;\n        nqfree (Or f1 f2); R.I (Or f1 f2) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (Or f1 f2)) xs;\n        x \\<notin> EQ (Or f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs.\n   Less r (c # cs) \\<in> set (atoms\\<^sub>0 (Or f1 f2)) \\<and> 0 < c}.\n                            l < x\n 4. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I f (x # xs);\n                 \\<not> R.I (inf\\<^sub>- f) xs; x \\<notin> EQ f xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l\n     \\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}.\n                                     l < x;\n        nqfree (Neg f); R.I (Neg f) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (Neg f)) xs;\n        x \\<notin> EQ (Neg f) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 (Neg f)) \\<and> 0 < c}.\n                            l < x\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I f (x # xs);\n                 \\<not> R.I (inf\\<^sub>- f) xs; x \\<notin> EQ f xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l\n     \\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}.\n                                     l < x;\n        nqfree (ExQ f); R.I (ExQ f) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (ExQ f)) xs;\n        x \\<notin> EQ (ExQ f) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 (ExQ f)) \\<and> 0 < c}.\n                            l < x", "apply(case_tac a)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a x11 x12.\n       \\<lbrakk>nqfree (Atom a); R.I (Atom a) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (Atom a)) xs; x \\<notin> EQ (Atom a) xs;\n        a = Less x11 x12\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 (Atom a)) \\<and> 0 < c}.\n                            l < x\n 2. \\<And>a x21 x22.\n       \\<lbrakk>nqfree (Atom a); R.I (Atom a) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (Atom a)) xs; x \\<notin> EQ (Atom a) xs;\n        a = Eq x21 x22\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 (Atom a)) \\<and> 0 < c}.\n                            l < x\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; R.I f1 (x # xs);\n                 \\<not> R.I (inf\\<^sub>- f1) xs;\n                 x \\<notin> EQ f1 xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l\n     \\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f1) \\<and> 0 < c}.\n                                     l < x;\n        \\<lbrakk>nqfree f2; R.I f2 (x # xs); \\<not> R.I (inf\\<^sub>- f2) xs;\n         x \\<notin> EQ f2 xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) /\n    c |\n    r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<and> 0 < c}.\n                             l < x;\n        nqfree (And f1 f2); R.I (And f1 f2) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (And f1 f2)) xs;\n        x \\<notin> EQ (And f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs.\n   Less r (c # cs) \\<in> set (atoms\\<^sub>0 (And f1 f2)) \\<and> 0 < c}.\n                            l < x\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; R.I f1 (x # xs);\n                 \\<not> R.I (inf\\<^sub>- f1) xs;\n                 x \\<notin> EQ f1 xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l\n     \\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f1) \\<and> 0 < c}.\n                                     l < x;\n        \\<lbrakk>nqfree f2; R.I f2 (x # xs); \\<not> R.I (inf\\<^sub>- f2) xs;\n         x \\<notin> EQ f2 xs\\<rbrakk>\n        \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) /\n    c |\n    r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<and> 0 < c}.\n                             l < x;\n        nqfree (Or f1 f2); R.I (Or f1 f2) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (Or f1 f2)) xs;\n        x \\<notin> EQ (Or f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs.\n   Less r (c # cs) \\<in> set (atoms\\<^sub>0 (Or f1 f2)) \\<and> 0 < c}.\n                            l < x\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I f (x # xs);\n                 \\<not> R.I (inf\\<^sub>- f) xs; x \\<notin> EQ f xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l\n     \\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}.\n                                     l < x;\n        nqfree (Neg f); R.I (Neg f) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (Neg f)) xs;\n        x \\<notin> EQ (Neg f) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 (Neg f)) \\<and> 0 < c}.\n                            l < x\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I f (x # xs);\n                 \\<not> R.I (inf\\<^sub>- f) xs; x \\<notin> EQ f xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l\n     \\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n           Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}.\n                                     l < x;\n        nqfree (ExQ f); R.I (ExQ f) (x # xs);\n        \\<not> R.I (inf\\<^sub>- (ExQ f)) xs;\n        x \\<notin> EQ (ExQ f) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>{(r - \\<langle>cs,xs\\<rangle>) / c |\n   r c cs. Less r (c # cs) \\<in> set (atoms\\<^sub>0 (ExQ f)) \\<and> 0 < c}.\n                            l < x", "apply(auto simp add: depends\\<^sub>R_def field_simps split:if_splits list.splits)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>f1 f2.\n       \\<lbrakk>\\<forall>r c cs.\n                   Eq r (c # cs)\n                   \\<in> set (atoms\\<^sub>0 f1) \\<longrightarrow>\n                   x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n                   c = 0 \\<Longrightarrow>\n                \\<exists>l.\n                   (\\<exists>r c cs.\n                       l = (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n                       Less r (c # cs) \\<in> set (atoms\\<^sub>0 f1) \\<and>\n                       0 < c) \\<and>\n                   l < x;\n        \\<lbrakk>\\<not> R.I (inf\\<^sub>- f2) xs;\n         \\<forall>r c cs.\n            Eq r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<longrightarrow>\n            x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n            c = 0\\<rbrakk>\n        \\<Longrightarrow> \\<exists>l.\n                             (\\<exists>r c cs.\n                                 l =\n                                 (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n                                 Less r (c # cs)\n                                 \\<in> set (atoms\\<^sub>0 f2) \\<and>\n                                 0 < c) \\<and>\n                             l < x;\n        \\<forall>r c cs.\n           x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n           Eq r (c # cs) \\<notin> set (atoms\\<^sub>0 f1) \\<and>\n           Eq r (c # cs) \\<notin> set (atoms\\<^sub>0 f2) \\<or>\n           c = 0;\n        nqfree f1; nqfree f2; R.I f1 (x # xs); R.I f2 (x # xs);\n        \\<not> R.I (inf\\<^sub>- f1) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l.\n                            (\\<exists>r c cs.\n                                l = (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n                                (Less r (c # cs)\n                                 \\<in> set (atoms\\<^sub>0 f1) \\<or>\n                                 Less r (c # cs)\n                                 \\<in> set (atoms\\<^sub>0 f2)) \\<and>\n                                0 < c) \\<and>\n                            l < x\n 2. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>\\<not> R.I (inf\\<^sub>- f1) xs;\n                 \\<forall>r c cs.\n                    Eq r (c # cs)\n                    \\<in> set (atoms\\<^sub>0 f1) \\<longrightarrow>\n                    x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n                    c = 0\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l.\n                                     (\\<exists>r c cs.\n   l = (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n   Less r (c # cs) \\<in> set (atoms\\<^sub>0 f1) \\<and> 0 < c) \\<and>\n                                     l < x;\n        \\<forall>r c cs.\n           Eq r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<longrightarrow>\n           x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n           c = 0 \\<Longrightarrow>\n        \\<exists>l.\n           (\\<exists>r c cs.\n               l = (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n               Less r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<and>\n               0 < c) \\<and>\n           l < x;\n        \\<forall>r c cs.\n           x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n           Eq r (c # cs) \\<notin> set (atoms\\<^sub>0 f1) \\<and>\n           Eq r (c # cs) \\<notin> set (atoms\\<^sub>0 f2) \\<or>\n           c = 0;\n        nqfree f1; nqfree f2; R.I f1 (x # xs); R.I f2 (x # xs);\n        \\<not> R.I (inf\\<^sub>- f2) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l.\n                            (\\<exists>r c cs.\n                                l = (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n                                (Less r (c # cs)\n                                 \\<in> set (atoms\\<^sub>0 f1) \\<or>\n                                 Less r (c # cs)\n                                 \\<in> set (atoms\\<^sub>0 f2)) \\<and>\n                                0 < c) \\<and>\n                            l < x\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<forall>r c cs.\n                   Eq r (c # cs)\n                   \\<in> set (atoms\\<^sub>0 f1) \\<longrightarrow>\n                   x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n                   c = 0 \\<Longrightarrow>\n                \\<exists>l.\n                   (\\<exists>r c cs.\n                       l = (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n                       Less r (c # cs) \\<in> set (atoms\\<^sub>0 f1) \\<and>\n                       0 < c) \\<and>\n                   l < x;\n        \\<lbrakk>R.I f2 (x # xs);\n         \\<forall>r c cs.\n            Eq r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<longrightarrow>\n            x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n            c = 0\\<rbrakk>\n        \\<Longrightarrow> \\<exists>l.\n                             (\\<exists>r c cs.\n                                 l =\n                                 (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n                                 Less r (c # cs)\n                                 \\<in> set (atoms\\<^sub>0 f2) \\<and>\n                                 0 < c) \\<and>\n                             l < x;\n        \\<forall>r c cs.\n           x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n           Eq r (c # cs) \\<notin> set (atoms\\<^sub>0 f1) \\<and>\n           Eq r (c # cs) \\<notin> set (atoms\\<^sub>0 f2) \\<or>\n           c = 0;\n        nqfree f1; nqfree f2; \\<not> R.I (inf\\<^sub>- f1) xs;\n        \\<not> R.I (inf\\<^sub>- f2) xs; R.I f1 (x # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l.\n                            (\\<exists>r c cs.\n                                l = (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n                                (Less r (c # cs)\n                                 \\<in> set (atoms\\<^sub>0 f1) \\<or>\n                                 Less r (c # cs)\n                                 \\<in> set (atoms\\<^sub>0 f2)) \\<and>\n                                0 < c) \\<and>\n                            l < x\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>R.I f1 (x # xs);\n                 \\<forall>r c cs.\n                    Eq r (c # cs)\n                    \\<in> set (atoms\\<^sub>0 f1) \\<longrightarrow>\n                    x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n                    c = 0\\<rbrakk>\n                \\<Longrightarrow> \\<exists>l.\n                                     (\\<exists>r c cs.\n   l = (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n   Less r (c # cs) \\<in> set (atoms\\<^sub>0 f1) \\<and> 0 < c) \\<and>\n                                     l < x;\n        \\<forall>r c cs.\n           Eq r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<longrightarrow>\n           x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n           c = 0 \\<Longrightarrow>\n        \\<exists>l.\n           (\\<exists>r c cs.\n               l = (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n               Less r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<and>\n               0 < c) \\<and>\n           l < x;\n        \\<forall>r c cs.\n           x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n           Eq r (c # cs) \\<notin> set (atoms\\<^sub>0 f1) \\<and>\n           Eq r (c # cs) \\<notin> set (atoms\\<^sub>0 f2) \\<or>\n           c = 0;\n        nqfree f1; nqfree f2; \\<not> R.I (inf\\<^sub>- f1) xs;\n        \\<not> R.I (inf\\<^sub>- f2) xs; R.I f2 (x # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l.\n                            (\\<exists>r c cs.\n                                l = (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n                                (Less r (c # cs)\n                                 \\<in> set (atoms\\<^sub>0 f1) \\<or>\n                                 Less r (c # cs)\n                                 \\<in> set (atoms\\<^sub>0 f2)) \\<and>\n                                0 < c) \\<and>\n                            l < x", "apply fastforce+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma UBex:\n \"\\<lbrakk> nqfree f; R.I f (x#xs); \\<not>R.I (inf\\<^sub>+ f) xs; x \\<notin> EQ f xs \\<rbrakk>\n  \\<Longrightarrow> \\<exists>u\\<in> UB f xs. x < u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nqfree f; R.I f (x # xs); \\<not> R.I (inf\\<^sub>+ f) xs;\n     x \\<notin> EQ f xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u\\<in>UB f xs. x < u", "apply(induct f)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrakk>nqfree TrueF; R.I TrueF (x # xs);\n     \\<not> R.I (inf\\<^sub>+ TrueF) xs; x \\<notin> EQ TrueF xs\\<rbrakk>\n    \\<Longrightarrow> Bex (UB TrueF xs) ((<) x)\n 2. \\<lbrakk>nqfree FalseF; R.I FalseF (x # xs);\n     \\<not> R.I (inf\\<^sub>+ FalseF) xs; x \\<notin> EQ FalseF xs\\<rbrakk>\n    \\<Longrightarrow> Bex (UB FalseF xs) ((<) x)\n 3. \\<And>xa.\n       \\<lbrakk>nqfree (Atom xa); R.I (Atom xa) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (Atom xa)) xs;\n        x \\<notin> EQ (Atom xa) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (Atom xa) xs) ((<) x)\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; R.I f1 (x # xs);\n                 \\<not> R.I (inf\\<^sub>+ f1) xs;\n                 x \\<notin> EQ f1 xs\\<rbrakk>\n                \\<Longrightarrow> Bex (UB f1 xs) ((<) x);\n        \\<lbrakk>nqfree f2; R.I f2 (x # xs); \\<not> R.I (inf\\<^sub>+ f2) xs;\n         x \\<notin> EQ f2 xs\\<rbrakk>\n        \\<Longrightarrow> Bex (UB f2 xs) ((<) x);\n        nqfree (And f1 f2); R.I (And f1 f2) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (And f1 f2)) xs;\n        x \\<notin> EQ (And f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (And f1 f2) xs) ((<) x)\n 5. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; R.I f1 (x # xs);\n                 \\<not> R.I (inf\\<^sub>+ f1) xs;\n                 x \\<notin> EQ f1 xs\\<rbrakk>\n                \\<Longrightarrow> Bex (UB f1 xs) ((<) x);\n        \\<lbrakk>nqfree f2; R.I f2 (x # xs); \\<not> R.I (inf\\<^sub>+ f2) xs;\n         x \\<notin> EQ f2 xs\\<rbrakk>\n        \\<Longrightarrow> Bex (UB f2 xs) ((<) x);\n        nqfree (Or f1 f2); R.I (Or f1 f2) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (Or f1 f2)) xs;\n        x \\<notin> EQ (Or f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (Or f1 f2) xs) ((<) x)\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I f (x # xs);\n                 \\<not> R.I (inf\\<^sub>+ f) xs; x \\<notin> EQ f xs\\<rbrakk>\n                \\<Longrightarrow> Bex (UB f xs) ((<) x);\n        nqfree (Neg f); R.I (Neg f) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (Neg f)) xs;\n        x \\<notin> EQ (Neg f) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (Neg f) xs) ((<) x)\n 7. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I f (x # xs);\n                 \\<not> R.I (inf\\<^sub>+ f) xs; x \\<notin> EQ f xs\\<rbrakk>\n                \\<Longrightarrow> Bex (UB f xs) ((<) x);\n        nqfree (ExQ f); R.I (ExQ f) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (ExQ f)) xs;\n        x \\<notin> EQ (ExQ f) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (ExQ f) xs) ((<) x)", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>nqfree FalseF; R.I FalseF (x # xs);\n     \\<not> R.I (inf\\<^sub>+ FalseF) xs; x \\<notin> EQ FalseF xs\\<rbrakk>\n    \\<Longrightarrow> Bex (UB FalseF xs) ((<) x)\n 2. \\<And>xa.\n       \\<lbrakk>nqfree (Atom xa); R.I (Atom xa) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (Atom xa)) xs;\n        x \\<notin> EQ (Atom xa) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (Atom xa) xs) ((<) x)\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; R.I f1 (x # xs);\n                 \\<not> R.I (inf\\<^sub>+ f1) xs;\n                 x \\<notin> EQ f1 xs\\<rbrakk>\n                \\<Longrightarrow> Bex (UB f1 xs) ((<) x);\n        \\<lbrakk>nqfree f2; R.I f2 (x # xs); \\<not> R.I (inf\\<^sub>+ f2) xs;\n         x \\<notin> EQ f2 xs\\<rbrakk>\n        \\<Longrightarrow> Bex (UB f2 xs) ((<) x);\n        nqfree (And f1 f2); R.I (And f1 f2) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (And f1 f2)) xs;\n        x \\<notin> EQ (And f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (And f1 f2) xs) ((<) x)\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; R.I f1 (x # xs);\n                 \\<not> R.I (inf\\<^sub>+ f1) xs;\n                 x \\<notin> EQ f1 xs\\<rbrakk>\n                \\<Longrightarrow> Bex (UB f1 xs) ((<) x);\n        \\<lbrakk>nqfree f2; R.I f2 (x # xs); \\<not> R.I (inf\\<^sub>+ f2) xs;\n         x \\<notin> EQ f2 xs\\<rbrakk>\n        \\<Longrightarrow> Bex (UB f2 xs) ((<) x);\n        nqfree (Or f1 f2); R.I (Or f1 f2) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (Or f1 f2)) xs;\n        x \\<notin> EQ (Or f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (Or f1 f2) xs) ((<) x)\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I f (x # xs);\n                 \\<not> R.I (inf\\<^sub>+ f) xs; x \\<notin> EQ f xs\\<rbrakk>\n                \\<Longrightarrow> Bex (UB f xs) ((<) x);\n        nqfree (Neg f); R.I (Neg f) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (Neg f)) xs;\n        x \\<notin> EQ (Neg f) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (Neg f) xs) ((<) x)\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I f (x # xs);\n                 \\<not> R.I (inf\\<^sub>+ f) xs; x \\<notin> EQ f xs\\<rbrakk>\n                \\<Longrightarrow> Bex (UB f xs) ((<) x);\n        nqfree (ExQ f); R.I (ExQ f) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (ExQ f)) xs;\n        x \\<notin> EQ (ExQ f) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (ExQ f) xs) ((<) x)", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>nqfree (Atom xa); R.I (Atom xa) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (Atom xa)) xs;\n        x \\<notin> EQ (Atom xa) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (Atom xa) xs) ((<) x)\n 2. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; R.I f1 (x # xs);\n                 \\<not> R.I (inf\\<^sub>+ f1) xs;\n                 x \\<notin> EQ f1 xs\\<rbrakk>\n                \\<Longrightarrow> Bex (UB f1 xs) ((<) x);\n        \\<lbrakk>nqfree f2; R.I f2 (x # xs); \\<not> R.I (inf\\<^sub>+ f2) xs;\n         x \\<notin> EQ f2 xs\\<rbrakk>\n        \\<Longrightarrow> Bex (UB f2 xs) ((<) x);\n        nqfree (And f1 f2); R.I (And f1 f2) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (And f1 f2)) xs;\n        x \\<notin> EQ (And f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (And f1 f2) xs) ((<) x)\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; R.I f1 (x # xs);\n                 \\<not> R.I (inf\\<^sub>+ f1) xs;\n                 x \\<notin> EQ f1 xs\\<rbrakk>\n                \\<Longrightarrow> Bex (UB f1 xs) ((<) x);\n        \\<lbrakk>nqfree f2; R.I f2 (x # xs); \\<not> R.I (inf\\<^sub>+ f2) xs;\n         x \\<notin> EQ f2 xs\\<rbrakk>\n        \\<Longrightarrow> Bex (UB f2 xs) ((<) x);\n        nqfree (Or f1 f2); R.I (Or f1 f2) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (Or f1 f2)) xs;\n        x \\<notin> EQ (Or f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (Or f1 f2) xs) ((<) x)\n 4. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I f (x # xs);\n                 \\<not> R.I (inf\\<^sub>+ f) xs; x \\<notin> EQ f xs\\<rbrakk>\n                \\<Longrightarrow> Bex (UB f xs) ((<) x);\n        nqfree (Neg f); R.I (Neg f) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (Neg f)) xs;\n        x \\<notin> EQ (Neg f) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (Neg f) xs) ((<) x)\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I f (x # xs);\n                 \\<not> R.I (inf\\<^sub>+ f) xs; x \\<notin> EQ f xs\\<rbrakk>\n                \\<Longrightarrow> Bex (UB f xs) ((<) x);\n        nqfree (ExQ f); R.I (ExQ f) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (ExQ f)) xs;\n        x \\<notin> EQ (ExQ f) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (ExQ f) xs) ((<) x)", "apply(rename_tac a)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>nqfree (Atom a); R.I (Atom a) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (Atom a)) xs;\n        x \\<notin> EQ (Atom a) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (Atom a) xs) ((<) x)\n 2. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; R.I f1 (x # xs);\n                 \\<not> R.I (inf\\<^sub>+ f1) xs;\n                 x \\<notin> EQ f1 xs\\<rbrakk>\n                \\<Longrightarrow> Bex (UB f1 xs) ((<) x);\n        \\<lbrakk>nqfree f2; R.I f2 (x # xs); \\<not> R.I (inf\\<^sub>+ f2) xs;\n         x \\<notin> EQ f2 xs\\<rbrakk>\n        \\<Longrightarrow> Bex (UB f2 xs) ((<) x);\n        nqfree (And f1 f2); R.I (And f1 f2) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (And f1 f2)) xs;\n        x \\<notin> EQ (And f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (And f1 f2) xs) ((<) x)\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; R.I f1 (x # xs);\n                 \\<not> R.I (inf\\<^sub>+ f1) xs;\n                 x \\<notin> EQ f1 xs\\<rbrakk>\n                \\<Longrightarrow> Bex (UB f1 xs) ((<) x);\n        \\<lbrakk>nqfree f2; R.I f2 (x # xs); \\<not> R.I (inf\\<^sub>+ f2) xs;\n         x \\<notin> EQ f2 xs\\<rbrakk>\n        \\<Longrightarrow> Bex (UB f2 xs) ((<) x);\n        nqfree (Or f1 f2); R.I (Or f1 f2) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (Or f1 f2)) xs;\n        x \\<notin> EQ (Or f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (Or f1 f2) xs) ((<) x)\n 4. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I f (x # xs);\n                 \\<not> R.I (inf\\<^sub>+ f) xs; x \\<notin> EQ f xs\\<rbrakk>\n                \\<Longrightarrow> Bex (UB f xs) ((<) x);\n        nqfree (Neg f); R.I (Neg f) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (Neg f)) xs;\n        x \\<notin> EQ (Neg f) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (Neg f) xs) ((<) x)\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I f (x # xs);\n                 \\<not> R.I (inf\\<^sub>+ f) xs; x \\<notin> EQ f xs\\<rbrakk>\n                \\<Longrightarrow> Bex (UB f xs) ((<) x);\n        nqfree (ExQ f); R.I (ExQ f) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (ExQ f)) xs;\n        x \\<notin> EQ (ExQ f) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (ExQ f) xs) ((<) x)", "apply(case_tac a)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a x11 x12.\n       \\<lbrakk>nqfree (Atom a); R.I (Atom a) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (Atom a)) xs; x \\<notin> EQ (Atom a) xs;\n        a = Less x11 x12\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (Atom a) xs) ((<) x)\n 2. \\<And>a x21 x22.\n       \\<lbrakk>nqfree (Atom a); R.I (Atom a) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (Atom a)) xs; x \\<notin> EQ (Atom a) xs;\n        a = Eq x21 x22\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (Atom a) xs) ((<) x)\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; R.I f1 (x # xs);\n                 \\<not> R.I (inf\\<^sub>+ f1) xs;\n                 x \\<notin> EQ f1 xs\\<rbrakk>\n                \\<Longrightarrow> Bex (UB f1 xs) ((<) x);\n        \\<lbrakk>nqfree f2; R.I f2 (x # xs); \\<not> R.I (inf\\<^sub>+ f2) xs;\n         x \\<notin> EQ f2 xs\\<rbrakk>\n        \\<Longrightarrow> Bex (UB f2 xs) ((<) x);\n        nqfree (And f1 f2); R.I (And f1 f2) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (And f1 f2)) xs;\n        x \\<notin> EQ (And f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (And f1 f2) xs) ((<) x)\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>nqfree f1; R.I f1 (x # xs);\n                 \\<not> R.I (inf\\<^sub>+ f1) xs;\n                 x \\<notin> EQ f1 xs\\<rbrakk>\n                \\<Longrightarrow> Bex (UB f1 xs) ((<) x);\n        \\<lbrakk>nqfree f2; R.I f2 (x # xs); \\<not> R.I (inf\\<^sub>+ f2) xs;\n         x \\<notin> EQ f2 xs\\<rbrakk>\n        \\<Longrightarrow> Bex (UB f2 xs) ((<) x);\n        nqfree (Or f1 f2); R.I (Or f1 f2) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (Or f1 f2)) xs;\n        x \\<notin> EQ (Or f1 f2) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (Or f1 f2) xs) ((<) x)\n 5. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I f (x # xs);\n                 \\<not> R.I (inf\\<^sub>+ f) xs; x \\<notin> EQ f xs\\<rbrakk>\n                \\<Longrightarrow> Bex (UB f xs) ((<) x);\n        nqfree (Neg f); R.I (Neg f) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (Neg f)) xs;\n        x \\<notin> EQ (Neg f) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (Neg f) xs) ((<) x)\n 6. \\<And>f.\n       \\<lbrakk>\\<lbrakk>nqfree f; R.I f (x # xs);\n                 \\<not> R.I (inf\\<^sub>+ f) xs; x \\<notin> EQ f xs\\<rbrakk>\n                \\<Longrightarrow> Bex (UB f xs) ((<) x);\n        nqfree (ExQ f); R.I (ExQ f) (x # xs);\n        \\<not> R.I (inf\\<^sub>+ (ExQ f)) xs;\n        x \\<notin> EQ (ExQ f) xs\\<rbrakk>\n       \\<Longrightarrow> Bex (UB (ExQ f) xs) ((<) x)", "apply(auto simp add: depends\\<^sub>R_def field_simps split:if_splits list.splits)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>f1 f2.\n       \\<lbrakk>\\<forall>r c cs.\n                   Eq r (c # cs)\n                   \\<in> set (atoms\\<^sub>0 f1) \\<longrightarrow>\n                   x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n                   c = 0 \\<Longrightarrow>\n                \\<exists>xa.\n                   (\\<exists>r c cs.\n                       xa = (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n                       Less r (c # cs) \\<in> set (atoms\\<^sub>0 f1) \\<and>\n                       c < 0) \\<and>\n                   x < xa;\n        \\<lbrakk>\\<not> R.I (inf\\<^sub>+ f2) xs;\n         \\<forall>r c cs.\n            Eq r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<longrightarrow>\n            x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n            c = 0\\<rbrakk>\n        \\<Longrightarrow> \\<exists>xa.\n                             (\\<exists>r c cs.\n                                 xa =\n                                 (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n                                 Less r (c # cs)\n                                 \\<in> set (atoms\\<^sub>0 f2) \\<and>\n                                 c < 0) \\<and>\n                             x < xa;\n        \\<forall>r c cs.\n           x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n           Eq r (c # cs) \\<notin> set (atoms\\<^sub>0 f1) \\<and>\n           Eq r (c # cs) \\<notin> set (atoms\\<^sub>0 f2) \\<or>\n           c = 0;\n        nqfree f1; nqfree f2; R.I f1 (x # xs); R.I f2 (x # xs);\n        \\<not> R.I (inf\\<^sub>+ f1) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (\\<exists>r c cs.\n                                xa =\n                                (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n                                (Less r (c # cs)\n                                 \\<in> set (atoms\\<^sub>0 f1) \\<or>\n                                 Less r (c # cs)\n                                 \\<in> set (atoms\\<^sub>0 f2)) \\<and>\n                                c < 0) \\<and>\n                            x < xa\n 2. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>\\<not> R.I (inf\\<^sub>+ f1) xs;\n                 \\<forall>r c cs.\n                    Eq r (c # cs)\n                    \\<in> set (atoms\\<^sub>0 f1) \\<longrightarrow>\n                    x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n                    c = 0\\<rbrakk>\n                \\<Longrightarrow> \\<exists>xa.\n                                     (\\<exists>r c cs.\n   xa = (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n   Less r (c # cs) \\<in> set (atoms\\<^sub>0 f1) \\<and> c < 0) \\<and>\n                                     x < xa;\n        \\<forall>r c cs.\n           Eq r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<longrightarrow>\n           x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n           c = 0 \\<Longrightarrow>\n        \\<exists>xa.\n           (\\<exists>r c cs.\n               xa = (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n               Less r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<and>\n               c < 0) \\<and>\n           x < xa;\n        \\<forall>r c cs.\n           x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n           Eq r (c # cs) \\<notin> set (atoms\\<^sub>0 f1) \\<and>\n           Eq r (c # cs) \\<notin> set (atoms\\<^sub>0 f2) \\<or>\n           c = 0;\n        nqfree f1; nqfree f2; R.I f1 (x # xs); R.I f2 (x # xs);\n        \\<not> R.I (inf\\<^sub>+ f2) xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (\\<exists>r c cs.\n                                xa =\n                                (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n                                (Less r (c # cs)\n                                 \\<in> set (atoms\\<^sub>0 f1) \\<or>\n                                 Less r (c # cs)\n                                 \\<in> set (atoms\\<^sub>0 f2)) \\<and>\n                                c < 0) \\<and>\n                            x < xa\n 3. \\<And>f1 f2.\n       \\<lbrakk>\\<forall>r c cs.\n                   Eq r (c # cs)\n                   \\<in> set (atoms\\<^sub>0 f1) \\<longrightarrow>\n                   x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n                   c = 0 \\<Longrightarrow>\n                \\<exists>xa.\n                   (\\<exists>r c cs.\n                       xa = (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n                       Less r (c # cs) \\<in> set (atoms\\<^sub>0 f1) \\<and>\n                       c < 0) \\<and>\n                   x < xa;\n        \\<lbrakk>R.I f2 (x # xs);\n         \\<forall>r c cs.\n            Eq r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<longrightarrow>\n            x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n            c = 0\\<rbrakk>\n        \\<Longrightarrow> \\<exists>xa.\n                             (\\<exists>r c cs.\n                                 xa =\n                                 (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n                                 Less r (c # cs)\n                                 \\<in> set (atoms\\<^sub>0 f2) \\<and>\n                                 c < 0) \\<and>\n                             x < xa;\n        \\<forall>r c cs.\n           x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n           Eq r (c # cs) \\<notin> set (atoms\\<^sub>0 f1) \\<and>\n           Eq r (c # cs) \\<notin> set (atoms\\<^sub>0 f2) \\<or>\n           c = 0;\n        nqfree f1; nqfree f2; \\<not> R.I (inf\\<^sub>+ f1) xs;\n        \\<not> R.I (inf\\<^sub>+ f2) xs; R.I f1 (x # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (\\<exists>r c cs.\n                                xa =\n                                (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n                                (Less r (c # cs)\n                                 \\<in> set (atoms\\<^sub>0 f1) \\<or>\n                                 Less r (c # cs)\n                                 \\<in> set (atoms\\<^sub>0 f2)) \\<and>\n                                c < 0) \\<and>\n                            x < xa\n 4. \\<And>f1 f2.\n       \\<lbrakk>\\<lbrakk>R.I f1 (x # xs);\n                 \\<forall>r c cs.\n                    Eq r (c # cs)\n                    \\<in> set (atoms\\<^sub>0 f1) \\<longrightarrow>\n                    x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n                    c = 0\\<rbrakk>\n                \\<Longrightarrow> \\<exists>xa.\n                                     (\\<exists>r c cs.\n   xa = (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n   Less r (c # cs) \\<in> set (atoms\\<^sub>0 f1) \\<and> c < 0) \\<and>\n                                     x < xa;\n        \\<forall>r c cs.\n           Eq r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<longrightarrow>\n           x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n           c = 0 \\<Longrightarrow>\n        \\<exists>xa.\n           (\\<exists>r c cs.\n               xa = (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n               Less r (c # cs) \\<in> set (atoms\\<^sub>0 f2) \\<and>\n               c < 0) \\<and>\n           x < xa;\n        \\<forall>r c cs.\n           x = (r - \\<langle>cs,xs\\<rangle>) / c \\<longrightarrow>\n           Eq r (c # cs) \\<notin> set (atoms\\<^sub>0 f1) \\<and>\n           Eq r (c # cs) \\<notin> set (atoms\\<^sub>0 f2) \\<or>\n           c = 0;\n        nqfree f1; nqfree f2; \\<not> R.I (inf\\<^sub>+ f1) xs;\n        \\<not> R.I (inf\\<^sub>+ f2) xs; R.I f2 (x # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (\\<exists>r c cs.\n                                xa =\n                                (r - \\<langle>cs,xs\\<rangle>) / c \\<and>\n                                (Less r (c # cs)\n                                 \\<in> set (atoms\\<^sub>0 f1) \\<or>\n                                 Less r (c # cs)\n                                 \\<in> set (atoms\\<^sub>0 f2)) \\<and>\n                                c < 0) \\<and>\n                            x < xa", "apply fastforce+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "lemma finite_LB: \"finite(LB f xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n      Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n      Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}", "have \"LB f xs = (\\<lambda>(r,cs). r + \\<langle>cs,xs\\<rangle>) ` set(lbounds(R.atoms\\<^sub>0 f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n     Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c} =\n    (\\<lambda>(r, cs). r + \\<langle>cs,xs\\<rangle>) `\n    set (lbounds (atoms\\<^sub>0 f))", "by (force simp:set_lbounds image_def field_simps)"], ["proof (state)\nthis:\n  {(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n   Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c} =\n  (\\<lambda>(r, cs). r + \\<langle>cs,xs\\<rangle>) `\n  set (lbounds (atoms\\<^sub>0 f))\n\ngoal (1 subgoal):\n 1. finite\n     {(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n      Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}", "thus ?thesis"], ["proof (prove)\nusing this:\n  {(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n   Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c} =\n  (\\<lambda>(r, cs). r + \\<langle>cs,xs\\<rangle>) `\n  set (lbounds (atoms\\<^sub>0 f))\n\ngoal (1 subgoal):\n 1. finite\n     {(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n      Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}", "by simp"], ["proof (state)\nthis:\n  finite\n   {(r - \\<langle>cs,xs\\<rangle>) / c |r c cs.\n    Less r (c # cs) \\<in> set (atoms\\<^sub>0 f) \\<and> 0 < c}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finite_UB: \"finite(UB f xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (UB f xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (UB f xs)", "have \"UB f xs = (\\<lambda>(r,cs). r + \\<langle>cs,xs\\<rangle>) ` set(ubounds(R.atoms\\<^sub>0 f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UB f xs =\n    (\\<lambda>(r, cs). r + \\<langle>cs,xs\\<rangle>) `\n    set (ubounds (atoms\\<^sub>0 f))", "by (force simp:set_ubounds image_def field_simps)"], ["proof (state)\nthis:\n  UB f xs =\n  (\\<lambda>(r, cs). r + \\<langle>cs,xs\\<rangle>) `\n  set (ubounds (atoms\\<^sub>0 f))\n\ngoal (1 subgoal):\n 1. finite (UB f xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  UB f xs =\n  (\\<lambda>(r, cs). r + \\<langle>cs,xs\\<rangle>) `\n  set (ubounds (atoms\\<^sub>0 f))\n\ngoal (1 subgoal):\n 1. finite (UB f xs)", "by simp"], ["proof (state)\nthis:\n  finite (UB f xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}