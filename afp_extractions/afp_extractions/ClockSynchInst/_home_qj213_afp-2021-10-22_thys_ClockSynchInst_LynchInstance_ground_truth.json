{"file_name": "/home/qj213/afp-2021-10-22/thys/ClockSynchInst/LynchInstance.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/ClockSynchInst", "problem_names": ["lemma ex_Maxf:\nfixes S and f :: \"'a \\<Rightarrow> ('b::linorder)\"\n  assumes fin: \"finite S\" \n  shows \"S \\<noteq> {} ==> \\<exists>m\\<in>S. \\<forall>s \\<in> S. f s \\<le> f m\"", "lemma ex_Minf:\nfixes S and f :: \"'a \\<Rightarrow> ('b::linorder)\"\n  assumes fin: \"finite S\" \n  shows \"S \\<noteq> {} ==> \\<exists>m\\<in>S. \\<forall>s \\<in> S. f m \\<le> f s\"", "lemma khl_bound: \"khl < np\"", "lemma kmax_prop:\nfixes f :: \"nat \\<Rightarrow> Clocktime\"\n  shows\n\"(kmax f PR) \\<subseteq> PR \\<and> card (kmax f PR) = khl \\<and> \n                (\\<forall>i\\<in>(kmax f PR). \\<forall>j\\<in>PR - (kmax f PR). f j \\<le> f i)\"", "lemma kmin_prop:\nfixes f :: \"nat \\<Rightarrow> Clocktime\"\n  shows\n\"(kmin f PR) \\<subseteq> PR \\<and> card (kmin f PR) = khl \\<and> \n                (\\<forall>i\\<in>(kmin f PR). \\<forall>j\\<in>PR - (kmin f PR). f i \\<le> f j)\"", "lemma finite_kmax:\n\"finite (kmax f PR)\"", "lemma finite_kmin:\n\"finite (kmin f PR)\"", "lemma reduce_not_empty:\n\"reduce f PR \\<noteq> {}\"", "lemma reduce_shift:\nfixes f :: \"nat \\<Rightarrow> Clocktime\"\n  shows\n  \"f ` (PR - (kmax f PR \\<union> kmin f PR)) = \n            f ` (PR - (kmax (\\<lambda> p. f p + c) PR \\<union> kmin (\\<lambda> p. f p + c) PR))\"", "lemma max_shift:\nfixes f :: \"nat \\<Rightarrow> Clocktime\" and S\nassumes notEmpFin: \"S \\<noteq> {}\" \"finite S\"\nshows\n\"Max (f`S) + x = Max ( (\\<lambda> p. f p + x) ` S) \"", "lemma min_shift:\nfixes f :: \"nat \\<Rightarrow> Clocktime\" and S\nassumes notEmpFin: \"S \\<noteq> {}\" \"finite S\"\nshows\n\"Min (f`S) + x = Min ( (\\<lambda> p. f p + x) ` S) \"", "theorem trans_inv: \nfixes f :: \"nat \\<Rightarrow> Clocktime\"\n  shows\n\"cfnl p f + x = cfnl p (\\<lambda> p. f p + x)\"", "lemma pigeonhole:\nassumes\n  finitA: \"finite A\" and \n  Bss: \"B \\<subseteq> A\" and Css: \"C \\<subseteq> A\" and \n  cardH: \"card A + k <= card B + card C\"\nshows \"k <= card (B \\<inter> C)\"", "lemma subsets_int:\nassumes\n  finitA: \"finite A\" and \n  Bss: \"B \\<subseteq> A\" and Css: \"C \\<subseteq> A\" and \n  cardH: \"card A < card B + card C\"\nshows\n  \"B \\<inter> C \\<noteq> {}\"", "lemma exist_reduce:\n\"\\<forall> c \\<in> reduce f PR. \\<exists> i\\<in> PR-(kmax f PR \\<union> kmin f PR). f i = c\"", "lemma finite_reduce:\n\"finite (reduce f PR)\"", "lemma kmax_ge:\n  \"\\<forall> i\\<in> (kmax f PR). \\<forall> r \\<in> (reduce f PR). r <= f i \"", "lemma kmin_le:\n  \"\\<forall> i\\<in> (kmin f PR). \\<forall> r \\<in> (reduce f PR). f i <= r \"", "lemma abs_distrib_div:\n  \"0 < (c::real)  \\<Longrightarrow> \\<bar>a / c - b / c\\<bar> = \\<bar>a - b\\<bar> / c\"", "lemma uboundmax:\nassumes \n  hC: \"C \\<subseteq> PR\" and\n  hCk: \"np <= card C + khl\"\nshows\n  \"\\<exists> i\\<in>C. Max (reduce f PR) <= f i\"", "lemma lboundmin:\nassumes \n  hC: \"C \\<subseteq> PR\" and\n  hCk: \"np <= card C + khl\"\nshows\n  \"\\<exists> i\\<in>C. f i <= Min (reduce f PR)\"", "lemma same_bound:\nassumes \n  hC: \"C \\<subseteq> PR\" and\n  hCk: \"np <= card C + khl\" and\n  hnk: \"3 * khl < np\" \nshows\n  \"\\<exists> i\\<in>C. Min (reduce f PR) <= f i \\<and> g i <= Max (reduce g PR) \"", "theorem prec_enh:\nassumes \n  hC: \"C \\<subseteq> PR\" and\n  hCF: \"np - nF <= card C\" and\n  hFn: \"3 * nF < np\" and\n  hFk: \"nF = khl\" and\n  hbx: \"\\<forall> l\\<in>C. \\<bar>f l - g l\\<bar> <= x\" and\n  hby1: \"\\<forall> l\\<in>C. \\<forall> m\\<in>C. \\<bar>f l - f m\\<bar> <= y\" and\n  hby2: \"\\<forall> l\\<in>C. \\<forall> m\\<in>C. \\<bar>g l - g m\\<bar> <= y\" and\n  hpC: \"p\\<in>C\" and\n  hqC: \"q\\<in>C\" \nshows \"\\<bar> cfnl p f - cfnl q g \\<bar> <= y / 2 + x\"", "theorem accur_pres:\nassumes\n  hC: \"C \\<subseteq> PR\" and\n  hCF: \"np - nF <= card C\" and\n  hFk: \"nF = khl\" and\n  hby: \"\\<forall> l\\<in>C. \\<forall> m\\<in>C. \\<bar>f l - f m\\<bar> <= y\" and\n  hqC: \"q\\<in>C\" \nshows \"\\<bar> cfnl p f - f q \\<bar> <= y\""], "translations": [["", "lemma ex_Maxf:\nfixes S and f :: \"'a \\<Rightarrow> ('b::linorder)\"\n  assumes fin: \"finite S\" \n  shows \"S \\<noteq> {} ==> \\<exists>m\\<in>S. \\<forall>s \\<in> S. f s \\<le> f m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>m\\<in>S. \\<forall>s\\<in>S. f s \\<le> f m", "using fin"], ["proof (prove)\nusing this:\n  finite S\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>m\\<in>S. \\<forall>s\\<in>S. f s \\<le> f m", "proof (induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. {} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>m\\<in>{}. \\<forall>s\\<in>{}. f s \\<le> f m\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow>\n        \\<exists>m\\<in>F. \\<forall>s\\<in>F. f s \\<le> f m;\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m\\<in>insert x F.\n                            \\<forall>s\\<in>insert x F. f s \\<le> f m", "case empty"], ["proof (state)\nthis:\n  {} \\<noteq> {}\n\ngoal (2 subgoals):\n 1. {} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>m\\<in>{}. \\<forall>s\\<in>{}. f s \\<le> f m\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow>\n        \\<exists>m\\<in>F. \\<forall>s\\<in>F. f s \\<le> f m;\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m\\<in>insert x F.\n                            \\<forall>s\\<in>insert x F. f s \\<le> f m", "thus ?case"], ["proof (prove)\nusing this:\n  {} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>{}. \\<forall>s\\<in>{}. f s \\<le> f m", "by simp"], ["proof (state)\nthis:\n  \\<exists>m\\<in>{}. \\<forall>s\\<in>{}. f s \\<le> f m\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow>\n        \\<exists>m\\<in>F. \\<forall>s\\<in>F. f s \\<le> f m;\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m\\<in>insert x F.\n                            \\<forall>s\\<in>insert x F. f s \\<le> f m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow>\n        \\<exists>m\\<in>F. \\<forall>s\\<in>F. f s \\<le> f m;\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m\\<in>insert x F.\n                            \\<forall>s\\<in>insert x F. f s \\<le> f m", "case (insert x S)"], ["proof (state)\nthis:\n  finite S\n  x \\<notin> S\n  S \\<noteq> {} \\<Longrightarrow>\n  \\<exists>m\\<in>S. \\<forall>s\\<in>S. f s \\<le> f m\n  insert x S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow>\n        \\<exists>m\\<in>F. \\<forall>s\\<in>F. f s \\<le> f m;\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m\\<in>insert x F.\n                            \\<forall>s\\<in>insert x F. f s \\<le> f m", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m", "assume \"S = {}\""], ["proof (state)\nthis:\n  S = {}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m", "thus ?thesis"], ["proof (prove)\nusing this:\n  S = {}\n\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m", "by simp"], ["proof (state)\nthis:\n  \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m", "assume nonempty: \"S \\<noteq> {}\""], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m", "then"], ["proof (chain)\npicking this:\n  S \\<noteq> {}", "obtain m where m: \"m\\<in>S\" \"\\<forall>s\\<in>S. f s \\<le> f m\""], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>m \\<in> S; \\<forall>s\\<in>S. f s \\<le> f m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using insert"], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n  finite S\n  x \\<notin> S\n  S \\<noteq> {} \\<Longrightarrow>\n  \\<exists>m\\<in>S. \\<forall>s\\<in>S. f s \\<le> f m\n  insert x S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>m \\<in> S; \\<forall>s\\<in>S. f s \\<le> f m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  m \\<in> S\n  \\<forall>s\\<in>S. f s \\<le> f m\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m", "assume \"f x \\<le> f m\""], ["proof (state)\nthis:\n  f x \\<le> f m\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m", "thus ?thesis"], ["proof (prove)\nusing this:\n  f x \\<le> f m\n\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m", "using m"], ["proof (prove)\nusing this:\n  f x \\<le> f m\n  m \\<in> S\n  \\<forall>s\\<in>S. f s \\<le> f m\n\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m", "by blast"], ["proof (state)\nthis:\n  \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m\n\ngoal (1 subgoal):\n 1. \\<not> f x \\<le> f m \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> f x \\<le> f m \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m", "assume \"~ f x \\<le> f m\""], ["proof (state)\nthis:\n  \\<not> f x \\<le> f m\n\ngoal (1 subgoal):\n 1. \\<not> f x \\<le> f m \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> f x \\<le> f m\n\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m", "using m"], ["proof (prove)\nusing this:\n  \\<not> f x \\<le> f m\n  m \\<in> S\n  \\<forall>s\\<in>S. f s \\<le> f m\n\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m", "by(simp add:linorder_not_le order_less_le)\n          (blast intro: order_trans)"], ["proof (state)\nthis:\n  \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f s \\<le> f m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ex_Minf:\nfixes S and f :: \"'a \\<Rightarrow> ('b::linorder)\"\n  assumes fin: \"finite S\" \n  shows \"S \\<noteq> {} ==> \\<exists>m\\<in>S. \\<forall>s \\<in> S. f m \\<le> f s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>m\\<in>S. \\<forall>s\\<in>S. f m \\<le> f s", "using fin"], ["proof (prove)\nusing this:\n  finite S\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>m\\<in>S. \\<forall>s\\<in>S. f m \\<le> f s", "proof (induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. {} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>m\\<in>{}. \\<forall>s\\<in>{}. f m \\<le> f s\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow>\n        \\<exists>m\\<in>F. \\<forall>s\\<in>F. f m \\<le> f s;\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m\\<in>insert x F.\n                            \\<forall>s\\<in>insert x F. f m \\<le> f s", "case empty"], ["proof (state)\nthis:\n  {} \\<noteq> {}\n\ngoal (2 subgoals):\n 1. {} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>m\\<in>{}. \\<forall>s\\<in>{}. f m \\<le> f s\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow>\n        \\<exists>m\\<in>F. \\<forall>s\\<in>F. f m \\<le> f s;\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m\\<in>insert x F.\n                            \\<forall>s\\<in>insert x F. f m \\<le> f s", "thus ?case"], ["proof (prove)\nusing this:\n  {} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>{}. \\<forall>s\\<in>{}. f m \\<le> f s", "by simp"], ["proof (state)\nthis:\n  \\<exists>m\\<in>{}. \\<forall>s\\<in>{}. f m \\<le> f s\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow>\n        \\<exists>m\\<in>F. \\<forall>s\\<in>F. f m \\<le> f s;\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m\\<in>insert x F.\n                            \\<forall>s\\<in>insert x F. f m \\<le> f s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow>\n        \\<exists>m\\<in>F. \\<forall>s\\<in>F. f m \\<le> f s;\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m\\<in>insert x F.\n                            \\<forall>s\\<in>insert x F. f m \\<le> f s", "case (insert x S)"], ["proof (state)\nthis:\n  finite S\n  x \\<notin> S\n  S \\<noteq> {} \\<Longrightarrow>\n  \\<exists>m\\<in>S. \\<forall>s\\<in>S. f m \\<le> f s\n  insert x S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow>\n        \\<exists>m\\<in>F. \\<forall>s\\<in>F. f m \\<le> f s;\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m\\<in>insert x F.\n                            \\<forall>s\\<in>insert x F. f m \\<le> f s", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s", "assume \"S = {}\""], ["proof (state)\nthis:\n  S = {}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s", "thus ?thesis"], ["proof (prove)\nusing this:\n  S = {}\n\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s", "by simp"], ["proof (state)\nthis:\n  \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s", "assume nonempty: \"S \\<noteq> {}\""], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s", "then"], ["proof (chain)\npicking this:\n  S \\<noteq> {}", "obtain m where m: \"m\\<in>S\" \"\\<forall>s\\<in>S. f m \\<le> f s\""], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>m \\<in> S; \\<forall>s\\<in>S. f m \\<le> f s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using insert"], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n  finite S\n  x \\<notin> S\n  S \\<noteq> {} \\<Longrightarrow>\n  \\<exists>m\\<in>S. \\<forall>s\\<in>S. f m \\<le> f s\n  insert x S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>m \\<in> S; \\<forall>s\\<in>S. f m \\<le> f s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  m \\<in> S\n  \\<forall>s\\<in>S. f m \\<le> f s\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s", "assume \"f m \\<le> f x\""], ["proof (state)\nthis:\n  f m \\<le> f x\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s", "thus ?thesis"], ["proof (prove)\nusing this:\n  f m \\<le> f x\n\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s", "using m"], ["proof (prove)\nusing this:\n  f m \\<le> f x\n  m \\<in> S\n  \\<forall>s\\<in>S. f m \\<le> f s\n\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s", "by blast"], ["proof (state)\nthis:\n  \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s\n\ngoal (1 subgoal):\n 1. \\<not> f m \\<le> f x \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> f m \\<le> f x \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s", "assume \"~ f m \\<le> f x\""], ["proof (state)\nthis:\n  \\<not> f m \\<le> f x\n\ngoal (1 subgoal):\n 1. \\<not> f m \\<le> f x \\<Longrightarrow>\n    \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> f m \\<le> f x\n\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s", "using m"], ["proof (prove)\nusing this:\n  \\<not> f m \\<le> f x\n  m \\<in> S\n  \\<forall>s\\<in>S. f m \\<le> f s\n\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s", "by(simp add:linorder_not_le order_less_le)\n          (blast intro: order_trans)"], ["proof (state)\nthis:\n  \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>m\\<in>insert x S. \\<forall>s\\<in>insert x S. f m \\<le> f s\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>This trivial lemma is needed by the next two.\\<close>"], ["", "lemma khl_bound: \"khl < np\""], ["proof (prove)\ngoal (1 subgoal):\n 1. khl < np", "using constants_ax"], ["proof (prove)\nusing this:\n  2 * khl < np\n\ngoal (1 subgoal):\n 1. khl < np", "by arith"], ["", "text \\<open>The next two lemmas prove that de functions kmin and kmax\nreturn some values that satisfy their definition. This is not trivial\nbecause we need to prove the existence of these values, according to\nthe rule of the Hilbert's operator. We will need this lemma many\ntimes because is the only thing that we know about these functions.\\<close>"], ["", "lemma kmax_prop:\nfixes f :: \"nat \\<Rightarrow> Clocktime\"\n  shows\n\"(kmax f PR) \\<subseteq> PR \\<and> card (kmax f PR) = khl \\<and> \n                (\\<forall>i\\<in>(kmax f PR). \\<forall>j\\<in>PR - (kmax f PR). f j \\<le> f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kmax f PR \\<subseteq> PR \\<and>\n    card (kmax f PR) = khl \\<and>\n    (\\<forall>i\\<in>kmax f PR. \\<forall>j\\<in>PR - kmax f PR. f j \\<le> f i)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. kmax f PR \\<subseteq> PR \\<and>\n    card (kmax f PR) = khl \\<and>\n    (\\<forall>i\\<in>kmax f PR. \\<forall>j\\<in>PR - kmax f PR. f j \\<le> f i)", "have \"khl <= np \\<longrightarrow> \n    (\\<exists> S. S \\<subseteq> PR \\<and> card S = khl \\<and> (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i))\"\n    ( is \"khl <= np \\<longrightarrow> ?P khl\" )"], ["proof (prove)\ngoal (1 subgoal):\n 1. khl \\<le> np \\<longrightarrow>\n    (\\<exists>S\\<subseteq>PR.\n        card S = khl \\<and>\n        (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i))", "proof(induct (khl))"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> np \\<longrightarrow>\n    (\\<exists>S\\<subseteq>PR.\n        card S = 0 \\<and>\n        (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i))\n 2. \\<And>n.\n       n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = n \\<and>\n           (\\<forall>i\\<in>S.\n               \\<forall>j\\<in>PR - S. f j \\<le> f i)) \\<Longrightarrow>\n       Suc n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = Suc n \\<and>\n           (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i))", "have \"?P 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>S\\<subseteq>PR.\n       card S = 0 \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)", "by force"], ["proof (state)\nthis:\n  \\<exists>S\\<subseteq>PR.\n     card S = 0 \\<and>\n     (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)\n\ngoal (2 subgoals):\n 1. 0 \\<le> np \\<longrightarrow>\n    (\\<exists>S\\<subseteq>PR.\n        card S = 0 \\<and>\n        (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i))\n 2. \\<And>n.\n       n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = n \\<and>\n           (\\<forall>i\\<in>S.\n               \\<forall>j\\<in>PR - S. f j \\<le> f i)) \\<Longrightarrow>\n       Suc n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = Suc n \\<and>\n           (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i))", "thus \"0 <= np \\<longrightarrow> ?P 0\""], ["proof (prove)\nusing this:\n  \\<exists>S\\<subseteq>PR.\n     card S = 0 \\<and>\n     (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)\n\ngoal (1 subgoal):\n 1. 0 \\<le> np \\<longrightarrow>\n    (\\<exists>S\\<subseteq>PR.\n        card S = 0 \\<and>\n        (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i))", ".."], ["proof (state)\nthis:\n  0 \\<le> np \\<longrightarrow>\n  (\\<exists>S\\<subseteq>PR.\n      card S = 0 \\<and>\n      (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = n \\<and>\n           (\\<forall>i\\<in>S.\n               \\<forall>j\\<in>PR - S. f j \\<le> f i)) \\<Longrightarrow>\n       Suc n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = Suc n \\<and>\n           (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = n \\<and>\n           (\\<forall>i\\<in>S.\n               \\<forall>j\\<in>PR - S. f j \\<le> f i)) \\<Longrightarrow>\n       Suc n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = Suc n \\<and>\n           (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i))", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = n \\<and>\n           (\\<forall>i\\<in>S.\n               \\<forall>j\\<in>PR - S. f j \\<le> f i)) \\<Longrightarrow>\n       Suc n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = Suc n \\<and>\n           (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i))", "assume asm: \"n <= np \\<longrightarrow> ?P n\""], ["proof (state)\nthis:\n  n \\<le> np \\<longrightarrow>\n  (\\<exists>S\\<subseteq>PR.\n      card S = n \\<and>\n      (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = n \\<and>\n           (\\<forall>i\\<in>S.\n               \\<forall>j\\<in>PR - S. f j \\<le> f i)) \\<Longrightarrow>\n       Suc n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = Suc n \\<and>\n           (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i))", "show \"Suc n <= np \\<longrightarrow> ?P (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<longrightarrow>\n    (\\<exists>S\\<subseteq>PR.\n        card S = Suc n \\<and>\n        (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)", "assume asm2: \"Suc n <= np\""], ["proof (state)\nthis:\n  Suc n \\<le> np\n\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)", "with asm"], ["proof (chain)\npicking this:\n  n \\<le> np \\<longrightarrow>\n  (\\<exists>S\\<subseteq>PR.\n      card S = n \\<and>\n      (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i))\n  Suc n \\<le> np", "have \"?P n\""], ["proof (prove)\nusing this:\n  n \\<le> np \\<longrightarrow>\n  (\\<exists>S\\<subseteq>PR.\n      card S = n \\<and>\n      (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i))\n  Suc n \\<le> np\n\ngoal (1 subgoal):\n 1. \\<exists>S\\<subseteq>PR.\n       card S = n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)", "by simp"], ["proof (state)\nthis:\n  \\<exists>S\\<subseteq>PR.\n     card S = n \\<and>\n     (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)\n\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)", "then"], ["proof (chain)\npicking this:\n  \\<exists>S\\<subseteq>PR.\n     card S = n \\<and>\n     (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)", "obtain S where\n        SinPR : \"S\\<subseteq>PR\" and \n        cardS: \"card S = n\" and \n        HI: \"(\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)\""], ["proof (prove)\nusing this:\n  \\<exists>S\\<subseteq>PR.\n     card S = n \\<and>\n     (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>S \\<subseteq> PR; card S = n;\n         \\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  S \\<subseteq> PR\n  card S = n\n  \\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i\n\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)", "let ?e = \"SOME i. i\\<in>PR-S \\<and> \n        (\\<forall>j\\<in>PR-S. f j \\<le> f i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)", "let ?S = \"insert  ?e S\""], ["proof (state)\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)", "have \"\\<exists>i. i\\<in>PR-S \\<and> (\\<forall>j\\<in>PR-S. f j \\<le> f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i)", "from SinPR and finite_subset"], ["proof (chain)\npicking this:\n  S \\<subseteq> PR\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A", "have \"finite (PR-S)\""], ["proof (prove)\nusing this:\n  S \\<subseteq> PR\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite (PR - S)", "by auto"], ["proof (state)\nthis:\n  finite (PR - S)\n\ngoal (1 subgoal):\n 1. \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i)", "moreover"], ["proof (state)\nthis:\n  finite (PR - S)\n\ngoal (1 subgoal):\n 1. \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i)", "from cardS and asm2 SinPR"], ["proof (chain)\npicking this:\n  card S = n\n  Suc n \\<le> np\n  S \\<subseteq> PR", "have \"S\\<subset>PR\""], ["proof (prove)\nusing this:\n  card S = n\n  Suc n \\<le> np\n  S \\<subseteq> PR\n\ngoal (1 subgoal):\n 1. S \\<subset> PR", "by auto"], ["proof (state)\nthis:\n  S \\<subset> PR\n\ngoal (1 subgoal):\n 1. \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i)", "hence \"PR-S \\<noteq> {}\""], ["proof (prove)\nusing this:\n  S \\<subset> PR\n\ngoal (1 subgoal):\n 1. PR - S \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  PR - S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i)", "ultimately"], ["proof (chain)\npicking this:\n  finite (PR - S)\n  PR - S \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (PR - S)\n  PR - S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i)", "using ex_Maxf"], ["proof (prove)\nusing this:\n  finite (PR - S)\n  PR - S \\<noteq> {}\n  \\<lbrakk>finite ?S; ?S \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>m\\<in>?S. \\<forall>s\\<in>?S. ?f s \\<le> ?f m\n\ngoal (1 subgoal):\n 1. \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i)", "by blast"], ["proof (state)\nthis:\n  \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i)\n\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)", "hence \n        ePRS: \"?e \\<in> PR-S\" and maxH: \"(\\<forall>j \\<in> PR-S. f j \\<le> f ?e)\""], ["proof (prove)\nusing this:\n  \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i)\n\ngoal (1 subgoal):\n 1. (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n    \\<in> PR - S &&&\n    \\<forall>j\\<in>PR - S.\n       f j\n       \\<le> f (SOME i.\n                   i \\<in> PR - S \\<and>\n                   (\\<forall>j\\<in>PR - S. f j \\<le> f i))", "by (auto dest!: someI_ex)"], ["proof (state)\nthis:\n  (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n  \\<in> PR - S\n  \\<forall>j\\<in>PR - S.\n     f j\n     \\<le> f (SOME i.\n                 i \\<in> PR - S \\<and>\n                 (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)", "from maxH and HI"], ["proof (chain)\npicking this:\n  \\<forall>j\\<in>PR - S.\n     f j\n     \\<le> f (SOME i.\n                 i \\<in> PR - S \\<and>\n                 (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n  \\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i", "have \"(\\<forall>i\\<in>?S. \\<forall>j\\<in>PR - ?S. f j \\<le> f i)\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>PR - S.\n     f j\n     \\<le> f (SOME i.\n                 i \\<in> PR - S \\<and>\n                 (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n  \\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>insert\n                    (SOME i.\n                        i \\<in> PR - S \\<and>\n                        (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n                    S.\n       \\<forall>j\\<in>PR -\n                      insert\n                       (SOME i.\n                           i \\<in> PR - S \\<and>\n                           (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n                       S.\n          f j \\<le> f i", "by blast"], ["proof (state)\nthis:\n  \\<forall>i\\<in>insert\n                  (SOME i.\n                      i \\<in> PR - S \\<and>\n                      (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n                  S.\n     \\<forall>j\\<in>PR -\n                    insert\n                     (SOME i.\n                         i \\<in> PR - S \\<and>\n                         (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n                     S.\n        f j \\<le> f i\n\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)", "moreover"], ["proof (state)\nthis:\n  \\<forall>i\\<in>insert\n                  (SOME i.\n                      i \\<in> PR - S \\<and>\n                      (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n                  S.\n     \\<forall>j\\<in>PR -\n                    insert\n                     (SOME i.\n                         i \\<in> PR - S \\<and>\n                         (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n                     S.\n        f j \\<le> f i\n\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)", "from SinPR and finite_subset \n      cardS and ePRS"], ["proof (chain)\npicking this:\n  S \\<subseteq> PR\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n  card S = n\n  (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n  \\<in> PR - S", "have \"card ?S = Suc n\""], ["proof (prove)\nusing this:\n  S \\<subseteq> PR\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n  card S = n\n  (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n  \\<in> PR - S\n\ngoal (1 subgoal):\n 1. card\n     (insert\n       (SOME i.\n           i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n       S) =\n    Suc n", "by (auto dest: card_insert_disjoint)"], ["proof (state)\nthis:\n  card\n   (insert\n     (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n     S) =\n  Suc n\n\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)", "moreover"], ["proof (state)\nthis:\n  card\n   (insert\n     (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n     S) =\n  Suc n\n\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)", "have \"?S \\<subseteq> PR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert\n     (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n     S\n    \\<subseteq> PR", "using SinPR and ePRS"], ["proof (prove)\nusing this:\n  S \\<subseteq> PR\n  (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n  \\<in> PR - S\n\ngoal (1 subgoal):\n 1. insert\n     (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n     S\n    \\<subseteq> PR", "by auto"], ["proof (state)\nthis:\n  insert\n   (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i)) S\n  \\<subseteq> PR\n\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>i\\<in>insert\n                  (SOME i.\n                      i \\<in> PR - S \\<and>\n                      (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n                  S.\n     \\<forall>j\\<in>PR -\n                    insert\n                     (SOME i.\n                         i \\<in> PR - S \\<and>\n                         (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n                     S.\n        f j \\<le> f i\n  card\n   (insert\n     (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n     S) =\n  Suc n\n  insert\n   (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i)) S\n  \\<subseteq> PR", "show \"?P (Suc n)\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>insert\n                  (SOME i.\n                      i \\<in> PR - S \\<and>\n                      (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n                  S.\n     \\<forall>j\\<in>PR -\n                    insert\n                     (SOME i.\n                         i \\<in> PR - S \\<and>\n                         (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n                     S.\n        f j \\<le> f i\n  card\n   (insert\n     (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i))\n     S) =\n  Suc n\n  insert\n   (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f j \\<le> f i)) S\n  \\<subseteq> PR\n\ngoal (1 subgoal):\n 1. \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)", "by blast"], ["proof (state)\nthis:\n  \\<exists>S\\<subseteq>PR.\n     card S = Suc n \\<and>\n     (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Suc n \\<le> np \\<longrightarrow>\n  (\\<exists>S\\<subseteq>PR.\n      card S = Suc n \\<and>\n      (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  khl \\<le> np \\<longrightarrow>\n  (\\<exists>S\\<subseteq>PR.\n      card S = khl \\<and>\n      (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i))\n\ngoal (1 subgoal):\n 1. kmax f PR \\<subseteq> PR \\<and>\n    card (kmax f PR) = khl \\<and>\n    (\\<forall>i\\<in>kmax f PR. \\<forall>j\\<in>PR - kmax f PR. f j \\<le> f i)", "hence \"?P khl\""], ["proof (prove)\nusing this:\n  khl \\<le> np \\<longrightarrow>\n  (\\<exists>S\\<subseteq>PR.\n      card S = khl \\<and>\n      (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i))\n\ngoal (1 subgoal):\n 1. \\<exists>S\\<subseteq>PR.\n       card S = khl \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)", "using khl_bound"], ["proof (prove)\nusing this:\n  khl \\<le> np \\<longrightarrow>\n  (\\<exists>S\\<subseteq>PR.\n      card S = khl \\<and>\n      (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i))\n  khl < np\n\ngoal (1 subgoal):\n 1. \\<exists>S\\<subseteq>PR.\n       card S = khl \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)", "by auto"], ["proof (state)\nthis:\n  \\<exists>S\\<subseteq>PR.\n     card S = khl \\<and>\n     (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)\n\ngoal (1 subgoal):\n 1. kmax f PR \\<subseteq> PR \\<and>\n    card (kmax f PR) = khl \\<and>\n    (\\<forall>i\\<in>kmax f PR. \\<forall>j\\<in>PR - kmax f PR. f j \\<le> f i)", "then"], ["proof (chain)\npicking this:\n  \\<exists>S\\<subseteq>PR.\n     card S = khl \\<and>\n     (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)", "obtain S where \n    \"S\\<le>PR \\<and> card S = khl \\<and> (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)\""], ["proof (prove)\nusing this:\n  \\<exists>S\\<subseteq>PR.\n     card S = khl \\<and>\n     (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        S \\<subseteq> PR \\<and>\n        card S = khl \\<and>\n        (\\<forall>i\\<in>S.\n            \\<forall>j\\<in>PR - S. f j \\<le> f i) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  S \\<subseteq> PR \\<and>\n  card S = khl \\<and>\n  (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)\n\ngoal (1 subgoal):\n 1. kmax f PR \\<subseteq> PR \\<and>\n    card (kmax f PR) = khl \\<and>\n    (\\<forall>i\\<in>kmax f PR. \\<forall>j\\<in>PR - kmax f PR. f j \\<le> f i)", "thus ?thesis"], ["proof (prove)\nusing this:\n  S \\<subseteq> PR \\<and>\n  card S = khl \\<and>\n  (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)\n\ngoal (1 subgoal):\n 1. kmax f PR \\<subseteq> PR \\<and>\n    card (kmax f PR) = khl \\<and>\n    (\\<forall>i\\<in>kmax f PR. \\<forall>j\\<in>PR - kmax f PR. f j \\<le> f i)", "by (unfold kmax_def)\n      (rule someI [where P=\"\\<lambda>S. S \\<subseteq> PR \\<and> card S = khl \\<and> (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)\"])"], ["proof (state)\nthis:\n  kmax f PR \\<subseteq> PR \\<and>\n  card (kmax f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmax f PR. \\<forall>j\\<in>PR - kmax f PR. f j \\<le> f i)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma kmin_prop:\nfixes f :: \"nat \\<Rightarrow> Clocktime\"\n  shows\n\"(kmin f PR) \\<subseteq> PR \\<and> card (kmin f PR) = khl \\<and> \n                (\\<forall>i\\<in>(kmin f PR). \\<forall>j\\<in>PR - (kmin f PR). f i \\<le> f j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kmin f PR \\<subseteq> PR \\<and>\n    card (kmin f PR) = khl \\<and>\n    (\\<forall>i\\<in>kmin f PR. \\<forall>j\\<in>PR - kmin f PR. f i \\<le> f j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. kmin f PR \\<subseteq> PR \\<and>\n    card (kmin f PR) = khl \\<and>\n    (\\<forall>i\\<in>kmin f PR. \\<forall>j\\<in>PR - kmin f PR. f i \\<le> f j)", "have \"khl <= np \\<longrightarrow> \n    (\\<exists> S. S \\<subseteq> PR \\<and> card S = khl \\<and> (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j))\"\n    ( is \"khl <= np \\<longrightarrow> ?P khl\" )"], ["proof (prove)\ngoal (1 subgoal):\n 1. khl \\<le> np \\<longrightarrow>\n    (\\<exists>S\\<subseteq>PR.\n        card S = khl \\<and>\n        (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j))", "proof(induct (khl))"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> np \\<longrightarrow>\n    (\\<exists>S\\<subseteq>PR.\n        card S = 0 \\<and>\n        (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j))\n 2. \\<And>n.\n       n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = n \\<and>\n           (\\<forall>i\\<in>S.\n               \\<forall>j\\<in>PR - S. f i \\<le> f j)) \\<Longrightarrow>\n       Suc n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = Suc n \\<and>\n           (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j))", "have \"?P 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>S\\<subseteq>PR.\n       card S = 0 \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)", "by force"], ["proof (state)\nthis:\n  \\<exists>S\\<subseteq>PR.\n     card S = 0 \\<and>\n     (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)\n\ngoal (2 subgoals):\n 1. 0 \\<le> np \\<longrightarrow>\n    (\\<exists>S\\<subseteq>PR.\n        card S = 0 \\<and>\n        (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j))\n 2. \\<And>n.\n       n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = n \\<and>\n           (\\<forall>i\\<in>S.\n               \\<forall>j\\<in>PR - S. f i \\<le> f j)) \\<Longrightarrow>\n       Suc n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = Suc n \\<and>\n           (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j))", "thus \"0 <= np \\<longrightarrow> ?P 0\""], ["proof (prove)\nusing this:\n  \\<exists>S\\<subseteq>PR.\n     card S = 0 \\<and>\n     (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)\n\ngoal (1 subgoal):\n 1. 0 \\<le> np \\<longrightarrow>\n    (\\<exists>S\\<subseteq>PR.\n        card S = 0 \\<and>\n        (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j))", ".."], ["proof (state)\nthis:\n  0 \\<le> np \\<longrightarrow>\n  (\\<exists>S\\<subseteq>PR.\n      card S = 0 \\<and>\n      (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = n \\<and>\n           (\\<forall>i\\<in>S.\n               \\<forall>j\\<in>PR - S. f i \\<le> f j)) \\<Longrightarrow>\n       Suc n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = Suc n \\<and>\n           (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = n \\<and>\n           (\\<forall>i\\<in>S.\n               \\<forall>j\\<in>PR - S. f i \\<le> f j)) \\<Longrightarrow>\n       Suc n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = Suc n \\<and>\n           (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j))", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = n \\<and>\n           (\\<forall>i\\<in>S.\n               \\<forall>j\\<in>PR - S. f i \\<le> f j)) \\<Longrightarrow>\n       Suc n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = Suc n \\<and>\n           (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j))", "assume asm: \"n <= np \\<longrightarrow> ?P n\""], ["proof (state)\nthis:\n  n \\<le> np \\<longrightarrow>\n  (\\<exists>S\\<subseteq>PR.\n      card S = n \\<and>\n      (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = n \\<and>\n           (\\<forall>i\\<in>S.\n               \\<forall>j\\<in>PR - S. f i \\<le> f j)) \\<Longrightarrow>\n       Suc n \\<le> np \\<longrightarrow>\n       (\\<exists>S\\<subseteq>PR.\n           card S = Suc n \\<and>\n           (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j))", "show \"Suc n <= np \\<longrightarrow> ?P (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<longrightarrow>\n    (\\<exists>S\\<subseteq>PR.\n        card S = Suc n \\<and>\n        (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)", "assume asm2: \"Suc n <= np\""], ["proof (state)\nthis:\n  Suc n \\<le> np\n\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)", "with asm"], ["proof (chain)\npicking this:\n  n \\<le> np \\<longrightarrow>\n  (\\<exists>S\\<subseteq>PR.\n      card S = n \\<and>\n      (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j))\n  Suc n \\<le> np", "have \"?P n\""], ["proof (prove)\nusing this:\n  n \\<le> np \\<longrightarrow>\n  (\\<exists>S\\<subseteq>PR.\n      card S = n \\<and>\n      (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j))\n  Suc n \\<le> np\n\ngoal (1 subgoal):\n 1. \\<exists>S\\<subseteq>PR.\n       card S = n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)", "by simp"], ["proof (state)\nthis:\n  \\<exists>S\\<subseteq>PR.\n     card S = n \\<and>\n     (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)\n\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)", "then"], ["proof (chain)\npicking this:\n  \\<exists>S\\<subseteq>PR.\n     card S = n \\<and>\n     (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)", "obtain S where\n        SinPR : \"S\\<subseteq>PR\" and \n        cardS: \"card S = n\" and \n        HI: \"(\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)\""], ["proof (prove)\nusing this:\n  \\<exists>S\\<subseteq>PR.\n     card S = n \\<and>\n     (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>S \\<subseteq> PR; card S = n;\n         \\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  S \\<subseteq> PR\n  card S = n\n  \\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j\n\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)", "let ?e = \"SOME i. i\\<in>PR-S \\<and> \n        (\\<forall>j\\<in>PR-S. f i \\<le> f j)\""], ["proof (state)\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)", "let ?S = \"insert  ?e S\""], ["proof (state)\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)", "have \"\\<exists>i. i\\<in>PR-S \\<and> (\\<forall>j\\<in>PR-S. f i \\<le> f j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j)", "from SinPR and finite_subset"], ["proof (chain)\npicking this:\n  S \\<subseteq> PR\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A", "have \"finite (PR-S)\""], ["proof (prove)\nusing this:\n  S \\<subseteq> PR\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite (PR - S)", "by auto"], ["proof (state)\nthis:\n  finite (PR - S)\n\ngoal (1 subgoal):\n 1. \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j)", "moreover"], ["proof (state)\nthis:\n  finite (PR - S)\n\ngoal (1 subgoal):\n 1. \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j)", "from cardS and asm2 SinPR"], ["proof (chain)\npicking this:\n  card S = n\n  Suc n \\<le> np\n  S \\<subseteq> PR", "have \"S\\<subset>PR\""], ["proof (prove)\nusing this:\n  card S = n\n  Suc n \\<le> np\n  S \\<subseteq> PR\n\ngoal (1 subgoal):\n 1. S \\<subset> PR", "by auto"], ["proof (state)\nthis:\n  S \\<subset> PR\n\ngoal (1 subgoal):\n 1. \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j)", "hence \"PR-S \\<noteq> {}\""], ["proof (prove)\nusing this:\n  S \\<subset> PR\n\ngoal (1 subgoal):\n 1. PR - S \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  PR - S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j)", "ultimately"], ["proof (chain)\npicking this:\n  finite (PR - S)\n  PR - S \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (PR - S)\n  PR - S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j)", "using ex_Minf"], ["proof (prove)\nusing this:\n  finite (PR - S)\n  PR - S \\<noteq> {}\n  \\<lbrakk>finite ?S; ?S \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>m\\<in>?S. \\<forall>s\\<in>?S. ?f m \\<le> ?f s\n\ngoal (1 subgoal):\n 1. \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j)", "by blast"], ["proof (state)\nthis:\n  \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j)\n\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)", "hence \n        ePRS: \"?e \\<in> PR-S\" and minH: \"(\\<forall>j \\<in> PR-S. f ?e \\<le> f j)\""], ["proof (prove)\nusing this:\n  \\<exists>i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j)\n\ngoal (1 subgoal):\n 1. (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n    \\<in> PR - S &&&\n    \\<forall>j\\<in>PR - S.\n       f (SOME i.\n             i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n       \\<le> f j", "by (auto dest!: someI_ex)"], ["proof (state)\nthis:\n  (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n  \\<in> PR - S\n  \\<forall>j\\<in>PR - S.\n     f (SOME i.\n           i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n     \\<le> f j\n\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)", "from minH and  HI"], ["proof (chain)\npicking this:\n  \\<forall>j\\<in>PR - S.\n     f (SOME i.\n           i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n     \\<le> f j\n  \\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j", "have \"(\\<forall>i\\<in>?S. \\<forall>j\\<in>PR - ?S. f i \\<le> f j)\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>PR - S.\n     f (SOME i.\n           i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n     \\<le> f j\n  \\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>insert\n                    (SOME i.\n                        i \\<in> PR - S \\<and>\n                        (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n                    S.\n       \\<forall>j\\<in>PR -\n                      insert\n                       (SOME i.\n                           i \\<in> PR - S \\<and>\n                           (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n                       S.\n          f i \\<le> f j", "by blast"], ["proof (state)\nthis:\n  \\<forall>i\\<in>insert\n                  (SOME i.\n                      i \\<in> PR - S \\<and>\n                      (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n                  S.\n     \\<forall>j\\<in>PR -\n                    insert\n                     (SOME i.\n                         i \\<in> PR - S \\<and>\n                         (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n                     S.\n        f i \\<le> f j\n\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)", "moreover"], ["proof (state)\nthis:\n  \\<forall>i\\<in>insert\n                  (SOME i.\n                      i \\<in> PR - S \\<and>\n                      (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n                  S.\n     \\<forall>j\\<in>PR -\n                    insert\n                     (SOME i.\n                         i \\<in> PR - S \\<and>\n                         (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n                     S.\n        f i \\<le> f j\n\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)", "from SinPR and finite_subset and\n        cardS and ePRS"], ["proof (chain)\npicking this:\n  S \\<subseteq> PR\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n  card S = n\n  (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n  \\<in> PR - S", "have \"card ?S = Suc n\""], ["proof (prove)\nusing this:\n  S \\<subseteq> PR\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n  card S = n\n  (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n  \\<in> PR - S\n\ngoal (1 subgoal):\n 1. card\n     (insert\n       (SOME i.\n           i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n       S) =\n    Suc n", "by (auto dest: card_insert_disjoint)"], ["proof (state)\nthis:\n  card\n   (insert\n     (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n     S) =\n  Suc n\n\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)", "moreover"], ["proof (state)\nthis:\n  card\n   (insert\n     (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n     S) =\n  Suc n\n\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)", "have \"?S \\<subseteq> PR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert\n     (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n     S\n    \\<subseteq> PR", "using SinPR and ePRS"], ["proof (prove)\nusing this:\n  S \\<subseteq> PR\n  (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n  \\<in> PR - S\n\ngoal (1 subgoal):\n 1. insert\n     (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n     S\n    \\<subseteq> PR", "by auto"], ["proof (state)\nthis:\n  insert\n   (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j)) S\n  \\<subseteq> PR\n\ngoal (1 subgoal):\n 1. Suc n \\<le> np \\<Longrightarrow>\n    \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>i\\<in>insert\n                  (SOME i.\n                      i \\<in> PR - S \\<and>\n                      (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n                  S.\n     \\<forall>j\\<in>PR -\n                    insert\n                     (SOME i.\n                         i \\<in> PR - S \\<and>\n                         (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n                     S.\n        f i \\<le> f j\n  card\n   (insert\n     (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n     S) =\n  Suc n\n  insert\n   (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j)) S\n  \\<subseteq> PR", "show \"?P (Suc n)\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>insert\n                  (SOME i.\n                      i \\<in> PR - S \\<and>\n                      (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n                  S.\n     \\<forall>j\\<in>PR -\n                    insert\n                     (SOME i.\n                         i \\<in> PR - S \\<and>\n                         (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n                     S.\n        f i \\<le> f j\n  card\n   (insert\n     (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j))\n     S) =\n  Suc n\n  insert\n   (SOME i. i \\<in> PR - S \\<and> (\\<forall>j\\<in>PR - S. f i \\<le> f j)) S\n  \\<subseteq> PR\n\ngoal (1 subgoal):\n 1. \\<exists>S\\<subseteq>PR.\n       card S = Suc n \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)", "by blast"], ["proof (state)\nthis:\n  \\<exists>S\\<subseteq>PR.\n     card S = Suc n \\<and>\n     (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Suc n \\<le> np \\<longrightarrow>\n  (\\<exists>S\\<subseteq>PR.\n      card S = Suc n \\<and>\n      (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  khl \\<le> np \\<longrightarrow>\n  (\\<exists>S\\<subseteq>PR.\n      card S = khl \\<and>\n      (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j))\n\ngoal (1 subgoal):\n 1. kmin f PR \\<subseteq> PR \\<and>\n    card (kmin f PR) = khl \\<and>\n    (\\<forall>i\\<in>kmin f PR. \\<forall>j\\<in>PR - kmin f PR. f i \\<le> f j)", "hence \"?P khl\""], ["proof (prove)\nusing this:\n  khl \\<le> np \\<longrightarrow>\n  (\\<exists>S\\<subseteq>PR.\n      card S = khl \\<and>\n      (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j))\n\ngoal (1 subgoal):\n 1. \\<exists>S\\<subseteq>PR.\n       card S = khl \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)", "using khl_bound"], ["proof (prove)\nusing this:\n  khl \\<le> np \\<longrightarrow>\n  (\\<exists>S\\<subseteq>PR.\n      card S = khl \\<and>\n      (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j))\n  khl < np\n\ngoal (1 subgoal):\n 1. \\<exists>S\\<subseteq>PR.\n       card S = khl \\<and>\n       (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)", "by auto"], ["proof (state)\nthis:\n  \\<exists>S\\<subseteq>PR.\n     card S = khl \\<and>\n     (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)\n\ngoal (1 subgoal):\n 1. kmin f PR \\<subseteq> PR \\<and>\n    card (kmin f PR) = khl \\<and>\n    (\\<forall>i\\<in>kmin f PR. \\<forall>j\\<in>PR - kmin f PR. f i \\<le> f j)", "then"], ["proof (chain)\npicking this:\n  \\<exists>S\\<subseteq>PR.\n     card S = khl \\<and>\n     (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)", "obtain S where \n    \"S\\<le>PR \\<and> card S = khl \\<and> (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)\""], ["proof (prove)\nusing this:\n  \\<exists>S\\<subseteq>PR.\n     card S = khl \\<and>\n     (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        S \\<subseteq> PR \\<and>\n        card S = khl \\<and>\n        (\\<forall>i\\<in>S.\n            \\<forall>j\\<in>PR - S. f i \\<le> f j) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  S \\<subseteq> PR \\<and>\n  card S = khl \\<and>\n  (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)\n\ngoal (1 subgoal):\n 1. kmin f PR \\<subseteq> PR \\<and>\n    card (kmin f PR) = khl \\<and>\n    (\\<forall>i\\<in>kmin f PR. \\<forall>j\\<in>PR - kmin f PR. f i \\<le> f j)", "thus ?thesis"], ["proof (prove)\nusing this:\n  S \\<subseteq> PR \\<and>\n  card S = khl \\<and>\n  (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)\n\ngoal (1 subgoal):\n 1. kmin f PR \\<subseteq> PR \\<and>\n    card (kmin f PR) = khl \\<and>\n    (\\<forall>i\\<in>kmin f PR. \\<forall>j\\<in>PR - kmin f PR. f i \\<le> f j)", "by (unfold kmin_def)\n      (rule someI [where P=\"\\<lambda>S. S \\<subseteq> PR \\<and> card S = khl \\<and> (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)\"])"], ["proof (state)\nthis:\n  kmin f PR \\<subseteq> PR \\<and>\n  card (kmin f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmin f PR. \\<forall>j\\<in>PR - kmin f PR. f i \\<le> f j)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The next two lemmas are trivial from the previous ones\\<close>"], ["", "lemma finite_kmax:\n\"finite (kmax f PR)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (kmax f PR)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (kmax f PR)", "have \"finite PR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite PR", "by auto"], ["proof (state)\nthis:\n  finite PR\n\ngoal (1 subgoal):\n 1. finite (kmax f PR)", "with  kmax_prop and finite_subset"], ["proof (chain)\npicking this:\n  kmax ?f PR \\<subseteq> PR \\<and>\n  card (kmax ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmax ?f PR.\n      \\<forall>j\\<in>PR - kmax ?f PR. ?f j \\<le> ?f i)\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n  finite PR", "show ?thesis"], ["proof (prove)\nusing this:\n  kmax ?f PR \\<subseteq> PR \\<and>\n  card (kmax ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmax ?f PR.\n      \\<forall>j\\<in>PR - kmax ?f PR. ?f j \\<le> ?f i)\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n  finite PR\n\ngoal (1 subgoal):\n 1. finite (kmax f PR)", "by blast"], ["proof (state)\nthis:\n  finite (kmax f PR)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finite_kmin:\n\"finite (kmin f PR)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (kmin f PR)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (kmin f PR)", "have \"finite PR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite PR", "by auto"], ["proof (state)\nthis:\n  finite PR\n\ngoal (1 subgoal):\n 1. finite (kmin f PR)", "with  kmin_prop and finite_subset"], ["proof (chain)\npicking this:\n  kmin ?f PR \\<subseteq> PR \\<and>\n  card (kmin ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmin ?f PR.\n      \\<forall>j\\<in>PR - kmin ?f PR. ?f i \\<le> ?f j)\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n  finite PR", "show ?thesis"], ["proof (prove)\nusing this:\n  kmin ?f PR \\<subseteq> PR \\<and>\n  card (kmin ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmin ?f PR.\n      \\<forall>j\\<in>PR - kmin ?f PR. ?f i \\<le> ?f j)\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n  finite PR\n\ngoal (1 subgoal):\n 1. finite (kmin f PR)", "by blast"], ["proof (state)\nthis:\n  finite (kmin f PR)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>This lemma is necesary because the definition of the\nconvergence function use the builtin Max and Min.\\<close>"], ["", "lemma reduce_not_empty:\n\"reduce f PR \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reduce f PR \\<noteq> {}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. reduce f PR \\<noteq> {}", "from constants_ax"], ["proof (chain)\npicking this:\n  2 * khl < np", "have \n    \"0 < (np - 2 * khl)\""], ["proof (prove)\nusing this:\n  2 * khl < np\n\ngoal (1 subgoal):\n 1. 0 < np - 2 * khl", "by arith"], ["proof (state)\nthis:\n  0 < np - 2 * khl\n\ngoal (1 subgoal):\n 1. reduce f PR \\<noteq> {}", "also"], ["proof (state)\nthis:\n  0 < np - 2 * khl\n\ngoal (1 subgoal):\n 1. reduce f PR \\<noteq> {}", "{"], ["proof (state)\nthis:\n  0 < np - 2 * khl\n\ngoal (1 subgoal):\n 1. reduce f PR \\<noteq> {}", "from kmax_prop kmin_prop"], ["proof (chain)\npicking this:\n  kmax ?f PR \\<subseteq> PR \\<and>\n  card (kmax ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmax ?f PR.\n      \\<forall>j\\<in>PR - kmax ?f PR. ?f j \\<le> ?f i)\n  kmin ?f PR \\<subseteq> PR \\<and>\n  card (kmin ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmin ?f PR.\n      \\<forall>j\\<in>PR - kmin ?f PR. ?f i \\<le> ?f j)", "have \"card (kmax f PR) = khl \\<and> card (kmin f PR) = khl\""], ["proof (prove)\nusing this:\n  kmax ?f PR \\<subseteq> PR \\<and>\n  card (kmax ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmax ?f PR.\n      \\<forall>j\\<in>PR - kmax ?f PR. ?f j \\<le> ?f i)\n  kmin ?f PR \\<subseteq> PR \\<and>\n  card (kmin ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmin ?f PR.\n      \\<forall>j\\<in>PR - kmin ?f PR. ?f i \\<le> ?f j)\n\ngoal (1 subgoal):\n 1. card (kmax f PR) = khl \\<and> card (kmin f PR) = khl", "by blast"], ["proof (state)\nthis:\n  card (kmax f PR) = khl \\<and> card (kmin f PR) = khl\n\ngoal (1 subgoal):\n 1. reduce f PR \\<noteq> {}", "hence \"card (kmax f PR \\<union> kmin f PR) <= 2 * khl\""], ["proof (prove)\nusing this:\n  card (kmax f PR) = khl \\<and> card (kmin f PR) = khl\n\ngoal (1 subgoal):\n 1. card (kmax f PR \\<union> kmin f PR) \\<le> 2 * khl", "using card_Un_le[of \"kmax f PR\" \"kmin f PR\"]"], ["proof (prove)\nusing this:\n  card (kmax f PR) = khl \\<and> card (kmin f PR) = khl\n  card (kmax f PR \\<union> kmin f PR)\n  \\<le> card (kmax f PR) + card (kmin f PR)\n\ngoal (1 subgoal):\n 1. card (kmax f PR \\<union> kmin f PR) \\<le> 2 * khl", "by simp"], ["proof (state)\nthis:\n  card (kmax f PR \\<union> kmin f PR) \\<le> 2 * khl\n\ngoal (1 subgoal):\n 1. reduce f PR \\<noteq> {}", "}"], ["proof (state)\nthis:\n  card (kmax f PR \\<union> kmin f PR) \\<le> 2 * khl\n\ngoal (1 subgoal):\n 1. reduce f PR \\<noteq> {}", "hence \n    \"... <= card PR - card (kmax f PR \\<union> kmin f PR)\""], ["proof (prove)\nusing this:\n  card (kmax f PR \\<union> kmin f PR) \\<le> 2 * khl\n\ngoal (1 subgoal):\n 1. np - 2 * khl \\<le> card PR - card (kmax f PR \\<union> kmin f PR)", "by simp"], ["proof (state)\nthis:\n  np - 2 * khl \\<le> card PR - card (kmax f PR \\<union> kmin f PR)\n\ngoal (1 subgoal):\n 1. reduce f PR \\<noteq> {}", "also"], ["proof (state)\nthis:\n  np - 2 * khl \\<le> card PR - card (kmax f PR \\<union> kmin f PR)\n\ngoal (1 subgoal):\n 1. reduce f PR \\<noteq> {}", "{"], ["proof (state)\nthis:\n  np - 2 * khl \\<le> card PR - card (kmax f PR \\<union> kmin f PR)\n\ngoal (1 subgoal):\n 1. reduce f PR \\<noteq> {}", "from kmax_prop and kmin_prop"], ["proof (chain)\npicking this:\n  kmax ?f PR \\<subseteq> PR \\<and>\n  card (kmax ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmax ?f PR.\n      \\<forall>j\\<in>PR - kmax ?f PR. ?f j \\<le> ?f i)\n  kmin ?f PR \\<subseteq> PR \\<and>\n  card (kmin ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmin ?f PR.\n      \\<forall>j\\<in>PR - kmin ?f PR. ?f i \\<le> ?f j)", "have\n    \"(kmax f PR \\<union> kmin f PR) \\<subseteq> PR\""], ["proof (prove)\nusing this:\n  kmax ?f PR \\<subseteq> PR \\<and>\n  card (kmax ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmax ?f PR.\n      \\<forall>j\\<in>PR - kmax ?f PR. ?f j \\<le> ?f i)\n  kmin ?f PR \\<subseteq> PR \\<and>\n  card (kmin ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmin ?f PR.\n      \\<forall>j\\<in>PR - kmin ?f PR. ?f i \\<le> ?f j)\n\ngoal (1 subgoal):\n 1. kmax f PR \\<union> kmin f PR \\<subseteq> PR", "by blast"], ["proof (state)\nthis:\n  kmax f PR \\<union> kmin f PR \\<subseteq> PR\n\ngoal (1 subgoal):\n 1. reduce f PR \\<noteq> {}", "}"], ["proof (state)\nthis:\n  kmax f PR \\<union> kmin f PR \\<subseteq> PR\n\ngoal (1 subgoal):\n 1. reduce f PR \\<noteq> {}", "hence\n    \"... = card (PR-(kmax f PR \\<union> kmin f PR))\""], ["proof (prove)\nusing this:\n  kmax f PR \\<union> kmin f PR \\<subseteq> PR\n\ngoal (1 subgoal):\n 1. card PR - card (kmax f PR \\<union> kmin f PR) =\n    card (PR - (kmax f PR \\<union> kmin f PR))", "apply (intro card_Diff_subset[THEN sym])"], ["proof (prove)\ngoal (2 subgoals):\n 1. kmax f PR \\<union> kmin f PR \\<subseteq> PR \\<Longrightarrow>\n    finite (kmax f PR \\<union> kmin f PR)\n 2. kmax f PR \\<union> kmin f PR \\<subseteq> PR \\<Longrightarrow>\n    kmax f PR \\<union> kmin f PR \\<subseteq> PR", "apply (rule finite_subset)"], ["proof (prove)\ngoal (3 subgoals):\n 1. kmax f PR \\<union> kmin f PR \\<subseteq> PR \\<Longrightarrow>\n    kmax f PR \\<union> kmin f PR \\<subseteq> ?B3\n 2. kmax f PR \\<union> kmin f PR \\<subseteq> PR \\<Longrightarrow> finite ?B3\n 3. kmax f PR \\<union> kmin f PR \\<subseteq> PR \\<Longrightarrow>\n    kmax f PR \\<union> kmin f PR \\<subseteq> PR", "by auto"], ["proof (state)\nthis:\n  card PR - card (kmax f PR \\<union> kmin f PR) =\n  card (PR - (kmax f PR \\<union> kmin f PR))\n\ngoal (1 subgoal):\n 1. reduce f PR \\<noteq> {}", "(* by (intro card_Diff_subset,auto) *)"], ["proof (state)\nthis:\n  card PR - card (kmax f PR \\<union> kmin f PR) =\n  card (PR - (kmax f PR \\<union> kmin f PR))\n\ngoal (1 subgoal):\n 1. reduce f PR \\<noteq> {}", "finally"], ["proof (chain)\npicking this:\n  0 < card (PR - (kmax f PR \\<union> kmin f PR))", "have \"0 < card (PR-(kmax f PR \\<union> kmin f PR))\""], ["proof (prove)\nusing this:\n  0 < card (PR - (kmax f PR \\<union> kmin f PR))\n\ngoal (1 subgoal):\n 1. 0 < card (PR - (kmax f PR \\<union> kmin f PR))", "."], ["proof (state)\nthis:\n  0 < card (PR - (kmax f PR \\<union> kmin f PR))\n\ngoal (1 subgoal):\n 1. reduce f PR \\<noteq> {}", "hence \"(PR-(kmax f PR \\<union> kmin f PR)) \\<noteq> {}\""], ["proof (prove)\nusing this:\n  0 < card (PR - (kmax f PR \\<union> kmin f PR))\n\ngoal (1 subgoal):\n 1. PR - (kmax f PR \\<union> kmin f PR) \\<noteq> {}", "by (intro notI, simp only: card_0_eq, simp)"], ["proof (state)\nthis:\n  PR - (kmax f PR \\<union> kmin f PR) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. reduce f PR \\<noteq> {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  PR - (kmax f PR \\<union> kmin f PR) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. reduce f PR \\<noteq> {}", "by (auto simp add: reduce_def)"], ["proof (state)\nthis:\n  reduce f PR \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The next three are the main lemmas necessary for prove the\nTranslation Invariance property.\\<close>"], ["", "lemma reduce_shift:\nfixes f :: \"nat \\<Rightarrow> Clocktime\"\n  shows\n  \"f ` (PR - (kmax f PR \\<union> kmin f PR)) = \n            f ` (PR - (kmax (\\<lambda> p. f p + c) PR \\<union> kmin (\\<lambda> p. f p + c) PR))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` (PR - (kmax f PR \\<union> kmin f PR)) =\n    f `\n    (PR -\n     (kmax (\\<lambda>p. f p + c) PR \\<union> kmin (\\<lambda>p. f p + c) PR))", "apply (unfold kmin_def kmax_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. f `\n    (PR -\n     ((SOME S.\n          S \\<subseteq> PR \\<and>\n          card S = khl \\<and>\n          (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f j \\<le> f i)) \\<union>\n      (SOME S.\n          S \\<subseteq> PR \\<and>\n          card S = khl \\<and>\n          (\\<forall>i\\<in>S. \\<forall>j\\<in>PR - S. f i \\<le> f j)))) =\n    f `\n    (PR -\n     ((SOME S.\n          S \\<subseteq> PR \\<and>\n          card S = khl \\<and>\n          (\\<forall>i\\<in>S.\n              \\<forall>j\\<in>PR - S. f j + c \\<le> f i + c)) \\<union>\n      (SOME S.\n          S \\<subseteq> PR \\<and>\n          card S = khl \\<and>\n          (\\<forall>i\\<in>S.\n              \\<forall>j\\<in>PR - S. f i + c \\<le> f j + c))))", "by simp"], ["", "lemma max_shift:\nfixes f :: \"nat \\<Rightarrow> Clocktime\" and S\nassumes notEmpFin: \"S \\<noteq> {}\" \"finite S\"\nshows\n\"Max (f`S) + x = Max ( (\\<lambda> p. f p + x) ` S) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max (f ` S) + x = (MAX p\\<in>S. f p + x)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Max (f ` S) + x = (MAX p\\<in>S. f p + x)", "from notEmpFin"], ["proof (chain)\npicking this:\n  S \\<noteq> {}\n  finite S", "have \"f`S \\<noteq> {}\" and \"(\\<lambda> p. f p + x) ` S \\<noteq> {}\""], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n  finite S\n\ngoal (1 subgoal):\n 1. f ` S \\<noteq> {} &&& (\\<lambda>p. f p + x) ` S \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  f ` S \\<noteq> {}\n  (\\<lambda>p. f p + x) ` S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Max (f ` S) + x = (MAX p\\<in>S. f p + x)", "with notEmpFin"], ["proof (chain)\npicking this:\n  S \\<noteq> {}\n  finite S\n  f ` S \\<noteq> {}\n  (\\<lambda>p. f p + x) ` S \\<noteq> {}", "have\n    \"Max (f`S) \\<in> f ` S \" \"Max ((\\<lambda> p. f p + x)`S) \\<in> (\\<lambda> p. f p + x) ` S \"\n    \"(\\<forall>fs \\<in> (f`S). fs \\<le> Max (f`S))\" \n    \"(\\<forall>fs \\<in> ((\\<lambda> p. f p + x)`S). fs \\<le> Max ((\\<lambda> p. f p + x)`S))\""], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n  finite S\n  f ` S \\<noteq> {}\n  (\\<lambda>p. f p + x) ` S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (Max (f ` S) \\<in> f ` S &&&\n     (MAX p\\<in>S. f p + x) \\<in> (\\<lambda>p. f p + x) ` S) &&&\n    \\<forall>fs\\<in>f ` S. fs \\<le> Max (f ` S) &&&\n    \\<forall>fs\\<in>(\\<lambda>p. f p + x) ` S.\n       fs \\<le> (MAX p\\<in>S. f p + x)", "by auto"], ["proof (state)\nthis:\n  Max (f ` S) \\<in> f ` S\n  (MAX p\\<in>S. f p + x) \\<in> (\\<lambda>p. f p + x) ` S\n  \\<forall>fs\\<in>f ` S. fs \\<le> Max (f ` S)\n  \\<forall>fs\\<in>(\\<lambda>p. f p + x) ` S. fs \\<le> (MAX p\\<in>S. f p + x)\n\ngoal (1 subgoal):\n 1. Max (f ` S) + x = (MAX p\\<in>S. f p + x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Max (f ` S) \\<in> f ` S\n  (MAX p\\<in>S. f p + x) \\<in> (\\<lambda>p. f p + x) ` S\n  \\<forall>fs\\<in>f ` S. fs \\<le> Max (f ` S)\n  \\<forall>fs\\<in>(\\<lambda>p. f p + x) ` S. fs \\<le> (MAX p\\<in>S. f p + x)\n\ngoal (1 subgoal):\n 1. Max (f ` S) + x = (MAX p\\<in>S. f p + x)", "by force"], ["proof (state)\nthis:\n  Max (f ` S) + x = (MAX p\\<in>S. f p + x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma min_shift:\nfixes f :: \"nat \\<Rightarrow> Clocktime\" and S\nassumes notEmpFin: \"S \\<noteq> {}\" \"finite S\"\nshows\n\"Min (f`S) + x = Min ( (\\<lambda> p. f p + x) ` S) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. Min (f ` S) + x = (MIN p\\<in>S. f p + x)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Min (f ` S) + x = (MIN p\\<in>S. f p + x)", "from notEmpFin"], ["proof (chain)\npicking this:\n  S \\<noteq> {}\n  finite S", "have \"f`S \\<noteq> {}\" and \"(\\<lambda> p. f p + x) ` S \\<noteq> {}\""], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n  finite S\n\ngoal (1 subgoal):\n 1. f ` S \\<noteq> {} &&& (\\<lambda>p. f p + x) ` S \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  f ` S \\<noteq> {}\n  (\\<lambda>p. f p + x) ` S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Min (f ` S) + x = (MIN p\\<in>S. f p + x)", "with notEmpFin"], ["proof (chain)\npicking this:\n  S \\<noteq> {}\n  finite S\n  f ` S \\<noteq> {}\n  (\\<lambda>p. f p + x) ` S \\<noteq> {}", "have\n    \"Min (f`S) \\<in> f ` S \" \"Min ((\\<lambda> p. f p + x)`S) \\<in> (\\<lambda> p. f p + x) ` S \"\n    \"(\\<forall>fs \\<in> (f`S). Min (f`S) <= fs)\" \n    \"(\\<forall>fs \\<in> ((\\<lambda> p. f p + x)`S). Min ((\\<lambda> p. f p + x)`S) <= fs)\""], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n  finite S\n  f ` S \\<noteq> {}\n  (\\<lambda>p. f p + x) ` S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (Min (f ` S) \\<in> f ` S &&&\n     (MIN p\\<in>S. f p + x) \\<in> (\\<lambda>p. f p + x) ` S) &&&\n    \\<forall>fs\\<in>f ` S. Min (f ` S) \\<le> fs &&&\n    \\<forall>fs\\<in>(\\<lambda>p. f p + x) ` S.\n       (MIN p\\<in>S. f p + x) \\<le> fs", "by auto"], ["proof (state)\nthis:\n  Min (f ` S) \\<in> f ` S\n  (MIN p\\<in>S. f p + x) \\<in> (\\<lambda>p. f p + x) ` S\n  \\<forall>fs\\<in>f ` S. Min (f ` S) \\<le> fs\n  \\<forall>fs\\<in>(\\<lambda>p. f p + x) ` S. (MIN p\\<in>S. f p + x) \\<le> fs\n\ngoal (1 subgoal):\n 1. Min (f ` S) + x = (MIN p\\<in>S. f p + x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Min (f ` S) \\<in> f ` S\n  (MIN p\\<in>S. f p + x) \\<in> (\\<lambda>p. f p + x) ` S\n  \\<forall>fs\\<in>f ` S. Min (f ` S) \\<le> fs\n  \\<forall>fs\\<in>(\\<lambda>p. f p + x) ` S. (MIN p\\<in>S. f p + x) \\<le> fs\n\ngoal (1 subgoal):\n 1. Min (f ` S) + x = (MIN p\\<in>S. f p + x)", "by force"], ["proof (state)\nthis:\n  Min (f ` S) + x = (MIN p\\<in>S. f p + x)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Main theorem\\<close>"], ["", "theorem trans_inv: \nfixes f :: \"nat \\<Rightarrow> Clocktime\"\n  shows\n\"cfnl p f + x = cfnl p (\\<lambda> p. f p + x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cfnl p f + x = cfnl p (\\<lambda>p. f p + x)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cfnl p f + x = cfnl p (\\<lambda>p. f p + x)", "have \"cfnl p (\\<lambda> p. f p + x) = \n      (Max (reduce (\\<lambda> p. f p + x) PR) + Min (reduce (\\<lambda> p. f p + x) PR)) / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cfnl p (\\<lambda>p. f p + x) =\n    (Max (reduce (\\<lambda>p. f p + x) PR) +\n     Min (reduce (\\<lambda>p. f p + x) PR)) /\n    2", "by (unfold cfnl_def, simp)"], ["proof (state)\nthis:\n  cfnl p (\\<lambda>p. f p + x) =\n  (Max (reduce (\\<lambda>p. f p + x) PR) +\n   Min (reduce (\\<lambda>p. f p + x) PR)) /\n  2\n\ngoal (1 subgoal):\n 1. cfnl p f + x = cfnl p (\\<lambda>p. f p + x)", "also"], ["proof (state)\nthis:\n  cfnl p (\\<lambda>p. f p + x) =\n  (Max (reduce (\\<lambda>p. f p + x) PR) +\n   Min (reduce (\\<lambda>p. f p + x) PR)) /\n  2\n\ngoal (1 subgoal):\n 1. cfnl p f + x = cfnl p (\\<lambda>p. f p + x)", "have \"... = \n    (Max ((\\<lambda> p. f p + x) ` \n             (PR - (kmax (\\<lambda> p. f p + x) PR \\<union> kmin (\\<lambda> p. f p + x) PR))) + \n     Min ((\\<lambda> p. f p + x) ` \n             (PR - (kmax (\\<lambda> p. f p + x) PR \\<union> kmin (\\<lambda> p. f p + x) PR)))) / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Max (reduce (\\<lambda>p. f p + x) PR) +\n     Min (reduce (\\<lambda>p. f p + x) PR)) /\n    2 =\n    ((MAX p\\<in>PR -\n                (kmax (\\<lambda>p. f p + x) PR \\<union>\n                 kmin (\\<lambda>p. f p + x) PR).\n         f p + x) +\n     (MIN p\\<in>PR -\n                (kmax (\\<lambda>p. f p + x) PR \\<union>\n                 kmin (\\<lambda>p. f p + x) PR).\n         f p + x)) /\n    2", "by (unfold reduce_def, simp)"], ["proof (state)\nthis:\n  (Max (reduce (\\<lambda>p. f p + x) PR) +\n   Min (reduce (\\<lambda>p. f p + x) PR)) /\n  2 =\n  ((MAX p\\<in>PR -\n              (kmax (\\<lambda>p. f p + x) PR \\<union>\n               kmin (\\<lambda>p. f p + x) PR).\n       f p + x) +\n   (MIN p\\<in>PR -\n              (kmax (\\<lambda>p. f p + x) PR \\<union>\n               kmin (\\<lambda>p. f p + x) PR).\n       f p + x)) /\n  2\n\ngoal (1 subgoal):\n 1. cfnl p f + x = cfnl p (\\<lambda>p. f p + x)", "also"], ["proof (state)\nthis:\n  (Max (reduce (\\<lambda>p. f p + x) PR) +\n   Min (reduce (\\<lambda>p. f p + x) PR)) /\n  2 =\n  ((MAX p\\<in>PR -\n              (kmax (\\<lambda>p. f p + x) PR \\<union>\n               kmin (\\<lambda>p. f p + x) PR).\n       f p + x) +\n   (MIN p\\<in>PR -\n              (kmax (\\<lambda>p. f p + x) PR \\<union>\n               kmin (\\<lambda>p. f p + x) PR).\n       f p + x)) /\n  2\n\ngoal (1 subgoal):\n 1. cfnl p f + x = cfnl p (\\<lambda>p. f p + x)", "have\n    \"... = \n    (Max (f ` \n             (PR - (kmax (\\<lambda> p. f p + x) PR \\<union> kmin (\\<lambda> p. f p + x) PR))) + x + \n     Min (f ` \n             (PR - (kmax (\\<lambda> p. f p + x) PR \\<union> kmin (\\<lambda> p. f p + x) PR))) + x ) / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((MAX p\\<in>PR -\n                (kmax (\\<lambda>p. f p + x) PR \\<union>\n                 kmin (\\<lambda>p. f p + x) PR).\n         f p + x) +\n     (MIN p\\<in>PR -\n                (kmax (\\<lambda>p. f p + x) PR \\<union>\n                 kmin (\\<lambda>p. f p + x) PR).\n         f p + x)) /\n    2 =\n    (Max (f `\n          (PR -\n           (kmax (\\<lambda>p. f p + x) PR \\<union>\n            kmin (\\<lambda>p. f p + x) PR))) +\n     x +\n     Min (f `\n          (PR -\n           (kmax (\\<lambda>p. f p + x) PR \\<union>\n            kmin (\\<lambda>p. f p + x) PR))) +\n     x) /\n    2", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ((MAX p\\<in>PR -\n                (kmax (\\<lambda>p. f p + x) PR \\<union>\n                 kmin (\\<lambda>p. f p + x) PR).\n         f p + x) +\n     (MIN p\\<in>PR -\n                (kmax (\\<lambda>p. f p + x) PR \\<union>\n                 kmin (\\<lambda>p. f p + x) PR).\n         f p + x)) /\n    2 =\n    (Max (f `\n          (PR -\n           (kmax (\\<lambda>p. f p + x) PR \\<union>\n            kmin (\\<lambda>p. f p + x) PR))) +\n     x +\n     Min (f `\n          (PR -\n           (kmax (\\<lambda>p. f p + x) PR \\<union>\n            kmin (\\<lambda>p. f p + x) PR))) +\n     x) /\n    2", "have \"finite (PR - (kmax (\\<lambda> p. f p + x) PR \\<union> kmin (\\<lambda> p. f p + x) PR))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     (PR -\n      (kmax (\\<lambda>p. f p + x) PR \\<union>\n       kmin (\\<lambda>p. f p + x) PR))", "by auto"], ["proof (state)\nthis:\n  finite\n   (PR -\n    (kmax (\\<lambda>p. f p + x) PR \\<union> kmin (\\<lambda>p. f p + x) PR))\n\ngoal (1 subgoal):\n 1. ((MAX p\\<in>PR -\n                (kmax (\\<lambda>p. f p + x) PR \\<union>\n                 kmin (\\<lambda>p. f p + x) PR).\n         f p + x) +\n     (MIN p\\<in>PR -\n                (kmax (\\<lambda>p. f p + x) PR \\<union>\n                 kmin (\\<lambda>p. f p + x) PR).\n         f p + x)) /\n    2 =\n    (Max (f `\n          (PR -\n           (kmax (\\<lambda>p. f p + x) PR \\<union>\n            kmin (\\<lambda>p. f p + x) PR))) +\n     x +\n     Min (f `\n          (PR -\n           (kmax (\\<lambda>p. f p + x) PR \\<union>\n            kmin (\\<lambda>p. f p + x) PR))) +\n     x) /\n    2", "moreover"], ["proof (state)\nthis:\n  finite\n   (PR -\n    (kmax (\\<lambda>p. f p + x) PR \\<union> kmin (\\<lambda>p. f p + x) PR))\n\ngoal (1 subgoal):\n 1. ((MAX p\\<in>PR -\n                (kmax (\\<lambda>p. f p + x) PR \\<union>\n                 kmin (\\<lambda>p. f p + x) PR).\n         f p + x) +\n     (MIN p\\<in>PR -\n                (kmax (\\<lambda>p. f p + x) PR \\<union>\n                 kmin (\\<lambda>p. f p + x) PR).\n         f p + x)) /\n    2 =\n    (Max (f `\n          (PR -\n           (kmax (\\<lambda>p. f p + x) PR \\<union>\n            kmin (\\<lambda>p. f p + x) PR))) +\n     x +\n     Min (f `\n          (PR -\n           (kmax (\\<lambda>p. f p + x) PR \\<union>\n            kmin (\\<lambda>p. f p + x) PR))) +\n     x) /\n    2", "from reduce_not_empty"], ["proof (chain)\npicking this:\n  reduce ?f PR \\<noteq> {}", "have \n      \"PR - (kmax (\\<lambda> p. f p + x) PR \\<union> kmin (\\<lambda> p. f p + x) PR) \\<noteq> {}\""], ["proof (prove)\nusing this:\n  reduce ?f PR \\<noteq> {}\n\ngoal (1 subgoal):\n 1. PR -\n    (kmax (\\<lambda>p. f p + x) PR \\<union>\n     kmin (\\<lambda>p. f p + x) PR) \\<noteq>\n    {}", "by (auto simp add: reduce_def)"], ["proof (state)\nthis:\n  PR -\n  (kmax (\\<lambda>p. f p + x) PR \\<union>\n   kmin (\\<lambda>p. f p + x) PR) \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. ((MAX p\\<in>PR -\n                (kmax (\\<lambda>p. f p + x) PR \\<union>\n                 kmin (\\<lambda>p. f p + x) PR).\n         f p + x) +\n     (MIN p\\<in>PR -\n                (kmax (\\<lambda>p. f p + x) PR \\<union>\n                 kmin (\\<lambda>p. f p + x) PR).\n         f p + x)) /\n    2 =\n    (Max (f `\n          (PR -\n           (kmax (\\<lambda>p. f p + x) PR \\<union>\n            kmin (\\<lambda>p. f p + x) PR))) +\n     x +\n     Min (f `\n          (PR -\n           (kmax (\\<lambda>p. f p + x) PR \\<union>\n            kmin (\\<lambda>p. f p + x) PR))) +\n     x) /\n    2", "ultimately"], ["proof (chain)\npicking this:\n  finite\n   (PR -\n    (kmax (\\<lambda>p. f p + x) PR \\<union> kmin (\\<lambda>p. f p + x) PR))\n  PR -\n  (kmax (\\<lambda>p. f p + x) PR \\<union>\n   kmin (\\<lambda>p. f p + x) PR) \\<noteq>\n  {}", "have \n      \"Max ((\\<lambda> p. f p + x) ` \n       (PR - (kmax (\\<lambda> p. f p + x) PR \\<union> kmin (\\<lambda> p. f p + x) PR)))\n      = \n       Max (f ` \n             (PR - (kmax (\\<lambda> p. f p + x) PR \\<union> kmin (\\<lambda> p. f p + x) PR))) + x\"\n       and \n      \"Min ((\\<lambda> p. f p + x) ` \n       (PR - (kmax (\\<lambda> p. f p + x) PR \\<union> kmin (\\<lambda> p. f p + x) PR)))\n      = \n       Min (f ` \n             (PR - (kmax (\\<lambda> p. f p + x) PR \\<union> kmin (\\<lambda> p. f p + x) PR))) + x\""], ["proof (prove)\nusing this:\n  finite\n   (PR -\n    (kmax (\\<lambda>p. f p + x) PR \\<union> kmin (\\<lambda>p. f p + x) PR))\n  PR -\n  (kmax (\\<lambda>p. f p + x) PR \\<union>\n   kmin (\\<lambda>p. f p + x) PR) \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. (MAX p\\<in>PR -\n               (kmax (\\<lambda>p. f p + x) PR \\<union>\n                kmin (\\<lambda>p. f p + x) PR).\n        f p + x) =\n    Max (f `\n         (PR -\n          (kmax (\\<lambda>p. f p + x) PR \\<union>\n           kmin (\\<lambda>p. f p + x) PR))) +\n    x &&&\n    (MIN p\\<in>PR -\n               (kmax (\\<lambda>p. f p + x) PR \\<union>\n                kmin (\\<lambda>p. f p + x) PR).\n        f p + x) =\n    Min (f `\n         (PR -\n          (kmax (\\<lambda>p. f p + x) PR \\<union>\n           kmin (\\<lambda>p. f p + x) PR))) +\n    x", "using max_shift and min_shift"], ["proof (prove)\nusing this:\n  finite\n   (PR -\n    (kmax (\\<lambda>p. f p + x) PR \\<union> kmin (\\<lambda>p. f p + x) PR))\n  PR -\n  (kmax (\\<lambda>p. f p + x) PR \\<union>\n   kmin (\\<lambda>p. f p + x) PR) \\<noteq>\n  {}\n  \\<lbrakk>?S \\<noteq> {}; finite ?S\\<rbrakk>\n  \\<Longrightarrow> Max (?f ` ?S) + ?x = (MAX p\\<in>?S. ?f p + ?x)\n  \\<lbrakk>?S \\<noteq> {}; finite ?S\\<rbrakk>\n  \\<Longrightarrow> Min (?f ` ?S) + ?x = (MIN p\\<in>?S. ?f p + ?x)\n\ngoal (1 subgoal):\n 1. (MAX p\\<in>PR -\n               (kmax (\\<lambda>p. f p + x) PR \\<union>\n                kmin (\\<lambda>p. f p + x) PR).\n        f p + x) =\n    Max (f `\n         (PR -\n          (kmax (\\<lambda>p. f p + x) PR \\<union>\n           kmin (\\<lambda>p. f p + x) PR))) +\n    x &&&\n    (MIN p\\<in>PR -\n               (kmax (\\<lambda>p. f p + x) PR \\<union>\n                kmin (\\<lambda>p. f p + x) PR).\n        f p + x) =\n    Min (f `\n         (PR -\n          (kmax (\\<lambda>p. f p + x) PR \\<union>\n           kmin (\\<lambda>p. f p + x) PR))) +\n    x", "by auto"], ["proof (state)\nthis:\n  (MAX p\\<in>PR -\n             (kmax (\\<lambda>p. f p + x) PR \\<union>\n              kmin (\\<lambda>p. f p + x) PR).\n      f p + x) =\n  Max (f `\n       (PR -\n        (kmax (\\<lambda>p. f p + x) PR \\<union>\n         kmin (\\<lambda>p. f p + x) PR))) +\n  x\n  (MIN p\\<in>PR -\n             (kmax (\\<lambda>p. f p + x) PR \\<union>\n              kmin (\\<lambda>p. f p + x) PR).\n      f p + x) =\n  Min (f `\n       (PR -\n        (kmax (\\<lambda>p. f p + x) PR \\<union>\n         kmin (\\<lambda>p. f p + x) PR))) +\n  x\n\ngoal (1 subgoal):\n 1. ((MAX p\\<in>PR -\n                (kmax (\\<lambda>p. f p + x) PR \\<union>\n                 kmin (\\<lambda>p. f p + x) PR).\n         f p + x) +\n     (MIN p\\<in>PR -\n                (kmax (\\<lambda>p. f p + x) PR \\<union>\n                 kmin (\\<lambda>p. f p + x) PR).\n         f p + x)) /\n    2 =\n    (Max (f `\n          (PR -\n           (kmax (\\<lambda>p. f p + x) PR \\<union>\n            kmin (\\<lambda>p. f p + x) PR))) +\n     x +\n     Min (f `\n          (PR -\n           (kmax (\\<lambda>p. f p + x) PR \\<union>\n            kmin (\\<lambda>p. f p + x) PR))) +\n     x) /\n    2", "thus ?thesis"], ["proof (prove)\nusing this:\n  (MAX p\\<in>PR -\n             (kmax (\\<lambda>p. f p + x) PR \\<union>\n              kmin (\\<lambda>p. f p + x) PR).\n      f p + x) =\n  Max (f `\n       (PR -\n        (kmax (\\<lambda>p. f p + x) PR \\<union>\n         kmin (\\<lambda>p. f p + x) PR))) +\n  x\n  (MIN p\\<in>PR -\n             (kmax (\\<lambda>p. f p + x) PR \\<union>\n              kmin (\\<lambda>p. f p + x) PR).\n      f p + x) =\n  Min (f `\n       (PR -\n        (kmax (\\<lambda>p. f p + x) PR \\<union>\n         kmin (\\<lambda>p. f p + x) PR))) +\n  x\n\ngoal (1 subgoal):\n 1. ((MAX p\\<in>PR -\n                (kmax (\\<lambda>p. f p + x) PR \\<union>\n                 kmin (\\<lambda>p. f p + x) PR).\n         f p + x) +\n     (MIN p\\<in>PR -\n                (kmax (\\<lambda>p. f p + x) PR \\<union>\n                 kmin (\\<lambda>p. f p + x) PR).\n         f p + x)) /\n    2 =\n    (Max (f `\n          (PR -\n           (kmax (\\<lambda>p. f p + x) PR \\<union>\n            kmin (\\<lambda>p. f p + x) PR))) +\n     x +\n     Min (f `\n          (PR -\n           (kmax (\\<lambda>p. f p + x) PR \\<union>\n            kmin (\\<lambda>p. f p + x) PR))) +\n     x) /\n    2", "by auto"], ["proof (state)\nthis:\n  ((MAX p\\<in>PR -\n              (kmax (\\<lambda>p. f p + x) PR \\<union>\n               kmin (\\<lambda>p. f p + x) PR).\n       f p + x) +\n   (MIN p\\<in>PR -\n              (kmax (\\<lambda>p. f p + x) PR \\<union>\n               kmin (\\<lambda>p. f p + x) PR).\n       f p + x)) /\n  2 =\n  (Max (f `\n        (PR -\n         (kmax (\\<lambda>p. f p + x) PR \\<union>\n          kmin (\\<lambda>p. f p + x) PR))) +\n   x +\n   Min (f `\n        (PR -\n         (kmax (\\<lambda>p. f p + x) PR \\<union>\n          kmin (\\<lambda>p. f p + x) PR))) +\n   x) /\n  2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((MAX p\\<in>PR -\n              (kmax (\\<lambda>p. f p + x) PR \\<union>\n               kmin (\\<lambda>p. f p + x) PR).\n       f p + x) +\n   (MIN p\\<in>PR -\n              (kmax (\\<lambda>p. f p + x) PR \\<union>\n               kmin (\\<lambda>p. f p + x) PR).\n       f p + x)) /\n  2 =\n  (Max (f `\n        (PR -\n         (kmax (\\<lambda>p. f p + x) PR \\<union>\n          kmin (\\<lambda>p. f p + x) PR))) +\n   x +\n   Min (f `\n        (PR -\n         (kmax (\\<lambda>p. f p + x) PR \\<union>\n          kmin (\\<lambda>p. f p + x) PR))) +\n   x) /\n  2\n\ngoal (1 subgoal):\n 1. cfnl p f + x = cfnl p (\\<lambda>p. f p + x)", "also"], ["proof (state)\nthis:\n  ((MAX p\\<in>PR -\n              (kmax (\\<lambda>p. f p + x) PR \\<union>\n               kmin (\\<lambda>p. f p + x) PR).\n       f p + x) +\n   (MIN p\\<in>PR -\n              (kmax (\\<lambda>p. f p + x) PR \\<union>\n               kmin (\\<lambda>p. f p + x) PR).\n       f p + x)) /\n  2 =\n  (Max (f `\n        (PR -\n         (kmax (\\<lambda>p. f p + x) PR \\<union>\n          kmin (\\<lambda>p. f p + x) PR))) +\n   x +\n   Min (f `\n        (PR -\n         (kmax (\\<lambda>p. f p + x) PR \\<union>\n          kmin (\\<lambda>p. f p + x) PR))) +\n   x) /\n  2\n\ngoal (1 subgoal):\n 1. cfnl p f + x = cfnl p (\\<lambda>p. f p + x)", "from reduce_shift"], ["proof (chain)\npicking this:\n  ?f ` (PR - (kmax ?f PR \\<union> kmin ?f PR)) =\n  ?f `\n  (PR -\n   (kmax (\\<lambda>p. ?f p + ?c) PR \\<union>\n    kmin (\\<lambda>p. ?f p + ?c) PR))", "have\n    \"... = \n    (Max (f ` \n             (PR - (kmax f  PR \\<union> kmin f PR))) + x + \n     Min (f ` \n             (PR - (kmax f PR \\<union> kmin f PR))) + x ) / 2\""], ["proof (prove)\nusing this:\n  ?f ` (PR - (kmax ?f PR \\<union> kmin ?f PR)) =\n  ?f `\n  (PR -\n   (kmax (\\<lambda>p. ?f p + ?c) PR \\<union>\n    kmin (\\<lambda>p. ?f p + ?c) PR))\n\ngoal (1 subgoal):\n 1. (Max (f `\n          (PR -\n           (kmax (\\<lambda>p. f p + x) PR \\<union>\n            kmin (\\<lambda>p. f p + x) PR))) +\n     x +\n     Min (f `\n          (PR -\n           (kmax (\\<lambda>p. f p + x) PR \\<union>\n            kmin (\\<lambda>p. f p + x) PR))) +\n     x) /\n    2 =\n    (Max (f ` (PR - (kmax f PR \\<union> kmin f PR))) + x +\n     Min (f ` (PR - (kmax f PR \\<union> kmin f PR))) +\n     x) /\n    2", "by auto"], ["proof (state)\nthis:\n  (Max (f `\n        (PR -\n         (kmax (\\<lambda>p. f p + x) PR \\<union>\n          kmin (\\<lambda>p. f p + x) PR))) +\n   x +\n   Min (f `\n        (PR -\n         (kmax (\\<lambda>p. f p + x) PR \\<union>\n          kmin (\\<lambda>p. f p + x) PR))) +\n   x) /\n  2 =\n  (Max (f ` (PR - (kmax f PR \\<union> kmin f PR))) + x +\n   Min (f ` (PR - (kmax f PR \\<union> kmin f PR))) +\n   x) /\n  2\n\ngoal (1 subgoal):\n 1. cfnl p f + x = cfnl p (\\<lambda>p. f p + x)", "also"], ["proof (state)\nthis:\n  (Max (f `\n        (PR -\n         (kmax (\\<lambda>p. f p + x) PR \\<union>\n          kmin (\\<lambda>p. f p + x) PR))) +\n   x +\n   Min (f `\n        (PR -\n         (kmax (\\<lambda>p. f p + x) PR \\<union>\n          kmin (\\<lambda>p. f p + x) PR))) +\n   x) /\n  2 =\n  (Max (f ` (PR - (kmax f PR \\<union> kmin f PR))) + x +\n   Min (f ` (PR - (kmax f PR \\<union> kmin f PR))) +\n   x) /\n  2\n\ngoal (1 subgoal):\n 1. cfnl p f + x = cfnl p (\\<lambda>p. f p + x)", "have \"... = ((Max (reduce f PR)+ x) + (Min (reduce f PR) + x)) / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Max (f ` (PR - (kmax f PR \\<union> kmin f PR))) + x +\n     Min (f ` (PR - (kmax f PR \\<union> kmin f PR))) +\n     x) /\n    2 =\n    (Max (reduce f PR) + x + (Min (reduce f PR) + x)) / 2", "by (auto simp add: reduce_def)"], ["proof (state)\nthis:\n  (Max (f ` (PR - (kmax f PR \\<union> kmin f PR))) + x +\n   Min (f ` (PR - (kmax f PR \\<union> kmin f PR))) +\n   x) /\n  2 =\n  (Max (reduce f PR) + x + (Min (reduce f PR) + x)) / 2\n\ngoal (1 subgoal):\n 1. cfnl p f + x = cfnl p (\\<lambda>p. f p + x)", "also"], ["proof (state)\nthis:\n  (Max (f ` (PR - (kmax f PR \\<union> kmin f PR))) + x +\n   Min (f ` (PR - (kmax f PR \\<union> kmin f PR))) +\n   x) /\n  2 =\n  (Max (reduce f PR) + x + (Min (reduce f PR) + x)) / 2\n\ngoal (1 subgoal):\n 1. cfnl p f + x = cfnl p (\\<lambda>p. f p + x)", "have \"... = (Max (reduce f PR) + Min (reduce f PR)) / 2 + x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Max (reduce f PR) + x + (Min (reduce f PR) + x)) / 2 =\n    (Max (reduce f PR) + Min (reduce f PR)) / 2 + x", "by auto"], ["proof (state)\nthis:\n  (Max (reduce f PR) + x + (Min (reduce f PR) + x)) / 2 =\n  (Max (reduce f PR) + Min (reduce f PR)) / 2 + x\n\ngoal (1 subgoal):\n 1. cfnl p f + x = cfnl p (\\<lambda>p. f p + x)", "finally"], ["proof (chain)\npicking this:\n  cfnl p (\\<lambda>p. f p + x) =\n  (Max (reduce f PR) + Min (reduce f PR)) / 2 + x", "show ?thesis"], ["proof (prove)\nusing this:\n  cfnl p (\\<lambda>p. f p + x) =\n  (Max (reduce f PR) + Min (reduce f PR)) / 2 + x\n\ngoal (1 subgoal):\n 1. cfnl p f + x = cfnl p (\\<lambda>p. f p + x)", "by (auto simp add: cfnl_def)"], ["proof (state)\nthis:\n  cfnl p f + x = cfnl p (\\<lambda>p. f p + x)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Precision Enhancement property\\<close>"], ["", "text \\<open>An informal proof of this theorem can be found in \\cite{miner93}\\<close>"], ["", "subsubsection \\<open>Auxiliary lemmas\\<close>"], ["", "text \\<open>This first lemma is most important for prove the\nproperty. This is a consecuence of the @{thm [source] card_Un_Int}\nlemma\\<close>"], ["", "lemma pigeonhole:\nassumes\n  finitA: \"finite A\" and \n  Bss: \"B \\<subseteq> A\" and Css: \"C \\<subseteq> A\" and \n  cardH: \"card A + k <= card B + card C\"\nshows \"k <= card (B \\<inter> C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> card (B \\<inter> C)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<le> card (B \\<inter> C)", "from Bss Css"], ["proof (chain)\npicking this:\n  B \\<subseteq> A\n  C \\<subseteq> A", "have \"B \\<union> C \\<subseteq> A\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  C \\<subseteq> A\n\ngoal (1 subgoal):\n 1. B \\<union> C \\<subseteq> A", "by blast"], ["proof (state)\nthis:\n  B \\<union> C \\<subseteq> A\n\ngoal (1 subgoal):\n 1. k \\<le> card (B \\<inter> C)", "with finitA"], ["proof (chain)\npicking this:\n  finite A\n  B \\<union> C \\<subseteq> A", "have \"card (B \\<union> C) <= card A\""], ["proof (prove)\nusing this:\n  finite A\n  B \\<union> C \\<subseteq> A\n\ngoal (1 subgoal):\n 1. card (B \\<union> C) \\<le> card A", "by (simp add: card_mono)"], ["proof (state)\nthis:\n  card (B \\<union> C) \\<le> card A\n\ngoal (1 subgoal):\n 1. k \\<le> card (B \\<inter> C)", "with cardH"], ["proof (chain)\npicking this:\n  card A + k \\<le> card B + card C\n  card (B \\<union> C) \\<le> card A", "have\n      h: \"k <= card B + card C - card (B \\<union> C)\""], ["proof (prove)\nusing this:\n  card A + k \\<le> card B + card C\n  card (B \\<union> C) \\<le> card A\n\ngoal (1 subgoal):\n 1. k \\<le> card B + card C - card (B \\<union> C)", "by arith"], ["proof (state)\nthis:\n  k \\<le> card B + card C - card (B \\<union> C)\n\ngoal (1 subgoal):\n 1. k \\<le> card (B \\<inter> C)", "from finitA Bss Css and finite_subset"], ["proof (chain)\npicking this:\n  finite A\n  B \\<subseteq> A\n  C \\<subseteq> A\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A", "have \"finite B \\<and> finite C\""], ["proof (prove)\nusing this:\n  finite A\n  B \\<subseteq> A\n  C \\<subseteq> A\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite B \\<and> finite C", "by auto"], ["proof (state)\nthis:\n  finite B \\<and> finite C\n\ngoal (1 subgoal):\n 1. k \\<le> card (B \\<inter> C)", "thus ?thesis"], ["proof (prove)\nusing this:\n  finite B \\<and> finite C\n\ngoal (1 subgoal):\n 1. k \\<le> card (B \\<inter> C)", "using card_Un_Int and h"], ["proof (prove)\nusing this:\n  finite B \\<and> finite C\n  \\<lbrakk>finite ?A; finite ?B\\<rbrakk>\n  \\<Longrightarrow> card ?A + card ?B =\n                    card (?A \\<union> ?B) + card (?A \\<inter> ?B)\n  k \\<le> card B + card C - card (B \\<union> C)\n\ngoal (1 subgoal):\n 1. k \\<le> card (B \\<inter> C)", "by force"], ["proof (state)\nthis:\n  k \\<le> card (B \\<inter> C)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>This lemma is a trivial consecuence of the previous one. With\nonly this lemma we can prove the Precision Enhancement property with\nthe bound $\\pi(x,y) = x + y$. But this bound not satisfy the property\n\\[ \\pi(2\\Lambda + 2 \\beta\\rho, \\delta_S + 2\\rho(r_{max}+\\beta) +\n2\\Lambda) \\leq \\delta_S \n\\] that is used in \\cite{shankar92mechanical} for prove the\nSchneider's schema.\\<close>"], ["", "lemma subsets_int:\nassumes\n  finitA: \"finite A\" and \n  Bss: \"B \\<subseteq> A\" and Css: \"C \\<subseteq> A\" and \n  cardH: \"card A < card B + card C\"\nshows\n  \"B \\<inter> C \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<inter> C \\<noteq> {}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<inter> C \\<noteq> {}", "from finitA Bss Css cardH"], ["proof (chain)\npicking this:\n  finite A\n  B \\<subseteq> A\n  C \\<subseteq> A\n  card A < card B + card C", "have \"1 <= card (B \\<inter> C)\""], ["proof (prove)\nusing this:\n  finite A\n  B \\<subseteq> A\n  C \\<subseteq> A\n  card A < card B + card C\n\ngoal (1 subgoal):\n 1. 1 \\<le> card (B \\<inter> C)", "by (auto intro!:  pigeonhole)"], ["proof (state)\nthis:\n  1 \\<le> card (B \\<inter> C)\n\ngoal (1 subgoal):\n 1. B \\<inter> C \\<noteq> {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  1 \\<le> card (B \\<inter> C)\n\ngoal (1 subgoal):\n 1. B \\<inter> C \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  B \\<inter> C \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>This lemma is true because @{term \"reduce f PR\"} is the image\nof @{term \"PR-(kmax f PR \\<union> kmin f PR)\"} by the function @{term f}.\\<close>"], ["", "lemma exist_reduce:\n\"\\<forall> c \\<in> reduce f PR. \\<exists> i\\<in> PR-(kmax f PR \\<union> kmin f PR). f i = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>reduce f PR.\n       \\<exists>i\\<in>PR - (kmax f PR \\<union> kmin f PR). f i = c", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c.\n       c \\<in> reduce f PR \\<Longrightarrow>\n       \\<exists>i\\<in>PR - (kmax f PR \\<union> kmin f PR). f i = c", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c.\n       c \\<in> reduce f PR \\<Longrightarrow>\n       \\<exists>i\\<in>PR - (kmax f PR \\<union> kmin f PR). f i = c", "assume asm: \"c \\<in> reduce f PR\""], ["proof (state)\nthis:\n  c \\<in> reduce f PR\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       c \\<in> reduce f PR \\<Longrightarrow>\n       \\<exists>i\\<in>PR - (kmax f PR \\<union> kmin f PR). f i = c", "thus \"\\<exists> i\\<in> PR-(kmax f PR \\<union> kmin f PR). f i = c\""], ["proof (prove)\nusing this:\n  c \\<in> reduce f PR\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>PR - (kmax f PR \\<union> kmin f PR). f i = c", "by (auto simp add: reduce_def kmax_def kmin_def)"], ["proof (state)\nthis:\n  \\<exists>i\\<in>PR - (kmax f PR \\<union> kmin f PR). f i = c\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The next three lemmas are consequence of the definition of\n@{term reduce}, @{term kmax} and @{term kmin}\\<close>"], ["", "lemma finite_reduce:\n\"finite (reduce f PR)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (reduce f PR)", "proof(unfold reduce_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (f ` (PR - (kmax f PR \\<union> kmin f PR)))", "show \"finite (f ` (PR - (kmax f PR \\<union> kmin f PR)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (f ` (PR - (kmax f PR \\<union> kmin f PR)))", "by auto"], ["proof (state)\nthis:\n  finite (f ` (PR - (kmax f PR \\<union> kmin f PR)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma kmax_ge:\n  \"\\<forall> i\\<in> (kmax f PR). \\<forall> r \\<in> (reduce f PR). r <= f i \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>kmax f PR. \\<forall>r\\<in>reduce f PR. r \\<le> f i", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> kmax f PR \\<Longrightarrow>\n       \\<forall>r\\<in>reduce f PR. r \\<le> f i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> kmax f PR \\<Longrightarrow>\n       \\<forall>r\\<in>reduce f PR. r \\<le> f i", "assume asm: \"i \\<in> kmax f PR\""], ["proof (state)\nthis:\n  i \\<in> kmax f PR\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> kmax f PR \\<Longrightarrow>\n       \\<forall>r\\<in>reduce f PR. r \\<le> f i", "show \"\\<forall>r\\<in>reduce f PR. r \\<le> f i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>reduce f PR. r \\<le> f i", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> reduce f PR \\<Longrightarrow> r \\<le> f i", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> reduce f PR \\<Longrightarrow> r \\<le> f i", "assume asm2: \"r \\<in> reduce f PR\""], ["proof (state)\nthis:\n  r \\<in> reduce f PR\n\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> reduce f PR \\<Longrightarrow> r \\<le> f i", "show \"r \\<le> f i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<le> f i", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<le> f i", "from asm2 and exist_reduce"], ["proof (chain)\npicking this:\n  r \\<in> reduce f PR\n  \\<forall>c\\<in>reduce ?f PR.\n     \\<exists>i\\<in>PR - (kmax ?f PR \\<union> kmin ?f PR). ?f i = c", "have\n        \"\\<exists> j \\<in> PR-(kmax f PR \\<union> kmin f PR). f j = r\""], ["proof (prove)\nusing this:\n  r \\<in> reduce f PR\n  \\<forall>c\\<in>reduce ?f PR.\n     \\<exists>i\\<in>PR - (kmax ?f PR \\<union> kmin ?f PR). ?f i = c\n\ngoal (1 subgoal):\n 1. \\<exists>j\\<in>PR - (kmax f PR \\<union> kmin f PR). f j = r", "by blast"], ["proof (state)\nthis:\n  \\<exists>j\\<in>PR - (kmax f PR \\<union> kmin f PR). f j = r\n\ngoal (1 subgoal):\n 1. r \\<le> f i", "then"], ["proof (chain)\npicking this:\n  \\<exists>j\\<in>PR - (kmax f PR \\<union> kmin f PR). f j = r", "obtain j \n      where fjr:\"j \\<in> PR-(kmax f PR \\<union> kmin f PR) \\<and> f j = r\""], ["proof (prove)\nusing this:\n  \\<exists>j\\<in>PR - (kmax f PR \\<union> kmin f PR). f j = r\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        j \\<in> PR - (kmax f PR \\<union> kmin f PR) \\<and>\n        f j = r \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  j \\<in> PR - (kmax f PR \\<union> kmin f PR) \\<and> f j = r\n\ngoal (1 subgoal):\n 1. r \\<le> f i", "hence \"j \\<in> (PR - kmax f PR)\""], ["proof (prove)\nusing this:\n  j \\<in> PR - (kmax f PR \\<union> kmin f PR) \\<and> f j = r\n\ngoal (1 subgoal):\n 1. j \\<in> PR - kmax f PR", "by blast"], ["proof (state)\nthis:\n  j \\<in> PR - kmax f PR\n\ngoal (1 subgoal):\n 1. r \\<le> f i", "from this fjr asm"], ["proof (chain)\npicking this:\n  j \\<in> PR - kmax f PR\n  j \\<in> PR - (kmax f PR \\<union> kmin f PR) \\<and> f j = r\n  i \\<in> kmax f PR", "show ?thesis"], ["proof (prove)\nusing this:\n  j \\<in> PR - kmax f PR\n  j \\<in> PR - (kmax f PR \\<union> kmin f PR) \\<and> f j = r\n  i \\<in> kmax f PR\n\ngoal (1 subgoal):\n 1. r \\<le> f i", "using kmax_prop"], ["proof (prove)\nusing this:\n  j \\<in> PR - kmax f PR\n  j \\<in> PR - (kmax f PR \\<union> kmin f PR) \\<and> f j = r\n  i \\<in> kmax f PR\n  kmax ?f PR \\<subseteq> PR \\<and>\n  card (kmax ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmax ?f PR.\n      \\<forall>j\\<in>PR - kmax ?f PR. ?f j \\<le> ?f i)\n\ngoal (1 subgoal):\n 1. r \\<le> f i", "by auto"], ["proof (state)\nthis:\n  r \\<le> f i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r \\<le> f i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>r\\<in>reduce f PR. r \\<le> f i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma kmin_le:\n  \"\\<forall> i\\<in> (kmin f PR). \\<forall> r \\<in> (reduce f PR). f i <= r \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>kmin f PR. \\<forall>r\\<in>reduce f PR. f i \\<le> r", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> kmin f PR \\<Longrightarrow>\n       \\<forall>r\\<in>reduce f PR. f i \\<le> r", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> kmin f PR \\<Longrightarrow>\n       \\<forall>r\\<in>reduce f PR. f i \\<le> r", "assume asm: \"i \\<in> kmin f PR\""], ["proof (state)\nthis:\n  i \\<in> kmin f PR\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> kmin f PR \\<Longrightarrow>\n       \\<forall>r\\<in>reduce f PR. f i \\<le> r", "show \"\\<forall>r\\<in>reduce f PR. f i \\<le> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>reduce f PR. f i \\<le> r", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> reduce f PR \\<Longrightarrow> f i \\<le> r", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> reduce f PR \\<Longrightarrow> f i \\<le> r", "assume asm2: \"r \\<in> reduce f PR\""], ["proof (state)\nthis:\n  r \\<in> reduce f PR\n\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> reduce f PR \\<Longrightarrow> f i \\<le> r", "show \"f i <= r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i \\<le> r", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f i \\<le> r", "from asm2 and exist_reduce"], ["proof (chain)\npicking this:\n  r \\<in> reduce f PR\n  \\<forall>c\\<in>reduce ?f PR.\n     \\<exists>i\\<in>PR - (kmax ?f PR \\<union> kmin ?f PR). ?f i = c", "have\n        \"\\<exists> j\\<in> PR-(kmax f PR \\<union> kmin f PR). f j = r\""], ["proof (prove)\nusing this:\n  r \\<in> reduce f PR\n  \\<forall>c\\<in>reduce ?f PR.\n     \\<exists>i\\<in>PR - (kmax ?f PR \\<union> kmin ?f PR). ?f i = c\n\ngoal (1 subgoal):\n 1. \\<exists>j\\<in>PR - (kmax f PR \\<union> kmin f PR). f j = r", "by blast"], ["proof (state)\nthis:\n  \\<exists>j\\<in>PR - (kmax f PR \\<union> kmin f PR). f j = r\n\ngoal (1 subgoal):\n 1. f i \\<le> r", "then"], ["proof (chain)\npicking this:\n  \\<exists>j\\<in>PR - (kmax f PR \\<union> kmin f PR). f j = r", "obtain j \n      where fjr:\"j \\<in> PR-(kmax f PR \\<union> kmin f PR) \\<and> f j = r\""], ["proof (prove)\nusing this:\n  \\<exists>j\\<in>PR - (kmax f PR \\<union> kmin f PR). f j = r\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        j \\<in> PR - (kmax f PR \\<union> kmin f PR) \\<and>\n        f j = r \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  j \\<in> PR - (kmax f PR \\<union> kmin f PR) \\<and> f j = r\n\ngoal (1 subgoal):\n 1. f i \\<le> r", "hence \"j \\<in> (PR - kmin f PR)\""], ["proof (prove)\nusing this:\n  j \\<in> PR - (kmax f PR \\<union> kmin f PR) \\<and> f j = r\n\ngoal (1 subgoal):\n 1. j \\<in> PR - kmin f PR", "by blast"], ["proof (state)\nthis:\n  j \\<in> PR - kmin f PR\n\ngoal (1 subgoal):\n 1. f i \\<le> r", "from this fjr asm"], ["proof (chain)\npicking this:\n  j \\<in> PR - kmin f PR\n  j \\<in> PR - (kmax f PR \\<union> kmin f PR) \\<and> f j = r\n  i \\<in> kmin f PR", "show ?thesis"], ["proof (prove)\nusing this:\n  j \\<in> PR - kmin f PR\n  j \\<in> PR - (kmax f PR \\<union> kmin f PR) \\<and> f j = r\n  i \\<in> kmin f PR\n\ngoal (1 subgoal):\n 1. f i \\<le> r", "using kmin_prop"], ["proof (prove)\nusing this:\n  j \\<in> PR - kmin f PR\n  j \\<in> PR - (kmax f PR \\<union> kmin f PR) \\<and> f j = r\n  i \\<in> kmin f PR\n  kmin ?f PR \\<subseteq> PR \\<and>\n  card (kmin ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmin ?f PR.\n      \\<forall>j\\<in>PR - kmin ?f PR. ?f i \\<le> ?f j)\n\ngoal (1 subgoal):\n 1. f i \\<le> r", "by auto"], ["proof (state)\nthis:\n  f i \\<le> r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f i \\<le> r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>r\\<in>reduce f PR. f i \\<le> r\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The next lemma is used for prove the Precision Enhancement\nproperty. This has been proved in ICS. The proof is in the appendix\n\\ref{sec:abs_distrib_mult}.  This cannot be prove by a simple \\<open>arith\\<close> or \\<open>auto\\<close> tactic.\\<close>"], ["", "text\\<open>This lemma is true also with \\<open>0 <= c\\<close> !!\\<close>"], ["", "lemma abs_distrib_div:\n  \"0 < (c::real)  \\<Longrightarrow> \\<bar>a / c - b / c\\<bar> = \\<bar>a - b\\<bar> / c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < c \\<Longrightarrow>\n    \\<bar>a / c - b / c\\<bar> = \\<bar>a - b\\<bar> / c", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < c \\<Longrightarrow>\n    \\<bar>a / c - b / c\\<bar> = \\<bar>a - b\\<bar> / c", "assume ch: \"0<c\""], ["proof (state)\nthis:\n  0 < c\n\ngoal (1 subgoal):\n 1. 0 < c \\<Longrightarrow>\n    \\<bar>a / c - b / c\\<bar> = \\<bar>a - b\\<bar> / c", "{"], ["proof (state)\nthis:\n  0 < c\n\ngoal (1 subgoal):\n 1. 0 < c \\<Longrightarrow>\n    \\<bar>a / c - b / c\\<bar> = \\<bar>a - b\\<bar> / c", "fix d :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < c \\<Longrightarrow>\n    \\<bar>a / c - b / c\\<bar> = \\<bar>a - b\\<bar> / c", "assume dh: \"0<=d\""], ["proof (state)\nthis:\n  0 \\<le> d\n\ngoal (1 subgoal):\n 1. 0 < c \\<Longrightarrow>\n    \\<bar>a / c - b / c\\<bar> = \\<bar>a - b\\<bar> / c", "have \"a * d - b * d = (a - b) * d \""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * d - b * d = (a - b) * d", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  a * d - b * d = (a - b) * d\n\ngoal (1 subgoal):\n 1. 0 < c \\<Longrightarrow>\n    \\<bar>a / c - b / c\\<bar> = \\<bar>a - b\\<bar> / c", "hence \"\\<bar>a * d - b * d\\<bar> = \\<bar>(a - b) * d\\<bar>\""], ["proof (prove)\nusing this:\n  a * d - b * d = (a - b) * d\n\ngoal (1 subgoal):\n 1. \\<bar>a * d - b * d\\<bar> = \\<bar>(a - b) * d\\<bar>", "by simp"], ["proof (state)\nthis:\n  \\<bar>a * d - b * d\\<bar> = \\<bar>(a - b) * d\\<bar>\n\ngoal (1 subgoal):\n 1. 0 < c \\<Longrightarrow>\n    \\<bar>a / c - b / c\\<bar> = \\<bar>a - b\\<bar> / c", "also"], ["proof (state)\nthis:\n  \\<bar>a * d - b * d\\<bar> = \\<bar>(a - b) * d\\<bar>\n\ngoal (1 subgoal):\n 1. 0 < c \\<Longrightarrow>\n    \\<bar>a / c - b / c\\<bar> = \\<bar>a - b\\<bar> / c", "with dh"], ["proof (chain)\npicking this:\n  0 \\<le> d\n  \\<bar>a * d - b * d\\<bar> = \\<bar>(a - b) * d\\<bar>", "have\n      \"... = \\<bar>a - b\\<bar> * d\""], ["proof (prove)\nusing this:\n  0 \\<le> d\n  \\<bar>a * d - b * d\\<bar> = \\<bar>(a - b) * d\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>(a - b) * d\\<bar> = \\<bar>a - b\\<bar> * d", "by (simp add: abs_mult)"], ["proof (state)\nthis:\n  \\<bar>(a - b) * d\\<bar> = \\<bar>a - b\\<bar> * d\n\ngoal (1 subgoal):\n 1. 0 < c \\<Longrightarrow>\n    \\<bar>a / c - b / c\\<bar> = \\<bar>a - b\\<bar> / c", "finally"], ["proof (chain)\npicking this:\n  \\<bar>a * d - b * d\\<bar> = \\<bar>a - b\\<bar> * d", "have \"\\<bar>a * d - b * d\\<bar> = \\<bar>a - b\\<bar> * d\""], ["proof (prove)\nusing this:\n  \\<bar>a * d - b * d\\<bar> = \\<bar>a - b\\<bar> * d\n\ngoal (1 subgoal):\n 1. \\<bar>a * d - b * d\\<bar> = \\<bar>a - b\\<bar> * d", "."], ["proof (state)\nthis:\n  \\<bar>a * d - b * d\\<bar> = \\<bar>a - b\\<bar> * d\n\ngoal (1 subgoal):\n 1. 0 < c \\<Longrightarrow>\n    \\<bar>a / c - b / c\\<bar> = \\<bar>a - b\\<bar> / c", "(* This sublemma is solved by ICS, file: abs_distrib_mult.ics *)\n    (* It is not solved nor \n       by (auto simp add: distrib_right diff_minus)(arith) \n        in Isabelle  *)"], ["proof (state)\nthis:\n  \\<bar>a * d - b * d\\<bar> = \\<bar>a - b\\<bar> * d\n\ngoal (1 subgoal):\n 1. 0 < c \\<Longrightarrow>\n    \\<bar>a / c - b / c\\<bar> = \\<bar>a - b\\<bar> / c", "}"], ["proof (state)\nthis:\n  0 \\<le> ?d2 \\<Longrightarrow>\n  \\<bar>a * ?d2 - b * ?d2\\<bar> = \\<bar>a - b\\<bar> * ?d2\n\ngoal (1 subgoal):\n 1. 0 < c \\<Longrightarrow>\n    \\<bar>a / c - b / c\\<bar> = \\<bar>a - b\\<bar> / c", "with ch and divide_inverse"], ["proof (chain)\npicking this:\n  0 < c\n  ?a / ?b = ?a * inverse ?b\n  0 \\<le> ?d2 \\<Longrightarrow>\n  \\<bar>a * ?d2 - b * ?d2\\<bar> = \\<bar>a - b\\<bar> * ?d2", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < c\n  ?a / ?b = ?a * inverse ?b\n  0 \\<le> ?d2 \\<Longrightarrow>\n  \\<bar>a * ?d2 - b * ?d2\\<bar> = \\<bar>a - b\\<bar> * ?d2\n\ngoal (1 subgoal):\n 1. \\<bar>a / c - b / c\\<bar> = \\<bar>a - b\\<bar> / c", "by (auto simp add: divide_inverse)"], ["proof (state)\nthis:\n  \\<bar>a / c - b / c\\<bar> = \\<bar>a - b\\<bar> / c\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The next three lemmas are about the existence of bounds of the\nvalues @{term \"Max (reduce f PR)\"} and @{term \"Min (reduce f PR)\"}. These\nare used in the proof of the main property.\\<close>"], ["", "lemma uboundmax:\nassumes \n  hC: \"C \\<subseteq> PR\" and\n  hCk: \"np <= card C + khl\"\nshows\n  \"\\<exists> i\\<in>C. Max (reduce f PR) <= f i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i", "from reduce_not_empty and finite_reduce"], ["proof (chain)\npicking this:\n  reduce ?f PR \\<noteq> {}\n  finite (reduce ?f PR)", "have maxrinr: \"Max (reduce f PR) \\<in> reduce f PR\""], ["proof (prove)\nusing this:\n  reduce ?f PR \\<noteq> {}\n  finite (reduce ?f PR)\n\ngoal (1 subgoal):\n 1. Max (reduce f PR) \\<in> reduce f PR", "by simp"], ["proof (state)\nthis:\n  Max (reduce f PR) \\<in> reduce f PR\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i", "with exist_reduce"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>reduce ?f PR.\n     \\<exists>i\\<in>PR - (kmax ?f PR \\<union> kmin ?f PR). ?f i = c\n  Max (reduce f PR) \\<in> reduce f PR", "have \"\\<exists> i\\<in> PR-(kmax f PR \\<union> kmin f PR). f i = Max (reduce f PR)\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>reduce ?f PR.\n     \\<exists>i\\<in>PR - (kmax ?f PR \\<union> kmin ?f PR). ?f i = c\n  Max (reduce f PR) \\<in> reduce f PR\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>PR - (kmax f PR \\<union> kmin f PR).\n       f i = Max (reduce f PR)", "by simp"], ["proof (state)\nthis:\n  \\<exists>i\\<in>PR - (kmax f PR \\<union> kmin f PR).\n     f i = Max (reduce f PR)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i", "then"], ["proof (chain)\npicking this:\n  \\<exists>i\\<in>PR - (kmax f PR \\<union> kmin f PR).\n     f i = Max (reduce f PR)", "obtain pmax where \n    pmax_in_reduc: \"pmax \\<in> PR-(kmax f PR \\<union> kmin f PR)\" and \n    fpmax_ismax: \"f pmax = Max (reduce f PR)\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<in>PR - (kmax f PR \\<union> kmin f PR).\n     f i = Max (reduce f PR)\n\ngoal (1 subgoal):\n 1. (\\<And>pmax.\n        \\<lbrakk>pmax \\<in> PR - (kmax f PR \\<union> kmin f PR);\n         f pmax = Max (reduce f PR)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  pmax \\<in> PR - (kmax f PR \\<union> kmin f PR)\n  f pmax = Max (reduce f PR)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i", "hence \"C \\<inter> insert pmax (kmax f PR)  \\<noteq> {}\""], ["proof (prove)\nusing this:\n  pmax \\<in> PR - (kmax f PR \\<union> kmin f PR)\n  f pmax = Max (reduce f PR)\n\ngoal (1 subgoal):\n 1. C \\<inter> insert pmax (kmax f PR) \\<noteq> {}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>pmax \\<in> PR - (kmax f PR \\<union> kmin f PR);\n     f pmax = Max (reduce f PR)\\<rbrakk>\n    \\<Longrightarrow> C \\<inter> insert pmax (kmax f PR) \\<noteq> {}", "from kmax_prop and pmax_in_reduc \n      and finite_kmax and hCk"], ["proof (chain)\npicking this:\n  kmax ?f PR \\<subseteq> PR \\<and>\n  card (kmax ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmax ?f PR.\n      \\<forall>j\\<in>PR - kmax ?f PR. ?f j \\<le> ?f i)\n  pmax \\<in> PR - (kmax f PR \\<union> kmin f PR)\n  finite (kmax ?f PR)\n  np \\<le> card C + khl", "have \n      \"card PR < card C + card (insert pmax (kmax f PR))\""], ["proof (prove)\nusing this:\n  kmax ?f PR \\<subseteq> PR \\<and>\n  card (kmax ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmax ?f PR.\n      \\<forall>j\\<in>PR - kmax ?f PR. ?f j \\<le> ?f i)\n  pmax \\<in> PR - (kmax f PR \\<union> kmin f PR)\n  finite (kmax ?f PR)\n  np \\<le> card C + khl\n\ngoal (1 subgoal):\n 1. card PR < card C + card (insert pmax (kmax f PR))", "by simp"], ["proof (state)\nthis:\n  card PR < card C + card (insert pmax (kmax f PR))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pmax \\<in> PR - (kmax f PR \\<union> kmin f PR);\n     f pmax = Max (reduce f PR)\\<rbrakk>\n    \\<Longrightarrow> C \\<inter> insert pmax (kmax f PR) \\<noteq> {}", "moreover"], ["proof (state)\nthis:\n  card PR < card C + card (insert pmax (kmax f PR))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pmax \\<in> PR - (kmax f PR \\<union> kmin f PR);\n     f pmax = Max (reduce f PR)\\<rbrakk>\n    \\<Longrightarrow> C \\<inter> insert pmax (kmax f PR) \\<noteq> {}", "from pmax_in_reduc and kmax_prop"], ["proof (chain)\npicking this:\n  pmax \\<in> PR - (kmax f PR \\<union> kmin f PR)\n  kmax ?f PR \\<subseteq> PR \\<and>\n  card (kmax ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmax ?f PR.\n      \\<forall>j\\<in>PR - kmax ?f PR. ?f j \\<le> ?f i)", "have \"insert pmax (kmax f PR) \\<subseteq> PR\""], ["proof (prove)\nusing this:\n  pmax \\<in> PR - (kmax f PR \\<union> kmin f PR)\n  kmax ?f PR \\<subseteq> PR \\<and>\n  card (kmax ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmax ?f PR.\n      \\<forall>j\\<in>PR - kmax ?f PR. ?f j \\<le> ?f i)\n\ngoal (1 subgoal):\n 1. insert pmax (kmax f PR) \\<subseteq> PR", "by blast"], ["proof (state)\nthis:\n  insert pmax (kmax f PR) \\<subseteq> PR\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pmax \\<in> PR - (kmax f PR \\<union> kmin f PR);\n     f pmax = Max (reduce f PR)\\<rbrakk>\n    \\<Longrightarrow> C \\<inter> insert pmax (kmax f PR) \\<noteq> {}", "moreover"], ["proof (state)\nthis:\n  insert pmax (kmax f PR) \\<subseteq> PR\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pmax \\<in> PR - (kmax f PR \\<union> kmin f PR);\n     f pmax = Max (reduce f PR)\\<rbrakk>\n    \\<Longrightarrow> C \\<inter> insert pmax (kmax f PR) \\<noteq> {}", "note hC"], ["proof (state)\nthis:\n  C \\<subseteq> PR\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pmax \\<in> PR - (kmax f PR \\<union> kmin f PR);\n     f pmax = Max (reduce f PR)\\<rbrakk>\n    \\<Longrightarrow> C \\<inter> insert pmax (kmax f PR) \\<noteq> {}", "ultimately"], ["proof (chain)\npicking this:\n  card PR < card C + card (insert pmax (kmax f PR))\n  insert pmax (kmax f PR) \\<subseteq> PR\n  C \\<subseteq> PR", "show ?thesis"], ["proof (prove)\nusing this:\n  card PR < card C + card (insert pmax (kmax f PR))\n  insert pmax (kmax f PR) \\<subseteq> PR\n  C \\<subseteq> PR\n\ngoal (1 subgoal):\n 1. C \\<inter> insert pmax (kmax f PR) \\<noteq> {}", "using subsets_int[of PR C \"insert pmax (kmax f PR)\"]"], ["proof (prove)\nusing this:\n  card PR < card C + card (insert pmax (kmax f PR))\n  insert pmax (kmax f PR) \\<subseteq> PR\n  C \\<subseteq> PR\n  \\<lbrakk>finite PR; C \\<subseteq> PR;\n   insert pmax (kmax f PR) \\<subseteq> PR;\n   card PR < card C + card (insert pmax (kmax f PR))\\<rbrakk>\n  \\<Longrightarrow> C \\<inter> insert pmax (kmax f PR) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. C \\<inter> insert pmax (kmax f PR) \\<noteq> {}", "by simp"], ["proof (state)\nthis:\n  C \\<inter> insert pmax (kmax f PR) \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  C \\<inter> insert pmax (kmax f PR) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i", "hence res: \"\\<exists> i\\<in>C. i=pmax \\<or> i \\<in> kmax f PR\""], ["proof (prove)\nusing this:\n  C \\<inter> insert pmax (kmax f PR) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. i = pmax \\<or> i \\<in> kmax f PR", "by blast"], ["proof (state)\nthis:\n  \\<exists>i\\<in>C. i = pmax \\<or> i \\<in> kmax f PR\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i", "then"], ["proof (chain)\npicking this:\n  \\<exists>i\\<in>C. i = pmax \\<or> i \\<in> kmax f PR", "obtain i where\n    iinC: \"i\\<in>C\" and altern: \"i=pmax \\<or> i \\<in> kmax f PR\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<in>C. i = pmax \\<or> i \\<in> kmax f PR\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i \\<in> C; i = pmax \\<or> i \\<in> kmax f PR\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  i \\<in> C\n  i = pmax \\<or> i \\<in> kmax f PR\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i", "thus ?thesis"], ["proof (prove)\nusing this:\n  i \\<in> C\n  i = pmax \\<or> i \\<in> kmax f PR\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i", "proof(cases \"i=pmax\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<in> C; i = pmax \\<or> i \\<in> kmax f PR; i = pmax\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i\n 2. \\<lbrakk>i \\<in> C; i = pmax \\<or> i \\<in> kmax f PR;\n     i \\<noteq> pmax\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i", "case True"], ["proof (state)\nthis:\n  i = pmax\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<in> C; i = pmax \\<or> i \\<in> kmax f PR; i = pmax\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i\n 2. \\<lbrakk>i \\<in> C; i = pmax \\<or> i \\<in> kmax f PR;\n     i \\<noteq> pmax\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i", "with iinC fpmax_ismax"], ["proof (chain)\npicking this:\n  i \\<in> C\n  f pmax = Max (reduce f PR)\n  i = pmax", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<in> C\n  f pmax = Max (reduce f PR)\n  i = pmax\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i", "by force"], ["proof (state)\nthis:\n  \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<in> C; i = pmax \\<or> i \\<in> kmax f PR;\n     i \\<noteq> pmax\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<in> C; i = pmax \\<or> i \\<in> kmax f PR;\n     i \\<noteq> pmax\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i", "case False"], ["proof (state)\nthis:\n  i \\<noteq> pmax\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<in> C; i = pmax \\<or> i \\<in> kmax f PR;\n     i \\<noteq> pmax\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i", "with altern maxrinr fpmax_ismax kmax_ge"], ["proof (chain)\npicking this:\n  i = pmax \\<or> i \\<in> kmax f PR\n  Max (reduce f PR) \\<in> reduce f PR\n  f pmax = Max (reduce f PR)\n  \\<forall>i\\<in>kmax ?f PR. \\<forall>r\\<in>reduce ?f PR. r \\<le> ?f i\n  i \\<noteq> pmax", "have \"f pmax <= f i\""], ["proof (prove)\nusing this:\n  i = pmax \\<or> i \\<in> kmax f PR\n  Max (reduce f PR) \\<in> reduce f PR\n  f pmax = Max (reduce f PR)\n  \\<forall>i\\<in>kmax ?f PR. \\<forall>r\\<in>reduce ?f PR. r \\<le> ?f i\n  i \\<noteq> pmax\n\ngoal (1 subgoal):\n 1. f pmax \\<le> f i", "by simp"], ["proof (state)\nthis:\n  f pmax \\<le> f i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<in> C; i = pmax \\<or> i \\<in> kmax f PR;\n     i \\<noteq> pmax\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i", "with iinC fpmax_ismax"], ["proof (chain)\npicking this:\n  i \\<in> C\n  f pmax = Max (reduce f PR)\n  f pmax \\<le> f i", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<in> C\n  f pmax = Max (reduce f PR)\n  f pmax \\<le> f i\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i", "by auto"], ["proof (state)\nthis:\n  \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lboundmin:\nassumes \n  hC: \"C \\<subseteq> PR\" and\n  hCk: \"np <= card C + khl\"\nshows\n  \"\\<exists> i\\<in>C. f i <= Min (reduce f PR)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)", "from reduce_not_empty and finite_reduce"], ["proof (chain)\npicking this:\n  reduce ?f PR \\<noteq> {}\n  finite (reduce ?f PR)", "have minrinr: \"Min (reduce f PR) \\<in> reduce f PR\""], ["proof (prove)\nusing this:\n  reduce ?f PR \\<noteq> {}\n  finite (reduce ?f PR)\n\ngoal (1 subgoal):\n 1. Min (reduce f PR) \\<in> reduce f PR", "by simp"], ["proof (state)\nthis:\n  Min (reduce f PR) \\<in> reduce f PR\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)", "with exist_reduce"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>reduce ?f PR.\n     \\<exists>i\\<in>PR - (kmax ?f PR \\<union> kmin ?f PR). ?f i = c\n  Min (reduce f PR) \\<in> reduce f PR", "have \"\\<exists> i\\<in> PR-(kmax f PR \\<union> kmin f PR). f i = Min (reduce f PR)\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>reduce ?f PR.\n     \\<exists>i\\<in>PR - (kmax ?f PR \\<union> kmin ?f PR). ?f i = c\n  Min (reduce f PR) \\<in> reduce f PR\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>PR - (kmax f PR \\<union> kmin f PR).\n       f i = Min (reduce f PR)", "by simp"], ["proof (state)\nthis:\n  \\<exists>i\\<in>PR - (kmax f PR \\<union> kmin f PR).\n     f i = Min (reduce f PR)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)", "then"], ["proof (chain)\npicking this:\n  \\<exists>i\\<in>PR - (kmax f PR \\<union> kmin f PR).\n     f i = Min (reduce f PR)", "obtain pmin where \n    pmin_in_reduc: \"pmin \\<in> PR-(kmax f PR \\<union> kmin f PR)\" and \n    fpmin_ismin: \"f pmin = Min (reduce f PR)\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<in>PR - (kmax f PR \\<union> kmin f PR).\n     f i = Min (reduce f PR)\n\ngoal (1 subgoal):\n 1. (\\<And>pmin.\n        \\<lbrakk>pmin \\<in> PR - (kmax f PR \\<union> kmin f PR);\n         f pmin = Min (reduce f PR)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  pmin \\<in> PR - (kmax f PR \\<union> kmin f PR)\n  f pmin = Min (reduce f PR)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)", "hence \"C \\<inter> insert pmin (kmin f PR)  \\<noteq> {}\""], ["proof (prove)\nusing this:\n  pmin \\<in> PR - (kmax f PR \\<union> kmin f PR)\n  f pmin = Min (reduce f PR)\n\ngoal (1 subgoal):\n 1. C \\<inter> insert pmin (kmin f PR) \\<noteq> {}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>pmin \\<in> PR - (kmax f PR \\<union> kmin f PR);\n     f pmin = Min (reduce f PR)\\<rbrakk>\n    \\<Longrightarrow> C \\<inter> insert pmin (kmin f PR) \\<noteq> {}", "from kmin_prop and pmin_in_reduc \n      and finite_kmin and hCk"], ["proof (chain)\npicking this:\n  kmin ?f PR \\<subseteq> PR \\<and>\n  card (kmin ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmin ?f PR.\n      \\<forall>j\\<in>PR - kmin ?f PR. ?f i \\<le> ?f j)\n  pmin \\<in> PR - (kmax f PR \\<union> kmin f PR)\n  finite (kmin ?f PR)\n  np \\<le> card C + khl", "have \n      \"card PR < card C + card (insert pmin (kmin f PR))\""], ["proof (prove)\nusing this:\n  kmin ?f PR \\<subseteq> PR \\<and>\n  card (kmin ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmin ?f PR.\n      \\<forall>j\\<in>PR - kmin ?f PR. ?f i \\<le> ?f j)\n  pmin \\<in> PR - (kmax f PR \\<union> kmin f PR)\n  finite (kmin ?f PR)\n  np \\<le> card C + khl\n\ngoal (1 subgoal):\n 1. card PR < card C + card (insert pmin (kmin f PR))", "by simp"], ["proof (state)\nthis:\n  card PR < card C + card (insert pmin (kmin f PR))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pmin \\<in> PR - (kmax f PR \\<union> kmin f PR);\n     f pmin = Min (reduce f PR)\\<rbrakk>\n    \\<Longrightarrow> C \\<inter> insert pmin (kmin f PR) \\<noteq> {}", "moreover"], ["proof (state)\nthis:\n  card PR < card C + card (insert pmin (kmin f PR))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pmin \\<in> PR - (kmax f PR \\<union> kmin f PR);\n     f pmin = Min (reduce f PR)\\<rbrakk>\n    \\<Longrightarrow> C \\<inter> insert pmin (kmin f PR) \\<noteq> {}", "from pmin_in_reduc and kmin_prop"], ["proof (chain)\npicking this:\n  pmin \\<in> PR - (kmax f PR \\<union> kmin f PR)\n  kmin ?f PR \\<subseteq> PR \\<and>\n  card (kmin ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmin ?f PR.\n      \\<forall>j\\<in>PR - kmin ?f PR. ?f i \\<le> ?f j)", "have \"insert pmin (kmin f PR) \\<subseteq> PR\""], ["proof (prove)\nusing this:\n  pmin \\<in> PR - (kmax f PR \\<union> kmin f PR)\n  kmin ?f PR \\<subseteq> PR \\<and>\n  card (kmin ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmin ?f PR.\n      \\<forall>j\\<in>PR - kmin ?f PR. ?f i \\<le> ?f j)\n\ngoal (1 subgoal):\n 1. insert pmin (kmin f PR) \\<subseteq> PR", "by blast"], ["proof (state)\nthis:\n  insert pmin (kmin f PR) \\<subseteq> PR\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pmin \\<in> PR - (kmax f PR \\<union> kmin f PR);\n     f pmin = Min (reduce f PR)\\<rbrakk>\n    \\<Longrightarrow> C \\<inter> insert pmin (kmin f PR) \\<noteq> {}", "moreover"], ["proof (state)\nthis:\n  insert pmin (kmin f PR) \\<subseteq> PR\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pmin \\<in> PR - (kmax f PR \\<union> kmin f PR);\n     f pmin = Min (reduce f PR)\\<rbrakk>\n    \\<Longrightarrow> C \\<inter> insert pmin (kmin f PR) \\<noteq> {}", "note hC"], ["proof (state)\nthis:\n  C \\<subseteq> PR\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pmin \\<in> PR - (kmax f PR \\<union> kmin f PR);\n     f pmin = Min (reduce f PR)\\<rbrakk>\n    \\<Longrightarrow> C \\<inter> insert pmin (kmin f PR) \\<noteq> {}", "ultimately"], ["proof (chain)\npicking this:\n  card PR < card C + card (insert pmin (kmin f PR))\n  insert pmin (kmin f PR) \\<subseteq> PR\n  C \\<subseteq> PR", "show ?thesis"], ["proof (prove)\nusing this:\n  card PR < card C + card (insert pmin (kmin f PR))\n  insert pmin (kmin f PR) \\<subseteq> PR\n  C \\<subseteq> PR\n\ngoal (1 subgoal):\n 1. C \\<inter> insert pmin (kmin f PR) \\<noteq> {}", "using subsets_int[of PR C \"insert pmin (kmin f PR)\"]"], ["proof (prove)\nusing this:\n  card PR < card C + card (insert pmin (kmin f PR))\n  insert pmin (kmin f PR) \\<subseteq> PR\n  C \\<subseteq> PR\n  \\<lbrakk>finite PR; C \\<subseteq> PR;\n   insert pmin (kmin f PR) \\<subseteq> PR;\n   card PR < card C + card (insert pmin (kmin f PR))\\<rbrakk>\n  \\<Longrightarrow> C \\<inter> insert pmin (kmin f PR) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. C \\<inter> insert pmin (kmin f PR) \\<noteq> {}", "by simp"], ["proof (state)\nthis:\n  C \\<inter> insert pmin (kmin f PR) \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  C \\<inter> insert pmin (kmin f PR) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)", "hence res: \"\\<exists> i\\<in>C. i=pmin \\<or> i \\<in> kmin f PR\""], ["proof (prove)\nusing this:\n  C \\<inter> insert pmin (kmin f PR) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. i = pmin \\<or> i \\<in> kmin f PR", "by blast"], ["proof (state)\nthis:\n  \\<exists>i\\<in>C. i = pmin \\<or> i \\<in> kmin f PR\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)", "then"], ["proof (chain)\npicking this:\n  \\<exists>i\\<in>C. i = pmin \\<or> i \\<in> kmin f PR", "obtain i where\n    iinC: \"i\\<in>C\" and altern: \"i=pmin \\<or> i \\<in> kmin f PR\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<in>C. i = pmin \\<or> i \\<in> kmin f PR\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i \\<in> C; i = pmin \\<or> i \\<in> kmin f PR\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  i \\<in> C\n  i = pmin \\<or> i \\<in> kmin f PR\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)", "thus ?thesis"], ["proof (prove)\nusing this:\n  i \\<in> C\n  i = pmin \\<or> i \\<in> kmin f PR\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)", "proof(cases \"i=pmin\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<in> C; i = pmin \\<or> i \\<in> kmin f PR; i = pmin\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)\n 2. \\<lbrakk>i \\<in> C; i = pmin \\<or> i \\<in> kmin f PR;\n     i \\<noteq> pmin\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)", "case True"], ["proof (state)\nthis:\n  i = pmin\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<in> C; i = pmin \\<or> i \\<in> kmin f PR; i = pmin\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)\n 2. \\<lbrakk>i \\<in> C; i = pmin \\<or> i \\<in> kmin f PR;\n     i \\<noteq> pmin\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)", "with iinC fpmin_ismin"], ["proof (chain)\npicking this:\n  i \\<in> C\n  f pmin = Min (reduce f PR)\n  i = pmin", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<in> C\n  f pmin = Min (reduce f PR)\n  i = pmin\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)", "by force"], ["proof (state)\nthis:\n  \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<in> C; i = pmin \\<or> i \\<in> kmin f PR;\n     i \\<noteq> pmin\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<in> C; i = pmin \\<or> i \\<in> kmin f PR;\n     i \\<noteq> pmin\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)", "case False"], ["proof (state)\nthis:\n  i \\<noteq> pmin\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<in> C; i = pmin \\<or> i \\<in> kmin f PR;\n     i \\<noteq> pmin\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)", "with altern minrinr fpmin_ismin kmin_le"], ["proof (chain)\npicking this:\n  i = pmin \\<or> i \\<in> kmin f PR\n  Min (reduce f PR) \\<in> reduce f PR\n  f pmin = Min (reduce f PR)\n  \\<forall>i\\<in>kmin ?f PR. \\<forall>r\\<in>reduce ?f PR. ?f i \\<le> r\n  i \\<noteq> pmin", "have \"f i <= f pmin\""], ["proof (prove)\nusing this:\n  i = pmin \\<or> i \\<in> kmin f PR\n  Min (reduce f PR) \\<in> reduce f PR\n  f pmin = Min (reduce f PR)\n  \\<forall>i\\<in>kmin ?f PR. \\<forall>r\\<in>reduce ?f PR. ?f i \\<le> r\n  i \\<noteq> pmin\n\ngoal (1 subgoal):\n 1. f i \\<le> f pmin", "by simp"], ["proof (state)\nthis:\n  f i \\<le> f pmin\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<in> C; i = pmin \\<or> i \\<in> kmin f PR;\n     i \\<noteq> pmin\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)", "with iinC fpmin_ismin"], ["proof (chain)\npicking this:\n  i \\<in> C\n  f pmin = Min (reduce f PR)\n  f i \\<le> f pmin", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<in> C\n  f pmin = Min (reduce f PR)\n  f i \\<le> f pmin\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma same_bound:\nassumes \n  hC: \"C \\<subseteq> PR\" and\n  hCk: \"np <= card C + khl\" and\n  hnk: \"3 * khl < np\" \nshows\n  \"\\<exists> i\\<in>C. Min (reduce f PR) <= f i \\<and> g i <= Max (reduce g PR) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C.\n       Min (reduce f PR) \\<le> f i \\<and> g i \\<le> Max (reduce g PR)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C.\n       Min (reduce f PR) \\<le> f i \\<and> g i \\<le> Max (reduce g PR)", "have b1: \"khl + 1 <= card (C \\<inter> (PR - kmin f PR))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. khl + 1 \\<le> card (C \\<inter> (PR - kmin f PR))", "proof(rule pigeonhole)"], ["proof (state)\ngoal (4 subgoals):\n 1. finite ?A\n 2. C \\<subseteq> ?A\n 3. PR - kmin f PR \\<subseteq> ?A\n 4. card ?A + (khl + 1) \\<le> card C + card (PR - kmin f PR)", "show \"finite PR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite PR", "by simp"], ["proof (state)\nthis:\n  finite PR\n\ngoal (3 subgoals):\n 1. C \\<subseteq> PR\n 2. PR - kmin f PR \\<subseteq> PR\n 3. card PR + (khl + 1) \\<le> card C + card (PR - kmin f PR)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. C \\<subseteq> PR\n 2. PR - kmin f PR \\<subseteq> PR\n 3. card PR + (khl + 1) \\<le> card C + card (PR - kmin f PR)", "show \"C \\<subseteq> PR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<subseteq> PR", "by fact"], ["proof (state)\nthis:\n  C \\<subseteq> PR\n\ngoal (2 subgoals):\n 1. PR - kmin f PR \\<subseteq> PR\n 2. card PR + (khl + 1) \\<le> card C + card (PR - kmin f PR)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. PR - kmin f PR \\<subseteq> PR\n 2. card PR + (khl + 1) \\<le> card C + card (PR - kmin f PR)", "show \"PR - kmin f PR \\<subseteq> PR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PR - kmin f PR \\<subseteq> PR", "by blast"], ["proof (state)\nthis:\n  PR - kmin f PR \\<subseteq> PR\n\ngoal (1 subgoal):\n 1. card PR + (khl + 1) \\<le> card C + card (PR - kmin f PR)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. card PR + (khl + 1) \\<le> card C + card (PR - kmin f PR)", "show \"card PR + (khl + 1) \\<le> card C + card (PR - kmin f PR)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card PR + (khl + 1) \\<le> card C + card (PR - kmin f PR)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. card PR + (khl + 1) \\<le> card C + card (PR - kmin f PR)", "from hnk and hCk"], ["proof (chain)\npicking this:\n  3 * khl < np\n  np \\<le> card C + khl", "have \n        \"np + khl < np + card C - khl\""], ["proof (prove)\nusing this:\n  3 * khl < np\n  np \\<le> card C + khl\n\ngoal (1 subgoal):\n 1. np + khl < np + card C - khl", "by arith"], ["proof (state)\nthis:\n  np + khl < np + card C - khl\n\ngoal (1 subgoal):\n 1. card PR + (khl + 1) \\<le> card C + card (PR - kmin f PR)", "also"], ["proof (state)\nthis:\n  np + khl < np + card C - khl\n\ngoal (1 subgoal):\n 1. card PR + (khl + 1) \\<le> card C + card (PR - kmin f PR)", "from kmin_prop"], ["proof (chain)\npicking this:\n  kmin ?f PR \\<subseteq> PR \\<and>\n  card (kmin ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmin ?f PR.\n      \\<forall>j\\<in>PR - kmin ?f PR. ?f i \\<le> ?f j)", "have \"... = np + card C - card (kmin f PR)\""], ["proof (prove)\nusing this:\n  kmin ?f PR \\<subseteq> PR \\<and>\n  card (kmin ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmin ?f PR.\n      \\<forall>j\\<in>PR - kmin ?f PR. ?f i \\<le> ?f j)\n\ngoal (1 subgoal):\n 1. np + card C - khl = np + card C - card (kmin f PR)", "by auto"], ["proof (state)\nthis:\n  np + card C - khl = np + card C - card (kmin f PR)\n\ngoal (1 subgoal):\n 1. card PR + (khl + 1) \\<le> card C + card (PR - kmin f PR)", "also"], ["proof (state)\nthis:\n  np + card C - khl = np + card C - card (kmin f PR)\n\ngoal (1 subgoal):\n 1. card PR + (khl + 1) \\<le> card C + card (PR - kmin f PR)", "have \"... = card C + (card PR - card (kmin f PR))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. np + card C - card (kmin f PR) = card C + (card PR - card (kmin f PR))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. np + card C - card (kmin f PR) = card C + (card PR - card (kmin f PR))", "from kmin_prop"], ["proof (chain)\npicking this:\n  kmin ?f PR \\<subseteq> PR \\<and>\n  card (kmin ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmin ?f PR.\n      \\<forall>j\\<in>PR - kmin ?f PR. ?f i \\<le> ?f j)", "have\n          \"card (kmin f PR) <= card PR\""], ["proof (prove)\nusing this:\n  kmin ?f PR \\<subseteq> PR \\<and>\n  card (kmin ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmin ?f PR.\n      \\<forall>j\\<in>PR - kmin ?f PR. ?f i \\<le> ?f j)\n\ngoal (1 subgoal):\n 1. card (kmin f PR) \\<le> card PR", "by (intro card_mono, auto)"], ["proof (state)\nthis:\n  card (kmin f PR) \\<le> card PR\n\ngoal (1 subgoal):\n 1. np + card C - card (kmin f PR) = card C + (card PR - card (kmin f PR))", "thus ?thesis"], ["proof (prove)\nusing this:\n  card (kmin f PR) \\<le> card PR\n\ngoal (1 subgoal):\n 1. np + card C - card (kmin f PR) = card C + (card PR - card (kmin f PR))", "by (simp)"], ["proof (state)\nthis:\n  np + card C - card (kmin f PR) = card C + (card PR - card (kmin f PR))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  np + card C - card (kmin f PR) = card C + (card PR - card (kmin f PR))\n\ngoal (1 subgoal):\n 1. card PR + (khl + 1) \\<le> card C + card (PR - kmin f PR)", "also"], ["proof (state)\nthis:\n  np + card C - card (kmin f PR) = card C + (card PR - card (kmin f PR))\n\ngoal (1 subgoal):\n 1. card PR + (khl + 1) \\<le> card C + card (PR - kmin f PR)", "from kmin_prop"], ["proof (chain)\npicking this:\n  kmin ?f PR \\<subseteq> PR \\<and>\n  card (kmin ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmin ?f PR.\n      \\<forall>j\\<in>PR - kmin ?f PR. ?f i \\<le> ?f j)", "have \"... = card C +  card (PR - kmin f PR)\""], ["proof (prove)\nusing this:\n  kmin ?f PR \\<subseteq> PR \\<and>\n  card (kmin ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmin ?f PR.\n      \\<forall>j\\<in>PR - kmin ?f PR. ?f i \\<le> ?f j)\n\ngoal (1 subgoal):\n 1. card C + (card PR - card (kmin f PR)) = card C + card (PR - kmin f PR)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        kmin f PR \\<subseteq> PR \\<and>\n        card (kmin f PR) = khl \\<and>\n        (\\<forall>i\\<in>kmin f PR.\n            \\<forall>j\\<in>PR - kmin f PR. f i \\<le> f j)) \\<Longrightarrow>\n    card C + (card PR - card (kmin f PR)) = card C + card (PR - kmin f PR)", "from kmin_prop and finite_kmin"], ["proof (chain)\npicking this:\n  kmin ?f PR \\<subseteq> PR \\<and>\n  card (kmin ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmin ?f PR.\n      \\<forall>j\\<in>PR - kmin ?f PR. ?f i \\<le> ?f j)\n  finite (kmin ?f PR)", "have \n          \"card PR - card (kmin f PR) =  card (PR - kmin f PR)\""], ["proof (prove)\nusing this:\n  kmin ?f PR \\<subseteq> PR \\<and>\n  card (kmin ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmin ?f PR.\n      \\<forall>j\\<in>PR - kmin ?f PR. ?f i \\<le> ?f j)\n  finite (kmin ?f PR)\n\ngoal (1 subgoal):\n 1. card PR - card (kmin f PR) = card (PR - kmin f PR)", "by (intro card_Diff_subset[THEN sym])(auto)"], ["proof (state)\nthis:\n  card PR - card (kmin f PR) = card (PR - kmin f PR)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        kmin f PR \\<subseteq> PR \\<and>\n        card (kmin f PR) = khl \\<and>\n        (\\<forall>i\\<in>kmin f PR.\n            \\<forall>j\\<in>PR - kmin f PR. f i \\<le> f j)) \\<Longrightarrow>\n    card C + (card PR - card (kmin f PR)) = card C + card (PR - kmin f PR)", "thus ?thesis"], ["proof (prove)\nusing this:\n  card PR - card (kmin f PR) = card (PR - kmin f PR)\n\ngoal (1 subgoal):\n 1. card C + (card PR - card (kmin f PR)) = card C + card (PR - kmin f PR)", "by auto"], ["proof (state)\nthis:\n  card C + (card PR - card (kmin f PR)) = card C + card (PR - kmin f PR)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card C + (card PR - card (kmin f PR)) = card C + card (PR - kmin f PR)\n\ngoal (1 subgoal):\n 1. card PR + (khl + 1) \\<le> card C + card (PR - kmin f PR)", "finally"], ["proof (chain)\npicking this:\n  np + khl < card C + card (PR - kmin f PR)", "show ?thesis"], ["proof (prove)\nusing this:\n  np + khl < card C + card (PR - kmin f PR)\n\ngoal (1 subgoal):\n 1. card PR + (khl + 1) \\<le> card C + card (PR - kmin f PR)", "by (simp)"], ["proof (state)\nthis:\n  card PR + (khl + 1) \\<le> card C + card (PR - kmin f PR)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card PR + (khl + 1) \\<le> card C + card (PR - kmin f PR)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  khl + 1 \\<le> card (C \\<inter> (PR - kmin f PR))\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C.\n       Min (reduce f PR) \\<le> f i \\<and> g i \\<le> Max (reduce g PR)", "have \"C \\<inter> (PR - kmin f PR) \\<inter> (PR - kmax g PR) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<inter> (PR - kmin f PR) \\<inter> (PR - kmax g PR) \\<noteq> {}", "proof(intro subsets_int)"], ["proof (state)\ngoal (4 subgoals):\n 1. finite ?A\n 2. C \\<inter> (PR - kmin f PR) \\<subseteq> ?A\n 3. PR - kmax g PR \\<subseteq> ?A\n 4. card ?A < card (C \\<inter> (PR - kmin f PR)) + card (PR - kmax g PR)", "show \"finite PR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite PR", "by simp"], ["proof (state)\nthis:\n  finite PR\n\ngoal (3 subgoals):\n 1. C \\<inter> (PR - kmin f PR) \\<subseteq> PR\n 2. PR - kmax g PR \\<subseteq> PR\n 3. card PR < card (C \\<inter> (PR - kmin f PR)) + card (PR - kmax g PR)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. C \\<inter> (PR - kmin f PR) \\<subseteq> PR\n 2. PR - kmax g PR \\<subseteq> PR\n 3. card PR < card (C \\<inter> (PR - kmin f PR)) + card (PR - kmax g PR)", "show \"C \\<inter> (PR - kmin f PR) \\<subseteq> PR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<inter> (PR - kmin f PR) \\<subseteq> PR", "by blast"], ["proof (state)\nthis:\n  C \\<inter> (PR - kmin f PR) \\<subseteq> PR\n\ngoal (2 subgoals):\n 1. PR - kmax g PR \\<subseteq> PR\n 2. card PR < card (C \\<inter> (PR - kmin f PR)) + card (PR - kmax g PR)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. PR - kmax g PR \\<subseteq> PR\n 2. card PR < card (C \\<inter> (PR - kmin f PR)) + card (PR - kmax g PR)", "show \"PR - kmax g PR \\<subseteq> PR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PR - kmax g PR \\<subseteq> PR", "by blast"], ["proof (state)\nthis:\n  PR - kmax g PR \\<subseteq> PR\n\ngoal (1 subgoal):\n 1. card PR < card (C \\<inter> (PR - kmin f PR)) + card (PR - kmax g PR)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. card PR < card (C \\<inter> (PR - kmin f PR)) + card (PR - kmax g PR)", "show \"card PR < \n      card (C \\<inter> (PR - kmin f PR)) + card (PR - kmax g PR)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card PR < card (C \\<inter> (PR - kmin f PR)) + card (PR - kmax g PR)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. card PR < card (C \\<inter> (PR - kmin f PR)) + card (PR - kmax g PR)", "from kmax_prop and finite_kmax"], ["proof (chain)\npicking this:\n  kmax ?f PR \\<subseteq> PR \\<and>\n  card (kmax ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmax ?f PR.\n      \\<forall>j\\<in>PR - kmax ?f PR. ?f j \\<le> ?f i)\n  finite (kmax ?f PR)", "have \"card (PR - kmax g PR)= card PR - card (kmax g PR) \""], ["proof (prove)\nusing this:\n  kmax ?f PR \\<subseteq> PR \\<and>\n  card (kmax ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmax ?f PR.\n      \\<forall>j\\<in>PR - kmax ?f PR. ?f j \\<le> ?f i)\n  finite (kmax ?f PR)\n\ngoal (1 subgoal):\n 1. card (PR - kmax g PR) = card PR - card (kmax g PR)", "by  (intro card_Diff_subset, auto)"], ["proof (state)\nthis:\n  card (PR - kmax g PR) = card PR - card (kmax g PR)\n\ngoal (1 subgoal):\n 1. card PR < card (C \\<inter> (PR - kmin f PR)) + card (PR - kmax g PR)", "with kmax_prop"], ["proof (chain)\npicking this:\n  kmax ?f PR \\<subseteq> PR \\<and>\n  card (kmax ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmax ?f PR.\n      \\<forall>j\\<in>PR - kmax ?f PR. ?f j \\<le> ?f i)\n  card (PR - kmax g PR) = card PR - card (kmax g PR)", "have \n        \"card (PR - kmax g PR) = card PR - khl\""], ["proof (prove)\nusing this:\n  kmax ?f PR \\<subseteq> PR \\<and>\n  card (kmax ?f PR) = khl \\<and>\n  (\\<forall>i\\<in>kmax ?f PR.\n      \\<forall>j\\<in>PR - kmax ?f PR. ?f j \\<le> ?f i)\n  card (PR - kmax g PR) = card PR - card (kmax g PR)\n\ngoal (1 subgoal):\n 1. card (PR - kmax g PR) = card PR - khl", "by simp"], ["proof (state)\nthis:\n  card (PR - kmax g PR) = card PR - khl\n\ngoal (1 subgoal):\n 1. card PR < card (C \\<inter> (PR - kmin f PR)) + card (PR - kmax g PR)", "with b1"], ["proof (chain)\npicking this:\n  khl + 1 \\<le> card (C \\<inter> (PR - kmin f PR))\n  card (PR - kmax g PR) = card PR - khl", "show ?thesis"], ["proof (prove)\nusing this:\n  khl + 1 \\<le> card (C \\<inter> (PR - kmin f PR))\n  card (PR - kmax g PR) = card PR - khl\n\ngoal (1 subgoal):\n 1. card PR < card (C \\<inter> (PR - kmin f PR)) + card (PR - kmax g PR)", "by arith"], ["proof (state)\nthis:\n  card PR < card (C \\<inter> (PR - kmin f PR)) + card (PR - kmax g PR)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card PR < card (C \\<inter> (PR - kmin f PR)) + card (PR - kmax g PR)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  C \\<inter> (PR - kmin f PR) \\<inter> (PR - kmax g PR) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C.\n       Min (reduce f PR) \\<le> f i \\<and> g i \\<le> Max (reduce g PR)", "hence \n    \"\\<exists> i. i \\<in> C \\<and> i \\<in> (PR - kmin f PR) \\<and> i \\<in> (PR - kmax g PR)\""], ["proof (prove)\nusing this:\n  C \\<inter> (PR - kmin f PR) \\<inter> (PR - kmax g PR) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       i \\<in> C \\<and> i \\<in> PR - kmin f PR \\<and> i \\<in> PR - kmax g PR", "by blast"], ["proof (state)\nthis:\n  \\<exists>i.\n     i \\<in> C \\<and> i \\<in> PR - kmin f PR \\<and> i \\<in> PR - kmax g PR\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C.\n       Min (reduce f PR) \\<le> f i \\<and> g i \\<le> Max (reduce g PR)", "then"], ["proof (chain)\npicking this:\n  \\<exists>i.\n     i \\<in> C \\<and> i \\<in> PR - kmin f PR \\<and> i \\<in> PR - kmax g PR", "obtain i where \n    in_C: \"i \\<in> C\" and \n    not_in_kmin: \"i \\<in> (PR - kmin f PR)\" and \n    not_in_kmax: \"i \\<in> (PR - kmax g PR)\""], ["proof (prove)\nusing this:\n  \\<exists>i.\n     i \\<in> C \\<and> i \\<in> PR - kmin f PR \\<and> i \\<in> PR - kmax g PR\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i \\<in> C; i \\<in> PR - kmin f PR;\n         i \\<in> PR - kmax g PR\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i \\<in> C\n  i \\<in> PR - kmin f PR\n  i \\<in> PR - kmax g PR\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C.\n       Min (reduce f PR) \\<le> f i \\<and> g i \\<le> Max (reduce g PR)", "have \"Min (reduce f PR) <= f i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Min (reduce f PR) \\<le> f i", "proof(cases \"i \\<in> kmax f PR\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<in> kmax f PR \\<Longrightarrow> Min (reduce f PR) \\<le> f i\n 2. i \\<notin> kmax f PR \\<Longrightarrow> Min (reduce f PR) \\<le> f i", "case True"], ["proof (state)\nthis:\n  i \\<in> kmax f PR\n\ngoal (2 subgoals):\n 1. i \\<in> kmax f PR \\<Longrightarrow> Min (reduce f PR) \\<le> f i\n 2. i \\<notin> kmax f PR \\<Longrightarrow> Min (reduce f PR) \\<le> f i", "from reduce_not_empty and finite_reduce"], ["proof (chain)\npicking this:\n  reduce ?f PR \\<noteq> {}\n  finite (reduce ?f PR)", "have\n      \" Min (reduce f PR) \\<in> reduce f PR\""], ["proof (prove)\nusing this:\n  reduce ?f PR \\<noteq> {}\n  finite (reduce ?f PR)\n\ngoal (1 subgoal):\n 1. Min (reduce f PR) \\<in> reduce f PR", "by auto"], ["proof (state)\nthis:\n  Min (reduce f PR) \\<in> reduce f PR\n\ngoal (2 subgoals):\n 1. i \\<in> kmax f PR \\<Longrightarrow> Min (reduce f PR) \\<le> f i\n 2. i \\<notin> kmax f PR \\<Longrightarrow> Min (reduce f PR) \\<le> f i", "with True"], ["proof (chain)\npicking this:\n  i \\<in> kmax f PR\n  Min (reduce f PR) \\<in> reduce f PR", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<in> kmax f PR\n  Min (reduce f PR) \\<in> reduce f PR\n\ngoal (1 subgoal):\n 1. Min (reduce f PR) \\<le> f i", "using kmax_ge"], ["proof (prove)\nusing this:\n  i \\<in> kmax f PR\n  Min (reduce f PR) \\<in> reduce f PR\n  \\<forall>i\\<in>kmax ?f PR. \\<forall>r\\<in>reduce ?f PR. r \\<le> ?f i\n\ngoal (1 subgoal):\n 1. Min (reduce f PR) \\<le> f i", "by blast"], ["proof (state)\nthis:\n  Min (reduce f PR) \\<le> f i\n\ngoal (1 subgoal):\n 1. i \\<notin> kmax f PR \\<Longrightarrow> Min (reduce f PR) \\<le> f i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<notin> kmax f PR \\<Longrightarrow> Min (reduce f PR) \\<le> f i", "case False"], ["proof (state)\nthis:\n  i \\<notin> kmax f PR\n\ngoal (1 subgoal):\n 1. i \\<notin> kmax f PR \\<Longrightarrow> Min (reduce f PR) \\<le> f i", "with not_in_kmin"], ["proof (chain)\npicking this:\n  i \\<in> PR - kmin f PR\n  i \\<notin> kmax f PR", "have \"i \\<in> PR - (kmax f PR \\<union> kmin f PR)\""], ["proof (prove)\nusing this:\n  i \\<in> PR - kmin f PR\n  i \\<notin> kmax f PR\n\ngoal (1 subgoal):\n 1. i \\<in> PR - (kmax f PR \\<union> kmin f PR)", "by blast"], ["proof (state)\nthis:\n  i \\<in> PR - (kmax f PR \\<union> kmin f PR)\n\ngoal (1 subgoal):\n 1. i \\<notin> kmax f PR \\<Longrightarrow> Min (reduce f PR) \\<le> f i", "with reduce_def"], ["proof (chain)\npicking this:\n  reduce ?f ?P = ?f ` (?P - (kmax ?f ?P \\<union> kmin ?f ?P))\n  i \\<in> PR - (kmax f PR \\<union> kmin f PR)", "have \"f i \\<in> reduce f PR\""], ["proof (prove)\nusing this:\n  reduce ?f ?P = ?f ` (?P - (kmax ?f ?P \\<union> kmin ?f ?P))\n  i \\<in> PR - (kmax f PR \\<union> kmin f PR)\n\ngoal (1 subgoal):\n 1. f i \\<in> reduce f PR", "by auto"], ["proof (state)\nthis:\n  f i \\<in> reduce f PR\n\ngoal (1 subgoal):\n 1. i \\<notin> kmax f PR \\<Longrightarrow> Min (reduce f PR) \\<le> f i", "with reduce_not_empty and finite_reduce"], ["proof (chain)\npicking this:\n  reduce ?f PR \\<noteq> {}\n  finite (reduce ?f PR)\n  f i \\<in> reduce f PR", "show ?thesis"], ["proof (prove)\nusing this:\n  reduce ?f PR \\<noteq> {}\n  finite (reduce ?f PR)\n  f i \\<in> reduce f PR\n\ngoal (1 subgoal):\n 1. Min (reduce f PR) \\<le> f i", "by auto"], ["proof (state)\nthis:\n  Min (reduce f PR) \\<le> f i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Min (reduce f PR) \\<le> f i\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C.\n       Min (reduce f PR) \\<le> f i \\<and> g i \\<le> Max (reduce g PR)", "moreover"], ["proof (state)\nthis:\n  Min (reduce f PR) \\<le> f i\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C.\n       Min (reduce f PR) \\<le> f i \\<and> g i \\<le> Max (reduce g PR)", "have \"g i <= Max (reduce g PR)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g i \\<le> Max (reduce g PR)", "proof(cases \"i \\<in> kmin g PR\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<in> kmin g PR \\<Longrightarrow> g i \\<le> Max (reduce g PR)\n 2. i \\<notin> kmin g PR \\<Longrightarrow> g i \\<le> Max (reduce g PR)", "case True"], ["proof (state)\nthis:\n  i \\<in> kmin g PR\n\ngoal (2 subgoals):\n 1. i \\<in> kmin g PR \\<Longrightarrow> g i \\<le> Max (reduce g PR)\n 2. i \\<notin> kmin g PR \\<Longrightarrow> g i \\<le> Max (reduce g PR)", "from reduce_not_empty and finite_reduce"], ["proof (chain)\npicking this:\n  reduce ?f PR \\<noteq> {}\n  finite (reduce ?f PR)", "have\n      \" Max (reduce g PR) \\<in> reduce g PR\""], ["proof (prove)\nusing this:\n  reduce ?f PR \\<noteq> {}\n  finite (reduce ?f PR)\n\ngoal (1 subgoal):\n 1. Max (reduce g PR) \\<in> reduce g PR", "by auto"], ["proof (state)\nthis:\n  Max (reduce g PR) \\<in> reduce g PR\n\ngoal (2 subgoals):\n 1. i \\<in> kmin g PR \\<Longrightarrow> g i \\<le> Max (reduce g PR)\n 2. i \\<notin> kmin g PR \\<Longrightarrow> g i \\<le> Max (reduce g PR)", "with True"], ["proof (chain)\npicking this:\n  i \\<in> kmin g PR\n  Max (reduce g PR) \\<in> reduce g PR", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<in> kmin g PR\n  Max (reduce g PR) \\<in> reduce g PR\n\ngoal (1 subgoal):\n 1. g i \\<le> Max (reduce g PR)", "using kmin_le"], ["proof (prove)\nusing this:\n  i \\<in> kmin g PR\n  Max (reduce g PR) \\<in> reduce g PR\n  \\<forall>i\\<in>kmin ?f PR. \\<forall>r\\<in>reduce ?f PR. ?f i \\<le> r\n\ngoal (1 subgoal):\n 1. g i \\<le> Max (reduce g PR)", "by blast"], ["proof (state)\nthis:\n  g i \\<le> Max (reduce g PR)\n\ngoal (1 subgoal):\n 1. i \\<notin> kmin g PR \\<Longrightarrow> g i \\<le> Max (reduce g PR)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<notin> kmin g PR \\<Longrightarrow> g i \\<le> Max (reduce g PR)", "case False"], ["proof (state)\nthis:\n  i \\<notin> kmin g PR\n\ngoal (1 subgoal):\n 1. i \\<notin> kmin g PR \\<Longrightarrow> g i \\<le> Max (reduce g PR)", "with not_in_kmax"], ["proof (chain)\npicking this:\n  i \\<in> PR - kmax g PR\n  i \\<notin> kmin g PR", "have \"i \\<in> PR - (kmax g PR \\<union> kmin g PR)\""], ["proof (prove)\nusing this:\n  i \\<in> PR - kmax g PR\n  i \\<notin> kmin g PR\n\ngoal (1 subgoal):\n 1. i \\<in> PR - (kmax g PR \\<union> kmin g PR)", "by blast"], ["proof (state)\nthis:\n  i \\<in> PR - (kmax g PR \\<union> kmin g PR)\n\ngoal (1 subgoal):\n 1. i \\<notin> kmin g PR \\<Longrightarrow> g i \\<le> Max (reduce g PR)", "with reduce_def"], ["proof (chain)\npicking this:\n  reduce ?f ?P = ?f ` (?P - (kmax ?f ?P \\<union> kmin ?f ?P))\n  i \\<in> PR - (kmax g PR \\<union> kmin g PR)", "have \"g i \\<in> reduce g PR\""], ["proof (prove)\nusing this:\n  reduce ?f ?P = ?f ` (?P - (kmax ?f ?P \\<union> kmin ?f ?P))\n  i \\<in> PR - (kmax g PR \\<union> kmin g PR)\n\ngoal (1 subgoal):\n 1. g i \\<in> reduce g PR", "by auto"], ["proof (state)\nthis:\n  g i \\<in> reduce g PR\n\ngoal (1 subgoal):\n 1. i \\<notin> kmin g PR \\<Longrightarrow> g i \\<le> Max (reduce g PR)", "with reduce_not_empty and finite_reduce"], ["proof (chain)\npicking this:\n  reduce ?f PR \\<noteq> {}\n  finite (reduce ?f PR)\n  g i \\<in> reduce g PR", "show ?thesis"], ["proof (prove)\nusing this:\n  reduce ?f PR \\<noteq> {}\n  finite (reduce ?f PR)\n  g i \\<in> reduce g PR\n\ngoal (1 subgoal):\n 1. g i \\<le> Max (reduce g PR)", "by auto"], ["proof (state)\nthis:\n  g i \\<le> Max (reduce g PR)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g i \\<le> Max (reduce g PR)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C.\n       Min (reduce f PR) \\<le> f i \\<and> g i \\<le> Max (reduce g PR)", "moreover"], ["proof (state)\nthis:\n  g i \\<le> Max (reduce g PR)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C.\n       Min (reduce f PR) \\<le> f i \\<and> g i \\<le> Max (reduce g PR)", "note in_C"], ["proof (state)\nthis:\n  i \\<in> C\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C.\n       Min (reduce f PR) \\<le> f i \\<and> g i \\<le> Max (reduce g PR)", "ultimately"], ["proof (chain)\npicking this:\n  Min (reduce f PR) \\<le> f i\n  g i \\<le> Max (reduce g PR)\n  i \\<in> C", "show ?thesis"], ["proof (prove)\nusing this:\n  Min (reduce f PR) \\<le> f i\n  g i \\<le> Max (reduce g PR)\n  i \\<in> C\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C.\n       Min (reduce f PR) \\<le> f i \\<and> g i \\<le> Max (reduce g PR)", "by blast"], ["proof (state)\nthis:\n  \\<exists>i\\<in>C.\n     Min (reduce f PR) \\<le> f i \\<and> g i \\<le> Max (reduce g PR)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Main theorem\\<close>"], ["", "text \\<open>The most part of this theorem can be proved with CVC-lite\nusing the three previous lemmas (appendix \\ref{sec:bound_prec_enh}).\\<close>"], ["", "theorem prec_enh:\nassumes \n  hC: \"C \\<subseteq> PR\" and\n  hCF: \"np - nF <= card C\" and\n  hFn: \"3 * nF < np\" and\n  hFk: \"nF = khl\" and\n  hbx: \"\\<forall> l\\<in>C. \\<bar>f l - g l\\<bar> <= x\" and\n  hby1: \"\\<forall> l\\<in>C. \\<forall> m\\<in>C. \\<bar>f l - f m\\<bar> <= y\" and\n  hby2: \"\\<forall> l\\<in>C. \\<forall> m\\<in>C. \\<bar>g l - g m\\<bar> <= y\" and\n  hpC: \"p\\<in>C\" and\n  hqC: \"q\\<in>C\" \nshows \"\\<bar> cfnl p f - cfnl q g \\<bar> <= y / 2 + x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>cfnl p f - cfnl q g\\<bar> \\<le> y / 2 + x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>cfnl p f - cfnl q g\\<bar> \\<le> y / 2 + x", "from hCF and hFk"], ["proof (chain)\npicking this:\n  np - nF \\<le> card C\n  nF = khl", "have hCk: \"np <= card C + khl\""], ["proof (prove)\nusing this:\n  np - nF \\<le> card C\n  nF = khl\n\ngoal (1 subgoal):\n 1. np \\<le> card C + khl", "by arith"], ["proof (state)\nthis:\n  np \\<le> card C + khl\n\ngoal (1 subgoal):\n 1. \\<bar>cfnl p f - cfnl q g\\<bar> \\<le> y / 2 + x", "from hFn and hFk"], ["proof (chain)\npicking this:\n  3 * nF < np\n  nF = khl", "have hnk: \"3 * khl < np\""], ["proof (prove)\nusing this:\n  3 * nF < np\n  nF = khl\n\ngoal (1 subgoal):\n 1. 3 * khl < np", "by arith"], ["proof (state)\nthis:\n  3 * khl < np\n\ngoal (1 subgoal):\n 1. \\<bar>cfnl p f - cfnl q g\\<bar> \\<le> y / 2 + x", "let    ?maxf = \"Max (reduce f PR)\" \n    and  ?minf = \"Min (reduce f PR)\"\n    and  ?maxg = \"Max (reduce g PR)\" \n    and  ?ming = \"Min (reduce g PR)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>cfnl p f - cfnl q g\\<bar> \\<le> y / 2 + x", "from abs_distrib_div"], ["proof (chain)\npicking this:\n  0 < ?c \\<Longrightarrow>\n  \\<bar>?a / ?c - ?b / ?c\\<bar> = \\<bar>?a - ?b\\<bar> / ?c", "have \"\\<bar>cfnl p f - cfnl q g\\<bar> = \n    \\<bar>?maxf + ?minf  +  - ?maxg + - ?ming\\<bar> / 2\""], ["proof (prove)\nusing this:\n  0 < ?c \\<Longrightarrow>\n  \\<bar>?a / ?c - ?b / ?c\\<bar> = \\<bar>?a - ?b\\<bar> / ?c\n\ngoal (1 subgoal):\n 1. \\<bar>cfnl p f - cfnl q g\\<bar> =\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar> /\n    2", "by (unfold cfnl_def) simp"], ["proof (state)\nthis:\n  \\<bar>cfnl p f - cfnl q g\\<bar> =\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar> /\n  2\n\ngoal (1 subgoal):\n 1. \\<bar>cfnl p f - cfnl q g\\<bar> \\<le> y / 2 + x", "moreover"], ["proof (state)\nthis:\n  \\<bar>cfnl p f - cfnl q g\\<bar> =\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar> /\n  2\n\ngoal (1 subgoal):\n 1. \\<bar>cfnl p f - cfnl q g\\<bar> \\<le> y / 2 + x", "have \"\\<bar>?maxf + ?minf  +  - ?maxg + - ?ming\\<bar> <= y + 2 * x\"\n    \\<comment> \\<open>The rest of the property can be proved by CVC-lite\n           (see appendix \\ref{sec:bound_prec_enh})\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "proof ( cases \"0 <= ?maxf + ?minf  +  - ?maxg + - ?ming\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n            - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x\n 2. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "case True"], ["proof (state)\nthis:\n  0 \\<le> Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\n\ngoal (2 subgoals):\n 1. 0 \\<le> Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n            - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x\n 2. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "hence\n    \"\\<bar>?maxf + ?minf  +  - ?maxg + - ?ming\\<bar> = \n      ?maxf + ?minf  +  - ?maxg + - ?ming\""], ["proof (prove)\nusing this:\n  0 \\<le> Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\n\ngoal (1 subgoal):\n 1. \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar> =\n    Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n    - Min (reduce g PR)", "by arith"], ["proof (state)\nthis:\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar> =\n  Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n  - Min (reduce g PR)\n\ngoal (2 subgoals):\n 1. 0 \\<le> Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n            - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x\n 2. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "moreover"], ["proof (state)\nthis:\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar> =\n  Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n  - Min (reduce g PR)\n\ngoal (2 subgoals):\n 1. 0 \\<le> Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n            - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x\n 2. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "from uboundmax hC hCk"], ["proof (chain)\npicking this:\n  \\<lbrakk>?C \\<subseteq> PR; np \\<le> card ?C + khl\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<in>?C. Max (reduce ?f PR) \\<le> ?f i\n  C \\<subseteq> PR\n  np \\<le> card C + khl", "obtain mxf\n      where mxfinC: \"mxf\\<in>C\" and \n            maxf: \"?maxf <= f mxf\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?C \\<subseteq> PR; np \\<le> card ?C + khl\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<in>?C. Max (reduce ?f PR) \\<le> ?f i\n  C \\<subseteq> PR\n  np \\<le> card C + khl\n\ngoal (1 subgoal):\n 1. (\\<And>mxf.\n        \\<lbrakk>mxf \\<in> C; Max (reduce f PR) \\<le> f mxf\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  mxf \\<in> C\n  Max (reduce f PR) \\<le> f mxf\n\ngoal (2 subgoals):\n 1. 0 \\<le> Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n            - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x\n 2. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "moreover"], ["proof (state)\nthis:\n  mxf \\<in> C\n  Max (reduce f PR) \\<le> f mxf\n\ngoal (2 subgoals):\n 1. 0 \\<le> Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n            - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x\n 2. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "from lboundmin hC hCk"], ["proof (chain)\npicking this:\n  \\<lbrakk>?C \\<subseteq> PR; np \\<le> card ?C + khl\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<in>?C. ?f i \\<le> Min (reduce ?f PR)\n  C \\<subseteq> PR\n  np \\<le> card C + khl", "obtain mng \n      where mnginC: \"mng\\<in>C\" and \n            ming: \"g mng <= ?ming\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?C \\<subseteq> PR; np \\<le> card ?C + khl\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<in>?C. ?f i \\<le> Min (reduce ?f PR)\n  C \\<subseteq> PR\n  np \\<le> card C + khl\n\ngoal (1 subgoal):\n 1. (\\<And>mng.\n        \\<lbrakk>mng \\<in> C; g mng \\<le> Min (reduce g PR)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  mng \\<in> C\n  g mng \\<le> Min (reduce g PR)\n\ngoal (2 subgoals):\n 1. 0 \\<le> Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n            - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x\n 2. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "moreover"], ["proof (state)\nthis:\n  mng \\<in> C\n  g mng \\<le> Min (reduce g PR)\n\ngoal (2 subgoals):\n 1. 0 \\<le> Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n            - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x\n 2. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "from same_bound hC hCk hnk"], ["proof (chain)\npicking this:\n  \\<lbrakk>?C \\<subseteq> PR; np \\<le> card ?C + khl; 3 * khl < np\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<in>?C.\n                       Min (reduce ?f PR) \\<le> ?f i \\<and>\n                       ?g i \\<le> Max (reduce ?g PR)\n  C \\<subseteq> PR\n  np \\<le> card C + khl\n  3 * khl < np", "obtain mxn \n      where mxninC: \"mxn\\<in>C\" and \n            mxnf: \"?minf  \\<le> f mxn\" and\n            mxng: \"g mxn \\<le> ?maxg\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?C \\<subseteq> PR; np \\<le> card ?C + khl; 3 * khl < np\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<in>?C.\n                       Min (reduce ?f PR) \\<le> ?f i \\<and>\n                       ?g i \\<le> Max (reduce ?g PR)\n  C \\<subseteq> PR\n  np \\<le> card C + khl\n  3 * khl < np\n\ngoal (1 subgoal):\n 1. (\\<And>mxn.\n        \\<lbrakk>mxn \\<in> C; Min (reduce f PR) \\<le> f mxn;\n         g mxn \\<le> Max (reduce g PR)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  mxn \\<in> C\n  Min (reduce f PR) \\<le> f mxn\n  g mxn \\<le> Max (reduce g PR)\n\ngoal (2 subgoals):\n 1. 0 \\<le> Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n            - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x\n 2. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "ultimately"], ["proof (chain)\npicking this:\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar> =\n  Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n  - Min (reduce g PR)\n  mxf \\<in> C\n  Max (reduce f PR) \\<le> f mxf\n  mng \\<in> C\n  g mng \\<le> Min (reduce g PR)\n  mxn \\<in> C\n  Min (reduce f PR) \\<le> f mxn\n  g mxn \\<le> Max (reduce g PR)", "have \n      \"\\<bar> ?maxf + ?minf  +  - ?maxg + - ?ming\\<bar> <= \n      (f mxf + - g mng) + (f mxn  +  - g mxn)\""], ["proof (prove)\nusing this:\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar> =\n  Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n  - Min (reduce g PR)\n  mxf \\<in> C\n  Max (reduce f PR) \\<le> f mxf\n  mng \\<in> C\n  g mng \\<le> Min (reduce g PR)\n  mxn \\<in> C\n  Min (reduce f PR) \\<le> f mxn\n  g mxn \\<le> Max (reduce g PR)\n\ngoal (1 subgoal):\n 1. \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> f mxf + - g mng + (f mxn + - g mxn)", "by arith"], ["proof (state)\nthis:\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar>\n  \\<le> f mxf + - g mng + (f mxn + - g mxn)\n\ngoal (2 subgoals):\n 1. 0 \\<le> Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n            - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x\n 2. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "also"], ["proof (state)\nthis:\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar>\n  \\<le> f mxf + - g mng + (f mxn + - g mxn)\n\ngoal (2 subgoals):\n 1. 0 \\<le> Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n            - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x\n 2. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "from  mxninC hbx abs_le_D1"], ["proof (chain)\npicking this:\n  mxn \\<in> C\n  \\<forall>l\\<in>C. \\<bar>f l - g l\\<bar> \\<le> x\n  \\<bar>?a\\<bar> \\<le> ?b \\<Longrightarrow> ?a \\<le> ?b", "have\n      \"... <= (f mxf + - g mng) + x\""], ["proof (prove)\nusing this:\n  mxn \\<in> C\n  \\<forall>l\\<in>C. \\<bar>f l - g l\\<bar> \\<le> x\n  \\<bar>?a\\<bar> \\<le> ?b \\<Longrightarrow> ?a \\<le> ?b\n\ngoal (1 subgoal):\n 1. f mxf + - g mng + (f mxn + - g mxn) \\<le> f mxf + - g mng + x", "by auto"], ["proof (state)\nthis:\n  f mxf + - g mng + (f mxn + - g mxn) \\<le> f mxf + - g mng + x\n\ngoal (2 subgoals):\n 1. 0 \\<le> Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n            - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x\n 2. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "also"], ["proof (state)\nthis:\n  f mxf + - g mng + (f mxn + - g mxn) \\<le> f mxf + - g mng + x\n\ngoal (2 subgoals):\n 1. 0 \\<le> Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n            - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x\n 2. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "have \n      \"... = (f mxf + - f mng ) + ( f mng + - g mng) + x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f mxf + - g mng + x = f mxf + - f mng + (f mng + - g mng) + x", "by arith"], ["proof (state)\nthis:\n  f mxf + - g mng + x = f mxf + - f mng + (f mng + - g mng) + x\n\ngoal (2 subgoals):\n 1. 0 \\<le> Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n            - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x\n 2. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "also"], ["proof (state)\nthis:\n  f mxf + - g mng + x = f mxf + - f mng + (f mng + - g mng) + x\n\ngoal (2 subgoals):\n 1. 0 \\<le> Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n            - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x\n 2. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "have \"... <= y + ( f mng + - g mng) + x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f mxf + - f mng + (f mng + - g mng) + x \\<le> y + (f mng + - g mng) + x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f mxf + - f mng + (f mng + - g mng) + x \\<le> y + (f mng + - g mng) + x", "from  mxfinC mnginC hby1 abs_le_D1"], ["proof (chain)\npicking this:\n  mxf \\<in> C\n  mng \\<in> C\n  \\<forall>l\\<in>C. \\<forall>m\\<in>C. \\<bar>f l - f m\\<bar> \\<le> y\n  \\<bar>?a\\<bar> \\<le> ?b \\<Longrightarrow> ?a \\<le> ?b", "have \"f mxf + - f mng <= y\""], ["proof (prove)\nusing this:\n  mxf \\<in> C\n  mng \\<in> C\n  \\<forall>l\\<in>C. \\<forall>m\\<in>C. \\<bar>f l - f m\\<bar> \\<le> y\n  \\<bar>?a\\<bar> \\<le> ?b \\<Longrightarrow> ?a \\<le> ?b\n\ngoal (1 subgoal):\n 1. f mxf + - f mng \\<le> y", "by auto"], ["proof (state)\nthis:\n  f mxf + - f mng \\<le> y\n\ngoal (1 subgoal):\n 1. f mxf + - f mng + (f mng + - g mng) + x \\<le> y + (f mng + - g mng) + x", "thus ?thesis"], ["proof (prove)\nusing this:\n  f mxf + - f mng \\<le> y\n\ngoal (1 subgoal):\n 1. f mxf + - f mng + (f mng + - g mng) + x \\<le> y + (f mng + - g mng) + x", "by auto"], ["proof (state)\nthis:\n  f mxf + - f mng + (f mng + - g mng) + x \\<le> y + (f mng + - g mng) + x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f mxf + - f mng + (f mng + - g mng) + x \\<le> y + (f mng + - g mng) + x\n\ngoal (2 subgoals):\n 1. 0 \\<le> Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n            - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x\n 2. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "also"], ["proof (state)\nthis:\n  f mxf + - f mng + (f mng + - g mng) + x \\<le> y + (f mng + - g mng) + x\n\ngoal (2 subgoals):\n 1. 0 \\<le> Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n            - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x\n 2. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "from  mnginC hbx abs_le_D1"], ["proof (chain)\npicking this:\n  mng \\<in> C\n  \\<forall>l\\<in>C. \\<bar>f l - g l\\<bar> \\<le> x\n  \\<bar>?a\\<bar> \\<le> ?b \\<Longrightarrow> ?a \\<le> ?b", "have \"... <= y + 2 * x\""], ["proof (prove)\nusing this:\n  mng \\<in> C\n  \\<forall>l\\<in>C. \\<bar>f l - g l\\<bar> \\<le> x\n  \\<bar>?a\\<bar> \\<le> ?b \\<Longrightarrow> ?a \\<le> ?b\n\ngoal (1 subgoal):\n 1. y + (f mng + - g mng) + x \\<le> y + 2 * x", "by auto"], ["proof (state)\nthis:\n  y + (f mng + - g mng) + x \\<le> y + 2 * x\n\ngoal (2 subgoals):\n 1. 0 \\<le> Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n            - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x\n 2. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "finally"], ["proof (chain)\npicking this:\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar>\n  \\<le> y + 2 * x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar>\n  \\<le> y + 2 * x\n\ngoal (1 subgoal):\n 1. \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "."], ["proof (state)\nthis:\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar>\n  \\<le> y + 2 * x\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "case False"], ["proof (state)\nthis:\n  \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                 - Max (reduce g PR) +\n                 - Min (reduce g PR)\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "hence\n    \"\\<bar>?maxf + ?minf  +  - ?maxg + - ?ming\\<bar> = \n      ?maxg + ?ming  +  - ?maxf + - ?minf\""], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                 - Max (reduce g PR) +\n                 - Min (reduce g PR)\n\ngoal (1 subgoal):\n 1. \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar> =\n    Max (reduce g PR) + Min (reduce g PR) + - Max (reduce f PR) +\n    - Min (reduce f PR)", "by arith"], ["proof (state)\nthis:\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar> =\n  Max (reduce g PR) + Min (reduce g PR) + - Max (reduce f PR) +\n  - Min (reduce f PR)\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "moreover"], ["proof (state)\nthis:\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar> =\n  Max (reduce g PR) + Min (reduce g PR) + - Max (reduce f PR) +\n  - Min (reduce f PR)\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "from uboundmax hC hCk"], ["proof (chain)\npicking this:\n  \\<lbrakk>?C \\<subseteq> PR; np \\<le> card ?C + khl\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<in>?C. Max (reduce ?f PR) \\<le> ?f i\n  C \\<subseteq> PR\n  np \\<le> card C + khl", "obtain mxg \n      where mxginC: \"mxg\\<in>C\" and \n            maxg: \"?maxg <= g mxg\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?C \\<subseteq> PR; np \\<le> card ?C + khl\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<in>?C. Max (reduce ?f PR) \\<le> ?f i\n  C \\<subseteq> PR\n  np \\<le> card C + khl\n\ngoal (1 subgoal):\n 1. (\\<And>mxg.\n        \\<lbrakk>mxg \\<in> C; Max (reduce g PR) \\<le> g mxg\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  mxg \\<in> C\n  Max (reduce g PR) \\<le> g mxg\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "moreover"], ["proof (state)\nthis:\n  mxg \\<in> C\n  Max (reduce g PR) \\<le> g mxg\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "from lboundmin hC hCk"], ["proof (chain)\npicking this:\n  \\<lbrakk>?C \\<subseteq> PR; np \\<le> card ?C + khl\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<in>?C. ?f i \\<le> Min (reduce ?f PR)\n  C \\<subseteq> PR\n  np \\<le> card C + khl", "obtain mnf \n      where mnfinC: \"mnf\\<in>C\" and \n            minf: \"f mnf <= ?minf\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?C \\<subseteq> PR; np \\<le> card ?C + khl\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<in>?C. ?f i \\<le> Min (reduce ?f PR)\n  C \\<subseteq> PR\n  np \\<le> card C + khl\n\ngoal (1 subgoal):\n 1. (\\<And>mnf.\n        \\<lbrakk>mnf \\<in> C; f mnf \\<le> Min (reduce f PR)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  mnf \\<in> C\n  f mnf \\<le> Min (reduce f PR)\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "moreover"], ["proof (state)\nthis:\n  mnf \\<in> C\n  f mnf \\<le> Min (reduce f PR)\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "from same_bound hC hCk hnk"], ["proof (chain)\npicking this:\n  \\<lbrakk>?C \\<subseteq> PR; np \\<le> card ?C + khl; 3 * khl < np\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<in>?C.\n                       Min (reduce ?f PR) \\<le> ?f i \\<and>\n                       ?g i \\<le> Max (reduce ?g PR)\n  C \\<subseteq> PR\n  np \\<le> card C + khl\n  3 * khl < np", "obtain mxn \n      where mxninC: \"mxn\\<in>C\" and \n            mxnf: \"?ming  \\<le> g mxn\" and\n            mxng: \"f mxn \\<le> ?maxf\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?C \\<subseteq> PR; np \\<le> card ?C + khl; 3 * khl < np\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<in>?C.\n                       Min (reduce ?f PR) \\<le> ?f i \\<and>\n                       ?g i \\<le> Max (reduce ?g PR)\n  C \\<subseteq> PR\n  np \\<le> card C + khl\n  3 * khl < np\n\ngoal (1 subgoal):\n 1. (\\<And>mxn.\n        \\<lbrakk>mxn \\<in> C; Min (reduce g PR) \\<le> g mxn;\n         f mxn \\<le> Max (reduce f PR)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  mxn \\<in> C\n  Min (reduce g PR) \\<le> g mxn\n  f mxn \\<le> Max (reduce f PR)\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "ultimately"], ["proof (chain)\npicking this:\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar> =\n  Max (reduce g PR) + Min (reduce g PR) + - Max (reduce f PR) +\n  - Min (reduce f PR)\n  mxg \\<in> C\n  Max (reduce g PR) \\<le> g mxg\n  mnf \\<in> C\n  f mnf \\<le> Min (reduce f PR)\n  mxn \\<in> C\n  Min (reduce g PR) \\<le> g mxn\n  f mxn \\<le> Max (reduce f PR)", "have \n      \"\\<bar> ?maxf + ?minf  +  - ?maxg + - ?ming\\<bar> <= \n      (g mxg + - f mnf) + (g mxn  +  - f mxn)\""], ["proof (prove)\nusing this:\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar> =\n  Max (reduce g PR) + Min (reduce g PR) + - Max (reduce f PR) +\n  - Min (reduce f PR)\n  mxg \\<in> C\n  Max (reduce g PR) \\<le> g mxg\n  mnf \\<in> C\n  f mnf \\<le> Min (reduce f PR)\n  mxn \\<in> C\n  Min (reduce g PR) \\<le> g mxn\n  f mxn \\<le> Max (reduce f PR)\n\ngoal (1 subgoal):\n 1. \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> g mxg + - f mnf + (g mxn + - f mxn)", "by arith"], ["proof (state)\nthis:\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar>\n  \\<le> g mxg + - f mnf + (g mxn + - f mxn)\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "also"], ["proof (state)\nthis:\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar>\n  \\<le> g mxg + - f mnf + (g mxn + - f mxn)\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "from  mxninC hbx"], ["proof (chain)\npicking this:\n  mxn \\<in> C\n  \\<forall>l\\<in>C. \\<bar>f l - g l\\<bar> \\<le> x", "have \"... <= (g mxg + - f mnf) + x\""], ["proof (prove)\nusing this:\n  mxn \\<in> C\n  \\<forall>l\\<in>C. \\<bar>f l - g l\\<bar> \\<le> x\n\ngoal (1 subgoal):\n 1. g mxg + - f mnf + (g mxn + - f mxn) \\<le> g mxg + - f mnf + x", "by (auto dest!: abs_le_D2)"], ["proof (state)\nthis:\n  g mxg + - f mnf + (g mxn + - f mxn) \\<le> g mxg + - f mnf + x\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "also"], ["proof (state)\nthis:\n  g mxg + - f mnf + (g mxn + - f mxn) \\<le> g mxg + - f mnf + x\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "have \n      \"... = (g mxg + - g mnf ) + ( g mnf + - f mnf) + x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g mxg + - f mnf + x = g mxg + - g mnf + (g mnf + - f mnf) + x", "by arith"], ["proof (state)\nthis:\n  g mxg + - f mnf + x = g mxg + - g mnf + (g mnf + - f mnf) + x\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "also"], ["proof (state)\nthis:\n  g mxg + - f mnf + x = g mxg + - g mnf + (g mnf + - f mnf) + x\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "have \"... <= y + ( g mnf + - f mnf) + x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g mxg + - g mnf + (g mnf + - f mnf) + x \\<le> y + (g mnf + - f mnf) + x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. g mxg + - g mnf + (g mnf + - f mnf) + x \\<le> y + (g mnf + - f mnf) + x", "from  mxginC mnfinC hby2 abs_le_D1"], ["proof (chain)\npicking this:\n  mxg \\<in> C\n  mnf \\<in> C\n  \\<forall>l\\<in>C. \\<forall>m\\<in>C. \\<bar>g l - g m\\<bar> \\<le> y\n  \\<bar>?a\\<bar> \\<le> ?b \\<Longrightarrow> ?a \\<le> ?b", "have \"g mxg + - g mnf <= y\""], ["proof (prove)\nusing this:\n  mxg \\<in> C\n  mnf \\<in> C\n  \\<forall>l\\<in>C. \\<forall>m\\<in>C. \\<bar>g l - g m\\<bar> \\<le> y\n  \\<bar>?a\\<bar> \\<le> ?b \\<Longrightarrow> ?a \\<le> ?b\n\ngoal (1 subgoal):\n 1. g mxg + - g mnf \\<le> y", "by auto"], ["proof (state)\nthis:\n  g mxg + - g mnf \\<le> y\n\ngoal (1 subgoal):\n 1. g mxg + - g mnf + (g mnf + - f mnf) + x \\<le> y + (g mnf + - f mnf) + x", "thus ?thesis"], ["proof (prove)\nusing this:\n  g mxg + - g mnf \\<le> y\n\ngoal (1 subgoal):\n 1. g mxg + - g mnf + (g mnf + - f mnf) + x \\<le> y + (g mnf + - f mnf) + x", "by auto"], ["proof (state)\nthis:\n  g mxg + - g mnf + (g mnf + - f mnf) + x \\<le> y + (g mnf + - f mnf) + x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g mxg + - g mnf + (g mnf + - f mnf) + x \\<le> y + (g mnf + - f mnf) + x\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "also"], ["proof (state)\nthis:\n  g mxg + - g mnf + (g mnf + - f mnf) + x \\<le> y + (g mnf + - f mnf) + x\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "from  mnfinC hbx"], ["proof (chain)\npicking this:\n  mnf \\<in> C\n  \\<forall>l\\<in>C. \\<bar>f l - g l\\<bar> \\<le> x", "have \"... <= y + 2 * x\""], ["proof (prove)\nusing this:\n  mnf \\<in> C\n  \\<forall>l\\<in>C. \\<bar>f l - g l\\<bar> \\<le> x\n\ngoal (1 subgoal):\n 1. y + (g mnf + - f mnf) + x \\<le> y + 2 * x", "by (auto dest!: abs_le_D2)"], ["proof (state)\nthis:\n  y + (g mnf + - f mnf) + x \\<le> y + 2 * x\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> Max (reduce f PR) + Min (reduce f PR) +\n                   - Max (reduce g PR) +\n                   - Min (reduce g PR) \\<Longrightarrow>\n    \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "finally"], ["proof (chain)\npicking this:\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar>\n  \\<le> y + 2 * x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar>\n  \\<le> y + 2 * x\n\ngoal (1 subgoal):\n 1. \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n          - Min (reduce g PR)\\<bar>\n    \\<le> y + 2 * x", "."], ["proof (state)\nthis:\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar>\n  \\<le> y + 2 * x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar>\n  \\<le> y + 2 * x\n\ngoal (1 subgoal):\n 1. \\<bar>cfnl p f - cfnl q g\\<bar> \\<le> y / 2 + x", "ultimately"], ["proof (chain)\npicking this:\n  \\<bar>cfnl p f - cfnl q g\\<bar> =\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar> /\n  2\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar>\n  \\<le> y + 2 * x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<bar>cfnl p f - cfnl q g\\<bar> =\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar> /\n  2\n  \\<bar>Max (reduce f PR) + Min (reduce f PR) + - Max (reduce g PR) +\n        - Min (reduce g PR)\\<bar>\n  \\<le> y + 2 * x\n\ngoal (1 subgoal):\n 1. \\<bar>cfnl p f - cfnl q g\\<bar> \\<le> y / 2 + x", "by simp"], ["proof (state)\nthis:\n  \\<bar>cfnl p f - cfnl q g\\<bar> \\<le> y / 2 + x\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Accuracy Preservation property\\<close>"], ["", "text \\<open>No new lemmas are needed for prove this property. The bound\nhas been found using the lemmas @{thm [source] uboundmax} and @{thm\n[source] lboundmin}\\<close>"], ["", "text \\<open>This theorem can be proved with ICS and CVC-lite assuming\nthose lemmas (see appendix \\ref{sec:accur_pres}).\\<close>"], ["", "theorem accur_pres:\nassumes\n  hC: \"C \\<subseteq> PR\" and\n  hCF: \"np - nF <= card C\" and\n  hFk: \"nF = khl\" and\n  hby: \"\\<forall> l\\<in>C. \\<forall> m\\<in>C. \\<bar>f l - f m\\<bar> <= y\" and\n  hqC: \"q\\<in>C\" \nshows \"\\<bar> cfnl p f - f q \\<bar> <= y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>cfnl p f - f q\\<bar> \\<le> y", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>cfnl p f - f q\\<bar> \\<le> y", "from hCF and hFk"], ["proof (chain)\npicking this:\n  np - nF \\<le> card C\n  nF = khl", "have npleCk: \"np <= card C + khl\""], ["proof (prove)\nusing this:\n  np - nF \\<le> card C\n  nF = khl\n\ngoal (1 subgoal):\n 1. np \\<le> card C + khl", "by arith"], ["proof (state)\nthis:\n  np \\<le> card C + khl\n\ngoal (1 subgoal):\n 1. \\<bar>cfnl p f - f q\\<bar> \\<le> y", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>cfnl p f - f q\\<bar> \\<le> y", "proof(cases \"f q <= cfnl p f\")"], ["proof (state)\ngoal (2 subgoals):\n 1. f q \\<le> cfnl p f \\<Longrightarrow> \\<bar>cfnl p f - f q\\<bar> \\<le> y\n 2. \\<not> f q \\<le> cfnl p f \\<Longrightarrow>\n    \\<bar>cfnl p f - f q\\<bar> \\<le> y", "case True"], ["proof (state)\nthis:\n  f q \\<le> cfnl p f\n\ngoal (2 subgoals):\n 1. f q \\<le> cfnl p f \\<Longrightarrow> \\<bar>cfnl p f - f q\\<bar> \\<le> y\n 2. \\<not> f q \\<le> cfnl p f \\<Longrightarrow>\n    \\<bar>cfnl p f - f q\\<bar> \\<le> y", "from npleCk hC and  uboundmax"], ["proof (chain)\npicking this:\n  np \\<le> card C + khl\n  C \\<subseteq> PR\n  \\<lbrakk>?C \\<subseteq> PR; np \\<le> card ?C + khl\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<in>?C. Max (reduce ?f PR) \\<le> ?f i", "have \"\\<exists> i\\<in>C. Max (reduce f PR) <= f i\""], ["proof (prove)\nusing this:\n  np \\<le> card C + khl\n  C \\<subseteq> PR\n  \\<lbrakk>?C \\<subseteq> PR; np \\<le> card ?C + khl\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<in>?C. Max (reduce ?f PR) \\<le> ?f i\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i", "by auto"], ["proof (state)\nthis:\n  \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i\n\ngoal (2 subgoals):\n 1. f q \\<le> cfnl p f \\<Longrightarrow> \\<bar>cfnl p f - f q\\<bar> \\<le> y\n 2. \\<not> f q \\<le> cfnl p f \\<Longrightarrow>\n    \\<bar>cfnl p f - f q\\<bar> \\<le> y", "then"], ["proof (chain)\npicking this:\n  \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i", "obtain pi where \n      hpiC: \"pi \\<in> C\" and \n      fpiGeMax: \"Max (reduce f PR) <= f pi\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<in>C. Max (reduce f PR) \\<le> f i\n\ngoal (1 subgoal):\n 1. (\\<And>pi.\n        \\<lbrakk>pi \\<in> C; Max (reduce f PR) \\<le> f pi\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pi \\<in> C\n  Max (reduce f PR) \\<le> f pi\n\ngoal (2 subgoals):\n 1. f q \\<le> cfnl p f \\<Longrightarrow> \\<bar>cfnl p f - f q\\<bar> \\<le> y\n 2. \\<not> f q \\<le> cfnl p f \\<Longrightarrow>\n    \\<bar>cfnl p f - f q\\<bar> \\<le> y", "from reduce_not_empty"], ["proof (chain)\npicking this:\n  reduce ?f PR \\<noteq> {}", "have \"Min (reduce f PR) <= Max (reduce f PR)\""], ["proof (prove)\nusing this:\n  reduce ?f PR \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Min (reduce f PR) \\<le> Max (reduce f PR)", "by (auto simp add: reduce_def)"], ["proof (state)\nthis:\n  Min (reduce f PR) \\<le> Max (reduce f PR)\n\ngoal (2 subgoals):\n 1. f q \\<le> cfnl p f \\<Longrightarrow> \\<bar>cfnl p f - f q\\<bar> \\<le> y\n 2. \\<not> f q \\<le> cfnl p f \\<Longrightarrow>\n    \\<bar>cfnl p f - f q\\<bar> \\<le> y", "with fpiGeMax"], ["proof (chain)\npicking this:\n  Max (reduce f PR) \\<le> f pi\n  Min (reduce f PR) \\<le> Max (reduce f PR)", "have\n      cfnlLefpi: \"cfnl p f <= f pi\""], ["proof (prove)\nusing this:\n  Max (reduce f PR) \\<le> f pi\n  Min (reduce f PR) \\<le> Max (reduce f PR)\n\ngoal (1 subgoal):\n 1. cfnl p f \\<le> f pi", "by (auto simp add: cfnl_def)"], ["proof (state)\nthis:\n  cfnl p f \\<le> f pi\n\ngoal (2 subgoals):\n 1. f q \\<le> cfnl p f \\<Longrightarrow> \\<bar>cfnl p f - f q\\<bar> \\<le> y\n 2. \\<not> f q \\<le> cfnl p f \\<Longrightarrow>\n    \\<bar>cfnl p f - f q\\<bar> \\<le> y", "with True"], ["proof (chain)\npicking this:\n  f q \\<le> cfnl p f\n  cfnl p f \\<le> f pi", "have \n      \"\\<bar> cfnl p f - f q \\<bar> <= \\<bar> f pi - f q \\<bar>\""], ["proof (prove)\nusing this:\n  f q \\<le> cfnl p f\n  cfnl p f \\<le> f pi\n\ngoal (1 subgoal):\n 1. \\<bar>cfnl p f - f q\\<bar> \\<le> \\<bar>f pi - f q\\<bar>", "by arith"], ["proof (state)\nthis:\n  \\<bar>cfnl p f - f q\\<bar> \\<le> \\<bar>f pi - f q\\<bar>\n\ngoal (2 subgoals):\n 1. f q \\<le> cfnl p f \\<Longrightarrow> \\<bar>cfnl p f - f q\\<bar> \\<le> y\n 2. \\<not> f q \\<le> cfnl p f \\<Longrightarrow>\n    \\<bar>cfnl p f - f q\\<bar> \\<le> y", "with hpiC and hqC and hby"], ["proof (chain)\npicking this:\n  pi \\<in> C\n  q \\<in> C\n  \\<forall>l\\<in>C. \\<forall>m\\<in>C. \\<bar>f l - f m\\<bar> \\<le> y\n  \\<bar>cfnl p f - f q\\<bar> \\<le> \\<bar>f pi - f q\\<bar>", "show ?thesis"], ["proof (prove)\nusing this:\n  pi \\<in> C\n  q \\<in> C\n  \\<forall>l\\<in>C. \\<forall>m\\<in>C. \\<bar>f l - f m\\<bar> \\<le> y\n  \\<bar>cfnl p f - f q\\<bar> \\<le> \\<bar>f pi - f q\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>cfnl p f - f q\\<bar> \\<le> y", "by force"], ["proof (state)\nthis:\n  \\<bar>cfnl p f - f q\\<bar> \\<le> y\n\ngoal (1 subgoal):\n 1. \\<not> f q \\<le> cfnl p f \\<Longrightarrow>\n    \\<bar>cfnl p f - f q\\<bar> \\<le> y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> f q \\<le> cfnl p f \\<Longrightarrow>\n    \\<bar>cfnl p f - f q\\<bar> \\<le> y", "case False"], ["proof (state)\nthis:\n  \\<not> f q \\<le> cfnl p f\n\ngoal (1 subgoal):\n 1. \\<not> f q \\<le> cfnl p f \\<Longrightarrow>\n    \\<bar>cfnl p f - f q\\<bar> \\<le> y", "from npleCk hC and lboundmin"], ["proof (chain)\npicking this:\n  np \\<le> card C + khl\n  C \\<subseteq> PR\n  \\<lbrakk>?C \\<subseteq> PR; np \\<le> card ?C + khl\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<in>?C. ?f i \\<le> Min (reduce ?f PR)", "have \"\\<exists> i\\<in>C. f i <= Min (reduce f PR)\""], ["proof (prove)\nusing this:\n  np \\<le> card C + khl\n  C \\<subseteq> PR\n  \\<lbrakk>?C \\<subseteq> PR; np \\<le> card ?C + khl\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<in>?C. ?f i \\<le> Min (reduce ?f PR)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)\n\ngoal (1 subgoal):\n 1. \\<not> f q \\<le> cfnl p f \\<Longrightarrow>\n    \\<bar>cfnl p f - f q\\<bar> \\<le> y", "then"], ["proof (chain)\npicking this:\n  \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)", "obtain qi where \n      hqiC: \"qi \\<in> C\" and \n      fqiLeMax: \"f qi <= Min (reduce f PR)\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<in>C. f i \\<le> Min (reduce f PR)\n\ngoal (1 subgoal):\n 1. (\\<And>qi.\n        \\<lbrakk>qi \\<in> C; f qi \\<le> Min (reduce f PR)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  qi \\<in> C\n  f qi \\<le> Min (reduce f PR)\n\ngoal (1 subgoal):\n 1. \\<not> f q \\<le> cfnl p f \\<Longrightarrow>\n    \\<bar>cfnl p f - f q\\<bar> \\<le> y", "from reduce_not_empty"], ["proof (chain)\npicking this:\n  reduce ?f PR \\<noteq> {}", "have \"Min (reduce f PR) <= Max (reduce f PR)\""], ["proof (prove)\nusing this:\n  reduce ?f PR \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Min (reduce f PR) \\<le> Max (reduce f PR)", "by (auto simp add: reduce_def)"], ["proof (state)\nthis:\n  Min (reduce f PR) \\<le> Max (reduce f PR)\n\ngoal (1 subgoal):\n 1. \\<not> f q \\<le> cfnl p f \\<Longrightarrow>\n    \\<bar>cfnl p f - f q\\<bar> \\<le> y", "with fqiLeMax"], ["proof (chain)\npicking this:\n  f qi \\<le> Min (reduce f PR)\n  Min (reduce f PR) \\<le> Max (reduce f PR)", "have \"f qi <= cfnl p f\""], ["proof (prove)\nusing this:\n  f qi \\<le> Min (reduce f PR)\n  Min (reduce f PR) \\<le> Max (reduce f PR)\n\ngoal (1 subgoal):\n 1. f qi \\<le> cfnl p f", "by (auto simp add: cfnl_def)"], ["proof (state)\nthis:\n  f qi \\<le> cfnl p f\n\ngoal (1 subgoal):\n 1. \\<not> f q \\<le> cfnl p f \\<Longrightarrow>\n    \\<bar>cfnl p f - f q\\<bar> \\<le> y", "with False"], ["proof (chain)\npicking this:\n  \\<not> f q \\<le> cfnl p f\n  f qi \\<le> cfnl p f", "have \n      \"\\<bar> cfnl p f - f q \\<bar> <= \\<bar> f qi - f q \\<bar>\""], ["proof (prove)\nusing this:\n  \\<not> f q \\<le> cfnl p f\n  f qi \\<le> cfnl p f\n\ngoal (1 subgoal):\n 1. \\<bar>cfnl p f - f q\\<bar> \\<le> \\<bar>f qi - f q\\<bar>", "by arith"], ["proof (state)\nthis:\n  \\<bar>cfnl p f - f q\\<bar> \\<le> \\<bar>f qi - f q\\<bar>\n\ngoal (1 subgoal):\n 1. \\<not> f q \\<le> cfnl p f \\<Longrightarrow>\n    \\<bar>cfnl p f - f q\\<bar> \\<le> y", "with hqiC and hqC and hby"], ["proof (chain)\npicking this:\n  qi \\<in> C\n  q \\<in> C\n  \\<forall>l\\<in>C. \\<forall>m\\<in>C. \\<bar>f l - f m\\<bar> \\<le> y\n  \\<bar>cfnl p f - f q\\<bar> \\<le> \\<bar>f qi - f q\\<bar>", "show ?thesis"], ["proof (prove)\nusing this:\n  qi \\<in> C\n  q \\<in> C\n  \\<forall>l\\<in>C. \\<forall>m\\<in>C. \\<bar>f l - f m\\<bar> \\<le> y\n  \\<bar>cfnl p f - f q\\<bar> \\<le> \\<bar>f qi - f q\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>cfnl p f - f q\\<bar> \\<le> y", "by force"], ["proof (state)\nthis:\n  \\<bar>cfnl p f - f q\\<bar> \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<bar>cfnl p f - f q\\<bar> \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}