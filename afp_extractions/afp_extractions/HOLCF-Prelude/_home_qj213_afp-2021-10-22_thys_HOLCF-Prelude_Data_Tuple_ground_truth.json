{"file_name": "/home/qj213/afp-2021-10-22/thys/HOLCF-Prelude/Data_Tuple.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/HOLCF-Prelude", "problem_names": ["lemma eq_Tuple2_simps [simp]:\n  \"eq\\<cdot>\\<langle>x1, y1\\<rangle>\\<cdot>\\<langle>x2, y2\\<rangle> = (eq\\<cdot>x1\\<cdot>x2 andalso eq\\<cdot>y1\\<cdot>y2)\"", "lemma compare_Tuple2_simps [simp]:\n  \"compare\\<cdot>\\<langle>x1, y1\\<rangle>\\<cdot>\\<langle>x2, y2\\<rangle> = thenOrdering\\<cdot>(compare\\<cdot>x1\\<cdot>x2)\\<cdot>(compare\\<cdot>y1\\<cdot>y2)\"", "lemma eq_Tuple3_simps [simp]:\n  \"eq\\<cdot>\\<langle>x1, y1, z1\\<rangle>\\<cdot>\\<langle>x2, y2, z2\\<rangle> = (eq\\<cdot>x1\\<cdot>x2 andalso eq\\<cdot>y1\\<cdot>y2 andalso eq\\<cdot>z1\\<cdot>z2)\"", "lemma compare_Tuple3_simps [simp]:\n  \"compare\\<cdot>\\<langle>x1, y1, z1\\<rangle>\\<cdot>\\<langle>x2, y2, z2\\<rangle> =\n    thenOrdering\\<cdot>(compare\\<cdot>x1\\<cdot>x2)\\<cdot>\n      (thenOrdering\\<cdot>(compare\\<cdot>y1\\<cdot>y2)\\<cdot>(compare\\<cdot>z1\\<cdot>z2))\""], "translations": [["", "lemma eq_Tuple2_simps [simp]:\n  \"eq\\<cdot>\\<langle>x1, y1\\<rangle>\\<cdot>\\<langle>x2, y2\\<rangle> = (eq\\<cdot>x1\\<cdot>x2 andalso eq\\<cdot>y1\\<cdot>y2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eq\\<cdot>\\<langle>x1, y1\\<rangle>\\<cdot>\\<langle>x2, y2\\<rangle> =\n    (eq\\<cdot>x1\\<cdot>x2 andalso eq\\<cdot>y1\\<cdot>y2)", "unfolding eq_Tuple2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case \\<langle>x1, y1\\<rangle> of\n     \\<langle>x1, y1\\<rangle> \\<Rightarrow>\n       \\<Lambda> \\<langle>x2, y2\\<rangle>.\n          eq\\<cdot>x1\\<cdot>x2 andalso eq\\<cdot>y1\\<cdot>y2)\\<cdot>\n    \\<langle>x2, y2\\<rangle> =\n    (eq\\<cdot>x1\\<cdot>x2 andalso eq\\<cdot>y1\\<cdot>y2)", "by simp"], ["", "instance Tuple2 :: (Eq_sym, Eq_sym) Eq_sym"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(\\<langle>'a, 'b\\<rangle>, Eq_sym_class)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. eq\\<cdot>x\\<cdot>y = eq\\<cdot>y\\<cdot>x", "fix x y :: \"\\<langle>'a, 'b\\<rangle>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. eq\\<cdot>x\\<cdot>y = eq\\<cdot>y\\<cdot>x", "show \"eq\\<cdot>x\\<cdot>y = eq\\<cdot>y\\<cdot>x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eq\\<cdot>x\\<cdot>y = eq\\<cdot>y\\<cdot>x", "unfolding eq_Tuple2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case x of\n     \\<langle>x1, y1\\<rangle> \\<Rightarrow>\n       \\<Lambda> \\<langle>x2, y2\\<rangle>.\n          eq\\<cdot>x1\\<cdot>x2 andalso eq\\<cdot>y1\\<cdot>y2)\\<cdot>\n    y =\n    (case y of\n     \\<langle>x1, y1\\<rangle> \\<Rightarrow>\n       \\<Lambda> \\<langle>x2, y2\\<rangle>.\n          eq\\<cdot>x1\\<cdot>x2 andalso eq\\<cdot>y1\\<cdot>y2)\\<cdot>\n    x", "by (cases x, simp, (cases y, simp, simp add: eq_sym)+)"], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>y = eq\\<cdot>y\\<cdot>x\n\ngoal:\nNo subgoals!", "qed"], ["", "instance Tuple2 :: (Eq_equiv, Eq_equiv) Eq_equiv"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(\\<langle>'a, 'b\\<rangle>, Eq_equiv_class)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. eq\\<cdot>x\\<cdot>x \\<noteq> FF\n 2. \\<And>x y z.\n       \\<lbrakk>eq\\<cdot>x\\<cdot>y = TT; eq\\<cdot>y\\<cdot>z = TT\\<rbrakk>\n       \\<Longrightarrow> eq\\<cdot>x\\<cdot>z = TT", "fix x y z :: \"\\<langle>'a, 'b\\<rangle>\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. eq\\<cdot>x\\<cdot>x \\<noteq> FF\n 2. \\<And>x y z.\n       \\<lbrakk>eq\\<cdot>x\\<cdot>y = TT; eq\\<cdot>y\\<cdot>z = TT\\<rbrakk>\n       \\<Longrightarrow> eq\\<cdot>x\\<cdot>z = TT", "show \"eq\\<cdot>x\\<cdot>x \\<noteq> FF\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eq\\<cdot>x\\<cdot>x \\<noteq> FF", "by (cases x, simp_all)"], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>x \\<noteq> FF\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>eq\\<cdot>x\\<cdot>y = TT; eq\\<cdot>y\\<cdot>z = TT\\<rbrakk>\n       \\<Longrightarrow> eq\\<cdot>x\\<cdot>z = TT", "{"], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>x \\<noteq> FF\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>eq\\<cdot>x\\<cdot>y = TT; eq\\<cdot>y\\<cdot>z = TT\\<rbrakk>\n       \\<Longrightarrow> eq\\<cdot>x\\<cdot>z = TT", "assume \"eq\\<cdot>x\\<cdot>y = TT\" and \"eq\\<cdot>y\\<cdot>z = TT\""], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>y = TT\n  eq\\<cdot>y\\<cdot>z = TT\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>eq\\<cdot>x\\<cdot>y = TT; eq\\<cdot>y\\<cdot>z = TT\\<rbrakk>\n       \\<Longrightarrow> eq\\<cdot>x\\<cdot>z = TT", "then"], ["proof (chain)\npicking this:\n  eq\\<cdot>x\\<cdot>y = TT\n  eq\\<cdot>y\\<cdot>z = TT", "show \"eq\\<cdot>x\\<cdot>z = TT\""], ["proof (prove)\nusing this:\n  eq\\<cdot>x\\<cdot>y = TT\n  eq\\<cdot>y\\<cdot>z = TT\n\ngoal (1 subgoal):\n 1. eq\\<cdot>x\\<cdot>z = TT", "by (cases x, simp, cases y, simp, cases z, simp, simp,\n          fast intro: eq_trans)"], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>z = TT\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  \\<lbrakk>eq\\<cdot>x\\<cdot>y = TT; eq\\<cdot>y\\<cdot>z = TT\\<rbrakk>\n  \\<Longrightarrow> eq\\<cdot>x\\<cdot>z = TT\n\ngoal:\nNo subgoals!", "qed"], ["", "instance Tuple2 :: (Eq_eq, Eq_eq) Eq_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(\\<langle>'a, 'b\\<rangle>, Eq_eq_class)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. eq\\<cdot>x\\<cdot>x \\<noteq> FF\n 2. \\<And>x y. eq\\<cdot>x\\<cdot>y = TT \\<Longrightarrow> x = y", "fix x y :: \"\\<langle>'a, 'b\\<rangle>\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. eq\\<cdot>x\\<cdot>x \\<noteq> FF\n 2. \\<And>x y. eq\\<cdot>x\\<cdot>y = TT \\<Longrightarrow> x = y", "show \"eq\\<cdot>x\\<cdot>x \\<noteq> FF\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eq\\<cdot>x\\<cdot>x \\<noteq> FF", "by (cases x, simp_all)"], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>x \\<noteq> FF\n\ngoal (1 subgoal):\n 1. \\<And>x y. eq\\<cdot>x\\<cdot>y = TT \\<Longrightarrow> x = y", "{"], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>x \\<noteq> FF\n\ngoal (1 subgoal):\n 1. \\<And>x y. eq\\<cdot>x\\<cdot>y = TT \\<Longrightarrow> x = y", "assume \"eq\\<cdot>x\\<cdot>y = TT\""], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>y = TT\n\ngoal (1 subgoal):\n 1. \\<And>x y. eq\\<cdot>x\\<cdot>y = TT \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  eq\\<cdot>x\\<cdot>y = TT", "show \"x = y\""], ["proof (prove)\nusing this:\n  eq\\<cdot>x\\<cdot>y = TT\n\ngoal (1 subgoal):\n 1. x = y", "by (cases x, simp, cases y, simp, simp, fast)"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>y = TT \\<Longrightarrow> x = y\n\ngoal:\nNo subgoals!", "qed"], ["", "instantiation Tuple2 :: (Ord, Ord) Ord_strict\nbegin"], ["", "definition\n  \"compare = (\\<Lambda> \\<langle>x1, y1\\<rangle> \\<langle>x2, y2\\<rangle>.\n    thenOrdering\\<cdot>(compare\\<cdot>x1\\<cdot>x2)\\<cdot>(compare\\<cdot>y1\\<cdot>y2))\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(\\<langle>'a, 'b\\<rangle>, Ord_strict_class)", "by standard (simp add: compare_Tuple2_def,\n      rename_tac x, case_tac x, simp_all add: compare_Tuple2_def)"], ["", "end"], ["", "lemma compare_Tuple2_simps [simp]:\n  \"compare\\<cdot>\\<langle>x1, y1\\<rangle>\\<cdot>\\<langle>x2, y2\\<rangle> = thenOrdering\\<cdot>(compare\\<cdot>x1\\<cdot>x2)\\<cdot>(compare\\<cdot>y1\\<cdot>y2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compare\\<cdot>\\<langle>x1, y1\\<rangle>\\<cdot>\\<langle>x2, y2\\<rangle> =\n    thenOrdering\\<cdot>(compare\\<cdot>x1\\<cdot>x2)\\<cdot>\n    (compare\\<cdot>y1\\<cdot>y2)", "unfolding compare_Tuple2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case \\<langle>x1, y1\\<rangle> of\n     \\<langle>x1, y1\\<rangle> \\<Rightarrow>\n       \\<Lambda> \\<langle>x2, y2\\<rangle>.\n          thenOrdering\\<cdot>(compare\\<cdot>x1\\<cdot>x2)\\<cdot>\n          (compare\\<cdot>y1\\<cdot>y2))\\<cdot>\n    \\<langle>x2, y2\\<rangle> =\n    thenOrdering\\<cdot>(compare\\<cdot>x1\\<cdot>x2)\\<cdot>\n    (compare\\<cdot>y1\\<cdot>y2)", "by simp"], ["", "instance Tuple2 :: (Ord_linear, Ord_linear) Ord_linear"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(\\<langle>'a, 'b\\<rangle>, Ord_linear_class)", "proof"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y. eq\\<cdot>x\\<cdot>y = is_EQ\\<cdot>(compare\\<cdot>x\\<cdot>y)\n 2. \\<And>x y.\n       oppOrdering\\<cdot>(compare\\<cdot>x\\<cdot>y) = compare\\<cdot>y\\<cdot>x\n 3. \\<And>x y. compare\\<cdot>x\\<cdot>y = EQ \\<Longrightarrow> x = y\n 4. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n 5. \\<And>x y z.\n       \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n        compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT", "fix x y z :: \"\\<langle>'a, 'b\\<rangle>\""], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y. eq\\<cdot>x\\<cdot>y = is_EQ\\<cdot>(compare\\<cdot>x\\<cdot>y)\n 2. \\<And>x y.\n       oppOrdering\\<cdot>(compare\\<cdot>x\\<cdot>y) = compare\\<cdot>y\\<cdot>x\n 3. \\<And>x y. compare\\<cdot>x\\<cdot>y = EQ \\<Longrightarrow> x = y\n 4. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n 5. \\<And>x y z.\n       \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n        compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT", "show \"eq\\<cdot>x\\<cdot>y = is_EQ\\<cdot>(compare\\<cdot>x\\<cdot>y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eq\\<cdot>x\\<cdot>y = is_EQ\\<cdot>(compare\\<cdot>x\\<cdot>y)", "by (cases x, simp, cases y, simp, simp add: eq_conv_compare)"], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>y = is_EQ\\<cdot>(compare\\<cdot>x\\<cdot>y)\n\ngoal (4 subgoals):\n 1. \\<And>x y.\n       oppOrdering\\<cdot>(compare\\<cdot>x\\<cdot>y) = compare\\<cdot>y\\<cdot>x\n 2. \\<And>x y. compare\\<cdot>x\\<cdot>y = EQ \\<Longrightarrow> x = y\n 3. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n 4. \\<And>x y z.\n       \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n        compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT", "show \"oppOrdering\\<cdot>(compare\\<cdot>x\\<cdot>y) = compare\\<cdot>y\\<cdot>x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. oppOrdering\\<cdot>(compare\\<cdot>x\\<cdot>y) = compare\\<cdot>y\\<cdot>x", "by (cases x, simp, cases y, simp, simp add: oppOrdering_thenOrdering)"], ["proof (state)\nthis:\n  oppOrdering\\<cdot>(compare\\<cdot>x\\<cdot>y) = compare\\<cdot>y\\<cdot>x\n\ngoal (3 subgoals):\n 1. \\<And>x y. compare\\<cdot>x\\<cdot>y = EQ \\<Longrightarrow> x = y\n 2. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n 3. \\<And>x y z.\n       \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n        compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT", "{"], ["proof (state)\nthis:\n  oppOrdering\\<cdot>(compare\\<cdot>x\\<cdot>y) = compare\\<cdot>y\\<cdot>x\n\ngoal (3 subgoals):\n 1. \\<And>x y. compare\\<cdot>x\\<cdot>y = EQ \\<Longrightarrow> x = y\n 2. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n 3. \\<And>x y z.\n       \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n        compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT", "assume \"compare\\<cdot>x\\<cdot>y = EQ\""], ["proof (state)\nthis:\n  compare\\<cdot>x\\<cdot>y = EQ\n\ngoal (3 subgoals):\n 1. \\<And>x y. compare\\<cdot>x\\<cdot>y = EQ \\<Longrightarrow> x = y\n 2. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n 3. \\<And>x y z.\n       \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n        compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT", "then"], ["proof (chain)\npicking this:\n  compare\\<cdot>x\\<cdot>y = EQ", "show \"x = y\""], ["proof (prove)\nusing this:\n  compare\\<cdot>x\\<cdot>y = EQ\n\ngoal (1 subgoal):\n 1. x = y", "by (cases x, simp, cases y, simp, auto elim: compare_EQ_dest)"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n 2. \\<And>x y z.\n       \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n        compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT", "}"], ["proof (state)\nthis:\n  compare\\<cdot>x\\<cdot>y = EQ \\<Longrightarrow> x = y\n\ngoal (2 subgoals):\n 1. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n 2. \\<And>x y z.\n       \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n        compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT", "{"], ["proof (state)\nthis:\n  compare\\<cdot>x\\<cdot>y = EQ \\<Longrightarrow> x = y\n\ngoal (2 subgoals):\n 1. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n 2. \\<And>x y z.\n       \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n        compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT", "assume \"compare\\<cdot>x\\<cdot>y = LT\" and \"compare\\<cdot>y\\<cdot>z = LT\""], ["proof (state)\nthis:\n  compare\\<cdot>x\\<cdot>y = LT\n  compare\\<cdot>y\\<cdot>z = LT\n\ngoal (2 subgoals):\n 1. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n 2. \\<And>x y z.\n       \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n        compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT", "then"], ["proof (chain)\npicking this:\n  compare\\<cdot>x\\<cdot>y = LT\n  compare\\<cdot>y\\<cdot>z = LT", "show \"compare\\<cdot>x\\<cdot>z = LT\""], ["proof (prove)\nusing this:\n  compare\\<cdot>x\\<cdot>y = LT\n  compare\\<cdot>y\\<cdot>z = LT\n\ngoal (1 subgoal):\n 1. compare\\<cdot>x\\<cdot>z = LT", "apply (cases x, simp, cases y, simp, cases z, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab bb.\n       \\<lbrakk>compare\\<cdot>a\\<cdot>aa = LT \\<or>\n                compare\\<cdot>a\\<cdot>aa = EQ \\<and>\n                compare\\<cdot>b\\<cdot>ba = LT;\n        compare\\<cdot>aa\\<cdot>ab = LT \\<or>\n        compare\\<cdot>aa\\<cdot>ab = EQ \\<and>\n        compare\\<cdot>ba\\<cdot>bb = LT;\n        x = \\<langle>a, b\\<rangle>; y = \\<langle>aa, ba\\<rangle>;\n        z = \\<langle>ab, bb\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         compare\\<cdot>b\\<cdot>bb = LT", "apply (elim disjE conjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b aa ba ab bb.\n       \\<lbrakk>x = \\<langle>a, b\\<rangle>; y = \\<langle>aa, ba\\<rangle>;\n        z = \\<langle>ab, bb\\<rangle>; compare\\<cdot>a\\<cdot>aa = LT;\n        compare\\<cdot>aa\\<cdot>ab = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         compare\\<cdot>b\\<cdot>bb = LT\n 2. \\<And>a b aa ba ab bb.\n       \\<lbrakk>x = \\<langle>a, b\\<rangle>; y = \\<langle>aa, ba\\<rangle>;\n        z = \\<langle>ab, bb\\<rangle>; compare\\<cdot>a\\<cdot>aa = LT;\n        compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         compare\\<cdot>b\\<cdot>bb = LT\n 3. \\<And>a b aa ba ab bb.\n       \\<lbrakk>x = \\<langle>a, b\\<rangle>; y = \\<langle>aa, ba\\<rangle>;\n        z = \\<langle>ab, bb\\<rangle>; compare\\<cdot>aa\\<cdot>ab = LT;\n        compare\\<cdot>a\\<cdot>aa = EQ;\n        compare\\<cdot>b\\<cdot>ba = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         compare\\<cdot>b\\<cdot>bb = LT\n 4. \\<And>a b aa ba ab bb.\n       \\<lbrakk>x = \\<langle>a, b\\<rangle>; y = \\<langle>aa, ba\\<rangle>;\n        z = \\<langle>ab, bb\\<rangle>; compare\\<cdot>a\\<cdot>aa = EQ;\n        compare\\<cdot>b\\<cdot>ba = LT; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         compare\\<cdot>b\\<cdot>bb = LT", "apply (fast elim!: compare_LT_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b aa ba ab bb.\n       \\<lbrakk>x = \\<langle>a, b\\<rangle>; y = \\<langle>aa, ba\\<rangle>;\n        z = \\<langle>ab, bb\\<rangle>; compare\\<cdot>a\\<cdot>aa = LT;\n        compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         compare\\<cdot>b\\<cdot>bb = LT\n 2. \\<And>a b aa ba ab bb.\n       \\<lbrakk>x = \\<langle>a, b\\<rangle>; y = \\<langle>aa, ba\\<rangle>;\n        z = \\<langle>ab, bb\\<rangle>; compare\\<cdot>aa\\<cdot>ab = LT;\n        compare\\<cdot>a\\<cdot>aa = EQ;\n        compare\\<cdot>b\\<cdot>ba = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         compare\\<cdot>b\\<cdot>bb = LT\n 3. \\<And>a b aa ba ab bb.\n       \\<lbrakk>x = \\<langle>a, b\\<rangle>; y = \\<langle>aa, ba\\<rangle>;\n        z = \\<langle>ab, bb\\<rangle>; compare\\<cdot>a\\<cdot>aa = EQ;\n        compare\\<cdot>b\\<cdot>ba = LT; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         compare\\<cdot>b\\<cdot>bb = LT", "apply (fast dest: compare_EQ_dest)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b aa ba ab bb.\n       \\<lbrakk>x = \\<langle>a, b\\<rangle>; y = \\<langle>aa, ba\\<rangle>;\n        z = \\<langle>ab, bb\\<rangle>; compare\\<cdot>aa\\<cdot>ab = LT;\n        compare\\<cdot>a\\<cdot>aa = EQ;\n        compare\\<cdot>b\\<cdot>ba = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         compare\\<cdot>b\\<cdot>bb = LT\n 2. \\<And>a b aa ba ab bb.\n       \\<lbrakk>x = \\<langle>a, b\\<rangle>; y = \\<langle>aa, ba\\<rangle>;\n        z = \\<langle>ab, bb\\<rangle>; compare\\<cdot>a\\<cdot>aa = EQ;\n        compare\\<cdot>b\\<cdot>ba = LT; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         compare\\<cdot>b\\<cdot>bb = LT", "apply (fast dest: compare_EQ_dest)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab bb.\n       \\<lbrakk>x = \\<langle>a, b\\<rangle>; y = \\<langle>aa, ba\\<rangle>;\n        z = \\<langle>ab, bb\\<rangle>; compare\\<cdot>a\\<cdot>aa = EQ;\n        compare\\<cdot>b\\<cdot>ba = LT; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         compare\\<cdot>b\\<cdot>bb = LT", "apply (drule compare_EQ_dest)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab bb.\n       \\<lbrakk>x = \\<langle>a, b\\<rangle>; y = \\<langle>aa, ba\\<rangle>;\n        z = \\<langle>ab, bb\\<rangle>; compare\\<cdot>b\\<cdot>ba = LT;\n        compare\\<cdot>aa\\<cdot>ab = EQ; compare\\<cdot>ba\\<cdot>bb = LT;\n        a = aa\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         compare\\<cdot>b\\<cdot>bb = LT", "apply (fast elim!: compare_LT_trans)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  compare\\<cdot>x\\<cdot>z = LT\n\ngoal (1 subgoal):\n 1. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ", "}"], ["proof (state)\nthis:\n  \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n   compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n  \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT\n\ngoal (1 subgoal):\n 1. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ", "show \"compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ", "by (cases x, simp_all)"], ["proof (state)\nthis:\n  compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n\ngoal:\nNo subgoals!", "qed"], ["", "instantiation Tuple3 :: (Eq, Eq, Eq) Eq_strict\nbegin"], ["", "definition\n  \"eq = (\\<Lambda> \\<langle>x1, y1, z1\\<rangle> \\<langle>x2, y2, z2\\<rangle>.\n    eq\\<cdot>x1\\<cdot>x2 andalso eq\\<cdot>y1\\<cdot>y2 andalso eq\\<cdot>z1\\<cdot>z2)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(\\<langle>'a, 'b, 'c\\<rangle>, Eq_strict_class)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. eq\\<cdot>x\\<cdot>\\<bottom> = \\<bottom>\n 2. \\<And>y. eq\\<cdot>\\<bottom>\\<cdot>y = \\<bottom>", "fix x :: \"\\<langle>'a, 'b, 'c\\<rangle>\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. eq\\<cdot>x\\<cdot>\\<bottom> = \\<bottom>\n 2. \\<And>y. eq\\<cdot>\\<bottom>\\<cdot>y = \\<bottom>", "show \"eq\\<cdot>x\\<cdot>\\<bottom> = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eq\\<cdot>x\\<cdot>\\<bottom> = \\<bottom>", "unfolding eq_Tuple3_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case x of\n     \\<langle>x1, y1, z1\\<rangle> \\<Rightarrow>\n       \\<Lambda> \\<langle>x2, y2, z2\\<rangle>.\n          eq\\<cdot>x1\\<cdot>\n          x2 andalso eq\\<cdot>y1\\<cdot>\n                     y2 andalso eq\\<cdot>z1\\<cdot>z2)\\<cdot>\n    \\<bottom> =\n    \\<bottom>", "by (cases x, simp_all)"], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>\\<bottom> = \\<bottom>\n\ngoal (1 subgoal):\n 1. \\<And>y. eq\\<cdot>\\<bottom>\\<cdot>y = \\<bottom>", "show \"eq\\<cdot>\\<bottom>\\<cdot>x = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eq\\<cdot>\\<bottom>\\<cdot>x = \\<bottom>", "unfolding eq_Tuple3_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case \\<bottom> of\n     \\<langle>x1, y1, z1\\<rangle> \\<Rightarrow>\n       \\<Lambda> \\<langle>x2, y2, z2\\<rangle>.\n          eq\\<cdot>x1\\<cdot>\n          x2 andalso eq\\<cdot>y1\\<cdot>\n                     y2 andalso eq\\<cdot>z1\\<cdot>z2)\\<cdot>\n    x =\n    \\<bottom>", "by simp"], ["proof (state)\nthis:\n  eq\\<cdot>\\<bottom>\\<cdot>x = \\<bottom>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma eq_Tuple3_simps [simp]:\n  \"eq\\<cdot>\\<langle>x1, y1, z1\\<rangle>\\<cdot>\\<langle>x2, y2, z2\\<rangle> = (eq\\<cdot>x1\\<cdot>x2 andalso eq\\<cdot>y1\\<cdot>y2 andalso eq\\<cdot>z1\\<cdot>z2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eq\\<cdot>\\<langle>x1, y1, z1\\<rangle>\\<cdot>\n    \\<langle>x2, y2, z2\\<rangle> =\n    (eq\\<cdot>x1\\<cdot>\n     x2 andalso eq\\<cdot>y1\\<cdot>y2 andalso eq\\<cdot>z1\\<cdot>z2)", "unfolding eq_Tuple3_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case \\<langle>x1, y1, z1\\<rangle> of\n     \\<langle>x1, y1, z1\\<rangle> \\<Rightarrow>\n       \\<Lambda> \\<langle>x2, y2, z2\\<rangle>.\n          eq\\<cdot>x1\\<cdot>\n          x2 andalso eq\\<cdot>y1\\<cdot>\n                     y2 andalso eq\\<cdot>z1\\<cdot>z2)\\<cdot>\n    \\<langle>x2, y2, z2\\<rangle> =\n    (eq\\<cdot>x1\\<cdot>\n     x2 andalso eq\\<cdot>y1\\<cdot>y2 andalso eq\\<cdot>z1\\<cdot>z2)", "by simp"], ["", "instance Tuple3 :: (Eq_sym, Eq_sym, Eq_sym) Eq_sym"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(\\<langle>'a, 'b, 'c\\<rangle>, Eq_sym_class)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. eq\\<cdot>x\\<cdot>y = eq\\<cdot>y\\<cdot>x", "fix x y :: \"\\<langle>'a, 'b, 'c\\<rangle>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. eq\\<cdot>x\\<cdot>y = eq\\<cdot>y\\<cdot>x", "show \"eq\\<cdot>x\\<cdot>y = eq\\<cdot>y\\<cdot>x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eq\\<cdot>x\\<cdot>y = eq\\<cdot>y\\<cdot>x", "unfolding eq_Tuple3_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case x of\n     \\<langle>x1, y1, z1\\<rangle> \\<Rightarrow>\n       \\<Lambda> \\<langle>x2, y2, z2\\<rangle>.\n          eq\\<cdot>x1\\<cdot>\n          x2 andalso eq\\<cdot>y1\\<cdot>\n                     y2 andalso eq\\<cdot>z1\\<cdot>z2)\\<cdot>\n    y =\n    (case y of\n     \\<langle>x1, y1, z1\\<rangle> \\<Rightarrow>\n       \\<Lambda> \\<langle>x2, y2, z2\\<rangle>.\n          eq\\<cdot>x1\\<cdot>\n          x2 andalso eq\\<cdot>y1\\<cdot>\n                     y2 andalso eq\\<cdot>z1\\<cdot>z2)\\<cdot>\n    x", "by (cases x, simp, (cases y, simp, simp add: eq_sym)+)"], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>y = eq\\<cdot>y\\<cdot>x\n\ngoal:\nNo subgoals!", "qed"], ["", "instance Tuple3 :: (Eq_equiv, Eq_equiv, Eq_equiv) Eq_equiv"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(\\<langle>'a, 'b, 'c\\<rangle>, Eq_equiv_class)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. eq\\<cdot>x\\<cdot>x \\<noteq> FF\n 2. \\<And>x y z.\n       \\<lbrakk>eq\\<cdot>x\\<cdot>y = TT; eq\\<cdot>y\\<cdot>z = TT\\<rbrakk>\n       \\<Longrightarrow> eq\\<cdot>x\\<cdot>z = TT", "fix x y z :: \"\\<langle>'a, 'b, 'c\\<rangle>\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. eq\\<cdot>x\\<cdot>x \\<noteq> FF\n 2. \\<And>x y z.\n       \\<lbrakk>eq\\<cdot>x\\<cdot>y = TT; eq\\<cdot>y\\<cdot>z = TT\\<rbrakk>\n       \\<Longrightarrow> eq\\<cdot>x\\<cdot>z = TT", "show \"eq\\<cdot>x\\<cdot>x \\<noteq> FF\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eq\\<cdot>x\\<cdot>x \\<noteq> FF", "by (cases x, simp_all)"], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>x \\<noteq> FF\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>eq\\<cdot>x\\<cdot>y = TT; eq\\<cdot>y\\<cdot>z = TT\\<rbrakk>\n       \\<Longrightarrow> eq\\<cdot>x\\<cdot>z = TT", "{"], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>x \\<noteq> FF\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>eq\\<cdot>x\\<cdot>y = TT; eq\\<cdot>y\\<cdot>z = TT\\<rbrakk>\n       \\<Longrightarrow> eq\\<cdot>x\\<cdot>z = TT", "assume \"eq\\<cdot>x\\<cdot>y = TT\" and \"eq\\<cdot>y\\<cdot>z = TT\""], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>y = TT\n  eq\\<cdot>y\\<cdot>z = TT\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>eq\\<cdot>x\\<cdot>y = TT; eq\\<cdot>y\\<cdot>z = TT\\<rbrakk>\n       \\<Longrightarrow> eq\\<cdot>x\\<cdot>z = TT", "then"], ["proof (chain)\npicking this:\n  eq\\<cdot>x\\<cdot>y = TT\n  eq\\<cdot>y\\<cdot>z = TT", "show \"eq\\<cdot>x\\<cdot>z = TT\""], ["proof (prove)\nusing this:\n  eq\\<cdot>x\\<cdot>y = TT\n  eq\\<cdot>y\\<cdot>z = TT\n\ngoal (1 subgoal):\n 1. eq\\<cdot>x\\<cdot>z = TT", "by (cases x, simp, cases y, simp, cases z, simp, simp,\n          fast intro: eq_trans)"], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>z = TT\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  \\<lbrakk>eq\\<cdot>x\\<cdot>y = TT; eq\\<cdot>y\\<cdot>z = TT\\<rbrakk>\n  \\<Longrightarrow> eq\\<cdot>x\\<cdot>z = TT\n\ngoal:\nNo subgoals!", "qed"], ["", "instance Tuple3 :: (Eq_eq, Eq_eq, Eq_eq) Eq_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(\\<langle>'a, 'b, 'c\\<rangle>, Eq_eq_class)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. eq\\<cdot>x\\<cdot>x \\<noteq> FF\n 2. \\<And>x y. eq\\<cdot>x\\<cdot>y = TT \\<Longrightarrow> x = y", "fix x y :: \"\\<langle>'a, 'b, 'c\\<rangle>\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. eq\\<cdot>x\\<cdot>x \\<noteq> FF\n 2. \\<And>x y. eq\\<cdot>x\\<cdot>y = TT \\<Longrightarrow> x = y", "show \"eq\\<cdot>x\\<cdot>x \\<noteq> FF\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eq\\<cdot>x\\<cdot>x \\<noteq> FF", "by (cases x, simp_all)"], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>x \\<noteq> FF\n\ngoal (1 subgoal):\n 1. \\<And>x y. eq\\<cdot>x\\<cdot>y = TT \\<Longrightarrow> x = y", "{"], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>x \\<noteq> FF\n\ngoal (1 subgoal):\n 1. \\<And>x y. eq\\<cdot>x\\<cdot>y = TT \\<Longrightarrow> x = y", "assume \"eq\\<cdot>x\\<cdot>y = TT\""], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>y = TT\n\ngoal (1 subgoal):\n 1. \\<And>x y. eq\\<cdot>x\\<cdot>y = TT \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  eq\\<cdot>x\\<cdot>y = TT", "show \"x = y\""], ["proof (prove)\nusing this:\n  eq\\<cdot>x\\<cdot>y = TT\n\ngoal (1 subgoal):\n 1. x = y", "by (cases x, simp, cases y, simp, simp, fast)"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>y = TT \\<Longrightarrow> x = y\n\ngoal:\nNo subgoals!", "qed"], ["", "instantiation Tuple3 :: (Ord, Ord, Ord) Ord_strict\nbegin"], ["", "definition\n  \"compare = (\\<Lambda> \\<langle>x1, y1, z1\\<rangle> \\<langle>x2, y2, z2\\<rangle>.\n    thenOrdering\\<cdot>(compare\\<cdot>x1\\<cdot>x2)\\<cdot>(thenOrdering\\<cdot>(compare\\<cdot>y1\\<cdot>y2)\\<cdot>(compare\\<cdot>z1\\<cdot>z2)))\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(\\<langle>'a, 'b, 'c\\<rangle>, Ord_strict_class)", "by standard (simp add: compare_Tuple3_def,\n    rename_tac x, case_tac x, simp_all add: compare_Tuple3_def)"], ["", "end"], ["", "lemma compare_Tuple3_simps [simp]:\n  \"compare\\<cdot>\\<langle>x1, y1, z1\\<rangle>\\<cdot>\\<langle>x2, y2, z2\\<rangle> =\n    thenOrdering\\<cdot>(compare\\<cdot>x1\\<cdot>x2)\\<cdot>\n      (thenOrdering\\<cdot>(compare\\<cdot>y1\\<cdot>y2)\\<cdot>(compare\\<cdot>z1\\<cdot>z2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compare\\<cdot>\\<langle>x1, y1, z1\\<rangle>\\<cdot>\n    \\<langle>x2, y2, z2\\<rangle> =\n    thenOrdering\\<cdot>(compare\\<cdot>x1\\<cdot>x2)\\<cdot>\n    (thenOrdering\\<cdot>(compare\\<cdot>y1\\<cdot>y2)\\<cdot>\n     (compare\\<cdot>z1\\<cdot>z2))", "unfolding compare_Tuple3_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case \\<langle>x1, y1, z1\\<rangle> of\n     \\<langle>x1, y1, z1\\<rangle> \\<Rightarrow>\n       \\<Lambda> \\<langle>x2, y2, z2\\<rangle>.\n          thenOrdering\\<cdot>(compare\\<cdot>x1\\<cdot>x2)\\<cdot>\n          (thenOrdering\\<cdot>(compare\\<cdot>y1\\<cdot>y2)\\<cdot>\n           (compare\\<cdot>z1\\<cdot>z2)))\\<cdot>\n    \\<langle>x2, y2, z2\\<rangle> =\n    thenOrdering\\<cdot>(compare\\<cdot>x1\\<cdot>x2)\\<cdot>\n    (thenOrdering\\<cdot>(compare\\<cdot>y1\\<cdot>y2)\\<cdot>\n     (compare\\<cdot>z1\\<cdot>z2))", "by simp"], ["", "instance Tuple3 :: (Ord_linear, Ord_linear, Ord_linear) Ord_linear"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(\\<langle>'a, 'b, 'c\\<rangle>, Ord_linear_class)", "proof"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y. eq\\<cdot>x\\<cdot>y = is_EQ\\<cdot>(compare\\<cdot>x\\<cdot>y)\n 2. \\<And>x y.\n       oppOrdering\\<cdot>(compare\\<cdot>x\\<cdot>y) = compare\\<cdot>y\\<cdot>x\n 3. \\<And>x y. compare\\<cdot>x\\<cdot>y = EQ \\<Longrightarrow> x = y\n 4. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n 5. \\<And>x y z.\n       \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n        compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT", "fix x y z :: \"\\<langle>'a, 'b, 'c\\<rangle>\""], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y. eq\\<cdot>x\\<cdot>y = is_EQ\\<cdot>(compare\\<cdot>x\\<cdot>y)\n 2. \\<And>x y.\n       oppOrdering\\<cdot>(compare\\<cdot>x\\<cdot>y) = compare\\<cdot>y\\<cdot>x\n 3. \\<And>x y. compare\\<cdot>x\\<cdot>y = EQ \\<Longrightarrow> x = y\n 4. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n 5. \\<And>x y z.\n       \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n        compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT", "show \"eq\\<cdot>x\\<cdot>y = is_EQ\\<cdot>(compare\\<cdot>x\\<cdot>y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eq\\<cdot>x\\<cdot>y = is_EQ\\<cdot>(compare\\<cdot>x\\<cdot>y)", "by (cases x, simp, cases y, simp, simp add: eq_conv_compare)"], ["proof (state)\nthis:\n  eq\\<cdot>x\\<cdot>y = is_EQ\\<cdot>(compare\\<cdot>x\\<cdot>y)\n\ngoal (4 subgoals):\n 1. \\<And>x y.\n       oppOrdering\\<cdot>(compare\\<cdot>x\\<cdot>y) = compare\\<cdot>y\\<cdot>x\n 2. \\<And>x y. compare\\<cdot>x\\<cdot>y = EQ \\<Longrightarrow> x = y\n 3. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n 4. \\<And>x y z.\n       \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n        compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT", "show \"oppOrdering\\<cdot>(compare\\<cdot>x\\<cdot>y) = compare\\<cdot>y\\<cdot>x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. oppOrdering\\<cdot>(compare\\<cdot>x\\<cdot>y) = compare\\<cdot>y\\<cdot>x", "by (cases x, simp, cases y, simp, simp add: oppOrdering_thenOrdering)"], ["proof (state)\nthis:\n  oppOrdering\\<cdot>(compare\\<cdot>x\\<cdot>y) = compare\\<cdot>y\\<cdot>x\n\ngoal (3 subgoals):\n 1. \\<And>x y. compare\\<cdot>x\\<cdot>y = EQ \\<Longrightarrow> x = y\n 2. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n 3. \\<And>x y z.\n       \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n        compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT", "{"], ["proof (state)\nthis:\n  oppOrdering\\<cdot>(compare\\<cdot>x\\<cdot>y) = compare\\<cdot>y\\<cdot>x\n\ngoal (3 subgoals):\n 1. \\<And>x y. compare\\<cdot>x\\<cdot>y = EQ \\<Longrightarrow> x = y\n 2. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n 3. \\<And>x y z.\n       \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n        compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT", "assume \"compare\\<cdot>x\\<cdot>y = EQ\""], ["proof (state)\nthis:\n  compare\\<cdot>x\\<cdot>y = EQ\n\ngoal (3 subgoals):\n 1. \\<And>x y. compare\\<cdot>x\\<cdot>y = EQ \\<Longrightarrow> x = y\n 2. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n 3. \\<And>x y z.\n       \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n        compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT", "then"], ["proof (chain)\npicking this:\n  compare\\<cdot>x\\<cdot>y = EQ", "show \"x = y\""], ["proof (prove)\nusing this:\n  compare\\<cdot>x\\<cdot>y = EQ\n\ngoal (1 subgoal):\n 1. x = y", "by (cases x, simp, cases y, simp, auto elim: compare_EQ_dest)"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n 2. \\<And>x y z.\n       \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n        compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT", "}"], ["proof (state)\nthis:\n  compare\\<cdot>x\\<cdot>y = EQ \\<Longrightarrow> x = y\n\ngoal (2 subgoals):\n 1. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n 2. \\<And>x y z.\n       \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n        compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT", "{"], ["proof (state)\nthis:\n  compare\\<cdot>x\\<cdot>y = EQ \\<Longrightarrow> x = y\n\ngoal (2 subgoals):\n 1. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n 2. \\<And>x y z.\n       \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n        compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT", "assume \"compare\\<cdot>x\\<cdot>y = LT\" and \"compare\\<cdot>y\\<cdot>z = LT\""], ["proof (state)\nthis:\n  compare\\<cdot>x\\<cdot>y = LT\n  compare\\<cdot>y\\<cdot>z = LT\n\ngoal (2 subgoals):\n 1. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n 2. \\<And>x y z.\n       \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n        compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT", "then"], ["proof (chain)\npicking this:\n  compare\\<cdot>x\\<cdot>y = LT\n  compare\\<cdot>y\\<cdot>z = LT", "show \"compare\\<cdot>x\\<cdot>z = LT\""], ["proof (prove)\nusing this:\n  compare\\<cdot>x\\<cdot>y = LT\n  compare\\<cdot>y\\<cdot>z = LT\n\ngoal (1 subgoal):\n 1. compare\\<cdot>x\\<cdot>z = LT", "apply (cases x, simp, cases y, simp, cases z, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>compare\\<cdot>a\\<cdot>aa = LT \\<or>\n                compare\\<cdot>a\\<cdot>aa = EQ \\<and>\n                (compare\\<cdot>b\\<cdot>ba = LT \\<or>\n                 compare\\<cdot>b\\<cdot>ba = EQ \\<and>\n                 compare\\<cdot>c\\<cdot>ca = LT);\n        compare\\<cdot>aa\\<cdot>ab = LT \\<or>\n        compare\\<cdot>aa\\<cdot>ab = EQ \\<and>\n        (compare\\<cdot>ba\\<cdot>bb = LT \\<or>\n         compare\\<cdot>ba\\<cdot>bb = EQ \\<and>\n         compare\\<cdot>ca\\<cdot>cb = LT);\n        x = \\<langle>a, b, c\\<rangle>; y = \\<langle>aa, ba, ca\\<rangle>;\n        z = \\<langle>ab, bb, cb\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)", "apply (elim disjE conjE)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = LT;\n        compare\\<cdot>aa\\<cdot>ab = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 2. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = LT; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 3. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = LT; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 4. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>aa\\<cdot>ab = LT; compare\\<cdot>a\\<cdot>aa = EQ;\n        compare\\<cdot>b\\<cdot>ba = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 5. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>aa\\<cdot>ab = LT; compare\\<cdot>a\\<cdot>aa = EQ;\n        compare\\<cdot>b\\<cdot>ba = EQ;\n        compare\\<cdot>c\\<cdot>ca = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 6. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>b\\<cdot>ba = LT;\n        compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 7. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>b\\<cdot>ba = LT;\n        compare\\<cdot>aa\\<cdot>ab = EQ; compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 8. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT; compare\\<cdot>b\\<cdot>ba = EQ;\n        compare\\<cdot>c\\<cdot>ca = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 9. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>b\\<cdot>ba = EQ; compare\\<cdot>c\\<cdot>ca = LT;\n        compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)", "apply (fast elim!: compare_LT_trans)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = LT; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 2. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = LT; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 3. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>aa\\<cdot>ab = LT; compare\\<cdot>a\\<cdot>aa = EQ;\n        compare\\<cdot>b\\<cdot>ba = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 4. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>aa\\<cdot>ab = LT; compare\\<cdot>a\\<cdot>aa = EQ;\n        compare\\<cdot>b\\<cdot>ba = EQ;\n        compare\\<cdot>c\\<cdot>ca = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 5. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>b\\<cdot>ba = LT;\n        compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 6. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>b\\<cdot>ba = LT;\n        compare\\<cdot>aa\\<cdot>ab = EQ; compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 7. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT; compare\\<cdot>b\\<cdot>ba = EQ;\n        compare\\<cdot>c\\<cdot>ca = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 8. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>b\\<cdot>ba = EQ; compare\\<cdot>c\\<cdot>ca = LT;\n        compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)", "apply (fast dest: compare_EQ_dest)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = LT; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 2. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>aa\\<cdot>ab = LT; compare\\<cdot>a\\<cdot>aa = EQ;\n        compare\\<cdot>b\\<cdot>ba = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 3. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>aa\\<cdot>ab = LT; compare\\<cdot>a\\<cdot>aa = EQ;\n        compare\\<cdot>b\\<cdot>ba = EQ;\n        compare\\<cdot>c\\<cdot>ca = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 4. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>b\\<cdot>ba = LT;\n        compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 5. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>b\\<cdot>ba = LT;\n        compare\\<cdot>aa\\<cdot>ab = EQ; compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 6. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT; compare\\<cdot>b\\<cdot>ba = EQ;\n        compare\\<cdot>c\\<cdot>ca = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 7. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>b\\<cdot>ba = EQ; compare\\<cdot>c\\<cdot>ca = LT;\n        compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)", "apply (fast dest: compare_EQ_dest)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>aa\\<cdot>ab = LT; compare\\<cdot>a\\<cdot>aa = EQ;\n        compare\\<cdot>b\\<cdot>ba = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 2. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>aa\\<cdot>ab = LT; compare\\<cdot>a\\<cdot>aa = EQ;\n        compare\\<cdot>b\\<cdot>ba = EQ;\n        compare\\<cdot>c\\<cdot>ca = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 3. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>b\\<cdot>ba = LT;\n        compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 4. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>b\\<cdot>ba = LT;\n        compare\\<cdot>aa\\<cdot>ab = EQ; compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 5. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT; compare\\<cdot>b\\<cdot>ba = EQ;\n        compare\\<cdot>c\\<cdot>ca = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 6. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>b\\<cdot>ba = EQ; compare\\<cdot>c\\<cdot>ca = LT;\n        compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)", "apply (fast dest: compare_EQ_dest)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>aa\\<cdot>ab = LT; compare\\<cdot>a\\<cdot>aa = EQ;\n        compare\\<cdot>b\\<cdot>ba = EQ;\n        compare\\<cdot>c\\<cdot>ca = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 2. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>b\\<cdot>ba = LT;\n        compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 3. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>b\\<cdot>ba = LT;\n        compare\\<cdot>aa\\<cdot>ab = EQ; compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 4. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT; compare\\<cdot>b\\<cdot>ba = EQ;\n        compare\\<cdot>c\\<cdot>ca = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 5. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>b\\<cdot>ba = EQ; compare\\<cdot>c\\<cdot>ca = LT;\n        compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)", "apply (fast dest: compare_EQ_dest)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>b\\<cdot>ba = LT;\n        compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 2. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>b\\<cdot>ba = LT;\n        compare\\<cdot>aa\\<cdot>ab = EQ; compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 3. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT; compare\\<cdot>b\\<cdot>ba = EQ;\n        compare\\<cdot>c\\<cdot>ca = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 4. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>b\\<cdot>ba = EQ; compare\\<cdot>c\\<cdot>ca = LT;\n        compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)", "apply (drule compare_EQ_dest)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>b\\<cdot>ba = LT; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT; a = aa\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 2. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>b\\<cdot>ba = LT;\n        compare\\<cdot>aa\\<cdot>ab = EQ; compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 3. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT; compare\\<cdot>b\\<cdot>ba = EQ;\n        compare\\<cdot>c\\<cdot>ca = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 4. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>b\\<cdot>ba = EQ; compare\\<cdot>c\\<cdot>ca = LT;\n        compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)", "apply (fast elim!: compare_LT_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>b\\<cdot>ba = LT;\n        compare\\<cdot>aa\\<cdot>ab = EQ; compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 2. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT; compare\\<cdot>b\\<cdot>ba = EQ;\n        compare\\<cdot>c\\<cdot>ca = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 3. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>b\\<cdot>ba = EQ; compare\\<cdot>c\\<cdot>ca = LT;\n        compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)", "apply (fast dest: compare_EQ_dest)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>ba\\<cdot>bb = LT; compare\\<cdot>b\\<cdot>ba = EQ;\n        compare\\<cdot>c\\<cdot>ca = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)\n 2. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>b\\<cdot>ba = EQ; compare\\<cdot>c\\<cdot>ca = LT;\n        compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)", "apply (fast dest: compare_EQ_dest)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c aa ba ca ab bb cb.\n       \\<lbrakk>x = \\<langle>a, b, c\\<rangle>;\n        y = \\<langle>aa, ba, ca\\<rangle>; z = \\<langle>ab, bb, cb\\<rangle>;\n        compare\\<cdot>a\\<cdot>aa = EQ; compare\\<cdot>aa\\<cdot>ab = EQ;\n        compare\\<cdot>b\\<cdot>ba = EQ; compare\\<cdot>c\\<cdot>ca = LT;\n        compare\\<cdot>ba\\<cdot>bb = EQ;\n        compare\\<cdot>ca\\<cdot>cb = LT\\<rbrakk>\n       \\<Longrightarrow> compare\\<cdot>a\\<cdot>ab = LT \\<or>\n                         compare\\<cdot>a\\<cdot>ab = EQ \\<and>\n                         (compare\\<cdot>b\\<cdot>bb = LT \\<or>\n                          compare\\<cdot>b\\<cdot>bb = EQ \\<and>\n                          compare\\<cdot>c\\<cdot>cb = LT)", "apply (fast dest: compare_EQ_dest elim!: compare_LT_trans)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  compare\\<cdot>x\\<cdot>z = LT\n\ngoal (1 subgoal):\n 1. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ", "}"], ["proof (state)\nthis:\n  \\<lbrakk>compare\\<cdot>x\\<cdot>y = LT;\n   compare\\<cdot>y\\<cdot>z = LT\\<rbrakk>\n  \\<Longrightarrow> compare\\<cdot>x\\<cdot>z = LT\n\ngoal (1 subgoal):\n 1. \\<And>x. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ", "show \"compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ", "by (cases x, simp_all)"], ["proof (state)\nthis:\n  compare\\<cdot>x\\<cdot>x \\<sqsubseteq> EQ\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}