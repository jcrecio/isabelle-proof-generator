{"file_name": "/home/qj213/afp-2021-10-22/thys/Virtual_Substitution/DNFUni.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Virtual_Substitution", "problem_names": ["lemma eval_DNFUni : \"evalUni F x = evalUni (list_disj_Uni(map (list_conj_Uni o (map AtomUni)) (DNFUni F))) x\""], "translations": [["", "lemma eval_DNFUni : \"evalUni F x = evalUni (list_disj_Uni(map (list_conj_Uni o (map AtomUni)) (DNFUni F))) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. evalUni F x =\n    evalUni\n     (list_disj_Uni (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F))) x", "proof(induction F)"], ["proof (state)\ngoal (5 subgoals):\n 1. evalUni TrueFUni x =\n    evalUni\n     (list_disj_Uni\n       (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni TrueFUni)))\n     x\n 2. evalUni FalseFUni x =\n    evalUni\n     (list_disj_Uni\n       (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni FalseFUni)))\n     x\n 3. \\<And>xa.\n       evalUni (AtomUni xa) x =\n       evalUni\n        (list_disj_Uni\n          (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni (AtomUni xa))))\n        x\n 4. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (AndUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (AndUni F1 F2))))\n                          x\n 5. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (OrUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (OrUni F1 F2))))\n                          x", "case TrueFUni"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. evalUni TrueFUni x =\n    evalUni\n     (list_disj_Uni\n       (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni TrueFUni)))\n     x\n 2. evalUni FalseFUni x =\n    evalUni\n     (list_disj_Uni\n       (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni FalseFUni)))\n     x\n 3. \\<And>xa.\n       evalUni (AtomUni xa) x =\n       evalUni\n        (list_disj_Uni\n          (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni (AtomUni xa))))\n        x\n 4. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (AndUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (AndUni F1 F2))))\n                          x\n 5. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (OrUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (OrUni F1 F2))))\n                          x", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. evalUni TrueFUni x =\n    evalUni\n     (list_disj_Uni\n       (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni TrueFUni)))\n     x", "by auto"], ["proof (state)\nthis:\n  evalUni TrueFUni x =\n  evalUni\n   (list_disj_Uni\n     (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni TrueFUni)))\n   x\n\ngoal (4 subgoals):\n 1. evalUni FalseFUni x =\n    evalUni\n     (list_disj_Uni\n       (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni FalseFUni)))\n     x\n 2. \\<And>xa.\n       evalUni (AtomUni xa) x =\n       evalUni\n        (list_disj_Uni\n          (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni (AtomUni xa))))\n        x\n 3. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (AndUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (AndUni F1 F2))))\n                          x\n 4. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (OrUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (OrUni F1 F2))))\n                          x", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. evalUni FalseFUni x =\n    evalUni\n     (list_disj_Uni\n       (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni FalseFUni)))\n     x\n 2. \\<And>xa.\n       evalUni (AtomUni xa) x =\n       evalUni\n        (list_disj_Uni\n          (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni (AtomUni xa))))\n        x\n 3. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (AndUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (AndUni F1 F2))))\n                          x\n 4. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (OrUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (OrUni F1 F2))))\n                          x", "case FalseFUni"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. evalUni FalseFUni x =\n    evalUni\n     (list_disj_Uni\n       (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni FalseFUni)))\n     x\n 2. \\<And>xa.\n       evalUni (AtomUni xa) x =\n       evalUni\n        (list_disj_Uni\n          (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni (AtomUni xa))))\n        x\n 3. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (AndUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (AndUni F1 F2))))\n                          x\n 4. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (OrUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (OrUni F1 F2))))\n                          x", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. evalUni FalseFUni x =\n    evalUni\n     (list_disj_Uni\n       (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni FalseFUni)))\n     x", "by auto"], ["proof (state)\nthis:\n  evalUni FalseFUni x =\n  evalUni\n   (list_disj_Uni\n     (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni FalseFUni)))\n   x\n\ngoal (3 subgoals):\n 1. \\<And>xa.\n       evalUni (AtomUni xa) x =\n       evalUni\n        (list_disj_Uni\n          (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni (AtomUni xa))))\n        x\n 2. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (AndUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (AndUni F1 F2))))\n                          x\n 3. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (OrUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (OrUni F1 F2))))\n                          x", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       evalUni (AtomUni xa) x =\n       evalUni\n        (list_disj_Uni\n          (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni (AtomUni xa))))\n        x\n 2. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (AndUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (AndUni F1 F2))))\n                          x\n 3. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (OrUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (OrUni F1 F2))))\n                          x", "case (AtomUni x)"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<And>xa.\n       evalUni (AtomUni xa) x =\n       evalUni\n        (list_disj_Uni\n          (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni (AtomUni xa))))\n        x\n 2. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (AndUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (AndUni F1 F2))))\n                          x\n 3. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (OrUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (OrUni F1 F2))))\n                          x", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. evalUni (AtomUni x) x =\n    evalUni\n     (list_disj_Uni\n       (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni (AtomUni x))))\n     x", "by auto"], ["proof (state)\nthis:\n  evalUni (AtomUni x) x =\n  evalUni\n   (list_disj_Uni\n     (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni (AtomUni x))))\n   x\n\ngoal (2 subgoals):\n 1. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (AndUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (AndUni F1 F2))))\n                          x\n 2. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (OrUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (OrUni F1 F2))))\n                          x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (AndUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (AndUni F1 F2))))\n                          x\n 2. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (OrUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (OrUni F1 F2))))\n                          x", "case (AndUni F1 F2)"], ["proof (state)\nthis:\n  evalUni F1 x =\n  evalUni\n   (list_disj_Uni (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1))) x\n  evalUni F2 x =\n  evalUni\n   (list_disj_Uni (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2))) x\n\ngoal (2 subgoals):\n 1. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (AndUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (AndUni F1 F2))))\n                          x\n 2. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (OrUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (OrUni F1 F2))))\n                          x", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. evalUni (AndUni F1 F2) x =\n    evalUni\n     (list_disj_Uni\n       (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni (AndUni F1 F2))))\n     x", "unfolding DNFUni.simps eval_list_disj_Uni evalUni.simps AndUni List.map_concat List.set_concat"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<exists>l\\<in>set (map (list_conj_Uni \\<circ> map AtomUni)\n                           (DNFUni F1)).\n         evalUni l x) \\<and>\n     (\\<exists>l\\<in>set (map (list_conj_Uni \\<circ> map AtomUni)\n                           (DNFUni F2)).\n         evalUni l x)) =\n    (\\<exists>l\\<in>\\<Union>\n                     (set `\n                      set (map (map (list_conj_Uni \\<circ> map AtomUni))\n                            (map (\\<lambda>A'. map ((@) A') (DNFUni F2))\n                              (DNFUni F1)))).\n        evalUni l x)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<exists>l\\<in>set (DNFUni F1).\n         evalUni (list_conj_Uni (map AtomUni l)) x) \\<and>\n     (\\<exists>l\\<in>set (DNFUni F2).\n         evalUni (list_conj_Uni (map AtomUni l)) x)) =\n    (\\<exists>y\\<in>set (DNFUni F1).\n        \\<exists>l\\<in>set (DNFUni F2).\n           evalUni (list_conj_Uni (map AtomUni y @ map AtomUni l)) x)", "unfolding eval_list_conj_Uni_append"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<exists>l\\<in>set (DNFUni F1).\n         evalUni (list_conj_Uni (map AtomUni l)) x) \\<and>\n     (\\<exists>l\\<in>set (DNFUni F2).\n         evalUni (list_conj_Uni (map AtomUni l)) x)) =\n    (\\<exists>y\\<in>set (DNFUni F1).\n        \\<exists>l\\<in>set (DNFUni F2).\n           evalUni (list_conj_Uni (map AtomUni y)) x \\<and>\n           evalUni (list_conj_Uni (map AtomUni l)) x)", "by blast"], ["proof (state)\nthis:\n  evalUni (AndUni F1 F2) x =\n  evalUni\n   (list_disj_Uni\n     (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni (AndUni F1 F2))))\n   x\n\ngoal (1 subgoal):\n 1. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (OrUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (OrUni F1 F2))))\n                          x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (OrUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (OrUni F1 F2))))\n                          x", "case (OrUni F1 F2)"], ["proof (state)\nthis:\n  evalUni F1 x =\n  evalUni\n   (list_disj_Uni (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1))) x\n  evalUni F2 x =\n  evalUni\n   (list_disj_Uni (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2))) x\n\ngoal (1 subgoal):\n 1. \\<And>F1 F2.\n       \\<lbrakk>evalUni F1 x =\n                evalUni\n                 (list_disj_Uni\n                   (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)))\n                 x;\n        evalUni F2 x =\n        evalUni\n         (list_disj_Uni\n           (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)))\n         x\\<rbrakk>\n       \\<Longrightarrow> evalUni (OrUni F1 F2) x =\n                         evalUni\n                          (list_disj_Uni\n                            (map (list_conj_Uni \\<circ> map AtomUni)\n                              (DNFUni (OrUni F1 F2))))\n                          x", "then"], ["proof (chain)\npicking this:\n  evalUni F1 x =\n  evalUni\n   (list_disj_Uni (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1))) x\n  evalUni F2 x =\n  evalUni\n   (list_disj_Uni (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2))) x", "show ?case"], ["proof (prove)\nusing this:\n  evalUni F1 x =\n  evalUni\n   (list_disj_Uni (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1))) x\n  evalUni F2 x =\n  evalUni\n   (list_disj_Uni (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2))) x\n\ngoal (1 subgoal):\n 1. evalUni (OrUni F1 F2) x =\n    evalUni\n     (list_disj_Uni\n       (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni (OrUni F1 F2))))\n     x", "unfolding DNFUni.simps List.map_append eval_list_disj_Uni List.set_append evalUni.simps"], ["proof (prove)\nusing this:\n  evalUni F1 x =\n  (\\<exists>l\\<in>set (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F1)).\n      evalUni l x)\n  evalUni F2 x =\n  (\\<exists>l\\<in>set (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni F2)).\n      evalUni l x)\n\ngoal (1 subgoal):\n 1. (evalUni F1 x \\<or> evalUni F2 x) =\n    (\\<exists>l\\<in>set (map (list_conj_Uni \\<circ> map AtomUni)\n                          (DNFUni F1)) \\<union>\n                    set (map (list_conj_Uni \\<circ> map AtomUni)\n                          (DNFUni F2)).\n        evalUni l x)", "by blast"], ["proof (state)\nthis:\n  evalUni (OrUni F1 F2) x =\n  evalUni\n   (list_disj_Uni\n     (map (list_conj_Uni \\<circ> map AtomUni) (DNFUni (OrUni F1 F2))))\n   x\n\ngoal:\nNo subgoals!", "qed"], ["", "fun elimVarUni_atom :: \"atomUni list \\<Rightarrow> atomUni \\<Rightarrow> atomUni fmUni\" where\n  \"elimVarUni_atom F (EqUni (a,b,c)) =\n(OrUni\n  (AndUni \n    (AndUni (AtomUni (EqUni (0,0,a))) (AtomUni (NeqUni (0,0,b))))\n      (list_conj_Uni (map (linearSubstitutionUni b c) F)))\n    (AndUni (AtomUni (NeqUni (0,0,a))) (AndUni (AtomUni(LeqUni (0,0,-(b^2)+4*a*c)))\n      (OrUni \n        (list_conj_Uni (map (quadraticSubUni (-b) 1 (b^2-4*a*c) (2*a)) F))\n        (list_conj_Uni (map (quadraticSubUni (-b) (-1) (b^2-4*a*c) (2*a)) F))\n      )\n    )\n  )\n)\n\" |\n  \"elimVarUni_atom F (LeqUni (a,b,c)) =\n(OrUni\n  (AndUni \n    (AndUni (AtomUni (EqUni (0,0,a))) (AtomUni (NeqUni (0,0,b))))\n      (list_conj_Uni (map (linearSubstitutionUni b c) F)))\n    (AndUni (AtomUni (NeqUni (0,0,a))) (AndUni (AtomUni(LeqUni (0,0,-(b^2)+4*a*c)))\n      (OrUni \n        (list_conj_Uni (map (quadraticSubUni (-b) 1 (b^2-4*a*c) (2*a)) F))\n        (list_conj_Uni (map (quadraticSubUni (-b) (-1) (b^2-4*a*c) (2*a)) F))\n      )\n    )\n  )\n)\n\" |\n  \"elimVarUni_atom F (LessUni (a,b,c)) =\n(OrUni\n  (AndUni \n    (AndUni (AtomUni (EqUni (0,0,a))) (AtomUni (NeqUni (0,0,b))))\n      (list_conj_Uni (map (substInfinitesimalLinearUni b c) F)))\n    (AndUni (AtomUni (NeqUni (0,0,a))) (AndUni (AtomUni(LeqUni (0,0,-(b^2)+4*a*c)))\n      (OrUni \n        (list_conj_Uni (map(substInfinitesimalQuadraticUni (-b) 1 (b^2-4*a*c) (2*a)) F))\n        (list_conj_Uni (map(substInfinitesimalQuadraticUni (-b) (-1) (b^2-4*a*c) (2*a)) F))\n      )\n    )\n  )\n)\n\"|\n  \"elimVarUni_atom F (NeqUni (a,b,c)) =\n(OrUni\n  (AndUni \n    (AndUni (AtomUni (EqUni (0,0,a))) (AtomUni (NeqUni (0,0,b))))\n      (list_conj_Uni (map (substInfinitesimalLinearUni b c) F)))\n    (AndUni (AtomUni (NeqUni (0,0,a))) (AndUni (AtomUni(LeqUni (0,0,-(b^2)+4*a*c)))\n      (OrUni \n        (list_conj_Uni (map(substInfinitesimalQuadraticUni (-b) 1 (b^2-4*a*c) (2*a)) F))\n        (list_conj_Uni (map(substInfinitesimalQuadraticUni (-b) (-1) (b^2-4*a*c) (2*a)) F))\n      )\n    )\n  )\n)\n\""], ["", "fun generalVS_DNF :: \"atomUni list \\<Rightarrow> atomUni fmUni\" where\n  \"generalVS_DNF L  = list_disj_Uni (list_conj_Uni(map substNegInfinityUni L) # (map (\\<lambda>A. elimVarUni_atom L A) L))\""], ["", "end"]]}