{"file_name": "/home/qj213/afp-2021-10-22/thys/Buchi_Complementation/Alternate.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Buchi_Complementation", "problem_names": ["lemma alternate_Suc[simp]: \"alternate f g (Suc k) = (if even k then f else g) \\<circ> alternate f g k\"", "lemma alternate_antimono:\n    assumes \"\\<And> x. f x \\<le> x\" \"\\<And> x. g x \\<le> x\"\n    shows \"antimono (alternate f g)\""], "translations": [["", "lemma alternate_Suc[simp]: \"alternate f g (Suc k) = (if even k then f else g) \\<circ> alternate f g k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alternate f g (Suc k) =\n    (if even k then f else g) \\<circ> alternate f g k", "proof (induct k arbitrary: f g)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f g.\n       alternate f g (Suc 0) =\n       (if even 0 then f else g) \\<circ> alternate f g 0\n 2. \\<And>k f g.\n       (\\<And>f g.\n           alternate f g (Suc k) =\n           (if even k then f else g) \\<circ>\n           alternate f g k) \\<Longrightarrow>\n       alternate f g (Suc (Suc k)) =\n       (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "case (0)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>f g.\n       alternate f g (Suc 0) =\n       (if even 0 then f else g) \\<circ> alternate f g 0\n 2. \\<And>k f g.\n       (\\<And>f g.\n           alternate f g (Suc k) =\n           (if even k then f else g) \\<circ>\n           alternate f g k) \\<Longrightarrow>\n       alternate f g (Suc (Suc k)) =\n       (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. alternate f g (Suc 0) =\n    (if even 0 then f else g) \\<circ> alternate f g 0", "by simp"], ["proof (state)\nthis:\n  alternate f g (Suc 0) = (if even 0 then f else g) \\<circ> alternate f g 0\n\ngoal (1 subgoal):\n 1. \\<And>k f g.\n       (\\<And>f g.\n           alternate f g (Suc k) =\n           (if even k then f else g) \\<circ>\n           alternate f g k) \\<Longrightarrow>\n       alternate f g (Suc (Suc k)) =\n       (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k f g.\n       (\\<And>f g.\n           alternate f g (Suc k) =\n           (if even k then f else g) \\<circ>\n           alternate f g k) \\<Longrightarrow>\n       alternate f g (Suc (Suc k)) =\n       (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "case (Suc k)"], ["proof (state)\nthis:\n  alternate ?f ?g (Suc k) =\n  (if even k then ?f else ?g) \\<circ> alternate ?f ?g k\n\ngoal (1 subgoal):\n 1. \\<And>k f g.\n       (\\<And>f g.\n           alternate f g (Suc k) =\n           (if even k then f else g) \\<circ>\n           alternate f g k) \\<Longrightarrow>\n       alternate f g (Suc (Suc k)) =\n       (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "have \"alternate f g (Suc (Suc k)) = alternate g f (Suc k) \\<circ> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alternate f g (Suc (Suc k)) = alternate g f (Suc k) \\<circ> f", "by auto"], ["proof (state)\nthis:\n  alternate f g (Suc (Suc k)) = alternate g f (Suc k) \\<circ> f\n\ngoal (1 subgoal):\n 1. \\<And>k f g.\n       (\\<And>f g.\n           alternate f g (Suc k) =\n           (if even k then f else g) \\<circ>\n           alternate f g k) \\<Longrightarrow>\n       alternate f g (Suc (Suc k)) =\n       (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "also"], ["proof (state)\nthis:\n  alternate f g (Suc (Suc k)) = alternate g f (Suc k) \\<circ> f\n\ngoal (1 subgoal):\n 1. \\<And>k f g.\n       (\\<And>f g.\n           alternate f g (Suc k) =\n           (if even k then f else g) \\<circ>\n           alternate f g k) \\<Longrightarrow>\n       alternate f g (Suc (Suc k)) =\n       (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "have \"\\<dots> = (if even k then g else f) \\<circ> (alternate g f k \\<circ> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alternate g f (Suc k) \\<circ> f =\n    (if even k then g else f) \\<circ> (alternate g f k \\<circ> f)", "unfolding Suc"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if even k then g else f) \\<circ> alternate g f k \\<circ> f =\n    (if even k then g else f) \\<circ> (alternate g f k \\<circ> f)", "by auto"], ["proof (state)\nthis:\n  alternate g f (Suc k) \\<circ> f =\n  (if even k then g else f) \\<circ> (alternate g f k \\<circ> f)\n\ngoal (1 subgoal):\n 1. \\<And>k f g.\n       (\\<And>f g.\n           alternate f g (Suc k) =\n           (if even k then f else g) \\<circ>\n           alternate f g k) \\<Longrightarrow>\n       alternate f g (Suc (Suc k)) =\n       (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "also"], ["proof (state)\nthis:\n  alternate g f (Suc k) \\<circ> f =\n  (if even k then g else f) \\<circ> (alternate g f k \\<circ> f)\n\ngoal (1 subgoal):\n 1. \\<And>k f g.\n       (\\<And>f g.\n           alternate f g (Suc k) =\n           (if even k then f else g) \\<circ>\n           alternate f g k) \\<Longrightarrow>\n       alternate f g (Suc (Suc k)) =\n       (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "have \"\\<dots> = (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if even k then g else f) \\<circ> (alternate g f k \\<circ> f) =\n    (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "by auto"], ["proof (state)\nthis:\n  (if even k then g else f) \\<circ> (alternate g f k \\<circ> f) =\n  (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>k f g.\n       (\\<And>f g.\n           alternate f g (Suc k) =\n           (if even k then f else g) \\<circ>\n           alternate f g k) \\<Longrightarrow>\n       alternate f g (Suc (Suc k)) =\n       (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "finally"], ["proof (chain)\npicking this:\n  alternate f g (Suc (Suc k)) =\n  (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "show ?case"], ["proof (prove)\nusing this:\n  alternate f g (Suc (Suc k)) =\n  (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)\n\ngoal (1 subgoal):\n 1. alternate f g (Suc (Suc k)) =\n    (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "by this"], ["proof (state)\nthis:\n  alternate f g (Suc (Suc k)) =\n  (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["", "declare alternate.simps(2)[simp del]"], ["", "lemma alternate_antimono:\n    assumes \"\\<And> x. f x \\<le> x\" \"\\<And> x. g x \\<le> x\"\n    shows \"antimono (alternate f g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. antimono (alternate f g)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x \\<le> y \\<Longrightarrow> alternate f g y \\<le> alternate f g x", "fix k l :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x \\<le> y \\<Longrightarrow> alternate f g y \\<le> alternate f g x", "assume 1: \"k \\<le> l\""], ["proof (state)\nthis:\n  k \\<le> l\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x \\<le> y \\<Longrightarrow> alternate f g y \\<le> alternate f g x", "obtain n where 2: \"l = k + n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n. l = k + n \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using le_Suc_ex 1"], ["proof (prove)\nusing this:\n  ?k \\<le> ?l \\<Longrightarrow> \\<exists>n. ?l = ?k + n\n  k \\<le> l\n\ngoal (1 subgoal):\n 1. (\\<And>n. l = k + n \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  l = k + n\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x \\<le> y \\<Longrightarrow> alternate f g y \\<le> alternate f g x", "have 3: \"alternate f g (k + n) \\<le> alternate f g k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alternate f g (k + n) \\<le> alternate f g k", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. alternate f g (k + 0) \\<le> alternate f g k\n 2. \\<And>n.\n       alternate f g (k + n) \\<le> alternate f g k \\<Longrightarrow>\n       alternate f g (k + Suc n) \\<le> alternate f g k", "case (0)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. alternate f g (k + 0) \\<le> alternate f g k\n 2. \\<And>n.\n       alternate f g (k + n) \\<le> alternate f g k \\<Longrightarrow>\n       alternate f g (k + Suc n) \\<le> alternate f g k", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. alternate f g (k + 0) \\<le> alternate f g k", "by simp"], ["proof (state)\nthis:\n  alternate f g (k + 0) \\<le> alternate f g k\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       alternate f g (k + n) \\<le> alternate f g k \\<Longrightarrow>\n       alternate f g (k + Suc n) \\<le> alternate f g k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       alternate f g (k + n) \\<le> alternate f g k \\<Longrightarrow>\n       alternate f g (k + Suc n) \\<le> alternate f g k", "case (Suc n)"], ["proof (state)\nthis:\n  alternate f g (k + n) \\<le> alternate f g k\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       alternate f g (k + n) \\<le> alternate f g k \\<Longrightarrow>\n       alternate f g (k + Suc n) \\<le> alternate f g k", "have \"alternate f g (k + Suc n) \\<le> alternate f g (k + n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alternate f g (k + Suc n) \\<le> alternate f g (k + n)", "using assms"], ["proof (prove)\nusing this:\n  f ?x \\<le> ?x\n  g ?x \\<le> ?x\n\ngoal (1 subgoal):\n 1. alternate f g (k + Suc n) \\<le> alternate f g (k + n)", "by (auto intro: le_funI)"], ["proof (state)\nthis:\n  alternate f g (k + Suc n) \\<le> alternate f g (k + n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       alternate f g (k + n) \\<le> alternate f g k \\<Longrightarrow>\n       alternate f g (k + Suc n) \\<le> alternate f g k", "also"], ["proof (state)\nthis:\n  alternate f g (k + Suc n) \\<le> alternate f g (k + n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       alternate f g (k + n) \\<le> alternate f g k \\<Longrightarrow>\n       alternate f g (k + Suc n) \\<le> alternate f g k", "have \"\\<dots> \\<le> alternate f g k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alternate f g (k + n) \\<le> alternate f g k", "using Suc"], ["proof (prove)\nusing this:\n  alternate f g (k + n) \\<le> alternate f g k\n\ngoal (1 subgoal):\n 1. alternate f g (k + n) \\<le> alternate f g k", "by this"], ["proof (state)\nthis:\n  alternate f g (k + n) \\<le> alternate f g k\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       alternate f g (k + n) \\<le> alternate f g k \\<Longrightarrow>\n       alternate f g (k + Suc n) \\<le> alternate f g k", "finally"], ["proof (chain)\npicking this:\n  alternate f g (k + Suc n) \\<le> alternate f g k", "show ?case"], ["proof (prove)\nusing this:\n  alternate f g (k + Suc n) \\<le> alternate f g k\n\ngoal (1 subgoal):\n 1. alternate f g (k + Suc n) \\<le> alternate f g k", "by this"], ["proof (state)\nthis:\n  alternate f g (k + Suc n) \\<le> alternate f g k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  alternate f g (k + n) \\<le> alternate f g k\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x \\<le> y \\<Longrightarrow> alternate f g y \\<le> alternate f g x", "show \"alternate f g l \\<le> alternate f g k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alternate f g l \\<le> alternate f g k", "using 3"], ["proof (prove)\nusing this:\n  alternate f g (k + n) \\<le> alternate f g k\n\ngoal (1 subgoal):\n 1. alternate f g l \\<le> alternate f g k", "unfolding 2"], ["proof (prove)\nusing this:\n  alternate f g (k + n) \\<le> alternate f g k\n\ngoal (1 subgoal):\n 1. alternate f g (k + n) \\<le> alternate f g k", "by this"], ["proof (state)\nthis:\n  alternate f g l \\<le> alternate f g k\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}