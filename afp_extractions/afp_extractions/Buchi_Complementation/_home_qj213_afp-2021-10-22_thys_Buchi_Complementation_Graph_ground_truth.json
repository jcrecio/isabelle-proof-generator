{"file_name": "/home/qj213/afp-2021-10-22/thys/Buchi_Complementation/Graph.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Buchi_Complementation", "problem_names": ["lemma gtarget_alt_def: \"gtarget r v = last (v # r)\"", "lemma gstates_alt_def: \"gstates r v = r\"", "lemma gtrace_alt_def: \"gtrace r v = r\"", "lemma gpath_elim[elim?]:\n    assumes \"gpath A w V s v\"\n    obtains r k p\n    where \"s = [Suc k ..< Suc k + length r] || r\" \"v = (k, p)\"", "lemma gpath_path[symmetric]: \"path A (stake (length r) (sdrop k w) || r) p \\<longleftrightarrow>\n    gpath A w UNIV ([Suc k ..< Suc k + length r] || r) (k, p)\"", "lemma grun_elim[elim?]:\n    assumes \"grun A w V s v\"\n    obtains r k p\n    where \"s = fromN (Suc k) ||| r\" \"v = (k, p)\"", "lemma run_grun:\n    assumes \"run A (sdrop k w ||| r) p\"\n    shows \"gurun A w (fromN (Suc k) ||| r) (k, p)\"", "lemma grun_run:\n    assumes \"grun A w V (fromN (Suc k) ||| r) (k, p)\"\n    shows \"run A (sdrop k w ||| r) p\"", "lemma greachable_reachable:\n    fixes l q k p\n    defines \"u \\<equiv> (l, q)\"\n    defines \"v \\<equiv> (k, p)\"\n    assumes \"u \\<in> greachable A w V v\"\n    shows \"q \\<in> reachable A p\"", "lemma gnodes_nodes: \"gnodes A w V \\<subseteq> UNIV \\<times> nodes A\"", "lemma gpath_subset:\n    assumes \"gpath A w V r v\"\n    assumes \"set (gstates r v) \\<subseteq> U\"\n    shows \"gpath A w U r v\"", "lemma grun_subset:\n    assumes \"grun A w V r v\"\n    assumes \"sset (gtrace r v) \\<subseteq> U\"\n    shows \"grun A w U r v\"", "lemma greachable_subset: \"greachable A w V v \\<subseteq> insert v V\"", "lemma gtrace_infinite:\n    assumes \"grun A w V r v\"\n    shows \"infinite (sset (gtrace r v))\"", "lemma infinite_greachable_gtrace:\n    assumes \"grun A w V r v\"\n    assumes \"u \\<in> sset (gtrace r v)\"\n    shows \"infinite (greachable A w V u)\"", "lemma finite_nodes_gsuccessors:\n    assumes \"finite (nodes A)\"\n    assumes \"v \\<in> gunodes A w\"\n    shows \"finite (gusuccessors A w v)\""], "translations": [["", "lemma gtarget_alt_def: \"gtarget r v = last (v # r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gtarget r v = last (v # r)", "using fold_const"], ["proof (prove)\nusing this:\n  fold (\\<lambda>x _. x) ?xs ?a = last (?a # ?xs)\n\ngoal (1 subgoal):\n 1. gtarget r v = last (v # r)", "by this"], ["", "lemma gstates_alt_def: \"gstates r v = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gstates r v = r", "by simp"], ["", "lemma gtrace_alt_def: \"gtrace r v = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gtrace r v = r", "by simp"], ["", "lemma gpath_elim[elim?]:\n    assumes \"gpath A w V s v\"\n    obtains r k p\n    where \"s = [Suc k ..< Suc k + length r] || r\" \"v = (k, p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k r p.\n        \\<lbrakk>s = [Suc k..<Suc k + length r] || r; v = (k, p)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k r p.\n        \\<lbrakk>s = [Suc k..<Suc k + length r] || r; v = (k, p)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain t r where 1: \"s = t || r\" \"length t = length r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t r.\n        \\<lbrakk>s = t || r; length t = length r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using zip_map_fst_snd[of s]"], ["proof (prove)\nusing this:\n  map fst s || map snd s = s\n\ngoal (1 subgoal):\n 1. (\\<And>t r.\n        \\<lbrakk>s = t || r; length t = length r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis length_map)"], ["proof (state)\nthis:\n  s = t || r\n  length t = length r\n\ngoal (1 subgoal):\n 1. (\\<And>k r p.\n        \\<lbrakk>s = [Suc k..<Suc k + length r] || r; v = (k, p)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain k p where 2: \"v = (k, p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k p. v = (k, p) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  v = (k, p)\n\ngoal (1 subgoal):\n 1. (\\<And>k r p.\n        \\<lbrakk>s = [Suc k..<Suc k + length r] || r; v = (k, p)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 3: \"t = [Suc k ..< Suc k + length r]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t = [Suc k..<Suc k + length r]", "using assms 1 2"], ["proof (prove)\nusing this:\n  gpath A w V s v\n  s = t || r\n  length t = length r\n  v = (k, p)\n\ngoal (1 subgoal):\n 1. t = [Suc k..<Suc k + length r]", "proof (induct arbitrary: t r k p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p t r k pa.\n       \\<lbrakk>[] = t || r; length t = length r; p = (k, pa)\\<rbrakk>\n       \\<Longrightarrow> t = [Suc k..<Suc k + length r]\n 2. \\<And>a p r t ra k pa.\n       \\<lbrakk>case p of\n                (k, p) \\<Rightarrow>\n                  w !! k \\<in> alphabet A \\<and>\n                  a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                          V;\n        gpath A w V r a;\n        \\<And>t ra k p.\n           \\<lbrakk>r = t || ra; length t = length ra; a = (k, p)\\<rbrakk>\n           \\<Longrightarrow> t = [Suc k..<Suc k + length ra];\n        a # r = t || ra; length t = length ra; p = (k, pa)\\<rbrakk>\n       \\<Longrightarrow> t = [Suc k..<Suc k + length ra]", "case (nil v)"], ["proof (state)\nthis:\n  [] = t || r\n  length t = length r\n  v = (k, p)\n\ngoal (2 subgoals):\n 1. \\<And>p t r k pa.\n       \\<lbrakk>[] = t || r; length t = length r; p = (k, pa)\\<rbrakk>\n       \\<Longrightarrow> t = [Suc k..<Suc k + length r]\n 2. \\<And>a p r t ra k pa.\n       \\<lbrakk>case p of\n                (k, p) \\<Rightarrow>\n                  w !! k \\<in> alphabet A \\<and>\n                  a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                          V;\n        gpath A w V r a;\n        \\<And>t ra k p.\n           \\<lbrakk>r = t || ra; length t = length ra; a = (k, p)\\<rbrakk>\n           \\<Longrightarrow> t = [Suc k..<Suc k + length ra];\n        a # r = t || ra; length t = length ra; p = (k, pa)\\<rbrakk>\n       \\<Longrightarrow> t = [Suc k..<Suc k + length ra]", "then"], ["proof (chain)\npicking this:\n  [] = t || r\n  length t = length r\n  v = (k, p)", "show ?case"], ["proof (prove)\nusing this:\n  [] = t || r\n  length t = length r\n  v = (k, p)\n\ngoal (1 subgoal):\n 1. t = [Suc k..<Suc k + length r]", "by (metis add_0_right le_add1 length_0_conv length_zip min.idem upt_conv_Nil)"], ["proof (state)\nthis:\n  t = [Suc k..<Suc k + length r]\n\ngoal (1 subgoal):\n 1. \\<And>a p r t ra k pa.\n       \\<lbrakk>case p of\n                (k, p) \\<Rightarrow>\n                  w !! k \\<in> alphabet A \\<and>\n                  a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                          V;\n        gpath A w V r a;\n        \\<And>t ra k p.\n           \\<lbrakk>r = t || ra; length t = length ra; a = (k, p)\\<rbrakk>\n           \\<Longrightarrow> t = [Suc k..<Suc k + length ra];\n        a # r = t || ra; length t = length ra; p = (k, pa)\\<rbrakk>\n       \\<Longrightarrow> t = [Suc k..<Suc k + length ra]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a p r t ra k pa.\n       \\<lbrakk>case p of\n                (k, p) \\<Rightarrow>\n                  w !! k \\<in> alphabet A \\<and>\n                  a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                          V;\n        gpath A w V r a;\n        \\<And>t ra k p.\n           \\<lbrakk>r = t || ra; length t = length ra; a = (k, p)\\<rbrakk>\n           \\<Longrightarrow> t = [Suc k..<Suc k + length ra];\n        a # r = t || ra; length t = length ra; p = (k, pa)\\<rbrakk>\n       \\<Longrightarrow> t = [Suc k..<Suc k + length ra]", "case (cons u v s)"], ["proof (state)\nthis:\n  case v of\n  (k, p) \\<Rightarrow>\n    w !! k \\<in> alphabet A \\<and>\n    u \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> V\n  gpath A w V s u\n  \\<lbrakk>s = ?t || ?r; length ?t = length ?r; u = (?k, ?p)\\<rbrakk>\n  \\<Longrightarrow> ?t = [Suc ?k..<Suc ?k + length ?r]\n  u # s = t || r\n  length t = length r\n  v = (k, p)\n\ngoal (1 subgoal):\n 1. \\<And>a p r t ra k pa.\n       \\<lbrakk>case p of\n                (k, p) \\<Rightarrow>\n                  w !! k \\<in> alphabet A \\<and>\n                  a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                          V;\n        gpath A w V r a;\n        \\<And>t ra k p.\n           \\<lbrakk>r = t || ra; length t = length ra; a = (k, p)\\<rbrakk>\n           \\<Longrightarrow> t = [Suc k..<Suc k + length ra];\n        a # r = t || ra; length t = length ra; p = (k, pa)\\<rbrakk>\n       \\<Longrightarrow> t = [Suc k..<Suc k + length ra]", "have 1: \"t || r = (hd t, hd r) # (tl t || tl r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t || r = (hd t, hd r) # (tl t || tl r)", "by (metis cons.prems(1) hd_Cons_tl neq_Nil_conv zip.simps(1) zip_Cons_Cons zip_Nil)"], ["proof (state)\nthis:\n  t || r = (hd t, hd r) # (tl t || tl r)\n\ngoal (1 subgoal):\n 1. \\<And>a p r t ra k pa.\n       \\<lbrakk>case p of\n                (k, p) \\<Rightarrow>\n                  w !! k \\<in> alphabet A \\<and>\n                  a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                          V;\n        gpath A w V r a;\n        \\<And>t ra k p.\n           \\<lbrakk>r = t || ra; length t = length ra; a = (k, p)\\<rbrakk>\n           \\<Longrightarrow> t = [Suc k..<Suc k + length ra];\n        a # r = t || ra; length t = length ra; p = (k, pa)\\<rbrakk>\n       \\<Longrightarrow> t = [Suc k..<Suc k + length ra]", "have 2: \"s = tl t || tl r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s = tl t || tl r", "using cons 1"], ["proof (prove)\nusing this:\n  case v of\n  (k, p) \\<Rightarrow>\n    w !! k \\<in> alphabet A \\<and>\n    u \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> V\n  gpath A w V s u\n  \\<lbrakk>s = ?t || ?r; length ?t = length ?r; u = (?k, ?p)\\<rbrakk>\n  \\<Longrightarrow> ?t = [Suc ?k..<Suc ?k + length ?r]\n  u # s = t || r\n  length t = length r\n  v = (k, p)\n  t || r = (hd t, hd r) # (tl t || tl r)\n\ngoal (1 subgoal):\n 1. s = tl t || tl r", "by simp"], ["proof (state)\nthis:\n  s = tl t || tl r\n\ngoal (1 subgoal):\n 1. \\<And>a p r t ra k pa.\n       \\<lbrakk>case p of\n                (k, p) \\<Rightarrow>\n                  w !! k \\<in> alphabet A \\<and>\n                  a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                          V;\n        gpath A w V r a;\n        \\<And>t ra k p.\n           \\<lbrakk>r = t || ra; length t = length ra; a = (k, p)\\<rbrakk>\n           \\<Longrightarrow> t = [Suc k..<Suc k + length ra];\n        a # r = t || ra; length t = length ra; p = (k, pa)\\<rbrakk>\n       \\<Longrightarrow> t = [Suc k..<Suc k + length ra]", "have \"t = hd t # tl t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t = hd t # tl t", "using cons(4)"], ["proof (prove)\nusing this:\n  u # s = t || r\n\ngoal (1 subgoal):\n 1. t = hd t # tl t", "by (metis hd_Cons_tl list.simps(3) zip_Nil)"], ["proof (state)\nthis:\n  t = hd t # tl t\n\ngoal (1 subgoal):\n 1. \\<And>a p r t ra k pa.\n       \\<lbrakk>case p of\n                (k, p) \\<Rightarrow>\n                  w !! k \\<in> alphabet A \\<and>\n                  a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                          V;\n        gpath A w V r a;\n        \\<And>t ra k p.\n           \\<lbrakk>r = t || ra; length t = length ra; a = (k, p)\\<rbrakk>\n           \\<Longrightarrow> t = [Suc k..<Suc k + length ra];\n        a # r = t || ra; length t = length ra; p = (k, pa)\\<rbrakk>\n       \\<Longrightarrow> t = [Suc k..<Suc k + length ra]", "also"], ["proof (state)\nthis:\n  t = hd t # tl t\n\ngoal (1 subgoal):\n 1. \\<And>a p r t ra k pa.\n       \\<lbrakk>case p of\n                (k, p) \\<Rightarrow>\n                  w !! k \\<in> alphabet A \\<and>\n                  a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                          V;\n        gpath A w V r a;\n        \\<And>t ra k p.\n           \\<lbrakk>r = t || ra; length t = length ra; a = (k, p)\\<rbrakk>\n           \\<Longrightarrow> t = [Suc k..<Suc k + length ra];\n        a # r = t || ra; length t = length ra; p = (k, pa)\\<rbrakk>\n       \\<Longrightarrow> t = [Suc k..<Suc k + length ra]", "have \"hd t = Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd t = Suc k", "using \"1\" cons.hyps(1) cons.prems(1) cons.prems(3)"], ["proof (prove)\nusing this:\n  t || r = (hd t, hd r) # (tl t || tl r)\n  case v of\n  (k, p) \\<Rightarrow>\n    w !! k \\<in> alphabet A \\<and>\n    u \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> V\n  u # s = t || r\n  v = (k, p)\n\ngoal (1 subgoal):\n 1. hd t = Suc k", "by auto"], ["proof (state)\nthis:\n  hd t = Suc k\n\ngoal (1 subgoal):\n 1. \\<And>a p r t ra k pa.\n       \\<lbrakk>case p of\n                (k, p) \\<Rightarrow>\n                  w !! k \\<in> alphabet A \\<and>\n                  a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                          V;\n        gpath A w V r a;\n        \\<And>t ra k p.\n           \\<lbrakk>r = t || ra; length t = length ra; a = (k, p)\\<rbrakk>\n           \\<Longrightarrow> t = [Suc k..<Suc k + length ra];\n        a # r = t || ra; length t = length ra; p = (k, pa)\\<rbrakk>\n       \\<Longrightarrow> t = [Suc k..<Suc k + length ra]", "also"], ["proof (state)\nthis:\n  hd t = Suc k\n\ngoal (1 subgoal):\n 1. \\<And>a p r t ra k pa.\n       \\<lbrakk>case p of\n                (k, p) \\<Rightarrow>\n                  w !! k \\<in> alphabet A \\<and>\n                  a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                          V;\n        gpath A w V r a;\n        \\<And>t ra k p.\n           \\<lbrakk>r = t || ra; length t = length ra; a = (k, p)\\<rbrakk>\n           \\<Longrightarrow> t = [Suc k..<Suc k + length ra];\n        a # r = t || ra; length t = length ra; p = (k, pa)\\<rbrakk>\n       \\<Longrightarrow> t = [Suc k..<Suc k + length ra]", "have \"tl t = [Suc (Suc k) ..< Suc (Suc k) + length (tl r)]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tl t = [Suc (Suc k)..<Suc (Suc k) + length (tl r)]", "using cons(3)[OF 2]"], ["proof (prove)\nusing this:\n  \\<lbrakk>length (tl t) = length (tl r); u = (?k, ?p)\\<rbrakk>\n  \\<Longrightarrow> tl t = [Suc ?k..<Suc ?k + length (tl r)]\n\ngoal (1 subgoal):\n 1. tl t = [Suc (Suc k)..<Suc (Suc k) + length (tl r)]", "using \"1\" \\<open>hd t = Suc k\\<close> cons.prems(1) cons.prems(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>length (tl t) = length (tl r); u = (?k, ?p)\\<rbrakk>\n  \\<Longrightarrow> tl t = [Suc ?k..<Suc ?k + length (tl r)]\n  t || r = (hd t, hd r) # (tl t || tl r)\n  hd t = Suc k\n  u # s = t || r\n  length t = length r\n\ngoal (1 subgoal):\n 1. tl t = [Suc (Suc k)..<Suc (Suc k) + length (tl r)]", "by auto"], ["proof (state)\nthis:\n  tl t = [Suc (Suc k)..<Suc (Suc k) + length (tl r)]\n\ngoal (1 subgoal):\n 1. \\<And>a p r t ra k pa.\n       \\<lbrakk>case p of\n                (k, p) \\<Rightarrow>\n                  w !! k \\<in> alphabet A \\<and>\n                  a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                          V;\n        gpath A w V r a;\n        \\<And>t ra k p.\n           \\<lbrakk>r = t || ra; length t = length ra; a = (k, p)\\<rbrakk>\n           \\<Longrightarrow> t = [Suc k..<Suc k + length ra];\n        a # r = t || ra; length t = length ra; p = (k, pa)\\<rbrakk>\n       \\<Longrightarrow> t = [Suc k..<Suc k + length ra]", "finally"], ["proof (chain)\npicking this:\n  t = Suc k # [Suc (Suc k)..<Suc (Suc k) + length (tl r)]", "show ?case"], ["proof (prove)\nusing this:\n  t = Suc k # [Suc (Suc k)..<Suc (Suc k) + length (tl r)]\n\ngoal (1 subgoal):\n 1. t = [Suc k..<Suc k + length r]", "using cons.prems(2) upt_rec"], ["proof (prove)\nusing this:\n  t = Suc k # [Suc (Suc k)..<Suc (Suc k) + length (tl r)]\n  length t = length r\n  [?i..<?j] = (if ?i < ?j then ?i # [Suc ?i..<?j] else [])\n\ngoal (1 subgoal):\n 1. t = [Suc k..<Suc k + length r]", "by auto"], ["proof (state)\nthis:\n  t = [Suc k..<Suc k + length r]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t = [Suc k..<Suc k + length r]\n\ngoal (1 subgoal):\n 1. (\\<And>k r p.\n        \\<lbrakk>s = [Suc k..<Suc k + length r] || r; v = (k, p)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using that 1 2 3"], ["proof (prove)\nusing this:\n  \\<lbrakk>s = [Suc ?k..<Suc ?k + length ?r] || ?r; v = (?k, ?p)\\<rbrakk>\n  \\<Longrightarrow> thesis\n  s = t || r\n  length t = length r\n  v = (k, p)\n  t = [Suc k..<Suc k + length r]\n\ngoal (1 subgoal):\n 1. thesis", "by simp"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gpath_path[symmetric]: \"path A (stake (length r) (sdrop k w) || r) p \\<longleftrightarrow>\n    gpath A w UNIV ([Suc k ..< Suc k + length r] || r) (k, p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path A (stake (length r) (sdrop k w) || r) p =\n    gupath A w ([Suc k..<Suc k + length r] || r) (k, p)", "proof (induct r arbitrary: k p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>k p.\n       path A (stake (length []) (sdrop k w) || []) p =\n       gupath A w ([Suc k..<Suc k + length []] || []) (k, p)\n 2. \\<And>a r k p.\n       (\\<And>k p.\n           path A (stake (length r) (sdrop k w) || r) p =\n           gupath A w ([Suc k..<Suc k + length r] || r)\n            (k, p)) \\<Longrightarrow>\n       path A (stake (length (a # r)) (sdrop k w) || a # r) p =\n       gupath A w ([Suc k..<Suc k + length (a # r)] || a # r) (k, p)", "case (Nil)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>k p.\n       path A (stake (length []) (sdrop k w) || []) p =\n       gupath A w ([Suc k..<Suc k + length []] || []) (k, p)\n 2. \\<And>a r k p.\n       (\\<And>k p.\n           path A (stake (length r) (sdrop k w) || r) p =\n           gupath A w ([Suc k..<Suc k + length r] || r)\n            (k, p)) \\<Longrightarrow>\n       path A (stake (length (a # r)) (sdrop k w) || a # r) p =\n       gupath A w ([Suc k..<Suc k + length (a # r)] || a # r) (k, p)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. path A (stake (length []) (sdrop k w) || []) p =\n    gupath A w ([Suc k..<Suc k + length []] || []) (k, p)", "by auto"], ["proof (state)\nthis:\n  path A (stake (length []) (sdrop k w) || []) p =\n  gupath A w ([Suc k..<Suc k + length []] || []) (k, p)\n\ngoal (1 subgoal):\n 1. \\<And>a r k p.\n       (\\<And>k p.\n           path A (stake (length r) (sdrop k w) || r) p =\n           gupath A w ([Suc k..<Suc k + length r] || r)\n            (k, p)) \\<Longrightarrow>\n       path A (stake (length (a # r)) (sdrop k w) || a # r) p =\n       gupath A w ([Suc k..<Suc k + length (a # r)] || a # r) (k, p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a r k p.\n       (\\<And>k p.\n           path A (stake (length r) (sdrop k w) || r) p =\n           gupath A w ([Suc k..<Suc k + length r] || r)\n            (k, p)) \\<Longrightarrow>\n       path A (stake (length (a # r)) (sdrop k w) || a # r) p =\n       gupath A w ([Suc k..<Suc k + length (a # r)] || a # r) (k, p)", "case (Cons q r)"], ["proof (state)\nthis:\n  path A (stake (length r) (sdrop ?k w) || r) ?p =\n  gupath A w ([Suc ?k..<Suc ?k + length r] || r) (?k, ?p)\n\ngoal (1 subgoal):\n 1. \\<And>a r k p.\n       (\\<And>k p.\n           path A (stake (length r) (sdrop k w) || r) p =\n           gupath A w ([Suc k..<Suc k + length r] || r)\n            (k, p)) \\<Longrightarrow>\n       path A (stake (length (a # r)) (sdrop k w) || a # r) p =\n       gupath A w ([Suc k..<Suc k + length (a # r)] || a # r) (k, p)", "have 1: \"path A (stake (length r) (sdrop (Suc k) w) || r) q \\<longleftrightarrow>\n      gpath A w UNIV ([Suc (Suc k) ..< Suc k + length (q # r)] || r) (Suc k, q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path A (stake (length r) (sdrop (Suc k) w) || r) q =\n    gupath A w ([Suc (Suc k)..<Suc k + length (q # r)] || r) (Suc k, q)", "using Cons[of \"Suc k\" \"q\"]"], ["proof (prove)\nusing this:\n  path A (stake (length r) (sdrop (Suc k) w) || r) q =\n  gupath A w ([Suc (Suc k)..<Suc (Suc k) + length r] || r) (Suc k, q)\n\ngoal (1 subgoal):\n 1. path A (stake (length r) (sdrop (Suc k) w) || r) q =\n    gupath A w ([Suc (Suc k)..<Suc k + length (q # r)] || r) (Suc k, q)", "by simp"], ["proof (state)\nthis:\n  path A (stake (length r) (sdrop (Suc k) w) || r) q =\n  gupath A w ([Suc (Suc k)..<Suc k + length (q # r)] || r) (Suc k, q)\n\ngoal (1 subgoal):\n 1. \\<And>a r k p.\n       (\\<And>k p.\n           path A (stake (length r) (sdrop k w) || r) p =\n           gupath A w ([Suc k..<Suc k + length r] || r)\n            (k, p)) \\<Longrightarrow>\n       path A (stake (length (a # r)) (sdrop k w) || a # r) p =\n       gupath A w ([Suc k..<Suc k + length (a # r)] || a # r) (k, p)", "have \"stake (length (q # r)) (sdrop k w) || q # r =\n      (w !! k, q) # (stake (length r) (sdrop (Suc k) w) || r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (length (q # r)) (sdrop k w) || q # r =\n    (w !! k, q) # (stake (length r) (sdrop (Suc k) w) || r)", "by simp"], ["proof (state)\nthis:\n  stake (length (q # r)) (sdrop k w) || q # r =\n  (w !! k, q) # (stake (length r) (sdrop (Suc k) w) || r)\n\ngoal (1 subgoal):\n 1. \\<And>a r k p.\n       (\\<And>k p.\n           path A (stake (length r) (sdrop k w) || r) p =\n           gupath A w ([Suc k..<Suc k + length r] || r)\n            (k, p)) \\<Longrightarrow>\n       path A (stake (length (a # r)) (sdrop k w) || a # r) p =\n       gupath A w ([Suc k..<Suc k + length (a # r)] || a # r) (k, p)", "also"], ["proof (state)\nthis:\n  stake (length (q # r)) (sdrop k w) || q # r =\n  (w !! k, q) # (stake (length r) (sdrop (Suc k) w) || r)\n\ngoal (1 subgoal):\n 1. \\<And>a r k p.\n       (\\<And>k p.\n           path A (stake (length r) (sdrop k w) || r) p =\n           gupath A w ([Suc k..<Suc k + length r] || r)\n            (k, p)) \\<Longrightarrow>\n       path A (stake (length (a # r)) (sdrop k w) || a # r) p =\n       gupath A w ([Suc k..<Suc k + length (a # r)] || a # r) (k, p)", "have \"path A \\<dots> p \\<longleftrightarrow>\n      gpath A w UNIV ((Suc k, q) # ([Suc (Suc k) ..< Suc k + length (q # r)] || r)) (k, p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path A ((w !! k, q) # (stake (length r) (sdrop (Suc k) w) || r)) p =\n    gupath A w ((Suc k, q) # ([Suc (Suc k)..<Suc k + length (q # r)] || r))\n     (k, p)", "using 1"], ["proof (prove)\nusing this:\n  path A (stake (length r) (sdrop (Suc k) w) || r) q =\n  gupath A w ([Suc (Suc k)..<Suc k + length (q # r)] || r) (Suc k, q)\n\ngoal (1 subgoal):\n 1. path A ((w !! k, q) # (stake (length r) (sdrop (Suc k) w) || r)) p =\n    gupath A w ((Suc k, q) # ([Suc (Suc k)..<Suc k + length (q # r)] || r))\n     (k, p)", "by auto"], ["proof (state)\nthis:\n  path A ((w !! k, q) # (stake (length r) (sdrop (Suc k) w) || r)) p =\n  gupath A w ((Suc k, q) # ([Suc (Suc k)..<Suc k + length (q # r)] || r))\n   (k, p)\n\ngoal (1 subgoal):\n 1. \\<And>a r k p.\n       (\\<And>k p.\n           path A (stake (length r) (sdrop k w) || r) p =\n           gupath A w ([Suc k..<Suc k + length r] || r)\n            (k, p)) \\<Longrightarrow>\n       path A (stake (length (a # r)) (sdrop k w) || a # r) p =\n       gupath A w ([Suc k..<Suc k + length (a # r)] || a # r) (k, p)", "also"], ["proof (state)\nthis:\n  path A ((w !! k, q) # (stake (length r) (sdrop (Suc k) w) || r)) p =\n  gupath A w ((Suc k, q) # ([Suc (Suc k)..<Suc k + length (q # r)] || r))\n   (k, p)\n\ngoal (1 subgoal):\n 1. \\<And>a r k p.\n       (\\<And>k p.\n           path A (stake (length r) (sdrop k w) || r) p =\n           gupath A w ([Suc k..<Suc k + length r] || r)\n            (k, p)) \\<Longrightarrow>\n       path A (stake (length (a # r)) (sdrop k w) || a # r) p =\n       gupath A w ([Suc k..<Suc k + length (a # r)] || a # r) (k, p)", "have \"(Suc k, q) # ([Suc (Suc k) ..< Suc k + length (q # r)] || r) =\n      Suc k # [Suc (Suc k) ..< Suc k + length (q # r)] || q # r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Suc k, q) # ([Suc (Suc k)..<Suc k + length (q # r)] || r) =\n    Suc k # [Suc (Suc k)..<Suc k + length (q # r)] || q # r", "unfolding zip_Cons_Cons"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Suc k, q) # ([Suc (Suc k)..<Suc k + length (q # r)] || r) =\n    (Suc k, q) # ([Suc (Suc k)..<Suc k + length (q # r)] || r)", "by rule"], ["proof (state)\nthis:\n  (Suc k, q) # ([Suc (Suc k)..<Suc k + length (q # r)] || r) =\n  Suc k # [Suc (Suc k)..<Suc k + length (q # r)] || q # r\n\ngoal (1 subgoal):\n 1. \\<And>a r k p.\n       (\\<And>k p.\n           path A (stake (length r) (sdrop k w) || r) p =\n           gupath A w ([Suc k..<Suc k + length r] || r)\n            (k, p)) \\<Longrightarrow>\n       path A (stake (length (a # r)) (sdrop k w) || a # r) p =\n       gupath A w ([Suc k..<Suc k + length (a # r)] || a # r) (k, p)", "also"], ["proof (state)\nthis:\n  (Suc k, q) # ([Suc (Suc k)..<Suc k + length (q # r)] || r) =\n  Suc k # [Suc (Suc k)..<Suc k + length (q # r)] || q # r\n\ngoal (1 subgoal):\n 1. \\<And>a r k p.\n       (\\<And>k p.\n           path A (stake (length r) (sdrop k w) || r) p =\n           gupath A w ([Suc k..<Suc k + length r] || r)\n            (k, p)) \\<Longrightarrow>\n       path A (stake (length (a # r)) (sdrop k w) || a # r) p =\n       gupath A w ([Suc k..<Suc k + length (a # r)] || a # r) (k, p)", "have \"Suc k # [Suc (Suc k) ..< Suc k + length (q # r)] = [Suc k ..< Suc k + length (q # r)]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc k # [Suc (Suc k)..<Suc k + length (q # r)] =\n    [Suc k..<Suc k + length (q # r)]", "by (simp add: upt_rec)"], ["proof (state)\nthis:\n  Suc k # [Suc (Suc k)..<Suc k + length (q # r)] =\n  [Suc k..<Suc k + length (q # r)]\n\ngoal (1 subgoal):\n 1. \\<And>a r k p.\n       (\\<And>k p.\n           path A (stake (length r) (sdrop k w) || r) p =\n           gupath A w ([Suc k..<Suc k + length r] || r)\n            (k, p)) \\<Longrightarrow>\n       path A (stake (length (a # r)) (sdrop k w) || a # r) p =\n       gupath A w ([Suc k..<Suc k + length (a # r)] || a # r) (k, p)", "finally"], ["proof (chain)\npicking this:\n  path A (stake (length (q # r)) (sdrop k w) || q # r) p =\n  gupath A w ([Suc k..<Suc k + length (q # r)] || q # r) (k, p)", "show ?case"], ["proof (prove)\nusing this:\n  path A (stake (length (q # r)) (sdrop k w) || q # r) p =\n  gupath A w ([Suc k..<Suc k + length (q # r)] || q # r) (k, p)\n\ngoal (1 subgoal):\n 1. path A (stake (length (q # r)) (sdrop k w) || q # r) p =\n    gupath A w ([Suc k..<Suc k + length (q # r)] || q # r) (k, p)", "by this"], ["proof (state)\nthis:\n  path A (stake (length (q # r)) (sdrop k w) || q # r) p =\n  gupath A w ([Suc k..<Suc k + length (q # r)] || q # r) (k, p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma grun_elim[elim?]:\n    assumes \"grun A w V s v\"\n    obtains r k p\n    where \"s = fromN (Suc k) ||| r\" \"v = (k, p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k r p.\n        \\<lbrakk>s = fromN (Suc k) ||| r; v = (k, p)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k r p.\n        \\<lbrakk>s = fromN (Suc k) ||| r; v = (k, p)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain t r where 1: \"s = t ||| r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t r. s = t ||| r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using szip_smap"], ["proof (prove)\nusing this:\n  smap fst ?zs ||| smap snd ?zs = ?zs\n\ngoal (1 subgoal):\n 1. (\\<And>t r. s = t ||| r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  s = t ||| r\n\ngoal (1 subgoal):\n 1. (\\<And>k r p.\n        \\<lbrakk>s = fromN (Suc k) ||| r; v = (k, p)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain k p where 2: \"v = (k, p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k p. v = (k, p) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  v = (k, p)\n\ngoal (1 subgoal):\n 1. (\\<And>k r p.\n        \\<lbrakk>s = fromN (Suc k) ||| r; v = (k, p)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 3: \"t = fromN (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t = fromN (Suc k)", "using assms"], ["proof (prove)\nusing this:\n  grun A w V s v\n\ngoal (1 subgoal):\n 1. t = fromN (Suc k)", "unfolding 1 2"], ["proof (prove)\nusing this:\n  grun A w V (t ||| r) (k, p)\n\ngoal (1 subgoal):\n 1. t = fromN (Suc k)", "by (coinduction arbitrary: t r k p) (force iff: eq_scons elim: graph.run.cases)"], ["proof (state)\nthis:\n  t = fromN (Suc k)\n\ngoal (1 subgoal):\n 1. (\\<And>k r p.\n        \\<lbrakk>s = fromN (Suc k) ||| r; v = (k, p)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using that 1 2 3"], ["proof (prove)\nusing this:\n  \\<lbrakk>s = fromN (Suc ?k) ||| ?r; v = (?k, ?p)\\<rbrakk>\n  \\<Longrightarrow> thesis\n  s = t ||| r\n  v = (k, p)\n  t = fromN (Suc k)\n\ngoal (1 subgoal):\n 1. thesis", "by simp"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma run_grun:\n    assumes \"run A (sdrop k w ||| r) p\"\n    shows \"gurun A w (fromN (Suc k) ||| r) (k, p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gurun A w (fromN (Suc k) ||| r) (k, p)", "using assms"], ["proof (prove)\nusing this:\n  run A (sdrop k w ||| r) p\n\ngoal (1 subgoal):\n 1. gurun A w (fromN (Suc k) ||| r) (k, p)", "by (coinduction arbitrary: k p r) (auto elim: nba.run.cases)"], ["", "lemma grun_run:\n    assumes \"grun A w V (fromN (Suc k) ||| r) (k, p)\"\n    shows \"run A (sdrop k w ||| r) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. run A (sdrop k w ||| r) p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. run A (sdrop k w ||| r) p", "have 2: \"\\<exists> ka wa. sdrop k (stl w :: 'a stream) = sdrop ka wa \\<and> P ka wa\" if \"P (Suc k) w\" for P k w"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>kaa waa. sdrop k (stl w) = sdrop kaa waa \\<and> P kaa waa", "using that"], ["proof (prove)\nusing this:\n  P (Suc k) w\n\ngoal (1 subgoal):\n 1. \\<exists>kaa waa. sdrop k (stl w) = sdrop kaa waa \\<and> P kaa waa", "by (metis sdrop.simps(2))"], ["proof (state)\nthis:\n  ?P (Suc ?k) ?w \\<Longrightarrow>\n  \\<exists>ka wa. sdrop ?k (stl ?w) = sdrop ka wa \\<and> ?P ka wa\n\ngoal (1 subgoal):\n 1. run A (sdrop k w ||| r) p", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. run A (sdrop k w ||| r) p", "using assms"], ["proof (prove)\nusing this:\n  grun A w V (fromN (Suc k) ||| r) (k, p)\n\ngoal (1 subgoal):\n 1. run A (sdrop k w ||| r) p", "by (coinduction arbitrary: k p w r) (auto intro!: 2 elim: graph.run.cases)"], ["proof (state)\nthis:\n  run A (sdrop k w ||| r) p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma greachable_reachable:\n    fixes l q k p\n    defines \"u \\<equiv> (l, q)\"\n    defines \"v \\<equiv> (k, p)\"\n    assumes \"u \\<in> greachable A w V v\"\n    shows \"q \\<in> reachable A p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> reachable A p", "using assms(3, 1, 2)"], ["proof (prove)\nusing this:\n  u \\<in> greachable A w V v\n  u \\<equiv> (l, q)\n  v \\<equiv> (k, p)\n\ngoal (1 subgoal):\n 1. q \\<in> reachable A p", "proof (induct arbitrary: l q k p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l q k p.\n       \\<lbrakk>v = (l, q); v = (k, p)\\<rbrakk>\n       \\<Longrightarrow> q \\<in> reachable A p\n 2. \\<And>q l qa k p.\n       \\<lbrakk>q \\<in> greachable A w V v;\n        \\<And>l qa k p.\n           \\<lbrakk>q = (l, qa); v = (k, p)\\<rbrakk>\n           \\<Longrightarrow> qa \\<in> reachable A p;\n        case q of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          (l, qa) \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> V;\n        v = (k, p)\\<rbrakk>\n       \\<Longrightarrow> qa \\<in> reachable A p", "case reflexive"], ["proof (state)\nthis:\n  v = (l, q)\n  v = (k, p)\n\ngoal (2 subgoals):\n 1. \\<And>l q k p.\n       \\<lbrakk>v = (l, q); v = (k, p)\\<rbrakk>\n       \\<Longrightarrow> q \\<in> reachable A p\n 2. \\<And>q l qa k p.\n       \\<lbrakk>q \\<in> greachable A w V v;\n        \\<And>l qa k p.\n           \\<lbrakk>q = (l, qa); v = (k, p)\\<rbrakk>\n           \\<Longrightarrow> qa \\<in> reachable A p;\n        case q of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          (l, qa) \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> V;\n        v = (k, p)\\<rbrakk>\n       \\<Longrightarrow> qa \\<in> reachable A p", "then"], ["proof (chain)\npicking this:\n  v = (l, q)\n  v = (k, p)", "show ?case"], ["proof (prove)\nusing this:\n  v = (l, q)\n  v = (k, p)\n\ngoal (1 subgoal):\n 1. q \\<in> reachable A p", "by auto"], ["proof (state)\nthis:\n  q \\<in> reachable A p\n\ngoal (1 subgoal):\n 1. \\<And>q l qa k p.\n       \\<lbrakk>q \\<in> greachable A w V v;\n        \\<And>l qa k p.\n           \\<lbrakk>q = (l, qa); v = (k, p)\\<rbrakk>\n           \\<Longrightarrow> qa \\<in> reachable A p;\n        case q of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          (l, qa) \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> V;\n        v = (k, p)\\<rbrakk>\n       \\<Longrightarrow> qa \\<in> reachable A p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q l qa k p.\n       \\<lbrakk>q \\<in> greachable A w V v;\n        \\<And>l qa k p.\n           \\<lbrakk>q = (l, qa); v = (k, p)\\<rbrakk>\n           \\<Longrightarrow> qa \\<in> reachable A p;\n        case q of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          (l, qa) \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> V;\n        v = (k, p)\\<rbrakk>\n       \\<Longrightarrow> qa \\<in> reachable A p", "case (execute u)"], ["proof (state)\nthis:\n  u \\<in> greachable A w V v\n  \\<lbrakk>u = (?l, ?q); v = (?k, ?p)\\<rbrakk>\n  \\<Longrightarrow> ?q \\<in> reachable A ?p\n  case u of\n  (k, p) \\<Rightarrow>\n    w !! k \\<in> alphabet A \\<and>\n    (l, q) \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> V\n  v = (k, p)\n\ngoal (1 subgoal):\n 1. \\<And>q l qa k p.\n       \\<lbrakk>q \\<in> greachable A w V v;\n        \\<And>l qa k p.\n           \\<lbrakk>q = (l, qa); v = (k, p)\\<rbrakk>\n           \\<Longrightarrow> qa \\<in> reachable A p;\n        case q of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          (l, qa) \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> V;\n        v = (k, p)\\<rbrakk>\n       \\<Longrightarrow> qa \\<in> reachable A p", "have 1: \"q \\<in> successors A (snd u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> successors A (snd u)", "using execute"], ["proof (prove)\nusing this:\n  u \\<in> greachable A w V v\n  \\<lbrakk>u = (?l, ?q); v = (?k, ?p)\\<rbrakk>\n  \\<Longrightarrow> ?q \\<in> reachable A ?p\n  case u of\n  (k, p) \\<Rightarrow>\n    w !! k \\<in> alphabet A \\<and>\n    (l, q) \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> V\n  v = (k, p)\n\ngoal (1 subgoal):\n 1. q \\<in> successors A (snd u)", "by auto"], ["proof (state)\nthis:\n  q \\<in> successors A (snd u)\n\ngoal (1 subgoal):\n 1. \\<And>q l qa k p.\n       \\<lbrakk>q \\<in> greachable A w V v;\n        \\<And>l qa k p.\n           \\<lbrakk>q = (l, qa); v = (k, p)\\<rbrakk>\n           \\<Longrightarrow> qa \\<in> reachable A p;\n        case q of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          (l, qa) \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> V;\n        v = (k, p)\\<rbrakk>\n       \\<Longrightarrow> qa \\<in> reachable A p", "have \"snd u \\<in> reachable A p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd u \\<in> reachable A p", "using execute"], ["proof (prove)\nusing this:\n  u \\<in> greachable A w V v\n  \\<lbrakk>u = (?l, ?q); v = (?k, ?p)\\<rbrakk>\n  \\<Longrightarrow> ?q \\<in> reachable A ?p\n  case u of\n  (k, p) \\<Rightarrow>\n    w !! k \\<in> alphabet A \\<and>\n    (l, q) \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> V\n  v = (k, p)\n\ngoal (1 subgoal):\n 1. snd u \\<in> reachable A p", "by auto"], ["proof (state)\nthis:\n  snd u \\<in> reachable A p\n\ngoal (1 subgoal):\n 1. \\<And>q l qa k p.\n       \\<lbrakk>q \\<in> greachable A w V v;\n        \\<And>l qa k p.\n           \\<lbrakk>q = (l, qa); v = (k, p)\\<rbrakk>\n           \\<Longrightarrow> qa \\<in> reachable A p;\n        case q of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          (l, qa) \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> V;\n        v = (k, p)\\<rbrakk>\n       \\<Longrightarrow> qa \\<in> reachable A p", "also"], ["proof (state)\nthis:\n  snd u \\<in> reachable A p\n\ngoal (1 subgoal):\n 1. \\<And>q l qa k p.\n       \\<lbrakk>q \\<in> greachable A w V v;\n        \\<And>l qa k p.\n           \\<lbrakk>q = (l, qa); v = (k, p)\\<rbrakk>\n           \\<Longrightarrow> qa \\<in> reachable A p;\n        case q of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          (l, qa) \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> V;\n        v = (k, p)\\<rbrakk>\n       \\<Longrightarrow> qa \\<in> reachable A p", "have \"q \\<in> reachable A (snd u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> reachable A (snd u)", "using 1"], ["proof (prove)\nusing this:\n  q \\<in> successors A (snd u)\n\ngoal (1 subgoal):\n 1. q \\<in> reachable A (snd u)", "by blast"], ["proof (state)\nthis:\n  q \\<in> reachable A (snd u)\n\ngoal (1 subgoal):\n 1. \\<And>q l qa k p.\n       \\<lbrakk>q \\<in> greachable A w V v;\n        \\<And>l qa k p.\n           \\<lbrakk>q = (l, qa); v = (k, p)\\<rbrakk>\n           \\<Longrightarrow> qa \\<in> reachable A p;\n        case q of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          (l, qa) \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> V;\n        v = (k, p)\\<rbrakk>\n       \\<Longrightarrow> qa \\<in> reachable A p", "finally"], ["proof (chain)\npicking this:\n  q \\<in> reachable A p", "show ?case"], ["proof (prove)\nusing this:\n  q \\<in> reachable A p\n\ngoal (1 subgoal):\n 1. q \\<in> reachable A p", "by this"], ["proof (state)\nthis:\n  q \\<in> reachable A p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gnodes_nodes: \"gnodes A w V \\<subseteq> UNIV \\<times> nodes A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gnodes A w V \\<subseteq> UNIV \\<times> nodes A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> gnodes A w V \\<Longrightarrow> x \\<in> UNIV \\<times> nodes A", "fix v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> gnodes A w V \\<Longrightarrow> x \\<in> UNIV \\<times> nodes A", "assume \"v \\<in> gnodes A w V\""], ["proof (state)\nthis:\n  v \\<in> gnodes A w V\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> gnodes A w V \\<Longrightarrow> x \\<in> UNIV \\<times> nodes A", "then"], ["proof (chain)\npicking this:\n  v \\<in> gnodes A w V", "show \"v \\<in> UNIV \\<times> nodes A\""], ["proof (prove)\nusing this:\n  v \\<in> gnodes A w V\n\ngoal (1 subgoal):\n 1. v \\<in> UNIV \\<times> nodes A", "by induct auto"], ["proof (state)\nthis:\n  v \\<in> UNIV \\<times> nodes A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gpath_subset:\n    assumes \"gpath A w V r v\"\n    assumes \"set (gstates r v) \\<subseteq> U\"\n    shows \"gpath A w U r v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gpath A w U r v", "using assms"], ["proof (prove)\nusing this:\n  gpath A w V r v\n  set (gstates r v) \\<subseteq> U\n\ngoal (1 subgoal):\n 1. gpath A w U r v", "by induct auto"], ["", "lemma grun_subset:\n    assumes \"grun A w V r v\"\n    assumes \"sset (gtrace r v) \\<subseteq> U\"\n    shows \"grun A w U r v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. grun A w U r v", "using assms"], ["proof (prove)\nusing this:\n  grun A w V r v\n  sset (gtrace r v) \\<subseteq> U\n\ngoal (1 subgoal):\n 1. grun A w U r v", "proof (coinduction arbitrary: r v)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a r ra v.\n       \\<lbrakk>a ## r = ra; grun A w V ra v;\n        sset (gtrace ra v) \\<subseteq> U\\<rbrakk>\n       \\<Longrightarrow> (case v of\n                          (k, p) \\<Rightarrow>\n                            w !! k \\<in> alphabet A \\<and>\n                            a \\<in> {Suc k} \\<times>\n                                    transition A (w !! k) p \\<inter>\n                                    U) \\<and>\n                         (\\<exists>ra v.\n                             r = ra \\<and>\n                             a = v \\<and>\n                             grun A w V ra v \\<and>\n                             sset (gtrace ra v) \\<subseteq> U)", "case (run a s r v)"], ["proof (state)\nthis:\n  a ## s = r\n  grun A w V r v\n  sset (gtrace r v) \\<subseteq> U\n\ngoal (1 subgoal):\n 1. \\<And>a r ra v.\n       \\<lbrakk>a ## r = ra; grun A w V ra v;\n        sset (gtrace ra v) \\<subseteq> U\\<rbrakk>\n       \\<Longrightarrow> (case v of\n                          (k, p) \\<Rightarrow>\n                            w !! k \\<in> alphabet A \\<and>\n                            a \\<in> {Suc k} \\<times>\n                                    transition A (w !! k) p \\<inter>\n                                    U) \\<and>\n                         (\\<exists>ra v.\n                             r = ra \\<and>\n                             a = v \\<and>\n                             grun A w V ra v \\<and>\n                             sset (gtrace ra v) \\<subseteq> U)", "have 1: \"grun A w V s a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. grun A w V s a", "using run(1, 2)"], ["proof (prove)\nusing this:\n  a ## s = r\n  grun A w V r v\n\ngoal (1 subgoal):\n 1. grun A w V s a", "by fastforce"], ["proof (state)\nthis:\n  grun A w V s a\n\ngoal (1 subgoal):\n 1. \\<And>a r ra v.\n       \\<lbrakk>a ## r = ra; grun A w V ra v;\n        sset (gtrace ra v) \\<subseteq> U\\<rbrakk>\n       \\<Longrightarrow> (case v of\n                          (k, p) \\<Rightarrow>\n                            w !! k \\<in> alphabet A \\<and>\n                            a \\<in> {Suc k} \\<times>\n                                    transition A (w !! k) p \\<inter>\n                                    U) \\<and>\n                         (\\<exists>ra v.\n                             r = ra \\<and>\n                             a = v \\<and>\n                             grun A w V ra v \\<and>\n                             sset (gtrace ra v) \\<subseteq> U)", "have 2: \"a \\<in> gusuccessors A w v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> gusuccessors A w v", "using run(1, 2)"], ["proof (prove)\nusing this:\n  a ## s = r\n  grun A w V r v\n\ngoal (1 subgoal):\n 1. a \\<in> gusuccessors A w v", "by fastforce"], ["proof (state)\nthis:\n  a \\<in> gusuccessors A w v\n\ngoal (1 subgoal):\n 1. \\<And>a r ra v.\n       \\<lbrakk>a ## r = ra; grun A w V ra v;\n        sset (gtrace ra v) \\<subseteq> U\\<rbrakk>\n       \\<Longrightarrow> (case v of\n                          (k, p) \\<Rightarrow>\n                            w !! k \\<in> alphabet A \\<and>\n                            a \\<in> {Suc k} \\<times>\n                                    transition A (w !! k) p \\<inter>\n                                    U) \\<and>\n                         (\\<exists>ra v.\n                             r = ra \\<and>\n                             a = v \\<and>\n                             grun A w V ra v \\<and>\n                             sset (gtrace ra v) \\<subseteq> U)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case v of\n     (k, p) \\<Rightarrow>\n       w !! k \\<in> alphabet A \\<and>\n       a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> U) \\<and>\n    (\\<exists>r v.\n        s = r \\<and>\n        a = v \\<and> grun A w V r v \\<and> sset (gtrace r v) \\<subseteq> U)", "using 1 2 run(1, 3)"], ["proof (prove)\nusing this:\n  grun A w V s a\n  a \\<in> gusuccessors A w v\n  a ## s = r\n  sset (gtrace r v) \\<subseteq> U\n\ngoal (1 subgoal):\n 1. (case v of\n     (k, p) \\<Rightarrow>\n       w !! k \\<in> alphabet A \\<and>\n       a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> U) \\<and>\n    (\\<exists>r v.\n        s = r \\<and>\n        a = v \\<and> grun A w V r v \\<and> sset (gtrace r v) \\<subseteq> U)", "by force"], ["proof (state)\nthis:\n  (case v of\n   (k, p) \\<Rightarrow>\n     w !! k \\<in> alphabet A \\<and>\n     a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> U) \\<and>\n  (\\<exists>r v.\n      s = r \\<and>\n      a = v \\<and> grun A w V r v \\<and> sset (gtrace r v) \\<subseteq> U)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma greachable_subset: \"greachable A w V v \\<subseteq> insert v V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. greachable A w V v \\<subseteq> insert v V", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> greachable A w V v \\<Longrightarrow> x \\<in> insert v V", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> greachable A w V v \\<Longrightarrow> x \\<in> insert v V", "assume \"u \\<in> greachable A w V v\""], ["proof (state)\nthis:\n  u \\<in> greachable A w V v\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> greachable A w V v \\<Longrightarrow> x \\<in> insert v V", "then"], ["proof (chain)\npicking this:\n  u \\<in> greachable A w V v", "show \"u \\<in> insert v V\""], ["proof (prove)\nusing this:\n  u \\<in> greachable A w V v\n\ngoal (1 subgoal):\n 1. u \\<in> insert v V", "by induct auto"], ["proof (state)\nthis:\n  u \\<in> insert v V\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gtrace_infinite:\n    assumes \"grun A w V r v\"\n    shows \"infinite (sset (gtrace r v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite (sset (gtrace r v))", "using assms"], ["proof (prove)\nusing this:\n  grun A w V r v\n\ngoal (1 subgoal):\n 1. infinite (sset (gtrace r v))", "by (metis grun_elim gtrace_alt_def infinite_Ici sset_fromN sset_szip_finite)"], ["", "lemma infinite_greachable_gtrace:\n    assumes \"grun A w V r v\"\n    assumes \"u \\<in> sset (gtrace r v)\"\n    shows \"infinite (greachable A w V u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite (greachable A w V u)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite (greachable A w V u)", "obtain i where 1: \"u = gtrace r v !! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        u = gtrace r v !! i \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using sset_range imageE assms(2)"], ["proof (prove)\nusing this:\n  sset ?s = range ((!!) ?s)\n  \\<lbrakk>?b \\<in> ?f ` ?A;\n   \\<And>x.\n      \\<lbrakk>?b = ?f x; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  u \\<in> sset (gtrace r v)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        u = gtrace r v !! i \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  u = gtrace r v !! i\n\ngoal (1 subgoal):\n 1. infinite (greachable A w V u)", "have 2: \"gtarget (stake (Suc i) r) v = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gtarget (stake (Suc i) r) v = u", "unfolding 1 sscan_snth"], ["proof (prove)\ngoal (1 subgoal):\n 1. gtarget (stake (Suc i) r) v = gtarget (stake (Suc i) r) v", "by rule"], ["proof (state)\nthis:\n  gtarget (stake (Suc i) r) v = u\n\ngoal (1 subgoal):\n 1. infinite (greachable A w V u)", "have \"infinite (sset (sdrop (Suc i) (gtrace r v)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite (sset (sdrop (Suc i) (gtrace r v)))", "using gtrace_infinite[OF assms(1)]"], ["proof (prove)\nusing this:\n  infinite (sset (gtrace r v))\n\ngoal (1 subgoal):\n 1. infinite (sset (sdrop (Suc i) (gtrace r v)))", "by (metis List.finite_set finite_Un sset_shift stake_sdrop)"], ["proof (state)\nthis:\n  infinite (sset (sdrop (Suc i) (gtrace r v)))\n\ngoal (1 subgoal):\n 1. infinite (greachable A w V u)", "also"], ["proof (state)\nthis:\n  infinite (sset (sdrop (Suc i) (gtrace r v)))\n\ngoal (1 subgoal):\n 1. infinite (greachable A w V u)", "have \"sdrop (Suc i) (gtrace r v) = gtrace (sdrop (Suc i) r) (gtarget (stake (Suc i) r) v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sdrop (Suc i) (gtrace r v) =\n    gtrace (sdrop (Suc i) r) (gtarget (stake (Suc i) r) v)", "by simp"], ["proof (state)\nthis:\n  sdrop (Suc i) (gtrace r v) =\n  gtrace (sdrop (Suc i) r) (gtarget (stake (Suc i) r) v)\n\ngoal (1 subgoal):\n 1. infinite (greachable A w V u)", "also"], ["proof (state)\nthis:\n  sdrop (Suc i) (gtrace r v) =\n  gtrace (sdrop (Suc i) r) (gtarget (stake (Suc i) r) v)\n\ngoal (1 subgoal):\n 1. infinite (greachable A w V u)", "have \"sset \\<dots> \\<subseteq> greachable A w V u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sset (gtrace (sdrop (Suc i) r) (gtarget (stake (Suc i) r) v))\n    \\<subseteq> greachable A w V u", "using assms(1) 2"], ["proof (prove)\nusing this:\n  grun A w V r v\n  gtarget (stake (Suc i) r) v = u\n\ngoal (1 subgoal):\n 1. sset (gtrace (sdrop (Suc i) r) (gtarget (stake (Suc i) r) v))\n    \\<subseteq> greachable A w V u", "by (metis graph.reachable.reflexive graph.reachable_trace graph.run_sdrop)"], ["proof (state)\nthis:\n  sset (gtrace (sdrop (Suc i) r) (gtarget (stake (Suc i) r) v))\n  \\<subseteq> greachable A w V u\n\ngoal (1 subgoal):\n 1. infinite (greachable A w V u)", "finally"], ["proof (chain)\npicking this:\n  infinite (greachable A w V u)", "show ?thesis"], ["proof (prove)\nusing this:\n  infinite (greachable A w V u)\n\ngoal (1 subgoal):\n 1. infinite (greachable A w V u)", "by this"], ["proof (state)\nthis:\n  infinite (greachable A w V u)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finite_nodes_gsuccessors:\n    assumes \"finite (nodes A)\"\n    assumes \"v \\<in> gunodes A w\"\n    shows \"finite (gusuccessors A w v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (gusuccessors A w v)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (gusuccessors A w v)", "have \"gusuccessors A w v \\<subseteq> gureachable A w v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gusuccessors A w v \\<subseteq> gureachable A w v", "by rule"], ["proof (state)\nthis:\n  gusuccessors A w v \\<subseteq> gureachable A w v\n\ngoal (1 subgoal):\n 1. finite (gusuccessors A w v)", "also"], ["proof (state)\nthis:\n  gusuccessors A w v \\<subseteq> gureachable A w v\n\ngoal (1 subgoal):\n 1. finite (gusuccessors A w v)", "have \"\\<dots> \\<subseteq> gunodes A w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gureachable A w v \\<subseteq> gunodes A w", "using assms(2)"], ["proof (prove)\nusing this:\n  v \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. gureachable A w v \\<subseteq> gunodes A w", "by blast"], ["proof (state)\nthis:\n  gureachable A w v \\<subseteq> gunodes A w\n\ngoal (1 subgoal):\n 1. finite (gusuccessors A w v)", "also"], ["proof (state)\nthis:\n  gureachable A w v \\<subseteq> gunodes A w\n\ngoal (1 subgoal):\n 1. finite (gusuccessors A w v)", "have \"\\<dots> \\<subseteq> UNIV \\<times> nodes A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gunodes A w \\<subseteq> UNIV \\<times> nodes A", "using gnodes_nodes"], ["proof (prove)\nusing this:\n  gnodes ?A ?w ?V \\<subseteq> UNIV \\<times> nodes ?A\n\ngoal (1 subgoal):\n 1. gunodes A w \\<subseteq> UNIV \\<times> nodes A", "by this"], ["proof (state)\nthis:\n  gunodes A w \\<subseteq> UNIV \\<times> nodes A\n\ngoal (1 subgoal):\n 1. finite (gusuccessors A w v)", "finally"], ["proof (chain)\npicking this:\n  gusuccessors A w v \\<subseteq> UNIV \\<times> nodes A", "have 3: \"gusuccessors A w v \\<subseteq> UNIV \\<times> nodes A\""], ["proof (prove)\nusing this:\n  gusuccessors A w v \\<subseteq> UNIV \\<times> nodes A\n\ngoal (1 subgoal):\n 1. gusuccessors A w v \\<subseteq> UNIV \\<times> nodes A", "by this"], ["proof (state)\nthis:\n  gusuccessors A w v \\<subseteq> UNIV \\<times> nodes A\n\ngoal (1 subgoal):\n 1. finite (gusuccessors A w v)", "have \"gusuccessors A w v \\<subseteq> {Suc (fst v)} \\<times> nodes A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gusuccessors A w v \\<subseteq> {Suc (fst v)} \\<times> nodes A", "using 3"], ["proof (prove)\nusing this:\n  gusuccessors A w v \\<subseteq> UNIV \\<times> nodes A\n\ngoal (1 subgoal):\n 1. gusuccessors A w v \\<subseteq> {Suc (fst v)} \\<times> nodes A", "by auto"], ["proof (state)\nthis:\n  gusuccessors A w v \\<subseteq> {Suc (fst v)} \\<times> nodes A\n\ngoal (1 subgoal):\n 1. finite (gusuccessors A w v)", "also"], ["proof (state)\nthis:\n  gusuccessors A w v \\<subseteq> {Suc (fst v)} \\<times> nodes A\n\ngoal (1 subgoal):\n 1. finite (gusuccessors A w v)", "have \"finite \\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ({Suc (fst v)} \\<times> nodes A)", "using assms(1)"], ["proof (prove)\nusing this:\n  finite (nodes A)\n\ngoal (1 subgoal):\n 1. finite ({Suc (fst v)} \\<times> nodes A)", "by simp"], ["proof (state)\nthis:\n  finite ({Suc (fst v)} \\<times> nodes A)\n\ngoal (1 subgoal):\n 1. finite (gusuccessors A w v)", "finally"], ["proof (chain)\npicking this:\n  finite (gusuccessors A w v)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (gusuccessors A w v)\n\ngoal (1 subgoal):\n 1. finite (gusuccessors A w v)", "by this"], ["proof (state)\nthis:\n  finite (gusuccessors A w v)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}