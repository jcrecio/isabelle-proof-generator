{"file_name": "/home/qj213/afp-2021-10-22/thys/Buchi_Complementation/Ranking.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Buchi_Complementation", "problem_names": ["lemma ranking_stuck:\n    assumes \"ranking A w f\"\n    assumes \"v \\<in> gunodes A w\" \"gurun A w r v\"\n    obtains n k\n    where \"smap f (gtrace (sdrop n r) (gtarget (stake n r) v)) = sconst k\"", "lemma ranking_stuck_odd:\n    assumes \"ranking A w f\"\n    assumes \"v \\<in> gunodes A w\" \"gurun A w r v\"\n    obtains n\n    where \"Ball (sset (smap f (gtrace (sdrop n r) (gtarget (stake n r) v)))) odd\"", "lemma ranking_language:\n    assumes \"ranking A w f\"\n    shows \"w \\<notin> language A\"", "lemma clean_decreasing: \"clean A w V \\<subseteq> V\"", "lemma clean_successors:\n    assumes \"v \\<in> V\" \"u \\<in> gusuccessors A w v\"\n    shows \"u \\<in> clean A w V \\<Longrightarrow> v \\<in> clean A w V\"", "lemma prune_decreasing: \"prune A w V \\<subseteq> V\"", "lemma prune_successors:\n    assumes \"v \\<in> V\" \"u \\<in> gusuccessors A w v\"\n    shows \"u \\<in> prune A w V \\<Longrightarrow> v \\<in> prune A w V\"", "lemma graph_0[simp]: \"graph A w 0 = gunodes A w\"", "lemma graph_Suc[simp]: \"graph A w (Suc k) = (if even k then clean A w else prune A w) (graph A w k)\"", "lemma graph_antimono: \"antimono (graph A w)\"", "lemma graph_nodes: \"graph A w k \\<subseteq> gunodes A w\"", "lemma graph_successors:\n    assumes \"v \\<in> gunodes A w\" \"u \\<in> gusuccessors A w v\"\n    shows \"u \\<in> graph A w k \\<Longrightarrow> v \\<in> graph A w k\"", "lemma graph_level_finite:\n    assumes \"finite (nodes A)\"\n    shows \"finite (level A w k l)\"", "lemma find_safe:\n    assumes \"w \\<notin> language A\"\n    assumes \"V \\<noteq> {}\" \"V \\<subseteq> gunodes A w\"\n    assumes \"\\<And> v. v \\<in> V \\<Longrightarrow> gsuccessors A w V v \\<noteq> {}\"\n    obtains v\n    where \"v \\<in> V\" \"\\<forall> u \\<in> greachable A w V v. \\<not> gaccepting A u\"", "lemma remove_run:\n    assumes \"finite (nodes A)\" \"w \\<notin> language A\"\n    assumes \"V \\<subseteq> gunodes A w\" \"clean A w V \\<noteq> {}\"\n    obtains v r\n    where\n      \"grun A w V r v\"\n      \"sset (gtrace r v) \\<subseteq> clean A w V\"\n      \"sset (gtrace r v) \\<subseteq> - prune A w (clean A w V)\"", "lemma level_bounded:\n    assumes \"finite (nodes A)\" \"w \\<notin> language A\"\n    obtains n\n    where \"\\<And> l. l \\<ge> n \\<Longrightarrow> card (level A w (2 * k) l) \\<le> card (nodes A) - k\"", "lemma graph_empty:\n    assumes \"finite (nodes A)\" \"w \\<notin> language A\"\n    shows \"graph A w (Suc (2 * card (nodes A))) = {}\"", "lemma graph_le:\n    assumes \"finite (nodes A)\" \"w \\<notin> language A\"\n    assumes \"v \\<in> graph A w k\"\n    shows \"k \\<le> 2 * card (nodes A)\"", "lemma rank_member:\n    assumes \"finite (nodes A)\" \"w \\<notin> language A\" \"v \\<in> gunodes A w\"\n    shows \"v \\<in> graph A w (rank A w v)\"", "lemma rank_removed:\n    assumes \"finite (nodes A)\" \"w \\<notin> language A\"\n    shows \"v \\<notin> graph A w (Suc (rank A w v))\"", "lemma rank_le:\n    assumes \"finite (nodes A)\" \"w \\<notin> language A\"\n    assumes \"v \\<in> gunodes A w\" \"u \\<in> gusuccessors A w v\"\n    shows \"rank A w u \\<le> rank A w v\"", "lemma language_ranking:\n    assumes \"finite (nodes A)\" \"w \\<notin> language A\"\n    shows \"ranking A w (rank A w)\"", "theorem language_ranking_iff:\n    assumes \"finite (nodes A)\"\n    shows \"w \\<notin> language A \\<longleftrightarrow> (\\<exists> f. ranking A w f)\""], "translations": [["", "lemma ranking_stuck:\n    assumes \"ranking A w f\"\n    assumes \"v \\<in> gunodes A w\" \"gurun A w r v\"\n    obtains n k\n    where \"smap f (gtrace (sdrop n r) (gtarget (stake n r) v)) = sconst k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n k.\n        smap f (gtrace (sdrop n r) (gtarget (stake n r) v)) =\n        sconst k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>n k.\n        smap f (gtrace (sdrop n r) (gtarget (stake n r) v)) =\n        sconst k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have 0: \"f u \\<le> f v\" if \"v \\<in> gunodes A w\" \"u \\<in> gusuccessors A w v\" for v u"], ["proof (prove)\ngoal (1 subgoal):\n 1. f u \\<le> f v", "using assms(1) that"], ["proof (prove)\nusing this:\n  ranking A w f\n  v \\<in> gunodes A w\n  u \\<in> gusuccessors A w v\n\ngoal (1 subgoal):\n 1. f u \\<le> f v", "unfolding ranking_def"], ["proof (prove)\nusing this:\n  (\\<forall>v\\<in>gunodes A w. f v \\<le> 2 * card (nodes A)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>u\\<in>gusuccessors A w v. f u \\<le> f v) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      gaccepting A v \\<longrightarrow> even (f v)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>r k.\n         gurun A w r v \\<longrightarrow>\n         smap f (gtrace r v) = sconst k \\<longrightarrow> odd k)\n  v \\<in> gunodes A w\n  u \\<in> gusuccessors A w v\n\ngoal (1 subgoal):\n 1. f u \\<le> f v", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?v \\<in> gunodes A w; ?u \\<in> gusuccessors A w ?v\\<rbrakk>\n  \\<Longrightarrow> f ?u \\<le> f ?v\n\ngoal (1 subgoal):\n 1. (\\<And>n k.\n        smap f (gtrace (sdrop n r) (gtarget (stake n r) v)) =\n        sconst k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have 1: \"shd (v ## gtrace r v) \\<in> gunodes A w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. shd (v ## gtrace r v) \\<in> gunodes A w", "using assms(2)"], ["proof (prove)\nusing this:\n  v \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. shd (v ## gtrace r v) \\<in> gunodes A w", "by auto"], ["proof (state)\nthis:\n  shd (v ## gtrace r v) \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. (\\<And>n k.\n        smap f (gtrace (sdrop n r) (gtarget (stake n r) v)) =\n        sconst k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have 2: \"sdescending (smap f (v ## gtrace r v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sdescending (smap f (v ## gtrace r v))", "using 1 assms(3)"], ["proof (prove)\nusing this:\n  shd (v ## gtrace r v) \\<in> gunodes A w\n  gurun A w r v\n\ngoal (1 subgoal):\n 1. sdescending (smap f (v ## gtrace r v))", "proof (coinduction arbitrary: r v rule: sdescending.coinduct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r v.\n       \\<lbrakk>shd (v ## gtrace r v) \\<in> gunodes A w;\n        gurun A w r v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b wa.\n                            smap f (v ## gtrace r v) = a ## b ## wa \\<and>\n                            b \\<le> a \\<and>\n                            ((\\<exists>r v.\n                                 b ## wa = smap f (v ## gtrace r v) \\<and>\n                                 shd (v ## gtrace r v)\n                                 \\<in> gunodes A w \\<and>\n                                 gurun A w r v) \\<or>\n                             sdescending (b ## wa))", "case sdescending"], ["proof (state)\nthis:\n  shd (v ## gtrace r v) \\<in> gunodes A w\n  gurun A w r v\n\ngoal (1 subgoal):\n 1. \\<And>r v.\n       \\<lbrakk>shd (v ## gtrace r v) \\<in> gunodes A w;\n        gurun A w r v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b wa.\n                            smap f (v ## gtrace r v) = a ## b ## wa \\<and>\n                            b \\<le> a \\<and>\n                            ((\\<exists>r v.\n                                 b ## wa = smap f (v ## gtrace r v) \\<and>\n                                 shd (v ## gtrace r v)\n                                 \\<in> gunodes A w \\<and>\n                                 gurun A w r v) \\<or>\n                             sdescending (b ## wa))", "obtain u s where 1: \"r = u ## s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u s. r = u ## s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using stream.exhaust"], ["proof (prove)\nusing this:\n  (\\<And>x1 x2. ?y = x1 ## x2 \\<Longrightarrow> ?P) \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>u s. r = u ## s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  r = u ## s\n\ngoal (1 subgoal):\n 1. \\<And>r v.\n       \\<lbrakk>shd (v ## gtrace r v) \\<in> gunodes A w;\n        gurun A w r v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b wa.\n                            smap f (v ## gtrace r v) = a ## b ## wa \\<and>\n                            b \\<le> a \\<and>\n                            ((\\<exists>r v.\n                                 b ## wa = smap f (v ## gtrace r v) \\<and>\n                                 shd (v ## gtrace r v)\n                                 \\<in> gunodes A w \\<and>\n                                 gurun A w r v) \\<or>\n                             sdescending (b ## wa))", "have 2: \"v \\<in> gunodes A w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> gunodes A w", "using sdescending(1)"], ["proof (prove)\nusing this:\n  shd (v ## gtrace r v) \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. v \\<in> gunodes A w", "by simp"], ["proof (state)\nthis:\n  v \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. \\<And>r v.\n       \\<lbrakk>shd (v ## gtrace r v) \\<in> gunodes A w;\n        gurun A w r v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b wa.\n                            smap f (v ## gtrace r v) = a ## b ## wa \\<and>\n                            b \\<le> a \\<and>\n                            ((\\<exists>r v.\n                                 b ## wa = smap f (v ## gtrace r v) \\<and>\n                                 shd (v ## gtrace r v)\n                                 \\<in> gunodes A w \\<and>\n                                 gurun A w r v) \\<or>\n                             sdescending (b ## wa))", "have 3: \"gurun A w (u ## s) v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gurun A w (u ## s) v", "using sdescending(2) 1"], ["proof (prove)\nusing this:\n  gurun A w r v\n  r = u ## s\n\ngoal (1 subgoal):\n 1. gurun A w (u ## s) v", "by auto"], ["proof (state)\nthis:\n  gurun A w (u ## s) v\n\ngoal (1 subgoal):\n 1. \\<And>r v.\n       \\<lbrakk>shd (v ## gtrace r v) \\<in> gunodes A w;\n        gurun A w r v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b wa.\n                            smap f (v ## gtrace r v) = a ## b ## wa \\<and>\n                            b \\<le> a \\<and>\n                            ((\\<exists>r v.\n                                 b ## wa = smap f (v ## gtrace r v) \\<and>\n                                 shd (v ## gtrace r v)\n                                 \\<in> gunodes A w \\<and>\n                                 gurun A w r v) \\<or>\n                             sdescending (b ## wa))", "have 4: \"u \\<in> gusuccessors A w v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> gusuccessors A w v", "using 3"], ["proof (prove)\nusing this:\n  gurun A w (u ## s) v\n\ngoal (1 subgoal):\n 1. u \\<in> gusuccessors A w v", "by auto"], ["proof (state)\nthis:\n  u \\<in> gusuccessors A w v\n\ngoal (1 subgoal):\n 1. \\<And>r v.\n       \\<lbrakk>shd (v ## gtrace r v) \\<in> gunodes A w;\n        gurun A w r v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b wa.\n                            smap f (v ## gtrace r v) = a ## b ## wa \\<and>\n                            b \\<le> a \\<and>\n                            ((\\<exists>r v.\n                                 b ## wa = smap f (v ## gtrace r v) \\<and>\n                                 shd (v ## gtrace r v)\n                                 \\<in> gunodes A w \\<and>\n                                 gurun A w r v) \\<or>\n                             sdescending (b ## wa))", "have 5: \"u \\<in> gureachable A w v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> gureachable A w v", "using graph.reachable_successors 4"], ["proof (prove)\nusing this:\n  gsuccessors ?A ?w ?V ?p \\<subseteq> greachable ?A ?w ?V ?p\n  u \\<in> gusuccessors A w v\n\ngoal (1 subgoal):\n 1. u \\<in> gureachable A w v", "by blast"], ["proof (state)\nthis:\n  u \\<in> gureachable A w v\n\ngoal (1 subgoal):\n 1. \\<And>r v.\n       \\<lbrakk>shd (v ## gtrace r v) \\<in> gunodes A w;\n        gurun A w r v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b wa.\n                            smap f (v ## gtrace r v) = a ## b ## wa \\<and>\n                            b \\<le> a \\<and>\n                            ((\\<exists>r v.\n                                 b ## wa = smap f (v ## gtrace r v) \\<and>\n                                 shd (v ## gtrace r v)\n                                 \\<in> gunodes A w \\<and>\n                                 gurun A w r v) \\<or>\n                             sdescending (b ## wa))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a b wa.\n       smap f (v ## gtrace r v) = a ## b ## wa \\<and>\n       b \\<le> a \\<and>\n       ((\\<exists>r v.\n            b ## wa = smap f (v ## gtrace r v) \\<and>\n            shd (v ## gtrace r v) \\<in> gunodes A w \\<and>\n            gurun A w r v) \\<or>\n        sdescending (b ## wa))", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a b wa.\n       smap f (v ## gtrace (u ## s) v) = a ## b ## wa \\<and>\n       b \\<le> a \\<and>\n       ((\\<exists>r v.\n            b ## wa = smap f (v ## gtrace r v) \\<and>\n            shd (v ## gtrace r v) \\<in> gunodes A w \\<and>\n            gurun A w r v) \\<or>\n        sdescending (b ## wa))", "proof (intro exI conjI disjI1)"], ["proof (state)\ngoal (5 subgoals):\n 1. smap f (v ## gtrace (u ## s) v) = ?a ## ?b1 ## ?w2\n 2. ?b1 \\<le> ?a\n 3. ?b1 ## ?w2 = smap f (?v7 ## gtrace ?r6 ?v7)\n 4. shd (?v7 ## gtrace ?r6 ?v7) \\<in> gunodes A w\n 5. gurun A w ?r6 ?v7", "show \"f u \\<le> f v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f u \\<le> f v", "using 0 2 4"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> gunodes A w; ?u \\<in> gusuccessors A w ?v\\<rbrakk>\n  \\<Longrightarrow> f ?u \\<le> f ?v\n  v \\<in> gunodes A w\n  u \\<in> gusuccessors A w v\n\ngoal (1 subgoal):\n 1. f u \\<le> f v", "by this"], ["proof (state)\nthis:\n  f u \\<le> f v\n\ngoal (4 subgoals):\n 1. smap f (v ## gtrace (u ## s) v) = f v ## f u ## ?w2\n 2. f u ## ?w2 = smap f (?v7 ## gtrace ?r6 ?v7)\n 3. shd (?v7 ## gtrace ?r6 ?v7) \\<in> gunodes A w\n 4. gurun A w ?r6 ?v7", "show \"shd (u ## gtrace s u) \\<in> gunodes A w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. shd (u ## gtrace s u) \\<in> gunodes A w", "using 2 5"], ["proof (prove)\nusing this:\n  v \\<in> gunodes A w\n  u \\<in> gureachable A w v\n\ngoal (1 subgoal):\n 1. shd (u ## gtrace s u) \\<in> gunodes A w", "by auto"], ["proof (state)\nthis:\n  shd (u ## gtrace s u) \\<in> gunodes A w\n\ngoal (3 subgoals):\n 1. smap f (v ## gtrace (u ## s) v) = f v ## f u ## ?w2\n 2. f u ## ?w2 = smap f (u ## gtrace s u)\n 3. gurun A w s u", "show \"gurun A w s u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gurun A w s u", "using 3"], ["proof (prove)\nusing this:\n  gurun A w (u ## s) v\n\ngoal (1 subgoal):\n 1. gurun A w s u", "by auto"], ["proof (state)\nthis:\n  gurun A w s u\n\ngoal (2 subgoals):\n 1. smap f (v ## gtrace (u ## s) v) = f v ## f u ## ?w2\n 2. f u ## ?w2 = smap f (u ## gtrace s u)", "qed auto"], ["proof (state)\nthis:\n  \\<exists>a b wa.\n     smap f (v ## gtrace r v) = a ## b ## wa \\<and>\n     b \\<le> a \\<and>\n     ((\\<exists>r v.\n          b ## wa = smap f (v ## gtrace r v) \\<and>\n          shd (v ## gtrace r v) \\<in> gunodes A w \\<and>\n          gurun A w r v) \\<or>\n      sdescending (b ## wa))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sdescending (smap f (v ## gtrace r v))\n\ngoal (1 subgoal):\n 1. (\\<And>n k.\n        smap f (gtrace (sdrop n r) (gtarget (stake n r) v)) =\n        sconst k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "obtain s k where 3: \"smap f (v ## gtrace r v) = s @- sconst k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s k.\n        smap f (v ## gtrace r v) = s @- sconst k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using sdescending_stuck[OF 2]"], ["proof (prove)\nusing this:\n  (\\<And>u a.\n      smap f (v ## gtrace r v) = u @- sconst a \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>s k.\n        smap f (v ## gtrace r v) = s @- sconst k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  smap f (v ## gtrace r v) = s @- sconst k\n\ngoal (1 subgoal):\n 1. (\\<And>n k.\n        smap f (gtrace (sdrop n r) (gtarget (stake n r) v)) =\n        sconst k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"gtrace (sdrop (Suc (length s)) r) (gtarget (stake (Suc (length s)) r) v) = sdrop (Suc (length s)) (gtrace r v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gtrace (sdrop (Suc (length s)) r)\n     (gtarget (stake (Suc (length s)) r) v) =\n    sdrop (Suc (length s)) (gtrace r v)", "using sscan_sdrop"], ["proof (prove)\nusing this:\n  sdrop ?k (sscan ?f ?xs ?a) =\n  sscan ?f (sdrop ?k ?xs) (fold ?f (stake ?k ?xs) ?a)\n\ngoal (1 subgoal):\n 1. gtrace (sdrop (Suc (length s)) r)\n     (gtarget (stake (Suc (length s)) r) v) =\n    sdrop (Suc (length s)) (gtrace r v)", "by rule"], ["proof (state)\nthis:\n  gtrace (sdrop (Suc (length s)) r) (gtarget (stake (Suc (length s)) r) v) =\n  sdrop (Suc (length s)) (gtrace r v)\n\ngoal (1 subgoal):\n 1. (\\<And>n k.\n        smap f (gtrace (sdrop n r) (gtarget (stake n r) v)) =\n        sconst k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  gtrace (sdrop (Suc (length s)) r) (gtarget (stake (Suc (length s)) r) v) =\n  sdrop (Suc (length s)) (gtrace r v)\n\ngoal (1 subgoal):\n 1. (\\<And>n k.\n        smap f (gtrace (sdrop n r) (gtarget (stake n r) v)) =\n        sconst k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"smap f \\<dots> = sdrop (length s) (smap f (v ## gtrace r v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smap f (sdrop (Suc (length s)) (gtrace r v)) =\n    sdrop (length s) (smap f (v ## gtrace r v))", "by (metis \"3\" id_apply sdrop_simps(2) sdrop_smap sdrop_stl shift_eq siterate.simps(2) stream.sel(2))"], ["proof (state)\nthis:\n  smap f (sdrop (Suc (length s)) (gtrace r v)) =\n  sdrop (length s) (smap f (v ## gtrace r v))\n\ngoal (1 subgoal):\n 1. (\\<And>n k.\n        smap f (gtrace (sdrop n r) (gtarget (stake n r) v)) =\n        sconst k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  smap f (sdrop (Suc (length s)) (gtrace r v)) =\n  sdrop (length s) (smap f (v ## gtrace r v))\n\ngoal (1 subgoal):\n 1. (\\<And>n k.\n        smap f (gtrace (sdrop n r) (gtarget (stake n r) v)) =\n        sconst k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"\\<dots> = sconst k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sdrop (length s) (smap f (v ## gtrace r v)) = sconst k", "unfolding 3"], ["proof (prove)\ngoal (1 subgoal):\n 1. sdrop (length s) (s @- sconst k) = sconst k", "using shift_eq"], ["proof (prove)\nusing this:\n  (?u @- ?v = ?w) =\n  (?u = stake (length ?u) ?w \\<and> ?v = sdrop (length ?u) ?w)\n\ngoal (1 subgoal):\n 1. sdrop (length s) (s @- sconst k) = sconst k", "by metis"], ["proof (state)\nthis:\n  sdrop (length s) (smap f (v ## gtrace r v)) = sconst k\n\ngoal (1 subgoal):\n 1. (\\<And>n k.\n        smap f (gtrace (sdrop n r) (gtarget (stake n r) v)) =\n        sconst k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  smap f\n   (gtrace (sdrop (Suc (length s)) r)\n     (gtarget (stake (Suc (length s)) r) v)) =\n  sconst k", "show ?thesis"], ["proof (prove)\nusing this:\n  smap f\n   (gtrace (sdrop (Suc (length s)) r)\n     (gtarget (stake (Suc (length s)) r) v)) =\n  sconst k\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  smap f\n   (gtrace (sdrop (Suc (length s)) r)\n     (gtarget (stake (Suc (length s)) r) v)) =\n  sconst k\n  smap f (gtrace (sdrop ?n r) (gtarget (stake ?n r) v)) =\n  sconst ?k \\<Longrightarrow>\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ranking_stuck_odd:\n    assumes \"ranking A w f\"\n    assumes \"v \\<in> gunodes A w\" \"gurun A w r v\"\n    obtains n\n    where \"Ball (sset (smap f (gtrace (sdrop n r) (gtarget (stake n r) v)))) odd\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<forall>a\\<in>sset\n                        (smap f\n                          (gtrace (sdrop n r) (gtarget (stake n r) v))).\n           odd a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<forall>a\\<in>sset\n                        (smap f\n                          (gtrace (sdrop n r) (gtarget (stake n r) v))).\n           odd a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "obtain n k where 1: \"smap f (gtrace (sdrop n r) (gtarget (stake n r) v)) = sconst k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n k.\n        smap f (gtrace (sdrop n r) (gtarget (stake n r) v)) =\n        sconst k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using ranking_stuck assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>ranking ?A ?w ?f; ?v \\<in> gunodes ?A ?w; gurun ?A ?w ?r ?v;\n   \\<And>n k.\n      smap ?f (gtrace (sdrop n ?r) (gtarget (stake n ?r) ?v)) =\n      sconst k \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  ranking A w f\n  v \\<in> gunodes A w\n  gurun A w r v\n\ngoal (1 subgoal):\n 1. (\\<And>n k.\n        smap f (gtrace (sdrop n r) (gtarget (stake n r) v)) =\n        sconst k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by this"], ["proof (state)\nthis:\n  smap f (gtrace (sdrop n r) (gtarget (stake n r) v)) = sconst k\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<forall>a\\<in>sset\n                        (smap f\n                          (gtrace (sdrop n r) (gtarget (stake n r) v))).\n           odd a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have 2: \"gtarget (stake n r) v \\<in> gunodes A w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gtarget (stake n r) v \\<in> gunodes A w", "using assms(2, 3)"], ["proof (prove)\nusing this:\n  v \\<in> gunodes A w\n  gurun A w r v\n\ngoal (1 subgoal):\n 1. gtarget (stake n r) v \\<in> gunodes A w", "by (simp add: graph.nodes_target graph.run_stake)"], ["proof (state)\nthis:\n  gtarget (stake n r) v \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<forall>a\\<in>sset\n                        (smap f\n                          (gtrace (sdrop n r) (gtarget (stake n r) v))).\n           odd a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have 3: \"gurun A w (sdrop n r) (gtarget (stake n r) v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gurun A w (sdrop n r) (gtarget (stake n r) v)", "using assms(2, 3)"], ["proof (prove)\nusing this:\n  v \\<in> gunodes A w\n  gurun A w r v\n\ngoal (1 subgoal):\n 1. gurun A w (sdrop n r) (gtarget (stake n r) v)", "by (simp add: graph.run_sdrop)"], ["proof (state)\nthis:\n  gurun A w (sdrop n r) (gtarget (stake n r) v)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<forall>a\\<in>sset\n                        (smap f\n                          (gtrace (sdrop n r) (gtarget (stake n r) v))).\n           odd a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have 4: \"odd k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. odd k", "using 1 2 3 assms(1)"], ["proof (prove)\nusing this:\n  smap f (gtrace (sdrop n r) (gtarget (stake n r) v)) = sconst k\n  gtarget (stake n r) v \\<in> gunodes A w\n  gurun A w (sdrop n r) (gtarget (stake n r) v)\n  ranking A w f\n\ngoal (1 subgoal):\n 1. odd k", "unfolding ranking_def"], ["proof (prove)\nusing this:\n  smap f (gtrace (sdrop n r) (gtarget (stake n r) v)) = sconst k\n  gtarget (stake n r) v \\<in> gunodes A w\n  gurun A w (sdrop n r) (gtarget (stake n r) v)\n  (\\<forall>v\\<in>gunodes A w. f v \\<le> 2 * card (nodes A)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>u\\<in>gusuccessors A w v. f u \\<le> f v) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      gaccepting A v \\<longrightarrow> even (f v)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>r k.\n         gurun A w r v \\<longrightarrow>\n         smap f (gtrace r v) = sconst k \\<longrightarrow> odd k)\n\ngoal (1 subgoal):\n 1. odd k", "by meson"], ["proof (state)\nthis:\n  odd k\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<forall>a\\<in>sset\n                        (smap f\n                          (gtrace (sdrop n r) (gtarget (stake n r) v))).\n           odd a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have 5: \"Ball (sset (smap f (gtrace (sdrop n r) (gtarget (stake n r) v)))) odd\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>sset\n                    (smap f (gtrace (sdrop n r) (gtarget (stake n r) v))).\n       odd a", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>sset (sconst k). odd a", "using 4"], ["proof (prove)\nusing this:\n  odd k\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>sset (sconst k). odd a", "by simp"], ["proof (state)\nthis:\n  \\<forall>a\\<in>sset (smap f (gtrace (sdrop n r) (gtarget (stake n r) v))).\n     odd a\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<forall>a\\<in>sset\n                        (smap f\n                          (gtrace (sdrop n r) (gtarget (stake n r) v))).\n           odd a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using that 5"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>sset\n                  (smap f (gtrace (sdrop ?n r) (gtarget (stake ?n r) v))).\n     odd a \\<Longrightarrow>\n  thesis\n  \\<forall>a\\<in>sset (smap f (gtrace (sdrop n r) (gtarget (stake n r) v))).\n     odd a\n\ngoal (1 subgoal):\n 1. thesis", "by this"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ranking_language:\n    assumes \"ranking A w f\"\n    shows \"w \\<notin> language A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<notin> language A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "assume 1: \"w \\<in> language A\""], ["proof (state)\nthis:\n  w \\<in> language A\n\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "obtain r p where 2: \"run A (w ||| r) p\" \"p \\<in> initial A\" \"infs (accepting A) (p ## r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r p.\n        \\<lbrakk>run A (w ||| r) p; p \\<in> initial A;\n         infs (accepting A) (p ## r)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 1"], ["proof (prove)\nusing this:\n  w \\<in> language A\n\ngoal (1 subgoal):\n 1. (\\<And>r p.\n        \\<lbrakk>run A (w ||| r) p; p \\<in> initial A;\n         infs (accepting A) (p ## r)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by rule"], ["proof (state)\nthis:\n  run A (w ||| r) p\n  p \\<in> initial A\n  infs (accepting A) (p ## r)\n\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "let ?r = \"fromN 1 ||| r\""], ["proof (state)\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "let ?v = \"(0, p)\""], ["proof (state)\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "have 3: \"?v \\<in> gunodes A w\" \"gurun A w ?r ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0, p) \\<in> gunodes A w &&& gurun A w (fromN 1 ||| r) (0, p)", "using 2(1, 2)"], ["proof (prove)\nusing this:\n  run A (w ||| r) p\n  p \\<in> initial A\n\ngoal (1 subgoal):\n 1. (0, p) \\<in> gunodes A w &&& gurun A w (fromN 1 ||| r) (0, p)", "by (auto intro: run_grun)"], ["proof (state)\nthis:\n  (0, p) \\<in> gunodes A w\n  gurun A w (fromN 1 ||| r) (0, p)\n\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "obtain n where 4: \"Ball (sset (smap f (gtrace (sdrop n ?r) (gtarget (stake n ?r) ?v)))) odd\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<forall>a\\<in>sset\n                        (smap f\n                          (gtrace (sdrop n (fromN 1 ||| r))\n                            (gtarget (stake n (fromN 1 ||| r)) (0, p)))).\n           odd a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using ranking_stuck_odd assms 3"], ["proof (prove)\nusing this:\n  \\<lbrakk>ranking ?A ?w ?f; ?v \\<in> gunodes ?A ?w; gurun ?A ?w ?r ?v;\n   \\<And>n.\n      \\<forall>a\\<in>sset\n                      (smap ?f\n                        (gtrace (sdrop n ?r) (gtarget (stake n ?r) ?v))).\n         odd a \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  ranking A w f\n  (0, p) \\<in> gunodes A w\n  gurun A w (fromN 1 ||| r) (0, p)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<forall>a\\<in>sset\n                        (smap f\n                          (gtrace (sdrop n (fromN 1 ||| r))\n                            (gtarget (stake n (fromN 1 ||| r)) (0, p)))).\n           odd a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by this"], ["proof (state)\nthis:\n  \\<forall>a\\<in>sset\n                  (smap f\n                    (gtrace (sdrop n (fromN 1 ||| r))\n                      (gtarget (stake n (fromN 1 ||| r)) (0, p)))).\n     odd a\n\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "let ?s = \"stake n ?r\""], ["proof (state)\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "let ?t = \"sdrop n ?r\""], ["proof (state)\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "let ?u = \"gtarget ?s ?v\""], ["proof (state)\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "have \"sset (gtrace ?t ?u) \\<subseteq> gureachable A w ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sset\n     (gtrace (sdrop n (fromN 1 ||| r))\n       (gtarget (stake n (fromN 1 ||| r)) (0, p)))\n    \\<subseteq> gureachable A w (0, p)", "proof (intro graph.reachable_trace graph.reachable_target graph.reachable.reflexive)"], ["proof (state)\ngoal (2 subgoals):\n 1. gupath A w (stake n (fromN 1 ||| r)) (0, p)\n 2. gurun A w (sdrop n (fromN 1 ||| r))\n     (gtarget (stake n (fromN 1 ||| r)) (0, p))", "show \"gupath A w ?s ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gupath A w (stake n (fromN 1 ||| r)) (0, p)", "using graph.run_stake 3(2)"], ["proof (prove)\nusing this:\n  grun ?A ?w ?V ?r ?p \\<Longrightarrow> gpath ?A ?w ?V (stake ?k ?r) ?p\n  gurun A w (fromN 1 ||| r) (0, p)\n\ngoal (1 subgoal):\n 1. gupath A w (stake n (fromN 1 ||| r)) (0, p)", "by this"], ["proof (state)\nthis:\n  gupath A w (stake n (fromN 1 ||| r)) (0, p)\n\ngoal (1 subgoal):\n 1. gurun A w (sdrop n (fromN 1 ||| r))\n     (gtarget (stake n (fromN 1 ||| r)) (0, p))", "show \"gurun A w ?t ?u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gurun A w (sdrop n (fromN 1 ||| r))\n     (gtarget (stake n (fromN 1 ||| r)) (0, p))", "using graph.run_sdrop 3(2)"], ["proof (prove)\nusing this:\n  grun ?A ?w ?V ?r ?p \\<Longrightarrow>\n  grun ?A ?w ?V (sdrop ?k ?r) (gtarget (stake ?k ?r) ?p)\n  gurun A w (fromN 1 ||| r) (0, p)\n\ngoal (1 subgoal):\n 1. gurun A w (sdrop n (fromN 1 ||| r))\n     (gtarget (stake n (fromN 1 ||| r)) (0, p))", "by this"], ["proof (state)\nthis:\n  gurun A w (sdrop n (fromN 1 ||| r))\n   (gtarget (stake n (fromN 1 ||| r)) (0, p))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sset\n   (gtrace (sdrop n (fromN 1 ||| r))\n     (gtarget (stake n (fromN 1 ||| r)) (0, p)))\n  \\<subseteq> gureachable A w (0, p)\n\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  sset\n   (gtrace (sdrop n (fromN 1 ||| r))\n     (gtarget (stake n (fromN 1 ||| r)) (0, p)))\n  \\<subseteq> gureachable A w (0, p)\n\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "have \"\\<dots> \\<subseteq> gunodes A w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gureachable A w (0, p) \\<subseteq> gunodes A w", "using 3(1)"], ["proof (prove)\nusing this:\n  (0, p) \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. gureachable A w (0, p) \\<subseteq> gunodes A w", "by blast"], ["proof (state)\nthis:\n  gureachable A w (0, p) \\<subseteq> gunodes A w\n\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  sset\n   (gtrace (sdrop n (fromN 1 ||| r))\n     (gtarget (stake n (fromN 1 ||| r)) (0, p)))\n  \\<subseteq> gunodes A w", "have 7: \"sset (gtrace ?t ?u) \\<subseteq> gunodes A w\""], ["proof (prove)\nusing this:\n  sset\n   (gtrace (sdrop n (fromN 1 ||| r))\n     (gtarget (stake n (fromN 1 ||| r)) (0, p)))\n  \\<subseteq> gunodes A w\n\ngoal (1 subgoal):\n 1. sset\n     (gtrace (sdrop n (fromN 1 ||| r))\n       (gtarget (stake n (fromN 1 ||| r)) (0, p)))\n    \\<subseteq> gunodes A w", "by this"], ["proof (state)\nthis:\n  sset\n   (gtrace (sdrop n (fromN 1 ||| r))\n     (gtarget (stake n (fromN 1 ||| r)) (0, p)))\n  \\<subseteq> gunodes A w\n\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "have 8: \"\\<And> p. p \\<in> gunodes A w \\<Longrightarrow> gaccepting A p \\<Longrightarrow> even (f p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> gunodes A w; gaccepting A p\\<rbrakk>\n       \\<Longrightarrow> even (f p)", "using assms"], ["proof (prove)\nusing this:\n  ranking A w f\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> gunodes A w; gaccepting A p\\<rbrakk>\n       \\<Longrightarrow> even (f p)", "unfolding ranking_def"], ["proof (prove)\nusing this:\n  (\\<forall>v\\<in>gunodes A w. f v \\<le> 2 * card (nodes A)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>u\\<in>gusuccessors A w v. f u \\<le> f v) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      gaccepting A v \\<longrightarrow> even (f v)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>r k.\n         gurun A w r v \\<longrightarrow>\n         smap f (gtrace r v) = sconst k \\<longrightarrow> odd k)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> gunodes A w; gaccepting A p\\<rbrakk>\n       \\<Longrightarrow> even (f p)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?p1 \\<in> gunodes A w; gaccepting A ?p1\\<rbrakk>\n  \\<Longrightarrow> even (f ?p1)\n\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "have 9: \"\\<And> p. p \\<in> sset (gtrace ?t ?u) \\<Longrightarrow> gaccepting A p \\<Longrightarrow> even (f p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pa.\n       \\<lbrakk>pa \\<in> sset\n                          (gtrace (sdrop n (fromN 1 ||| r))\n                            (gtarget (stake n (fromN 1 ||| r)) (0, p)));\n        gaccepting A pa\\<rbrakk>\n       \\<Longrightarrow> even (f pa)", "using 7 8"], ["proof (prove)\nusing this:\n  sset\n   (gtrace (sdrop n (fromN 1 ||| r))\n     (gtarget (stake n (fromN 1 ||| r)) (0, p)))\n  \\<subseteq> gunodes A w\n  \\<lbrakk>?p1 \\<in> gunodes A w; gaccepting A ?p1\\<rbrakk>\n  \\<Longrightarrow> even (f ?p1)\n\ngoal (1 subgoal):\n 1. \\<And>pa.\n       \\<lbrakk>pa \\<in> sset\n                          (gtrace (sdrop n (fromN 1 ||| r))\n                            (gtarget (stake n (fromN 1 ||| r)) (0, p)));\n        gaccepting A pa\\<rbrakk>\n       \\<Longrightarrow> even (f pa)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?p1\n           \\<in> sset\n                  (gtrace (sdrop n (fromN 1 ||| r))\n                    (gtarget (stake n (fromN 1 ||| r)) (0, p)));\n   gaccepting A ?p1\\<rbrakk>\n  \\<Longrightarrow> even (f ?p1)\n\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "have 19: \"infs (accepting A) (smap snd ?r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infs (accepting A) (smap snd (fromN 1 ||| r))", "using 2(3)"], ["proof (prove)\nusing this:\n  infs (accepting A) (p ## r)\n\ngoal (1 subgoal):\n 1. infs (accepting A) (smap snd (fromN 1 ||| r))", "by simp"], ["proof (state)\nthis:\n  infs (accepting A) (smap snd (fromN 1 ||| r))\n\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "have 18: \"infs (gaccepting A) ?r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infs (gaccepting A) (fromN 1 ||| r)", "using 19"], ["proof (prove)\nusing this:\n  infs (accepting A) (smap snd (fromN 1 ||| r))\n\ngoal (1 subgoal):\n 1. infs (gaccepting A) (fromN 1 ||| r)", "by simp"], ["proof (state)\nthis:\n  infs (gaccepting A) (fromN 1 ||| r)\n\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "have 17: \"infs (gaccepting A) (gtrace ?r ?v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infs (gaccepting A) (gtrace (fromN 1 ||| r) (0, p))", "using 18"], ["proof (prove)\nusing this:\n  infs (gaccepting A) (fromN 1 ||| r)\n\ngoal (1 subgoal):\n 1. infs (gaccepting A) (gtrace (fromN 1 ||| r) (0, p))", "unfolding gtrace_alt_def"], ["proof (prove)\nusing this:\n  infs (gaccepting A) (fromN 1 ||| r)\n\ngoal (1 subgoal):\n 1. infs (gaccepting A) (fromN 1 ||| r)", "by this"], ["proof (state)\nthis:\n  infs (gaccepting A) (gtrace (fromN 1 ||| r) (0, p))\n\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "have 16: \"infs (gaccepting A) (gtrace (?s @- ?t) ?v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infs (gaccepting A)\n     (gtrace (stake n (fromN 1 ||| r) @- sdrop n (fromN 1 ||| r)) (0, p))", "using 17"], ["proof (prove)\nusing this:\n  infs (gaccepting A) (gtrace (fromN 1 ||| r) (0, p))\n\ngoal (1 subgoal):\n 1. infs (gaccepting A)\n     (gtrace (stake n (fromN 1 ||| r) @- sdrop n (fromN 1 ||| r)) (0, p))", "unfolding stake_sdrop"], ["proof (prove)\nusing this:\n  infs (gaccepting A) (gtrace (fromN 1 ||| r) (0, p))\n\ngoal (1 subgoal):\n 1. infs (gaccepting A) (gtrace (fromN 1 ||| r) (0, p))", "by this"], ["proof (state)\nthis:\n  infs (gaccepting A)\n   (gtrace (stake n (fromN 1 ||| r) @- sdrop n (fromN 1 ||| r)) (0, p))\n\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "have 15: \"infs (gaccepting A) (gtrace ?t ?u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infs (gaccepting A)\n     (gtrace (sdrop n (fromN 1 ||| r))\n       (gtarget (stake n (fromN 1 ||| r)) (0, p)))", "using 16"], ["proof (prove)\nusing this:\n  infs (gaccepting A)\n   (gtrace (stake n (fromN 1 ||| r) @- sdrop n (fromN 1 ||| r)) (0, p))\n\ngoal (1 subgoal):\n 1. infs (gaccepting A)\n     (gtrace (sdrop n (fromN 1 ||| r))\n       (gtarget (stake n (fromN 1 ||| r)) (0, p)))", "by simp"], ["proof (state)\nthis:\n  infs (gaccepting A)\n   (gtrace (sdrop n (fromN 1 ||| r))\n     (gtarget (stake n (fromN 1 ||| r)) (0, p)))\n\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "have 13: \"infs (even \\<circ> f) (gtrace ?t ?u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infs (even \\<circ> f)\n     (gtrace (sdrop n (fromN 1 ||| r))\n       (gtarget (stake n (fromN 1 ||| r)) (0, p)))", "using infs_mono[OF _ 15] 9"], ["proof (prove)\nusing this:\n  (\\<And>a.\n      \\<lbrakk>a \\<in> sset\n                        (gtrace (sdrop n (fromN 1 ||| r))\n                          (gtarget (stake n (fromN 1 ||| r)) (0, p)));\n       gaccepting A a\\<rbrakk>\n      \\<Longrightarrow> ?Q a) \\<Longrightarrow>\n  infs ?Q\n   (gtrace (sdrop n (fromN 1 ||| r))\n     (gtarget (stake n (fromN 1 ||| r)) (0, p)))\n  \\<lbrakk>?p1\n           \\<in> sset\n                  (gtrace (sdrop n (fromN 1 ||| r))\n                    (gtarget (stake n (fromN 1 ||| r)) (0, p)));\n   gaccepting A ?p1\\<rbrakk>\n  \\<Longrightarrow> even (f ?p1)\n\ngoal (1 subgoal):\n 1. infs (even \\<circ> f)\n     (gtrace (sdrop n (fromN 1 ||| r))\n       (gtarget (stake n (fromN 1 ||| r)) (0, p)))", "by simp"], ["proof (state)\nthis:\n  infs (even \\<circ> f)\n   (gtrace (sdrop n (fromN 1 ||| r))\n     (gtarget (stake n (fromN 1 ||| r)) (0, p)))\n\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "have 12: \"infs even (smap f (gtrace ?t ?u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infs even\n     (smap f\n       (gtrace (sdrop n (fromN 1 ||| r))\n         (gtarget (stake n (fromN 1 ||| r)) (0, p))))", "using 13"], ["proof (prove)\nusing this:\n  infs (even \\<circ> f)\n   (gtrace (sdrop n (fromN 1 ||| r))\n     (gtarget (stake n (fromN 1 ||| r)) (0, p)))\n\ngoal (1 subgoal):\n 1. infs even\n     (smap f\n       (gtrace (sdrop n (fromN 1 ||| r))\n         (gtarget (stake n (fromN 1 ||| r)) (0, p))))", "by (simp add: comp_def)"], ["proof (state)\nthis:\n  infs even\n   (smap f\n     (gtrace (sdrop n (fromN 1 ||| r))\n       (gtarget (stake n (fromN 1 ||| r)) (0, p))))\n\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "have 11: \"Bex (sset (smap f (gtrace ?t ?u))) even\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Bex (sset\n          (smap f\n            (gtrace (sdrop n (fromN 1 ||| r))\n              (gtarget (stake n (fromN 1 ||| r)) (0, p)))))\n     even", "using 12 infs_any"], ["proof (prove)\nusing this:\n  infs even\n   (smap f\n     (gtrace (sdrop n (fromN 1 ||| r))\n       (gtarget (stake n (fromN 1 ||| r)) (0, p))))\n  infs ?P ?w \\<Longrightarrow> Bex (sset ?w) ?P\n\ngoal (1 subgoal):\n 1. Bex (sset\n          (smap f\n            (gtrace (sdrop n (fromN 1 ||| r))\n              (gtarget (stake n (fromN 1 ||| r)) (0, p)))))\n     even", "by metis"], ["proof (state)\nthis:\n  Bex (sset\n        (smap f\n          (gtrace (sdrop n (fromN 1 ||| r))\n            (gtarget (stake n (fromN 1 ||| r)) (0, p)))))\n   even\n\ngoal (1 subgoal):\n 1. w \\<in> language A \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using 4 11"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>sset\n                  (smap f\n                    (gtrace (sdrop n (fromN 1 ||| r))\n                      (gtarget (stake n (fromN 1 ||| r)) (0, p)))).\n     odd a\n  Bex (sset\n        (smap f\n          (gtrace (sdrop n (fromN 1 ||| r))\n            (gtarget (stake n (fromN 1 ||| r)) (0, p)))))\n   even\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Word not in Language Implies Ranking\\<close>"], ["", "subsubsection \\<open>Removal of Endangered Nodes\\<close>"], ["", "definition clean :: \"('label, 'state) nba \\<Rightarrow> 'label stream \\<Rightarrow> 'state node set \\<Rightarrow> 'state node set\" where\n    \"clean A w V \\<equiv> {v \\<in> V. infinite (greachable A w V v)}\""], ["", "lemma clean_decreasing: \"clean A w V \\<subseteq> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. clean A w V \\<subseteq> V", "unfolding clean_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {v \\<in> V. infinite (greachable A w V v)} \\<subseteq> V", "by auto"], ["", "lemma clean_successors:\n    assumes \"v \\<in> V\" \"u \\<in> gusuccessors A w v\"\n    shows \"u \\<in> clean A w V \\<Longrightarrow> v \\<in> clean A w V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> clean A w V \\<Longrightarrow> v \\<in> clean A w V", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<in> clean A w V \\<Longrightarrow> v \\<in> clean A w V", "assume 1: \"u \\<in> clean A w V\""], ["proof (state)\nthis:\n  u \\<in> clean A w V\n\ngoal (1 subgoal):\n 1. u \\<in> clean A w V \\<Longrightarrow> v \\<in> clean A w V", "have 2: \"u \\<in> V\" \"infinite (greachable A w V u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> V &&& infinite (greachable A w V u)", "using 1"], ["proof (prove)\nusing this:\n  u \\<in> clean A w V\n\ngoal (1 subgoal):\n 1. u \\<in> V &&& infinite (greachable A w V u)", "unfolding clean_def"], ["proof (prove)\nusing this:\n  u \\<in> {v \\<in> V. infinite (greachable A w V v)}\n\ngoal (1 subgoal):\n 1. u \\<in> V &&& infinite (greachable A w V u)", "by auto"], ["proof (state)\nthis:\n  u \\<in> V\n  infinite (greachable A w V u)\n\ngoal (1 subgoal):\n 1. u \\<in> clean A w V \\<Longrightarrow> v \\<in> clean A w V", "have 3: \"u \\<in> greachable A w V v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> greachable A w V v", "using graph.reachable.execute assms(2) 2(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?q \\<in> greachable ?A ?w ?V ?p;\n   case ?q of\n   (k, p) \\<Rightarrow>\n     ?w !! k \\<in> alphabet ?A \\<and>\n     ?a \\<in> {Suc k} \\<times> transition ?A (?w !! k) p \\<inter>\n              ?V\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> greachable ?A ?w ?V ?p\n  u \\<in> gusuccessors A w v\n  u \\<in> V\n\ngoal (1 subgoal):\n 1. u \\<in> greachable A w V v", "by blast"], ["proof (state)\nthis:\n  u \\<in> greachable A w V v\n\ngoal (1 subgoal):\n 1. u \\<in> clean A w V \\<Longrightarrow> v \\<in> clean A w V", "have 4: \"greachable A w V u \\<subseteq> greachable A w V v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. greachable A w V u \\<subseteq> greachable A w V v", "using 3"], ["proof (prove)\nusing this:\n  u \\<in> greachable A w V v\n\ngoal (1 subgoal):\n 1. greachable A w V u \\<subseteq> greachable A w V v", "by blast"], ["proof (state)\nthis:\n  greachable A w V u \\<subseteq> greachable A w V v\n\ngoal (1 subgoal):\n 1. u \\<in> clean A w V \\<Longrightarrow> v \\<in> clean A w V", "have 5: \"infinite (greachable A w V v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite (greachable A w V v)", "using 2(2) 4"], ["proof (prove)\nusing this:\n  infinite (greachable A w V u)\n  greachable A w V u \\<subseteq> greachable A w V v\n\ngoal (1 subgoal):\n 1. infinite (greachable A w V v)", "by (simp add: infinite_super)"], ["proof (state)\nthis:\n  infinite (greachable A w V v)\n\ngoal (1 subgoal):\n 1. u \\<in> clean A w V \\<Longrightarrow> v \\<in> clean A w V", "show \"v \\<in> clean A w V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> clean A w V", "unfolding clean_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> {v \\<in> V. infinite (greachable A w V v)}", "using assms(1) 5"], ["proof (prove)\nusing this:\n  v \\<in> V\n  infinite (greachable A w V v)\n\ngoal (1 subgoal):\n 1. v \\<in> {v \\<in> V. infinite (greachable A w V v)}", "by simp"], ["proof (state)\nthis:\n  v \\<in> clean A w V\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Removal of Safe Nodes\\<close>"], ["", "definition prune :: \"('label, 'state) nba \\<Rightarrow> 'label stream \\<Rightarrow> 'state node set \\<Rightarrow> 'state node set\" where\n    \"prune A w V \\<equiv> {v \\<in> V. \\<exists> u \\<in> greachable A w V v. gaccepting A u}\""], ["", "lemma prune_decreasing: \"prune A w V \\<subseteq> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prune A w V \\<subseteq> V", "unfolding prune_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {v \\<in> V. Bex (greachable A w V v) (gaccepting A)} \\<subseteq> V", "by auto"], ["", "lemma prune_successors:\n    assumes \"v \\<in> V\" \"u \\<in> gusuccessors A w v\"\n    shows \"u \\<in> prune A w V \\<Longrightarrow> v \\<in> prune A w V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> prune A w V \\<Longrightarrow> v \\<in> prune A w V", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<in> prune A w V \\<Longrightarrow> v \\<in> prune A w V", "assume 1: \"u \\<in> prune A w V\""], ["proof (state)\nthis:\n  u \\<in> prune A w V\n\ngoal (1 subgoal):\n 1. u \\<in> prune A w V \\<Longrightarrow> v \\<in> prune A w V", "have 2: \"u \\<in> V\" \"\\<exists> x \\<in> greachable A w V u. gaccepting A x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> V &&& Bex (greachable A w V u) (gaccepting A)", "using 1"], ["proof (prove)\nusing this:\n  u \\<in> prune A w V\n\ngoal (1 subgoal):\n 1. u \\<in> V &&& Bex (greachable A w V u) (gaccepting A)", "unfolding prune_def"], ["proof (prove)\nusing this:\n  u \\<in> {v \\<in> V. Bex (greachable A w V v) (gaccepting A)}\n\ngoal (1 subgoal):\n 1. u \\<in> V &&& Bex (greachable A w V u) (gaccepting A)", "by auto"], ["proof (state)\nthis:\n  u \\<in> V\n  Bex (greachable A w V u) (gaccepting A)\n\ngoal (1 subgoal):\n 1. u \\<in> prune A w V \\<Longrightarrow> v \\<in> prune A w V", "have 3: \"u \\<in> greachable A w V v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> greachable A w V v", "using graph.reachable.execute assms(2) 2(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?q \\<in> greachable ?A ?w ?V ?p;\n   case ?q of\n   (k, p) \\<Rightarrow>\n     ?w !! k \\<in> alphabet ?A \\<and>\n     ?a \\<in> {Suc k} \\<times> transition ?A (?w !! k) p \\<inter>\n              ?V\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> greachable ?A ?w ?V ?p\n  u \\<in> gusuccessors A w v\n  u \\<in> V\n\ngoal (1 subgoal):\n 1. u \\<in> greachable A w V v", "by blast"], ["proof (state)\nthis:\n  u \\<in> greachable A w V v\n\ngoal (1 subgoal):\n 1. u \\<in> prune A w V \\<Longrightarrow> v \\<in> prune A w V", "have 4: \"greachable A w V u \\<subseteq> greachable A w V v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. greachable A w V u \\<subseteq> greachable A w V v", "using 3"], ["proof (prove)\nusing this:\n  u \\<in> greachable A w V v\n\ngoal (1 subgoal):\n 1. greachable A w V u \\<subseteq> greachable A w V v", "by blast"], ["proof (state)\nthis:\n  greachable A w V u \\<subseteq> greachable A w V v\n\ngoal (1 subgoal):\n 1. u \\<in> prune A w V \\<Longrightarrow> v \\<in> prune A w V", "show \"v \\<in> prune A w V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> prune A w V", "unfolding prune_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> {v \\<in> V. Bex (greachable A w V v) (gaccepting A)}", "using assms(1) 2(2) 4"], ["proof (prove)\nusing this:\n  v \\<in> V\n  Bex (greachable A w V u) (gaccepting A)\n  greachable A w V u \\<subseteq> greachable A w V v\n\ngoal (1 subgoal):\n 1. v \\<in> {v \\<in> V. Bex (greachable A w V v) (gaccepting A)}", "by auto"], ["proof (state)\nthis:\n  v \\<in> prune A w V\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Run Graph Interation\\<close>"], ["", "definition graph :: \"('label, 'state) nba \\<Rightarrow> 'label stream \\<Rightarrow> nat \\<Rightarrow> 'state node set\" where\n    \"graph A w k \\<equiv> alternate (clean A w) (prune A w) k (gunodes A w)\""], ["", "abbreviation \"level A w k l \\<equiv> {v \\<in> graph A w k. fst v = l}\""], ["", "lemma graph_0[simp]: \"graph A w 0 = gunodes A w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. graph A w 0 = gunodes A w", "unfolding graph_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. alternate (clean A w) (prune A w) 0 (gunodes A w) = gunodes A w", "by simp"], ["", "lemma graph_Suc[simp]: \"graph A w (Suc k) = (if even k then clean A w else prune A w) (graph A w k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. graph A w (Suc k) =\n    (if even k then clean A w else prune A w) (graph A w k)", "unfolding graph_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. alternate (clean A w) (prune A w) (Suc k) (gunodes A w) =\n    (if even k then clean A w else prune A w)\n     (alternate (clean A w) (prune A w) k (gunodes A w))", "by simp"], ["", "lemma graph_antimono: \"antimono (graph A w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. decseq (graph A w)", "using alternate_antimono clean_decreasing prune_decreasing"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x. ?f x \\<le> x; \\<And>x. ?g x \\<le> x\\<rbrakk>\n  \\<Longrightarrow> decseq (alternate ?f ?g)\n  clean ?A ?w ?V \\<subseteq> ?V\n  prune ?A ?w ?V \\<subseteq> ?V\n\ngoal (1 subgoal):\n 1. decseq (graph A w)", "unfolding antimono_def le_fun_def graph_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x. ?f x \\<le> x; \\<And>x. ?g x \\<le> x\\<rbrakk>\n  \\<Longrightarrow> \\<forall>x y.\n                       x \\<le> y \\<longrightarrow>\n                       (\\<forall>xa.\n                           alternate ?f ?g y xa \\<le> alternate ?f ?g x xa)\n  clean ?A ?w ?V \\<subseteq> ?V\n  prune ?A ?w ?V \\<subseteq> ?V\n\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       x \\<le> y \\<longrightarrow>\n       alternate (clean A w) (prune A w) y (gunodes A w)\n       \\<subseteq> alternate (clean A w) (prune A w) x (gunodes A w)", "by metis"], ["", "lemma graph_nodes: \"graph A w k \\<subseteq> gunodes A w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. graph A w k \\<subseteq> gunodes A w", "using graph_0 graph_antimono le0 antimonoD"], ["proof (prove)\nusing this:\n  graph ?A ?w 0 = gunodes ?A ?w\n  decseq (graph ?A ?w)\n  0 \\<le> ?n\n  \\<lbrakk>antimono ?f; ?x \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> ?f ?y \\<le> ?f ?x\n\ngoal (1 subgoal):\n 1. graph A w k \\<subseteq> gunodes A w", "by metis"], ["", "lemma graph_successors:\n    assumes \"v \\<in> gunodes A w\" \"u \\<in> gusuccessors A w v\"\n    shows \"u \\<in> graph A w k \\<Longrightarrow> v \\<in> graph A w k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> graph A w k \\<Longrightarrow> v \\<in> graph A w k", "using assms"], ["proof (prove)\nusing this:\n  v \\<in> gunodes A w\n  u \\<in> gusuccessors A w v\n\ngoal (1 subgoal):\n 1. u \\<in> graph A w k \\<Longrightarrow> v \\<in> graph A w k", "proof (induct k arbitrary: u v)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> graph A w 0; v \\<in> gunodes A w;\n        u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> v \\<in> graph A w 0\n 2. \\<And>k u v.\n       \\<lbrakk>\\<And>u v.\n                   \\<lbrakk>u \\<in> graph A w k; v \\<in> gunodes A w;\n                    u \\<in> gusuccessors A w v\\<rbrakk>\n                   \\<Longrightarrow> v \\<in> graph A w k;\n        u \\<in> graph A w (Suc k); v \\<in> gunodes A w;\n        u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> v \\<in> graph A w (Suc k)", "case 0"], ["proof (state)\nthis:\n  u \\<in> graph A w 0\n  v \\<in> gunodes A w\n  u \\<in> gusuccessors A w v\n\ngoal (2 subgoals):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> graph A w 0; v \\<in> gunodes A w;\n        u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> v \\<in> graph A w 0\n 2. \\<And>k u v.\n       \\<lbrakk>\\<And>u v.\n                   \\<lbrakk>u \\<in> graph A w k; v \\<in> gunodes A w;\n                    u \\<in> gusuccessors A w v\\<rbrakk>\n                   \\<Longrightarrow> v \\<in> graph A w k;\n        u \\<in> graph A w (Suc k); v \\<in> gunodes A w;\n        u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> v \\<in> graph A w (Suc k)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> graph A w 0", "using 0(2)"], ["proof (prove)\nusing this:\n  v \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. v \\<in> graph A w 0", "by simp"], ["proof (state)\nthis:\n  v \\<in> graph A w 0\n\ngoal (1 subgoal):\n 1. \\<And>k u v.\n       \\<lbrakk>\\<And>u v.\n                   \\<lbrakk>u \\<in> graph A w k; v \\<in> gunodes A w;\n                    u \\<in> gusuccessors A w v\\<rbrakk>\n                   \\<Longrightarrow> v \\<in> graph A w k;\n        u \\<in> graph A w (Suc k); v \\<in> gunodes A w;\n        u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> v \\<in> graph A w (Suc k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k u v.\n       \\<lbrakk>\\<And>u v.\n                   \\<lbrakk>u \\<in> graph A w k; v \\<in> gunodes A w;\n                    u \\<in> gusuccessors A w v\\<rbrakk>\n                   \\<Longrightarrow> v \\<in> graph A w k;\n        u \\<in> graph A w (Suc k); v \\<in> gunodes A w;\n        u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> v \\<in> graph A w (Suc k)", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>?u \\<in> graph A w k; ?v \\<in> gunodes A w;\n   ?u \\<in> gusuccessors A w ?v\\<rbrakk>\n  \\<Longrightarrow> ?v \\<in> graph A w k\n  u \\<in> graph A w (Suc k)\n  v \\<in> gunodes A w\n  u \\<in> gusuccessors A w v\n\ngoal (1 subgoal):\n 1. \\<And>k u v.\n       \\<lbrakk>\\<And>u v.\n                   \\<lbrakk>u \\<in> graph A w k; v \\<in> gunodes A w;\n                    u \\<in> gusuccessors A w v\\<rbrakk>\n                   \\<Longrightarrow> v \\<in> graph A w k;\n        u \\<in> graph A w (Suc k); v \\<in> gunodes A w;\n        u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> v \\<in> graph A w (Suc k)", "have 1: \"v \\<in> graph A w k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> graph A w k", "using Suc"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<in> graph A w k; ?v \\<in> gunodes A w;\n   ?u \\<in> gusuccessors A w ?v\\<rbrakk>\n  \\<Longrightarrow> ?v \\<in> graph A w k\n  u \\<in> graph A w (Suc k)\n  v \\<in> gunodes A w\n  u \\<in> gusuccessors A w v\n\ngoal (1 subgoal):\n 1. v \\<in> graph A w k", "using antimono_iff_le_Suc graph_antimono rev_subsetD"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<in> graph A w k; ?v \\<in> gunodes A w;\n   ?u \\<in> gusuccessors A w ?v\\<rbrakk>\n  \\<Longrightarrow> ?v \\<in> graph A w k\n  u \\<in> graph A w (Suc k)\n  v \\<in> gunodes A w\n  u \\<in> gusuccessors A w v\n  decseq ?f = (\\<forall>n. ?f (Suc n) \\<le> ?f n)\n  decseq (graph ?A ?w)\n  \\<lbrakk>?c \\<in> ?A; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> ?c \\<in> ?B\n\ngoal (1 subgoal):\n 1. v \\<in> graph A w k", "by blast"], ["proof (state)\nthis:\n  v \\<in> graph A w k\n\ngoal (1 subgoal):\n 1. \\<And>k u v.\n       \\<lbrakk>\\<And>u v.\n                   \\<lbrakk>u \\<in> graph A w k; v \\<in> gunodes A w;\n                    u \\<in> gusuccessors A w v\\<rbrakk>\n                   \\<Longrightarrow> v \\<in> graph A w k;\n        u \\<in> graph A w (Suc k); v \\<in> gunodes A w;\n        u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> v \\<in> graph A w (Suc k)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> graph A w (Suc k)", "using Suc(2) clean_successors[OF 1 Suc(4)] prune_successors[OF 1 Suc(4)]"], ["proof (prove)\nusing this:\n  u \\<in> graph A w (Suc k)\n  u \\<in> clean A w (graph A w k) \\<Longrightarrow>\n  v \\<in> clean A w (graph A w k)\n  u \\<in> prune A w (graph A w k) \\<Longrightarrow>\n  v \\<in> prune A w (graph A w k)\n\ngoal (1 subgoal):\n 1. v \\<in> graph A w (Suc k)", "by auto"], ["proof (state)\nthis:\n  v \\<in> graph A w (Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma graph_level_finite:\n    assumes \"finite (nodes A)\"\n    shows \"finite (level A w k l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (level A w k l)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (level A w k l)", "have \"level A w k l \\<subseteq> {v \\<in> gunodes A w. fst v = l}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. level A w k l \\<subseteq> {v \\<in> gunodes A w. fst v = l}", "by (simp add: graph_nodes subset_CollectI)"], ["proof (state)\nthis:\n  level A w k l \\<subseteq> {v \\<in> gunodes A w. fst v = l}\n\ngoal (1 subgoal):\n 1. finite (level A w k l)", "also"], ["proof (state)\nthis:\n  level A w k l \\<subseteq> {v \\<in> gunodes A w. fst v = l}\n\ngoal (1 subgoal):\n 1. finite (level A w k l)", "have \"{v \\<in> gunodes A w. fst v = l} \\<subseteq> {l} \\<times> nodes A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {v \\<in> gunodes A w. fst v = l} \\<subseteq> {l} \\<times> nodes A", "using gnodes_nodes"], ["proof (prove)\nusing this:\n  gnodes ?A ?w ?V \\<subseteq> UNIV \\<times> nodes ?A\n\ngoal (1 subgoal):\n 1. {v \\<in> gunodes A w. fst v = l} \\<subseteq> {l} \\<times> nodes A", "by force"], ["proof (state)\nthis:\n  {v \\<in> gunodes A w. fst v = l} \\<subseteq> {l} \\<times> nodes A\n\ngoal (1 subgoal):\n 1. finite (level A w k l)", "also"], ["proof (state)\nthis:\n  {v \\<in> gunodes A w. fst v = l} \\<subseteq> {l} \\<times> nodes A\n\ngoal (1 subgoal):\n 1. finite (level A w k l)", "have \"finite ({l} \\<times> nodes A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ({l} \\<times> nodes A)", "using assms(1)"], ["proof (prove)\nusing this:\n  finite (nodes A)\n\ngoal (1 subgoal):\n 1. finite ({l} \\<times> nodes A)", "by simp"], ["proof (state)\nthis:\n  finite ({l} \\<times> nodes A)\n\ngoal (1 subgoal):\n 1. finite (level A w k l)", "finally"], ["proof (chain)\npicking this:\n  finite (level A w k l)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (level A w k l)\n\ngoal (1 subgoal):\n 1. finite (level A w k l)", "by this"], ["proof (state)\nthis:\n  finite (level A w k l)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma find_safe:\n    assumes \"w \\<notin> language A\"\n    assumes \"V \\<noteq> {}\" \"V \\<subseteq> gunodes A w\"\n    assumes \"\\<And> v. v \\<in> V \\<Longrightarrow> gsuccessors A w V v \\<noteq> {}\"\n    obtains v\n    where \"v \\<in> V\" \"\\<forall> u \\<in> greachable A w V v. \\<not> gaccepting A u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> V;\n         \\<forall>u\\<in>greachable A w V v. \\<not> gaccepting A u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "assume 1: \"\\<not> thesis\""], ["proof (state)\nthis:\n  \\<not> thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "have 2: \"\\<And> v. v \\<in> V \\<Longrightarrow> \\<exists> u \\<in> greachable A w V v. gaccepting A u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       v \\<in> V \\<Longrightarrow> Bex (greachable A w V v) (gaccepting A)", "using that 1"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> V;\n   \\<forall>u\\<in>greachable A w V ?v. \\<not> gaccepting A u\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<not> thesis\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       v \\<in> V \\<Longrightarrow> Bex (greachable A w V v) (gaccepting A)", "by auto"], ["proof (state)\nthis:\n  ?v \\<in> V \\<Longrightarrow> Bex (greachable A w V ?v) (gaccepting A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "have 3: \"\\<And> r v. v \\<in> initial A \\<Longrightarrow> run A (w ||| r) v \\<Longrightarrow> fins (accepting A) r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r v.\n       \\<lbrakk>v \\<in> initial A; run A (w ||| r) v\\<rbrakk>\n       \\<Longrightarrow> fins (accepting A) r", "using assms(1)"], ["proof (prove)\nusing this:\n  w \\<notin> language A\n\ngoal (1 subgoal):\n 1. \\<And>r v.\n       \\<lbrakk>v \\<in> initial A; run A (w ||| r) v\\<rbrakk>\n       \\<Longrightarrow> fins (accepting A) r", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?v \\<in> initial A; run A (w ||| ?r) ?v\\<rbrakk>\n  \\<Longrightarrow> fins (accepting A) ?r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "obtain v where 4: \"v \\<in> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v. v \\<in> V \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using assms(2)"], ["proof (prove)\nusing this:\n  V \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>v. v \\<in> V \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by force"], ["proof (state)\nthis:\n  v \\<in> V\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "obtain x where 5: \"x \\<in> greachable A w V v\" \"gaccepting A x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> greachable A w V v; gaccepting A x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 2 4"], ["proof (prove)\nusing this:\n  ?v \\<in> V \\<Longrightarrow> Bex (greachable A w V ?v) (gaccepting A)\n  v \\<in> V\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> greachable A w V v; gaccepting A x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> greachable A w V v\n  gaccepting A x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "obtain y where 50: \"gpath A w V y v\" \"x = gtarget y v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>gpath A w V y v; x = gtarget y v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 5(1)"], ["proof (prove)\nusing this:\n  x \\<in> greachable A w V v\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>gpath A w V y v; x = gtarget y v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by rule"], ["proof (state)\nthis:\n  gpath A w V y v\n  x = gtarget y v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "obtain r where 6: \"grun A w V r x\" \"infs (\\<lambda> x. x \\<in> V \\<and> gaccepting A x) r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>grun A w V r x;\n         infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x) r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (rule graph.recurring_condition)"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<And>r.\n        \\<lbrakk>grun A w V r x;\n         infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x) r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    ?P2 ?p2\n 2. \\<And>p.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>grun A w V r x;\n                    infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x)\n                     r\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ?P2 p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            r \\<noteq> [] \\<and>\n                            gpath ?A2 ?w2 ?V2 r p \\<and> ?P2 (gtarget r p)\n 3. \\<And>r.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>grun A w V r x;\n                    infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x)\n                     r\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        grun ?A2 ?w2 ?V2 r ?p2; infs ?P2 (?p2 ## gtrace r ?p2)\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"x \\<in> V \\<and> gaccepting A x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> V \\<and> gaccepting A x", "using greachable_subset 4 5"], ["proof (prove)\nusing this:\n  greachable ?A ?w ?V ?v \\<subseteq> insert ?v ?V\n  v \\<in> V\n  x \\<in> greachable A w V v\n  gaccepting A x\n\ngoal (1 subgoal):\n 1. x \\<in> V \\<and> gaccepting A x", "by blast"], ["proof (state)\nthis:\n  x \\<in> V \\<and> gaccepting A x\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>grun A w V r x;\n                    infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x)\n                     r\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        p \\<in> V \\<and> gaccepting A p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            r \\<noteq> [] \\<and>\n                            gpath ?A2 ?w2 ?V2 r p \\<and>\n                            gtarget r p \\<in> V \\<and>\n                            gaccepting A (gtarget r p)\n 2. \\<And>r.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>grun A w V r x;\n                    infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x)\n                     r\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        grun ?A2 ?w2 ?V2 r x;\n        infs (\\<lambda>a. a \\<in> V \\<and> gaccepting A a)\n         (x ## gtrace r x)\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>grun A w V r x;\n                    infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x)\n                     r\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        p \\<in> V \\<and> gaccepting A p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            r \\<noteq> [] \\<and>\n                            gpath ?A2 ?w2 ?V2 r p \\<and>\n                            gtarget r p \\<in> V \\<and>\n                            gaccepting A (gtarget r p)\n 2. \\<And>r.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>grun A w V r x;\n                    infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x)\n                     r\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        grun ?A2 ?w2 ?V2 r x;\n        infs (\\<lambda>a. a \\<in> V \\<and> gaccepting A a)\n         (x ## gtrace r x)\\<rbrakk>\n       \\<Longrightarrow> thesis", "fix v"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>grun A w V r x;\n                    infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x)\n                     r\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        p \\<in> V \\<and> gaccepting A p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            r \\<noteq> [] \\<and>\n                            gpath ?A2 ?w2 ?V2 r p \\<and>\n                            gtarget r p \\<in> V \\<and>\n                            gaccepting A (gtarget r p)\n 2. \\<And>r.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>grun A w V r x;\n                    infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x)\n                     r\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        grun ?A2 ?w2 ?V2 r x;\n        infs (\\<lambda>a. a \\<in> V \\<and> gaccepting A a)\n         (x ## gtrace r x)\\<rbrakk>\n       \\<Longrightarrow> thesis", "assume 1: \"v \\<in> V \\<and> gaccepting A v\""], ["proof (state)\nthis:\n  v \\<in> V \\<and> gaccepting A v\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>grun A w V r x;\n                    infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x)\n                     r\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        p \\<in> V \\<and> gaccepting A p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            r \\<noteq> [] \\<and>\n                            gpath ?A2 ?w2 ?V2 r p \\<and>\n                            gtarget r p \\<in> V \\<and>\n                            gaccepting A (gtarget r p)\n 2. \\<And>r.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>grun A w V r x;\n                    infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x)\n                     r\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        grun ?A2 ?w2 ?V2 r x;\n        infs (\\<lambda>a. a \\<in> V \\<and> gaccepting A a)\n         (x ## gtrace r x)\\<rbrakk>\n       \\<Longrightarrow> thesis", "obtain v' where 20: \"v' \\<in> gsuccessors A w V v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        v' \\<in> gsuccessors A w V v \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms(4) 1"], ["proof (prove)\nusing this:\n  ?v \\<in> V \\<Longrightarrow> gsuccessors A w V ?v \\<noteq> {}\n  v \\<in> V \\<and> gaccepting A v\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        v' \\<in> gsuccessors A w V v \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson IntE equals0I)"], ["proof (state)\nthis:\n  v' \\<in> gsuccessors A w V v\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>grun A w V r x;\n                    infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x)\n                     r\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        p \\<in> V \\<and> gaccepting A p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            r \\<noteq> [] \\<and>\n                            gpath ?A2 ?w2 ?V2 r p \\<and>\n                            gtarget r p \\<in> V \\<and>\n                            gaccepting A (gtarget r p)\n 2. \\<And>r.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>grun A w V r x;\n                    infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x)\n                     r\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        grun ?A2 ?w2 ?V2 r x;\n        infs (\\<lambda>a. a \\<in> V \\<and> gaccepting A a)\n         (x ## gtrace r x)\\<rbrakk>\n       \\<Longrightarrow> thesis", "have 21: \"v' \\<in> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v' \\<in> V", "using 20"], ["proof (prove)\nusing this:\n  v' \\<in> gsuccessors A w V v\n\ngoal (1 subgoal):\n 1. v' \\<in> V", "by auto"], ["proof (state)\nthis:\n  v' \\<in> V\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>grun A w V r x;\n                    infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x)\n                     r\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        p \\<in> V \\<and> gaccepting A p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            r \\<noteq> [] \\<and>\n                            gpath ?A2 ?w2 ?V2 r p \\<and>\n                            gtarget r p \\<in> V \\<and>\n                            gaccepting A (gtarget r p)\n 2. \\<And>r.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>grun A w V r x;\n                    infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x)\n                     r\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        grun ?A2 ?w2 ?V2 r x;\n        infs (\\<lambda>a. a \\<in> V \\<and> gaccepting A a)\n         (x ## gtrace r x)\\<rbrakk>\n       \\<Longrightarrow> thesis", "have 22: \"\\<exists> u \\<in> greachable A w V v'. u \\<in> V \\<and> gaccepting A u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>greachable A w V v'. u \\<in> V \\<and> gaccepting A u", "using greachable_subset 2 21"], ["proof (prove)\nusing this:\n  greachable ?A ?w ?V ?v \\<subseteq> insert ?v ?V\n  ?v \\<in> V \\<Longrightarrow> Bex (greachable A w V ?v) (gaccepting A)\n  v' \\<in> V\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>greachable A w V v'. u \\<in> V \\<and> gaccepting A u", "by blast"], ["proof (state)\nthis:\n  \\<exists>u\\<in>greachable A w V v'. u \\<in> V \\<and> gaccepting A u\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>grun A w V r x;\n                    infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x)\n                     r\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        p \\<in> V \\<and> gaccepting A p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            r \\<noteq> [] \\<and>\n                            gpath ?A2 ?w2 ?V2 r p \\<and>\n                            gtarget r p \\<in> V \\<and>\n                            gaccepting A (gtarget r p)\n 2. \\<And>r.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>grun A w V r x;\n                    infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x)\n                     r\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        grun ?A2 ?w2 ?V2 r x;\n        infs (\\<lambda>a. a \\<in> V \\<and> gaccepting A a)\n         (x ## gtrace r x)\\<rbrakk>\n       \\<Longrightarrow> thesis", "obtain r where 30: \"gpath A w V r v'\" \"gtarget r v' \\<in> V \\<and> gaccepting A (gtarget r v')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>gpath A w V r v';\n         gtarget r v' \\<in> V \\<and> gaccepting A (gtarget r v')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 22"], ["proof (prove)\nusing this:\n  \\<exists>u\\<in>greachable A w V v'. u \\<in> V \\<and> gaccepting A u\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>gpath A w V r v';\n         gtarget r v' \\<in> V \\<and> gaccepting A (gtarget r v')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  gpath A w V r v'\n  gtarget r v' \\<in> V \\<and> gaccepting A (gtarget r v')\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>grun A w V r x;\n                    infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x)\n                     r\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        p \\<in> V \\<and> gaccepting A p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            r \\<noteq> [] \\<and>\n                            gpath ?A2 ?w2 ?V2 r p \\<and>\n                            gtarget r p \\<in> V \\<and>\n                            gaccepting A (gtarget r p)\n 2. \\<And>r.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>grun A w V r x;\n                    infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x)\n                     r\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        grun ?A2 ?w2 ?V2 r x;\n        infs (\\<lambda>a. a \\<in> V \\<and> gaccepting A a)\n         (x ## gtrace r x)\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"\\<exists> r. r \\<noteq> [] \\<and> gpath A w V r v \\<and> gtarget r v \\<in> V \\<and> gaccepting A (gtarget r v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r.\n       r \\<noteq> [] \\<and>\n       gpath A w V r v \\<and>\n       gtarget r v \\<in> V \\<and> gaccepting A (gtarget r v)", "proof (intro exI conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. ?r \\<noteq> []\n 2. gpath A w V ?r v\n 3. gtarget ?r v \\<in> V\n 4. gaccepting A (gtarget ?r v)", "show \"v' # r \\<noteq> []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v' # r \\<noteq> []", "by simp"], ["proof (state)\nthis:\n  v' # r \\<noteq> []\n\ngoal (3 subgoals):\n 1. gpath A w V (v' # r) v\n 2. gtarget (v' # r) v \\<in> V\n 3. gaccepting A (gtarget (v' # r) v)", "show \"gpath A w V (v' # r) v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gpath A w V (v' # r) v", "using 20 30"], ["proof (prove)\nusing this:\n  v' \\<in> gsuccessors A w V v\n  gpath A w V r v'\n  gtarget r v' \\<in> V \\<and> gaccepting A (gtarget r v')\n\ngoal (1 subgoal):\n 1. gpath A w V (v' # r) v", "by auto"], ["proof (state)\nthis:\n  gpath A w V (v' # r) v\n\ngoal (2 subgoals):\n 1. gtarget (v' # r) v \\<in> V\n 2. gaccepting A (gtarget (v' # r) v)", "show \"gtarget (v' # r) v \\<in> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gtarget (v' # r) v \\<in> V", "using 30"], ["proof (prove)\nusing this:\n  gpath A w V r v'\n  gtarget r v' \\<in> V \\<and> gaccepting A (gtarget r v')\n\ngoal (1 subgoal):\n 1. gtarget (v' # r) v \\<in> V", "by simp"], ["proof (state)\nthis:\n  gtarget (v' # r) v \\<in> V\n\ngoal (1 subgoal):\n 1. gaccepting A (gtarget (v' # r) v)", "show \"gaccepting A (gtarget (v' # r) v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gaccepting A (gtarget (v' # r) v)", "using 30"], ["proof (prove)\nusing this:\n  gpath A w V r v'\n  gtarget r v' \\<in> V \\<and> gaccepting A (gtarget r v')\n\ngoal (1 subgoal):\n 1. gaccepting A (gtarget (v' # r) v)", "by simp"], ["proof (state)\nthis:\n  gaccepting A (gtarget (v' # r) v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>r.\n     r \\<noteq> [] \\<and>\n     gpath A w V r v \\<and>\n     gtarget r v \\<in> V \\<and> gaccepting A (gtarget r v)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>grun A w V r x;\n                    infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x)\n                     r\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        grun A w V r x;\n        infs (\\<lambda>a. a \\<in> V \\<and> gaccepting A a)\n         (x ## gtrace r x)\\<rbrakk>\n       \\<Longrightarrow> thesis", "qed auto"], ["proof (state)\nthis:\n  grun A w V r x\n  infs (\\<lambda>x. x \\<in> V \\<and> gaccepting A x) r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "obtain u where 100: \"u \\<in> ginitial A\" \"v \\<in> gureachable A w u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> ginitial A; v \\<in> gureachable A w u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 4 assms(3)"], ["proof (prove)\nusing this:\n  v \\<in> V\n  V \\<subseteq> gunodes A w\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> ginitial A; v \\<in> gureachable A w u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u \\<in> ginitial A\n  v \\<in> gureachable A w u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "have 101: \"gupath A w y v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gupath A w y v", "using gpath_subset 50(1) subset_UNIV"], ["proof (prove)\nusing this:\n  \\<lbrakk>gpath ?A ?w ?V ?r ?v; set (gstates ?r ?v) \\<subseteq> ?U\\<rbrakk>\n  \\<Longrightarrow> gpath ?A ?w ?U ?r ?v\n  gpath A w V y v\n  ?A \\<subseteq> UNIV\n\ngoal (1 subgoal):\n 1. gupath A w y v", "by this"], ["proof (state)\nthis:\n  gupath A w y v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "have 102: \"gurun A w r x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gurun A w r x", "using grun_subset 6(1) subset_UNIV"], ["proof (prove)\nusing this:\n  \\<lbrakk>grun ?A ?w ?V ?r ?v; sset (gtrace ?r ?v) \\<subseteq> ?U\\<rbrakk>\n  \\<Longrightarrow> grun ?A ?w ?U ?r ?v\n  grun A w V r x\n  ?A \\<subseteq> UNIV\n\ngoal (1 subgoal):\n 1. gurun A w r x", "by this"], ["proof (state)\nthis:\n  gurun A w r x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "obtain t where 103: \"gupath A w t u\" \"v = gtarget t u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>gupath A w t u; v = gtarget t u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 100(2)"], ["proof (prove)\nusing this:\n  v \\<in> gureachable A w u\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>gupath A w t u; v = gtarget t u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by rule"], ["proof (state)\nthis:\n  gupath A w t u\n  v = gtarget t u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "have 104: \"gurun A w (t @- y @- r) u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gurun A w (t @- y @- r) u", "using 101 102 103 50(2)"], ["proof (prove)\nusing this:\n  gupath A w y v\n  gurun A w r x\n  gupath A w t u\n  v = gtarget t u\n  x = gtarget y v\n\ngoal (1 subgoal):\n 1. gurun A w (t @- y @- r) u", "by auto"], ["proof (state)\nthis:\n  gurun A w (t @- y @- r) u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "obtain s q where 7: \"t @- y @- r = fromN (Suc 0) ||| s\" \"u = (0, q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s q.\n        \\<lbrakk>t @- y @- r = fromN (Suc 0) ||| s; u = (0, q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using grun_elim[OF 104] 100(1)"], ["proof (prove)\nusing this:\n  (\\<And>ra k p.\n      \\<lbrakk>t @- y @- r = fromN (Suc k) ||| ra; u = (k, p)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n  u \\<in> ginitial A\n\ngoal (1 subgoal):\n 1. (\\<And>s q.\n        \\<lbrakk>t @- y @- r = fromN (Suc 0) ||| s; u = (0, q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t @- y @- r = fromN (Suc 0) ||| s\n  u = (0, q)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "have 8: \"run A (w ||| s) q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. run A (w ||| s) q", "using grun_run[OF 104[unfolded 7]]"], ["proof (prove)\nusing this:\n  run A (sdrop 0 w ||| s) q\n\ngoal (1 subgoal):\n 1. run A (w ||| s) q", "by simp"], ["proof (state)\nthis:\n  run A (w ||| s) q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "have 9: \"q \\<in> initial A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> initial A", "using 100(1) 7(2)"], ["proof (prove)\nusing this:\n  u \\<in> ginitial A\n  u = (0, q)\n\ngoal (1 subgoal):\n 1. q \\<in> initial A", "by auto"], ["proof (state)\nthis:\n  q \\<in> initial A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "have 91: \"sset (trace (w ||| s) q) \\<subseteq> reachable A q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sset (trace (w ||| s) q) \\<subseteq> reachable A q", "using nba.reachable_trace nba.reachable.reflexive 8"], ["proof (prove)\nusing this:\n  \\<lbrakk>?q \\<in> reachable ?A ?p; run ?A ?r ?q\\<rbrakk>\n  \\<Longrightarrow> sset (trace ?r ?q) \\<subseteq> reachable ?A ?p\n  ?p \\<in> reachable ?A ?p\n  run A (w ||| s) q\n\ngoal (1 subgoal):\n 1. sset (trace (w ||| s) q) \\<subseteq> reachable A q", "by this"], ["proof (state)\nthis:\n  sset (trace (w ||| s) q) \\<subseteq> reachable A q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "have 10: \"fins (accepting A) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fins (accepting A) s", "using 3 9 8"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> initial A; run A (w ||| ?r) ?v\\<rbrakk>\n  \\<Longrightarrow> fins (accepting A) ?r\n  q \\<in> initial A\n  run A (w ||| s) q\n\ngoal (1 subgoal):\n 1. fins (accepting A) s", "by this"], ["proof (state)\nthis:\n  fins (accepting A) s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "have 12: \"infs (gaccepting A) r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infs (gaccepting A) r", "using infs_mono[OF _ 6(2)]"], ["proof (prove)\nusing this:\n  (\\<And>a.\n      \\<lbrakk>a \\<in> sset r; a \\<in> V \\<and> gaccepting A a\\<rbrakk>\n      \\<Longrightarrow> ?Q a) \\<Longrightarrow>\n  infs ?Q r\n\ngoal (1 subgoal):\n 1. infs (gaccepting A) r", "by simp"], ["proof (state)\nthis:\n  infs (gaccepting A) r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "have \"s = smap snd (t @- y @- r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s = smap snd (t @- y @- r)", "unfolding 7(1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. s = smap snd (fromN (Suc 0) ||| s)", "by simp"], ["proof (state)\nthis:\n  s = smap snd (t @- y @- r)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  s = smap snd (t @- y @- r)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "have \"infs (accepting A) \\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infs (accepting A) (smap snd (t @- y @- r))", "using 12"], ["proof (prove)\nusing this:\n  infs (gaccepting A) r\n\ngoal (1 subgoal):\n 1. infs (accepting A) (smap snd (t @- y @- r))", "by (simp add: comp_def)"], ["proof (state)\nthis:\n  infs (accepting A) (smap snd (t @- y @- r))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  infs (accepting A) s", "have 13: \"infs (accepting A) s\""], ["proof (prove)\nusing this:\n  infs (accepting A) s\n\ngoal (1 subgoal):\n 1. infs (accepting A) s", "by this"], ["proof (state)\nthis:\n  infs (accepting A) s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v.\n                \\<lbrakk>v \\<in> V;\n                 \\<forall>u\\<in>greachable A w V v.\n                    \\<not> gaccepting A u\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using 10 13"], ["proof (prove)\nusing this:\n  fins (accepting A) s\n  infs (accepting A) s\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_run:\n    assumes \"finite (nodes A)\" \"w \\<notin> language A\"\n    assumes \"V \\<subseteq> gunodes A w\" \"clean A w V \\<noteq> {}\"\n    obtains v r\n    where\n      \"grun A w V r v\"\n      \"sset (gtrace r v) \\<subseteq> clean A w V\"\n      \"sset (gtrace r v) \\<subseteq> - prune A w (clean A w V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r v.\n        \\<lbrakk>grun A w V r v; sset (gtrace r v) \\<subseteq> clean A w V;\n         sset (gtrace r v) \\<subseteq> - prune A w (clean A w V)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>r v.\n        \\<lbrakk>grun A w V r v; sset (gtrace r v) \\<subseteq> clean A w V;\n         sset (gtrace r v) \\<subseteq> - prune A w (clean A w V)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain u where 1: \"u \\<in> clean A w V\" \"\\<forall> x \\<in> greachable A w (clean A w V) u. \\<not> gaccepting A x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> clean A w V;\n         \\<forall>x\\<in>greachable A w (clean A w V) u.\n            \\<not> gaccepting A x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (rule find_safe)"], ["proof (state)\ngoal (5 subgoals):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> clean A w V;\n         \\<forall>x\\<in>greachable A w (clean A w V) u.\n            \\<not> gaccepting A x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    ?w2 \\<notin> language ?A2\n 2. (\\<And>u.\n        \\<lbrakk>u \\<in> clean A w V;\n         \\<forall>x\\<in>greachable A w (clean A w V) u.\n            \\<not> gaccepting A x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    ?V2 \\<noteq> {}\n 3. (\\<And>u.\n        \\<lbrakk>u \\<in> clean A w V;\n         \\<forall>x\\<in>greachable A w (clean A w V) u.\n            \\<not> gaccepting A x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    ?V2 \\<subseteq> gunodes ?A2 ?w2\n 4. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> ?V2\\<rbrakk>\n       \\<Longrightarrow> gsuccessors ?A2 ?w2 ?V2 v \\<noteq> {}\n 5. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> ?V2;\n        \\<forall>u\\<in>greachable ?A2 ?w2 ?V2 v.\n           \\<not> gaccepting ?A2 u\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"w \\<notin> language A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<notin> language A", "using assms(2)"], ["proof (prove)\nusing this:\n  w \\<notin> language A\n\ngoal (1 subgoal):\n 1. w \\<notin> language A", "by this"], ["proof (state)\nthis:\n  w \\<notin> language A\n\ngoal (4 subgoals):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> clean A w V;\n         \\<forall>x\\<in>greachable A w (clean A w V) u.\n            \\<not> gaccepting A x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    ?V2 \\<noteq> {}\n 2. (\\<And>u.\n        \\<lbrakk>u \\<in> clean A w V;\n         \\<forall>x\\<in>greachable A w (clean A w V) u.\n            \\<not> gaccepting A x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    ?V2 \\<subseteq> gunodes A w\n 3. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> ?V2\\<rbrakk>\n       \\<Longrightarrow> gsuccessors A w ?V2 v \\<noteq> {}\n 4. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> ?V2;\n        \\<forall>u\\<in>greachable A w ?V2 v. \\<not> gaccepting A u\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"clean A w V \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. clean A w V \\<noteq> {}", "using assms(4)"], ["proof (prove)\nusing this:\n  clean A w V \\<noteq> {}\n\ngoal (1 subgoal):\n 1. clean A w V \\<noteq> {}", "by this"], ["proof (state)\nthis:\n  clean A w V \\<noteq> {}\n\ngoal (3 subgoals):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> clean A w V;\n         \\<forall>x\\<in>greachable A w (clean A w V) u.\n            \\<not> gaccepting A x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    clean A w V \\<subseteq> gunodes A w\n 2. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V\\<rbrakk>\n       \\<Longrightarrow> gsuccessors A w (clean A w V) v \\<noteq> {}\n 3. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V;\n        \\<forall>u\\<in>greachable A w (clean A w V) v.\n           \\<not> gaccepting A u\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"clean A w V \\<subseteq> gunodes A w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. clean A w V \\<subseteq> gunodes A w", "using assms(3)"], ["proof (prove)\nusing this:\n  V \\<subseteq> gunodes A w\n\ngoal (1 subgoal):\n 1. clean A w V \\<subseteq> gunodes A w", "by (meson clean_decreasing subset_iff)"], ["proof (state)\nthis:\n  clean A w V \\<subseteq> gunodes A w\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V\\<rbrakk>\n       \\<Longrightarrow> gsuccessors A w (clean A w V) v \\<noteq> {}\n 2. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V;\n        \\<forall>u\\<in>greachable A w (clean A w V) v.\n           \\<not> gaccepting A u\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V\\<rbrakk>\n       \\<Longrightarrow> gsuccessors A w (clean A w V) v \\<noteq> {}\n 2. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V;\n        \\<forall>u\\<in>greachable A w (clean A w V) v.\n           \\<not> gaccepting A u\\<rbrakk>\n       \\<Longrightarrow> thesis", "fix v"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V\\<rbrakk>\n       \\<Longrightarrow> gsuccessors A w (clean A w V) v \\<noteq> {}\n 2. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V;\n        \\<forall>u\\<in>greachable A w (clean A w V) v.\n           \\<not> gaccepting A u\\<rbrakk>\n       \\<Longrightarrow> thesis", "assume 1: \"v \\<in> clean A w V\""], ["proof (state)\nthis:\n  v \\<in> clean A w V\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V\\<rbrakk>\n       \\<Longrightarrow> gsuccessors A w (clean A w V) v \\<noteq> {}\n 2. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V;\n        \\<forall>u\\<in>greachable A w (clean A w V) v.\n           \\<not> gaccepting A u\\<rbrakk>\n       \\<Longrightarrow> thesis", "have 2: \"v \\<in> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> V", "using 1 clean_decreasing"], ["proof (prove)\nusing this:\n  v \\<in> clean A w V\n  clean ?A ?w ?V \\<subseteq> ?V\n\ngoal (1 subgoal):\n 1. v \\<in> V", "by blast"], ["proof (state)\nthis:\n  v \\<in> V\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V\\<rbrakk>\n       \\<Longrightarrow> gsuccessors A w (clean A w V) v \\<noteq> {}\n 2. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V;\n        \\<forall>u\\<in>greachable A w (clean A w V) v.\n           \\<not> gaccepting A u\\<rbrakk>\n       \\<Longrightarrow> thesis", "have 3: \"infinite (greachable A w V v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite (greachable A w V v)", "using 1 clean_def"], ["proof (prove)\nusing this:\n  v \\<in> clean A w V\n  clean ?A ?w ?V \\<equiv> {v \\<in> ?V. infinite (greachable ?A ?w ?V v)}\n\ngoal (1 subgoal):\n 1. infinite (greachable A w V v)", "by auto"], ["proof (state)\nthis:\n  infinite (greachable A w V v)\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V\\<rbrakk>\n       \\<Longrightarrow> gsuccessors A w (clean A w V) v \\<noteq> {}\n 2. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V;\n        \\<forall>u\\<in>greachable A w (clean A w V) v.\n           \\<not> gaccepting A u\\<rbrakk>\n       \\<Longrightarrow> thesis", "have \"gsuccessors A w V v \\<subseteq> gusuccessors A w v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gsuccessors A w V v \\<subseteq> gusuccessors A w v", "by auto"], ["proof (state)\nthis:\n  gsuccessors A w V v \\<subseteq> gusuccessors A w v\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V\\<rbrakk>\n       \\<Longrightarrow> gsuccessors A w (clean A w V) v \\<noteq> {}\n 2. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V;\n        \\<forall>u\\<in>greachable A w (clean A w V) v.\n           \\<not> gaccepting A u\\<rbrakk>\n       \\<Longrightarrow> thesis", "also"], ["proof (state)\nthis:\n  gsuccessors A w V v \\<subseteq> gusuccessors A w v\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V\\<rbrakk>\n       \\<Longrightarrow> gsuccessors A w (clean A w V) v \\<noteq> {}\n 2. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V;\n        \\<forall>u\\<in>greachable A w (clean A w V) v.\n           \\<not> gaccepting A u\\<rbrakk>\n       \\<Longrightarrow> thesis", "have \"finite \\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (gusuccessors A w v)", "using 2 assms(1, 3) finite_nodes_gsuccessors"], ["proof (prove)\nusing this:\n  v \\<in> V\n  finite (nodes A)\n  V \\<subseteq> gunodes A w\n  \\<lbrakk>finite (nodes ?A); ?v \\<in> gunodes ?A ?w\\<rbrakk>\n  \\<Longrightarrow> finite (gusuccessors ?A ?w ?v)\n\ngoal (1 subgoal):\n 1. finite (gusuccessors A w v)", "by blast"], ["proof (state)\nthis:\n  finite (gusuccessors A w v)\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V\\<rbrakk>\n       \\<Longrightarrow> gsuccessors A w (clean A w V) v \\<noteq> {}\n 2. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V;\n        \\<forall>u\\<in>greachable A w (clean A w V) v.\n           \\<not> gaccepting A u\\<rbrakk>\n       \\<Longrightarrow> thesis", "finally"], ["proof (chain)\npicking this:\n  finite (gsuccessors A w V v)", "have 4: \"finite (gsuccessors A w V v)\""], ["proof (prove)\nusing this:\n  finite (gsuccessors A w V v)\n\ngoal (1 subgoal):\n 1. finite (gsuccessors A w V v)", "by this"], ["proof (state)\nthis:\n  finite (gsuccessors A w V v)\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V\\<rbrakk>\n       \\<Longrightarrow> gsuccessors A w (clean A w V) v \\<noteq> {}\n 2. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V;\n        \\<forall>u\\<in>greachable A w (clean A w V) v.\n           \\<not> gaccepting A u\\<rbrakk>\n       \\<Longrightarrow> thesis", "have 5: \"infinite (insert v (\\<Union>((greachable A w V) ` (gsuccessors A w V v))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite (insert v (\\<Union> (greachable A w V ` gsuccessors A w V v)))", "using graph.reachable_step 3"], ["proof (prove)\nusing this:\n  greachable ?A ?w ?V ?p =\n  insert ?p (\\<Union> (greachable ?A ?w ?V ` gsuccessors ?A ?w ?V ?p))\n  infinite (greachable A w V v)\n\ngoal (1 subgoal):\n 1. infinite (insert v (\\<Union> (greachable A w V ` gsuccessors A w V v)))", "by metis"], ["proof (state)\nthis:\n  infinite (insert v (\\<Union> (greachable A w V ` gsuccessors A w V v)))\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V\\<rbrakk>\n       \\<Longrightarrow> gsuccessors A w (clean A w V) v \\<noteq> {}\n 2. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V;\n        \\<forall>u\\<in>greachable A w (clean A w V) v.\n           \\<not> gaccepting A u\\<rbrakk>\n       \\<Longrightarrow> thesis", "obtain u where 6: \"u \\<in> gsuccessors A w V v\" \"infinite (greachable A w V u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> gsuccessors A w V v;\n         infinite (greachable A w V u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 4 5"], ["proof (prove)\nusing this:\n  finite (gsuccessors A w V v)\n  infinite (insert v (\\<Union> (greachable A w V ` gsuccessors A w V v)))\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> gsuccessors A w V v;\n         infinite (greachable A w V u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u \\<in> gsuccessors A w V v\n  infinite (greachable A w V u)\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V\\<rbrakk>\n       \\<Longrightarrow> gsuccessors A w (clean A w V) v \\<noteq> {}\n 2. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V;\n        \\<forall>u\\<in>greachable A w (clean A w V) v.\n           \\<not> gaccepting A u\\<rbrakk>\n       \\<Longrightarrow> thesis", "have 7: \"u \\<in> clean A w V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> clean A w V", "using 6"], ["proof (prove)\nusing this:\n  u \\<in> gsuccessors A w V v\n  infinite (greachable A w V u)\n\ngoal (1 subgoal):\n 1. u \\<in> clean A w V", "unfolding clean_def"], ["proof (prove)\nusing this:\n  u \\<in> gsuccessors A w V v\n  infinite (greachable A w V u)\n\ngoal (1 subgoal):\n 1. u \\<in> {v \\<in> V. infinite (greachable A w V v)}", "by auto"], ["proof (state)\nthis:\n  u \\<in> clean A w V\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V\\<rbrakk>\n       \\<Longrightarrow> gsuccessors A w (clean A w V) v \\<noteq> {}\n 2. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V;\n        \\<forall>u\\<in>greachable A w (clean A w V) v.\n           \\<not> gaccepting A u\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"gsuccessors A w (clean A w V) v \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gsuccessors A w (clean A w V) v \\<noteq> {}", "using 6(1) 7"], ["proof (prove)\nusing this:\n  u \\<in> gsuccessors A w V v\n  u \\<in> clean A w V\n\ngoal (1 subgoal):\n 1. gsuccessors A w (clean A w V) v \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  gsuccessors A w (clean A w V) v \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>u \\<in> clean A w V;\n                    \\<forall>x\\<in>greachable A w (clean A w V) u.\n                       \\<not> gaccepting A x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        v \\<in> clean A w V;\n        \\<forall>u\\<in>greachable A w (clean A w V) v.\n           \\<not> gaccepting A u\\<rbrakk>\n       \\<Longrightarrow> thesis", "qed auto"], ["proof (state)\nthis:\n  u \\<in> clean A w V\n  \\<forall>x\\<in>greachable A w (clean A w V) u. \\<not> gaccepting A x\n\ngoal (1 subgoal):\n 1. (\\<And>r v.\n        \\<lbrakk>grun A w V r v; sset (gtrace r v) \\<subseteq> clean A w V;\n         sset (gtrace r v) \\<subseteq> - prune A w (clean A w V)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 2: \"u \\<in> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> V", "using 1(1)"], ["proof (prove)\nusing this:\n  u \\<in> clean A w V\n\ngoal (1 subgoal):\n 1. u \\<in> V", "unfolding clean_def"], ["proof (prove)\nusing this:\n  u \\<in> {v \\<in> V. infinite (greachable A w V v)}\n\ngoal (1 subgoal):\n 1. u \\<in> V", "by auto"], ["proof (state)\nthis:\n  u \\<in> V\n\ngoal (1 subgoal):\n 1. (\\<And>r v.\n        \\<lbrakk>grun A w V r v; sset (gtrace r v) \\<subseteq> clean A w V;\n         sset (gtrace r v) \\<subseteq> - prune A w (clean A w V)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 3: \"infinite (greachable A w V u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite (greachable A w V u)", "using 1(1)"], ["proof (prove)\nusing this:\n  u \\<in> clean A w V\n\ngoal (1 subgoal):\n 1. infinite (greachable A w V u)", "unfolding clean_def"], ["proof (prove)\nusing this:\n  u \\<in> {v \\<in> V. infinite (greachable A w V v)}\n\ngoal (1 subgoal):\n 1. infinite (greachable A w V u)", "by simp"], ["proof (state)\nthis:\n  infinite (greachable A w V u)\n\ngoal (1 subgoal):\n 1. (\\<And>r v.\n        \\<lbrakk>grun A w V r v; sset (gtrace r v) \\<subseteq> clean A w V;\n         sset (gtrace r v) \\<subseteq> - prune A w (clean A w V)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 4: \"finite (gsuccessors A w V v)\" if \"v \\<in> greachable A w V u\" for v"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (gsuccessors A w V v)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (gsuccessors A w V v)", "have 1: \"v \\<in> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> V", "using that greachable_subset 2"], ["proof (prove)\nusing this:\n  v \\<in> greachable A w V u\n  greachable ?A ?w ?V ?v \\<subseteq> insert ?v ?V\n  u \\<in> V\n\ngoal (1 subgoal):\n 1. v \\<in> V", "by blast"], ["proof (state)\nthis:\n  v \\<in> V\n\ngoal (1 subgoal):\n 1. finite (gsuccessors A w V v)", "have \"gsuccessors A w V v \\<subseteq> gusuccessors A w v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gsuccessors A w V v \\<subseteq> gusuccessors A w v", "by auto"], ["proof (state)\nthis:\n  gsuccessors A w V v \\<subseteq> gusuccessors A w v\n\ngoal (1 subgoal):\n 1. finite (gsuccessors A w V v)", "also"], ["proof (state)\nthis:\n  gsuccessors A w V v \\<subseteq> gusuccessors A w v\n\ngoal (1 subgoal):\n 1. finite (gsuccessors A w V v)", "have \"finite \\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (gusuccessors A w v)", "using 1 assms(1, 3) finite_nodes_gsuccessors"], ["proof (prove)\nusing this:\n  v \\<in> V\n  finite (nodes A)\n  V \\<subseteq> gunodes A w\n  \\<lbrakk>finite (nodes ?A); ?v \\<in> gunodes ?A ?w\\<rbrakk>\n  \\<Longrightarrow> finite (gusuccessors ?A ?w ?v)\n\ngoal (1 subgoal):\n 1. finite (gusuccessors A w v)", "by blast"], ["proof (state)\nthis:\n  finite (gusuccessors A w v)\n\ngoal (1 subgoal):\n 1. finite (gsuccessors A w V v)", "finally"], ["proof (chain)\npicking this:\n  finite (gsuccessors A w V v)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (gsuccessors A w V v)\n\ngoal (1 subgoal):\n 1. finite (gsuccessors A w V v)", "by this"], ["proof (state)\nthis:\n  finite (gsuccessors A w V v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?v \\<in> greachable A w V u \\<Longrightarrow>\n  finite (gsuccessors A w V ?v)\n\ngoal (1 subgoal):\n 1. (\\<And>r v.\n        \\<lbrakk>grun A w V r v; sset (gtrace r v) \\<subseteq> clean A w V;\n         sset (gtrace r v) \\<subseteq> - prune A w (clean A w V)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain r where 5: \"grun A w V r u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r. grun A w V r u \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using graph.koenig[OF 3 4]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>q.\n              q \\<in> greachable A w V u \\<Longrightarrow>\n              q \\<in> greachable A w V u;\n   \\<And>r. grun A w V r u \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>r. grun A w V r u \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by this"], ["proof (state)\nthis:\n  grun A w V r u\n\ngoal (1 subgoal):\n 1. (\\<And>r v.\n        \\<lbrakk>grun A w V r v; sset (gtrace r v) \\<subseteq> clean A w V;\n         sset (gtrace r v) \\<subseteq> - prune A w (clean A w V)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 6: \"greachable A w V u \\<subseteq> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. greachable A w V u \\<subseteq> V", "using 2 greachable_subset"], ["proof (prove)\nusing this:\n  u \\<in> V\n  greachable ?A ?w ?V ?v \\<subseteq> insert ?v ?V\n\ngoal (1 subgoal):\n 1. greachable A w V u \\<subseteq> V", "by blast"], ["proof (state)\nthis:\n  greachable A w V u \\<subseteq> V\n\ngoal (1 subgoal):\n 1. (\\<And>r v.\n        \\<lbrakk>grun A w V r v; sset (gtrace r v) \\<subseteq> clean A w V;\n         sset (gtrace r v) \\<subseteq> - prune A w (clean A w V)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 7: \"sset (gtrace r u) \\<subseteq> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sset (gtrace r u) \\<subseteq> V", "using graph.reachable_trace[OF graph.reachable.reflexive 5(1)] 6"], ["proof (prove)\nusing this:\n  sset (gtrace r u) \\<subseteq> greachable A w V u\n  greachable A w V u \\<subseteq> V\n\ngoal (1 subgoal):\n 1. sset (gtrace r u) \\<subseteq> V", "by blast"], ["proof (state)\nthis:\n  sset (gtrace r u) \\<subseteq> V\n\ngoal (1 subgoal):\n 1. (\\<And>r v.\n        \\<lbrakk>grun A w V r v; sset (gtrace r v) \\<subseteq> clean A w V;\n         sset (gtrace r v) \\<subseteq> - prune A w (clean A w V)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 8: \"sset (gtrace r u) \\<subseteq> clean A w V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sset (gtrace r u) \\<subseteq> clean A w V", "unfolding clean_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sset (gtrace r u) \\<subseteq> {v \\<in> V. infinite (greachable A w V v)}", "using 7 infinite_greachable_gtrace[OF 5(1)]"], ["proof (prove)\nusing this:\n  sset (gtrace r u) \\<subseteq> V\n  ?u \\<in> sset (gtrace r u) \\<Longrightarrow>\n  infinite (greachable A w V ?u)\n\ngoal (1 subgoal):\n 1. sset (gtrace r u) \\<subseteq> {v \\<in> V. infinite (greachable A w V v)}", "by auto"], ["proof (state)\nthis:\n  sset (gtrace r u) \\<subseteq> clean A w V\n\ngoal (1 subgoal):\n 1. (\\<And>r v.\n        \\<lbrakk>grun A w V r v; sset (gtrace r v) \\<subseteq> clean A w V;\n         sset (gtrace r v) \\<subseteq> - prune A w (clean A w V)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 9: \"sset (gtrace r u) \\<subseteq> greachable A w (clean A w V) u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sset (gtrace r u) \\<subseteq> greachable A w (clean A w V) u", "using 5 8"], ["proof (prove)\nusing this:\n  grun A w V r u\n  sset (gtrace r u) \\<subseteq> clean A w V\n\ngoal (1 subgoal):\n 1. sset (gtrace r u) \\<subseteq> greachable A w (clean A w V) u", "by (metis graph.reachable.reflexive graph.reachable_trace grun_subset)"], ["proof (state)\nthis:\n  sset (gtrace r u) \\<subseteq> greachable A w (clean A w V) u\n\ngoal (1 subgoal):\n 1. (\\<And>r v.\n        \\<lbrakk>grun A w V r v; sset (gtrace r v) \\<subseteq> clean A w V;\n         sset (gtrace r v) \\<subseteq> - prune A w (clean A w V)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. grun A w V ?r ?v\n 2. sset (gtrace ?r ?v) \\<subseteq> clean A w V\n 3. sset (gtrace ?r ?v) \\<subseteq> - prune A w (clean A w V)", "show \"grun A w V r u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. grun A w V r u", "using 5(1)"], ["proof (prove)\nusing this:\n  grun A w V r u\n\ngoal (1 subgoal):\n 1. grun A w V r u", "by this"], ["proof (state)\nthis:\n  grun A w V r u\n\ngoal (2 subgoals):\n 1. sset (gtrace r u) \\<subseteq> clean A w V\n 2. sset (gtrace r u) \\<subseteq> - prune A w (clean A w V)", "show \"sset (gtrace r u) \\<subseteq> clean A w V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sset (gtrace r u) \\<subseteq> clean A w V", "using 8"], ["proof (prove)\nusing this:\n  sset (gtrace r u) \\<subseteq> clean A w V\n\ngoal (1 subgoal):\n 1. sset (gtrace r u) \\<subseteq> clean A w V", "by this"], ["proof (state)\nthis:\n  sset (gtrace r u) \\<subseteq> clean A w V\n\ngoal (1 subgoal):\n 1. sset (gtrace r u) \\<subseteq> - prune A w (clean A w V)", "show \"sset (gtrace r u) \\<subseteq> - prune A w (clean A w V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sset (gtrace r u) \\<subseteq> - prune A w (clean A w V)", "proof (intro subsetI ComplI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> sset (gtrace r u);\n        x \\<in> prune A w (clean A w V)\\<rbrakk>\n       \\<Longrightarrow> False", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> sset (gtrace r u);\n        x \\<in> prune A w (clean A w V)\\<rbrakk>\n       \\<Longrightarrow> False", "assume 10: \"p \\<in> sset (gtrace r u)\" \"p \\<in> prune A w (clean A w V)\""], ["proof (state)\nthis:\n  p \\<in> sset (gtrace r u)\n  p \\<in> prune A w (clean A w V)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> sset (gtrace r u);\n        x \\<in> prune A w (clean A w V)\\<rbrakk>\n       \\<Longrightarrow> False", "have 20: \"\\<exists> x \\<in> greachable A w (clean A w V) p. gaccepting A x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Bex (greachable A w (clean A w V) p) (gaccepting A)", "using 10(2)"], ["proof (prove)\nusing this:\n  p \\<in> prune A w (clean A w V)\n\ngoal (1 subgoal):\n 1. Bex (greachable A w (clean A w V) p) (gaccepting A)", "unfolding prune_def"], ["proof (prove)\nusing this:\n  p \\<in> {v \\<in> clean A w V.\n           Bex (greachable A w (clean A w V) v) (gaccepting A)}\n\ngoal (1 subgoal):\n 1. Bex (greachable A w (clean A w V) p) (gaccepting A)", "by auto"], ["proof (state)\nthis:\n  Bex (greachable A w (clean A w V) p) (gaccepting A)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> sset (gtrace r u);\n        x \\<in> prune A w (clean A w V)\\<rbrakk>\n       \\<Longrightarrow> False", "have 30: \"greachable A w (clean A w V) p \\<subseteq> greachable A w (clean A w V) u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. greachable A w (clean A w V) p\n    \\<subseteq> greachable A w (clean A w V) u", "using 10(1) 9"], ["proof (prove)\nusing this:\n  p \\<in> sset (gtrace r u)\n  sset (gtrace r u) \\<subseteq> greachable A w (clean A w V) u\n\ngoal (1 subgoal):\n 1. greachable A w (clean A w V) p\n    \\<subseteq> greachable A w (clean A w V) u", "by blast"], ["proof (state)\nthis:\n  greachable A w (clean A w V) p \\<subseteq> greachable A w (clean A w V) u\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> sset (gtrace r u);\n        x \\<in> prune A w (clean A w V)\\<rbrakk>\n       \\<Longrightarrow> False", "show \"False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using 1(2) 20 30"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>greachable A w (clean A w V) u. \\<not> gaccepting A x\n  Bex (greachable A w (clean A w V) p) (gaccepting A)\n  greachable A w (clean A w V) p \\<subseteq> greachable A w (clean A w V) u\n\ngoal (1 subgoal):\n 1. False", "by force"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sset (gtrace r u) \\<subseteq> - prune A w (clean A w V)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma level_bounded:\n    assumes \"finite (nodes A)\" \"w \\<notin> language A\"\n    obtains n\n    where \"\\<And> l. l \\<ge> n \\<Longrightarrow> card (level A w (2 * k) l) \\<le> card (nodes A) - k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        (\\<And>l.\n            n \\<le> l \\<Longrightarrow>\n            card (level A w (2 * k) l)\n            \\<le> card (nodes A) - k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof (induct k arbitrary: thesis)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>thesis.\n       (\\<And>n.\n           (\\<And>l.\n               n \\<le> l \\<Longrightarrow>\n               card (level A w (2 * 0) l)\n               \\<le> card (nodes A) - 0) \\<Longrightarrow>\n           thesis) \\<Longrightarrow>\n       thesis\n 2. \\<And>k thesis.\n       \\<lbrakk>\\<And>thesis.\n                   (\\<And>n.\n                       (\\<And>l.\n                           n \\<le> l \\<Longrightarrow>\n                           card (level A w (2 * k) l)\n                           \\<le> card (nodes A) - k) \\<Longrightarrow>\n                       thesis) \\<Longrightarrow>\n                   thesis;\n        \\<And>n.\n           (\\<And>l.\n               n \\<le> l \\<Longrightarrow>\n               card (level A w (2 * Suc k) l)\n               \\<le> card (nodes A) - Suc k) \\<Longrightarrow>\n           thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (0)"], ["proof (state)\nthis:\n  (\\<And>l.\n      ?n \\<le> l \\<Longrightarrow>\n      card (level A w (2 * 0) l) \\<le> card (nodes A) - 0) \\<Longrightarrow>\n  thesis\n\ngoal (2 subgoals):\n 1. \\<And>thesis.\n       (\\<And>n.\n           (\\<And>l.\n               n \\<le> l \\<Longrightarrow>\n               card (level A w (2 * 0) l)\n               \\<le> card (nodes A) - 0) \\<Longrightarrow>\n           thesis) \\<Longrightarrow>\n       thesis\n 2. \\<And>k thesis.\n       \\<lbrakk>\\<And>thesis.\n                   (\\<And>n.\n                       (\\<And>l.\n                           n \\<le> l \\<Longrightarrow>\n                           card (level A w (2 * k) l)\n                           \\<le> card (nodes A) - k) \\<Longrightarrow>\n                       thesis) \\<Longrightarrow>\n                   thesis;\n        \\<And>n.\n           (\\<And>l.\n               n \\<le> l \\<Longrightarrow>\n               card (level A w (2 * Suc k) l)\n               \\<le> card (nodes A) - Suc k) \\<Longrightarrow>\n           thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (rule 0)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * 0) l) \\<le> card (nodes A) - 0", "fix l :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * 0) l) \\<le> card (nodes A) - 0", "have \"finite ({l} \\<times> nodes A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ({l} \\<times> nodes A)", "using assms(1)"], ["proof (prove)\nusing this:\n  finite (nodes A)\n\ngoal (1 subgoal):\n 1. finite ({l} \\<times> nodes A)", "by simp"], ["proof (state)\nthis:\n  finite ({l} \\<times> nodes A)\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * 0) l) \\<le> card (nodes A) - 0", "also"], ["proof (state)\nthis:\n  finite ({l} \\<times> nodes A)\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * 0) l) \\<le> card (nodes A) - 0", "have \"level A w 0 l \\<subseteq> {l} \\<times> nodes A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. level A w 0 l \\<subseteq> {l} \\<times> nodes A", "using gnodes_nodes"], ["proof (prove)\nusing this:\n  gnodes ?A ?w ?V \\<subseteq> UNIV \\<times> nodes ?A\n\ngoal (1 subgoal):\n 1. level A w 0 l \\<subseteq> {l} \\<times> nodes A", "by force"], ["proof (state)\nthis:\n  level A w 0 l \\<subseteq> {l} \\<times> nodes A\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * 0) l) \\<le> card (nodes A) - 0", "also (card_mono)"], ["proof (state)\nthis:\n  level A w 0 l \\<subseteq> {l} \\<times> nodes A\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * 0) l) \\<le> card (nodes A) - 0", "have \"card \\<dots> = card (nodes A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card ({l} \\<times> nodes A) = card (nodes A)", "using assms(1)"], ["proof (prove)\nusing this:\n  finite (nodes A)\n\ngoal (1 subgoal):\n 1. card ({l} \\<times> nodes A) = card (nodes A)", "by simp"], ["proof (state)\nthis:\n  card ({l} \\<times> nodes A) = card (nodes A)\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * 0) l) \\<le> card (nodes A) - 0", "finally"], ["proof (chain)\npicking this:\n  card (level A w 0 l) \\<le> card (nodes A)", "show \"card (level A w (2 * 0) l) \\<le> card (nodes A) - 0\""], ["proof (prove)\nusing this:\n  card (level A w 0 l) \\<le> card (nodes A)\n\ngoal (1 subgoal):\n 1. card (level A w (2 * 0) l) \\<le> card (nodes A) - 0", "by simp"], ["proof (state)\nthis:\n  card (level A w (2 * 0) l) \\<le> card (nodes A) - 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<And>k thesis.\n       \\<lbrakk>\\<And>thesis.\n                   (\\<And>n.\n                       (\\<And>l.\n                           n \\<le> l \\<Longrightarrow>\n                           card (level A w (2 * k) l)\n                           \\<le> card (nodes A) - k) \\<Longrightarrow>\n                       thesis) \\<Longrightarrow>\n                   thesis;\n        \\<And>n.\n           (\\<And>l.\n               n \\<le> l \\<Longrightarrow>\n               card (level A w (2 * Suc k) l)\n               \\<le> card (nodes A) - Suc k) \\<Longrightarrow>\n           thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k thesis.\n       \\<lbrakk>\\<And>thesis.\n                   (\\<And>n.\n                       (\\<And>l.\n                           n \\<le> l \\<Longrightarrow>\n                           card (level A w (2 * k) l)\n                           \\<le> card (nodes A) - k) \\<Longrightarrow>\n                       thesis) \\<Longrightarrow>\n                   thesis;\n        \\<And>n.\n           (\\<And>l.\n               n \\<le> l \\<Longrightarrow>\n               card (level A w (2 * Suc k) l)\n               \\<le> card (nodes A) - Suc k) \\<Longrightarrow>\n           thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (Suc k)"], ["proof (state)\nthis:\n  (\\<And>n.\n      (\\<And>l.\n          n \\<le> l \\<Longrightarrow>\n          card (level A w (2 * k) l)\n          \\<le> card (nodes A) - k) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n  (\\<And>l.\n      ?n \\<le> l \\<Longrightarrow>\n      card (level A w (2 * Suc k) l)\n      \\<le> card (nodes A) - Suc k) \\<Longrightarrow>\n  thesis\n\ngoal (1 subgoal):\n 1. \\<And>k thesis.\n       \\<lbrakk>\\<And>thesis.\n                   (\\<And>n.\n                       (\\<And>l.\n                           n \\<le> l \\<Longrightarrow>\n                           card (level A w (2 * k) l)\n                           \\<le> card (nodes A) - k) \\<Longrightarrow>\n                       thesis) \\<Longrightarrow>\n                   thesis;\n        \\<And>n.\n           (\\<And>l.\n               n \\<le> l \\<Longrightarrow>\n               card (level A w (2 * Suc k) l)\n               \\<le> card (nodes A) - Suc k) \\<Longrightarrow>\n           thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (cases \"graph A w (Suc (2 * k)) = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. graph A w (Suc (2 * k)) = {} \\<Longrightarrow> thesis\n 2. graph A w (Suc (2 * k)) \\<noteq> {} \\<Longrightarrow> thesis", "case True"], ["proof (state)\nthis:\n  graph A w (Suc (2 * k)) = {}\n\ngoal (2 subgoals):\n 1. graph A w (Suc (2 * k)) = {} \\<Longrightarrow> thesis\n 2. graph A w (Suc (2 * k)) \\<noteq> {} \\<Longrightarrow> thesis", "have 3: \"graph A w (2 * Suc k) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. graph A w (2 * Suc k) = {}", "using True prune_decreasing"], ["proof (prove)\nusing this:\n  graph A w (Suc (2 * k)) = {}\n  prune ?A ?w ?V \\<subseteq> ?V\n\ngoal (1 subgoal):\n 1. graph A w (2 * Suc k) = {}", "by simp blast"], ["proof (state)\nthis:\n  graph A w (2 * Suc k) = {}\n\ngoal (2 subgoals):\n 1. graph A w (Suc (2 * k)) = {} \\<Longrightarrow> thesis\n 2. graph A w (Suc (2 * k)) \\<noteq> {} \\<Longrightarrow> thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using Suc(2) 3"], ["proof (prove)\nusing this:\n  (\\<And>l.\n      ?n \\<le> l \\<Longrightarrow>\n      card (level A w (2 * Suc k) l)\n      \\<le> card (nodes A) - Suc k) \\<Longrightarrow>\n  thesis\n  graph A w (2 * Suc k) = {}\n\ngoal (1 subgoal):\n 1. thesis", "by simp"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. graph A w (Suc (2 * k)) \\<noteq> {} \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. graph A w (Suc (2 * k)) \\<noteq> {} \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  graph A w (Suc (2 * k)) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. graph A w (Suc (2 * k)) \\<noteq> {} \\<Longrightarrow> thesis", "obtain v r where 1:\n        \"grun A w (graph A w (2 * k)) r v\"\n        \"sset (gtrace r v) \\<subseteq> graph A w (Suc (2 * k))\"\n        \"sset (gtrace r v) \\<subseteq> - graph A w (Suc (Suc (2 * k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r v.\n        \\<lbrakk>grun A w (graph A w (2 * k)) r v;\n         sset (gtrace r v) \\<subseteq> graph A w (Suc (2 * k));\n         sset (gtrace r v)\n         \\<subseteq> - graph A w (Suc (Suc (2 * k)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (rule remove_run)"], ["proof (state)\ngoal (5 subgoals):\n 1. (\\<And>r v.\n        \\<lbrakk>grun A w (graph A w (2 * k)) r v;\n         sset (gtrace r v) \\<subseteq> graph A w (Suc (2 * k));\n         sset (gtrace r v)\n         \\<subseteq> - graph A w (Suc (Suc (2 * k)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (nodes ?A2)\n 2. (\\<And>r v.\n        \\<lbrakk>grun A w (graph A w (2 * k)) r v;\n         sset (gtrace r v) \\<subseteq> graph A w (Suc (2 * k));\n         sset (gtrace r v)\n         \\<subseteq> - graph A w (Suc (Suc (2 * k)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    ?w2 \\<notin> language ?A2\n 3. (\\<And>r v.\n        \\<lbrakk>grun A w (graph A w (2 * k)) r v;\n         sset (gtrace r v) \\<subseteq> graph A w (Suc (2 * k));\n         sset (gtrace r v)\n         \\<subseteq> - graph A w (Suc (Suc (2 * k)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    ?V2 \\<subseteq> gunodes ?A2 ?w2\n 4. (\\<And>r v.\n        \\<lbrakk>grun A w (graph A w (2 * k)) r v;\n         sset (gtrace r v) \\<subseteq> graph A w (Suc (2 * k));\n         sset (gtrace r v)\n         \\<subseteq> - graph A w (Suc (Suc (2 * k)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    clean ?A2 ?w2 ?V2 \\<noteq> {}\n 5. \\<And>v r.\n       \\<lbrakk>\\<And>r v.\n                   \\<lbrakk>grun A w (graph A w (2 * k)) r v;\n                    sset (gtrace r v) \\<subseteq> graph A w (Suc (2 * k));\n                    sset (gtrace r v)\n                    \\<subseteq> - graph A w (Suc (Suc (2 * k)))\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        grun ?A2 ?w2 ?V2 r v;\n        sset (gtrace r v) \\<subseteq> clean ?A2 ?w2 ?V2;\n        sset (gtrace r v)\n        \\<subseteq> - prune ?A2 ?w2 (clean ?A2 ?w2 ?V2)\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"finite (nodes A)\" \"w \\<notin> language A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (nodes A) &&& w \\<notin> language A", "using assms"], ["proof (prove)\nusing this:\n  finite (nodes A)\n  w \\<notin> language A\n\ngoal (1 subgoal):\n 1. finite (nodes A) &&& w \\<notin> language A", "by this"], ["proof (state)\nthis:\n  finite (nodes A)\n  w \\<notin> language A\n\ngoal (3 subgoals):\n 1. (\\<And>r v.\n        \\<lbrakk>grun A w (graph A w (2 * k)) r v;\n         sset (gtrace r v) \\<subseteq> graph A w (Suc (2 * k));\n         sset (gtrace r v)\n         \\<subseteq> - graph A w (Suc (Suc (2 * k)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    ?V2 \\<subseteq> gunodes A w\n 2. (\\<And>r v.\n        \\<lbrakk>grun A w (graph A w (2 * k)) r v;\n         sset (gtrace r v) \\<subseteq> graph A w (Suc (2 * k));\n         sset (gtrace r v)\n         \\<subseteq> - graph A w (Suc (Suc (2 * k)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    clean A w ?V2 \\<noteq> {}\n 3. \\<And>v r.\n       \\<lbrakk>\\<And>r v.\n                   \\<lbrakk>grun A w (graph A w (2 * k)) r v;\n                    sset (gtrace r v) \\<subseteq> graph A w (Suc (2 * k));\n                    sset (gtrace r v)\n                    \\<subseteq> - graph A w (Suc (Suc (2 * k)))\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        grun A w ?V2 r v; sset (gtrace r v) \\<subseteq> clean A w ?V2;\n        sset (gtrace r v) \\<subseteq> - prune A w (clean A w ?V2)\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"clean A w (graph A w (2 * k)) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. clean A w (graph A w (2 * k)) \\<noteq> {}", "using False"], ["proof (prove)\nusing this:\n  graph A w (Suc (2 * k)) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. clean A w (graph A w (2 * k)) \\<noteq> {}", "by simp"], ["proof (state)\nthis:\n  clean A w (graph A w (2 * k)) \\<noteq> {}\n\ngoal (2 subgoals):\n 1. (\\<And>r v.\n        \\<lbrakk>grun A w (graph A w (2 * k)) r v;\n         sset (gtrace r v) \\<subseteq> graph A w (Suc (2 * k));\n         sset (gtrace r v)\n         \\<subseteq> - graph A w (Suc (Suc (2 * k)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    graph A w (2 * k) \\<subseteq> gunodes A w\n 2. \\<And>v r.\n       \\<lbrakk>\\<And>r v.\n                   \\<lbrakk>grun A w (graph A w (2 * k)) r v;\n                    sset (gtrace r v) \\<subseteq> graph A w (Suc (2 * k));\n                    sset (gtrace r v)\n                    \\<subseteq> - graph A w (Suc (Suc (2 * k)))\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        grun A w (graph A w (2 * k)) r v;\n        sset (gtrace r v) \\<subseteq> clean A w (graph A w (2 * k));\n        sset (gtrace r v)\n        \\<subseteq> - prune A w (clean A w (graph A w (2 * k)))\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"graph A w (2 * k) \\<subseteq> gunodes A w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. graph A w (2 * k) \\<subseteq> gunodes A w", "using graph_nodes"], ["proof (prove)\nusing this:\n  graph ?A ?w ?k \\<subseteq> gunodes ?A ?w\n\ngoal (1 subgoal):\n 1. graph A w (2 * k) \\<subseteq> gunodes A w", "by this"], ["proof (state)\nthis:\n  graph A w (2 * k) \\<subseteq> gunodes A w\n\ngoal (1 subgoal):\n 1. \\<And>v r.\n       \\<lbrakk>\\<And>r v.\n                   \\<lbrakk>grun A w (graph A w (2 * k)) r v;\n                    sset (gtrace r v) \\<subseteq> graph A w (Suc (2 * k));\n                    sset (gtrace r v)\n                    \\<subseteq> - graph A w (Suc (Suc (2 * k)))\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        grun A w (graph A w (2 * k)) r v;\n        sset (gtrace r v) \\<subseteq> clean A w (graph A w (2 * k));\n        sset (gtrace r v)\n        \\<subseteq> - prune A w (clean A w (graph A w (2 * k)))\\<rbrakk>\n       \\<Longrightarrow> thesis", "qed auto"], ["proof (state)\nthis:\n  grun A w (graph A w (2 * k)) r v\n  sset (gtrace r v) \\<subseteq> graph A w (Suc (2 * k))\n  sset (gtrace r v) \\<subseteq> - graph A w (Suc (Suc (2 * k)))\n\ngoal (1 subgoal):\n 1. graph A w (Suc (2 * k)) \\<noteq> {} \\<Longrightarrow> thesis", "obtain l q where 2: \"v = (l, q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l q. v = (l, q) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  v = (l, q)\n\ngoal (1 subgoal):\n 1. graph A w (Suc (2 * k)) \\<noteq> {} \\<Longrightarrow> thesis", "obtain n where 90: \"\\<And> l. n \\<le> l \\<Longrightarrow> card (level A w (2 * k) l) \\<le> card (nodes A) - k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        (\\<And>l.\n            n \\<le> l \\<Longrightarrow>\n            card (level A w (2 * k) l)\n            \\<le> card (nodes A) - k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using Suc(1)"], ["proof (prove)\nusing this:\n  (\\<And>n.\n      (\\<And>l.\n          n \\<le> l \\<Longrightarrow>\n          card (level A w (2 * k) l)\n          \\<le> card (nodes A) - k) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        (\\<And>l.\n            n \\<le> l \\<Longrightarrow>\n            card (level A w (2 * k) l)\n            \\<le> card (nodes A) - k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  n \\<le> ?l \\<Longrightarrow>\n  card (level A w (2 * k) ?l) \\<le> card (nodes A) - k\n\ngoal (1 subgoal):\n 1. graph A w (Suc (2 * k)) \\<noteq> {} \\<Longrightarrow> thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (rule Suc(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * Suc k) l) \\<le> card (nodes A) - Suc k", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * Suc k) l) \\<le> card (nodes A) - Suc k", "assume 100: \"n + Suc l \\<le> j\""], ["proof (state)\nthis:\n  n + Suc l \\<le> j\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * Suc k) l) \\<le> card (nodes A) - Suc k", "have 6: \"graph A w (Suc (Suc (2 * k))) \\<subseteq> graph A w (Suc (2 * k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. graph A w (Suc (Suc (2 * k))) \\<subseteq> graph A w (Suc (2 * k))", "using graph_antimono antimono_iff_le_Suc"], ["proof (prove)\nusing this:\n  decseq (graph ?A ?w)\n  decseq ?f = (\\<forall>n. ?f (Suc n) \\<le> ?f n)\n\ngoal (1 subgoal):\n 1. graph A w (Suc (Suc (2 * k))) \\<subseteq> graph A w (Suc (2 * k))", "by blast"], ["proof (state)\nthis:\n  graph A w (Suc (Suc (2 * k))) \\<subseteq> graph A w (Suc (2 * k))\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * Suc k) l) \\<le> card (nodes A) - Suc k", "have 101: \"gtrace r v !! (j - Suc l) \\<in> graph A w (Suc (2 * k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gtrace r v !! (j - Suc l) \\<in> graph A w (Suc (2 * k))", "using 1(2) snth_sset"], ["proof (prove)\nusing this:\n  sset (gtrace r v) \\<subseteq> graph A w (Suc (2 * k))\n  ?s !! ?n \\<in> sset ?s\n\ngoal (1 subgoal):\n 1. gtrace r v !! (j - Suc l) \\<in> graph A w (Suc (2 * k))", "by auto"], ["proof (state)\nthis:\n  gtrace r v !! (j - Suc l) \\<in> graph A w (Suc (2 * k))\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * Suc k) l) \\<le> card (nodes A) - Suc k", "have 102: \"gtrace r v !! (j - Suc l) \\<notin> graph A w (Suc (Suc (2 * k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gtrace r v !! (j - Suc l) \\<notin> graph A w (Suc (Suc (2 * k)))", "using 1(3) snth_sset"], ["proof (prove)\nusing this:\n  sset (gtrace r v) \\<subseteq> - graph A w (Suc (Suc (2 * k)))\n  ?s !! ?n \\<in> sset ?s\n\ngoal (1 subgoal):\n 1. gtrace r v !! (j - Suc l) \\<notin> graph A w (Suc (Suc (2 * k)))", "by blast"], ["proof (state)\nthis:\n  gtrace r v !! (j - Suc l) \\<notin> graph A w (Suc (Suc (2 * k)))\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * Suc k) l) \\<le> card (nodes A) - Suc k", "have 103: \"gtrace r v !! (j - Suc l) \\<in> level A w (Suc (2 * k)) j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gtrace r v !! (j - Suc l) \\<in> level A w (Suc (2 * k)) j", "using 1(1) 100 101 2"], ["proof (prove)\nusing this:\n  grun A w (graph A w (2 * k)) r v\n  n + Suc l \\<le> j\n  gtrace r v !! (j - Suc l) \\<in> graph A w (Suc (2 * k))\n  v = (l, q)\n\ngoal (1 subgoal):\n 1. gtrace r v !! (j - Suc l) \\<in> level A w (Suc (2 * k)) j", "by (auto elim: grun_elim)"], ["proof (state)\nthis:\n  gtrace r v !! (j - Suc l) \\<in> level A w (Suc (2 * k)) j\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * Suc k) l) \\<le> card (nodes A) - Suc k", "have 104: \"gtrace r v !! (j - Suc l) \\<notin> level A w (Suc (Suc (2 * k))) j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gtrace r v !! (j - Suc l) \\<notin> level A w (Suc (Suc (2 * k))) j", "using 100 102"], ["proof (prove)\nusing this:\n  n + Suc l \\<le> j\n  gtrace r v !! (j - Suc l) \\<notin> graph A w (Suc (Suc (2 * k)))\n\ngoal (1 subgoal):\n 1. gtrace r v !! (j - Suc l) \\<notin> level A w (Suc (Suc (2 * k))) j", "by simp"], ["proof (state)\nthis:\n  gtrace r v !! (j - Suc l) \\<notin> level A w (Suc (Suc (2 * k))) j\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * Suc k) l) \\<le> card (nodes A) - Suc k", "have \"level A w (2 * Suc k) j = level A w (Suc (Suc (2 * k))) j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. level A w (2 * Suc k) j = level A w (Suc (Suc (2 * k))) j", "by simp"], ["proof (state)\nthis:\n  level A w (2 * Suc k) j = level A w (Suc (Suc (2 * k))) j\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * Suc k) l) \\<le> card (nodes A) - Suc k", "also"], ["proof (state)\nthis:\n  level A w (2 * Suc k) j = level A w (Suc (Suc (2 * k))) j\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * Suc k) l) \\<le> card (nodes A) - Suc k", "have \"\\<dots> \\<subset> level A w (Suc (2 * k)) j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. level A w (Suc (Suc (2 * k))) j \\<subset> level A w (Suc (2 * k)) j", "using 103 104 6"], ["proof (prove)\nusing this:\n  gtrace r v !! (j - Suc l) \\<in> level A w (Suc (2 * k)) j\n  gtrace r v !! (j - Suc l) \\<notin> level A w (Suc (Suc (2 * k))) j\n  graph A w (Suc (Suc (2 * k))) \\<subseteq> graph A w (Suc (2 * k))\n\ngoal (1 subgoal):\n 1. level A w (Suc (Suc (2 * k))) j \\<subset> level A w (Suc (2 * k)) j", "by blast"], ["proof (state)\nthis:\n  level A w (Suc (Suc (2 * k))) j \\<subset> level A w (Suc (2 * k)) j\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * Suc k) l) \\<le> card (nodes A) - Suc k", "also"], ["proof (state)\nthis:\n  level A w (Suc (Suc (2 * k))) j \\<subset> level A w (Suc (2 * k)) j\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * Suc k) l) \\<le> card (nodes A) - Suc k", "have \"\\<dots> \\<subseteq> level A w (2 * k) j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. level A w (Suc (2 * k)) j \\<subseteq> level A w (2 * k) j", "by (simp add: Collect_mono clean_def)"], ["proof (state)\nthis:\n  level A w (Suc (2 * k)) j \\<subseteq> level A w (2 * k) j\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * Suc k) l) \\<le> card (nodes A) - Suc k", "finally"], ["proof (chain)\npicking this:\n  level A w (2 * Suc k) j \\<subset> level A w (2 * k) j", "have 105: \"level A w (2 * Suc k) j \\<subset> level A w (2 * k) j\""], ["proof (prove)\nusing this:\n  level A w (2 * Suc k) j \\<subset> level A w (2 * k) j\n\ngoal (1 subgoal):\n 1. level A w (2 * Suc k) j \\<subset> level A w (2 * k) j", "by this"], ["proof (state)\nthis:\n  level A w (2 * Suc k) j \\<subset> level A w (2 * k) j\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * Suc k) l) \\<le> card (nodes A) - Suc k", "have \"card (level A w (2 * Suc k) j) < card (level A w (2 * k) j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (level A w (2 * Suc k) j) < card (level A w (2 * k) j)", "using assms(1) 105"], ["proof (prove)\nusing this:\n  finite (nodes A)\n  level A w (2 * Suc k) j \\<subset> level A w (2 * k) j\n\ngoal (1 subgoal):\n 1. card (level A w (2 * Suc k) j) < card (level A w (2 * k) j)", "by (simp add: graph_level_finite psubset_card_mono)"], ["proof (state)\nthis:\n  card (level A w (2 * Suc k) j) < card (level A w (2 * k) j)\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * Suc k) l) \\<le> card (nodes A) - Suc k", "also"], ["proof (state)\nthis:\n  card (level A w (2 * Suc k) j) < card (level A w (2 * k) j)\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * Suc k) l) \\<le> card (nodes A) - Suc k", "have \"\\<dots> \\<le> card (nodes A) - k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (level A w (2 * k) j) \\<le> card (nodes A) - k", "using 90 100"], ["proof (prove)\nusing this:\n  n \\<le> ?l \\<Longrightarrow>\n  card (level A w (2 * k) ?l) \\<le> card (nodes A) - k\n  n + Suc l \\<le> j\n\ngoal (1 subgoal):\n 1. card (level A w (2 * k) j) \\<le> card (nodes A) - k", "by simp"], ["proof (state)\nthis:\n  card (level A w (2 * k) j) \\<le> card (nodes A) - k\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       ?n \\<le> l \\<Longrightarrow>\n       card (level A w (2 * Suc k) l) \\<le> card (nodes A) - Suc k", "finally"], ["proof (chain)\npicking this:\n  card (level A w (2 * Suc k) j) < card (nodes A) - k", "show \"card (level A w (2 * Suc k) j) \\<le> card (nodes A) - Suc k\""], ["proof (prove)\nusing this:\n  card (level A w (2 * Suc k) j) < card (nodes A) - k\n\ngoal (1 subgoal):\n 1. card (level A w (2 * Suc k) j) \\<le> card (nodes A) - Suc k", "by simp"], ["proof (state)\nthis:\n  card (level A w (2 * Suc k) j) \\<le> card (nodes A) - Suc k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma graph_empty:\n    assumes \"finite (nodes A)\" \"w \\<notin> language A\"\n    shows \"graph A w (Suc (2 * card (nodes A))) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. graph A w (Suc (2 * card (nodes A))) = {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. graph A w (Suc (2 * card (nodes A))) = {}", "obtain n where 1: \"\\<And> l. l \\<ge> n \\<Longrightarrow> card (level A w (2 * card (nodes A)) l) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        (\\<And>l.\n            n \\<le> l \\<Longrightarrow>\n            card (level A w (2 * card (nodes A)) l) = 0) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using level_bounded[OF assms(1, 2), of \"card (nodes A)\"]"], ["proof (prove)\nusing this:\n  (\\<And>n.\n      (\\<And>l.\n          n \\<le> l \\<Longrightarrow>\n          card (level A w (2 * card (nodes A)) l)\n          \\<le> card (nodes A) - card (nodes A)) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        (\\<And>l.\n            n \\<le> l \\<Longrightarrow>\n            card (level A w (2 * card (nodes A)) l) = 0) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  n \\<le> ?l \\<Longrightarrow> card (level A w (2 * card (nodes A)) ?l) = 0\n\ngoal (1 subgoal):\n 1. graph A w (Suc (2 * card (nodes A))) = {}", "have \"graph A w (2 * card (nodes A)) =\n      (\\<Union> l \\<in> {..< n}. level A w (2 * card (nodes A)) l) \\<union>\n      (\\<Union> l \\<in> {n ..}. level A w (2 * card (nodes A)) l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. graph A w (2 * card (nodes A)) =\n    \\<Union> (level A w (2 * card (nodes A)) ` {..<n}) \\<union>\n    \\<Union> (level A w (2 * card (nodes A)) ` {n..})", "by auto"], ["proof (state)\nthis:\n  graph A w (2 * card (nodes A)) =\n  \\<Union> (level A w (2 * card (nodes A)) ` {..<n}) \\<union>\n  \\<Union> (level A w (2 * card (nodes A)) ` {n..})\n\ngoal (1 subgoal):\n 1. graph A w (Suc (2 * card (nodes A))) = {}", "also"], ["proof (state)\nthis:\n  graph A w (2 * card (nodes A)) =\n  \\<Union> (level A w (2 * card (nodes A)) ` {..<n}) \\<union>\n  \\<Union> (level A w (2 * card (nodes A)) ` {n..})\n\ngoal (1 subgoal):\n 1. graph A w (Suc (2 * card (nodes A))) = {}", "have \"(\\<Union> l \\<in> {n ..}. level A w (2 * card (nodes A)) l) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (level A w (2 * card (nodes A)) ` {n..}) = {}", "using graph_level_finite assms(1) 1"], ["proof (prove)\nusing this:\n  finite (nodes ?A) \\<Longrightarrow> finite (level ?A ?w ?k ?l)\n  finite (nodes A)\n  n \\<le> ?l \\<Longrightarrow> card (level A w (2 * card (nodes A)) ?l) = 0\n\ngoal (1 subgoal):\n 1. \\<Union> (level A w (2 * card (nodes A)) ` {n..}) = {}", "by fastforce"], ["proof (state)\nthis:\n  \\<Union> (level A w (2 * card (nodes A)) ` {n..}) = {}\n\ngoal (1 subgoal):\n 1. graph A w (Suc (2 * card (nodes A))) = {}", "also"], ["proof (state)\nthis:\n  \\<Union> (level A w (2 * card (nodes A)) ` {n..}) = {}\n\ngoal (1 subgoal):\n 1. graph A w (Suc (2 * card (nodes A))) = {}", "have \"finite ((\\<Union> l \\<in> {..< n}. level A w (2 * card (nodes A)) l) \\<union> {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (\\<Union> (level A w (2 * card (nodes A)) ` {..<n}) \\<union> {})", "using graph_level_finite assms(1)"], ["proof (prove)\nusing this:\n  finite (nodes ?A) \\<Longrightarrow> finite (level ?A ?w ?k ?l)\n  finite (nodes A)\n\ngoal (1 subgoal):\n 1. finite (\\<Union> (level A w (2 * card (nodes A)) ` {..<n}) \\<union> {})", "by auto"], ["proof (state)\nthis:\n  finite (\\<Union> (level A w (2 * card (nodes A)) ` {..<n}) \\<union> {})\n\ngoal (1 subgoal):\n 1. graph A w (Suc (2 * card (nodes A))) = {}", "finally"], ["proof (chain)\npicking this:\n  finite (graph A w (2 * card (nodes A)))", "have 100: \"finite (graph A w (2 * card (nodes A)))\""], ["proof (prove)\nusing this:\n  finite (graph A w (2 * card (nodes A)))\n\ngoal (1 subgoal):\n 1. finite (graph A w (2 * card (nodes A)))", "by this"], ["proof (state)\nthis:\n  finite (graph A w (2 * card (nodes A)))\n\ngoal (1 subgoal):\n 1. graph A w (Suc (2 * card (nodes A))) = {}", "have 101: \"finite (greachable A w (graph A w (2 * card (nodes A))) v)\" for v"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (greachable A w (graph A w (2 * card (nodes A))) v)", "using 100 greachable_subset[of A w \"graph A w (2 * card (nodes A))\" v]"], ["proof (prove)\nusing this:\n  finite (graph A w (2 * card (nodes A)))\n  greachable A w (graph A w (2 * card (nodes A))) v\n  \\<subseteq> insert v (graph A w (2 * card (nodes A)))\n\ngoal (1 subgoal):\n 1. finite (greachable A w (graph A w (2 * card (nodes A))) v)", "using finite_insert infinite_super"], ["proof (prove)\nusing this:\n  finite (graph A w (2 * card (nodes A)))\n  greachable A w (graph A w (2 * card (nodes A))) v\n  \\<subseteq> insert v (graph A w (2 * card (nodes A)))\n  finite (insert ?a ?A) = finite ?A\n  \\<lbrakk>?S \\<subseteq> ?T; infinite ?S\\<rbrakk>\n  \\<Longrightarrow> infinite ?T\n\ngoal (1 subgoal):\n 1. finite (greachable A w (graph A w (2 * card (nodes A))) v)", "by auto"], ["proof (state)\nthis:\n  finite (greachable A w (graph A w (2 * card (nodes A))) ?v)\n\ngoal (1 subgoal):\n 1. graph A w (Suc (2 * card (nodes A))) = {}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. graph A w (Suc (2 * card (nodes A))) = {}", "using 101"], ["proof (prove)\nusing this:\n  finite (greachable A w (graph A w (2 * card (nodes A))) ?v)\n\ngoal (1 subgoal):\n 1. graph A w (Suc (2 * card (nodes A))) = {}", "by (simp add: clean_def)"], ["proof (state)\nthis:\n  graph A w (Suc (2 * card (nodes A))) = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma graph_le:\n    assumes \"finite (nodes A)\" \"w \\<notin> language A\"\n    assumes \"v \\<in> graph A w k\"\n    shows \"k \\<le> 2 * card (nodes A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> 2 * card (nodes A)", "using graph_empty graph_antimono assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite (nodes ?A); ?w \\<notin> language ?A\\<rbrakk>\n  \\<Longrightarrow> graph ?A ?w (Suc (2 * card (nodes ?A))) = {}\n  decseq (graph ?A ?w)\n  finite (nodes A)\n  w \\<notin> language A\n  v \\<in> graph A w k\n\ngoal (1 subgoal):\n 1. k \\<le> 2 * card (nodes A)", "by (metis (no_types, lifting) Suc_leI antimono_def basic_trans_rules(30) empty_iff not_le_imp_less)"], ["", "subsection \\<open>Node Ranks\\<close>"], ["", "definition rank :: \"('label, 'state) nba \\<Rightarrow> 'label stream \\<Rightarrow> 'state node \\<Rightarrow> nat\" where\n    \"rank A w v \\<equiv> GREATEST k. v \\<in> graph A w k\""], ["", "lemma rank_member:\n    assumes \"finite (nodes A)\" \"w \\<notin> language A\" \"v \\<in> gunodes A w\"\n    shows \"v \\<in> graph A w (rank A w v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> graph A w (rank A w v)", "unfolding rank_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> graph A w (GREATEST k. v \\<in> graph A w k)", "proof (rule GreatestI_nat)"], ["proof (state)\ngoal (2 subgoals):\n 1. v \\<in> graph A w ?k\n 2. \\<And>y. v \\<in> graph A w y \\<Longrightarrow> y \\<le> ?b", "show \"v \\<in> graph A w 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> graph A w 0", "using assms(3)"], ["proof (prove)\nusing this:\n  v \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. v \\<in> graph A w 0", "by simp"], ["proof (state)\nthis:\n  v \\<in> graph A w 0\n\ngoal (1 subgoal):\n 1. \\<And>y. v \\<in> graph A w y \\<Longrightarrow> y \\<le> ?b", "show \"k \\<le> 2 * card (nodes A)\" if \"v \\<in> graph A w k\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> 2 * card (nodes A)", "using graph_le assms(1, 2) that"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite (nodes ?A); ?w \\<notin> language ?A;\n   ?v \\<in> graph ?A ?w ?k\\<rbrakk>\n  \\<Longrightarrow> ?k \\<le> 2 * card (nodes ?A)\n  finite (nodes A)\n  w \\<notin> language A\n  v \\<in> graph A w k\n\ngoal (1 subgoal):\n 1. k \\<le> 2 * card (nodes A)", "by blast"], ["proof (state)\nthis:\n  v \\<in> graph A w ?k \\<Longrightarrow> ?k \\<le> 2 * card (nodes A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rank_removed:\n    assumes \"finite (nodes A)\" \"w \\<notin> language A\"\n    shows \"v \\<notin> graph A w (Suc (rank A w v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<notin> graph A w (Suc (rank A w v))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<in> graph A w (Suc (rank A w v)) \\<Longrightarrow> False", "assume \"v \\<in> graph A w (Suc (rank A w v))\""], ["proof (state)\nthis:\n  v \\<in> graph A w (Suc (rank A w v))\n\ngoal (1 subgoal):\n 1. v \\<in> graph A w (Suc (rank A w v)) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  v \\<in> graph A w (Suc (rank A w v))", "have 2: \"Suc (rank A w v) \\<le> rank A w v\""], ["proof (prove)\nusing this:\n  v \\<in> graph A w (Suc (rank A w v))\n\ngoal (1 subgoal):\n 1. Suc (rank A w v) \\<le> rank A w v", "unfolding rank_def"], ["proof (prove)\nusing this:\n  v \\<in> graph A w (Suc (GREATEST k. v \\<in> graph A w k))\n\ngoal (1 subgoal):\n 1. Suc (GREATEST k. v \\<in> graph A w k)\n    \\<le> (GREATEST k. v \\<in> graph A w k)", "using Greatest_le_nat graph_le assms"], ["proof (prove)\nusing this:\n  v \\<in> graph A w (Suc (GREATEST k. v \\<in> graph A w k))\n  \\<lbrakk>?P ?k; \\<And>y. ?P y \\<Longrightarrow> y \\<le> ?b\\<rbrakk>\n  \\<Longrightarrow> ?k \\<le> Greatest ?P\n  \\<lbrakk>finite (nodes ?A); ?w \\<notin> language ?A;\n   ?v \\<in> graph ?A ?w ?k\\<rbrakk>\n  \\<Longrightarrow> ?k \\<le> 2 * card (nodes ?A)\n  finite (nodes A)\n  w \\<notin> language A\n\ngoal (1 subgoal):\n 1. Suc (GREATEST k. v \\<in> graph A w k)\n    \\<le> (GREATEST k. v \\<in> graph A w k)", "by metis"], ["proof (state)\nthis:\n  Suc (rank A w v) \\<le> rank A w v\n\ngoal (1 subgoal):\n 1. v \\<in> graph A w (Suc (rank A w v)) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Suc (rank A w v) \\<le> rank A w v", "show \"False\""], ["proof (prove)\nusing this:\n  Suc (rank A w v) \\<le> rank A w v\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rank_le:\n    assumes \"finite (nodes A)\" \"w \\<notin> language A\"\n    assumes \"v \\<in> gunodes A w\" \"u \\<in> gusuccessors A w v\"\n    shows \"rank A w u \\<le> rank A w v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank A w u \\<le> rank A w v", "unfolding rank_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (GREATEST k. u \\<in> graph A w k)\n    \\<le> (GREATEST k. v \\<in> graph A w k)", "proof (rule Greatest_le_nat)"], ["proof (state)\ngoal (2 subgoals):\n 1. v \\<in> graph A w (GREATEST k. u \\<in> graph A w k)\n 2. \\<And>y. v \\<in> graph A w y \\<Longrightarrow> y \\<le> ?b", "have 1: \"u \\<in> gureachable A w v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> gureachable A w v", "using graph.reachable_successors assms(4)"], ["proof (prove)\nusing this:\n  gsuccessors ?A ?w ?V ?p \\<subseteq> greachable ?A ?w ?V ?p\n  u \\<in> gusuccessors A w v\n\ngoal (1 subgoal):\n 1. u \\<in> gureachable A w v", "by blast"], ["proof (state)\nthis:\n  u \\<in> gureachable A w v\n\ngoal (2 subgoals):\n 1. v \\<in> graph A w (GREATEST k. u \\<in> graph A w k)\n 2. \\<And>y. v \\<in> graph A w y \\<Longrightarrow> y \\<le> ?b", "have 2: \"u \\<in> gunodes A w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> gunodes A w", "using assms(3) 1"], ["proof (prove)\nusing this:\n  v \\<in> gunodes A w\n  u \\<in> gureachable A w v\n\ngoal (1 subgoal):\n 1. u \\<in> gunodes A w", "by auto"], ["proof (state)\nthis:\n  u \\<in> gunodes A w\n\ngoal (2 subgoals):\n 1. v \\<in> graph A w (GREATEST k. u \\<in> graph A w k)\n 2. \\<And>y. v \\<in> graph A w y \\<Longrightarrow> y \\<le> ?b", "show \"v \\<in> graph A w (GREATEST k. u \\<in> graph A w k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> graph A w (GREATEST k. u \\<in> graph A w k)", "unfolding rank_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> graph A w (rank A w u)", "proof (rule graph_successors)"], ["proof (state)\ngoal (3 subgoals):\n 1. v \\<in> gunodes A w\n 2. ?u \\<in> gusuccessors A w v\n 3. ?u \\<in> graph A w (rank A w u)", "show \"v \\<in> gunodes A w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> gunodes A w", "using assms(3)"], ["proof (prove)\nusing this:\n  v \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. v \\<in> gunodes A w", "by this"], ["proof (state)\nthis:\n  v \\<in> gunodes A w\n\ngoal (2 subgoals):\n 1. ?u \\<in> gusuccessors A w v\n 2. ?u \\<in> graph A w (rank A w u)", "show \"u \\<in> gusuccessors A w v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> gusuccessors A w v", "using assms(4)"], ["proof (prove)\nusing this:\n  u \\<in> gusuccessors A w v\n\ngoal (1 subgoal):\n 1. u \\<in> gusuccessors A w v", "by this"], ["proof (state)\nthis:\n  u \\<in> gusuccessors A w v\n\ngoal (1 subgoal):\n 1. u \\<in> graph A w (rank A w u)", "show \"u \\<in> graph A w (rank A w u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> graph A w (rank A w u)", "using rank_member assms(1, 2) 2"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite (nodes ?A); ?w \\<notin> language ?A;\n   ?v \\<in> gunodes ?A ?w\\<rbrakk>\n  \\<Longrightarrow> ?v \\<in> graph ?A ?w (rank ?A ?w ?v)\n  finite (nodes A)\n  w \\<notin> language A\n  u \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. u \\<in> graph A w (rank A w u)", "by this"], ["proof (state)\nthis:\n  u \\<in> graph A w (rank A w u)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v \\<in> graph A w (GREATEST k. u \\<in> graph A w k)\n\ngoal (1 subgoal):\n 1. \\<And>y. v \\<in> graph A w y \\<Longrightarrow> y \\<le> ?b", "show \"k \\<le> 2 * card (nodes A)\" if \"v \\<in> graph A w k\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> 2 * card (nodes A)", "using graph_le assms(1, 2) that"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite (nodes ?A); ?w \\<notin> language ?A;\n   ?v \\<in> graph ?A ?w ?k\\<rbrakk>\n  \\<Longrightarrow> ?k \\<le> 2 * card (nodes ?A)\n  finite (nodes A)\n  w \\<notin> language A\n  v \\<in> graph A w k\n\ngoal (1 subgoal):\n 1. k \\<le> 2 * card (nodes A)", "by blast"], ["proof (state)\nthis:\n  v \\<in> graph A w ?k \\<Longrightarrow> ?k \\<le> 2 * card (nodes A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma language_ranking:\n    assumes \"finite (nodes A)\" \"w \\<notin> language A\"\n    shows \"ranking A w (rank A w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ranking A w (rank A w)", "unfolding ranking_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>v\\<in>gunodes A w. rank A w v \\<le> 2 * card (nodes A)) \\<and>\n    (\\<forall>v\\<in>gunodes A w.\n        \\<forall>u\\<in>gusuccessors A w v.\n           rank A w u \\<le> rank A w v) \\<and>\n    (\\<forall>v\\<in>gunodes A w.\n        gaccepting A v \\<longrightarrow> even (rank A w v)) \\<and>\n    (\\<forall>v\\<in>gunodes A w.\n        \\<forall>r k.\n           gurun A w r v \\<longrightarrow>\n           smap (rank A w) (gtrace r v) = sconst k \\<longrightarrow> odd k)", "proof (intro conjI ballI allI impI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>v.\n       v \\<in> gunodes A w \\<Longrightarrow>\n       rank A w v \\<le> 2 * card (nodes A)\n 2. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> rank A w u \\<le> rank A w v\n 3. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (rank A w v)\n 4. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "fix v"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>v.\n       v \\<in> gunodes A w \\<Longrightarrow>\n       rank A w v \\<le> 2 * card (nodes A)\n 2. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> rank A w u \\<le> rank A w v\n 3. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (rank A w v)\n 4. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "assume 1: \"v \\<in> gunodes A w\""], ["proof (state)\nthis:\n  v \\<in> gunodes A w\n\ngoal (4 subgoals):\n 1. \\<And>v.\n       v \\<in> gunodes A w \\<Longrightarrow>\n       rank A w v \\<le> 2 * card (nodes A)\n 2. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> rank A w u \\<le> rank A w v\n 3. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (rank A w v)\n 4. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "have 2: \"v \\<in> graph A w (rank A w v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> graph A w (rank A w v)", "using rank_member assms 1"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite (nodes ?A); ?w \\<notin> language ?A;\n   ?v \\<in> gunodes ?A ?w\\<rbrakk>\n  \\<Longrightarrow> ?v \\<in> graph ?A ?w (rank ?A ?w ?v)\n  finite (nodes A)\n  w \\<notin> language A\n  v \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. v \\<in> graph A w (rank A w v)", "by this"], ["proof (state)\nthis:\n  v \\<in> graph A w (rank A w v)\n\ngoal (4 subgoals):\n 1. \\<And>v.\n       v \\<in> gunodes A w \\<Longrightarrow>\n       rank A w v \\<le> 2 * card (nodes A)\n 2. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> rank A w u \\<le> rank A w v\n 3. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (rank A w v)\n 4. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "show \"rank A w v \\<le> 2 * card (nodes A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank A w v \\<le> 2 * card (nodes A)", "using graph_le assms 2"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite (nodes ?A); ?w \\<notin> language ?A;\n   ?v \\<in> graph ?A ?w ?k\\<rbrakk>\n  \\<Longrightarrow> ?k \\<le> 2 * card (nodes ?A)\n  finite (nodes A)\n  w \\<notin> language A\n  v \\<in> graph A w (rank A w v)\n\ngoal (1 subgoal):\n 1. rank A w v \\<le> 2 * card (nodes A)", "by this"], ["proof (state)\nthis:\n  rank A w v \\<le> 2 * card (nodes A)\n\ngoal (3 subgoals):\n 1. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> rank A w u \\<le> rank A w v\n 2. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (rank A w v)\n 3. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> rank A w u \\<le> rank A w v\n 2. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (rank A w v)\n 3. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "fix v u"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> rank A w u \\<le> rank A w v\n 2. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (rank A w v)\n 3. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "assume 1: \"v \\<in> gunodes A w\" \"u \\<in> gusuccessors A w v\""], ["proof (state)\nthis:\n  v \\<in> gunodes A w\n  u \\<in> gusuccessors A w v\n\ngoal (3 subgoals):\n 1. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> rank A w u \\<le> rank A w v\n 2. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (rank A w v)\n 3. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "show \"rank A w u \\<le> rank A w v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank A w u \\<le> rank A w v", "using rank_le assms 1"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite (nodes ?A); ?w \\<notin> language ?A;\n   ?v \\<in> gunodes ?A ?w; ?u \\<in> gusuccessors ?A ?w ?v\\<rbrakk>\n  \\<Longrightarrow> rank ?A ?w ?u \\<le> rank ?A ?w ?v\n  finite (nodes A)\n  w \\<notin> language A\n  v \\<in> gunodes A w\n  u \\<in> gusuccessors A w v\n\ngoal (1 subgoal):\n 1. rank A w u \\<le> rank A w v", "by this"], ["proof (state)\nthis:\n  rank A w u \\<le> rank A w v\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (rank A w v)\n 2. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (rank A w v)\n 2. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "fix v"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (rank A w v)\n 2. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "assume 1: \"v \\<in> gunodes A w\" \"gaccepting A v\""], ["proof (state)\nthis:\n  v \\<in> gunodes A w\n  gaccepting A v\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (rank A w v)\n 2. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "have 2: \"v \\<in> graph A w (rank A w v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> graph A w (rank A w v)", "using rank_member assms 1(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite (nodes ?A); ?w \\<notin> language ?A;\n   ?v \\<in> gunodes ?A ?w\\<rbrakk>\n  \\<Longrightarrow> ?v \\<in> graph ?A ?w (rank ?A ?w ?v)\n  finite (nodes A)\n  w \\<notin> language A\n  v \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. v \\<in> graph A w (rank A w v)", "by this"], ["proof (state)\nthis:\n  v \\<in> graph A w (rank A w v)\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (rank A w v)\n 2. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "have 3: \"v \\<notin> graph A w (Suc (rank A w v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<notin> graph A w (Suc (rank A w v))", "using rank_removed assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite (nodes ?A); ?w \\<notin> language ?A\\<rbrakk>\n  \\<Longrightarrow> ?v \\<notin> graph ?A ?w (Suc (rank ?A ?w ?v))\n  finite (nodes A)\n  w \\<notin> language A\n\ngoal (1 subgoal):\n 1. v \\<notin> graph A w (Suc (rank A w v))", "by this"], ["proof (state)\nthis:\n  v \\<notin> graph A w (Suc (rank A w v))\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (rank A w v)\n 2. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "have 4: \"v \\<in> prune A w (graph A w (rank A w v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> prune A w (graph A w (rank A w v))", "using 2 1(2)"], ["proof (prove)\nusing this:\n  v \\<in> graph A w (rank A w v)\n  gaccepting A v\n\ngoal (1 subgoal):\n 1. v \\<in> prune A w (graph A w (rank A w v))", "unfolding prune_def"], ["proof (prove)\nusing this:\n  v \\<in> graph A w (rank A w v)\n  gaccepting A v\n\ngoal (1 subgoal):\n 1. v \\<in> {va \\<in> graph A w (rank A w v).\n             Bex (greachable A w (graph A w (rank A w v)) va)\n              (gaccepting A)}", "by auto"], ["proof (state)\nthis:\n  v \\<in> prune A w (graph A w (rank A w v))\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (rank A w v)\n 2. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "have 5: \"graph A w (Suc (rank A w v)) \\<noteq> prune A w (graph A w (rank A w v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. graph A w (Suc (rank A w v)) \\<noteq> prune A w (graph A w (rank A w v))", "using 3 4"], ["proof (prove)\nusing this:\n  v \\<notin> graph A w (Suc (rank A w v))\n  v \\<in> prune A w (graph A w (rank A w v))\n\ngoal (1 subgoal):\n 1. graph A w (Suc (rank A w v)) \\<noteq> prune A w (graph A w (rank A w v))", "by blast"], ["proof (state)\nthis:\n  graph A w (Suc (rank A w v)) \\<noteq> prune A w (graph A w (rank A w v))\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (rank A w v)\n 2. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "show \"even (rank A w v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. even (rank A w v)", "using 5"], ["proof (prove)\nusing this:\n  graph A w (Suc (rank A w v)) \\<noteq> prune A w (graph A w (rank A w v))\n\ngoal (1 subgoal):\n 1. even (rank A w v)", "by auto"], ["proof (state)\nthis:\n  even (rank A w v)\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "fix v r k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "assume 1: \"v \\<in> gunodes A w\" \"gurun A w r v\" \"smap (rank A w) (gtrace r v) = sconst k\""], ["proof (state)\nthis:\n  v \\<in> gunodes A w\n  gurun A w r v\n  smap (rank A w) (gtrace r v) = sconst k\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "have \"sset (gtrace r v) \\<subseteq> gureachable A w v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sset (gtrace r v) \\<subseteq> gureachable A w v", "using 1(2)"], ["proof (prove)\nusing this:\n  gurun A w r v\n\ngoal (1 subgoal):\n 1. sset (gtrace r v) \\<subseteq> gureachable A w v", "by (metis graph.reachable.reflexive graph.reachable_trace)"], ["proof (state)\nthis:\n  sset (gtrace r v) \\<subseteq> gureachable A w v\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "then"], ["proof (chain)\npicking this:\n  sset (gtrace r v) \\<subseteq> gureachable A w v", "have 6: \"sset (gtrace r v) \\<subseteq> gunodes A w\""], ["proof (prove)\nusing this:\n  sset (gtrace r v) \\<subseteq> gureachable A w v\n\ngoal (1 subgoal):\n 1. sset (gtrace r v) \\<subseteq> gunodes A w", "using 1(1)"], ["proof (prove)\nusing this:\n  sset (gtrace r v) \\<subseteq> gureachable A w v\n  v \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. sset (gtrace r v) \\<subseteq> gunodes A w", "by blast"], ["proof (state)\nthis:\n  sset (gtrace r v) \\<subseteq> gunodes A w\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "have 60: \"rank A w ` sset (gtrace r v) \\<subseteq> {k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank A w ` sset (gtrace r v) \\<subseteq> {k}", "using 1(3)"], ["proof (prove)\nusing this:\n  smap (rank A w) (gtrace r v) = sconst k\n\ngoal (1 subgoal):\n 1. rank A w ` sset (gtrace r v) \\<subseteq> {k}", "by (metis equalityD1 sset_sconst stream.set_map)"], ["proof (state)\nthis:\n  rank A w ` sset (gtrace r v) \\<subseteq> {k}\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "have 50: \"sset (gtrace r v) \\<subseteq> graph A w k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sset (gtrace r v) \\<subseteq> graph A w k", "using rank_member[OF assms] subsetD[OF 6] 60"], ["proof (prove)\nusing this:\n  ?v \\<in> gunodes A w \\<Longrightarrow> ?v \\<in> graph A w (rank A w ?v)\n  ?c \\<in> sset (gtrace r v) \\<Longrightarrow> ?c \\<in> gunodes A w\n  rank A w ` sset (gtrace r v) \\<subseteq> {k}\n\ngoal (1 subgoal):\n 1. sset (gtrace r v) \\<subseteq> graph A w k", "unfolding image_subset_iff"], ["proof (prove)\nusing this:\n  ?v \\<in> gunodes A w \\<Longrightarrow> ?v \\<in> graph A w (rank A w ?v)\n  ?c \\<in> sset (gtrace r v) \\<Longrightarrow> ?c \\<in> gunodes A w\n  \\<forall>x\\<in>sset (gtrace r v). rank A w x \\<in> {k}\n\ngoal (1 subgoal):\n 1. sset (gtrace r v) \\<subseteq> graph A w k", "by auto"], ["proof (state)\nthis:\n  sset (gtrace r v) \\<subseteq> graph A w k\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "have 70: \"grun A w (graph A w k) r v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. grun A w (graph A w k) r v", "using grun_subset 1(2) 50"], ["proof (prove)\nusing this:\n  \\<lbrakk>grun ?A ?w ?V ?r ?v; sset (gtrace ?r ?v) \\<subseteq> ?U\\<rbrakk>\n  \\<Longrightarrow> grun ?A ?w ?U ?r ?v\n  gurun A w r v\n  sset (gtrace r v) \\<subseteq> graph A w k\n\ngoal (1 subgoal):\n 1. grun A w (graph A w k) r v", "by this"], ["proof (state)\nthis:\n  grun A w (graph A w k) r v\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "have 7: \"sset (gtrace r v) \\<subseteq> clean A w (graph A w k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sset (gtrace r v) \\<subseteq> clean A w (graph A w k)", "unfolding clean_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sset (gtrace r v)\n    \\<subseteq> {v \\<in> graph A w k.\n                 infinite (greachable A w (graph A w k) v)}", "using 50 infinite_greachable_gtrace[OF 70]"], ["proof (prove)\nusing this:\n  sset (gtrace r v) \\<subseteq> graph A w k\n  ?u \\<in> sset (gtrace r v) \\<Longrightarrow>\n  infinite (greachable A w (graph A w k) ?u)\n\ngoal (1 subgoal):\n 1. sset (gtrace r v)\n    \\<subseteq> {v \\<in> graph A w k.\n                 infinite (greachable A w (graph A w k) v)}", "by auto"], ["proof (state)\nthis:\n  sset (gtrace r v) \\<subseteq> clean A w (graph A w k)\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "have 8: \"sset (gtrace r v) \\<inter> graph A w (Suc k) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sset (gtrace r v) \\<inter> graph A w (Suc k) = {}", "using rank_removed[OF assms] 60"], ["proof (prove)\nusing this:\n  ?v \\<notin> graph A w (Suc (rank A w ?v))\n  rank A w ` sset (gtrace r v) \\<subseteq> {k}\n\ngoal (1 subgoal):\n 1. sset (gtrace r v) \\<inter> graph A w (Suc k) = {}", "by blast"], ["proof (state)\nthis:\n  sset (gtrace r v) \\<inter> graph A w (Suc k) = {}\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "have 9: \"sset (gtrace r v) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sset (gtrace r v) \\<noteq> {}", "using stream.set_sel(1)"], ["proof (prove)\nusing this:\n  shd ?a \\<in> sset ?a\n\ngoal (1 subgoal):\n 1. sset (gtrace r v) \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  sset (gtrace r v) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "have 10: \"graph A w (Suc k) \\<noteq> clean A w (graph A w k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. graph A w (Suc k) \\<noteq> clean A w (graph A w k)", "using 7 8 9"], ["proof (prove)\nusing this:\n  sset (gtrace r v) \\<subseteq> clean A w (graph A w k)\n  sset (gtrace r v) \\<inter> graph A w (Suc k) = {}\n  sset (gtrace r v) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. graph A w (Suc k) \\<noteq> clean A w (graph A w k)", "by blast"], ["proof (state)\nthis:\n  graph A w (Suc k) \\<noteq> clean A w (graph A w k)\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap (rank A w) (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "show \"odd k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. odd k", "using 10"], ["proof (prove)\nusing this:\n  graph A w (Suc k) \\<noteq> clean A w (graph A w k)\n\ngoal (1 subgoal):\n 1. odd k", "unfolding graph_Suc"], ["proof (prove)\nusing this:\n  (if even k then clean A w else prune A w) (graph A w k) \\<noteq>\n  clean A w (graph A w k)\n\ngoal (1 subgoal):\n 1. odd k", "by auto"], ["proof (state)\nthis:\n  odd k\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Correctness Theorem\\<close>"], ["", "theorem language_ranking_iff:\n    assumes \"finite (nodes A)\"\n    shows \"w \\<notin> language A \\<longleftrightarrow> (\\<exists> f. ranking A w f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<notin> language A) = (\\<exists>f. ranking A w f)", "using ranking_language language_ranking assms"], ["proof (prove)\nusing this:\n  ranking ?A ?w ?f \\<Longrightarrow> ?w \\<notin> language ?A\n  \\<lbrakk>finite (nodes ?A); ?w \\<notin> language ?A\\<rbrakk>\n  \\<Longrightarrow> ranking ?A ?w (rank ?A ?w)\n  finite (nodes A)\n\ngoal (1 subgoal):\n 1. (w \\<notin> language A) = (\\<exists>f. ranking A w f)", "by blast"], ["", "end"]]}