{"file_name": "/home/qj213/afp-2021-10-22/thys/Buchi_Complementation/Complementation.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Buchi_Complementation", "problem_names": ["lemma dom_nodes:\n    assumes \"fP \\<in> nodes (complement A)\"\n    shows \"dom (fst fP) \\<subseteq> nodes A\"", "lemma ran_nodes:\n    assumes \"fP \\<in> nodes (complement A)\"\n    shows \"ran (fst fP) \\<subseteq> {0 .. 2 * card (nodes A)}\"", "lemma states_nodes:\n    assumes \"fP \\<in> nodes (complement A)\"\n    shows \"snd fP \\<subseteq> nodes A\"", "theorem complement_finite:\n    assumes \"finite (nodes A)\"\n    shows \"finite (nodes (complement A))\"", "lemma complement_trace_snth:\n    assumes \"run (complement A) (w ||| r) p\"\n    defines \"m \\<equiv> p ## trace (w ||| r) p\"\n    obtains\n      \"fst (m !! Suc k) \\<in> lr_succ A (w !! k) (fst (m !! k))\"\n      \"snd (m !! Suc k) = st_succ A (w !! k) (fst (m !! Suc k)) (snd (m !! k))\"", "lemma complement_ranking:\n    assumes \"w \\<in> language (complement A)\"\n    obtains f\n    where \"ranking A w f\"", "lemma reach_0[simp]: \"reach A w 0 = initial A\"", "lemma reach_Suc_empty:\n    assumes \"w !! n \\<notin> alphabet A\"\n    shows \"reach A w (Suc n) = {}\"", "lemma reach_Suc_succ:\n    assumes \"w !! n \\<in> alphabet A\"\n    shows \"reach A w (Suc n) = \\<Union> (transition A (w !! n) ` reach A w n)\"", "lemma reach_Suc[simp]: \"reach A w (Suc n) = (if w !! n \\<in> alphabet A\n    then \\<Union> (transition A (w !! n) ` reach A w n) else {})\"", "lemma reach_nodes: \"reach A w i \\<subseteq> nodes A\"", "lemma reach_gunodes: \"{i} \\<times> reach A w i \\<subseteq> gunodes A w\"", "lemma ranking_complement:\n    assumes \"finite (nodes A)\" \"w \\<in> streams (alphabet A)\" \"ranking A w f\"\n    shows \"w \\<in> language (complement A)\"", "theorem complement_language:\n    assumes \"finite (nodes A)\"\n    shows \"language (complement A) = streams (alphabet A) - language A\""], "translations": [["", "lemma dom_nodes:\n    assumes \"fP \\<in> nodes (complement A)\"\n    shows \"dom (fst fP) \\<subseteq> nodes A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom (fst fP) \\<subseteq> nodes A", "using assms"], ["proof (prove)\nusing this:\n  fP \\<in> nodes (complement A)\n\ngoal (1 subgoal):\n 1. dom (fst fP) \\<subseteq> nodes A", "unfolding complement_def complement_succ_def lr_succ_def"], ["proof (prove)\nusing this:\n  fP \\<in> nodes\n            (nba (alphabet A)\n              ({(\\<lambda>_. Some (2 * card (nodes A))) |`\n                initial A} \\<times>\n               {{}})\n              (\\<lambda>a (f, P).\n                  {(g, st_succ A a g P) |g.\n                   g \\<in> {g. dom g =\n                               \\<Union> (transition A a ` dom f) \\<and>\n                               (\\<forall>p\\<in>dom f.\n                                   \\<forall>q\\<in>transition A a p.\nthe (g q) \\<le> the (f p)) \\<and>\n                               (\\<forall>q\\<in>dom g.\n                                   accepting A q \\<longrightarrow>\n                                   even (the (g q)))}})\n              (\\<lambda>(f, P). P = {}))\n\ngoal (1 subgoal):\n 1. dom (fst fP) \\<subseteq> nodes A", "by (induct) (auto, blast)"], ["", "lemma ran_nodes:\n    assumes \"fP \\<in> nodes (complement A)\"\n    shows \"ran (fst fP) \\<subseteq> {0 .. 2 * card (nodes A)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ran (fst fP) \\<subseteq> {0..2 * card (nodes A)}", "using assms"], ["proof (prove)\nusing this:\n  fP \\<in> nodes (complement A)\n\ngoal (1 subgoal):\n 1. ran (fst fP) \\<subseteq> {0..2 * card (nodes A)}", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       p \\<in> initial (complement A) \\<Longrightarrow>\n       ran (fst p) \\<subseteq> {0..2 * card (nodes A)}\n 2. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A);\n        ran (fst p) \\<subseteq> {0..2 * card (nodes A)};\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> ran (fst (snd a))\n                         \\<subseteq> {0..2 * card (nodes A)}", "case (initial fP)"], ["proof (state)\nthis:\n  fP \\<in> initial (complement A)\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       p \\<in> initial (complement A) \\<Longrightarrow>\n       ran (fst p) \\<subseteq> {0..2 * card (nodes A)}\n 2. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A);\n        ran (fst p) \\<subseteq> {0..2 * card (nodes A)};\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> ran (fst (snd a))\n                         \\<subseteq> {0..2 * card (nodes A)}", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ran (fst fP) \\<subseteq> {0..2 * card (nodes A)}", "using initial"], ["proof (prove)\nusing this:\n  fP \\<in> initial (complement A)\n\ngoal (1 subgoal):\n 1. ran (fst fP) \\<subseteq> {0..2 * card (nodes A)}", "unfolding complement_def"], ["proof (prove)\nusing this:\n  fP \\<in> initial\n            (nba (alphabet A)\n              ({(\\<lambda>_. Some (2 * card (nodes A))) |`\n                initial A} \\<times>\n               {{}})\n              (complement_succ A) (\\<lambda>(f, P). P = {}))\n\ngoal (1 subgoal):\n 1. ran (fst fP) \\<subseteq> {0..2 * card (nodes A)}", "by (auto) (metis eq_refl option.inject ran_restrictD)"], ["proof (state)\nthis:\n  ran (fst fP) \\<subseteq> {0..2 * card (nodes A)}\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A);\n        ran (fst p) \\<subseteq> {0..2 * card (nodes A)};\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> ran (fst (snd a))\n                         \\<subseteq> {0..2 * card (nodes A)}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A);\n        ran (fst p) \\<subseteq> {0..2 * card (nodes A)};\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> ran (fst (snd a))\n                         \\<subseteq> {0..2 * card (nodes A)}", "case (execute fP agQ)"], ["proof (state)\nthis:\n  fP \\<in> nodes (complement A)\n  ran (fst fP) \\<subseteq> {0..2 * card (nodes A)}\n  fst agQ \\<in> alphabet (complement A) \\<and>\n  snd agQ \\<in> transition (complement A) (fst agQ) fP\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A);\n        ran (fst p) \\<subseteq> {0..2 * card (nodes A)};\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> ran (fst (snd a))\n                         \\<subseteq> {0..2 * card (nodes A)}", "obtain f P where 1: \"fP = (f, P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f P. fP = (f, P) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  fP = (f, P)\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A);\n        ran (fst p) \\<subseteq> {0..2 * card (nodes A)};\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> ran (fst (snd a))\n                         \\<subseteq> {0..2 * card (nodes A)}", "have 2: \"ran f \\<subseteq> {0 .. 2 * card (nodes A)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ran f \\<subseteq> {0..2 * card (nodes A)}", "using execute(2)"], ["proof (prove)\nusing this:\n  ran (fst fP) \\<subseteq> {0..2 * card (nodes A)}\n\ngoal (1 subgoal):\n 1. ran f \\<subseteq> {0..2 * card (nodes A)}", "unfolding 1"], ["proof (prove)\nusing this:\n  ran (fst (f, P)) \\<subseteq> {0..2 * card (nodes A)}\n\ngoal (1 subgoal):\n 1. ran f \\<subseteq> {0..2 * card (nodes A)}", "by auto"], ["proof (state)\nthis:\n  ran f \\<subseteq> {0..2 * card (nodes A)}\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A);\n        ran (fst p) \\<subseteq> {0..2 * card (nodes A)};\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> ran (fst (snd a))\n                         \\<subseteq> {0..2 * card (nodes A)}", "obtain a g Q where 3: \"agQ = (a, (g, Q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a g Q.\n        agQ = (a, g, Q) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using prod_cases3"], ["proof (prove)\nusing this:\n  (\\<And>a b c. ?y = (a, b, c) \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>a g Q.\n        agQ = (a, g, Q) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by this"], ["proof (state)\nthis:\n  agQ = (a, g, Q)\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A);\n        ran (fst p) \\<subseteq> {0..2 * card (nodes A)};\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> ran (fst (snd a))\n                         \\<subseteq> {0..2 * card (nodes A)}", "have 4: \"p \\<in> dom f \\<Longrightarrow> q \\<in> transition A a p \\<Longrightarrow> the (g q) \\<le> the (f p)\" for p q"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> dom f; q \\<in> transition A a p\\<rbrakk>\n    \\<Longrightarrow> the (g q) \\<le> the (f p)", "using execute(3)"], ["proof (prove)\nusing this:\n  fst agQ \\<in> alphabet (complement A) \\<and>\n  snd agQ \\<in> transition (complement A) (fst agQ) fP\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> dom f; q \\<in> transition A a p\\<rbrakk>\n    \\<Longrightarrow> the (g q) \\<le> the (f p)", "unfolding 1 3 complement_def nba.simps complement_succ_def lr_succ_def"], ["proof (prove)\nusing this:\n  fst (a, g, Q)\n  \\<in> alphabet\n         (nba (alphabet A)\n           ({(\\<lambda>_. Some (2 * card (nodes A))) |` initial A} \\<times>\n            {{}})\n           (\\<lambda>a (f, P).\n               {(g, st_succ A a g P) |g.\n                g \\<in> {g. dom g = \\<Union> (transition A a ` dom f) \\<and>\n                            (\\<forall>p\\<in>dom f.\n                                \\<forall>q\\<in>transition A a p.\n                                   the (g q) \\<le> the (f p)) \\<and>\n                            (\\<forall>q\\<in>dom g.\n                                accepting A q \\<longrightarrow>\n                                even (the (g q)))}})\n           (\\<lambda>(f, P). P = {})) \\<and>\n  snd (a, g, Q)\n  \\<in> transition\n         (nba (alphabet A)\n           ({(\\<lambda>_. Some (2 * card (nodes A))) |` initial A} \\<times>\n            {{}})\n           (\\<lambda>a (f, P).\n               {(g, st_succ A a g P) |g.\n                g \\<in> {g. dom g = \\<Union> (transition A a ` dom f) \\<and>\n                            (\\<forall>p\\<in>dom f.\n                                \\<forall>q\\<in>transition A a p.\n                                   the (g q) \\<le> the (f p)) \\<and>\n                            (\\<forall>q\\<in>dom g.\n                                accepting A q \\<longrightarrow>\n                                even (the (g q)))}})\n           (\\<lambda>(f, P). P = {}))\n         (fst (a, g, Q)) (f, P)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> dom f; q \\<in> transition A a p\\<rbrakk>\n    \\<Longrightarrow> the (g q) \\<le> the (f p)", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?p \\<in> dom f; ?q \\<in> transition A a ?p\\<rbrakk>\n  \\<Longrightarrow> the (g ?q) \\<le> the (f ?p)\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A);\n        ran (fst p) \\<subseteq> {0..2 * card (nodes A)};\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> ran (fst (snd a))\n                         \\<subseteq> {0..2 * card (nodes A)}", "have 8: \"dom g = \\<Union>((transition A a) ` (dom f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom g = \\<Union> (transition A a ` dom f)", "using execute(3)"], ["proof (prove)\nusing this:\n  fst agQ \\<in> alphabet (complement A) \\<and>\n  snd agQ \\<in> transition (complement A) (fst agQ) fP\n\ngoal (1 subgoal):\n 1. dom g = \\<Union> (transition A a ` dom f)", "unfolding 1 3 complement_def nba.simps complement_succ_def lr_succ_def"], ["proof (prove)\nusing this:\n  fst (a, g, Q)\n  \\<in> alphabet\n         (nba (alphabet A)\n           ({(\\<lambda>_. Some (2 * card (nodes A))) |` initial A} \\<times>\n            {{}})\n           (\\<lambda>a (f, P).\n               {(g, st_succ A a g P) |g.\n                g \\<in> {g. dom g = \\<Union> (transition A a ` dom f) \\<and>\n                            (\\<forall>p\\<in>dom f.\n                                \\<forall>q\\<in>transition A a p.\n                                   the (g q) \\<le> the (f p)) \\<and>\n                            (\\<forall>q\\<in>dom g.\n                                accepting A q \\<longrightarrow>\n                                even (the (g q)))}})\n           (\\<lambda>(f, P). P = {})) \\<and>\n  snd (a, g, Q)\n  \\<in> transition\n         (nba (alphabet A)\n           ({(\\<lambda>_. Some (2 * card (nodes A))) |` initial A} \\<times>\n            {{}})\n           (\\<lambda>a (f, P).\n               {(g, st_succ A a g P) |g.\n                g \\<in> {g. dom g = \\<Union> (transition A a ` dom f) \\<and>\n                            (\\<forall>p\\<in>dom f.\n                                \\<forall>q\\<in>transition A a p.\n                                   the (g q) \\<le> the (f p)) \\<and>\n                            (\\<forall>q\\<in>dom g.\n                                accepting A q \\<longrightarrow>\n                                even (the (g q)))}})\n           (\\<lambda>(f, P). P = {}))\n         (fst (a, g, Q)) (f, P)\n\ngoal (1 subgoal):\n 1. dom g = \\<Union> (transition A a ` dom f)", "by simp"], ["proof (state)\nthis:\n  dom g = \\<Union> (transition A a ` dom f)\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A);\n        ran (fst p) \\<subseteq> {0..2 * card (nodes A)};\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> ran (fst (snd a))\n                         \\<subseteq> {0..2 * card (nodes A)}", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ran (fst (snd agQ)) \\<subseteq> {0..2 * card (nodes A)}", "unfolding 1 3 ran_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {b. \\<exists>aa. fst (snd (a, g, Q)) aa = Some b}\n    \\<subseteq> {0..2 * card (nodes A)}", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x aa.\n       fst (snd (a, g, Q)) aa = Some x \\<Longrightarrow>\n       x \\<in> {0..2 * card (nodes A)}", "fix q k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x aa.\n       fst (snd (a, g, Q)) aa = Some x \\<Longrightarrow>\n       x \\<in> {0..2 * card (nodes A)}", "assume 5: \"fst (snd (a, (g, Q))) q = Some k\""], ["proof (state)\nthis:\n  fst (snd (a, g, Q)) q = Some k\n\ngoal (1 subgoal):\n 1. \\<And>x aa.\n       fst (snd (a, g, Q)) aa = Some x \\<Longrightarrow>\n       x \\<in> {0..2 * card (nodes A)}", "have 6: \"q \\<in> dom g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> dom g", "using 5"], ["proof (prove)\nusing this:\n  fst (snd (a, g, Q)) q = Some k\n\ngoal (1 subgoal):\n 1. q \\<in> dom g", "by auto"], ["proof (state)\nthis:\n  q \\<in> dom g\n\ngoal (1 subgoal):\n 1. \\<And>x aa.\n       fst (snd (a, g, Q)) aa = Some x \\<Longrightarrow>\n       x \\<in> {0..2 * card (nodes A)}", "obtain p where 7: \"p \\<in> dom f\" \"q \\<in> transition A a p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p \\<in> dom f; q \\<in> transition A a p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 6"], ["proof (prove)\nusing this:\n  q \\<in> dom g\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p \\<in> dom f; q \\<in> transition A a p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding 8"], ["proof (prove)\nusing this:\n  q \\<in> \\<Union> (transition A a ` dom f)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p \\<in> dom f; q \\<in> transition A a p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p \\<in> dom f\n  q \\<in> transition A a p\n\ngoal (1 subgoal):\n 1. \\<And>x aa.\n       fst (snd (a, g, Q)) aa = Some x \\<Longrightarrow>\n       x \\<in> {0..2 * card (nodes A)}", "have \"k = the (g q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k = the (g q)", "using 5"], ["proof (prove)\nusing this:\n  fst (snd (a, g, Q)) q = Some k\n\ngoal (1 subgoal):\n 1. k = the (g q)", "by auto"], ["proof (state)\nthis:\n  k = the (g q)\n\ngoal (1 subgoal):\n 1. \\<And>x aa.\n       fst (snd (a, g, Q)) aa = Some x \\<Longrightarrow>\n       x \\<in> {0..2 * card (nodes A)}", "also"], ["proof (state)\nthis:\n  k = the (g q)\n\ngoal (1 subgoal):\n 1. \\<And>x aa.\n       fst (snd (a, g, Q)) aa = Some x \\<Longrightarrow>\n       x \\<in> {0..2 * card (nodes A)}", "have \"\\<dots> \\<le> the (f p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the (g q) \\<le> the (f p)", "using 4 7"], ["proof (prove)\nusing this:\n  \\<lbrakk>?p \\<in> dom f; ?q \\<in> transition A a ?p\\<rbrakk>\n  \\<Longrightarrow> the (g ?q) \\<le> the (f ?p)\n  p \\<in> dom f\n  q \\<in> transition A a p\n\ngoal (1 subgoal):\n 1. the (g q) \\<le> the (f p)", "by this"], ["proof (state)\nthis:\n  the (g q) \\<le> the (f p)\n\ngoal (1 subgoal):\n 1. \\<And>x aa.\n       fst (snd (a, g, Q)) aa = Some x \\<Longrightarrow>\n       x \\<in> {0..2 * card (nodes A)}", "also"], ["proof (state)\nthis:\n  the (g q) \\<le> the (f p)\n\ngoal (1 subgoal):\n 1. \\<And>x aa.\n       fst (snd (a, g, Q)) aa = Some x \\<Longrightarrow>\n       x \\<in> {0..2 * card (nodes A)}", "have \"\\<dots> \\<le> 2 * card (nodes A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the (f p) \\<le> 2 * card (nodes A)", "using 2 7(1)"], ["proof (prove)\nusing this:\n  ran f \\<subseteq> {0..2 * card (nodes A)}\n  p \\<in> dom f\n\ngoal (1 subgoal):\n 1. the (f p) \\<le> 2 * card (nodes A)", "by (simp add: domD ranI subset_eq)"], ["proof (state)\nthis:\n  the (f p) \\<le> 2 * card (nodes A)\n\ngoal (1 subgoal):\n 1. \\<And>x aa.\n       fst (snd (a, g, Q)) aa = Some x \\<Longrightarrow>\n       x \\<in> {0..2 * card (nodes A)}", "finally"], ["proof (chain)\npicking this:\n  k \\<le> 2 * card (nodes A)", "show \"k \\<in> {0 .. 2 * card (nodes A)}\""], ["proof (prove)\nusing this:\n  k \\<le> 2 * card (nodes A)\n\ngoal (1 subgoal):\n 1. k \\<in> {0..2 * card (nodes A)}", "by auto"], ["proof (state)\nthis:\n  k \\<in> {0..2 * card (nodes A)}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ran (fst (snd agQ)) \\<subseteq> {0..2 * card (nodes A)}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma states_nodes:\n    assumes \"fP \\<in> nodes (complement A)\"\n    shows \"snd fP \\<subseteq> nodes A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd fP \\<subseteq> nodes A", "using assms"], ["proof (prove)\nusing this:\n  fP \\<in> nodes (complement A)\n\ngoal (1 subgoal):\n 1. snd fP \\<subseteq> nodes A", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       p \\<in> initial (complement A) \\<Longrightarrow>\n       snd p \\<subseteq> nodes A\n 2. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A); snd p \\<subseteq> nodes A;\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> snd (snd a) \\<subseteq> nodes A", "case (initial fP)"], ["proof (state)\nthis:\n  fP \\<in> initial (complement A)\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       p \\<in> initial (complement A) \\<Longrightarrow>\n       snd p \\<subseteq> nodes A\n 2. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A); snd p \\<subseteq> nodes A;\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> snd (snd a) \\<subseteq> nodes A", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd fP \\<subseteq> nodes A", "using initial"], ["proof (prove)\nusing this:\n  fP \\<in> initial (complement A)\n\ngoal (1 subgoal):\n 1. snd fP \\<subseteq> nodes A", "unfolding complement_def"], ["proof (prove)\nusing this:\n  fP \\<in> initial\n            (nba (alphabet A)\n              ({(\\<lambda>_. Some (2 * card (nodes A))) |`\n                initial A} \\<times>\n               {{}})\n              (complement_succ A) (\\<lambda>(f, P). P = {}))\n\ngoal (1 subgoal):\n 1. snd fP \\<subseteq> nodes A", "by auto"], ["proof (state)\nthis:\n  snd fP \\<subseteq> nodes A\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A); snd p \\<subseteq> nodes A;\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> snd (snd a) \\<subseteq> nodes A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A); snd p \\<subseteq> nodes A;\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> snd (snd a) \\<subseteq> nodes A", "case (execute fP agQ)"], ["proof (state)\nthis:\n  fP \\<in> nodes (complement A)\n  snd fP \\<subseteq> nodes A\n  fst agQ \\<in> alphabet (complement A) \\<and>\n  snd agQ \\<in> transition (complement A) (fst agQ) fP\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A); snd p \\<subseteq> nodes A;\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> snd (snd a) \\<subseteq> nodes A", "obtain f P where 1: \"fP = (f, P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f P. fP = (f, P) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  fP = (f, P)\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A); snd p \\<subseteq> nodes A;\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> snd (snd a) \\<subseteq> nodes A", "have 2: \"P \\<subseteq> nodes A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> nodes A", "using execute(2)"], ["proof (prove)\nusing this:\n  snd fP \\<subseteq> nodes A\n\ngoal (1 subgoal):\n 1. P \\<subseteq> nodes A", "unfolding 1"], ["proof (prove)\nusing this:\n  snd (f, P) \\<subseteq> nodes A\n\ngoal (1 subgoal):\n 1. P \\<subseteq> nodes A", "by auto"], ["proof (state)\nthis:\n  P \\<subseteq> nodes A\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A); snd p \\<subseteq> nodes A;\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> snd (snd a) \\<subseteq> nodes A", "obtain a g Q where 3: \"agQ = (a, (g, Q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a g Q.\n        agQ = (a, g, Q) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using prod_cases3"], ["proof (prove)\nusing this:\n  (\\<And>a b c. ?y = (a, b, c) \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>a g Q.\n        agQ = (a, g, Q) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by this"], ["proof (state)\nthis:\n  agQ = (a, g, Q)\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A); snd p \\<subseteq> nodes A;\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> snd (snd a) \\<subseteq> nodes A", "have 11: \"a \\<in> alphabet A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> alphabet A", "using execute(3)"], ["proof (prove)\nusing this:\n  fst agQ \\<in> alphabet (complement A) \\<and>\n  snd agQ \\<in> transition (complement A) (fst agQ) fP\n\ngoal (1 subgoal):\n 1. a \\<in> alphabet A", "unfolding 3 complement_def"], ["proof (prove)\nusing this:\n  fst (a, g, Q)\n  \\<in> alphabet\n         (nba (alphabet A)\n           ({(\\<lambda>_. Some (2 * card (nodes A))) |` initial A} \\<times>\n            {{}})\n           (complement_succ A) (\\<lambda>(f, P). P = {})) \\<and>\n  snd (a, g, Q)\n  \\<in> transition\n         (nba (alphabet A)\n           ({(\\<lambda>_. Some (2 * card (nodes A))) |` initial A} \\<times>\n            {{}})\n           (complement_succ A) (\\<lambda>(f, P). P = {}))\n         (fst (a, g, Q)) fP\n\ngoal (1 subgoal):\n 1. a \\<in> alphabet A", "by auto"], ["proof (state)\nthis:\n  a \\<in> alphabet A\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A); snd p \\<subseteq> nodes A;\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> snd (snd a) \\<subseteq> nodes A", "have 10: \"(g, Q) \\<in> nodes (complement A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g, Q) \\<in> nodes (complement A)", "using execute(1, 3)"], ["proof (prove)\nusing this:\n  fP \\<in> nodes (complement A)\n  fst agQ \\<in> alphabet (complement A) \\<and>\n  snd agQ \\<in> transition (complement A) (fst agQ) fP\n\ngoal (1 subgoal):\n 1. (g, Q) \\<in> nodes (complement A)", "unfolding 1 3"], ["proof (prove)\nusing this:\n  (f, P) \\<in> nodes (complement A)\n  fst (a, g, Q) \\<in> alphabet (complement A) \\<and>\n  snd (a, g, Q) \\<in> transition (complement A) (fst (a, g, Q)) (f, P)\n\ngoal (1 subgoal):\n 1. (g, Q) \\<in> nodes (complement A)", "by auto"], ["proof (state)\nthis:\n  (g, Q) \\<in> nodes (complement A)\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A); snd p \\<subseteq> nodes A;\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> snd (snd a) \\<subseteq> nodes A", "have 4: \"dom g \\<subseteq> nodes A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom g \\<subseteq> nodes A", "using dom_nodes[OF 10]"], ["proof (prove)\nusing this:\n  dom (fst (g, Q)) \\<subseteq> nodes A\n\ngoal (1 subgoal):\n 1. dom g \\<subseteq> nodes A", "by simp"], ["proof (state)\nthis:\n  dom g \\<subseteq> nodes A\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A); snd p \\<subseteq> nodes A;\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> snd (snd a) \\<subseteq> nodes A", "have 5: \"\\<Union> (transition A a ` P) \\<subseteq> nodes A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (transition A a ` P) \\<subseteq> nodes A", "using 2 11"], ["proof (prove)\nusing this:\n  P \\<subseteq> nodes A\n  a \\<in> alphabet A\n\ngoal (1 subgoal):\n 1. \\<Union> (transition A a ` P) \\<subseteq> nodes A", "by auto"], ["proof (state)\nthis:\n  \\<Union> (transition A a ` P) \\<subseteq> nodes A\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A); snd p \\<subseteq> nodes A;\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> snd (snd a) \\<subseteq> nodes A", "have 6: \"Q \\<subseteq> nodes A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<subseteq> nodes A", "using execute(3)"], ["proof (prove)\nusing this:\n  fst agQ \\<in> alphabet (complement A) \\<and>\n  snd agQ \\<in> transition (complement A) (fst agQ) fP\n\ngoal (1 subgoal):\n 1. Q \\<subseteq> nodes A", "unfolding 1 3 complement_def nba.simps complement_succ_def st_succ_def"], ["proof (prove)\nusing this:\n  fst (a, g, Q)\n  \\<in> alphabet\n         (nba (alphabet A)\n           ({(\\<lambda>_. Some (2 * card (nodes A))) |` initial A} \\<times>\n            {{}})\n           (\\<lambda>a (f, P).\n               {(g, {q \\<in> if P = {} then dom g\n                             else \\<Union> (transition A a ` P).\n                     even (the (g q))}) |\n                g. g \\<in> lr_succ A a f})\n           (\\<lambda>(f, P). P = {})) \\<and>\n  snd (a, g, Q)\n  \\<in> transition\n         (nba (alphabet A)\n           ({(\\<lambda>_. Some (2 * card (nodes A))) |` initial A} \\<times>\n            {{}})\n           (\\<lambda>a (f, P).\n               {(g, {q \\<in> if P = {} then dom g\n                             else \\<Union> (transition A a ` P).\n                     even (the (g q))}) |\n                g. g \\<in> lr_succ A a f})\n           (\\<lambda>(f, P). P = {}))\n         (fst (a, g, Q)) (f, P)\n\ngoal (1 subgoal):\n 1. Q \\<subseteq> nodes A", "using 4 5"], ["proof (prove)\nusing this:\n  fst (a, g, Q)\n  \\<in> alphabet\n         (nba (alphabet A)\n           ({(\\<lambda>_. Some (2 * card (nodes A))) |` initial A} \\<times>\n            {{}})\n           (\\<lambda>a (f, P).\n               {(g, {q \\<in> if P = {} then dom g\n                             else \\<Union> (transition A a ` P).\n                     even (the (g q))}) |\n                g. g \\<in> lr_succ A a f})\n           (\\<lambda>(f, P). P = {})) \\<and>\n  snd (a, g, Q)\n  \\<in> transition\n         (nba (alphabet A)\n           ({(\\<lambda>_. Some (2 * card (nodes A))) |` initial A} \\<times>\n            {{}})\n           (\\<lambda>a (f, P).\n               {(g, {q \\<in> if P = {} then dom g\n                             else \\<Union> (transition A a ` P).\n                     even (the (g q))}) |\n                g. g \\<in> lr_succ A a f})\n           (\\<lambda>(f, P). P = {}))\n         (fst (a, g, Q)) (f, P)\n  dom g \\<subseteq> nodes A\n  \\<Union> (transition A a ` P) \\<subseteq> nodes A\n\ngoal (1 subgoal):\n 1. Q \\<subseteq> nodes A", "by (auto split: if_splits)"], ["proof (state)\nthis:\n  Q \\<subseteq> nodes A\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> nodes (complement A); snd p \\<subseteq> nodes A;\n        fst a \\<in> alphabet (complement A) \\<and>\n        snd a \\<in> transition (complement A) (fst a) p\\<rbrakk>\n       \\<Longrightarrow> snd (snd a) \\<subseteq> nodes A", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (snd agQ) \\<subseteq> nodes A", "using 6"], ["proof (prove)\nusing this:\n  Q \\<subseteq> nodes A\n\ngoal (1 subgoal):\n 1. snd (snd agQ) \\<subseteq> nodes A", "unfolding 3"], ["proof (prove)\nusing this:\n  Q \\<subseteq> nodes A\n\ngoal (1 subgoal):\n 1. snd (snd (a, g, Q)) \\<subseteq> nodes A", "by auto"], ["proof (state)\nthis:\n  snd (snd agQ) \\<subseteq> nodes A\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem complement_finite:\n    assumes \"finite (nodes A)\"\n    shows \"finite (nodes (complement A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (nodes (complement A))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (nodes (complement A))", "let ?lrs = \"{f. dom f \\<subseteq> nodes A \\<and> ran f \\<subseteq> {0 .. 2 * card (nodes A)}}\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite (nodes (complement A))", "have 1: \"finite ?lrs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {f. dom f \\<subseteq> nodes A \\<and>\n         ran f \\<subseteq> {0..2 * card (nodes A)}}", "using finite_set_of_finite_maps' assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; finite ?B\\<rbrakk>\n  \\<Longrightarrow> finite\n                     {m. dom m \\<subseteq> ?A \\<and> ran m \\<subseteq> ?B}\n  finite (nodes A)\n\ngoal (1 subgoal):\n 1. finite\n     {f. dom f \\<subseteq> nodes A \\<and>\n         ran f \\<subseteq> {0..2 * card (nodes A)}}", "by auto"], ["proof (state)\nthis:\n  finite\n   {f. dom f \\<subseteq> nodes A \\<and>\n       ran f \\<subseteq> {0..2 * card (nodes A)}}\n\ngoal (1 subgoal):\n 1. finite (nodes (complement A))", "let ?states = \"Pow (nodes A)\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite (nodes (complement A))", "have 2: \"finite ?states\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Pow (nodes A))", "using assms"], ["proof (prove)\nusing this:\n  finite (nodes A)\n\ngoal (1 subgoal):\n 1. finite (Pow (nodes A))", "by simp"], ["proof (state)\nthis:\n  finite (Pow (nodes A))\n\ngoal (1 subgoal):\n 1. finite (nodes (complement A))", "have \"nodes (complement A) \\<subseteq> ?lrs \\<times> ?states\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nodes (complement A)\n    \\<subseteq> {f. dom f \\<subseteq> nodes A \\<and>\n                    ran f \\<subseteq> {0..2 * card (nodes A)}} \\<times>\n                Pow (nodes A)", "by (force dest: dom_nodes ran_nodes states_nodes)"], ["proof (state)\nthis:\n  nodes (complement A)\n  \\<subseteq> {f. dom f \\<subseteq> nodes A \\<and>\n                  ran f \\<subseteq> {0..2 * card (nodes A)}} \\<times>\n              Pow (nodes A)\n\ngoal (1 subgoal):\n 1. finite (nodes (complement A))", "also"], ["proof (state)\nthis:\n  nodes (complement A)\n  \\<subseteq> {f. dom f \\<subseteq> nodes A \\<and>\n                  ran f \\<subseteq> {0..2 * card (nodes A)}} \\<times>\n              Pow (nodes A)\n\ngoal (1 subgoal):\n 1. finite (nodes (complement A))", "have \"finite \\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     ({f. dom f \\<subseteq> nodes A \\<and>\n          ran f \\<subseteq> {0..2 * card (nodes A)}} \\<times>\n      Pow (nodes A))", "using 1 2"], ["proof (prove)\nusing this:\n  finite\n   {f. dom f \\<subseteq> nodes A \\<and>\n       ran f \\<subseteq> {0..2 * card (nodes A)}}\n  finite (Pow (nodes A))\n\ngoal (1 subgoal):\n 1. finite\n     ({f. dom f \\<subseteq> nodes A \\<and>\n          ran f \\<subseteq> {0..2 * card (nodes A)}} \\<times>\n      Pow (nodes A))", "by simp"], ["proof (state)\nthis:\n  finite\n   ({f. dom f \\<subseteq> nodes A \\<and>\n        ran f \\<subseteq> {0..2 * card (nodes A)}} \\<times>\n    Pow (nodes A))\n\ngoal (1 subgoal):\n 1. finite (nodes (complement A))", "finally"], ["proof (chain)\npicking this:\n  finite (nodes (complement A))", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (nodes (complement A))\n\ngoal (1 subgoal):\n 1. finite (nodes (complement A))", "by this"], ["proof (state)\nthis:\n  finite (nodes (complement A))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma complement_trace_snth:\n    assumes \"run (complement A) (w ||| r) p\"\n    defines \"m \\<equiv> p ## trace (w ||| r) p\"\n    obtains\n      \"fst (m !! Suc k) \\<in> lr_succ A (w !! k) (fst (m !! k))\"\n      \"snd (m !! Suc k) = st_succ A (w !! k) (fst (m !! Suc k)) (snd (m !! k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>fst (m !! Suc k) \\<in> lr_succ A (w !! k) (fst (m !! k));\n      snd (m !! Suc k) =\n      st_succ A (w !! k) (fst (m !! Suc k)) (snd (m !! k))\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lbrakk>fst (m !! Suc k) \\<in> lr_succ A (w !! k) (fst (m !! k));\n      snd (m !! Suc k) =\n      st_succ A (w !! k) (fst (m !! Suc k)) (snd (m !! k))\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    fst (m !! Suc k) \\<in> lr_succ A (w !! k) (fst (m !! k))\n 2. (\\<lbrakk>fst (m !! Suc k) \\<in> lr_succ A (w !! k) (fst (m !! k));\n      snd (m !! Suc k) =\n      st_succ A (w !! k) (fst (m !! Suc k)) (snd (m !! k))\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    snd (m !! Suc k) = st_succ A (w !! k) (fst (m !! Suc k)) (snd (m !! k))", "have 1: \"r !! k \\<in> transition (complement A) (w !! k) (m !! k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r !! k \\<in> transition (complement A) (w !! k) (m !! k)", "using nba.run_snth assms"], ["proof (prove)\nusing this:\n  run ?A ?r ?p \\<Longrightarrow>\n  fst (?r !! ?k) \\<in> alphabet ?A \\<and>\n  snd (?r !! ?k)\n  \\<in> transition ?A (fst (?r !! ?k)) (target (stake ?k ?r) ?p)\n  run (complement A) (w ||| r) p\n  m \\<equiv> p ## trace (w ||| r) p\n\ngoal (1 subgoal):\n 1. r !! k \\<in> transition (complement A) (w !! k) (m !! k)", "by force"], ["proof (state)\nthis:\n  r !! k \\<in> transition (complement A) (w !! k) (m !! k)\n\ngoal (2 subgoals):\n 1. (\\<lbrakk>fst (m !! Suc k) \\<in> lr_succ A (w !! k) (fst (m !! k));\n      snd (m !! Suc k) =\n      st_succ A (w !! k) (fst (m !! Suc k)) (snd (m !! k))\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    fst (m !! Suc k) \\<in> lr_succ A (w !! k) (fst (m !! k))\n 2. (\\<lbrakk>fst (m !! Suc k) \\<in> lr_succ A (w !! k) (fst (m !! k));\n      snd (m !! Suc k) =\n      st_succ A (w !! k) (fst (m !! Suc k)) (snd (m !! k))\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    snd (m !! Suc k) = st_succ A (w !! k) (fst (m !! Suc k)) (snd (m !! k))", "show \"fst (m !! Suc k) \\<in> lr_succ A (w !! k) (fst (m !! k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (m !! Suc k) \\<in> lr_succ A (w !! k) (fst (m !! k))", "using assms(2) 1"], ["proof (prove)\nusing this:\n  m \\<equiv> p ## trace (w ||| r) p\n  r !! k \\<in> transition (complement A) (w !! k) (m !! k)\n\ngoal (1 subgoal):\n 1. fst (m !! Suc k) \\<in> lr_succ A (w !! k) (fst (m !! k))", "unfolding complement_def complement_succ_def nba.trace_alt_def"], ["proof (prove)\nusing this:\n  m \\<equiv> p ## smap snd (w ||| r)\n  r !! k\n  \\<in> transition\n         (nba (alphabet A)\n           ({(\\<lambda>_. Some (2 * card (nodes A))) |` initial A} \\<times>\n            {{}})\n           (\\<lambda>a (f, P).\n               {(g, st_succ A a g P) |g. g \\<in> lr_succ A a f})\n           (\\<lambda>(f, P). P = {}))\n         (w !! k) (m !! k)\n\ngoal (1 subgoal):\n 1. fst (m !! Suc k) \\<in> lr_succ A (w !! k) (fst (m !! k))", "by auto"], ["proof (state)\nthis:\n  fst (m !! Suc k) \\<in> lr_succ A (w !! k) (fst (m !! k))\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>fst (m !! Suc k) \\<in> lr_succ A (w !! k) (fst (m !! k));\n      snd (m !! Suc k) =\n      st_succ A (w !! k) (fst (m !! Suc k)) (snd (m !! k))\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    snd (m !! Suc k) = st_succ A (w !! k) (fst (m !! Suc k)) (snd (m !! k))", "show \"snd (m !! Suc k) = st_succ A (w !! k) (fst (m !! Suc k)) (snd (m !! k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (m !! Suc k) = st_succ A (w !! k) (fst (m !! Suc k)) (snd (m !! k))", "using assms(2) 1"], ["proof (prove)\nusing this:\n  m \\<equiv> p ## trace (w ||| r) p\n  r !! k \\<in> transition (complement A) (w !! k) (m !! k)\n\ngoal (1 subgoal):\n 1. snd (m !! Suc k) = st_succ A (w !! k) (fst (m !! Suc k)) (snd (m !! k))", "unfolding complement_def complement_succ_def nba.trace_alt_def"], ["proof (prove)\nusing this:\n  m \\<equiv> p ## smap snd (w ||| r)\n  r !! k\n  \\<in> transition\n         (nba (alphabet A)\n           ({(\\<lambda>_. Some (2 * card (nodes A))) |` initial A} \\<times>\n            {{}})\n           (\\<lambda>a (f, P).\n               {(g, st_succ A a g P) |g. g \\<in> lr_succ A a f})\n           (\\<lambda>(f, P). P = {}))\n         (w !! k) (m !! k)\n\ngoal (1 subgoal):\n 1. snd (m !! Suc k) = st_succ A (w !! k) (fst (m !! Suc k)) (snd (m !! k))", "by auto"], ["proof (state)\nthis:\n  snd (m !! Suc k) = st_succ A (w !! k) (fst (m !! Suc k)) (snd (m !! k))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Word in Complement Language Implies Ranking\\<close>"], ["", "lemma complement_ranking:\n    assumes \"w \\<in> language (complement A)\"\n    obtains f\n    where \"ranking A w f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f. ranking A w f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>f. ranking A w f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain r p where 1:\n      \"run (complement A) (w ||| r) p\"\n      \"p \\<in> initial (complement A)\"\n      \"infs (accepting (complement A)) (p ## r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r p.\n        \\<lbrakk>run (complement A) (w ||| r) p;\n         p \\<in> initial (complement A);\n         infs (accepting (complement A)) (p ## r)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  w \\<in> language (complement A)\n\ngoal (1 subgoal):\n 1. (\\<And>r p.\n        \\<lbrakk>run (complement A) (w ||| r) p;\n         p \\<in> initial (complement A);\n         infs (accepting (complement A)) (p ## r)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by rule"], ["proof (state)\nthis:\n  run (complement A) (w ||| r) p\n  p \\<in> initial (complement A)\n  infs (accepting (complement A)) (p ## r)\n\ngoal (1 subgoal):\n 1. (\\<And>f. ranking A w f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?m = \"p ## r\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>f. ranking A w f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain 100:\n      \"fst (?m !! Suc k) \\<in> lr_succ A (w !! k) (fst (?m !! k))\"\n      \"snd (?m !! Suc k) = st_succ A (w !! k) (fst (?m !! Suc k)) (snd (?m !! k))\"\n      for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<And>k.\n                 fst ((p ## r) !! Suc k)\n                 \\<in> lr_succ A (w !! k) (fst ((p ## r) !! k));\n      \\<And>k.\n         snd ((p ## r) !! Suc k) =\n         st_succ A (w !! k) (fst ((p ## r) !! Suc k))\n          (snd ((p ## r) !! k))\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using complement_trace_snth 1(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>run (complement ?A) (?w ||| ?r) ?p;\n   \\<lbrakk>fst ((?p ## trace (?w ||| ?r) ?p) !! Suc ?k)\n            \\<in> lr_succ ?A (?w !! ?k)\n                   (fst ((?p ## trace (?w ||| ?r) ?p) !! ?k));\n    snd ((?p ## trace (?w ||| ?r) ?p) !! Suc ?k) =\n    st_succ ?A (?w !! ?k) (fst ((?p ## trace (?w ||| ?r) ?p) !! Suc ?k))\n     (snd ((?p ## trace (?w ||| ?r) ?p) !! ?k))\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  run (complement A) (w ||| r) p\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<And>k.\n                 fst ((p ## r) !! Suc k)\n                 \\<in> lr_succ A (w !! k) (fst ((p ## r) !! k));\n      \\<And>k.\n         snd ((p ## r) !! Suc k) =\n         st_succ A (w !! k) (fst ((p ## r) !! Suc k))\n          (snd ((p ## r) !! k))\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding nba.trace_alt_def szip_smap_snd"], ["proof (prove)\nusing this:\n  \\<lbrakk>run (complement ?A) (?w ||| ?r) ?p;\n   \\<lbrakk>fst ((?p ## ?r) !! Suc ?k)\n            \\<in> lr_succ ?A (?w !! ?k) (fst ((?p ## ?r) !! ?k));\n    snd ((?p ## ?r) !! Suc ?k) =\n    st_succ ?A (?w !! ?k) (fst ((?p ## ?r) !! Suc ?k))\n     (snd ((?p ## ?r) !! ?k))\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  run (complement A) (w ||| r) p\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<And>k.\n                 fst ((p ## r) !! Suc k)\n                 \\<in> lr_succ A (w !! k) (fst ((p ## r) !! k));\n      \\<And>k.\n         snd ((p ## r) !! Suc k) =\n         st_succ A (w !! k) (fst ((p ## r) !! Suc k))\n          (snd ((p ## r) !! k))\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  fst ((p ## r) !! Suc ?k) \\<in> lr_succ A (w !! ?k) (fst ((p ## r) !! ?k))\n  snd ((p ## r) !! Suc ?k) =\n  st_succ A (w !! ?k) (fst ((p ## r) !! Suc ?k)) (snd ((p ## r) !! ?k))\n\ngoal (1 subgoal):\n 1. (\\<And>f. ranking A w f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define f where \"f \\<equiv> \\<lambda> (k, q). the (fst (?m !! k) q)\""], ["proof (state)\nthis:\n  f \\<equiv> \\<lambda>(k, q). the (fst ((p ## r) !! k) q)\n\ngoal (1 subgoal):\n 1. (\\<And>f. ranking A w f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define P where \"P k \\<equiv> snd (?m !! k)\" for k"], ["proof (state)\nthis:\n  P ?k \\<equiv> snd ((p ## r) !! ?k)\n\ngoal (1 subgoal):\n 1. (\\<And>f. ranking A w f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 2: \"snd v \\<in> dom (fst (?m !! fst v))\" if \"v \\<in> gunodes A w\" for v"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd v \\<in> dom (fst ((p ## r) !! fst v))", "using that"], ["proof (prove)\nusing this:\n  v \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. snd v \\<in> dom (fst ((p ## r) !! fst v))", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>pa.\n       pa \\<in> ginitial A \\<inter> UNIV \\<Longrightarrow>\n       snd pa \\<in> dom (fst ((p ## r) !! fst pa))\n 2. \\<And>pa a.\n       \\<lbrakk>pa \\<in> gunodes A w;\n        snd pa \\<in> dom (fst ((p ## r) !! fst pa));\n        case pa of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> snd a \\<in> dom (fst ((p ## r) !! fst a))", "case (initial v)"], ["proof (state)\nthis:\n  v \\<in> ginitial A \\<inter> UNIV\n\ngoal (2 subgoals):\n 1. \\<And>pa.\n       pa \\<in> ginitial A \\<inter> UNIV \\<Longrightarrow>\n       snd pa \\<in> dom (fst ((p ## r) !! fst pa))\n 2. \\<And>pa a.\n       \\<lbrakk>pa \\<in> gunodes A w;\n        snd pa \\<in> dom (fst ((p ## r) !! fst pa));\n        case pa of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> snd a \\<in> dom (fst ((p ## r) !! fst a))", "then"], ["proof (chain)\npicking this:\n  v \\<in> ginitial A \\<inter> UNIV", "show ?case"], ["proof (prove)\nusing this:\n  v \\<in> ginitial A \\<inter> UNIV\n\ngoal (1 subgoal):\n 1. snd v \\<in> dom (fst ((p ## r) !! fst v))", "using 1(2)"], ["proof (prove)\nusing this:\n  v \\<in> ginitial A \\<inter> UNIV\n  p \\<in> initial (complement A)\n\ngoal (1 subgoal):\n 1. snd v \\<in> dom (fst ((p ## r) !! fst v))", "unfolding complement_def"], ["proof (prove)\nusing this:\n  v \\<in> ginitial A \\<inter> UNIV\n  p \\<in> initial\n           (nba (alphabet A)\n             ({(\\<lambda>_. Some (2 * card (nodes A))) |`\n               initial A} \\<times>\n              {{}})\n             (complement_succ A) (\\<lambda>(f, P). P = {}))\n\ngoal (1 subgoal):\n 1. snd v \\<in> dom (fst ((p ## r) !! fst v))", "by auto"], ["proof (state)\nthis:\n  snd v \\<in> dom (fst ((p ## r) !! fst v))\n\ngoal (1 subgoal):\n 1. \\<And>pa a.\n       \\<lbrakk>pa \\<in> gunodes A w;\n        snd pa \\<in> dom (fst ((p ## r) !! fst pa));\n        case pa of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> snd a \\<in> dom (fst ((p ## r) !! fst a))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pa a.\n       \\<lbrakk>pa \\<in> gunodes A w;\n        snd pa \\<in> dom (fst ((p ## r) !! fst pa));\n        case pa of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> snd a \\<in> dom (fst ((p ## r) !! fst a))", "case (execute v u)"], ["proof (state)\nthis:\n  v \\<in> gunodes A w\n  snd v \\<in> dom (fst ((p ## r) !! fst v))\n  case v of\n  (k, p) \\<Rightarrow>\n    w !! k \\<in> alphabet A \\<and>\n    u \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> UNIV\n\ngoal (1 subgoal):\n 1. \\<And>pa a.\n       \\<lbrakk>pa \\<in> gunodes A w;\n        snd pa \\<in> dom (fst ((p ## r) !! fst pa));\n        case pa of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> snd a \\<in> dom (fst ((p ## r) !! fst a))", "have \"snd u \\<in> \\<Union> (transition A (w !! fst v) ` dom (fst (?m !! fst v)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd u\n    \\<in> \\<Union>\n           (transition A (w !! fst v) ` dom (fst ((p ## r) !! fst v)))", "using execute(2, 3)"], ["proof (prove)\nusing this:\n  snd v \\<in> dom (fst ((p ## r) !! fst v))\n  case v of\n  (k, p) \\<Rightarrow>\n    w !! k \\<in> alphabet A \\<and>\n    u \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> UNIV\n\ngoal (1 subgoal):\n 1. snd u\n    \\<in> \\<Union>\n           (transition A (w !! fst v) ` dom (fst ((p ## r) !! fst v)))", "by auto"], ["proof (state)\nthis:\n  snd u\n  \\<in> \\<Union> (transition A (w !! fst v) ` dom (fst ((p ## r) !! fst v)))\n\ngoal (1 subgoal):\n 1. \\<And>pa a.\n       \\<lbrakk>pa \\<in> gunodes A w;\n        snd pa \\<in> dom (fst ((p ## r) !! fst pa));\n        case pa of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> snd a \\<in> dom (fst ((p ## r) !! fst a))", "also"], ["proof (state)\nthis:\n  snd u\n  \\<in> \\<Union> (transition A (w !! fst v) ` dom (fst ((p ## r) !! fst v)))\n\ngoal (1 subgoal):\n 1. \\<And>pa a.\n       \\<lbrakk>pa \\<in> gunodes A w;\n        snd pa \\<in> dom (fst ((p ## r) !! fst pa));\n        case pa of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> snd a \\<in> dom (fst ((p ## r) !! fst a))", "have \"\\<dots> = dom (fst (?m !! Suc (fst v)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (transition A (w !! fst v) ` dom (fst ((p ## r) !! fst v))) =\n    dom (fst ((p ## r) !! Suc (fst v)))", "using 100"], ["proof (prove)\nusing this:\n  fst ((p ## r) !! Suc ?k) \\<in> lr_succ A (w !! ?k) (fst ((p ## r) !! ?k))\n  snd ((p ## r) !! Suc ?k) =\n  st_succ A (w !! ?k) (fst ((p ## r) !! Suc ?k)) (snd ((p ## r) !! ?k))\n\ngoal (1 subgoal):\n 1. \\<Union> (transition A (w !! fst v) ` dom (fst ((p ## r) !! fst v))) =\n    dom (fst ((p ## r) !! Suc (fst v)))", "unfolding lr_succ_def"], ["proof (prove)\nusing this:\n  fst ((p ## r) !! Suc ?k)\n  \\<in> {g. dom g =\n            \\<Union>\n             (transition A (w !! ?k) ` dom (fst ((p ## r) !! ?k))) \\<and>\n            (\\<forall>pa\\<in>dom (fst ((p ## r) !! ?k)).\n                \\<forall>q\\<in>transition A (w !! ?k) pa.\n                   the (g q) \\<le> the (fst ((p ## r) !! ?k) pa)) \\<and>\n            (\\<forall>q\\<in>dom g.\n                accepting A q \\<longrightarrow> even (the (g q)))}\n  snd ((p ## r) !! Suc ?k) =\n  st_succ A (w !! ?k) (fst ((p ## r) !! Suc ?k)) (snd ((p ## r) !! ?k))\n\ngoal (1 subgoal):\n 1. \\<Union> (transition A (w !! fst v) ` dom (fst ((p ## r) !! fst v))) =\n    dom (fst ((p ## r) !! Suc (fst v)))", "by simp"], ["proof (state)\nthis:\n  \\<Union> (transition A (w !! fst v) ` dom (fst ((p ## r) !! fst v))) =\n  dom (fst ((p ## r) !! Suc (fst v)))\n\ngoal (1 subgoal):\n 1. \\<And>pa a.\n       \\<lbrakk>pa \\<in> gunodes A w;\n        snd pa \\<in> dom (fst ((p ## r) !! fst pa));\n        case pa of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> snd a \\<in> dom (fst ((p ## r) !! fst a))", "also"], ["proof (state)\nthis:\n  \\<Union> (transition A (w !! fst v) ` dom (fst ((p ## r) !! fst v))) =\n  dom (fst ((p ## r) !! Suc (fst v)))\n\ngoal (1 subgoal):\n 1. \\<And>pa a.\n       \\<lbrakk>pa \\<in> gunodes A w;\n        snd pa \\<in> dom (fst ((p ## r) !! fst pa));\n        case pa of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> snd a \\<in> dom (fst ((p ## r) !! fst a))", "have \"Suc (fst v) = fst u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (fst v) = fst u", "using execute(3)"], ["proof (prove)\nusing this:\n  case v of\n  (k, p) \\<Rightarrow>\n    w !! k \\<in> alphabet A \\<and>\n    u \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> UNIV\n\ngoal (1 subgoal):\n 1. Suc (fst v) = fst u", "by auto"], ["proof (state)\nthis:\n  Suc (fst v) = fst u\n\ngoal (1 subgoal):\n 1. \\<And>pa a.\n       \\<lbrakk>pa \\<in> gunodes A w;\n        snd pa \\<in> dom (fst ((p ## r) !! fst pa));\n        case pa of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> snd a \\<in> dom (fst ((p ## r) !! fst a))", "finally"], ["proof (chain)\npicking this:\n  snd u \\<in> dom (fst ((p ## r) !! fst u))", "show ?case"], ["proof (prove)\nusing this:\n  snd u \\<in> dom (fst ((p ## r) !! fst u))\n\ngoal (1 subgoal):\n 1. snd u \\<in> dom (fst ((p ## r) !! fst u))", "by this"], ["proof (state)\nthis:\n  snd u \\<in> dom (fst ((p ## r) !! fst u))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?v \\<in> gunodes A w \\<Longrightarrow>\n  snd ?v \\<in> dom (fst ((p ## r) !! fst ?v))\n\ngoal (1 subgoal):\n 1. (\\<And>f. ranking A w f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 3: \"f u \\<le> f v\" if 10: \"v \\<in> gunodes A w\" and 11: \"u \\<in> gusuccessors A w v\" for u v"], ["proof (prove)\ngoal (1 subgoal):\n 1. f u \\<le> f v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f u \\<le> f v", "have 15: \"snd u \\<in> transition A (w !! fst v) (snd v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd u \\<in> transition A (w !! fst v) (snd v)", "using 11"], ["proof (prove)\nusing this:\n  u \\<in> gusuccessors A w v\n\ngoal (1 subgoal):\n 1. snd u \\<in> transition A (w !! fst v) (snd v)", "by auto"], ["proof (state)\nthis:\n  snd u \\<in> transition A (w !! fst v) (snd v)\n\ngoal (1 subgoal):\n 1. f u \\<le> f v", "have 16: \"snd v \\<in> dom (fst (?m !! fst v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd v \\<in> dom (fst ((p ## r) !! fst v))", "using 2 10"], ["proof (prove)\nusing this:\n  ?v \\<in> gunodes A w \\<Longrightarrow>\n  snd ?v \\<in> dom (fst ((p ## r) !! fst ?v))\n  v \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. snd v \\<in> dom (fst ((p ## r) !! fst v))", "by this"], ["proof (state)\nthis:\n  snd v \\<in> dom (fst ((p ## r) !! fst v))\n\ngoal (1 subgoal):\n 1. f u \\<le> f v", "have \"f u = the (fst (?m !! fst u) (snd u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f u = the (fst ((p ## r) !! fst u) (snd u))", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case u of (k, q) \\<Rightarrow> the (fst ((p ## r) !! k) q)) =\n    the (fst ((p ## r) !! fst u) (snd u))", "by (simp add: case_prod_beta)"], ["proof (state)\nthis:\n  f u = the (fst ((p ## r) !! fst u) (snd u))\n\ngoal (1 subgoal):\n 1. f u \\<le> f v", "also"], ["proof (state)\nthis:\n  f u = the (fst ((p ## r) !! fst u) (snd u))\n\ngoal (1 subgoal):\n 1. f u \\<le> f v", "have \"fst u = Suc (fst v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst u = Suc (fst v)", "using 11"], ["proof (prove)\nusing this:\n  u \\<in> gusuccessors A w v\n\ngoal (1 subgoal):\n 1. fst u = Suc (fst v)", "by auto"], ["proof (state)\nthis:\n  fst u = Suc (fst v)\n\ngoal (1 subgoal):\n 1. f u \\<le> f v", "also"], ["proof (state)\nthis:\n  fst u = Suc (fst v)\n\ngoal (1 subgoal):\n 1. f u \\<le> f v", "have \"the (fst (?m !! \\<dots>) (snd u)) \\<le> the (fst (?m !! fst v) (snd v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the (fst ((p ## r) !! Suc (fst v)) (snd u))\n    \\<le> the (fst ((p ## r) !! fst v) (snd v))", "using 100 15 16"], ["proof (prove)\nusing this:\n  fst ((p ## r) !! Suc ?k) \\<in> lr_succ A (w !! ?k) (fst ((p ## r) !! ?k))\n  snd ((p ## r) !! Suc ?k) =\n  st_succ A (w !! ?k) (fst ((p ## r) !! Suc ?k)) (snd ((p ## r) !! ?k))\n  snd u \\<in> transition A (w !! fst v) (snd v)\n  snd v \\<in> dom (fst ((p ## r) !! fst v))\n\ngoal (1 subgoal):\n 1. the (fst ((p ## r) !! Suc (fst v)) (snd u))\n    \\<le> the (fst ((p ## r) !! fst v) (snd v))", "unfolding lr_succ_def"], ["proof (prove)\nusing this:\n  fst ((p ## r) !! Suc ?k)\n  \\<in> {g. dom g =\n            \\<Union>\n             (transition A (w !! ?k) ` dom (fst ((p ## r) !! ?k))) \\<and>\n            (\\<forall>pa\\<in>dom (fst ((p ## r) !! ?k)).\n                \\<forall>q\\<in>transition A (w !! ?k) pa.\n                   the (g q) \\<le> the (fst ((p ## r) !! ?k) pa)) \\<and>\n            (\\<forall>q\\<in>dom g.\n                accepting A q \\<longrightarrow> even (the (g q)))}\n  snd ((p ## r) !! Suc ?k) =\n  st_succ A (w !! ?k) (fst ((p ## r) !! Suc ?k)) (snd ((p ## r) !! ?k))\n  snd u \\<in> transition A (w !! fst v) (snd v)\n  snd v \\<in> dom (fst ((p ## r) !! fst v))\n\ngoal (1 subgoal):\n 1. the (fst ((p ## r) !! Suc (fst v)) (snd u))\n    \\<le> the (fst ((p ## r) !! fst v) (snd v))", "by auto"], ["proof (state)\nthis:\n  the (fst ((p ## r) !! Suc (fst v)) (snd u))\n  \\<le> the (fst ((p ## r) !! fst v) (snd v))\n\ngoal (1 subgoal):\n 1. f u \\<le> f v", "also"], ["proof (state)\nthis:\n  the (fst ((p ## r) !! Suc (fst v)) (snd u))\n  \\<le> the (fst ((p ## r) !! fst v) (snd v))\n\ngoal (1 subgoal):\n 1. f u \\<le> f v", "have \"\\<dots> = f v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the (fst ((p ## r) !! fst v) (snd v)) = f v", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. the (fst ((p ## r) !! fst v) (snd v)) =\n    (case v of (k, q) \\<Rightarrow> the (fst ((p ## r) !! k) q))", "by (simp add: case_prod_beta)"], ["proof (state)\nthis:\n  the (fst ((p ## r) !! fst v) (snd v)) = f v\n\ngoal (1 subgoal):\n 1. f u \\<le> f v", "finally"], ["proof (chain)\npicking this:\n  f u \\<le> f v", "show \"f u \\<le> f v\""], ["proof (prove)\nusing this:\n  f u \\<le> f v\n\ngoal (1 subgoal):\n 1. f u \\<le> f v", "by this"], ["proof (state)\nthis:\n  f u \\<le> f v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?v \\<in> gunodes A w; ?u \\<in> gusuccessors A w ?v\\<rbrakk>\n  \\<Longrightarrow> f ?u \\<le> f ?v\n\ngoal (1 subgoal):\n 1. (\\<And>f. ranking A w f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 4: \"\\<exists> l \\<ge> k. P l = {}\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l\\<ge>k. P l = {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>l\\<ge>k. P l = {}", "have 15: \"infs (\\<lambda> (k, P). P = {}) ?m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infs (\\<lambda>(k, P). P = {}) (p ## r)", "using 1(3)"], ["proof (prove)\nusing this:\n  infs (accepting (complement A)) (p ## r)\n\ngoal (1 subgoal):\n 1. infs (\\<lambda>(k, P). P = {}) (p ## r)", "unfolding complement_def"], ["proof (prove)\nusing this:\n  infs\n   (accepting\n     (nba (alphabet A)\n       ({(\\<lambda>_. Some (2 * card (nodes A))) |` initial A} \\<times>\n        {{}})\n       (complement_succ A) (\\<lambda>(f, P). P = {})))\n   (p ## r)\n\ngoal (1 subgoal):\n 1. infs (\\<lambda>(k, P). P = {}) (p ## r)", "by auto"], ["proof (state)\nthis:\n  infs (\\<lambda>(k, P). P = {}) (p ## r)\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<ge>k. P l = {}", "obtain l where 17: \"l \\<ge> k\" \"snd (?m !! l) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>k \\<le> l; snd ((p ## r) !! l) = {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 15"], ["proof (prove)\nusing this:\n  infs (\\<lambda>(k, P). P = {}) (p ## r)\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>k \\<le> l; snd ((p ## r) !! l) = {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding infs_snth"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     \\<exists>k\\<ge>n. case (p ## r) !! k of (k, P) \\<Rightarrow> P = {}\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>k \\<le> l; snd ((p ## r) !! l) = {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  k \\<le> l\n  snd ((p ## r) !! l) = {}\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<ge>k. P l = {}", "have 19: \"P l = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P l = {}", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd ((p ## r) !! l) = {}", "using 17"], ["proof (prove)\nusing this:\n  k \\<le> l\n  snd ((p ## r) !! l) = {}\n\ngoal (1 subgoal):\n 1. snd ((p ## r) !! l) = {}", "by auto"], ["proof (state)\nthis:\n  P l = {}\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<ge>k. P l = {}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l\\<ge>k. P l = {}", "using 19 17(1)"], ["proof (prove)\nusing this:\n  P l = {}\n  k \\<le> l\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<ge>k. P l = {}", "by auto"], ["proof (state)\nthis:\n  \\<exists>l\\<ge>k. P l = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>l\\<ge>?k. P l = {}\n\ngoal (1 subgoal):\n 1. (\\<And>f. ranking A w f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (rule that, unfold ranking_def, intro conjI ballI impI allI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>v.\n       v \\<in> gunodes A w \\<Longrightarrow> ?f v \\<le> 2 * card (nodes A)\n 2. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> ?f u \\<le> ?f v\n 3. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (?f v)\n 4. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap ?f (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "fix v"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>v.\n       v \\<in> gunodes A w \\<Longrightarrow> ?f v \\<le> 2 * card (nodes A)\n 2. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> ?f u \\<le> ?f v\n 3. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (?f v)\n 4. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap ?f (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "assume \"v \\<in> gunodes A w\""], ["proof (state)\nthis:\n  v \\<in> gunodes A w\n\ngoal (4 subgoals):\n 1. \\<And>v.\n       v \\<in> gunodes A w \\<Longrightarrow> ?f v \\<le> 2 * card (nodes A)\n 2. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> ?f u \\<le> ?f v\n 3. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (?f v)\n 4. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap ?f (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "then"], ["proof (chain)\npicking this:\n  v \\<in> gunodes A w", "show \"f v \\<le> 2 * card (nodes A)\""], ["proof (prove)\nusing this:\n  v \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. f v \\<le> 2 * card (nodes A)", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       p \\<in> ginitial A \\<inter> UNIV \\<Longrightarrow>\n       f p \\<le> 2 * card (nodes A)\n 2. \\<And>p a.\n       \\<lbrakk>p \\<in> gunodes A w; f p \\<le> 2 * card (nodes A);\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> f a \\<le> 2 * card (nodes A)", "case (initial v)"], ["proof (state)\nthis:\n  v \\<in> ginitial A \\<inter> UNIV\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       p \\<in> ginitial A \\<inter> UNIV \\<Longrightarrow>\n       f p \\<le> 2 * card (nodes A)\n 2. \\<And>p a.\n       \\<lbrakk>p \\<in> gunodes A w; f p \\<le> 2 * card (nodes A);\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> f a \\<le> 2 * card (nodes A)", "then"], ["proof (chain)\npicking this:\n  v \\<in> ginitial A \\<inter> UNIV", "show ?case"], ["proof (prove)\nusing this:\n  v \\<in> ginitial A \\<inter> UNIV\n\ngoal (1 subgoal):\n 1. f v \\<le> 2 * card (nodes A)", "using 1(2)"], ["proof (prove)\nusing this:\n  v \\<in> ginitial A \\<inter> UNIV\n  p \\<in> initial (complement A)\n\ngoal (1 subgoal):\n 1. f v \\<le> 2 * card (nodes A)", "unfolding complement_def f_def"], ["proof (prove)\nusing this:\n  v \\<in> ginitial A \\<inter> UNIV\n  p \\<in> initial\n           (nba (alphabet A)\n             ({(\\<lambda>_. Some (2 * card (nodes A))) |`\n               initial A} \\<times>\n              {{}})\n             (complement_succ A) (\\<lambda>(f, P). P = {}))\n\ngoal (1 subgoal):\n 1. (case v of (k, q) \\<Rightarrow> the (fst ((p ## r) !! k) q))\n    \\<le> 2 * card (nodes A)", "by auto"], ["proof (state)\nthis:\n  f v \\<le> 2 * card (nodes A)\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> gunodes A w; f p \\<le> 2 * card (nodes A);\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> f a \\<le> 2 * card (nodes A)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> gunodes A w; f p \\<le> 2 * card (nodes A);\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> f a \\<le> 2 * card (nodes A)", "case (execute v u)"], ["proof (state)\nthis:\n  v \\<in> gunodes A w\n  f v \\<le> 2 * card (nodes A)\n  case v of\n  (k, p) \\<Rightarrow>\n    w !! k \\<in> alphabet A \\<and>\n    u \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> UNIV\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> gunodes A w; f p \\<le> 2 * card (nodes A);\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> f a \\<le> 2 * card (nodes A)", "have \"f u \\<le> f v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f u \\<le> f v", "using 3[OF execute(1)] execute(3)"], ["proof (prove)\nusing this:\n  ?u \\<in> gusuccessors A w v \\<Longrightarrow> f ?u \\<le> f v\n  case v of\n  (k, p) \\<Rightarrow>\n    w !! k \\<in> alphabet A \\<and>\n    u \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> UNIV\n\ngoal (1 subgoal):\n 1. f u \\<le> f v", "by simp"], ["proof (state)\nthis:\n  f u \\<le> f v\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> gunodes A w; f p \\<le> 2 * card (nodes A);\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> f a \\<le> 2 * card (nodes A)", "also"], ["proof (state)\nthis:\n  f u \\<le> f v\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> gunodes A w; f p \\<le> 2 * card (nodes A);\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> f a \\<le> 2 * card (nodes A)", "have \"\\<dots> \\<le> 2 * card (nodes A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f v \\<le> 2 * card (nodes A)", "using execute(2)"], ["proof (prove)\nusing this:\n  f v \\<le> 2 * card (nodes A)\n\ngoal (1 subgoal):\n 1. f v \\<le> 2 * card (nodes A)", "by this"], ["proof (state)\nthis:\n  f v \\<le> 2 * card (nodes A)\n\ngoal (1 subgoal):\n 1. \\<And>p a.\n       \\<lbrakk>p \\<in> gunodes A w; f p \\<le> 2 * card (nodes A);\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          a \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> f a \\<le> 2 * card (nodes A)", "finally"], ["proof (chain)\npicking this:\n  f u \\<le> 2 * card (nodes A)", "show ?case"], ["proof (prove)\nusing this:\n  f u \\<le> 2 * card (nodes A)\n\ngoal (1 subgoal):\n 1. f u \\<le> 2 * card (nodes A)", "by this"], ["proof (state)\nthis:\n  f u \\<le> 2 * card (nodes A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f v \\<le> 2 * card (nodes A)\n\ngoal (3 subgoals):\n 1. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> f u \\<le> f v\n 2. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (f v)\n 3. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> f u \\<le> f v\n 2. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (f v)\n 3. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "fix v u"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> f u \\<le> f v\n 2. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (f v)\n 3. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "assume 10: \"v \\<in> gunodes A w\""], ["proof (state)\nthis:\n  v \\<in> gunodes A w\n\ngoal (3 subgoals):\n 1. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> f u \\<le> f v\n 2. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (f v)\n 3. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "assume 11: \"u \\<in> gusuccessors A w v\""], ["proof (state)\nthis:\n  u \\<in> gusuccessors A w v\n\ngoal (3 subgoals):\n 1. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> f u \\<le> f v\n 2. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (f v)\n 3. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "show \"f u \\<le> f v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f u \\<le> f v", "using 3 10 11"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> gunodes A w; ?u \\<in> gusuccessors A w ?v\\<rbrakk>\n  \\<Longrightarrow> f ?u \\<le> f ?v\n  v \\<in> gunodes A w\n  u \\<in> gusuccessors A w v\n\ngoal (1 subgoal):\n 1. f u \\<le> f v", "by this"], ["proof (state)\nthis:\n  f u \\<le> f v\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (f v)\n 2. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (f v)\n 2. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "fix v"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (f v)\n 2. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "assume 10: \"v \\<in> gunodes A w\""], ["proof (state)\nthis:\n  v \\<in> gunodes A w\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (f v)\n 2. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "assume 11: \"gaccepting A v\""], ["proof (state)\nthis:\n  gaccepting A v\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (f v)\n 2. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "show \"even (f v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. even (f v)", "using 10"], ["proof (prove)\nusing this:\n  v \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. even (f v)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. v \\<in> ginitial A \\<inter> UNIV \\<Longrightarrow> even (f v)\n 2. \\<And>p.\n       \\<lbrakk>p \\<in> gunodes A w;\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          v \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> even (f v)", "case (initial)"], ["proof (state)\nthis:\n  v \\<in> ginitial A \\<inter> UNIV\n\ngoal (2 subgoals):\n 1. v \\<in> ginitial A \\<inter> UNIV \\<Longrightarrow> even (f v)\n 2. \\<And>p.\n       \\<lbrakk>p \\<in> gunodes A w;\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          v \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> even (f v)", "then"], ["proof (chain)\npicking this:\n  v \\<in> ginitial A \\<inter> UNIV", "show ?thesis"], ["proof (prove)\nusing this:\n  v \\<in> ginitial A \\<inter> UNIV\n\ngoal (1 subgoal):\n 1. even (f v)", "using 1(2)"], ["proof (prove)\nusing this:\n  v \\<in> ginitial A \\<inter> UNIV\n  p \\<in> initial (complement A)\n\ngoal (1 subgoal):\n 1. even (f v)", "unfolding complement_def f_def"], ["proof (prove)\nusing this:\n  v \\<in> ginitial A \\<inter> UNIV\n  p \\<in> initial\n           (nba (alphabet A)\n             ({(\\<lambda>_. Some (2 * card (nodes A))) |`\n               initial A} \\<times>\n              {{}})\n             (complement_succ A) (\\<lambda>(f, P). P = {}))\n\ngoal (1 subgoal):\n 1. even (case v of (k, q) \\<Rightarrow> the (fst ((p ## r) !! k) q))", "by auto"], ["proof (state)\nthis:\n  even (f v)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> gunodes A w;\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          v \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> even (f v)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> gunodes A w;\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          v \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> even (f v)", "case (execute u)"], ["proof (state)\nthis:\n  u \\<in> gunodes A w\n  case u of\n  (k, p) \\<Rightarrow>\n    w !! k \\<in> alphabet A \\<and>\n    v \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> UNIV\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> gunodes A w;\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          v \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> even (f v)", "have 12: \"snd v \\<in> dom (fst (?m !! fst v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd v \\<in> dom (fst ((p ## r) !! fst v))", "using execute graph.nodes.execute 2"], ["proof (prove)\nusing this:\n  u \\<in> gunodes A w\n  case u of\n  (k, p) \\<Rightarrow>\n    w !! k \\<in> alphabet A \\<and>\n    v \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> UNIV\n  \\<lbrakk>?p \\<in> gnodes ?A ?w ?V;\n   case ?p of\n   (k, p) \\<Rightarrow>\n     ?w !! k \\<in> alphabet ?A \\<and>\n     ?a \\<in> {Suc k} \\<times> transition ?A (?w !! k) p \\<inter>\n              ?V\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> gnodes ?A ?w ?V\n  ?v \\<in> gunodes A w \\<Longrightarrow>\n  snd ?v \\<in> dom (fst ((p ## r) !! fst ?v))\n\ngoal (1 subgoal):\n 1. snd v \\<in> dom (fst ((p ## r) !! fst v))", "by blast"], ["proof (state)\nthis:\n  snd v \\<in> dom (fst ((p ## r) !! fst v))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> gunodes A w;\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          v \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> even (f v)", "have 12: \"snd v \\<in> dom (fst (?m !! Suc (fst u)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd v \\<in> dom (fst ((p ## r) !! Suc (fst u)))", "using 12 execute(2)"], ["proof (prove)\nusing this:\n  snd v \\<in> dom (fst ((p ## r) !! fst v))\n  case u of\n  (k, p) \\<Rightarrow>\n    w !! k \\<in> alphabet A \\<and>\n    v \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> UNIV\n\ngoal (1 subgoal):\n 1. snd v \\<in> dom (fst ((p ## r) !! Suc (fst u)))", "by auto"], ["proof (state)\nthis:\n  snd v \\<in> dom (fst ((p ## r) !! Suc (fst u)))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> gunodes A w;\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          v \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> even (f v)", "have 13: \"accepting A (snd v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accepting A (snd v)", "using 11"], ["proof (prove)\nusing this:\n  gaccepting A v\n\ngoal (1 subgoal):\n 1. accepting A (snd v)", "by auto"], ["proof (state)\nthis:\n  accepting A (snd v)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> gunodes A w;\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          v \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> even (f v)", "have \"f v = the (fst (?m !! fst v) (snd v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f v = the (fst ((p ## r) !! fst v) (snd v))", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case v of (k, q) \\<Rightarrow> the (fst ((p ## r) !! k) q)) =\n    the (fst ((p ## r) !! fst v) (snd v))", "by (simp add: case_prod_beta)"], ["proof (state)\nthis:\n  f v = the (fst ((p ## r) !! fst v) (snd v))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> gunodes A w;\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          v \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> even (f v)", "also"], ["proof (state)\nthis:\n  f v = the (fst ((p ## r) !! fst v) (snd v))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> gunodes A w;\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          v \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> even (f v)", "have \"fst v = Suc (fst u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst v = Suc (fst u)", "using execute(2)"], ["proof (prove)\nusing this:\n  case u of\n  (k, p) \\<Rightarrow>\n    w !! k \\<in> alphabet A \\<and>\n    v \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> UNIV\n\ngoal (1 subgoal):\n 1. fst v = Suc (fst u)", "by auto"], ["proof (state)\nthis:\n  fst v = Suc (fst u)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> gunodes A w;\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          v \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> even (f v)", "also"], ["proof (state)\nthis:\n  fst v = Suc (fst u)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> gunodes A w;\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          v \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> even (f v)", "have \"even (the (fst (?m !! Suc (fst u)) (snd v)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. even (the (fst ((p ## r) !! Suc (fst u)) (snd v)))", "using 100 12 13"], ["proof (prove)\nusing this:\n  fst ((p ## r) !! Suc ?k) \\<in> lr_succ A (w !! ?k) (fst ((p ## r) !! ?k))\n  snd ((p ## r) !! Suc ?k) =\n  st_succ A (w !! ?k) (fst ((p ## r) !! Suc ?k)) (snd ((p ## r) !! ?k))\n  snd v \\<in> dom (fst ((p ## r) !! Suc (fst u)))\n  accepting A (snd v)\n\ngoal (1 subgoal):\n 1. even (the (fst ((p ## r) !! Suc (fst u)) (snd v)))", "unfolding lr_succ_def"], ["proof (prove)\nusing this:\n  fst ((p ## r) !! Suc ?k)\n  \\<in> {g. dom g =\n            \\<Union>\n             (transition A (w !! ?k) ` dom (fst ((p ## r) !! ?k))) \\<and>\n            (\\<forall>pa\\<in>dom (fst ((p ## r) !! ?k)).\n                \\<forall>q\\<in>transition A (w !! ?k) pa.\n                   the (g q) \\<le> the (fst ((p ## r) !! ?k) pa)) \\<and>\n            (\\<forall>q\\<in>dom g.\n                accepting A q \\<longrightarrow> even (the (g q)))}\n  snd ((p ## r) !! Suc ?k) =\n  st_succ A (w !! ?k) (fst ((p ## r) !! Suc ?k)) (snd ((p ## r) !! ?k))\n  snd v \\<in> dom (fst ((p ## r) !! Suc (fst u)))\n  accepting A (snd v)\n\ngoal (1 subgoal):\n 1. even (the (fst ((p ## r) !! Suc (fst u)) (snd v)))", "by simp"], ["proof (state)\nthis:\n  even (the (fst ((p ## r) !! Suc (fst u)) (snd v)))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> gunodes A w;\n        case p of\n        (k, p) \\<Rightarrow>\n          w !! k \\<in> alphabet A \\<and>\n          v \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter>\n                  UNIV\\<rbrakk>\n       \\<Longrightarrow> even (f v)", "finally"], ["proof (chain)\npicking this:\n  even (f v)", "show ?thesis"], ["proof (prove)\nusing this:\n  even (f v)\n\ngoal (1 subgoal):\n 1. even (f v)", "by this"], ["proof (state)\nthis:\n  even (f v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  even (f v)\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "fix v s k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "assume 10: \"v \\<in> gunodes A w\""], ["proof (state)\nthis:\n  v \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "assume 11: \"gurun A w s v\""], ["proof (state)\nthis:\n  gurun A w s v\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "assume 12: \"smap f (gtrace s v) = sconst k\""], ["proof (state)\nthis:\n  smap f (gtrace s v) = sconst k\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "show \"odd k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. odd k", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. even k \\<Longrightarrow> False", "assume 13: \"even k\""], ["proof (state)\nthis:\n  even k\n\ngoal (1 subgoal):\n 1. even k \\<Longrightarrow> False", "obtain t u where 14: \"u \\<in> ginitial A\" \"gupath A w t u\" \"v = gtarget t u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u t.\n        \\<lbrakk>u \\<in> ginitial A; gupath A w t u;\n         v = gtarget t u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 10"], ["proof (prove)\nusing this:\n  v \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. (\\<And>u t.\n        \\<lbrakk>u \\<in> ginitial A; gupath A w t u;\n         v = gtarget t u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u \\<in> ginitial A\n  gupath A w t u\n  v = gtarget t u\n\ngoal (1 subgoal):\n 1. even k \\<Longrightarrow> False", "obtain l where 15: \"l \\<ge> length t\" \"P l = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>length t \\<le> l; P l = {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 4"], ["proof (prove)\nusing this:\n  \\<exists>l\\<ge>?k. P l = {}\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>length t \\<le> l; P l = {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  length t \\<le> l\n  P l = {}\n\ngoal (1 subgoal):\n 1. even k \\<Longrightarrow> False", "have 30: \"gurun A w (t @- s) u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gurun A w (t @- s) u", "using 11 14"], ["proof (prove)\nusing this:\n  gurun A w s v\n  u \\<in> ginitial A\n  gupath A w t u\n  v = gtarget t u\n\ngoal (1 subgoal):\n 1. gurun A w (t @- s) u", "by auto"], ["proof (state)\nthis:\n  gurun A w (t @- s) u\n\ngoal (1 subgoal):\n 1. even k \\<Longrightarrow> False", "have 21: \"fst (gtarget (stake (Suc l) (t @- s)) u) = Suc l\" for l"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (gtarget (stake (Suc l) (t @- s)) u) = Suc l", "unfolding sscan_snth[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (gtrace (t @- s) u !! l) = Suc l", "using 30 14(1)"], ["proof (prove)\nusing this:\n  gurun A w (t @- s) u\n  u \\<in> ginitial A\n\ngoal (1 subgoal):\n 1. fst (gtrace (t @- s) u !! l) = Suc l", "by (auto elim!: grun_elim)"], ["proof (state)\nthis:\n  fst (gtarget (stake (Suc ?l) (t @- s)) u) = Suc ?l\n\ngoal (1 subgoal):\n 1. even k \\<Longrightarrow> False", "have 17: \"snd (gtarget (stake (Suc l + i) (t @- s)) u) \\<in> P (Suc l + i)\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (gtarget (stake (Suc l + i) (t @- s)) u) \\<in> P (Suc l + i)", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "case (0)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have 20: \"gtarget (stake (Suc l) (t @- s)) u \\<in> gunodes A w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gtarget (stake (Suc l) (t @- s)) u \\<in> gunodes A w", "using 14 11"], ["proof (prove)\nusing this:\n  u \\<in> ginitial A\n  gupath A w t u\n  v = gtarget t u\n  gurun A w s v\n\ngoal (1 subgoal):\n 1. gtarget (stake (Suc l) (t @- s)) u \\<in> gunodes A w", "by (force simp add: 15(1) le_SucI graph.run_stake stake_shift)"], ["proof (state)\nthis:\n  gtarget (stake (Suc l) (t @- s)) u \\<in> gunodes A w\n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"snd (gtarget (stake (Suc l) (t @- s)) u) \\<in>\n            dom (fst (?m !! fst (gtarget (stake (Suc l) (t @- s)) u)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (gtarget (stake (Suc l) (t @- s)) u)\n    \\<in> dom (fst ((p ## r) !! fst (gtarget (stake (Suc l) (t @- s)) u)))", "using 2[OF 20]"], ["proof (prove)\nusing this:\n  snd (gtarget (stake (Suc l) (t @- s)) u)\n  \\<in> dom (fst ((p ## r) !! fst (gtarget (stake (Suc l) (t @- s)) u)))\n\ngoal (1 subgoal):\n 1. snd (gtarget (stake (Suc l) (t @- s)) u)\n    \\<in> dom (fst ((p ## r) !! fst (gtarget (stake (Suc l) (t @- s)) u)))", "by this"], ["proof (state)\nthis:\n  snd (gtarget (stake (Suc l) (t @- s)) u)\n  \\<in> dom (fst ((p ## r) !! fst (gtarget (stake (Suc l) (t @- s)) u)))\n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "also"], ["proof (state)\nthis:\n  snd (gtarget (stake (Suc l) (t @- s)) u)\n  \\<in> dom (fst ((p ## r) !! fst (gtarget (stake (Suc l) (t @- s)) u)))\n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"fst (gtarget (stake (Suc l) (t @- s)) u) = Suc l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (gtarget (stake (Suc l) (t @- s)) u) = Suc l", "using 21"], ["proof (prove)\nusing this:\n  fst (gtarget (stake (Suc ?l) (t @- s)) u) = Suc ?l\n\ngoal (1 subgoal):\n 1. fst (gtarget (stake (Suc l) (t @- s)) u) = Suc l", "by this"], ["proof (state)\nthis:\n  fst (gtarget (stake (Suc l) (t @- s)) u) = Suc l\n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "finally"], ["proof (chain)\npicking this:\n  snd (gtarget (stake (Suc l) (t @- s)) u)\n  \\<in> dom (fst ((p ## r) !! Suc l))", "have 22: \"snd (gtarget (stake (Suc l) (t @- s)) u) \\<in> dom (fst (?m !! Suc l))\""], ["proof (prove)\nusing this:\n  snd (gtarget (stake (Suc l) (t @- s)) u)\n  \\<in> dom (fst ((p ## r) !! Suc l))\n\ngoal (1 subgoal):\n 1. snd (gtarget (stake (Suc l) (t @- s)) u)\n    \\<in> dom (fst ((p ## r) !! Suc l))", "by this"], ["proof (state)\nthis:\n  snd (gtarget (stake (Suc l) (t @- s)) u)\n  \\<in> dom (fst ((p ## r) !! Suc l))\n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"gtarget (stake (Suc l) (t @- s)) u = gtrace (t @- s) u !! l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gtarget (stake (Suc l) (t @- s)) u = gtrace (t @- s) u !! l", "unfolding sscan_snth"], ["proof (prove)\ngoal (1 subgoal):\n 1. gtarget (stake (Suc l) (t @- s)) u = gtarget (stake (Suc l) (t @- s)) u", "by rule"], ["proof (state)\nthis:\n  gtarget (stake (Suc l) (t @- s)) u = gtrace (t @- s) u !! l\n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "also"], ["proof (state)\nthis:\n  gtarget (stake (Suc l) (t @- s)) u = gtrace (t @- s) u !! l\n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"\\<dots> = gtrace s v !! (l - length t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gtrace (t @- s) u !! l = gtrace s v !! (l - length t)", "using 15(1)"], ["proof (prove)\nusing this:\n  length t \\<le> l\n\ngoal (1 subgoal):\n 1. gtrace (t @- s) u !! l = gtrace s v !! (l - length t)", "by simp"], ["proof (state)\nthis:\n  gtrace (t @- s) u !! l = gtrace s v !! (l - length t)\n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "also"], ["proof (state)\nthis:\n  gtrace (t @- s) u !! l = gtrace s v !! (l - length t)\n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"f \\<dots> = smap f (gtrace s v) !! (l - length t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (gtrace s v !! (l - length t)) = smap f (gtrace s v) !! (l - length t)", "by simp"], ["proof (state)\nthis:\n  f (gtrace s v !! (l - length t)) = smap f (gtrace s v) !! (l - length t)\n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "also"], ["proof (state)\nthis:\n  f (gtrace s v !! (l - length t)) = smap f (gtrace s v) !! (l - length t)\n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"smap f (gtrace s v) = sconst k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smap f (gtrace s v) = sconst k", "unfolding 12"], ["proof (prove)\ngoal (1 subgoal):\n 1. sconst k = sconst k", "by rule"], ["proof (state)\nthis:\n  smap f (gtrace s v) = sconst k\n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "also"], ["proof (state)\nthis:\n  smap f (gtrace s v) = sconst k\n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"sconst k !! (l - length t) = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sconst k !! (l - length t) = k", "by simp"], ["proof (state)\nthis:\n  sconst k !! (l - length t) = k\n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "finally"], ["proof (chain)\npicking this:\n  f (gtarget (stake (Suc l) (t @- s)) u) = k", "have 23: \"even (f (gtarget (stake (Suc l) (t @- s)) u))\""], ["proof (prove)\nusing this:\n  f (gtarget (stake (Suc l) (t @- s)) u) = k\n\ngoal (1 subgoal):\n 1. even (f (gtarget (stake (Suc l) (t @- s)) u))", "using 13"], ["proof (prove)\nusing this:\n  f (gtarget (stake (Suc l) (t @- s)) u) = k\n  even k\n\ngoal (1 subgoal):\n 1. even (f (gtarget (stake (Suc l) (t @- s)) u))", "by simp"], ["proof (state)\nthis:\n  even (f (gtarget (stake (Suc l) (t @- s)) u))\n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"snd (gtarget (stake (Suc l) (t @- s)) u) \\<in>\n            {p \\<in> dom (fst (?m !! Suc l)). even (f (Suc l, p))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (gtarget (stake (Suc l) (t @- s)) u)\n    \\<in> {pa \\<in> dom (fst ((p ## r) !! Suc l)). even (f (Suc l, pa))}", "using 21 22 23"], ["proof (prove)\nusing this:\n  fst (gtarget (stake (Suc ?l) (t @- s)) u) = Suc ?l\n  snd (gtarget (stake (Suc l) (t @- s)) u)\n  \\<in> dom (fst ((p ## r) !! Suc l))\n  even (f (gtarget (stake (Suc l) (t @- s)) u))\n\ngoal (1 subgoal):\n 1. snd (gtarget (stake (Suc l) (t @- s)) u)\n    \\<in> {pa \\<in> dom (fst ((p ## r) !! Suc l)). even (f (Suc l, pa))}", "by (metis (mono_tags, lifting) mem_Collect_eq prod.collapse)"], ["proof (state)\nthis:\n  snd (gtarget (stake (Suc l) (t @- s)) u)\n  \\<in> {pa \\<in> dom (fst ((p ## r) !! Suc l)). even (f (Suc l, pa))}\n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "also"], ["proof (state)\nthis:\n  snd (gtarget (stake (Suc l) (t @- s)) u)\n  \\<in> {pa \\<in> dom (fst ((p ## r) !! Suc l)). even (f (Suc l, pa))}\n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"\\<dots> = st_succ A (w !! l) (fst (?m !! Suc l)) (P l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {pa \\<in> dom (fst ((p ## r) !! Suc l)). even (f (Suc l, pa))} =\n    st_succ A (w !! l) (fst ((p ## r) !! Suc l)) (P l)", "unfolding 15(2) st_succ_def f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {pa \\<in> dom (fst ((p ## r) !! Suc l)).\n     even\n      (case (Suc l, pa) of\n       (k, q) \\<Rightarrow> the (fst ((p ## r) !! k) q))} =\n    {q \\<in> if {} = {} then dom (fst ((p ## r) !! Suc l))\n             else \\<Union> (transition A (w !! l) ` {}).\n     even (the (fst ((p ## r) !! Suc l) q))}", "by simp"], ["proof (state)\nthis:\n  {pa \\<in> dom (fst ((p ## r) !! Suc l)). even (f (Suc l, pa))} =\n  st_succ A (w !! l) (fst ((p ## r) !! Suc l)) (P l)\n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "also"], ["proof (state)\nthis:\n  {pa \\<in> dom (fst ((p ## r) !! Suc l)). even (f (Suc l, pa))} =\n  st_succ A (w !! l) (fst ((p ## r) !! Suc l)) (P l)\n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"\\<dots> = P (Suc l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. st_succ A (w !! l) (fst ((p ## r) !! Suc l)) (P l) = P (Suc l)", "using 100(2)"], ["proof (prove)\nusing this:\n  snd ((p ## r) !! Suc ?k) =\n  st_succ A (w !! ?k) (fst ((p ## r) !! Suc ?k)) (snd ((p ## r) !! ?k))\n\ngoal (1 subgoal):\n 1. st_succ A (w !! l) (fst ((p ## r) !! Suc l)) (P l) = P (Suc l)", "unfolding P_def"], ["proof (prove)\nusing this:\n  snd ((p ## r) !! Suc ?k) =\n  st_succ A (w !! ?k) (fst ((p ## r) !! Suc ?k)) (snd ((p ## r) !! ?k))\n\ngoal (1 subgoal):\n 1. st_succ A (w !! l) (fst ((p ## r) !! Suc l)) (snd ((p ## r) !! l)) =\n    snd ((p ## r) !! Suc l)", "by rule"], ["proof (state)\nthis:\n  st_succ A (w !! l) (fst ((p ## r) !! Suc l)) (P l) = P (Suc l)\n\ngoal (2 subgoals):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n 2. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "finally"], ["proof (chain)\npicking this:\n  snd (gtarget (stake (Suc l) (t @- s)) u) \\<in> P (Suc l)", "show ?case"], ["proof (prove)\nusing this:\n  snd (gtarget (stake (Suc l) (t @- s)) u) \\<in> P (Suc l)\n\ngoal (1 subgoal):\n 1. snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)", "by auto"], ["proof (state)\nthis:\n  snd (gtarget (stake (Suc l + 0) (t @- s)) u) \\<in> P (Suc l + 0)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "case (Suc i)"], ["proof (state)\nthis:\n  snd (gtarget (stake (Suc l + i) (t @- s)) u) \\<in> P (Suc l + i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have 20: \"P (Suc l + i) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (Suc l + i) \\<noteq> {}", "using Suc"], ["proof (prove)\nusing this:\n  snd (gtarget (stake (Suc l + i) (t @- s)) u) \\<in> P (Suc l + i)\n\ngoal (1 subgoal):\n 1. P (Suc l + i) \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  P (Suc l + i) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have 21: \"fst (gtarget (stake (Suc l + Suc i) (t @- s)) u) = Suc l + Suc i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (gtarget (stake (Suc l + Suc i) (t @- s)) u) = Suc l + Suc i", "using 21"], ["proof (prove)\nusing this:\n  fst (gtarget (stake (Suc ?l) (t @- s)) u) = Suc ?l\n\ngoal (1 subgoal):\n 1. fst (gtarget (stake (Suc l + Suc i) (t @- s)) u) = Suc l + Suc i", "by (simp add: stake_shift)"], ["proof (state)\nthis:\n  fst (gtarget (stake (Suc l + Suc i) (t @- s)) u) = Suc l + Suc i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"gtarget (stake (Suc l + Suc i) (t @- s)) u = gtrace (t @- s) u !! (l + Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gtarget (stake (Suc l + Suc i) (t @- s)) u =\n    gtrace (t @- s) u !! (l + Suc i)", "unfolding sscan_snth"], ["proof (prove)\ngoal (1 subgoal):\n 1. gtarget (stake (Suc l + Suc i) (t @- s)) u =\n    gtarget (stake (Suc (l + Suc i)) (t @- s)) u", "by simp"], ["proof (state)\nthis:\n  gtarget (stake (Suc l + Suc i) (t @- s)) u =\n  gtrace (t @- s) u !! (l + Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "also"], ["proof (state)\nthis:\n  gtarget (stake (Suc l + Suc i) (t @- s)) u =\n  gtrace (t @- s) u !! (l + Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"\\<dots> \\<in> gusuccessors A w (gtarget (stake (Suc (l + i)) (t @- s)) u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gtrace (t @- s) u !! (l + Suc i)\n    \\<in> gusuccessors A w (gtarget (stake (Suc (l + i)) (t @- s)) u)", "using graph.run_snth[OF 30, of \"l + Suc i\"]"], ["proof (prove)\nusing this:\n  case gtarget (stake (l + Suc i) (t @- s)) u of\n  (k, p) \\<Rightarrow>\n    w !! k \\<in> alphabet A \\<and>\n    (t @- s) !! (l + Suc i)\n    \\<in> {Suc k} \\<times> transition A (w !! k) p \\<inter> UNIV\n\ngoal (1 subgoal):\n 1. gtrace (t @- s) u !! (l + Suc i)\n    \\<in> gusuccessors A w (gtarget (stake (Suc (l + i)) (t @- s)) u)", "by simp"], ["proof (state)\nthis:\n  gtrace (t @- s) u !! (l + Suc i)\n  \\<in> gusuccessors A w (gtarget (stake (Suc (l + i)) (t @- s)) u)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "finally"], ["proof (chain)\npicking this:\n  gtarget (stake (Suc l + Suc i) (t @- s)) u\n  \\<in> gusuccessors A w (gtarget (stake (Suc (l + i)) (t @- s)) u)", "have 220: \"snd (gtarget (stake (Suc (Suc l + i)) (t @- s)) u) \\<in>\n              transition A (w !! (Suc l + i)) (snd (gtarget (stake (Suc (l + i)) (t @- s)) u))\""], ["proof (prove)\nusing this:\n  gtarget (stake (Suc l + Suc i) (t @- s)) u\n  \\<in> gusuccessors A w (gtarget (stake (Suc (l + i)) (t @- s)) u)\n\ngoal (1 subgoal):\n 1. snd (gtarget (stake (Suc (Suc l + i)) (t @- s)) u)\n    \\<in> transition A (w !! (Suc l + i))\n           (snd (gtarget (stake (Suc (l + i)) (t @- s)) u))", "using 21"], ["proof (prove)\nusing this:\n  gtarget (stake (Suc l + Suc i) (t @- s)) u\n  \\<in> gusuccessors A w (gtarget (stake (Suc (l + i)) (t @- s)) u)\n  fst (gtarget (stake (Suc l + Suc i) (t @- s)) u) = Suc l + Suc i\n\ngoal (1 subgoal):\n 1. snd (gtarget (stake (Suc (Suc l + i)) (t @- s)) u)\n    \\<in> transition A (w !! (Suc l + i))\n           (snd (gtarget (stake (Suc (l + i)) (t @- s)) u))", "by auto"], ["proof (state)\nthis:\n  snd (gtarget (stake (Suc (Suc l + i)) (t @- s)) u)\n  \\<in> transition A (w !! (Suc l + i))\n         (snd (gtarget (stake (Suc (l + i)) (t @- s)) u))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have 22: \"snd (gtarget (stake (Suc l + Suc i) (t @- s)) u) \\<in>\n            \\<Union> (transition A (w !! (Suc l + i)) ` P (Suc l + i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n    \\<in> \\<Union> (transition A (w !! (Suc l + i)) ` P (Suc l + i))", "using 220 Suc"], ["proof (prove)\nusing this:\n  snd (gtarget (stake (Suc (Suc l + i)) (t @- s)) u)\n  \\<in> transition A (w !! (Suc l + i))\n         (snd (gtarget (stake (Suc (l + i)) (t @- s)) u))\n  snd (gtarget (stake (Suc l + i) (t @- s)) u) \\<in> P (Suc l + i)\n\ngoal (1 subgoal):\n 1. snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n    \\<in> \\<Union> (transition A (w !! (Suc l + i)) ` P (Suc l + i))", "by auto"], ["proof (state)\nthis:\n  snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n  \\<in> \\<Union> (transition A (w !! (Suc l + i)) ` P (Suc l + i))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"gtarget (stake (Suc l + Suc i) (t @- s)) u = gtrace (t @- s) u !! (l + Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gtarget (stake (Suc l + Suc i) (t @- s)) u =\n    gtrace (t @- s) u !! (l + Suc i)", "unfolding sscan_snth"], ["proof (prove)\ngoal (1 subgoal):\n 1. gtarget (stake (Suc l + Suc i) (t @- s)) u =\n    gtarget (stake (Suc (l + Suc i)) (t @- s)) u", "by simp"], ["proof (state)\nthis:\n  gtarget (stake (Suc l + Suc i) (t @- s)) u =\n  gtrace (t @- s) u !! (l + Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "also"], ["proof (state)\nthis:\n  gtarget (stake (Suc l + Suc i) (t @- s)) u =\n  gtrace (t @- s) u !! (l + Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"\\<dots> = gtrace s v !! (l + Suc i - length t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gtrace (t @- s) u !! (l + Suc i) = gtrace s v !! (l + Suc i - length t)", "using 15(1)"], ["proof (prove)\nusing this:\n  length t \\<le> l\n\ngoal (1 subgoal):\n 1. gtrace (t @- s) u !! (l + Suc i) = gtrace s v !! (l + Suc i - length t)", "by (metis add.commute shift_snth_ge sscan_const trans_le_add2)"], ["proof (state)\nthis:\n  gtrace (t @- s) u !! (l + Suc i) = gtrace s v !! (l + Suc i - length t)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "also"], ["proof (state)\nthis:\n  gtrace (t @- s) u !! (l + Suc i) = gtrace s v !! (l + Suc i - length t)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"f \\<dots> = smap f (gtrace s v) !! (l + Suc i - length t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (gtrace s v !! (l + Suc i - length t)) =\n    smap f (gtrace s v) !! (l + Suc i - length t)", "by simp"], ["proof (state)\nthis:\n  f (gtrace s v !! (l + Suc i - length t)) =\n  smap f (gtrace s v) !! (l + Suc i - length t)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "also"], ["proof (state)\nthis:\n  f (gtrace s v !! (l + Suc i - length t)) =\n  smap f (gtrace s v) !! (l + Suc i - length t)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"smap f (gtrace s v) = sconst k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smap f (gtrace s v) = sconst k", "unfolding 12"], ["proof (prove)\ngoal (1 subgoal):\n 1. sconst k = sconst k", "by rule"], ["proof (state)\nthis:\n  smap f (gtrace s v) = sconst k\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "also"], ["proof (state)\nthis:\n  smap f (gtrace s v) = sconst k\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"sconst k !! (l + Suc i - length t) = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sconst k !! (l + Suc i - length t) = k", "by simp"], ["proof (state)\nthis:\n  sconst k !! (l + Suc i - length t) = k\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "finally"], ["proof (chain)\npicking this:\n  f (gtarget (stake (Suc l + Suc i) (t @- s)) u) = k", "have 23: \"even (f (gtarget (stake (Suc l + Suc i) (t @- s)) u))\""], ["proof (prove)\nusing this:\n  f (gtarget (stake (Suc l + Suc i) (t @- s)) u) = k\n\ngoal (1 subgoal):\n 1. even (f (gtarget (stake (Suc l + Suc i) (t @- s)) u))", "using 13"], ["proof (prove)\nusing this:\n  f (gtarget (stake (Suc l + Suc i) (t @- s)) u) = k\n  even k\n\ngoal (1 subgoal):\n 1. even (f (gtarget (stake (Suc l + Suc i) (t @- s)) u))", "by auto"], ["proof (state)\nthis:\n  even (f (gtarget (stake (Suc l + Suc i) (t @- s)) u))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"snd (gtarget (stake (Suc l + Suc i) (t @- s)) u) \\<in>\n            {p \\<in> \\<Union> (transition A (w !! (Suc l + i)) ` P (Suc l + i)). even (f (Suc (Suc l + i), p))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n    \\<in> {p \\<in> \\<Union>\n                    (transition A (w !! (Suc l + i)) ` P (Suc l + i)).\n           even (f (Suc (Suc l + i), p))}", "using 21 22 23"], ["proof (prove)\nusing this:\n  fst (gtarget (stake (Suc l + Suc i) (t @- s)) u) = Suc l + Suc i\n  snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n  \\<in> \\<Union> (transition A (w !! (Suc l + i)) ` P (Suc l + i))\n  even (f (gtarget (stake (Suc l + Suc i) (t @- s)) u))\n\ngoal (1 subgoal):\n 1. snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n    \\<in> {p \\<in> \\<Union>\n                    (transition A (w !! (Suc l + i)) ` P (Suc l + i)).\n           even (f (Suc (Suc l + i), p))}", "by (metis (mono_tags) add_Suc_right mem_Collect_eq prod.collapse)"], ["proof (state)\nthis:\n  snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n  \\<in> {p \\<in> \\<Union> (transition A (w !! (Suc l + i)) ` P (Suc l + i)).\n         even (f (Suc (Suc l + i), p))}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "also"], ["proof (state)\nthis:\n  snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n  \\<in> {p \\<in> \\<Union> (transition A (w !! (Suc l + i)) ` P (Suc l + i)).\n         even (f (Suc (Suc l + i), p))}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"\\<dots> = st_succ A (w !! (Suc l + i)) (fst (?m !! Suc (Suc l + i))) (P (Suc l + i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p \\<in> \\<Union> (transition A (w !! (Suc l + i)) ` P (Suc l + i)).\n     even (f (Suc (Suc l + i), p))} =\n    st_succ A (w !! (Suc l + i)) (fst ((p ## r) !! Suc (Suc l + i)))\n     (P (Suc l + i))", "unfolding st_succ_def f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {pa \\<in> \\<Union> (transition A (w !! (Suc l + i)) ` P (Suc l + i)).\n     even\n      (case (Suc (Suc l + i), pa) of\n       (k, q) \\<Rightarrow> the (fst ((p ## r) !! k) q))} =\n    {q \\<in> if P (Suc l + i) = {}\n             then dom (fst ((p ## r) !! Suc (Suc l + i)))\n             else \\<Union>\n                   (transition A (w !! (Suc l + i)) ` P (Suc l + i)).\n     even (the (fst ((p ## r) !! Suc (Suc l + i)) q))}", "using 20"], ["proof (prove)\nusing this:\n  P (Suc l + i) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. {pa \\<in> \\<Union> (transition A (w !! (Suc l + i)) ` P (Suc l + i)).\n     even\n      (case (Suc (Suc l + i), pa) of\n       (k, q) \\<Rightarrow> the (fst ((p ## r) !! k) q))} =\n    {q \\<in> if P (Suc l + i) = {}\n             then dom (fst ((p ## r) !! Suc (Suc l + i)))\n             else \\<Union>\n                   (transition A (w !! (Suc l + i)) ` P (Suc l + i)).\n     even (the (fst ((p ## r) !! Suc (Suc l + i)) q))}", "by simp"], ["proof (state)\nthis:\n  {p \\<in> \\<Union> (transition A (w !! (Suc l + i)) ` P (Suc l + i)).\n   even (f (Suc (Suc l + i), p))} =\n  st_succ A (w !! (Suc l + i)) (fst ((p ## r) !! Suc (Suc l + i)))\n   (P (Suc l + i))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "also"], ["proof (state)\nthis:\n  {p \\<in> \\<Union> (transition A (w !! (Suc l + i)) ` P (Suc l + i)).\n   even (f (Suc (Suc l + i), p))} =\n  st_succ A (w !! (Suc l + i)) (fst ((p ## r) !! Suc (Suc l + i)))\n   (P (Suc l + i))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"\\<dots> = P (Suc (Suc l + i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. st_succ A (w !! (Suc l + i)) (fst ((p ## r) !! Suc (Suc l + i)))\n     (P (Suc l + i)) =\n    P (Suc (Suc l + i))", "unfolding 100(2)[folded P_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. st_succ A (w !! (Suc l + i)) (fst ((p ## r) !! Suc (Suc l + i)))\n     (P (Suc l + i)) =\n    st_succ A (w !! (Suc l + i)) (fst ((p ## r) !! Suc (Suc l + i)))\n     (P (Suc l + i))", "by rule"], ["proof (state)\nthis:\n  st_succ A (w !! (Suc l + i)) (fst ((p ## r) !! Suc (Suc l + i)))\n   (P (Suc l + i)) =\n  P (Suc (Suc l + i))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "also"], ["proof (state)\nthis:\n  st_succ A (w !! (Suc l + i)) (fst ((p ## r) !! Suc (Suc l + i)))\n   (P (Suc l + i)) =\n  P (Suc (Suc l + i))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "have \"\\<dots> = P (Suc l + Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (Suc (Suc l + i)) = P (Suc l + Suc i)", "by simp"], ["proof (state)\nthis:\n  P (Suc (Suc l + i)) = P (Suc l + Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (gtarget (stake (Suc l + i) (t @- s)) u)\n       \\<in> P (Suc l + i) \\<Longrightarrow>\n       snd (gtarget (stake (Suc l + Suc i) (t @- s)) u)\n       \\<in> P (Suc l + Suc i)", "finally"], ["proof (chain)\npicking this:\n  snd (gtarget (stake (Suc l + Suc i) (t @- s)) u) \\<in> P (Suc l + Suc i)", "show ?case"], ["proof (prove)\nusing this:\n  snd (gtarget (stake (Suc l + Suc i) (t @- s)) u) \\<in> P (Suc l + Suc i)\n\ngoal (1 subgoal):\n 1. snd (gtarget (stake (Suc l + Suc i) (t @- s)) u) \\<in> P (Suc l + Suc i)", "by this"], ["proof (state)\nthis:\n  snd (gtarget (stake (Suc l + Suc i) (t @- s)) u) \\<in> P (Suc l + Suc i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  snd (gtarget (stake (Suc l + ?i) (t @- s)) u) \\<in> P (Suc l + ?i)\n\ngoal (1 subgoal):\n 1. even k \\<Longrightarrow> False", "obtain l' where 16: \"l' \\<ge> Suc l\" \"P l' = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<lbrakk>Suc l \\<le> l'; P l' = {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 4"], ["proof (prove)\nusing this:\n  \\<exists>l\\<ge>?k. P l = {}\n\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<lbrakk>Suc l \\<le> l'; P l' = {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Suc l \\<le> l'\n  P l' = {}\n\ngoal (1 subgoal):\n 1. even k \\<Longrightarrow> False", "show \"False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using 16 17"], ["proof (prove)\nusing this:\n  Suc l \\<le> l'\n  P l' = {}\n  snd (gtarget (stake (Suc l + ?i) (t @- s)) u) \\<in> P (Suc l + ?i)\n\ngoal (1 subgoal):\n 1. False", "using nat_le_iff_add"], ["proof (prove)\nusing this:\n  Suc l \\<le> l'\n  P l' = {}\n  snd (gtarget (stake (Suc l + ?i) (t @- s)) u) \\<in> P (Suc l + ?i)\n  (?m \\<le> ?n) = (\\<exists>k. ?n = ?m + k)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  odd k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Ranking Implies Word in Complement Language\\<close>"], ["", "definition reach where\n    \"reach A w i \\<equiv> {target r p |r p. path A r p \\<and> p \\<in> initial A \\<and> map fst r = stake i w}\""], ["", "lemma reach_0[simp]: \"reach A w 0 = initial A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reach A w 0 = initial A", "unfolding reach_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {target r p |r p.\n     path A r p \\<and> p \\<in> initial A \\<and> map fst r = stake 0 w} =\n    initial A", "by auto"], ["", "lemma reach_Suc_empty:\n    assumes \"w !! n \\<notin> alphabet A\"\n    shows \"reach A w (Suc n) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reach A w (Suc n) = {}", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> reach A w (Suc n) \\<Longrightarrow> x \\<in> {}", "fix q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> reach A w (Suc n) \\<Longrightarrow> x \\<in> {}", "assume 1: \"q \\<in> reach A w (Suc n)\""], ["proof (state)\nthis:\n  q \\<in> reach A w (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> reach A w (Suc n) \\<Longrightarrow> x \\<in> {}", "obtain r p where 2: \"q = target r p\" \"path A r p\" \"p \\<in> initial A\" \"map fst r = stake (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r p.\n        \\<lbrakk>q = target r p; path A r p; p \\<in> initial A;\n         map fst r = stake (Suc n) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 1"], ["proof (prove)\nusing this:\n  q \\<in> reach A w (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<And>r p.\n        \\<lbrakk>q = target r p; path A r p; p \\<in> initial A;\n         map fst r = stake (Suc n) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding reach_def"], ["proof (prove)\nusing this:\n  q \\<in> {target r p |r p.\n           path A r p \\<and>\n           p \\<in> initial A \\<and> map fst r = stake (Suc n) w}\n\ngoal (1 subgoal):\n 1. (\\<And>r p.\n        \\<lbrakk>q = target r p; path A r p; p \\<in> initial A;\n         map fst r = stake (Suc n) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  q = target r p\n  path A r p\n  p \\<in> initial A\n  map fst r = stake (Suc n) w\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> reach A w (Suc n) \\<Longrightarrow> x \\<in> {}", "have 3: \"path A (take n r @ drop n r) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path A (take n r @ drop n r) p", "using 2(2)"], ["proof (prove)\nusing this:\n  path A r p\n\ngoal (1 subgoal):\n 1. path A (take n r @ drop n r) p", "by simp"], ["proof (state)\nthis:\n  path A (take n r @ drop n r) p\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> reach A w (Suc n) \\<Longrightarrow> x \\<in> {}", "have 4: \"map fst r = stake n w @ [w !! n]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map fst r = stake n w @ [w !! n]", "using 2(4) stake_Suc"], ["proof (prove)\nusing this:\n  map fst r = stake (Suc n) w\n  stake (Suc ?n) ?s = stake ?n ?s @ [?s !! ?n]\n\ngoal (1 subgoal):\n 1. map fst r = stake n w @ [w !! n]", "by auto"], ["proof (state)\nthis:\n  map fst r = stake n w @ [w !! n]\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> reach A w (Suc n) \\<Longrightarrow> x \\<in> {}", "have 5: \"map snd r = take n (map snd r) @ [q]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map snd r = take n (map snd r) @ [q]", "using 2(1, 4) 4"], ["proof (prove)\nusing this:\n  q = target r p\n  map fst r = stake (Suc n) w\n  map fst r = stake n w @ [w !! n]\n\ngoal (1 subgoal):\n 1. map snd r = take n (map snd r) @ [q]", "by (metis One_nat_def Suc_inject Suc_neq_Zero Suc_pred append.right_neutral\n        append_eq_conv_conj drop_map id_take_nth_drop last_ConsR last_conv_nth length_0_conv\n        length_map length_stake lessI nba.target_alt_def nba.states_alt_def zero_less_Suc)"], ["proof (state)\nthis:\n  map snd r = take n (map snd r) @ [q]\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> reach A w (Suc n) \\<Longrightarrow> x \\<in> {}", "have 6: \"drop n r = [(w !! n, q)]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. drop n r = [(w !! n, q)]", "using 4 5"], ["proof (prove)\nusing this:\n  map fst r = stake n w @ [w !! n]\n  map snd r = take n (map snd r) @ [q]\n\ngoal (1 subgoal):\n 1. drop n r = [(w !! n, q)]", "by (metis append_eq_conv_conj append_is_Nil_conv append_take_drop_id drop_map\n        length_greater_0_conv length_stake stake_cycle_le stake_invert_Nil\n        take_map zip_Cons_Cons zip_map_fst_snd)"], ["proof (state)\nthis:\n  drop n r = [(w !! n, q)]\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> reach A w (Suc n) \\<Longrightarrow> x \\<in> {}", "show \"q \\<in> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> {}", "using assms 3"], ["proof (prove)\nusing this:\n  w !! n \\<notin> alphabet A\n  path A (take n r @ drop n r) p\n\ngoal (1 subgoal):\n 1. q \\<in> {}", "unfolding 6"], ["proof (prove)\nusing this:\n  w !! n \\<notin> alphabet A\n  path A (take n r @ [(w !! n, q)]) p\n\ngoal (1 subgoal):\n 1. q \\<in> {}", "by auto"], ["proof (state)\nthis:\n  q \\<in> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reach_Suc_succ:\n    assumes \"w !! n \\<in> alphabet A\"\n    shows \"reach A w (Suc n) = \\<Union> (transition A (w !! n) ` reach A w n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reach A w (Suc n) = \\<Union> (transition A (w !! n) ` reach A w n)", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> reach A w (Suc n) \\<Longrightarrow>\n       x \\<in> \\<Union> (transition A (w !! n) ` reach A w n)\n 2. \\<And>x xa.\n       \\<lbrakk>xa \\<in> reach A w n;\n        x \\<in> transition A (w !! n) xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> reach A w (Suc n)", "fix q"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> reach A w (Suc n) \\<Longrightarrow>\n       x \\<in> \\<Union> (transition A (w !! n) ` reach A w n)\n 2. \\<And>x xa.\n       \\<lbrakk>xa \\<in> reach A w n;\n        x \\<in> transition A (w !! n) xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> reach A w (Suc n)", "assume 1: \"q \\<in> reach A w (Suc n)\""], ["proof (state)\nthis:\n  q \\<in> reach A w (Suc n)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> reach A w (Suc n) \\<Longrightarrow>\n       x \\<in> \\<Union> (transition A (w !! n) ` reach A w n)\n 2. \\<And>x xa.\n       \\<lbrakk>xa \\<in> reach A w n;\n        x \\<in> transition A (w !! n) xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> reach A w (Suc n)", "obtain r p where 2: \"q = target r p\" \"path A r p\" \"p \\<in> initial A\" \"map fst r = stake (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r p.\n        \\<lbrakk>q = target r p; path A r p; p \\<in> initial A;\n         map fst r = stake (Suc n) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 1"], ["proof (prove)\nusing this:\n  q \\<in> reach A w (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<And>r p.\n        \\<lbrakk>q = target r p; path A r p; p \\<in> initial A;\n         map fst r = stake (Suc n) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding reach_def"], ["proof (prove)\nusing this:\n  q \\<in> {target r p |r p.\n           path A r p \\<and>\n           p \\<in> initial A \\<and> map fst r = stake (Suc n) w}\n\ngoal (1 subgoal):\n 1. (\\<And>r p.\n        \\<lbrakk>q = target r p; path A r p; p \\<in> initial A;\n         map fst r = stake (Suc n) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  q = target r p\n  path A r p\n  p \\<in> initial A\n  map fst r = stake (Suc n) w\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> reach A w (Suc n) \\<Longrightarrow>\n       x \\<in> \\<Union> (transition A (w !! n) ` reach A w n)\n 2. \\<And>x xa.\n       \\<lbrakk>xa \\<in> reach A w n;\n        x \\<in> transition A (w !! n) xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> reach A w (Suc n)", "have 3: \"path A (take n r @ drop n r) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path A (take n r @ drop n r) p", "using 2(2)"], ["proof (prove)\nusing this:\n  path A r p\n\ngoal (1 subgoal):\n 1. path A (take n r @ drop n r) p", "by simp"], ["proof (state)\nthis:\n  path A (take n r @ drop n r) p\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> reach A w (Suc n) \\<Longrightarrow>\n       x \\<in> \\<Union> (transition A (w !! n) ` reach A w n)\n 2. \\<And>x xa.\n       \\<lbrakk>xa \\<in> reach A w n;\n        x \\<in> transition A (w !! n) xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> reach A w (Suc n)", "have 4: \"map fst r = stake n w @ [w !! n]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map fst r = stake n w @ [w !! n]", "using 2(4) stake_Suc"], ["proof (prove)\nusing this:\n  map fst r = stake (Suc n) w\n  stake (Suc ?n) ?s = stake ?n ?s @ [?s !! ?n]\n\ngoal (1 subgoal):\n 1. map fst r = stake n w @ [w !! n]", "by auto"], ["proof (state)\nthis:\n  map fst r = stake n w @ [w !! n]\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> reach A w (Suc n) \\<Longrightarrow>\n       x \\<in> \\<Union> (transition A (w !! n) ` reach A w n)\n 2. \\<And>x xa.\n       \\<lbrakk>xa \\<in> reach A w n;\n        x \\<in> transition A (w !! n) xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> reach A w (Suc n)", "have 5: \"map snd r = take n (map snd r) @ [q]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map snd r = take n (map snd r) @ [q]", "using 2(1, 4) 4"], ["proof (prove)\nusing this:\n  q = target r p\n  map fst r = stake (Suc n) w\n  map fst r = stake n w @ [w !! n]\n\ngoal (1 subgoal):\n 1. map snd r = take n (map snd r) @ [q]", "by (metis One_nat_def Suc_inject Suc_neq_Zero Suc_pred append.right_neutral\n        append_eq_conv_conj drop_map id_take_nth_drop last_ConsR last_conv_nth length_0_conv\n        length_map length_stake lessI nba.target_alt_def nba.states_alt_def zero_less_Suc)"], ["proof (state)\nthis:\n  map snd r = take n (map snd r) @ [q]\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> reach A w (Suc n) \\<Longrightarrow>\n       x \\<in> \\<Union> (transition A (w !! n) ` reach A w n)\n 2. \\<And>x xa.\n       \\<lbrakk>xa \\<in> reach A w n;\n        x \\<in> transition A (w !! n) xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> reach A w (Suc n)", "have 6: \"drop n r = [(w !! n, q)]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. drop n r = [(w !! n, q)]", "using 4 5"], ["proof (prove)\nusing this:\n  map fst r = stake n w @ [w !! n]\n  map snd r = take n (map snd r) @ [q]\n\ngoal (1 subgoal):\n 1. drop n r = [(w !! n, q)]", "by (metis append_eq_conv_conj append_is_Nil_conv append_take_drop_id drop_map\n        length_greater_0_conv length_stake stake_cycle_le stake_invert_Nil\n        take_map zip_Cons_Cons zip_map_fst_snd)"], ["proof (state)\nthis:\n  drop n r = [(w !! n, q)]\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> reach A w (Suc n) \\<Longrightarrow>\n       x \\<in> \\<Union> (transition A (w !! n) ` reach A w n)\n 2. \\<And>x xa.\n       \\<lbrakk>xa \\<in> reach A w n;\n        x \\<in> transition A (w !! n) xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> reach A w (Suc n)", "show \"q \\<in> \\<Union>((transition A (w !! n) ` (reach A w n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> \\<Union> (transition A (w !! n) ` reach A w n)", "unfolding reach_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> \\<Union>\n             (transition A (w !! n) `\n              {target r p |r p.\n               path A r p \\<and>\n               p \\<in> initial A \\<and> map fst r = stake n w})", "proof (intro UN_I CollectI exI conjI)"], ["proof (state)\ngoal (5 subgoals):\n 1. ?a = target ?r2 ?p3\n 2. path A ?r2 ?p3\n 3. ?p3 \\<in> initial A\n 4. map fst ?r2 = stake n w\n 5. q \\<in> transition A (w !! n) ?a", "show \"target (take n r) p = target (take n r) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. target (take n r) p = target (take n r) p", "by rule"], ["proof (state)\nthis:\n  target (take n r) p = target (take n r) p\n\ngoal (4 subgoals):\n 1. path A (take n r) p\n 2. p \\<in> initial A\n 3. map fst (take n r) = stake n w\n 4. q \\<in> transition A (w !! n) (target (take n r) p)", "show \"path A (take n r) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path A (take n r) p", "using 3"], ["proof (prove)\nusing this:\n  path A (take n r @ drop n r) p\n\ngoal (1 subgoal):\n 1. path A (take n r) p", "by blast"], ["proof (state)\nthis:\n  path A (take n r) p\n\ngoal (3 subgoals):\n 1. p \\<in> initial A\n 2. map fst (take n r) = stake n w\n 3. q \\<in> transition A (w !! n) (target (take n r) p)", "show \"p \\<in> initial A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> initial A", "using 2(3)"], ["proof (prove)\nusing this:\n  p \\<in> initial A\n\ngoal (1 subgoal):\n 1. p \\<in> initial A", "by this"], ["proof (state)\nthis:\n  p \\<in> initial A\n\ngoal (2 subgoals):\n 1. map fst (take n r) = stake n w\n 2. q \\<in> transition A (w !! n) (target (take n r) p)", "show \"map fst (take n r) = stake n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map fst (take n r) = stake n w", "using 2"], ["proof (prove)\nusing this:\n  q = target r p\n  path A r p\n  p \\<in> initial A\n  map fst r = stake (Suc n) w\n\ngoal (1 subgoal):\n 1. map fst (take n r) = stake n w", "by (metis length_stake lessI nat.distinct(1)\n        stake_cycle_le stake_invert_Nil take_map take_stake)"], ["proof (state)\nthis:\n  map fst (take n r) = stake n w\n\ngoal (1 subgoal):\n 1. q \\<in> transition A (w !! n) (target (take n r) p)", "show \"q \\<in> transition A (w !! n) (target (take n r) p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> transition A (w !! n) (target (take n r) p)", "using 3"], ["proof (prove)\nusing this:\n  path A (take n r @ drop n r) p\n\ngoal (1 subgoal):\n 1. q \\<in> transition A (w !! n) (target (take n r) p)", "unfolding 6"], ["proof (prove)\nusing this:\n  path A (take n r @ [(w !! n, q)]) p\n\ngoal (1 subgoal):\n 1. q \\<in> transition A (w !! n) (target (take n r) p)", "by auto"], ["proof (state)\nthis:\n  q \\<in> transition A (w !! n) (target (take n r) p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  q \\<in> \\<Union> (transition A (w !! n) ` reach A w n)\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> reach A w n;\n        x \\<in> transition A (w !! n) xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> reach A w (Suc n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> reach A w n;\n        x \\<in> transition A (w !! n) xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> reach A w (Suc n)", "fix p q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> reach A w n;\n        x \\<in> transition A (w !! n) xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> reach A w (Suc n)", "assume 1: \"p \\<in> reach A w n\" \"q \\<in> transition A (w !! n) p\""], ["proof (state)\nthis:\n  p \\<in> reach A w n\n  q \\<in> transition A (w !! n) p\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> reach A w n;\n        x \\<in> transition A (w !! n) xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> reach A w (Suc n)", "obtain r x where 2: \"p = target r x\" \"path A r x\" \"x \\<in> initial A\" \"map fst r = stake n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r x.\n        \\<lbrakk>p = target r x; path A r x; x \\<in> initial A;\n         map fst r = stake n w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 1(1)"], ["proof (prove)\nusing this:\n  p \\<in> reach A w n\n\ngoal (1 subgoal):\n 1. (\\<And>r x.\n        \\<lbrakk>p = target r x; path A r x; x \\<in> initial A;\n         map fst r = stake n w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding reach_def"], ["proof (prove)\nusing this:\n  p \\<in> {target r p |r p.\n           path A r p \\<and> p \\<in> initial A \\<and> map fst r = stake n w}\n\ngoal (1 subgoal):\n 1. (\\<And>r x.\n        \\<lbrakk>p = target r x; path A r x; x \\<in> initial A;\n         map fst r = stake n w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  p = target r x\n  path A r x\n  x \\<in> initial A\n  map fst r = stake n w\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> reach A w n;\n        x \\<in> transition A (w !! n) xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> reach A w (Suc n)", "show \"q \\<in> reach A w (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> reach A w (Suc n)", "unfolding reach_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> {target r p |r p.\n             path A r p \\<and>\n             p \\<in> initial A \\<and> map fst r = stake (Suc n) w}", "proof (intro CollectI exI conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. q = target ?r1 ?p2\n 2. path A ?r1 ?p2\n 3. ?p2 \\<in> initial A\n 4. map fst ?r1 = stake (Suc n) w", "show \"q = target (r @ [(w !! n, q)]) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q = target (r @ [(w !! n, q)]) x", "using 1 2"], ["proof (prove)\nusing this:\n  p \\<in> reach A w n\n  q \\<in> transition A (w !! n) p\n  p = target r x\n  path A r x\n  x \\<in> initial A\n  map fst r = stake n w\n\ngoal (1 subgoal):\n 1. q = target (r @ [(w !! n, q)]) x", "by auto"], ["proof (state)\nthis:\n  q = target (r @ [(w !! n, q)]) x\n\ngoal (3 subgoals):\n 1. path A (r @ [(w !! n, q)]) x\n 2. x \\<in> initial A\n 3. map fst (r @ [(w !! n, q)]) = stake (Suc n) w", "show \"path A (r @ [(w !! n, q)]) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path A (r @ [(w !! n, q)]) x", "using assms 1(2) 2(1, 2)"], ["proof (prove)\nusing this:\n  w !! n \\<in> alphabet A\n  q \\<in> transition A (w !! n) p\n  p = target r x\n  path A r x\n\ngoal (1 subgoal):\n 1. path A (r @ [(w !! n, q)]) x", "by auto"], ["proof (state)\nthis:\n  path A (r @ [(w !! n, q)]) x\n\ngoal (2 subgoals):\n 1. x \\<in> initial A\n 2. map fst (r @ [(w !! n, q)]) = stake (Suc n) w", "show \"x \\<in> initial A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> initial A", "using 2(3)"], ["proof (prove)\nusing this:\n  x \\<in> initial A\n\ngoal (1 subgoal):\n 1. x \\<in> initial A", "by this"], ["proof (state)\nthis:\n  x \\<in> initial A\n\ngoal (1 subgoal):\n 1. map fst (r @ [(w !! n, q)]) = stake (Suc n) w", "show \"map fst (r @ [(w !! n, q)]) = stake (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map fst (r @ [(w !! n, q)]) = stake (Suc n) w", "using 1 2"], ["proof (prove)\nusing this:\n  p \\<in> reach A w n\n  q \\<in> transition A (w !! n) p\n  p = target r x\n  path A r x\n  x \\<in> initial A\n  map fst r = stake n w\n\ngoal (1 subgoal):\n 1. map fst (r @ [(w !! n, q)]) = stake (Suc n) w", "by (metis eq_fst_iff list.simps(8) list.simps(9) map_append stake_Suc)"], ["proof (state)\nthis:\n  map fst (r @ [(w !! n, q)]) = stake (Suc n) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  q \\<in> reach A w (Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reach_Suc[simp]: \"reach A w (Suc n) = (if w !! n \\<in> alphabet A\n    then \\<Union> (transition A (w !! n) ` reach A w n) else {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reach A w (Suc n) =\n    (if w !! n \\<in> alphabet A\n     then \\<Union> (transition A (w !! n) ` reach A w n) else {})", "using reach_Suc_empty reach_Suc_succ"], ["proof (prove)\nusing this:\n  ?w !! ?n \\<notin> alphabet ?A \\<Longrightarrow> reach ?A ?w (Suc ?n) = {}\n  ?w !! ?n \\<in> alphabet ?A \\<Longrightarrow>\n  reach ?A ?w (Suc ?n) =\n  \\<Union> (transition ?A (?w !! ?n) ` reach ?A ?w ?n)\n\ngoal (1 subgoal):\n 1. reach A w (Suc n) =\n    (if w !! n \\<in> alphabet A\n     then \\<Union> (transition A (w !! n) ` reach A w n) else {})", "by metis"], ["", "lemma reach_nodes: \"reach A w i \\<subseteq> nodes A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reach A w i \\<subseteq> nodes A", "by (induct i) (auto)"], ["", "lemma reach_gunodes: \"{i} \\<times> reach A w i \\<subseteq> gunodes A w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i} \\<times> reach A w i \\<subseteq> gunodes A w", "by (induct i) (auto intro: graph.nodes.execute)"], ["", "lemma ranking_complement:\n    assumes \"finite (nodes A)\" \"w \\<in> streams (alphabet A)\" \"ranking A w f\"\n    shows \"w \\<in> language (complement A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "define f' where \"f' \\<equiv> \\<lambda> (k, p). if k = 0 then 2 * card (nodes A) else f (k, p)\""], ["proof (state)\nthis:\n  f' \\<equiv>\n  \\<lambda>(k, p). if k = 0 then 2 * card (nodes A) else f (k, p)\n\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "have 0: \"ranking A w f'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ranking A w f'", "unfolding ranking_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>v\\<in>gunodes A w. f' v \\<le> 2 * card (nodes A)) \\<and>\n    (\\<forall>v\\<in>gunodes A w.\n        \\<forall>u\\<in>gusuccessors A w v. f' u \\<le> f' v) \\<and>\n    (\\<forall>v\\<in>gunodes A w.\n        gaccepting A v \\<longrightarrow> even (f' v)) \\<and>\n    (\\<forall>v\\<in>gunodes A w.\n        \\<forall>r k.\n           gurun A w r v \\<longrightarrow>\n           smap f' (gtrace r v) = sconst k \\<longrightarrow> odd k)", "proof (intro conjI ballI impI allI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>v.\n       v \\<in> gunodes A w \\<Longrightarrow> f' v \\<le> 2 * card (nodes A)\n 2. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> f' u \\<le> f' v\n 3. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (f' v)\n 4. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f' (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "show \"\\<And> v. v \\<in> gunodes A w \\<Longrightarrow> f' v \\<le> 2 * card (nodes A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       v \\<in> gunodes A w \\<Longrightarrow> f' v \\<le> 2 * card (nodes A)", "using assms(3)"], ["proof (prove)\nusing this:\n  ranking A w f\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       v \\<in> gunodes A w \\<Longrightarrow> f' v \\<le> 2 * card (nodes A)", "unfolding ranking_def f'_def"], ["proof (prove)\nusing this:\n  (\\<forall>v\\<in>gunodes A w. f v \\<le> 2 * card (nodes A)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>u\\<in>gusuccessors A w v. f u \\<le> f v) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      gaccepting A v \\<longrightarrow> even (f v)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>r k.\n         gurun A w r v \\<longrightarrow>\n         smap f (gtrace r v) = sconst k \\<longrightarrow> odd k)\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       v \\<in> gunodes A w \\<Longrightarrow>\n       (case v of\n        (k, p) \\<Rightarrow> if k = 0 then 2 * card (nodes A) else f (k, p))\n       \\<le> 2 * card (nodes A)", "by auto"], ["proof (state)\nthis:\n  ?v \\<in> gunodes A w \\<Longrightarrow> f' ?v \\<le> 2 * card (nodes A)\n\ngoal (3 subgoals):\n 1. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> f' u \\<le> f' v\n 2. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (f' v)\n 3. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f' (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "show \"\\<And> v u. v \\<in> gunodes A w \\<Longrightarrow> u \\<in> gusuccessors A w v \\<Longrightarrow> f' u \\<le> f' v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> f' u \\<le> f' v", "using assms(3)"], ["proof (prove)\nusing this:\n  ranking A w f\n\ngoal (1 subgoal):\n 1. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> f' u \\<le> f' v", "unfolding ranking_def f'_def"], ["proof (prove)\nusing this:\n  (\\<forall>v\\<in>gunodes A w. f v \\<le> 2 * card (nodes A)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>u\\<in>gusuccessors A w v. f u \\<le> f v) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      gaccepting A v \\<longrightarrow> even (f v)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>r k.\n         gurun A w r v \\<longrightarrow>\n         smap f (gtrace r v) = sconst k \\<longrightarrow> odd k)\n\ngoal (1 subgoal):\n 1. \\<And>v u.\n       \\<lbrakk>v \\<in> gunodes A w; u \\<in> gusuccessors A w v\\<rbrakk>\n       \\<Longrightarrow> (case u of\n                          (k, p) \\<Rightarrow>\n                            if k = 0 then 2 * card (nodes A) else f (k, p))\n                         \\<le> (case v of\n                                (k, p) \\<Rightarrow>\n                                  if k = 0 then 2 * card (nodes A)\n                                  else f (k, p))", "by fastforce"], ["proof (state)\nthis:\n  \\<lbrakk>?v \\<in> gunodes A w; ?u \\<in> gusuccessors A w ?v\\<rbrakk>\n  \\<Longrightarrow> f' ?u \\<le> f' ?v\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (f' v)\n 2. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f' (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "show \"\\<And> v. v \\<in> gunodes A w \\<Longrightarrow> gaccepting A v \\<Longrightarrow> even (f' v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (f' v)", "using assms(3)"], ["proof (prove)\nusing this:\n  ranking A w f\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even (f' v)", "unfolding ranking_def f'_def"], ["proof (prove)\nusing this:\n  (\\<forall>v\\<in>gunodes A w. f v \\<le> 2 * card (nodes A)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>u\\<in>gusuccessors A w v. f u \\<le> f v) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      gaccepting A v \\<longrightarrow> even (f v)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>r k.\n         gurun A w r v \\<longrightarrow>\n         smap f (gtrace r v) = sconst k \\<longrightarrow> odd k)\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> gunodes A w; gaccepting A v\\<rbrakk>\n       \\<Longrightarrow> even\n                          (case v of\n                           (k, p) \\<Rightarrow>\n                             if k = 0 then 2 * card (nodes A) else f (k, p))", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?v \\<in> gunodes A w; gaccepting A ?v\\<rbrakk>\n  \\<Longrightarrow> even (f' ?v)\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f' (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f' (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "have 1: \"v \\<in> gunodes A w \\<Longrightarrow> gurun A w r v \\<Longrightarrow> smap f (gtrace r v) = sconst k \\<Longrightarrow> odd k\"\n        for v r k"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n     smap f (gtrace r v) = sconst k\\<rbrakk>\n    \\<Longrightarrow> odd k", "using assms(3)"], ["proof (prove)\nusing this:\n  ranking A w f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n     smap f (gtrace r v) = sconst k\\<rbrakk>\n    \\<Longrightarrow> odd k", "unfolding ranking_def"], ["proof (prove)\nusing this:\n  (\\<forall>v\\<in>gunodes A w. f v \\<le> 2 * card (nodes A)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>u\\<in>gusuccessors A w v. f u \\<le> f v) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      gaccepting A v \\<longrightarrow> even (f v)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>r k.\n         gurun A w r v \\<longrightarrow>\n         smap f (gtrace r v) = sconst k \\<longrightarrow> odd k)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n     smap f (gtrace r v) = sconst k\\<rbrakk>\n    \\<Longrightarrow> odd k", "by meson"], ["proof (state)\nthis:\n  \\<lbrakk>?v \\<in> gunodes A w; gurun A w ?r ?v;\n   smap f (gtrace ?r ?v) = sconst ?k\\<rbrakk>\n  \\<Longrightarrow> odd ?k\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f' (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "fix v r k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f' (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "assume 2: \"v \\<in> gunodes A w\" \"gurun A w r v\" \"smap f' (gtrace r v) = sconst k\""], ["proof (state)\nthis:\n  v \\<in> gunodes A w\n  gurun A w r v\n  smap f' (gtrace r v) = sconst k\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f' (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "have 20: \"shd r \\<in> gureachable A w v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. shd r \\<in> gureachable A w v", "using 2"], ["proof (prove)\nusing this:\n  v \\<in> gunodes A w\n  gurun A w r v\n  smap f' (gtrace r v) = sconst k\n\ngoal (1 subgoal):\n 1. shd r \\<in> gureachable A w v", "by (auto) (metis graph.reachable.reflexive graph.reachable_trace gtrace_alt_def subsetD shd_sset)"], ["proof (state)\nthis:\n  shd r \\<in> gureachable A w v\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f' (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "obtain 3:\n        \"shd r \\<in> gunodes A w\"\n        \"gurun A w (stl r) (shd r)\"\n        \"smap f' (gtrace (stl r) (shd r)) = sconst k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>shd r \\<in> gunodes A w; gurun A w (stl r) (shd r);\n      smap f' (gtrace (stl r) (shd r)) = sconst k\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 2 20"], ["proof (prove)\nusing this:\n  v \\<in> gunodes A w\n  gurun A w r v\n  smap f' (gtrace r v) = sconst k\n  shd r \\<in> gureachable A w v\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>shd r \\<in> gunodes A w; gurun A w (stl r) (shd r);\n      smap f' (gtrace (stl r) (shd r)) = sconst k\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types, lifting) eq_id_iff graph.nodes_trans graph.run_scons_elim\n          siterate.simps(2) sscan.simps(2) stream.collapse stream.map_sel(2))"], ["proof (state)\nthis:\n  shd r \\<in> gunodes A w\n  gurun A w (stl r) (shd r)\n  smap f' (gtrace (stl r) (shd r)) = sconst k\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f' (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "have 4: \"k \\<noteq> 0\" if \"(k, p) \\<in> sset r\" for k p"], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<noteq> 0", "obtain ra ka pa where 1: \"r = fromN (Suc ka) ||| ra\" \"v = (ka, pa)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ka ra pa.\n        \\<lbrakk>r = fromN (Suc ka) ||| ra; v = (ka, pa)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using grun_elim[OF 2(2)]"], ["proof (prove)\nusing this:\n  (\\<And>ra k p.\n      \\<lbrakk>r = fromN (Suc k) ||| ra; v = (k, p)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>ka ra pa.\n        \\<lbrakk>r = fromN (Suc ka) ||| ra; v = (ka, pa)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by this"], ["proof (state)\nthis:\n  r = fromN (Suc ka) ||| ra\n  v = (ka, pa)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0", "have 2: \"k \\<in> sset (fromN (Suc ka))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<in> sset (fromN (Suc ka))", "using 1(1) that"], ["proof (prove)\nusing this:\n  r = fromN (Suc ka) ||| ra\n  (k, p) \\<in> sset r\n\ngoal (1 subgoal):\n 1. k \\<in> sset (fromN (Suc ka))", "by (metis image_eqI prod.sel(1) szip_smap_fst stream.set_map)"], ["proof (state)\nthis:\n  k \\<in> sset (fromN (Suc ka))\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<noteq> 0", "using 2"], ["proof (prove)\nusing this:\n  k \\<in> sset (fromN (Suc ka))\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (?k, ?p) \\<in> sset r \\<Longrightarrow> ?k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f' (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "have 5: \"smap f' (gtrace (stl r) (shd r)) = smap f (gtrace (stl r) (shd r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smap f' (gtrace (stl r) (shd r)) = smap f (gtrace (stl r) (shd r))", "proof (rule stream.map_cong)"], ["proof (state)\ngoal (2 subgoals):\n 1. gtrace (stl r) (shd r) = gtrace (stl r) (shd r)\n 2. \\<And>z.\n       z \\<in> sset (gtrace (stl r) (shd r)) \\<Longrightarrow> f' z = f z", "show \"gtrace (stl r) (shd r) = gtrace (stl r) (shd r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gtrace (stl r) (shd r) = gtrace (stl r) (shd r)", "by rule"], ["proof (state)\nthis:\n  gtrace (stl r) (shd r) = gtrace (stl r) (shd r)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> sset (gtrace (stl r) (shd r)) \\<Longrightarrow> f' z = f z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> sset (gtrace (stl r) (shd r)) \\<Longrightarrow> f' z = f z", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> sset (gtrace (stl r) (shd r)) \\<Longrightarrow> f' z = f z", "assume 1: \"z \\<in> sset (gtrace (stl r) (shd r))\""], ["proof (state)\nthis:\n  z \\<in> sset (gtrace (stl r) (shd r))\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> sset (gtrace (stl r) (shd r)) \\<Longrightarrow> f' z = f z", "have 2: \"fst z \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst z \\<noteq> 0", "using 4 1"], ["proof (prove)\nusing this:\n  (?k, ?p) \\<in> sset r \\<Longrightarrow> ?k \\<noteq> 0\n  z \\<in> sset (gtrace (stl r) (shd r))\n\ngoal (1 subgoal):\n 1. fst z \\<noteq> 0", "by (metis gtrace_alt_def prod.collapse stl_sset)"], ["proof (state)\nthis:\n  fst z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> sset (gtrace (stl r) (shd r)) \\<Longrightarrow> f' z = f z", "show \"f' z = f z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f' z = f z", "using 2"], ["proof (prove)\nusing this:\n  fst z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f' z = f z", "unfolding f'_def"], ["proof (prove)\nusing this:\n  fst z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (case z of\n     (k, p) \\<Rightarrow> if k = 0 then 2 * card (nodes A) else f (k, p)) =\n    f z", "by (auto simp: case_prod_beta)"], ["proof (state)\nthis:\n  f' z = f z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  smap f' (gtrace (stl r) (shd r)) = smap f (gtrace (stl r) (shd r))\n\ngoal (1 subgoal):\n 1. \\<And>v r k.\n       \\<lbrakk>v \\<in> gunodes A w; gurun A w r v;\n        smap f' (gtrace r v) = sconst k\\<rbrakk>\n       \\<Longrightarrow> odd k", "show \"odd k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. odd k", "using 1 3 5"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> gunodes A w; gurun A w ?r ?v;\n   smap f (gtrace ?r ?v) = sconst ?k\\<rbrakk>\n  \\<Longrightarrow> odd ?k\n  shd r \\<in> gunodes A w\n  gurun A w (stl r) (shd r)\n  smap f' (gtrace (stl r) (shd r)) = sconst k\n  smap f' (gtrace (stl r) (shd r)) = smap f (gtrace (stl r) (shd r))\n\ngoal (1 subgoal):\n 1. odd k", "by simp"], ["proof (state)\nthis:\n  odd k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ranking A w f'\n\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "define g where \"g i p \\<equiv> if p \\<in> reach A w i then Some (f' (i, p)) else None\" for i p"], ["proof (state)\nthis:\n  g ?i ?p \\<equiv>\n  if ?p \\<in> reach A w ?i then Some (f' (?i, ?p)) else None\n\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "have g_dom[simp]: \"dom (g i) = reach A w i\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. dom (g i) = reach A w i", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dom (\\<lambda>p.\n            if p \\<in> reach A w i then Some (f' (i, p)) else None) =\n    reach A w i", "by (auto) (metis option.simps(3))"], ["proof (state)\nthis:\n  dom (g ?i) = reach A w ?i\n\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "have g_0[simp]: \"g 0 = const (Some (2 * card (nodes A))) |` initial A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g 0 = (\\<lambda>_. Some (2 * card (nodes A))) |` initial A", "unfolding g_def f'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>p.\n        if p \\<in> reach A w 0\n        then Some\n              (case (0, p) of\n               (k, p) \\<Rightarrow>\n                 if k = 0 then 2 * card (nodes A) else f (k, p))\n        else None) =\n    (\\<lambda>_. Some (2 * card (nodes A))) |` initial A", "by auto"], ["proof (state)\nthis:\n  g 0 = (\\<lambda>_. Some (2 * card (nodes A))) |` initial A\n\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "have g_Suc[simp]: \"g (Suc n) \\<in> lr_succ A (w !! n) (g n)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. g (Suc n) \\<in> lr_succ A (w !! n) (g n)", "unfolding lr_succ_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. g (Suc n)\n    \\<in> {ga.\n           dom ga = \\<Union> (transition A (w !! n) ` dom (g n)) \\<and>\n           (\\<forall>p\\<in>dom (g n).\n               \\<forall>q\\<in>transition A (w !! n) p.\n                  the (ga q) \\<le> the (g n p)) \\<and>\n           (\\<forall>q\\<in>dom ga.\n               accepting A q \\<longrightarrow> even (the (ga q)))}", "proof (intro CollectI conjI ballI impI)"], ["proof (state)\ngoal (3 subgoals):\n 1. dom (g (Suc n)) = \\<Union> (transition A (w !! n) ` dom (g n))\n 2. \\<And>p q.\n       \\<lbrakk>p \\<in> dom (g n); q \\<in> transition A (w !! n) p\\<rbrakk>\n       \\<Longrightarrow> the (g (Suc n) q) \\<le> the (g n p)\n 3. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "show \"dom (g (Suc n)) = \\<Union> (transition A (w !! n) ` dom (g n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom (g (Suc n)) = \\<Union> (transition A (w !! n) ` dom (g n))", "using snth_in assms(2)"], ["proof (prove)\nusing this:\n  ?s \\<in> streams ?X \\<Longrightarrow> ?s !! ?n \\<in> ?X\n  w \\<in> streams (alphabet A)\n\ngoal (1 subgoal):\n 1. dom (g (Suc n)) = \\<Union> (transition A (w !! n) ` dom (g n))", "by auto"], ["proof (state)\nthis:\n  dom (g (Suc n)) = \\<Union> (transition A (w !! n) ` dom (g n))\n\ngoal (2 subgoals):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> dom (g n); q \\<in> transition A (w !! n) p\\<rbrakk>\n       \\<Longrightarrow> the (g (Suc n) q) \\<le> the (g n p)\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> dom (g n); q \\<in> transition A (w !! n) p\\<rbrakk>\n       \\<Longrightarrow> the (g (Suc n) q) \\<le> the (g n p)\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "fix p q"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> dom (g n); q \\<in> transition A (w !! n) p\\<rbrakk>\n       \\<Longrightarrow> the (g (Suc n) q) \\<le> the (g n p)\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "assume 100: \"p \\<in> dom (g n)\" \"q \\<in> transition A (w !! n) p\""], ["proof (state)\nthis:\n  p \\<in> dom (g n)\n  q \\<in> transition A (w !! n) p\n\ngoal (2 subgoals):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> dom (g n); q \\<in> transition A (w !! n) p\\<rbrakk>\n       \\<Longrightarrow> the (g (Suc n) q) \\<le> the (g n p)\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "have 101: \"q \\<in> reach A w (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> reach A w (Suc n)", "using snth_in assms(2) 100"], ["proof (prove)\nusing this:\n  ?s \\<in> streams ?X \\<Longrightarrow> ?s !! ?n \\<in> ?X\n  w \\<in> streams (alphabet A)\n  p \\<in> dom (g n)\n  q \\<in> transition A (w !! n) p\n\ngoal (1 subgoal):\n 1. q \\<in> reach A w (Suc n)", "by auto"], ["proof (state)\nthis:\n  q \\<in> reach A w (Suc n)\n\ngoal (2 subgoals):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> dom (g n); q \\<in> transition A (w !! n) p\\<rbrakk>\n       \\<Longrightarrow> the (g (Suc n) q) \\<le> the (g n p)\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "have 102: \"(n, p) \\<in> gunodes A w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n, p) \\<in> gunodes A w", "using 100(1) reach_gunodes g_dom"], ["proof (prove)\nusing this:\n  p \\<in> dom (g n)\n  {?i} \\<times> reach ?A ?w ?i \\<subseteq> gunodes ?A ?w\n  dom (g ?i) = reach A w ?i\n\ngoal (1 subgoal):\n 1. (n, p) \\<in> gunodes A w", "by blast"], ["proof (state)\nthis:\n  (n, p) \\<in> gunodes A w\n\ngoal (2 subgoals):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> dom (g n); q \\<in> transition A (w !! n) p\\<rbrakk>\n       \\<Longrightarrow> the (g (Suc n) q) \\<le> the (g n p)\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "have 103: \"(Suc n, q) \\<in> gusuccessors A w (n, p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Suc n, q) \\<in> gusuccessors A w (n, p)", "using snth_in assms(2) 102 100(2)"], ["proof (prove)\nusing this:\n  ?s \\<in> streams ?X \\<Longrightarrow> ?s !! ?n \\<in> ?X\n  w \\<in> streams (alphabet A)\n  (n, p) \\<in> gunodes A w\n  q \\<in> transition A (w !! n) p\n\ngoal (1 subgoal):\n 1. (Suc n, q) \\<in> gusuccessors A w (n, p)", "by auto"], ["proof (state)\nthis:\n  (Suc n, q) \\<in> gusuccessors A w (n, p)\n\ngoal (2 subgoals):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> dom (g n); q \\<in> transition A (w !! n) p\\<rbrakk>\n       \\<Longrightarrow> the (g (Suc n) q) \\<le> the (g n p)\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "have 104: \"p \\<in> reach A w n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> reach A w n", "using 100(1)"], ["proof (prove)\nusing this:\n  p \\<in> dom (g n)\n\ngoal (1 subgoal):\n 1. p \\<in> reach A w n", "by simp"], ["proof (state)\nthis:\n  p \\<in> reach A w n\n\ngoal (2 subgoals):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> dom (g n); q \\<in> transition A (w !! n) p\\<rbrakk>\n       \\<Longrightarrow> the (g (Suc n) q) \\<le> the (g n p)\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "have \"g (Suc n) q = Some (f' (Suc n, q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (Suc n) q = Some (f' (Suc n, q))", "using 101"], ["proof (prove)\nusing this:\n  q \\<in> reach A w (Suc n)\n\ngoal (1 subgoal):\n 1. g (Suc n) q = Some (f' (Suc n, q))", "unfolding g_def"], ["proof (prove)\nusing this:\n  q \\<in> reach A w (Suc n)\n\ngoal (1 subgoal):\n 1. (if q \\<in> reach A w (Suc n) then Some (f' (Suc n, q)) else None) =\n    Some (f' (Suc n, q))", "by simp"], ["proof (state)\nthis:\n  g (Suc n) q = Some (f' (Suc n, q))\n\ngoal (2 subgoals):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> dom (g n); q \\<in> transition A (w !! n) p\\<rbrakk>\n       \\<Longrightarrow> the (g (Suc n) q) \\<le> the (g n p)\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "also"], ["proof (state)\nthis:\n  g (Suc n) q = Some (f' (Suc n, q))\n\ngoal (2 subgoals):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> dom (g n); q \\<in> transition A (w !! n) p\\<rbrakk>\n       \\<Longrightarrow> the (g (Suc n) q) \\<le> the (g n p)\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "have \"the \\<dots> = f' (Suc n, q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the (Some (f' (Suc n, q))) = f' (Suc n, q)", "by simp"], ["proof (state)\nthis:\n  the (Some (f' (Suc n, q))) = f' (Suc n, q)\n\ngoal (2 subgoals):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> dom (g n); q \\<in> transition A (w !! n) p\\<rbrakk>\n       \\<Longrightarrow> the (g (Suc n) q) \\<le> the (g n p)\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "also"], ["proof (state)\nthis:\n  the (Some (f' (Suc n, q))) = f' (Suc n, q)\n\ngoal (2 subgoals):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> dom (g n); q \\<in> transition A (w !! n) p\\<rbrakk>\n       \\<Longrightarrow> the (g (Suc n) q) \\<le> the (g n p)\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "have \"\\<dots> \\<le> f' (n, p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f' (Suc n, q) \\<le> f' (n, p)", "using 0"], ["proof (prove)\nusing this:\n  ranking A w f'\n\ngoal (1 subgoal):\n 1. f' (Suc n, q) \\<le> f' (n, p)", "unfolding ranking_def"], ["proof (prove)\nusing this:\n  (\\<forall>v\\<in>gunodes A w. f' v \\<le> 2 * card (nodes A)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>u\\<in>gusuccessors A w v. f' u \\<le> f' v) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      gaccepting A v \\<longrightarrow> even (f' v)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>r k.\n         gurun A w r v \\<longrightarrow>\n         smap f' (gtrace r v) = sconst k \\<longrightarrow> odd k)\n\ngoal (1 subgoal):\n 1. f' (Suc n, q) \\<le> f' (n, p)", "using 102 103"], ["proof (prove)\nusing this:\n  (\\<forall>v\\<in>gunodes A w. f' v \\<le> 2 * card (nodes A)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>u\\<in>gusuccessors A w v. f' u \\<le> f' v) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      gaccepting A v \\<longrightarrow> even (f' v)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>r k.\n         gurun A w r v \\<longrightarrow>\n         smap f' (gtrace r v) = sconst k \\<longrightarrow> odd k)\n  (n, p) \\<in> gunodes A w\n  (Suc n, q) \\<in> gusuccessors A w (n, p)\n\ngoal (1 subgoal):\n 1. f' (Suc n, q) \\<le> f' (n, p)", "by simp"], ["proof (state)\nthis:\n  f' (Suc n, q) \\<le> f' (n, p)\n\ngoal (2 subgoals):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> dom (g n); q \\<in> transition A (w !! n) p\\<rbrakk>\n       \\<Longrightarrow> the (g (Suc n) q) \\<le> the (g n p)\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "also"], ["proof (state)\nthis:\n  f' (Suc n, q) \\<le> f' (n, p)\n\ngoal (2 subgoals):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> dom (g n); q \\<in> transition A (w !! n) p\\<rbrakk>\n       \\<Longrightarrow> the (g (Suc n) q) \\<le> the (g n p)\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "have \"\\<dots> = the (Some (f' (n, p)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f' (n, p) = the (Some (f' (n, p)))", "by simp"], ["proof (state)\nthis:\n  f' (n, p) = the (Some (f' (n, p)))\n\ngoal (2 subgoals):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> dom (g n); q \\<in> transition A (w !! n) p\\<rbrakk>\n       \\<Longrightarrow> the (g (Suc n) q) \\<le> the (g n p)\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "also"], ["proof (state)\nthis:\n  f' (n, p) = the (Some (f' (n, p)))\n\ngoal (2 subgoals):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> dom (g n); q \\<in> transition A (w !! n) p\\<rbrakk>\n       \\<Longrightarrow> the (g (Suc n) q) \\<le> the (g n p)\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "have \"Some (f' (n, p)) = g n p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Some (f' (n, p)) = g n p", "using 104"], ["proof (prove)\nusing this:\n  p \\<in> reach A w n\n\ngoal (1 subgoal):\n 1. Some (f' (n, p)) = g n p", "unfolding g_def"], ["proof (prove)\nusing this:\n  p \\<in> reach A w n\n\ngoal (1 subgoal):\n 1. Some (f' (n, p)) =\n    (if p \\<in> reach A w n then Some (f' (n, p)) else None)", "by simp"], ["proof (state)\nthis:\n  Some (f' (n, p)) = g n p\n\ngoal (2 subgoals):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> dom (g n); q \\<in> transition A (w !! n) p\\<rbrakk>\n       \\<Longrightarrow> the (g (Suc n) q) \\<le> the (g n p)\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "finally"], ["proof (chain)\npicking this:\n  the (g (Suc n) q) \\<le> the (g n p)", "show \"the (g (Suc n) q) \\<le> the (g n p)\""], ["proof (prove)\nusing this:\n  the (g (Suc n) q) \\<le> the (g n p)\n\ngoal (1 subgoal):\n 1. the (g (Suc n) q) \\<le> the (g n p)", "by this"], ["proof (state)\nthis:\n  the (g (Suc n) q) \\<le> the (g n p)\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "assume 100: \"p \\<in> dom (g (Suc n))\" \"accepting A p\""], ["proof (state)\nthis:\n  p \\<in> dom (g (Suc n))\n  accepting A p\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "have 101: \"p \\<in> reach A w (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> reach A w (Suc n)", "using 100(1)"], ["proof (prove)\nusing this:\n  p \\<in> dom (g (Suc n))\n\ngoal (1 subgoal):\n 1. p \\<in> reach A w (Suc n)", "by simp"], ["proof (state)\nthis:\n  p \\<in> reach A w (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "have 102: \"(Suc n, p) \\<in> gunodes A w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Suc n, p) \\<in> gunodes A w", "using 101 reach_gunodes"], ["proof (prove)\nusing this:\n  p \\<in> reach A w (Suc n)\n  {?i} \\<times> reach ?A ?w ?i \\<subseteq> gunodes ?A ?w\n\ngoal (1 subgoal):\n 1. (Suc n, p) \\<in> gunodes A w", "by blast"], ["proof (state)\nthis:\n  (Suc n, p) \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "have 103: \"gaccepting A (Suc n, p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gaccepting A (Suc n, p)", "using 100(2)"], ["proof (prove)\nusing this:\n  accepting A p\n\ngoal (1 subgoal):\n 1. gaccepting A (Suc n, p)", "by simp"], ["proof (state)\nthis:\n  gaccepting A (Suc n, p)\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "have \"the (g (Suc n) p) = f' (Suc n, p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the (g (Suc n) p) = f' (Suc n, p)", "using 101"], ["proof (prove)\nusing this:\n  p \\<in> reach A w (Suc n)\n\ngoal (1 subgoal):\n 1. the (g (Suc n) p) = f' (Suc n, p)", "unfolding g_def"], ["proof (prove)\nusing this:\n  p \\<in> reach A w (Suc n)\n\ngoal (1 subgoal):\n 1. the (if p \\<in> reach A w (Suc n) then Some (f' (Suc n, p)) else None) =\n    f' (Suc n, p)", "by simp"], ["proof (state)\nthis:\n  the (g (Suc n) p) = f' (Suc n, p)\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "also"], ["proof (state)\nthis:\n  the (g (Suc n) p) = f' (Suc n, p)\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "have \"even \\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. even (f' (Suc n, p))", "using 0"], ["proof (prove)\nusing this:\n  ranking A w f'\n\ngoal (1 subgoal):\n 1. even (f' (Suc n, p))", "unfolding ranking_def"], ["proof (prove)\nusing this:\n  (\\<forall>v\\<in>gunodes A w. f' v \\<le> 2 * card (nodes A)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>u\\<in>gusuccessors A w v. f' u \\<le> f' v) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      gaccepting A v \\<longrightarrow> even (f' v)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>r k.\n         gurun A w r v \\<longrightarrow>\n         smap f' (gtrace r v) = sconst k \\<longrightarrow> odd k)\n\ngoal (1 subgoal):\n 1. even (f' (Suc n, p))", "using 102 103"], ["proof (prove)\nusing this:\n  (\\<forall>v\\<in>gunodes A w. f' v \\<le> 2 * card (nodes A)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>u\\<in>gusuccessors A w v. f' u \\<le> f' v) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      gaccepting A v \\<longrightarrow> even (f' v)) \\<and>\n  (\\<forall>v\\<in>gunodes A w.\n      \\<forall>r k.\n         gurun A w r v \\<longrightarrow>\n         smap f' (gtrace r v) = sconst k \\<longrightarrow> odd k)\n  (Suc n, p) \\<in> gunodes A w\n  gaccepting A (Suc n, p)\n\ngoal (1 subgoal):\n 1. even (f' (Suc n, p))", "by auto"], ["proof (state)\nthis:\n  even (f' (Suc n, p))\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> dom (g (Suc n)); accepting A q\\<rbrakk>\n       \\<Longrightarrow> even (the (g (Suc n) q))", "finally"], ["proof (chain)\npicking this:\n  even (the (g (Suc n) p))", "show \"even (the (g (Suc n) p))\""], ["proof (prove)\nusing this:\n  even (the (g (Suc n) p))\n\ngoal (1 subgoal):\n 1. even (the (g (Suc n) p))", "by this"], ["proof (state)\nthis:\n  even (the (g (Suc n) p))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g (Suc ?n) \\<in> lr_succ A (w !! ?n) (g ?n)\n\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "define P where \"P \\<equiv> rec_nat {} (\\<lambda> n. st_succ A (w !! n) (g (Suc n)))\""], ["proof (state)\nthis:\n  P \\<equiv> rec_nat {} (\\<lambda>n. st_succ A (w !! n) (g (Suc n)))\n\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "have P_0[simp]: \"P 0 = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P 0 = {}", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. rec_nat {} (\\<lambda>n. st_succ A (w !! n) (g (Suc n))) 0 = {}", "by simp"], ["proof (state)\nthis:\n  P 0 = {}\n\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "have P_Suc[simp]: \"P (Suc n) = st_succ A (w !! n) (g (Suc n)) (P n)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (Suc n) = st_succ A (w !! n) (g (Suc n)) (P n)", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. rec_nat {} (\\<lambda>n. st_succ A (w !! n) (g (Suc n))) (Suc n) =\n    st_succ A (w !! n) (g (Suc n))\n     (rec_nat {} (\\<lambda>n. st_succ A (w !! n) (g (Suc n))) n)", "by simp"], ["proof (state)\nthis:\n  P (Suc ?n) = st_succ A (w !! ?n) (g (Suc ?n)) (P ?n)\n\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "have P_reach: \"P n \\<subseteq> reach A w n\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. P n \\<subseteq> reach A w n", "using snth_in assms(2)"], ["proof (prove)\nusing this:\n  ?s \\<in> streams ?X \\<Longrightarrow> ?s !! ?n \\<in> ?X\n  w \\<in> streams (alphabet A)\n\ngoal (1 subgoal):\n 1. P n \\<subseteq> reach A w n", "by (induct n) (auto simp add: st_succ_def)"], ["proof (state)\nthis:\n  P ?n \\<subseteq> reach A w ?n\n\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "have \"P n \\<subseteq> reach A w n\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. P n \\<subseteq> reach A w n", "using P_reach"], ["proof (prove)\nusing this:\n  P ?n \\<subseteq> reach A w ?n\n\ngoal (1 subgoal):\n 1. P n \\<subseteq> reach A w n", "by auto"], ["proof (state)\nthis:\n  P ?n \\<subseteq> reach A w ?n\n\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "also"], ["proof (state)\nthis:\n  P ?n \\<subseteq> reach A w ?n\n\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "have \"\\<dots> n \\<subseteq> nodes A\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. reach A w n \\<subseteq> nodes A", "using reach_nodes"], ["proof (prove)\nusing this:\n  reach ?A ?w ?i \\<subseteq> nodes ?A\n\ngoal (1 subgoal):\n 1. reach A w n \\<subseteq> nodes A", "by this"], ["proof (state)\nthis:\n  reach A w ?n \\<subseteq> nodes A\n\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "also"], ["proof (state)\nthis:\n  reach A w ?n \\<subseteq> nodes A\n\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "have \"finite (nodes A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (nodes A)", "using assms(1)"], ["proof (prove)\nusing this:\n  finite (nodes A)\n\ngoal (1 subgoal):\n 1. finite (nodes A)", "by this"], ["proof (state)\nthis:\n  finite (nodes A)\n\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "finally"], ["proof (chain)\npicking this:\n  finite (P ?n2)", "have P_finite: \"finite (P n)\" for n"], ["proof (prove)\nusing this:\n  finite (P ?n2)\n\ngoal (1 subgoal):\n 1. finite (P n)", "by this"], ["proof (state)\nthis:\n  finite (P ?n)\n\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "define s where \"s \\<equiv> smap g nats ||| smap P nats\""], ["proof (state)\nthis:\n  s \\<equiv> smap g nats ||| smap P nats\n\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. ?p \\<in> initial (complement A)\n 2. run (complement A) (w ||| ?r) ?p\n 3. infs (accepting (complement A)) (?p ## ?r)", "show \"run (complement A) (w ||| stl s) (shd s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. run (complement A) (w ||| stl s) (shd s)", "proof (intro nba.snth_run conjI, simp_all del: stake.simps stake_szip)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>k. w !! k \\<in> alphabet (complement A)\n 2. \\<And>k.\n       stl s !! k\n       \\<in> transition (complement A) (w !! k)\n              (target (stake k (w ||| stl s)) (shd s))", "fix k"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>k. w !! k \\<in> alphabet (complement A)\n 2. \\<And>k.\n       stl s !! k\n       \\<in> transition (complement A) (w !! k)\n              (target (stake k (w ||| stl s)) (shd s))", "show \"w !! k \\<in> alphabet (complement A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w !! k \\<in> alphabet (complement A)", "using snth_in assms(2)"], ["proof (prove)\nusing this:\n  ?s \\<in> streams ?X \\<Longrightarrow> ?s !! ?n \\<in> ?X\n  w \\<in> streams (alphabet A)\n\ngoal (1 subgoal):\n 1. w !! k \\<in> alphabet (complement A)", "unfolding complement_def"], ["proof (prove)\nusing this:\n  ?s \\<in> streams ?X \\<Longrightarrow> ?s !! ?n \\<in> ?X\n  w \\<in> streams (alphabet A)\n\ngoal (1 subgoal):\n 1. w !! k\n    \\<in> alphabet\n           (nba (alphabet A)\n             ({(\\<lambda>_. Some (2 * card (nodes A))) |`\n               initial A} \\<times>\n              {{}})\n             (complement_succ A) (\\<lambda>(f, P). P = {}))", "by auto"], ["proof (state)\nthis:\n  w !! k \\<in> alphabet (complement A)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       stl s !! k\n       \\<in> transition (complement A) (w !! k)\n              (target (stake k (w ||| stl s)) (shd s))", "have \"stl s !! k = s !! Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stl s !! k = s !! Suc k", "by simp"], ["proof (state)\nthis:\n  stl s !! k = s !! Suc k\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       stl s !! k\n       \\<in> transition (complement A) (w !! k)\n              (target (stake k (w ||| stl s)) (shd s))", "also"], ["proof (state)\nthis:\n  stl s !! k = s !! Suc k\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       stl s !! k\n       \\<in> transition (complement A) (w !! k)\n              (target (stake k (w ||| stl s)) (shd s))", "have \"\\<dots> \\<in> complement_succ A (w !! k) (s !! k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s !! Suc k \\<in> complement_succ A (w !! k) (s !! k)", "unfolding complement_succ_def s_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (smap g nats ||| smap P nats) !! Suc k\n    \\<in> (case (smap g nats ||| smap P nats) !! k of\n           (f, P) \\<Rightarrow>\n             {(g, st_succ A (w !! k) g P) |g. g \\<in> lr_succ A (w !! k) f})", "using P_Suc"], ["proof (prove)\nusing this:\n  P (Suc ?n) = st_succ A (w !! ?n) (g (Suc ?n)) (P ?n)\n\ngoal (1 subgoal):\n 1. (smap g nats ||| smap P nats) !! Suc k\n    \\<in> (case (smap g nats ||| smap P nats) !! k of\n           (f, P) \\<Rightarrow>\n             {(g, st_succ A (w !! k) g P) |g. g \\<in> lr_succ A (w !! k) f})", "by simp"], ["proof (state)\nthis:\n  s !! Suc k \\<in> complement_succ A (w !! k) (s !! k)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       stl s !! k\n       \\<in> transition (complement A) (w !! k)\n              (target (stake k (w ||| stl s)) (shd s))", "also"], ["proof (state)\nthis:\n  s !! Suc k \\<in> complement_succ A (w !! k) (s !! k)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       stl s !! k\n       \\<in> transition (complement A) (w !! k)\n              (target (stake k (w ||| stl s)) (shd s))", "have \"\\<dots> = complement_succ A (w !! k) (target (stake k (w ||| stl s)) (shd s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complement_succ A (w !! k) (s !! k) =\n    complement_succ A (w !! k) (target (stake k (w ||| stl s)) (shd s))", "unfolding sscan_scons_snth[symmetric] nba.trace_alt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. complement_succ A (w !! k) (s !! k) =\n    complement_succ A (w !! k) ((shd s ## smap snd (w ||| stl s)) !! k)", "by simp"], ["proof (state)\nthis:\n  complement_succ A (w !! k) (s !! k) =\n  complement_succ A (w !! k) (target (stake k (w ||| stl s)) (shd s))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       stl s !! k\n       \\<in> transition (complement A) (w !! k)\n              (target (stake k (w ||| stl s)) (shd s))", "also"], ["proof (state)\nthis:\n  complement_succ A (w !! k) (s !! k) =\n  complement_succ A (w !! k) (target (stake k (w ||| stl s)) (shd s))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       stl s !! k\n       \\<in> transition (complement A) (w !! k)\n              (target (stake k (w ||| stl s)) (shd s))", "have \"\\<dots> = transition (complement A) (w !! k) (target (stake k (w ||| stl s)) (shd s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complement_succ A (w !! k) (target (stake k (w ||| stl s)) (shd s)) =\n    transition (complement A) (w !! k)\n     (target (stake k (w ||| stl s)) (shd s))", "unfolding complement_def nba.sel"], ["proof (prove)\ngoal (1 subgoal):\n 1. complement_succ A (w !! k) (target (stake k (w ||| stl s)) (shd s)) =\n    complement_succ A (w !! k) (target (stake k (w ||| stl s)) (shd s))", "by rule"], ["proof (state)\nthis:\n  complement_succ A (w !! k) (target (stake k (w ||| stl s)) (shd s)) =\n  transition (complement A) (w !! k)\n   (target (stake k (w ||| stl s)) (shd s))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       stl s !! k\n       \\<in> transition (complement A) (w !! k)\n              (target (stake k (w ||| stl s)) (shd s))", "finally"], ["proof (chain)\npicking this:\n  stl s !! k\n  \\<in> transition (complement A) (w !! k)\n         (target (stake k (w ||| stl s)) (shd s))", "show \"stl s !! k \\<in>\n          transition (complement A) (w !! k) (target (stake k (w ||| stl s)) (shd s))\""], ["proof (prove)\nusing this:\n  stl s !! k\n  \\<in> transition (complement A) (w !! k)\n         (target (stake k (w ||| stl s)) (shd s))\n\ngoal (1 subgoal):\n 1. stl s !! k\n    \\<in> transition (complement A) (w !! k)\n           (target (stake k (w ||| stl s)) (shd s))", "by this"], ["proof (state)\nthis:\n  stl s !! k\n  \\<in> transition (complement A) (w !! k)\n         (target (stake k (w ||| stl s)) (shd s))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  run (complement A) (w ||| stl s) (shd s)\n\ngoal (2 subgoals):\n 1. shd s \\<in> initial (complement A)\n 2. infs (accepting (complement A)) (shd s ## stl s)", "show \"shd s \\<in> initial (complement A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. shd s \\<in> initial (complement A)", "unfolding complement_def s_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. shd (smap g nats ||| smap P nats)\n    \\<in> initial\n           (nba (alphabet A)\n             ({(\\<lambda>_. Some (2 * card (nodes A))) |`\n               initial A} \\<times>\n              {{}})\n             (complement_succ A) (\\<lambda>(f, P). P = {}))", "using P_0"], ["proof (prove)\nusing this:\n  P 0 = {}\n\ngoal (1 subgoal):\n 1. shd (smap g nats ||| smap P nats)\n    \\<in> initial\n           (nba (alphabet A)\n             ({(\\<lambda>_. Some (2 * card (nodes A))) |`\n               initial A} \\<times>\n              {{}})\n             (complement_succ A) (\\<lambda>(f, P). P = {}))", "by simp"], ["proof (state)\nthis:\n  shd s \\<in> initial (complement A)\n\ngoal (1 subgoal):\n 1. infs (accepting (complement A)) (shd s ## stl s)", "show \"infs (accepting (complement A)) (shd s ## stl s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infs (accepting (complement A)) (shd s ## stl s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. infs (accepting (complement A)) (shd s ## stl s)", "have 10: \"\\<forall> n. \\<exists> k \\<ge> n. P k = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. \\<exists>k\\<ge>n. P k = {}", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "assume 20: \"\\<not> (\\<forall> n. \\<exists> k \\<ge> n. P k = {})\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "obtain k where 22: \"P (k + n) \\<noteq> {}\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        (\\<And>n. P (k + n) \\<noteq> {}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using 20"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {})\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        (\\<And>n. P (k + n) \\<noteq> {}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using le_add1"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {})\n  ?n \\<le> ?n + ?m\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        (\\<And>n. P (k + n) \\<noteq> {}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P (k + ?n) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "define m where \"m n S \\<equiv> {p \\<in> \\<Union> (transition A (w !! n) ` S). even (the (g (Suc n) p))}\" for n S"], ["proof (state)\nthis:\n  m ?n ?S \\<equiv>\n  {p \\<in> \\<Union> (transition A (w !! ?n) ` ?S).\n   even (the (g (Suc ?n) p))}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "define R where \"R i n S \\<equiv> rec_nat S (\\<lambda> i. m (n + i)) i\" for i n S"], ["proof (state)\nthis:\n  R ?i ?n ?S \\<equiv> rec_nat ?S (\\<lambda>i. m (?n + i)) ?i\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have R_0[simp]: \"R 0 n = id\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. R 0 n = id", "unfolding R_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>S. rec_nat S (\\<lambda>i. m (n + i)) 0) = id", "by auto"], ["proof (state)\nthis:\n  R 0 ?n = id\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have R_Suc[simp]: \"R (Suc i) n = m (n + i) \\<circ> R i n\" for i n"], ["proof (prove)\ngoal (1 subgoal):\n 1. R (Suc i) n = m (n + i) \\<circ> R i n", "unfolding R_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>S. rec_nat S (\\<lambda>i. m (n + i)) (Suc i)) =\n    m (n + i) \\<circ> (\\<lambda>S. rec_nat S (\\<lambda>i. m (n + i)) i)", "by auto"], ["proof (state)\nthis:\n  R (Suc ?i) ?n = m (?n + ?i) \\<circ> R ?i ?n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have R_Suc': \"R (Suc i) n = R i (Suc n) \\<circ> m n\" for i n"], ["proof (prove)\ngoal (1 subgoal):\n 1. R (Suc i) n = R i (Suc n) \\<circ> m n", "unfolding R_Suc"], ["proof (prove)\ngoal (1 subgoal):\n 1. m (n + i) \\<circ> R i n = R i (Suc n) \\<circ> m n", "by (induct i) (auto)"], ["proof (state)\nthis:\n  R (Suc ?i) ?n = R ?i (Suc ?n) \\<circ> m ?n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have R_reach: \"R i n S \\<subseteq> reach A w (n + i)\" if \"S \\<subseteq> reach A w n\" for i n S"], ["proof (prove)\ngoal (1 subgoal):\n 1. R i n S \\<subseteq> reach A w (n + i)", "using snth_in assms(2) that m_def"], ["proof (prove)\nusing this:\n  ?s \\<in> streams ?X \\<Longrightarrow> ?s !! ?n \\<in> ?X\n  w \\<in> streams (alphabet A)\n  S \\<subseteq> reach A w n\n  m ?n ?S \\<equiv>\n  {p \\<in> \\<Union> (transition A (w !! ?n) ` ?S).\n   even (the (g (Suc ?n) p))}\n\ngoal (1 subgoal):\n 1. R i n S \\<subseteq> reach A w (n + i)", "by (induct i) (auto)"], ["proof (state)\nthis:\n  ?S \\<subseteq> reach A w ?n \\<Longrightarrow>\n  R ?i ?n ?S \\<subseteq> reach A w (?n + ?i)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have P_R: \"P (k + i) = R i k (P k)\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (k + i) = R i k (P k)", "using 22"], ["proof (prove)\nusing this:\n  P (k + ?n) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. P (k + i) = R i k (P k)", "by (induct i) (auto simp add: case_prod_beta' m_def st_succ_def)"], ["proof (state)\nthis:\n  P (k + ?i) = R ?i k (P k)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have 50: \"R i n S = (\\<Union> p \\<in> S. R i n {p})\" for i n S"], ["proof (prove)\ngoal (1 subgoal):\n 1. R i n S = (\\<Union>p\\<in>S. R i n {p})", "by (induct i) (auto simp add: m_def prod.case_eq_if)"], ["proof (state)\nthis:\n  R ?i ?n ?S = (\\<Union>p\\<in>?S. R ?i ?n {p})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have 51: \"R (i + j) n S = {}\" if \"R i n S = {}\" for i j n S"], ["proof (prove)\ngoal (1 subgoal):\n 1. R (i + j) n S = {}", "using that"], ["proof (prove)\nusing this:\n  R i n S = {}\n\ngoal (1 subgoal):\n 1. R (i + j) n S = {}", "by (induct j) (auto simp add: m_def prod.case_eq_if)"], ["proof (state)\nthis:\n  R ?i ?n ?S = {} \\<Longrightarrow> R (?i + ?j) ?n ?S = {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have 52: \"R j n S = {}\" if \"i \\<le> j\" \"R i n S = {}\" for i j n S"], ["proof (prove)\ngoal (1 subgoal):\n 1. R j n S = {}", "using 51"], ["proof (prove)\nusing this:\n  R ?i ?n ?S = {} \\<Longrightarrow> R (?i + ?j) ?n ?S = {}\n\ngoal (1 subgoal):\n 1. R j n S = {}", "by (metis le_add_diff_inverse that(1) that(2))"], ["proof (state)\nthis:\n  \\<lbrakk>?i \\<le> ?j; R ?i ?n ?S = {}\\<rbrakk>\n  \\<Longrightarrow> R ?j ?n ?S = {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have 1: \"\\<exists> p \\<in> S. \\<forall> i. R i n {p} \\<noteq> {}\"\n            if assms: \"finite S\" \"\\<And> i. R i n S \\<noteq> {}\" for n S"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p\\<in>S. \\<forall>i. R i n {p} \\<noteq> {}", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p\\<in>S.\n               \\<forall>i. R i n {p} \\<noteq> {}) \\<Longrightarrow>\n    False", "assume 1: \"\\<not> (\\<exists> p \\<in> S. \\<forall> i. R i n {p} \\<noteq> {})\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>p\\<in>S. \\<forall>i. R i n {p} \\<noteq> {})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p\\<in>S.\n               \\<forall>i. R i n {p} \\<noteq> {}) \\<Longrightarrow>\n    False", "obtain f where 3: \"\\<And> p. p \\<in> S \\<Longrightarrow> R (f p) n {p} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<And>p.\n            p \\<in> S \\<Longrightarrow>\n            R (f p) n {p} = {}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using 1"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>p\\<in>S. \\<forall>i. R i n {p} \\<noteq> {})\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<And>p.\n            p \\<in> S \\<Longrightarrow>\n            R (f p) n {p} = {}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  ?p \\<in> S \\<Longrightarrow> R (f ?p) n {?p} = {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p\\<in>S.\n               \\<forall>i. R i n {p} \\<noteq> {}) \\<Longrightarrow>\n    False", "have 4: \"R (Sup (f ` S)) n {p} = {}\" if \"p \\<in> S\" for p"], ["proof (prove)\ngoal (1 subgoal):\n 1. R (Sup (f ` S)) n {p} = {}", "proof (rule 52)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?i \\<le> Sup (f ` S)\n 2. R ?i n {p} = {}", "show \"f p \\<le> Sup (f ` S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f p \\<le> Sup (f ` S)", "using assms(1) that"], ["proof (prove)\nusing this:\n  finite S\n  p \\<in> S\n\ngoal (1 subgoal):\n 1. f p \\<le> Sup (f ` S)", "by (auto intro: le_cSup_finite)"], ["proof (state)\nthis:\n  f p \\<le> Sup (f ` S)\n\ngoal (1 subgoal):\n 1. R (f p) n {p} = {}", "show \"R (f p) n {p} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R (f p) n {p} = {}", "using 3 that"], ["proof (prove)\nusing this:\n  ?p \\<in> S \\<Longrightarrow> R (f ?p) n {?p} = {}\n  p \\<in> S\n\ngoal (1 subgoal):\n 1. R (f p) n {p} = {}", "by this"], ["proof (state)\nthis:\n  R (f p) n {p} = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?p \\<in> S \\<Longrightarrow> R (Sup (f ` S)) n {?p} = {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p\\<in>S.\n               \\<forall>i. R i n {p} \\<noteq> {}) \\<Longrightarrow>\n    False", "have \"R (Sup (f ` S)) n S = (\\<Union> p \\<in> S. R (Sup (f ` S)) n {p})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R (Sup (f ` S)) n S = (\\<Union>p\\<in>S. R (Sup (f ` S)) n {p})", "using 50"], ["proof (prove)\nusing this:\n  R ?i ?n ?S = (\\<Union>p\\<in>?S. R ?i ?n {p})\n\ngoal (1 subgoal):\n 1. R (Sup (f ` S)) n S = (\\<Union>p\\<in>S. R (Sup (f ` S)) n {p})", "by this"], ["proof (state)\nthis:\n  R (Sup (f ` S)) n S = (\\<Union>p\\<in>S. R (Sup (f ` S)) n {p})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p\\<in>S.\n               \\<forall>i. R i n {p} \\<noteq> {}) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  R (Sup (f ` S)) n S = (\\<Union>p\\<in>S. R (Sup (f ` S)) n {p})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p\\<in>S.\n               \\<forall>i. R i n {p} \\<noteq> {}) \\<Longrightarrow>\n    False", "have \"\\<dots> = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>p\\<in>S. R (Sup (f ` S)) n {p}) = {}", "using 4"], ["proof (prove)\nusing this:\n  ?p \\<in> S \\<Longrightarrow> R (Sup (f ` S)) n {?p} = {}\n\ngoal (1 subgoal):\n 1. (\\<Union>p\\<in>S. R (Sup (f ` S)) n {p}) = {}", "by simp"], ["proof (state)\nthis:\n  (\\<Union>p\\<in>S. R (Sup (f ` S)) n {p}) = {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p\\<in>S.\n               \\<forall>i. R i n {p} \\<noteq> {}) \\<Longrightarrow>\n    False", "finally"], ["proof (chain)\npicking this:\n  R (Sup (f ` S)) n S = {}", "have 5: \"R (Sup (f ` S)) n S = {}\""], ["proof (prove)\nusing this:\n  R (Sup (f ` S)) n S = {}\n\ngoal (1 subgoal):\n 1. R (Sup (f ` S)) n S = {}", "by this"], ["proof (state)\nthis:\n  R (Sup (f ` S)) n S = {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p\\<in>S.\n               \\<forall>i. R i n {p} \\<noteq> {}) \\<Longrightarrow>\n    False", "show \"False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using that(2) 5"], ["proof (prove)\nusing this:\n  R ?i n S \\<noteq> {}\n  R (Sup (f ` S)) n S = {}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?S; \\<And>i. R i ?n ?S \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>p\\<in>?S. \\<forall>i. R i ?n {p} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have 2: \"\\<And> i. R i (k + 0) (P k) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. R i (k + 0) (P k) \\<noteq> {}", "using 22 P_R"], ["proof (prove)\nusing this:\n  P (k + ?n) \\<noteq> {}\n  P (k + ?i) = R ?i k (P k)\n\ngoal (1 subgoal):\n 1. \\<And>i. R i (k + 0) (P k) \\<noteq> {}", "by simp"], ["proof (state)\nthis:\n  R ?i (k + 0) (P k) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "obtain p where 3: \"p \\<in> P k\" \"\\<And> i. R i k {p} \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p \\<in> P k; \\<And>i. R i k {p} \\<noteq> {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 1[OF P_finite 2]"], ["proof (prove)\nusing this:\n  \\<exists>p\\<in>P k. \\<forall>i. R i (k + 0) {p} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p \\<in> P k; \\<And>i. R i k {p} \\<noteq> {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p \\<in> P k\n  R ?i k {p} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "define Q where \"Q n p \\<equiv> (\\<forall> i. R i (k + n) {p} \\<noteq> {}) \\<and> p \\<in> P (k + n)\" for n p"], ["proof (state)\nthis:\n  Q ?n ?p \\<equiv>\n  (\\<forall>i. R i (k + ?n) {?p} \\<noteq> {}) \\<and> ?p \\<in> P (k + ?n)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have 5: \"\\<exists> q \\<in> transition A (w !! (k + n)) p. Q (Suc n) q\" if \"Q n p\" for n p"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>transition A (w !! (k + n)) p. Q (Suc n) q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>transition A (w !! (k + n)) p. Q (Suc n) q", "have 11: \"p \\<in> P (k + n)\" \"\\<And> i. R i (k + n) {p} \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> P (k + n) &&& (\\<And>i. R i (k + n) {p} \\<noteq> {})", "using that"], ["proof (prove)\nusing this:\n  Q n p\n\ngoal (1 subgoal):\n 1. p \\<in> P (k + n) &&& (\\<And>i. R i (k + n) {p} \\<noteq> {})", "unfolding Q_def"], ["proof (prove)\nusing this:\n  (\\<forall>i. R i (k + n) {p} \\<noteq> {}) \\<and> p \\<in> P (k + n)\n\ngoal (1 subgoal):\n 1. p \\<in> P (k + n) &&& (\\<And>i. R i (k + n) {p} \\<noteq> {})", "by auto"], ["proof (state)\nthis:\n  p \\<in> P (k + n)\n  R ?i (k + n) {p} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>transition A (w !! (k + n)) p. Q (Suc n) q", "have 12: \"R (Suc i) (k + n) {p} \\<noteq> {}\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. R (Suc i) (k + n) {p} \\<noteq> {}", "using 11(2)"], ["proof (prove)\nusing this:\n  R ?i (k + n) {p} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. R (Suc i) (k + n) {p} \\<noteq> {}", "by this"], ["proof (state)\nthis:\n  R (Suc ?i) (k + n) {p} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>transition A (w !! (k + n)) p. Q (Suc n) q", "have 13: \"R i (k + Suc n) (m (k + n) {p}) \\<noteq> {}\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. R i (k + Suc n) (m (k + n) {p}) \\<noteq> {}", "using 12"], ["proof (prove)\nusing this:\n  R (Suc ?i) (k + n) {p} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. R i (k + Suc n) (m (k + n) {p}) \\<noteq> {}", "unfolding R_Suc'"], ["proof (prove)\nusing this:\n  (R ?i (Suc (k + n)) \\<circ> m (k + n)) {p} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. R i (k + Suc n) (m (k + n) {p}) \\<noteq> {}", "by simp"], ["proof (state)\nthis:\n  R ?i (k + Suc n) (m (k + n) {p}) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>transition A (w !! (k + n)) p. Q (Suc n) q", "have \"{p} \\<subseteq> P (k + n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p} \\<subseteq> P (k + n)", "using 11(1)"], ["proof (prove)\nusing this:\n  p \\<in> P (k + n)\n\ngoal (1 subgoal):\n 1. {p} \\<subseteq> P (k + n)", "by auto"], ["proof (state)\nthis:\n  {p} \\<subseteq> P (k + n)\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>transition A (w !! (k + n)) p. Q (Suc n) q", "also"], ["proof (state)\nthis:\n  {p} \\<subseteq> P (k + n)\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>transition A (w !! (k + n)) p. Q (Suc n) q", "have \"\\<dots> \\<subseteq> reach A w (k + n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (k + n) \\<subseteq> reach A w (k + n)", "using P_reach"], ["proof (prove)\nusing this:\n  P ?n \\<subseteq> reach A w ?n\n\ngoal (1 subgoal):\n 1. P (k + n) \\<subseteq> reach A w (k + n)", "by this"], ["proof (state)\nthis:\n  P (k + n) \\<subseteq> reach A w (k + n)\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>transition A (w !! (k + n)) p. Q (Suc n) q", "finally"], ["proof (chain)\npicking this:\n  {p} \\<subseteq> reach A w (k + n)", "have \"R 1 (k + n) {p} \\<subseteq> reach A w (k + n + 1)\""], ["proof (prove)\nusing this:\n  {p} \\<subseteq> reach A w (k + n)\n\ngoal (1 subgoal):\n 1. R 1 (k + n) {p} \\<subseteq> reach A w (k + n + 1)", "using R_reach"], ["proof (prove)\nusing this:\n  {p} \\<subseteq> reach A w (k + n)\n  ?S \\<subseteq> reach A w ?n \\<Longrightarrow>\n  R ?i ?n ?S \\<subseteq> reach A w (?n + ?i)\n\ngoal (1 subgoal):\n 1. R 1 (k + n) {p} \\<subseteq> reach A w (k + n + 1)", "by blast"], ["proof (state)\nthis:\n  R 1 (k + n) {p} \\<subseteq> reach A w (k + n + 1)\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>transition A (w !! (k + n)) p. Q (Suc n) q", "also"], ["proof (state)\nthis:\n  R 1 (k + n) {p} \\<subseteq> reach A w (k + n + 1)\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>transition A (w !! (k + n)) p. Q (Suc n) q", "have \"\\<dots> \\<subseteq> nodes A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reach A w (k + n + 1) \\<subseteq> nodes A", "using reach_nodes"], ["proof (prove)\nusing this:\n  reach ?A ?w ?i \\<subseteq> nodes ?A\n\ngoal (1 subgoal):\n 1. reach A w (k + n + 1) \\<subseteq> nodes A", "by this"], ["proof (state)\nthis:\n  reach A w (k + n + 1) \\<subseteq> nodes A\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>transition A (w !! (k + n)) p. Q (Suc n) q", "also"], ["proof (state)\nthis:\n  reach A w (k + n + 1) \\<subseteq> nodes A\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>transition A (w !! (k + n)) p. Q (Suc n) q", "have \"finite (nodes A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (nodes A)", "using assms(1)"], ["proof (prove)\nusing this:\n  finite (nodes A)\n\ngoal (1 subgoal):\n 1. finite (nodes A)", "by this"], ["proof (state)\nthis:\n  finite (nodes A)\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>transition A (w !! (k + n)) p. Q (Suc n) q", "finally"], ["proof (chain)\npicking this:\n  finite (R 1 (k + n) {p})", "have 14: \"finite (m (k + n) {p})\""], ["proof (prove)\nusing this:\n  finite (R 1 (k + n) {p})\n\ngoal (1 subgoal):\n 1. finite (m (k + n) {p})", "by simp"], ["proof (state)\nthis:\n  finite (m (k + n) {p})\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>transition A (w !! (k + n)) p. Q (Suc n) q", "obtain q where 14: \"q \\<in> m (k + n) {p}\" \"\\<And> i. R i (k + Suc n) {q} \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<in> m (k + n) {p};\n         \\<And>i. R i (k + Suc n) {q} \\<noteq> {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 1[OF 14 13]"], ["proof (prove)\nusing this:\n  \\<exists>p\\<in>m (k + n) {p}. \\<forall>i. R i (k + Suc n) {p} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<in> m (k + n) {p};\n         \\<And>i. R i (k + Suc n) {q} \\<noteq> {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  q \\<in> m (k + n) {p}\n  R ?i (k + Suc n) {q} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>transition A (w !! (k + n)) p. Q (Suc n) q", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>transition A (w !! (k + n)) p. Q (Suc n) q", "unfolding Q_def prod.case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>transition A (w !! (k + n)) p.\n       (\\<forall>i. R i (k + Suc n) {q} \\<noteq> {}) \\<and>\n       q \\<in> P (k + Suc n)", "proof (intro bexI conjI allI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i. R i (k + Suc n) {?q} \\<noteq> {}\n 2. ?q \\<in> P (k + Suc n)\n 3. ?q \\<in> transition A (w !! (k + n)) p", "show \"\\<And> i. R i (k + Suc n) {q} \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. R i (k + Suc n) {q} \\<noteq> {}", "using 14(2)"], ["proof (prove)\nusing this:\n  R ?i (k + Suc n) {q} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>i. R i (k + Suc n) {q} \\<noteq> {}", "by this"], ["proof (state)\nthis:\n  R ?i (k + Suc n) {q} \\<noteq> {}\n\ngoal (2 subgoals):\n 1. q \\<in> P (k + Suc n)\n 2. q \\<in> transition A (w !! (k + n)) p", "show \"q \\<in> P (k + Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> P (k + Suc n)", "using 14(1) 11(1) 22"], ["proof (prove)\nusing this:\n  q \\<in> m (k + n) {p}\n  p \\<in> P (k + n)\n  P (k + ?n) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. q \\<in> P (k + Suc n)", "unfolding m_def"], ["proof (prove)\nusing this:\n  q \\<in> {p \\<in> \\<Union> (transition A (w !! (k + n)) ` {p}).\n           even (the (g (Suc (k + n)) p))}\n  p \\<in> P (k + n)\n  P (k + ?n) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. q \\<in> P (k + Suc n)", "by (auto simp add: st_succ_def)"], ["proof (state)\nthis:\n  q \\<in> P (k + Suc n)\n\ngoal (1 subgoal):\n 1. q \\<in> transition A (w !! (k + n)) p", "show \"q \\<in> transition A (w !! (k + n)) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> transition A (w !! (k + n)) p", "using 14(1)"], ["proof (prove)\nusing this:\n  q \\<in> m (k + n) {p}\n\ngoal (1 subgoal):\n 1. q \\<in> transition A (w !! (k + n)) p", "unfolding m_def"], ["proof (prove)\nusing this:\n  q \\<in> {p \\<in> \\<Union> (transition A (w !! (k + n)) ` {p}).\n           even (the (g (Suc (k + n)) p))}\n\ngoal (1 subgoal):\n 1. q \\<in> transition A (w !! (k + n)) p", "by simp"], ["proof (state)\nthis:\n  q \\<in> transition A (w !! (k + n)) p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>q\\<in>transition A (w !! (k + n)) p. Q (Suc n) q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q ?n ?p \\<Longrightarrow>\n  \\<exists>q\\<in>transition A (w !! (k + ?n)) ?p. Q (Suc ?n) q\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "obtain r where 23:\n            \"run A r p\" \"\\<And> i. Q i ((p ## trace r p) !! i)\" \"\\<And> i. fst (r !! i) = w !! (k + i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>run A r p; \\<And>i. Q i ((p ## trace r p) !! i);\n         \\<And>i. fst (r !! i) = w !! (k + i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (rule nba.invariant_run_index[of Q 0 p A \"\\<lambda> n p a. fst a = w !! (k + n)\"])"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<And>r.\n        \\<lbrakk>run A r p; \\<And>i. Q i ((p ## trace r p) !! i);\n         \\<And>i. fst (r !! i) = w !! (k + i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    Q 0 p\n 2. \\<And>n pa.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>run A r p; \\<And>i. Q i ((p ## trace r p) !! i);\n                    \\<And>i. fst (r !! i) = w !! (k + i)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Q n pa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            (fst a \\<in> alphabet A \\<and>\n                             snd a \\<in> transition A (fst a) pa) \\<and>\n                            Q (Suc n) (snd a) \\<and> fst a = w !! (k + n)\n 3. \\<And>r.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>run A r p; \\<And>i. Q i ((p ## trace r p) !! i);\n                    \\<And>i. fst (r !! i) = w !! (k + i)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        run A r p; \\<And>i. Q (0 + i) (target (stake i r) p);\n        \\<And>i. fst (r !! i) = w !! (k + (0 + i))\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"Q 0 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q 0 p", "unfolding Q_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>i. R i (k + 0) {p} \\<noteq> {}) \\<and> p \\<in> P (k + 0)", "using 3"], ["proof (prove)\nusing this:\n  p \\<in> P k\n  R ?i k {p} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<forall>i. R i (k + 0) {p} \\<noteq> {}) \\<and> p \\<in> P (k + 0)", "by auto"], ["proof (state)\nthis:\n  Q 0 p\n\ngoal (2 subgoals):\n 1. \\<And>n pa.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>run A r p; \\<And>i. Q i ((p ## trace r p) !! i);\n                    \\<And>i. fst (r !! i) = w !! (k + i)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Q n pa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            (fst a \\<in> alphabet A \\<and>\n                             snd a \\<in> transition A (fst a) pa) \\<and>\n                            Q (Suc n) (snd a) \\<and> fst a = w !! (k + n)\n 2. \\<And>r.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>run A r p; \\<And>i. Q i ((p ## trace r p) !! i);\n                    \\<And>i. fst (r !! i) = w !! (k + i)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        run A r p; \\<And>i. Q (0 + i) (target (stake i r) p);\n        \\<And>i. fst (r !! i) = w !! (k + (0 + i))\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"\\<exists> a. (fst a \\<in> alphabet A \\<and> snd a \\<in> transition A (fst a) p) \\<and>\n              Q (Suc n) (snd a) \\<and> fst a = w !! (k + n)\" if \"Q n p\" for n p"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a.\n       (fst a \\<in> alphabet A \\<and>\n        snd a \\<in> transition A (fst a) p) \\<and>\n       Q (Suc n) (snd a) \\<and> fst a = w !! (k + n)", "using snth_in assms(2) 5 that"], ["proof (prove)\nusing this:\n  ?s \\<in> streams ?X \\<Longrightarrow> ?s !! ?n \\<in> ?X\n  w \\<in> streams (alphabet A)\n  Q ?n ?p \\<Longrightarrow>\n  \\<exists>q\\<in>transition A (w !! (k + ?n)) ?p. Q (Suc ?n) q\n  Q n p\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       (fst a \\<in> alphabet A \\<and>\n        snd a \\<in> transition A (fst a) p) \\<and>\n       Q (Suc n) (snd a) \\<and> fst a = w !! (k + n)", "by fastforce"], ["proof (state)\nthis:\n  Q ?n ?p \\<Longrightarrow>\n  \\<exists>a.\n     (fst a \\<in> alphabet A \\<and>\n      snd a \\<in> transition A (fst a) ?p) \\<and>\n     Q (Suc ?n) (snd a) \\<and> fst a = w !! (k + ?n)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>run A r p; \\<And>i. Q i ((p ## trace r p) !! i);\n                    \\<And>i. fst (r !! i) = w !! (k + i)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        run A r p; \\<And>i. Q (0 + i) (target (stake i r) p);\n        \\<And>i. fst (r !! i) = w !! (k + (0 + i))\\<rbrakk>\n       \\<Longrightarrow> thesis", "qed auto"], ["proof (state)\nthis:\n  run A r p\n  Q ?i ((p ## trace r p) !! ?i)\n  fst (r !! ?i) = w !! (k + ?i)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have 20: \"smap fst r = sdrop k w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smap fst r = sdrop k w", "using 23(3)"], ["proof (prove)\nusing this:\n  fst (r !! ?i) = w !! (k + ?i)\n\ngoal (1 subgoal):\n 1. smap fst r = sdrop k w", "by (intro eqI_snth) (simp add: case_prod_beta)"], ["proof (state)\nthis:\n  smap fst r = sdrop k w\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have 21: \"(p ## smap snd r) !! i \\<in> P (k + i)\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p ## smap snd r) !! i \\<in> P (k + i)", "using 23(2)"], ["proof (prove)\nusing this:\n  Q ?i ((p ## trace r p) !! ?i)\n\ngoal (1 subgoal):\n 1. (p ## smap snd r) !! i \\<in> P (k + i)", "unfolding Q_def"], ["proof (prove)\nusing this:\n  (\\<forall>i. R i (k + ?i) {(p ## trace r p) !! ?i} \\<noteq> {}) \\<and>\n  (p ## trace r p) !! ?i \\<in> P (k + ?i)\n\ngoal (1 subgoal):\n 1. (p ## smap snd r) !! i \\<in> P (k + i)", "unfolding nba.trace_alt_def"], ["proof (prove)\nusing this:\n  (\\<forall>i. R i (k + ?i) {(p ## smap snd r) !! ?i} \\<noteq> {}) \\<and>\n  (p ## smap snd r) !! ?i \\<in> P (k + ?i)\n\ngoal (1 subgoal):\n 1. (p ## smap snd r) !! i \\<in> P (k + i)", "by simp"], ["proof (state)\nthis:\n  (p ## smap snd r) !! ?i \\<in> P (k + ?i)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "obtain r where 23: \"run A (sdrop k w ||| stl r) (shd r)\" \"\\<And> i. r !! i \\<in> P (k + i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>run A (sdrop k w ||| stl r) (shd r);\n         \\<And>i. r !! i \\<in> P (k + i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 20 21 23(1)"], ["proof (prove)\nusing this:\n  smap fst r = sdrop k w\n  (p ## smap snd r) !! ?i \\<in> P (k + ?i)\n  run A r p\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>run A (sdrop k w ||| stl r) (shd r);\n         \\<And>i. r !! i \\<in> P (k + i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis stream.sel(1) stream.sel(2) szip_smap)"], ["proof (state)\nthis:\n  run A (sdrop k w ||| stl r) (shd r)\n  r !! ?i \\<in> P (k + ?i)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "let ?v = \"(k, shd r)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "let ?r = \"fromN (Suc k) ||| stl r\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have \"shd r = r !! 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. shd r = r !! 0", "by simp"], ["proof (state)\nthis:\n  shd r = r !! 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  shd r = r !! 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have \"\\<dots> \\<in> P k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r !! 0 \\<in> P k", "using 23(2)[of 0]"], ["proof (prove)\nusing this:\n  r !! 0 \\<in> P (k + 0)\n\ngoal (1 subgoal):\n 1. r !! 0 \\<in> P k", "by simp"], ["proof (state)\nthis:\n  r !! 0 \\<in> P k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  r !! 0 \\<in> P k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have \"\\<dots> \\<subseteq> reach A w k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P k \\<subseteq> reach A w k", "using P_reach"], ["proof (prove)\nusing this:\n  P ?n \\<subseteq> reach A w ?n\n\ngoal (1 subgoal):\n 1. P k \\<subseteq> reach A w k", "by this"], ["proof (state)\nthis:\n  P k \\<subseteq> reach A w k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  shd r \\<in> reach A w k", "have 24: \"?v \\<in> gunodes A w\""], ["proof (prove)\nusing this:\n  shd r \\<in> reach A w k\n\ngoal (1 subgoal):\n 1. (k, shd r) \\<in> gunodes A w", "using reach_gunodes"], ["proof (prove)\nusing this:\n  shd r \\<in> reach A w k\n  {?i} \\<times> reach ?A ?w ?i \\<subseteq> gunodes ?A ?w\n\ngoal (1 subgoal):\n 1. (k, shd r) \\<in> gunodes A w", "by blast"], ["proof (state)\nthis:\n  (k, shd r) \\<in> gunodes A w\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have 25: \"gurun A w ?r ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gurun A w (fromN (Suc k) ||| stl r) (k, shd r)", "using run_grun 23(1)"], ["proof (prove)\nusing this:\n  run ?A (sdrop ?k ?w ||| ?r) ?p \\<Longrightarrow>\n  gurun ?A ?w (fromN (Suc ?k) ||| ?r) (?k, ?p)\n  run A (sdrop k w ||| stl r) (shd r)\n\ngoal (1 subgoal):\n 1. gurun A w (fromN (Suc k) ||| stl r) (k, shd r)", "by this"], ["proof (state)\nthis:\n  gurun A w (fromN (Suc k) ||| stl r) (k, shd r)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "obtain l where 26: \"Ball (sset (smap f' (gtrace (sdrop l ?r) (gtarget (stake l ?r) ?v)))) odd\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<forall>a\\<in>sset\n                        (smap f'\n                          (gtrace (sdrop l (fromN (Suc k) ||| stl r))\n                            (gtarget (stake l (fromN (Suc k) ||| stl r))\n                              (k, shd r)))).\n           odd a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using ranking_stuck_odd 0 24 25"], ["proof (prove)\nusing this:\n  \\<lbrakk>ranking ?A ?w ?f; ?v \\<in> gunodes ?A ?w; gurun ?A ?w ?r ?v;\n   \\<And>n.\n      \\<forall>a\\<in>sset\n                      (smap ?f\n                        (gtrace (sdrop n ?r) (gtarget (stake n ?r) ?v))).\n         odd a \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  ranking A w f'\n  (k, shd r) \\<in> gunodes A w\n  gurun A w (fromN (Suc k) ||| stl r) (k, shd r)\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<forall>a\\<in>sset\n                        (smap f'\n                          (gtrace (sdrop l (fromN (Suc k) ||| stl r))\n                            (gtarget (stake l (fromN (Suc k) ||| stl r))\n                              (k, shd r)))).\n           odd a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by this"], ["proof (state)\nthis:\n  \\<forall>a\\<in>sset\n                  (smap f'\n                    (gtrace (sdrop l (fromN (Suc k) ||| stl r))\n                      (gtarget (stake l (fromN (Suc k) ||| stl r))\n                        (k, shd r)))).\n     odd a\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have 27: \"f' (Suc (k + l), r !! Suc l) =\n            shd (smap f' (gtrace (sdrop l ?r) (gtarget (stake l ?r) ?v)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f' (Suc (k + l), r !! Suc l) =\n    shd (smap f'\n          (gtrace (sdrop l (fromN (Suc k) ||| stl r))\n            (gtarget (stake l (fromN (Suc k) ||| stl r)) (k, shd r))))", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  f' (Suc (k + l), r !! Suc l) =\n  shd (smap f'\n        (gtrace (sdrop l (fromN (Suc k) ||| stl r))\n          (gtarget (stake l (fromN (Suc k) ||| stl r)) (k, shd r))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  f' (Suc (k + l), r !! Suc l) =\n  shd (smap f'\n        (gtrace (sdrop l (fromN (Suc k) ||| stl r))\n          (gtarget (stake l (fromN (Suc k) ||| stl r)) (k, shd r))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have \"\\<dots> \\<in> sset (smap f' (gtrace (sdrop l ?r) (gtarget (stake l ?r) ?v)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. shd (smap f'\n          (gtrace (sdrop l (fromN (Suc k) ||| stl r))\n            (gtarget (stake l (fromN (Suc k) ||| stl r)) (k, shd r))))\n    \\<in> sset\n           (smap f'\n             (gtrace (sdrop l (fromN (Suc k) ||| stl r))\n               (gtarget (stake l (fromN (Suc k) ||| stl r)) (k, shd r))))", "using shd_sset"], ["proof (prove)\nusing this:\n  shd ?a \\<in> sset ?a\n\ngoal (1 subgoal):\n 1. shd (smap f'\n          (gtrace (sdrop l (fromN (Suc k) ||| stl r))\n            (gtarget (stake l (fromN (Suc k) ||| stl r)) (k, shd r))))\n    \\<in> sset\n           (smap f'\n             (gtrace (sdrop l (fromN (Suc k) ||| stl r))\n               (gtarget (stake l (fromN (Suc k) ||| stl r)) (k, shd r))))", "by this"], ["proof (state)\nthis:\n  shd (smap f'\n        (gtrace (sdrop l (fromN (Suc k) ||| stl r))\n          (gtarget (stake l (fromN (Suc k) ||| stl r)) (k, shd r))))\n  \\<in> sset\n         (smap f'\n           (gtrace (sdrop l (fromN (Suc k) ||| stl r))\n             (gtarget (stake l (fromN (Suc k) ||| stl r)) (k, shd r))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  f' (Suc (k + l), r !! Suc l)\n  \\<in> sset\n         (smap f'\n           (gtrace (sdrop l (fromN (Suc k) ||| stl r))\n             (gtarget (stake l (fromN (Suc k) ||| stl r)) (k, shd r))))", "have 28: \"odd (f' (Suc (k + l), r !! Suc l))\""], ["proof (prove)\nusing this:\n  f' (Suc (k + l), r !! Suc l)\n  \\<in> sset\n         (smap f'\n           (gtrace (sdrop l (fromN (Suc k) ||| stl r))\n             (gtarget (stake l (fromN (Suc k) ||| stl r)) (k, shd r))))\n\ngoal (1 subgoal):\n 1. odd (f' (Suc (k + l), r !! Suc l))", "using 26"], ["proof (prove)\nusing this:\n  f' (Suc (k + l), r !! Suc l)\n  \\<in> sset\n         (smap f'\n           (gtrace (sdrop l (fromN (Suc k) ||| stl r))\n             (gtarget (stake l (fromN (Suc k) ||| stl r)) (k, shd r))))\n  \\<forall>a\\<in>sset\n                  (smap f'\n                    (gtrace (sdrop l (fromN (Suc k) ||| stl r))\n                      (gtarget (stake l (fromN (Suc k) ||| stl r))\n                        (k, shd r)))).\n     odd a\n\ngoal (1 subgoal):\n 1. odd (f' (Suc (k + l), r !! Suc l))", "by auto"], ["proof (state)\nthis:\n  odd (f' (Suc (k + l), r !! Suc l))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have \"r !! Suc l \\<in> P (Suc (k + l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r !! Suc l \\<in> P (Suc (k + l))", "using 23(2)"], ["proof (prove)\nusing this:\n  r !! ?i \\<in> P (k + ?i)\n\ngoal (1 subgoal):\n 1. r !! Suc l \\<in> P (Suc (k + l))", "by (metis add_Suc_right)"], ["proof (state)\nthis:\n  r !! Suc l \\<in> P (Suc (k + l))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  r !! Suc l \\<in> P (Suc (k + l))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have \"\\<dots> = {p \\<in> \\<Union> (transition A (w !! (k + l)) ` P (k + l)).\n            even (the (g (Suc (k + l)) p))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (Suc (k + l)) =\n    {p \\<in> \\<Union> (transition A (w !! (k + l)) ` P (k + l)).\n     even (the (g (Suc (k + l)) p))}", "using 23(2)"], ["proof (prove)\nusing this:\n  r !! ?i \\<in> P (k + ?i)\n\ngoal (1 subgoal):\n 1. P (Suc (k + l)) =\n    {p \\<in> \\<Union> (transition A (w !! (k + l)) ` P (k + l)).\n     even (the (g (Suc (k + l)) p))}", "by (auto simp: st_succ_def)"], ["proof (state)\nthis:\n  P (Suc (k + l)) =\n  {p \\<in> \\<Union> (transition A (w !! (k + l)) ` P (k + l)).\n   even (the (g (Suc (k + l)) p))}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  P (Suc (k + l)) =\n  {p \\<in> \\<Union> (transition A (w !! (k + l)) ` P (k + l)).\n   even (the (g (Suc (k + l)) p))}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have \"\\<dots> \\<subseteq> {p. even (the (g (Suc (k + l)) p))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p \\<in> \\<Union> (transition A (w !! (k + l)) ` P (k + l)).\n     even (the (g (Suc (k + l)) p))}\n    \\<subseteq> {p. even (the (g (Suc (k + l)) p))}", "by auto"], ["proof (state)\nthis:\n  {p \\<in> \\<Union> (transition A (w !! (k + l)) ` P (k + l)).\n   even (the (g (Suc (k + l)) p))}\n  \\<subseteq> {p. even (the (g (Suc (k + l)) p))}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  r !! Suc l \\<in> {p. even (the (g (Suc (k + l)) p))}", "have 29: \"even (the (g (Suc (k + l)) (r !! Suc l)))\""], ["proof (prove)\nusing this:\n  r !! Suc l \\<in> {p. even (the (g (Suc (k + l)) p))}\n\ngoal (1 subgoal):\n 1. even (the (g (Suc (k + l)) (r !! Suc l)))", "by auto"], ["proof (state)\nthis:\n  even (the (g (Suc (k + l)) (r !! Suc l)))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have 30: \"r !! Suc l \\<in> reach A w (Suc (k + l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r !! Suc l \\<in> reach A w (Suc (k + l))", "using 23(2) P_reach"], ["proof (prove)\nusing this:\n  r !! ?i \\<in> P (k + ?i)\n  P ?n \\<subseteq> reach A w ?n\n\ngoal (1 subgoal):\n 1. r !! Suc l \\<in> reach A w (Suc (k + l))", "by (metis add_Suc_right subsetCE)"], ["proof (state)\nthis:\n  r !! Suc l \\<in> reach A w (Suc (k + l))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "have 31: \"even (f' (Suc (k + l), r !! Suc l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. even (f' (Suc (k + l), r !! Suc l))", "using 29 30"], ["proof (prove)\nusing this:\n  even (the (g (Suc (k + l)) (r !! Suc l)))\n  r !! Suc l \\<in> reach A w (Suc (k + l))\n\ngoal (1 subgoal):\n 1. even (f' (Suc (k + l), r !! Suc l))", "unfolding g_def"], ["proof (prove)\nusing this:\n  even\n   (the (if r !! Suc l \\<in> reach A w (Suc (k + l))\n         then Some (f' (Suc (k + l), r !! Suc l)) else None))\n  r !! Suc l \\<in> reach A w (Suc (k + l))\n\ngoal (1 subgoal):\n 1. even (f' (Suc (k + l), r !! Suc l))", "by simp"], ["proof (state)\nthis:\n  even (f' (Suc (k + l), r !! Suc l))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n. \\<exists>k\\<ge>n. P k = {}) \\<Longrightarrow> False", "show \"False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using 28 31"], ["proof (prove)\nusing this:\n  odd (f' (Suc (k + l), r !! Suc l))\n  even (f' (Suc (k + l), r !! Suc l))\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n. \\<exists>k\\<ge>n. P k = {}\n\ngoal (1 subgoal):\n 1. infs (accepting (complement A)) (shd s ## stl s)", "have 11: \"infs (\\<lambda> k. P k = {}) nats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infs (\\<lambda>k. P k = {}) nats", "using 10"], ["proof (prove)\nusing this:\n  \\<forall>n. \\<exists>k\\<ge>n. P k = {}\n\ngoal (1 subgoal):\n 1. infs (\\<lambda>k. P k = {}) nats", "unfolding infs_snth"], ["proof (prove)\nusing this:\n  \\<forall>n. \\<exists>k\\<ge>n. P k = {}\n\ngoal (1 subgoal):\n 1. \\<forall>n. \\<exists>k\\<ge>n. P (nats !! k) = {}", "by simp"], ["proof (state)\nthis:\n  infs (\\<lambda>k. P k = {}) nats\n\ngoal (1 subgoal):\n 1. infs (accepting (complement A)) (shd s ## stl s)", "have \"infs (\\<lambda> S. S = {}) (smap snd (smap g nats ||| smap P nats))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infs (\\<lambda>S. S = {}) (smap snd (smap g nats ||| smap P nats))", "using 11"], ["proof (prove)\nusing this:\n  infs (\\<lambda>k. P k = {}) nats\n\ngoal (1 subgoal):\n 1. infs (\\<lambda>S. S = {}) (smap snd (smap g nats ||| smap P nats))", "by (simp add: comp_def)"], ["proof (state)\nthis:\n  infs (\\<lambda>S. S = {}) (smap snd (smap g nats ||| smap P nats))\n\ngoal (1 subgoal):\n 1. infs (accepting (complement A)) (shd s ## stl s)", "then"], ["proof (chain)\npicking this:\n  infs (\\<lambda>S. S = {}) (smap snd (smap g nats ||| smap P nats))", "have \"infs (\\<lambda> x. snd x = {}) (smap g nats ||| smap P nats)\""], ["proof (prove)\nusing this:\n  infs (\\<lambda>S. S = {}) (smap snd (smap g nats ||| smap P nats))\n\ngoal (1 subgoal):\n 1. infs (\\<lambda>x. snd x = {}) (smap g nats ||| smap P nats)", "by (simp add: comp_def del: szip_smap_snd)"], ["proof (state)\nthis:\n  infs (\\<lambda>x. snd x = {}) (smap g nats ||| smap P nats)\n\ngoal (1 subgoal):\n 1. infs (accepting (complement A)) (shd s ## stl s)", "then"], ["proof (chain)\npicking this:\n  infs (\\<lambda>x. snd x = {}) (smap g nats ||| smap P nats)", "have \"infs (\\<lambda> (f, P). P = {}) (smap g nats ||| smap P nats)\""], ["proof (prove)\nusing this:\n  infs (\\<lambda>x. snd x = {}) (smap g nats ||| smap P nats)\n\ngoal (1 subgoal):\n 1. infs (\\<lambda>(f, P). P = {}) (smap g nats ||| smap P nats)", "by (simp add: case_prod_beta')"], ["proof (state)\nthis:\n  infs (\\<lambda>(f, P). P = {}) (smap g nats ||| smap P nats)\n\ngoal (1 subgoal):\n 1. infs (accepting (complement A)) (shd s ## stl s)", "then"], ["proof (chain)\npicking this:\n  infs (\\<lambda>(f, P). P = {}) (smap g nats ||| smap P nats)", "have \"infs (\\<lambda> (f, P). P = {}) (stl (smap g nats ||| smap P nats))\""], ["proof (prove)\nusing this:\n  infs (\\<lambda>(f, P). P = {}) (smap g nats ||| smap P nats)\n\ngoal (1 subgoal):\n 1. infs (\\<lambda>(f, P). P = {}) (stl (smap g nats ||| smap P nats))", "by blast"], ["proof (state)\nthis:\n  infs (\\<lambda>(f, P). P = {}) (stl (smap g nats ||| smap P nats))\n\ngoal (1 subgoal):\n 1. infs (accepting (complement A)) (shd s ## stl s)", "then"], ["proof (chain)\npicking this:\n  infs (\\<lambda>(f, P). P = {}) (stl (smap g nats ||| smap P nats))", "have \"infs (\\<lambda> (f, P). P = {}) (smap snd (w ||| stl (smap g nats ||| smap P nats)))\""], ["proof (prove)\nusing this:\n  infs (\\<lambda>(f, P). P = {}) (stl (smap g nats ||| smap P nats))\n\ngoal (1 subgoal):\n 1. infs (\\<lambda>(f, P). P = {})\n     (smap snd (w ||| stl (smap g nats ||| smap P nats)))", "by simp"], ["proof (state)\nthis:\n  infs (\\<lambda>(f, P). P = {})\n   (smap snd (w ||| stl (smap g nats ||| smap P nats)))\n\ngoal (1 subgoal):\n 1. infs (accepting (complement A)) (shd s ## stl s)", "then"], ["proof (chain)\npicking this:\n  infs (\\<lambda>(f, P). P = {})\n   (smap snd (w ||| stl (smap g nats ||| smap P nats)))", "have \"infs (\\<lambda> (f, P). P = {}) (stl s)\""], ["proof (prove)\nusing this:\n  infs (\\<lambda>(f, P). P = {})\n   (smap snd (w ||| stl (smap g nats ||| smap P nats)))\n\ngoal (1 subgoal):\n 1. infs (\\<lambda>(f, P). P = {}) (stl s)", "unfolding s_def"], ["proof (prove)\nusing this:\n  infs (\\<lambda>(f, P). P = {})\n   (smap snd (w ||| stl (smap g nats ||| smap P nats)))\n\ngoal (1 subgoal):\n 1. infs (\\<lambda>(f, P). P = {}) (stl (smap g nats ||| smap P nats))", "by simp"], ["proof (state)\nthis:\n  infs (\\<lambda>(f, P). P = {}) (stl s)\n\ngoal (1 subgoal):\n 1. infs (accepting (complement A)) (shd s ## stl s)", "then"], ["proof (chain)\npicking this:\n  infs (\\<lambda>(f, P). P = {}) (stl s)", "show ?thesis"], ["proof (prove)\nusing this:\n  infs (\\<lambda>(f, P). P = {}) (stl s)\n\ngoal (1 subgoal):\n 1. infs (accepting (complement A)) (shd s ## stl s)", "unfolding complement_def"], ["proof (prove)\nusing this:\n  infs (\\<lambda>(f, P). P = {}) (stl s)\n\ngoal (1 subgoal):\n 1. infs\n     (accepting\n       (nba (alphabet A)\n         ({(\\<lambda>_. Some (2 * card (nodes A))) |` initial A} \\<times>\n          {{}})\n         (complement_succ A) (\\<lambda>(f, P). P = {})))\n     (shd s ## stl s)", "by auto"], ["proof (state)\nthis:\n  infs (accepting (complement A)) (shd s ## stl s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  infs (accepting (complement A)) (shd s ## stl s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  w \\<in> language (complement A)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Correctness Theorem\\<close>"], ["", "theorem complement_language:\n    assumes \"finite (nodes A)\"\n    shows \"language (complement A) = streams (alphabet A) - language A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. language (complement A) = streams (alphabet A) - language A", "proof (safe del: notI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> language (complement A) \\<Longrightarrow>\n       x \\<in> streams (alphabet A)\n 2. \\<And>x.\n       x \\<in> language (complement A) \\<Longrightarrow>\n       x \\<notin> language A\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> streams (alphabet A); x \\<notin> language A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> language (complement A)", "have 1: \"alphabet (complement A) = alphabet A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alphabet (complement A) = alphabet A", "unfolding complement_def nba.sel"], ["proof (prove)\ngoal (1 subgoal):\n 1. alphabet A = alphabet A", "by rule"], ["proof (state)\nthis:\n  alphabet (complement A) = alphabet A\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> language (complement A) \\<Longrightarrow>\n       x \\<in> streams (alphabet A)\n 2. \\<And>x.\n       x \\<in> language (complement A) \\<Longrightarrow>\n       x \\<notin> language A\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> streams (alphabet A); x \\<notin> language A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> language (complement A)", "show \"w \\<in> streams (alphabet A)\" if \"w \\<in> language (complement A)\" for w"], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> streams (alphabet A)", "using nba.language_alphabet that 1"], ["proof (prove)\nusing this:\n  language ?A \\<subseteq> streams (alphabet ?A)\n  w \\<in> language (complement A)\n  alphabet (complement A) = alphabet A\n\ngoal (1 subgoal):\n 1. w \\<in> streams (alphabet A)", "by force"], ["proof (state)\nthis:\n  ?w \\<in> language (complement A) \\<Longrightarrow>\n  ?w \\<in> streams (alphabet A)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> language (complement A) \\<Longrightarrow>\n       x \\<notin> language A\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> streams (alphabet A); x \\<notin> language A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> language (complement A)", "show \"w \\<notin> language A\" if \"w \\<in> language (complement A)\" for w"], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<notin> language A", "using complement_ranking ranking_language that"], ["proof (prove)\nusing this:\n  \\<lbrakk>?w \\<in> language (complement ?A);\n   \\<And>f. ranking ?A ?w f \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  ranking ?A ?w ?f \\<Longrightarrow> ?w \\<notin> language ?A\n  w \\<in> language (complement A)\n\ngoal (1 subgoal):\n 1. w \\<notin> language A", "by metis"], ["proof (state)\nthis:\n  ?w \\<in> language (complement A) \\<Longrightarrow> ?w \\<notin> language A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> streams (alphabet A); x \\<notin> language A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> language (complement A)", "show \"w \\<in> language (complement A)\" if \"w \\<in> streams (alphabet A)\" \"w \\<notin> language A\" for w"], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "using language_ranking ranking_complement assms that"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite (nodes ?A); ?w \\<notin> language ?A\\<rbrakk>\n  \\<Longrightarrow> ranking ?A ?w (rank ?A ?w)\n  \\<lbrakk>finite (nodes ?A); ?w \\<in> streams (alphabet ?A);\n   ranking ?A ?w ?f\\<rbrakk>\n  \\<Longrightarrow> ?w \\<in> language (complement ?A)\n  finite (nodes A)\n  w \\<in> streams (alphabet A)\n  w \\<notin> language A\n\ngoal (1 subgoal):\n 1. w \\<in> language (complement A)", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>?w \\<in> streams (alphabet A); ?w \\<notin> language A\\<rbrakk>\n  \\<Longrightarrow> ?w \\<in> language (complement A)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}