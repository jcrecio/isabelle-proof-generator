{"file_name": "/home/qj213/afp-2021-10-22/thys/LambdaMu/Types.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LambdaMu", "problem_names": ["lemma shift_eq [simp]: \"i = j \\<Longrightarrow> (e\\<langle>i:T\\<rangle>) j = T\"", "lemma shift_gt [simp]: \"j < i \\<Longrightarrow> (e\\<langle>i:T\\<rangle>) j = e j\"", "lemma shift_lt [simp]: \"i < j \\<Longrightarrow> (e\\<langle>i:T\\<rangle>) j = e (j - 1)\"", "lemma shift_commute [simp]: \"e\\<langle>i:U\\<rangle>\\<langle>0:T\\<rangle> = e\\<langle>0:T\\<rangle>\\<langle>Suc i:U\\<rangle>\"", "lemma uniqueness:\n  \"\\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>T t : T1 \\<Longrightarrow> \\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>T t : T2 \\<Longrightarrow> T1 = T2\"\n  \"\\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>C c \\<Longrightarrow> \\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>C c\""], "translations": [["", "lemma shift_eq [simp]: \"i = j \\<Longrightarrow> (e\\<langle>i:T\\<rangle>) j = T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i = j \\<Longrightarrow> (e\\<langle>i:T\\<rangle>) j = T", "by (simp add: shift_def)"], ["", "lemma shift_gt [simp]: \"j < i \\<Longrightarrow> (e\\<langle>i:T\\<rangle>) j = e j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < i \\<Longrightarrow> (e\\<langle>i:T\\<rangle>) j = e j", "by (simp add: shift_def)"], ["", "lemma shift_lt [simp]: \"i < j \\<Longrightarrow> (e\\<langle>i:T\\<rangle>) j = e (j - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < j \\<Longrightarrow> (e\\<langle>i:T\\<rangle>) j = e (j - 1)", "by (simp add: shift_def)"], ["", "lemma shift_commute [simp]: \"e\\<langle>i:U\\<rangle>\\<langle>0:T\\<rangle> = e\\<langle>0:T\\<rangle>\\<langle>Suc i:U\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e\\<langle>i:U\\<rangle>\\<langle>0:T\\<rangle> =\n    e\\<langle>0:T\\<rangle>\\<langle>Suc i:U\\<rangle>", "by (rule ext) (simp_all add: shift_def split: nat.split, force)"], ["", "inductive typing_trm :: \"(nat \\<Rightarrow> type) \\<Rightarrow> (nat \\<Rightarrow> type) \\<Rightarrow> trm \\<Rightarrow> type \\<Rightarrow> bool\"  \n     (\"_ , _ \\<turnstile>\\<^sub>T _ : _\" [50, 50, 50, 50] 50)\nand typing_cmd :: \"(nat \\<Rightarrow> type) \\<Rightarrow> (nat \\<Rightarrow> type) \\<Rightarrow> cmd \\<Rightarrow> bool\"\n     (\"_ , _ \\<turnstile>\\<^sub>C _\" [50, 50, 50] 50)\nwhere \n  var [intro!]: \"\\<lbrakk> \\<Gamma> x = T \\<rbrakk> \\<Longrightarrow> \\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>T `x : T\" |\n  app [intro!]: \"\\<lbrakk> \\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>T t : (T1\\<rightarrow>T2); \\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>T s : T1 \\<rbrakk>\n                    \\<Longrightarrow> \\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>T (t\\<degree>s) : T2\" |\n  lambda [intro!]: \"\\<lbrakk> \\<Gamma>\\<langle>0:T1\\<rangle>, \\<Delta> \\<turnstile>\\<^sub>T t : T2 \\<rbrakk>\n                    \\<Longrightarrow> \\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>T (\\<lambda> T1 : t) : (T1\\<rightarrow>T2)\" |\n  activate [intro!]: \"\\<lbrakk> \\<Gamma>, \\<Delta>\\<langle>0:T\\<rangle> \\<turnstile>\\<^sub>C c \\<rbrakk> \\<Longrightarrow> \\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>T (\\<mu> T : c) : T\" |\n  passivate [intro!]: \"\\<lbrakk> \\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>T t : T; \\<Delta> x = T\\<rbrakk> \\<Longrightarrow> \\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>C (<x> t)\""], ["", "inductive_cases typing_elims [elim!]:\n  \"\\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>T `x : T\"\n  \"\\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>T t\\<degree>s : T\"\n  \"\\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>T \\<lambda> T1 : t : T\"\n  \"\\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>T \\<mu> T1 : t : T\"\n  \"\\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>C <x> t\""], ["", "inductive_cases type_arrow_elim:\n  \"\\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T t : T1 \\<rightarrow> T2\""], ["", "lemma uniqueness:\n  \"\\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>T t : T1 \\<Longrightarrow> \\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>T t : T2 \\<Longrightarrow> T1 = T2\"\n  \"\\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>C c \\<Longrightarrow> \\<Gamma>, \\<Delta> \\<turnstile>\\<^sub>C c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T t : T1;\n      \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T t : T2\\<rbrakk>\n     \\<Longrightarrow> T1 = T2) &&&\n    (\\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>C c \\<Longrightarrow>\n     \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>C c)", "apply(induct arbitrary: T2 rule: typing_trm_typing_cmd.inducts)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> x T \\<Delta> T2.\n       \\<lbrakk>\\<Gamma> x = T;\n        \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T `x : T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 2. \\<And>\\<Gamma> \\<Delta> t T1 T2 s T2a.\n       \\<lbrakk>\\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T t : T1 \\<rightarrow>\n                       T2;\n        \\<And>T2a.\n           \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T t : T2a \\<Longrightarrow>\n           T1 \\<rightarrow> T2 = T2a;\n        \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T s : T1;\n        \\<And>T2.\n           \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T s : T2 \\<Longrightarrow>\n           T1 = T2;\n        \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T t \\<degree>\n           s : T2a\\<rbrakk>\n       \\<Longrightarrow> T2 = T2a\n 3. \\<And>\\<Gamma> T1 \\<Delta> t T2 T2a.\n       \\<lbrakk>\\<Gamma>\\<langle>0:T1\\<rangle> , \\<Delta> \\<turnstile>\\<^sub>T t : T2;\n        \\<And>T2a.\n           \\<Gamma>\\<langle>0:T1\\<rangle> , \\<Delta> \\<turnstile>\\<^sub>T t : T2a \\<Longrightarrow>\n           T2 = T2a;\n        \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T \\<lambda>T1:t : T2a\\<rbrakk>\n       \\<Longrightarrow> T1 \\<rightarrow> T2 = T2a\n 4. \\<And>\\<Gamma> \\<Delta> T c T2.\n       \\<lbrakk>\\<Gamma> , \\<Delta>\\<langle>0:T\\<rangle> \\<turnstile>\\<^sub>C c;\n        \\<Gamma> , \\<Delta>\\<langle>0:T\\<rangle> \\<turnstile>\\<^sub>C c;\n        \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T \\<mu>T:c : T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 5. \\<And>\\<Gamma> \\<Delta> t T x.\n       \\<lbrakk>\\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T t : T;\n        \\<And>T2.\n           \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T t : T2 \\<Longrightarrow>\n           T = T2;\n        \\<Delta> x = T\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>C <x>t", "using typing_cmd.cases"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a1.0 , ?a2.0 \\<turnstile>\\<^sub>C ?a3.0;\n   \\<And>\\<Gamma> \\<Delta> t T x.\n      \\<lbrakk>?a1.0 = \\<Gamma>; ?a2.0 = \\<Delta>; ?a3.0 = <x>t;\n       \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T t : T;\n       \\<Delta> x = T\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> x T \\<Delta> T2.\n       \\<lbrakk>\\<Gamma> x = T;\n        \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T `x : T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 2. \\<And>\\<Gamma> \\<Delta> t T1 T2 s T2a.\n       \\<lbrakk>\\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T t : T1 \\<rightarrow>\n                       T2;\n        \\<And>T2a.\n           \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T t : T2a \\<Longrightarrow>\n           T1 \\<rightarrow> T2 = T2a;\n        \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T s : T1;\n        \\<And>T2.\n           \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T s : T2 \\<Longrightarrow>\n           T1 = T2;\n        \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T t \\<degree>\n           s : T2a\\<rbrakk>\n       \\<Longrightarrow> T2 = T2a\n 3. \\<And>\\<Gamma> T1 \\<Delta> t T2 T2a.\n       \\<lbrakk>\\<Gamma>\\<langle>0:T1\\<rangle> , \\<Delta> \\<turnstile>\\<^sub>T t : T2;\n        \\<And>T2a.\n           \\<Gamma>\\<langle>0:T1\\<rangle> , \\<Delta> \\<turnstile>\\<^sub>T t : T2a \\<Longrightarrow>\n           T2 = T2a;\n        \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T \\<lambda>T1:t : T2a\\<rbrakk>\n       \\<Longrightarrow> T1 \\<rightarrow> T2 = T2a\n 4. \\<And>\\<Gamma> \\<Delta> T c T2.\n       \\<lbrakk>\\<Gamma> , \\<Delta>\\<langle>0:T\\<rangle> \\<turnstile>\\<^sub>C c;\n        \\<Gamma> , \\<Delta>\\<langle>0:T\\<rangle> \\<turnstile>\\<^sub>C c;\n        \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T \\<mu>T:c : T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 5. \\<And>\\<Gamma> \\<Delta> t T x.\n       \\<lbrakk>\\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T t : T;\n        \\<And>T2.\n           \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>T t : T2 \\<Longrightarrow>\n           T = T2;\n        \\<Delta> x = T\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> , \\<Delta> \\<turnstile>\\<^sub>C <x>t", "apply blast+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}