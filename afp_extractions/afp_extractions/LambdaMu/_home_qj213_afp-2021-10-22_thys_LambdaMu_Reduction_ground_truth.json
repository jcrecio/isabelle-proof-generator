{"file_name": "/home/qj213/afp-2021-10-22/thys/LambdaMu/Reduction.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LambdaMu", "problem_names": ["lemma step_term2: \"\\<lbrakk>s \\<longlonglongrightarrow>\\<^sup>* t; t \\<longlonglongrightarrow> u\\<rbrakk> \\<Longrightarrow> s \\<longlonglongrightarrow>\\<^sup>* u\"", "lemma rtc_term_incl [intro]: \"s \\<longlonglongrightarrow> t \\<Longrightarrow> s \\<longlonglongrightarrow>\\<^sup>* t\"", "lemma [intro]: \"c \\<^sub>C\\<longlonglongrightarrow> d \\<Longrightarrow> c \\<^sub>C\\<longlonglongrightarrow>\\<^sup>* d\"", "lemma rtc_term_trans [intro]: \"s \\<longlonglongrightarrow>\\<^sup>* t \\<Longrightarrow> t \\<longlonglongrightarrow>\\<^sup>* u \\<Longrightarrow> s \\<longlonglongrightarrow>\\<^sup>* u\"", "lemma rtc_command_trans[intro]: \"c \\<^sub>C\\<longlonglongrightarrow>\\<^sup>* d \\<Longrightarrow> d \\<^sub>C\\<longlonglongrightarrow>\\<^sup>* e \\<Longrightarrow> c \\<^sub>C\\<longlonglongrightarrow>\\<^sup>* e\"", "lemma rtc_lambda: \"s \\<longlonglongrightarrow>\\<^sup>* t \\<Longrightarrow> (\\<lambda> T : s) \\<longlonglongrightarrow>\\<^sup>* (\\<lambda> T : t)\"", "lemma rtc_appL: \"s \\<longlonglongrightarrow>\\<^sup>* u \\<Longrightarrow> (s\\<degree>t) \\<longlonglongrightarrow>\\<^sup>* (u\\<degree>t)\""], "translations": [["", "lemma step_term2: \"\\<lbrakk>s \\<longlonglongrightarrow>\\<^sup>* t; t \\<longlonglongrightarrow> u\\<rbrakk> \\<Longrightarrow> s \\<longlonglongrightarrow>\\<^sup>* u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<longlonglongrightarrow>\\<^sup>* t;\n     t \\<longlonglongrightarrow> u\\<rbrakk>\n    \\<Longrightarrow> s \\<longlonglongrightarrow>\\<^sup>* u", "by (induct rule: beta_rtc_term.induct) (auto intro: step_term)"], ["", "inductive beta_rtc_command :: \"[cmd, cmd] \\<Rightarrow> bool\"  (infixl \"\\<^sub>C\\<longlonglongrightarrow>\\<^sup>*\" 50) where\n  refl_command [iff]: \"c \\<^sub>C\\<longlonglongrightarrow>\\<^sup>* c\" |\n  step_command: \"c \\<^sub>C\\<longlonglongrightarrow> d \\<Longrightarrow> d \\<^sub>C\\<longlonglongrightarrow>\\<^sup>* e \\<Longrightarrow> c \\<^sub>C\\<longlonglongrightarrow>\\<^sup>* e\""], ["", "text\\<open>The beta reduction relation is included in the reflexive transitive closure.\\<close>"], ["", "lemma rtc_term_incl [intro]: \"s \\<longlonglongrightarrow> t \\<Longrightarrow> s \\<longlonglongrightarrow>\\<^sup>* t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<longlonglongrightarrow> t \\<Longrightarrow>\n    s \\<longlonglongrightarrow>\\<^sup>* t", "by (meson beta_rtc_term.simps)"], ["", "lemma [intro]: \"c \\<^sub>C\\<longlonglongrightarrow> d \\<Longrightarrow> c \\<^sub>C\\<longlonglongrightarrow>\\<^sup>* d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<^sub>C\\<longlonglongrightarrow> d \\<Longrightarrow>\n    c \\<^sub>C\\<longlonglongrightarrow>\\<^sup>* d", "by(auto intro: step_command)"], ["", "text\\<open>Proof that the reflexive transitive closure as defined above is transitive.\\<close>"], ["", "lemma rtc_term_trans [intro]: \"s \\<longlonglongrightarrow>\\<^sup>* t \\<Longrightarrow> t \\<longlonglongrightarrow>\\<^sup>* u \\<Longrightarrow> s \\<longlonglongrightarrow>\\<^sup>* u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<longlonglongrightarrow>\\<^sup>* t;\n     t \\<longlonglongrightarrow>\\<^sup>* u\\<rbrakk>\n    \\<Longrightarrow> s \\<longlonglongrightarrow>\\<^sup>* u", "by(induction rule: beta_rtc_term.induct) (auto simp add: step_term)"], ["", "lemma rtc_command_trans[intro]: \"c \\<^sub>C\\<longlonglongrightarrow>\\<^sup>* d \\<Longrightarrow> d \\<^sub>C\\<longlonglongrightarrow>\\<^sup>* e \\<Longrightarrow> c \\<^sub>C\\<longlonglongrightarrow>\\<^sup>* e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c \\<^sub>C\\<longlonglongrightarrow>\\<^sup>* d;\n     d \\<^sub>C\\<longlonglongrightarrow>\\<^sup>* e\\<rbrakk>\n    \\<Longrightarrow> c \\<^sub>C\\<longlonglongrightarrow>\\<^sup>* e", "by(induction rule: beta_rtc_command.induct) (auto simp add: step_command)"], ["", "text\\<open>Congruence rules for the reflexive transitive closure.\\<close>"], ["", "lemma rtc_lambda: \"s \\<longlonglongrightarrow>\\<^sup>* t \\<Longrightarrow> (\\<lambda> T : s) \\<longlonglongrightarrow>\\<^sup>* (\\<lambda> T : t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<longlonglongrightarrow>\\<^sup>* t \\<Longrightarrow>\n    \\<lambda>T:s \\<longlonglongrightarrow>\\<^sup>* \\<lambda>T:t", "apply(induction rule: beta_rtc_term.induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s. \\<lambda>T:s \\<longlonglongrightarrow>\\<^sup>* \\<lambda>T:s\n 2. \\<And>s t u.\n       \\<lbrakk>s \\<longlonglongrightarrow> t;\n        t \\<longlonglongrightarrow>\\<^sup>* u;\n        \\<lambda>T:t \\<longlonglongrightarrow>\\<^sup>* \\<lambda>T:u\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>T:s \\<longlonglongrightarrow>\\<^sup>*\n                         \\<lambda>T:u", "by force (meson red_term_red_cmd.lambda step_term)"], ["", "lemma rtc_appL: \"s \\<longlonglongrightarrow>\\<^sup>* u \\<Longrightarrow> (s\\<degree>t) \\<longlonglongrightarrow>\\<^sup>* (u\\<degree>t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<longlonglongrightarrow>\\<^sup>* u \\<Longrightarrow>\n    s \\<degree> t \\<longlonglongrightarrow>\\<^sup>* u \\<degree> t", "apply(induction rule: beta_rtc_term.induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s. s \\<degree> t \\<longlonglongrightarrow>\\<^sup>* s \\<degree> t\n 2. \\<And>s ta u.\n       \\<lbrakk>s \\<longlonglongrightarrow> ta;\n        ta \\<longlonglongrightarrow>\\<^sup>* u;\n        ta \\<degree> t \\<longlonglongrightarrow>\\<^sup>*\n        u \\<degree> t\\<rbrakk>\n       \\<Longrightarrow> s \\<degree> t \\<longlonglongrightarrow>\\<^sup>*\n                         u \\<degree> t", "by force (meson appL step_term)"], ["", "end"]]}