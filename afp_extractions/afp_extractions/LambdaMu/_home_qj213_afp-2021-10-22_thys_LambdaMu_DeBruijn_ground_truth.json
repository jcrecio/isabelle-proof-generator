{"file_name": "/home/qj213/afp-2021-10-22/thys/LambdaMu/DeBruijn.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LambdaMu", "problem_names": ["lemma fmv_liftL: \n  \"\\<beta> \\<notin> fmv_trm t n \\<Longrightarrow> \\<beta> \\<notin> fmv_trm (liftL_trm t m) n\"\n  \"\\<beta> \\<notin> fmv_cmd c n \\<Longrightarrow> \\<beta> \\<notin> fmv_cmd (liftL_cmd c m) n\"", "lemma fmv_liftL_ctxt:\n  \"\\<beta> \\<notin> fmv_ctxt E m \\<Longrightarrow> \\<beta> \\<notin> fmv_ctxt (liftL_ctxt E n) m\"", "lemma fmv_suc:\n  \"\\<beta> \\<notin> fmv_cmd c (Suc n) \\<Longrightarrow> (Suc \\<beta>) \\<notin> fmv_cmd c n\"\n  \"\\<beta> \\<notin> fmv_trm t (Suc n) \\<Longrightarrow> (Suc \\<beta>) \\<notin> fmv_trm t n\"", "lemma flv_drop:\n  \"flv_trm t k = {} \\<longrightarrow> flv_trm (dropM_trm t j) k = {}\"\n  \"flv_cmd c k = {} \\<longrightarrow> flv_cmd (dropM_cmd c j) k = {}\""], "translations": [["", "lemma fmv_liftL: \n  \"\\<beta> \\<notin> fmv_trm t n \\<Longrightarrow> \\<beta> \\<notin> fmv_trm (liftL_trm t m) n\"\n  \"\\<beta> \\<notin> fmv_cmd c n \\<Longrightarrow> \\<beta> \\<notin> fmv_cmd (liftL_cmd c m) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<beta> \\<notin> fmv_trm t n \\<Longrightarrow>\n     \\<beta> \\<notin> fmv_trm (liftL_trm t m) n) &&&\n    (\\<beta> \\<notin> fmv_cmd c n \\<Longrightarrow>\n     \\<beta> \\<notin> fmv_cmd (liftL_cmd c m) n)", "by(induct t and c arbitrary: m n and m n) auto"], ["", "lemma fmv_liftL_ctxt:\n  \"\\<beta> \\<notin> fmv_ctxt E m \\<Longrightarrow> \\<beta> \\<notin> fmv_ctxt (liftL_ctxt E n) m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<beta> \\<notin> fmv_ctxt E m \\<Longrightarrow>\n    \\<beta> \\<notin> fmv_ctxt (liftL_ctxt E n) m", "by(induct E) (fastforce simp add: fmv_liftL)+"], ["", "lemma fmv_suc:\n  \"\\<beta> \\<notin> fmv_cmd c (Suc n) \\<Longrightarrow> (Suc \\<beta>) \\<notin> fmv_cmd c n\"\n  \"\\<beta> \\<notin> fmv_trm t (Suc n) \\<Longrightarrow> (Suc \\<beta>) \\<notin> fmv_trm t n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<beta> \\<notin> fmv_cmd c (Suc n) \\<Longrightarrow>\n     Suc \\<beta> \\<notin> fmv_cmd c n) &&&\n    (\\<beta> \\<notin> fmv_trm t (Suc n) \\<Longrightarrow>\n     Suc \\<beta> \\<notin> fmv_trm t n)", "proof (induct c and t arbitrary: n and n)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x n.\n       \\<beta> \\<notin> fmv_trm (`x) (Suc n) \\<Longrightarrow>\n       Suc \\<beta> \\<notin> fmv_trm (`x) n\n 2. \\<And>x1 x2 n.\n       \\<lbrakk>\\<And>n.\n                   \\<beta> \\<notin> fmv_trm x2 (Suc n) \\<Longrightarrow>\n                   Suc \\<beta> \\<notin> fmv_trm x2 n;\n        \\<beta> \\<notin> fmv_trm (\\<lambda>x1:x2) (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Suc \\<beta> \\<notin> fmv_trm (\\<lambda>x1:x2) n\n 3. \\<And>x1 x2 n.\n       \\<lbrakk>\\<And>n.\n                   \\<beta> \\<notin> fmv_trm x1 (Suc n) \\<Longrightarrow>\n                   Suc \\<beta> \\<notin> fmv_trm x1 n;\n        \\<And>n.\n           \\<beta> \\<notin> fmv_trm x2 (Suc n) \\<Longrightarrow>\n           Suc \\<beta> \\<notin> fmv_trm x2 n;\n        \\<beta> \\<notin> fmv_trm (x1 \\<degree> x2) (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Suc \\<beta> \\<notin> fmv_trm (x1 \\<degree> x2) n\n 4. \\<And>x1 x2 n.\n       \\<lbrakk>\\<And>n.\n                   \\<beta> \\<notin> fmv_cmd x2 (Suc n) \\<Longrightarrow>\n                   Suc \\<beta> \\<notin> fmv_cmd x2 n;\n        \\<beta> \\<notin> fmv_trm (\\<mu>x1:x2) (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Suc \\<beta> \\<notin> fmv_trm (\\<mu>x1:x2) n\n 5. \\<And>x1 x2 n.\n       \\<lbrakk>\\<And>n.\n                   \\<beta> \\<notin> fmv_trm x2 (Suc n) \\<Longrightarrow>\n                   Suc \\<beta> \\<notin> fmv_trm x2 n;\n        \\<beta> \\<notin> fmv_cmd (<x1>x2) (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Suc \\<beta> \\<notin> fmv_cmd (<x1>x2) n", "case (MVar x1 x2)"], ["proof (state)\nthis:\n  \\<beta> \\<notin> fmv_trm x2 (Suc ?n) \\<Longrightarrow>\n  Suc \\<beta> \\<notin> fmv_trm x2 ?n\n  \\<beta> \\<notin> fmv_cmd (<x1>x2) (Suc n)\n\ngoal (5 subgoals):\n 1. \\<And>x n.\n       \\<beta> \\<notin> fmv_trm (`x) (Suc n) \\<Longrightarrow>\n       Suc \\<beta> \\<notin> fmv_trm (`x) n\n 2. \\<And>x1 x2 n.\n       \\<lbrakk>\\<And>n.\n                   \\<beta> \\<notin> fmv_trm x2 (Suc n) \\<Longrightarrow>\n                   Suc \\<beta> \\<notin> fmv_trm x2 n;\n        \\<beta> \\<notin> fmv_trm (\\<lambda>x1:x2) (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Suc \\<beta> \\<notin> fmv_trm (\\<lambda>x1:x2) n\n 3. \\<And>x1 x2 n.\n       \\<lbrakk>\\<And>n.\n                   \\<beta> \\<notin> fmv_trm x1 (Suc n) \\<Longrightarrow>\n                   Suc \\<beta> \\<notin> fmv_trm x1 n;\n        \\<And>n.\n           \\<beta> \\<notin> fmv_trm x2 (Suc n) \\<Longrightarrow>\n           Suc \\<beta> \\<notin> fmv_trm x2 n;\n        \\<beta> \\<notin> fmv_trm (x1 \\<degree> x2) (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Suc \\<beta> \\<notin> fmv_trm (x1 \\<degree> x2) n\n 4. \\<And>x1 x2 n.\n       \\<lbrakk>\\<And>n.\n                   \\<beta> \\<notin> fmv_cmd x2 (Suc n) \\<Longrightarrow>\n                   Suc \\<beta> \\<notin> fmv_cmd x2 n;\n        \\<beta> \\<notin> fmv_trm (\\<mu>x1:x2) (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Suc \\<beta> \\<notin> fmv_trm (\\<mu>x1:x2) n\n 5. \\<And>x1 x2 n.\n       \\<lbrakk>\\<And>n.\n                   \\<beta> \\<notin> fmv_trm x2 (Suc n) \\<Longrightarrow>\n                   Suc \\<beta> \\<notin> fmv_trm x2 n;\n        \\<beta> \\<notin> fmv_cmd (<x1>x2) (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Suc \\<beta> \\<notin> fmv_cmd (<x1>x2) n", "then"], ["proof (chain)\npicking this:\n  \\<beta> \\<notin> fmv_trm x2 (Suc ?n) \\<Longrightarrow>\n  Suc \\<beta> \\<notin> fmv_trm x2 ?n\n  \\<beta> \\<notin> fmv_cmd (<x1>x2) (Suc n)", "show ?case"], ["proof (prove)\nusing this:\n  \\<beta> \\<notin> fmv_trm x2 (Suc ?n) \\<Longrightarrow>\n  Suc \\<beta> \\<notin> fmv_trm x2 ?n\n  \\<beta> \\<notin> fmv_cmd (<x1>x2) (Suc n)\n\ngoal (1 subgoal):\n 1. Suc \\<beta> \\<notin> fmv_cmd (<x1>x2) n", "by clarsimp (metis UnI1 UnI2 diff_Suc_1 diff_Suc_eq_diff_pred diff_commute diff_is_0_eq nat.simps(3) not_less_eq_eq singletonI)"], ["proof (state)\nthis:\n  Suc \\<beta> \\<notin> fmv_cmd (<x1>x2) n\n\ngoal (4 subgoals):\n 1. \\<And>x n.\n       \\<beta> \\<notin> fmv_trm (`x) (Suc n) \\<Longrightarrow>\n       Suc \\<beta> \\<notin> fmv_trm (`x) n\n 2. \\<And>x1 x2 n.\n       \\<lbrakk>\\<And>n.\n                   \\<beta> \\<notin> fmv_trm x2 (Suc n) \\<Longrightarrow>\n                   Suc \\<beta> \\<notin> fmv_trm x2 n;\n        \\<beta> \\<notin> fmv_trm (\\<lambda>x1:x2) (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Suc \\<beta> \\<notin> fmv_trm (\\<lambda>x1:x2) n\n 3. \\<And>x1 x2 n.\n       \\<lbrakk>\\<And>n.\n                   \\<beta> \\<notin> fmv_trm x1 (Suc n) \\<Longrightarrow>\n                   Suc \\<beta> \\<notin> fmv_trm x1 n;\n        \\<And>n.\n           \\<beta> \\<notin> fmv_trm x2 (Suc n) \\<Longrightarrow>\n           Suc \\<beta> \\<notin> fmv_trm x2 n;\n        \\<beta> \\<notin> fmv_trm (x1 \\<degree> x2) (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Suc \\<beta> \\<notin> fmv_trm (x1 \\<degree> x2) n\n 4. \\<And>x1 x2 n.\n       \\<lbrakk>\\<And>n.\n                   \\<beta> \\<notin> fmv_cmd x2 (Suc n) \\<Longrightarrow>\n                   Suc \\<beta> \\<notin> fmv_cmd x2 n;\n        \\<beta> \\<notin> fmv_trm (\\<mu>x1:x2) (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Suc \\<beta> \\<notin> fmv_trm (\\<mu>x1:x2) n", "qed (force)+"], ["", "lemma flv_drop:\n  \"flv_trm t k = {} \\<longrightarrow> flv_trm (dropM_trm t j) k = {}\"\n  \"flv_cmd c k = {} \\<longrightarrow> flv_cmd (dropM_cmd c j) k = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flv_trm t k = {} \\<longrightarrow> flv_trm (dropM_trm t j) k = {} &&&\n    flv_cmd c k = {} \\<longrightarrow> flv_cmd (dropM_cmd c j) k = {}", "by (induct t and c arbitrary: j k and j k) clarsimp+"], ["", "end"]]}