{"file_name": "/home/qj213/afp-2021-10-22/thys/Program-Conflict-Analysis/ConsInterleave.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Program-Conflict-Analysis", "problem_names": ["lemma mon_pl_empty[simp]: \"mon_pl [] = {}\"", "lemma mon_pl_cons[simp]: \"mon_pl (e#w) = fst e \\<union> snd e \\<union> mon_pl w\"", "lemma mon_pl_unconc: \"!!b. mon_pl (a@b) = mon_pl a \\<union> mon_pl b\"", "lemma mon_pl_ileq: \"w\\<preceq>w' \\<Longrightarrow> mon_pl w \\<subseteq> mon_pl w'\"", "lemma mon_pl_set: \"mon_pl w = \\<Union>{ fst e \\<union> snd e | e. e\\<in>set w }\"", "lemma cil_last_case_split[cases set, case_names left right]: \"\n  \\<lbrakk> w\\<in>e1#w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2#w2; \n    !!w'. \\<lbrakk>w=e1#w'; w'\\<in>(w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2#w2); \n           fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2#w2)) = {} \\<rbrakk> \\<Longrightarrow> P;\n    !!w'. \\<lbrakk>w=e2#w'; w'\\<in>(e1#w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2); \n           fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1#w1)) = {} \\<rbrakk> \\<Longrightarrow> P\n  \\<rbrakk> \\<Longrightarrow> P\"", "lemma cil_cases[cases set, case_names both_empty left_empty right_empty app_left app_right]: \"\n  \\<lbrakk> w\\<in>wa\\<otimes>\\<^bsub>\\<alpha>\\<^esub>wb; \n    \\<lbrakk> w=[]; wa=[]; wb=[] \\<rbrakk> \\<Longrightarrow> P; \n    \\<lbrakk>wa=[]; w=wb\\<rbrakk> \\<Longrightarrow> P; \n    \\<lbrakk> w=wa; wb=[] \\<rbrakk> \\<Longrightarrow> P; \n    !!ea wa' w'. \\<lbrakk>w=ea#w'; wa=ea#wa'; w'\\<in>wa'\\<otimes>\\<^bsub>\\<alpha>\\<^esub>wb; \n                  fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> wb) = {}  \\<rbrakk> \\<Longrightarrow> P;\n    !!eb wb' w'. \\<lbrakk>w=eb#w'; wb=eb#wb'; w'\\<in>wa\\<otimes>\\<^bsub>\\<alpha>\\<^esub>wb'; \n                  fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> wa) = {}  \\<rbrakk> \\<Longrightarrow> P\n  \\<rbrakk> \\<Longrightarrow> P\"", "lemma cil_induct'[case_names both_empty left_empty right_empty append]: \"\\<lbrakk>\n  \\<And>\\<alpha>. P \\<alpha> [] []; \n  \\<And>\\<alpha> ad ae. P \\<alpha> [] (ad # ae); \n  \\<And>\\<alpha> z aa. P \\<alpha> (z # aa) [];\n  \\<And>\\<alpha> e1 w1 e2 w2. \\<lbrakk>\n    \\<lbrakk>fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) = {}\\<rbrakk> \\<Longrightarrow> P \\<alpha> w1 (e2 # w2); \n    \\<lbrakk>fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) = {}\\<rbrakk> \\<Longrightarrow> P \\<alpha> (e1 # w1) w2\\<rbrakk> \n  \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\n  \\<rbrakk> \\<Longrightarrow> P \\<alpha> wa wb\"", "lemma cil_induct_fix\\<alpha>: \"\\<lbrakk>\n  P \\<alpha> [] []; \n  \\<And>ad ae. P \\<alpha> [] (ad # ae); \n  \\<And>z aa. P \\<alpha> (z # aa) [];\n  \\<And>e1 w1 e2 w2.\n    \\<lbrakk>fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) = {} \\<longrightarrow> P \\<alpha> (e1 # w1) w2;\n     fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) = {} \\<longrightarrow> P \\<alpha> w1 (e2 # w2)\\<rbrakk>\n     \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n  \\<Longrightarrow> P \\<alpha> v w\"", "lemma cil_induct_fix\\<alpha>'[case_names both_empty left_empty right_empty append]: \"\\<lbrakk>\n  P \\<alpha> [] []; \n  \\<And>ad ae. P \\<alpha> [] (ad # ae); \n  \\<And>z aa. P \\<alpha> (z # aa) [];\n  \\<And>e1 w1 e2 w2. \\<lbrakk>\n    fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) = {} \\<Longrightarrow> P \\<alpha> w1 (e2 # w2);\n    fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) = {} \\<Longrightarrow> P \\<alpha> (e1 # w1) w2\\<rbrakk> \n    \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\n  \\<rbrakk> \\<Longrightarrow> P \\<alpha> wa wb\"", "lemma [simp]: \"w\\<otimes>\\<^bsub>\\<alpha>\\<^esub>[] = {w}\"", "lemma cil_contains_empty[rule_format, simp]: \"([] \\<in> wa\\<otimes>\\<^bsub>\\<alpha>\\<^esub>wb) = (wa=[] \\<and> wb=[])\"", "lemma cil_cons_cases[cases set, case_names left right]: \"\\<lbrakk> e#w \\<in> w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2; \n  !!w1'. \\<lbrakk>w1=e#w1'; w\\<in>w1'\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2; fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w2) = {} \\<rbrakk> \\<Longrightarrow> P;\n  !!w2'. \\<lbrakk>w2=e#w2'; w\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2'; fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {} \\<rbrakk> \\<Longrightarrow> P\n\\<rbrakk> \\<Longrightarrow> P\"", "lemma cil_set_induct[induct set, case_names empty left right]: \"!!\\<alpha> w1 w2. \\<lbrakk> \n    w\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2; \n    !!\\<alpha>. P [] \\<alpha> [] []; \n    !!\\<alpha> e w' w1' w2. \\<lbrakk>w'\\<in>w1'\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2; fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w2) = {}; \n                      P w' \\<alpha> w1' w2 \\<rbrakk> \\<Longrightarrow> P (e#w') \\<alpha> (e#w1') w2;\n    !!\\<alpha> e w' w2' w1. \\<lbrakk>w'\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2'; fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {}; \n                      P w' \\<alpha> w1 w2' \\<rbrakk> \\<Longrightarrow> P (e#w') \\<alpha> w1 (e#w2')\n  \\<rbrakk> \\<Longrightarrow> P w \\<alpha> w1 w2\"", "lemma cil_set_induct_fix\\<alpha>[induct set, case_names empty left right]: \"!!w1 w2. \\<lbrakk> \n    w\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2; \n    P [] \\<alpha> [] []; \n    !!e w' w1' w2. \\<lbrakk>w'\\<in>w1'\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2; fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w2) = {}; \n                    P w' \\<alpha> w1' w2 \\<rbrakk> \\<Longrightarrow> P (e#w') \\<alpha> (e#w1') w2;\n    !!e w' w2' w1. \\<lbrakk>w'\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2'; fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {}; \n                    P w' \\<alpha> w1 w2' \\<rbrakk> \\<Longrightarrow> P (e#w') \\<alpha> w1 (e#w2')\n  \\<rbrakk> \\<Longrightarrow> P w \\<alpha> w1 w2\"", "lemma cil_cons1: \"\\<lbrakk>w\\<in>wa\\<otimes>\\<^bsub>\\<alpha>\\<^esub>wb; fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wb) = {}\\<rbrakk> \n                  \\<Longrightarrow> e#w \\<in> e#wa \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb\"", "lemma cil_cons2: \"\\<lbrakk>w\\<in>wa\\<otimes>\\<^bsub>\\<alpha>\\<^esub>wb; fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wa) = {}\\<rbrakk> \n                  \\<Longrightarrow> e#w \\<in> wa \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e#wb\"", "lemma cil_subset_il: \"w\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w' \\<subseteq> w\\<otimes>w'\"", "lemma cil_subset_il': \"w\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2 \\<Longrightarrow> w\\<in>w1\\<otimes>w2\"", "lemma cil_set: \"w\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2 \\<Longrightarrow> set w = set w1 \\<union> set w2\"", "lemma cil_length[rule_format]: \"\\<forall>w\\<in>wa\\<otimes>\\<^bsub>\\<alpha>\\<^esub>wb. length w = length wa + length wb\"", "lemma cil_ileq: \"w\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2 \\<Longrightarrow> w1\\<preceq>w \\<and> w2\\<preceq>w\"", "lemma cil_commute: \"w\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w' = w'\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w\"", "lemma cil_assoc1: \"!!wl w1 w2 w3. \\<lbrakk> w\\<in>wl\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w3; wl\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2 \\<rbrakk> \n  \\<Longrightarrow> \\<exists>wr. w\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>wr \\<and> wr\\<in>w2\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w3\"", "lemma cil_assoc2: \n  assumes A: \"w\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>wr\" and B: \"wr\\<in>w2\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w3\" \n  shows \"\\<exists>wl. w\\<in>wl\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w3 \\<and> wl\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2\"", "lemma cil_map: \"w\\<in>w1 \\<otimes>\\<^bsub>(\\<alpha>\\<circ>f)\\<^esub> w2 \\<Longrightarrow> map f w \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2\""], "translations": [["", "lemma mon_pl_empty[simp]: \"mon_pl [] = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mon_pl [] = {}", "by (unfold mon_pl_def, auto)"], ["", "lemma mon_pl_cons[simp]: \"mon_pl (e#w) = fst e \\<union> snd e \\<union> mon_pl w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mon_pl (e # w) = fst e \\<union> snd e \\<union> mon_pl w", "by (unfold mon_pl_def) (simp, subst foldl_un_empty_eq, auto)"], ["", "lemma mon_pl_unconc: \"!!b. mon_pl (a@b) = mon_pl a \\<union> mon_pl b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b. mon_pl (a @ b) = mon_pl a \\<union> mon_pl b", "by (induct a) auto"], ["", "lemma mon_pl_ileq: \"w\\<preceq>w' \\<Longrightarrow> mon_pl w \\<subseteq> mon_pl w'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<preceq> w' \\<Longrightarrow> mon_pl w \\<subseteq> mon_pl w'", "by (induct rule: less_eq_list_induct) auto"], ["", "lemma mon_pl_set: \"mon_pl w = \\<Union>{ fst e \\<union> snd e | e. e\\<in>set w }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mon_pl w = \\<Union> {fst e \\<union> snd e |e. e \\<in> set w}", "by (auto simp add: mon_pl_def foldl_set) blast+"], ["", "fun\n  cil :: \"'a list \\<Rightarrow> ('a \\<Rightarrow> ('m set \\<times> 'm set)) \\<Rightarrow> 'a list \\<Rightarrow> 'a list set\" \n    (\"_ \\<otimes>\\<^bsub>_\\<^esub> _\" [64,64,64] 64) where\n  \\<comment> \\<open>Interleaving with the empty word results in the empty word\\<close>\n  \"[] \\<otimes>\\<^bsub>\\<alpha> \\<^esub> w = {w}\" \n  | \"w \\<otimes>\\<^bsub>\\<alpha>\\<^esub> [] = {w}\"\n  \\<comment> \\<open>If both words are not empty, we can take the first step of one word, \n  interleave the rest with the other word and then append\n  the first step to all result set elements, provided it does not allocate \n  a monitor that is used by the other word\\<close>\n  | \"e1#w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2#w2 = (\n    if fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2#w2)) = {} then \n      e1\\<cdot>(w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2#w2) \n    else {}\n  ) \\<union> (\n    if fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1#w1)) = {} then \n      e2\\<cdot>(e1#w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2) \n    else {}\n  )\""], ["", "text \\<open>Note that this definition allows reentrant monitors, because it only checks that a monitor that is going to be entered by one word is not used in the {\\em other} word. Thus the same word may enter the same monitor\n  multiple times.\\<close>"], ["", "text \\<open>The next lemmas are some auxiliary lemmas to simplify the handling of the consistent interleaving operator.\\<close>"], ["", "lemma cil_last_case_split[cases set, case_names left right]: \"\n  \\<lbrakk> w\\<in>e1#w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2#w2; \n    !!w'. \\<lbrakk>w=e1#w'; w'\\<in>(w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2#w2); \n           fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2#w2)) = {} \\<rbrakk> \\<Longrightarrow> P;\n    !!w'. \\<lbrakk>w=e2#w'; w'\\<in>(e1#w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2); \n           fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1#w1)) = {} \\<rbrakk> \\<Longrightarrow> P\n  \\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n     \\<And>w'.\n        \\<lbrakk>w = e1 # w';\n         w' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n         fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) =\n         {}\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>w'.\n        \\<lbrakk>w = e2 # w';\n         w' \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n         fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n         {}\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (auto elim: list_set_cons_cases split: if_split_asm)"], ["", "lemma cil_cases[cases set, case_names both_empty left_empty right_empty app_left app_right]: \"\n  \\<lbrakk> w\\<in>wa\\<otimes>\\<^bsub>\\<alpha>\\<^esub>wb; \n    \\<lbrakk> w=[]; wa=[]; wb=[] \\<rbrakk> \\<Longrightarrow> P; \n    \\<lbrakk>wa=[]; w=wb\\<rbrakk> \\<Longrightarrow> P; \n    \\<lbrakk> w=wa; wb=[] \\<rbrakk> \\<Longrightarrow> P; \n    !!ea wa' w'. \\<lbrakk>w=ea#w'; wa=ea#wa'; w'\\<in>wa'\\<otimes>\\<^bsub>\\<alpha>\\<^esub>wb; \n                  fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> wb) = {}  \\<rbrakk> \\<Longrightarrow> P;\n    !!eb wb' w'. \\<lbrakk>w=eb#w'; wb=eb#wb'; w'\\<in>wa\\<otimes>\\<^bsub>\\<alpha>\\<^esub>wb'; \n                  fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> wa) = {}  \\<rbrakk> \\<Longrightarrow> P\n  \\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<in> wa \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb;\n     \\<lbrakk>w = []; wa = []; wb = []\\<rbrakk> \\<Longrightarrow> P;\n     \\<lbrakk>wa = []; w = wb\\<rbrakk> \\<Longrightarrow> P;\n     \\<lbrakk>w = wa; wb = []\\<rbrakk> \\<Longrightarrow> P;\n     \\<And>ea wa' w'.\n        \\<lbrakk>w = ea # w'; wa = ea # wa';\n         w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb;\n         fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> wb) = {}\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>eb wb' w'.\n        \\<lbrakk>w = eb # w'; wb = eb # wb';\n         w' \\<in> wa \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n         fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> wa) = {}\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "proof (induct wa \\<alpha> wb rule: cil.induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<alpha> wa.\n       \\<lbrakk>w \\<in> [] \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wa;\n        \\<lbrakk>w = []; [] = []; wa = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>[] = []; w = wa\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>w = []; wa = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<And>ea wa' w'.\n           \\<lbrakk>w = ea # w'; [] = ea # wa';\n            w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wa;\n            fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> wa) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>eb wb' w'.\n           \\<lbrakk>w = eb # w'; wa = eb # wb';\n            w' \\<in> [] \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n            fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> []) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>v va \\<alpha>.\n       \\<lbrakk>w \\<in> v # va \\<otimes>\\<^bsub>\\<alpha>\\<^esub> [];\n        \\<lbrakk>w = []; v # va = []; [] = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>v # va = []; w = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>w = v # va; [] = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<And>ea wa' w'.\n           \\<lbrakk>w = ea # w'; v # va = ea # wa';\n            w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> [];\n            fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> []) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>eb wb' w'.\n           \\<lbrakk>w = eb # w'; [] = eb # wb';\n            w' \\<in> v # va \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n            fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (v # va)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>e1 w1 \\<alpha> e2 w2.\n       \\<lbrakk>\\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                         mon_pl (map \\<alpha> (e2 # w2)) =\n                         {};\n                 w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n                 \\<lbrakk>w = []; w1 = []; e2 # w2 = []\\<rbrakk>\n                 \\<Longrightarrow> P;\n                 \\<lbrakk>w1 = []; w = e2 # w2\\<rbrakk> \\<Longrightarrow> P;\n                 \\<lbrakk>w = w1; e2 # w2 = []\\<rbrakk> \\<Longrightarrow> P;\n                 \\<And>ea wa' w'.\n                    \\<lbrakk>w = ea # w'; w1 = ea # wa';\n                     w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n                     fst (\\<alpha> ea) \\<inter>\n                     mon_pl (map \\<alpha> (e2 # w2)) =\n                     {}\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>eb wb' w'.\n                    \\<lbrakk>w = eb # w'; e2 # w2 = eb # wb';\n                     w' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n                     fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> w1) =\n                     {}\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n        \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                 mon_pl (map \\<alpha> (e1 # w1)) =\n                 {};\n         w \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n         \\<lbrakk>w = []; e1 # w1 = []; w2 = []\\<rbrakk>\n         \\<Longrightarrow> P;\n         \\<lbrakk>e1 # w1 = []; w = w2\\<rbrakk> \\<Longrightarrow> P;\n         \\<lbrakk>w = e1 # w1; w2 = []\\<rbrakk> \\<Longrightarrow> P;\n         \\<And>ea wa' w'.\n            \\<lbrakk>w = ea # w'; e1 # w1 = ea # wa';\n             w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n             fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> w2) =\n             {}\\<rbrakk>\n            \\<Longrightarrow> P;\n         \\<And>eb wb' w'.\n            \\<lbrakk>w = eb # w'; w2 = eb # wb';\n             w' \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n             fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n             {}\\<rbrakk>\n            \\<Longrightarrow> P\\<rbrakk>\n        \\<Longrightarrow> P;\n        w \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n        \\<lbrakk>w = []; e1 # w1 = []; e2 # w2 = []\\<rbrakk>\n        \\<Longrightarrow> P;\n        \\<lbrakk>e1 # w1 = []; w = e2 # w2\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>w = e1 # w1; e2 # w2 = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<And>ea wa' w'.\n           \\<lbrakk>w = ea # w'; e1 # w1 = ea # wa';\n            w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n            fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>eb wb' w'.\n           \\<lbrakk>w = eb # w'; e2 # w2 = eb # wb';\n            w' \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n            fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "case 1"], ["proof (state)\nthis:\n  w \\<in> [] \\<otimes>\\<^bsub>\\<alpha>_\\<^esub> w_\n  \\<lbrakk>w = []; [] = []; w_ = []\\<rbrakk> \\<Longrightarrow> P\n  \\<lbrakk>[] = []; w = w_\\<rbrakk> \\<Longrightarrow> P\n  \\<lbrakk>w = []; w_ = []\\<rbrakk> \\<Longrightarrow> P\n  \\<lbrakk>w = ?ea # ?w'; [] = ?ea # ?wa';\n   ?w' \\<in> ?wa' \\<otimes>\\<^bsub>\\<alpha>_\\<^esub> w_;\n   fst (\\<alpha>_ ?ea) \\<inter> mon_pl (map \\<alpha>_ w_) = {}\\<rbrakk>\n  \\<Longrightarrow> P\n  \\<lbrakk>w = ?eb # ?w'; w_ = ?eb # ?wb';\n   ?w' \\<in> [] \\<otimes>\\<^bsub>\\<alpha>_\\<^esub> ?wb';\n   fst (\\<alpha>_ ?eb) \\<inter> mon_pl (map \\<alpha>_ []) = {}\\<rbrakk>\n  \\<Longrightarrow> P\n\ngoal (3 subgoals):\n 1. \\<And>\\<alpha> wa.\n       \\<lbrakk>w \\<in> [] \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wa;\n        \\<lbrakk>w = []; [] = []; wa = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>[] = []; w = wa\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>w = []; wa = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<And>ea wa' w'.\n           \\<lbrakk>w = ea # w'; [] = ea # wa';\n            w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wa;\n            fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> wa) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>eb wb' w'.\n           \\<lbrakk>w = eb # w'; wa = eb # wb';\n            w' \\<in> [] \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n            fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> []) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>v va \\<alpha>.\n       \\<lbrakk>w \\<in> v # va \\<otimes>\\<^bsub>\\<alpha>\\<^esub> [];\n        \\<lbrakk>w = []; v # va = []; [] = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>v # va = []; w = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>w = v # va; [] = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<And>ea wa' w'.\n           \\<lbrakk>w = ea # w'; v # va = ea # wa';\n            w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> [];\n            fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> []) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>eb wb' w'.\n           \\<lbrakk>w = eb # w'; [] = eb # wb';\n            w' \\<in> v # va \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n            fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (v # va)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>e1 w1 \\<alpha> e2 w2.\n       \\<lbrakk>\\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                         mon_pl (map \\<alpha> (e2 # w2)) =\n                         {};\n                 w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n                 \\<lbrakk>w = []; w1 = []; e2 # w2 = []\\<rbrakk>\n                 \\<Longrightarrow> P;\n                 \\<lbrakk>w1 = []; w = e2 # w2\\<rbrakk> \\<Longrightarrow> P;\n                 \\<lbrakk>w = w1; e2 # w2 = []\\<rbrakk> \\<Longrightarrow> P;\n                 \\<And>ea wa' w'.\n                    \\<lbrakk>w = ea # w'; w1 = ea # wa';\n                     w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n                     fst (\\<alpha> ea) \\<inter>\n                     mon_pl (map \\<alpha> (e2 # w2)) =\n                     {}\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>eb wb' w'.\n                    \\<lbrakk>w = eb # w'; e2 # w2 = eb # wb';\n                     w' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n                     fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> w1) =\n                     {}\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n        \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                 mon_pl (map \\<alpha> (e1 # w1)) =\n                 {};\n         w \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n         \\<lbrakk>w = []; e1 # w1 = []; w2 = []\\<rbrakk>\n         \\<Longrightarrow> P;\n         \\<lbrakk>e1 # w1 = []; w = w2\\<rbrakk> \\<Longrightarrow> P;\n         \\<lbrakk>w = e1 # w1; w2 = []\\<rbrakk> \\<Longrightarrow> P;\n         \\<And>ea wa' w'.\n            \\<lbrakk>w = ea # w'; e1 # w1 = ea # wa';\n             w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n             fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> w2) =\n             {}\\<rbrakk>\n            \\<Longrightarrow> P;\n         \\<And>eb wb' w'.\n            \\<lbrakk>w = eb # w'; w2 = eb # wb';\n             w' \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n             fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n             {}\\<rbrakk>\n            \\<Longrightarrow> P\\<rbrakk>\n        \\<Longrightarrow> P;\n        w \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n        \\<lbrakk>w = []; e1 # w1 = []; e2 # w2 = []\\<rbrakk>\n        \\<Longrightarrow> P;\n        \\<lbrakk>e1 # w1 = []; w = e2 # w2\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>w = e1 # w1; e2 # w2 = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<And>ea wa' w'.\n           \\<lbrakk>w = ea # w'; e1 # w1 = ea # wa';\n            w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n            fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>eb wb' w'.\n           \\<lbrakk>w = eb # w'; e2 # w2 = eb # wb';\n            w' \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n            fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "thus ?case"], ["proof (prove)\nusing this:\n  w \\<in> [] \\<otimes>\\<^bsub>\\<alpha>_\\<^esub> w_\n  \\<lbrakk>w = []; [] = []; w_ = []\\<rbrakk> \\<Longrightarrow> P\n  \\<lbrakk>[] = []; w = w_\\<rbrakk> \\<Longrightarrow> P\n  \\<lbrakk>w = []; w_ = []\\<rbrakk> \\<Longrightarrow> P\n  \\<lbrakk>w = ?ea # ?w'; [] = ?ea # ?wa';\n   ?w' \\<in> ?wa' \\<otimes>\\<^bsub>\\<alpha>_\\<^esub> w_;\n   fst (\\<alpha>_ ?ea) \\<inter> mon_pl (map \\<alpha>_ w_) = {}\\<rbrakk>\n  \\<Longrightarrow> P\n  \\<lbrakk>w = ?eb # ?w'; w_ = ?eb # ?wb';\n   ?w' \\<in> [] \\<otimes>\\<^bsub>\\<alpha>_\\<^esub> ?wb';\n   fst (\\<alpha>_ ?eb) \\<inter> mon_pl (map \\<alpha>_ []) = {}\\<rbrakk>\n  \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "by simp"], ["proof (state)\nthis:\n  P\n\ngoal (2 subgoals):\n 1. \\<And>v va \\<alpha>.\n       \\<lbrakk>w \\<in> v # va \\<otimes>\\<^bsub>\\<alpha>\\<^esub> [];\n        \\<lbrakk>w = []; v # va = []; [] = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>v # va = []; w = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>w = v # va; [] = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<And>ea wa' w'.\n           \\<lbrakk>w = ea # w'; v # va = ea # wa';\n            w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> [];\n            fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> []) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>eb wb' w'.\n           \\<lbrakk>w = eb # w'; [] = eb # wb';\n            w' \\<in> v # va \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n            fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (v # va)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>e1 w1 \\<alpha> e2 w2.\n       \\<lbrakk>\\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                         mon_pl (map \\<alpha> (e2 # w2)) =\n                         {};\n                 w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n                 \\<lbrakk>w = []; w1 = []; e2 # w2 = []\\<rbrakk>\n                 \\<Longrightarrow> P;\n                 \\<lbrakk>w1 = []; w = e2 # w2\\<rbrakk> \\<Longrightarrow> P;\n                 \\<lbrakk>w = w1; e2 # w2 = []\\<rbrakk> \\<Longrightarrow> P;\n                 \\<And>ea wa' w'.\n                    \\<lbrakk>w = ea # w'; w1 = ea # wa';\n                     w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n                     fst (\\<alpha> ea) \\<inter>\n                     mon_pl (map \\<alpha> (e2 # w2)) =\n                     {}\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>eb wb' w'.\n                    \\<lbrakk>w = eb # w'; e2 # w2 = eb # wb';\n                     w' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n                     fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> w1) =\n                     {}\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n        \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                 mon_pl (map \\<alpha> (e1 # w1)) =\n                 {};\n         w \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n         \\<lbrakk>w = []; e1 # w1 = []; w2 = []\\<rbrakk>\n         \\<Longrightarrow> P;\n         \\<lbrakk>e1 # w1 = []; w = w2\\<rbrakk> \\<Longrightarrow> P;\n         \\<lbrakk>w = e1 # w1; w2 = []\\<rbrakk> \\<Longrightarrow> P;\n         \\<And>ea wa' w'.\n            \\<lbrakk>w = ea # w'; e1 # w1 = ea # wa';\n             w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n             fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> w2) =\n             {}\\<rbrakk>\n            \\<Longrightarrow> P;\n         \\<And>eb wb' w'.\n            \\<lbrakk>w = eb # w'; w2 = eb # wb';\n             w' \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n             fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n             {}\\<rbrakk>\n            \\<Longrightarrow> P\\<rbrakk>\n        \\<Longrightarrow> P;\n        w \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n        \\<lbrakk>w = []; e1 # w1 = []; e2 # w2 = []\\<rbrakk>\n        \\<Longrightarrow> P;\n        \\<lbrakk>e1 # w1 = []; w = e2 # w2\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>w = e1 # w1; e2 # w2 = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<And>ea wa' w'.\n           \\<lbrakk>w = ea # w'; e1 # w1 = ea # wa';\n            w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n            fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>eb wb' w'.\n           \\<lbrakk>w = eb # w'; e2 # w2 = eb # wb';\n            w' \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n            fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>v va \\<alpha>.\n       \\<lbrakk>w \\<in> v # va \\<otimes>\\<^bsub>\\<alpha>\\<^esub> [];\n        \\<lbrakk>w = []; v # va = []; [] = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>v # va = []; w = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>w = v # va; [] = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<And>ea wa' w'.\n           \\<lbrakk>w = ea # w'; v # va = ea # wa';\n            w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> [];\n            fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> []) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>eb wb' w'.\n           \\<lbrakk>w = eb # w'; [] = eb # wb';\n            w' \\<in> v # va \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n            fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (v # va)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>e1 w1 \\<alpha> e2 w2.\n       \\<lbrakk>\\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                         mon_pl (map \\<alpha> (e2 # w2)) =\n                         {};\n                 w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n                 \\<lbrakk>w = []; w1 = []; e2 # w2 = []\\<rbrakk>\n                 \\<Longrightarrow> P;\n                 \\<lbrakk>w1 = []; w = e2 # w2\\<rbrakk> \\<Longrightarrow> P;\n                 \\<lbrakk>w = w1; e2 # w2 = []\\<rbrakk> \\<Longrightarrow> P;\n                 \\<And>ea wa' w'.\n                    \\<lbrakk>w = ea # w'; w1 = ea # wa';\n                     w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n                     fst (\\<alpha> ea) \\<inter>\n                     mon_pl (map \\<alpha> (e2 # w2)) =\n                     {}\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>eb wb' w'.\n                    \\<lbrakk>w = eb # w'; e2 # w2 = eb # wb';\n                     w' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n                     fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> w1) =\n                     {}\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n        \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                 mon_pl (map \\<alpha> (e1 # w1)) =\n                 {};\n         w \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n         \\<lbrakk>w = []; e1 # w1 = []; w2 = []\\<rbrakk>\n         \\<Longrightarrow> P;\n         \\<lbrakk>e1 # w1 = []; w = w2\\<rbrakk> \\<Longrightarrow> P;\n         \\<lbrakk>w = e1 # w1; w2 = []\\<rbrakk> \\<Longrightarrow> P;\n         \\<And>ea wa' w'.\n            \\<lbrakk>w = ea # w'; e1 # w1 = ea # wa';\n             w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n             fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> w2) =\n             {}\\<rbrakk>\n            \\<Longrightarrow> P;\n         \\<And>eb wb' w'.\n            \\<lbrakk>w = eb # w'; w2 = eb # wb';\n             w' \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n             fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n             {}\\<rbrakk>\n            \\<Longrightarrow> P\\<rbrakk>\n        \\<Longrightarrow> P;\n        w \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n        \\<lbrakk>w = []; e1 # w1 = []; e2 # w2 = []\\<rbrakk>\n        \\<Longrightarrow> P;\n        \\<lbrakk>e1 # w1 = []; w = e2 # w2\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>w = e1 # w1; e2 # w2 = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<And>ea wa' w'.\n           \\<lbrakk>w = ea # w'; e1 # w1 = ea # wa';\n            w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n            fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>eb wb' w'.\n           \\<lbrakk>w = eb # w'; e2 # w2 = eb # wb';\n            w' \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n            fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "case 2"], ["proof (state)\nthis:\n  w \\<in> v_ # va_ \\<otimes>\\<^bsub>\\<alpha>_\\<^esub> []\n  \\<lbrakk>w = []; v_ # va_ = []; [] = []\\<rbrakk> \\<Longrightarrow> P\n  \\<lbrakk>v_ # va_ = []; w = []\\<rbrakk> \\<Longrightarrow> P\n  \\<lbrakk>w = v_ # va_; [] = []\\<rbrakk> \\<Longrightarrow> P\n  \\<lbrakk>w = ?ea # ?w'; v_ # va_ = ?ea # ?wa';\n   ?w' \\<in> ?wa' \\<otimes>\\<^bsub>\\<alpha>_\\<^esub> [];\n   fst (\\<alpha>_ ?ea) \\<inter> mon_pl (map \\<alpha>_ []) = {}\\<rbrakk>\n  \\<Longrightarrow> P\n  \\<lbrakk>w = ?eb # ?w'; [] = ?eb # ?wb';\n   ?w' \\<in> v_ # va_ \\<otimes>\\<^bsub>\\<alpha>_\\<^esub> ?wb';\n   fst (\\<alpha>_ ?eb) \\<inter> mon_pl (map \\<alpha>_ (v_ # va_)) =\n   {}\\<rbrakk>\n  \\<Longrightarrow> P\n\ngoal (2 subgoals):\n 1. \\<And>v va \\<alpha>.\n       \\<lbrakk>w \\<in> v # va \\<otimes>\\<^bsub>\\<alpha>\\<^esub> [];\n        \\<lbrakk>w = []; v # va = []; [] = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>v # va = []; w = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>w = v # va; [] = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<And>ea wa' w'.\n           \\<lbrakk>w = ea # w'; v # va = ea # wa';\n            w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> [];\n            fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> []) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>eb wb' w'.\n           \\<lbrakk>w = eb # w'; [] = eb # wb';\n            w' \\<in> v # va \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n            fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (v # va)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>e1 w1 \\<alpha> e2 w2.\n       \\<lbrakk>\\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                         mon_pl (map \\<alpha> (e2 # w2)) =\n                         {};\n                 w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n                 \\<lbrakk>w = []; w1 = []; e2 # w2 = []\\<rbrakk>\n                 \\<Longrightarrow> P;\n                 \\<lbrakk>w1 = []; w = e2 # w2\\<rbrakk> \\<Longrightarrow> P;\n                 \\<lbrakk>w = w1; e2 # w2 = []\\<rbrakk> \\<Longrightarrow> P;\n                 \\<And>ea wa' w'.\n                    \\<lbrakk>w = ea # w'; w1 = ea # wa';\n                     w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n                     fst (\\<alpha> ea) \\<inter>\n                     mon_pl (map \\<alpha> (e2 # w2)) =\n                     {}\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>eb wb' w'.\n                    \\<lbrakk>w = eb # w'; e2 # w2 = eb # wb';\n                     w' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n                     fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> w1) =\n                     {}\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n        \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                 mon_pl (map \\<alpha> (e1 # w1)) =\n                 {};\n         w \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n         \\<lbrakk>w = []; e1 # w1 = []; w2 = []\\<rbrakk>\n         \\<Longrightarrow> P;\n         \\<lbrakk>e1 # w1 = []; w = w2\\<rbrakk> \\<Longrightarrow> P;\n         \\<lbrakk>w = e1 # w1; w2 = []\\<rbrakk> \\<Longrightarrow> P;\n         \\<And>ea wa' w'.\n            \\<lbrakk>w = ea # w'; e1 # w1 = ea # wa';\n             w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n             fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> w2) =\n             {}\\<rbrakk>\n            \\<Longrightarrow> P;\n         \\<And>eb wb' w'.\n            \\<lbrakk>w = eb # w'; w2 = eb # wb';\n             w' \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n             fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n             {}\\<rbrakk>\n            \\<Longrightarrow> P\\<rbrakk>\n        \\<Longrightarrow> P;\n        w \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n        \\<lbrakk>w = []; e1 # w1 = []; e2 # w2 = []\\<rbrakk>\n        \\<Longrightarrow> P;\n        \\<lbrakk>e1 # w1 = []; w = e2 # w2\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>w = e1 # w1; e2 # w2 = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<And>ea wa' w'.\n           \\<lbrakk>w = ea # w'; e1 # w1 = ea # wa';\n            w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n            fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>eb wb' w'.\n           \\<lbrakk>w = eb # w'; e2 # w2 = eb # wb';\n            w' \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n            fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "thus ?case"], ["proof (prove)\nusing this:\n  w \\<in> v_ # va_ \\<otimes>\\<^bsub>\\<alpha>_\\<^esub> []\n  \\<lbrakk>w = []; v_ # va_ = []; [] = []\\<rbrakk> \\<Longrightarrow> P\n  \\<lbrakk>v_ # va_ = []; w = []\\<rbrakk> \\<Longrightarrow> P\n  \\<lbrakk>w = v_ # va_; [] = []\\<rbrakk> \\<Longrightarrow> P\n  \\<lbrakk>w = ?ea # ?w'; v_ # va_ = ?ea # ?wa';\n   ?w' \\<in> ?wa' \\<otimes>\\<^bsub>\\<alpha>_\\<^esub> [];\n   fst (\\<alpha>_ ?ea) \\<inter> mon_pl (map \\<alpha>_ []) = {}\\<rbrakk>\n  \\<Longrightarrow> P\n  \\<lbrakk>w = ?eb # ?w'; [] = ?eb # ?wb';\n   ?w' \\<in> v_ # va_ \\<otimes>\\<^bsub>\\<alpha>_\\<^esub> ?wb';\n   fst (\\<alpha>_ ?eb) \\<inter> mon_pl (map \\<alpha>_ (v_ # va_)) =\n   {}\\<rbrakk>\n  \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "by simp"], ["proof (state)\nthis:\n  P\n\ngoal (1 subgoal):\n 1. \\<And>e1 w1 \\<alpha> e2 w2.\n       \\<lbrakk>\\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                         mon_pl (map \\<alpha> (e2 # w2)) =\n                         {};\n                 w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n                 \\<lbrakk>w = []; w1 = []; e2 # w2 = []\\<rbrakk>\n                 \\<Longrightarrow> P;\n                 \\<lbrakk>w1 = []; w = e2 # w2\\<rbrakk> \\<Longrightarrow> P;\n                 \\<lbrakk>w = w1; e2 # w2 = []\\<rbrakk> \\<Longrightarrow> P;\n                 \\<And>ea wa' w'.\n                    \\<lbrakk>w = ea # w'; w1 = ea # wa';\n                     w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n                     fst (\\<alpha> ea) \\<inter>\n                     mon_pl (map \\<alpha> (e2 # w2)) =\n                     {}\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>eb wb' w'.\n                    \\<lbrakk>w = eb # w'; e2 # w2 = eb # wb';\n                     w' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n                     fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> w1) =\n                     {}\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n        \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                 mon_pl (map \\<alpha> (e1 # w1)) =\n                 {};\n         w \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n         \\<lbrakk>w = []; e1 # w1 = []; w2 = []\\<rbrakk>\n         \\<Longrightarrow> P;\n         \\<lbrakk>e1 # w1 = []; w = w2\\<rbrakk> \\<Longrightarrow> P;\n         \\<lbrakk>w = e1 # w1; w2 = []\\<rbrakk> \\<Longrightarrow> P;\n         \\<And>ea wa' w'.\n            \\<lbrakk>w = ea # w'; e1 # w1 = ea # wa';\n             w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n             fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> w2) =\n             {}\\<rbrakk>\n            \\<Longrightarrow> P;\n         \\<And>eb wb' w'.\n            \\<lbrakk>w = eb # w'; w2 = eb # wb';\n             w' \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n             fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n             {}\\<rbrakk>\n            \\<Longrightarrow> P\\<rbrakk>\n        \\<Longrightarrow> P;\n        w \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n        \\<lbrakk>w = []; e1 # w1 = []; e2 # w2 = []\\<rbrakk>\n        \\<Longrightarrow> P;\n        \\<lbrakk>e1 # w1 = []; w = e2 # w2\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>w = e1 # w1; e2 # w2 = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<And>ea wa' w'.\n           \\<lbrakk>w = ea # w'; e1 # w1 = ea # wa';\n            w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n            fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>eb wb' w'.\n           \\<lbrakk>w = eb # w'; e2 # w2 = eb # wb';\n            w' \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n            fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e1 w1 \\<alpha> e2 w2.\n       \\<lbrakk>\\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                         mon_pl (map \\<alpha> (e2 # w2)) =\n                         {};\n                 w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n                 \\<lbrakk>w = []; w1 = []; e2 # w2 = []\\<rbrakk>\n                 \\<Longrightarrow> P;\n                 \\<lbrakk>w1 = []; w = e2 # w2\\<rbrakk> \\<Longrightarrow> P;\n                 \\<lbrakk>w = w1; e2 # w2 = []\\<rbrakk> \\<Longrightarrow> P;\n                 \\<And>ea wa' w'.\n                    \\<lbrakk>w = ea # w'; w1 = ea # wa';\n                     w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n                     fst (\\<alpha> ea) \\<inter>\n                     mon_pl (map \\<alpha> (e2 # w2)) =\n                     {}\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>eb wb' w'.\n                    \\<lbrakk>w = eb # w'; e2 # w2 = eb # wb';\n                     w' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n                     fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> w1) =\n                     {}\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n        \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                 mon_pl (map \\<alpha> (e1 # w1)) =\n                 {};\n         w \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n         \\<lbrakk>w = []; e1 # w1 = []; w2 = []\\<rbrakk>\n         \\<Longrightarrow> P;\n         \\<lbrakk>e1 # w1 = []; w = w2\\<rbrakk> \\<Longrightarrow> P;\n         \\<lbrakk>w = e1 # w1; w2 = []\\<rbrakk> \\<Longrightarrow> P;\n         \\<And>ea wa' w'.\n            \\<lbrakk>w = ea # w'; e1 # w1 = ea # wa';\n             w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n             fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> w2) =\n             {}\\<rbrakk>\n            \\<Longrightarrow> P;\n         \\<And>eb wb' w'.\n            \\<lbrakk>w = eb # w'; w2 = eb # wb';\n             w' \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n             fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n             {}\\<rbrakk>\n            \\<Longrightarrow> P\\<rbrakk>\n        \\<Longrightarrow> P;\n        w \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n        \\<lbrakk>w = []; e1 # w1 = []; e2 # w2 = []\\<rbrakk>\n        \\<Longrightarrow> P;\n        \\<lbrakk>e1 # w1 = []; w = e2 # w2\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>w = e1 # w1; e2 # w2 = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<And>ea wa' w'.\n           \\<lbrakk>w = ea # w'; e1 # w1 = ea # wa';\n            w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n            fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>eb wb' w'.\n           \\<lbrakk>w = eb # w'; e2 # w2 = eb # wb';\n            w' \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n            fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "case (3 ea wa' \\<alpha> eb wb')"], ["proof (state)\nthis:\n  \\<lbrakk>fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> (eb # wb')) = {};\n   w \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> eb # wb';\n   \\<lbrakk>w = []; wa' = []; eb # wb' = []\\<rbrakk> \\<Longrightarrow> P;\n   \\<lbrakk>wa' = []; w = eb # wb'\\<rbrakk> \\<Longrightarrow> P;\n   \\<lbrakk>w = wa'; eb # wb' = []\\<rbrakk> \\<Longrightarrow> P;\n   \\<And>ea wa'a w'.\n      \\<lbrakk>w = ea # w'; wa' = ea # wa'a;\n       w' \\<in> wa'a \\<otimes>\\<^bsub>\\<alpha>\\<^esub> eb # wb';\n       fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> (eb # wb')) =\n       {}\\<rbrakk>\n      \\<Longrightarrow> P;\n   \\<And>eba wb'a w'.\n      \\<lbrakk>w = eba # w'; eb # wb' = eba # wb'a;\n       w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb'a;\n       fst (\\<alpha> eba) \\<inter> mon_pl (map \\<alpha> wa') = {}\\<rbrakk>\n      \\<Longrightarrow> P\\<rbrakk>\n  \\<Longrightarrow> P\n  \\<lbrakk>fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (ea # wa')) = {};\n   w \\<in> ea # wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n   \\<lbrakk>w = []; ea # wa' = []; wb' = []\\<rbrakk> \\<Longrightarrow> P;\n   \\<lbrakk>ea # wa' = []; w = wb'\\<rbrakk> \\<Longrightarrow> P;\n   \\<lbrakk>w = ea # wa'; wb' = []\\<rbrakk> \\<Longrightarrow> P;\n   \\<And>eaa wa'a w'.\n      \\<lbrakk>w = eaa # w'; ea # wa' = eaa # wa'a;\n       w' \\<in> wa'a \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n       fst (\\<alpha> eaa) \\<inter> mon_pl (map \\<alpha> wb') = {}\\<rbrakk>\n      \\<Longrightarrow> P;\n   \\<And>eb wb'a w'.\n      \\<lbrakk>w = eb # w'; wb' = eb # wb'a;\n       w' \\<in> ea # wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb'a;\n       fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (ea # wa')) =\n       {}\\<rbrakk>\n      \\<Longrightarrow> P\\<rbrakk>\n  \\<Longrightarrow> P\n  w \\<in> ea # wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> eb # wb'\n  \\<lbrakk>w = []; ea # wa' = []; eb # wb' = []\\<rbrakk> \\<Longrightarrow> P\n  \\<lbrakk>ea # wa' = []; w = eb # wb'\\<rbrakk> \\<Longrightarrow> P\n  \\<lbrakk>w = ea # wa'; eb # wb' = []\\<rbrakk> \\<Longrightarrow> P\n  \\<lbrakk>w = ?ea # ?w'; ea # wa' = ?ea # ?wa';\n   ?w' \\<in> ?wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> eb # wb';\n   fst (\\<alpha> ?ea) \\<inter> mon_pl (map \\<alpha> (eb # wb')) =\n   {}\\<rbrakk>\n  \\<Longrightarrow> P\n  \\<lbrakk>w = ?eb # ?w'; eb # wb' = ?eb # ?wb';\n   ?w' \\<in> ea # wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> ?wb';\n   fst (\\<alpha> ?eb) \\<inter> mon_pl (map \\<alpha> (ea # wa')) =\n   {}\\<rbrakk>\n  \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. \\<And>e1 w1 \\<alpha> e2 w2.\n       \\<lbrakk>\\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                         mon_pl (map \\<alpha> (e2 # w2)) =\n                         {};\n                 w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n                 \\<lbrakk>w = []; w1 = []; e2 # w2 = []\\<rbrakk>\n                 \\<Longrightarrow> P;\n                 \\<lbrakk>w1 = []; w = e2 # w2\\<rbrakk> \\<Longrightarrow> P;\n                 \\<lbrakk>w = w1; e2 # w2 = []\\<rbrakk> \\<Longrightarrow> P;\n                 \\<And>ea wa' w'.\n                    \\<lbrakk>w = ea # w'; w1 = ea # wa';\n                     w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n                     fst (\\<alpha> ea) \\<inter>\n                     mon_pl (map \\<alpha> (e2 # w2)) =\n                     {}\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>eb wb' w'.\n                    \\<lbrakk>w = eb # w'; e2 # w2 = eb # wb';\n                     w' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n                     fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> w1) =\n                     {}\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n        \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                 mon_pl (map \\<alpha> (e1 # w1)) =\n                 {};\n         w \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n         \\<lbrakk>w = []; e1 # w1 = []; w2 = []\\<rbrakk>\n         \\<Longrightarrow> P;\n         \\<lbrakk>e1 # w1 = []; w = w2\\<rbrakk> \\<Longrightarrow> P;\n         \\<lbrakk>w = e1 # w1; w2 = []\\<rbrakk> \\<Longrightarrow> P;\n         \\<And>ea wa' w'.\n            \\<lbrakk>w = ea # w'; e1 # w1 = ea # wa';\n             w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n             fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> w2) =\n             {}\\<rbrakk>\n            \\<Longrightarrow> P;\n         \\<And>eb wb' w'.\n            \\<lbrakk>w = eb # w'; w2 = eb # wb';\n             w' \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n             fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n             {}\\<rbrakk>\n            \\<Longrightarrow> P\\<rbrakk>\n        \\<Longrightarrow> P;\n        w \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n        \\<lbrakk>w = []; e1 # w1 = []; e2 # w2 = []\\<rbrakk>\n        \\<Longrightarrow> P;\n        \\<lbrakk>e1 # w1 = []; w = e2 # w2\\<rbrakk> \\<Longrightarrow> P;\n        \\<lbrakk>w = e1 # w1; e2 # w2 = []\\<rbrakk> \\<Longrightarrow> P;\n        \\<And>ea wa' w'.\n           \\<lbrakk>w = ea # w'; e1 # w1 = ea # wa';\n            w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n            fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>eb wb' w'.\n           \\<lbrakk>w = eb # w'; e2 # w2 = eb # wb';\n            w' \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n            fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {}\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "from \"3.prems\"(1)"], ["proof (chain)\npicking this:\n  w \\<in> ea # wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> eb # wb'", "show ?thesis"], ["proof (prove)\nusing this:\n  w \\<in> ea # wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> eb # wb'\n\ngoal (1 subgoal):\n 1. P", "proof (cases rule: cil_last_case_split)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>w'.\n       \\<lbrakk>w = ea # w';\n        w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> eb # wb';\n        fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> (eb # wb')) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>w'.\n       \\<lbrakk>w = eb # w';\n        w' \\<in> ea # wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n        fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (ea # wa')) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> P", "case (left w')"], ["proof (state)\nthis:\n  w = ea # w'\n  w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> eb # wb'\n  fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> (eb # wb')) = {}\n\ngoal (2 subgoals):\n 1. \\<And>w'.\n       \\<lbrakk>w = ea # w';\n        w' \\<in> wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> eb # wb';\n        fst (\\<alpha> ea) \\<inter> mon_pl (map \\<alpha> (eb # wb')) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>w'.\n       \\<lbrakk>w = eb # w';\n        w' \\<in> ea # wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n        fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (ea # wa')) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> P", "from \"3.prems\"(5)[OF left(1) _ left(2,3)]"], ["proof (chain)\npicking this:\n  ea # wa' = ea # wa' \\<Longrightarrow> P", "show ?thesis"], ["proof (prove)\nusing this:\n  ea # wa' = ea # wa' \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "by simp"], ["proof (state)\nthis:\n  P\n\ngoal (1 subgoal):\n 1. \\<And>w'.\n       \\<lbrakk>w = eb # w';\n        w' \\<in> ea # wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n        fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (ea # wa')) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> P", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w'.\n       \\<lbrakk>w = eb # w';\n        w' \\<in> ea # wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n        fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (ea # wa')) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> P", "case (right w')"], ["proof (state)\nthis:\n  w = eb # w'\n  w' \\<in> ea # wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb'\n  fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (ea # wa')) = {}\n\ngoal (1 subgoal):\n 1. \\<And>w'.\n       \\<lbrakk>w = eb # w';\n        w' \\<in> ea # wa' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb';\n        fst (\\<alpha> eb) \\<inter> mon_pl (map \\<alpha> (ea # wa')) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> P", "from \"3.prems\"(6)[OF right(1) _ right(2,3)]"], ["proof (chain)\npicking this:\n  eb # wb' = eb # wb' \\<Longrightarrow> P", "show ?thesis"], ["proof (prove)\nusing this:\n  eb # wb' = eb # wb' \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "by simp"], ["proof (state)\nthis:\n  P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cil_induct'[case_names both_empty left_empty right_empty append]: \"\\<lbrakk>\n  \\<And>\\<alpha>. P \\<alpha> [] []; \n  \\<And>\\<alpha> ad ae. P \\<alpha> [] (ad # ae); \n  \\<And>\\<alpha> z aa. P \\<alpha> (z # aa) [];\n  \\<And>\\<alpha> e1 w1 e2 w2. \\<lbrakk>\n    \\<lbrakk>fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) = {}\\<rbrakk> \\<Longrightarrow> P \\<alpha> w1 (e2 # w2); \n    \\<lbrakk>fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) = {}\\<rbrakk> \\<Longrightarrow> P \\<alpha> (e1 # w1) w2\\<rbrakk> \n  \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\n  \\<rbrakk> \\<Longrightarrow> P \\<alpha> wa wb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>\\<alpha>. P \\<alpha> [] [];\n     \\<And>\\<alpha> ad ae. P \\<alpha> [] (ad # ae);\n     \\<And>\\<alpha> z aa. P \\<alpha> (z # aa) [];\n     \\<And>\\<alpha> e1 w1 e2 w2.\n        \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                 mon_pl (map \\<alpha> (e2 # w2)) =\n                 {} \\<Longrightarrow>\n                 P \\<alpha> w1 (e2 # w2);\n         fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n         {} \\<Longrightarrow>\n         P \\<alpha> (e1 # w1) w2\\<rbrakk>\n        \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n    \\<Longrightarrow> P \\<alpha> wa wb", "apply (induct wa \\<alpha> wb rule: cil.induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>\\<alpha> w.\n       \\<lbrakk>\\<And>\\<alpha>. P \\<alpha> [] [];\n        \\<And>\\<alpha> ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>\\<alpha> z aa. P \\<alpha> (z # aa) [];\n        \\<And>\\<alpha> e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                    mon_pl (map \\<alpha> (e2 # w2)) =\n                    {} \\<Longrightarrow>\n                    P \\<alpha> w1 (e2 # w2);\n            fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {} \\<Longrightarrow>\n            P \\<alpha> (e1 # w1) w2\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> [] w\n 2. \\<And>v va \\<alpha>.\n       \\<lbrakk>\\<And>\\<alpha>. P \\<alpha> [] [];\n        \\<And>\\<alpha> ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>\\<alpha> z aa. P \\<alpha> (z # aa) [];\n        \\<And>\\<alpha> e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                    mon_pl (map \\<alpha> (e2 # w2)) =\n                    {} \\<Longrightarrow>\n                    P \\<alpha> w1 (e2 # w2);\n            fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {} \\<Longrightarrow>\n            P \\<alpha> (e1 # w1) w2\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> (v # va) []\n 3. \\<And>e1 w1 \\<alpha> e2 w2.\n       \\<lbrakk>\\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                         mon_pl (map \\<alpha> (e2 # w2)) =\n                         {};\n                 \\<And>\\<alpha>. P \\<alpha> [] [];\n                 \\<And>\\<alpha> ad ae. P \\<alpha> [] (ad # ae);\n                 \\<And>\\<alpha> z aa. P \\<alpha> (z # aa) [];\n                 \\<And>\\<alpha> e1 w1 e2 w2.\n                    \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                             mon_pl (map \\<alpha> (e2 # w2)) =\n                             {} \\<Longrightarrow>\n                             P \\<alpha> w1 (e2 # w2);\n                     fst (\\<alpha> e2) \\<inter>\n                     mon_pl (map \\<alpha> (e1 # w1)) =\n                     {} \\<Longrightarrow>\n                     P \\<alpha> (e1 # w1) w2\\<rbrakk>\n                    \\<Longrightarrow> P \\<alpha> (e1 # w1)\n (e2 # w2)\\<rbrakk>\n                \\<Longrightarrow> P \\<alpha> w1 (e2 # w2);\n        \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                 mon_pl (map \\<alpha> (e1 # w1)) =\n                 {};\n         \\<And>\\<alpha>. P \\<alpha> [] [];\n         \\<And>\\<alpha> ad ae. P \\<alpha> [] (ad # ae);\n         \\<And>\\<alpha> z aa. P \\<alpha> (z # aa) [];\n         \\<And>\\<alpha> e1 w1 e2 w2.\n            \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                     mon_pl (map \\<alpha> (e2 # w2)) =\n                     {} \\<Longrightarrow>\n                     P \\<alpha> w1 (e2 # w2);\n             fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n             {} \\<Longrightarrow>\n             P \\<alpha> (e1 # w1) w2\\<rbrakk>\n            \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n        \\<Longrightarrow> P \\<alpha> (e1 # w1) w2;\n        \\<And>\\<alpha>. P \\<alpha> [] [];\n        \\<And>\\<alpha> ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>\\<alpha> z aa. P \\<alpha> (z # aa) [];\n        \\<And>\\<alpha> e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                    mon_pl (map \\<alpha> (e2 # w2)) =\n                    {} \\<Longrightarrow>\n                    P \\<alpha> w1 (e2 # w2);\n            fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {} \\<Longrightarrow>\n            P \\<alpha> (e1 # w1) w2\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)", "apply (case_tac w)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>\\<alpha> w.\n       \\<lbrakk>\\<And>\\<alpha>. P \\<alpha> [] [];\n        \\<And>\\<alpha> ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>\\<alpha> z aa. P \\<alpha> (z # aa) [];\n        \\<And>\\<alpha> e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                    mon_pl (map \\<alpha> (e2 # w2)) =\n                    {} \\<Longrightarrow>\n                    P \\<alpha> w1 (e2 # w2);\n            fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {} \\<Longrightarrow>\n            P \\<alpha> (e1 # w1) w2\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2);\n        w = []\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> [] w\n 2. \\<And>\\<alpha> w a list.\n       \\<lbrakk>\\<And>\\<alpha>. P \\<alpha> [] [];\n        \\<And>\\<alpha> ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>\\<alpha> z aa. P \\<alpha> (z # aa) [];\n        \\<And>\\<alpha> e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                    mon_pl (map \\<alpha> (e2 # w2)) =\n                    {} \\<Longrightarrow>\n                    P \\<alpha> w1 (e2 # w2);\n            fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {} \\<Longrightarrow>\n            P \\<alpha> (e1 # w1) w2\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2);\n        w = a # list\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> [] w\n 3. \\<And>v va \\<alpha>.\n       \\<lbrakk>\\<And>\\<alpha>. P \\<alpha> [] [];\n        \\<And>\\<alpha> ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>\\<alpha> z aa. P \\<alpha> (z # aa) [];\n        \\<And>\\<alpha> e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                    mon_pl (map \\<alpha> (e2 # w2)) =\n                    {} \\<Longrightarrow>\n                    P \\<alpha> w1 (e2 # w2);\n            fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {} \\<Longrightarrow>\n            P \\<alpha> (e1 # w1) w2\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> (v # va) []\n 4. \\<And>e1 w1 \\<alpha> e2 w2.\n       \\<lbrakk>\\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                         mon_pl (map \\<alpha> (e2 # w2)) =\n                         {};\n                 \\<And>\\<alpha>. P \\<alpha> [] [];\n                 \\<And>\\<alpha> ad ae. P \\<alpha> [] (ad # ae);\n                 \\<And>\\<alpha> z aa. P \\<alpha> (z # aa) [];\n                 \\<And>\\<alpha> e1 w1 e2 w2.\n                    \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                             mon_pl (map \\<alpha> (e2 # w2)) =\n                             {} \\<Longrightarrow>\n                             P \\<alpha> w1 (e2 # w2);\n                     fst (\\<alpha> e2) \\<inter>\n                     mon_pl (map \\<alpha> (e1 # w1)) =\n                     {} \\<Longrightarrow>\n                     P \\<alpha> (e1 # w1) w2\\<rbrakk>\n                    \\<Longrightarrow> P \\<alpha> (e1 # w1)\n (e2 # w2)\\<rbrakk>\n                \\<Longrightarrow> P \\<alpha> w1 (e2 # w2);\n        \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                 mon_pl (map \\<alpha> (e1 # w1)) =\n                 {};\n         \\<And>\\<alpha>. P \\<alpha> [] [];\n         \\<And>\\<alpha> ad ae. P \\<alpha> [] (ad # ae);\n         \\<And>\\<alpha> z aa. P \\<alpha> (z # aa) [];\n         \\<And>\\<alpha> e1 w1 e2 w2.\n            \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                     mon_pl (map \\<alpha> (e2 # w2)) =\n                     {} \\<Longrightarrow>\n                     P \\<alpha> w1 (e2 # w2);\n             fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n             {} \\<Longrightarrow>\n             P \\<alpha> (e1 # w1) w2\\<rbrakk>\n            \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n        \\<Longrightarrow> P \\<alpha> (e1 # w1) w2;\n        \\<And>\\<alpha>. P \\<alpha> [] [];\n        \\<And>\\<alpha> ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>\\<alpha> z aa. P \\<alpha> (z # aa) [];\n        \\<And>\\<alpha> e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                    mon_pl (map \\<alpha> (e2 # w2)) =\n                    {} \\<Longrightarrow>\n                    P \\<alpha> w1 (e2 # w2);\n            fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {} \\<Longrightarrow>\n            P \\<alpha> (e1 # w1) w2\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma cil_induct_fix\\<alpha>: \"\\<lbrakk>\n  P \\<alpha> [] []; \n  \\<And>ad ae. P \\<alpha> [] (ad # ae); \n  \\<And>z aa. P \\<alpha> (z # aa) [];\n  \\<And>e1 w1 e2 w2.\n    \\<lbrakk>fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) = {} \\<longrightarrow> P \\<alpha> (e1 # w1) w2;\n     fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) = {} \\<longrightarrow> P \\<alpha> w1 (e2 # w2)\\<rbrakk>\n     \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n  \\<Longrightarrow> P \\<alpha> v w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n     \\<And>z aa. P \\<alpha> (z # aa) [];\n     \\<And>e1 w1 e2 w2.\n        \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                 mon_pl (map \\<alpha> (e1 # w1)) =\n                 {} \\<longrightarrow>\n                 P \\<alpha> (e1 # w1) w2;\n         fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) =\n         {} \\<longrightarrow>\n         P \\<alpha> w1 (e2 # w2)\\<rbrakk>\n        \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n    \\<Longrightarrow> P \\<alpha> v w", "apply (induct v \\<alpha> w rule: cil.induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>\\<alpha> w.\n       \\<lbrakk>P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>z aa. P \\<alpha> (z # aa) [];\n        \\<And>e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                    mon_pl (map \\<alpha> (e1 # w1)) =\n                    {} \\<longrightarrow>\n                    P \\<alpha> (e1 # w1) w2;\n            fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) =\n            {} \\<longrightarrow>\n            P \\<alpha> w1 (e2 # w2)\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> [] w\n 2. \\<And>v va \\<alpha>.\n       \\<lbrakk>P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>z aa. P \\<alpha> (z # aa) [];\n        \\<And>e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                    mon_pl (map \\<alpha> (e1 # w1)) =\n                    {} \\<longrightarrow>\n                    P \\<alpha> (e1 # w1) w2;\n            fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) =\n            {} \\<longrightarrow>\n            P \\<alpha> w1 (e2 # w2)\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> (v # va) []\n 3. \\<And>e1 w1 \\<alpha> e2 w2.\n       \\<lbrakk>\\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                         mon_pl (map \\<alpha> (e2 # w2)) =\n                         {};\n                 P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n                 \\<And>z aa. P \\<alpha> (z # aa) [];\n                 \\<And>e1 w1 e2 w2.\n                    \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                             mon_pl (map \\<alpha> (e1 # w1)) =\n                             {} \\<longrightarrow>\n                             P \\<alpha> (e1 # w1) w2;\n                     fst (\\<alpha> e1) \\<inter>\n                     mon_pl (map \\<alpha> (e2 # w2)) =\n                     {} \\<longrightarrow>\n                     P \\<alpha> w1 (e2 # w2)\\<rbrakk>\n                    \\<Longrightarrow> P \\<alpha> (e1 # w1)\n (e2 # w2)\\<rbrakk>\n                \\<Longrightarrow> P \\<alpha> w1 (e2 # w2);\n        \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                 mon_pl (map \\<alpha> (e1 # w1)) =\n                 {};\n         P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n         \\<And>z aa. P \\<alpha> (z # aa) [];\n         \\<And>e1 w1 e2 w2.\n            \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                     mon_pl (map \\<alpha> (e1 # w1)) =\n                     {} \\<longrightarrow>\n                     P \\<alpha> (e1 # w1) w2;\n             fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) =\n             {} \\<longrightarrow>\n             P \\<alpha> w1 (e2 # w2)\\<rbrakk>\n            \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n        \\<Longrightarrow> P \\<alpha> (e1 # w1) w2;\n        P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>z aa. P \\<alpha> (z # aa) [];\n        \\<And>e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                    mon_pl (map \\<alpha> (e1 # w1)) =\n                    {} \\<longrightarrow>\n                    P \\<alpha> (e1 # w1) w2;\n            fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) =\n            {} \\<longrightarrow>\n            P \\<alpha> w1 (e2 # w2)\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)", "apply (case_tac w)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>\\<alpha> w.\n       \\<lbrakk>P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>z aa. P \\<alpha> (z # aa) [];\n        \\<And>e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                    mon_pl (map \\<alpha> (e1 # w1)) =\n                    {} \\<longrightarrow>\n                    P \\<alpha> (e1 # w1) w2;\n            fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) =\n            {} \\<longrightarrow>\n            P \\<alpha> w1 (e2 # w2)\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2);\n        w = []\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> [] w\n 2. \\<And>\\<alpha> w a list.\n       \\<lbrakk>P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>z aa. P \\<alpha> (z # aa) [];\n        \\<And>e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                    mon_pl (map \\<alpha> (e1 # w1)) =\n                    {} \\<longrightarrow>\n                    P \\<alpha> (e1 # w1) w2;\n            fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) =\n            {} \\<longrightarrow>\n            P \\<alpha> w1 (e2 # w2)\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2);\n        w = a # list\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> [] w\n 3. \\<And>v va \\<alpha>.\n       \\<lbrakk>P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>z aa. P \\<alpha> (z # aa) [];\n        \\<And>e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                    mon_pl (map \\<alpha> (e1 # w1)) =\n                    {} \\<longrightarrow>\n                    P \\<alpha> (e1 # w1) w2;\n            fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) =\n            {} \\<longrightarrow>\n            P \\<alpha> w1 (e2 # w2)\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> (v # va) []\n 4. \\<And>e1 w1 \\<alpha> e2 w2.\n       \\<lbrakk>\\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                         mon_pl (map \\<alpha> (e2 # w2)) =\n                         {};\n                 P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n                 \\<And>z aa. P \\<alpha> (z # aa) [];\n                 \\<And>e1 w1 e2 w2.\n                    \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                             mon_pl (map \\<alpha> (e1 # w1)) =\n                             {} \\<longrightarrow>\n                             P \\<alpha> (e1 # w1) w2;\n                     fst (\\<alpha> e1) \\<inter>\n                     mon_pl (map \\<alpha> (e2 # w2)) =\n                     {} \\<longrightarrow>\n                     P \\<alpha> w1 (e2 # w2)\\<rbrakk>\n                    \\<Longrightarrow> P \\<alpha> (e1 # w1)\n (e2 # w2)\\<rbrakk>\n                \\<Longrightarrow> P \\<alpha> w1 (e2 # w2);\n        \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                 mon_pl (map \\<alpha> (e1 # w1)) =\n                 {};\n         P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n         \\<And>z aa. P \\<alpha> (z # aa) [];\n         \\<And>e1 w1 e2 w2.\n            \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                     mon_pl (map \\<alpha> (e1 # w1)) =\n                     {} \\<longrightarrow>\n                     P \\<alpha> (e1 # w1) w2;\n             fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) =\n             {} \\<longrightarrow>\n             P \\<alpha> w1 (e2 # w2)\\<rbrakk>\n            \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n        \\<Longrightarrow> P \\<alpha> (e1 # w1) w2;\n        P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>z aa. P \\<alpha> (z # aa) [];\n        \\<And>e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                    mon_pl (map \\<alpha> (e1 # w1)) =\n                    {} \\<longrightarrow>\n                    P \\<alpha> (e1 # w1) w2;\n            fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) =\n            {} \\<longrightarrow>\n            P \\<alpha> w1 (e2 # w2)\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma cil_induct_fix\\<alpha>'[case_names both_empty left_empty right_empty append]: \"\\<lbrakk>\n  P \\<alpha> [] []; \n  \\<And>ad ae. P \\<alpha> [] (ad # ae); \n  \\<And>z aa. P \\<alpha> (z # aa) [];\n  \\<And>e1 w1 e2 w2. \\<lbrakk>\n    fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) = {} \\<Longrightarrow> P \\<alpha> w1 (e2 # w2);\n    fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) = {} \\<Longrightarrow> P \\<alpha> (e1 # w1) w2\\<rbrakk> \n    \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\n  \\<rbrakk> \\<Longrightarrow> P \\<alpha> wa wb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n     \\<And>z aa. P \\<alpha> (z # aa) [];\n     \\<And>e1 w1 e2 w2.\n        \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                 mon_pl (map \\<alpha> (e2 # w2)) =\n                 {} \\<Longrightarrow>\n                 P \\<alpha> w1 (e2 # w2);\n         fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n         {} \\<Longrightarrow>\n         P \\<alpha> (e1 # w1) w2\\<rbrakk>\n        \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n    \\<Longrightarrow> P \\<alpha> wa wb", "apply (induct wa \\<alpha> wb rule: cil.induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>\\<alpha> w.\n       \\<lbrakk>P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>z aa. P \\<alpha> (z # aa) [];\n        \\<And>e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                    mon_pl (map \\<alpha> (e2 # w2)) =\n                    {} \\<Longrightarrow>\n                    P \\<alpha> w1 (e2 # w2);\n            fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {} \\<Longrightarrow>\n            P \\<alpha> (e1 # w1) w2\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> [] w\n 2. \\<And>v va \\<alpha>.\n       \\<lbrakk>P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>z aa. P \\<alpha> (z # aa) [];\n        \\<And>e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                    mon_pl (map \\<alpha> (e2 # w2)) =\n                    {} \\<Longrightarrow>\n                    P \\<alpha> w1 (e2 # w2);\n            fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {} \\<Longrightarrow>\n            P \\<alpha> (e1 # w1) w2\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> (v # va) []\n 3. \\<And>e1 w1 \\<alpha> e2 w2.\n       \\<lbrakk>\\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                         mon_pl (map \\<alpha> (e2 # w2)) =\n                         {};\n                 P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n                 \\<And>z aa. P \\<alpha> (z # aa) [];\n                 \\<And>e1 w1 e2 w2.\n                    \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                             mon_pl (map \\<alpha> (e2 # w2)) =\n                             {} \\<Longrightarrow>\n                             P \\<alpha> w1 (e2 # w2);\n                     fst (\\<alpha> e2) \\<inter>\n                     mon_pl (map \\<alpha> (e1 # w1)) =\n                     {} \\<Longrightarrow>\n                     P \\<alpha> (e1 # w1) w2\\<rbrakk>\n                    \\<Longrightarrow> P \\<alpha> (e1 # w1)\n (e2 # w2)\\<rbrakk>\n                \\<Longrightarrow> P \\<alpha> w1 (e2 # w2);\n        \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                 mon_pl (map \\<alpha> (e1 # w1)) =\n                 {};\n         P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n         \\<And>z aa. P \\<alpha> (z # aa) [];\n         \\<And>e1 w1 e2 w2.\n            \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                     mon_pl (map \\<alpha> (e2 # w2)) =\n                     {} \\<Longrightarrow>\n                     P \\<alpha> w1 (e2 # w2);\n             fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n             {} \\<Longrightarrow>\n             P \\<alpha> (e1 # w1) w2\\<rbrakk>\n            \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n        \\<Longrightarrow> P \\<alpha> (e1 # w1) w2;\n        P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>z aa. P \\<alpha> (z # aa) [];\n        \\<And>e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                    mon_pl (map \\<alpha> (e2 # w2)) =\n                    {} \\<Longrightarrow>\n                    P \\<alpha> w1 (e2 # w2);\n            fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {} \\<Longrightarrow>\n            P \\<alpha> (e1 # w1) w2\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)", "apply (case_tac w)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>\\<alpha> w.\n       \\<lbrakk>P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>z aa. P \\<alpha> (z # aa) [];\n        \\<And>e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                    mon_pl (map \\<alpha> (e2 # w2)) =\n                    {} \\<Longrightarrow>\n                    P \\<alpha> w1 (e2 # w2);\n            fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {} \\<Longrightarrow>\n            P \\<alpha> (e1 # w1) w2\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2);\n        w = []\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> [] w\n 2. \\<And>\\<alpha> w a list.\n       \\<lbrakk>P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>z aa. P \\<alpha> (z # aa) [];\n        \\<And>e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                    mon_pl (map \\<alpha> (e2 # w2)) =\n                    {} \\<Longrightarrow>\n                    P \\<alpha> w1 (e2 # w2);\n            fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {} \\<Longrightarrow>\n            P \\<alpha> (e1 # w1) w2\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2);\n        w = a # list\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> [] w\n 3. \\<And>v va \\<alpha>.\n       \\<lbrakk>P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>z aa. P \\<alpha> (z # aa) [];\n        \\<And>e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                    mon_pl (map \\<alpha> (e2 # w2)) =\n                    {} \\<Longrightarrow>\n                    P \\<alpha> w1 (e2 # w2);\n            fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {} \\<Longrightarrow>\n            P \\<alpha> (e1 # w1) w2\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> (v # va) []\n 4. \\<And>e1 w1 \\<alpha> e2 w2.\n       \\<lbrakk>\\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                         mon_pl (map \\<alpha> (e2 # w2)) =\n                         {};\n                 P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n                 \\<And>z aa. P \\<alpha> (z # aa) [];\n                 \\<And>e1 w1 e2 w2.\n                    \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                             mon_pl (map \\<alpha> (e2 # w2)) =\n                             {} \\<Longrightarrow>\n                             P \\<alpha> w1 (e2 # w2);\n                     fst (\\<alpha> e2) \\<inter>\n                     mon_pl (map \\<alpha> (e1 # w1)) =\n                     {} \\<Longrightarrow>\n                     P \\<alpha> (e1 # w1) w2\\<rbrakk>\n                    \\<Longrightarrow> P \\<alpha> (e1 # w1)\n (e2 # w2)\\<rbrakk>\n                \\<Longrightarrow> P \\<alpha> w1 (e2 # w2);\n        \\<lbrakk>fst (\\<alpha> e2) \\<inter>\n                 mon_pl (map \\<alpha> (e1 # w1)) =\n                 {};\n         P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n         \\<And>z aa. P \\<alpha> (z # aa) [];\n         \\<And>e1 w1 e2 w2.\n            \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                     mon_pl (map \\<alpha> (e2 # w2)) =\n                     {} \\<Longrightarrow>\n                     P \\<alpha> w1 (e2 # w2);\n             fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n             {} \\<Longrightarrow>\n             P \\<alpha> (e1 # w1) w2\\<rbrakk>\n            \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n        \\<Longrightarrow> P \\<alpha> (e1 # w1) w2;\n        P \\<alpha> [] []; \\<And>ad ae. P \\<alpha> [] (ad # ae);\n        \\<And>z aa. P \\<alpha> (z # aa) [];\n        \\<And>e1 w1 e2 w2.\n           \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                    mon_pl (map \\<alpha> (e2 # w2)) =\n                    {} \\<Longrightarrow>\n                    P \\<alpha> w1 (e2 # w2);\n            fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n            {} \\<Longrightarrow>\n            P \\<alpha> (e1 # w1) w2\\<rbrakk>\n           \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)\\<rbrakk>\n       \\<Longrightarrow> P \\<alpha> (e1 # w1) (e2 # w2)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma [simp]: \"w\\<otimes>\\<^bsub>\\<alpha>\\<^esub>[] = {w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<otimes>\\<^bsub>\\<alpha>\\<^esub> [] = {w}", "by (cases w, auto)"], ["", "lemma cil_contains_empty[rule_format, simp]: \"([] \\<in> wa\\<otimes>\\<^bsub>\\<alpha>\\<^esub>wb) = (wa=[] \\<and> wb=[])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([] \\<in> wa \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb) =\n    (wa = [] \\<and> wb = [])", "by (induct wa \\<alpha> wb rule: cil.induct) auto"], ["", "lemma cil_cons_cases[cases set, case_names left right]: \"\\<lbrakk> e#w \\<in> w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2; \n  !!w1'. \\<lbrakk>w1=e#w1'; w\\<in>w1'\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2; fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w2) = {} \\<rbrakk> \\<Longrightarrow> P;\n  !!w2'. \\<lbrakk>w2=e#w2'; w\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2'; fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {} \\<rbrakk> \\<Longrightarrow> P\n\\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n     \\<And>w1'.\n        \\<lbrakk>w1 = e # w1';\n         w \\<in> w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n         fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w2) = {}\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>w2'.\n        \\<lbrakk>w2 = e # w2';\n         w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n         fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {}\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (cases rule: cil_cases) auto"], ["", "lemma cil_set_induct[induct set, case_names empty left right]: \"!!\\<alpha> w1 w2. \\<lbrakk> \n    w\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2; \n    !!\\<alpha>. P [] \\<alpha> [] []; \n    !!\\<alpha> e w' w1' w2. \\<lbrakk>w'\\<in>w1'\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2; fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w2) = {}; \n                      P w' \\<alpha> w1' w2 \\<rbrakk> \\<Longrightarrow> P (e#w') \\<alpha> (e#w1') w2;\n    !!\\<alpha> e w' w2' w1. \\<lbrakk>w'\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2'; fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {}; \n                      P w' \\<alpha> w1 w2' \\<rbrakk> \\<Longrightarrow> P (e#w') \\<alpha> w1 (e#w2')\n  \\<rbrakk> \\<Longrightarrow> P w \\<alpha> w1 w2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> w1 w2.\n       \\<lbrakk>w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n        \\<And>\\<alpha>. P [] \\<alpha> [] [];\n        \\<And>\\<alpha> e w' w1' w2.\n           \\<lbrakk>w' \\<in> w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n            fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w2) = {};\n            P w' \\<alpha> w1' w2\\<rbrakk>\n           \\<Longrightarrow> P (e # w') \\<alpha> (e # w1') w2;\n        \\<And>\\<alpha> e w' w2' w1.\n           \\<lbrakk>w' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n            fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {};\n            P w' \\<alpha> w1 w2'\\<rbrakk>\n           \\<Longrightarrow> P (e # w') \\<alpha> w1 (e # w2')\\<rbrakk>\n       \\<Longrightarrow> P w \\<alpha> w1 w2", "by (induct w) (auto intro!: cil_contains_empty elim: cil_cons_cases)"], ["", "lemma cil_set_induct_fix\\<alpha>[induct set, case_names empty left right]: \"!!w1 w2. \\<lbrakk> \n    w\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2; \n    P [] \\<alpha> [] []; \n    !!e w' w1' w2. \\<lbrakk>w'\\<in>w1'\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2; fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w2) = {}; \n                    P w' \\<alpha> w1' w2 \\<rbrakk> \\<Longrightarrow> P (e#w') \\<alpha> (e#w1') w2;\n    !!e w' w2' w1. \\<lbrakk>w'\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2'; fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {}; \n                    P w' \\<alpha> w1 w2' \\<rbrakk> \\<Longrightarrow> P (e#w') \\<alpha> w1 (e#w2')\n  \\<rbrakk> \\<Longrightarrow> P w \\<alpha> w1 w2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w1 w2.\n       \\<lbrakk>w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n        P [] \\<alpha> [] [];\n        \\<And>e w' w1' w2.\n           \\<lbrakk>w' \\<in> w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n            fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w2) = {};\n            P w' \\<alpha> w1' w2\\<rbrakk>\n           \\<Longrightarrow> P (e # w') \\<alpha> (e # w1') w2;\n        \\<And>e w' w2' w1.\n           \\<lbrakk>w' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n            fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {};\n            P w' \\<alpha> w1 w2'\\<rbrakk>\n           \\<Longrightarrow> P (e # w') \\<alpha> w1 (e # w2')\\<rbrakk>\n       \\<Longrightarrow> P w \\<alpha> w1 w2", "by (induct w) (auto intro!: cil_contains_empty elim: cil_cons_cases)"], ["", "lemma cil_cons1: \"\\<lbrakk>w\\<in>wa\\<otimes>\\<^bsub>\\<alpha>\\<^esub>wb; fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wb) = {}\\<rbrakk> \n                  \\<Longrightarrow> e#w \\<in> e#wa \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<in> wa \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb;\n     fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wb) = {}\\<rbrakk>\n    \\<Longrightarrow> e # w\n                      \\<in> e # wa \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb", "by (cases wb) auto"], ["", "lemma cil_cons2: \"\\<lbrakk>w\\<in>wa\\<otimes>\\<^bsub>\\<alpha>\\<^esub>wb; fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wa) = {}\\<rbrakk> \n                  \\<Longrightarrow> e#w \\<in> wa \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e#wb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<in> wa \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb;\n     fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wa) = {}\\<rbrakk>\n    \\<Longrightarrow> e # w\n                      \\<in> wa \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e # wb", "by (cases wa) auto"], ["", "subsection \"Properties of consistent interleaving\"\n\n\\<comment> \\<open>Consistent interleaving is a restriction of interleaving\\<close>"], ["", "lemma cil_subset_il: \"w\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w' \\<subseteq> w\\<otimes>w'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w' \\<subseteq> w \\<otimes> w'", "apply (induct w \\<alpha> w' rule: cil.induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>\\<alpha> w.\n       [] \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w \\<subseteq> [] \\<otimes> w\n 2. \\<And>v va \\<alpha>.\n       v # va \\<otimes>\\<^bsub>\\<alpha>\\<^esub> []\n       \\<subseteq> v # va \\<otimes> []\n 3. \\<And>e1 w1 \\<alpha> e2 w2.\n       \\<lbrakk>fst (\\<alpha> e1) \\<inter> mon_pl (map \\<alpha> (e2 # w2)) =\n                {} \\<Longrightarrow>\n                w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2\n                \\<subseteq> w1 \\<otimes> e2 # w2;\n        fst (\\<alpha> e2) \\<inter> mon_pl (map \\<alpha> (e1 # w1)) =\n        {} \\<Longrightarrow>\n        e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n        \\<subseteq> e1 # w1 \\<otimes> w2\\<rbrakk>\n       \\<Longrightarrow> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2\n                         \\<subseteq> e1 # w1 \\<otimes> e2 # w2", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 w1 \\<alpha> e2 w2.\n       \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                (fst (\\<alpha> e2) \\<union> snd (\\<alpha> e2) \\<union>\n                 mon_pl (map \\<alpha> w2)) =\n                {} \\<Longrightarrow>\n                w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2\n                \\<subseteq> w1 \\<otimes> e2 # w2;\n        fst (\\<alpha> e2) \\<inter>\n        (fst (\\<alpha> e1) \\<union> snd (\\<alpha> e1) \\<union>\n         mon_pl (map \\<alpha> w1)) =\n        {} \\<Longrightarrow>\n        e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n        \\<subseteq> w2 \\<otimes> e1 # w1\\<rbrakk>\n       \\<Longrightarrow> (fst (\\<alpha> e1) \\<inter>\n                          (fst (\\<alpha> e2) \\<union>\n                           snd (\\<alpha> e2) \\<union>\n                           mon_pl (map \\<alpha> w2)) =\n                          {} \\<longrightarrow>\n                          (fst (\\<alpha> e2) \\<inter>\n                           (fst (\\<alpha> e1) \\<union>\n                            snd (\\<alpha> e1) \\<union>\n                            mon_pl (map \\<alpha> w1)) =\n                           {} \\<longrightarrow>\n                           (#) e1 `\n                           (w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2)\n                           \\<subseteq> (#) e1 `\n (w1 \\<otimes> e2 # w2) \\<union>\n (#) e2 ` (w2 \\<otimes> e1 # w1) \\<and>\n                           (#) e2 `\n                           (e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2)\n                           \\<subseteq> (#) e1 `\n (w1 \\<otimes> e2 # w2) \\<union>\n (#) e2 ` (w2 \\<otimes> e1 # w1)) \\<and>\n                          (fst (\\<alpha> e2) \\<inter>\n                           (fst (\\<alpha> e1) \\<union>\n                            snd (\\<alpha> e1) \\<union>\n                            mon_pl (map \\<alpha> w1)) \\<noteq>\n                           {} \\<longrightarrow>\n                           (#) e1 `\n                           (w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2)\n                           \\<subseteq> (#) e1 `\n (w1 \\<otimes> e2 # w2) \\<union>\n (#) e2 ` (w2 \\<otimes> e1 # w1))) \\<and>\n                         (fst (\\<alpha> e1) \\<inter>\n                          (fst (\\<alpha> e2) \\<union>\n                           snd (\\<alpha> e2) \\<union>\n                           mon_pl (map \\<alpha> w2)) \\<noteq>\n                          {} \\<longrightarrow>\n                          fst (\\<alpha> e2) \\<inter>\n                          (fst (\\<alpha> e1) \\<union>\n                           snd (\\<alpha> e1) \\<union>\n                           mon_pl (map \\<alpha> w1)) =\n                          {} \\<longrightarrow>\n                          (#) e2 `\n                          (e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2)\n                          \\<subseteq> (#) e1 `\n(w1 \\<otimes> e2 # w2) \\<union>\n(#) e2 ` (w2 \\<otimes> e1 # w1))", "apply safe"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>e1 w1 \\<alpha> e2 w2 x xa.\n       \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                (fst (\\<alpha> e2) \\<union> snd (\\<alpha> e2) \\<union>\n                 mon_pl (map \\<alpha> w2)) =\n                {} \\<Longrightarrow>\n                w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2\n                \\<subseteq> w1 \\<otimes> e2 # w2;\n        fst (\\<alpha> e2) \\<inter>\n        (fst (\\<alpha> e1) \\<union> snd (\\<alpha> e1) \\<union>\n         mon_pl (map \\<alpha> w1)) =\n        {} \\<Longrightarrow>\n        e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n        \\<subseteq> w2 \\<otimes> e1 # w1;\n        fst (\\<alpha> e1) \\<inter>\n        (fst (\\<alpha> e2) \\<union> snd (\\<alpha> e2) \\<union>\n         mon_pl (map \\<alpha> w2)) =\n        {};\n        fst (\\<alpha> e2) \\<inter>\n        (fst (\\<alpha> e1) \\<union> snd (\\<alpha> e1) \\<union>\n         mon_pl (map \\<alpha> w1)) =\n        {};\n        xa \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n        e1 # xa \\<notin> (#) e2 ` (w2 \\<otimes> e1 # w1)\\<rbrakk>\n       \\<Longrightarrow> e1 # xa \\<in> (#) e1 ` (w1 \\<otimes> e2 # w2)\n 2. \\<And>e1 w1 \\<alpha> e2 w2 x xa.\n       \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                (fst (\\<alpha> e2) \\<union> snd (\\<alpha> e2) \\<union>\n                 mon_pl (map \\<alpha> w2)) =\n                {} \\<Longrightarrow>\n                w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2\n                \\<subseteq> w1 \\<otimes> e2 # w2;\n        fst (\\<alpha> e2) \\<inter>\n        (fst (\\<alpha> e1) \\<union> snd (\\<alpha> e1) \\<union>\n         mon_pl (map \\<alpha> w1)) =\n        {} \\<Longrightarrow>\n        e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n        \\<subseteq> w2 \\<otimes> e1 # w1;\n        fst (\\<alpha> e1) \\<inter>\n        (fst (\\<alpha> e2) \\<union> snd (\\<alpha> e2) \\<union>\n         mon_pl (map \\<alpha> w2)) =\n        {};\n        fst (\\<alpha> e2) \\<inter>\n        (fst (\\<alpha> e1) \\<union> snd (\\<alpha> e1) \\<union>\n         mon_pl (map \\<alpha> w1)) =\n        {};\n        xa \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n        e2 # xa \\<notin> (#) e2 ` (w2 \\<otimes> e1 # w1)\\<rbrakk>\n       \\<Longrightarrow> e2 # xa \\<in> (#) e1 ` (w1 \\<otimes> e2 # w2)\n 3. \\<And>e1 w1 \\<alpha> e2 w2 x xa xb.\n       \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                (fst (\\<alpha> e2) \\<union> snd (\\<alpha> e2) \\<union>\n                 mon_pl (map \\<alpha> w2)) =\n                {} \\<Longrightarrow>\n                w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2\n                \\<subseteq> w1 \\<otimes> e2 # w2;\n        fst (\\<alpha> e2) \\<inter>\n        (fst (\\<alpha> e1) \\<union> snd (\\<alpha> e1) \\<union>\n         mon_pl (map \\<alpha> w1)) =\n        {} \\<Longrightarrow>\n        e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n        \\<subseteq> w2 \\<otimes> e1 # w1;\n        fst (\\<alpha> e1) \\<inter>\n        (fst (\\<alpha> e2) \\<union> snd (\\<alpha> e2) \\<union>\n         mon_pl (map \\<alpha> w2)) =\n        {};\n        xa \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n        e1 # xa \\<notin> (#) e2 ` (w2 \\<otimes> e1 # w1);\n        e1 # xa \\<notin> (#) e1 ` (w1 \\<otimes> e2 # w2);\n        xb \\<in> fst (\\<alpha> e2); xb \\<in> fst (\\<alpha> e1)\\<rbrakk>\n       \\<Longrightarrow> xb \\<in> {}\n 4. \\<And>e1 w1 \\<alpha> e2 w2 x xa xb.\n       \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                (fst (\\<alpha> e2) \\<union> snd (\\<alpha> e2) \\<union>\n                 mon_pl (map \\<alpha> w2)) =\n                {} \\<Longrightarrow>\n                w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2\n                \\<subseteq> w1 \\<otimes> e2 # w2;\n        fst (\\<alpha> e2) \\<inter>\n        (fst (\\<alpha> e1) \\<union> snd (\\<alpha> e1) \\<union>\n         mon_pl (map \\<alpha> w1)) =\n        {} \\<Longrightarrow>\n        e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n        \\<subseteq> w2 \\<otimes> e1 # w1;\n        fst (\\<alpha> e1) \\<inter>\n        (fst (\\<alpha> e2) \\<union> snd (\\<alpha> e2) \\<union>\n         mon_pl (map \\<alpha> w2)) =\n        {};\n        xa \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n        e1 # xa \\<notin> (#) e2 ` (w2 \\<otimes> e1 # w1);\n        e1 # xa \\<notin> (#) e1 ` (w1 \\<otimes> e2 # w2);\n        xb \\<in> fst (\\<alpha> e2); xb \\<in> snd (\\<alpha> e1)\\<rbrakk>\n       \\<Longrightarrow> xb \\<in> {}\n 5. \\<And>e1 w1 \\<alpha> e2 w2 x xa xb.\n       \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                (fst (\\<alpha> e2) \\<union> snd (\\<alpha> e2) \\<union>\n                 mon_pl (map \\<alpha> w2)) =\n                {} \\<Longrightarrow>\n                w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2\n                \\<subseteq> w1 \\<otimes> e2 # w2;\n        fst (\\<alpha> e2) \\<inter>\n        (fst (\\<alpha> e1) \\<union> snd (\\<alpha> e1) \\<union>\n         mon_pl (map \\<alpha> w1)) =\n        {} \\<Longrightarrow>\n        e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n        \\<subseteq> w2 \\<otimes> e1 # w1;\n        fst (\\<alpha> e1) \\<inter>\n        (fst (\\<alpha> e2) \\<union> snd (\\<alpha> e2) \\<union>\n         mon_pl (map \\<alpha> w2)) =\n        {};\n        xa \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2;\n        e1 # xa \\<notin> (#) e2 ` (w2 \\<otimes> e1 # w1);\n        e1 # xa \\<notin> (#) e1 ` (w1 \\<otimes> e2 # w2);\n        xb \\<in> fst (\\<alpha> e2);\n        xb \\<in> mon_pl (map \\<alpha> w1)\\<rbrakk>\n       \\<Longrightarrow> xb \\<in> {}\n 6. \\<And>e1 w1 \\<alpha> e2 w2 x xa xb.\n       \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                (fst (\\<alpha> e2) \\<union> snd (\\<alpha> e2) \\<union>\n                 mon_pl (map \\<alpha> w2)) =\n                {} \\<Longrightarrow>\n                w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2\n                \\<subseteq> w1 \\<otimes> e2 # w2;\n        fst (\\<alpha> e2) \\<inter>\n        (fst (\\<alpha> e1) \\<union> snd (\\<alpha> e1) \\<union>\n         mon_pl (map \\<alpha> w1)) =\n        {} \\<Longrightarrow>\n        e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n        \\<subseteq> w2 \\<otimes> e1 # w1;\n        fst (\\<alpha> e2) \\<inter>\n        (fst (\\<alpha> e1) \\<union> snd (\\<alpha> e1) \\<union>\n         mon_pl (map \\<alpha> w1)) =\n        {};\n        xa \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n        e2 # xa \\<notin> (#) e2 ` (w2 \\<otimes> e1 # w1);\n        e2 # xa \\<notin> (#) e1 ` (w1 \\<otimes> e2 # w2);\n        xb \\<in> fst (\\<alpha> e1); xb \\<in> fst (\\<alpha> e2)\\<rbrakk>\n       \\<Longrightarrow> xb \\<in> {}\n 7. \\<And>e1 w1 \\<alpha> e2 w2 x xa xb.\n       \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                (fst (\\<alpha> e2) \\<union> snd (\\<alpha> e2) \\<union>\n                 mon_pl (map \\<alpha> w2)) =\n                {} \\<Longrightarrow>\n                w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2\n                \\<subseteq> w1 \\<otimes> e2 # w2;\n        fst (\\<alpha> e2) \\<inter>\n        (fst (\\<alpha> e1) \\<union> snd (\\<alpha> e1) \\<union>\n         mon_pl (map \\<alpha> w1)) =\n        {} \\<Longrightarrow>\n        e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n        \\<subseteq> w2 \\<otimes> e1 # w1;\n        fst (\\<alpha> e2) \\<inter>\n        (fst (\\<alpha> e1) \\<union> snd (\\<alpha> e1) \\<union>\n         mon_pl (map \\<alpha> w1)) =\n        {};\n        xa \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n        e2 # xa \\<notin> (#) e2 ` (w2 \\<otimes> e1 # w1);\n        e2 # xa \\<notin> (#) e1 ` (w1 \\<otimes> e2 # w2);\n        xb \\<in> fst (\\<alpha> e1); xb \\<in> snd (\\<alpha> e2)\\<rbrakk>\n       \\<Longrightarrow> xb \\<in> {}\n 8. \\<And>e1 w1 \\<alpha> e2 w2 x xa xb.\n       \\<lbrakk>fst (\\<alpha> e1) \\<inter>\n                (fst (\\<alpha> e2) \\<union> snd (\\<alpha> e2) \\<union>\n                 mon_pl (map \\<alpha> w2)) =\n                {} \\<Longrightarrow>\n                w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e2 # w2\n                \\<subseteq> w1 \\<otimes> e2 # w2;\n        fst (\\<alpha> e2) \\<inter>\n        (fst (\\<alpha> e1) \\<union> snd (\\<alpha> e1) \\<union>\n         mon_pl (map \\<alpha> w1)) =\n        {} \\<Longrightarrow>\n        e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n        \\<subseteq> w2 \\<otimes> e1 # w1;\n        fst (\\<alpha> e2) \\<inter>\n        (fst (\\<alpha> e1) \\<union> snd (\\<alpha> e1) \\<union>\n         mon_pl (map \\<alpha> w1)) =\n        {};\n        xa \\<in> e1 # w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n        e2 # xa \\<notin> (#) e2 ` (w2 \\<otimes> e1 # w1);\n        e2 # xa \\<notin> (#) e1 ` (w1 \\<otimes> e2 # w2);\n        xb \\<in> fst (\\<alpha> e1);\n        xb \\<in> mon_pl (map \\<alpha> w2)\\<rbrakk>\n       \\<Longrightarrow> xb \\<in> {}", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma cil_subset_il': \"w\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2 \\<Longrightarrow> w\\<in>w1\\<otimes>w2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2 \\<Longrightarrow>\n    w \\<in> w1 \\<otimes> w2", "using cil_subset_il"], ["proof (prove)\nusing this:\n  ?w \\<otimes>\\<^bsub>?\\<alpha>\\<^esub> ?w' \\<subseteq> ?w \\<otimes> ?w'\n\ngoal (1 subgoal):\n 1. w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2 \\<Longrightarrow>\n    w \\<in> w1 \\<otimes> w2", "by (auto)\n\n\\<comment> \\<open>Consistent interleaving preserves the set of letters of both operands\\<close>"], ["", "lemma cil_set: \"w\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2 \\<Longrightarrow> set w = set w1 \\<union> set w2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2 \\<Longrightarrow>\n    set w = set w1 \\<union> set w2", "by (induct rule: cil_set_induct_fix\\<alpha>) auto"], ["", "corollary cil_mon_pl: \"w\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2 \n  \\<Longrightarrow> mon_pl (map \\<alpha> w) = mon_pl (map \\<alpha> w1) \\<union> mon_pl (map \\<alpha> w2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2 \\<Longrightarrow>\n    mon_pl (map \\<alpha> w) =\n    mon_pl (map \\<alpha> w1) \\<union> mon_pl (map \\<alpha> w2)", "by (subst mon_pl_unconc[symmetric]) (simp add: mon_pl_set cil_set, blast 20)\n\n\\<comment> \\<open>Consistent interleaving preserves the length of both operands\\<close>"], ["", "lemma cil_length[rule_format]: \"\\<forall>w\\<in>wa\\<otimes>\\<^bsub>\\<alpha>\\<^esub>wb. length w = length wa + length wb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>wa \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wb.\n       length w = length wa + length wb", "by (induct rule: cil.induct) auto\n\n\\<comment> \\<open>Consistent interleaving contains all letters of each operand in the original order\\<close>"], ["", "lemma cil_ileq: \"w\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2 \\<Longrightarrow> w1\\<preceq>w \\<and> w2\\<preceq>w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2 \\<Longrightarrow>\n    w1 \\<preceq> w \\<and> w2 \\<preceq> w", "by (intro conjI cil_subset_il' ileq_interleave)\n\n\\<comment> \\<open>Consistent interleaving is commutative and associative\\<close>"], ["", "lemma cil_commute: \"w\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w' = w'\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w' =\n    w' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w", "by (induct rule: cil.induct) auto"], ["", "lemma cil_assoc1: \"!!wl w1 w2 w3. \\<lbrakk> w\\<in>wl\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w3; wl\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2 \\<rbrakk> \n  \\<Longrightarrow> \\<exists>wr. w\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>wr \\<and> wr\\<in>w2\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>wl w1 w2 w3.\n       \\<lbrakk>w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n        wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "proof (induct w rule: length_compl_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>wl w1 w2 w3.\n       \\<lbrakk>[] \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n        wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            [] \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n 2. \\<And>e l wl w1 w2 w3.\n       \\<lbrakk>\\<And>ll wl w1 w2 w3.\n                   \\<lbrakk>length ll \\<le> length l;\n                    ll \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n                    wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>wr.\n  ll \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n  wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n        e # l \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n        wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # l\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "case Nil"], ["proof (state)\nthis:\n  [] \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n  wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n\ngoal (2 subgoals):\n 1. \\<And>wl w1 w2 w3.\n       \\<lbrakk>[] \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n        wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            [] \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n 2. \\<And>e l wl w1 w2 w3.\n       \\<lbrakk>\\<And>ll wl w1 w2 w3.\n                   \\<lbrakk>length ll \\<le> length l;\n                    ll \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n                    wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>wr.\n  ll \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n  wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n        e # l \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n        wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # l\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "thus ?case"], ["proof (prove)\nusing this:\n  [] \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n  wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n\ngoal (1 subgoal):\n 1. \\<exists>wr.\n       [] \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n       wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "by auto"], ["proof (state)\nthis:\n  \\<exists>wr.\n     [] \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n     wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n\ngoal (1 subgoal):\n 1. \\<And>e l wl w1 w2 w3.\n       \\<lbrakk>\\<And>ll wl w1 w2 w3.\n                   \\<lbrakk>length ll \\<le> length l;\n                    ll \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n                    wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>wr.\n  ll \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n  wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n        e # l \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n        wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # l\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e l wl w1 w2 w3.\n       \\<lbrakk>\\<And>ll wl w1 w2 w3.\n                   \\<lbrakk>length ll \\<le> length l;\n                    ll \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n                    wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>wr.\n  ll \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n  wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n        e # l \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n        wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # l\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "case (Cons e w)"], ["proof (state)\nthis:\n  \\<lbrakk>length ?ll \\<le> length w;\n   ?ll \\<in> ?wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> ?w3.0;\n   ?wl \\<in> ?w1.0 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> ?w2.0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>wr.\n                       ?ll\n                       \\<in> ?w1.0 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                       wr \\<in> ?w2.0 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> ?w3.0\n  e # w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n  wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n\ngoal (1 subgoal):\n 1. \\<And>e l wl w1 w2 w3.\n       \\<lbrakk>\\<And>ll wl w1 w2 w3.\n                   \\<lbrakk>length ll \\<le> length l;\n                    ll \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n                    wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>wr.\n  ll \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n  wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n        e # l \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n        wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # l\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "from Cons.prems(1)"], ["proof (chain)\npicking this:\n  e # w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "show ?case"], ["proof (prove)\nusing this:\n  e # w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n\ngoal (1 subgoal):\n 1. \\<exists>wr.\n       e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n       wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "proof (cases rule: cil_cons_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>w1'.\n       \\<lbrakk>wl = e # w1';\n        w \\<in> w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w3) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n 2. \\<And>w2'.\n       \\<lbrakk>w3 = e # w2';\n        w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wl) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "case (left wl')"], ["proof (state)\nthis:\n  wl = e # wl'\n  w \\<in> wl' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w3) = {}\n\ngoal (2 subgoals):\n 1. \\<And>w1'.\n       \\<lbrakk>wl = e # w1';\n        w \\<in> w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w3) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n 2. \\<And>w2'.\n       \\<lbrakk>w3 = e # w2';\n        w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wl) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "with Cons.prems(2)"], ["proof (chain)\npicking this:\n  wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n  wl = e # wl'\n  w \\<in> wl' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w3) = {}", "have \"e#wl' \\<in> w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2\""], ["proof (prove)\nusing this:\n  wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n  wl = e # wl'\n  w \\<in> wl' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w3) = {}\n\ngoal (1 subgoal):\n 1. e # wl' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2", "by simp"], ["proof (state)\nthis:\n  e # wl' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n\ngoal (2 subgoals):\n 1. \\<And>w1'.\n       \\<lbrakk>wl = e # w1';\n        w \\<in> w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3;\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w3) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n 2. \\<And>w2'.\n       \\<lbrakk>w3 = e # w2';\n        w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wl) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "thus ?thesis"], ["proof (prove)\nusing this:\n  e # wl' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n\ngoal (1 subgoal):\n 1. \\<exists>wr.\n       e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n       wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "proof (cases rule: cil_cons_cases[case_names left' right'])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>w1'.\n       \\<lbrakk>w1 = e # w1';\n        wl' \\<in> w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w2) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n 2. \\<And>w2'.\n       \\<lbrakk>w2 = e # w2';\n        wl' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "case (left' w1')"], ["proof (state)\nthis:\n  w1 = e # w1'\n  wl' \\<in> w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w2) = {}\n\ngoal (2 subgoals):\n 1. \\<And>w1'.\n       \\<lbrakk>w1 = e # w1';\n        wl' \\<in> w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w2) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n 2. \\<And>w2'.\n       \\<lbrakk>w2 = e # w2';\n        wl' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "from Cons.hyps[OF _ left(2) left'(2)]"], ["proof (chain)\npicking this:\n  length w \\<le> length w \\<Longrightarrow>\n  \\<exists>wr.\n     w \\<in> w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n     wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "obtain wr where IHAPP: \"w \\<in> w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr\" \"wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\""], ["proof (prove)\nusing this:\n  length w \\<le> length w \\<Longrightarrow>\n  \\<exists>wr.\n     w \\<in> w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n     wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n\ngoal (1 subgoal):\n 1. (\\<And>wr.\n        \\<lbrakk>w \\<in> w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr;\n         wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  w \\<in> w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr\n  wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n\ngoal (2 subgoals):\n 1. \\<And>w1'.\n       \\<lbrakk>w1 = e # w1';\n        wl' \\<in> w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w2) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n 2. \\<And>w2'.\n       \\<lbrakk>w2 = e # w2';\n        wl' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "have \"e#w\\<in>e#w1'\\<otimes>\\<^bsub>\\<alpha>\\<^esub>wr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e # w \\<in> e # w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr", "proof (rule cil_cons1[OF IHAPP(1)])"], ["proof (state)\ngoal (1 subgoal):\n 1. fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wr) = {}", "from left left' cil_mon_pl[OF IHAPP(2)]"], ["proof (chain)\npicking this:\n  wl = e # wl'\n  w \\<in> wl' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w3) = {}\n  w1 = e # w1'\n  wl' \\<in> w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w2) = {}\n  mon_pl (map \\<alpha> wr) =\n  mon_pl (map \\<alpha> w2) \\<union> mon_pl (map \\<alpha> w3)", "show \"fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wr) = {}\""], ["proof (prove)\nusing this:\n  wl = e # wl'\n  w \\<in> wl' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w3) = {}\n  w1 = e # w1'\n  wl' \\<in> w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w2) = {}\n  mon_pl (map \\<alpha> wr) =\n  mon_pl (map \\<alpha> w2) \\<union> mon_pl (map \\<alpha> w3)\n\ngoal (1 subgoal):\n 1. fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wr) = {}", "by auto"], ["proof (state)\nthis:\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wr) = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  e # w \\<in> e # w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr\n\ngoal (2 subgoals):\n 1. \\<And>w1'.\n       \\<lbrakk>w1 = e # w1';\n        wl' \\<in> w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2;\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w2) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n 2. \\<And>w2'.\n       \\<lbrakk>w2 = e # w2';\n        wl' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "thus ?thesis"], ["proof (prove)\nusing this:\n  e # w \\<in> e # w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr\n\ngoal (1 subgoal):\n 1. \\<exists>wr.\n       e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n       wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "using IHAPP(2) left'"], ["proof (prove)\nusing this:\n  e # w \\<in> e # w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr\n  wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n  w1 = e # w1'\n  wl' \\<in> w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w2) = {}\n\ngoal (1 subgoal):\n 1. \\<exists>wr.\n       e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n       wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "by blast"], ["proof (state)\nthis:\n  \\<exists>wr.\n     e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n     wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n\ngoal (1 subgoal):\n 1. \\<And>w2'.\n       \\<lbrakk>w2 = e # w2';\n        wl' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w2'.\n       \\<lbrakk>w2 = e # w2';\n        wl' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "case (right' w2')"], ["proof (state)\nthis:\n  w2 = e # w2'\n  wl' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2'\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {}\n\ngoal (1 subgoal):\n 1. \\<And>w2'.\n       \\<lbrakk>w2 = e # w2';\n        wl' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "from Cons.hyps[OF _ left(2) right'(2)]"], ["proof (chain)\npicking this:\n  length w \\<le> length w \\<Longrightarrow>\n  \\<exists>wr.\n     w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n     wr \\<in> w2' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "obtain wr where IHAPP: \"w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr\" \"wr \\<in> w2' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\""], ["proof (prove)\nusing this:\n  length w \\<le> length w \\<Longrightarrow>\n  \\<exists>wr.\n     w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n     wr \\<in> w2' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n\ngoal (1 subgoal):\n 1. (\\<And>wr.\n        \\<lbrakk>w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr;\n         wr \\<in> w2' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr\n  wr \\<in> w2' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n\ngoal (1 subgoal):\n 1. \\<And>w2'.\n       \\<lbrakk>w2 = e # w2';\n        wl' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "from IHAPP(2) left"], ["proof (chain)\npicking this:\n  wr \\<in> w2' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n  wl = e # wl'\n  w \\<in> wl' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w3) = {}", "have \"e#wr \\<in> e#w2' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\""], ["proof (prove)\nusing this:\n  wr \\<in> w2' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n  wl = e # wl'\n  w \\<in> wl' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w3) = {}\n\ngoal (1 subgoal):\n 1. e # wr \\<in> e # w2' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "by (auto intro: cil_cons1)"], ["proof (state)\nthis:\n  e # wr \\<in> e # w2' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n\ngoal (1 subgoal):\n 1. \\<And>w2'.\n       \\<lbrakk>w2 = e # w2';\n        wl' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "moreover"], ["proof (state)\nthis:\n  e # wr \\<in> e # w2' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n\ngoal (1 subgoal):\n 1. \\<And>w2'.\n       \\<lbrakk>w2 = e # w2';\n        wl' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "from right' IHAPP(1)"], ["proof (chain)\npicking this:\n  w2 = e # w2'\n  wl' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2'\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {}\n  w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr", "have \"e#w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e#wr\""], ["proof (prove)\nusing this:\n  w2 = e # w2'\n  wl' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2'\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {}\n  w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr\n\ngoal (1 subgoal):\n 1. e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e # wr", "by (auto intro: cil_cons2)"], ["proof (state)\nthis:\n  e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e # wr\n\ngoal (1 subgoal):\n 1. \\<And>w2'.\n       \\<lbrakk>w2 = e # w2';\n        wl' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "ultimately"], ["proof (chain)\npicking this:\n  e # wr \\<in> e # w2' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n  e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e # wr", "show ?thesis"], ["proof (prove)\nusing this:\n  e # wr \\<in> e # w2' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n  e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e # wr\n\ngoal (1 subgoal):\n 1. \\<exists>wr.\n       e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n       wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "using right'"], ["proof (prove)\nusing this:\n  e # wr \\<in> e # w2' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n  e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e # wr\n  w2 = e # w2'\n  wl' \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2'\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> w1) = {}\n\ngoal (1 subgoal):\n 1. \\<exists>wr.\n       e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n       wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "by blast"], ["proof (state)\nthis:\n  \\<exists>wr.\n     e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n     wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>wr.\n     e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n     wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n\ngoal (1 subgoal):\n 1. \\<And>w2'.\n       \\<lbrakk>w3 = e # w2';\n        w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wl) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w2'.\n       \\<lbrakk>w3 = e # w2';\n        w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wl) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "case (right w3')"], ["proof (state)\nthis:\n  w3 = e # w3'\n  w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3'\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wl) = {}\n\ngoal (1 subgoal):\n 1. \\<And>w2'.\n       \\<lbrakk>w3 = e # w2';\n        w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wl) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "from Cons.hyps[OF _ right(2) Cons.prems(2)]"], ["proof (chain)\npicking this:\n  length w \\<le> length w \\<Longrightarrow>\n  \\<exists>wr.\n     w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n     wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3'", "obtain wr where IHAPP: \"w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr\" \"wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3'\""], ["proof (prove)\nusing this:\n  length w \\<le> length w \\<Longrightarrow>\n  \\<exists>wr.\n     w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n     wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3'\n\ngoal (1 subgoal):\n 1. (\\<And>wr.\n        \\<lbrakk>w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr;\n         wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr\n  wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3'\n\ngoal (1 subgoal):\n 1. \\<And>w2'.\n       \\<lbrakk>w3 = e # w2';\n        w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wl) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "from IHAPP(2) right cil_mon_pl[OF Cons.prems(2)]"], ["proof (chain)\npicking this:\n  wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3'\n  w3 = e # w3'\n  w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3'\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wl) = {}\n  mon_pl (map \\<alpha> wl) =\n  mon_pl (map \\<alpha> w1) \\<union> mon_pl (map \\<alpha> w2)", "have \"e#wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e#w3'\""], ["proof (prove)\nusing this:\n  wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3'\n  w3 = e # w3'\n  w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3'\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wl) = {}\n  mon_pl (map \\<alpha> wl) =\n  mon_pl (map \\<alpha> w1) \\<union> mon_pl (map \\<alpha> w2)\n\ngoal (1 subgoal):\n 1. e # wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e # w3'", "by (auto intro: cil_cons2)"], ["proof (state)\nthis:\n  e # wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e # w3'\n\ngoal (1 subgoal):\n 1. \\<And>w2'.\n       \\<lbrakk>w3 = e # w2';\n        w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wl) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "moreover"], ["proof (state)\nthis:\n  e # wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e # w3'\n\ngoal (1 subgoal):\n 1. \\<And>w2'.\n       \\<lbrakk>w3 = e # w2';\n        w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wl) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "from IHAPP(1) right cil_mon_pl[OF Cons.prems(2)]"], ["proof (chain)\npicking this:\n  w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr\n  w3 = e # w3'\n  w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3'\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wl) = {}\n  mon_pl (map \\<alpha> wl) =\n  mon_pl (map \\<alpha> w1) \\<union> mon_pl (map \\<alpha> w2)", "have \"e#w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e#wr\""], ["proof (prove)\nusing this:\n  w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr\n  w3 = e # w3'\n  w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3'\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wl) = {}\n  mon_pl (map \\<alpha> wl) =\n  mon_pl (map \\<alpha> w1) \\<union> mon_pl (map \\<alpha> w2)\n\ngoal (1 subgoal):\n 1. e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e # wr", "by (auto intro: cil_cons2)"], ["proof (state)\nthis:\n  e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e # wr\n\ngoal (1 subgoal):\n 1. \\<And>w2'.\n       \\<lbrakk>w3 = e # w2';\n        w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2';\n        fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wl) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>wr.\n                            e # w\n                            \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n                            wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "ultimately"], ["proof (chain)\npicking this:\n  e # wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e # w3'\n  e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e # wr", "show ?thesis"], ["proof (prove)\nusing this:\n  e # wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e # w3'\n  e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e # wr\n\ngoal (1 subgoal):\n 1. \\<exists>wr.\n       e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n       wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "using right"], ["proof (prove)\nusing this:\n  e # wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e # w3'\n  e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> e # wr\n  w3 = e # w3'\n  w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3'\n  fst (\\<alpha> e) \\<inter> mon_pl (map \\<alpha> wl) = {}\n\ngoal (1 subgoal):\n 1. \\<exists>wr.\n       e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n       wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "by blast"], ["proof (state)\nthis:\n  \\<exists>wr.\n     e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n     wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>wr.\n     e # w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n     wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cil_assoc2: \n  assumes A: \"w\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>wr\" and B: \"wr\\<in>w2\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w3\" \n  shows \"\\<exists>wl. w\\<in>wl\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w3 \\<and> wl\\<in>w1\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>wl.\n       w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3 \\<and>\n       wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>wl.\n       w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3 \\<and>\n       wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2", "from A"], ["proof (chain)\npicking this:\n  w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr", "have A': \"w\\<in>wr\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w1\""], ["proof (prove)\nusing this:\n  w \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr\n\ngoal (1 subgoal):\n 1. w \\<in> wr \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w1", "by (simp add: cil_commute)"], ["proof (state)\nthis:\n  w \\<in> wr \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w1\n\ngoal (1 subgoal):\n 1. \\<exists>wl.\n       w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3 \\<and>\n       wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2", "from B"], ["proof (chain)\npicking this:\n  wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3", "have B': \"wr\\<in>w3\\<otimes>\\<^bsub>\\<alpha>\\<^esub>w2\""], ["proof (prove)\nusing this:\n  wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3\n\ngoal (1 subgoal):\n 1. wr \\<in> w3 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2", "by (simp add: cil_commute)"], ["proof (state)\nthis:\n  wr \\<in> w3 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n\ngoal (1 subgoal):\n 1. \\<exists>wl.\n       w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3 \\<and>\n       wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2", "from cil_assoc1[OF A' B']"], ["proof (chain)\npicking this:\n  \\<exists>wr.\n     w \\<in> w3 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n     wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w1", "obtain wl where \"w \\<in> w3 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wl \\<and> wl \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w1\""], ["proof (prove)\nusing this:\n  \\<exists>wr.\n     w \\<in> w3 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wr \\<and>\n     wr \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w1\n\ngoal (1 subgoal):\n 1. (\\<And>wl.\n        w \\<in> w3 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wl \\<and>\n        wl \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  w \\<in> w3 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wl \\<and>\n  wl \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w1\n\ngoal (1 subgoal):\n 1. \\<exists>wl.\n       w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3 \\<and>\n       wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2", "thus ?thesis"], ["proof (prove)\nusing this:\n  w \\<in> w3 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> wl \\<and>\n  wl \\<in> w2 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w1\n\ngoal (1 subgoal):\n 1. \\<exists>wl.\n       w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3 \\<and>\n       wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2", "by (auto simp add: cil_commute)"], ["proof (state)\nthis:\n  \\<exists>wl.\n     w \\<in> wl \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w3 \\<and>\n     wl \\<in> w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> w2\n\ngoal:\nNo subgoals!", "qed\n\n\n\\<comment> \\<open>Parts of the abstraction can be moved to the operands\\<close>"], ["", "(* FIXME: ?? Something strange is going on with the simplification of \\<alpha>\\<circ>f and implicit \\<eta>-contraction/expansion, hence this lengthy isar proof. Usually, this proof should be a just few lines apply-script !*)"], ["", "lemma cil_map: \"w\\<in>w1 \\<otimes>\\<^bsub>(\\<alpha>\\<circ>f)\\<^esub> w2 \\<Longrightarrow> map f w \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> w1 \\<otimes>\\<^bsub>(\\<alpha> \\<circ>\n                                 f)\\<^esub> w2 \\<Longrightarrow>\n    map f w \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2", "proof (induct rule: cil_set_induct_fix\\<alpha>)"], ["proof (state)\ngoal (3 subgoals):\n 1. map f [] \\<in> map f [] \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f []\n 2. \\<And>e w' w1' w2.\n       \\<lbrakk>w' \\<in> w1' \\<otimes>\\<^bsub>(\\<alpha> \\<circ>\n         f)\\<^esub> w2;\n        fst ((\\<alpha> \\<circ> f) e) \\<inter>\n        mon_pl (map (\\<alpha> \\<circ> f) w2) =\n        {};\n        map f w'\n        \\<in> map f w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2\\<rbrakk>\n       \\<Longrightarrow> map f (e # w')\n                         \\<in> map f\n                                (e #\n                                 w1') \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map\n                                   f w2\n 3. \\<And>e w' w2' w1.\n       \\<lbrakk>w' \\<in> w1 \\<otimes>\\<^bsub>(\\<alpha> \\<circ>\n        f)\\<^esub> w2';\n        fst ((\\<alpha> \\<circ> f) e) \\<inter>\n        mon_pl (map (\\<alpha> \\<circ> f) w1) =\n        {};\n        map f w'\n        \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2'\\<rbrakk>\n       \\<Longrightarrow> map f (e # w')\n                         \\<in> map f\n                                w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f\n                                (e # w2')", "case empty"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. map f [] \\<in> map f [] \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f []\n 2. \\<And>e w' w1' w2.\n       \\<lbrakk>w' \\<in> w1' \\<otimes>\\<^bsub>(\\<alpha> \\<circ>\n         f)\\<^esub> w2;\n        fst ((\\<alpha> \\<circ> f) e) \\<inter>\n        mon_pl (map (\\<alpha> \\<circ> f) w2) =\n        {};\n        map f w'\n        \\<in> map f w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2\\<rbrakk>\n       \\<Longrightarrow> map f (e # w')\n                         \\<in> map f\n                                (e #\n                                 w1') \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map\n                                   f w2\n 3. \\<And>e w' w2' w1.\n       \\<lbrakk>w' \\<in> w1 \\<otimes>\\<^bsub>(\\<alpha> \\<circ>\n        f)\\<^esub> w2';\n        fst ((\\<alpha> \\<circ> f) e) \\<inter>\n        mon_pl (map (\\<alpha> \\<circ> f) w1) =\n        {};\n        map f w'\n        \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2'\\<rbrakk>\n       \\<Longrightarrow> map f (e # w')\n                         \\<in> map f\n                                w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f\n                                (e # w2')", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. map f [] \\<in> map f [] \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f []", "by auto"], ["proof (state)\nthis:\n  map f [] \\<in> map f [] \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f []\n\ngoal (2 subgoals):\n 1. \\<And>e w' w1' w2.\n       \\<lbrakk>w' \\<in> w1' \\<otimes>\\<^bsub>(\\<alpha> \\<circ>\n         f)\\<^esub> w2;\n        fst ((\\<alpha> \\<circ> f) e) \\<inter>\n        mon_pl (map (\\<alpha> \\<circ> f) w2) =\n        {};\n        map f w'\n        \\<in> map f w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2\\<rbrakk>\n       \\<Longrightarrow> map f (e # w')\n                         \\<in> map f\n                                (e #\n                                 w1') \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map\n                                   f w2\n 2. \\<And>e w' w2' w1.\n       \\<lbrakk>w' \\<in> w1 \\<otimes>\\<^bsub>(\\<alpha> \\<circ>\n        f)\\<^esub> w2';\n        fst ((\\<alpha> \\<circ> f) e) \\<inter>\n        mon_pl (map (\\<alpha> \\<circ> f) w1) =\n        {};\n        map f w'\n        \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2'\\<rbrakk>\n       \\<Longrightarrow> map f (e # w')\n                         \\<in> map f\n                                w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f\n                                (e # w2')", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>e w' w1' w2.\n       \\<lbrakk>w' \\<in> w1' \\<otimes>\\<^bsub>(\\<alpha> \\<circ>\n         f)\\<^esub> w2;\n        fst ((\\<alpha> \\<circ> f) e) \\<inter>\n        mon_pl (map (\\<alpha> \\<circ> f) w2) =\n        {};\n        map f w'\n        \\<in> map f w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2\\<rbrakk>\n       \\<Longrightarrow> map f (e # w')\n                         \\<in> map f\n                                (e #\n                                 w1') \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map\n                                   f w2\n 2. \\<And>e w' w2' w1.\n       \\<lbrakk>w' \\<in> w1 \\<otimes>\\<^bsub>(\\<alpha> \\<circ>\n        f)\\<^esub> w2';\n        fst ((\\<alpha> \\<circ> f) e) \\<inter>\n        mon_pl (map (\\<alpha> \\<circ> f) w1) =\n        {};\n        map f w'\n        \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2'\\<rbrakk>\n       \\<Longrightarrow> map f (e # w')\n                         \\<in> map f\n                                w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f\n                                (e # w2')", "case (left e w' w1' w2)"], ["proof (state)\nthis:\n  w' \\<in> w1' \\<otimes>\\<^bsub>(\\<alpha> \\<circ> f)\\<^esub> w2\n  fst ((\\<alpha> \\<circ> f) e) \\<inter>\n  mon_pl (map (\\<alpha> \\<circ> f) w2) =\n  {}\n  map f w' \\<in> map f w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2\n\ngoal (2 subgoals):\n 1. \\<And>e w' w1' w2.\n       \\<lbrakk>w' \\<in> w1' \\<otimes>\\<^bsub>(\\<alpha> \\<circ>\n         f)\\<^esub> w2;\n        fst ((\\<alpha> \\<circ> f) e) \\<inter>\n        mon_pl (map (\\<alpha> \\<circ> f) w2) =\n        {};\n        map f w'\n        \\<in> map f w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2\\<rbrakk>\n       \\<Longrightarrow> map f (e # w')\n                         \\<in> map f\n                                (e #\n                                 w1') \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map\n                                   f w2\n 2. \\<And>e w' w2' w1.\n       \\<lbrakk>w' \\<in> w1 \\<otimes>\\<^bsub>(\\<alpha> \\<circ>\n        f)\\<^esub> w2';\n        fst ((\\<alpha> \\<circ> f) e) \\<inter>\n        mon_pl (map (\\<alpha> \\<circ> f) w1) =\n        {};\n        map f w'\n        \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2'\\<rbrakk>\n       \\<Longrightarrow> map f (e # w')\n                         \\<in> map f\n                                w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f\n                                (e # w2')", "have \"f e # map f w' \\<in> f e # map f w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f e # map f w'\n    \\<in> f e # map f w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2", "proof (rule cil_cons1)"], ["proof (state)\ngoal (2 subgoals):\n 1. map f w' \\<in> map f w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2\n 2. fst (\\<alpha> (f e)) \\<inter> mon_pl (map \\<alpha> (map f w2)) = {}", "from left(2)"], ["proof (chain)\npicking this:\n  fst ((\\<alpha> \\<circ> f) e) \\<inter>\n  mon_pl (map (\\<alpha> \\<circ> f) w2) =\n  {}", "have \"fst ((\\<alpha>\\<circ>f) e) \\<inter> mon_pl (map \\<alpha> (map f w2)) = {}\""], ["proof (prove)\nusing this:\n  fst ((\\<alpha> \\<circ> f) e) \\<inter>\n  mon_pl (map (\\<alpha> \\<circ> f) w2) =\n  {}\n\ngoal (1 subgoal):\n 1. fst ((\\<alpha> \\<circ> f) e) \\<inter> mon_pl (map \\<alpha> (map f w2)) =\n    {}", "by (simp only: map_map[symmetric])"], ["proof (state)\nthis:\n  fst ((\\<alpha> \\<circ> f) e) \\<inter> mon_pl (map \\<alpha> (map f w2)) =\n  {}\n\ngoal (2 subgoals):\n 1. map f w' \\<in> map f w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2\n 2. fst (\\<alpha> (f e)) \\<inter> mon_pl (map \\<alpha> (map f w2)) = {}", "thus \"fst (\\<alpha> (f e)) \\<inter> mon_pl (map \\<alpha> (map f w2)) = {}\""], ["proof (prove)\nusing this:\n  fst ((\\<alpha> \\<circ> f) e) \\<inter> mon_pl (map \\<alpha> (map f w2)) =\n  {}\n\ngoal (1 subgoal):\n 1. fst (\\<alpha> (f e)) \\<inter> mon_pl (map \\<alpha> (map f w2)) = {}", "by (simp only: o_apply)"], ["proof (state)\nthis:\n  fst (\\<alpha> (f e)) \\<inter> mon_pl (map \\<alpha> (map f w2)) = {}\n\ngoal (1 subgoal):\n 1. map f w' \\<in> map f w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2", "qed (rule left(3))"], ["proof (state)\nthis:\n  f e # map f w'\n  \\<in> f e # map f w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2\n\ngoal (2 subgoals):\n 1. \\<And>e w' w1' w2.\n       \\<lbrakk>w' \\<in> w1' \\<otimes>\\<^bsub>(\\<alpha> \\<circ>\n         f)\\<^esub> w2;\n        fst ((\\<alpha> \\<circ> f) e) \\<inter>\n        mon_pl (map (\\<alpha> \\<circ> f) w2) =\n        {};\n        map f w'\n        \\<in> map f w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2\\<rbrakk>\n       \\<Longrightarrow> map f (e # w')\n                         \\<in> map f\n                                (e #\n                                 w1') \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map\n                                   f w2\n 2. \\<And>e w' w2' w1.\n       \\<lbrakk>w' \\<in> w1 \\<otimes>\\<^bsub>(\\<alpha> \\<circ>\n        f)\\<^esub> w2';\n        fst ((\\<alpha> \\<circ> f) e) \\<inter>\n        mon_pl (map (\\<alpha> \\<circ> f) w1) =\n        {};\n        map f w'\n        \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2'\\<rbrakk>\n       \\<Longrightarrow> map f (e # w')\n                         \\<in> map f\n                                w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f\n                                (e # w2')", "thus ?case"], ["proof (prove)\nusing this:\n  f e # map f w'\n  \\<in> f e # map f w1' \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2\n\ngoal (1 subgoal):\n 1. map f (e # w')\n    \\<in> map f (e # w1') \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2", "by simp"], ["proof (state)\nthis:\n  map f (e # w')\n  \\<in> map f (e # w1') \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2\n\ngoal (1 subgoal):\n 1. \\<And>e w' w2' w1.\n       \\<lbrakk>w' \\<in> w1 \\<otimes>\\<^bsub>(\\<alpha> \\<circ>\n        f)\\<^esub> w2';\n        fst ((\\<alpha> \\<circ> f) e) \\<inter>\n        mon_pl (map (\\<alpha> \\<circ> f) w1) =\n        {};\n        map f w'\n        \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2'\\<rbrakk>\n       \\<Longrightarrow> map f (e # w')\n                         \\<in> map f\n                                w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f\n                                (e # w2')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e w' w2' w1.\n       \\<lbrakk>w' \\<in> w1 \\<otimes>\\<^bsub>(\\<alpha> \\<circ>\n        f)\\<^esub> w2';\n        fst ((\\<alpha> \\<circ> f) e) \\<inter>\n        mon_pl (map (\\<alpha> \\<circ> f) w1) =\n        {};\n        map f w'\n        \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2'\\<rbrakk>\n       \\<Longrightarrow> map f (e # w')\n                         \\<in> map f\n                                w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f\n                                (e # w2')", "case (right e w' w2' w1)"], ["proof (state)\nthis:\n  w' \\<in> w1 \\<otimes>\\<^bsub>(\\<alpha> \\<circ> f)\\<^esub> w2'\n  fst ((\\<alpha> \\<circ> f) e) \\<inter>\n  mon_pl (map (\\<alpha> \\<circ> f) w1) =\n  {}\n  map f w' \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2'\n\ngoal (1 subgoal):\n 1. \\<And>e w' w2' w1.\n       \\<lbrakk>w' \\<in> w1 \\<otimes>\\<^bsub>(\\<alpha> \\<circ>\n        f)\\<^esub> w2';\n        fst ((\\<alpha> \\<circ> f) e) \\<inter>\n        mon_pl (map (\\<alpha> \\<circ> f) w1) =\n        {};\n        map f w'\n        \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2'\\<rbrakk>\n       \\<Longrightarrow> map f (e # w')\n                         \\<in> map f\n                                w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f\n                                (e # w2')", "have \"f e # map f w' \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> f e # map f w2'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f e # map f w'\n    \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> f e # map f w2'", "proof (rule cil_cons2)"], ["proof (state)\ngoal (2 subgoals):\n 1. map f w' \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2'\n 2. fst (\\<alpha> (f e)) \\<inter> mon_pl (map \\<alpha> (map f w1)) = {}", "from right(2)"], ["proof (chain)\npicking this:\n  fst ((\\<alpha> \\<circ> f) e) \\<inter>\n  mon_pl (map (\\<alpha> \\<circ> f) w1) =\n  {}", "have \"fst ((\\<alpha>\\<circ>f) e) \\<inter> mon_pl (map \\<alpha> (map f w1)) = {}\""], ["proof (prove)\nusing this:\n  fst ((\\<alpha> \\<circ> f) e) \\<inter>\n  mon_pl (map (\\<alpha> \\<circ> f) w1) =\n  {}\n\ngoal (1 subgoal):\n 1. fst ((\\<alpha> \\<circ> f) e) \\<inter> mon_pl (map \\<alpha> (map f w1)) =\n    {}", "by (simp only: map_map[symmetric])"], ["proof (state)\nthis:\n  fst ((\\<alpha> \\<circ> f) e) \\<inter> mon_pl (map \\<alpha> (map f w1)) =\n  {}\n\ngoal (2 subgoals):\n 1. map f w' \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2'\n 2. fst (\\<alpha> (f e)) \\<inter> mon_pl (map \\<alpha> (map f w1)) = {}", "thus \"fst (\\<alpha> (f e)) \\<inter> mon_pl (map \\<alpha> (map f w1)) = {}\""], ["proof (prove)\nusing this:\n  fst ((\\<alpha> \\<circ> f) e) \\<inter> mon_pl (map \\<alpha> (map f w1)) =\n  {}\n\ngoal (1 subgoal):\n 1. fst (\\<alpha> (f e)) \\<inter> mon_pl (map \\<alpha> (map f w1)) = {}", "by (simp only: o_apply)"], ["proof (state)\nthis:\n  fst (\\<alpha> (f e)) \\<inter> mon_pl (map \\<alpha> (map f w1)) = {}\n\ngoal (1 subgoal):\n 1. map f w' \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2'", "qed (rule right(3))"], ["proof (state)\nthis:\n  f e # map f w'\n  \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> f e # map f w2'\n\ngoal (1 subgoal):\n 1. \\<And>e w' w2' w1.\n       \\<lbrakk>w' \\<in> w1 \\<otimes>\\<^bsub>(\\<alpha> \\<circ>\n        f)\\<^esub> w2';\n        fst ((\\<alpha> \\<circ> f) e) \\<inter>\n        mon_pl (map (\\<alpha> \\<circ> f) w1) =\n        {};\n        map f w'\n        \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f w2'\\<rbrakk>\n       \\<Longrightarrow> map f (e # w')\n                         \\<in> map f\n                                w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f\n                                (e # w2')", "thus ?case"], ["proof (prove)\nusing this:\n  f e # map f w'\n  \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> f e # map f w2'\n\ngoal (1 subgoal):\n 1. map f (e # w')\n    \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f (e # w2')", "by simp"], ["proof (state)\nthis:\n  map f (e # w')\n  \\<in> map f w1 \\<otimes>\\<^bsub>\\<alpha>\\<^esub> map f (e # w2')\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}