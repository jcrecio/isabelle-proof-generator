{"file_name": "/home/qj213/afp-2021-10-22/thys/Formal_Puiseux_Series/FPS_Hensel.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Formal_Puiseux_Series", "problem_names": ["lemma coeff_fps_nth_fps_poly_swap1 [simp]:\n  \"coeff (fps_nth (fps_poly_swap1 p) m) n = fps_nth (coeff p n) m\"", "lemma fps_nth_coeff_fps_poly_swap2:\n  assumes \"\\<And>n. degree (fps_nth p n) \\<le> d\"\n  shows   \"fps_nth (coeff (fps_poly_swap2 p) m) n = coeff (fps_nth p n) m\"", "lemma degree_fps_poly_swap2_le:\n  assumes \"\\<And>n. degree (fps_nth p n) \\<le> d\"\n  shows   \"degree (fps_poly_swap2 p) \\<le> d\"", "lemma degree_fps_poly_swap2_eq:\n  assumes \"\\<And>n. degree (fps_nth p n) \\<le> d\"\n  assumes \"d > 0 \\<or> fps_nth p n \\<noteq> 0\"\n  assumes \"degree (fps_nth p n) = d\"\n  shows   \"degree (fps_poly_swap2 p) = d\"", "lemma\n  fixes F :: \"'a :: field fps poly\"\n  assumes \"lead_coeff F = 1\"\n  shows   degree_reduce_fps_poly_monic: \"degree (reduce_fps_poly F) = degree F\"\n    and   reduce_fps_poly_monic: \"lead_coeff (reduce_fps_poly F) = 1\"", "lemmas [simp del] = hensel_fpxs_aux.simps", "lemma hensel_fpxs_aux_0 [simp]: \"hensel_fpxs_aux 0 = (g, h)\"", "lemma hensel_fpxs1_0 [simp]: \"hensel_fpxs1 $ 0 = g\"", "lemma hensel_fpxs2_0 [simp]: \"hensel_fpxs2 $ 0 = h\"", "theorem fps_hensel_aux:\n  defines \"f \\<equiv> fps_nth F 0\"\n  assumes \"f = g * h\"\n  assumes \"\\<forall>n>0. degree (fps_nth F n) < degree f\"\n  defines \"G \\<equiv> hensel_fpxs1\" and \"H \\<equiv> hensel_fpxs2\"\n  shows \"F = G * H\" \"fps_nth G 0 = g\" \"fps_nth H 0 = h\"\n        \"\\<forall>n>0. degree (fps_nth G n) < degree g\"\n        \"\\<forall>n>0. degree (fps_nth H n) < degree h\"", "lemma deg_f: \"degree f = degree F\"", "lemma\n  F_splits:     \"F = G * H\" and\n  reduce_G:     \"reduce_fps_poly G = g\" and\n  reduce_H:     \"reduce_fps_poly H = h\" and\n  deg_G:        \"degree G = degree g\" and\n  deg_H:        \"degree H = degree h\" and\n  lead_coeff_G: \"lead_coeff G = fps_const (lead_coeff g)\" and\n  lead_coeff_H: \"lead_coeff H = fps_const (lead_coeff h)\""], "translations": [["", "lemma coeff_fps_nth_fps_poly_swap1 [simp]:\n  \"coeff (fps_nth (fps_poly_swap1 p) m) n = fps_nth (coeff p n) m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap1 p $ m) n = coeff p n $ m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap1 p $ m) n = coeff p n $ m", "have \"\\<forall>\\<^sub>\\<infinity>n. poly.coeff p n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>n. coeff p n = 0", "using MOST_coeff_eq_0"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>\\<infinity>n. coeff ?p n = (0::?'a)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>n. coeff p n = 0", "by blast"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>\\<infinity>n. coeff p n = 0\n\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap1 p $ m) n = coeff p n $ m", "hence \"\\<forall>\\<^sub>\\<infinity>n. poly.coeff p n $ m = 0\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>\\<infinity>n. coeff p n = 0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>n. coeff p n $ m = (0::'a)", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>\\<infinity>n. coeff p n $ m = (0::'a)\n\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap1 p $ m) n = coeff p n $ m", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>\\<infinity>n. coeff p n $ m = (0::'a)\n\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap1 p $ m) n = coeff p n $ m", "by (simp add: fps_poly_swap1_def poly.Abs_poly_inverse)"], ["proof (state)\nthis:\n  coeff (fps_poly_swap1 p $ m) n = coeff p n $ m\n\ngoal:\nNo subgoals!", "qed"], ["", "definition fps_poly_swap2 :: \"'a :: zero poly fps \\<Rightarrow> 'a fps poly\" where\n  \"fps_poly_swap2 p = Abs_poly (\\<lambda>m. Abs_fps (\\<lambda>n. coeff (fps_nth p n) m))\""], ["", "lemma fps_nth_coeff_fps_poly_swap2:\n  assumes \"\\<And>n. degree (fps_nth p n) \\<le> d\"\n  shows   \"fps_nth (coeff (fps_poly_swap2 p) m) n = coeff (fps_nth p n) m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap2 p) m $ n = coeff (p $ n) m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap2 p) m $ n = coeff (p $ n) m", "have \"\\<forall>\\<^sub>\\<infinity>n. n > d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>n. d < n", "using MOST_nat"], ["proof (prove)\nusing this:\n  (\\<forall>\\<^sub>\\<infinity>n. ?P n) = (\\<exists>m. \\<forall>n>m. ?P n)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>n. d < n", "by blast"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>\\<infinity>n. d < n\n\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap2 p) m $ n = coeff (p $ n) m", "hence \"\\<forall>\\<^sub>\\<infinity>n. (\\<lambda>m. poly.coeff (p $ m) n) = (\\<lambda>_. 0)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>\\<infinity>n. d < n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>n.\n       (\\<lambda>m. coeff (p $ m) n) = (\\<lambda>_. 0::'a)", "by eventually_elim (auto simp: fun_eq_iff intro!: coeff_eq_0 le_less_trans[OF assms(1)])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>\\<infinity>n.\n     (\\<lambda>m. coeff (p $ m) n) = (\\<lambda>_. 0::'a)\n\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap2 p) m $ n = coeff (p $ n) m", "hence ev: \"\\<forall>\\<^sub>\\<infinity>n. Abs_fps (\\<lambda>m. poly.coeff (p $ m) n) = 0\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>\\<infinity>n.\n     (\\<lambda>m. coeff (p $ m) n) = (\\<lambda>_. 0::'a)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>n. Abs_fps (\\<lambda>m. coeff (p $ m) n) = 0", "by eventually_elim (simp add: fps_zero_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>\\<infinity>n. Abs_fps (\\<lambda>m. coeff (p $ m) n) = 0\n\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap2 p) m $ n = coeff (p $ n) m", "have \"fps_nth (coeff (fps_poly_swap2 p) m) n =\n          poly.coeff (Abs_poly (\\<lambda>m. Abs_fps (\\<lambda>n. poly.coeff (p $ n) m))) m $ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap2 p) m $ n =\n    coeff (Abs_poly (\\<lambda>m. Abs_fps (\\<lambda>n. coeff (p $ n) m))) m $\n    n", "by (simp add: fps_poly_swap2_def)"], ["proof (state)\nthis:\n  coeff (fps_poly_swap2 p) m $ n =\n  coeff (Abs_poly (\\<lambda>m. Abs_fps (\\<lambda>n. coeff (p $ n) m))) m $ n\n\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap2 p) m $ n = coeff (p $ n) m", "also"], ["proof (state)\nthis:\n  coeff (fps_poly_swap2 p) m $ n =\n  coeff (Abs_poly (\\<lambda>m. Abs_fps (\\<lambda>n. coeff (p $ n) m))) m $ n\n\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap2 p) m $ n = coeff (p $ n) m", "have \"\\<dots> = Abs_fps (\\<lambda>n. poly.coeff (p $ n) m) $ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (Abs_poly (\\<lambda>m. Abs_fps (\\<lambda>n. coeff (p $ n) m))) m $\n    n =\n    Abs_fps (\\<lambda>n. coeff (p $ n) m) $ n", "using ev"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>\\<infinity>n. Abs_fps (\\<lambda>m. coeff (p $ m) n) = 0\n\ngoal (1 subgoal):\n 1. coeff (Abs_poly (\\<lambda>m. Abs_fps (\\<lambda>n. coeff (p $ n) m))) m $\n    n =\n    Abs_fps (\\<lambda>n. coeff (p $ n) m) $ n", "by (subst poly.Abs_poly_inverse) auto"], ["proof (state)\nthis:\n  coeff (Abs_poly (\\<lambda>m. Abs_fps (\\<lambda>n. coeff (p $ n) m))) m $\n  n =\n  Abs_fps (\\<lambda>n. coeff (p $ n) m) $ n\n\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap2 p) m $ n = coeff (p $ n) m", "finally"], ["proof (chain)\npicking this:\n  coeff (fps_poly_swap2 p) m $ n = Abs_fps (\\<lambda>n. coeff (p $ n) m) $ n", "show \"fps_nth (coeff (fps_poly_swap2 p) m) n = coeff (fps_nth p n) m\""], ["proof (prove)\nusing this:\n  coeff (fps_poly_swap2 p) m $ n = Abs_fps (\\<lambda>n. coeff (p $ n) m) $ n\n\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap2 p) m $ n = coeff (p $ n) m", "by simp"], ["proof (state)\nthis:\n  coeff (fps_poly_swap2 p) m $ n = coeff (p $ n) m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma degree_fps_poly_swap2_le:\n  assumes \"\\<And>n. degree (fps_nth p n) \\<le> d\"\n  shows   \"degree (fps_poly_swap2 p) \\<le> d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (fps_poly_swap2 p) \\<le> d", "proof (safe intro!: degree_le)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. d < i \\<Longrightarrow> coeff (fps_poly_swap2 p) i = 0", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. d < i \\<Longrightarrow> coeff (fps_poly_swap2 p) i = 0", "assume \"n > d\""], ["proof (state)\nthis:\n  d < n\n\ngoal (1 subgoal):\n 1. \\<And>i. d < i \\<Longrightarrow> coeff (fps_poly_swap2 p) i = 0", "show \"poly.coeff (fps_poly_swap2 p) n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap2 p) n = 0", "proof (rule fps_ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>na. coeff (fps_poly_swap2 p) n $ na = 0 $ na", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>na. coeff (fps_poly_swap2 p) n $ na = 0 $ na", "have \"poly.coeff (fps_poly_swap2 p) n $ m = poly.coeff (p $ m) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap2 p) n $ m = coeff (p $ m) n", "by (subst fps_nth_coeff_fps_poly_swap2[OF assms]) auto"], ["proof (state)\nthis:\n  coeff (fps_poly_swap2 p) n $ m = coeff (p $ m) n\n\ngoal (1 subgoal):\n 1. \\<And>na. coeff (fps_poly_swap2 p) n $ na = 0 $ na", "also"], ["proof (state)\nthis:\n  coeff (fps_poly_swap2 p) n $ m = coeff (p $ m) n\n\ngoal (1 subgoal):\n 1. \\<And>na. coeff (fps_poly_swap2 p) n $ na = 0 $ na", "have \"\\<dots> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (p $ m) n = (0::'a)", "by (intro coeff_eq_0 le_less_trans[OF assms \\<open>n > d\\<close>])"], ["proof (state)\nthis:\n  coeff (p $ m) n = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>na. coeff (fps_poly_swap2 p) n $ na = 0 $ na", "finally"], ["proof (chain)\npicking this:\n  coeff (fps_poly_swap2 p) n $ m = (0::'a)", "show \"poly.coeff (fps_poly_swap2 p) n $ m = 0 $ m\""], ["proof (prove)\nusing this:\n  coeff (fps_poly_swap2 p) n $ m = (0::'a)\n\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap2 p) n $ m = 0 $ m", "by simp"], ["proof (state)\nthis:\n  coeff (fps_poly_swap2 p) n $ m = 0 $ m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coeff (fps_poly_swap2 p) n = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma degree_fps_poly_swap2_eq:\n  assumes \"\\<And>n. degree (fps_nth p n) \\<le> d\"\n  assumes \"d > 0 \\<or> fps_nth p n \\<noteq> 0\"\n  assumes \"degree (fps_nth p n) = d\"\n  shows   \"degree (fps_poly_swap2 p) = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (fps_poly_swap2 p) = d", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. degree (fps_poly_swap2 p) \\<le> d\n 2. d \\<le> degree (fps_poly_swap2 p)", "have \"fps_nth (coeff (fps_poly_swap2 p) d) n = poly.coeff (fps_nth p n) d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap2 p) d $ n = coeff (p $ n) d", "by (subst fps_nth_coeff_fps_poly_swap2[OF assms(1)]) auto"], ["proof (state)\nthis:\n  coeff (fps_poly_swap2 p) d $ n = coeff (p $ n) d\n\ngoal (2 subgoals):\n 1. degree (fps_poly_swap2 p) \\<le> d\n 2. d \\<le> degree (fps_poly_swap2 p)", "also"], ["proof (state)\nthis:\n  coeff (fps_poly_swap2 p) d $ n = coeff (p $ n) d\n\ngoal (2 subgoals):\n 1. degree (fps_poly_swap2 p) \\<le> d\n 2. d \\<le> degree (fps_poly_swap2 p)", "have \"\\<dots> \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (p $ n) d \\<noteq> (0::'a)", "using assms(2,3)"], ["proof (prove)\nusing this:\n  0 < d \\<or> p $ n \\<noteq> 0\n  degree (p $ n) = d\n\ngoal (1 subgoal):\n 1. coeff (p $ n) d \\<noteq> (0::'a)", "by force"], ["proof (state)\nthis:\n  coeff (p $ n) d \\<noteq> (0::'a)\n\ngoal (2 subgoals):\n 1. degree (fps_poly_swap2 p) \\<le> d\n 2. d \\<le> degree (fps_poly_swap2 p)", "finally"], ["proof (chain)\npicking this:\n  coeff (fps_poly_swap2 p) d $ n \\<noteq> (0::'a)", "have \"coeff (fps_poly_swap2 p) d \\<noteq> 0\""], ["proof (prove)\nusing this:\n  coeff (fps_poly_swap2 p) d $ n \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap2 p) d \\<noteq> 0", "by force"], ["proof (state)\nthis:\n  coeff (fps_poly_swap2 p) d \\<noteq> 0\n\ngoal (2 subgoals):\n 1. degree (fps_poly_swap2 p) \\<le> d\n 2. d \\<le> degree (fps_poly_swap2 p)", "thus \"degree (fps_poly_swap2 p) \\<ge> d\""], ["proof (prove)\nusing this:\n  coeff (fps_poly_swap2 p) d \\<noteq> 0\n\ngoal (1 subgoal):\n 1. d \\<le> degree (fps_poly_swap2 p)", "using le_degree"], ["proof (prove)\nusing this:\n  coeff (fps_poly_swap2 p) d \\<noteq> 0\n  coeff ?p ?n \\<noteq> (0::?'a) \\<Longrightarrow> ?n \\<le> degree ?p\n\ngoal (1 subgoal):\n 1. d \\<le> degree (fps_poly_swap2 p)", "by blast"], ["proof (state)\nthis:\n  d \\<le> degree (fps_poly_swap2 p)\n\ngoal (1 subgoal):\n 1. degree (fps_poly_swap2 p) \\<le> d", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. degree (fps_poly_swap2 p) \\<le> d", "show \"degree (fps_poly_swap2 p) \\<le> d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (fps_poly_swap2 p) \\<le> d", "by (intro degree_fps_poly_swap2_le) fact"], ["proof (state)\nthis:\n  degree (fps_poly_swap2 p) \\<le> d\n\ngoal:\nNo subgoals!", "qed"], ["", "definition reduce_fps_poly :: \"'a :: zero fps poly \\<Rightarrow> 'a poly\" where\n  \"reduce_fps_poly F = fps_nth (fps_poly_swap1 F) 0\""], ["", "lemma\n  fixes F :: \"'a :: field fps poly\"\n  assumes \"lead_coeff F = 1\"\n  shows   degree_reduce_fps_poly_monic: \"degree (reduce_fps_poly F) = degree F\"\n    and   reduce_fps_poly_monic: \"lead_coeff (reduce_fps_poly F) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (reduce_fps_poly F) = degree F &&& monic (reduce_fps_poly F)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. degree (reduce_fps_poly F) = degree F\n 2. monic (reduce_fps_poly F)", "have eq1: \"coeff (reduce_fps_poly F) (degree F) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (reduce_fps_poly F) (degree F) = (1::'a)", "unfolding reduce_fps_poly_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap1 F $ 0) (degree F) = (1::'a)", "by (simp add: assms)"], ["proof (state)\nthis:\n  coeff (reduce_fps_poly F) (degree F) = (1::'a)\n\ngoal (2 subgoals):\n 1. degree (reduce_fps_poly F) = degree F\n 2. monic (reduce_fps_poly F)", "have eq2: \"coeff (reduce_fps_poly F) n = 0\" if \"n > degree F\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (reduce_fps_poly F) n = (0::'a)", "unfolding reduce_fps_poly_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap1 F $ 0) n = (0::'a)", "using that"], ["proof (prove)\nusing this:\n  degree F < n\n\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap1 F $ 0) n = (0::'a)", "by (simp add: coeff_eq_0)"], ["proof (state)\nthis:\n  degree F < ?n \\<Longrightarrow> coeff (reduce_fps_poly F) ?n = (0::'a)\n\ngoal (2 subgoals):\n 1. degree (reduce_fps_poly F) = degree F\n 2. monic (reduce_fps_poly F)", "have \"degree (reduce_fps_poly F) \\<le> degree F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (reduce_fps_poly F) \\<le> degree F", "by (rule degree_le) (auto simp: eq2)"], ["proof (state)\nthis:\n  degree (reduce_fps_poly F) \\<le> degree F\n\ngoal (2 subgoals):\n 1. degree (reduce_fps_poly F) = degree F\n 2. monic (reduce_fps_poly F)", "moreover"], ["proof (state)\nthis:\n  degree (reduce_fps_poly F) \\<le> degree F\n\ngoal (2 subgoals):\n 1. degree (reduce_fps_poly F) = degree F\n 2. monic (reduce_fps_poly F)", "have \"degree (reduce_fps_poly F) \\<ge> degree F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree F \\<le> degree (reduce_fps_poly F)", "by (rule le_degree) (simp add: eq1)"], ["proof (state)\nthis:\n  degree F \\<le> degree (reduce_fps_poly F)\n\ngoal (2 subgoals):\n 1. degree (reduce_fps_poly F) = degree F\n 2. monic (reduce_fps_poly F)", "from eq1 eq2"], ["proof (chain)\npicking this:\n  coeff (reduce_fps_poly F) (degree F) = (1::'a)\n  degree F < ?n \\<Longrightarrow> coeff (reduce_fps_poly F) ?n = (0::'a)", "show \"degree (reduce_fps_poly F) = degree F\""], ["proof (prove)\nusing this:\n  coeff (reduce_fps_poly F) (degree F) = (1::'a)\n  degree F < ?n \\<Longrightarrow> coeff (reduce_fps_poly F) ?n = (0::'a)\n\ngoal (1 subgoal):\n 1. degree (reduce_fps_poly F) = degree F", "by (intro antisym le_degree degree_le) auto"], ["proof (state)\nthis:\n  degree (reduce_fps_poly F) = degree F\n\ngoal (1 subgoal):\n 1. monic (reduce_fps_poly F)", "with eq1"], ["proof (chain)\npicking this:\n  coeff (reduce_fps_poly F) (degree F) = (1::'a)\n  degree (reduce_fps_poly F) = degree F", "show \"lead_coeff (reduce_fps_poly F) = 1\""], ["proof (prove)\nusing this:\n  coeff (reduce_fps_poly F) (degree F) = (1::'a)\n  degree (reduce_fps_poly F) = degree F\n\ngoal (1 subgoal):\n 1. monic (reduce_fps_poly F)", "by simp"], ["proof (state)\nthis:\n  monic (reduce_fps_poly F)\n\ngoal:\nNo subgoals!", "qed"], ["", "locale fps_hensel_aux =\n  fixes F :: \"'a :: field_gcd poly fps\"\n  fixes g h :: \"'a poly\"\n  assumes coprime: \"coprime g h\" and deg_g: \"degree g > 0\" and deg_h: \"degree h > 0\"\nbegin"], ["", "context\n  fixes g' h' :: \"'a poly\"\n  defines \"h' \\<equiv> fst (bezout_coefficients g h)\" and \"g' \\<equiv> snd (bezout_coefficients g h)\"\nbegin"], ["", "fun hensel_fpxs_aux :: \"nat \\<Rightarrow> 'a poly \\<times> 'a poly\" where\n  \"hensel_fpxs_aux n = (if n = 0 then (g, h) else\n     (let\n        U = fps_nth F n -\n              (\\<Sum>(i,j) | i < n \\<and> j < n \\<and> i + j = n. fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\n      in (U * g' + g * ((U * h') div h), (U * h') mod h)))\""], ["", "lemmas [simp del] = hensel_fpxs_aux.simps"], ["", "lemma hensel_fpxs_aux_0 [simp]: \"hensel_fpxs_aux 0 = (g, h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hensel_fpxs_aux 0 = (g, h)", "by (subst hensel_fpxs_aux.simps) auto"], ["", "definition hensel_fpxs1 :: \"'a poly fps\"\n  where \"hensel_fpxs1 = Abs_fps (fst \\<circ> hensel_fpxs_aux)\""], ["", "definition hensel_fpxs2 :: \"'a poly fps\"\n  where \"hensel_fpxs2 = Abs_fps (snd \\<circ> hensel_fpxs_aux)\""], ["", "lemma hensel_fpxs1_0 [simp]: \"hensel_fpxs1 $ 0 = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hensel_fpxs1 $ 0 = g", "by (simp add: hensel_fpxs1_def)"], ["", "lemma hensel_fpxs2_0 [simp]: \"hensel_fpxs2 $ 0 = h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hensel_fpxs2 $ 0 = h", "by (simp add: hensel_fpxs2_def)"], ["", "theorem fps_hensel_aux:\n  defines \"f \\<equiv> fps_nth F 0\"\n  assumes \"f = g * h\"\n  assumes \"\\<forall>n>0. degree (fps_nth F n) < degree f\"\n  defines \"G \\<equiv> hensel_fpxs1\" and \"H \\<equiv> hensel_fpxs2\"\n  shows \"F = G * H\" \"fps_nth G 0 = g\" \"fps_nth H 0 = h\"\n        \"\\<forall>n>0. degree (fps_nth G n) < degree g\"\n        \"\\<forall>n>0. degree (fps_nth H n) < degree h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (F = G * H &&& G $ 0 = g) &&&\n    H $ 0 = h &&&\n    \\<forall>n>0. degree (G $ n) < degree g &&&\n    \\<forall>n>0. degree (H $ n) < degree h", "proof -"], ["proof (state)\ngoal (5 subgoals):\n 1. F = G * H\n 2. G $ 0 = g\n 3. H $ 0 = h\n 4. \\<forall>n>0. degree (G $ n) < degree g\n 5. \\<forall>n>0. degree (H $ n) < degree h", "show \"fps_nth G 0 = g\" \"fps_nth H 0 = h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G $ 0 = g &&& H $ 0 = h", "by (simp_all add: G_def H_def hensel_fpxs1_def hensel_fpxs2_def)"], ["proof (state)\nthis:\n  G $ 0 = g\n  H $ 0 = h\n\ngoal (3 subgoals):\n 1. F = G * H\n 2. \\<forall>n>0. degree (G $ n) < degree g\n 3. \\<forall>n>0. degree (H $ n) < degree h", "have deg_f: \"degree f = degree g + degree h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree f = degree g + degree h", "unfolding \\<open>f = g * h\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (g * h) = degree g + degree h", "using assms"], ["proof (prove)\nusing this:\n  f \\<equiv> F $ 0\n  f = g * h\n  \\<forall>n>0. degree (F $ n) < degree f\n  G \\<equiv> hensel_fpxs1\n  H \\<equiv> hensel_fpxs2\n\ngoal (1 subgoal):\n 1. degree (g * h) = degree g + degree h", "by (intro degree_mult_eq) auto"], ["proof (state)\nthis:\n  degree f = degree g + degree h\n\ngoal (3 subgoals):\n 1. F = G * H\n 2. \\<forall>n>0. degree (G $ n) < degree g\n 3. \\<forall>n>0. degree (H $ n) < degree h", "have deg_H: \"degree (fps_nth H n) < degree h\" if \\<open>n > 0\\<close> for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (H $ n) < degree h", "proof (cases \"snd (hensel_fpxs_aux n) = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. snd (hensel_fpxs_aux n) = 0 \\<Longrightarrow> degree (H $ n) < degree h\n 2. snd (hensel_fpxs_aux n) \\<noteq> 0 \\<Longrightarrow>\n    degree (H $ n) < degree h", "case False"], ["proof (state)\nthis:\n  snd (hensel_fpxs_aux n) \\<noteq> 0\n\ngoal (2 subgoals):\n 1. snd (hensel_fpxs_aux n) = 0 \\<Longrightarrow> degree (H $ n) < degree h\n 2. snd (hensel_fpxs_aux n) \\<noteq> 0 \\<Longrightarrow>\n    degree (H $ n) < degree h", "thus ?thesis"], ["proof (prove)\nusing this:\n  snd (hensel_fpxs_aux n) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree (H $ n) < degree h", "using deg_h \\<open>n > 0\\<close>"], ["proof (prove)\nusing this:\n  snd (hensel_fpxs_aux n) \\<noteq> 0\n  0 < degree h\n  0 < n\n\ngoal (1 subgoal):\n 1. degree (H $ n) < degree h", "by (auto simp: hensel_fpxs_aux.simps[of n] hensel_fpxs2_def H_def intro: degree_mod_less')"], ["proof (state)\nthis:\n  degree (H $ n) < degree h\n\ngoal (1 subgoal):\n 1. snd (hensel_fpxs_aux n) = 0 \\<Longrightarrow> degree (H $ n) < degree h", "qed (use assms deg_h in \\<open>auto simp: hensel_fpxs2_def\\<close>)"], ["proof (state)\nthis:\n  0 < ?n \\<Longrightarrow> degree (H $ ?n) < degree h\n\ngoal (3 subgoals):\n 1. F = G * H\n 2. \\<forall>n>0. degree (G $ n) < degree g\n 3. \\<forall>n>0. degree (H $ n) < degree h", "thus \"\\<forall>n>0. degree (fps_nth H n) < degree h\""], ["proof (prove)\nusing this:\n  0 < ?n \\<Longrightarrow> degree (H $ ?n) < degree h\n\ngoal (1 subgoal):\n 1. \\<forall>n>0. degree (H $ n) < degree h", "by blast"], ["proof (state)\nthis:\n  \\<forall>n>0. degree (H $ n) < degree h\n\ngoal (2 subgoals):\n 1. F = G * H\n 2. \\<forall>n>0. degree (G $ n) < degree g", "have *: \"fps_nth F n = fps_nth (G * H) n \\<and> (n > 0 \\<longrightarrow> degree (fps_nth G n) < degree g)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "proof (induction n rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y.\n           y < x \\<Longrightarrow>\n           F $ y = (G * H) $ y \\<and>\n           (0 < y \\<longrightarrow>\n            degree (G $ y) < degree g)) \\<Longrightarrow>\n       F $ x = (G * H) $ x \\<and>\n       (0 < x \\<longrightarrow> degree (G $ x) < degree g)", "case (less n)"], ["proof (state)\nthis:\n  ?y < n \\<Longrightarrow>\n  F $ ?y = (G * H) $ ?y \\<and>\n  (0 < ?y \\<longrightarrow> degree (G $ ?y) < degree g)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y.\n           y < x \\<Longrightarrow>\n           F $ y = (G * H) $ y \\<and>\n           (0 < y \\<longrightarrow>\n            degree (G $ y) < degree g)) \\<Longrightarrow>\n       F $ x = (G * H) $ x \\<and>\n       (0 < x \\<longrightarrow> degree (G $ x) < degree g)", "have fin: \"finite {p. fst p < n \\<and> snd p < n \\<and> fst p + snd p = n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {p. fst p < n \\<and> snd p < n \\<and> fst p + snd p = n}", "by (rule finite_subset[of _ \"{..n} \\<times> {..n}\"]) auto"], ["proof (state)\nthis:\n  finite {p. fst p < n \\<and> snd p < n \\<and> fst p + snd p = n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y.\n           y < x \\<Longrightarrow>\n           F $ y = (G * H) $ y \\<and>\n           (0 < y \\<longrightarrow>\n            degree (G $ y) < degree g)) \\<Longrightarrow>\n       F $ x = (G * H) $ x \\<and>\n       (0 < x \\<longrightarrow> degree (G $ x) < degree g)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "proof (cases \"n = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "thus ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "using assms"], ["proof (prove)\nusing this:\n  n = 0\n  f \\<equiv> F $ 0\n  f = g * h\n  \\<forall>n>0. degree (F $ n) < degree f\n  G \\<equiv> hensel_fpxs1\n  H \\<equiv> hensel_fpxs2\n\ngoal (1 subgoal):\n 1. F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "by (auto simp: hensel_fpxs1_def hensel_fpxs2_def)"], ["proof (state)\nthis:\n  F $ n = (G * H) $ n \\<and>\n  (0 < n \\<longrightarrow> degree (G $ n) < degree g)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "define U where \"U = fps_nth F n -\n         (\\<Sum>(i,j) | i < n \\<and> j < n \\<and> i + j = n. fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\""], ["proof (state)\nthis:\n  U =\n  F $ n -\n  (\\<Sum>(i, j)\\<in>{(i, j). i < n \\<and> j < n \\<and> i + j = n}.\n     fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "define g'' h'' where \"g'' = U * g'\" and \"h'' = U * h'\""], ["proof (state)\nthis:\n  g'' = U * g'\n  h'' = U * h'\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "have \"fps_nth (G * H) n =\n              (\\<Sum>i=0..n. fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux (n - i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (G * H) $ n =\n    (\\<Sum>i = 0..n.\n        fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux (n - i)))", "using assms"], ["proof (prove)\nusing this:\n  f \\<equiv> F $ 0\n  f = g * h\n  \\<forall>n>0. degree (F $ n) < degree f\n  G \\<equiv> hensel_fpxs1\n  H \\<equiv> hensel_fpxs2\n\ngoal (1 subgoal):\n 1. (G * H) $ n =\n    (\\<Sum>i = 0..n.\n        fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux (n - i)))", "by (auto simp: hensel_fpxs1_def hensel_fpxs2_def fps_mult_nth)"], ["proof (state)\nthis:\n  (G * H) $ n =\n  (\\<Sum>i = 0..n. fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux (n - i)))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "also"], ["proof (state)\nthis:\n  (G * H) $ n =\n  (\\<Sum>i = 0..n. fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux (n - i)))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "have \"\\<dots> = (\\<Sum>(i,j) | i + j = n. fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..n.\n        fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux (n - i))) =\n    (\\<Sum>(i, j)\\<in>{(i, j). i + j = n}.\n       fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))", "by (rule sum.reindex_bij_witness[of _ fst \"\\<lambda>i. (i, n - i)\"]) auto"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..n.\n      fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux (n - i))) =\n  (\\<Sum>(i, j)\\<in>{(i, j). i + j = n}.\n     fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..n.\n      fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux (n - i))) =\n  (\\<Sum>(i, j)\\<in>{(i, j). i + j = n}.\n     fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "have \"{(i,j). i + j = n} = {(i,j). i < n \\<and> j < n \\<and> i + j = n} \\<union> {(n,0), (0,n)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(i, j). i + j = n} =\n    {(i, j). i < n \\<and> j < n \\<and> i + j = n} \\<union> {(n, 0), (0, n)}", "by auto"], ["proof (state)\nthis:\n  {(i, j). i + j = n} =\n  {(i, j). i < n \\<and> j < n \\<and> i + j = n} \\<union> {(n, 0), (0, n)}\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "also"], ["proof (state)\nthis:\n  {(i, j). i + j = n} =\n  {(i, j). i < n \\<and> j < n \\<and> i + j = n} \\<union> {(n, 0), (0, n)}\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "have \"(\\<Sum>(i,j)\\<in>\\<dots>. fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j)) =\n                 fps_nth F n - U + (fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(i, j)\n           \\<in>{(i, j). i < n \\<and> j < n \\<and> i + j = n} \\<union>\n                {(n, 0), (0, n)}.\n       fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j)) =\n    F $ n - U + (fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n))", "using False fin"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n  finite {p. fst p < n \\<and> snd p < n \\<and> fst p + snd p = n}\n\ngoal (1 subgoal):\n 1. (\\<Sum>(i, j)\n           \\<in>{(i, j). i < n \\<and> j < n \\<and> i + j = n} \\<union>\n                {(n, 0), (0, n)}.\n       fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j)) =\n    F $ n - U + (fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n))", "by (subst sum.union_disjoint) (auto simp: case_prod_unfold U_def)"], ["proof (state)\nthis:\n  (\\<Sum>(i, j)\n         \\<in>{(i, j). i < n \\<and> j < n \\<and> i + j = n} \\<union>\n              {(n, 0), (0, n)}.\n     fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j)) =\n  F $ n - U + (fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "also"], ["proof (state)\nthis:\n  (\\<Sum>(i, j)\n         \\<in>{(i, j). i < n \\<and> j < n \\<and> i + j = n} \\<union>\n              {(n, 0), (0, n)}.\n     fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j)) =\n  F $ n - U + (fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "have eq: \"fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U", "have \"fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) =\n              (g'' + g * (h'' div h)) * h + g * (h'' mod h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) =\n    (g'' + g * (h'' div h)) * h + g * (h'' mod h)", "using False"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) =\n    (g'' + g * (h'' div h)) * h + g * (h'' mod h)", "by (simp add: hensel_fpxs_aux.simps[of n] U_def g''_def h''_def)"], ["proof (state)\nthis:\n  fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) =\n  (g'' + g * (h'' div h)) * h + g * (h'' mod h)\n\ngoal (1 subgoal):\n 1. fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U", "also"], ["proof (state)\nthis:\n  fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) =\n  (g'' + g * (h'' div h)) * h + g * (h'' mod h)\n\ngoal (1 subgoal):\n 1. fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U", "have \"h'' mod h = h'' - (h'' div h) * h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h'' mod h = h'' - h'' div h * h", "by (simp add: minus_div_mult_eq_mod)"], ["proof (state)\nthis:\n  h'' mod h = h'' - h'' div h * h\n\ngoal (1 subgoal):\n 1. fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U", "also"], ["proof (state)\nthis:\n  h'' mod h = h'' - h'' div h * h\n\ngoal (1 subgoal):\n 1. fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U", "have \"(g'' + g * (h'' div h)) * h + g * (h'' - h'' div h * h) = g * h'' + g'' * h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g'' + g * (h'' div h)) * h + g * (h'' - h'' div h * h) =\n    g * h'' + g'' * h", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  (g'' + g * (h'' div h)) * h + g * (h'' - h'' div h * h) =\n  g * h'' + g'' * h\n\ngoal (1 subgoal):\n 1. fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U", "also"], ["proof (state)\nthis:\n  (g'' + g * (h'' div h)) * h + g * (h'' - h'' div h * h) =\n  g * h'' + g'' * h\n\ngoal (1 subgoal):\n 1. fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U", "have \"\\<dots> = U * (h' * g + g' * h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g * h'' + g'' * h = U * (h' * g + g' * h)", "by (simp add: algebra_simps g''_def h''_def)"], ["proof (state)\nthis:\n  g * h'' + g'' * h = U * (h' * g + g' * h)\n\ngoal (1 subgoal):\n 1. fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U", "also"], ["proof (state)\nthis:\n  g * h'' + g'' * h = U * (h' * g + g' * h)\n\ngoal (1 subgoal):\n 1. fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U", "have \"h' * g + g' * h = gcd g h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h' * g + g' * h = gcd g h", "unfolding g'_def h'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (bezout_coefficients g h) * g + snd (bezout_coefficients g h) * h =\n    gcd g h", "by (rule bezout_coefficients_fst_snd)"], ["proof (state)\nthis:\n  h' * g + g' * h = gcd g h\n\ngoal (1 subgoal):\n 1. fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U", "also"], ["proof (state)\nthis:\n  h' * g + g' * h = gcd g h\n\ngoal (1 subgoal):\n 1. fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U", "have \"gcd g h = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd g h = 1", "using coprime"], ["proof (prove)\nusing this:\n  coprime g h\n\ngoal (1 subgoal):\n 1. gcd g h = 1", "by simp"], ["proof (state)\nthis:\n  gcd g h = 1\n\ngoal (1 subgoal):\n 1. fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U", "finally"], ["proof (chain)\npicking this:\n  fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U * 1", "show ?thesis"], ["proof (prove)\nusing this:\n  fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U * 1\n\ngoal (1 subgoal):\n 1. fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U", "by simp"], ["proof (state)\nthis:\n  fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "finally"], ["proof (chain)\npicking this:\n  (G * H) $ n = F $ n - U + U", "have \"fps_nth F n = fps_nth (G * H) n\""], ["proof (prove)\nusing this:\n  (G * H) $ n = F $ n - U + U\n\ngoal (1 subgoal):\n 1. F $ n = (G * H) $ n", "by simp"], ["proof (state)\nthis:\n  F $ n = (G * H) $ n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "have \"degree (G $ n) < degree g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (G $ n) < degree g", "proof (cases \"G $ n = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. G $ n = 0 \\<Longrightarrow> degree (G $ n) < degree g\n 2. G $ n \\<noteq> 0 \\<Longrightarrow> degree (G $ n) < degree g", "case False"], ["proof (state)\nthis:\n  G $ n \\<noteq> 0\n\ngoal (2 subgoals):\n 1. G $ n = 0 \\<Longrightarrow> degree (G $ n) < degree g\n 2. G $ n \\<noteq> 0 \\<Longrightarrow> degree (G $ n) < degree g", "have \"degree (G $ n) + degree h = degree (G $ n * h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (G $ n) + degree h = degree (G $ n * h)", "using False assms"], ["proof (prove)\nusing this:\n  G $ n \\<noteq> 0\n  f \\<equiv> F $ 0\n  f = g * h\n  \\<forall>n>0. degree (F $ n) < degree f\n  G \\<equiv> hensel_fpxs1\n  H \\<equiv> hensel_fpxs2\n\ngoal (1 subgoal):\n 1. degree (G $ n) + degree h = degree (G $ n * h)", "by (intro degree_mult_eq [symmetric]) auto"], ["proof (state)\nthis:\n  degree (G $ n) + degree h = degree (G $ n * h)\n\ngoal (2 subgoals):\n 1. G $ n = 0 \\<Longrightarrow> degree (G $ n) < degree g\n 2. G $ n \\<noteq> 0 \\<Longrightarrow> degree (G $ n) < degree g", "also"], ["proof (state)\nthis:\n  degree (G $ n) + degree h = degree (G $ n * h)\n\ngoal (2 subgoals):\n 1. G $ n = 0 \\<Longrightarrow> degree (G $ n) < degree g\n 2. G $ n \\<noteq> 0 \\<Longrightarrow> degree (G $ n) < degree g", "from eq"], ["proof (chain)\npicking this:\n  fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U", "have \"fps_nth G n * h = U - g * snd (hensel_fpxs_aux n)\""], ["proof (prove)\nusing this:\n  fst (hensel_fpxs_aux n) * h + g * snd (hensel_fpxs_aux n) = U\n\ngoal (1 subgoal):\n 1. G $ n * h = U - g * snd (hensel_fpxs_aux n)", "by (simp add: algebra_simps G_def hensel_fpxs1_def)"], ["proof (state)\nthis:\n  G $ n * h = U - g * snd (hensel_fpxs_aux n)\n\ngoal (2 subgoals):\n 1. G $ n = 0 \\<Longrightarrow> degree (G $ n) < degree g\n 2. G $ n \\<noteq> 0 \\<Longrightarrow> degree (G $ n) < degree g", "hence \"degree (fps_nth G n * h) = degree (U - g * snd (hensel_fpxs_aux n))\""], ["proof (prove)\nusing this:\n  G $ n * h = U - g * snd (hensel_fpxs_aux n)\n\ngoal (1 subgoal):\n 1. degree (G $ n * h) = degree (U - g * snd (hensel_fpxs_aux n))", "by (simp only: )"], ["proof (state)\nthis:\n  degree (G $ n * h) = degree (U - g * snd (hensel_fpxs_aux n))\n\ngoal (2 subgoals):\n 1. G $ n = 0 \\<Longrightarrow> degree (G $ n) < degree g\n 2. G $ n \\<noteq> 0 \\<Longrightarrow> degree (G $ n) < degree g", "also"], ["proof (state)\nthis:\n  degree (G $ n * h) = degree (U - g * snd (hensel_fpxs_aux n))\n\ngoal (2 subgoals):\n 1. G $ n = 0 \\<Longrightarrow> degree (G $ n) < degree g\n 2. G $ n \\<noteq> 0 \\<Longrightarrow> degree (G $ n) < degree g", "have \"\\<dots> < degree f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (U - g * snd (hensel_fpxs_aux n)) < degree f", "proof (intro degree_diff_less)"], ["proof (state)\ngoal (2 subgoals):\n 1. degree U < degree f\n 2. degree (g * snd (hensel_fpxs_aux n)) < degree f", "have \"degree (g * snd (local.hensel_fpxs_aux n)) \\<le>\n                degree g + degree (snd (local.hensel_fpxs_aux n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (g * snd (hensel_fpxs_aux n))\n    \\<le> degree g + degree (snd (hensel_fpxs_aux n))", "by (intro degree_mult_le)"], ["proof (state)\nthis:\n  degree (g * snd (hensel_fpxs_aux n))\n  \\<le> degree g + degree (snd (hensel_fpxs_aux n))\n\ngoal (2 subgoals):\n 1. degree U < degree f\n 2. degree (g * snd (hensel_fpxs_aux n)) < degree f", "also"], ["proof (state)\nthis:\n  degree (g * snd (hensel_fpxs_aux n))\n  \\<le> degree g + degree (snd (hensel_fpxs_aux n))\n\ngoal (2 subgoals):\n 1. degree U < degree f\n 2. degree (g * snd (hensel_fpxs_aux n)) < degree f", "have \"degree (snd (local.hensel_fpxs_aux n)) < degree h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (snd (hensel_fpxs_aux n)) < degree h", "using deg_H[of n] \\<open>n \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  0 < n \\<Longrightarrow> degree (H $ n) < degree h\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree (snd (hensel_fpxs_aux n)) < degree h", "by (auto simp: H_def hensel_fpxs2_def)"], ["proof (state)\nthis:\n  degree (snd (hensel_fpxs_aux n)) < degree h\n\ngoal (2 subgoals):\n 1. degree U < degree f\n 2. degree (g * snd (hensel_fpxs_aux n)) < degree f", "also"], ["proof (state)\nthis:\n  degree (snd (hensel_fpxs_aux n)) < degree h\n\ngoal (2 subgoals):\n 1. degree U < degree f\n 2. degree (g * snd (hensel_fpxs_aux n)) < degree f", "have \"degree g + degree h = degree f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree g + degree h = degree f", "by (subst deg_f) auto"], ["proof (state)\nthis:\n  degree g + degree h = degree f\n\ngoal (2 subgoals):\n 1. degree U < degree f\n 2. degree (g * snd (hensel_fpxs_aux n)) < degree f", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x < y \\<Longrightarrow> degree g + x < degree g + y) \\<Longrightarrow>\n  degree (g * snd (hensel_fpxs_aux n)) < degree f", "show \"degree (g * snd (local.hensel_fpxs_aux n)) < degree f\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x < y \\<Longrightarrow> degree g + x < degree g + y) \\<Longrightarrow>\n  degree (g * snd (hensel_fpxs_aux n)) < degree f\n\ngoal (1 subgoal):\n 1. degree (g * snd (hensel_fpxs_aux n)) < degree f", "by simp"], ["proof (state)\nthis:\n  degree (g * snd (hensel_fpxs_aux n)) < degree f\n\ngoal (1 subgoal):\n 1. degree U < degree f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. degree U < degree f", "show \"degree U < degree f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree U < degree f", "unfolding U_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree\n     (F $ n -\n      (\\<Sum>(i, j)\\<in>{(i, j). i < n \\<and> j < n \\<and> i + j = n}.\n         fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j)))\n    < degree f", "proof (intro degree_diff_less degree_sum_less)"], ["proof (state)\ngoal (3 subgoals):\n 1. degree (F $ n) < degree f\n 2. \\<And>x.\n       x \\<in> {(i, j).\n                i < n \\<and> j < n \\<and> i + j = n} \\<Longrightarrow>\n       degree\n        (case x of\n         (i, j) \\<Rightarrow>\n           fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\n       < degree f\n 3. 0 < degree f", "show \"degree (F $ n) < degree f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (F $ n) < degree f", "using \\<open>n \\<noteq> 0\\<close> assms"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n  f \\<equiv> F $ 0\n  f = g * h\n  \\<forall>n>0. degree (F $ n) < degree f\n  G \\<equiv> hensel_fpxs1\n  H \\<equiv> hensel_fpxs2\n\ngoal (1 subgoal):\n 1. degree (F $ n) < degree f", "by auto"], ["proof (state)\nthis:\n  degree (F $ n) < degree f\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {(i, j).\n                i < n \\<and> j < n \\<and> i + j = n} \\<Longrightarrow>\n       degree\n        (case x of\n         (i, j) \\<Rightarrow>\n           fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\n       < degree f\n 2. 0 < degree f", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {(i, j).\n                i < n \\<and> j < n \\<and> i + j = n} \\<Longrightarrow>\n       degree\n        (case x of\n         (i, j) \\<Rightarrow>\n           fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\n       < degree f\n 2. 0 < degree f", "show \"degree f > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < degree f", "unfolding deg_f"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < degree g + degree h", "using deg_g"], ["proof (prove)\nusing this:\n  0 < degree g\n\ngoal (1 subgoal):\n 1. 0 < degree g + degree h", "by simp"], ["proof (state)\nthis:\n  0 < degree f\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {(i, j).\n                i < n \\<and> j < n \\<and> i + j = n} \\<Longrightarrow>\n       degree\n        (case x of\n         (i, j) \\<Rightarrow>\n           fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\n       < degree f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {(i, j).\n                i < n \\<and> j < n \\<and> i + j = n} \\<Longrightarrow>\n       degree\n        (case x of\n         (i, j) \\<Rightarrow>\n           fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\n       < degree f", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {(i, j).\n                i < n \\<and> j < n \\<and> i + j = n} \\<Longrightarrow>\n       degree\n        (case x of\n         (i, j) \\<Rightarrow>\n           fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\n       < degree f", "assume z: \"z \\<in> {(i, j). i < n \\<and> j < n \\<and> i + j = n}\""], ["proof (state)\nthis:\n  z \\<in> {(i, j). i < n \\<and> j < n \\<and> i + j = n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {(i, j).\n                i < n \\<and> j < n \\<and> i + j = n} \\<Longrightarrow>\n       degree\n        (case x of\n         (i, j) \\<Rightarrow>\n           fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\n       < degree f", "have \"degree (case z of (i, j) \\<Rightarrow> fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j)) =\n                    degree (fps_nth G (fst z) * fps_nth H (snd z))\" (is \"?lhs = _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree\n     (case z of\n      (i, j) \\<Rightarrow>\n        fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j)) =\n    degree (G $ fst z * H $ snd z)", "by (simp add: case_prod_unfold G_def H_def hensel_fpxs1_def hensel_fpxs2_def)"], ["proof (state)\nthis:\n  degree\n   (case z of\n    (i, j) \\<Rightarrow>\n      fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j)) =\n  degree (G $ fst z * H $ snd z)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {(i, j).\n                i < n \\<and> j < n \\<and> i + j = n} \\<Longrightarrow>\n       degree\n        (case x of\n         (i, j) \\<Rightarrow>\n           fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\n       < degree f", "also"], ["proof (state)\nthis:\n  degree\n   (case z of\n    (i, j) \\<Rightarrow>\n      fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j)) =\n  degree (G $ fst z * H $ snd z)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {(i, j).\n                i < n \\<and> j < n \\<and> i + j = n} \\<Longrightarrow>\n       degree\n        (case x of\n         (i, j) \\<Rightarrow>\n           fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\n       < degree f", "have \"\\<dots> \\<le> degree (fps_nth G (fst z)) + degree (fps_nth H (snd z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (G $ fst z * H $ snd z)\n    \\<le> degree (G $ fst z) + degree (H $ snd z)", "by (intro degree_mult_le)"], ["proof (state)\nthis:\n  degree (G $ fst z * H $ snd z)\n  \\<le> degree (G $ fst z) + degree (H $ snd z)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {(i, j).\n                i < n \\<and> j < n \\<and> i + j = n} \\<Longrightarrow>\n       degree\n        (case x of\n         (i, j) \\<Rightarrow>\n           fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\n       < degree f", "also"], ["proof (state)\nthis:\n  degree (G $ fst z * H $ snd z)\n  \\<le> degree (G $ fst z) + degree (H $ snd z)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {(i, j).\n                i < n \\<and> j < n \\<and> i + j = n} \\<Longrightarrow>\n       degree\n        (case x of\n         (i, j) \\<Rightarrow>\n           fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\n       < degree f", "have \"\\<dots> < degree g + degree h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (G $ fst z) + degree (H $ snd z) < degree g + degree h", "using z less.IH[of \"fst z\"]"], ["proof (prove)\nusing this:\n  z \\<in> {(i, j). i < n \\<and> j < n \\<and> i + j = n}\n  fst z < n \\<Longrightarrow>\n  F $ fst z = (G * H) $ fst z \\<and>\n  (0 < fst z \\<longrightarrow> degree (G $ fst z) < degree g)\n\ngoal (1 subgoal):\n 1. degree (G $ fst z) + degree (H $ snd z) < degree g + degree h", "by (intro add_strict_mono deg_H) (simp_all add: case_prod_unfold)"], ["proof (state)\nthis:\n  degree (G $ fst z) + degree (H $ snd z) < degree g + degree h\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {(i, j).\n                i < n \\<and> j < n \\<and> i + j = n} \\<Longrightarrow>\n       degree\n        (case x of\n         (i, j) \\<Rightarrow>\n           fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\n       < degree f", "finally"], ["proof (chain)\npicking this:\n  degree\n   (case z of\n    (i, j) \\<Rightarrow> fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\n  < degree g + degree h", "show \"?lhs < degree f\""], ["proof (prove)\nusing this:\n  degree\n   (case z of\n    (i, j) \\<Rightarrow> fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\n  < degree g + degree h\n\ngoal (1 subgoal):\n 1. degree\n     (case z of\n      (i, j) \\<Rightarrow>\n        fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\n    < degree f", "by (simp add: deg_f)"], ["proof (state)\nthis:\n  degree\n   (case z of\n    (i, j) \\<Rightarrow> fst (hensel_fpxs_aux i) * snd (hensel_fpxs_aux j))\n  < degree f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  degree U < degree f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  degree (U - g * snd (hensel_fpxs_aux n)) < degree f\n\ngoal (2 subgoals):\n 1. G $ n = 0 \\<Longrightarrow> degree (G $ n) < degree g\n 2. G $ n \\<noteq> 0 \\<Longrightarrow> degree (G $ n) < degree g", "finally"], ["proof (chain)\npicking this:\n  degree (G $ n) + degree h < degree f", "show ?thesis"], ["proof (prove)\nusing this:\n  degree (G $ n) + degree h < degree f\n\ngoal (1 subgoal):\n 1. degree (G $ n) < degree g", "by (simp add: deg_f)"], ["proof (state)\nthis:\n  degree (G $ n) < degree g\n\ngoal (1 subgoal):\n 1. G $ n = 0 \\<Longrightarrow> degree (G $ n) < degree g", "qed (use deg_g in auto)"], ["proof (state)\nthis:\n  degree (G $ n) < degree g\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "with \\<open>fps_nth F n = fps_nth (G * H) n\\<close>"], ["proof (chain)\npicking this:\n  F $ n = (G * H) $ n\n  degree (G $ n) < degree g", "show ?thesis"], ["proof (prove)\nusing this:\n  F $ n = (G * H) $ n\n  degree (G $ n) < degree g\n\ngoal (1 subgoal):\n 1. F $ n = (G * H) $ n \\<and>\n    (0 < n \\<longrightarrow> degree (G $ n) < degree g)", "by blast"], ["proof (state)\nthis:\n  F $ n = (G * H) $ n \\<and>\n  (0 < n \\<longrightarrow> degree (G $ n) < degree g)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F $ n = (G * H) $ n \\<and>\n  (0 < n \\<longrightarrow> degree (G $ n) < degree g)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F $ ?n = (G * H) $ ?n \\<and>\n  (0 < ?n \\<longrightarrow> degree (G $ ?n) < degree g)\n\ngoal (2 subgoals):\n 1. F = G * H\n 2. \\<forall>n>0. degree (G $ n) < degree g", "from *"], ["proof (chain)\npicking this:\n  F $ ?n = (G * H) $ ?n \\<and>\n  (0 < ?n \\<longrightarrow> degree (G $ ?n) < degree g)", "show \"F = G * H\" and \"\\<forall>n>0. degree (fps_nth G n) < degree g\""], ["proof (prove)\nusing this:\n  F $ ?n = (G * H) $ ?n \\<and>\n  (0 < ?n \\<longrightarrow> degree (G $ ?n) < degree g)\n\ngoal (1 subgoal):\n 1. F = G * H &&& \\<forall>n>0. degree (G $ n) < degree g", "by (auto simp: fps_eq_iff)"], ["proof (state)\nthis:\n  F = G * H\n  \\<forall>n>0. degree (G $ n) < degree g\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"], ["", "locale fps_hensel =\n  fixes F :: \"'a :: field_gcd fps poly\" and f g h :: \"'a poly\"\n  assumes monic: \"lead_coeff F = 1\"\n  defines \"f \\<equiv> reduce_fps_poly F\"\n  assumes f_splits: \"f = g * h\"\n  assumes coprime: \"coprime g h\" and deg_g: \"degree g > 0\" and deg_h: \"degree h > 0\"\nbegin"], ["", "definition F' where \"F' = fps_poly_swap1 F\""], ["", "sublocale fps_hensel_aux F' g h"], ["proof (prove)\ngoal (1 subgoal):\n 1. fps_hensel_aux g h", "by unfold_locales (fact deg_g deg_h coprime)+"], ["", "definition G where\n  \"G = fps_poly_swap2 hensel_fpxs1\""], ["", "definition H where\n  \"H = fps_poly_swap2 hensel_fpxs2\""], ["", "lemma deg_f: \"degree f = degree F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree f = degree F", "proof (intro antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. degree f \\<le> degree F\n 2. degree F \\<le> degree f", "have \"coeff f (degree F) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff f (degree F) \\<noteq> (0::'a)", "using monic"], ["proof (prove)\nusing this:\n  monic F\n\ngoal (1 subgoal):\n 1. coeff f (degree F) \\<noteq> (0::'a)", "by (simp add: f_def reduce_fps_poly_def)"], ["proof (state)\nthis:\n  coeff f (degree F) \\<noteq> (0::'a)\n\ngoal (2 subgoals):\n 1. degree f \\<le> degree F\n 2. degree F \\<le> degree f", "thus \"degree f \\<ge> (degree F)\""], ["proof (prove)\nusing this:\n  coeff f (degree F) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. degree F \\<le> degree f", "by (rule le_degree)"], ["proof (state)\nthis:\n  degree F \\<le> degree f\n\ngoal (1 subgoal):\n 1. degree f \\<le> degree F", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. degree f \\<le> degree F", "have \"coeff f n = 0\" if \"n > degree F\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff f n = (0::'a)", "using that"], ["proof (prove)\nusing this:\n  degree F < n\n\ngoal (1 subgoal):\n 1. coeff f n = (0::'a)", "by (simp add: f_def reduce_fps_poly_def coeff_eq_0)"], ["proof (state)\nthis:\n  degree F < ?n \\<Longrightarrow> coeff f ?n = (0::'a)\n\ngoal (1 subgoal):\n 1. degree f \\<le> degree F", "thus \"degree f \\<le> degree F\""], ["proof (prove)\nusing this:\n  degree F < ?n \\<Longrightarrow> coeff f ?n = (0::'a)\n\ngoal (1 subgoal):\n 1. degree f \\<le> degree F", "using degree_le"], ["proof (prove)\nusing this:\n  degree F < ?n \\<Longrightarrow> coeff f ?n = (0::'a)\n  \\<forall>i>?n. coeff ?p i = (0::?'a) \\<Longrightarrow> degree ?p \\<le> ?n\n\ngoal (1 subgoal):\n 1. degree f \\<le> degree F", "by blast"], ["proof (state)\nthis:\n  degree f \\<le> degree F\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  F_splits:     \"F = G * H\" and\n  reduce_G:     \"reduce_fps_poly G = g\" and\n  reduce_H:     \"reduce_fps_poly H = h\" and\n  deg_G:        \"degree G = degree g\" and\n  deg_H:        \"degree H = degree h\" and\n  lead_coeff_G: \"lead_coeff G = fps_const (lead_coeff g)\" and\n  lead_coeff_H: \"lead_coeff H = fps_const (lead_coeff h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (F = G * H &&& reduce_fps_poly G = g &&& reduce_fps_poly H = h) &&&\n    (degree G = degree g &&& degree H = degree h) &&&\n    lead_coeff G = fps_const (lead_coeff g) &&&\n    lead_coeff H = fps_const (lead_coeff h)", "proof -"], ["proof (state)\ngoal (7 subgoals):\n 1. F = G * H\n 2. reduce_fps_poly G = g\n 3. reduce_fps_poly H = h\n 4. degree G = degree g\n 5. degree H = degree h\n 6. lead_coeff G = fps_const (lead_coeff g)\n 7. lead_coeff H = fps_const (lead_coeff h)", "from deg_g deg_h"], ["proof (chain)\npicking this:\n  0 < degree g\n  0 < degree h", "have [simp]: \"g \\<noteq> 0\" \"h \\<noteq> 0\""], ["proof (prove)\nusing this:\n  0 < degree g\n  0 < degree h\n\ngoal (1 subgoal):\n 1. g \\<noteq> 0 &&& h \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  g \\<noteq> 0\n  h \\<noteq> 0\n\ngoal (7 subgoals):\n 1. F = G * H\n 2. reduce_fps_poly G = g\n 3. reduce_fps_poly H = h\n 4. degree G = degree g\n 5. degree H = degree h\n 6. lead_coeff G = fps_const (lead_coeff g)\n 7. lead_coeff H = fps_const (lead_coeff h)", "define N where \"N = degree F\""], ["proof (state)\nthis:\n  N = degree F\n\ngoal (7 subgoals):\n 1. F = G * H\n 2. reduce_fps_poly G = g\n 3. reduce_fps_poly H = h\n 4. degree G = degree g\n 5. degree H = degree h\n 6. lead_coeff G = fps_const (lead_coeff g)\n 7. lead_coeff H = fps_const (lead_coeff h)", "have deg_f: \"degree f = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree f = N", "proof (intro antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. degree f \\<le> N\n 2. N \\<le> degree f", "have \"coeff f N \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff f N \\<noteq> (0::'a)", "using monic"], ["proof (prove)\nusing this:\n  monic F\n\ngoal (1 subgoal):\n 1. coeff f N \\<noteq> (0::'a)", "by (simp add: f_def reduce_fps_poly_def N_def)"], ["proof (state)\nthis:\n  coeff f N \\<noteq> (0::'a)\n\ngoal (2 subgoals):\n 1. degree f \\<le> N\n 2. N \\<le> degree f", "thus \"degree f \\<ge> N\""], ["proof (prove)\nusing this:\n  coeff f N \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. N \\<le> degree f", "by (rule le_degree)"], ["proof (state)\nthis:\n  N \\<le> degree f\n\ngoal (1 subgoal):\n 1. degree f \\<le> N", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. degree f \\<le> N", "have \"coeff f n = 0\" if \"n > N\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff f n = (0::'a)", "using that"], ["proof (prove)\nusing this:\n  N < n\n\ngoal (1 subgoal):\n 1. coeff f n = (0::'a)", "by (simp add: f_def reduce_fps_poly_def N_def coeff_eq_0)"], ["proof (state)\nthis:\n  N < ?n \\<Longrightarrow> coeff f ?n = (0::'a)\n\ngoal (1 subgoal):\n 1. degree f \\<le> N", "thus \"degree f \\<le> N\""], ["proof (prove)\nusing this:\n  N < ?n \\<Longrightarrow> coeff f ?n = (0::'a)\n\ngoal (1 subgoal):\n 1. degree f \\<le> N", "using degree_le"], ["proof (prove)\nusing this:\n  N < ?n \\<Longrightarrow> coeff f ?n = (0::'a)\n  \\<forall>i>?n. coeff ?p i = (0::?'a) \\<Longrightarrow> degree ?p \\<le> ?n\n\ngoal (1 subgoal):\n 1. degree f \\<le> N", "by blast"], ["proof (state)\nthis:\n  degree f \\<le> N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  degree f = N\n\ngoal (7 subgoals):\n 1. F = G * H\n 2. reduce_fps_poly G = g\n 3. reduce_fps_poly H = h\n 4. degree G = degree g\n 5. degree H = degree h\n 6. lead_coeff G = fps_const (lead_coeff g)\n 7. lead_coeff H = fps_const (lead_coeff h)", "have \"F' $ 0 = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F' $ 0 = f", "unfolding F'_def f_def reduce_fps_poly_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fps_poly_swap1 F $ 0 = fps_poly_swap1 F $ 0", ".."], ["proof (state)\nthis:\n  F' $ 0 = f\n\ngoal (7 subgoals):\n 1. F = G * H\n 2. reduce_fps_poly G = g\n 3. reduce_fps_poly H = h\n 4. degree G = degree g\n 5. degree H = degree h\n 6. lead_coeff G = fps_const (lead_coeff g)\n 7. lead_coeff H = fps_const (lead_coeff h)", "have F'0: \"F' $ 0 = g * h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F' $ 0 = g * h", "using f_splits"], ["proof (prove)\nusing this:\n  f = g * h\n\ngoal (1 subgoal):\n 1. F' $ 0 = g * h", "by (simp add: F'_def f_def reduce_fps_poly_def)"], ["proof (state)\nthis:\n  F' $ 0 = g * h\n\ngoal (7 subgoals):\n 1. F = G * H\n 2. reduce_fps_poly G = g\n 3. reduce_fps_poly H = h\n 4. degree G = degree g\n 5. degree H = degree h\n 6. lead_coeff G = fps_const (lead_coeff g)\n 7. lead_coeff H = fps_const (lead_coeff h)", "have \"\\<forall>n>0. degree (F' $ n) < N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n>0. degree (F' $ n) < N", "proof (subst F'_def, intro allI impI degree_lessI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow> fps_poly_swap1 F $ n \\<noteq> 0 \\<or> 0 < N\n 2. \\<And>n k.\n       \\<lbrakk>0 < n; N \\<le> k\\<rbrakk>\n       \\<Longrightarrow> coeff (fps_poly_swap1 F $ n) k = (0::'a)", "fix n :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow> fps_poly_swap1 F $ n \\<noteq> 0 \\<or> 0 < N\n 2. \\<And>n k.\n       \\<lbrakk>0 < n; N \\<le> k\\<rbrakk>\n       \\<Longrightarrow> coeff (fps_poly_swap1 F $ n) k = (0::'a)", "assume n: \"n > 0\""], ["proof (state)\nthis:\n  0 < n\n\ngoal (2 subgoals):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow> fps_poly_swap1 F $ n \\<noteq> 0 \\<or> 0 < N\n 2. \\<And>n k.\n       \\<lbrakk>0 < n; N \\<le> k\\<rbrakk>\n       \\<Longrightarrow> coeff (fps_poly_swap1 F $ n) k = (0::'a)", "show \"fps_poly_swap1 F $ n \\<noteq> 0 \\<or> 0 < N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fps_poly_swap1 F $ n \\<noteq> 0 \\<or> 0 < N", "using n deg_g deg_h f_splits deg_f"], ["proof (prove)\nusing this:\n  0 < n\n  0 < degree g\n  0 < degree h\n  f = g * h\n  degree f = N\n\ngoal (1 subgoal):\n 1. fps_poly_swap1 F $ n \\<noteq> 0 \\<or> 0 < N", "by (auto simp: F'0 degree_mult_eq)"], ["proof (state)\nthis:\n  fps_poly_swap1 F $ n \\<noteq> 0 \\<or> 0 < N\n\ngoal (1 subgoal):\n 1. \\<And>n k.\n       \\<lbrakk>0 < n; N \\<le> k\\<rbrakk>\n       \\<Longrightarrow> coeff (fps_poly_swap1 F $ n) k = (0::'a)", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n k.\n       \\<lbrakk>0 < n; N \\<le> k\\<rbrakk>\n       \\<Longrightarrow> coeff (fps_poly_swap1 F $ n) k = (0::'a)", "assume k: \"k \\<ge> N\""], ["proof (state)\nthis:\n  N \\<le> k\n\ngoal (1 subgoal):\n 1. \\<And>n k.\n       \\<lbrakk>0 < n; N \\<le> k\\<rbrakk>\n       \\<Longrightarrow> coeff (fps_poly_swap1 F $ n) k = (0::'a)", "have \"coeff (F' $ n) k = coeff F k $ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (F' $ n) k = coeff F k $ n", "unfolding F'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap1 F $ n) k = coeff F k $ n", "by simp"], ["proof (state)\nthis:\n  coeff (F' $ n) k = coeff F k $ n\n\ngoal (1 subgoal):\n 1. \\<And>n k.\n       \\<lbrakk>0 < n; N \\<le> k\\<rbrakk>\n       \\<Longrightarrow> coeff (fps_poly_swap1 F $ n) k = (0::'a)", "also"], ["proof (state)\nthis:\n  coeff (F' $ n) k = coeff F k $ n\n\ngoal (1 subgoal):\n 1. \\<And>n k.\n       \\<lbrakk>0 < n; N \\<le> k\\<rbrakk>\n       \\<Longrightarrow> coeff (fps_poly_swap1 F $ n) k = (0::'a)", "have \"\\<dots>= 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff F k $ n = (0::'a)", "using monic \\<open>n > 0\\<close> k"], ["proof (prove)\nusing this:\n  monic F\n  0 < n\n  N \\<le> k\n\ngoal (1 subgoal):\n 1. coeff F k $ n = (0::'a)", "by (cases \"k > N\") (auto simp: N_def coeff_eq_0)"], ["proof (state)\nthis:\n  coeff F k $ n = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>n k.\n       \\<lbrakk>0 < n; N \\<le> k\\<rbrakk>\n       \\<Longrightarrow> coeff (fps_poly_swap1 F $ n) k = (0::'a)", "finally"], ["proof (chain)\npicking this:\n  coeff (F' $ n) k = (0::'a)", "show \"coeff (fps_poly_swap1 F $ n) k = 0\""], ["proof (prove)\nusing this:\n  coeff (F' $ n) k = (0::'a)\n\ngoal (1 subgoal):\n 1. coeff (fps_poly_swap1 F $ n) k = (0::'a)", "by (simp add: F'_def)"], ["proof (state)\nthis:\n  coeff (fps_poly_swap1 F $ n) k = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n>0. degree (F' $ n) < N\n\ngoal (7 subgoals):\n 1. F = G * H\n 2. reduce_fps_poly G = g\n 3. reduce_fps_poly H = h\n 4. degree G = degree g\n 5. degree H = degree h\n 6. lead_coeff G = fps_const (lead_coeff g)\n 7. lead_coeff H = fps_const (lead_coeff h)", "hence degs_less: \"\\<forall>n>0. degree (F' $ n) < degree (F' $ 0)\""], ["proof (prove)\nusing this:\n  \\<forall>n>0. degree (F' $ n) < N\n\ngoal (1 subgoal):\n 1. \\<forall>n>0. degree (F' $ n) < degree (F' $ 0)", "by (simp add: \\<open>F' $ 0 = f\\<close> deg_f)"], ["proof (state)\nthis:\n  \\<forall>n>0. degree (F' $ n) < degree (F' $ 0)\n\ngoal (7 subgoals):\n 1. F = G * H\n 2. reduce_fps_poly G = g\n 3. reduce_fps_poly H = h\n 4. degree G = degree g\n 5. degree H = degree h\n 6. lead_coeff G = fps_const (lead_coeff g)\n 7. lead_coeff H = fps_const (lead_coeff h)", "note hensel = fps_hensel_aux[OF F'0 degs_less]"], ["proof (state)\nthis:\n  F' = hensel_fpxs1 * hensel_fpxs2\n  hensel_fpxs1 $ 0 = g\n  hensel_fpxs2 $ 0 = h\n  \\<forall>n>0. degree (hensel_fpxs1 $ n) < degree g\n  \\<forall>n>0. degree (hensel_fpxs2 $ n) < degree h\n\ngoal (7 subgoals):\n 1. F = G * H\n 2. reduce_fps_poly G = g\n 3. reduce_fps_poly H = h\n 4. degree G = degree g\n 5. degree H = degree h\n 6. lead_coeff G = fps_const (lead_coeff g)\n 7. lead_coeff H = fps_const (lead_coeff h)", "have deg_less1: \"degree (hensel_fpxs1 $ n) < degree g\" if \"n > 0\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (hensel_fpxs1 $ n) < degree g", "using hensel(4) that"], ["proof (prove)\nusing this:\n  \\<forall>n>0. degree (hensel_fpxs1 $ n) < degree g\n  0 < n\n\ngoal (1 subgoal):\n 1. degree (hensel_fpxs1 $ n) < degree g", "by (simp add: F'_def)"], ["proof (state)\nthis:\n  0 < ?n \\<Longrightarrow> degree (hensel_fpxs1 $ ?n) < degree g\n\ngoal (7 subgoals):\n 1. F = G * H\n 2. reduce_fps_poly G = g\n 3. reduce_fps_poly H = h\n 4. degree G = degree g\n 5. degree H = degree h\n 6. lead_coeff G = fps_const (lead_coeff g)\n 7. lead_coeff H = fps_const (lead_coeff h)", "have deg_le1: \"degree (hensel_fpxs1 $ n) \\<le> degree g\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (hensel_fpxs1 $ n) \\<le> degree g", "proof (cases \"n = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> degree (hensel_fpxs1 $ n) \\<le> degree g\n 2. n \\<noteq> 0 \\<Longrightarrow> degree (hensel_fpxs1 $ n) \\<le> degree g", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> degree (hensel_fpxs1 $ n) \\<le> degree g\n 2. n \\<noteq> 0 \\<Longrightarrow> degree (hensel_fpxs1 $ n) \\<le> degree g", "hence \"hensel_fpxs1 $ n = g\""], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. hensel_fpxs1 $ n = g", "by (simp add: hensel_fpxs1_def)"], ["proof (state)\nthis:\n  hensel_fpxs1 $ n = g\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> degree (hensel_fpxs1 $ n) \\<le> degree g\n 2. n \\<noteq> 0 \\<Longrightarrow> degree (hensel_fpxs1 $ n) \\<le> degree g", "thus ?thesis"], ["proof (prove)\nusing this:\n  hensel_fpxs1 $ n = g\n\ngoal (1 subgoal):\n 1. degree (hensel_fpxs1 $ n) \\<le> degree g", "by simp"], ["proof (state)\nthis:\n  degree (hensel_fpxs1 $ n) \\<le> degree g\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> degree (hensel_fpxs1 $ n) \\<le> degree g", "qed (auto intro: less_imp_le deg_less1 simp: f_def)"], ["proof (state)\nthis:\n  degree (hensel_fpxs1 $ ?n) \\<le> degree g\n\ngoal (7 subgoals):\n 1. F = G * H\n 2. reduce_fps_poly G = g\n 3. reduce_fps_poly H = h\n 4. degree G = degree g\n 5. degree H = degree h\n 6. lead_coeff G = fps_const (lead_coeff g)\n 7. lead_coeff H = fps_const (lead_coeff h)", "have deg_less2: \"degree (hensel_fpxs2 $ n) < degree h\" if \"n > 0\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (hensel_fpxs2 $ n) < degree h", "using hensel(5) that"], ["proof (prove)\nusing this:\n  \\<forall>n>0. degree (hensel_fpxs2 $ n) < degree h\n  0 < n\n\ngoal (1 subgoal):\n 1. degree (hensel_fpxs2 $ n) < degree h", "by (simp add: F'_def)"], ["proof (state)\nthis:\n  0 < ?n \\<Longrightarrow> degree (hensel_fpxs2 $ ?n) < degree h\n\ngoal (7 subgoals):\n 1. F = G * H\n 2. reduce_fps_poly G = g\n 3. reduce_fps_poly H = h\n 4. degree G = degree g\n 5. degree H = degree h\n 6. lead_coeff G = fps_const (lead_coeff g)\n 7. lead_coeff H = fps_const (lead_coeff h)", "have deg_le2: \"degree (hensel_fpxs2 $ n) \\<le> degree h\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (hensel_fpxs2 $ n) \\<le> degree h", "proof (cases \"n = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> degree (hensel_fpxs2 $ n) \\<le> degree h\n 2. n \\<noteq> 0 \\<Longrightarrow> degree (hensel_fpxs2 $ n) \\<le> degree h", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> degree (hensel_fpxs2 $ n) \\<le> degree h\n 2. n \\<noteq> 0 \\<Longrightarrow> degree (hensel_fpxs2 $ n) \\<le> degree h", "hence \"hensel_fpxs2 $ n = h\""], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. hensel_fpxs2 $ n = h", "by (simp add: hensel_fpxs2_def)"], ["proof (state)\nthis:\n  hensel_fpxs2 $ n = h\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> degree (hensel_fpxs2 $ n) \\<le> degree h\n 2. n \\<noteq> 0 \\<Longrightarrow> degree (hensel_fpxs2 $ n) \\<le> degree h", "thus ?thesis"], ["proof (prove)\nusing this:\n  hensel_fpxs2 $ n = h\n\ngoal (1 subgoal):\n 1. degree (hensel_fpxs2 $ n) \\<le> degree h", "by simp"], ["proof (state)\nthis:\n  degree (hensel_fpxs2 $ n) \\<le> degree h\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> degree (hensel_fpxs2 $ n) \\<le> degree h", "qed (auto intro: less_imp_le deg_less2 simp: f_def)"], ["proof (state)\nthis:\n  degree (hensel_fpxs2 $ ?n) \\<le> degree h\n\ngoal (7 subgoals):\n 1. F = G * H\n 2. reduce_fps_poly G = g\n 3. reduce_fps_poly H = h\n 4. degree G = degree g\n 5. degree H = degree h\n 6. lead_coeff G = fps_const (lead_coeff g)\n 7. lead_coeff H = fps_const (lead_coeff h)", "show \"F = G * H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F = G * H", "unfolding poly_eq_iff fps_eq_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n na. coeff F n $ na = coeff (G * H) n $ na", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n na. coeff F n $ na = coeff (G * H) n $ na", "fix n k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n na. coeff F n $ na = coeff (G * H) n $ na", "have \"poly.coeff F n $ k = poly.coeff (F' $ k) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff F n $ k = coeff (F' $ k) n", "unfolding F'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff F n $ k = coeff (fps_poly_swap1 F $ k) n", "by simp"], ["proof (state)\nthis:\n  coeff F n $ k = coeff (F' $ k) n\n\ngoal (1 subgoal):\n 1. \\<And>n na. coeff F n $ na = coeff (G * H) n $ na", "also"], ["proof (state)\nthis:\n  coeff F n $ k = coeff (F' $ k) n\n\ngoal (1 subgoal):\n 1. \\<And>n na. coeff F n $ na = coeff (G * H) n $ na", "have \"F' = hensel_fpxs1 * hensel_fpxs2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F' = hensel_fpxs1 * hensel_fpxs2", "by (rule hensel)"], ["proof (state)\nthis:\n  F' = hensel_fpxs1 * hensel_fpxs2\n\ngoal (1 subgoal):\n 1. \\<And>n na. coeff F n $ na = coeff (G * H) n $ na", "also"], ["proof (state)\nthis:\n  F' = hensel_fpxs1 * hensel_fpxs2\n\ngoal (1 subgoal):\n 1. \\<And>n na. coeff F n $ na = coeff (G * H) n $ na", "have \"\\<dots> $ k = (\\<Sum>i=0..k. hensel_fpxs1 $ i * hensel_fpxs2 $ (k - i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (hensel_fpxs1 * hensel_fpxs2) $ k =\n    (\\<Sum>i = 0..k. hensel_fpxs1 $ i * hensel_fpxs2 $ (k - i))", "unfolding fps_mult_nth"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..k. hensel_fpxs1 $ i * hensel_fpxs2 $ (k - i)) =\n    (\\<Sum>i = 0..k. hensel_fpxs1 $ i * hensel_fpxs2 $ (k - i))", ".."], ["proof (state)\nthis:\n  (hensel_fpxs1 * hensel_fpxs2) $ k =\n  (\\<Sum>i = 0..k. hensel_fpxs1 $ i * hensel_fpxs2 $ (k - i))\n\ngoal (1 subgoal):\n 1. \\<And>n na. coeff F n $ na = coeff (G * H) n $ na", "also"], ["proof (state)\nthis:\n  (hensel_fpxs1 * hensel_fpxs2) $ k =\n  (\\<Sum>i = 0..k. hensel_fpxs1 $ i * hensel_fpxs2 $ (k - i))\n\ngoal (1 subgoal):\n 1. \\<And>n na. coeff F n $ na = coeff (G * H) n $ na", "have \"poly.coeff \\<dots> n =\n                 (\\<Sum>i=0..k. \\<Sum>j\\<le>n. coeff (hensel_fpxs1 $ i) j * coeff (hensel_fpxs2 $ (k - i)) (n - j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (\\<Sum>i = 0..k. hensel_fpxs1 $ i * hensel_fpxs2 $ (k - i)) n =\n    (\\<Sum>i = 0..k.\n        \\<Sum>j\\<le>n.\n           coeff (hensel_fpxs1 $ i) j *\n           coeff (hensel_fpxs2 $ (k - i)) (n - j))", "by (simp add: coeff_sum coeff_mult)"], ["proof (state)\nthis:\n  coeff (\\<Sum>i = 0..k. hensel_fpxs1 $ i * hensel_fpxs2 $ (k - i)) n =\n  (\\<Sum>i = 0..k.\n      \\<Sum>j\\<le>n.\n         coeff (hensel_fpxs1 $ i) j *\n         coeff (hensel_fpxs2 $ (k - i)) (n - j))\n\ngoal (1 subgoal):\n 1. \\<And>n na. coeff F n $ na = coeff (G * H) n $ na", "also"], ["proof (state)\nthis:\n  coeff (\\<Sum>i = 0..k. hensel_fpxs1 $ i * hensel_fpxs2 $ (k - i)) n =\n  (\\<Sum>i = 0..k.\n      \\<Sum>j\\<le>n.\n         coeff (hensel_fpxs1 $ i) j *\n         coeff (hensel_fpxs2 $ (k - i)) (n - j))\n\ngoal (1 subgoal):\n 1. \\<And>n na. coeff F n $ na = coeff (G * H) n $ na", "have \"(\\<lambda>i j. coeff (hensel_fpxs1 $ i) j) = (\\<lambda>i j. coeff G j $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. coeff (hensel_fpxs1 $ i)) = (\\<lambda>i j. coeff G j $ i)", "unfolding G_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. coeff (hensel_fpxs1 $ i)) =\n    (\\<lambda>i j. coeff (fps_poly_swap2 hensel_fpxs1) j $ i)", "by (subst fps_nth_coeff_fps_poly_swap2[OF deg_le1]) (auto simp: F'_def)"], ["proof (state)\nthis:\n  (\\<lambda>i. coeff (hensel_fpxs1 $ i)) = (\\<lambda>i j. coeff G j $ i)\n\ngoal (1 subgoal):\n 1. \\<And>n na. coeff F n $ na = coeff (G * H) n $ na", "also"], ["proof (state)\nthis:\n  (\\<lambda>i. coeff (hensel_fpxs1 $ i)) = (\\<lambda>i j. coeff G j $ i)\n\ngoal (1 subgoal):\n 1. \\<And>n na. coeff F n $ na = coeff (G * H) n $ na", "have \"(\\<lambda>i j. coeff (hensel_fpxs2 $ i) j) = (\\<lambda>i j. coeff H j $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. coeff (hensel_fpxs2 $ i)) = (\\<lambda>i j. coeff H j $ i)", "unfolding H_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. coeff (hensel_fpxs2 $ i)) =\n    (\\<lambda>i j. coeff (fps_poly_swap2 hensel_fpxs2) j $ i)", "by (subst fps_nth_coeff_fps_poly_swap2[OF deg_le2]) (auto simp: F'_def)"], ["proof (state)\nthis:\n  (\\<lambda>i. coeff (hensel_fpxs2 $ i)) = (\\<lambda>i j. coeff H j $ i)\n\ngoal (1 subgoal):\n 1. \\<And>n na. coeff F n $ na = coeff (G * H) n $ na", "also"], ["proof (state)\nthis:\n  (\\<lambda>i. coeff (hensel_fpxs2 $ i)) = (\\<lambda>i j. coeff H j $ i)\n\ngoal (1 subgoal):\n 1. \\<And>n na. coeff F n $ na = coeff (G * H) n $ na", "have \"(\\<Sum>i=0..k. \\<Sum>j\\<le>n. poly.coeff G j $ i * poly.coeff H (n - j) $ (k - i)) =\n               (\\<Sum>j\\<le>n. \\<Sum>i=0..k. poly.coeff G j $ i * poly.coeff H (n - j) $ (k - i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..k.\n        \\<Sum>j\\<le>n. coeff G j $ i * coeff H (n - j) $ (k - i)) =\n    (\\<Sum>j\\<le>n.\n        \\<Sum>i = 0..k. coeff G j $ i * coeff H (n - j) $ (k - i))", "by (rule sum.swap)"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..k.\n      \\<Sum>j\\<le>n. coeff G j $ i * coeff H (n - j) $ (k - i)) =\n  (\\<Sum>j\\<le>n. \\<Sum>i = 0..k. coeff G j $ i * coeff H (n - j) $ (k - i))\n\ngoal (1 subgoal):\n 1. \\<And>n na. coeff F n $ na = coeff (G * H) n $ na", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..k.\n      \\<Sum>j\\<le>n. coeff G j $ i * coeff H (n - j) $ (k - i)) =\n  (\\<Sum>j\\<le>n. \\<Sum>i = 0..k. coeff G j $ i * coeff H (n - j) $ (k - i))\n\ngoal (1 subgoal):\n 1. \\<And>n na. coeff F n $ na = coeff (G * H) n $ na", "have \"\\<dots> = poly.coeff (G * H) n $ k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j\\<le>n.\n        \\<Sum>i = 0..k. coeff G j $ i * coeff H (n - j) $ (k - i)) =\n    coeff (G * H) n $ k", "by (simp add: coeff_mult fps_mult_nth fps_sum_nth)"], ["proof (state)\nthis:\n  (\\<Sum>j\\<le>n.\n      \\<Sum>i = 0..k. coeff G j $ i * coeff H (n - j) $ (k - i)) =\n  coeff (G * H) n $ k\n\ngoal (1 subgoal):\n 1. \\<And>n na. coeff F n $ na = coeff (G * H) n $ na", "finally"], ["proof (chain)\npicking this:\n  coeff F n $ k = coeff (G * H) n $ k", "show \"poly.coeff F n $ k = poly.coeff (G * H) n $ k\""], ["proof (prove)\nusing this:\n  coeff F n $ k = coeff (G * H) n $ k\n\ngoal (1 subgoal):\n 1. coeff F n $ k = coeff (G * H) n $ k", "."], ["proof (state)\nthis:\n  coeff F n $ k = coeff (G * H) n $ k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F = G * H\n\ngoal (6 subgoals):\n 1. reduce_fps_poly G = g\n 2. reduce_fps_poly H = h\n 3. degree G = degree g\n 4. degree H = degree h\n 5. lead_coeff G = fps_const (lead_coeff g)\n 6. lead_coeff H = fps_const (lead_coeff h)", "show \"reduce_fps_poly G = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reduce_fps_poly G = g", "unfolding G_def reduce_fps_poly_def poly_eq_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       coeff (fps_poly_swap1 (fps_poly_swap2 hensel_fpxs1) $ 0) n =\n       coeff g n", "by (auto simp: fps_nth_coeff_fps_poly_swap2[OF deg_le1])"], ["proof (state)\nthis:\n  reduce_fps_poly G = g\n\ngoal (5 subgoals):\n 1. reduce_fps_poly H = h\n 2. degree G = degree g\n 3. degree H = degree h\n 4. lead_coeff G = fps_const (lead_coeff g)\n 5. lead_coeff H = fps_const (lead_coeff h)", "show \"reduce_fps_poly H = h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reduce_fps_poly H = h", "unfolding H_def reduce_fps_poly_def poly_eq_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       coeff (fps_poly_swap1 (fps_poly_swap2 hensel_fpxs2) $ 0) n =\n       coeff h n", "by (auto simp: fps_nth_coeff_fps_poly_swap2[OF deg_le2])"], ["proof (state)\nthis:\n  reduce_fps_poly H = h\n\ngoal (4 subgoals):\n 1. degree G = degree g\n 2. degree H = degree h\n 3. lead_coeff G = fps_const (lead_coeff g)\n 4. lead_coeff H = fps_const (lead_coeff h)", "show \"degree G = degree g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree G = degree g", "unfolding G_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (fps_poly_swap2 hensel_fpxs1) = degree g", "by (rule degree_fps_poly_swap2_eq[where n = 0] deg_le1 disjI1 deg_g deg_le2)+ simp_all"], ["proof (state)\nthis:\n  degree G = degree g\n\ngoal (3 subgoals):\n 1. degree H = degree h\n 2. lead_coeff G = fps_const (lead_coeff g)\n 3. lead_coeff H = fps_const (lead_coeff h)", "show \"degree H = degree h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree H = degree h", "unfolding H_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (fps_poly_swap2 hensel_fpxs2) = degree h", "by (rule degree_fps_poly_swap2_eq[where n = 0] deg_le1 disjI1 deg_h deg_le2)+ simp_all"], ["proof (state)\nthis:\n  degree H = degree h\n\ngoal (2 subgoals):\n 1. lead_coeff G = fps_const (lead_coeff g)\n 2. lead_coeff H = fps_const (lead_coeff h)", "show \"lead_coeff G = fps_const (lead_coeff g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lead_coeff G = fps_const (lead_coeff g)", "proof (rule fps_ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. lead_coeff G $ n = fps_const (lead_coeff g) $ n", "fix n ::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. lead_coeff G $ n = fps_const (lead_coeff g) $ n", "have \"lead_coeff G $ n = coeff (hensel_fpxs1 $ n) (degree G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lead_coeff G $ n = coeff (hensel_fpxs1 $ n) (degree G)", "by (subst G_def, subst fps_nth_coeff_fps_poly_swap2[OF deg_le1]) auto"], ["proof (state)\nthis:\n  lead_coeff G $ n = coeff (hensel_fpxs1 $ n) (degree G)\n\ngoal (1 subgoal):\n 1. \\<And>n. lead_coeff G $ n = fps_const (lead_coeff g) $ n", "also"], ["proof (state)\nthis:\n  lead_coeff G $ n = coeff (hensel_fpxs1 $ n) (degree G)\n\ngoal (1 subgoal):\n 1. \\<And>n. lead_coeff G $ n = fps_const (lead_coeff g) $ n", "have \"\\<dots> = (if n = 0 then lead_coeff g else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (hensel_fpxs1 $ n) (degree G) =\n    (if n = 0 then lead_coeff g else (0::'a))", "by (auto simp: \\<open>degree G = degree g\\<close> intro: coeff_eq_0 deg_less1)"], ["proof (state)\nthis:\n  coeff (hensel_fpxs1 $ n) (degree G) =\n  (if n = 0 then lead_coeff g else (0::'a))\n\ngoal (1 subgoal):\n 1. \\<And>n. lead_coeff G $ n = fps_const (lead_coeff g) $ n", "finally"], ["proof (chain)\npicking this:\n  lead_coeff G $ n = (if n = 0 then lead_coeff g else (0::'a))", "show \"lead_coeff G $ n = fps_const (lead_coeff g) $ n\""], ["proof (prove)\nusing this:\n  lead_coeff G $ n = (if n = 0 then lead_coeff g else (0::'a))\n\ngoal (1 subgoal):\n 1. lead_coeff G $ n = fps_const (lead_coeff g) $ n", "by simp"], ["proof (state)\nthis:\n  lead_coeff G $ n = fps_const (lead_coeff g) $ n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lead_coeff G = fps_const (lead_coeff g)\n\ngoal (1 subgoal):\n 1. lead_coeff H = fps_const (lead_coeff h)", "show \"lead_coeff H = fps_const (lead_coeff h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lead_coeff H = fps_const (lead_coeff h)", "proof (rule fps_ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. lead_coeff H $ n = fps_const (lead_coeff h) $ n", "fix n ::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. lead_coeff H $ n = fps_const (lead_coeff h) $ n", "have \"lead_coeff H $ n = coeff (hensel_fpxs2 $ n) (degree H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lead_coeff H $ n = coeff (hensel_fpxs2 $ n) (degree H)", "by (subst H_def, subst fps_nth_coeff_fps_poly_swap2[OF deg_le2]) auto"], ["proof (state)\nthis:\n  lead_coeff H $ n = coeff (hensel_fpxs2 $ n) (degree H)\n\ngoal (1 subgoal):\n 1. \\<And>n. lead_coeff H $ n = fps_const (lead_coeff h) $ n", "also"], ["proof (state)\nthis:\n  lead_coeff H $ n = coeff (hensel_fpxs2 $ n) (degree H)\n\ngoal (1 subgoal):\n 1. \\<And>n. lead_coeff H $ n = fps_const (lead_coeff h) $ n", "have \"\\<dots> = (if n = 0 then lead_coeff h else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (hensel_fpxs2 $ n) (degree H) =\n    (if n = 0 then lead_coeff h else (0::'a))", "by (auto simp: \\<open>degree H = degree h\\<close> intro: coeff_eq_0 deg_less2)"], ["proof (state)\nthis:\n  coeff (hensel_fpxs2 $ n) (degree H) =\n  (if n = 0 then lead_coeff h else (0::'a))\n\ngoal (1 subgoal):\n 1. \\<And>n. lead_coeff H $ n = fps_const (lead_coeff h) $ n", "finally"], ["proof (chain)\npicking this:\n  lead_coeff H $ n = (if n = 0 then lead_coeff h else (0::'a))", "show \"lead_coeff H $ n = fps_const (lead_coeff h) $ n\""], ["proof (prove)\nusing this:\n  lead_coeff H $ n = (if n = 0 then lead_coeff h else (0::'a))\n\ngoal (1 subgoal):\n 1. lead_coeff H $ n = fps_const (lead_coeff h) $ n", "by simp"], ["proof (state)\nthis:\n  lead_coeff H $ n = fps_const (lead_coeff h) $ n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lead_coeff H = fps_const (lead_coeff h)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}