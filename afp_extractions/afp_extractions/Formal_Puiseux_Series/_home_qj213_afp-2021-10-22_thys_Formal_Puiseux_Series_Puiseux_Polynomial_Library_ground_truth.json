{"file_name": "/home/qj213/afp-2021-10-22/thys/Formal_Puiseux_Series/Puiseux_Polynomial_Library.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Formal_Puiseux_Series", "problem_names": ["lemma poly_sum_mset: \"poly (\\<Sum>x\\<in>#A. p x) y = (\\<Sum>x\\<in>#A. poly (p x) y)\"", "lemma poly_prod_mset: \"poly (\\<Prod>x\\<in>#A. p x) y = (\\<Prod>x\\<in>#A. poly (p x) y)\"", "lemma set_mset_subset_singletonD:\n  assumes \"set_mset A \\<subseteq> {x}\"\n  shows   \"A = replicate_mset (size A) x\"", "lemma inj_idom_hom_compose [intro]:\n  assumes \"inj_idom_hom f\" \"inj_idom_hom g\"\n  shows   \"inj_idom_hom (f \\<circ> g)\"", "lemma coeff_pcompose_linear:\n  \"coeff (pcompose p [:0, a :: 'a :: comm_semiring_1:]) i = a ^ i * coeff p i\"", "lemma degree_cong:\n  assumes \"\\<And>i. coeff p i = 0 \\<longleftrightarrow> coeff q i = 0\"\n  shows   \"degree p = degree q\"", "lemma coeff_Abs_poly_If_le:\n  \"coeff (Abs_poly (\\<lambda>i. if i \\<le> n then f i else 0)) = (\\<lambda>i. if i \\<le> n then f i else 0)\"", "lemma coeff_Abs_poly:\n  assumes \"\\<And>i. i > n \\<Longrightarrow> f i = 0\"\n  shows   \"coeff (Abs_poly f) = f\"", "lemma (in inj_idom_hom) inj_idom_hom_map_poly [intro]: \"inj_idom_hom (map_poly hom)\"", "lemma inj_idom_hom_pcompose [intro]:\n  assumes [simp]: \"degree (p :: 'a :: idom poly) \\<noteq> 0\"\n  shows \"inj_idom_hom (\\<lambda>q. pcompose q p)\"", "lemma degree_sum_less:\n  assumes \"\\<And>x. x \\<in> A \\<Longrightarrow> degree (f x) < n\" \"n > 0\"\n  shows   \"degree (sum f A) < n\"", "lemma degree_lessI:\n  assumes \"p \\<noteq> 0 \\<or> n > 0\" \"\\<forall>k\\<ge>n. coeff p k = 0\"\n  shows   \"degree p < n\"", "lemma coeff_linear_poly_power:\n  fixes c :: \"'a :: semiring_1\"\n  assumes \"i \\<le> n\"\n  shows   \"coeff ([:a, b:] ^ n) i = of_nat (n choose i) * b ^ i * a ^ (n - i)\"", "lemma pcompose_altdef: \"pcompose p q = poly (map_poly (\\<lambda>x. [:x:]) p) q\"", "lemma coeff_mult_0: \"coeff (p * q) 0 = coeff p 0 * coeff q 0\"", "lemma coeff_pcompose_0 [simp]:\n  \"coeff (pcompose p q) 0 = poly p (coeff q 0)\"", "lemma reducible_polyI:\n  fixes p :: \"'a :: field poly\"\n  assumes \"p = q * r\" \"degree q > 0\" \"degree r > 0\"\n  shows   \"\\<not>irreducible p\"", "lemma root_imp_reducible_poly:\n  fixes x :: \"'a :: field\"\n  assumes \"poly p x = 0\" and \"degree p > 1\"\n  shows   \"\\<not>irreducible p\"", "lemma alg_closed_imp_poly_has_root:\n  assumes \"degree (p :: 'a :: alg_closed_field poly) > 0\"\n  shows   \"\\<exists>x. poly p x = 0\"", "lemma alg_closedI [Pure.intro]:\n  assumes \"\\<And>p :: 'a poly. degree p > 0 \\<Longrightarrow> lead_coeff p = 1 \\<Longrightarrow> \\<exists>x. poly p x = 0\"\n  shows   \"OFCLASS('a :: field, alg_closed_field_class)\"", "lemma alg_closed_imp_factorization:\n  fixes p :: \"'a :: alg_closed_field poly\"\n  assumes \"p \\<noteq> 0\"\n  shows \"\\<exists>A. size A = degree p \\<and> p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:-x, 1:])\"", "lemma alg_closed_imp_reducible:\n  assumes \"degree (p :: 'a :: alg_closed_field poly) > 1\"\n  shows   \"\\<not>irreducible p\"", "lemma alg_closedI_reducible:\n  assumes \"\\<And>p :: 'a poly. degree p > 1 \\<Longrightarrow> lead_coeff p = 1 \\<Longrightarrow> coeff p 0 \\<noteq> 0 \\<Longrightarrow>\n              \\<not>irreducible p\"\n  shows   \"OFCLASS('a :: field, alg_closed_field_class)\"", "lemma alg_closedI_reducible_coeff_deg_minus_one_eq_0:\n  assumes \"\\<And>p :: 'a poly. degree p > 1 \\<Longrightarrow> lead_coeff p = 1 \\<Longrightarrow> coeff p (degree p - 1) = 0 \\<Longrightarrow>\n              coeff p 0 \\<noteq> 0 \\<Longrightarrow> \\<not>irreducible p\"\n  shows   \"OFCLASS('a :: field_char_0, alg_closed_field_class)\"", "lemma alg_closed_imp_poly_splits_coprime:\n  assumes \"degree (p :: 'a :: {alg_closed_field} poly) > 1\"\n  assumes \"poly p x = 0\" \"poly p y = 0\" \"x \\<noteq> y\"\n  obtains r s where \"degree r > 0\" \"degree s > 0\" \"coprime r s\" \"p = r * s\""], "translations": [["", "lemma poly_sum_mset: \"poly (\\<Sum>x\\<in>#A. p x) y = (\\<Sum>x\\<in>#A. poly (p x) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly (\\<Sum>\\<^sub># (image_mset p A)) y =\n    (\\<Sum>x\\<in>#A. poly (p x) y)", "by (induction A) auto"], ["", "lemma poly_prod_mset: \"poly (\\<Prod>x\\<in>#A. p x) y = (\\<Prod>x\\<in>#A. poly (p x) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly (\\<Prod>\\<^sub># (image_mset p A)) y =\n    (\\<Prod>x\\<in>#A. poly (p x) y)", "by (induction A) auto"], ["", "lemma set_mset_subset_singletonD:\n  assumes \"set_mset A \\<subseteq> {x}\"\n  shows   \"A = replicate_mset (size A) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = replicate_mset (size A) x", "using assms"], ["proof (prove)\nusing this:\n  set_mset A \\<subseteq> {x}\n\ngoal (1 subgoal):\n 1. A = replicate_mset (size A) x", "by (induction A) auto"], ["", "lemma inj_idom_hom_compose [intro]:\n  assumes \"inj_idom_hom f\" \"inj_idom_hom g\"\n  shows   \"inj_idom_hom (f \\<circ> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_idom_hom (f \\<circ> g)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_idom_hom (f \\<circ> g)", "interpret f: inj_idom_hom f"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_idom_hom f", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_idom_hom (f \\<circ> g)", "interpret g: inj_idom_hom g"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_idom_hom g", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_idom_hom (f \\<circ> g)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_idom_hom (f \\<circ> g)", "by unfold_locales (auto simp: f.hom_add g.hom_add f.hom_mult g.hom_mult)"], ["proof (state)\nthis:\n  inj_idom_hom (f \\<circ> g)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma coeff_pcompose_linear:\n  \"coeff (pcompose p [:0, a :: 'a :: comm_semiring_1:]) i = a ^ i * coeff p i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (p \\<circ>\\<^sub>p [:0::'a, a:]) i = a ^ i * coeff p i", "by (induction p arbitrary: i) (auto simp: pcompose_pCons coeff_pCons mult_ac split: nat.splits)"], ["", "lemma degree_cong:\n  assumes \"\\<And>i. coeff p i = 0 \\<longleftrightarrow> coeff q i = 0\"\n  shows   \"degree p = degree q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree p = degree q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. degree p = degree q", "have \"(\\<lambda>n. \\<forall>i>n. poly.coeff p i = 0) = (\\<lambda>n. \\<forall>i>n. poly.coeff q i = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<forall>i>n. coeff p i = (0::'a)) =\n    (\\<lambda>n. \\<forall>i>n. coeff q i = (0::'b))", "using assms"], ["proof (prove)\nusing this:\n  (coeff p ?i = (0::'a)) = (coeff q ?i = (0::'b))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<forall>i>n. coeff p i = (0::'a)) =\n    (\\<lambda>n. \\<forall>i>n. coeff q i = (0::'b))", "by (auto simp: fun_eq_iff)"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<forall>i>n. coeff p i = (0::'a)) =\n  (\\<lambda>n. \\<forall>i>n. coeff q i = (0::'b))\n\ngoal (1 subgoal):\n 1. degree p = degree q", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<forall>i>n. coeff p i = (0::'a)) =\n  (\\<lambda>n. \\<forall>i>n. coeff q i = (0::'b))\n\ngoal (1 subgoal):\n 1. degree p = degree q", "by (simp only: degree_def)"], ["proof (state)\nthis:\n  degree p = degree q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma coeff_Abs_poly_If_le:\n  \"coeff (Abs_poly (\\<lambda>i. if i \\<le> n then f i else 0)) = (\\<lambda>i. if i \\<le> n then f i else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (Abs_poly (\\<lambda>i. if i \\<le> n then f i else (0::'a))) =\n    (\\<lambda>i. if i \\<le> n then f i else (0::'a))", "proof (rule Abs_poly_inverse, clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>na.\n       (if na \\<le> n then f na else (0::'a)) = (0::'a)", "have \"eventually (\\<lambda>i. i > n) cofinite\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>i. n < i", "by (auto simp: MOST_nat)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>\\<infinity>i. n < i\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>na.\n       (if na \\<le> n then f na else (0::'a)) = (0::'a)", "thus \"eventually (\\<lambda>i. (if i \\<le> n then f i else 0) = 0) cofinite\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>\\<infinity>i. n < i\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>i.\n       (if i \\<le> n then f i else (0::'a)) = (0::'a)", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>\\<infinity>i.\n     (if i \\<le> n then f i else (0::'a)) = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma coeff_Abs_poly:\n  assumes \"\\<And>i. i > n \\<Longrightarrow> f i = 0\"\n  shows   \"coeff (Abs_poly f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (Abs_poly f) = f", "proof (rule Abs_poly_inverse, clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>n. f n = (0::'a)", "have \"eventually (\\<lambda>i. i > n) cofinite\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>i. n < i", "by (auto simp: MOST_nat)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>\\<infinity>i. n < i\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>n. f n = (0::'a)", "thus \"eventually (\\<lambda>i. f i = 0) cofinite\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>\\<infinity>i. n < i\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>i. f i = (0::'a)", "by eventually_elim (use assms in auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>\\<infinity>i. f i = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in inj_idom_hom) inj_idom_hom_map_poly [intro]: \"inj_idom_hom (map_poly hom)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_idom_hom (map_poly hom)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_idom_hom (map_poly hom)", "interpret map_poly_inj_idom_hom hom"], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly_inj_idom_hom hom", "by unfold_locales"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_idom_hom (map_poly hom)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_idom_hom (map_poly hom)", "by (simp add: inj_idom_hom_axioms)"], ["proof (state)\nthis:\n  inj_idom_hom (map_poly hom)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inj_idom_hom_pcompose [intro]:\n  assumes [simp]: \"degree (p :: 'a :: idom poly) \\<noteq> 0\"\n  shows \"inj_idom_hom (\\<lambda>q. pcompose q p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_idom_hom (\\<lambda>q. q \\<circ>\\<^sub>p p)", "by unfold_locales (simp_all add: pcompose_eq_0)"], ["", "lemma degree_sum_less:\n  assumes \"\\<And>x. x \\<in> A \\<Longrightarrow> degree (f x) < n\" \"n > 0\"\n  shows   \"degree (sum f A) < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (sum f A) < n", "using assms"], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> degree (f ?x) < n\n  0 < n\n\ngoal (1 subgoal):\n 1. degree (sum f A) < n", "by (induction rule: infinite_finite_induct) (auto intro!: degree_add_less)"], ["", "lemma degree_lessI:\n  assumes \"p \\<noteq> 0 \\<or> n > 0\" \"\\<forall>k\\<ge>n. coeff p k = 0\"\n  shows   \"degree p < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree p < n", "proof (cases \"p = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> degree p < n\n 2. p \\<noteq> 0 \\<Longrightarrow> degree p < n", "case False"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> degree p < n\n 2. p \\<noteq> 0 \\<Longrightarrow> degree p < n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree p < n", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> degree p < n \\<Longrightarrow> False", "assume *: \"\\<not>(degree p < n)\""], ["proof (state)\nthis:\n  \\<not> degree p < n\n\ngoal (1 subgoal):\n 1. \\<not> degree p < n \\<Longrightarrow> False", "define d where \"d = degree p\""], ["proof (state)\nthis:\n  d = degree p\n\ngoal (1 subgoal):\n 1. \\<not> degree p < n \\<Longrightarrow> False", "from \\<open>p \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> 0", "have \"coeff p d \\<noteq> 0\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. coeff p d \\<noteq> (0::'a)", "by (auto simp: d_def)"], ["proof (state)\nthis:\n  coeff p d \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> degree p < n \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  coeff p d \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> degree p < n \\<Longrightarrow> False", "have \"coeff p d = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff p d = (0::'a)", "using assms(2) *"], ["proof (prove)\nusing this:\n  \\<forall>k\\<ge>n. coeff p k = (0::'a)\n  \\<not> degree p < n\n\ngoal (1 subgoal):\n 1. coeff p d = (0::'a)", "by (auto simp: not_less)"], ["proof (state)\nthis:\n  coeff p d = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> degree p < n \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  coeff p d \\<noteq> (0::'a)\n  coeff p d = (0::'a)", "show False"], ["proof (prove)\nusing this:\n  coeff p d \\<noteq> (0::'a)\n  coeff p d = (0::'a)\n\ngoal (1 subgoal):\n 1. False", "by contradiction"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  degree p < n\n\ngoal (1 subgoal):\n 1. p = 0 \\<Longrightarrow> degree p < n", "qed (use assms in auto)"], ["", "lemma coeff_linear_poly_power:\n  fixes c :: \"'a :: semiring_1\"\n  assumes \"i \\<le> n\"\n  shows   \"coeff ([:a, b:] ^ n) i = of_nat (n choose i) * b ^ i * a ^ (n - i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff ([:a, b:] ^ n) i = of_nat (n choose i) * b ^ i * a ^ (n - i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. coeff ([:a, b:] ^ n) i = of_nat (n choose i) * b ^ i * a ^ (n - i)", "have \"[:a, b:] = monom b 1 + [:a:]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [:a, b:] = monom b 1 + [:a:]", "by (simp add: monom_altdef)"], ["proof (state)\nthis:\n  [:a, b:] = monom b 1 + [:a:]\n\ngoal (1 subgoal):\n 1. coeff ([:a, b:] ^ n) i = of_nat (n choose i) * b ^ i * a ^ (n - i)", "also"], ["proof (state)\nthis:\n  [:a, b:] = monom b 1 + [:a:]\n\ngoal (1 subgoal):\n 1. coeff ([:a, b:] ^ n) i = of_nat (n choose i) * b ^ i * a ^ (n - i)", "have \"coeff (\\<dots> ^ n) i = (\\<Sum>k\\<le>n. a^(n-k) * of_nat (n choose k) * (if k = i then b ^ k else 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff ((monom b 1 + [:a:]) ^ n) i =\n    (\\<Sum>k\\<le>n.\n        a ^ (n - k) * of_nat (n choose k) *\n        (if k = i then b ^ k else (0::'b)))", "by (subst binomial_ring) (simp add: coeff_sum of_nat_poly monom_power poly_const_pow mult_ac)"], ["proof (state)\nthis:\n  coeff ((monom b 1 + [:a:]) ^ n) i =\n  (\\<Sum>k\\<le>n.\n      a ^ (n - k) * of_nat (n choose k) *\n      (if k = i then b ^ k else (0::'b)))\n\ngoal (1 subgoal):\n 1. coeff ([:a, b:] ^ n) i = of_nat (n choose i) * b ^ i * a ^ (n - i)", "also"], ["proof (state)\nthis:\n  coeff ((monom b 1 + [:a:]) ^ n) i =\n  (\\<Sum>k\\<le>n.\n      a ^ (n - k) * of_nat (n choose k) *\n      (if k = i then b ^ k else (0::'b)))\n\ngoal (1 subgoal):\n 1. coeff ([:a, b:] ^ n) i = of_nat (n choose i) * b ^ i * a ^ (n - i)", "have \"\\<dots> = (\\<Sum>k\\<in>{i}. a ^ (n - i) * b ^ i * of_nat (n choose k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<le>n.\n        a ^ (n - k) * of_nat (n choose k) *\n        (if k = i then b ^ k else (0::'b))) =\n    (\\<Sum>k\\<in>{i}. a ^ (n - i) * b ^ i * of_nat (n choose k))", "using assms"], ["proof (prove)\nusing this:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<le>n.\n        a ^ (n - k) * of_nat (n choose k) *\n        (if k = i then b ^ k else (0::'b))) =\n    (\\<Sum>k\\<in>{i}. a ^ (n - i) * b ^ i * of_nat (n choose k))", "by (intro sum.mono_neutral_cong_right) (auto simp: mult_ac)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<le>n.\n      a ^ (n - k) * of_nat (n choose k) *\n      (if k = i then b ^ k else (0::'b))) =\n  (\\<Sum>k\\<in>{i}. a ^ (n - i) * b ^ i * of_nat (n choose k))\n\ngoal (1 subgoal):\n 1. coeff ([:a, b:] ^ n) i = of_nat (n choose i) * b ^ i * a ^ (n - i)", "finally"], ["proof (chain)\npicking this:\n  coeff ([:a, b:] ^ n) i =\n  (\\<Sum>k\\<in>{i}. a ^ (n - i) * b ^ i * of_nat (n choose k))", "show *: ?thesis"], ["proof (prove)\nusing this:\n  coeff ([:a, b:] ^ n) i =\n  (\\<Sum>k\\<in>{i}. a ^ (n - i) * b ^ i * of_nat (n choose k))\n\ngoal (1 subgoal):\n 1. coeff ([:a, b:] ^ n) i = of_nat (n choose i) * b ^ i * a ^ (n - i)", "by (simp add: mult_ac)"], ["proof (state)\nthis:\n  coeff ([:a, b:] ^ n) i = of_nat (n choose i) * b ^ i * a ^ (n - i)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pcompose_altdef: \"pcompose p q = poly (map_poly (\\<lambda>x. [:x:]) p) q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<circ>\\<^sub>p q = poly (map_poly (\\<lambda>x. [:x:]) p) q", "by (induction p) simp_all"], ["", "lemma coeff_mult_0: \"coeff (p * q) 0 = coeff p 0 * coeff q 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (p * q) 0 = coeff p 0 * coeff q 0", "by (simp add: coeff_mult)"], ["", "lemma coeff_pcompose_0 [simp]:\n  \"coeff (pcompose p q) 0 = poly p (coeff q 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (p \\<circ>\\<^sub>p q) 0 = poly p (coeff q 0)", "by (induction p) (simp_all add: coeff_mult_0)"], ["", "lemma reducible_polyI:\n  fixes p :: \"'a :: field poly\"\n  assumes \"p = q * r\" \"degree q > 0\" \"degree r > 0\"\n  shows   \"\\<not>irreducible p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "using assms"], ["proof (prove)\nusing this:\n  p = q * r\n  0 < degree q\n  0 < degree r\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "by (auto simp: irreducible_def)"], ["", "lemma root_imp_reducible_poly:\n  fixes x :: \"'a :: field\"\n  assumes \"poly p x = 0\" and \"degree p > 1\"\n  shows   \"\\<not>irreducible p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "from assms"], ["proof (chain)\npicking this:\n  poly p x = (0::'a)\n  1 < degree p", "have \"p \\<noteq> 0\""], ["proof (prove)\nusing this:\n  poly p x = (0::'a)\n  1 < degree p\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "define q where \"q = [:-x, 1:]\""], ["proof (state)\nthis:\n  q = [:- x, 1::'a:]\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "have \"q dvd p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q dvd p", "using assms"], ["proof (prove)\nusing this:\n  poly p x = (0::'a)\n  1 < degree p\n\ngoal (1 subgoal):\n 1. q dvd p", "by (simp add: poly_eq_0_iff_dvd q_def)"], ["proof (state)\nthis:\n  q dvd p\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "then"], ["proof (chain)\npicking this:\n  q dvd p", "obtain r where p_eq: \"p = q * r\""], ["proof (prove)\nusing this:\n  q dvd p\n\ngoal (1 subgoal):\n 1. (\\<And>r. p = q * r \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (elim dvdE)"], ["proof (state)\nthis:\n  p = q * r\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "have [simp]: \"q \\<noteq> 0\" \"r \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<noteq> 0 &&& r \\<noteq> 0", "using \\<open>p \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 &&& r \\<noteq> 0", "by (auto simp: p_eq)"], ["proof (state)\nthis:\n  q \\<noteq> 0\n  r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "have \"degree p = Suc (degree r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree p = Suc (degree r)", "unfolding p_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (q * r) = Suc (degree r)", "by (subst degree_mult_eq) (auto simp: q_def)"], ["proof (state)\nthis:\n  degree p = Suc (degree r)\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "with assms(2)"], ["proof (chain)\npicking this:\n  1 < degree p\n  degree p = Suc (degree r)", "have \"degree r > 0\""], ["proof (prove)\nusing this:\n  1 < degree p\n  degree p = Suc (degree r)\n\ngoal (1 subgoal):\n 1. 0 < degree r", "by auto"], ["proof (state)\nthis:\n  0 < degree r\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "hence \"\\<not>is_unit r\""], ["proof (prove)\nusing this:\n  0 < degree r\n\ngoal (1 subgoal):\n 1. \\<not> is_unit r", "by auto"], ["proof (state)\nthis:\n  \\<not> is_unit r\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "moreover"], ["proof (state)\nthis:\n  \\<not> is_unit r\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "have \"\\<not>is_unit q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> is_unit q", "by (auto simp: q_def)"], ["proof (state)\nthis:\n  \\<not> is_unit q\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> is_unit r\n  \\<not> is_unit q", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> is_unit r\n  \\<not> is_unit q\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "using p_eq"], ["proof (prove)\nusing this:\n  \\<not> is_unit r\n  \\<not> is_unit q\n  p = q * r\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "by (auto simp: irreducible_def)"], ["proof (state)\nthis:\n  \\<not> irreducible p\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>A typeclass for algebraically closed fields\\<close>"], ["", "(* TODO: Move! *)"], ["", "text \\<open>\n  Since the required sort constraints are not available inside the class, we have to resort\n  to a somewhat awkward way of writing the definition of algebraically closed fields:\n\\<close>"], ["", "class alg_closed_field = field +\n  assumes alg_closed: \"n > 0 \\<Longrightarrow> f n \\<noteq> 0 \\<Longrightarrow> \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = 0\""], ["", "text \\<open>\n  We can then however easily show the equivalence to the proper definition:\n\\<close>"], ["", "lemma alg_closed_imp_poly_has_root:\n  assumes \"degree (p :: 'a :: alg_closed_field poly) > 0\"\n  shows   \"\\<exists>x. poly p x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = (0::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = (0::'a)", "have \"\\<exists>x. (\\<Sum>k\\<le>degree p. coeff p k * x ^ k) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. (\\<Sum>k\\<le>degree p. coeff p k * x ^ k) = (0::'a)", "using assms"], ["proof (prove)\nusing this:\n  0 < degree p\n\ngoal (1 subgoal):\n 1. \\<exists>x. (\\<Sum>k\\<le>degree p. coeff p k * x ^ k) = (0::'a)", "by (intro alg_closed) auto"], ["proof (state)\nthis:\n  \\<exists>x. (\\<Sum>k\\<le>degree p. coeff p k * x ^ k) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = (0::'a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>x. (\\<Sum>k\\<le>degree p. coeff p k * x ^ k) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = (0::'a)", "by (simp add: poly_altdef)"], ["proof (state)\nthis:\n  \\<exists>x. poly p x = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma alg_closedI [Pure.intro]:\n  assumes \"\\<And>p :: 'a poly. degree p > 0 \\<Longrightarrow> lead_coeff p = 1 \\<Longrightarrow> \\<exists>x. poly p x = 0\"\n  shows   \"OFCLASS('a :: field, alg_closed_field_class)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a, alg_closed_field_class)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>0 < n; f n \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)", "fix n :: nat and f :: \"nat \\<Rightarrow> 'a\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>0 < n; f n \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)", "assume n: \"n > 0\" \"f n \\<noteq> 0\""], ["proof (state)\nthis:\n  0 < n\n  f n \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>0 < n; f n \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)", "define p where \"p = Abs_poly (\\<lambda>k. if k \\<le> n then f k else 0)\""], ["proof (state)\nthis:\n  p = Abs_poly (\\<lambda>k. if k \\<le> n then f k else (0::'a))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>0 < n; f n \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)", "have coeff_p: \"coeff p k = (if k \\<le> n then f k else 0)\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff p k = (if k \\<le> n then f k else (0::'a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. coeff p k = (if k \\<le> n then f k else (0::'a))", "have \"eventually (\\<lambda>k. k > n) cofinite\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>k. n < k", "by (auto simp: MOST_nat)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>\\<infinity>k. n < k\n\ngoal (1 subgoal):\n 1. coeff p k = (if k \\<le> n then f k else (0::'a))", "hence \"eventually (\\<lambda>k. (if k \\<le> n then f k else 0) = 0) cofinite\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>\\<infinity>k. n < k\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>k.\n       (if k \\<le> n then f k else (0::'a)) = (0::'a)", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>\\<infinity>k.\n     (if k \\<le> n then f k else (0::'a)) = (0::'a)\n\ngoal (1 subgoal):\n 1. coeff p k = (if k \\<le> n then f k else (0::'a))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>\\<infinity>k.\n     (if k \\<le> n then f k else (0::'a)) = (0::'a)\n\ngoal (1 subgoal):\n 1. coeff p k = (if k \\<le> n then f k else (0::'a))", "unfolding p_def"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>\\<infinity>k.\n     (if k \\<le> n then f k else (0::'a)) = (0::'a)\n\ngoal (1 subgoal):\n 1. coeff (Abs_poly (\\<lambda>k. if k \\<le> n then f k else (0::'a))) k =\n    (if k \\<le> n then f k else (0::'a))", "by (subst Abs_poly_inverse) auto"], ["proof (state)\nthis:\n  coeff p k = (if k \\<le> n then f k else (0::'a))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coeff p ?k = (if ?k \\<le> n then f ?k else (0::'a))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>0 < n; f n \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)", "from n"], ["proof (chain)\npicking this:\n  0 < n\n  f n \\<noteq> (0::'a)", "have \"degree p \\<ge> n\""], ["proof (prove)\nusing this:\n  0 < n\n  f n \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. n \\<le> degree p", "by (intro le_degree) (auto simp: coeff_p)"], ["proof (state)\nthis:\n  n \\<le> degree p\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>0 < n; f n \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)", "moreover"], ["proof (state)\nthis:\n  n \\<le> degree p\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>0 < n; f n \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)", "have \"degree p \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree p \\<le> n", "by (intro degree_le) (auto simp: coeff_p)"], ["proof (state)\nthis:\n  degree p \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>0 < n; f n \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)", "ultimately"], ["proof (chain)\npicking this:\n  n \\<le> degree p\n  degree p \\<le> n", "have deg_p: \"degree p = n\""], ["proof (prove)\nusing this:\n  n \\<le> degree p\n  degree p \\<le> n\n\ngoal (1 subgoal):\n 1. degree p = n", "by linarith"], ["proof (state)\nthis:\n  degree p = n\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>0 < n; f n \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)", "from deg_p and n"], ["proof (chain)\npicking this:\n  degree p = n\n  0 < n\n  f n \\<noteq> (0::'a)", "have [simp]: \"p \\<noteq> 0\""], ["proof (prove)\nusing this:\n  degree p = n\n  0 < n\n  f n \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>0 < n; f n \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)", "define p' where \"p' = smult (inverse (lead_coeff p)) p\""], ["proof (state)\nthis:\n  p' = smult (inverse (lead_coeff p)) p\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>0 < n; f n \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)", "have deg_p': \"degree p' = degree p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree p' = degree p", "by (auto simp: p'_def)"], ["proof (state)\nthis:\n  degree p' = degree p\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>0 < n; f n \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)", "have lead_coeff_p' [simp]: \"lead_coeff p' = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monic p'", "by (auto simp: p'_def)"], ["proof (state)\nthis:\n  monic p'\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>0 < n; f n \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)", "from deg_p and deg_p' and n"], ["proof (chain)\npicking this:\n  degree p = n\n  degree p' = degree p\n  0 < n\n  f n \\<noteq> (0::'a)", "have \"degree p' > 0\""], ["proof (prove)\nusing this:\n  degree p = n\n  degree p' = degree p\n  0 < n\n  f n \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. 0 < degree p'", "by simp"], ["proof (state)\nthis:\n  0 < degree p'\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>0 < n; f n \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)", "from assms[OF this]"], ["proof (chain)\npicking this:\n  monic p' \\<Longrightarrow> \\<exists>x. poly p' x = (0::'a)", "obtain x where \"poly p' x = 0\""], ["proof (prove)\nusing this:\n  monic p' \\<Longrightarrow> \\<exists>x. poly p' x = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        poly p' x = (0::'a) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  poly p' x = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>0 < n; f n \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)", "hence \"poly p x = 0\""], ["proof (prove)\nusing this:\n  poly p' x = (0::'a)\n\ngoal (1 subgoal):\n 1. poly p x = (0::'a)", "by (simp add: p'_def)"], ["proof (state)\nthis:\n  poly p x = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>0 < n; f n \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)", "also"], ["proof (state)\nthis:\n  poly p x = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>0 < n; f n \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)", "have \"poly p x = (\\<Sum>k\\<le>n. f k * x ^ k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly p x = (\\<Sum>k\\<le>n. f k * x ^ k)", "unfolding poly_altdef"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<le>degree p. coeff p i * x ^ i) = (\\<Sum>k\\<le>n. f k * x ^ k)", "by (intro sum.cong) (auto simp: deg_p coeff_p)"], ["proof (state)\nthis:\n  poly p x = (\\<Sum>k\\<le>n. f k * x ^ k)\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>0 < n; f n \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)", "show \"\\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = 0\""], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)", ".."], ["proof (state)\nthis:\n  \\<exists>x. (\\<Sum>k\\<le>n. f k * x ^ k) = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  We can now prove by induction that every polynomial of degree \\<open>n\\<close> splits into a product of\n  \\<open>n\\<close> linear factors:\n\\<close>"], ["", "lemma alg_closed_imp_factorization:\n  fixes p :: \"'a :: alg_closed_field poly\"\n  assumes \"p \\<noteq> 0\"\n  shows \"\\<exists>A. size A = degree p \\<and> p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:-x, 1:])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "using assms"], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "proof (induction \"degree p\" arbitrary: p rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>pa.\n                   \\<lbrakk>degree pa < degree p; pa \\<noteq> 0\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>A.\n  size A = degree pa \\<and>\n  pa = smult (lead_coeff pa) (\\<Prod>x\\<in>#A. [:- x, 1::'a:]);\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A.\n                            size A = degree p \\<and>\n                            p =\n                            smult (lead_coeff p)\n                             (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "case (less p)"], ["proof (state)\nthis:\n  \\<lbrakk>degree ?p < degree p; ?p \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>A.\n                       size A = degree ?p \\<and>\n                       ?p =\n                       smult (lead_coeff ?p)\n                        (\\<Prod>x\\<in>#A. [:- x, 1::'a:])\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>pa.\n                   \\<lbrakk>degree pa < degree p; pa \\<noteq> 0\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>A.\n  size A = degree pa \\<and>\n  pa = smult (lead_coeff pa) (\\<Prod>x\\<in>#A. [:- x, 1::'a:]);\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A.\n                            size A = degree p \\<and>\n                            p =\n                            smult (lead_coeff p)\n                             (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "proof (cases \"degree p = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. degree p = 0 \\<Longrightarrow>\n    \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])\n 2. degree p \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "case True"], ["proof (state)\nthis:\n  degree p = 0\n\ngoal (2 subgoals):\n 1. degree p = 0 \\<Longrightarrow>\n    \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])\n 2. degree p \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "thus ?thesis"], ["proof (prove)\nusing this:\n  degree p = 0\n\ngoal (1 subgoal):\n 1. \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "by (intro exI[of _ \"{#}\"]) (auto elim!: degree_eq_zeroE)"], ["proof (state)\nthis:\n  \\<exists>A.\n     size A = degree p \\<and>\n     p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. degree p \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "case False"], ["proof (state)\nthis:\n  degree p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "then"], ["proof (chain)\npicking this:\n  degree p \\<noteq> 0", "obtain x where x: \"poly p x = 0\""], ["proof (prove)\nusing this:\n  degree p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>x. poly p x = (0::'a) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using alg_closed_imp_poly_has_root"], ["proof (prove)\nusing this:\n  degree p \\<noteq> 0\n  0 < degree ?p \\<Longrightarrow> \\<exists>x. poly ?p x = (0::?'a)\n\ngoal (1 subgoal):\n 1. (\\<And>x. poly p x = (0::'a) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  poly p x = (0::'a)\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "hence \"[:-x, 1:] dvd p\""], ["proof (prove)\nusing this:\n  poly p x = (0::'a)\n\ngoal (1 subgoal):\n 1. [:- x, 1::'a:] dvd p", "using poly_eq_0_iff_dvd"], ["proof (prove)\nusing this:\n  poly p x = (0::'a)\n  (poly ?p ?c = (0::?'a)) = ([:- ?c, 1::?'a:] dvd ?p)\n\ngoal (1 subgoal):\n 1. [:- x, 1::'a:] dvd p", "by blast"], ["proof (state)\nthis:\n  [:- x, 1::'a:] dvd p\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "then"], ["proof (chain)\npicking this:\n  [:- x, 1::'a:] dvd p", "obtain q where p_eq: \"p = [:-x, 1:] * q\""], ["proof (prove)\nusing this:\n  [:- x, 1::'a:] dvd p\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        p = [:- x, 1::'a:] * q \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim dvdE)"], ["proof (state)\nthis:\n  p = [:- x, 1::'a:] * q\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "have \"q \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<noteq> 0", "using less.prems p_eq"], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  p = [:- x, 1::'a:] * q\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "moreover"], ["proof (state)\nthis:\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "from this"], ["proof (chain)\npicking this:\n  q \\<noteq> 0", "have deg: \"degree p = Suc (degree q)\""], ["proof (prove)\nusing this:\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree p = Suc (degree q)", "unfolding p_eq"], ["proof (prove)\nusing this:\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree ([:- x, 1::'a:] * q) = Suc (degree q)", "by (subst degree_mult_eq) auto"], ["proof (state)\nthis:\n  degree p = Suc (degree q)\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "ultimately"], ["proof (chain)\npicking this:\n  q \\<noteq> 0\n  degree p = Suc (degree q)", "obtain A where A: \"size A = degree q\" \"q = smult (lead_coeff q) (\\<Prod>x\\<in>#A. [:-x, 1:])\""], ["proof (prove)\nusing this:\n  q \\<noteq> 0\n  degree p = Suc (degree q)\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>size A = degree q;\n         q = smult (lead_coeff q) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using less.hyps[of q]"], ["proof (prove)\nusing this:\n  q \\<noteq> 0\n  degree p = Suc (degree q)\n  \\<lbrakk>degree q < degree p; q \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>A.\n                       size A = degree q \\<and>\n                       q =\n                       smult (lead_coeff q)\n                        (\\<Prod>x\\<in>#A. [:- x, 1::'a:])\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>size A = degree q;\n         q = smult (lead_coeff q) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  size A = degree q\n  q = smult (lead_coeff q) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "have \"smult (lead_coeff p) (\\<Prod>y\\<in>#add_mset x A. [:- y, 1:]) =\n          [:- x, 1:] * smult (lead_coeff q) (\\<Prod>y\\<in>#A. [:- y, 1:])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smult (lead_coeff p) (\\<Prod>y\\<in>#add_mset x A. [:- y, 1::'a:]) =\n    [:- x, 1::'a:] * smult (lead_coeff q) (\\<Prod>y\\<in>#A. [:- y, 1::'a:])", "unfolding p_eq lead_coeff_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. smult (lead_coeff [:- x, 1::'a:] * lead_coeff q)\n     (\\<Prod>y\\<in>#add_mset x A. [:- y, 1::'a:]) =\n    [:- x, 1::'a:] * smult (lead_coeff q) (\\<Prod>y\\<in>#A. [:- y, 1::'a:])", "by simp"], ["proof (state)\nthis:\n  smult (lead_coeff p) (\\<Prod>y\\<in>#add_mset x A. [:- y, 1::'a:]) =\n  [:- x, 1::'a:] * smult (lead_coeff q) (\\<Prod>y\\<in>#A. [:- y, 1::'a:])\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "also"], ["proof (state)\nthis:\n  smult (lead_coeff p) (\\<Prod>y\\<in>#add_mset x A. [:- y, 1::'a:]) =\n  [:- x, 1::'a:] * smult (lead_coeff q) (\\<Prod>y\\<in>#A. [:- y, 1::'a:])\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "note A(2) [symmetric]"], ["proof (state)\nthis:\n  smult (lead_coeff q) (\\<Prod>x\\<in>#A. [:- x, 1::'a:]) = q\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "also"], ["proof (state)\nthis:\n  smult (lead_coeff q) (\\<Prod>x\\<in>#A. [:- x, 1::'a:]) = q\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "note p_eq [symmetric]"], ["proof (state)\nthis:\n  [:- x, 1::'a:] * q = p\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "finally"], ["proof (chain)\npicking this:\n  smult (lead_coeff p) (\\<Prod>y\\<in>#add_mset x A. [:- y, 1::'a:]) = p", "show ?thesis"], ["proof (prove)\nusing this:\n  smult (lead_coeff p) (\\<Prod>y\\<in>#add_mset x A. [:- y, 1::'a:]) = p\n\ngoal (1 subgoal):\n 1. \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "using A(1)"], ["proof (prove)\nusing this:\n  smult (lead_coeff p) (\\<Prod>y\\<in>#add_mset x A. [:- y, 1::'a:]) = p\n  size A = degree q\n\ngoal (1 subgoal):\n 1. \\<exists>A.\n       size A = degree p \\<and>\n       p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])", "by (intro exI[of _ \"add_mset x A\"]) (auto simp: deg)"], ["proof (state)\nthis:\n  \\<exists>A.\n     size A = degree p \\<and>\n     p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>A.\n     size A = degree p \\<and>\n     p = smult (lead_coeff p) (\\<Prod>x\\<in>#A. [:- x, 1::'a:])\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  As an alternative characterisation of algebraic closure, one can also say that any\n  polynomial of degree at least 2 splits into non-constant factors:\n\\<close>"], ["", "lemma alg_closed_imp_reducible:\n  assumes \"degree (p :: 'a :: alg_closed_field poly) > 1\"\n  shows   \"\\<not>irreducible p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "have \"degree p > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < degree p", "using assms"], ["proof (prove)\nusing this:\n  1 < degree p\n\ngoal (1 subgoal):\n 1. 0 < degree p", "by auto"], ["proof (state)\nthis:\n  0 < degree p\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "then"], ["proof (chain)\npicking this:\n  0 < degree p", "obtain z where z: \"poly p z = 0\""], ["proof (prove)\nusing this:\n  0 < degree p\n\ngoal (1 subgoal):\n 1. (\\<And>z. poly p z = (0::'a) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using alg_closed_imp_poly_has_root[of p]"], ["proof (prove)\nusing this:\n  0 < degree p\n  0 < degree p \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>z. poly p z = (0::'a) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  poly p z = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "then"], ["proof (chain)\npicking this:\n  poly p z = (0::'a)", "have dvd: \"[:-z, 1:] dvd p\""], ["proof (prove)\nusing this:\n  poly p z = (0::'a)\n\ngoal (1 subgoal):\n 1. [:- z, 1::'a:] dvd p", "by (subst dvd_iff_poly_eq_0) auto"], ["proof (state)\nthis:\n  [:- z, 1::'a:] dvd p\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "then"], ["proof (chain)\npicking this:\n  [:- z, 1::'a:] dvd p", "obtain q where q: \"p = [:-z, 1:] * q\""], ["proof (prove)\nusing this:\n  [:- z, 1::'a:] dvd p\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        p = [:- z, 1::'a:] * q \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (erule dvdE)"], ["proof (state)\nthis:\n  p = [:- z, 1::'a:] * q\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "have [simp]: \"q \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<noteq> 0", "using assms q"], ["proof (prove)\nusing this:\n  1 < degree p\n  p = [:- z, 1::'a:] * q\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "proof (rule reducible_polyI)"], ["proof (state)\ngoal (3 subgoals):\n 1. p = ?q * ?r\n 2. 0 < degree ?q\n 3. 0 < degree ?r", "show \"p = [:-z, 1:] * q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = [:- z, 1::'a:] * q", "by fact"], ["proof (state)\nthis:\n  p = [:- z, 1::'a:] * q\n\ngoal (2 subgoals):\n 1. 0 < degree [:- z, 1::'a:]\n 2. 0 < degree q", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < degree [:- z, 1::'a:]\n 2. 0 < degree q", "have \"degree p = degree ([:-z, 1:] * q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree p = degree ([:- z, 1::'a:] * q)", "by (simp only: q)"], ["proof (state)\nthis:\n  degree p = degree ([:- z, 1::'a:] * q)\n\ngoal (2 subgoals):\n 1. 0 < degree [:- z, 1::'a:]\n 2. 0 < degree q", "also"], ["proof (state)\nthis:\n  degree p = degree ([:- z, 1::'a:] * q)\n\ngoal (2 subgoals):\n 1. 0 < degree [:- z, 1::'a:]\n 2. 0 < degree q", "have \"\\<dots> = degree q + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree ([:- z, 1::'a:] * q) = degree q + 1", "by (subst degree_mult_eq) auto"], ["proof (state)\nthis:\n  degree ([:- z, 1::'a:] * q) = degree q + 1\n\ngoal (2 subgoals):\n 1. 0 < degree [:- z, 1::'a:]\n 2. 0 < degree q", "finally"], ["proof (chain)\npicking this:\n  degree p = degree q + 1", "show \"degree q > 0\""], ["proof (prove)\nusing this:\n  degree p = degree q + 1\n\ngoal (1 subgoal):\n 1. 0 < degree q", "using assms"], ["proof (prove)\nusing this:\n  degree p = degree q + 1\n  1 < degree p\n\ngoal (1 subgoal):\n 1. 0 < degree q", "by linarith"], ["proof (state)\nthis:\n  0 < degree q\n\ngoal (1 subgoal):\n 1. 0 < degree [:- z, 1::'a:]", "qed auto"], ["proof (state)\nthis:\n  \\<not> irreducible p\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  When proving algebraic closure through reducibility, we can assume w.l.o.g. that the polynomial\n  is monic and has a non-zero constant coefficient:\n\\<close>"], ["", "lemma alg_closedI_reducible:\n  assumes \"\\<And>p :: 'a poly. degree p > 1 \\<Longrightarrow> lead_coeff p = 1 \\<Longrightarrow> coeff p 0 \\<noteq> 0 \\<Longrightarrow>\n              \\<not>irreducible p\"\n  shows   \"OFCLASS('a :: field, alg_closed_field_class)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a, alg_closed_field_class)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>0 < degree p; monic p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "fix p :: \"'a poly\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>0 < degree p; monic p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "assume p: \"degree p > 0\" \"lead_coeff p = 1\""], ["proof (state)\nthis:\n  0 < degree p\n  monic p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>0 < degree p; monic p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "show \"\\<exists>x. poly p x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = (0::'a)", "proof (cases \"coeff p 0 = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. coeff p 0 = (0::'a) \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)\n 2. coeff p 0 \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>x. poly p x = (0::'a)", "case True"], ["proof (state)\nthis:\n  coeff p 0 = (0::'a)\n\ngoal (2 subgoals):\n 1. coeff p 0 = (0::'a) \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)\n 2. coeff p 0 \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>x. poly p x = (0::'a)", "hence \"poly p 0 = 0\""], ["proof (prove)\nusing this:\n  coeff p 0 = (0::'a)\n\ngoal (1 subgoal):\n 1. poly p (0::'a) = (0::'a)", "by (simp add: poly_0_coeff_0)"], ["proof (state)\nthis:\n  poly p (0::'a) = (0::'a)\n\ngoal (2 subgoals):\n 1. coeff p 0 = (0::'a) \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)\n 2. coeff p 0 \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>x. poly p x = (0::'a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  poly p (0::'a) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = (0::'a)", "by blast"], ["proof (state)\nthis:\n  \\<exists>x. poly p x = (0::'a)\n\ngoal (1 subgoal):\n 1. coeff p 0 \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>x. poly p x = (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. coeff p 0 \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>x. poly p x = (0::'a)", "case False"], ["proof (state)\nthis:\n  coeff p 0 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. coeff p 0 \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>x. poly p x = (0::'a)", "from p and this"], ["proof (chain)\npicking this:\n  0 < degree p\n  monic p\n  coeff p 0 \\<noteq> (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < degree p\n  monic p\n  coeff p 0 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = (0::'a)", "proof (induction \"degree p\" arbitrary: p rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>pa.\n                   \\<lbrakk>degree pa < degree p; 0 < degree pa; monic pa;\n                    coeff pa 0 \\<noteq> (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>x. poly pa x = (0::'a);\n        0 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "case (less p)"], ["proof (state)\nthis:\n  \\<lbrakk>degree ?p < degree p; 0 < degree ?p; monic ?p;\n   coeff ?p 0 \\<noteq> (0::'a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x. poly ?p x = (0::'a)\n  0 < degree p\n  monic p\n  coeff p 0 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>pa.\n                   \\<lbrakk>degree pa < degree p; 0 < degree pa; monic pa;\n                    coeff pa 0 \\<noteq> (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>x. poly pa x = (0::'a);\n        0 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = (0::'a)", "proof (cases \"degree p = 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. degree p = 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)\n 2. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "case True"], ["proof (state)\nthis:\n  degree p = 1\n\ngoal (2 subgoals):\n 1. degree p = 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)\n 2. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "then"], ["proof (chain)\npicking this:\n  degree p = 1", "obtain a b where p: \"p = [:a, b:]\""], ["proof (prove)\nusing this:\n  degree p = 1\n\ngoal (1 subgoal):\n 1. (\\<And>a b. p = [:a, b:] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases p) (auto split: if_splits elim!: degree_eq_zeroE)"], ["proof (state)\nthis:\n  p = [:a, b:]\n\ngoal (2 subgoals):\n 1. degree p = 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)\n 2. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "from True"], ["proof (chain)\npicking this:\n  degree p = 1", "have [simp]: \"b \\<noteq> 0\""], ["proof (prove)\nusing this:\n  degree p = 1\n\ngoal (1 subgoal):\n 1. b \\<noteq> (0::'a)", "by (auto simp: p)"], ["proof (state)\nthis:\n  b \\<noteq> (0::'a)\n\ngoal (2 subgoals):\n 1. degree p = 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)\n 2. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "have \"poly p (-a/b) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly p (- a / b) = (0::'a)", "by (auto simp: p)"], ["proof (state)\nthis:\n  poly p (- a / b) = (0::'a)\n\ngoal (2 subgoals):\n 1. degree p = 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)\n 2. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  poly p (- a / b) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = (0::'a)", "by blast"], ["proof (state)\nthis:\n  \\<exists>x. poly p x = (0::'a)\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "case False"], ["proof (state)\nthis:\n  degree p \\<noteq> 1\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "hence \"degree p > 1\""], ["proof (prove)\nusing this:\n  degree p \\<noteq> 1\n\ngoal (1 subgoal):\n 1. 1 < degree p", "using less.prems"], ["proof (prove)\nusing this:\n  degree p \\<noteq> 1\n  0 < degree p\n  monic p\n  coeff p 0 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. 1 < degree p", "by auto"], ["proof (state)\nthis:\n  1 < degree p\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "from assms[OF \\<open>degree p > 1\\<close> \\<open>lead_coeff p = 1\\<close> \\<open>coeff p 0 \\<noteq> 0\\<close>]"], ["proof (chain)\npicking this:\n  \\<not> irreducible p", "have \"\\<not>irreducible p\""], ["proof (prove)\nusing this:\n  \\<not> irreducible p\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "by auto"], ["proof (state)\nthis:\n  \\<not> irreducible p\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "then"], ["proof (chain)\npicking this:\n  \\<not> irreducible p", "obtain r s where rs: \"degree r > 0\" \"degree s > 0\" \"p = r * s\""], ["proof (prove)\nusing this:\n  \\<not> irreducible p\n\ngoal (1 subgoal):\n 1. (\\<And>r s.\n        \\<lbrakk>0 < degree r; 0 < degree s; p = r * s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using less.prems"], ["proof (prove)\nusing this:\n  \\<not> irreducible p\n  0 < degree p\n  monic p\n  coeff p 0 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>r s.\n        \\<lbrakk>0 < degree r; 0 < degree s; p = r * s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: irreducible_def)"], ["proof (state)\nthis:\n  0 < degree r\n  0 < degree s\n  p = r * s\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "hence \"coeff r 0 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  0 < degree r\n  0 < degree s\n  p = r * s\n\ngoal (1 subgoal):\n 1. coeff r 0 \\<noteq> (0::'a)", "using \\<open>coeff p 0 \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  0 < degree r\n  0 < degree s\n  p = r * s\n  coeff p 0 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. coeff r 0 \\<noteq> (0::'a)", "by (auto simp: coeff_mult_0)"], ["proof (state)\nthis:\n  coeff r 0 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "define r' where \"r' = smult (inverse (lead_coeff r)) r\""], ["proof (state)\nthis:\n  r' = smult (inverse (lead_coeff r)) r\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "have [simp]: \"degree r' = degree r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree r' = degree r", "by (simp add: r'_def)"], ["proof (state)\nthis:\n  degree r' = degree r\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "have lc: \"lead_coeff r' = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monic r'", "using rs"], ["proof (prove)\nusing this:\n  0 < degree r\n  0 < degree s\n  p = r * s\n\ngoal (1 subgoal):\n 1. monic r'", "by (auto simp: r'_def)"], ["proof (state)\nthis:\n  monic r'\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "have nz: \"coeff r' 0 \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff r' 0 \\<noteq> (0::'a)", "using \\<open>coeff r 0 \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  coeff r 0 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. coeff r' 0 \\<noteq> (0::'a)", "by (auto simp: r'_def)"], ["proof (state)\nthis:\n  coeff r' 0 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "have \"degree r < degree r + degree s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree r < degree r + degree s", "using rs"], ["proof (prove)\nusing this:\n  0 < degree r\n  0 < degree s\n  p = r * s\n\ngoal (1 subgoal):\n 1. degree r < degree r + degree s", "by linarith"], ["proof (state)\nthis:\n  degree r < degree r + degree s\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "also"], ["proof (state)\nthis:\n  degree r < degree r + degree s\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "have \"\\<dots> = degree (r * s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree r + degree s = degree (r * s)", "using rs(3) less.prems"], ["proof (prove)\nusing this:\n  p = r * s\n  0 < degree p\n  monic p\n  coeff p 0 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. degree r + degree s = degree (r * s)", "by (subst degree_mult_eq) auto"], ["proof (state)\nthis:\n  degree r + degree s = degree (r * s)\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "also"], ["proof (state)\nthis:\n  degree r + degree s = degree (r * s)\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "have \"r * s = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r * s = p", "using rs(3)"], ["proof (prove)\nusing this:\n  p = r * s\n\ngoal (1 subgoal):\n 1. r * s = p", "by simp"], ["proof (state)\nthis:\n  r * s = p\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "finally"], ["proof (chain)\npicking this:\n  degree r < degree p", "have \"\\<exists>x. poly r' x = 0\""], ["proof (prove)\nusing this:\n  degree r < degree p\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly r' x = (0::'a)", "by (intro less) (use lc rs nz in auto)"], ["proof (state)\nthis:\n  \\<exists>x. poly r' x = (0::'a)\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 1 \\<Longrightarrow> \\<exists>x. poly p x = (0::'a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>x. poly r' x = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = (0::'a)", "using rs(3)"], ["proof (prove)\nusing this:\n  \\<exists>x. poly r' x = (0::'a)\n  p = r * s\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = (0::'a)", "by (auto simp: r'_def)"], ["proof (state)\nthis:\n  \\<exists>x. poly p x = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x. poly p x = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x. poly p x = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x. poly p x = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Using a clever Tschirnhausen transformation mentioned e.g. in the article by\n  Nowak~\\cite{nowak2000}, we can also assume w.l.o.g. that the coefficient $a_{n-1}$ is zero.\n\\<close>"], ["", "lemma alg_closedI_reducible_coeff_deg_minus_one_eq_0:\n  assumes \"\\<And>p :: 'a poly. degree p > 1 \\<Longrightarrow> lead_coeff p = 1 \\<Longrightarrow> coeff p (degree p - 1) = 0 \\<Longrightarrow>\n              coeff p 0 \\<noteq> 0 \\<Longrightarrow> \\<not>irreducible p\"\n  shows   \"OFCLASS('a :: field_char_0, alg_closed_field_class)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a, alg_closed_field_class)", "proof (rule alg_closedI_reducible, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "case (1 p)"], ["proof (state)\nthis:\n  1 < degree p\n  monic p\n  coeff p 0 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "define n where [simp]: \"n = degree p\""], ["proof (state)\nthis:\n  n = degree p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "define a where \"a = coeff p (n - 1)\""], ["proof (state)\nthis:\n  a = coeff p (n - 1)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "define r where \"r = [: -a / of_nat n, 1 :]\""], ["proof (state)\nthis:\n  r = [:- a / of_nat n, 1::'a:]\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "define s where \"s = [: a / of_nat n, 1 :]\""], ["proof (state)\nthis:\n  s = [:a / of_nat n, 1::'a:]\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "define q where \"q = pcompose p r\""], ["proof (state)\nthis:\n  q = p \\<circ>\\<^sub>p r\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "have \"n > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n", "using 1"], ["proof (prove)\nusing this:\n  1 < degree p\n  monic p\n  coeff p 0 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. 0 < n", "by simp"], ["proof (state)\nthis:\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "have r_altdef: \"r = monom 1 1 + [:-a / of_nat n:]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r = monom (1::'a) 1 + [:- a / of_nat n:]", "by (simp add: r_def monom_altdef)"], ["proof (state)\nthis:\n  r = monom (1::'a) 1 + [:- a / of_nat n:]\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "have deg_q: \"degree q = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree q = n", "by (simp add: q_def r_def)"], ["proof (state)\nthis:\n  degree q = n\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "have lc_q: \"lead_coeff q = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monic q", "unfolding q_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. monic (p \\<circ>\\<^sub>p r)", "using 1"], ["proof (prove)\nusing this:\n  1 < degree p\n  monic p\n  coeff p 0 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. monic (p \\<circ>\\<^sub>p r)", "by (subst lead_coeff_comp) (simp_all add: r_def)"], ["proof (state)\nthis:\n  monic q\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "have \"q \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<noteq> 0", "using 1 deg_q"], ["proof (prove)\nusing this:\n  1 < degree p\n  monic p\n  coeff p 0 \\<noteq> (0::'a)\n  degree q = n\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "have \"coeff q (n - 1) =\n          (\\<Sum>i\\<le>n. \\<Sum>k\\<le>i. coeff p i * (of_nat (i choose k) *\n            ((-a / of_nat n) ^ (i - k) * (if k = n - 1 then 1 else 0))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff q (n - 1) =\n    (\\<Sum>i\\<le>n.\n        \\<Sum>k\\<le>i.\n           coeff p i *\n           (of_nat (i choose k) *\n            ((- a / of_nat n) ^ (i - k) *\n             (if k = n - 1 then 1::'a else (0::'a)))))", "unfolding q_def pcompose_altdef poly_altdef r_altdef"], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff\n     (\\<Sum>i\\<le>degree (map_poly (\\<lambda>x. [:x:]) p).\n         coeff (map_poly (\\<lambda>x. [:x:]) p) i *\n         (monom (1::'a) 1 + [:- a / of_nat n:]) ^ i)\n     (n - 1) =\n    (\\<Sum>i\\<le>n.\n        \\<Sum>k\\<le>i.\n           coeff p i *\n           (of_nat (i choose k) *\n            ((- a / of_nat n) ^ (i - k) *\n             (if k = n - 1 then 1::'a else (0::'a)))))", "by (simp_all add: degree_map_poly coeff_map_poly coeff_sum binomial_ring sum_distrib_left poly_const_pow\n                  sum_distrib_right mult_ac monom_power coeff_monom_mult of_nat_poly cong: if_cong)"], ["proof (state)\nthis:\n  coeff q (n - 1) =\n  (\\<Sum>i\\<le>n.\n      \\<Sum>k\\<le>i.\n         coeff p i *\n         (of_nat (i choose k) *\n          ((- a / of_nat n) ^ (i - k) *\n           (if k = n - 1 then 1::'a else (0::'a)))))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "also"], ["proof (state)\nthis:\n  coeff q (n - 1) =\n  (\\<Sum>i\\<le>n.\n      \\<Sum>k\\<le>i.\n         coeff p i *\n         (of_nat (i choose k) *\n          ((- a / of_nat n) ^ (i - k) *\n           (if k = n - 1 then 1::'a else (0::'a)))))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "have \"\\<dots> = (\\<Sum>i\\<le>n. \\<Sum>k\\<in>(if i \\<ge> n - 1 then {n-1} else {}).\n                     coeff p i * (of_nat (i choose k) * (-a / of_nat n) ^ (i - k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<le>n.\n        \\<Sum>k\\<le>i.\n           coeff p i *\n           (of_nat (i choose k) *\n            ((- a / of_nat n) ^ (i - k) *\n             (if k = n - 1 then 1::'a else (0::'a))))) =\n    (\\<Sum>i\\<le>n.\n        \\<Sum>k\\<in>(if n - 1 \\<le> i then {n - 1} else {}).\n          coeff p i * (of_nat (i choose k) * (- a / of_nat n) ^ (i - k)))", "by (rule sum.cong [OF refl], rule sum.mono_neutral_cong_right) (auto split: if_splits)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<le>n.\n      \\<Sum>k\\<le>i.\n         coeff p i *\n         (of_nat (i choose k) *\n          ((- a / of_nat n) ^ (i - k) *\n           (if k = n - 1 then 1::'a else (0::'a))))) =\n  (\\<Sum>i\\<le>n.\n      \\<Sum>k\\<in>(if n - 1 \\<le> i then {n - 1} else {}).\n        coeff p i * (of_nat (i choose k) * (- a / of_nat n) ^ (i - k)))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<le>n.\n      \\<Sum>k\\<le>i.\n         coeff p i *\n         (of_nat (i choose k) *\n          ((- a / of_nat n) ^ (i - k) *\n           (if k = n - 1 then 1::'a else (0::'a))))) =\n  (\\<Sum>i\\<le>n.\n      \\<Sum>k\\<in>(if n - 1 \\<le> i then {n - 1} else {}).\n        coeff p i * (of_nat (i choose k) * (- a / of_nat n) ^ (i - k)))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "have \"\\<dots> = (\\<Sum>i\\<in>{n-1,n}. \\<Sum>k\\<in>(if i \\<ge> n - 1 then {n-1} else {}).\n                     coeff p i * (of_nat (i choose k) * (-a / of_nat n) ^ (i - k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<le>n.\n        \\<Sum>k\\<in>(if n - 1 \\<le> i then {n - 1} else {}).\n          coeff p i * (of_nat (i choose k) * (- a / of_nat n) ^ (i - k))) =\n    (\\<Sum>i\\<in>{n - 1, n}.\n       \\<Sum>k\\<in>(if n - 1 \\<le> i then {n - 1} else {}).\n         coeff p i * (of_nat (i choose k) * (- a / of_nat n) ^ (i - k)))", "by (rule sum.mono_neutral_right) auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<le>n.\n      \\<Sum>k\\<in>(if n - 1 \\<le> i then {n - 1} else {}).\n        coeff p i * (of_nat (i choose k) * (- a / of_nat n) ^ (i - k))) =\n  (\\<Sum>i\\<in>{n - 1, n}.\n     \\<Sum>k\\<in>(if n - 1 \\<le> i then {n - 1} else {}).\n       coeff p i * (of_nat (i choose k) * (- a / of_nat n) ^ (i - k)))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<le>n.\n      \\<Sum>k\\<in>(if n - 1 \\<le> i then {n - 1} else {}).\n        coeff p i * (of_nat (i choose k) * (- a / of_nat n) ^ (i - k))) =\n  (\\<Sum>i\\<in>{n - 1, n}.\n     \\<Sum>k\\<in>(if n - 1 \\<le> i then {n - 1} else {}).\n       coeff p i * (of_nat (i choose k) * (- a / of_nat n) ^ (i - k)))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "have \"\\<dots> = a - of_nat (n choose (n - 1)) * a / of_nat n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{n - 1, n}.\n       \\<Sum>k\\<in>(if n - 1 \\<le> i then {n - 1} else {}).\n         coeff p i * (of_nat (i choose k) * (- a / of_nat n) ^ (i - k))) =\n    a - of_nat (n choose (n - 1)) * a / of_nat n", "using 1"], ["proof (prove)\nusing this:\n  1 < degree p\n  monic p\n  coeff p 0 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{n - 1, n}.\n       \\<Sum>k\\<in>(if n - 1 \\<le> i then {n - 1} else {}).\n         coeff p i * (of_nat (i choose k) * (- a / of_nat n) ^ (i - k))) =\n    a - of_nat (n choose (n - 1)) * a / of_nat n", "by (simp add: a_def)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{n - 1, n}.\n     \\<Sum>k\\<in>(if n - 1 \\<le> i then {n - 1} else {}).\n       coeff p i * (of_nat (i choose k) * (- a / of_nat n) ^ (i - k))) =\n  a - of_nat (n choose (n - 1)) * a / of_nat n\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{n - 1, n}.\n     \\<Sum>k\\<in>(if n - 1 \\<le> i then {n - 1} else {}).\n       coeff p i * (of_nat (i choose k) * (- a / of_nat n) ^ (i - k))) =\n  a - of_nat (n choose (n - 1)) * a / of_nat n\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "have \"n choose (n - 1) = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n choose (n - 1) = n", "using \\<open>n > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. n choose (n - 1) = n", "by (subst binomial_symmetric) auto"], ["proof (state)\nthis:\n  n choose (n - 1) = n\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "also"], ["proof (state)\nthis:\n  n choose (n - 1) = n\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "have \"a - of_nat n * a / of_nat n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a - of_nat n * a / of_nat n = (0::'a)", "using \\<open>n > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. a - of_nat n * a / of_nat n = (0::'a)", "by simp"], ["proof (state)\nthis:\n  a - of_nat n * a / of_nat n = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "finally"], ["proof (chain)\npicking this:\n  coeff q (n - 1) = (0::'a)", "have \"coeff q (n - 1) = 0\""], ["proof (prove)\nusing this:\n  coeff q (n - 1) = (0::'a)\n\ngoal (1 subgoal):\n 1. coeff q (n - 1) = (0::'a)", "."], ["proof (state)\nthis:\n  coeff q (n - 1) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>1 < degree p; monic p; coeff p 0 \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> irreducible p", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "proof (cases \"coeff q 0 = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. coeff q 0 = (0::'a) \\<Longrightarrow> \\<not> irreducible p\n 2. coeff q 0 \\<noteq> (0::'a) \\<Longrightarrow> \\<not> irreducible p", "case True"], ["proof (state)\nthis:\n  coeff q 0 = (0::'a)\n\ngoal (2 subgoals):\n 1. coeff q 0 = (0::'a) \\<Longrightarrow> \\<not> irreducible p\n 2. coeff q 0 \\<noteq> (0::'a) \\<Longrightarrow> \\<not> irreducible p", "hence \"poly p (- (a / of_nat (degree p))) = 0\""], ["proof (prove)\nusing this:\n  coeff q 0 = (0::'a)\n\ngoal (1 subgoal):\n 1. poly p (- (a / of_nat (degree p))) = (0::'a)", "by (auto simp: q_def r_def)"], ["proof (state)\nthis:\n  poly p (- (a / of_nat (degree p))) = (0::'a)\n\ngoal (2 subgoals):\n 1. coeff q 0 = (0::'a) \\<Longrightarrow> \\<not> irreducible p\n 2. coeff q 0 \\<noteq> (0::'a) \\<Longrightarrow> \\<not> irreducible p", "thus ?thesis"], ["proof (prove)\nusing this:\n  poly p (- (a / of_nat (degree p))) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "by (rule root_imp_reducible_poly) (use 1 in auto)"], ["proof (state)\nthis:\n  \\<not> irreducible p\n\ngoal (1 subgoal):\n 1. coeff q 0 \\<noteq> (0::'a) \\<Longrightarrow> \\<not> irreducible p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. coeff q 0 \\<noteq> (0::'a) \\<Longrightarrow> \\<not> irreducible p", "case False"], ["proof (state)\nthis:\n  coeff q 0 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. coeff q 0 \\<noteq> (0::'a) \\<Longrightarrow> \\<not> irreducible p", "hence \"\\<not>irreducible q\""], ["proof (prove)\nusing this:\n  coeff q 0 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> irreducible q", "using assms[of q] and lc_q and 1 and \\<open>coeff q (n - 1) = 0\\<close>"], ["proof (prove)\nusing this:\n  coeff q 0 \\<noteq> (0::'a)\n  \\<lbrakk>1 < degree q; monic q; coeff q (degree q - 1) = (0::'a);\n   coeff q 0 \\<noteq> (0::'a)\\<rbrakk>\n  \\<Longrightarrow> \\<not> irreducible q\n  monic q\n  1 < degree p\n  monic p\n  coeff p 0 \\<noteq> (0::'a)\n  coeff q (n - 1) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> irreducible q", "by (auto simp: deg_q)"], ["proof (state)\nthis:\n  \\<not> irreducible q\n\ngoal (1 subgoal):\n 1. coeff q 0 \\<noteq> (0::'a) \\<Longrightarrow> \\<not> irreducible p", "then"], ["proof (chain)\npicking this:\n  \\<not> irreducible q", "obtain u v where uv: \"degree u > 0\" \"degree v > 0\" \"q = u * v\""], ["proof (prove)\nusing this:\n  \\<not> irreducible q\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>0 < degree u; 0 < degree v; q = u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>q \\<noteq> 0\\<close> 1 deg_q"], ["proof (prove)\nusing this:\n  \\<not> irreducible q\n  q \\<noteq> 0\n  1 < degree p\n  monic p\n  coeff p 0 \\<noteq> (0::'a)\n  degree q = n\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>0 < degree u; 0 < degree v; q = u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: irreducible_def)"], ["proof (state)\nthis:\n  0 < degree u\n  0 < degree v\n  q = u * v\n\ngoal (1 subgoal):\n 1. coeff q 0 \\<noteq> (0::'a) \\<Longrightarrow> \\<not> irreducible p", "have \"p = pcompose q s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = q \\<circ>\\<^sub>p s", "by (simp add: q_def r_def s_def flip: pcompose_assoc)"], ["proof (state)\nthis:\n  p = q \\<circ>\\<^sub>p s\n\ngoal (1 subgoal):\n 1. coeff q 0 \\<noteq> (0::'a) \\<Longrightarrow> \\<not> irreducible p", "also"], ["proof (state)\nthis:\n  p = q \\<circ>\\<^sub>p s\n\ngoal (1 subgoal):\n 1. coeff q 0 \\<noteq> (0::'a) \\<Longrightarrow> \\<not> irreducible p", "have \"q = u * v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q = u * v", "by fact"], ["proof (state)\nthis:\n  q = u * v\n\ngoal (1 subgoal):\n 1. coeff q 0 \\<noteq> (0::'a) \\<Longrightarrow> \\<not> irreducible p", "finally"], ["proof (chain)\npicking this:\n  p = (u * v) \\<circ>\\<^sub>p s", "have \"p = pcompose u s * pcompose v s\""], ["proof (prove)\nusing this:\n  p = (u * v) \\<circ>\\<^sub>p s\n\ngoal (1 subgoal):\n 1. p = u \\<circ>\\<^sub>p s * v \\<circ>\\<^sub>p s", "by (simp add: pcompose_mult)"], ["proof (state)\nthis:\n  p = u \\<circ>\\<^sub>p s * v \\<circ>\\<^sub>p s\n\ngoal (1 subgoal):\n 1. coeff q 0 \\<noteq> (0::'a) \\<Longrightarrow> \\<not> irreducible p", "moreover"], ["proof (state)\nthis:\n  p = u \\<circ>\\<^sub>p s * v \\<circ>\\<^sub>p s\n\ngoal (1 subgoal):\n 1. coeff q 0 \\<noteq> (0::'a) \\<Longrightarrow> \\<not> irreducible p", "have \"degree (pcompose u s) > 0\" \"degree (pcompose v s) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < degree (u \\<circ>\\<^sub>p s) &&& 0 < degree (v \\<circ>\\<^sub>p s)", "using uv"], ["proof (prove)\nusing this:\n  0 < degree u\n  0 < degree v\n  q = u * v\n\ngoal (1 subgoal):\n 1. 0 < degree (u \\<circ>\\<^sub>p s) &&& 0 < degree (v \\<circ>\\<^sub>p s)", "by (simp_all add: s_def)"], ["proof (state)\nthis:\n  0 < degree (u \\<circ>\\<^sub>p s)\n  0 < degree (v \\<circ>\\<^sub>p s)\n\ngoal (1 subgoal):\n 1. coeff q 0 \\<noteq> (0::'a) \\<Longrightarrow> \\<not> irreducible p", "ultimately"], ["proof (chain)\npicking this:\n  p = u \\<circ>\\<^sub>p s * v \\<circ>\\<^sub>p s\n  0 < degree (u \\<circ>\\<^sub>p s)\n  0 < degree (v \\<circ>\\<^sub>p s)", "show \"\\<not>irreducible p\""], ["proof (prove)\nusing this:\n  p = u \\<circ>\\<^sub>p s * v \\<circ>\\<^sub>p s\n  0 < degree (u \\<circ>\\<^sub>p s)\n  0 < degree (v \\<circ>\\<^sub>p s)\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "using 1"], ["proof (prove)\nusing this:\n  p = u \\<circ>\\<^sub>p s * v \\<circ>\\<^sub>p s\n  0 < degree (u \\<circ>\\<^sub>p s)\n  0 < degree (v \\<circ>\\<^sub>p s)\n  1 < degree p\n  monic p\n  coeff p 0 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> irreducible p", "by (intro reducible_polyI)"], ["proof (state)\nthis:\n  \\<not> irreducible p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> irreducible p\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  As a consequence of the full factorisation lemma proven above, we can also show that any\n  polynomial with at least two different roots splits into two non-constant coprime factors:\n\\<close>"], ["", "lemma alg_closed_imp_poly_splits_coprime:\n  assumes \"degree (p :: 'a :: {alg_closed_field} poly) > 1\"\n  assumes \"poly p x = 0\" \"poly p y = 0\" \"x \\<noteq> y\"\n  obtains r s where \"degree r > 0\" \"degree s > 0\" \"coprime r s\" \"p = r * s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r s.\n        \\<lbrakk>0 < degree r; 0 < degree s; coprime r s; p = r * s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>r s.\n        \\<lbrakk>0 < degree r; 0 < degree s; coprime r s; p = r * s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define n where \"n = order x p\""], ["proof (state)\nthis:\n  n = order x p\n\ngoal (1 subgoal):\n 1. (\\<And>r s.\n        \\<lbrakk>0 < degree r; 0 < degree s; coprime r s; p = r * s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"n > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n", "using assms"], ["proof (prove)\nusing this:\n  1 < degree p\n  poly p x = (0::'a)\n  poly p y = (0::'a)\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. 0 < n", "by (metis degree_0 gr0I n_def not_one_less_zero order_root)"], ["proof (state)\nthis:\n  0 < n\n\ngoal (1 subgoal):\n 1. (\\<And>r s.\n        \\<lbrakk>0 < degree r; 0 < degree s; coprime r s; p = r * s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"[:-x, 1:] ^ n dvd p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [:- x, 1::'a:] ^ n dvd p", "unfolding n_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. [:- x, 1::'a:] ^ order x p dvd p", "by (simp add: order_1)"], ["proof (state)\nthis:\n  [:- x, 1::'a:] ^ n dvd p\n\ngoal (1 subgoal):\n 1. (\\<And>r s.\n        \\<lbrakk>0 < degree r; 0 < degree s; coprime r s; p = r * s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  [:- x, 1::'a:] ^ n dvd p", "obtain q where p_eq: \"p = [:-x, 1:] ^ n * q\""], ["proof (prove)\nusing this:\n  [:- x, 1::'a:] ^ n dvd p\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        p = [:- x, 1::'a:] ^ n * q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (elim dvdE)"], ["proof (state)\nthis:\n  p = [:- x, 1::'a:] ^ n * q\n\ngoal (1 subgoal):\n 1. (\\<And>r s.\n        \\<lbrakk>0 < degree r; 0 < degree s; coprime r s; p = r * s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  1 < degree p\n  poly p x = (0::'a)\n  poly p y = (0::'a)\n  x \\<noteq> y", "have [simp]: \"q \\<noteq> 0\""], ["proof (prove)\nusing this:\n  1 < degree p\n  poly p x = (0::'a)\n  poly p y = (0::'a)\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0", "by (auto simp: p_eq)"], ["proof (state)\nthis:\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>r s.\n        \\<lbrakk>0 < degree r; 0 < degree s; coprime r s; p = r * s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"order x p = n + Polynomial.order x q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order x p = n + order x q", "unfolding p_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. order x ([:- x, 1::'a:] ^ n * q) = n + order x q", "by (subst order_mult) (auto simp: order_power_n_n)"], ["proof (state)\nthis:\n  order x p = n + order x q\n\ngoal (1 subgoal):\n 1. (\\<And>r s.\n        \\<lbrakk>0 < degree r; 0 < degree s; coprime r s; p = r * s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"Polynomial.order x q = 0\""], ["proof (prove)\nusing this:\n  order x p = n + order x q\n\ngoal (1 subgoal):\n 1. order x q = 0", "by (simp add: n_def)"], ["proof (state)\nthis:\n  order x q = 0\n\ngoal (1 subgoal):\n 1. (\\<And>r s.\n        \\<lbrakk>0 < degree r; 0 < degree s; coprime r s; p = r * s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"poly q x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  order x q = 0\n\ngoal (1 subgoal):\n 1. poly q x \\<noteq> (0::'a)", "by (simp add: order_root)"], ["proof (state)\nthis:\n  poly q x \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>r s.\n        \\<lbrakk>0 < degree r; 0 < degree s; coprime r s; p = r * s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (rule that)"], ["proof (state)\ngoal (4 subgoals):\n 1. 0 < degree ?r\n 2. 0 < degree ?s\n 3. coprime ?r ?s\n 4. p = ?r * ?s", "show \"coprime ([:-x, 1:] ^ n) q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime ([:- x, 1::'a:] ^ n) q", "proof (rule coprimeI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c.\n       \\<lbrakk>c dvd [:- x, 1::'a:] ^ n; c dvd q\\<rbrakk>\n       \\<Longrightarrow> is_unit c", "fix d"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c.\n       \\<lbrakk>c dvd [:- x, 1::'a:] ^ n; c dvd q\\<rbrakk>\n       \\<Longrightarrow> is_unit c", "assume d: \"d dvd [:-x, 1:] ^ n\" \"d dvd q\""], ["proof (state)\nthis:\n  d dvd [:- x, 1::'a:] ^ n\n  d dvd q\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       \\<lbrakk>c dvd [:- x, 1::'a:] ^ n; c dvd q\\<rbrakk>\n       \\<Longrightarrow> is_unit c", "have \"degree d = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree d = 0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. degree d \\<noteq> 0 \\<Longrightarrow> False", "assume \"\\<not>(degree d = 0)\""], ["proof (state)\nthis:\n  degree d \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree d \\<noteq> 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  degree d \\<noteq> 0", "obtain z where z: \"poly d z = 0\""], ["proof (prove)\nusing this:\n  degree d \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>z. poly d z = (0::'a) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using alg_closed_imp_poly_has_root"], ["proof (prove)\nusing this:\n  degree d \\<noteq> 0\n  0 < degree ?p \\<Longrightarrow> \\<exists>x. poly ?p x = (0::?'a)\n\ngoal (1 subgoal):\n 1. (\\<And>z. poly d z = (0::'a) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  poly d z = (0::'a)\n\ngoal (1 subgoal):\n 1. degree d \\<noteq> 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  poly d z = (0::'a)\n\ngoal (1 subgoal):\n 1. degree d \\<noteq> 0 \\<Longrightarrow> False", "from this and d(1)"], ["proof (chain)\npicking this:\n  poly d z = (0::'a)\n  d dvd [:- x, 1::'a:] ^ n", "have \"poly ([:-x, 1:] ^ n) z = 0\""], ["proof (prove)\nusing this:\n  poly d z = (0::'a)\n  d dvd [:- x, 1::'a:] ^ n\n\ngoal (1 subgoal):\n 1. poly ([:- x, 1::'a:] ^ n) z = (0::'a)", "using dvd_trans poly_eq_0_iff_dvd"], ["proof (prove)\nusing this:\n  poly d z = (0::'a)\n  d dvd [:- x, 1::'a:] ^ n\n  \\<lbrakk>?a dvd ?b; ?b dvd ?c\\<rbrakk> \\<Longrightarrow> ?a dvd ?c\n  (poly ?p ?c = (0::?'a)) = ([:- ?c, 1::?'a:] dvd ?p)\n\ngoal (1 subgoal):\n 1. poly ([:- x, 1::'a:] ^ n) z = (0::'a)", "by blast"], ["proof (state)\nthis:\n  poly ([:- x, 1::'a:] ^ n) z = (0::'a)\n\ngoal (1 subgoal):\n 1. degree d \\<noteq> 0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  poly d z = (0::'a)\n  poly ([:- x, 1::'a:] ^ n) z = (0::'a)", "have \"poly d x = 0\""], ["proof (prove)\nusing this:\n  poly d z = (0::'a)\n  poly ([:- x, 1::'a:] ^ n) z = (0::'a)\n\ngoal (1 subgoal):\n 1. poly d x = (0::'a)", "by auto"], ["proof (state)\nthis:\n  poly d x = (0::'a)\n\ngoal (1 subgoal):\n 1. degree d \\<noteq> 0 \\<Longrightarrow> False", "with d(2)"], ["proof (chain)\npicking this:\n  d dvd q\n  poly d x = (0::'a)", "have \"poly q x = 0\""], ["proof (prove)\nusing this:\n  d dvd q\n  poly d x = (0::'a)\n\ngoal (1 subgoal):\n 1. poly q x = (0::'a)", "using dvd_trans poly_eq_0_iff_dvd"], ["proof (prove)\nusing this:\n  d dvd q\n  poly d x = (0::'a)\n  \\<lbrakk>?a dvd ?b; ?b dvd ?c\\<rbrakk> \\<Longrightarrow> ?a dvd ?c\n  (poly ?p ?c = (0::?'a)) = ([:- ?c, 1::?'a:] dvd ?p)\n\ngoal (1 subgoal):\n 1. poly q x = (0::'a)", "by blast"], ["proof (state)\nthis:\n  poly q x = (0::'a)\n\ngoal (1 subgoal):\n 1. degree d \\<noteq> 0 \\<Longrightarrow> False", "with \\<open>poly q x \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  poly q x \\<noteq> (0::'a)\n  poly q x = (0::'a)", "show False"], ["proof (prove)\nusing this:\n  poly q x \\<noteq> (0::'a)\n  poly q x = (0::'a)\n\ngoal (1 subgoal):\n 1. False", "by contradiction"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  degree d = 0\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       \\<lbrakk>c dvd [:- x, 1::'a:] ^ n; c dvd q\\<rbrakk>\n       \\<Longrightarrow> is_unit c", "thus \"is_unit d\""], ["proof (prove)\nusing this:\n  degree d = 0\n\ngoal (1 subgoal):\n 1. is_unit d", "using d"], ["proof (prove)\nusing this:\n  degree d = 0\n  d dvd [:- x, 1::'a:] ^ n\n  d dvd q\n\ngoal (1 subgoal):\n 1. is_unit d", "by auto"], ["proof (state)\nthis:\n  is_unit d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coprime ([:- x, 1::'a:] ^ n) q\n\ngoal (3 subgoals):\n 1. 0 < degree ([:- x, 1::'a:] ^ n)\n 2. 0 < degree q\n 3. p = [:- x, 1::'a:] ^ n * q", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. 0 < degree ([:- x, 1::'a:] ^ n)\n 2. 0 < degree q\n 3. p = [:- x, 1::'a:] ^ n * q", "have \"poly q y = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly q y = (0::'a)", "using \\<open>poly p y = 0\\<close> \\<open>x \\<noteq> y\\<close>"], ["proof (prove)\nusing this:\n  poly p y = (0::'a)\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. poly q y = (0::'a)", "by (auto simp: p_eq)"], ["proof (state)\nthis:\n  poly q y = (0::'a)\n\ngoal (3 subgoals):\n 1. 0 < degree ([:- x, 1::'a:] ^ n)\n 2. 0 < degree q\n 3. p = [:- x, 1::'a:] ^ n * q", "with \\<open>q \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  q \\<noteq> 0\n  poly q y = (0::'a)", "show \"degree q > 0\""], ["proof (prove)\nusing this:\n  q \\<noteq> 0\n  poly q y = (0::'a)\n\ngoal (1 subgoal):\n 1. 0 < degree q", "using poly_zero"], ["proof (prove)\nusing this:\n  q \\<noteq> 0\n  poly q y = (0::'a)\n  poly ?p ?x = (0::?'a) \\<Longrightarrow> (?p = 0) = (degree ?p = 0)\n\ngoal (1 subgoal):\n 1. 0 < degree q", "by blast"], ["proof (state)\nthis:\n  0 < degree q\n\ngoal (2 subgoals):\n 1. 0 < degree ([:- x, 1::'a:] ^ n)\n 2. p = [:- x, 1::'a:] ^ n * q", "qed (use \\<open>n > 0\\<close> in \\<open>simp_all add: p_eq degree_power_eq\\<close>)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "instance complex :: alg_closed_field"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(complex, alg_closed_field_class)", "by standard (use constant_degree fundamental_theorem_of_algebra neq0_conv in blast)"], ["", "end"]]}