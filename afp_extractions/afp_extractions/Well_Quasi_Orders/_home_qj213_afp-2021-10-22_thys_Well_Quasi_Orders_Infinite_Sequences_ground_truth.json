{"file_name": "/home/qj213/afp-2021-10-22/thys/Well_Quasi_Orders/Infinite_Sequences.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Well_Quasi_Orders", "problem_names": ["lemma SEQ_iff [iff]:\n  \"f \\<in> SEQ A \\<longleftrightarrow> (\\<forall>i. f i \\<in> A)\"", "lemma ithI [intro]:\n  \"f \\<in> B \\<Longrightarrow> f i = x \\<Longrightarrow> x \\<in> ith B i\"", "lemma ithE [elim]:\n  \"\\<lbrakk>x \\<in> ith B i; \\<And>f. \\<lbrakk>f \\<in> B; f i = x\\<rbrakk> \\<Longrightarrow> Q\\<rbrakk> \\<Longrightarrow> Q\"", "lemma ith_conv:\n  \"x \\<in> ith B i \\<longleftrightarrow> (\\<exists>f \\<in> B. x = f i)\"", "lemma eq_uptoI [intro]:\n  \"\\<lbrakk>g \\<in> B; \\<And>j. j < i \\<Longrightarrow> f j = g j\\<rbrakk> \\<Longrightarrow> g \\<in> eq_upto B f i\"", "lemma eq_uptoE [elim]:\n  \"\\<lbrakk>g \\<in> eq_upto B f i; \\<lbrakk>g \\<in> B; \\<And>j. j < i \\<Longrightarrow> f j = g j\\<rbrakk> \\<Longrightarrow> Q\\<rbrakk> \\<Longrightarrow> Q\"", "lemma eq_upto_Suc:\n  \"\\<lbrakk>g \\<in> eq_upto B f i; g i = f i\\<rbrakk> \\<Longrightarrow> g \\<in> eq_upto B f (Suc i)\"", "lemma eq_upto_0 [simp]:\n  \"eq_upto B f 0 = B\"", "lemma eq_upto_cong [fundef_cong]:\n  assumes \"\\<And>j. j < i \\<Longrightarrow> f j = g j\" and \"B = C\"\n  shows \"eq_upto B f i = eq_upto C g i\"", "lemma LEX_imp_not_LEX:\n  assumes \"LEX P f g\"\n    and [dest]: \"\\<And>x y z. P x y \\<Longrightarrow> P y z \\<Longrightarrow> P x z\"\n    and [simp]: \"\\<And>x. \\<not> P x x\"\n  shows \"\\<not> LEX P g f\"", "lemma LEX_cases:\n  assumes \"LEX P f g\"\n  obtains (eq) \"f = g\" | (neq) k where \"\\<forall>i<k. f i = g i\" and \"P (f k) (g k)\"", "lemma LEX_imp_less:\n  assumes \"\\<forall>x\\<in>A. \\<not> P x x\" and \"f \\<in> SEQ A \\<or> g \\<in> SEQ A\"\n    and \"LEX P f g\" and \"\\<forall>i<k. f i = g i\" and \"f k \\<noteq> g k\"\n  shows \"P (f k) (g k)\""], "translations": [["", "lemma SEQ_iff [iff]:\n  \"f \\<in> SEQ A \\<longleftrightarrow> (\\<forall>i. f i \\<in> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<in> SEQ A) = (\\<forall>i. f i \\<in> A)", "by (auto simp: SEQ_def)"], ["", "text \\<open>The \\<open>i\\<close>-th \"column\" of a set \\<open>B\\<close> of infinite sequences.\\<close>"], ["", "definition \"ith B i = {f i | f. f \\<in> B}\""], ["", "lemma ithI [intro]:\n  \"f \\<in> B \\<Longrightarrow> f i = x \\<Longrightarrow> x \\<in> ith B i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> B; f i = x\\<rbrakk> \\<Longrightarrow> x \\<in> ith B i", "by (auto simp: ith_def)"], ["", "lemma ithE [elim]:\n  \"\\<lbrakk>x \\<in> ith B i; \\<And>f. \\<lbrakk>f \\<in> B; f i = x\\<rbrakk> \\<Longrightarrow> Q\\<rbrakk> \\<Longrightarrow> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> ith B i;\n     \\<And>f.\n        \\<lbrakk>f \\<in> B; f i = x\\<rbrakk> \\<Longrightarrow> Q\\<rbrakk>\n    \\<Longrightarrow> Q", "by (auto simp: ith_def)"], ["", "lemma ith_conv:\n  \"x \\<in> ith B i \\<longleftrightarrow> (\\<exists>f \\<in> B. x = f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> ith B i) = (\\<exists>f\\<in>B. x = f i)", "by auto"], ["", "text \\<open>\n  The restriction of a set \\<open>B\\<close> of sequences to sequences that are equal to a given sequence\n  \\<open>f\\<close> up to position \\<open>i\\<close>.\n\\<close>"], ["", "definition eq_upto :: \"(nat \\<Rightarrow> 'a) set \\<Rightarrow> (nat \\<Rightarrow> 'a) \\<Rightarrow> nat \\<Rightarrow> (nat \\<Rightarrow> 'a) set\"\nwhere\n  \"eq_upto B f i = {g \\<in> B. \\<forall>j < i. f j = g j}\""], ["", "lemma eq_uptoI [intro]:\n  \"\\<lbrakk>g \\<in> B; \\<And>j. j < i \\<Longrightarrow> f j = g j\\<rbrakk> \\<Longrightarrow> g \\<in> eq_upto B f i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> B; \\<And>j. j < i \\<Longrightarrow> f j = g j\\<rbrakk>\n    \\<Longrightarrow> g \\<in> eq_upto B f i", "by (auto simp: eq_upto_def)"], ["", "lemma eq_uptoE [elim]:\n  \"\\<lbrakk>g \\<in> eq_upto B f i; \\<lbrakk>g \\<in> B; \\<And>j. j < i \\<Longrightarrow> f j = g j\\<rbrakk> \\<Longrightarrow> Q\\<rbrakk> \\<Longrightarrow> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> eq_upto B f i;\n     \\<lbrakk>g \\<in> B; \\<And>j. j < i \\<Longrightarrow> f j = g j\\<rbrakk>\n     \\<Longrightarrow> Q\\<rbrakk>\n    \\<Longrightarrow> Q", "by (auto simp: eq_upto_def)"], ["", "lemma eq_upto_Suc:\n  \"\\<lbrakk>g \\<in> eq_upto B f i; g i = f i\\<rbrakk> \\<Longrightarrow> g \\<in> eq_upto B f (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> eq_upto B f i; g i = f i\\<rbrakk>\n    \\<Longrightarrow> g \\<in> eq_upto B f (Suc i)", "by (auto simp: eq_upto_def less_Suc_eq)"], ["", "lemma eq_upto_0 [simp]:\n  \"eq_upto B f 0 = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eq_upto B f 0 = B", "by (auto simp: eq_upto_def)"], ["", "lemma eq_upto_cong [fundef_cong]:\n  assumes \"\\<And>j. j < i \\<Longrightarrow> f j = g j\" and \"B = C\"\n  shows \"eq_upto B f i = eq_upto C g i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eq_upto B f i = eq_upto C g i", "using assms"], ["proof (prove)\nusing this:\n  ?j < i \\<Longrightarrow> f ?j = g ?j\n  B = C\n\ngoal (1 subgoal):\n 1. eq_upto B f i = eq_upto C g i", "by (auto simp: eq_upto_def)"], ["", "subsection \\<open>Lexicographic Order on Infinite Sequences\\<close>"], ["", "definition \"LEX P f g \\<longleftrightarrow> (\\<exists>i::nat. P (f i) (g i) \\<and> (\\<forall>j<i. f j = g j))\""], ["", "abbreviation \"LEXEQ P \\<equiv> (LEX P)\\<^sup>=\\<^sup>=\""], ["", "lemma LEX_imp_not_LEX:\n  assumes \"LEX P f g\"\n    and [dest]: \"\\<And>x y z. P x y \\<Longrightarrow> P y z \\<Longrightarrow> P x z\"\n    and [simp]: \"\\<And>x. \\<not> P x x\"\n  shows \"\\<not> LEX P g f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> LEX P g f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> LEX P g f", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> LEX P g f", "fix i j :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> LEX P g f", "assume \"P (f i) (g i)\" and \"\\<forall>k<i. f k = g k\"\n      and \"P (g j) (f j)\" and \"\\<forall>k<j. g k = f k\""], ["proof (state)\nthis:\n  P (f i) (g i)\n  \\<forall>k<i. f k = g k\n  P (g j) (f j)\n  \\<forall>k<j. g k = f k\n\ngoal (1 subgoal):\n 1. \\<not> LEX P g f", "then"], ["proof (chain)\npicking this:\n  P (f i) (g i)\n  \\<forall>k<i. f k = g k\n  P (g j) (f j)\n  \\<forall>k<j. g k = f k", "have False"], ["proof (prove)\nusing this:\n  P (f i) (g i)\n  \\<forall>k<i. f k = g k\n  P (g j) (f j)\n  \\<forall>k<j. g k = f k\n\ngoal (1 subgoal):\n 1. False", "by (cases \"i < j\") (auto simp: not_less dest!: le_imp_less_or_eq)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> LEX P g f", "}"], ["proof (state)\nthis:\n  \\<lbrakk>P (f ?i2) (g ?i2); \\<forall>k<?i2. f k = g k; P (g ?j2) (f ?j2);\n   \\<forall>k<?j2. g k = f k\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> LEX P g f", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>P (f ?i2) (g ?i2); \\<forall>k<?i2. f k = g k; P (g ?j2) (f ?j2);\n   \\<forall>k<?j2. g k = f k\\<rbrakk>\n  \\<Longrightarrow> False", "show \"\\<not> LEX P g f\""], ["proof (prove)\nusing this:\n  \\<lbrakk>P (f ?i2) (g ?i2); \\<forall>k<?i2. f k = g k; P (g ?j2) (f ?j2);\n   \\<forall>k<?j2. g k = f k\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> LEX P g f", "using \\<open>LEX P f g\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>P (f ?i2) (g ?i2); \\<forall>k<?i2. f k = g k; P (g ?j2) (f ?j2);\n   \\<forall>k<?j2. g k = f k\\<rbrakk>\n  \\<Longrightarrow> False\n  LEX P f g\n\ngoal (1 subgoal):\n 1. \\<not> LEX P g f", "unfolding LEX_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>P (f ?i2) (g ?i2); \\<forall>k<?i2. f k = g k; P (g ?j2) (f ?j2);\n   \\<forall>k<?j2. g k = f k\\<rbrakk>\n  \\<Longrightarrow> False\n  \\<exists>i. P (f i) (g i) \\<and> (\\<forall>j<i. f j = g j)\n\ngoal (1 subgoal):\n 1. \\<nexists>i. P (g i) (f i) \\<and> (\\<forall>j<i. g j = f j)", "by blast"], ["proof (state)\nthis:\n  \\<not> LEX P g f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma LEX_cases:\n  assumes \"LEX P f g\"\n  obtains (eq) \"f = g\" | (neq) k where \"\\<forall>i<k. f i = g i\" and \"P (f k) (g k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f = g \\<Longrightarrow> thesis;\n     \\<And>k.\n        \\<lbrakk>\\<forall>i<k. f i = g i; P (f k) (g k)\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  LEX P f g\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f = g \\<Longrightarrow> thesis;\n     \\<And>k.\n        \\<lbrakk>\\<forall>i<k. f i = g i; P (f k) (g k)\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (auto simp: LEX_def)"], ["", "lemma LEX_imp_less:\n  assumes \"\\<forall>x\\<in>A. \\<not> P x x\" and \"f \\<in> SEQ A \\<or> g \\<in> SEQ A\"\n    and \"LEX P f g\" and \"\\<forall>i<k. f i = g i\" and \"f k \\<noteq> g k\"\n  shows \"P (f k) (g k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (f k) (g k)", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A. \\<not> P x x\n  f \\<in> SEQ A \\<or> g \\<in> SEQ A\n  LEX P f g\n  \\<forall>i<k. f i = g i\n  f k \\<noteq> g k\n\ngoal (1 subgoal):\n 1. P (f k) (g k)", "by (auto elim!: LEX_cases) (metis linorder_neqE_nat)+"], ["", "end"]]}