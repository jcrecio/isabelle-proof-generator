{"file_name": "/home/qj213/afp-2021-10-22/thys/Well_Quasi_Orders/Almost_Full.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Well_Quasi_Orders", "problem_names": ["lemma le_Suc_eq':\n  \"x \\<le> Suc y \\<longleftrightarrow> x = 0 \\<or> (\\<exists>x'. x = Suc x' \\<and> x' \\<le> y)\"", "lemma ex_leq_Suc:\n  \"(\\<exists>i\\<le>Suc j. P i) \\<longleftrightarrow> P 0 \\<or> (\\<exists>i\\<le>j. P (Suc i))\"", "lemma ex_less_Suc:\n  \"(\\<exists>i<Suc j. P i) \\<longleftrightarrow> P 0 \\<or> (\\<exists>i<j. P (Suc i))\"", "lemma goodI:\n  \"\\<lbrakk>i < j; P (f i) (f j)\\<rbrakk> \\<Longrightarrow> good P f\"", "lemma goodE [elim]:\n  \"good P f \\<Longrightarrow> (\\<And>i j. \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk> \\<Longrightarrow> Q) \\<Longrightarrow> Q\"", "lemma badE [elim]:\n  \"bad P f \\<Longrightarrow> ((\\<And>i j. i < j \\<Longrightarrow> \\<not> P (f i) (f j)) \\<Longrightarrow> Q) \\<Longrightarrow> Q\"", "lemma almost_full_onI [Pure.intro]:\n  \"(\\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f) \\<Longrightarrow> almost_full_on P A\"", "lemma almost_full_onD:\n  fixes f :: \"nat \\<Rightarrow> 'a\" and A :: \"'a set\"\n  assumes \"almost_full_on P A\" and \"\\<And>i. f i \\<in> A\"\n  obtains i j where \"i < j\" and \"P (f i) (f j)\"", "lemma af_imp_almost_full_on:\n  assumes \"af A P\"\n  shows \"almost_full_on P A\"", "lemma af_mono:\n  assumes \"af A P\"\n    and \"\\<forall>x y. x \\<in> A \\<and> y \\<in> A \\<and> P x y \\<longrightarrow> Q x y\"\n  shows \"af A Q\"", "lemma accessible_on_imp_af:\n  assumes \"accessible_on P A x\"\n  shows \"af A (\\<lambda>u v. \\<not> P v u \\<or> \\<not> P u x)\"", "lemma wfp_on_imp_af:\n  assumes \"wfp_on P A\"\n  shows \"af A (\\<lambda>x y. \\<not> P y x)\"", "lemma af_leq:\n  \"af UNIV ((\\<le>) :: nat \\<Rightarrow> nat \\<Rightarrow> bool)\"", "lemma not_af:\n  \"\\<not> af A P \\<Longrightarrow> (\\<exists>x y. x \\<in> A \\<and> y \\<in> A \\<and> \\<not> P x y) \\<and> (\\<exists>x\\<in>A. \\<not> af A (\\<lambda>y z. P y z \\<or> P x y))\"", "lemma almost_full_on_imp_af:\n  assumes af: \"almost_full_on P A\"\n  shows \"af A P\"", "lemma almost_full_on_UNIV:\n  \"almost_full_on (\\<lambda>_ _. True) UNIV\"", "lemma almost_full_on_imp_reflp_on:\n  assumes \"almost_full_on P A\"\n  shows \"reflp_on P A\"", "lemma almost_full_on_subset:\n  \"A \\<subseteq> B \\<Longrightarrow> almost_full_on P B \\<Longrightarrow> almost_full_on P A\"", "lemma almost_full_on_mono:\n  assumes \"A \\<subseteq> B\" and \"\\<And>x y. Q x y \\<Longrightarrow> P x y\"\n    and \"almost_full_on Q B\"\n  shows \"almost_full_on P A\"", "lemma almost_full_on_imp_homogeneous_subseq:\n  assumes \"almost_full_on P A\"\n    and \"\\<forall>i::nat. f i \\<in> A\"\n  shows \"\\<exists>\\<phi>::nat \\<Rightarrow> nat. \\<forall>i j. i < j \\<longrightarrow> \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))\"", "lemma almost_full_on_imp_no_antichain_on:\n  assumes \"almost_full_on P A\"\n  shows \"\\<not> antichain_on P f A\"", "lemma almost_full_on_map:\n  assumes \"almost_full_on Q B\"\n    and \"h ` A \\<subseteq> B\"\n  shows \"almost_full_on (\\<lambda>x y. Q (h x) (h y)) A\" (is \"almost_full_on ?P A\")", "lemma almost_full_on_hom:\n  fixes h :: \"'a \\<Rightarrow> 'b\"\n  assumes hom: \"\\<And>x y. \\<lbrakk>x \\<in> A; y \\<in> A; P x y\\<rbrakk> \\<Longrightarrow> Q (h x) (h y)\"\n    and af: \"almost_full_on P A\"\n  shows \"almost_full_on Q (h ` A)\"", "lemma almost_full_on_mon:\n  assumes mon: \"\\<And>x y. \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk> \\<Longrightarrow> P x y = Q (h x) (h y)\" \"bij_betw h A B\"\n    and af: \"almost_full_on Q B\"\n  shows \"almost_full_on P A\"", "lemma total_on_and_wfp_on_imp_almost_full_on:\n  assumes \"total_on P A\" and \"wfp_on P A\"\n  shows \"almost_full_on P\\<^sup>=\\<^sup>= A\"", "lemma Nil_imp_good_list_emb [simp]:\n  assumes \"f i = []\"\n  shows \"good (list_emb P) f\"", "lemma ne_lists:\n  assumes \"xs \\<noteq> []\" and \"xs \\<in> lists A\"\n  shows \"hd xs \\<in> A\" and \"tl xs \\<in> lists A\"", "lemma list_emb_eq_length_induct [consumes 2, case_names Nil Cons]:\n  assumes \"length xs = length ys\"\n    and \"list_emb P xs ys\"\n    and \"Q [] []\"\n    and \"\\<And>x y xs ys. \\<lbrakk>P x y; list_emb P xs ys; Q xs ys\\<rbrakk> \\<Longrightarrow> Q (x#xs) (y#ys)\"\n  shows \"Q xs ys\"", "lemma list_emb_eq_length_P:\n  assumes \"length xs = length ys\"\n    and \"list_emb P xs ys\"\n  shows \"\\<forall>i<length xs. P (xs ! i) (ys ! i)\"", "lemma finite_almost_full_on:\n  assumes finite: \"finite A\"\n    and refl: \"reflp_on P A\"\n  shows \"almost_full_on P A\"", "lemma eq_almost_full_on_finite_set:\n  assumes \"finite A\"\n  shows \"almost_full_on (=) A\"", "lemma af_trans_extension_imp_wf:\n  assumes subrel: \"\\<And>x y. P x y \\<Longrightarrow> Q x y\"\n    and af: \"almost_full_on P A\"\n    and trans: \"transp_on Q A\"\n  shows \"wfp_on (strict Q) A\"", "lemma af_trans_imp_wf:\n  assumes \"almost_full_on P A\"\n    and \"transp_on P A\"\n  shows \"wfp_on (strict P) A\"", "lemma wf_and_no_antichain_imp_qo_extension_wf:\n  assumes wf: \"wfp_on (strict P) A\"\n    and anti: \"\\<not> (\\<exists>f. antichain_on P f A)\"\n    and subrel: \"\\<forall>x\\<in>A. \\<forall>y\\<in>A. P x y \\<longrightarrow> Q x y\"\n    and qo: \"qo_on Q A\"\n  shows \"wfp_on (strict Q) A\"", "lemma every_qo_extension_wf_imp_af:\n  assumes ext: \"\\<forall>Q. (\\<forall>x\\<in>A. \\<forall>y\\<in>A. P x y \\<longrightarrow> Q x y) \\<and>\n    qo_on Q A \\<longrightarrow> wfp_on (strict Q) A\"\n    and \"qo_on P A\"\n  shows \"almost_full_on P A\""], "translations": [["", "lemma le_Suc_eq':\n  \"x \\<le> Suc y \\<longleftrightarrow> x = 0 \\<or> (\\<exists>x'. x = Suc x' \\<and> x' \\<le> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<le> Suc y) =\n    (x = 0 \\<or> (\\<exists>x'. x = Suc x' \\<and> x' \\<le> y))", "by (cases x) auto"], ["", "lemma ex_leq_Suc:\n  \"(\\<exists>i\\<le>Suc j. P i) \\<longleftrightarrow> P 0 \\<or> (\\<exists>i\\<le>j. P (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>i\\<le>Suc j. P i) = (P 0 \\<or> (\\<exists>i\\<le>j. P (Suc i)))", "by (auto simp: le_Suc_eq')"], ["", "lemma ex_less_Suc:\n  \"(\\<exists>i<Suc j. P i) \\<longleftrightarrow> P 0 \\<or> (\\<exists>i<j. P (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>i<Suc j. P i) = (P 0 \\<or> (\\<exists>i<j. P (Suc i)))", "by (auto simp: less_Suc_eq_0_disj)"], ["", "subsection \\<open>Basic Definitions and Facts\\<close>"], ["", "text \\<open>\n  An infinite sequence is \\emph{good} whenever there are indices @{term \"i < j\"} such that\n  @{term \"P (f i) (f j)\"}.\n\\<close>"], ["", "definition good :: \"('a \\<Rightarrow> 'a \\<Rightarrow> bool) \\<Rightarrow> (nat \\<Rightarrow> 'a) \\<Rightarrow> bool\"\nwhere\n  \"good P f \\<longleftrightarrow> (\\<exists>i j. i < j \\<and> P (f i) (f j))\""], ["", "text \\<open>A sequence that is not good is called \\emph{bad}.\\<close>"], ["", "abbreviation \"bad P f \\<equiv> \\<not> good P f\""], ["", "lemma goodI:\n  \"\\<lbrakk>i < j; P (f i) (f j)\\<rbrakk> \\<Longrightarrow> good P f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk> \\<Longrightarrow> good P f", "by (auto simp: good_def)"], ["", "lemma goodE [elim]:\n  \"good P f \\<Longrightarrow> (\\<And>i j. \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk> \\<Longrightarrow> Q) \\<Longrightarrow> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>good P f;\n     \\<And>i j.\n        \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk> \\<Longrightarrow> Q\\<rbrakk>\n    \\<Longrightarrow> Q", "by (auto simp: good_def)"], ["", "lemma badE [elim]:\n  \"bad P f \\<Longrightarrow> ((\\<And>i j. i < j \\<Longrightarrow> \\<not> P (f i) (f j)) \\<Longrightarrow> Q) \\<Longrightarrow> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>bad P f;\n     (\\<And>i j.\n         i < j \\<Longrightarrow> \\<not> P (f i) (f j)) \\<Longrightarrow>\n     Q\\<rbrakk>\n    \\<Longrightarrow> Q", "by (auto simp: good_def)"], ["", "definition almost_full_on :: \"('a \\<Rightarrow> 'a \\<Rightarrow> bool) \\<Rightarrow> 'a set \\<Rightarrow> bool\"\nwhere\n  \"almost_full_on P A \\<longleftrightarrow> (\\<forall>f \\<in> SEQ A. good P f)\""], ["", "lemma almost_full_onI [Pure.intro]:\n  \"(\\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f) \\<Longrightarrow> almost_full_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<forall>i. f i \\<in> A \\<Longrightarrow>\n        good P f) \\<Longrightarrow>\n    almost_full_on P A", "unfolding almost_full_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<forall>i. f i \\<in> A \\<Longrightarrow>\n        good P f) \\<Longrightarrow>\n    Ball (SEQ A) (good P)", "by blast"], ["", "lemma almost_full_onD:\n  fixes f :: \"nat \\<Rightarrow> 'a\" and A :: \"'a set\"\n  assumes \"almost_full_on P A\" and \"\\<And>i. f i \\<in> A\"\n  obtains i j where \"i < j\" and \"P (f i) (f j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  almost_full_on P A\n  f ?i \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding almost_full_on_def"], ["proof (prove)\nusing this:\n  Ball (SEQ A) (good P)\n  f ?i \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "subsection \\<open>An equivalent inductive definition\\<close>"], ["", "inductive af for A\n  where\n    now: \"(\\<And>x y. x \\<in> A \\<Longrightarrow> y \\<in> A \\<Longrightarrow> P x y) \\<Longrightarrow> af A P\"\n  | later: \"(\\<And>x. x \\<in> A \\<Longrightarrow> af A (\\<lambda>y z. P y z \\<or> P x y)) \\<Longrightarrow> af A P\""], ["", "lemma af_imp_almost_full_on:\n  assumes \"af A P\"\n  shows \"almost_full_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. almost_full_on P A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "fix f :: \"nat \\<Rightarrow> 'a\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "assume \"\\<forall>i. f i \\<in> A\""], ["proof (state)\nthis:\n  \\<forall>i. f i \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "with assms"], ["proof (chain)\npicking this:\n  af A P\n  \\<forall>i. f i \\<in> A", "obtain i and j where \"i < j\" and \"P (f i) (f j)\""], ["proof (prove)\nusing this:\n  af A P\n  \\<forall>i. f i \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (induct arbitrary: f thesis)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P f thesis.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> P x y;\n        \\<And>i j.\n           \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk> \\<Longrightarrow> thesis;\n        \\<forall>i. f i \\<in> A\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>P f thesis.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> A \\<Longrightarrow>\n                   af A (\\<lambda>y z. P y z \\<or> P x y);\n        \\<And>x f thesis.\n           \\<lbrakk>x \\<in> A;\n            \\<And>i j.\n               \\<lbrakk>i < j; P (f i) (f j) \\<or> P x (f i)\\<rbrakk>\n               \\<Longrightarrow> thesis;\n            \\<forall>i. f i \\<in> A\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>i j.\n           \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk> \\<Longrightarrow> thesis;\n        \\<forall>i. f i \\<in> A\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (later P)"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow> af A (\\<lambda>y z. P y z \\<or> P ?x y)\n  \\<lbrakk>?x \\<in> A;\n   \\<And>i j.\n      \\<lbrakk>i < j; P (?f i) (?f j) \\<or> P ?x (?f i)\\<rbrakk>\n      \\<Longrightarrow> ?thesis;\n   \\<forall>i. ?f i \\<in> A\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>?i < ?j; P (f ?i) (f ?j)\\<rbrakk> \\<Longrightarrow> thesis\n  \\<forall>i. f i \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>P f thesis.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> P x y;\n        \\<And>i j.\n           \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk> \\<Longrightarrow> thesis;\n        \\<forall>i. f i \\<in> A\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>P f thesis.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> A \\<Longrightarrow>\n                   af A (\\<lambda>y z. P y z \\<or> P x y);\n        \\<And>x f thesis.\n           \\<lbrakk>x \\<in> A;\n            \\<And>i j.\n               \\<lbrakk>i < j; P (f i) (f j) \\<or> P x (f i)\\<rbrakk>\n               \\<Longrightarrow> thesis;\n            \\<forall>i. f i \\<in> A\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>i j.\n           \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk> \\<Longrightarrow> thesis;\n        \\<forall>i. f i \\<in> A\\<rbrakk>\n       \\<Longrightarrow> thesis", "define g where [simp]: \"g i = f (Suc i)\" for i"], ["proof (state)\nthis:\n  g ?i = f (Suc ?i)\n\ngoal (2 subgoals):\n 1. \\<And>P f thesis.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> P x y;\n        \\<And>i j.\n           \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk> \\<Longrightarrow> thesis;\n        \\<forall>i. f i \\<in> A\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>P f thesis.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> A \\<Longrightarrow>\n                   af A (\\<lambda>y z. P y z \\<or> P x y);\n        \\<And>x f thesis.\n           \\<lbrakk>x \\<in> A;\n            \\<And>i j.\n               \\<lbrakk>i < j; P (f i) (f j) \\<or> P x (f i)\\<rbrakk>\n               \\<Longrightarrow> thesis;\n            \\<forall>i. f i \\<in> A\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>i j.\n           \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk> \\<Longrightarrow> thesis;\n        \\<forall>i. f i \\<in> A\\<rbrakk>\n       \\<Longrightarrow> thesis", "have \"f 0 \\<in> A\" and \"\\<forall>i. g i \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f 0 \\<in> A &&& \\<forall>i. g i \\<in> A", "using later"], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> af A (\\<lambda>y z. P y z \\<or> P ?x y)\n  \\<lbrakk>?x \\<in> A;\n   \\<And>i j.\n      \\<lbrakk>i < j; P (?f i) (?f j) \\<or> P ?x (?f i)\\<rbrakk>\n      \\<Longrightarrow> ?thesis;\n   \\<forall>i. ?f i \\<in> A\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>?i < ?j; P (f ?i) (f ?j)\\<rbrakk> \\<Longrightarrow> thesis\n  \\<forall>i. f i \\<in> A\n\ngoal (1 subgoal):\n 1. f 0 \\<in> A &&& \\<forall>i. g i \\<in> A", "by auto"], ["proof (state)\nthis:\n  f 0 \\<in> A\n  \\<forall>i. g i \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>P f thesis.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> P x y;\n        \\<And>i j.\n           \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk> \\<Longrightarrow> thesis;\n        \\<forall>i. f i \\<in> A\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>P f thesis.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> A \\<Longrightarrow>\n                   af A (\\<lambda>y z. P y z \\<or> P x y);\n        \\<And>x f thesis.\n           \\<lbrakk>x \\<in> A;\n            \\<And>i j.\n               \\<lbrakk>i < j; P (f i) (f j) \\<or> P x (f i)\\<rbrakk>\n               \\<Longrightarrow> thesis;\n            \\<forall>i. f i \\<in> A\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>i j.\n           \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk> \\<Longrightarrow> thesis;\n        \\<forall>i. f i \\<in> A\\<rbrakk>\n       \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  f 0 \\<in> A\n  \\<forall>i. g i \\<in> A", "obtain i and j where \"i < j\" and \"P (g i) (g j) \\<or> P (f 0) (g i)\""], ["proof (prove)\nusing this:\n  f 0 \\<in> A\n  \\<forall>i. g i \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; P (g i) (g j) \\<or> P (f 0) (g i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using later"], ["proof (prove)\nusing this:\n  f 0 \\<in> A\n  \\<forall>i. g i \\<in> A\n  ?x \\<in> A \\<Longrightarrow> af A (\\<lambda>y z. P y z \\<or> P ?x y)\n  \\<lbrakk>?x \\<in> A;\n   \\<And>i j.\n      \\<lbrakk>i < j; P (?f i) (?f j) \\<or> P ?x (?f i)\\<rbrakk>\n      \\<Longrightarrow> ?thesis;\n   \\<forall>i. ?f i \\<in> A\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>?i < ?j; P (f ?i) (f ?j)\\<rbrakk> \\<Longrightarrow> thesisa__\n  \\<forall>i. f i \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; P (g i) (g j) \\<or> P (f 0) (g i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i < j\n  P (g i) (g j) \\<or> P (f 0) (g i)\n\ngoal (2 subgoals):\n 1. \\<And>P f thesis.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> P x y;\n        \\<And>i j.\n           \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk> \\<Longrightarrow> thesis;\n        \\<forall>i. f i \\<in> A\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>P f thesis.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> A \\<Longrightarrow>\n                   af A (\\<lambda>y z. P y z \\<or> P x y);\n        \\<And>x f thesis.\n           \\<lbrakk>x \\<in> A;\n            \\<And>i j.\n               \\<lbrakk>i < j; P (f i) (f j) \\<or> P x (f i)\\<rbrakk>\n               \\<Longrightarrow> thesis;\n            \\<forall>i. f i \\<in> A\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>i j.\n           \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk> \\<Longrightarrow> thesis;\n        \\<forall>i. f i \\<in> A\\<rbrakk>\n       \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  i < j\n  P (g i) (g j) \\<or> P (f 0) (g i)", "consider \"P (g i) (g j)\" | \"P (f 0) (g i)\""], ["proof (prove)\nusing this:\n  i < j\n  P (g i) (g j) \\<or> P (f 0) (g i)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P (g i) (g j) \\<Longrightarrow> thesis;\n     P (f 0) (g i) \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>P (g i) (g j) \\<Longrightarrow> ?thesis;\n   P (f 0) (g i) \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. \\<And>P f thesis.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> P x y;\n        \\<And>i j.\n           \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk> \\<Longrightarrow> thesis;\n        \\<forall>i. f i \\<in> A\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>P f thesis.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> A \\<Longrightarrow>\n                   af A (\\<lambda>y z. P y z \\<or> P x y);\n        \\<And>x f thesis.\n           \\<lbrakk>x \\<in> A;\n            \\<And>i j.\n               \\<lbrakk>i < j; P (f i) (f j) \\<or> P x (f i)\\<rbrakk>\n               \\<Longrightarrow> thesis;\n            \\<forall>i. f i \\<in> A\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>i j.\n           \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk> \\<Longrightarrow> thesis;\n        \\<forall>i. f i \\<in> A\\<rbrakk>\n       \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>P (g i) (g j) \\<Longrightarrow> ?thesis;\n   P (f 0) (g i) \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>P (g i) (g j) \\<Longrightarrow> ?thesis;\n   P (f 0) (g i) \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. thesis", "using \\<open>i < j\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>P (g i) (g j) \\<Longrightarrow> ?thesis;\n   P (f 0) (g i) \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  i < j\n\ngoal (1 subgoal):\n 1. thesis", "by (cases) (auto intro: later)"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<And>P f thesis.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> P x y;\n        \\<And>i j.\n           \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk> \\<Longrightarrow> thesis;\n        \\<forall>i. f i \\<in> A\\<rbrakk>\n       \\<Longrightarrow> thesis", "qed blast"], ["proof (state)\nthis:\n  i < j\n  P (f i) (f j)\n\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "then"], ["proof (chain)\npicking this:\n  i < j\n  P (f i) (f j)", "show \"good P f\""], ["proof (prove)\nusing this:\n  i < j\n  P (f i) (f j)\n\ngoal (1 subgoal):\n 1. good P f", "by (auto simp: good_def)"], ["proof (state)\nthis:\n  good P f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma af_mono:\n  assumes \"af A P\"\n    and \"\\<forall>x y. x \\<in> A \\<and> y \\<in> A \\<and> P x y \\<longrightarrow> Q x y\"\n  shows \"af A Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. af A Q", "using assms"], ["proof (prove)\nusing this:\n  af A P\n  \\<forall>x y.\n     x \\<in> A \\<and> y \\<in> A \\<and> P x y \\<longrightarrow> Q x y\n\ngoal (1 subgoal):\n 1. af A Q", "proof (induct arbitrary: Q)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> P x y;\n        \\<forall>x y.\n           x \\<in> A \\<and> y \\<in> A \\<and> P x y \\<longrightarrow>\n           Q x y\\<rbrakk>\n       \\<Longrightarrow> af A Q\n 2. \\<And>P Q.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> A \\<Longrightarrow>\n                   af A (\\<lambda>y z. P y z \\<or> P x y);\n        \\<And>x Q.\n           \\<lbrakk>x \\<in> A;\n            \\<forall>xa y.\n               xa \\<in> A \\<and>\n               y \\<in> A \\<and> (P xa y \\<or> P x xa) \\<longrightarrow>\n               Q xa y\\<rbrakk>\n           \\<Longrightarrow> af A Q;\n        \\<forall>x y.\n           x \\<in> A \\<and> y \\<in> A \\<and> P x y \\<longrightarrow>\n           Q x y\\<rbrakk>\n       \\<Longrightarrow> af A Q", "case (now P)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A\\<rbrakk> \\<Longrightarrow> P ?x ?y\n  \\<forall>x y.\n     x \\<in> A \\<and> y \\<in> A \\<and> P x y \\<longrightarrow> Q x y\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> P x y;\n        \\<forall>x y.\n           x \\<in> A \\<and> y \\<in> A \\<and> P x y \\<longrightarrow>\n           Q x y\\<rbrakk>\n       \\<Longrightarrow> af A Q\n 2. \\<And>P Q.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> A \\<Longrightarrow>\n                   af A (\\<lambda>y z. P y z \\<or> P x y);\n        \\<And>x Q.\n           \\<lbrakk>x \\<in> A;\n            \\<forall>xa y.\n               xa \\<in> A \\<and>\n               y \\<in> A \\<and> (P xa y \\<or> P x xa) \\<longrightarrow>\n               Q xa y\\<rbrakk>\n           \\<Longrightarrow> af A Q;\n        \\<forall>x y.\n           x \\<in> A \\<and> y \\<in> A \\<and> P x y \\<longrightarrow>\n           Q x y\\<rbrakk>\n       \\<Longrightarrow> af A Q", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A\\<rbrakk> \\<Longrightarrow> P ?x ?y\n  \\<forall>x y.\n     x \\<in> A \\<and> y \\<in> A \\<and> P x y \\<longrightarrow> Q x y", "have \"\\<And>x y. x \\<in> A \\<Longrightarrow> y \\<in> A \\<Longrightarrow> Q x y\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A\\<rbrakk> \\<Longrightarrow> P ?x ?y\n  \\<forall>x y.\n     x \\<in> A \\<and> y \\<in> A \\<and> P x y \\<longrightarrow> Q x y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk> \\<Longrightarrow> Q x y", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A\\<rbrakk> \\<Longrightarrow> Q ?x ?y\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> P x y;\n        \\<forall>x y.\n           x \\<in> A \\<and> y \\<in> A \\<and> P x y \\<longrightarrow>\n           Q x y\\<rbrakk>\n       \\<Longrightarrow> af A Q\n 2. \\<And>P Q.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> A \\<Longrightarrow>\n                   af A (\\<lambda>y z. P y z \\<or> P x y);\n        \\<And>x Q.\n           \\<lbrakk>x \\<in> A;\n            \\<forall>xa y.\n               xa \\<in> A \\<and>\n               y \\<in> A \\<and> (P xa y \\<or> P x xa) \\<longrightarrow>\n               Q xa y\\<rbrakk>\n           \\<Longrightarrow> af A Q;\n        \\<forall>x y.\n           x \\<in> A \\<and> y \\<in> A \\<and> P x y \\<longrightarrow>\n           Q x y\\<rbrakk>\n       \\<Longrightarrow> af A Q", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A\\<rbrakk> \\<Longrightarrow> Q ?x ?y", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A\\<rbrakk> \\<Longrightarrow> Q ?x ?y\n\ngoal (1 subgoal):\n 1. af A Q", "by (rule af.now)"], ["proof (state)\nthis:\n  af A Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> A \\<Longrightarrow>\n                   af A (\\<lambda>y z. P y z \\<or> P x y);\n        \\<And>x Q.\n           \\<lbrakk>x \\<in> A;\n            \\<forall>xa y.\n               xa \\<in> A \\<and>\n               y \\<in> A \\<and> (P xa y \\<or> P x xa) \\<longrightarrow>\n               Q xa y\\<rbrakk>\n           \\<Longrightarrow> af A Q;\n        \\<forall>x y.\n           x \\<in> A \\<and> y \\<in> A \\<and> P x y \\<longrightarrow>\n           Q x y\\<rbrakk>\n       \\<Longrightarrow> af A Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> A \\<Longrightarrow>\n                   af A (\\<lambda>y z. P y z \\<or> P x y);\n        \\<And>x Q.\n           \\<lbrakk>x \\<in> A;\n            \\<forall>xa y.\n               xa \\<in> A \\<and>\n               y \\<in> A \\<and> (P xa y \\<or> P x xa) \\<longrightarrow>\n               Q xa y\\<rbrakk>\n           \\<Longrightarrow> af A Q;\n        \\<forall>x y.\n           x \\<in> A \\<and> y \\<in> A \\<and> P x y \\<longrightarrow>\n           Q x y\\<rbrakk>\n       \\<Longrightarrow> af A Q", "case (later P)"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow> af A (\\<lambda>y z. P y z \\<or> P ?x y)\n  \\<lbrakk>?x \\<in> A;\n   \\<forall>x y.\n      x \\<in> A \\<and>\n      y \\<in> A \\<and> (P x y \\<or> P ?x x) \\<longrightarrow>\n      ?Q x y\\<rbrakk>\n  \\<Longrightarrow> af A ?Q\n  \\<forall>x y.\n     x \\<in> A \\<and> y \\<in> A \\<and> P x y \\<longrightarrow> Q x y\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> A \\<Longrightarrow>\n                   af A (\\<lambda>y z. P y z \\<or> P x y);\n        \\<And>x Q.\n           \\<lbrakk>x \\<in> A;\n            \\<forall>xa y.\n               xa \\<in> A \\<and>\n               y \\<in> A \\<and> (P xa y \\<or> P x xa) \\<longrightarrow>\n               Q xa y\\<rbrakk>\n           \\<Longrightarrow> af A Q;\n        \\<forall>x y.\n           x \\<in> A \\<and> y \\<in> A \\<and> P x y \\<longrightarrow>\n           Q x y\\<rbrakk>\n       \\<Longrightarrow> af A Q", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. af A Q", "proof (intro af.later [of A Q])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow> af A (\\<lambda>y z. Q y z \\<or> Q x y)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow> af A (\\<lambda>y z. Q y z \\<or> Q x y)", "assume \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow> af A (\\<lambda>y z. Q y z \\<or> Q x y)", "then"], ["proof (chain)\npicking this:\n  x \\<in> A", "show \"af A (\\<lambda>y z. Q y z \\<or> Q x y)\""], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. af A (\\<lambda>y z. Q y z \\<or> Q x y)", "using later(3)"], ["proof (prove)\nusing this:\n  x \\<in> A\n  \\<forall>x y.\n     x \\<in> A \\<and> y \\<in> A \\<and> P x y \\<longrightarrow> Q x y\n\ngoal (1 subgoal):\n 1. af A (\\<lambda>y z. Q y z \\<or> Q x y)", "by (intro later(2) [of x]) auto"], ["proof (state)\nthis:\n  af A (\\<lambda>y z. Q y z \\<or> Q x y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  af A Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma accessible_on_imp_af:\n  assumes \"accessible_on P A x\"\n  shows \"af A (\\<lambda>u v. \\<not> P v u \\<or> \\<not> P u x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. af A (\\<lambda>u v. \\<not> P v u \\<or> \\<not> P u x)", "using assms"], ["proof (prove)\nusing this:\n  accessible_on P A x\n\ngoal (1 subgoal):\n 1. af A (\\<lambda>u v. \\<not> P v u \\<or> \\<not> P u x)", "proof (induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>accessible_on P A x;\n        \\<And>y.\n           \\<lbrakk>y \\<in> A; P y x\\<rbrakk>\n           \\<Longrightarrow> af A\n                              (\\<lambda>u v.\n                                  \\<not> P v u \\<or> \\<not> P u y)\\<rbrakk>\n       \\<Longrightarrow> af A\n                          (\\<lambda>u v. \\<not> P v u \\<or> \\<not> P u x)", "case (1 x)"], ["proof (state)\nthis:\n  accessible_on P A x\n  \\<lbrakk>?y \\<in> A; P ?y x\\<rbrakk>\n  \\<Longrightarrow> af A (\\<lambda>u v. \\<not> P v u \\<or> \\<not> P u ?y)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>accessible_on P A x;\n        \\<And>y.\n           \\<lbrakk>y \\<in> A; P y x\\<rbrakk>\n           \\<Longrightarrow> af A\n                              (\\<lambda>u v.\n                                  \\<not> P v u \\<or> \\<not> P u y)\\<rbrakk>\n       \\<Longrightarrow> af A\n                          (\\<lambda>u v. \\<not> P v u \\<or> \\<not> P u x)", "then"], ["proof (chain)\npicking this:\n  accessible_on P A x\n  \\<lbrakk>?y \\<in> A; P ?y x\\<rbrakk>\n  \\<Longrightarrow> af A (\\<lambda>u v. \\<not> P v u \\<or> \\<not> P u ?y)", "have \"af A (\\<lambda>u v. (\\<not> P v u \\<or> \\<not> P u x) \\<or> \\<not> P u y \\<or> \\<not> P y x)\" if \"y \\<in> A\" for y"], ["proof (prove)\nusing this:\n  accessible_on P A x\n  \\<lbrakk>?y \\<in> A; P ?y x\\<rbrakk>\n  \\<Longrightarrow> af A (\\<lambda>u v. \\<not> P v u \\<or> \\<not> P u ?y)\n\ngoal (1 subgoal):\n 1. af A\n     (\\<lambda>u v.\n         (\\<not> P v u \\<or> \\<not> P u x) \\<or>\n         \\<not> P u y \\<or> \\<not> P y x)", "using that"], ["proof (prove)\nusing this:\n  accessible_on P A x\n  \\<lbrakk>?y \\<in> A; P ?y x\\<rbrakk>\n  \\<Longrightarrow> af A (\\<lambda>u v. \\<not> P v u \\<or> \\<not> P u ?y)\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. af A\n     (\\<lambda>u v.\n         (\\<not> P v u \\<or> \\<not> P u x) \\<or>\n         \\<not> P u y \\<or> \\<not> P y x)", "by (cases \"P y x\") (auto intro: af.now af_mono)"], ["proof (state)\nthis:\n  ?y \\<in> A \\<Longrightarrow>\n  af A\n   (\\<lambda>u v.\n       (\\<not> P v u \\<or> \\<not> P u x) \\<or>\n       \\<not> P u ?y \\<or> \\<not> P ?y x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>accessible_on P A x;\n        \\<And>y.\n           \\<lbrakk>y \\<in> A; P y x\\<rbrakk>\n           \\<Longrightarrow> af A\n                              (\\<lambda>u v.\n                                  \\<not> P v u \\<or> \\<not> P u y)\\<rbrakk>\n       \\<Longrightarrow> af A\n                          (\\<lambda>u v. \\<not> P v u \\<or> \\<not> P u x)", "then"], ["proof (chain)\npicking this:\n  ?y \\<in> A \\<Longrightarrow>\n  af A\n   (\\<lambda>u v.\n       (\\<not> P v u \\<or> \\<not> P u x) \\<or>\n       \\<not> P u ?y \\<or> \\<not> P ?y x)", "show ?case"], ["proof (prove)\nusing this:\n  ?y \\<in> A \\<Longrightarrow>\n  af A\n   (\\<lambda>u v.\n       (\\<not> P v u \\<or> \\<not> P u x) \\<or>\n       \\<not> P u ?y \\<or> \\<not> P ?y x)\n\ngoal (1 subgoal):\n 1. af A (\\<lambda>u v. \\<not> P v u \\<or> \\<not> P u x)", "by (rule af.later)"], ["proof (state)\nthis:\n  af A (\\<lambda>u v. \\<not> P v u \\<or> \\<not> P u x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wfp_on_imp_af:\n  assumes \"wfp_on P A\"\n  shows \"af A (\\<lambda>x y. \\<not> P y x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. af A (\\<lambda>x y. \\<not> P y x)", "using assms"], ["proof (prove)\nusing this:\n  wfp_on P A\n\ngoal (1 subgoal):\n 1. af A (\\<lambda>x y. \\<not> P y x)", "by (auto simp: wfp_on_accessible_on_iff intro: accessible_on_imp_af af.later)"], ["", "lemma af_leq:\n  \"af UNIV ((\\<le>) :: nat \\<Rightarrow> nat \\<Rightarrow> bool)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. af UNIV (\\<le>)", "using wf_less [folded wfP_def wfp_on_UNIV, THEN wfp_on_imp_af]"], ["proof (prove)\nusing this:\n  af UNIV (\\<lambda>x y. \\<not> y < x)\n\ngoal (1 subgoal):\n 1. af UNIV (\\<le>)", "by (simp add: not_less)"], ["", "definition \"NOTAF A P = (SOME x. x \\<in> A \\<and> \\<not> af A (\\<lambda>y z. P y z \\<or> P x y))\""], ["", "lemma not_af:\n  \"\\<not> af A P \\<Longrightarrow> (\\<exists>x y. x \\<in> A \\<and> y \\<in> A \\<and> \\<not> P x y) \\<and> (\\<exists>x\\<in>A. \\<not> af A (\\<lambda>y z. P y z \\<or> P x y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> af A P \\<Longrightarrow>\n    (\\<exists>x y. x \\<in> A \\<and> y \\<in> A \\<and> \\<not> P x y) \\<and>\n    (\\<exists>x\\<in>A. \\<not> af A (\\<lambda>y z. P y z \\<or> P x y))", "unfolding af.simps [of A P]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> ((\\<exists>Pa.\n                P = Pa \\<and>\n                (\\<forall>x xa.\n                    x \\<in> A \\<longrightarrow>\n                    xa \\<in> A \\<longrightarrow> Pa x xa)) \\<or>\n            (\\<exists>Pa.\n                P = Pa \\<and>\n                (\\<forall>x.\n                    x \\<in> A \\<longrightarrow>\n                    af A\n                     (\\<lambda>y z.\n                         Pa y z \\<or> Pa x y)))) \\<Longrightarrow>\n    (\\<exists>x y. x \\<in> A \\<and> y \\<in> A \\<and> \\<not> P x y) \\<and>\n    (\\<exists>x\\<in>A. \\<not> af A (\\<lambda>y z. P y z \\<or> P x y))", "by blast"], ["", "fun F\n  where\n    \"F A P 0 = NOTAF A P\"\n  | \"F A P (Suc i) = (let x = NOTAF A P in F A (\\<lambda>y z. P y z \\<or> P x y) i)\""], ["", "lemma almost_full_on_imp_af:\n  assumes af: \"almost_full_on P A\"\n  shows \"af A P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. af A P", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> af A P \\<Longrightarrow> False", "assume \"\\<not> af A P\""], ["proof (state)\nthis:\n  \\<not> af A P\n\ngoal (1 subgoal):\n 1. \\<not> af A P \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> af A P", "have *: \"F A P n \\<in> A \\<and>\n    \\<not> af A (\\<lambda>y z. P y z \\<or> (\\<exists>i\\<le>n. P (F A P i) y) \\<or> (\\<exists>j\\<le>n. \\<exists>i. i < j \\<and> P (F A P i) (F A P j)))\" for n"], ["proof (prove)\nusing this:\n  \\<not> af A P\n\ngoal (1 subgoal):\n 1. F A P n \\<in> A \\<and>\n    \\<not> af A\n            (\\<lambda>y z.\n                P y z \\<or>\n                (\\<exists>i\\<le>n. P (F A P i) y) \\<or>\n                (\\<exists>j\\<le>n. \\<exists>i<j. P (F A P i) (F A P j)))", "proof (induct n arbitrary: P)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P.\n       \\<not> af A P \\<Longrightarrow>\n       F A P 0 \\<in> A \\<and>\n       \\<not> af A\n               (\\<lambda>y z.\n                   P y z \\<or>\n                   (\\<exists>i\\<le>0. P (F A P i) y) \\<or>\n                   (\\<exists>j\\<le>0. \\<exists>i<j. P (F A P i) (F A P j)))\n 2. \\<And>n P.\n       \\<lbrakk>\\<And>P.\n                   \\<not> af A P \\<Longrightarrow>\n                   F A P n \\<in> A \\<and>\n                   \\<not> af A\n                           (\\<lambda>y z.\n                               P y z \\<or>\n                               (\\<exists>i\\<le>n. P (F A P i) y) \\<or>\n                               (\\<exists>j\\<le>n.\n                                   \\<exists>i<j. P (F A P i) (F A P j)));\n        \\<not> af A P\\<rbrakk>\n       \\<Longrightarrow> F A P (Suc n) \\<in> A \\<and>\n                         \\<not> af A\n                                 (\\<lambda>y z.\n                                     P y z \\<or>\n                                     (\\<exists>i\\<le>Suc n.\n   P (F A P i) y) \\<or>\n                                     (\\<exists>j\\<le>Suc n.\n   \\<exists>i<j. P (F A P i) (F A P j)))", "case 0"], ["proof (state)\nthis:\n  \\<not> af A P\n\ngoal (2 subgoals):\n 1. \\<And>P.\n       \\<not> af A P \\<Longrightarrow>\n       F A P 0 \\<in> A \\<and>\n       \\<not> af A\n               (\\<lambda>y z.\n                   P y z \\<or>\n                   (\\<exists>i\\<le>0. P (F A P i) y) \\<or>\n                   (\\<exists>j\\<le>0. \\<exists>i<j. P (F A P i) (F A P j)))\n 2. \\<And>n P.\n       \\<lbrakk>\\<And>P.\n                   \\<not> af A P \\<Longrightarrow>\n                   F A P n \\<in> A \\<and>\n                   \\<not> af A\n                           (\\<lambda>y z.\n                               P y z \\<or>\n                               (\\<exists>i\\<le>n. P (F A P i) y) \\<or>\n                               (\\<exists>j\\<le>n.\n                                   \\<exists>i<j. P (F A P i) (F A P j)));\n        \\<not> af A P\\<rbrakk>\n       \\<Longrightarrow> F A P (Suc n) \\<in> A \\<and>\n                         \\<not> af A\n                                 (\\<lambda>y z.\n                                     P y z \\<or>\n                                     (\\<exists>i\\<le>Suc n.\n   P (F A P i) y) \\<or>\n                                     (\\<exists>j\\<le>Suc n.\n   \\<exists>i<j. P (F A P i) (F A P j)))", "from \\<open>\\<not> af A P\\<close>"], ["proof (chain)\npicking this:\n  \\<not> af A P", "have \"\\<exists>x. x \\<in> A \\<and> \\<not> af A (\\<lambda>y z. P y z \\<or> P x y)\""], ["proof (prove)\nusing this:\n  \\<not> af A P\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       x \\<in> A \\<and> \\<not> af A (\\<lambda>y z. P y z \\<or> P x y)", "by (auto intro: af.intros)"], ["proof (state)\nthis:\n  \\<exists>x. x \\<in> A \\<and> \\<not> af A (\\<lambda>y z. P y z \\<or> P x y)\n\ngoal (2 subgoals):\n 1. \\<And>P.\n       \\<not> af A P \\<Longrightarrow>\n       F A P 0 \\<in> A \\<and>\n       \\<not> af A\n               (\\<lambda>y z.\n                   P y z \\<or>\n                   (\\<exists>i\\<le>0. P (F A P i) y) \\<or>\n                   (\\<exists>j\\<le>0. \\<exists>i<j. P (F A P i) (F A P j)))\n 2. \\<And>n P.\n       \\<lbrakk>\\<And>P.\n                   \\<not> af A P \\<Longrightarrow>\n                   F A P n \\<in> A \\<and>\n                   \\<not> af A\n                           (\\<lambda>y z.\n                               P y z \\<or>\n                               (\\<exists>i\\<le>n. P (F A P i) y) \\<or>\n                               (\\<exists>j\\<le>n.\n                                   \\<exists>i<j. P (F A P i) (F A P j)));\n        \\<not> af A P\\<rbrakk>\n       \\<Longrightarrow> F A P (Suc n) \\<in> A \\<and>\n                         \\<not> af A\n                                 (\\<lambda>y z.\n                                     P y z \\<or>\n                                     (\\<exists>i\\<le>Suc n.\n   P (F A P i) y) \\<or>\n                                     (\\<exists>j\\<le>Suc n.\n   \\<exists>i<j. P (F A P i) (F A P j)))", "then"], ["proof (chain)\npicking this:\n  \\<exists>x. x \\<in> A \\<and> \\<not> af A (\\<lambda>y z. P y z \\<or> P x y)", "have \"NOTAF A P \\<in> A \\<and> \\<not> af A (\\<lambda>y z. P y z \\<or> P (NOTAF A P) y)\""], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<in> A \\<and> \\<not> af A (\\<lambda>y z. P y z \\<or> P x y)\n\ngoal (1 subgoal):\n 1. NOTAF A P \\<in> A \\<and>\n    \\<not> af A (\\<lambda>y z. P y z \\<or> P (NOTAF A P) y)", "unfolding NOTAF_def"], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<in> A \\<and> \\<not> af A (\\<lambda>y z. P y z \\<or> P x y)\n\ngoal (1 subgoal):\n 1. (SOME x. x \\<in> A \\<and> \\<not> af A (\\<lambda>y z. P y z \\<or> P x y))\n    \\<in> A \\<and>\n    \\<not> af A\n            (\\<lambda>y z.\n                P y z \\<or>\n                P (SOME x.\n                      x \\<in> A \\<and>\n                      \\<not> af A (\\<lambda>y z. P y z \\<or> P x y))\n                 y)", "by (rule someI_ex)"], ["proof (state)\nthis:\n  NOTAF A P \\<in> A \\<and>\n  \\<not> af A (\\<lambda>y z. P y z \\<or> P (NOTAF A P) y)\n\ngoal (2 subgoals):\n 1. \\<And>P.\n       \\<not> af A P \\<Longrightarrow>\n       F A P 0 \\<in> A \\<and>\n       \\<not> af A\n               (\\<lambda>y z.\n                   P y z \\<or>\n                   (\\<exists>i\\<le>0. P (F A P i) y) \\<or>\n                   (\\<exists>j\\<le>0. \\<exists>i<j. P (F A P i) (F A P j)))\n 2. \\<And>n P.\n       \\<lbrakk>\\<And>P.\n                   \\<not> af A P \\<Longrightarrow>\n                   F A P n \\<in> A \\<and>\n                   \\<not> af A\n                           (\\<lambda>y z.\n                               P y z \\<or>\n                               (\\<exists>i\\<le>n. P (F A P i) y) \\<or>\n                               (\\<exists>j\\<le>n.\n                                   \\<exists>i<j. P (F A P i) (F A P j)));\n        \\<not> af A P\\<rbrakk>\n       \\<Longrightarrow> F A P (Suc n) \\<in> A \\<and>\n                         \\<not> af A\n                                 (\\<lambda>y z.\n                                     P y z \\<or>\n                                     (\\<exists>i\\<le>Suc n.\n   P (F A P i) y) \\<or>\n                                     (\\<exists>j\\<le>Suc n.\n   \\<exists>i<j. P (F A P i) (F A P j)))", "with 0"], ["proof (chain)\npicking this:\n  \\<not> af A P\n  NOTAF A P \\<in> A \\<and>\n  \\<not> af A (\\<lambda>y z. P y z \\<or> P (NOTAF A P) y)", "show ?case"], ["proof (prove)\nusing this:\n  \\<not> af A P\n  NOTAF A P \\<in> A \\<and>\n  \\<not> af A (\\<lambda>y z. P y z \\<or> P (NOTAF A P) y)\n\ngoal (1 subgoal):\n 1. F A P 0 \\<in> A \\<and>\n    \\<not> af A\n            (\\<lambda>y z.\n                P y z \\<or>\n                (\\<exists>i\\<le>0. P (F A P i) y) \\<or>\n                (\\<exists>j\\<le>0. \\<exists>i<j. P (F A P i) (F A P j)))", "by simp"], ["proof (state)\nthis:\n  F A P 0 \\<in> A \\<and>\n  \\<not> af A\n          (\\<lambda>y z.\n              P y z \\<or>\n              (\\<exists>i\\<le>0. P (F A P i) y) \\<or>\n              (\\<exists>j\\<le>0. \\<exists>i<j. P (F A P i) (F A P j)))\n\ngoal (1 subgoal):\n 1. \\<And>n P.\n       \\<lbrakk>\\<And>P.\n                   \\<not> af A P \\<Longrightarrow>\n                   F A P n \\<in> A \\<and>\n                   \\<not> af A\n                           (\\<lambda>y z.\n                               P y z \\<or>\n                               (\\<exists>i\\<le>n. P (F A P i) y) \\<or>\n                               (\\<exists>j\\<le>n.\n                                   \\<exists>i<j. P (F A P i) (F A P j)));\n        \\<not> af A P\\<rbrakk>\n       \\<Longrightarrow> F A P (Suc n) \\<in> A \\<and>\n                         \\<not> af A\n                                 (\\<lambda>y z.\n                                     P y z \\<or>\n                                     (\\<exists>i\\<le>Suc n.\n   P (F A P i) y) \\<or>\n                                     (\\<exists>j\\<le>Suc n.\n   \\<exists>i<j. P (F A P i) (F A P j)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n P.\n       \\<lbrakk>\\<And>P.\n                   \\<not> af A P \\<Longrightarrow>\n                   F A P n \\<in> A \\<and>\n                   \\<not> af A\n                           (\\<lambda>y z.\n                               P y z \\<or>\n                               (\\<exists>i\\<le>n. P (F A P i) y) \\<or>\n                               (\\<exists>j\\<le>n.\n                                   \\<exists>i<j. P (F A P i) (F A P j)));\n        \\<not> af A P\\<rbrakk>\n       \\<Longrightarrow> F A P (Suc n) \\<in> A \\<and>\n                         \\<not> af A\n                                 (\\<lambda>y z.\n                                     P y z \\<or>\n                                     (\\<exists>i\\<le>Suc n.\n   P (F A P i) y) \\<or>\n                                     (\\<exists>j\\<le>Suc n.\n   \\<exists>i<j. P (F A P i) (F A P j)))", "case (Suc n)"], ["proof (state)\nthis:\n  \\<not> af A ?P \\<Longrightarrow>\n  F A ?P n \\<in> A \\<and>\n  \\<not> af A\n          (\\<lambda>y z.\n              ?P y z \\<or>\n              (\\<exists>i\\<le>n. ?P (F A ?P i) y) \\<or>\n              (\\<exists>j\\<le>n. \\<exists>i<j. ?P (F A ?P i) (F A ?P j)))\n  \\<not> af A P\n\ngoal (1 subgoal):\n 1. \\<And>n P.\n       \\<lbrakk>\\<And>P.\n                   \\<not> af A P \\<Longrightarrow>\n                   F A P n \\<in> A \\<and>\n                   \\<not> af A\n                           (\\<lambda>y z.\n                               P y z \\<or>\n                               (\\<exists>i\\<le>n. P (F A P i) y) \\<or>\n                               (\\<exists>j\\<le>n.\n                                   \\<exists>i<j. P (F A P i) (F A P j)));\n        \\<not> af A P\\<rbrakk>\n       \\<Longrightarrow> F A P (Suc n) \\<in> A \\<and>\n                         \\<not> af A\n                                 (\\<lambda>y z.\n                                     P y z \\<or>\n                                     (\\<exists>i\\<le>Suc n.\n   P (F A P i) y) \\<or>\n                                     (\\<exists>j\\<le>Suc n.\n   \\<exists>i<j. P (F A P i) (F A P j)))", "from \\<open>\\<not> af A P\\<close>"], ["proof (chain)\npicking this:\n  \\<not> af A P", "have \"\\<exists>x. x \\<in> A \\<and> \\<not> af A (\\<lambda>y z. P y z \\<or> P x y)\""], ["proof (prove)\nusing this:\n  \\<not> af A P\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       x \\<in> A \\<and> \\<not> af A (\\<lambda>y z. P y z \\<or> P x y)", "by (auto intro: af.intros)"], ["proof (state)\nthis:\n  \\<exists>x. x \\<in> A \\<and> \\<not> af A (\\<lambda>y z. P y z \\<or> P x y)\n\ngoal (1 subgoal):\n 1. \\<And>n P.\n       \\<lbrakk>\\<And>P.\n                   \\<not> af A P \\<Longrightarrow>\n                   F A P n \\<in> A \\<and>\n                   \\<not> af A\n                           (\\<lambda>y z.\n                               P y z \\<or>\n                               (\\<exists>i\\<le>n. P (F A P i) y) \\<or>\n                               (\\<exists>j\\<le>n.\n                                   \\<exists>i<j. P (F A P i) (F A P j)));\n        \\<not> af A P\\<rbrakk>\n       \\<Longrightarrow> F A P (Suc n) \\<in> A \\<and>\n                         \\<not> af A\n                                 (\\<lambda>y z.\n                                     P y z \\<or>\n                                     (\\<exists>i\\<le>Suc n.\n   P (F A P i) y) \\<or>\n                                     (\\<exists>j\\<le>Suc n.\n   \\<exists>i<j. P (F A P i) (F A P j)))", "then"], ["proof (chain)\npicking this:\n  \\<exists>x. x \\<in> A \\<and> \\<not> af A (\\<lambda>y z. P y z \\<or> P x y)", "have \"NOTAF A P \\<in> A \\<and> \\<not> af A (\\<lambda>y z. P y z \\<or> P (NOTAF A P) y)\""], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<in> A \\<and> \\<not> af A (\\<lambda>y z. P y z \\<or> P x y)\n\ngoal (1 subgoal):\n 1. NOTAF A P \\<in> A \\<and>\n    \\<not> af A (\\<lambda>y z. P y z \\<or> P (NOTAF A P) y)", "unfolding NOTAF_def"], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<in> A \\<and> \\<not> af A (\\<lambda>y z. P y z \\<or> P x y)\n\ngoal (1 subgoal):\n 1. (SOME x. x \\<in> A \\<and> \\<not> af A (\\<lambda>y z. P y z \\<or> P x y))\n    \\<in> A \\<and>\n    \\<not> af A\n            (\\<lambda>y z.\n                P y z \\<or>\n                P (SOME x.\n                      x \\<in> A \\<and>\n                      \\<not> af A (\\<lambda>y z. P y z \\<or> P x y))\n                 y)", "by (rule someI_ex)"], ["proof (state)\nthis:\n  NOTAF A P \\<in> A \\<and>\n  \\<not> af A (\\<lambda>y z. P y z \\<or> P (NOTAF A P) y)\n\ngoal (1 subgoal):\n 1. \\<And>n P.\n       \\<lbrakk>\\<And>P.\n                   \\<not> af A P \\<Longrightarrow>\n                   F A P n \\<in> A \\<and>\n                   \\<not> af A\n                           (\\<lambda>y z.\n                               P y z \\<or>\n                               (\\<exists>i\\<le>n. P (F A P i) y) \\<or>\n                               (\\<exists>j\\<le>n.\n                                   \\<exists>i<j. P (F A P i) (F A P j)));\n        \\<not> af A P\\<rbrakk>\n       \\<Longrightarrow> F A P (Suc n) \\<in> A \\<and>\n                         \\<not> af A\n                                 (\\<lambda>y z.\n                                     P y z \\<or>\n                                     (\\<exists>i\\<le>Suc n.\n   P (F A P i) y) \\<or>\n                                     (\\<exists>j\\<le>Suc n.\n   \\<exists>i<j. P (F A P i) (F A P j)))", "from Suc(1) [OF this [THEN conjunct2]]"], ["proof (chain)\npicking this:\n  F A (\\<lambda>a b. P a b \\<or> P (NOTAF A P) a) n \\<in> A \\<and>\n  \\<not> af A\n          (\\<lambda>y z.\n              (P y z \\<or> P (NOTAF A P) y) \\<or>\n              (\\<exists>i\\<le>n.\n                  P (F A (\\<lambda>a b. P a b \\<or> P (NOTAF A P) a) i)\n                   y \\<or>\n                  P (NOTAF A P)\n                   (F A (\\<lambda>a b. P a b \\<or> P (NOTAF A P) a)\n                     i)) \\<or>\n              (\\<exists>j\\<le>n.\n                  \\<exists>i<j.\n                     P (F A (\\<lambda>a b. P a b \\<or> P (NOTAF A P) a) i)\n                      (F A (\\<lambda>a b. P a b \\<or> P (NOTAF A P) a)\n                        j) \\<or>\n                     P (NOTAF A P)\n                      (F A (\\<lambda>a b. P a b \\<or> P (NOTAF A P) a) i)))", "show ?case"], ["proof (prove)\nusing this:\n  F A (\\<lambda>a b. P a b \\<or> P (NOTAF A P) a) n \\<in> A \\<and>\n  \\<not> af A\n          (\\<lambda>y z.\n              (P y z \\<or> P (NOTAF A P) y) \\<or>\n              (\\<exists>i\\<le>n.\n                  P (F A (\\<lambda>a b. P a b \\<or> P (NOTAF A P) a) i)\n                   y \\<or>\n                  P (NOTAF A P)\n                   (F A (\\<lambda>a b. P a b \\<or> P (NOTAF A P) a)\n                     i)) \\<or>\n              (\\<exists>j\\<le>n.\n                  \\<exists>i<j.\n                     P (F A (\\<lambda>a b. P a b \\<or> P (NOTAF A P) a) i)\n                      (F A (\\<lambda>a b. P a b \\<or> P (NOTAF A P) a)\n                        j) \\<or>\n                     P (NOTAF A P)\n                      (F A (\\<lambda>a b. P a b \\<or> P (NOTAF A P) a) i)))\n\ngoal (1 subgoal):\n 1. F A P (Suc n) \\<in> A \\<and>\n    \\<not> af A\n            (\\<lambda>y z.\n                P y z \\<or>\n                (\\<exists>i\\<le>Suc n. P (F A P i) y) \\<or>\n                (\\<exists>j\\<le>Suc n. \\<exists>i<j. P (F A P i) (F A P j)))", "by (fastforce simp: ex_leq_Suc ex_less_Suc elim!: back_subst [where P = \"\\<lambda>x. \\<not> af A x\"])"], ["proof (state)\nthis:\n  F A P (Suc n) \\<in> A \\<and>\n  \\<not> af A\n          (\\<lambda>y z.\n              P y z \\<or>\n              (\\<exists>i\\<le>Suc n. P (F A P i) y) \\<or>\n              (\\<exists>j\\<le>Suc n. \\<exists>i<j. P (F A P i) (F A P j)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F A P ?n \\<in> A \\<and>\n  \\<not> af A\n          (\\<lambda>y z.\n              P y z \\<or>\n              (\\<exists>i\\<le>?n. P (F A P i) y) \\<or>\n              (\\<exists>j\\<le>?n. \\<exists>i<j. P (F A P i) (F A P j)))\n\ngoal (1 subgoal):\n 1. \\<not> af A P \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  F A P ?n \\<in> A \\<and>\n  \\<not> af A\n          (\\<lambda>y z.\n              P y z \\<or>\n              (\\<exists>i\\<le>?n. P (F A P i) y) \\<or>\n              (\\<exists>j\\<le>?n. \\<exists>i<j. P (F A P i) (F A P j)))", "have \"F A P \\<in> SEQ A\""], ["proof (prove)\nusing this:\n  F A P ?n \\<in> A \\<and>\n  \\<not> af A\n          (\\<lambda>y z.\n              P y z \\<or>\n              (\\<exists>i\\<le>?n. P (F A P i) y) \\<or>\n              (\\<exists>j\\<le>?n. \\<exists>i<j. P (F A P i) (F A P j)))\n\ngoal (1 subgoal):\n 1. F A P \\<in> SEQ A", "by auto"], ["proof (state)\nthis:\n  F A P \\<in> SEQ A\n\ngoal (1 subgoal):\n 1. \\<not> af A P \\<Longrightarrow> False", "from af [unfolded almost_full_on_def, THEN bspec, OF this] and not_af [OF * [THEN conjunct2]]"], ["proof (chain)\npicking this:\n  good P (F A P)\n  (\\<exists>x y.\n      x \\<in> A \\<and>\n      y \\<in> A \\<and>\n      \\<not> (P x y \\<or>\n              (\\<exists>i\\<le>?n2. P (F A P i) x) \\<or>\n              (\\<exists>j\\<le>?n2.\n                  \\<exists>i<j. P (F A P i) (F A P j)))) \\<and>\n  (\\<exists>x\\<in>A.\n      \\<not> af A\n              (\\<lambda>y z.\n                  (P y z \\<or>\n                   (\\<exists>i\\<le>?n2. P (F A P i) y) \\<or>\n                   (\\<exists>j\\<le>?n2.\n                       \\<exists>i<j. P (F A P i) (F A P j))) \\<or>\n                  P x y \\<or>\n                  (\\<exists>i\\<le>?n2. P (F A P i) x) \\<or>\n                  (\\<exists>j\\<le>?n2.\n                      \\<exists>i<j. P (F A P i) (F A P j))))", "show False"], ["proof (prove)\nusing this:\n  good P (F A P)\n  (\\<exists>x y.\n      x \\<in> A \\<and>\n      y \\<in> A \\<and>\n      \\<not> (P x y \\<or>\n              (\\<exists>i\\<le>?n2. P (F A P i) x) \\<or>\n              (\\<exists>j\\<le>?n2.\n                  \\<exists>i<j. P (F A P i) (F A P j)))) \\<and>\n  (\\<exists>x\\<in>A.\n      \\<not> af A\n              (\\<lambda>y z.\n                  (P y z \\<or>\n                   (\\<exists>i\\<le>?n2. P (F A P i) y) \\<or>\n                   (\\<exists>j\\<le>?n2.\n                       \\<exists>i<j. P (F A P i) (F A P j))) \\<or>\n                  P x y \\<or>\n                  (\\<exists>i\\<le>?n2. P (F A P i) x) \\<or>\n                  (\\<exists>j\\<le>?n2.\n                      \\<exists>i<j. P (F A P i) (F A P j))))\n\ngoal (1 subgoal):\n 1. False", "unfolding good_def"], ["proof (prove)\nusing this:\n  \\<exists>i j. i < j \\<and> P (F A P i) (F A P j)\n  (\\<exists>x y.\n      x \\<in> A \\<and>\n      y \\<in> A \\<and>\n      \\<not> (P x y \\<or>\n              (\\<exists>i\\<le>?n2. P (F A P i) x) \\<or>\n              (\\<exists>j\\<le>?n2.\n                  \\<exists>i<j. P (F A P i) (F A P j)))) \\<and>\n  (\\<exists>x\\<in>A.\n      \\<not> af A\n              (\\<lambda>y z.\n                  (P y z \\<or>\n                   (\\<exists>i\\<le>?n2. P (F A P i) y) \\<or>\n                   (\\<exists>j\\<le>?n2.\n                       \\<exists>i<j. P (F A P i) (F A P j))) \\<or>\n                  P x y \\<or>\n                  (\\<exists>i\\<le>?n2. P (F A P i) x) \\<or>\n                  (\\<exists>j\\<le>?n2.\n                      \\<exists>i<j. P (F A P i) (F A P j))))\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "hide_const NOTAF F"], ["", "lemma almost_full_on_UNIV:\n  \"almost_full_on (\\<lambda>_ _. True) UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. almost_full_on (\\<lambda>_ _. True) UNIV", "by (auto simp: almost_full_on_def good_def)"], ["", "lemma almost_full_on_imp_reflp_on:\n  assumes \"almost_full_on P A\"\n  shows \"reflp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflp_on P A", "using assms"], ["proof (prove)\nusing this:\n  almost_full_on P A\n\ngoal (1 subgoal):\n 1. reflp_on P A", "by (auto simp: almost_full_on_def reflp_on_def)"], ["", "lemma almost_full_on_subset:\n  \"A \\<subseteq> B \\<Longrightarrow> almost_full_on P B \\<Longrightarrow> almost_full_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B; almost_full_on P B\\<rbrakk>\n    \\<Longrightarrow> almost_full_on P A", "by (auto simp: almost_full_on_def)"], ["", "lemma almost_full_on_mono:\n  assumes \"A \\<subseteq> B\" and \"\\<And>x y. Q x y \\<Longrightarrow> P x y\"\n    and \"almost_full_on Q B\"\n  shows \"almost_full_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. almost_full_on P A", "using assms"], ["proof (prove)\nusing this:\n  A \\<subseteq> B\n  Q ?x ?y \\<Longrightarrow> P ?x ?y\n  almost_full_on Q B\n\ngoal (1 subgoal):\n 1. almost_full_on P A", "by (metis almost_full_on_def almost_full_on_subset good_def)"], ["", "text \\<open>\n  Every sequence over elements of an almost-full set has a homogeneous subsequence.\n\\<close>"], ["", "lemma almost_full_on_imp_homogeneous_subseq:\n  assumes \"almost_full_on P A\"\n    and \"\\<forall>i::nat. f i \\<in> A\"\n  shows \"\\<exists>\\<phi>::nat \\<Rightarrow> nat. \\<forall>i j. i < j \\<longrightarrow> \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "define X where \"X = {{i, j} | i j::nat. i < j \\<and> P (f i) (f j)}\""], ["proof (state)\nthis:\n  X = {{i, j} |i j. i < j \\<and> P (f i) (f j)}\n\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "define Y where \"Y = - X\""], ["proof (state)\nthis:\n  Y = - X\n\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "define h where \"h = (\\<lambda>Z. if Z \\<in> X then 0 else Suc 0)\""], ["proof (state)\nthis:\n  h = (\\<lambda>Z. if Z \\<in> X then 0 else Suc 0)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "have [iff]: \"\\<And>x y. h {x, y} = 0 \\<longleftrightarrow> {x, y} \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. (h {x, y} = 0) = ({x, y} \\<in> X)", "by (auto simp: h_def)"], ["proof (state)\nthis:\n  (h {?x, ?y} = 0) = ({?x, ?y} \\<in> X)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "have [iff]: \"\\<And>x y. h {x, y} = Suc 0 \\<longleftrightarrow> {x, y} \\<in> Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. (h {x, y} = Suc 0) = ({x, y} \\<in> Y)", "by (auto simp: h_def Y_def)"], ["proof (state)\nthis:\n  (h {?x, ?y} = Suc 0) = ({?x, ?y} \\<in> Y)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "have \"\\<forall>x\\<in>UNIV. \\<forall>y\\<in>UNIV. x \\<noteq> y \\<longrightarrow> h {x, y} < 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       \\<forall>y\\<in>UNIV. x \\<noteq> y \\<longrightarrow> h {x, y} < 2", "by (simp add: h_def)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>UNIV.\n     \\<forall>y\\<in>UNIV. x \\<noteq> y \\<longrightarrow> h {x, y} < 2\n\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "from Ramsey2 [OF infinite_UNIV_nat this]"], ["proof (chain)\npicking this:\n  \\<exists>Y t.\n     Y \\<subseteq> UNIV \\<and>\n     infinite Y \\<and>\n     t < 2 \\<and>\n     (\\<forall>x\\<in>Y.\n         \\<forall>y\\<in>Y. x \\<noteq> y \\<longrightarrow> h {x, y} = t)", "obtain I c\n    where \"infinite I\" and \"c < 2\"\n    and *: \"\\<forall>x\\<in>I. \\<forall>y\\<in>I. x \\<noteq> y \\<longrightarrow> h {x, y} = c\""], ["proof (prove)\nusing this:\n  \\<exists>Y t.\n     Y \\<subseteq> UNIV \\<and>\n     infinite Y \\<and>\n     t < 2 \\<and>\n     (\\<forall>x\\<in>Y.\n         \\<forall>y\\<in>Y. x \\<noteq> y \\<longrightarrow> h {x, y} = t)\n\ngoal (1 subgoal):\n 1. (\\<And>I c.\n        \\<lbrakk>infinite I; c < 2;\n         \\<forall>x\\<in>I.\n            \\<forall>y\\<in>I.\n               x \\<noteq> y \\<longrightarrow> h {x, y} = c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  infinite I\n  c < 2\n  \\<forall>x\\<in>I.\n     \\<forall>y\\<in>I. x \\<noteq> y \\<longrightarrow> h {x, y} = c\n\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "then"], ["proof (chain)\npicking this:\n  infinite I\n  c < 2\n  \\<forall>x\\<in>I.\n     \\<forall>y\\<in>I. x \\<noteq> y \\<longrightarrow> h {x, y} = c", "interpret infinitely_many1 \"\\<lambda>i. i \\<in> I\""], ["proof (prove)\nusing this:\n  infinite I\n  c < 2\n  \\<forall>x\\<in>I.\n     \\<forall>y\\<in>I. x \\<noteq> y \\<longrightarrow> h {x, y} = c\n\ngoal (1 subgoal):\n 1. infinitely_many1 (\\<lambda>i. i \\<in> I)", "by (unfold_locales) (simp add: infinite_nat_iff_unbounded)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "have \"c = 0 \\<or> c = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c = 0 \\<or> c = 1", "using \\<open>c < 2\\<close>"], ["proof (prove)\nusing this:\n  c < 2\n\ngoal (1 subgoal):\n 1. c = 0 \\<or> c = 1", "by arith"], ["proof (state)\nthis:\n  c = 0 \\<or> c = 1\n\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "then"], ["proof (chain)\npicking this:\n  c = 0 \\<or> c = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  c = 0 \\<or> c = 1\n\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. c = 0 \\<Longrightarrow>\n    \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))\n 2. c = 1 \\<Longrightarrow>\n    \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "assume [simp]: \"c = 0\""], ["proof (state)\nthis:\n  c = 0\n\ngoal (2 subgoals):\n 1. c = 0 \\<Longrightarrow>\n    \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))\n 2. c = 1 \\<Longrightarrow>\n    \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "have \"\\<forall>i j. i < j \\<longrightarrow> P (f (enum i)) (f (enum j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i j. i < j \\<longrightarrow> P (f (enum i)) (f (enum j))", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j. i < j \\<Longrightarrow> P (f (enum i)) (f (enum j))", "fix i j :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j. i < j \\<Longrightarrow> P (f (enum i)) (f (enum j))", "assume \"i < j\""], ["proof (state)\nthis:\n  i < j\n\ngoal (1 subgoal):\n 1. \\<And>i j. i < j \\<Longrightarrow> P (f (enum i)) (f (enum j))", "from * and enum_P and enum_less [OF \\<open>i < j\\<close>]"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>I.\n     \\<forall>y\\<in>I. x \\<noteq> y \\<longrightarrow> h {x, y} = c\n  enum ?i \\<in> I\n  enum i < enum j", "have \"{enum i, enum j} \\<in> X\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>I.\n     \\<forall>y\\<in>I. x \\<noteq> y \\<longrightarrow> h {x, y} = c\n  enum ?i \\<in> I\n  enum i < enum j\n\ngoal (1 subgoal):\n 1. {enum i, enum j} \\<in> X", "by auto"], ["proof (state)\nthis:\n  {enum i, enum j} \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>i j. i < j \\<Longrightarrow> P (f (enum i)) (f (enum j))", "with enum_less [OF \\<open>i < j\\<close>]"], ["proof (chain)\npicking this:\n  enum i < enum j\n  {enum i, enum j} \\<in> X", "show \"P (f (enum i)) (f (enum j))\""], ["proof (prove)\nusing this:\n  enum i < enum j\n  {enum i, enum j} \\<in> X\n\ngoal (1 subgoal):\n 1. P (f (enum i)) (f (enum j))", "by (auto simp: X_def doubleton_eq_iff)"], ["proof (state)\nthis:\n  P (f (enum i)) (f (enum j))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i j. i < j \\<longrightarrow> P (f (enum i)) (f (enum j))\n\ngoal (2 subgoals):\n 1. c = 0 \\<Longrightarrow>\n    \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))\n 2. c = 1 \\<Longrightarrow>\n    \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "then"], ["proof (chain)\npicking this:\n  \\<forall>i j. i < j \\<longrightarrow> P (f (enum i)) (f (enum j))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>i j. i < j \\<longrightarrow> P (f (enum i)) (f (enum j))\n\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "using enum_less"], ["proof (prove)\nusing this:\n  \\<forall>i j. i < j \\<longrightarrow> P (f (enum i)) (f (enum j))\n  ?i < ?j \\<Longrightarrow> enum ?i < enum ?j\n\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "by blast"], ["proof (state)\nthis:\n  \\<exists>\\<phi>.\n     \\<forall>i j.\n        i < j \\<longrightarrow>\n        \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))\n\ngoal (1 subgoal):\n 1. c = 1 \\<Longrightarrow>\n    \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c = 1 \\<Longrightarrow>\n    \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "assume [simp]: \"c = 1\""], ["proof (state)\nthis:\n  c = 1\n\ngoal (1 subgoal):\n 1. c = 1 \\<Longrightarrow>\n    \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "have \"\\<forall>i j. i < j \\<longrightarrow> \\<not> P (f (enum i)) (f (enum j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i j. i < j \\<longrightarrow> \\<not> P (f (enum i)) (f (enum j))", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j. i < j \\<Longrightarrow> \\<not> P (f (enum i)) (f (enum j))", "fix i j :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j. i < j \\<Longrightarrow> \\<not> P (f (enum i)) (f (enum j))", "assume \"i < j\""], ["proof (state)\nthis:\n  i < j\n\ngoal (1 subgoal):\n 1. \\<And>i j. i < j \\<Longrightarrow> \\<not> P (f (enum i)) (f (enum j))", "from * and enum_P and enum_less [OF \\<open>i < j\\<close>]"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>I.\n     \\<forall>y\\<in>I. x \\<noteq> y \\<longrightarrow> h {x, y} = c\n  enum ?i \\<in> I\n  enum i < enum j", "have \"{enum i, enum j} \\<in> Y\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>I.\n     \\<forall>y\\<in>I. x \\<noteq> y \\<longrightarrow> h {x, y} = c\n  enum ?i \\<in> I\n  enum i < enum j\n\ngoal (1 subgoal):\n 1. {enum i, enum j} \\<in> Y", "by auto"], ["proof (state)\nthis:\n  {enum i, enum j} \\<in> Y\n\ngoal (1 subgoal):\n 1. \\<And>i j. i < j \\<Longrightarrow> \\<not> P (f (enum i)) (f (enum j))", "with enum_less [OF \\<open>i < j\\<close>]"], ["proof (chain)\npicking this:\n  enum i < enum j\n  {enum i, enum j} \\<in> Y", "show \"\\<not> P (f (enum i)) (f (enum j))\""], ["proof (prove)\nusing this:\n  enum i < enum j\n  {enum i, enum j} \\<in> Y\n\ngoal (1 subgoal):\n 1. \\<not> P (f (enum i)) (f (enum j))", "by (auto simp: Y_def X_def doubleton_eq_iff)"], ["proof (state)\nthis:\n  \\<not> P (f (enum i)) (f (enum j))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i j. i < j \\<longrightarrow> \\<not> P (f (enum i)) (f (enum j))\n\ngoal (1 subgoal):\n 1. c = 1 \\<Longrightarrow>\n    \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "then"], ["proof (chain)\npicking this:\n  \\<forall>i j. i < j \\<longrightarrow> \\<not> P (f (enum i)) (f (enum j))", "have \"\\<not> good P (f \\<circ> enum)\""], ["proof (prove)\nusing this:\n  \\<forall>i j. i < j \\<longrightarrow> \\<not> P (f (enum i)) (f (enum j))\n\ngoal (1 subgoal):\n 1. bad P (f \\<circ> enum)", "by auto"], ["proof (state)\nthis:\n  bad P (f \\<circ> enum)\n\ngoal (1 subgoal):\n 1. c = 1 \\<Longrightarrow>\n    \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "moreover"], ["proof (state)\nthis:\n  bad P (f \\<circ> enum)\n\ngoal (1 subgoal):\n 1. c = 1 \\<Longrightarrow>\n    \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "have \"\\<forall>i. f (enum i) \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i. f (enum i) \\<in> A", "using assms"], ["proof (prove)\nusing this:\n  almost_full_on P A\n  \\<forall>i. f i \\<in> A\n\ngoal (1 subgoal):\n 1. \\<forall>i. f (enum i) \\<in> A", "by auto"], ["proof (state)\nthis:\n  \\<forall>i. f (enum i) \\<in> A\n\ngoal (1 subgoal):\n 1. c = 1 \\<Longrightarrow>\n    \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "ultimately"], ["proof (chain)\npicking this:\n  bad P (f \\<circ> enum)\n  \\<forall>i. f (enum i) \\<in> A", "show ?thesis"], ["proof (prove)\nusing this:\n  bad P (f \\<circ> enum)\n  \\<forall>i. f (enum i) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "using \\<open>almost_full_on P A\\<close>"], ["proof (prove)\nusing this:\n  bad P (f \\<circ> enum)\n  \\<forall>i. f (enum i) \\<in> A\n  almost_full_on P A\n\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<forall>i j.\n          i < j \\<longrightarrow>\n          \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))", "by (simp add: almost_full_on_def)"], ["proof (state)\nthis:\n  \\<exists>\\<phi>.\n     \\<forall>i j.\n        i < j \\<longrightarrow>\n        \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>\\<phi>.\n     \\<forall>i j.\n        i < j \\<longrightarrow>\n        \\<phi> i < \\<phi> j \\<and> P (f (\\<phi> i)) (f (\\<phi> j))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Almost full relations do not admit infinite antichains.\n\\<close>"], ["", "lemma almost_full_on_imp_no_antichain_on:\n  assumes \"almost_full_on P A\"\n  shows \"\\<not> antichain_on P f A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> antichain_on P f A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. antichain_on P f A \\<Longrightarrow> False", "assume *: \"antichain_on P f A\""], ["proof (state)\nthis:\n  antichain_on P f A\n\ngoal (1 subgoal):\n 1. antichain_on P f A \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  antichain_on P f A", "have \"\\<forall>i. f i \\<in> A\""], ["proof (prove)\nusing this:\n  antichain_on P f A\n\ngoal (1 subgoal):\n 1. \\<forall>i. f i \\<in> A", "by simp"], ["proof (state)\nthis:\n  \\<forall>i. f i \\<in> A\n\ngoal (1 subgoal):\n 1. antichain_on P f A \\<Longrightarrow> False", "with assms"], ["proof (chain)\npicking this:\n  almost_full_on P A\n  \\<forall>i. f i \\<in> A", "have \"good P f\""], ["proof (prove)\nusing this:\n  almost_full_on P A\n  \\<forall>i. f i \\<in> A\n\ngoal (1 subgoal):\n 1. good P f", "by (auto simp: almost_full_on_def)"], ["proof (state)\nthis:\n  good P f\n\ngoal (1 subgoal):\n 1. antichain_on P f A \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  good P f", "obtain i j where \"i < j\" and \"P (f i) (f j)\""], ["proof (prove)\nusing this:\n  good P f\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding good_def"], ["proof (prove)\nusing this:\n  \\<exists>i j. i < j \\<and> P (f i) (f j)\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; P (f i) (f j)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i < j\n  P (f i) (f j)\n\ngoal (1 subgoal):\n 1. antichain_on P f A \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  i < j\n  P (f i) (f j)\n\ngoal (1 subgoal):\n 1. antichain_on P f A \\<Longrightarrow> False", "with *"], ["proof (chain)\npicking this:\n  antichain_on P f A\n  i < j\n  P (f i) (f j)", "have \"incomparable P (f i) (f j)\""], ["proof (prove)\nusing this:\n  antichain_on P f A\n  i < j\n  P (f i) (f j)\n\ngoal (1 subgoal):\n 1. incomparable P (f i) (f j)", "by auto"], ["proof (state)\nthis:\n  incomparable P (f i) (f j)\n\ngoal (1 subgoal):\n 1. antichain_on P f A \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  i < j\n  P (f i) (f j)\n  incomparable P (f i) (f j)", "show False"], ["proof (prove)\nusing this:\n  i < j\n  P (f i) (f j)\n  incomparable P (f i) (f j)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  If the image of a function is almost-full then also its preimage is almost-full.\n\\<close>"], ["", "lemma almost_full_on_map:\n  assumes \"almost_full_on Q B\"\n    and \"h ` A \\<subseteq> B\"\n  shows \"almost_full_on (\\<lambda>x y. Q (h x) (h y)) A\" (is \"almost_full_on ?P A\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. almost_full_on (\\<lambda>x y. Q (h x) (h y)) A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<forall>i. f i \\<in> A \\<Longrightarrow>\n       good (\\<lambda>x y. Q (h x) (h y)) f", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<forall>i. f i \\<in> A \\<Longrightarrow>\n       good (\\<lambda>x y. Q (h x) (h y)) f", "assume \"\\<forall>i::nat. f i \\<in> A\""], ["proof (state)\nthis:\n  \\<forall>i. f i \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<forall>i. f i \\<in> A \\<Longrightarrow>\n       good (\\<lambda>x y. Q (h x) (h y)) f", "then"], ["proof (chain)\npicking this:\n  \\<forall>i. f i \\<in> A", "have \"\\<And>i. h (f i) \\<in> B\""], ["proof (prove)\nusing this:\n  \\<forall>i. f i \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>i. h (f i) \\<in> B", "using \\<open>h ` A \\<subseteq> B\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>i. f i \\<in> A\n  h ` A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. \\<And>i. h (f i) \\<in> B", "by auto"], ["proof (state)\nthis:\n  h (f ?i) \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<forall>i. f i \\<in> A \\<Longrightarrow>\n       good (\\<lambda>x y. Q (h x) (h y)) f", "with \\<open>almost_full_on Q B\\<close> [unfolded almost_full_on_def, THEN bspec, of \"h \\<circ> f\"]"], ["proof (chain)\npicking this:\n  h \\<circ> f \\<in> SEQ B \\<Longrightarrow> good Q (h \\<circ> f)\n  h (f ?i) \\<in> B", "show \"good ?P f\""], ["proof (prove)\nusing this:\n  h \\<circ> f \\<in> SEQ B \\<Longrightarrow> good Q (h \\<circ> f)\n  h (f ?i) \\<in> B\n\ngoal (1 subgoal):\n 1. good (\\<lambda>x y. Q (h x) (h y)) f", "unfolding good_def comp_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. h (f x)) \\<in> SEQ B \\<Longrightarrow>\n  \\<exists>i j. i < j \\<and> Q (h (f i)) (h (f j))\n  h (f ?i) \\<in> B\n\ngoal (1 subgoal):\n 1. \\<exists>i j. i < j \\<and> Q (h (f i)) (h (f j))", "by blast"], ["proof (state)\nthis:\n  good (\\<lambda>x y. Q (h x) (h y)) f\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The homomorphic image of an almost-full set is almost-full.\n\\<close>"], ["", "lemma almost_full_on_hom:\n  fixes h :: \"'a \\<Rightarrow> 'b\"\n  assumes hom: \"\\<And>x y. \\<lbrakk>x \\<in> A; y \\<in> A; P x y\\<rbrakk> \\<Longrightarrow> Q (h x) (h y)\"\n    and af: \"almost_full_on P A\"\n  shows \"almost_full_on Q (h ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. almost_full_on Q (h ` A)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> h ` A \\<Longrightarrow> good Q f", "fix f :: \"nat \\<Rightarrow> 'b\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> h ` A \\<Longrightarrow> good Q f", "assume \"\\<forall>i. f i \\<in> h ` A\""], ["proof (state)\nthis:\n  \\<forall>i. f i \\<in> h ` A\n\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> h ` A \\<Longrightarrow> good Q f", "then"], ["proof (chain)\npicking this:\n  \\<forall>i. f i \\<in> h ` A", "have \"\\<forall>i. \\<exists>x. x \\<in> A \\<and> f i = h x\""], ["proof (prove)\nusing this:\n  \\<forall>i. f i \\<in> h ` A\n\ngoal (1 subgoal):\n 1. \\<forall>i. \\<exists>x. x \\<in> A \\<and> f i = h x", "by (auto simp: image_def)"], ["proof (state)\nthis:\n  \\<forall>i. \\<exists>x. x \\<in> A \\<and> f i = h x\n\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> h ` A \\<Longrightarrow> good Q f", "from choice [OF this]"], ["proof (chain)\npicking this:\n  \\<exists>fa. \\<forall>x. fa x \\<in> A \\<and> f x = h (fa x)", "obtain g\n    where *: \"\\<forall>i. g i \\<in> A \\<and> f i = h (g i)\""], ["proof (prove)\nusing this:\n  \\<exists>fa. \\<forall>x. fa x \\<in> A \\<and> f x = h (fa x)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<forall>i. g i \\<in> A \\<and> f i = h (g i) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>i. g i \\<in> A \\<and> f i = h (g i)\n\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> h ` A \\<Longrightarrow> good Q f", "show \"good Q f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. good Q f", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. bad Q f \\<Longrightarrow> False", "assume bad: \"bad Q f\""], ["proof (state)\nthis:\n  bad Q f\n\ngoal (1 subgoal):\n 1. bad Q f \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  bad Q f\n\ngoal (1 subgoal):\n 1. bad Q f \\<Longrightarrow> False", "fix i j :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. bad Q f \\<Longrightarrow> False", "assume \"i < j\""], ["proof (state)\nthis:\n  i < j\n\ngoal (1 subgoal):\n 1. bad Q f \\<Longrightarrow> False", "from bad"], ["proof (chain)\npicking this:\n  bad Q f", "have \"\\<not> Q (f i) (f j)\""], ["proof (prove)\nusing this:\n  bad Q f\n\ngoal (1 subgoal):\n 1. \\<not> Q (f i) (f j)", "using \\<open>i < j\\<close>"], ["proof (prove)\nusing this:\n  bad Q f\n  i < j\n\ngoal (1 subgoal):\n 1. \\<not> Q (f i) (f j)", "by (auto simp: good_def)"], ["proof (state)\nthis:\n  \\<not> Q (f i) (f j)\n\ngoal (1 subgoal):\n 1. bad Q f \\<Longrightarrow> False", "with hom"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A; P ?x ?y\\<rbrakk>\n  \\<Longrightarrow> Q (h ?x) (h ?y)\n  \\<not> Q (f i) (f j)", "have \"\\<not> P (g i) (g j)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A; P ?x ?y\\<rbrakk>\n  \\<Longrightarrow> Q (h ?x) (h ?y)\n  \\<not> Q (f i) (f j)\n\ngoal (1 subgoal):\n 1. \\<not> P (g i) (g j)", "using *"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A; P ?x ?y\\<rbrakk>\n  \\<Longrightarrow> Q (h ?x) (h ?y)\n  \\<not> Q (f i) (f j)\n  \\<forall>i. g i \\<in> A \\<and> f i = h (g i)\n\ngoal (1 subgoal):\n 1. \\<not> P (g i) (g j)", "by auto"], ["proof (state)\nthis:\n  \\<not> P (g i) (g j)\n\ngoal (1 subgoal):\n 1. bad Q f \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  ?i2 < ?j2 \\<Longrightarrow> \\<not> P (g ?i2) (g ?j2)\n\ngoal (1 subgoal):\n 1. bad Q f \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  ?i2 < ?j2 \\<Longrightarrow> \\<not> P (g ?i2) (g ?j2)", "have \"bad P g\""], ["proof (prove)\nusing this:\n  ?i2 < ?j2 \\<Longrightarrow> \\<not> P (g ?i2) (g ?j2)\n\ngoal (1 subgoal):\n 1. bad P g", "by (auto simp: good_def)"], ["proof (state)\nthis:\n  bad P g\n\ngoal (1 subgoal):\n 1. bad Q f \\<Longrightarrow> False", "with af and *"], ["proof (chain)\npicking this:\n  almost_full_on P A\n  \\<forall>i. g i \\<in> A \\<and> f i = h (g i)\n  bad P g", "show False"], ["proof (prove)\nusing this:\n  almost_full_on P A\n  \\<forall>i. g i \\<in> A \\<and> f i = h (g i)\n  bad P g\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: good_def almost_full_on_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  good Q f\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The monomorphic preimage of an almost-full set is almost-full.\n\\<close>"], ["", "lemma almost_full_on_mon:\n  assumes mon: \"\\<And>x y. \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk> \\<Longrightarrow> P x y = Q (h x) (h y)\" \"bij_betw h A B\"\n    and af: \"almost_full_on Q B\"\n  shows \"almost_full_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. almost_full_on P A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "fix f :: \"nat \\<Rightarrow> 'a\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "assume *: \"\\<forall>i. f i \\<in> A\""], ["proof (state)\nthis:\n  \\<forall>i. f i \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "then"], ["proof (chain)\npicking this:\n  \\<forall>i. f i \\<in> A", "have **: \"\\<forall>i. (h \\<circ> f) i \\<in> B\""], ["proof (prove)\nusing this:\n  \\<forall>i. f i \\<in> A\n\ngoal (1 subgoal):\n 1. \\<forall>i. (h \\<circ> f) i \\<in> B", "using mon"], ["proof (prove)\nusing this:\n  \\<forall>i. f i \\<in> A\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A\\<rbrakk>\n  \\<Longrightarrow> P ?x ?y = Q (h ?x) (h ?y)\n  bij_betw h A B\n\ngoal (1 subgoal):\n 1. \\<forall>i. (h \\<circ> f) i \\<in> B", "by (auto simp: bij_betw_def)"], ["proof (state)\nthis:\n  \\<forall>i. (h \\<circ> f) i \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "show \"good P f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. good P f", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "assume bad: \"bad P f\""], ["proof (state)\nthis:\n  bad P f\n\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  bad P f\n\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "fix i j :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "assume \"i < j\""], ["proof (state)\nthis:\n  i < j\n\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "from bad"], ["proof (chain)\npicking this:\n  bad P f", "have \"\\<not> P (f i) (f j)\""], ["proof (prove)\nusing this:\n  bad P f\n\ngoal (1 subgoal):\n 1. \\<not> P (f i) (f j)", "using \\<open>i < j\\<close>"], ["proof (prove)\nusing this:\n  bad P f\n  i < j\n\ngoal (1 subgoal):\n 1. \\<not> P (f i) (f j)", "by (auto simp: good_def)"], ["proof (state)\nthis:\n  \\<not> P (f i) (f j)\n\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "with mon"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A\\<rbrakk>\n  \\<Longrightarrow> P ?x ?y = Q (h ?x) (h ?y)\n  bij_betw h A B\n  \\<not> P (f i) (f j)", "have \"\\<not> Q (h (f i)) (h (f j))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A\\<rbrakk>\n  \\<Longrightarrow> P ?x ?y = Q (h ?x) (h ?y)\n  bij_betw h A B\n  \\<not> P (f i) (f j)\n\ngoal (1 subgoal):\n 1. \\<not> Q (h (f i)) (h (f j))", "using *"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A\\<rbrakk>\n  \\<Longrightarrow> P ?x ?y = Q (h ?x) (h ?y)\n  bij_betw h A B\n  \\<not> P (f i) (f j)\n  \\<forall>i. f i \\<in> A\n\ngoal (1 subgoal):\n 1. \\<not> Q (h (f i)) (h (f j))", "by (auto simp: bij_betw_def inj_on_def)"], ["proof (state)\nthis:\n  \\<not> Q (h (f i)) (h (f j))\n\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  ?i2 < ?j2 \\<Longrightarrow> \\<not> Q (h (f ?i2)) (h (f ?j2))\n\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  ?i2 < ?j2 \\<Longrightarrow> \\<not> Q (h (f ?i2)) (h (f ?j2))", "have \"bad Q (h \\<circ> f)\""], ["proof (prove)\nusing this:\n  ?i2 < ?j2 \\<Longrightarrow> \\<not> Q (h (f ?i2)) (h (f ?j2))\n\ngoal (1 subgoal):\n 1. bad Q (h \\<circ> f)", "by (auto simp: good_def)"], ["proof (state)\nthis:\n  bad Q (h \\<circ> f)\n\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "with af and **"], ["proof (chain)\npicking this:\n  almost_full_on Q B\n  \\<forall>i. (h \\<circ> f) i \\<in> B\n  bad Q (h \\<circ> f)", "show False"], ["proof (prove)\nusing this:\n  almost_full_on Q B\n  \\<forall>i. (h \\<circ> f) i \\<in> B\n  bad Q (h \\<circ> f)\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: good_def almost_full_on_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  good P f\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Every total and well-founded relation is almost-full.\n\\<close>"], ["", "lemma total_on_and_wfp_on_imp_almost_full_on:\n  assumes \"total_on P A\" and \"wfp_on P A\"\n  shows \"almost_full_on P\\<^sup>=\\<^sup>= A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. almost_full_on P\\<^sup>=\\<^sup>= A", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> almost_full_on P\\<^sup>=\\<^sup>= A \\<Longrightarrow> False", "assume \"\\<not> almost_full_on P\\<^sup>=\\<^sup>= A\""], ["proof (state)\nthis:\n  \\<not> almost_full_on P\\<^sup>=\\<^sup>= A\n\ngoal (1 subgoal):\n 1. \\<not> almost_full_on P\\<^sup>=\\<^sup>= A \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> almost_full_on P\\<^sup>=\\<^sup>= A", "obtain f :: \"nat \\<Rightarrow> 'a\" where *: \"\\<And>i. f i \\<in> A\"\n    and \"\\<forall>i j. i < j \\<longrightarrow> \\<not> P\\<^sup>=\\<^sup>= (f i) (f j)\""], ["proof (prove)\nusing this:\n  \\<not> almost_full_on P\\<^sup>=\\<^sup>= A\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<And>i. f i \\<in> A;\n         \\<forall>i j.\n            i < j \\<longrightarrow>\n            \\<not> P\\<^sup>=\\<^sup>= (f i) (f j)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding almost_full_on_def"], ["proof (prove)\nusing this:\n  \\<not> Ball (SEQ A) (good P\\<^sup>=\\<^sup>=)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<And>i. f i \\<in> A;\n         \\<forall>i j.\n            i < j \\<longrightarrow>\n            \\<not> P\\<^sup>=\\<^sup>= (f i) (f j)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: badE)"], ["proof (state)\nthis:\n  f ?i \\<in> A\n  \\<forall>i j. i < j \\<longrightarrow> \\<not> P\\<^sup>=\\<^sup>= (f i) (f j)\n\ngoal (1 subgoal):\n 1. \\<not> almost_full_on P\\<^sup>=\\<^sup>= A \\<Longrightarrow> False", "with \\<open>total_on P A\\<close>"], ["proof (chain)\npicking this:\n  Restricted_Predicates.total_on P A\n  f ?i \\<in> A\n  \\<forall>i j. i < j \\<longrightarrow> \\<not> P\\<^sup>=\\<^sup>= (f i) (f j)", "have \"\\<forall>i j. i < j \\<longrightarrow> P (f j) (f i)\""], ["proof (prove)\nusing this:\n  Restricted_Predicates.total_on P A\n  f ?i \\<in> A\n  \\<forall>i j. i < j \\<longrightarrow> \\<not> P\\<^sup>=\\<^sup>= (f i) (f j)\n\ngoal (1 subgoal):\n 1. \\<forall>i j. i < j \\<longrightarrow> P (f j) (f i)", "unfolding total_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A. \\<forall>y\\<in>A. x = y \\<or> P x y \\<or> P y x\n  f ?i \\<in> A\n  \\<forall>i j. i < j \\<longrightarrow> \\<not> P\\<^sup>=\\<^sup>= (f i) (f j)\n\ngoal (1 subgoal):\n 1. \\<forall>i j. i < j \\<longrightarrow> P (f j) (f i)", "by blast"], ["proof (state)\nthis:\n  \\<forall>i j. i < j \\<longrightarrow> P (f j) (f i)\n\ngoal (1 subgoal):\n 1. \\<not> almost_full_on P\\<^sup>=\\<^sup>= A \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>i j. i < j \\<longrightarrow> P (f j) (f i)", "have \"\\<And>i. P (f (Suc i)) (f i)\""], ["proof (prove)\nusing this:\n  \\<forall>i j. i < j \\<longrightarrow> P (f j) (f i)\n\ngoal (1 subgoal):\n 1. \\<And>i. P (f (Suc i)) (f i)", "by auto"], ["proof (state)\nthis:\n  P (f (Suc ?i)) (f ?i)\n\ngoal (1 subgoal):\n 1. \\<not> almost_full_on P\\<^sup>=\\<^sup>= A \\<Longrightarrow> False", "with \\<open>wfp_on P A\\<close> and *"], ["proof (chain)\npicking this:\n  wfp_on P A\n  f ?i \\<in> A\n  P (f (Suc ?i)) (f ?i)", "show False"], ["proof (prove)\nusing this:\n  wfp_on P A\n  f ?i \\<in> A\n  P (f (Suc ?i)) (f ?i)\n\ngoal (1 subgoal):\n 1. False", "unfolding wfp_on_def"], ["proof (prove)\nusing this:\n  \\<nexists>f. \\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i)\n  f ?i \\<in> A\n  P (f (Suc ?i)) (f ?i)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Nil_imp_good_list_emb [simp]:\n  assumes \"f i = []\"\n  shows \"good (list_emb P) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. good (list_emb P) f", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. bad (list_emb P) f \\<Longrightarrow> False", "assume \"bad (list_emb P) f\""], ["proof (state)\nthis:\n  bad (list_emb P) f\n\ngoal (1 subgoal):\n 1. bad (list_emb P) f \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  bad (list_emb P) f\n\ngoal (1 subgoal):\n 1. bad (list_emb P) f \\<Longrightarrow> False", "have \"(list_emb P) (f i) (f (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_emb P (f i) (f (Suc i))", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. list_emb P [] (f (Suc i))", "by auto"], ["proof (state)\nthis:\n  list_emb P (f i) (f (Suc i))\n\ngoal (1 subgoal):\n 1. bad (list_emb P) f \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  bad (list_emb P) f\n  list_emb P (f i) (f (Suc i))", "show False"], ["proof (prove)\nusing this:\n  bad (list_emb P) f\n  list_emb P (f i) (f (Suc i))\n\ngoal (1 subgoal):\n 1. False", "unfolding good_def"], ["proof (prove)\nusing this:\n  \\<nexists>i j. i < j \\<and> list_emb P (f i) (f j)\n  list_emb P (f i) (f (Suc i))\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ne_lists:\n  assumes \"xs \\<noteq> []\" and \"xs \\<in> lists A\"\n  shows \"hd xs \\<in> A\" and \"tl xs \\<in> lists A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd xs \\<in> A &&& tl xs \\<in> lists A", "using assms"], ["proof (prove)\nusing this:\n  xs \\<noteq> []\n  xs \\<in> lists A\n\ngoal (1 subgoal):\n 1. hd xs \\<in> A &&& tl xs \\<in> lists A", "by (case_tac [!] xs) simp_all"], ["", "lemma list_emb_eq_length_induct [consumes 2, case_names Nil Cons]:\n  assumes \"length xs = length ys\"\n    and \"list_emb P xs ys\"\n    and \"Q [] []\"\n    and \"\\<And>x y xs ys. \\<lbrakk>P x y; list_emb P xs ys; Q xs ys\\<rbrakk> \\<Longrightarrow> Q (x#xs) (y#ys)\"\n  shows \"Q xs ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q xs ys", "using assms(2, 1, 3-)"], ["proof (prove)\nusing this:\n  list_emb P xs ys\n  length xs = length ys\n  Q [] []\n  \\<lbrakk>P ?x ?y; list_emb P ?xs ?ys; Q ?xs ?ys\\<rbrakk>\n  \\<Longrightarrow> Q (?x # ?xs) (?y # ?ys)\n\ngoal (1 subgoal):\n 1. Q xs ys", "by (induct) (auto dest: list_emb_length)"], ["", "lemma list_emb_eq_length_P:\n  assumes \"length xs = length ys\"\n    and \"list_emb P xs ys\"\n  shows \"\\<forall>i<length xs. P (xs ! i) (ys ! i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<length xs. P (xs ! i) (ys ! i)", "using assms"], ["proof (prove)\nusing this:\n  length xs = length ys\n  list_emb P xs ys\n\ngoal (1 subgoal):\n 1. \\<forall>i<length xs. P (xs ! i) (ys ! i)", "proof (induct rule: list_emb_eq_length_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>i<length []. P ([] ! i) ([] ! i)\n 2. \\<And>x y xs ys.\n       \\<lbrakk>P x y; list_emb P xs ys;\n        \\<forall>i<length xs. P (xs ! i) (ys ! i)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i<length (x # xs).\n                            P ((x # xs) ! i) ((y # ys) ! i)", "case (Cons x y xs ys)"], ["proof (state)\nthis:\n  P x y\n  list_emb P xs ys\n  \\<forall>i<length xs. P (xs ! i) (ys ! i)\n\ngoal (2 subgoals):\n 1. \\<forall>i<length []. P ([] ! i) ([] ! i)\n 2. \\<And>x y xs ys.\n       \\<lbrakk>P x y; list_emb P xs ys;\n        \\<forall>i<length xs. P (xs ! i) (ys ! i)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i<length (x # xs).\n                            P ((x # xs) ! i) ((y # ys) ! i)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<length (x # xs). P ((x # xs) ! i) ((y # ys) ! i)", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < length (x # xs) \\<Longrightarrow> P ((x # xs) ! i) ((y # ys) ! i)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < length (x # xs) \\<Longrightarrow> P ((x # xs) ! i) ((y # ys) ! i)", "assume \"i < length (x # xs)\""], ["proof (state)\nthis:\n  i < length (x # xs)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < length (x # xs) \\<Longrightarrow> P ((x # xs) ! i) ((y # ys) ! i)", "with Cons"], ["proof (chain)\npicking this:\n  P x y\n  list_emb P xs ys\n  \\<forall>i<length xs. P (xs ! i) (ys ! i)\n  i < length (x # xs)", "show \"P ((x#xs)!i) ((y#ys)!i)\""], ["proof (prove)\nusing this:\n  P x y\n  list_emb P xs ys\n  \\<forall>i<length xs. P (xs ! i) (ys ! i)\n  i < length (x # xs)\n\ngoal (1 subgoal):\n 1. P ((x # xs) ! i) ((y # ys) ! i)", "by (cases i) simp_all"], ["proof (state)\nthis:\n  P ((x # xs) ! i) ((y # ys) ! i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i<length (x # xs). P ((x # xs) ! i) ((y # ys) ! i)\n\ngoal (1 subgoal):\n 1. \\<forall>i<length []. P ([] ! i) ([] ! i)", "qed simp"], ["", "subsection \\<open>Special Case: Finite Sets\\<close>"], ["", "text \\<open>\n  Every reflexive relation on a finite set is almost-full.\n\\<close>"], ["", "lemma finite_almost_full_on:\n  assumes finite: \"finite A\"\n    and refl: \"reflp_on P A\"\n  shows \"almost_full_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. almost_full_on P A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "fix f :: \"nat \\<Rightarrow> 'a\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "assume *: \"\\<forall>i. f i \\<in> A\""], ["proof (state)\nthis:\n  \\<forall>i. f i \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "let ?I = \"UNIV::nat set\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "have \"f ` ?I \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range f \\<subseteq> A", "using *"], ["proof (prove)\nusing this:\n  \\<forall>i. f i \\<in> A\n\ngoal (1 subgoal):\n 1. range f \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  range f \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "with finite and finite_subset"], ["proof (chain)\npicking this:\n  finite A\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n  range f \\<subseteq> A", "have 1: \"finite (f ` ?I)\""], ["proof (prove)\nusing this:\n  finite A\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n  range f \\<subseteq> A\n\ngoal (1 subgoal):\n 1. finite (range f)", "by blast"], ["proof (state)\nthis:\n  finite (range f)\n\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "have \"infinite ?I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite UNIV", "by auto"], ["proof (state)\nthis:\n  infinite UNIV\n\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "from pigeonhole_infinite [OF this 1]"], ["proof (chain)\npicking this:\n  \\<exists>a0\\<in>UNIV. infinite {a \\<in> UNIV. f a = f a0}", "obtain k where \"infinite {j. f j = f k}\""], ["proof (prove)\nusing this:\n  \\<exists>a0\\<in>UNIV. infinite {a \\<in> UNIV. f a = f a0}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        infinite {j. f j = f k} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  infinite {j. f j = f k}\n\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "then"], ["proof (chain)\npicking this:\n  infinite {j. f j = f k}", "obtain l where \"k < l\" and \"f l = f k\""], ["proof (prove)\nusing this:\n  infinite {j. f j = f k}\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>k < l; f l = f k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding infinite_nat_iff_unbounded"], ["proof (prove)\nusing this:\n  \\<forall>m. \\<exists>n>m. n \\<in> {j. f j = f k}\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>k < l; f l = f k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k < l\n  f l = f k\n\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "then"], ["proof (chain)\npicking this:\n  k < l\n  f l = f k", "have \"P (f k) (f l)\""], ["proof (prove)\nusing this:\n  k < l\n  f l = f k\n\ngoal (1 subgoal):\n 1. P (f k) (f l)", "using refl and *"], ["proof (prove)\nusing this:\n  k < l\n  f l = f k\n  reflp_on P A\n  \\<forall>i. f i \\<in> A\n\ngoal (1 subgoal):\n 1. P (f k) (f l)", "by (auto simp: reflp_on_def)"], ["proof (state)\nthis:\n  P (f k) (f l)\n\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "with \\<open>k < l\\<close>"], ["proof (chain)\npicking this:\n  k < l\n  P (f k) (f l)", "show \"good P f\""], ["proof (prove)\nusing this:\n  k < l\n  P (f k) (f l)\n\ngoal (1 subgoal):\n 1. good P f", "by (auto simp: good_def)"], ["proof (state)\nthis:\n  good P f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma eq_almost_full_on_finite_set:\n  assumes \"finite A\"\n  shows \"almost_full_on (=) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. almost_full_on (=) A", "using finite_almost_full_on [OF assms, of \"(=)\"]"], ["proof (prove)\nusing this:\n  reflp_on (=) A \\<Longrightarrow> almost_full_on (=) A\n\ngoal (1 subgoal):\n 1. almost_full_on (=) A", "by (auto simp: reflp_on_def)"], ["", "subsection \\<open>Further Results\\<close>"], ["", "lemma af_trans_extension_imp_wf:\n  assumes subrel: \"\\<And>x y. P x y \\<Longrightarrow> Q x y\"\n    and af: \"almost_full_on P A\"\n    and trans: \"transp_on Q A\"\n  shows \"wfp_on (strict Q) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfp_on (strict Q) A", "proof (unfold wfp_on_def, rule notI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>i.\n          f i \\<in> A \\<and> strict Q (f (Suc i)) (f i) \\<Longrightarrow>\n    False", "assume \"\\<exists>f. \\<forall>i. f i \\<in> A \\<and> strict Q (f (Suc i)) (f i)\""], ["proof (state)\nthis:\n  \\<exists>f. \\<forall>i. f i \\<in> A \\<and> strict Q (f (Suc i)) (f i)\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>i.\n          f i \\<in> A \\<and> strict Q (f (Suc i)) (f i) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>f. \\<forall>i. f i \\<in> A \\<and> strict Q (f (Suc i)) (f i)", "obtain f where *: \"\\<forall>i. f i \\<in> A \\<and> ((strict Q)\\<inverse>\\<inverse>) (f i) (f (Suc i))\""], ["proof (prove)\nusing this:\n  \\<exists>f. \\<forall>i. f i \\<in> A \\<and> strict Q (f (Suc i)) (f i)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<forall>i.\n           f i \\<in> A \\<and>\n           (strict Q)\\<inverse>\\<inverse> (f i)\n            (f (Suc i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>i.\n     f i \\<in> A \\<and> (strict Q)\\<inverse>\\<inverse> (f i) (f (Suc i))\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>i.\n          f i \\<in> A \\<and> strict Q (f (Suc i)) (f i) \\<Longrightarrow>\n    False", "from chain_transp_on_less [OF this]\n    and transp_on_strict [THEN transp_on_converse, OF trans]"], ["proof (chain)\npicking this:\n  \\<lbrakk>transp_on (strict Q)\\<inverse>\\<inverse> A; ?i < ?j\\<rbrakk>\n  \\<Longrightarrow> (strict Q)\\<inverse>\\<inverse> (f ?i) (f ?j)\n  transp_on (strict Q)\\<inverse>\\<inverse> A", "have \"\\<forall>i j. i < j \\<longrightarrow> \\<not> Q (f i) (f j)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>transp_on (strict Q)\\<inverse>\\<inverse> A; ?i < ?j\\<rbrakk>\n  \\<Longrightarrow> (strict Q)\\<inverse>\\<inverse> (f ?i) (f ?j)\n  transp_on (strict Q)\\<inverse>\\<inverse> A\n\ngoal (1 subgoal):\n 1. \\<forall>i j. i < j \\<longrightarrow> \\<not> Q (f i) (f j)", "by blast"], ["proof (state)\nthis:\n  \\<forall>i j. i < j \\<longrightarrow> \\<not> Q (f i) (f j)\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>i.\n          f i \\<in> A \\<and> strict Q (f (Suc i)) (f i) \\<Longrightarrow>\n    False", "with subrel"], ["proof (chain)\npicking this:\n  P ?x ?y \\<Longrightarrow> Q ?x ?y\n  \\<forall>i j. i < j \\<longrightarrow> \\<not> Q (f i) (f j)", "have \"\\<forall>i j. i < j \\<longrightarrow> \\<not> P (f i) (f j)\""], ["proof (prove)\nusing this:\n  P ?x ?y \\<Longrightarrow> Q ?x ?y\n  \\<forall>i j. i < j \\<longrightarrow> \\<not> Q (f i) (f j)\n\ngoal (1 subgoal):\n 1. \\<forall>i j. i < j \\<longrightarrow> \\<not> P (f i) (f j)", "by blast"], ["proof (state)\nthis:\n  \\<forall>i j. i < j \\<longrightarrow> \\<not> P (f i) (f j)\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>i.\n          f i \\<in> A \\<and> strict Q (f (Suc i)) (f i) \\<Longrightarrow>\n    False", "with af"], ["proof (chain)\npicking this:\n  almost_full_on P A\n  \\<forall>i j. i < j \\<longrightarrow> \\<not> P (f i) (f j)", "show False"], ["proof (prove)\nusing this:\n  almost_full_on P A\n  \\<forall>i j. i < j \\<longrightarrow> \\<not> P (f i) (f j)\n\ngoal (1 subgoal):\n 1. False", "using *"], ["proof (prove)\nusing this:\n  almost_full_on P A\n  \\<forall>i j. i < j \\<longrightarrow> \\<not> P (f i) (f j)\n  \\<forall>i.\n     f i \\<in> A \\<and> (strict Q)\\<inverse>\\<inverse> (f i) (f (Suc i))\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: almost_full_on_def good_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma af_trans_imp_wf:\n  assumes \"almost_full_on P A\"\n    and \"transp_on P A\"\n  shows \"wfp_on (strict P) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfp_on (strict P) A", "using assms"], ["proof (prove)\nusing this:\n  almost_full_on P A\n  transp_on P A\n\ngoal (1 subgoal):\n 1. wfp_on (strict P) A", "by (intro af_trans_extension_imp_wf)"], ["", "lemma wf_and_no_antichain_imp_qo_extension_wf:\n  assumes wf: \"wfp_on (strict P) A\"\n    and anti: \"\\<not> (\\<exists>f. antichain_on P f A)\"\n    and subrel: \"\\<forall>x\\<in>A. \\<forall>y\\<in>A. P x y \\<longrightarrow> Q x y\"\n    and qo: \"qo_on Q A\"\n  shows \"wfp_on (strict Q) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfp_on (strict Q) A", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> wfp_on (strict Q) A \\<Longrightarrow> False", "have \"transp_on (strict Q) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transp_on (strict Q) A", "using qo"], ["proof (prove)\nusing this:\n  qo_on Q A\n\ngoal (1 subgoal):\n 1. transp_on (strict Q) A", "unfolding qo_on_def transp_on_def"], ["proof (prove)\nusing this:\n  reflp_on Q A \\<and>\n  (\\<forall>x\\<in>A.\n      \\<forall>y\\<in>A.\n         \\<forall>z\\<in>A. Q x y \\<and> Q y z \\<longrightarrow> Q x z)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A.\n       \\<forall>y\\<in>A.\n          \\<forall>z\\<in>A.\n             strict Q x y \\<and> strict Q y z \\<longrightarrow> strict Q x z", "by blast"], ["proof (state)\nthis:\n  transp_on (strict Q) A\n\ngoal (1 subgoal):\n 1. \\<not> wfp_on (strict Q) A \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  transp_on (strict Q) A", "have *: \"transp_on ((strict Q)\\<inverse>\\<inverse>) A\""], ["proof (prove)\nusing this:\n  transp_on (strict Q) A\n\ngoal (1 subgoal):\n 1. transp_on (strict Q)\\<inverse>\\<inverse> A", "by (rule transp_on_converse)"], ["proof (state)\nthis:\n  transp_on (strict Q)\\<inverse>\\<inverse> A\n\ngoal (1 subgoal):\n 1. \\<not> wfp_on (strict Q) A \\<Longrightarrow> False", "assume \"\\<not> wfp_on (strict Q) A\""], ["proof (state)\nthis:\n  \\<not> wfp_on (strict Q) A\n\ngoal (1 subgoal):\n 1. \\<not> wfp_on (strict Q) A \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> wfp_on (strict Q) A", "obtain f :: \"nat \\<Rightarrow> 'a\" where A: \"\\<And>i. f i \\<in> A\"\n    and \"\\<forall>i. strict Q (f (Suc i)) (f i)\""], ["proof (prove)\nusing this:\n  \\<not> wfp_on (strict Q) A\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<And>i. f i \\<in> A;\n         \\<forall>i. strict Q (f (Suc i)) (f i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding wfp_on_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<nexists>f.\n             \\<forall>i. f i \\<in> A \\<and> strict Q (f (Suc i)) (f i))\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<And>i. f i \\<in> A;\n         \\<forall>i. strict Q (f (Suc i)) (f i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast+"], ["proof (state)\nthis:\n  f ?i \\<in> A\n  \\<forall>i. strict Q (f (Suc i)) (f i)\n\ngoal (1 subgoal):\n 1. \\<not> wfp_on (strict Q) A \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  f ?i \\<in> A\n  \\<forall>i. strict Q (f (Suc i)) (f i)", "have \"\\<forall>i. f i \\<in> A \\<and> ((strict Q)\\<inverse>\\<inverse>) (f i) (f (Suc i))\""], ["proof (prove)\nusing this:\n  f ?i \\<in> A\n  \\<forall>i. strict Q (f (Suc i)) (f i)\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       f i \\<in> A \\<and> (strict Q)\\<inverse>\\<inverse> (f i) (f (Suc i))", "by auto"], ["proof (state)\nthis:\n  \\<forall>i.\n     f i \\<in> A \\<and> (strict Q)\\<inverse>\\<inverse> (f i) (f (Suc i))\n\ngoal (1 subgoal):\n 1. \\<not> wfp_on (strict Q) A \\<Longrightarrow> False", "from chain_transp_on_less [OF this *]"], ["proof (chain)\npicking this:\n  ?i < ?j \\<Longrightarrow> (strict Q)\\<inverse>\\<inverse> (f ?i) (f ?j)", "have *: \"\\<And>i j. i < j \\<Longrightarrow> \\<not> P (f i) (f j)\""], ["proof (prove)\nusing this:\n  ?i < ?j \\<Longrightarrow> (strict Q)\\<inverse>\\<inverse> (f ?i) (f ?j)\n\ngoal (1 subgoal):\n 1. \\<And>i j. i < j \\<Longrightarrow> \\<not> P (f i) (f j)", "using subrel and A"], ["proof (prove)\nusing this:\n  ?i < ?j \\<Longrightarrow> (strict Q)\\<inverse>\\<inverse> (f ?i) (f ?j)\n  \\<forall>x\\<in>A. \\<forall>y\\<in>A. P x y \\<longrightarrow> Q x y\n  f ?i \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>i j. i < j \\<Longrightarrow> \\<not> P (f i) (f j)", "by blast"], ["proof (state)\nthis:\n  ?i < ?j \\<Longrightarrow> \\<not> P (f ?i) (f ?j)\n\ngoal (1 subgoal):\n 1. \\<not> wfp_on (strict Q) A \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "assume \"\\<exists>k. \\<forall>i>k. \\<exists>j>i. P (f j) (f i)\""], ["proof (state)\nthis:\n  \\<exists>k. \\<forall>i>k. \\<exists>j>i. P (f j) (f i)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>k. \\<forall>i>k. \\<exists>j>i. P (f j) (f i)", "obtain k where \"\\<forall>i>k. \\<exists>j>i. P (f j) (f i)\""], ["proof (prove)\nusing this:\n  \\<exists>k. \\<forall>i>k. \\<exists>j>i. P (f j) (f i)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<forall>i>k. \\<exists>j>i. P (f j) (f i) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>i>k. \\<exists>j>i. P (f j) (f i)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "from subchain [of k _ f, OF this]"], ["proof (chain)\npicking this:\n  \\<exists>\\<phi>.\n     (\\<forall>i j. i < j \\<longrightarrow> \\<phi> i < \\<phi> j) \\<and>\n     (\\<forall>i. P (f (\\<phi> (Suc i))) (f (\\<phi> i)))", "obtain g\n      where \"\\<And>i j. i < j \\<Longrightarrow> g i < g j\"\n      and \"\\<And>i. P (f (g (Suc i))) (f (g i))\""], ["proof (prove)\nusing this:\n  \\<exists>\\<phi>.\n     (\\<forall>i j. i < j \\<longrightarrow> \\<phi> i < \\<phi> j) \\<and>\n     (\\<forall>i. P (f (\\<phi> (Suc i))) (f (\\<phi> i)))\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>\\<And>i j. i < j \\<Longrightarrow> g i < g j;\n         \\<And>i. P (f (g (Suc i))) (f (g i))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ?i < ?j \\<Longrightarrow> g ?i < g ?j\n  P (f (g (Suc ?i))) (f (g ?i))\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "with *"], ["proof (chain)\npicking this:\n  ?i < ?j \\<Longrightarrow> \\<not> P (f ?i) (f ?j)\n  ?i < ?j \\<Longrightarrow> g ?i < g ?j\n  P (f (g (Suc ?i))) (f (g ?i))", "have \"\\<And>i. strict P (f (g (Suc i))) (f (g i))\""], ["proof (prove)\nusing this:\n  ?i < ?j \\<Longrightarrow> \\<not> P (f ?i) (f ?j)\n  ?i < ?j \\<Longrightarrow> g ?i < g ?j\n  P (f (g (Suc ?i))) (f (g ?i))\n\ngoal (1 subgoal):\n 1. \\<And>i. strict P (f (g (Suc i))) (f (g i))", "by blast"], ["proof (state)\nthis:\n  strict P (f (g (Suc ?i))) (f (g ?i))\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "with wf [unfolded wfp_on_def not_ex, THEN spec, of \"\\<lambda>i. f (g i)\"] and A"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>i.\n             f (g i) \\<in> A \\<and> strict P (f (g (Suc i))) (f (g i)))\n  f ?i \\<in> A\n  strict P (f (g (Suc ?i))) (f (g ?i))", "show False"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>i.\n             f (g i) \\<in> A \\<and> strict P (f (g (Suc i))) (f (g i)))\n  f ?i \\<in> A\n  strict P (f (g (Suc ?i))) (f (g ?i))\n\ngoal (1 subgoal):\n 1. False", "by fast"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<nexists>k. \\<forall>i>k. \\<exists>j>i. P (f j) (f i) \\<Longrightarrow>\n    False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>k. \\<forall>i>k. \\<exists>j>i. P (f j) (f i) \\<Longrightarrow>\n    False", "assume \"\\<not> (\\<exists>k. \\<forall>i>k. \\<exists>j>i. P (f j) (f i))\""], ["proof (state)\nthis:\n  \\<nexists>k. \\<forall>i>k. \\<exists>j>i. P (f j) (f i)\n\ngoal (1 subgoal):\n 1. \\<nexists>k. \\<forall>i>k. \\<exists>j>i. P (f j) (f i) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<nexists>k. \\<forall>i>k. \\<exists>j>i. P (f j) (f i)", "have \"\\<forall>k. \\<exists>i>k. \\<forall>j>i. \\<not> P (f j) (f i)\""], ["proof (prove)\nusing this:\n  \\<nexists>k. \\<forall>i>k. \\<exists>j>i. P (f j) (f i)\n\ngoal (1 subgoal):\n 1. \\<forall>k. \\<exists>i>k. \\<forall>j>i. \\<not> P (f j) (f i)", "by auto"], ["proof (state)\nthis:\n  \\<forall>k. \\<exists>i>k. \\<forall>j>i. \\<not> P (f j) (f i)\n\ngoal (1 subgoal):\n 1. \\<nexists>k. \\<forall>i>k. \\<exists>j>i. P (f j) (f i) \\<Longrightarrow>\n    False", "from choice [OF this]"], ["proof (chain)\npicking this:\n  \\<exists>fa.\n     \\<forall>x.\n        x < fa x \\<and> (\\<forall>j>fa x. \\<not> P (f j) (f (fa x)))", "obtain h\n      where \"\\<forall>k. h k > k\"\n      and **: \"\\<forall>k. (\\<forall>j>h k. \\<not> P (f j) (f (h k)))\""], ["proof (prove)\nusing this:\n  \\<exists>fa.\n     \\<forall>x.\n        x < fa x \\<and> (\\<forall>j>fa x. \\<not> P (f j) (f (fa x)))\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>k. k < h k;\n         \\<forall>k j.\n            h k < j \\<longrightarrow> \\<not> P (f j) (f (h k))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>k. k < h k\n  \\<forall>k j. h k < j \\<longrightarrow> \\<not> P (f j) (f (h k))\n\ngoal (1 subgoal):\n 1. \\<nexists>k. \\<forall>i>k. \\<exists>j>i. P (f j) (f i) \\<Longrightarrow>\n    False", "define \\<phi> where [simp]: \"\\<phi> = (\\<lambda>i. (h ^^ Suc i) 0)\""], ["proof (state)\nthis:\n  \\<phi> = (\\<lambda>i. (h ^^ Suc i) 0)\n\ngoal (1 subgoal):\n 1. \\<nexists>k. \\<forall>i>k. \\<exists>j>i. P (f j) (f i) \\<Longrightarrow>\n    False", "have \"\\<And>i. \\<phi> i < \\<phi> (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. \\<phi> i < \\<phi> (Suc i)", "using \\<open>\\<forall>k. h k > k\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>k. k < h k\n\ngoal (1 subgoal):\n 1. \\<And>i. \\<phi> i < \\<phi> (Suc i)", "by (induct_tac i) auto"], ["proof (state)\nthis:\n  \\<phi> ?i < \\<phi> (Suc ?i)\n\ngoal (1 subgoal):\n 1. \\<nexists>k. \\<forall>i>k. \\<exists>j>i. P (f j) (f i) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<phi> ?i < \\<phi> (Suc ?i)", "have mono: \"\\<And>i j. i < j \\<Longrightarrow> \\<phi> i < \\<phi> j\""], ["proof (prove)\nusing this:\n  \\<phi> ?i < \\<phi> (Suc ?i)\n\ngoal (1 subgoal):\n 1. \\<And>i j. i < j \\<Longrightarrow> \\<phi> i < \\<phi> j", "by (metis lift_Suc_mono_less)"], ["proof (state)\nthis:\n  ?i < ?j \\<Longrightarrow> \\<phi> ?i < \\<phi> ?j\n\ngoal (1 subgoal):\n 1. \\<nexists>k. \\<forall>i>k. \\<exists>j>i. P (f j) (f i) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  ?i < ?j \\<Longrightarrow> \\<phi> ?i < \\<phi> ?j", "have \"\\<forall>i j. i < j \\<longrightarrow> \\<not> P (f (\\<phi> j)) (f (\\<phi> i))\""], ["proof (prove)\nusing this:\n  ?i < ?j \\<Longrightarrow> \\<phi> ?i < \\<phi> ?j\n\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       i < j \\<longrightarrow> \\<not> P (f (\\<phi> j)) (f (\\<phi> i))", "using **"], ["proof (prove)\nusing this:\n  ?i < ?j \\<Longrightarrow> \\<phi> ?i < \\<phi> ?j\n  \\<forall>k j. h k < j \\<longrightarrow> \\<not> P (f j) (f (h k))\n\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       i < j \\<longrightarrow> \\<not> P (f (\\<phi> j)) (f (\\<phi> i))", "by auto"], ["proof (state)\nthis:\n  \\<forall>i j.\n     i < j \\<longrightarrow> \\<not> P (f (\\<phi> j)) (f (\\<phi> i))\n\ngoal (1 subgoal):\n 1. \\<nexists>k. \\<forall>i>k. \\<exists>j>i. P (f j) (f i) \\<Longrightarrow>\n    False", "with mono [THEN *]"], ["proof (chain)\npicking this:\n  ?i1 < ?j1 \\<Longrightarrow> \\<not> P (f (\\<phi> ?i1)) (f (\\<phi> ?j1))\n  \\<forall>i j.\n     i < j \\<longrightarrow> \\<not> P (f (\\<phi> j)) (f (\\<phi> i))", "have \"\\<forall>i j. i < j \\<longrightarrow> incomparable P (f (\\<phi> j)) (f (\\<phi> i))\""], ["proof (prove)\nusing this:\n  ?i1 < ?j1 \\<Longrightarrow> \\<not> P (f (\\<phi> ?i1)) (f (\\<phi> ?j1))\n  \\<forall>i j.\n     i < j \\<longrightarrow> \\<not> P (f (\\<phi> j)) (f (\\<phi> i))\n\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       i < j \\<longrightarrow> incomparable P (f (\\<phi> j)) (f (\\<phi> i))", "by blast"], ["proof (state)\nthis:\n  \\<forall>i j.\n     i < j \\<longrightarrow> incomparable P (f (\\<phi> j)) (f (\\<phi> i))\n\ngoal (1 subgoal):\n 1. \\<nexists>k. \\<forall>i>k. \\<exists>j>i. P (f j) (f i) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<forall>i j.\n     i < j \\<longrightarrow> incomparable P (f (\\<phi> j)) (f (\\<phi> i))\n\ngoal (1 subgoal):\n 1. \\<nexists>k. \\<forall>i>k. \\<exists>j>i. P (f j) (f i) \\<Longrightarrow>\n    False", "have \"\\<exists>i j. i < j \\<and> \\<not> incomparable P (f (\\<phi> i)) (f (\\<phi> j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i j.\n       i < j \\<and> \\<not> incomparable P (f (\\<phi> i)) (f (\\<phi> j))", "using anti [unfolded not_ex, THEN spec, of \"\\<lambda>i. f (\\<phi> i)\"] and A"], ["proof (prove)\nusing this:\n  \\<not> antichain_on P (\\<lambda>i. f (\\<phi> i)) A\n  f ?i \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>i j.\n       i < j \\<and> \\<not> incomparable P (f (\\<phi> i)) (f (\\<phi> j))", "by blast"], ["proof (state)\nthis:\n  \\<exists>i j.\n     i < j \\<and> \\<not> incomparable P (f (\\<phi> i)) (f (\\<phi> j))\n\ngoal (1 subgoal):\n 1. \\<nexists>k. \\<forall>i>k. \\<exists>j>i. P (f j) (f i) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>i j.\n     i < j \\<longrightarrow> incomparable P (f (\\<phi> j)) (f (\\<phi> i))\n  \\<exists>i j.\n     i < j \\<and> \\<not> incomparable P (f (\\<phi> i)) (f (\\<phi> j))", "show False"], ["proof (prove)\nusing this:\n  \\<forall>i j.\n     i < j \\<longrightarrow> incomparable P (f (\\<phi> j)) (f (\\<phi> i))\n  \\<exists>i j.\n     i < j \\<and> \\<not> incomparable P (f (\\<phi> i)) (f (\\<phi> j))\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma every_qo_extension_wf_imp_af:\n  assumes ext: \"\\<forall>Q. (\\<forall>x\\<in>A. \\<forall>y\\<in>A. P x y \\<longrightarrow> Q x y) \\<and>\n    qo_on Q A \\<longrightarrow> wfp_on (strict Q) A\"\n    and \"qo_on P A\"\n  shows \"almost_full_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. almost_full_on P A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "from \\<open>qo_on P A\\<close>"], ["proof (chain)\npicking this:\n  qo_on P A", "have refl: \"reflp_on P A\"\n    and trans: \"transp_on P A\""], ["proof (prove)\nusing this:\n  qo_on P A\n\ngoal (1 subgoal):\n 1. reflp_on P A &&& transp_on P A", "by (auto intro: qo_on_imp_reflp_on qo_on_imp_transp_on)"], ["proof (state)\nthis:\n  reflp_on P A\n  transp_on P A\n\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "fix f :: \"nat \\<Rightarrow> 'a\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "assume \"\\<forall>i. f i \\<in> A\""], ["proof (state)\nthis:\n  \\<forall>i. f i \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "then"], ["proof (chain)\npicking this:\n  \\<forall>i. f i \\<in> A", "have A: \"\\<And>i. f i \\<in> A\""], ["proof (prove)\nusing this:\n  \\<forall>i. f i \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>i. f i \\<in> A", ".."], ["proof (state)\nthis:\n  f ?i \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>f. \\<forall>i. f i \\<in> A \\<Longrightarrow> good P f", "show \"good P f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. good P f", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  bad P f\n\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  bad P f", "have bad: \"\\<forall>i j. i < j \\<longrightarrow> \\<not> P (f i) (f j)\""], ["proof (prove)\nusing this:\n  bad P f\n\ngoal (1 subgoal):\n 1. \\<forall>i j. i < j \\<longrightarrow> \\<not> P (f i) (f j)", "by (auto simp: good_def)"], ["proof (state)\nthis:\n  \\<forall>i j. i < j \\<longrightarrow> \\<not> P (f i) (f j)\n\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>i j. i < j \\<longrightarrow> \\<not> P (f i) (f j)", "have *: \"\\<And>i j. P (f i) (f j) \\<Longrightarrow> i \\<ge> j\""], ["proof (prove)\nusing this:\n  \\<forall>i j. i < j \\<longrightarrow> \\<not> P (f i) (f j)\n\ngoal (1 subgoal):\n 1. \\<And>i j. P (f i) (f j) \\<Longrightarrow> j \\<le> i", "by (metis not_le_imp_less)"], ["proof (state)\nthis:\n  P (f ?i) (f ?j) \\<Longrightarrow> ?j \\<le> ?i\n\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "define D where [simp]: \"D = (\\<lambda>x y. \\<exists>i. x = f (Suc i) \\<and> y = f i)\""], ["proof (state)\nthis:\n  D = (\\<lambda>x y. \\<exists>i. x = f (Suc i) \\<and> y = f i)\n\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "define P' where \"P' = restrict_to P A\""], ["proof (state)\nthis:\n  P' = restrict_to P A\n\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "define Q where [simp]: \"Q = (sup P' D)\\<^sup>*\\<^sup>*\""], ["proof (state)\nthis:\n  Q = (sup P' D)\\<^sup>*\\<^sup>*\n\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "have **: \"\\<And>i j. (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+ (f i) (f j) \\<Longrightarrow> i > j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+ (f i)\n        (f j) \\<Longrightarrow>\n       j < i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+ (f i)\n        (f j) \\<Longrightarrow>\n       j < i", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+ (f i)\n        (f j) \\<Longrightarrow>\n       j < i", "assume \"(D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+ (f i) (f j)\""], ["proof (state)\nthis:\n  (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+ (f i) (f j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+ (f i)\n        (f j) \\<Longrightarrow>\n       j < i", "then"], ["proof (chain)\npicking this:\n  (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+ (f i) (f j)", "show \"i > j\""], ["proof (prove)\nusing this:\n  (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+ (f i) (f j)\n\ngoal (1 subgoal):\n 1. j < i", "apply (induct \"f i\" \"f j\" arbitrary: j)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>j. (D OO P'\\<^sup>*\\<^sup>*) (f i) (f j) \\<Longrightarrow> j < i\n 2. \\<And>b j.\n       \\<lbrakk>(D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+ (f i) b;\n        \\<And>j. b = f j \\<Longrightarrow> j < i;\n        (D OO P'\\<^sup>*\\<^sup>*) b (f j)\\<rbrakk>\n       \\<Longrightarrow> j < i", "apply (insert A, auto dest!: * simp: P'_def reflp_on_restrict_to_rtranclp [OF refl trans])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>j ia.\n       \\<lbrakk>\\<And>i. f i \\<in> A; f i = f (Suc ia); j \\<le> ia\\<rbrakk>\n       \\<Longrightarrow> j < i\n 2. \\<And>j ia.\n       \\<lbrakk>((\\<lambda>x y. \\<exists>i. x = f (Suc i) \\<and> y = f i) OO\n                 (restrict_to P A)\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+\n                 (f i) (f (Suc ia));\n        \\<And>j. f (Suc ia) = f j \\<Longrightarrow> j < i;\n        \\<And>i. f i \\<in> A; j \\<le> ia\\<rbrakk>\n       \\<Longrightarrow> j < i", "apply (metis \"*\" dual_order.strict_trans1 less_Suc_eq_le refl reflp_on_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j ia.\n       \\<lbrakk>((\\<lambda>x y. \\<exists>i. x = f (Suc i) \\<and> y = f i) OO\n                 (restrict_to P A)\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+\n                 (f i) (f (Suc ia));\n        \\<And>j. f (Suc ia) = f j \\<Longrightarrow> j < i;\n        \\<And>i. f i \\<in> A; j \\<le> ia\\<rbrakk>\n       \\<Longrightarrow> j < i", "by (metis le_imp_less_Suc less_trans)"], ["proof (state)\nthis:\n  j < i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+ (f ?i) (f ?j) \\<Longrightarrow>\n  ?j < ?i\n\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "have \"\\<forall>x\\<in>A. \\<forall>y\\<in>A. P x y \\<longrightarrow> Q x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A. \\<forall>y\\<in>A. P x y \\<longrightarrow> Q x y", "by (auto simp: P'_def)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>A. \\<forall>y\\<in>A. P x y \\<longrightarrow> Q x y\n\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<forall>x\\<in>A. \\<forall>y\\<in>A. P x y \\<longrightarrow> Q x y\n\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "have \"qo_on Q A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qo_on Q A", "by (auto simp: qo_on_def reflp_on_def transp_on_def)"], ["proof (state)\nthis:\n  qo_on Q A\n\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>A. \\<forall>y\\<in>A. P x y \\<longrightarrow> Q x y\n  qo_on Q A", "have \"wfp_on (strict Q) A\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A. \\<forall>y\\<in>A. P x y \\<longrightarrow> Q x y\n  qo_on Q A\n\ngoal (1 subgoal):\n 1. wfp_on (strict Q) A", "using ext [THEN spec, of Q]"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A. \\<forall>y\\<in>A. P x y \\<longrightarrow> Q x y\n  qo_on Q A\n  (\\<forall>x\\<in>A. \\<forall>y\\<in>A. P x y \\<longrightarrow> Q x y) \\<and>\n  qo_on Q A \\<longrightarrow>\n  wfp_on (strict Q) A\n\ngoal (1 subgoal):\n 1. wfp_on (strict Q) A", "by blast"], ["proof (state)\nthis:\n  wfp_on (strict Q) A\n\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  wfp_on (strict Q) A\n\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "have \"\\<forall>i. f i \\<in> A \\<and> strict Q (f (Suc i)) (f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i. f i \\<in> A \\<and> strict Q (f (Suc i)) (f i)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. f i \\<in> A \\<and> strict Q (f (Suc i)) (f i)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. f i \\<in> A \\<and> strict Q (f (Suc i)) (f i)", "have \"\\<not> Q (f i) (f (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Q (f i) (f (Suc i))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. Q (f i) (f (Suc i)) \\<Longrightarrow> False", "assume \"Q (f i) (f (Suc i))\""], ["proof (state)\nthis:\n  Q (f i) (f (Suc i))\n\ngoal (1 subgoal):\n 1. Q (f i) (f (Suc i)) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Q (f i) (f (Suc i))", "have \"(sup P' D)\\<^sup>*\\<^sup>* (f i) (f (Suc i))\""], ["proof (prove)\nusing this:\n  Q (f i) (f (Suc i))\n\ngoal (1 subgoal):\n 1. (sup P' D)\\<^sup>*\\<^sup>* (f i) (f (Suc i))", "by auto"], ["proof (state)\nthis:\n  (sup P' D)\\<^sup>*\\<^sup>* (f i) (f (Suc i))\n\ngoal (1 subgoal):\n 1. Q (f i) (f (Suc i)) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  (sup P' D)\\<^sup>*\\<^sup>* (f i) (f (Suc i))\n\ngoal (1 subgoal):\n 1. Q (f i) (f (Suc i)) \\<Longrightarrow> False", "have \"(sup P' D)\\<^sup>*\\<^sup>* = sup (P'\\<^sup>*\\<^sup>*) (P'\\<^sup>*\\<^sup>* OO (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sup P' D)\\<^sup>*\\<^sup>* =\n    sup P'\\<^sup>*\\<^sup>*\n     (P'\\<^sup>*\\<^sup>* OO (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (sup P' D)\\<^sup>*\\<^sup>* =\n    sup P'\\<^sup>*\\<^sup>*\n     (P'\\<^sup>*\\<^sup>* OO (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+)", "have \"\\<And>A B. (A \\<union> B)\\<^sup>* = A\\<^sup>* \\<union> A\\<^sup>* O (B O A\\<^sup>*)\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A B.\n       (A \\<union> B)\\<^sup>* =\n       A\\<^sup>* \\<union> A\\<^sup>* O (B O A\\<^sup>*)\\<^sup>+", "by regexp"], ["proof (state)\nthis:\n  (?A \\<union> ?B)\\<^sup>* =\n  ?A\\<^sup>* \\<union> ?A\\<^sup>* O (?B O ?A\\<^sup>*)\\<^sup>+\n\ngoal (1 subgoal):\n 1. (sup P' D)\\<^sup>*\\<^sup>* =\n    sup P'\\<^sup>*\\<^sup>*\n     (P'\\<^sup>*\\<^sup>* OO (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+)", "from this [to_pred]"], ["proof (chain)\npicking this:\n  (sup ?A ?B)\\<^sup>*\\<^sup>* =\n  sup ?A\\<^sup>*\\<^sup>*\n   (?A\\<^sup>*\\<^sup>* OO (?B OO ?A\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+)", "show ?thesis"], ["proof (prove)\nusing this:\n  (sup ?A ?B)\\<^sup>*\\<^sup>* =\n  sup ?A\\<^sup>*\\<^sup>*\n   (?A\\<^sup>*\\<^sup>* OO (?B OO ?A\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+)\n\ngoal (1 subgoal):\n 1. (sup P' D)\\<^sup>*\\<^sup>* =\n    sup P'\\<^sup>*\\<^sup>*\n     (P'\\<^sup>*\\<^sup>* OO (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+)", "by blast"], ["proof (state)\nthis:\n  (sup P' D)\\<^sup>*\\<^sup>* =\n  sup P'\\<^sup>*\\<^sup>*\n   (P'\\<^sup>*\\<^sup>* OO (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (sup P' D)\\<^sup>*\\<^sup>* =\n  sup P'\\<^sup>*\\<^sup>*\n   (P'\\<^sup>*\\<^sup>* OO (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+)\n\ngoal (1 subgoal):\n 1. Q (f i) (f (Suc i)) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  (sup P' D)\\<^sup>*\\<^sup>* (f i) (f (Suc i))\n  (sup P' D)\\<^sup>*\\<^sup>* =\n  sup P'\\<^sup>*\\<^sup>*\n   (P'\\<^sup>*\\<^sup>* OO (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+)", "have \"sup (P'\\<^sup>*\\<^sup>*) (P'\\<^sup>*\\<^sup>* OO (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+) (f i) (f (Suc i))\""], ["proof (prove)\nusing this:\n  (sup P' D)\\<^sup>*\\<^sup>* (f i) (f (Suc i))\n  (sup P' D)\\<^sup>*\\<^sup>* =\n  sup P'\\<^sup>*\\<^sup>*\n   (P'\\<^sup>*\\<^sup>* OO (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+)\n\ngoal (1 subgoal):\n 1. sup P'\\<^sup>*\\<^sup>*\n     (P'\\<^sup>*\\<^sup>* OO (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+) (f i)\n     (f (Suc i))", "by simp"], ["proof (state)\nthis:\n  sup P'\\<^sup>*\\<^sup>*\n   (P'\\<^sup>*\\<^sup>* OO (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+) (f i)\n   (f (Suc i))\n\ngoal (1 subgoal):\n 1. Q (f i) (f (Suc i)) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  sup P'\\<^sup>*\\<^sup>*\n   (P'\\<^sup>*\\<^sup>* OO (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+) (f i)\n   (f (Suc i))", "have \"(P'\\<^sup>*\\<^sup>* OO (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+) (f i) (f (Suc i))\""], ["proof (prove)\nusing this:\n  sup P'\\<^sup>*\\<^sup>*\n   (P'\\<^sup>*\\<^sup>* OO (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+) (f i)\n   (f (Suc i))\n\ngoal (1 subgoal):\n 1. (P'\\<^sup>*\\<^sup>* OO (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+) (f i)\n     (f (Suc i))", "by auto"], ["proof (state)\nthis:\n  (P'\\<^sup>*\\<^sup>* OO (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+) (f i)\n   (f (Suc i))\n\ngoal (1 subgoal):\n 1. Q (f i) (f (Suc i)) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (P'\\<^sup>*\\<^sup>* OO (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+) (f i)\n   (f (Suc i))", "have \"Suc i < i\""], ["proof (prove)\nusing this:\n  (P'\\<^sup>*\\<^sup>* OO (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+) (f i)\n   (f (Suc i))\n\ngoal (1 subgoal):\n 1. Suc i < i", "using **"], ["proof (prove)\nusing this:\n  (P'\\<^sup>*\\<^sup>* OO (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+) (f i)\n   (f (Suc i))\n  (D OO P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+ (f ?i) (f ?j) \\<Longrightarrow>\n  ?j < ?i\n\ngoal (1 subgoal):\n 1. Suc i < i", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>\\<And>i j.\n                   ((\\<lambda>x y.\n                        \\<exists>i. x = f (Suc i) \\<and> y = f i) OO\n                    P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+\n                    (f i) (f j) \\<Longrightarrow>\n                   j < i;\n        P'\\<^sup>*\\<^sup>* (f i) b;\n        ((\\<lambda>x y. \\<exists>i. x = f (Suc i) \\<and> y = f i) OO\n         P'\\<^sup>*\\<^sup>*)\\<^sup>+\\<^sup>+\n         b (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> False", "by (metis (lifting, mono_tags) less_le relcompp.relcompI tranclp_into_tranclp2)"], ["proof (state)\nthis:\n  Suc i < i\n\ngoal (1 subgoal):\n 1. Q (f i) (f (Suc i)) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Suc i < i", "show False"], ["proof (prove)\nusing this:\n  Suc i < i\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> Q (f i) (f (Suc i))\n\ngoal (1 subgoal):\n 1. \\<And>i. f i \\<in> A \\<and> strict Q (f (Suc i)) (f i)", "with A [of i]"], ["proof (chain)\npicking this:\n  f i \\<in> A\n  \\<not> Q (f i) (f (Suc i))", "show \"f i \\<in> A \\<and> strict Q (f (Suc i)) (f i)\""], ["proof (prove)\nusing this:\n  f i \\<in> A\n  \\<not> Q (f i) (f (Suc i))\n\ngoal (1 subgoal):\n 1. f i \\<in> A \\<and> strict Q (f (Suc i)) (f i)", "by auto"], ["proof (state)\nthis:\n  f i \\<in> A \\<and> strict Q (f (Suc i)) (f i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i. f i \\<in> A \\<and> strict Q (f (Suc i)) (f i)\n\ngoal (1 subgoal):\n 1. bad P f \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  wfp_on (strict Q) A\n  \\<forall>i. f i \\<in> A \\<and> strict Q (f (Suc i)) (f i)", "show False"], ["proof (prove)\nusing this:\n  wfp_on (strict Q) A\n  \\<forall>i. f i \\<in> A \\<and> strict Q (f (Suc i)) (f i)\n\ngoal (1 subgoal):\n 1. False", "unfolding wfp_on_def"], ["proof (prove)\nusing this:\n  \\<nexists>f. \\<forall>i. f i \\<in> A \\<and> strict Q (f (Suc i)) (f i)\n  \\<forall>i. f i \\<in> A \\<and> strict Q (f (Suc i)) (f i)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  good P f\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}