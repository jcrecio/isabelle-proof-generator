{"file_name": "/home/qj213/afp-2021-10-22/thys/Well_Quasi_Orders/Least_Enum.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Well_Quasi_Orders", "problem_names": ["lemma enum_mono:\n  shows \"enum i < enum (Suc i)\"", "lemma enum_less:\n  \"i < j \\<Longrightarrow> enum i < enum j\"", "lemma enum_P:\n  shows \"P (enum i)\"", "lemma enumchain_mono:\n  shows \"N \\<le> enumchain i \\<and> enumchain i < enumchain (Suc i)\"", "lemma enumchain_chain:\n  shows \"P (enumchain i) (enumchain (Suc i))\""], "translations": [["", "lemma enum_mono:\n  shows \"enum i < enum (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enum i < enum (Suc i)", "using infm"], ["proof (prove)\nusing this:\n  \\<forall>i. \\<exists>j>i. P j\n\ngoal (1 subgoal):\n 1. enum i < enum (Suc i)", "by (cases i, auto) (metis (lifting) LeastI)+"], ["", "lemma enum_less:\n  \"i < j \\<Longrightarrow> enum i < enum j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < j \\<Longrightarrow> enum i < enum j", "using enum_mono"], ["proof (prove)\nusing this:\n  enum ?i < enum (Suc ?i)\n\ngoal (1 subgoal):\n 1. i < j \\<Longrightarrow> enum i < enum j", "by (metis lift_Suc_mono_less)"], ["", "lemma enum_P:\n  shows \"P (enum i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (enum i)", "using infm"], ["proof (prove)\nusing this:\n  \\<forall>i. \\<exists>j>i. P j\n\ngoal (1 subgoal):\n 1. P (enum i)", "by (cases i, auto) (metis (lifting) LeastI)+"], ["", "end"], ["", "locale infinitely_many2 =\n  fixes P :: \"'a :: wellorder \\<Rightarrow> 'a \\<Rightarrow> bool\"\n    and N :: \"'a\"\n  assumes infm: \"\\<forall>i\\<ge>N. \\<exists>j>i. P i j\"\nbegin"], ["", "text \\<open>\n  Enumerate the elements of a well-ordered infinite set that form a chain w.r.t.\\ a given predicate\n  @{term P} starting from a given index @{term N} in increasing order.\n\\<close>"], ["", "fun enumchain :: \"nat \\<Rightarrow> 'a\" where\n  \"enumchain 0 = N\" |\n  \"enumchain (Suc n) = (LEAST m. m > enumchain n \\<and> P (enumchain n) m)\""], ["", "lemma enumchain_mono:\n  shows \"N \\<le> enumchain i \\<and> enumchain i < enumchain (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<le> enumchain i \\<and> enumchain i < enumchain (Suc i)", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. N \\<le> enumchain 0 \\<and> enumchain 0 < enumchain (Suc 0)\n 2. \\<And>i.\n       N \\<le> enumchain i \\<and>\n       enumchain i < enumchain (Suc i) \\<Longrightarrow>\n       N \\<le> enumchain (Suc i) \\<and>\n       enumchain (Suc i) < enumchain (Suc (Suc i))", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. N \\<le> enumchain 0 \\<and> enumchain 0 < enumchain (Suc 0)\n 2. \\<And>i.\n       N \\<le> enumchain i \\<and>\n       enumchain i < enumchain (Suc i) \\<Longrightarrow>\n       N \\<le> enumchain (Suc i) \\<and>\n       enumchain (Suc i) < enumchain (Suc (Suc i))", "have \"enumchain 0 \\<ge> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<le> enumchain 0", "by simp"], ["proof (state)\nthis:\n  N \\<le> enumchain 0\n\ngoal (2 subgoals):\n 1. N \\<le> enumchain 0 \\<and> enumchain 0 < enumchain (Suc 0)\n 2. \\<And>i.\n       N \\<le> enumchain i \\<and>\n       enumchain i < enumchain (Suc i) \\<Longrightarrow>\n       N \\<le> enumchain (Suc i) \\<and>\n       enumchain (Suc i) < enumchain (Suc (Suc i))", "moreover"], ["proof (state)\nthis:\n  N \\<le> enumchain 0\n\ngoal (2 subgoals):\n 1. N \\<le> enumchain 0 \\<and> enumchain 0 < enumchain (Suc 0)\n 2. \\<And>i.\n       N \\<le> enumchain i \\<and>\n       enumchain i < enumchain (Suc i) \\<Longrightarrow>\n       N \\<le> enumchain (Suc i) \\<and>\n       enumchain (Suc i) < enumchain (Suc (Suc i))", "then"], ["proof (chain)\npicking this:\n  N \\<le> enumchain 0", "have \"\\<exists>m>enumchain 0. P (enumchain 0) m\""], ["proof (prove)\nusing this:\n  N \\<le> enumchain 0\n\ngoal (1 subgoal):\n 1. \\<exists>m>enumchain 0. P (enumchain 0) m", "using infm"], ["proof (prove)\nusing this:\n  N \\<le> enumchain 0\n  \\<forall>i\\<ge>N. \\<exists>j>i. P i j\n\ngoal (1 subgoal):\n 1. \\<exists>m>enumchain 0. P (enumchain 0) m", "by blast"], ["proof (state)\nthis:\n  \\<exists>m>enumchain 0. P (enumchain 0) m\n\ngoal (2 subgoals):\n 1. N \\<le> enumchain 0 \\<and> enumchain 0 < enumchain (Suc 0)\n 2. \\<And>i.\n       N \\<le> enumchain i \\<and>\n       enumchain i < enumchain (Suc i) \\<Longrightarrow>\n       N \\<le> enumchain (Suc i) \\<and>\n       enumchain (Suc i) < enumchain (Suc (Suc i))", "ultimately"], ["proof (chain)\npicking this:\n  N \\<le> enumchain 0\n  \\<exists>m>enumchain 0. P (enumchain 0) m", "show ?case"], ["proof (prove)\nusing this:\n  N \\<le> enumchain 0\n  \\<exists>m>enumchain 0. P (enumchain 0) m\n\ngoal (1 subgoal):\n 1. N \\<le> enumchain 0 \\<and> enumchain 0 < enumchain (Suc 0)", "by auto (metis (lifting) LeastI)"], ["proof (state)\nthis:\n  N \\<le> enumchain 0 \\<and> enumchain 0 < enumchain (Suc 0)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       N \\<le> enumchain i \\<and>\n       enumchain i < enumchain (Suc i) \\<Longrightarrow>\n       N \\<le> enumchain (Suc i) \\<and>\n       enumchain (Suc i) < enumchain (Suc (Suc i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       N \\<le> enumchain i \\<and>\n       enumchain i < enumchain (Suc i) \\<Longrightarrow>\n       N \\<le> enumchain (Suc i) \\<and>\n       enumchain (Suc i) < enumchain (Suc (Suc i))", "case (Suc i)"], ["proof (state)\nthis:\n  N \\<le> enumchain i \\<and> enumchain i < enumchain (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       N \\<le> enumchain i \\<and>\n       enumchain i < enumchain (Suc i) \\<Longrightarrow>\n       N \\<le> enumchain (Suc i) \\<and>\n       enumchain (Suc i) < enumchain (Suc (Suc i))", "then"], ["proof (chain)\npicking this:\n  N \\<le> enumchain i \\<and> enumchain i < enumchain (Suc i)", "have \"N \\<le> enumchain (Suc i)\""], ["proof (prove)\nusing this:\n  N \\<le> enumchain i \\<and> enumchain i < enumchain (Suc i)\n\ngoal (1 subgoal):\n 1. N \\<le> enumchain (Suc i)", "by auto"], ["proof (state)\nthis:\n  N \\<le> enumchain (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       N \\<le> enumchain i \\<and>\n       enumchain i < enumchain (Suc i) \\<Longrightarrow>\n       N \\<le> enumchain (Suc i) \\<and>\n       enumchain (Suc i) < enumchain (Suc (Suc i))", "moreover"], ["proof (state)\nthis:\n  N \\<le> enumchain (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       N \\<le> enumchain i \\<and>\n       enumchain i < enumchain (Suc i) \\<Longrightarrow>\n       N \\<le> enumchain (Suc i) \\<and>\n       enumchain (Suc i) < enumchain (Suc (Suc i))", "then"], ["proof (chain)\npicking this:\n  N \\<le> enumchain (Suc i)", "have \"\\<exists>m>enumchain (Suc i). P (enumchain (Suc i)) m\""], ["proof (prove)\nusing this:\n  N \\<le> enumchain (Suc i)\n\ngoal (1 subgoal):\n 1. \\<exists>m>enumchain (Suc i). P (enumchain (Suc i)) m", "using infm"], ["proof (prove)\nusing this:\n  N \\<le> enumchain (Suc i)\n  \\<forall>i\\<ge>N. \\<exists>j>i. P i j\n\ngoal (1 subgoal):\n 1. \\<exists>m>enumchain (Suc i). P (enumchain (Suc i)) m", "by blast"], ["proof (state)\nthis:\n  \\<exists>m>enumchain (Suc i). P (enumchain (Suc i)) m\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       N \\<le> enumchain i \\<and>\n       enumchain i < enumchain (Suc i) \\<Longrightarrow>\n       N \\<le> enumchain (Suc i) \\<and>\n       enumchain (Suc i) < enumchain (Suc (Suc i))", "ultimately"], ["proof (chain)\npicking this:\n  N \\<le> enumchain (Suc i)\n  \\<exists>m>enumchain (Suc i). P (enumchain (Suc i)) m", "show ?case"], ["proof (prove)\nusing this:\n  N \\<le> enumchain (Suc i)\n  \\<exists>m>enumchain (Suc i). P (enumchain (Suc i)) m\n\ngoal (1 subgoal):\n 1. N \\<le> enumchain (Suc i) \\<and>\n    enumchain (Suc i) < enumchain (Suc (Suc i))", "by (auto) (metis (lifting) LeastI)"], ["proof (state)\nthis:\n  N \\<le> enumchain (Suc i) \\<and>\n  enumchain (Suc i) < enumchain (Suc (Suc i))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma enumchain_chain:\n  shows \"P (enumchain i) (enumchain (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (enumchain i) (enumchain (Suc i))", "proof (cases i)"], ["proof (state)\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> P (enumchain i) (enumchain (Suc i))\n 2. \\<And>nat.\n       i = Suc nat \\<Longrightarrow> P (enumchain i) (enumchain (Suc i))", "case 0"], ["proof (state)\nthis:\n  i = 0\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> P (enumchain i) (enumchain (Suc i))\n 2. \\<And>nat.\n       i = Suc nat \\<Longrightarrow> P (enumchain i) (enumchain (Suc i))", "moreover"], ["proof (state)\nthis:\n  i = 0\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> P (enumchain i) (enumchain (Suc i))\n 2. \\<And>nat.\n       i = Suc nat \\<Longrightarrow> P (enumchain i) (enumchain (Suc i))", "have \"\\<exists>m>enumchain 0. P (enumchain 0) m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m>enumchain 0. P (enumchain 0) m", "using infm"], ["proof (prove)\nusing this:\n  \\<forall>i\\<ge>N. \\<exists>j>i. P i j\n\ngoal (1 subgoal):\n 1. \\<exists>m>enumchain 0. P (enumchain 0) m", "by auto"], ["proof (state)\nthis:\n  \\<exists>m>enumchain 0. P (enumchain 0) m\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> P (enumchain i) (enumchain (Suc i))\n 2. \\<And>nat.\n       i = Suc nat \\<Longrightarrow> P (enumchain i) (enumchain (Suc i))", "ultimately"], ["proof (chain)\npicking this:\n  i = 0\n  \\<exists>m>enumchain 0. P (enumchain 0) m", "show ?thesis"], ["proof (prove)\nusing this:\n  i = 0\n  \\<exists>m>enumchain 0. P (enumchain 0) m\n\ngoal (1 subgoal):\n 1. P (enumchain i) (enumchain (Suc i))", "by auto (metis (lifting) LeastI)"], ["proof (state)\nthis:\n  P (enumchain i) (enumchain (Suc i))\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i = Suc nat \\<Longrightarrow> P (enumchain i) (enumchain (Suc i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i = Suc nat \\<Longrightarrow> P (enumchain i) (enumchain (Suc i))", "case (Suc i)"], ["proof (state)\nthis:\n  i = Suc i\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i = Suc nat \\<Longrightarrow> P (enumchain i) (enumchain (Suc i))", "moreover"], ["proof (state)\nthis:\n  i = Suc i\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i = Suc nat \\<Longrightarrow> P (enumchain i) (enumchain (Suc i))", "have \"enumchain (Suc i) > N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N < enumchain (Suc i)", "using enumchain_mono"], ["proof (prove)\nusing this:\n  N \\<le> enumchain ?i \\<and> enumchain ?i < enumchain (Suc ?i)\n\ngoal (1 subgoal):\n 1. N < enumchain (Suc i)", "by (metis le_less_trans)"], ["proof (state)\nthis:\n  N < enumchain (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i = Suc nat \\<Longrightarrow> P (enumchain i) (enumchain (Suc i))", "moreover"], ["proof (state)\nthis:\n  N < enumchain (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i = Suc nat \\<Longrightarrow> P (enumchain i) (enumchain (Suc i))", "then"], ["proof (chain)\npicking this:\n  N < enumchain (Suc i)", "have \"\\<exists>m>enumchain (Suc i). P (enumchain (Suc i)) m\""], ["proof (prove)\nusing this:\n  N < enumchain (Suc i)\n\ngoal (1 subgoal):\n 1. \\<exists>m>enumchain (Suc i). P (enumchain (Suc i)) m", "using infm"], ["proof (prove)\nusing this:\n  N < enumchain (Suc i)\n  \\<forall>i\\<ge>N. \\<exists>j>i. P i j\n\ngoal (1 subgoal):\n 1. \\<exists>m>enumchain (Suc i). P (enumchain (Suc i)) m", "by auto"], ["proof (state)\nthis:\n  \\<exists>m>enumchain (Suc i). P (enumchain (Suc i)) m\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i = Suc nat \\<Longrightarrow> P (enumchain i) (enumchain (Suc i))", "ultimately"], ["proof (chain)\npicking this:\n  i = Suc i\n  N < enumchain (Suc i)\n  \\<exists>m>enumchain (Suc i). P (enumchain (Suc i)) m", "show ?thesis"], ["proof (prove)\nusing this:\n  i = Suc i\n  N < enumchain (Suc i)\n  \\<exists>m>enumchain (Suc i). P (enumchain (Suc i)) m\n\ngoal (1 subgoal):\n 1. P (enumchain i) (enumchain (Suc i))", "by (auto) (metis (lifting) LeastI)"], ["proof (state)\nthis:\n  P (enumchain i) (enumchain (Suc i))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}