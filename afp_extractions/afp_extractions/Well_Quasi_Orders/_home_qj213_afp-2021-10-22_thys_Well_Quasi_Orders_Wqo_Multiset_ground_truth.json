{"file_name": "/home/qj213/afp-2021-10-22/thys/Well_Quasi_Orders/Wqo_Multiset.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Well_Quasi_Orders", "problem_names": ["lemma list_emb_imp_reflclp_mulex_on:\n  assumes \"xs \\<in> lists A\" and \"ys \\<in> lists A\"\n    and \"list_emb P xs ys\"\n  shows \"(mulex_on P A)\\<^sup>=\\<^sup>= (mset xs) (mset ys)\"", "lemma almost_full_on_multisets:\n  assumes \"almost_full_on P A\"\n  shows \"almost_full_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)\"", "lemma wqo_on_multisets:\n  assumes \"wqo_on P A\"\n  shows \"wqo_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)\""], "translations": [["", "lemma list_emb_imp_reflclp_mulex_on:\n  assumes \"xs \\<in> lists A\" and \"ys \\<in> lists A\"\n    and \"list_emb P xs ys\"\n  shows \"(mulex_on P A)\\<^sup>=\\<^sup>= (mset xs) (mset ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs) (mset ys)", "using assms(3, 1, 2)"], ["proof (prove)\nusing this:\n  list_emb P xs ys\n  xs \\<in> lists A\n  ys \\<in> lists A\n\ngoal (1 subgoal):\n 1. (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs) (mset ys)", "proof (induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>[] \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n       \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset []) (mset ys)\n 2. \\<And>xs ys y.\n       \\<lbrakk>list_emb P xs ys;\n        \\<lbrakk>xs \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n        \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs)\n                           (mset ys);\n        xs \\<in> lists A; y # ys \\<in> lists A\\<rbrakk>\n       \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs)\n                          (mset (y # ys))\n 3. \\<And>x y xs ys.\n       \\<lbrakk>P x y; list_emb P xs ys;\n        \\<lbrakk>xs \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n        \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs)\n                           (mset ys);\n        x # xs \\<in> lists A; y # ys \\<in> lists A\\<rbrakk>\n       \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset (x # xs))\n                          (mset (y # ys))", "case (list_emb_Nil ys)"], ["proof (state)\nthis:\n  [] \\<in> lists A\n  ys \\<in> lists A\n\ngoal (3 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>[] \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n       \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset []) (mset ys)\n 2. \\<And>xs ys y.\n       \\<lbrakk>list_emb P xs ys;\n        \\<lbrakk>xs \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n        \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs)\n                           (mset ys);\n        xs \\<in> lists A; y # ys \\<in> lists A\\<rbrakk>\n       \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs)\n                          (mset (y # ys))\n 3. \\<And>x y xs ys.\n       \\<lbrakk>P x y; list_emb P xs ys;\n        \\<lbrakk>xs \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n        \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs)\n                           (mset ys);\n        x # xs \\<in> lists A; y # ys \\<in> lists A\\<rbrakk>\n       \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset (x # xs))\n                          (mset (y # ys))", "then"], ["proof (chain)\npicking this:\n  [] \\<in> lists A\n  ys \\<in> lists A", "show ?case"], ["proof (prove)\nusing this:\n  [] \\<in> lists A\n  ys \\<in> lists A\n\ngoal (1 subgoal):\n 1. (mulex_on P A)\\<^sup>=\\<^sup>= (mset []) (mset ys)", "by (cases ys) (auto intro!: empty_mulex_on simp: multisets_def)"], ["proof (state)\nthis:\n  (mulex_on P A)\\<^sup>=\\<^sup>= (mset []) (mset ys)\n\ngoal (2 subgoals):\n 1. \\<And>xs ys y.\n       \\<lbrakk>list_emb P xs ys;\n        \\<lbrakk>xs \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n        \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs)\n                           (mset ys);\n        xs \\<in> lists A; y # ys \\<in> lists A\\<rbrakk>\n       \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs)\n                          (mset (y # ys))\n 2. \\<And>x y xs ys.\n       \\<lbrakk>P x y; list_emb P xs ys;\n        \\<lbrakk>xs \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n        \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs)\n                           (mset ys);\n        x # xs \\<in> lists A; y # ys \\<in> lists A\\<rbrakk>\n       \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset (x # xs))\n                          (mset (y # ys))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xs ys y.\n       \\<lbrakk>list_emb P xs ys;\n        \\<lbrakk>xs \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n        \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs)\n                           (mset ys);\n        xs \\<in> lists A; y # ys \\<in> lists A\\<rbrakk>\n       \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs)\n                          (mset (y # ys))\n 2. \\<And>x y xs ys.\n       \\<lbrakk>P x y; list_emb P xs ys;\n        \\<lbrakk>xs \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n        \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs)\n                           (mset ys);\n        x # xs \\<in> lists A; y # ys \\<in> lists A\\<rbrakk>\n       \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset (x # xs))\n                          (mset (y # ys))", "case (list_emb_Cons xs ys y)"], ["proof (state)\nthis:\n  list_emb P xs ys\n  \\<lbrakk>xs \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n  \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs) (mset ys)\n  xs \\<in> lists A\n  y # ys \\<in> lists A\n\ngoal (2 subgoals):\n 1. \\<And>xs ys y.\n       \\<lbrakk>list_emb P xs ys;\n        \\<lbrakk>xs \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n        \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs)\n                           (mset ys);\n        xs \\<in> lists A; y # ys \\<in> lists A\\<rbrakk>\n       \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs)\n                          (mset (y # ys))\n 2. \\<And>x y xs ys.\n       \\<lbrakk>P x y; list_emb P xs ys;\n        \\<lbrakk>xs \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n        \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs)\n                           (mset ys);\n        x # xs \\<in> lists A; y # ys \\<in> lists A\\<rbrakk>\n       \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset (x # xs))\n                          (mset (y # ys))", "then"], ["proof (chain)\npicking this:\n  list_emb P xs ys\n  \\<lbrakk>xs \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n  \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs) (mset ys)\n  xs \\<in> lists A\n  y # ys \\<in> lists A", "show ?case"], ["proof (prove)\nusing this:\n  list_emb P xs ys\n  \\<lbrakk>xs \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n  \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs) (mset ys)\n  xs \\<in> lists A\n  y # ys \\<in> lists A\n\ngoal (1 subgoal):\n 1. (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs) (mset (y # ys))", "by (auto intro!: mulex_on_self_add_singleton_right simp: multisets_def)"], ["proof (state)\nthis:\n  (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs) (mset (y # ys))\n\ngoal (1 subgoal):\n 1. \\<And>x y xs ys.\n       \\<lbrakk>P x y; list_emb P xs ys;\n        \\<lbrakk>xs \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n        \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs)\n                           (mset ys);\n        x # xs \\<in> lists A; y # ys \\<in> lists A\\<rbrakk>\n       \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset (x # xs))\n                          (mset (y # ys))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y xs ys.\n       \\<lbrakk>P x y; list_emb P xs ys;\n        \\<lbrakk>xs \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n        \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs)\n                           (mset ys);\n        x # xs \\<in> lists A; y # ys \\<in> lists A\\<rbrakk>\n       \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset (x # xs))\n                          (mset (y # ys))", "case (list_emb_Cons2 x y xs ys)"], ["proof (state)\nthis:\n  P x y\n  list_emb P xs ys\n  \\<lbrakk>xs \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n  \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs) (mset ys)\n  x # xs \\<in> lists A\n  y # ys \\<in> lists A\n\ngoal (1 subgoal):\n 1. \\<And>x y xs ys.\n       \\<lbrakk>P x y; list_emb P xs ys;\n        \\<lbrakk>xs \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n        \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs)\n                           (mset ys);\n        x # xs \\<in> lists A; y # ys \\<in> lists A\\<rbrakk>\n       \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset (x # xs))\n                          (mset (y # ys))", "then"], ["proof (chain)\npicking this:\n  P x y\n  list_emb P xs ys\n  \\<lbrakk>xs \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n  \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs) (mset ys)\n  x # xs \\<in> lists A\n  y # ys \\<in> lists A", "show ?case"], ["proof (prove)\nusing this:\n  P x y\n  list_emb P xs ys\n  \\<lbrakk>xs \\<in> lists A; ys \\<in> lists A\\<rbrakk>\n  \\<Longrightarrow> (mulex_on P A)\\<^sup>=\\<^sup>= (mset xs) (mset ys)\n  x # xs \\<in> lists A\n  y # ys \\<in> lists A\n\ngoal (1 subgoal):\n 1. (mulex_on P A)\\<^sup>=\\<^sup>= (mset (x # xs)) (mset (y # ys))", "by (force intro: union_mulex_on_mono mulex_on_add_mset\n             mulex_on_add_mset' mulex_on_add_mset_mono\n             simp: multisets_def)"], ["proof (state)\nthis:\n  (mulex_on P A)\\<^sup>=\\<^sup>= (mset (x # xs)) (mset (y # ys))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The (reflexive closure of the) multiset extension of an almost-full relation\nis almost-full.\\<close>"], ["", "lemma almost_full_on_multisets:\n  assumes \"almost_full_on P A\"\n  shows \"almost_full_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. almost_full_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. almost_full_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)", "let ?P = \"(mulex_on P A)\\<^sup>=\\<^sup>=\""], ["proof (state)\ngoal (1 subgoal):\n 1. almost_full_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)", "from almost_full_on_hom [OF _ almost_full_on_lists, of A P ?P mset,\n    OF list_emb_imp_reflclp_mulex_on, simplified]"], ["proof (chain)\npicking this:\n  almost_full_on P A \\<Longrightarrow>\n  almost_full_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)", "show ?thesis"], ["proof (prove)\nusing this:\n  almost_full_on P A \\<Longrightarrow>\n  almost_full_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)\n\ngoal (1 subgoal):\n 1. almost_full_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)", "using assms"], ["proof (prove)\nusing this:\n  almost_full_on P A \\<Longrightarrow>\n  almost_full_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)\n  almost_full_on P A\n\ngoal (1 subgoal):\n 1. almost_full_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)", "by blast"], ["proof (state)\nthis:\n  almost_full_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wqo_on_multisets:\n  assumes \"wqo_on P A\"\n  shows \"wqo_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wqo_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. transp_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)\n 2. almost_full_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)", "from transp_on_mulex_on [of P A \"multisets A\"]"], ["proof (chain)\npicking this:\n  transp_on (mulex_on P A) (multisets A)", "show \"transp_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)\""], ["proof (prove)\nusing this:\n  transp_on (mulex_on P A) (multisets A)\n\ngoal (1 subgoal):\n 1. transp_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)", "unfolding transp_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>multisets A.\n     \\<forall>y\\<in>multisets A.\n        \\<forall>z\\<in>multisets A.\n           mulex_on P A x y \\<and> mulex_on P A y z \\<longrightarrow>\n           mulex_on P A x z\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>multisets A.\n       \\<forall>y\\<in>multisets A.\n          \\<forall>z\\<in>multisets A.\n             (mulex_on P A)\\<^sup>=\\<^sup>= x y \\<and>\n             (mulex_on P A)\\<^sup>=\\<^sup>= y z \\<longrightarrow>\n             (mulex_on P A)\\<^sup>=\\<^sup>= x z", "by blast"], ["proof (state)\nthis:\n  transp_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)\n\ngoal (1 subgoal):\n 1. almost_full_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. almost_full_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)", "from almost_full_on_multisets [OF assms [THEN wqo_on_imp_almost_full_on]]"], ["proof (chain)\npicking this:\n  almost_full_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)", "show \"almost_full_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)\""], ["proof (prove)\nusing this:\n  almost_full_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)\n\ngoal (1 subgoal):\n 1. almost_full_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)", "."], ["proof (state)\nthis:\n  almost_full_on (mulex_on P A)\\<^sup>=\\<^sup>= (multisets A)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}