{"file_name": "/home/qj213/afp-2021-10-22/thys/Prime_Harmonic_Series/Prime_Harmonic_Misc.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Prime_Harmonic_Series", "problem_names": ["lemma sum_list_nonneg: \"\\<forall>x\\<in>set xs. x \\<ge> 0 \\<Longrightarrow> sum_list xs \\<ge> (0 :: 'a :: ordered_ab_group_add)\"", "lemma sum_telescope':\n  assumes \"m \\<le> n\"\n  shows   \"(\\<Sum>k = Suc m..n. f k - f (Suc k)) = f (Suc m) - (f (Suc n) :: 'a :: ab_group_add)\"", "lemma dvd_prodI:\n  assumes \"finite A\" \"x \\<in> A\"\n  shows   \"f x dvd prod f A\"", "lemma dvd_prodD: \"finite A \\<Longrightarrow> prod f A dvd x \\<Longrightarrow> a \\<in> A \\<Longrightarrow> f a dvd x\"", "lemma multiplicity_power_nat: \n  \"prime p \\<Longrightarrow> n > 0 \\<Longrightarrow> multiplicity p (n ^ k :: nat) = k * multiplicity p n\"", "lemma multiplicity_prod_prime_powers_nat':\n  \"finite S \\<Longrightarrow> \\<forall>p\\<in>S. prime p \\<Longrightarrow> prime p \\<Longrightarrow> \n     multiplicity p (\\<Prod>S :: nat) = (if p \\<in> S then 1 else 0)\"", "lemma prod_prime_subset:\n  assumes \"finite A\" \"finite B\"\n  assumes \"\\<And>x. x \\<in> A \\<Longrightarrow> prime (x::nat)\"\n  assumes \"\\<And>x. x \\<in> B \\<Longrightarrow> prime x\"\n  assumes \"\\<Prod>A dvd \\<Prod>B\"\n  shows   \"A \\<subseteq> B\"", "lemma prod_prime_eq:\n  assumes \"finite A\" \"finite B\" \"\\<And>x. x \\<in> A \\<Longrightarrow> prime (x::nat)\" \"\\<And>x. x \\<in> B \\<Longrightarrow> prime x\" \"\\<Prod>A = \\<Prod>B\"\n  shows   \"A = B\"", "lemma ln_ln_nonneg:\n  assumes x: \"x \\<ge> (3 :: real)\"\n  shows   \"ln (ln x) \\<ge> 0\""], "translations": [["", "lemma sum_list_nonneg: \"\\<forall>x\\<in>set xs. x \\<ge> 0 \\<Longrightarrow> sum_list xs \\<ge> (0 :: 'a :: ordered_ab_group_add)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set xs. (0::'a) \\<le> x \\<Longrightarrow>\n    (0::'a) \\<le> sum_list xs", "by (induction xs) auto"], ["", "lemma sum_telescope':\n  assumes \"m \\<le> n\"\n  shows   \"(\\<Sum>k = Suc m..n. f k - f (Suc k)) = f (Suc m) - (f (Suc n) :: 'a :: ab_group_add)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc m..n. f k - f (Suc k)) = f (Suc m) - f (Suc n)", "by (rule dec_induct[OF assms]) (simp_all add: algebra_simps)"], ["", "lemma dvd_prodI:\n  assumes \"finite A\" \"x \\<in> A\"\n  shows   \"f x dvd prod f A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x dvd prod f A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f x dvd prod f A", "from assms"], ["proof (chain)\npicking this:\n  finite A\n  x \\<in> A", "have \"prod f A = f x * prod f (A - {x})\""], ["proof (prove)\nusing this:\n  finite A\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. prod f A = f x * prod f (A - {x})", "by (intro prod.remove) simp_all"], ["proof (state)\nthis:\n  prod f A = f x * prod f (A - {x})\n\ngoal (1 subgoal):\n 1. f x dvd prod f A", "thus ?thesis"], ["proof (prove)\nusing this:\n  prod f A = f x * prod f (A - {x})\n\ngoal (1 subgoal):\n 1. f x dvd prod f A", "by simp"], ["proof (state)\nthis:\n  f x dvd prod f A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dvd_prodD: \"finite A \\<Longrightarrow> prod f A dvd x \\<Longrightarrow> a \\<in> A \\<Longrightarrow> f a dvd x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; prod f A dvd x; a \\<in> A\\<rbrakk>\n    \\<Longrightarrow> f a dvd x", "by (erule dvd_trans[OF dvd_prodI])"], ["", "lemma multiplicity_power_nat: \n  \"prime p \\<Longrightarrow> n > 0 \\<Longrightarrow> multiplicity p (n ^ k :: nat) = k * multiplicity p n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; 0 < n\\<rbrakk>\n    \\<Longrightarrow> multiplicity p (n ^ k) = k * multiplicity p n", "by (induction k) (simp_all add: prime_elem_multiplicity_mult_distrib)"], ["", "lemma multiplicity_prod_prime_powers_nat':\n  \"finite S \\<Longrightarrow> \\<forall>p\\<in>S. prime p \\<Longrightarrow> prime p \\<Longrightarrow> \n     multiplicity p (\\<Prod>S :: nat) = (if p \\<in> S then 1 else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite S; \\<forall>p\\<in>S. prime p; prime p\\<rbrakk>\n    \\<Longrightarrow> multiplicity p (\\<Prod>S) =\n                      (if p \\<in> S then 1 else 0)", "using multiplicity_prod_prime_powers[of S p \"\\<lambda>_. 1\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite S; \\<And>x. x \\<in> S \\<Longrightarrow> prime x;\n   prime p\\<rbrakk>\n  \\<Longrightarrow> multiplicity p (\\<Prod>p\\<in>S. p ^ 1) =\n                    (if p \\<in> S then 1 else 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite S; \\<forall>p\\<in>S. prime p; prime p\\<rbrakk>\n    \\<Longrightarrow> multiplicity p (\\<Prod>S) =\n                      (if p \\<in> S then 1 else 0)", "by simp"], ["", "lemma prod_prime_subset:\n  assumes \"finite A\" \"finite B\"\n  assumes \"\\<And>x. x \\<in> A \\<Longrightarrow> prime (x::nat)\"\n  assumes \"\\<And>x. x \\<in> B \\<Longrightarrow> prime x\"\n  assumes \"\\<Prod>A dvd \\<Prod>B\"\n  shows   \"A \\<subseteq> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> B", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> B", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> B", "assume x: \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> B", "from assms(4)[of 0]"], ["proof (chain)\npicking this:\n  0 \\<in> B \\<Longrightarrow> prime 0", "have \"0 \\<notin> B\""], ["proof (prove)\nusing this:\n  0 \\<in> B \\<Longrightarrow> prime 0\n\ngoal (1 subgoal):\n 1. 0 \\<notin> B", "by auto"], ["proof (state)\nthis:\n  0 \\<notin> B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> B", "with assms"], ["proof (chain)\npicking this:\n  finite A\n  finite B\n  ?x \\<in> A \\<Longrightarrow> prime ?x\n  ?x \\<in> B \\<Longrightarrow> prime ?x\n  \\<Prod>A dvd \\<Prod>B\n  0 \\<notin> B", "have nonzero: \"\\<forall>z\\<in>B. z \\<noteq> 0\""], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  ?x \\<in> A \\<Longrightarrow> prime ?x\n  ?x \\<in> B \\<Longrightarrow> prime ?x\n  \\<Prod>A dvd \\<Prod>B\n  0 \\<notin> B\n\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>B. z \\<noteq> 0", "by (intro ballI notI) auto"], ["proof (state)\nthis:\n  \\<forall>z\\<in>B. z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> B", "from x assms"], ["proof (chain)\npicking this:\n  x \\<in> A\n  finite A\n  finite B\n  ?x \\<in> A \\<Longrightarrow> prime ?x\n  ?x \\<in> B \\<Longrightarrow> prime ?x\n  \\<Prod>A dvd \\<Prod>B", "have \"1 = multiplicity x (\\<Prod>A)\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  finite A\n  finite B\n  ?x \\<in> A \\<Longrightarrow> prime ?x\n  ?x \\<in> B \\<Longrightarrow> prime ?x\n  \\<Prod>A dvd \\<Prod>B\n\ngoal (1 subgoal):\n 1. 1 = multiplicity x (\\<Prod>A)", "by (subst multiplicity_prod_prime_powers_nat') simp_all"], ["proof (state)\nthis:\n  1 = multiplicity x (\\<Prod>A)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> B", "also"], ["proof (state)\nthis:\n  1 = multiplicity x (\\<Prod>A)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> B", "from assms nonzero"], ["proof (chain)\npicking this:\n  finite A\n  finite B\n  ?x \\<in> A \\<Longrightarrow> prime ?x\n  ?x \\<in> B \\<Longrightarrow> prime ?x\n  \\<Prod>A dvd \\<Prod>B\n  \\<forall>z\\<in>B. z \\<noteq> 0", "have \"\\<dots> \\<le> multiplicity x (\\<Prod>B)\""], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  ?x \\<in> A \\<Longrightarrow> prime ?x\n  ?x \\<in> B \\<Longrightarrow> prime ?x\n  \\<Prod>A dvd \\<Prod>B\n  \\<forall>z\\<in>B. z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. multiplicity x (\\<Prod>A) \\<le> multiplicity x (\\<Prod>B)", "by (intro dvd_imp_multiplicity_le) auto"], ["proof (state)\nthis:\n  multiplicity x (\\<Prod>A) \\<le> multiplicity x (\\<Prod>B)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> B", "finally"], ["proof (chain)\npicking this:\n  1 \\<le> multiplicity x (\\<Prod>B)", "have \"multiplicity x (\\<Prod>B) > 0\""], ["proof (prove)\nusing this:\n  1 \\<le> multiplicity x (\\<Prod>B)\n\ngoal (1 subgoal):\n 1. 0 < multiplicity x (\\<Prod>B)", "by simp"], ["proof (state)\nthis:\n  0 < multiplicity x (\\<Prod>B)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> B", "moreover"], ["proof (state)\nthis:\n  0 < multiplicity x (\\<Prod>B)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> B", "from assms x"], ["proof (chain)\npicking this:\n  finite A\n  finite B\n  ?x \\<in> A \\<Longrightarrow> prime ?x\n  ?x \\<in> B \\<Longrightarrow> prime ?x\n  \\<Prod>A dvd \\<Prod>B\n  x \\<in> A", "have \"prime x\""], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  ?x \\<in> A \\<Longrightarrow> prime ?x\n  ?x \\<in> B \\<Longrightarrow> prime ?x\n  \\<Prod>A dvd \\<Prod>B\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. prime x", "by simp"], ["proof (state)\nthis:\n  prime x\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> B", "ultimately"], ["proof (chain)\npicking this:\n  0 < multiplicity x (\\<Prod>B)\n  prime x", "show \"x \\<in> B\""], ["proof (prove)\nusing this:\n  0 < multiplicity x (\\<Prod>B)\n  prime x\n\ngoal (1 subgoal):\n 1. x \\<in> B", "using assms(2,4)"], ["proof (prove)\nusing this:\n  0 < multiplicity x (\\<Prod>B)\n  prime x\n  finite B\n  ?x \\<in> B \\<Longrightarrow> prime ?x\n\ngoal (1 subgoal):\n 1. x \\<in> B", "by (subst (asm) multiplicity_prod_prime_powers_nat') (simp_all split: if_split_asm)"], ["proof (state)\nthis:\n  x \\<in> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prod_prime_eq:\n  assumes \"finite A\" \"finite B\" \"\\<And>x. x \\<in> A \\<Longrightarrow> prime (x::nat)\" \"\\<And>x. x \\<in> B \\<Longrightarrow> prime x\" \"\\<Prod>A = \\<Prod>B\"\n  shows   \"A = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = B", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  ?x \\<in> A \\<Longrightarrow> prime ?x\n  ?x \\<in> B \\<Longrightarrow> prime ?x\n  \\<Prod>A = \\<Prod>B\n\ngoal (1 subgoal):\n 1. A = B", "by (intro equalityI prod_prime_subset) simp_all"], ["", "lemma ln_ln_nonneg:\n  assumes x: \"x \\<ge> (3 :: real)\"\n  shows   \"ln (ln x) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> ln (ln x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> ln (ln x)", "have \"exp 1 \\<le> (3::real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp 1 \\<le> 3", "by (rule  exp_le)"], ["proof (state)\nthis:\n  exp 1 \\<le> 3\n\ngoal (1 subgoal):\n 1. 0 \\<le> ln (ln x)", "hence \"ln (exp 1) \\<le> ln (3 :: real)\""], ["proof (prove)\nusing this:\n  exp 1 \\<le> 3\n\ngoal (1 subgoal):\n 1. ln (exp 1) \\<le> ln 3", "by (subst ln_le_cancel_iff) simp_all"], ["proof (state)\nthis:\n  ln (exp 1) \\<le> ln 3\n\ngoal (1 subgoal):\n 1. 0 \\<le> ln (ln x)", "also"], ["proof (state)\nthis:\n  ln (exp 1) \\<le> ln 3\n\ngoal (1 subgoal):\n 1. 0 \\<le> ln (ln x)", "from x"], ["proof (chain)\npicking this:\n  3 \\<le> x", "have \"\\<dots> \\<le> ln x\""], ["proof (prove)\nusing this:\n  3 \\<le> x\n\ngoal (1 subgoal):\n 1. ln 3 \\<le> ln x", "by (subst ln_le_cancel_iff) simp_all"], ["proof (state)\nthis:\n  ln 3 \\<le> ln x\n\ngoal (1 subgoal):\n 1. 0 \\<le> ln (ln x)", "finally"], ["proof (chain)\npicking this:\n  ln (exp 1) \\<le> ln x", "have \"ln 1 \\<le> ln (ln x)\""], ["proof (prove)\nusing this:\n  ln (exp 1) \\<le> ln x\n\ngoal (1 subgoal):\n 1. ln 1 \\<le> ln (ln x)", "using x"], ["proof (prove)\nusing this:\n  ln (exp 1) \\<le> ln x\n  3 \\<le> x\n\ngoal (1 subgoal):\n 1. ln 1 \\<le> ln (ln x)", "by (subst ln_le_cancel_iff) simp_all"], ["proof (state)\nthis:\n  ln 1 \\<le> ln (ln x)\n\ngoal (1 subgoal):\n 1. 0 \\<le> ln (ln x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ln 1 \\<le> ln (ln x)\n\ngoal (1 subgoal):\n 1. 0 \\<le> ln (ln x)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> ln (ln x)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}