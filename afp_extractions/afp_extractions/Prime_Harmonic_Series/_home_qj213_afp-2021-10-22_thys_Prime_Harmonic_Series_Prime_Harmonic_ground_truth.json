{"file_name": "/home/qj213/afp-2021-10-22/thys/Prime_Harmonic_Series/Prime_Harmonic.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Prime_Harmonic_Series", "problem_names": ["lemma prime_harmonic_aux1:\n  fixes A :: \"'a :: field set\"\n  shows \"finite A \\<Longrightarrow> (\\<Prod>x\\<in>A. 1 + 1 / x) = (\\<Sum>x\\<in>Pow A. 1 / \\<Prod>x)\"", "lemma prime_harmonic_aux2:\n  assumes \"finite (A :: nat set)\"\n  shows   \"(\\<Sum>k\\<in>A. 1 / (real k ^ 2)) \\<le> 5/3\"", "theorem prime_harmonic_lower:\n  assumes n: \"n \\<ge> 2\"\n  shows \"(\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) \\<ge> ln (harm n) - ln (5/3)\"", "lemma Bseq_eventually_mono:\n  assumes \"eventually (\\<lambda>n. norm (f n) \\<le> norm (g n)) sequentially\" \"Bseq g\"\n  shows   \"Bseq f\"", "lemma Bseq_add:\n  assumes \"Bseq (f :: nat \\<Rightarrow> 'a :: real_normed_vector)\"\n  shows   \"Bseq (\\<lambda>x. f x + c)\"", "lemma convergent_imp_Bseq: \"convergent f \\<Longrightarrow> Bseq f\""], "translations": [["", "lemma prime_harmonic_aux1:\n  fixes A :: \"'a :: field set\"\n  shows \"finite A \\<Longrightarrow> (\\<Prod>x\\<in>A. 1 + 1 / x) = (\\<Sum>x\\<in>Pow A. 1 / \\<Prod>x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow>\n    (\\<Prod>x\\<in>A. (1::'a) + (1::'a) / x) =\n    (\\<Sum>x\\<in>Pow A. (1::'a) / \\<Prod>x)", "proof (induction rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<Prod>x\\<in>{}. (1::'a) + (1::'a) / x) =\n    (\\<Sum>x\\<in>Pow {}. (1::'a) / \\<Prod>x)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<Prod>x\\<in>F. (1::'a) + (1::'a) / x) =\n        (\\<Sum>x\\<in>Pow F. (1::'a) / \\<Prod>x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>x\\<in>insert x F. (1::'a) + (1::'a) / x) =\n                         (\\<Sum>x\\<in>Pow (insert x F). (1::'a) / \\<Prod>x)", "fix a :: 'a and A :: \"'a set\""], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<Prod>x\\<in>{}. (1::'a) + (1::'a) / x) =\n    (\\<Sum>x\\<in>Pow {}. (1::'a) / \\<Prod>x)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<Prod>x\\<in>F. (1::'a) + (1::'a) / x) =\n        (\\<Sum>x\\<in>Pow F. (1::'a) / \\<Prod>x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>x\\<in>insert x F. (1::'a) + (1::'a) / x) =\n                         (\\<Sum>x\\<in>Pow (insert x F). (1::'a) / \\<Prod>x)", "assume a: \"a \\<notin> A\" and fin: \"finite A\""], ["proof (state)\nthis:\n  a \\<notin> A\n  finite A\n\ngoal (2 subgoals):\n 1. (\\<Prod>x\\<in>{}. (1::'a) + (1::'a) / x) =\n    (\\<Sum>x\\<in>Pow {}. (1::'a) / \\<Prod>x)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<Prod>x\\<in>F. (1::'a) + (1::'a) / x) =\n        (\\<Sum>x\\<in>Pow F. (1::'a) / \\<Prod>x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>x\\<in>insert x F. (1::'a) + (1::'a) / x) =\n                         (\\<Sum>x\\<in>Pow (insert x F). (1::'a) / \\<Prod>x)", "assume IH: \"(\\<Prod>x\\<in>A. 1 + 1 / x) = (\\<Sum>x\\<in>Pow A. 1 / \\<Prod>x)\""], ["proof (state)\nthis:\n  (\\<Prod>x\\<in>A. (1::'a) + (1::'a) / x) =\n  (\\<Sum>x\\<in>Pow A. (1::'a) / \\<Prod>x)\n\ngoal (2 subgoals):\n 1. (\\<Prod>x\\<in>{}. (1::'a) + (1::'a) / x) =\n    (\\<Sum>x\\<in>Pow {}. (1::'a) / \\<Prod>x)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<Prod>x\\<in>F. (1::'a) + (1::'a) / x) =\n        (\\<Sum>x\\<in>Pow F. (1::'a) / \\<Prod>x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>x\\<in>insert x F. (1::'a) + (1::'a) / x) =\n                         (\\<Sum>x\\<in>Pow (insert x F). (1::'a) / \\<Prod>x)", "from a and fin"], ["proof (chain)\npicking this:\n  a \\<notin> A\n  finite A", "have \"(\\<Prod>x\\<in>insert a A. 1 + 1 / x) = (1 + 1 / a) * (\\<Prod>x\\<in>A. 1 + 1 / x)\""], ["proof (prove)\nusing this:\n  a \\<notin> A\n  finite A\n\ngoal (1 subgoal):\n 1. (\\<Prod>x\\<in>insert a A. (1::'a) + (1::'a) / x) =\n    ((1::'a) + (1::'a) / a) * (\\<Prod>x\\<in>A. (1::'a) + (1::'a) / x)", "by simp"], ["proof (state)\nthis:\n  (\\<Prod>x\\<in>insert a A. (1::'a) + (1::'a) / x) =\n  ((1::'a) + (1::'a) / a) * (\\<Prod>x\\<in>A. (1::'a) + (1::'a) / x)\n\ngoal (2 subgoals):\n 1. (\\<Prod>x\\<in>{}. (1::'a) + (1::'a) / x) =\n    (\\<Sum>x\\<in>Pow {}. (1::'a) / \\<Prod>x)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<Prod>x\\<in>F. (1::'a) + (1::'a) / x) =\n        (\\<Sum>x\\<in>Pow F. (1::'a) / \\<Prod>x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>x\\<in>insert x F. (1::'a) + (1::'a) / x) =\n                         (\\<Sum>x\\<in>Pow (insert x F). (1::'a) / \\<Prod>x)", "also"], ["proof (state)\nthis:\n  (\\<Prod>x\\<in>insert a A. (1::'a) + (1::'a) / x) =\n  ((1::'a) + (1::'a) / a) * (\\<Prod>x\\<in>A. (1::'a) + (1::'a) / x)\n\ngoal (2 subgoals):\n 1. (\\<Prod>x\\<in>{}. (1::'a) + (1::'a) / x) =\n    (\\<Sum>x\\<in>Pow {}. (1::'a) / \\<Prod>x)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<Prod>x\\<in>F. (1::'a) + (1::'a) / x) =\n        (\\<Sum>x\\<in>Pow F. (1::'a) / \\<Prod>x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>x\\<in>insert x F. (1::'a) + (1::'a) / x) =\n                         (\\<Sum>x\\<in>Pow (insert x F). (1::'a) / \\<Prod>x)", "from fin"], ["proof (chain)\npicking this:\n  finite A", "have \"\\<dots> = (\\<Sum>x\\<in>Pow A. 1 / \\<Prod>x) + (\\<Sum>x\\<in>Pow A. 1 / (a * \\<Prod>x))\""], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. ((1::'a) + (1::'a) / a) * (\\<Prod>x\\<in>A. (1::'a) + (1::'a) / x) =\n    (\\<Sum>x\\<in>Pow A. (1::'a) / \\<Prod>x) +\n    (\\<Sum>x\\<in>Pow A. (1::'a) / (a * \\<Prod>x))", "by (subst IH) (auto simp add: algebra_simps sum_divide_distrib)"], ["proof (state)\nthis:\n  ((1::'a) + (1::'a) / a) * (\\<Prod>x\\<in>A. (1::'a) + (1::'a) / x) =\n  (\\<Sum>x\\<in>Pow A. (1::'a) / \\<Prod>x) +\n  (\\<Sum>x\\<in>Pow A. (1::'a) / (a * \\<Prod>x))\n\ngoal (2 subgoals):\n 1. (\\<Prod>x\\<in>{}. (1::'a) + (1::'a) / x) =\n    (\\<Sum>x\\<in>Pow {}. (1::'a) / \\<Prod>x)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<Prod>x\\<in>F. (1::'a) + (1::'a) / x) =\n        (\\<Sum>x\\<in>Pow F. (1::'a) / \\<Prod>x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>x\\<in>insert x F. (1::'a) + (1::'a) / x) =\n                         (\\<Sum>x\\<in>Pow (insert x F). (1::'a) / \\<Prod>x)", "also"], ["proof (state)\nthis:\n  ((1::'a) + (1::'a) / a) * (\\<Prod>x\\<in>A. (1::'a) + (1::'a) / x) =\n  (\\<Sum>x\\<in>Pow A. (1::'a) / \\<Prod>x) +\n  (\\<Sum>x\\<in>Pow A. (1::'a) / (a * \\<Prod>x))\n\ngoal (2 subgoals):\n 1. (\\<Prod>x\\<in>{}. (1::'a) + (1::'a) / x) =\n    (\\<Sum>x\\<in>Pow {}. (1::'a) / \\<Prod>x)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<Prod>x\\<in>F. (1::'a) + (1::'a) / x) =\n        (\\<Sum>x\\<in>Pow F. (1::'a) / \\<Prod>x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>x\\<in>insert x F. (1::'a) + (1::'a) / x) =\n                         (\\<Sum>x\\<in>Pow (insert x F). (1::'a) / \\<Prod>x)", "from fin a"], ["proof (chain)\npicking this:\n  finite A\n  a \\<notin> A", "have \"(\\<Sum>x\\<in>Pow A. 1 / (a * \\<Prod>x)) = (\\<Sum>x\\<in>Pow A. 1 / \\<Prod>(insert a x))\""], ["proof (prove)\nusing this:\n  finite A\n  a \\<notin> A\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>Pow A. (1::'a) / (a * \\<Prod>x)) =\n    (\\<Sum>x\\<in>Pow A. (1::'a) / \\<Prod>(insert a x))", "by (intro sum.cong refl, subst prod.insert) (auto dest: finite_subset)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>Pow A. (1::'a) / (a * \\<Prod>x)) =\n  (\\<Sum>x\\<in>Pow A. (1::'a) / \\<Prod>(insert a x))\n\ngoal (2 subgoals):\n 1. (\\<Prod>x\\<in>{}. (1::'a) + (1::'a) / x) =\n    (\\<Sum>x\\<in>Pow {}. (1::'a) / \\<Prod>x)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<Prod>x\\<in>F. (1::'a) + (1::'a) / x) =\n        (\\<Sum>x\\<in>Pow F. (1::'a) / \\<Prod>x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>x\\<in>insert x F. (1::'a) + (1::'a) / x) =\n                         (\\<Sum>x\\<in>Pow (insert x F). (1::'a) / \\<Prod>x)", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>Pow A. (1::'a) / (a * \\<Prod>x)) =\n  (\\<Sum>x\\<in>Pow A. (1::'a) / \\<Prod>(insert a x))\n\ngoal (2 subgoals):\n 1. (\\<Prod>x\\<in>{}. (1::'a) + (1::'a) / x) =\n    (\\<Sum>x\\<in>Pow {}. (1::'a) / \\<Prod>x)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<Prod>x\\<in>F. (1::'a) + (1::'a) / x) =\n        (\\<Sum>x\\<in>Pow F. (1::'a) / \\<Prod>x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>x\\<in>insert x F. (1::'a) + (1::'a) / x) =\n                         (\\<Sum>x\\<in>Pow (insert x F). (1::'a) / \\<Prod>x)", "from a"], ["proof (chain)\npicking this:\n  a \\<notin> A", "have \"\\<dots> = (\\<Sum>x\\<in>insert a ` Pow A. 1 / \\<Prod>x)\""], ["proof (prove)\nusing this:\n  a \\<notin> A\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>Pow A. (1::'a) / \\<Prod>(insert a x)) =\n    (\\<Sum>x\\<in>insert a ` Pow A. (1::'a) / \\<Prod>x)", "by (subst sum.reindex) (auto simp: inj_on_def)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>Pow A. (1::'a) / \\<Prod>(insert a x)) =\n  (\\<Sum>x\\<in>insert a ` Pow A. (1::'a) / \\<Prod>x)\n\ngoal (2 subgoals):\n 1. (\\<Prod>x\\<in>{}. (1::'a) + (1::'a) / x) =\n    (\\<Sum>x\\<in>Pow {}. (1::'a) / \\<Prod>x)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<Prod>x\\<in>F. (1::'a) + (1::'a) / x) =\n        (\\<Sum>x\\<in>Pow F. (1::'a) / \\<Prod>x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>x\\<in>insert x F. (1::'a) + (1::'a) / x) =\n                         (\\<Sum>x\\<in>Pow (insert x F). (1::'a) / \\<Prod>x)", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>Pow A. (1::'a) / \\<Prod>(insert a x)) =\n  (\\<Sum>x\\<in>insert a ` Pow A. (1::'a) / \\<Prod>x)\n\ngoal (2 subgoals):\n 1. (\\<Prod>x\\<in>{}. (1::'a) + (1::'a) / x) =\n    (\\<Sum>x\\<in>Pow {}. (1::'a) / \\<Prod>x)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<Prod>x\\<in>F. (1::'a) + (1::'a) / x) =\n        (\\<Sum>x\\<in>Pow F. (1::'a) / \\<Prod>x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>x\\<in>insert x F. (1::'a) + (1::'a) / x) =\n                         (\\<Sum>x\\<in>Pow (insert x F). (1::'a) / \\<Prod>x)", "from fin a"], ["proof (chain)\npicking this:\n  finite A\n  a \\<notin> A", "have \"(\\<Sum>x\\<in>Pow A. 1 / \\<Prod>x) + \\<dots> = (\\<Sum>x\\<in>Pow A \\<union> insert a ` Pow A. 1 / \\<Prod>x)\""], ["proof (prove)\nusing this:\n  finite A\n  a \\<notin> A\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>Pow A. (1::'a) / \\<Prod>x) +\n    (\\<Sum>x\\<in>insert a ` Pow A. (1::'a) / \\<Prod>x) =\n    (\\<Sum>x\\<in>Pow A \\<union> insert a ` Pow A. (1::'a) / \\<Prod>x)", "by (intro sum.union_disjoint [symmetric]) (simp, simp, blast)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>Pow A. (1::'a) / \\<Prod>x) +\n  (\\<Sum>x\\<in>insert a ` Pow A. (1::'a) / \\<Prod>x) =\n  (\\<Sum>x\\<in>Pow A \\<union> insert a ` Pow A. (1::'a) / \\<Prod>x)\n\ngoal (2 subgoals):\n 1. (\\<Prod>x\\<in>{}. (1::'a) + (1::'a) / x) =\n    (\\<Sum>x\\<in>Pow {}. (1::'a) / \\<Prod>x)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<Prod>x\\<in>F. (1::'a) + (1::'a) / x) =\n        (\\<Sum>x\\<in>Pow F. (1::'a) / \\<Prod>x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>x\\<in>insert x F. (1::'a) + (1::'a) / x) =\n                         (\\<Sum>x\\<in>Pow (insert x F). (1::'a) / \\<Prod>x)", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>Pow A. (1::'a) / \\<Prod>x) +\n  (\\<Sum>x\\<in>insert a ` Pow A. (1::'a) / \\<Prod>x) =\n  (\\<Sum>x\\<in>Pow A \\<union> insert a ` Pow A. (1::'a) / \\<Prod>x)\n\ngoal (2 subgoals):\n 1. (\\<Prod>x\\<in>{}. (1::'a) + (1::'a) / x) =\n    (\\<Sum>x\\<in>Pow {}. (1::'a) / \\<Prod>x)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<Prod>x\\<in>F. (1::'a) + (1::'a) / x) =\n        (\\<Sum>x\\<in>Pow F. (1::'a) / \\<Prod>x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>x\\<in>insert x F. (1::'a) + (1::'a) / x) =\n                         (\\<Sum>x\\<in>Pow (insert x F). (1::'a) / \\<Prod>x)", "have \"Pow A \\<union> insert a ` Pow A = Pow (insert a A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pow A \\<union> insert a ` Pow A = Pow (insert a A)", "by (simp only: Pow_insert)"], ["proof (state)\nthis:\n  Pow A \\<union> insert a ` Pow A = Pow (insert a A)\n\ngoal (2 subgoals):\n 1. (\\<Prod>x\\<in>{}. (1::'a) + (1::'a) / x) =\n    (\\<Sum>x\\<in>Pow {}. (1::'a) / \\<Prod>x)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<Prod>x\\<in>F. (1::'a) + (1::'a) / x) =\n        (\\<Sum>x\\<in>Pow F. (1::'a) / \\<Prod>x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>x\\<in>insert x F. (1::'a) + (1::'a) / x) =\n                         (\\<Sum>x\\<in>Pow (insert x F). (1::'a) / \\<Prod>x)", "finally"], ["proof (chain)\npicking this:\n  (\\<Prod>x\\<in>insert a A. (1::'a) + (1::'a) / x) =\n  (\\<Sum>x\\<in>Pow (insert a A). (1::'a) / \\<Prod>x)", "show \" (\\<Prod>x\\<in>insert a A. 1 + 1 / x) = (\\<Sum>x\\<in>Pow (insert a A). 1 / \\<Prod>x)\""], ["proof (prove)\nusing this:\n  (\\<Prod>x\\<in>insert a A. (1::'a) + (1::'a) / x) =\n  (\\<Sum>x\\<in>Pow (insert a A). (1::'a) / \\<Prod>x)\n\ngoal (1 subgoal):\n 1. (\\<Prod>x\\<in>insert a A. (1::'a) + (1::'a) / x) =\n    (\\<Sum>x\\<in>Pow (insert a A). (1::'a) / \\<Prod>x)", "."], ["proof (state)\nthis:\n  (\\<Prod>x\\<in>insert a A. (1::'a) + (1::'a) / x) =\n  (\\<Sum>x\\<in>Pow (insert a A). (1::'a) / \\<Prod>x)\n\ngoal (1 subgoal):\n 1. (\\<Prod>x\\<in>{}. (1::'a) + (1::'a) / x) =\n    (\\<Sum>x\\<in>Pow {}. (1::'a) / \\<Prod>x)", "qed simp"], ["", "text \\<open>\n  Next, we prove a simple and reasonably accurate upper bound for the sum of the squares of any\n  subset of the natural numbers, derived by simple telescoping. Our upper bound is approximately\n  1.67; the exact value is $\\frac{\\pi^2}{6} \\approx 1.64$. (cf. Basel problem)\n\\<close>"], ["", "lemma prime_harmonic_aux2:\n  assumes \"finite (A :: nat set)\"\n  shows   \"(\\<Sum>k\\<in>A. 1 / (real k ^ 2)) \\<le> 5/3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2) \\<le> 5 / 3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2) \\<le> 5 / 3", "define n where \"n = max 2 (Max A)\""], ["proof (state)\nthis:\n  n = max 2 (Max A)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2) \\<le> 5 / 3", "have n: \"n \\<ge> Max A\" \"n \\<ge> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max A \\<le> n &&& 2 \\<le> n", "by (auto simp: n_def)"], ["proof (state)\nthis:\n  Max A \\<le> n\n  2 \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2) \\<le> 5 / 3", "with assms"], ["proof (chain)\npicking this:\n  finite A\n  Max A \\<le> n\n  2 \\<le> n", "have \"A \\<subseteq> {0..n}\""], ["proof (prove)\nusing this:\n  finite A\n  Max A \\<le> n\n  2 \\<le> n\n\ngoal (1 subgoal):\n 1. A \\<subseteq> {0..n}", "by (auto intro: order.trans[OF Max_ge])"], ["proof (state)\nthis:\n  A \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2) \\<le> 5 / 3", "hence \"(\\<Sum>k\\<in>A. 1 / (real k ^ 2)) \\<le> (\\<Sum>k=0..n. 1 / (real k ^ 2))\""], ["proof (prove)\nusing this:\n  A \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2)\n    \\<le> (\\<Sum>k = 0..n. 1 / (real k)\\<^sup>2)", "by (intro sum_mono2) auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2)\n  \\<le> (\\<Sum>k = 0..n. 1 / (real k)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2) \\<le> 5 / 3", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2)\n  \\<le> (\\<Sum>k = 0..n. 1 / (real k)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2) \\<le> 5 / 3", "from n"], ["proof (chain)\npicking this:\n  Max A \\<le> n\n  2 \\<le> n", "have \"\\<dots> = 1 + (\\<Sum>k=Suc 1..n. 1 / (real k ^ 2))\""], ["proof (prove)\nusing this:\n  Max A \\<le> n\n  2 \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n. 1 / (real k)\\<^sup>2) =\n    1 + (\\<Sum>k = Suc 1..n. 1 / (real k)\\<^sup>2)", "by (simp add: sum.atLeast_Suc_atMost)"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n. 1 / (real k)\\<^sup>2) =\n  1 + (\\<Sum>k = Suc 1..n. 1 / (real k)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2) \\<le> 5 / 3", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n. 1 / (real k)\\<^sup>2) =\n  1 + (\\<Sum>k = Suc 1..n. 1 / (real k)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2) \\<le> 5 / 3", "have \"(\\<Sum>k=Suc 1..n. 1 / (real k ^ 2)) \\<le>\n          (\\<Sum>k=Suc 1..n. 1 / (real k ^ 2 - 1/4))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 1..n. 1 / (real k)\\<^sup>2)\n    \\<le> (\\<Sum>k = Suc 1..n. 1 / ((real k)\\<^sup>2 - 1 / 4))", "unfolding power2_eq_square"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 1..n. 1 / (real k * real k))\n    \\<le> (\\<Sum>k = Suc 1..n. 1 / (real k * real k - 1 / 4))", "by (intro sum_mono divide_left_mono mult_pos_pos)\n       (linarith, simp_all add: field_simps less_1_mult)"], ["proof (state)\nthis:\n  (\\<Sum>k = Suc 1..n. 1 / (real k)\\<^sup>2)\n  \\<le> (\\<Sum>k = Suc 1..n. 1 / ((real k)\\<^sup>2 - 1 / 4))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2) \\<le> 5 / 3", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = Suc 1..n. 1 / (real k)\\<^sup>2)\n  \\<le> (\\<Sum>k = Suc 1..n. 1 / ((real k)\\<^sup>2 - 1 / 4))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2) \\<le> 5 / 3", "have \"\\<dots> = (\\<Sum>k=Suc 1..n. 1 / (real k - 1/2) - 1 / (real (Suc k) - 1/2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 1..n. 1 / ((real k)\\<^sup>2 - 1 / 4)) =\n    (\\<Sum>k = Suc 1..n. 1 / (real k - 1 / 2) - 1 / (real (Suc k) - 1 / 2))", "by (intro sum.cong refl) (simp_all add: field_simps power2_eq_square)"], ["proof (state)\nthis:\n  (\\<Sum>k = Suc 1..n. 1 / ((real k)\\<^sup>2 - 1 / 4)) =\n  (\\<Sum>k = Suc 1..n. 1 / (real k - 1 / 2) - 1 / (real (Suc k) - 1 / 2))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2) \\<le> 5 / 3", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = Suc 1..n. 1 / ((real k)\\<^sup>2 - 1 / 4)) =\n  (\\<Sum>k = Suc 1..n. 1 / (real k - 1 / 2) - 1 / (real (Suc k) - 1 / 2))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2) \\<le> 5 / 3", "from n"], ["proof (chain)\npicking this:\n  Max A \\<le> n\n  2 \\<le> n", "have \"\\<dots> = 2 / 3 - 1 / (1 / 2 + real n)\""], ["proof (prove)\nusing this:\n  Max A \\<le> n\n  2 \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 1..n.\n        1 / (real k - 1 / 2) - 1 / (real (Suc k) - 1 / 2)) =\n    2 / 3 - 1 / (1 / 2 + real n)", "by (subst sum_telescope') simp_all"], ["proof (state)\nthis:\n  (\\<Sum>k = Suc 1..n. 1 / (real k - 1 / 2) - 1 / (real (Suc k) - 1 / 2)) =\n  2 / 3 - 1 / (1 / 2 + real n)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2) \\<le> 5 / 3", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = Suc 1..n. 1 / (real k - 1 / 2) - 1 / (real (Suc k) - 1 / 2)) =\n  2 / 3 - 1 / (1 / 2 + real n)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2) \\<le> 5 / 3", "have \"1 + \\<dots> \\<le> 5/3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + (2 / 3 - 1 / (1 / 2 + real n)) \\<le> 5 / 3", "by simp"], ["proof (state)\nthis:\n  1 + (2 / 3 - 1 / (1 / 2 + real n)) \\<le> 5 / 3\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2) \\<le> 5 / 3", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> 1 + x \\<le> 1 + y) \\<Longrightarrow>\n  (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2) \\<le> 5 / 3", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> 1 + x \\<le> 1 + y) \\<Longrightarrow>\n  (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2) \\<le> 5 / 3\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2) \\<le> 5 / 3", "by - simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>A. 1 / (real k)\\<^sup>2) \\<le> 5 / 3\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Estimating the partial sums of the Prime Harmonic Series\\<close>"], ["", "text \\<open>\n  We are now ready to show our main result: the value of the partial prime harmonic sum over\n  all primes no greater than $n$ is bounded from below by the $n$-th harmonic number\n  $H_n$ minus some constant.\n\n  In our case, this constant will be $\\frac{5}{3}$. As mentioned before, using a\n  proof of the Basel problem can improve this to $\\frac{\\pi^2}{6}$, but the improvement is very\n  small and the proof of the Basel problem is a very complex one.\n\n  The exact asymptotic behaviour of the partial sums is actually $\\ln (\\ln n) + M$, where $M$\n  is the Meissel--Mertens constant (approximately 0.261).\n\\<close>"], ["", "theorem prime_harmonic_lower:\n  assumes n: \"n \\<ge> 2\"\n  shows \"(\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) \\<ge> ln (harm n) - ln (5/3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "proof -\n  \\<comment> \\<open>the set of primes that we will allow in the squarefree part\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "define P where \"P n = set (primes_upto n)\" for n"], ["proof (state)\nthis:\n  P ?n = set (primes_upto ?n)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "{"], ["proof (state)\nthis:\n  P ?n = set (primes_upto ?n)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "fix n :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "have \"finite (P n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (P n)", "by (simp add: P_def)"], ["proof (state)\nthis:\n  finite (P n)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "}"], ["proof (state)\nthis:\n  finite (P ?na2)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "note [simp] = this\n\n  \\<comment> \\<open>The function that combines the squarefree part and the square part\\<close>"], ["proof (state)\nthis:\n  finite (P ?na2)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "define f where \"f = (\\<lambda>(R, s :: nat). \\<Prod>R * s^2)\"\n\n  \\<comment> \\<open>@{term f} is injective if the squarefree part contains only primes\n      and the square part is positive.\\<close>"], ["proof (state)\nthis:\n  f = (\\<lambda>(R, s). \\<Prod>R * s\\<^sup>2)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "have inj: \"inj_on f (Pow (P n)\\<times>{1..n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on f (Pow (P n) \\<times> {1..n})", "proof (rule inj_onI, clarify, rule conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>f (a, b) = f (aa, ba); b \\<in> {1..n}; a \\<subseteq> P n;\n        ba \\<in> {1..n}; aa \\<subseteq> P n\\<rbrakk>\n       \\<Longrightarrow> a = aa\n 2. \\<And>a b aa ba.\n       \\<lbrakk>f (a, b) = f (aa, ba); b \\<in> {1..n}; a \\<subseteq> P n;\n        ba \\<in> {1..n}; aa \\<subseteq> P n\\<rbrakk>\n       \\<Longrightarrow> b = ba", "fix A1 A2 :: \"nat set\" and s1 s2 :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>f (a, b) = f (aa, ba); b \\<in> {1..n}; a \\<subseteq> P n;\n        ba \\<in> {1..n}; aa \\<subseteq> P n\\<rbrakk>\n       \\<Longrightarrow> a = aa\n 2. \\<And>a b aa ba.\n       \\<lbrakk>f (a, b) = f (aa, ba); b \\<in> {1..n}; a \\<subseteq> P n;\n        ba \\<in> {1..n}; aa \\<subseteq> P n\\<rbrakk>\n       \\<Longrightarrow> b = ba", "assume A: \"A1 \\<subseteq> P n\" \"A2 \\<subseteq> P n\" \"s1 \\<in> {1..n}\" \"s2 \\<in> {1..n}\" \"f (A1, s1) = f (A2, s2)\""], ["proof (state)\nthis:\n  A1 \\<subseteq> P n\n  A2 \\<subseteq> P n\n  s1 \\<in> {1..n}\n  s2 \\<in> {1..n}\n  f (A1, s1) = f (A2, s2)\n\ngoal (2 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>f (a, b) = f (aa, ba); b \\<in> {1..n}; a \\<subseteq> P n;\n        ba \\<in> {1..n}; aa \\<subseteq> P n\\<rbrakk>\n       \\<Longrightarrow> a = aa\n 2. \\<And>a b aa ba.\n       \\<lbrakk>f (a, b) = f (aa, ba); b \\<in> {1..n}; a \\<subseteq> P n;\n        ba \\<in> {1..n}; aa \\<subseteq> P n\\<rbrakk>\n       \\<Longrightarrow> b = ba", "have fin: \"finite A1\" \"finite A2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A1 &&& finite A2", "by (rule A(1,2)[THEN finite_subset], simp)+"], ["proof (state)\nthis:\n  finite A1\n  finite A2\n\ngoal (2 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>f (a, b) = f (aa, ba); b \\<in> {1..n}; a \\<subseteq> P n;\n        ba \\<in> {1..n}; aa \\<subseteq> P n\\<rbrakk>\n       \\<Longrightarrow> a = aa\n 2. \\<And>a b aa ba.\n       \\<lbrakk>f (a, b) = f (aa, ba); b \\<in> {1..n}; a \\<subseteq> P n;\n        ba \\<in> {1..n}; aa \\<subseteq> P n\\<rbrakk>\n       \\<Longrightarrow> b = ba", "show \"A1 = A2\" \"s1 = s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A1 = A2 &&& s1 = s2", "by ((rule squarefree_decomposition_unique2'[of A1 s1 A2 s2],\n          insert A fin, auto simp: f_def P_def set_primes_upto)[])+"], ["proof (state)\nthis:\n  A1 = A2\n  s1 = s2\n\ngoal:\nNo subgoals!", "qed\n\n  \\<comment> \\<open>@{term f} hits every number between @{term \"1::nat\"} and @{term \"n\"}. It also hits a lot\n      of other numbers, but we do not care about those, since we only need a lower bound.\\<close>"], ["proof (state)\nthis:\n  inj_on f (Pow (P n) \\<times> {1..n})\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "have surj: \"{1..n} \\<subseteq> f ` (Pow (P n)\\<times>{1..n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {1..n} \\<subseteq> f ` (Pow (P n) \\<times> {1..n})", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {1..n} \\<Longrightarrow>\n       x \\<in> f ` (Pow (P n) \\<times> {1..n})", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {1..n} \\<Longrightarrow>\n       x \\<in> f ` (Pow (P n) \\<times> {1..n})", "assume x: \"x \\<in> {1..n}\""], ["proof (state)\nthis:\n  x \\<in> {1..n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {1..n} \\<Longrightarrow>\n       x \\<in> f ` (Pow (P n) \\<times> {1..n})", "have \"x = f (squarefree_part x, square_part x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = f (squarefree_part x, square_part x)", "by (simp add: f_def squarefree_decompose)"], ["proof (state)\nthis:\n  x = f (squarefree_part x, square_part x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {1..n} \\<Longrightarrow>\n       x \\<in> f ` (Pow (P n) \\<times> {1..n})", "moreover"], ["proof (state)\nthis:\n  x = f (squarefree_part x, square_part x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {1..n} \\<Longrightarrow>\n       x \\<in> f ` (Pow (P n) \\<times> {1..n})", "have \"squarefree_part x \\<in> Pow (P n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. squarefree_part x \\<in> Pow (P n)", "using squarefree_part_subset[of x] x"], ["proof (prove)\nusing this:\n  squarefree_part x \\<subseteq> prime_factors x\n  x \\<in> {1..n}\n\ngoal (1 subgoal):\n 1. squarefree_part x \\<in> Pow (P n)", "by (auto simp: P_def set_primes_upto intro: order.trans[OF squarefree_part_le[of _ x]])"], ["proof (state)\nthis:\n  squarefree_part x \\<in> Pow (P n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {1..n} \\<Longrightarrow>\n       x \\<in> f ` (Pow (P n) \\<times> {1..n})", "moreover"], ["proof (state)\nthis:\n  squarefree_part x \\<in> Pow (P n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {1..n} \\<Longrightarrow>\n       x \\<in> f ` (Pow (P n) \\<times> {1..n})", "have \"square_part x \\<in> {1..n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. square_part x \\<in> {1..n}", "using x"], ["proof (prove)\nusing this:\n  x \\<in> {1..n}\n\ngoal (1 subgoal):\n 1. square_part x \\<in> {1..n}", "by (auto simp: Suc_le_eq intro: order.trans[OF square_part_le[of x]])"], ["proof (state)\nthis:\n  square_part x \\<in> {1..n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {1..n} \\<Longrightarrow>\n       x \\<in> f ` (Pow (P n) \\<times> {1..n})", "ultimately"], ["proof (chain)\npicking this:\n  x = f (squarefree_part x, square_part x)\n  squarefree_part x \\<in> Pow (P n)\n  square_part x \\<in> {1..n}", "show \"x \\<in> f ` (Pow (P n)\\<times>{1..n})\""], ["proof (prove)\nusing this:\n  x = f (squarefree_part x, square_part x)\n  squarefree_part x \\<in> Pow (P n)\n  square_part x \\<in> {1..n}\n\ngoal (1 subgoal):\n 1. x \\<in> f ` (Pow (P n) \\<times> {1..n})", "by simp"], ["proof (state)\nthis:\n  x \\<in> f ` (Pow (P n) \\<times> {1..n})\n\ngoal:\nNo subgoals!", "qed\n\n  \\<comment> \\<open>We now show the main result by rearranging the sum over all primes to a product over all\n      all squarefree parts times a sum over all square parts, and then applying some simple-minded\n      approximation\\<close>"], ["proof (state)\nthis:\n  {1..n} \\<subseteq> f ` (Pow (P n) \\<times> {1..n})\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "have \"harm n = (\\<Sum>n=1..n. 1 / real n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. harm n = (\\<Sum>n = 1..n. 1 / real n)", "by (simp add: harm_def field_simps)"], ["proof (state)\nthis:\n  harm n = (\\<Sum>n = 1..n. 1 / real n)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "also"], ["proof (state)\nthis:\n  harm n = (\\<Sum>n = 1..n. 1 / real n)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "from surj"], ["proof (chain)\npicking this:\n  {1..n} \\<subseteq> f ` (Pow (P n) \\<times> {1..n})", "have \"\\<dots> \\<le> (\\<Sum>n\\<in>f ` (Pow (P n)\\<times>{1..n}). 1 / real n)\""], ["proof (prove)\nusing this:\n  {1..n} \\<subseteq> f ` (Pow (P n) \\<times> {1..n})\n\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..n. 1 / real n)\n    \\<le> (\\<Sum>n\\<in>f ` (Pow (P n) \\<times> {1..n}). 1 / real n)", "by (intro sum_mono2 finite_imageI finite_cartesian_product) simp_all"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..n. 1 / real n)\n  \\<le> (\\<Sum>n\\<in>f ` (Pow (P n) \\<times> {1..n}). 1 / real n)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "also"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..n. 1 / real n)\n  \\<le> (\\<Sum>n\\<in>f ` (Pow (P n) \\<times> {1..n}). 1 / real n)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "from inj"], ["proof (chain)\npicking this:\n  inj_on f (Pow (P n) \\<times> {1..n})", "have \"\\<dots> = (\\<Sum>x\\<in>Pow (P n)\\<times>{1..n}. 1 / real (f x))\""], ["proof (prove)\nusing this:\n  inj_on f (Pow (P n) \\<times> {1..n})\n\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>f ` (Pow (P n) \\<times> {1..n}). 1 / real n) =\n    (\\<Sum>x\\<in>Pow (P n) \\<times> {1..n}. 1 / real (f x))", "by (subst sum.reindex) simp_all"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>f ` (Pow (P n) \\<times> {1..n}). 1 / real n) =\n  (\\<Sum>x\\<in>Pow (P n) \\<times> {1..n}. 1 / real (f x))\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "also"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>f ` (Pow (P n) \\<times> {1..n}). 1 / real n) =\n  (\\<Sum>x\\<in>Pow (P n) \\<times> {1..n}. 1 / real (f x))\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "have \"\\<dots> = (\\<Sum>A\\<in>Pow (P n). 1 / real (\\<Prod>A)) * (\\<Sum>k=1..n. 1 / (real k)^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>Pow (P n) \\<times> {1..n}. 1 / real (f x)) =\n    (\\<Sum>A\\<in>Pow (P n). 1 / real (\\<Prod>A)) *\n    (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2)", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>Pow (P n) \\<times> {1..n}.\n       1 / real (case x of (R, s) \\<Rightarrow> \\<Prod>R * s\\<^sup>2)) =\n    (\\<Sum>A\\<in>Pow (P n). 1 / real (\\<Prod>A)) *\n    (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2)", "by (subst sum_product, subst sum.cartesian_product) (simp add: case_prod_beta)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>Pow (P n) \\<times> {1..n}. 1 / real (f x)) =\n  (\\<Sum>A\\<in>Pow (P n). 1 / real (\\<Prod>A)) *\n  (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>Pow (P n) \\<times> {1..n}. 1 / real (f x)) =\n  (\\<Sum>A\\<in>Pow (P n). 1 / real (\\<Prod>A)) *\n  (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "have \"\\<dots> \\<le> (\\<Sum>A\\<in>Pow (P n). 1 / real (\\<Prod>A)) * (5/3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>A\\<in>Pow (P n). 1 / real (\\<Prod>A)) *\n    (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2)\n    \\<le> (\\<Sum>A\\<in>Pow (P n). 1 / real (\\<Prod>A)) * (5 / 3)", "by (intro mult_left_mono prime_harmonic_aux2 sum_nonneg)\n       (auto simp: P_def intro!: prod_nonneg)"], ["proof (state)\nthis:\n  (\\<Sum>A\\<in>Pow (P n). 1 / real (\\<Prod>A)) *\n  (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2)\n  \\<le> (\\<Sum>A\\<in>Pow (P n). 1 / real (\\<Prod>A)) * (5 / 3)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "also"], ["proof (state)\nthis:\n  (\\<Sum>A\\<in>Pow (P n). 1 / real (\\<Prod>A)) *\n  (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2)\n  \\<le> (\\<Sum>A\\<in>Pow (P n). 1 / real (\\<Prod>A)) * (5 / 3)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "have \"(\\<Sum>A\\<in>Pow (P n). 1 / real (\\<Prod>A)) = (\\<Sum>A\\<in>((`) real) ` Pow (P n). 1 / \\<Prod>A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>A\\<in>Pow (P n). 1 / real (\\<Prod>A)) =\n    (\\<Sum>A\\<in>(`) real ` Pow (P n). 1 / \\<Prod>A)", "by (subst sum.reindex) (auto simp: inj_on_def inj_image_eq_iff prod.reindex)"], ["proof (state)\nthis:\n  (\\<Sum>A\\<in>Pow (P n). 1 / real (\\<Prod>A)) =\n  (\\<Sum>A\\<in>(`) real ` Pow (P n). 1 / \\<Prod>A)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "also"], ["proof (state)\nthis:\n  (\\<Sum>A\\<in>Pow (P n). 1 / real (\\<Prod>A)) =\n  (\\<Sum>A\\<in>(`) real ` Pow (P n). 1 / \\<Prod>A)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "have \"((`) real) ` Pow (P n) = Pow (real ` P n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (`) real ` Pow (P n) = Pow (real ` P n)", "by (intro image_Pow_surj refl)"], ["proof (state)\nthis:\n  (`) real ` Pow (P n) = Pow (real ` P n)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "also"], ["proof (state)\nthis:\n  (`) real ` Pow (P n) = Pow (real ` P n)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "have \"(\\<Sum>A\\<in>Pow (real ` P n). 1 / \\<Prod>A) = (\\<Prod>x\\<in>real ` P n. 1 + 1 / x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>A\\<in>Pow (real ` P n). 1 / \\<Prod>A) =\n    (\\<Prod>x\\<in>real ` P n. 1 + 1 / x)", "by (intro prime_harmonic_aux1 [symmetric] finite_imageI) simp_all"], ["proof (state)\nthis:\n  (\\<Sum>A\\<in>Pow (real ` P n). 1 / \\<Prod>A) =\n  (\\<Prod>x\\<in>real ` P n. 1 + 1 / x)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "also"], ["proof (state)\nthis:\n  (\\<Sum>A\\<in>Pow (real ` P n). 1 / \\<Prod>A) =\n  (\\<Prod>x\\<in>real ` P n. 1 + 1 / x)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "have \"\\<dots> = (\\<Prod>i\\<in>P n. 1 + 1 / real i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>x\\<in>real ` P n. 1 + 1 / x) =\n    (\\<Prod>i\\<in>P n. 1 + 1 / real i)", "by (subst prod.reindex) (auto simp: inj_on_def)"], ["proof (state)\nthis:\n  (\\<Prod>x\\<in>real ` P n. 1 + 1 / x) = (\\<Prod>i\\<in>P n. 1 + 1 / real i)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "also"], ["proof (state)\nthis:\n  (\\<Prod>x\\<in>real ` P n. 1 + 1 / x) = (\\<Prod>i\\<in>P n. 1 + 1 / real i)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "have \"\\<dots> \\<le> (\\<Prod>i\\<in>P n. exp (1 / real i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i\\<in>P n. 1 + 1 / real i)\n    \\<le> (\\<Prod>i\\<in>P n. exp (1 / real i))", "by (intro prod_mono) auto"], ["proof (state)\nthis:\n  (\\<Prod>i\\<in>P n. 1 + 1 / real i)\n  \\<le> (\\<Prod>i\\<in>P n. exp (1 / real i))\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "also"], ["proof (state)\nthis:\n  (\\<Prod>i\\<in>P n. 1 + 1 / real i)\n  \\<le> (\\<Prod>i\\<in>P n. exp (1 / real i))\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "have \"\\<dots> = exp (\\<Sum>i\\<in>P n. 1 / real i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i\\<in>P n. exp (1 / real i)) = exp (\\<Sum>i\\<in>P n. 1 / real i)", "by (simp add: exp_sum)"], ["proof (state)\nthis:\n  (\\<Prod>i\\<in>P n. exp (1 / real i)) = exp (\\<Sum>i\\<in>P n. 1 / real i)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x * (5 / 3) \\<le> y * (5 / 3)) \\<Longrightarrow>\n  harm n \\<le> exp (\\<Sum>i\\<in>P n. 1 / real i) * (5 / 3)", "have \"ln (harm n) \\<le> ln (\\<dots> * (5/3))\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x * (5 / 3) \\<le> y * (5 / 3)) \\<Longrightarrow>\n  harm n \\<le> exp (\\<Sum>i\\<in>P n. 1 / real i) * (5 / 3)\n\ngoal (1 subgoal):\n 1. ln (harm n) \\<le> ln (exp (\\<Sum>i\\<in>P n. 1 / real i) * (5 / 3))", "using n"], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x * (5 / 3) \\<le> y * (5 / 3)) \\<Longrightarrow>\n  harm n \\<le> exp (\\<Sum>i\\<in>P n. 1 / real i) * (5 / 3)\n  2 \\<le> n\n\ngoal (1 subgoal):\n 1. ln (harm n) \\<le> ln (exp (\\<Sum>i\\<in>P n. 1 / real i) * (5 / 3))", "by (subst ln_le_cancel_iff) simp_all"], ["proof (state)\nthis:\n  ln (harm n) \\<le> ln (exp (\\<Sum>i\\<in>P n. 1 / real i) * (5 / 3))\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "hence \"ln (harm n) - ln (5/3) \\<le> (\\<Sum>i\\<in>P n. 1 / real i)\""], ["proof (prove)\nusing this:\n  ln (harm n) \\<le> ln (exp (\\<Sum>i\\<in>P n. 1 / real i) * (5 / 3))\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3) \\<le> (\\<Sum>i\\<in>P n. 1 / real i)", "by (subst (asm) ln_mult) (simp_all add: algebra_simps)"], ["proof (state)\nthis:\n  ln (harm n) - ln (5 / 3) \\<le> (\\<Sum>i\\<in>P n. 1 / real i)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ln (harm n) - ln (5 / 3) \\<le> (\\<Sum>i\\<in>P n. 1 / real i)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "unfolding P_def"], ["proof (prove)\nusing this:\n  ln (harm n) - ln (5 / 3)\n  \\<le> (\\<Sum>i\\<in>set (primes_upto n). 1 / real i)\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "by (subst (asm) sum.distinct_set_conv_list) simp_all"], ["proof (state)\nthis:\n  ln (harm n) - ln (5 / 3)\n  \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  We can use the inequality $\\ln (n + 1) \\le H_n$ to estimate the asymptotic growth of the partial\n  prime harmonic series. Note that $H_n \\sim \\ln n + \\gamma$ where $\\gamma$ is the\n  Euler--Mascheroni constant (approximately 0.577), so we lose some accuracy here.\n\\<close>"], ["", "corollary prime_harmonic_lower':\n  assumes n: \"n \\<ge> 2\"\n  shows \"(\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) \\<ge> ln (ln (n + 1)) - ln (5/3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (ln (real n + 1)) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ln (ln (real n + 1)) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "from assms ln_le_harm[of n]"], ["proof (chain)\npicking this:\n  2 \\<le> n\n  ln (real n + 1) \\<le> harm n", "have \"ln (ln (real n + 1)) \\<le> ln (harm n)\""], ["proof (prove)\nusing this:\n  2 \\<le> n\n  ln (real n + 1) \\<le> harm n\n\ngoal (1 subgoal):\n 1. ln (ln (real n + 1)) \\<le> ln (harm n)", "by simp"], ["proof (state)\nthis:\n  ln (ln (real n + 1)) \\<le> ln (harm n)\n\ngoal (1 subgoal):\n 1. ln (ln (real n + 1)) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "also"], ["proof (state)\nthis:\n  ln (ln (real n + 1)) \\<le> ln (harm n)\n\ngoal (1 subgoal):\n 1. ln (ln (real n + 1)) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "from assms"], ["proof (chain)\npicking this:\n  2 \\<le> n", "have \"\\<dots> - ln (5/3) \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)\""], ["proof (prove)\nusing this:\n  2 \\<le> n\n\ngoal (1 subgoal):\n 1. ln (harm n) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "by (rule prime_harmonic_lower)"], ["proof (state)\nthis:\n  ln (harm n) - ln (5 / 3)\n  \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)\n\ngoal (1 subgoal):\n 1. ln (ln (real n + 1)) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x - ln (5 / 3) \\<le> y - ln (5 / 3)) \\<Longrightarrow>\n  ln (ln (real n + 1)) - ln (5 / 3)\n  \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x - ln (5 / 3) \\<le> y - ln (5 / 3)) \\<Longrightarrow>\n  ln (ln (real n + 1)) - ln (5 / 3)\n  \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)\n\ngoal (1 subgoal):\n 1. ln (ln (real n + 1)) - ln (5 / 3)\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "by - simp"], ["proof (state)\nthis:\n  ln (ln (real n + 1)) - ln (5 / 3)\n  \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* TODO: Not needed in Isabelle 2016 *)"], ["", "lemma Bseq_eventually_mono:\n  assumes \"eventually (\\<lambda>n. norm (f n) \\<le> norm (g n)) sequentially\" \"Bseq g\"\n  shows   \"Bseq f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Bseq f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Bseq f", "from assms(1)"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in sequentially. norm (f n) \\<le> norm (g n)", "obtain N where N: \"\\<And>n. n \\<ge> N \\<Longrightarrow> norm (f n) \\<le> norm (g n)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially. norm (f n) \\<le> norm (g n)\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        (\\<And>n.\n            N \\<le> n \\<Longrightarrow>\n            norm (f n) \\<le> norm (g n)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_at_top_linorder)"], ["proof (state)\nthis:\n  N \\<le> ?n \\<Longrightarrow> norm (f ?n) \\<le> norm (g ?n)\n\ngoal (1 subgoal):\n 1. Bseq f", "from assms(2)"], ["proof (chain)\npicking this:\n  Bseq g", "obtain K where K: \"\\<And>n. norm (g n) \\<le> K\""], ["proof (prove)\nusing this:\n  Bseq g\n\ngoal (1 subgoal):\n 1. (\\<And>K.\n        (\\<And>n. norm (g n) \\<le> K) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (blast elim!: BseqE)"], ["proof (state)\nthis:\n  norm (g ?n) \\<le> K\n\ngoal (1 subgoal):\n 1. Bseq f", "{"], ["proof (state)\nthis:\n  norm (g ?n) \\<le> K\n\ngoal (1 subgoal):\n 1. Bseq f", "fix n :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. Bseq f", "have \"norm (f n) \\<le> max K (Max {norm (f n) |n. n < N})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (f n) \\<le> max K (Max {norm (f n) |n. n < N})", "apply (cases \"n < N\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. n < N \\<Longrightarrow>\n    norm (f n) \\<le> max K (Max {norm (f n) |n. n < N})\n 2. \\<not> n < N \\<Longrightarrow>\n    norm (f n) \\<le> max K (Max {norm (f n) |n. n < N})", "apply (rule max.coboundedI2, rule Max.coboundedI, auto) []"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> n < N \\<Longrightarrow>\n    norm (f n) \\<le> max K (Max {norm (f n) |n. n < N})", "apply (rule max.coboundedI1, force intro: order.trans[OF N K])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  norm (f n) \\<le> max K (Max {norm (f n) |n. n < N})\n\ngoal (1 subgoal):\n 1. Bseq f", "}"], ["proof (state)\nthis:\n  norm (f ?n2) \\<le> max K (Max {norm (f n) |n. n < N})\n\ngoal (1 subgoal):\n 1. Bseq f", "thus ?thesis"], ["proof (prove)\nusing this:\n  norm (f ?n2) \\<le> max K (Max {norm (f n) |n. n < N})\n\ngoal (1 subgoal):\n 1. Bseq f", "by (blast intro: BseqI')"], ["proof (state)\nthis:\n  Bseq f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Bseq_add:\n  assumes \"Bseq (f :: nat \\<Rightarrow> 'a :: real_normed_vector)\"\n  shows   \"Bseq (\\<lambda>x. f x + c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Bseq (\\<lambda>x. f x + c)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Bseq (\\<lambda>x. f x + c)", "from assms"], ["proof (chain)\npicking this:\n  Bseq f", "obtain K where K: \"\\<And>x. norm (f x) \\<le> K\""], ["proof (prove)\nusing this:\n  Bseq f\n\ngoal (1 subgoal):\n 1. (\\<And>K.\n        (\\<And>x. norm (f x) \\<le> K) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding Bseq_def"], ["proof (prove)\nusing this:\n  \\<exists>K>0. \\<forall>n. norm (f n) \\<le> K\n\ngoal (1 subgoal):\n 1. (\\<And>K.\n        (\\<And>x. norm (f x) \\<le> K) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  norm (f ?x) \\<le> K\n\ngoal (1 subgoal):\n 1. Bseq (\\<lambda>x. f x + c)", "{"], ["proof (state)\nthis:\n  norm (f ?x) \\<le> K\n\ngoal (1 subgoal):\n 1. Bseq (\\<lambda>x. f x + c)", "fix x :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. Bseq (\\<lambda>x. f x + c)", "have \"norm (f x + c) \\<le> norm (f x) + norm c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (f x + c) \\<le> norm (f x) + norm c", "by (rule norm_triangle_ineq)"], ["proof (state)\nthis:\n  norm (f x + c) \\<le> norm (f x) + norm c\n\ngoal (1 subgoal):\n 1. Bseq (\\<lambda>x. f x + c)", "also"], ["proof (state)\nthis:\n  norm (f x + c) \\<le> norm (f x) + norm c\n\ngoal (1 subgoal):\n 1. Bseq (\\<lambda>x. f x + c)", "have \"norm (f x) \\<le> K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (f x) \\<le> K", "by (rule K)"], ["proof (state)\nthis:\n  norm (f x) \\<le> K\n\ngoal (1 subgoal):\n 1. Bseq (\\<lambda>x. f x + c)", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x + norm c \\<le> y + norm c) \\<Longrightarrow>\n  norm (f x + c) \\<le> K + norm c", "have \"norm (f x + c) \\<le> K + norm c\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x + norm c \\<le> y + norm c) \\<Longrightarrow>\n  norm (f x + c) \\<le> K + norm c\n\ngoal (1 subgoal):\n 1. norm (f x + c) \\<le> K + norm c", "by simp"], ["proof (state)\nthis:\n  norm (f x + c) \\<le> K + norm c\n\ngoal (1 subgoal):\n 1. Bseq (\\<lambda>x. f x + c)", "}"], ["proof (state)\nthis:\n  norm (f ?x2 + c) \\<le> K + norm c\n\ngoal (1 subgoal):\n 1. Bseq (\\<lambda>x. f x + c)", "thus ?thesis"], ["proof (prove)\nusing this:\n  norm (f ?x2 + c) \\<le> K + norm c\n\ngoal (1 subgoal):\n 1. Bseq (\\<lambda>x. f x + c)", "by (rule BseqI')"], ["proof (state)\nthis:\n  Bseq (\\<lambda>x. f x + c)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma convergent_imp_Bseq: \"convergent f \\<Longrightarrow> Bseq f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. convergent f \\<Longrightarrow> Bseq f", "by (simp add: Cauchy_Bseq convergent_Cauchy)"], ["", "(* END TODO *)"], ["", "text \\<open>\n  We now use our last estimate to show that the prime harmonic series diverges. This is obvious,\n  since it is bounded from below by $\\ln (\\ln (n + 1))$ minus some constant, which obviously\n  tends to infinite.\n\n  Directly using the divergence of the harmonic series would also be possible and shorten this\n  proof a bit..\n\\<close>"], ["", "corollary prime_harmonic_series_unbounded:\n  \"\\<not>Bseq (\\<lambda>n. \\<Sum>p\\<leftarrow>primes_upto n. 1 / p)\" (is \"\\<not>Bseq ?f\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Bseq (\\<lambda>n. \\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. Bseq\n     (\\<lambda>n.\n         \\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) \\<Longrightarrow>\n    False", "assume \"Bseq ?f\""], ["proof (state)\nthis:\n  Bseq (\\<lambda>n. \\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)\n\ngoal (1 subgoal):\n 1. Bseq\n     (\\<lambda>n.\n         \\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) \\<Longrightarrow>\n    False", "hence \"Bseq (\\<lambda>n. ?f n + ln (5/3))\""], ["proof (prove)\nusing this:\n  Bseq (\\<lambda>n. \\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)\n\ngoal (1 subgoal):\n 1. Bseq\n     (\\<lambda>n.\n         (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3))", "by (rule Bseq_add)"], ["proof (state)\nthis:\n  Bseq\n   (\\<lambda>n. (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3))\n\ngoal (1 subgoal):\n 1. Bseq\n     (\\<lambda>n.\n         \\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) \\<Longrightarrow>\n    False", "have \"Bseq (\\<lambda>n. ln (ln (n + 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Bseq (\\<lambda>n. ln (ln (real (n + 1))))", "proof (rule Bseq_eventually_mono)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       norm (ln (ln (real (n + 1)))) \\<le> norm (?g n)\n 2. Bseq ?g", "from eventually_ge_at_top[of \"2::nat\"]"], ["proof (chain)\npicking this:\n  eventually ((\\<le>) 2) sequentially", "show \"eventually (\\<lambda>n. norm (ln (ln (n + 1))) \\<le> norm (?f n + ln (5/3))) sequentially\""], ["proof (prove)\nusing this:\n  eventually ((\\<le>) 2) sequentially\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       norm (ln (ln (real (n + 1))))\n       \\<le> norm\n              ((\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3))", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       2 \\<le> n \\<Longrightarrow>\n       norm (ln (ln (real (n + 1))))\n       \\<le> norm\n              ((\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3))", "fix n :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       2 \\<le> n \\<Longrightarrow>\n       norm (ln (ln (real (n + 1))))\n       \\<le> norm\n              ((\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3))", "assume n: \"n \\<ge> 2\""], ["proof (state)\nthis:\n  2 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       2 \\<le> n \\<Longrightarrow>\n       norm (ln (ln (real (n + 1))))\n       \\<le> norm\n              ((\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3))", "hence \"norm (ln (ln (real n + 1))) = ln (ln (real n + 1))\""], ["proof (prove)\nusing this:\n  2 \\<le> n\n\ngoal (1 subgoal):\n 1. norm (ln (ln (real n + 1))) = ln (ln (real n + 1))", "using ln_ln_nonneg[of \"real n + 1\"]"], ["proof (prove)\nusing this:\n  2 \\<le> n\n  3 \\<le> real n + 1 \\<Longrightarrow> 0 \\<le> ln (ln (real n + 1))\n\ngoal (1 subgoal):\n 1. norm (ln (ln (real n + 1))) = ln (ln (real n + 1))", "by simp"], ["proof (state)\nthis:\n  norm (ln (ln (real n + 1))) = ln (ln (real n + 1))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       2 \\<le> n \\<Longrightarrow>\n       norm (ln (ln (real (n + 1))))\n       \\<le> norm\n              ((\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3))", "also"], ["proof (state)\nthis:\n  norm (ln (ln (real n + 1))) = ln (ln (real n + 1))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       2 \\<le> n \\<Longrightarrow>\n       norm (ln (ln (real (n + 1))))\n       \\<le> norm\n              ((\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3))", "have \"\\<dots> \\<le> ?f n + ln (5/3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (ln (real n + 1))\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3)", "using prime_harmonic_lower'[OF n]"], ["proof (prove)\nusing this:\n  ln (ln (real n + 1)) - ln (5 / 3)\n  \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)\n\ngoal (1 subgoal):\n 1. ln (ln (real n + 1))\n    \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  ln (ln (real n + 1))\n  \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       2 \\<le> n \\<Longrightarrow>\n       norm (ln (ln (real (n + 1))))\n       \\<le> norm\n              ((\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3))", "also"], ["proof (state)\nthis:\n  ln (ln (real n + 1))\n  \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       2 \\<le> n \\<Longrightarrow>\n       norm (ln (ln (real (n + 1))))\n       \\<le> norm\n              ((\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3))", "have \"?f n + ln (5/3) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3)", "by (intro add_nonneg_nonneg sum_list_nonneg) simp_all"], ["proof (state)\nthis:\n  0 \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       2 \\<le> n \\<Longrightarrow>\n       norm (ln (ln (real (n + 1))))\n       \\<le> norm\n              ((\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3))", "hence \"?f n + ln (5/3) = norm (?f n + ln (5/3))\""], ["proof (prove)\nusing this:\n  0 \\<le> (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3)\n\ngoal (1 subgoal):\n 1. (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3) =\n    norm ((\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3) =\n  norm ((\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       2 \\<le> n \\<Longrightarrow>\n       norm (ln (ln (real (n + 1))))\n       \\<le> norm\n              ((\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3))", "finally"], ["proof (chain)\npicking this:\n  norm (ln (ln (real n + 1)))\n  \\<le> norm ((\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3))", "show \"norm (ln (ln (n + 1))) \\<le> norm (?f n + ln (5/3))\""], ["proof (prove)\nusing this:\n  norm (ln (ln (real n + 1)))\n  \\<le> norm ((\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3))\n\ngoal (1 subgoal):\n 1. norm (ln (ln (real (n + 1))))\n    \\<le> norm ((\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3))", "by (simp add: add_ac)"], ["proof (state)\nthis:\n  norm (ln (ln (real (n + 1))))\n  \\<le> norm ((\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     norm (ln (ln (real (n + 1))))\n     \\<le> norm\n            ((\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3))\n\ngoal (1 subgoal):\n 1. Bseq\n     (\\<lambda>n.\n         (\\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) + ln (5 / 3))", "qed fact"], ["proof (state)\nthis:\n  Bseq (\\<lambda>n. ln (ln (real (n + 1))))\n\ngoal (1 subgoal):\n 1. Bseq\n     (\\<lambda>n.\n         \\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  Bseq (\\<lambda>n. ln (ln (real (n + 1))))", "obtain k where k: \"k > 0\" \"\\<And>n. norm (ln (ln (real (n::nat) + 1))) \\<le> k\""], ["proof (prove)\nusing this:\n  Bseq (\\<lambda>n. ln (ln (real (n + 1))))\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>0 < k;\n         \\<And>n. norm (ln (ln (real n + 1))) \\<le> k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim!: BseqE simp: add_ac)"], ["proof (state)\nthis:\n  0 < k\n  norm (ln (ln (real ?n + 1))) \\<le> k\n\ngoal (1 subgoal):\n 1. Bseq\n     (\\<lambda>n.\n         \\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) \\<Longrightarrow>\n    False", "define N where \"N = nat \\<lceil>exp (exp k)\\<rceil>\""], ["proof (state)\nthis:\n  N = nat \\<lceil>exp (exp k)\\<rceil>\n\ngoal (1 subgoal):\n 1. Bseq\n     (\\<lambda>n.\n         \\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) \\<Longrightarrow>\n    False", "have N_pos: \"N > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < N", "unfolding N_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < nat \\<lceil>exp (exp k)\\<rceil>", "by simp"], ["proof (state)\nthis:\n  0 < N\n\ngoal (1 subgoal):\n 1. Bseq\n     (\\<lambda>n.\n         \\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) \\<Longrightarrow>\n    False", "have \"real N + 1 > exp (exp k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (exp k) < real N + 1", "unfolding N_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (exp k) < real (nat \\<lceil>exp (exp k)\\<rceil>) + 1", "by linarith"], ["proof (state)\nthis:\n  exp (exp k) < real N + 1\n\ngoal (1 subgoal):\n 1. Bseq\n     (\\<lambda>n.\n         \\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) \\<Longrightarrow>\n    False", "hence \"ln (real N + 1) > ln (exp (exp k))\""], ["proof (prove)\nusing this:\n  exp (exp k) < real N + 1\n\ngoal (1 subgoal):\n 1. ln (exp (exp k)) < ln (real N + 1)", "by (subst ln_less_cancel_iff) simp_all"], ["proof (state)\nthis:\n  ln (exp (exp k)) < ln (real N + 1)\n\ngoal (1 subgoal):\n 1. Bseq\n     (\\<lambda>n.\n         \\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) \\<Longrightarrow>\n    False", "with N_pos"], ["proof (chain)\npicking this:\n  0 < N\n  ln (exp (exp k)) < ln (real N + 1)", "have \"ln (ln (real N + 1)) > ln (exp k)\""], ["proof (prove)\nusing this:\n  0 < N\n  ln (exp (exp k)) < ln (real N + 1)\n\ngoal (1 subgoal):\n 1. ln (exp k) < ln (ln (real N + 1))", "by (subst ln_less_cancel_iff) simp_all"], ["proof (state)\nthis:\n  ln (exp k) < ln (ln (real N + 1))\n\ngoal (1 subgoal):\n 1. Bseq\n     (\\<lambda>n.\n         \\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) \\<Longrightarrow>\n    False", "hence \"k < ln (ln (real N + 1))\""], ["proof (prove)\nusing this:\n  ln (exp k) < ln (ln (real N + 1))\n\ngoal (1 subgoal):\n 1. k < ln (ln (real N + 1))", "by simp"], ["proof (state)\nthis:\n  k < ln (ln (real N + 1))\n\ngoal (1 subgoal):\n 1. Bseq\n     (\\<lambda>n.\n         \\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  k < ln (ln (real N + 1))\n\ngoal (1 subgoal):\n 1. Bseq\n     (\\<lambda>n.\n         \\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) \\<Longrightarrow>\n    False", "have \"\\<dots> \\<le> norm (ln (ln (real N + 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (ln (real N + 1)) \\<le> norm (ln (ln (real N + 1)))", "by simp"], ["proof (state)\nthis:\n  ln (ln (real N + 1)) \\<le> norm (ln (ln (real N + 1)))\n\ngoal (1 subgoal):\n 1. Bseq\n     (\\<lambda>n.\n         \\<Sum>p\\<leftarrow>primes_upto n. 1 / real p) \\<Longrightarrow>\n    False", "finally"], ["proof (chain)\npicking this:\n  k < norm (ln (ln (real N + 1)))", "show False"], ["proof (prove)\nusing this:\n  k < norm (ln (ln (real N + 1)))\n\ngoal (1 subgoal):\n 1. False", "using k(2)[of N]"], ["proof (prove)\nusing this:\n  k < norm (ln (ln (real N + 1)))\n  norm (ln (ln (real N + 1))) \\<le> k\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary prime_harmonic_series_diverges:\n  \"\\<not>convergent (\\<lambda>n. \\<Sum>p\\<leftarrow>primes_upto n. 1 / p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> convergent\n            (\\<lambda>n. \\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "using prime_harmonic_series_unbounded convergent_imp_Bseq"], ["proof (prove)\nusing this:\n  \\<not> Bseq (\\<lambda>n. \\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)\n  convergent ?f \\<Longrightarrow> Bseq ?f\n\ngoal (1 subgoal):\n 1. \\<not> convergent\n            (\\<lambda>n. \\<Sum>p\\<leftarrow>primes_upto n. 1 / real p)", "by blast"], ["", "end"]]}