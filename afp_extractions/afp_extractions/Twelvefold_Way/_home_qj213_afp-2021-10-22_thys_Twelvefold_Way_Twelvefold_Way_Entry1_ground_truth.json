{"file_name": "/home/qj213/afp-2021-10-22/thys/Twelvefold_Way/Twelvefold_Way_Entry1.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Twelvefold_Way", "problem_names": ["lemma nth_sequence_of:\n  assumes \"i < card A\"\n  shows \"(sequence_of A enum f) ! i = f (enum i)\"", "lemma nth_sequence_of_inv_into:\n  assumes \"bij_betw enum {0..<card A} A\"\n  assumes \"a \\<in> A\"\n  shows \"(sequence_of A enum f) ! (inv_into {0..<card A} enum a) = f a\"", "lemma set_sequence_of:\n  assumes \"bij_betw enum {0..<card A} A\"\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n  shows \"set (sequence_of A enum f) \\<subseteq> B\"", "lemma length_sequence_of:\n  assumes \"bij_betw enum {0..<card A} A\"\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n  shows \"length (sequence_of A enum f) = card A\"", "lemma function_of_enum:\n  assumes \"bij_betw enum {0..<card A} A\"\n  assumes \"length xs = card A\"\n  assumes \"i < card A\"\n  shows \"function_of A enum xs (enum i) = xs ! i\"", "lemma function_of_in_extensional_funcset:\n  assumes \"bij_betw enum {0..<card A} A\"\n  assumes \"set xs \\<subseteq> B\" \"length xs = card A\"\n  shows \"function_of A enum xs \\<in> A \\<rightarrow>\\<^sub>E B\"", "lemma sequence_of_function_of:\n  assumes \"bij_betw enum {0..<card A} A\"\n  assumes \"set xs \\<subseteq> B\" \"length xs = card A\"\n  shows \"sequence_of A enum (function_of A enum xs) = xs\"", "lemma function_of_sequence_of:\n  assumes \"bij_betw enum {0..<card A} A\"\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n  shows \"function_of A enum (sequence_of A enum f) = f\"", "lemma bij_betw_sequence_of:\n  assumes \"bij_betw enum {0..<card A} A\"\n  shows \"bij_betw (sequence_of A enum) (A \\<rightarrow>\\<^sub>E B) {xs. set xs \\<subseteq> B \\<and> length xs = card A}\"", "lemma bij_betw_function_of:\n  assumes \"bij_betw enum {0..<card A} A\"\n  shows \"bij_betw (function_of A enum) {xs. set xs \\<subseteq> B \\<and> length xs = card A} (A \\<rightarrow>\\<^sub>E B)\"", "lemma\n  assumes \"finite A\"\n  shows \"card (A \\<rightarrow>\\<^sub>E B) = card B ^ card A\"", "lemma card_sequences:\n  assumes \"finite A\"\n  shows \"card {xs. set xs \\<subseteq> B \\<and> length xs = card A} = card B ^ card A\"", "lemma\n  shows \"card {xs. set xs \\<subseteq> A \\<and> length xs = n} = card A ^ n\""], "translations": [["", "lemma nth_sequence_of:\n  assumes \"i < card A\"\n  shows \"(sequence_of A enum f) ! i = f (enum i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sequence_of A enum f ! i = f (enum i)", "using assms"], ["proof (prove)\nusing this:\n  i < card A\n\ngoal (1 subgoal):\n 1. sequence_of A enum f ! i = f (enum i)", "unfolding sequence_of_def"], ["proof (prove)\nusing this:\n  i < card A\n\ngoal (1 subgoal):\n 1. map (\\<lambda>n. f (enum n)) [0..<card A] ! i = f (enum i)", "by auto"], ["", "lemma nth_sequence_of_inv_into:\n  assumes \"bij_betw enum {0..<card A} A\"\n  assumes \"a \\<in> A\"\n  shows \"(sequence_of A enum f) ! (inv_into {0..<card A} enum a) = f a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sequence_of A enum f ! inv_into {0..<card A} enum a = f a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sequence_of A enum f ! inv_into {0..<card A} enum a = f a", "have \"inv_into {0..<card A} enum a \\<in> {0..<card A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_into {0..<card A} enum a \\<in> {0..<card A}", "using assms bij_betwE bij_betw_inv_into"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n  a \\<in> A\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n  bij_betw ?f ?A ?B \\<Longrightarrow> bij_betw (inv_into ?A ?f) ?B ?A\n\ngoal (1 subgoal):\n 1. inv_into {0..<card A} enum a \\<in> {0..<card A}", "by blast"], ["proof (state)\nthis:\n  inv_into {0..<card A} enum a \\<in> {0..<card A}\n\ngoal (1 subgoal):\n 1. sequence_of A enum f ! inv_into {0..<card A} enum a = f a", "from this assms"], ["proof (chain)\npicking this:\n  inv_into {0..<card A} enum a \\<in> {0..<card A}\n  bij_betw enum {0..<card A} A\n  a \\<in> A", "show \"(sequence_of A enum f) ! (inv_into {0..<card A} enum a) = f a\""], ["proof (prove)\nusing this:\n  inv_into {0..<card A} enum a \\<in> {0..<card A}\n  bij_betw enum {0..<card A} A\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. sequence_of A enum f ! inv_into {0..<card A} enum a = f a", "unfolding sequence_of_def"], ["proof (prove)\nusing this:\n  inv_into {0..<card A} enum a \\<in> {0..<card A}\n  bij_betw enum {0..<card A} A\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. map (\\<lambda>n. f (enum n)) [0..<card A] !\n    inv_into {0..<card A} enum a =\n    f a", "by (simp add: bij_betw_inv_into_right)"], ["proof (state)\nthis:\n  sequence_of A enum f ! inv_into {0..<card A} enum a = f a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma set_sequence_of:\n  assumes \"bij_betw enum {0..<card A} A\"\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n  shows \"set (sequence_of A enum f) \\<subseteq> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (sequence_of A enum f) \\<subseteq> B", "using PiE bij_betwE assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?f \\<in> Pi ?A ?B; ?f ?x \\<in> ?B ?x \\<Longrightarrow> ?Q;\n   ?x \\<notin> ?A \\<Longrightarrow> ?Q\\<rbrakk>\n  \\<Longrightarrow> ?Q\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n  bij_betw enum {0..<card A} A\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. set (sequence_of A enum f) \\<subseteq> B", "unfolding sequence_of_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?f \\<in> Pi ?A ?B; ?f ?x \\<in> ?B ?x \\<Longrightarrow> ?Q;\n   ?x \\<notin> ?A \\<Longrightarrow> ?Q\\<rbrakk>\n  \\<Longrightarrow> ?Q\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n  bij_betw enum {0..<card A} A\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. set (map (\\<lambda>n. f (enum n)) [0..<card A]) \\<subseteq> B", "by fastforce"], ["", "lemma length_sequence_of:\n  assumes \"bij_betw enum {0..<card A} A\"\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n  shows \"length (sequence_of A enum f) = card A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (sequence_of A enum f) = card A", "using assms"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. length (sequence_of A enum f) = card A", "unfolding sequence_of_def"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. length (map (\\<lambda>n. f (enum n)) [0..<card A]) = card A", "by simp"], ["", "lemma function_of_enum:\n  assumes \"bij_betw enum {0..<card A} A\"\n  assumes \"length xs = card A\"\n  assumes \"i < card A\"\n  shows \"function_of A enum xs (enum i) = xs ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. function_of A enum xs (enum i) = xs ! i", "using assms"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n  length xs = card A\n  i < card A\n\ngoal (1 subgoal):\n 1. function_of A enum xs (enum i) = xs ! i", "unfolding function_of_def"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n  length xs = card A\n  i < card A\n\ngoal (1 subgoal):\n 1. (if enum i \\<in> A then xs ! inv_into {0..<length xs} enum (enum i)\n     else undefined) =\n    xs ! i", "by (auto simp add: bij_betw_inv_into_left bij_betwE)"], ["", "lemma function_of_in_extensional_funcset:\n  assumes \"bij_betw enum {0..<card A} A\"\n  assumes \"set xs \\<subseteq> B\" \"length xs = card A\"\n  shows \"function_of A enum xs \\<in> A \\<rightarrow>\\<^sub>E B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. function_of A enum xs \\<in> A \\<rightarrow>\\<^sub>E B", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> function_of A enum xs x \\<in> B\n 2. \\<And>x.\n       x \\<notin> A \\<Longrightarrow> function_of A enum xs x = undefined", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> function_of A enum xs x \\<in> B\n 2. \\<And>x.\n       x \\<notin> A \\<Longrightarrow> function_of A enum xs x = undefined", "assume \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> function_of A enum xs x \\<in> B\n 2. \\<And>x.\n       x \\<notin> A \\<Longrightarrow> function_of A enum xs x = undefined", "have \"inv_into {0..<length xs} enum x \\<in> {0..<length xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_into {0..<length xs} enum x \\<in> {0..<length xs}", "using \\<open>x \\<in> A\\<close> assms(1, 3)"], ["proof (prove)\nusing this:\n  x \\<in> A\n  bij_betw enum {0..<card A} A\n  length xs = card A\n\ngoal (1 subgoal):\n 1. inv_into {0..<length xs} enum x \\<in> {0..<length xs}", "by (metis bij_betw_def inv_into_into)"], ["proof (state)\nthis:\n  inv_into {0..<length xs} enum x \\<in> {0..<length xs}\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> function_of A enum xs x \\<in> B\n 2. \\<And>x.\n       x \\<notin> A \\<Longrightarrow> function_of A enum xs x = undefined", "from this"], ["proof (chain)\npicking this:\n  inv_into {0..<length xs} enum x \\<in> {0..<length xs}", "have \"xs ! inv_into {0..<length xs} enum x \\<in> set xs\""], ["proof (prove)\nusing this:\n  inv_into {0..<length xs} enum x \\<in> {0..<length xs}\n\ngoal (1 subgoal):\n 1. xs ! inv_into {0..<length xs} enum x \\<in> set xs", "by simp"], ["proof (state)\nthis:\n  xs ! inv_into {0..<length xs} enum x \\<in> set xs\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> function_of A enum xs x \\<in> B\n 2. \\<And>x.\n       x \\<notin> A \\<Longrightarrow> function_of A enum xs x = undefined", "from this \\<open>set xs \\<subseteq> B\\<close>"], ["proof (chain)\npicking this:\n  xs ! inv_into {0..<length xs} enum x \\<in> set xs\n  set xs \\<subseteq> B", "show \"function_of A enum xs x \\<in> B\""], ["proof (prove)\nusing this:\n  xs ! inv_into {0..<length xs} enum x \\<in> set xs\n  set xs \\<subseteq> B\n\ngoal (1 subgoal):\n 1. function_of A enum xs x \\<in> B", "using \\<open>x \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  xs ! inv_into {0..<length xs} enum x \\<in> set xs\n  set xs \\<subseteq> B\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. function_of A enum xs x \\<in> B", "unfolding function_of_def"], ["proof (prove)\nusing this:\n  xs ! inv_into {0..<length xs} enum x \\<in> set xs\n  set xs \\<subseteq> B\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (if x \\<in> A then xs ! inv_into {0..<length xs} enum x else undefined)\n    \\<in> B", "by auto"], ["proof (state)\nthis:\n  function_of A enum xs x \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> A \\<Longrightarrow> function_of A enum xs x = undefined", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> A \\<Longrightarrow> function_of A enum xs x = undefined", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> A \\<Longrightarrow> function_of A enum xs x = undefined", "assume \"x \\<notin> A\""], ["proof (state)\nthis:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> A \\<Longrightarrow> function_of A enum xs x = undefined", "from this"], ["proof (chain)\npicking this:\n  x \\<notin> A", "show \"function_of A enum xs x = undefined\""], ["proof (prove)\nusing this:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. function_of A enum xs x = undefined", "unfolding function_of_def"], ["proof (prove)\nusing this:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. (if x \\<in> A then xs ! inv_into {0..<length xs} enum x\n     else undefined) =\n    undefined", "by simp"], ["proof (state)\nthis:\n  function_of A enum xs x = undefined\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sequence_of_function_of:\n  assumes \"bij_betw enum {0..<card A} A\"\n  assumes \"set xs \\<subseteq> B\" \"length xs = card A\"\n  shows \"sequence_of A enum (function_of A enum xs) = xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sequence_of A enum (function_of A enum xs) = xs", "proof (rule nth_equalityI)"], ["proof (state)\ngoal (2 subgoals):\n 1. length (sequence_of A enum (function_of A enum xs)) = length xs\n 2. \\<And>i.\n       i < length\n            (sequence_of A enum (function_of A enum xs)) \\<Longrightarrow>\n       sequence_of A enum (function_of A enum xs) ! i = xs ! i", "have \"function_of A enum xs \\<in> A \\<rightarrow>\\<^sub>E B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. function_of A enum xs \\<in> A \\<rightarrow>\\<^sub>E B", "using assms"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n  set xs \\<subseteq> B\n  length xs = card A\n\ngoal (1 subgoal):\n 1. function_of A enum xs \\<in> A \\<rightarrow>\\<^sub>E B", "by (rule function_of_in_extensional_funcset)"], ["proof (state)\nthis:\n  function_of A enum xs \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (2 subgoals):\n 1. length (sequence_of A enum (function_of A enum xs)) = length xs\n 2. \\<And>i.\n       i < length\n            (sequence_of A enum (function_of A enum xs)) \\<Longrightarrow>\n       sequence_of A enum (function_of A enum xs) ! i = xs ! i", "from this"], ["proof (chain)\npicking this:\n  function_of A enum xs \\<in> A \\<rightarrow>\\<^sub>E B", "show \"length (sequence_of A enum (function_of A enum xs)) = length xs\""], ["proof (prove)\nusing this:\n  function_of A enum xs \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. length (sequence_of A enum (function_of A enum xs)) = length xs", "using assms(1,3)"], ["proof (prove)\nusing this:\n  function_of A enum xs \\<in> A \\<rightarrow>\\<^sub>E B\n  bij_betw enum {0..<card A} A\n  length xs = card A\n\ngoal (1 subgoal):\n 1. length (sequence_of A enum (function_of A enum xs)) = length xs", "by (simp add: length_sequence_of)"], ["proof (state)\nthis:\n  length (sequence_of A enum (function_of A enum xs)) = length xs\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < length\n            (sequence_of A enum (function_of A enum xs)) \\<Longrightarrow>\n       sequence_of A enum (function_of A enum xs) ! i = xs ! i", "from this"], ["proof (chain)\npicking this:\n  length (sequence_of A enum (function_of A enum xs)) = length xs", "show \"\\<And>i. i < length (sequence_of A enum (function_of A enum xs)) \\<Longrightarrow> sequence_of A enum (function_of A enum xs) ! i = xs ! i\""], ["proof (prove)\nusing this:\n  length (sequence_of A enum (function_of A enum xs)) = length xs\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < length\n            (sequence_of A enum (function_of A enum xs)) \\<Longrightarrow>\n       sequence_of A enum (function_of A enum xs) ! i = xs ! i", "using assms"], ["proof (prove)\nusing this:\n  length (sequence_of A enum (function_of A enum xs)) = length xs\n  bij_betw enum {0..<card A} A\n  set xs \\<subseteq> B\n  length xs = card A\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < length\n            (sequence_of A enum (function_of A enum xs)) \\<Longrightarrow>\n       sequence_of A enum (function_of A enum xs) ! i = xs ! i", "by (auto simp add: nth_sequence_of function_of_enum)"], ["proof (state)\nthis:\n  ?i < length (sequence_of A enum (function_of A enum xs)) \\<Longrightarrow>\n  sequence_of A enum (function_of A enum xs) ! ?i = xs ! ?i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma function_of_sequence_of:\n  assumes \"bij_betw enum {0..<card A} A\"\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n  shows \"function_of A enum (sequence_of A enum f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. function_of A enum (sequence_of A enum f) = f", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. function_of A enum (sequence_of A enum f) x = f x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. function_of A enum (sequence_of A enum f) x = f x", "show \"function_of A enum (sequence_of A enum f) x = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. function_of A enum (sequence_of A enum f) x = f x", "using assms"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. function_of A enum (sequence_of A enum f) x = f x", "unfolding function_of_def"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. (if x \\<in> A\n     then sequence_of A enum f !\n          inv_into {0..<length (sequence_of A enum f)} enum x\n     else undefined) =\n    f x", "by (auto simp add: length_sequence_of nth_sequence_of_inv_into)"], ["proof (state)\nthis:\n  function_of A enum (sequence_of A enum f) x = f x\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Bijections\\<close>"], ["", "lemma bij_betw_sequence_of:\n  assumes \"bij_betw enum {0..<card A} A\"\n  shows \"bij_betw (sequence_of A enum) (A \\<rightarrow>\\<^sub>E B) {xs. set xs \\<subseteq> B \\<and> length xs = card A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (sequence_of A enum) (A \\<rightarrow>\\<^sub>E B)\n     {xs. set xs \\<subseteq> B \\<and> length xs = card A}", "proof (rule bij_betw_byWitness[where f'=\"function_of A enum\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>A \\<rightarrow>\\<^sub>E B.\n       function_of A enum (sequence_of A enum a) = a\n 2. \\<forall>a'\\<in>{xs. set xs \\<subseteq> B \\<and> length xs = card A}.\n       sequence_of A enum (function_of A enum a') = a'\n 3. sequence_of A enum ` (A \\<rightarrow>\\<^sub>E B)\n    \\<subseteq> {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n 4. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n    \\<subseteq> A \\<rightarrow>\\<^sub>E B", "show \"\\<forall>f\\<in>A \\<rightarrow>\\<^sub>E B. function_of A enum (sequence_of A enum f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>A \\<rightarrow>\\<^sub>E B.\n       function_of A enum (sequence_of A enum f) = f", "using assms"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>A \\<rightarrow>\\<^sub>E B.\n       function_of A enum (sequence_of A enum f) = f", "by (simp add: function_of_sequence_of)"], ["proof (state)\nthis:\n  \\<forall>f\\<in>A \\<rightarrow>\\<^sub>E B.\n     function_of A enum (sequence_of A enum f) = f\n\ngoal (3 subgoals):\n 1. \\<forall>a'\\<in>{xs. set xs \\<subseteq> B \\<and> length xs = card A}.\n       sequence_of A enum (function_of A enum a') = a'\n 2. sequence_of A enum ` (A \\<rightarrow>\\<^sub>E B)\n    \\<subseteq> {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n 3. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n    \\<subseteq> A \\<rightarrow>\\<^sub>E B", "show \"\\<forall>xs\\<in>{xs. set xs \\<subseteq> B \\<and> length xs = card A}. sequence_of A enum (function_of A enum xs) = xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xs\\<in>{xs. set xs \\<subseteq> B \\<and> length xs = card A}.\n       sequence_of A enum (function_of A enum xs) = xs", "using assms"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. \\<forall>xs\\<in>{xs. set xs \\<subseteq> B \\<and> length xs = card A}.\n       sequence_of A enum (function_of A enum xs) = xs", "by (auto simp add: sequence_of_function_of)"], ["proof (state)\nthis:\n  \\<forall>xs\\<in>{xs. set xs \\<subseteq> B \\<and> length xs = card A}.\n     sequence_of A enum (function_of A enum xs) = xs\n\ngoal (2 subgoals):\n 1. sequence_of A enum ` (A \\<rightarrow>\\<^sub>E B)\n    \\<subseteq> {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n 2. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n    \\<subseteq> A \\<rightarrow>\\<^sub>E B", "show \"sequence_of A enum ` (A \\<rightarrow>\\<^sub>E B) \\<subseteq> {xs. set xs \\<subseteq> B \\<and> length xs = card A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sequence_of A enum ` (A \\<rightarrow>\\<^sub>E B)\n    \\<subseteq> {xs. set xs \\<subseteq> B \\<and> length xs = card A}", "using assms set_sequence_of[OF assms] length_sequence_of"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n  ?f \\<in> A \\<rightarrow>\\<^sub>E ?B \\<Longrightarrow>\n  set (sequence_of A enum ?f) \\<subseteq> ?B\n  \\<lbrakk>bij_betw ?enum {0..<card ?A} ?A;\n   ?f \\<in> ?A \\<rightarrow>\\<^sub>E ?B\\<rbrakk>\n  \\<Longrightarrow> length (sequence_of ?A ?enum ?f) = card ?A\n\ngoal (1 subgoal):\n 1. sequence_of A enum ` (A \\<rightarrow>\\<^sub>E B)\n    \\<subseteq> {xs. set xs \\<subseteq> B \\<and> length xs = card A}", "by auto"], ["proof (state)\nthis:\n  sequence_of A enum ` (A \\<rightarrow>\\<^sub>E B)\n  \\<subseteq> {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n\ngoal (1 subgoal):\n 1. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n    \\<subseteq> A \\<rightarrow>\\<^sub>E B", "show \"function_of A enum ` {xs. set xs \\<subseteq> B \\<and> length xs = card A} \\<subseteq> A \\<rightarrow>\\<^sub>E B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n    \\<subseteq> A \\<rightarrow>\\<^sub>E B", "using assms function_of_in_extensional_funcset"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n  \\<lbrakk>bij_betw ?enum {0..<card ?A} ?A; set ?xs \\<subseteq> ?B;\n   length ?xs = card ?A\\<rbrakk>\n  \\<Longrightarrow> function_of ?A ?enum ?xs\n                    \\<in> ?A \\<rightarrow>\\<^sub>E ?B\n\ngoal (1 subgoal):\n 1. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n    \\<subseteq> A \\<rightarrow>\\<^sub>E B", "by blast"], ["proof (state)\nthis:\n  function_of A enum ` {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n  \\<subseteq> A \\<rightarrow>\\<^sub>E B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bij_betw_function_of:\n  assumes \"bij_betw enum {0..<card A} A\"\n  shows \"bij_betw (function_of A enum) {xs. set xs \\<subseteq> B \\<and> length xs = card A} (A \\<rightarrow>\\<^sub>E B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (function_of A enum)\n     {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n     (A \\<rightarrow>\\<^sub>E B)", "proof (rule bij_betw_byWitness[where f'=\"sequence_of A enum\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{xs. set xs \\<subseteq> B \\<and> length xs = card A}.\n       sequence_of A enum (function_of A enum a) = a\n 2. \\<forall>a'\\<in>A \\<rightarrow>\\<^sub>E B.\n       function_of A enum (sequence_of A enum a') = a'\n 3. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n    \\<subseteq> A \\<rightarrow>\\<^sub>E B\n 4. sequence_of A enum ` (A \\<rightarrow>\\<^sub>E B)\n    \\<subseteq> {xs. set xs \\<subseteq> B \\<and> length xs = card A}", "show \"\\<forall>f\\<in>A \\<rightarrow>\\<^sub>E B. function_of A enum (sequence_of A enum f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>A \\<rightarrow>\\<^sub>E B.\n       function_of A enum (sequence_of A enum f) = f", "using assms"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>A \\<rightarrow>\\<^sub>E B.\n       function_of A enum (sequence_of A enum f) = f", "by (simp add: function_of_sequence_of)"], ["proof (state)\nthis:\n  \\<forall>f\\<in>A \\<rightarrow>\\<^sub>E B.\n     function_of A enum (sequence_of A enum f) = f\n\ngoal (3 subgoals):\n 1. \\<forall>a\\<in>{xs. set xs \\<subseteq> B \\<and> length xs = card A}.\n       sequence_of A enum (function_of A enum a) = a\n 2. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n    \\<subseteq> A \\<rightarrow>\\<^sub>E B\n 3. sequence_of A enum ` (A \\<rightarrow>\\<^sub>E B)\n    \\<subseteq> {xs. set xs \\<subseteq> B \\<and> length xs = card A}", "show \"\\<forall>xs\\<in>{xs. set xs \\<subseteq> B \\<and> length xs = card A}. sequence_of A enum (function_of A enum xs) = xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xs\\<in>{xs. set xs \\<subseteq> B \\<and> length xs = card A}.\n       sequence_of A enum (function_of A enum xs) = xs", "using assms"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. \\<forall>xs\\<in>{xs. set xs \\<subseteq> B \\<and> length xs = card A}.\n       sequence_of A enum (function_of A enum xs) = xs", "by (auto simp add: sequence_of_function_of)"], ["proof (state)\nthis:\n  \\<forall>xs\\<in>{xs. set xs \\<subseteq> B \\<and> length xs = card A}.\n     sequence_of A enum (function_of A enum xs) = xs\n\ngoal (2 subgoals):\n 1. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n    \\<subseteq> A \\<rightarrow>\\<^sub>E B\n 2. sequence_of A enum ` (A \\<rightarrow>\\<^sub>E B)\n    \\<subseteq> {xs. set xs \\<subseteq> B \\<and> length xs = card A}", "show \"sequence_of A enum ` (A \\<rightarrow>\\<^sub>E B) \\<subseteq> {xs. set xs \\<subseteq> B \\<and> length xs = card A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sequence_of A enum ` (A \\<rightarrow>\\<^sub>E B)\n    \\<subseteq> {xs. set xs \\<subseteq> B \\<and> length xs = card A}", "using assms set_sequence_of[OF assms] length_sequence_of"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n  ?f \\<in> A \\<rightarrow>\\<^sub>E ?B \\<Longrightarrow>\n  set (sequence_of A enum ?f) \\<subseteq> ?B\n  \\<lbrakk>bij_betw ?enum {0..<card ?A} ?A;\n   ?f \\<in> ?A \\<rightarrow>\\<^sub>E ?B\\<rbrakk>\n  \\<Longrightarrow> length (sequence_of ?A ?enum ?f) = card ?A\n\ngoal (1 subgoal):\n 1. sequence_of A enum ` (A \\<rightarrow>\\<^sub>E B)\n    \\<subseteq> {xs. set xs \\<subseteq> B \\<and> length xs = card A}", "by auto"], ["proof (state)\nthis:\n  sequence_of A enum ` (A \\<rightarrow>\\<^sub>E B)\n  \\<subseteq> {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n\ngoal (1 subgoal):\n 1. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n    \\<subseteq> A \\<rightarrow>\\<^sub>E B", "show \"function_of A enum ` {xs. set xs \\<subseteq> B \\<and> length xs = card A} \\<subseteq> A \\<rightarrow>\\<^sub>E B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n    \\<subseteq> A \\<rightarrow>\\<^sub>E B", "using assms function_of_in_extensional_funcset"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n  \\<lbrakk>bij_betw ?enum {0..<card ?A} ?A; set ?xs \\<subseteq> ?B;\n   length ?xs = card ?A\\<rbrakk>\n  \\<Longrightarrow> function_of ?A ?enum ?xs\n                    \\<in> ?A \\<rightarrow>\\<^sub>E ?B\n\ngoal (1 subgoal):\n 1. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n    \\<subseteq> A \\<rightarrow>\\<^sub>E B", "by blast"], ["proof (state)\nthis:\n  function_of A enum ` {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n  \\<subseteq> A \\<rightarrow>\\<^sub>E B\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Cardinality\\<close>"], ["", "lemma\n  assumes \"finite A\"\n  shows \"card (A \\<rightarrow>\\<^sub>E B) = card B ^ card A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (A \\<rightarrow>\\<^sub>E B) = card B ^ card A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (A \\<rightarrow>\\<^sub>E B) = card B ^ card A", "obtain enum where \"bij_betw enum {0..<card A} A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>enum.\n        bij_betw enum {0..<card A} A \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<open>finite A\\<close> ex_bij_betw_nat_finite"], ["proof (prove)\nusing this:\n  finite A\n  finite ?M \\<Longrightarrow> \\<exists>h. bij_betw h {0..<card ?M} ?M\n\ngoal (1 subgoal):\n 1. (\\<And>enum.\n        bij_betw enum {0..<card A} A \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. card (A \\<rightarrow>\\<^sub>E B) = card B ^ card A", "have \"bij_betw (sequence_of A enum) (A \\<rightarrow>\\<^sub>E B) {xs. set xs \\<subseteq> B \\<and> length xs = card A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (sequence_of A enum) (A \\<rightarrow>\\<^sub>E B)\n     {xs. set xs \\<subseteq> B \\<and> length xs = card A}", "using \\<open>bij_betw enum {0..<card A} A\\<close>"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. bij_betw (sequence_of A enum) (A \\<rightarrow>\\<^sub>E B)\n     {xs. set xs \\<subseteq> B \\<and> length xs = card A}", "by (rule bij_betw_sequence_of)"], ["proof (state)\nthis:\n  bij_betw (sequence_of A enum) (A \\<rightarrow>\\<^sub>E B)\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n\ngoal (1 subgoal):\n 1. card (A \\<rightarrow>\\<^sub>E B) = card B ^ card A", "from this"], ["proof (chain)\npicking this:\n  bij_betw (sequence_of A enum) (A \\<rightarrow>\\<^sub>E B)\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A}", "have \"card (A \\<rightarrow>\\<^sub>E B) = card {xs. set xs \\<subseteq> B \\<and> length xs = card A}\""], ["proof (prove)\nusing this:\n  bij_betw (sequence_of A enum) (A \\<rightarrow>\\<^sub>E B)\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n\ngoal (1 subgoal):\n 1. card (A \\<rightarrow>\\<^sub>E B) =\n    card {xs. set xs \\<subseteq> B \\<and> length xs = card A}", "by (rule bij_betw_same_card)"], ["proof (state)\nthis:\n  card (A \\<rightarrow>\\<^sub>E B) =\n  card {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n\ngoal (1 subgoal):\n 1. card (A \\<rightarrow>\\<^sub>E B) = card B ^ card A", "also"], ["proof (state)\nthis:\n  card (A \\<rightarrow>\\<^sub>E B) =\n  card {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n\ngoal (1 subgoal):\n 1. card (A \\<rightarrow>\\<^sub>E B) = card B ^ card A", "have \"card {xs. set xs \\<subseteq> B \\<and> length xs = card A} = card B ^ card A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {xs. set xs \\<subseteq> B \\<and> length xs = card A} =\n    card B ^ card A", "by (rule card_lists_length_eq)"], ["proof (state)\nthis:\n  card {xs. set xs \\<subseteq> B \\<and> length xs = card A} =\n  card B ^ card A\n\ngoal (1 subgoal):\n 1. card (A \\<rightarrow>\\<^sub>E B) = card B ^ card A", "finally"], ["proof (chain)\npicking this:\n  card (A \\<rightarrow>\\<^sub>E B) = card B ^ card A", "show ?thesis"], ["proof (prove)\nusing this:\n  card (A \\<rightarrow>\\<^sub>E B) = card B ^ card A\n\ngoal (1 subgoal):\n 1. card (A \\<rightarrow>\\<^sub>E B) = card B ^ card A", "."], ["proof (state)\nthis:\n  card (A \\<rightarrow>\\<^sub>E B) = card B ^ card A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_sequences:\n  assumes \"finite A\"\n  shows \"card {xs. set xs \\<subseteq> B \\<and> length xs = card A} = card B ^ card A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {xs. set xs \\<subseteq> B \\<and> length xs = card A} =\n    card B ^ card A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {xs. set xs \\<subseteq> B \\<and> length xs = card A} =\n    card B ^ card A", "obtain enum where \"bij_betw enum {0..<card A} A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>enum.\n        bij_betw enum {0..<card A} A \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<open>finite A\\<close> ex_bij_betw_nat_finite"], ["proof (prove)\nusing this:\n  finite A\n  finite ?M \\<Longrightarrow> \\<exists>h. bij_betw h {0..<card ?M} ?M\n\ngoal (1 subgoal):\n 1. (\\<And>enum.\n        bij_betw enum {0..<card A} A \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. card {xs. set xs \\<subseteq> B \\<and> length xs = card A} =\n    card B ^ card A", "have \"bij_betw (function_of A enum) {xs. set xs \\<subseteq> B \\<and> length xs = card A} (A \\<rightarrow>\\<^sub>E B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (function_of A enum)\n     {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n     (A \\<rightarrow>\\<^sub>E B)", "using \\<open>bij_betw enum {0..<card A} A\\<close>"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. bij_betw (function_of A enum)\n     {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n     (A \\<rightarrow>\\<^sub>E B)", "by (rule bij_betw_function_of)"], ["proof (state)\nthis:\n  bij_betw (function_of A enum)\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n   (A \\<rightarrow>\\<^sub>E B)\n\ngoal (1 subgoal):\n 1. card {xs. set xs \\<subseteq> B \\<and> length xs = card A} =\n    card B ^ card A", "from this"], ["proof (chain)\npicking this:\n  bij_betw (function_of A enum)\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n   (A \\<rightarrow>\\<^sub>E B)", "have \"card {xs. set xs \\<subseteq> B \\<and> length xs = card A} = card (A \\<rightarrow>\\<^sub>E B)\""], ["proof (prove)\nusing this:\n  bij_betw (function_of A enum)\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A}\n   (A \\<rightarrow>\\<^sub>E B)\n\ngoal (1 subgoal):\n 1. card {xs. set xs \\<subseteq> B \\<and> length xs = card A} =\n    card (A \\<rightarrow>\\<^sub>E B)", "by (rule bij_betw_same_card)"], ["proof (state)\nthis:\n  card {xs. set xs \\<subseteq> B \\<and> length xs = card A} =\n  card (A \\<rightarrow>\\<^sub>E B)\n\ngoal (1 subgoal):\n 1. card {xs. set xs \\<subseteq> B \\<and> length xs = card A} =\n    card B ^ card A", "also"], ["proof (state)\nthis:\n  card {xs. set xs \\<subseteq> B \\<and> length xs = card A} =\n  card (A \\<rightarrow>\\<^sub>E B)\n\ngoal (1 subgoal):\n 1. card {xs. set xs \\<subseteq> B \\<and> length xs = card A} =\n    card B ^ card A", "have \"card (A \\<rightarrow>\\<^sub>E B) = card B ^ card A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (A \\<rightarrow>\\<^sub>E B) = card B ^ card A", "using \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. card (A \\<rightarrow>\\<^sub>E B) = card B ^ card A", "by (rule card_extensional_funcset)"], ["proof (state)\nthis:\n  card (A \\<rightarrow>\\<^sub>E B) = card B ^ card A\n\ngoal (1 subgoal):\n 1. card {xs. set xs \\<subseteq> B \\<and> length xs = card A} =\n    card B ^ card A", "finally"], ["proof (chain)\npicking this:\n  card {xs. set xs \\<subseteq> B \\<and> length xs = card A} =\n  card B ^ card A", "show ?thesis"], ["proof (prove)\nusing this:\n  card {xs. set xs \\<subseteq> B \\<and> length xs = card A} =\n  card B ^ card A\n\ngoal (1 subgoal):\n 1. card {xs. set xs \\<subseteq> B \\<and> length xs = card A} =\n    card B ^ card A", "."], ["proof (state)\nthis:\n  card {xs. set xs \\<subseteq> B \\<and> length xs = card A} =\n  card B ^ card A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  shows \"card {xs. set xs \\<subseteq> A \\<and> length xs = n} = card A ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {xs. set xs \\<subseteq> A \\<and> length xs = n} = card A ^ n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {xs. set xs \\<subseteq> A \\<and> length xs = n} = card A ^ n", "have \"card {xs. set xs \\<subseteq> A \\<and> length xs = n} = card {xs. set xs \\<subseteq> A \\<and> length xs = card {0..<n}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {xs. set xs \\<subseteq> A \\<and> length xs = n} =\n    card {xs. set xs \\<subseteq> A \\<and> length xs = card {0..<n}}", "by auto"], ["proof (state)\nthis:\n  card {xs. set xs \\<subseteq> A \\<and> length xs = n} =\n  card {xs. set xs \\<subseteq> A \\<and> length xs = card {0..<n}}\n\ngoal (1 subgoal):\n 1. card {xs. set xs \\<subseteq> A \\<and> length xs = n} = card A ^ n", "also"], ["proof (state)\nthis:\n  card {xs. set xs \\<subseteq> A \\<and> length xs = n} =\n  card {xs. set xs \\<subseteq> A \\<and> length xs = card {0..<n}}\n\ngoal (1 subgoal):\n 1. card {xs. set xs \\<subseteq> A \\<and> length xs = n} = card A ^ n", "have \"\\<dots> = card A ^ card {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {xs. set xs \\<subseteq> A \\<and> length xs = card {0..<n}} =\n    card A ^ card {0..<n}", "by (subst card_sequences) auto"], ["proof (state)\nthis:\n  card {xs. set xs \\<subseteq> A \\<and> length xs = card {0..<n}} =\n  card A ^ card {0..<n}\n\ngoal (1 subgoal):\n 1. card {xs. set xs \\<subseteq> A \\<and> length xs = n} = card A ^ n", "also"], ["proof (state)\nthis:\n  card {xs. set xs \\<subseteq> A \\<and> length xs = card {0..<n}} =\n  card A ^ card {0..<n}\n\ngoal (1 subgoal):\n 1. card {xs. set xs \\<subseteq> A \\<and> length xs = n} = card A ^ n", "have \"\\<dots> = card A ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card A ^ card {0..<n} = card A ^ n", "by auto"], ["proof (state)\nthis:\n  card A ^ card {0..<n} = card A ^ n\n\ngoal (1 subgoal):\n 1. card {xs. set xs \\<subseteq> A \\<and> length xs = n} = card A ^ n", "finally"], ["proof (chain)\npicking this:\n  card {xs. set xs \\<subseteq> A \\<and> length xs = n} = card A ^ n", "show ?thesis"], ["proof (prove)\nusing this:\n  card {xs. set xs \\<subseteq> A \\<and> length xs = n} = card A ^ n\n\ngoal (1 subgoal):\n 1. card {xs. set xs \\<subseteq> A \\<and> length xs = n} = card A ^ n", "."], ["proof (state)\nthis:\n  card {xs. set xs \\<subseteq> A \\<and> length xs = n} = card A ^ n\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}