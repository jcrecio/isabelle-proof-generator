{"file_name": "/home/qj213/afp-2021-10-22/thys/Twelvefold_Way/Twelvefold_Way_Core.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Twelvefold_Way", "problem_names": ["lemma obtain_function:\n  assumes \"finite A\"\n  assumes \"size M = card A\"\n  shows \"\\<exists>f. image_mset f (mset_set A) = M\"", "lemma obtain_function_on_ext_funcset:\n  assumes \"finite A\"\n  assumes \"size M = card A\"\n  shows \"\\<exists>f \\<in> A \\<rightarrow>\\<^sub>E set_mset M. image_mset f (mset_set A) = M\"", "lemma image_mset_eq_implies_bij_betw:\n  fixes f :: \"'a1 \\<Rightarrow> 'b\" and f' :: \"'a2 \\<Rightarrow> 'b\"\n  assumes \"finite A\" \"finite A'\"\n  assumes mset_eq: \"image_mset f (mset_set A) = image_mset f' (mset_set A')\"\n  obtains bij where \"bij_betw bij A A'\" and \"\\<forall>x\\<in>A. f x = f' (bij x)\"", "lemma image_mset_eq_implies_permutes:\n  fixes f :: \"'a \\<Rightarrow> 'b\"\n  assumes \"finite A\"\n  assumes mset_eq: \"image_mset f (mset_set A) = image_mset f' (mset_set A)\"\n  obtains p where \"p permutes A\" and \"\\<forall>x\\<in>A. f x = f' (p x)\"", "lemma obtain_function_with_partition:\n  assumes \"finite A\" \"finite B\"\n  assumes \"partition_on A P\"\n  assumes \"card P \\<le> card B\"\n  shows \"\\<exists>f \\<in> A \\<rightarrow>\\<^sub>E B. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P\"", "lemma permutes_implies_inv_image_on_eq:\n  assumes \"p permutes B\"\n  shows \"(\\<lambda>b. {x \\<in> A. p (f x) = b}) ` B = (\\<lambda>b. {x \\<in> A. f x = b}) ` B\"", "lemma the_elem:\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E B\" \"f' \\<in> A \\<rightarrow>\\<^sub>E B\"\n  assumes partitions_eq: \"(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = (\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}\"\n  assumes \"x \\<in> A\"\n  shows \"the_elem (f ` {xa \\<in> A. f' xa = f' x}) = f x\"", "lemma the_elem_eq:\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n  assumes \"b \\<in> f ` A\"\n  shows \"the_elem (f ` {x' \\<in> A. f x' = b}) = b\"", "lemma partitions_eq_implies:\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E B\" \"f' \\<in> A \\<rightarrow>\\<^sub>E B\"\n  assumes partitions_eq: \"(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = (\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}\"\n  assumes \"x \\<in> A\" \"x' \\<in> A\"\n  assumes \"f x = f x'\"\n  shows \"f' x = f' x'\"", "lemma card_domain_partitions:\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n  assumes \"finite B\"\n  shows \"card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card (f ` A)\"", "lemma partitions_eq_implies_permutes:\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E B\" \"f' \\<in> A \\<rightarrow>\\<^sub>E B\"\n  assumes \"finite B\"\n  assumes partitions_eq: \"(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = (\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}\"\n  shows \"\\<exists>p. p permutes B \\<and> (\\<forall>x\\<in>A. f x = p (f' x))\"", "lemma obtain_partition:\n  assumes \"finite A\"\n  assumes \"number_partition (card A) N\"\n  shows \"\\<exists>P. partition_on A P \\<and> image_mset card (mset_set P) = N\"", "lemma obtain_extensional_function_from_number_partition:\n  assumes \"finite A\" \"finite B\"\n  assumes \"number_partition (card A) N\"\n  assumes \"size N \\<le> card B\"\n  shows \"\\<exists>f\\<in>A \\<rightarrow>\\<^sub>E B. image_mset (\\<lambda>X. card X) (mset_set (((\\<lambda>b. {x \\<in> A. f x = b})) ` B - {{}})) = N\"", "lemma permutes_implies_multiset_of_partition_cards_eq:\n  assumes \"p\\<^sub>A permutes A\" \"p\\<^sub>B permutes B\"\n  shows \"image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B - {{}})) = image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\"", "lemma partition_implies_permutes:\n  assumes \"finite A\"\n  assumes \"partition_on A P\" \"partition_on A P'\"\n  assumes \"image_mset card (mset_set P') = image_mset card (mset_set P)\"\n  obtains p where \"p permutes A\" \"P' = (\\<lambda>X. p ` X) ` P\"", "lemma permutes_domain_partition_eq:\n  assumes \"f \\<in> A \\<rightarrow> B\"\n  assumes \"p\\<^sub>A permutes A\"\n  assumes \"b \\<in> B\"\n  shows \"p\\<^sub>A ` {x \\<in> A. f x = b} = {x \\<in> A. f (inv p\\<^sub>A x) = b}\"", "lemma image_domain_partition_eq:\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n  assumes \"p\\<^sub>A permutes A\"\n  shows \"(\\<lambda>X. p\\<^sub>A ` X) ` ((\\<lambda>b. {x \\<in> A. f x = b}) ` B) = (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\"", "lemma multiset_of_partition_cards_eq_implies_permutes:\n  assumes \"finite A\" \"finite B\" \"f \\<in> A \\<rightarrow>\\<^sub>E B\" \"f' \\<in> A \\<rightarrow>\\<^sub>E B\"\n  assumes eq: \"image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) = image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\"\n  obtains p\\<^sub>A p\\<^sub>B where \"p\\<^sub>A permutes A\" \"p\\<^sub>B permutes B\" \"\\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\"", "lemma obtain_domain_permutation_for_two_bijections:\n  assumes \"bij_betw f A B\" \"bij_betw f' A B\"\n  obtains p where \"p permutes A\" and \"\\<forall>a\\<in>A. f a = f' (p a)\"", "lemma obtain_range_permutation_for_two_bijections:\n  assumes \"bij_betw f A B\" \"bij_betw f' A B\"\n  obtains p where \"p permutes B\" and \"\\<forall>a\\<in>A. f a = p (f' a)\""], "translations": [["", "lemma obtain_function:\n  assumes \"finite A\"\n  assumes \"size M = card A\"\n  shows \"\\<exists>f. image_mset f (mset_set A) = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f. image_mset f (mset_set A) = M", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  size M = card A\n\ngoal (1 subgoal):\n 1. \\<exists>f. image_mset f (mset_set A) = M", "proof (induct arbitrary: M rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M.\n       size M = card {} \\<Longrightarrow>\n       \\<exists>f. image_mset f (mset_set {}) = M\n 2. \\<And>x F M.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>M.\n           size M = card F \\<Longrightarrow>\n           \\<exists>f. image_mset f (mset_set F) = M;\n        size M = card (insert x F)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f.\n                            image_mset f (mset_set (insert x F)) = M", "case empty"], ["proof (state)\nthis:\n  size M = card {}\n\ngoal (2 subgoals):\n 1. \\<And>M.\n       size M = card {} \\<Longrightarrow>\n       \\<exists>f. image_mset f (mset_set {}) = M\n 2. \\<And>x F M.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>M.\n           size M = card F \\<Longrightarrow>\n           \\<exists>f. image_mset f (mset_set F) = M;\n        size M = card (insert x F)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f.\n                            image_mset f (mset_set (insert x F)) = M", "from this"], ["proof (chain)\npicking this:\n  size M = card {}", "show ?case"], ["proof (prove)\nusing this:\n  size M = card {}\n\ngoal (1 subgoal):\n 1. \\<exists>f. image_mset f (mset_set {}) = M", "by simp"], ["proof (state)\nthis:\n  \\<exists>f. image_mset f (mset_set {}) = M\n\ngoal (1 subgoal):\n 1. \\<And>x F M.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>M.\n           size M = card F \\<Longrightarrow>\n           \\<exists>f. image_mset f (mset_set F) = M;\n        size M = card (insert x F)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f.\n                            image_mset f (mset_set (insert x F)) = M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F M.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>M.\n           size M = card F \\<Longrightarrow>\n           \\<exists>f. image_mset f (mset_set F) = M;\n        size M = card (insert x F)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f.\n                            image_mset f (mset_set (insert x F)) = M", "case (insert x A)"], ["proof (state)\nthis:\n  finite A\n  x \\<notin> A\n  size ?M = card A \\<Longrightarrow>\n  \\<exists>f. image_mset f (mset_set A) = ?M\n  size M = card (insert x A)\n\ngoal (1 subgoal):\n 1. \\<And>x F M.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>M.\n           size M = card F \\<Longrightarrow>\n           \\<exists>f. image_mset f (mset_set F) = M;\n        size M = card (insert x F)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f.\n                            image_mset f (mset_set (insert x F)) = M", "from insert(1,2,4)"], ["proof (chain)\npicking this:\n  finite A\n  x \\<notin> A\n  size M = card (insert x A)", "have \"size M > 0\""], ["proof (prove)\nusing this:\n  finite A\n  x \\<notin> A\n  size M = card (insert x A)\n\ngoal (1 subgoal):\n 1. 0 < size M", "by (simp add: card_gt_0_iff)"], ["proof (state)\nthis:\n  0 < size M\n\ngoal (1 subgoal):\n 1. \\<And>x F M.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>M.\n           size M = card F \\<Longrightarrow>\n           \\<exists>f. image_mset f (mset_set F) = M;\n        size M = card (insert x F)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f.\n                            image_mset f (mset_set (insert x F)) = M", "from this"], ["proof (chain)\npicking this:\n  0 < size M", "obtain y where \"y \\<in># M\""], ["proof (prove)\nusing this:\n  0 < size M\n\ngoal (1 subgoal):\n 1. (\\<And>y. y \\<in># M \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using gr0_implies_Suc size_eq_Suc_imp_elem"], ["proof (prove)\nusing this:\n  0 < size M\n  0 < ?n \\<Longrightarrow> \\<exists>m. ?n = Suc m\n  size ?M = Suc ?n \\<Longrightarrow> \\<exists>a. a \\<in># ?M\n\ngoal (1 subgoal):\n 1. (\\<And>y. y \\<in># M \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  y \\<in># M\n\ngoal (1 subgoal):\n 1. \\<And>x F M.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>M.\n           size M = card F \\<Longrightarrow>\n           \\<exists>f. image_mset f (mset_set F) = M;\n        size M = card (insert x F)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f.\n                            image_mset f (mset_set (insert x F)) = M", "from insert(1,2,4) this"], ["proof (chain)\npicking this:\n  finite A\n  x \\<notin> A\n  size M = card (insert x A)\n  y \\<in># M", "have \"size (M - {#y#}) = card A\""], ["proof (prove)\nusing this:\n  finite A\n  x \\<notin> A\n  size M = card (insert x A)\n  y \\<in># M\n\ngoal (1 subgoal):\n 1. size (M - {#y#}) = card A", "by (simp add: Diff_insert_absorb card_Diff_singleton_if insertI1 size_Diff_submset)"], ["proof (state)\nthis:\n  size (M - {#y#}) = card A\n\ngoal (1 subgoal):\n 1. \\<And>x F M.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>M.\n           size M = card F \\<Longrightarrow>\n           \\<exists>f. image_mset f (mset_set F) = M;\n        size M = card (insert x F)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f.\n                            image_mset f (mset_set (insert x F)) = M", "from insert.hyps this"], ["proof (chain)\npicking this:\n  finite A\n  x \\<notin> A\n  size ?M = card A \\<Longrightarrow>\n  \\<exists>f. image_mset f (mset_set A) = ?M\n  size (M - {#y#}) = card A", "obtain f' where \"image_mset f' (mset_set A) = M - {#y#}\""], ["proof (prove)\nusing this:\n  finite A\n  x \\<notin> A\n  size ?M = card A \\<Longrightarrow>\n  \\<exists>f. image_mset f (mset_set A) = ?M\n  size (M - {#y#}) = card A\n\ngoal (1 subgoal):\n 1. (\\<And>f'.\n        image_mset f' (mset_set A) = M - {#y#} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  image_mset f' (mset_set A) = M - {#y#}\n\ngoal (1 subgoal):\n 1. \\<And>x F M.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>M.\n           size M = card F \\<Longrightarrow>\n           \\<exists>f. image_mset f (mset_set F) = M;\n        size M = card (insert x F)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f.\n                            image_mset f (mset_set (insert x F)) = M", "from this"], ["proof (chain)\npicking this:\n  image_mset f' (mset_set A) = M - {#y#}", "have \"image_mset (f'(x := y)) (mset_set (insert x A)) = M\""], ["proof (prove)\nusing this:\n  image_mset f' (mset_set A) = M - {#y#}\n\ngoal (1 subgoal):\n 1. image_mset (f'(x := y)) (mset_set (insert x A)) = M", "using \\<open>finite A\\<close> \\<open>x \\<notin> A\\<close> \\<open>y \\<in># M\\<close>"], ["proof (prove)\nusing this:\n  image_mset f' (mset_set A) = M - {#y#}\n  finite A\n  x \\<notin> A\n  y \\<in># M\n\ngoal (1 subgoal):\n 1. image_mset (f'(x := y)) (mset_set (insert x A)) = M", "by (simp add: image_mset_fun_upd)"], ["proof (state)\nthis:\n  image_mset (f'(x := y)) (mset_set (insert x A)) = M\n\ngoal (1 subgoal):\n 1. \\<And>x F M.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>M.\n           size M = card F \\<Longrightarrow>\n           \\<exists>f. image_mset f (mset_set F) = M;\n        size M = card (insert x F)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f.\n                            image_mset f (mset_set (insert x F)) = M", "from this"], ["proof (chain)\npicking this:\n  image_mset (f'(x := y)) (mset_set (insert x A)) = M", "show ?case"], ["proof (prove)\nusing this:\n  image_mset (f'(x := y)) (mset_set (insert x A)) = M\n\ngoal (1 subgoal):\n 1. \\<exists>f. image_mset f (mset_set (insert x A)) = M", "by blast"], ["proof (state)\nthis:\n  \\<exists>f. image_mset f (mset_set (insert x A)) = M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma obtain_function_on_ext_funcset:\n  assumes \"finite A\"\n  assumes \"size M = card A\"\n  shows \"\\<exists>f \\<in> A \\<rightarrow>\\<^sub>E set_mset M. image_mset f (mset_set A) = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E set_mset M.\n       image_mset f (mset_set A) = M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E set_mset M.\n       image_mset f (mset_set A) = M", "obtain f where range_eq_M: \"image_mset f (mset_set A) = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        image_mset f (mset_set A) = M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using obtain_function \\<open>finite A\\<close> \\<open>size M = card A\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; size ?M = card ?A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>f. image_mset f (mset_set ?A) = ?M\n  finite A\n  size M = card A\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        image_mset f (mset_set A) = M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  image_mset f (mset_set A) = M\n\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E set_mset M.\n       image_mset f (mset_set A) = M", "let ?f = \"\\<lambda>x. if x \\<in> A then f x else undefined\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E set_mset M.\n       image_mset f (mset_set A) = M", "have \"?f \\<in> A \\<rightarrow>\\<^sub>E set_mset M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. if x \\<in> A then f x else undefined)\n    \\<in> A \\<rightarrow>\\<^sub>E set_mset M", "using range_eq_M \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  image_mset f (mset_set A) = M\n  finite A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. if x \\<in> A then f x else undefined)\n    \\<in> A \\<rightarrow>\\<^sub>E set_mset M", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. if x \\<in> A then f x else undefined)\n  \\<in> A \\<rightarrow>\\<^sub>E set_mset M\n\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E set_mset M.\n       image_mset f (mset_set A) = M", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>x. if x \\<in> A then f x else undefined)\n  \\<in> A \\<rightarrow>\\<^sub>E set_mset M\n\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E set_mset M.\n       image_mset f (mset_set A) = M", "have \"image_mset ?f (mset_set A) = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {#if x \\<in> A then f x else undefined. x \\<in># mset_set A#} = M", "using range_eq_M \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  image_mset f (mset_set A) = M\n  finite A\n\ngoal (1 subgoal):\n 1. {#if x \\<in> A then f x else undefined. x \\<in># mset_set A#} = M", "by (auto intro: multiset.map_cong0)"], ["proof (state)\nthis:\n  {#if x \\<in> A then f x else undefined. x \\<in># mset_set A#} = M\n\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E set_mset M.\n       image_mset f (mset_set A) = M", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>x. if x \\<in> A then f x else undefined)\n  \\<in> A \\<rightarrow>\\<^sub>E set_mset M\n  {#if x \\<in> A then f x else undefined. x \\<in># mset_set A#} = M", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. if x \\<in> A then f x else undefined)\n  \\<in> A \\<rightarrow>\\<^sub>E set_mset M\n  {#if x \\<in> A then f x else undefined. x \\<in># mset_set A#} = M\n\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E set_mset M.\n       image_mset f (mset_set A) = M", "by auto"], ["proof (state)\nthis:\n  \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E set_mset M.\n     image_mset f (mset_set A) = M\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Existence of Permutation\\<close>"], ["", "lemma image_mset_eq_implies_bij_betw:\n  fixes f :: \"'a1 \\<Rightarrow> 'b\" and f' :: \"'a2 \\<Rightarrow> 'b\"\n  assumes \"finite A\" \"finite A'\"\n  assumes mset_eq: \"image_mset f (mset_set A) = image_mset f' (mset_set A')\"\n  obtains bij where \"bij_betw bij A A'\" and \"\\<forall>x\\<in>A. f x = f' (bij x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>bij.\n        \\<lbrakk>bij_betw bij A A';\n         \\<forall>x\\<in>A. f x = f' (bij x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>bij.\n        \\<lbrakk>bij_betw bij A A';\n         \\<forall>x\\<in>A. f x = f' (bij x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>finite A\\<close>"], ["proof (chain)\npicking this:\n  finite A", "have [simp]: \"finite {a \\<in> A. f a = (b::'b)}\" for b"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. finite {a \\<in> A. f a = b}", "by auto"], ["proof (state)\nthis:\n  finite {a \\<in> A. f a = ?b}\n\ngoal (1 subgoal):\n 1. (\\<And>bij.\n        \\<lbrakk>bij_betw bij A A';\n         \\<forall>x\\<in>A. f x = f' (bij x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>finite A'\\<close>"], ["proof (chain)\npicking this:\n  finite A'", "have [simp]: \"finite {a \\<in> A'. f' a = (b::'b)}\" for b"], ["proof (prove)\nusing this:\n  finite A'\n\ngoal (1 subgoal):\n 1. finite {a \\<in> A'. f' a = b}", "by auto"], ["proof (state)\nthis:\n  finite {a \\<in> A'. f' a = ?b}\n\ngoal (1 subgoal):\n 1. (\\<And>bij.\n        \\<lbrakk>bij_betw bij A A';\n         \\<forall>x\\<in>A. f x = f' (bij x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"f ` A = f' ` A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` A = f' ` A'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f ` A = f' ` A'", "have \"f ` A = f ` (set_mset (mset_set A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` A = f ` set_mset (mset_set A)", "using \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. f ` A = f ` set_mset (mset_set A)", "by simp"], ["proof (state)\nthis:\n  f ` A = f ` set_mset (mset_set A)\n\ngoal (1 subgoal):\n 1. f ` A = f' ` A'", "also"], ["proof (state)\nthis:\n  f ` A = f ` set_mset (mset_set A)\n\ngoal (1 subgoal):\n 1. f ` A = f' ` A'", "have \"\\<dots> = f' ` (set_mset (mset_set A'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` set_mset (mset_set A) = f' ` set_mset (mset_set A')", "by (metis mset_eq multiset.set_map)"], ["proof (state)\nthis:\n  f ` set_mset (mset_set A) = f' ` set_mset (mset_set A')\n\ngoal (1 subgoal):\n 1. f ` A = f' ` A'", "also"], ["proof (state)\nthis:\n  f ` set_mset (mset_set A) = f' ` set_mset (mset_set A')\n\ngoal (1 subgoal):\n 1. f ` A = f' ` A'", "have \"\\<dots> = f' ` A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f' ` set_mset (mset_set A') = f' ` A'", "using \\<open>finite A'\\<close>"], ["proof (prove)\nusing this:\n  finite A'\n\ngoal (1 subgoal):\n 1. f' ` set_mset (mset_set A') = f' ` A'", "by simp"], ["proof (state)\nthis:\n  f' ` set_mset (mset_set A') = f' ` A'\n\ngoal (1 subgoal):\n 1. f ` A = f' ` A'", "finally"], ["proof (chain)\npicking this:\n  f ` A = f' ` A'", "show ?thesis"], ["proof (prove)\nusing this:\n  f ` A = f' ` A'\n\ngoal (1 subgoal):\n 1. f ` A = f' ` A'", "."], ["proof (state)\nthis:\n  f ` A = f' ` A'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f ` A = f' ` A'\n\ngoal (1 subgoal):\n 1. (\\<And>bij.\n        \\<lbrakk>bij_betw bij A A';\n         \\<forall>x\\<in>A. f x = f' (bij x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<forall>b\\<in>(f ` A). \\<exists>bij. bij_betw bij {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>b\\<in>f ` A.\n       \\<exists>bij.\n          bij_betw bij {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> f ` A \\<Longrightarrow>\n       \\<exists>bij.\n          bij_betw bij {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> f ` A \\<Longrightarrow>\n       \\<exists>bij.\n          bij_betw bij {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}", "from mset_eq"], ["proof (chain)\npicking this:\n  image_mset f (mset_set A) = image_mset f' (mset_set A')", "have\n      \"count (image_mset f (mset_set A)) b = count (image_mset f' (mset_set A')) b\""], ["proof (prove)\nusing this:\n  image_mset f (mset_set A) = image_mset f' (mset_set A')\n\ngoal (1 subgoal):\n 1. count (image_mset f (mset_set A)) b =\n    count (image_mset f' (mset_set A')) b", "by simp"], ["proof (state)\nthis:\n  count (image_mset f (mset_set A)) b =\n  count (image_mset f' (mset_set A')) b\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> f ` A \\<Longrightarrow>\n       \\<exists>bij.\n          bij_betw bij {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}", "from this"], ["proof (chain)\npicking this:\n  count (image_mset f (mset_set A)) b =\n  count (image_mset f' (mset_set A')) b", "have \"card {a \\<in> A. f a = b} = card {a \\<in> A'. f' a = b}\""], ["proof (prove)\nusing this:\n  count (image_mset f (mset_set A)) b =\n  count (image_mset f' (mset_set A')) b\n\ngoal (1 subgoal):\n 1. card {a \\<in> A. f a = b} = card {a \\<in> A'. f' a = b}", "using \\<open>finite A\\<close> \\<open>finite A'\\<close>"], ["proof (prove)\nusing this:\n  count (image_mset f (mset_set A)) b =\n  count (image_mset f' (mset_set A')) b\n  finite A\n  finite A'\n\ngoal (1 subgoal):\n 1. card {a \\<in> A. f a = b} = card {a \\<in> A'. f' a = b}", "by (simp add: count_image_mset_eq_card_vimage)"], ["proof (state)\nthis:\n  card {a \\<in> A. f a = b} = card {a \\<in> A'. f' a = b}\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> f ` A \\<Longrightarrow>\n       \\<exists>bij.\n          bij_betw bij {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}", "from this"], ["proof (chain)\npicking this:\n  card {a \\<in> A. f a = b} = card {a \\<in> A'. f' a = b}", "show \"\\<exists>bij. bij_betw bij {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}\""], ["proof (prove)\nusing this:\n  card {a \\<in> A. f a = b} = card {a \\<in> A'. f' a = b}\n\ngoal (1 subgoal):\n 1. \\<exists>bij. bij_betw bij {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}", "by (intro finite_same_card_bij) simp_all"], ["proof (state)\nthis:\n  \\<exists>bij. bij_betw bij {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>b\\<in>f ` A.\n     \\<exists>bij. bij_betw bij {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}\n\ngoal (1 subgoal):\n 1. (\\<And>bij.\n        \\<lbrakk>bij_betw bij A A';\n         \\<forall>x\\<in>A. f x = f' (bij x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"\\<exists>bij. \\<forall>b\\<in>f ` A. bij_betw (bij b) {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}\""], ["proof (prove)\nusing this:\n  \\<forall>b\\<in>f ` A.\n     \\<exists>bij. bij_betw bij {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}\n\ngoal (1 subgoal):\n 1. \\<exists>bij.\n       \\<forall>b\\<in>f ` A.\n          bij_betw (bij b) {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}", "by (rule bchoice)"], ["proof (state)\nthis:\n  \\<exists>bij.\n     \\<forall>b\\<in>f ` A.\n        bij_betw (bij b) {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}\n\ngoal (1 subgoal):\n 1. (\\<And>bij.\n        \\<lbrakk>bij_betw bij A A';\n         \\<forall>x\\<in>A. f x = f' (bij x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>bij.\n     \\<forall>b\\<in>f ` A.\n        bij_betw (bij b) {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}", "guess bij"], ["proof (prove)\nusing this:\n  \\<exists>bij.\n     \\<forall>b\\<in>f ` A.\n        bij_betw (bij b) {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  \\<forall>b\\<in>f ` A.\n     bij_betw (bij b) {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}\n\ngoal (1 subgoal):\n 1. (\\<And>bij.\n        \\<lbrakk>bij_betw bij A A';\n         \\<forall>x\\<in>A. f x = f' (bij x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note bij = this"], ["proof (state)\nthis:\n  \\<forall>b\\<in>f ` A.\n     bij_betw (bij b) {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}\n\ngoal (1 subgoal):\n 1. (\\<And>bij.\n        \\<lbrakk>bij_betw bij A A';\n         \\<forall>x\\<in>A. f x = f' (bij x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define bij' where \"bij' = (\\<lambda>a. bij (f a) a)\""], ["proof (state)\nthis:\n  bij' = (\\<lambda>a. bij (f a) a)\n\ngoal (1 subgoal):\n 1. (\\<And>bij.\n        \\<lbrakk>bij_betw bij A A';\n         \\<forall>x\\<in>A. f x = f' (bij x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"bij_betw bij' A A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw bij' A A'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. bij_betw bij' A A'", "have \"disjoint_family_on (\\<lambda>i. {a \\<in> A'. f' a = i}) (f ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disjoint_family_on (\\<lambda>i. {a \\<in> A'. f' a = i}) (f ` A)", "unfolding disjoint_family_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m\\<in>f ` A.\n       \\<forall>n\\<in>f ` A.\n          m \\<noteq> n \\<longrightarrow>\n          {a \\<in> A'. f' a = m} \\<inter> {a \\<in> A'. f' a = n} = {}", "by auto"], ["proof (state)\nthis:\n  disjoint_family_on (\\<lambda>i. {a \\<in> A'. f' a = i}) (f ` A)\n\ngoal (1 subgoal):\n 1. bij_betw bij' A A'", "moreover"], ["proof (state)\nthis:\n  disjoint_family_on (\\<lambda>i. {a \\<in> A'. f' a = i}) (f ` A)\n\ngoal (1 subgoal):\n 1. bij_betw bij' A A'", "have \"bij_betw (\\<lambda>a. bij (f a) a) {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}\" if b: \"b \\<in> f ` A\" for b"], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>a. bij (f a) a) {a \\<in> A. f a = b}\n     {a \\<in> A'. f' a = b}", "using bij b"], ["proof (prove)\nusing this:\n  \\<forall>b\\<in>f ` A.\n     bij_betw (bij b) {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}\n  b \\<in> f ` A\n\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>a. bij (f a) a) {a \\<in> A. f a = b}\n     {a \\<in> A'. f' a = b}", "by (subst bij_betw_cong[where g=\"bij b\"]) auto"], ["proof (state)\nthis:\n  ?b \\<in> f ` A \\<Longrightarrow>\n  bij_betw (\\<lambda>a. bij (f a) a) {a \\<in> A. f a = ?b}\n   {a \\<in> A'. f' a = ?b}\n\ngoal (1 subgoal):\n 1. bij_betw bij' A A'", "ultimately"], ["proof (chain)\npicking this:\n  disjoint_family_on (\\<lambda>i. {a \\<in> A'. f' a = i}) (f ` A)\n  ?b \\<in> f ` A \\<Longrightarrow>\n  bij_betw (\\<lambda>a. bij (f a) a) {a \\<in> A. f a = ?b}\n   {a \\<in> A'. f' a = ?b}", "have \"bij_betw (\\<lambda>a. bij (f a) a) (\\<Union>b\\<in>f ` A. {a \\<in> A. f a = b}) (\\<Union>b\\<in>f ` A. {a \\<in> A'. f' a = b})\""], ["proof (prove)\nusing this:\n  disjoint_family_on (\\<lambda>i. {a \\<in> A'. f' a = i}) (f ` A)\n  ?b \\<in> f ` A \\<Longrightarrow>\n  bij_betw (\\<lambda>a. bij (f a) a) {a \\<in> A. f a = ?b}\n   {a \\<in> A'. f' a = ?b}\n\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>a. bij (f a) a)\n     (\\<Union>b\\<in>f ` A. {a \\<in> A. f a = b})\n     (\\<Union>b\\<in>f ` A. {a \\<in> A'. f' a = b})", "by (rule bij_betw_UNION_disjoint)"], ["proof (state)\nthis:\n  bij_betw (\\<lambda>a. bij (f a) a)\n   (\\<Union>b\\<in>f ` A. {a \\<in> A. f a = b})\n   (\\<Union>b\\<in>f ` A. {a \\<in> A'. f' a = b})\n\ngoal (1 subgoal):\n 1. bij_betw bij' A A'", "moreover"], ["proof (state)\nthis:\n  bij_betw (\\<lambda>a. bij (f a) a)\n   (\\<Union>b\\<in>f ` A. {a \\<in> A. f a = b})\n   (\\<Union>b\\<in>f ` A. {a \\<in> A'. f' a = b})\n\ngoal (1 subgoal):\n 1. bij_betw bij' A A'", "have \"(\\<Union>b\\<in>f ` A. {a \\<in> A. f a = b}) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>b\\<in>f ` A. {a \\<in> A. f a = b}) = A", "by auto"], ["proof (state)\nthis:\n  (\\<Union>b\\<in>f ` A. {a \\<in> A. f a = b}) = A\n\ngoal (1 subgoal):\n 1. bij_betw bij' A A'", "moreover"], ["proof (state)\nthis:\n  (\\<Union>b\\<in>f ` A. {a \\<in> A. f a = b}) = A\n\ngoal (1 subgoal):\n 1. bij_betw bij' A A'", "have \"(\\<Union>b\\<in>f ` A. {a \\<in> A'. f' a = b}) = A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>b\\<in>f ` A. {a \\<in> A'. f' a = b}) = A'", "using \\<open>f ` A = f' ` A'\\<close>"], ["proof (prove)\nusing this:\n  f ` A = f' ` A'\n\ngoal (1 subgoal):\n 1. (\\<Union>b\\<in>f ` A. {a \\<in> A'. f' a = b}) = A'", "by auto"], ["proof (state)\nthis:\n  (\\<Union>b\\<in>f ` A. {a \\<in> A'. f' a = b}) = A'\n\ngoal (1 subgoal):\n 1. bij_betw bij' A A'", "ultimately"], ["proof (chain)\npicking this:\n  bij_betw (\\<lambda>a. bij (f a) a)\n   (\\<Union>b\\<in>f ` A. {a \\<in> A. f a = b})\n   (\\<Union>b\\<in>f ` A. {a \\<in> A'. f' a = b})\n  (\\<Union>b\\<in>f ` A. {a \\<in> A. f a = b}) = A\n  (\\<Union>b\\<in>f ` A. {a \\<in> A'. f' a = b}) = A'", "show \"bij_betw bij' A A'\""], ["proof (prove)\nusing this:\n  bij_betw (\\<lambda>a. bij (f a) a)\n   (\\<Union>b\\<in>f ` A. {a \\<in> A. f a = b})\n   (\\<Union>b\\<in>f ` A. {a \\<in> A'. f' a = b})\n  (\\<Union>b\\<in>f ` A. {a \\<in> A. f a = b}) = A\n  (\\<Union>b\\<in>f ` A. {a \\<in> A'. f' a = b}) = A'\n\ngoal (1 subgoal):\n 1. bij_betw bij' A A'", "unfolding bij'_def"], ["proof (prove)\nusing this:\n  bij_betw (\\<lambda>a. bij (f a) a)\n   (\\<Union>b\\<in>f ` A. {a \\<in> A. f a = b})\n   (\\<Union>b\\<in>f ` A. {a \\<in> A'. f' a = b})\n  (\\<Union>b\\<in>f ` A. {a \\<in> A. f a = b}) = A\n  (\\<Union>b\\<in>f ` A. {a \\<in> A'. f' a = b}) = A'\n\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>a. bij (f a) a) A A'", "by (subst bij_betw_cong[where g=\"(\\<lambda>a. bij (f a) a)\"]) auto"], ["proof (state)\nthis:\n  bij_betw bij' A A'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bij_betw bij' A A'\n\ngoal (1 subgoal):\n 1. (\\<And>bij.\n        \\<lbrakk>bij_betw bij A A';\n         \\<forall>x\\<in>A. f x = f' (bij x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  bij_betw bij' A A'\n\ngoal (1 subgoal):\n 1. (\\<And>bij.\n        \\<lbrakk>bij_betw bij A A';\n         \\<forall>x\\<in>A. f x = f' (bij x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from bij"], ["proof (chain)\npicking this:\n  \\<forall>b\\<in>f ` A.\n     bij_betw (bij b) {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}", "have \"\\<forall>x\\<in>A. f x = f' (bij' x)\""], ["proof (prove)\nusing this:\n  \\<forall>b\\<in>f ` A.\n     bij_betw (bij b) {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A. f x = f' (bij' x)", "unfolding bij'_def"], ["proof (prove)\nusing this:\n  \\<forall>b\\<in>f ` A.\n     bij_betw (bij b) {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A. f x = f' (bij (f x) x)", "using bij_betwE"], ["proof (prove)\nusing this:\n  \\<forall>b\\<in>f ` A.\n     bij_betw (bij b) {a \\<in> A. f a = b} {a \\<in> A'. f' a = b}\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A. f x = f' (bij (f x) x)", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>x\\<in>A. f x = f' (bij' x)\n\ngoal (1 subgoal):\n 1. (\\<And>bij.\n        \\<lbrakk>bij_betw bij A A';\n         \\<forall>x\\<in>A. f x = f' (bij x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  bij_betw bij' A A'\n  \\<forall>x\\<in>A. f x = f' (bij' x)", "show ?thesis"], ["proof (prove)\nusing this:\n  bij_betw bij' A A'\n  \\<forall>x\\<in>A. f x = f' (bij' x)\n\ngoal (1 subgoal):\n 1. thesis", "by (rule that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma image_mset_eq_implies_permutes:\n  fixes f :: \"'a \\<Rightarrow> 'b\"\n  assumes \"finite A\"\n  assumes mset_eq: \"image_mset f (mset_set A) = image_mset f' (mset_set A)\"\n  obtains p where \"p permutes A\" and \"\\<forall>x\\<in>A. f x = f' (p x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; \\<forall>x\\<in>A. f x = f' (p x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; \\<forall>x\\<in>A. f x = f' (p x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  finite A\n  image_mset f (mset_set A) = image_mset f' (mset_set A)", "obtain b where \"bij_betw b A A\" and \"\\<forall>x\\<in>A. f x = f' (b x)\""], ["proof (prove)\nusing this:\n  finite A\n  image_mset f (mset_set A) = image_mset f' (mset_set A)\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>bij_betw b A A; \\<forall>x\\<in>A. f x = f' (b x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using image_mset_eq_implies_bij_betw"], ["proof (prove)\nusing this:\n  finite A\n  image_mset f (mset_set A) = image_mset f' (mset_set A)\n  \\<lbrakk>finite ?A; finite ?A';\n   image_mset ?f (mset_set ?A) = image_mset ?f' (mset_set ?A');\n   \\<And>bij.\n      \\<lbrakk>bij_betw bij ?A ?A';\n       \\<forall>x\\<in>?A. ?f x = ?f' (bij x)\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>bij_betw b A A; \\<forall>x\\<in>A. f x = f' (b x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  bij_betw b A A\n  \\<forall>x\\<in>A. f x = f' (b x)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; \\<forall>x\\<in>A. f x = f' (p x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define p where \"p = (\\<lambda>a. if a \\<in> A then b a else a)\""], ["proof (state)\nthis:\n  p = (\\<lambda>a. if a \\<in> A then b a else a)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; \\<forall>x\\<in>A. f x = f' (p x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"p permutes A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p permutes A", "proof (rule bij_imp_permutes)"], ["proof (state)\ngoal (2 subgoals):\n 1. bij_betw p A A\n 2. \\<And>x. x \\<notin> A \\<Longrightarrow> p x = x", "show \"bij_betw p A A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw p A A", "unfolding p_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>a. if a \\<in> A then b a else a) A A", "by (simp add: \\<open>bij_betw b A A\\<close> bij_betw_cong)"], ["proof (state)\nthis:\n  bij_betw p A A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<notin> A \\<Longrightarrow> p x = x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<notin> A \\<Longrightarrow> p x = x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<notin> A \\<Longrightarrow> p x = x", "assume \"x \\<notin> A\""], ["proof (state)\nthis:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<notin> A \\<Longrightarrow> p x = x", "from this"], ["proof (chain)\npicking this:\n  x \\<notin> A", "show \"p x = x\""], ["proof (prove)\nusing this:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. p x = x", "unfolding p_def"], ["proof (prove)\nusing this:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. (if x \\<in> A then b x else x) = x", "by simp"], ["proof (state)\nthis:\n  p x = x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p permutes A\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; \\<forall>x\\<in>A. f x = f' (p x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  p permutes A\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; \\<forall>x\\<in>A. f x = f' (p x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>\\<forall>x\\<in>A. f x = f' (b x)\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>A. f x = f' (b x)", "have \"\\<forall>x\\<in>A. f x = f' (p x)\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A. f x = f' (b x)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A. f x = f' (p x)", "unfolding p_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A. f x = f' (b x)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A. f x = f' (if x \\<in> A then b x else x)", "by simp"], ["proof (state)\nthis:\n  \\<forall>x\\<in>A. f x = f' (p x)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; \\<forall>x\\<in>A. f x = f' (p x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  p permutes A\n  \\<forall>x\\<in>A. f x = f' (p x)", "show ?thesis"], ["proof (prove)\nusing this:\n  p permutes A\n  \\<forall>x\\<in>A. f x = f' (p x)\n\ngoal (1 subgoal):\n 1. thesis", "by (rule that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Domain Partition\\<close>"], ["", "subsubsection \\<open>Existence of a Suitable Finite Function\\<close>"], ["", "lemma obtain_function_with_partition:\n  assumes \"finite A\" \"finite B\"\n  assumes \"partition_on A P\"\n  assumes \"card P \\<le> card B\"\n  shows \"\\<exists>f \\<in> A \\<rightarrow>\\<^sub>E B. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E B.\n       (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E B.\n       (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P", "obtain g' where \"bij_betw g' P (g' ` P)\" and \"g' ` P \\<subseteq> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g'.\n        \\<lbrakk>bij_betw g' P (g' ` P); g' ` P \\<subseteq> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson assms card_le_inj finite_elements inj_on_imp_bij_betw)"], ["proof (state)\nthis:\n  bij_betw g' P (g' ` P)\n  g' ` P \\<subseteq> B\n\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E B.\n       (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P", "define f where \"\\<And>a. f a = (if a \\<in> A then g' (THE X. a \\<in> X \\<and> X \\<in> P) else undefined)\""], ["proof (state)\nthis:\n  f ?a =\n  (if ?a \\<in> A then g' (THE X. ?a \\<in> X \\<and> X \\<in> P)\n   else undefined)\n\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E B.\n       (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P", "have \"f \\<in> A \\<rightarrow>\\<^sub>E B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> A \\<rightarrow>\\<^sub>E B", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a.\n        if a \\<in> A then g' (THE X. a \\<in> X \\<and> X \\<in> P)\n        else undefined)\n    \\<in> A \\<rightarrow>\\<^sub>E B", "using \\<open>g' ` P \\<subseteq> B\\<close> assms(3) partition_on_the_part_mem"], ["proof (prove)\nusing this:\n  g' ` P \\<subseteq> B\n  partition_on A P\n  \\<lbrakk>partition_on ?A ?P; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> (THE X. ?x \\<in> X \\<and> X \\<in> ?P) \\<in> ?P\n\ngoal (1 subgoal):\n 1. (\\<lambda>a.\n        if a \\<in> A then g' (THE X. a \\<in> X \\<and> X \\<in> P)\n        else undefined)\n    \\<in> A \\<rightarrow>\\<^sub>E B", "by fastforce"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E B.\n       (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P", "moreover"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E B.\n       (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P", "have \"(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} \\<subseteq> P\n 2. P \\<subseteq> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "show \"(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} \\<subseteq> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} \\<subseteq> P", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n               {{}} \\<Longrightarrow>\n       x \\<in> P", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n               {{}} \\<Longrightarrow>\n       x \\<in> P", "assume X:\"X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\""], ["proof (state)\nthis:\n  X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n               {{}} \\<Longrightarrow>\n       x \\<in> P", "from this"], ["proof (chain)\npicking this:\n  X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "obtain b where \"b \\<in> B\" and \"X = {x' \\<in> A. f x' = b}\""], ["proof (prove)\nusing this:\n  X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in> B; X = {x' \\<in> A. f x' = b}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  b \\<in> B\n  X = {x' \\<in> A. f x' = b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n               {{}} \\<Longrightarrow>\n       x \\<in> P", "from this X"], ["proof (chain)\npicking this:\n  b \\<in> B\n  X = {x' \\<in> A. f x' = b}\n  X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "obtain a where \"a \\<in> A\" and \"a \\<in> X\" and \"f a = b\""], ["proof (prove)\nusing this:\n  b \\<in> B\n  X = {x' \\<in> A. f x' = b}\n  X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> A; a \\<in> X; f a = b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a \\<in> A\n  a \\<in> X\n  f a = b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n               {{}} \\<Longrightarrow>\n       x \\<in> P", "have \"(THE X. a \\<in> X \\<and> X \\<in> P) \\<in> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE X. a \\<in> X \\<and> X \\<in> P) \\<in> P", "using \\<open>a \\<in> A\\<close> \\<open>partition_on A P\\<close>"], ["proof (prove)\nusing this:\n  a \\<in> A\n  partition_on A P\n\ngoal (1 subgoal):\n 1. (THE X. a \\<in> X \\<and> X \\<in> P) \\<in> P", "by (simp add: partition_on_the_part_mem)"], ["proof (state)\nthis:\n  (THE X. a \\<in> X \\<and> X \\<in> P) \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n               {{}} \\<Longrightarrow>\n       x \\<in> P", "from \\<open>X = {x' \\<in> A. f x' = b}\\<close>"], ["proof (chain)\npicking this:\n  X = {x' \\<in> A. f x' = b}", "have X_eq1: \"X = {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b}\""], ["proof (prove)\nusing this:\n  X = {x' \\<in> A. f x' = b}\n\ngoal (1 subgoal):\n 1. X = {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b}", "unfolding f_def"], ["proof (prove)\nusing this:\n  X =\n  {x' \\<in> A.\n   (if x' \\<in> A then g' (THE X. x' \\<in> X \\<and> X \\<in> P)\n    else undefined) =\n   b}\n\ngoal (1 subgoal):\n 1. X = {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b}", "by auto"], ["proof (state)\nthis:\n  X = {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n               {{}} \\<Longrightarrow>\n       x \\<in> P", "also"], ["proof (state)\nthis:\n  X = {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n               {{}} \\<Longrightarrow>\n       x \\<in> P", "have \"\\<dots> = {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b} =\n    {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b} =\n    {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b} =\n    {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}", "fix x'"], ["proof (state)\ngoal (1 subgoal):\n 1. {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b} =\n    {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}", "assume \"x' \\<in> A\""], ["proof (state)\nthis:\n  x' \\<in> A\n\ngoal (1 subgoal):\n 1. {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b} =\n    {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}", "have \"(THE X. x' \\<in> X \\<and> X \\<in> P) \\<in> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE X. x' \\<in> X \\<and> X \\<in> P) \\<in> P", "using \\<open>partition_on A P\\<close> \\<open>x' \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  partition_on A P\n  x' \\<in> A\n\ngoal (1 subgoal):\n 1. (THE X. x' \\<in> X \\<and> X \\<in> P) \\<in> P", "by (simp add: partition_on_the_part_mem)"], ["proof (state)\nthis:\n  (THE X. x' \\<in> X \\<and> X \\<in> P) \\<in> P\n\ngoal (1 subgoal):\n 1. {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b} =\n    {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}", "from X_eq1 \\<open>a \\<in> X\\<close>"], ["proof (chain)\npicking this:\n  X = {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b}\n  a \\<in> X", "have \"g' (THE X. a \\<in> X \\<and> X \\<in> P) = b\""], ["proof (prove)\nusing this:\n  X = {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b}\n  a \\<in> X\n\ngoal (1 subgoal):\n 1. g' (THE X. a \\<in> X \\<and> X \\<in> P) = b", "unfolding f_def"], ["proof (prove)\nusing this:\n  X = {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b}\n  a \\<in> X\n\ngoal (1 subgoal):\n 1. g' (THE X. a \\<in> X \\<and> X \\<in> P) = b", "by auto"], ["proof (state)\nthis:\n  g' (THE X. a \\<in> X \\<and> X \\<in> P) = b\n\ngoal (1 subgoal):\n 1. {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b} =\n    {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}", "from this \\<open>(THE X. a \\<in> X \\<and> X \\<in> P) \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  g' (THE X. a \\<in> X \\<and> X \\<in> P) = b\n  (THE X. a \\<in> X \\<and> X \\<in> P) \\<in> P", "have \"b \\<in> g' ` P\""], ["proof (prove)\nusing this:\n  g' (THE X. a \\<in> X \\<and> X \\<in> P) = b\n  (THE X. a \\<in> X \\<and> X \\<in> P) \\<in> P\n\ngoal (1 subgoal):\n 1. b \\<in> g' ` P", "by auto"], ["proof (state)\nthis:\n  b \\<in> g' ` P\n\ngoal (1 subgoal):\n 1. {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b} =\n    {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}", "have \"(g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b) \\<longleftrightarrow> ((THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b) =\n    ((THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b) =\n    ((THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b)", "from \\<open>(THE X. x' \\<in> X \\<and> X \\<in> P) \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  (THE X. x' \\<in> X \\<and> X \\<in> P) \\<in> P", "have \"(g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b) \\<longleftrightarrow> (inv_into P g' (g' (THE X. x' \\<in> X \\<and> X \\<in> P)) = inv_into P g' b)\""], ["proof (prove)\nusing this:\n  (THE X. x' \\<in> X \\<and> X \\<in> P) \\<in> P\n\ngoal (1 subgoal):\n 1. (g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b) =\n    (inv_into P g' (g' (THE X. x' \\<in> X \\<and> X \\<in> P)) =\n     inv_into P g' b)", "using \\<open>b \\<in> g' ` P\\<close>"], ["proof (prove)\nusing this:\n  (THE X. x' \\<in> X \\<and> X \\<in> P) \\<in> P\n  b \\<in> g' ` P\n\ngoal (1 subgoal):\n 1. (g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b) =\n    (inv_into P g' (g' (THE X. x' \\<in> X \\<and> X \\<in> P)) =\n     inv_into P g' b)", "by (auto intro: inv_into_injective)"], ["proof (state)\nthis:\n  (g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b) =\n  (inv_into P g' (g' (THE X. x' \\<in> X \\<and> X \\<in> P)) =\n   inv_into P g' b)\n\ngoal (1 subgoal):\n 1. (g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b) =\n    ((THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b)", "moreover"], ["proof (state)\nthis:\n  (g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b) =\n  (inv_into P g' (g' (THE X. x' \\<in> X \\<and> X \\<in> P)) =\n   inv_into P g' b)\n\ngoal (1 subgoal):\n 1. (g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b) =\n    ((THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b)", "have \"inv_into P g' (g' (THE X. x' \\<in> X \\<and> X \\<in> P)) = (THE X. x' \\<in> X \\<and> X \\<in> P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_into P g' (g' (THE X. x' \\<in> X \\<and> X \\<in> P)) =\n    (THE X. x' \\<in> X \\<and> X \\<in> P)", "using \\<open>bij_betw g' P (g' ` P)\\<close> \\<open>(THE X. x' \\<in> X \\<and> X \\<in> P) \\<in> P\\<close>"], ["proof (prove)\nusing this:\n  bij_betw g' P (g' ` P)\n  (THE X. x' \\<in> X \\<and> X \\<in> P) \\<in> P\n\ngoal (1 subgoal):\n 1. inv_into P g' (g' (THE X. x' \\<in> X \\<and> X \\<in> P)) =\n    (THE X. x' \\<in> X \\<and> X \\<in> P)", "by (simp add: bij_betw_inv_into_left)"], ["proof (state)\nthis:\n  inv_into P g' (g' (THE X. x' \\<in> X \\<and> X \\<in> P)) =\n  (THE X. x' \\<in> X \\<and> X \\<in> P)\n\ngoal (1 subgoal):\n 1. (g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b) =\n    ((THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b)", "ultimately"], ["proof (chain)\npicking this:\n  (g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b) =\n  (inv_into P g' (g' (THE X. x' \\<in> X \\<and> X \\<in> P)) =\n   inv_into P g' b)\n  inv_into P g' (g' (THE X. x' \\<in> X \\<and> X \\<in> P)) =\n  (THE X. x' \\<in> X \\<and> X \\<in> P)", "show ?thesis"], ["proof (prove)\nusing this:\n  (g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b) =\n  (inv_into P g' (g' (THE X. x' \\<in> X \\<and> X \\<in> P)) =\n   inv_into P g' b)\n  inv_into P g' (g' (THE X. x' \\<in> X \\<and> X \\<in> P)) =\n  (THE X. x' \\<in> X \\<and> X \\<in> P)\n\ngoal (1 subgoal):\n 1. (g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b) =\n    ((THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b)", "by simp"], ["proof (state)\nthis:\n  (g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b) =\n  ((THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b) =\n  ((THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b)\n\ngoal (1 subgoal):\n 1. {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b} =\n    {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}", "}"], ["proof (state)\nthis:\n  ?x'2 \\<in> A \\<Longrightarrow>\n  (g' (THE X. ?x'2 \\<in> X \\<and> X \\<in> P) = b) =\n  ((THE X. ?x'2 \\<in> X \\<and> X \\<in> P) = inv_into P g' b)\n\ngoal (1 subgoal):\n 1. {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b} =\n    {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}", "from this"], ["proof (chain)\npicking this:\n  ?x'2 \\<in> A \\<Longrightarrow>\n  (g' (THE X. ?x'2 \\<in> X \\<and> X \\<in> P) = b) =\n  ((THE X. ?x'2 \\<in> X \\<and> X \\<in> P) = inv_into P g' b)", "show ?thesis"], ["proof (prove)\nusing this:\n  ?x'2 \\<in> A \\<Longrightarrow>\n  (g' (THE X. ?x'2 \\<in> X \\<and> X \\<in> P) = b) =\n  ((THE X. ?x'2 \\<in> X \\<and> X \\<in> P) = inv_into P g' b)\n\ngoal (1 subgoal):\n 1. {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b} =\n    {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}", "by auto"], ["proof (state)\nthis:\n  {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b} =\n  {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {x' \\<in> A. g' (THE X. x' \\<in> X \\<and> X \\<in> P) = b} =\n  {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n               {{}} \\<Longrightarrow>\n       x \\<in> P", "finally"], ["proof (chain)\npicking this:\n  X = {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}", "have X_eq: \"X = {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}\""], ["proof (prove)\nusing this:\n  X = {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}\n\ngoal (1 subgoal):\n 1. X = {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}", "."], ["proof (state)\nthis:\n  X = {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n               {{}} \\<Longrightarrow>\n       x \\<in> P", "moreover"], ["proof (state)\nthis:\n  X = {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n               {{}} \\<Longrightarrow>\n       x \\<in> P", "have \"inv_into P g' b \\<in> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_into P g' b \\<in> P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inv_into P g' b \\<in> P", "from X_eq"], ["proof (chain)\npicking this:\n  X = {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}", "have eq: \"inv_into P g' b = (THE X. a \\<in> X \\<and> X \\<in> P)\""], ["proof (prove)\nusing this:\n  X = {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}\n\ngoal (1 subgoal):\n 1. inv_into P g' b = (THE X. a \\<in> X \\<and> X \\<in> P)", "using \\<open>a \\<in> X\\<close> \\<open>a \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  X = {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}\n  a \\<in> X\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. inv_into P g' b = (THE X. a \\<in> X \\<and> X \\<in> P)", "by auto"], ["proof (state)\nthis:\n  inv_into P g' b = (THE X. a \\<in> X \\<and> X \\<in> P)\n\ngoal (1 subgoal):\n 1. inv_into P g' b \\<in> P", "from this"], ["proof (chain)\npicking this:\n  inv_into P g' b = (THE X. a \\<in> X \\<and> X \\<in> P)", "show ?thesis"], ["proof (prove)\nusing this:\n  inv_into P g' b = (THE X. a \\<in> X \\<and> X \\<in> P)\n\ngoal (1 subgoal):\n 1. inv_into P g' b \\<in> P", "using \\<open>(THE X. a \\<in> X \\<and> X \\<in> P) \\<in> P\\<close>"], ["proof (prove)\nusing this:\n  inv_into P g' b = (THE X. a \\<in> X \\<and> X \\<in> P)\n  (THE X. a \\<in> X \\<and> X \\<in> P) \\<in> P\n\ngoal (1 subgoal):\n 1. inv_into P g' b \\<in> P", "by simp"], ["proof (state)\nthis:\n  inv_into P g' b \\<in> P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inv_into P g' b \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n               {{}} \\<Longrightarrow>\n       x \\<in> P", "ultimately"], ["proof (chain)\npicking this:\n  X = {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}\n  inv_into P g' b \\<in> P", "have \"X = inv_into P g' b\""], ["proof (prove)\nusing this:\n  X = {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}\n  inv_into P g' b \\<in> P\n\ngoal (1 subgoal):\n 1. X = inv_into P g' b", "using partition_on_all_in_part_eq_part[OF \\<open>partition_on A P\\<close>]"], ["proof (prove)\nusing this:\n  X = {x' \\<in> A. (THE X. x' \\<in> X \\<and> X \\<in> P) = inv_into P g' b}\n  inv_into P g' b \\<in> P\n  ?X' \\<in> P \\<Longrightarrow>\n  {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = ?X'} = ?X'\n\ngoal (1 subgoal):\n 1. X = inv_into P g' b", "by blast"], ["proof (state)\nthis:\n  X = inv_into P g' b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n               {{}} \\<Longrightarrow>\n       x \\<in> P", "from this \\<open>inv_into P g' b \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  X = inv_into P g' b\n  inv_into P g' b \\<in> P", "show \"X \\<in> P\""], ["proof (prove)\nusing this:\n  X = inv_into P g' b\n  inv_into P g' b \\<in> P\n\ngoal (1 subgoal):\n 1. X \\<in> P", "by blast"], ["proof (state)\nthis:\n  X \\<in> P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} \\<subseteq> P\n\ngoal (1 subgoal):\n 1. P \\<subseteq> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<subseteq> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "show \"P \\<subseteq> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> P \\<Longrightarrow>\n       x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> P \\<Longrightarrow>\n       x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "assume \"X \\<in> P\""], ["proof (state)\nthis:\n  X \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> P \\<Longrightarrow>\n       x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "from assms(3) this"], ["proof (chain)\npicking this:\n  partition_on A P\n  X \\<in> P", "have \"X \\<noteq> {}\""], ["proof (prove)\nusing this:\n  partition_on A P\n  X \\<in> P\n\ngoal (1 subgoal):\n 1. X \\<noteq> {}", "by (auto elim: partition_onE)"], ["proof (state)\nthis:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> P \\<Longrightarrow>\n       x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "moreover"], ["proof (state)\nthis:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> P \\<Longrightarrow>\n       x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "have \"X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. X = {x \\<in> A. f x = ?x}\n 2. ?x \\<in> B", "show \"g' X \\<in> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g' X \\<in> B", "using \\<open>X \\<in> P\\<close> \\<open>g' ` P \\<subseteq> B\\<close>"], ["proof (prove)\nusing this:\n  X \\<in> P\n  g' ` P \\<subseteq> B\n\ngoal (1 subgoal):\n 1. g' X \\<in> B", "by blast"], ["proof (state)\nthis:\n  g' X \\<in> B\n\ngoal (1 subgoal):\n 1. X = {x \\<in> A. f x = g' X}", "show \"X = {x \\<in> A. f x = g' X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X = {x \\<in> A. f x = g' X}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. X \\<subseteq> {x \\<in> A. f x = g' X}\n 2. {x \\<in> A. f x = g' X} \\<subseteq> X", "show \"X \\<subseteq> {x \\<in> A. f x = g' X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> {x \\<in> A. f x = g' X}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> x \\<in> {x \\<in> A. f x = g' X}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> x \\<in> {x \\<in> A. f x = g' X}", "assume \"x \\<in> X\""], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> x \\<in> {x \\<in> A. f x = g' X}", "from this"], ["proof (chain)\npicking this:\n  x \\<in> X", "have \"x \\<in> A\""], ["proof (prove)\nusing this:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. x \\<in> A", "using \\<open>X \\<in> P\\<close> assms(3)"], ["proof (prove)\nusing this:\n  x \\<in> X\n  X \\<in> P\n  partition_on A P\n\ngoal (1 subgoal):\n 1. x \\<in> A", "by (fastforce elim: partition_onE)"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> x \\<in> {x \\<in> A. f x = g' X}", "have \"(THE X. x \\<in> X \\<and> X \\<in> P) = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = X", "using \\<open>X \\<in> P\\<close> \\<open>x \\<in> X\\<close> assms(3) partition_on_the_part_eq"], ["proof (prove)\nusing this:\n  X \\<in> P\n  x \\<in> X\n  partition_on A P\n  \\<lbrakk>partition_on ?A ?P; ?x \\<in> ?X; ?X \\<in> ?P\\<rbrakk>\n  \\<Longrightarrow> (THE X. ?x \\<in> X \\<and> X \\<in> ?P) = ?X\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = X", "by fastforce"], ["proof (state)\nthis:\n  (THE X. x \\<in> X \\<and> X \\<in> P) = X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> x \\<in> {x \\<in> A. f x = g' X}", "from this \\<open>x \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  (THE X. x \\<in> X \\<and> X \\<in> P) = X\n  x \\<in> A", "have \"f x = g' X\""], ["proof (prove)\nusing this:\n  (THE X. x \\<in> X \\<and> X \\<in> P) = X\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. f x = g' X", "unfolding f_def"], ["proof (prove)\nusing this:\n  (THE X. x \\<in> X \\<and> X \\<in> P) = X\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (if x \\<in> A then g' (THE X. x \\<in> X \\<and> X \\<in> P)\n     else undefined) =\n    g' X", "by auto"], ["proof (state)\nthis:\n  f x = g' X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> x \\<in> {x \\<in> A. f x = g' X}", "from this \\<open>x \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  f x = g' X\n  x \\<in> A", "show \"x \\<in> {x \\<in> A. f x = g' X}\""], ["proof (prove)\nusing this:\n  f x = g' X\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> A. f x = g' X}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {x \\<in> A. f x = g' X}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  X \\<subseteq> {x \\<in> A. f x = g' X}\n\ngoal (1 subgoal):\n 1. {x \\<in> A. f x = g' X} \\<subseteq> X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {x \\<in> A. f x = g' X} \\<subseteq> X", "show \"{x \\<in> A. f x = g' X} \\<subseteq> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> A. f x = g' X} \\<subseteq> X", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> {x \\<in> A. f x = g' X} \\<Longrightarrow> x \\<in> X", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> {x \\<in> A. f x = g' X} \\<Longrightarrow> x \\<in> X", "assume \"x \\<in> {x \\<in> A. f x = g' X}\""], ["proof (state)\nthis:\n  x \\<in> {x \\<in> A. f x = g' X}\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> {x \\<in> A. f x = g' X} \\<Longrightarrow> x \\<in> X", "from this"], ["proof (chain)\npicking this:\n  x \\<in> {x \\<in> A. f x = g' X}", "have \"x \\<in> A\" and g_eq: \"g' (THE X. x \\<in> X \\<and> X \\<in> P) = g' X\""], ["proof (prove)\nusing this:\n  x \\<in> {x \\<in> A. f x = g' X}\n\ngoal (1 subgoal):\n 1. x \\<in> A &&& g' (THE X. x \\<in> X \\<and> X \\<in> P) = g' X", "unfolding f_def"], ["proof (prove)\nusing this:\n  x \\<in> {x \\<in> A.\n           (if x \\<in> A then g' (THE X. x \\<in> X \\<and> X \\<in> P)\n            else undefined) =\n           g' X}\n\ngoal (1 subgoal):\n 1. x \\<in> A &&& g' (THE X. x \\<in> X \\<and> X \\<in> P) = g' X", "by auto"], ["proof (state)\nthis:\n  x \\<in> A\n  g' (THE X. x \\<in> X \\<and> X \\<in> P) = g' X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> {x \\<in> A. f x = g' X} \\<Longrightarrow> x \\<in> X", "from \\<open>x \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> A", "have \"(THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P\""], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P", "using assms(3)"], ["proof (prove)\nusing this:\n  x \\<in> A\n  partition_on A P\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P", "by (simp add: partition_on_the_part_mem)"], ["proof (state)\nthis:\n  (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> {x \\<in> A. f x = g' X} \\<Longrightarrow> x \\<in> X", "from this g_eq"], ["proof (chain)\npicking this:\n  (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P\n  g' (THE X. x \\<in> X \\<and> X \\<in> P) = g' X", "have \"(THE X. x \\<in> X \\<and> X \\<in> P) = X\""], ["proof (prove)\nusing this:\n  (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P\n  g' (THE X. x \\<in> X \\<and> X \\<in> P) = g' X\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = X", "using \\<open>X \\<in> P\\<close> \\<open>bij_betw g' P (g' ` P)\\<close>"], ["proof (prove)\nusing this:\n  (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P\n  g' (THE X. x \\<in> X \\<and> X \\<in> P) = g' X\n  X \\<in> P\n  bij_betw g' P (g' ` P)\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = X", "by (metis bij_betw_inv_into_left)"], ["proof (state)\nthis:\n  (THE X. x \\<in> X \\<and> X \\<in> P) = X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> {x \\<in> A. f x = g' X} \\<Longrightarrow> x \\<in> X", "from this \\<open>x \\<in> A\\<close> assms(3)"], ["proof (chain)\npicking this:\n  (THE X. x \\<in> X \\<and> X \\<in> P) = X\n  x \\<in> A\n  partition_on A P", "show \"x \\<in> X\""], ["proof (prove)\nusing this:\n  (THE X. x \\<in> X \\<and> X \\<in> P) = X\n  x \\<in> A\n  partition_on A P\n\ngoal (1 subgoal):\n 1. x \\<in> X", "using partition_on_in_the_unique_part"], ["proof (prove)\nusing this:\n  (THE X. x \\<in> X \\<and> X \\<in> P) = X\n  x \\<in> A\n  partition_on A P\n  \\<lbrakk>partition_on ?A ?P; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> (THE X. ?x \\<in> X \\<and> X \\<in> ?P)\n\ngoal (1 subgoal):\n 1. x \\<in> X", "by fastforce"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {x \\<in> A. f x = g' X} \\<subseteq> X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  X = {x \\<in> A. f x = g' X}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> P \\<Longrightarrow>\n       x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "ultimately"], ["proof (chain)\npicking this:\n  X \\<noteq> {}\n  X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "show \"X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\""], ["proof (prove)\nusing this:\n  X \\<noteq> {}\n  X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n\ngoal (1 subgoal):\n 1. X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "by auto"], ["proof (state)\nthis:\n  X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<subseteq> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P\n\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E B.\n       (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P", "ultimately"], ["proof (chain)\npicking this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P", "show ?thesis"], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P\n\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E B.\n       (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P", "by blast"], ["proof (state)\nthis:\n  \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E B.\n     (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Equality under Permutation Application\\<close>"], ["", "lemma permutes_implies_inv_image_on_eq:\n  assumes \"p permutes B\"\n  shows \"(\\<lambda>b. {x \\<in> A. p (f x) = b}) ` B = (\\<lambda>b. {x \\<in> A. f x = b}) ` B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. p (f x) = b}) ` B =\n    (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. p (f x) = b}) ` B =\n    (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "have \"\\<forall>b \\<in> B. \\<forall>x \\<in> A. p (f x) = b \\<longleftrightarrow> f x = inv p b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>b\\<in>B. \\<forall>x\\<in>A. (p (f x) = b) = (f x = inv p b)", "using \\<open>p permutes B\\<close>"], ["proof (prove)\nusing this:\n  p permutes B\n\ngoal (1 subgoal):\n 1. \\<forall>b\\<in>B. \\<forall>x\\<in>A. (p (f x) = b) = (f x = inv p b)", "by (auto simp add: permutes_inverses)"], ["proof (state)\nthis:\n  \\<forall>b\\<in>B. \\<forall>x\\<in>A. (p (f x) = b) = (f x = inv p b)\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. p (f x) = b}) ` B =\n    (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "from this"], ["proof (chain)\npicking this:\n  \\<forall>b\\<in>B. \\<forall>x\\<in>A. (p (f x) = b) = (f x = inv p b)", "have \"(\\<lambda>b. {x \\<in> A. p (f x) = b}) ` B = (\\<lambda>b. {x \\<in> A. f x = inv p b}) ` B\""], ["proof (prove)\nusing this:\n  \\<forall>b\\<in>B. \\<forall>x\\<in>A. (p (f x) = b) = (f x = inv p b)\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. p (f x) = b}) ` B =\n    (\\<lambda>b. {x \\<in> A. f x = inv p b}) ` B", "using image_cong"], ["proof (prove)\nusing this:\n  \\<forall>b\\<in>B. \\<forall>x\\<in>A. (p (f x) = b) = (f x = inv p b)\n  \\<lbrakk>?M = ?N;\n   \\<And>x. x \\<in> ?N \\<Longrightarrow> ?f x = ?g x\\<rbrakk>\n  \\<Longrightarrow> ?f ` ?M = ?g ` ?N\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. p (f x) = b}) ` B =\n    (\\<lambda>b. {x \\<in> A. f x = inv p b}) ` B", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. p (f x) = b}) ` B =\n  (\\<lambda>b. {x \\<in> A. f x = inv p b}) ` B\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. p (f x) = b}) ` B =\n    (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "also"], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. p (f x) = b}) ` B =\n  (\\<lambda>b. {x \\<in> A. f x = inv p b}) ` B\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. p (f x) = b}) ` B =\n    (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "have \"\\<dots> = (\\<lambda>b. {x \\<in> A. f x = b}) ` inv p ` B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f x = inv p b}) ` B =\n    (\\<lambda>b. {x \\<in> A. f x = b}) ` inv p ` B", "by (auto simp add: image_comp)"], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. f x = inv p b}) ` B =\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` inv p ` B\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. p (f x) = b}) ` B =\n    (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "also"], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. f x = inv p b}) ` B =\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` inv p ` B\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. p (f x) = b}) ` B =\n    (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "have \"\\<dots> = (\\<lambda>b. {x \\<in> A. f x = b}) ` B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f x = b}) ` inv p ` B =\n    (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "by (simp add: \\<open>p permutes B\\<close> permutes_inv permutes_image)"], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` inv p ` B =\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. p (f x) = b}) ` B =\n    (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>b. {x \\<in> A. p (f x) = b}) ` B =\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>b. {x \\<in> A. p (f x) = b}) ` B =\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. p (f x) = b}) ` B =\n    (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "."], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. p (f x) = b}) ` B =\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Existence of Permutation\\<close>"], ["", "lemma the_elem:\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E B\" \"f' \\<in> A \\<rightarrow>\\<^sub>E B\"\n  assumes partitions_eq: \"(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = (\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}\"\n  assumes \"x \\<in> A\"\n  shows \"the_elem (f ` {xa \\<in> A. f' xa = f' x}) = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_elem (f ` {xa \\<in> A. f' xa = f' x}) = f x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. the_elem (f ` {xa \\<in> A. f' xa = f' x}) = f x", "from \\<open>x \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> A", "have x: \"x \\<in> {x' \\<in> A. f' x' = f' x}\""], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> {x' \\<in> A. f' x' = f' x}", "by blast"], ["proof (state)\nthis:\n  x \\<in> {x' \\<in> A. f' x' = f' x}\n\ngoal (1 subgoal):\n 1. the_elem (f ` {xa \\<in> A. f' xa = f' x}) = f x", "have \"f' x \\<in> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f' x \\<in> B", "using \\<open>x \\<in> A\\<close> \\<open>f' \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> A\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. f' x \\<in> B", "by blast"], ["proof (state)\nthis:\n  f' x \\<in> B\n\ngoal (1 subgoal):\n 1. the_elem (f ` {xa \\<in> A. f' xa = f' x}) = f x", "from this"], ["proof (chain)\npicking this:\n  f' x \\<in> B", "have \"{x' \\<in> A. f' x' = f' x} \\<in> (\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}\""], ["proof (prove)\nusing this:\n  f' x \\<in> B\n\ngoal (1 subgoal):\n 1. {x' \\<in> A. f' x' = f' x}\n    \\<in> (\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}", "using \\<open>x \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  f' x \\<in> B\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. {x' \\<in> A. f' x' = f' x}\n    \\<in> (\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}", "by blast"], ["proof (state)\nthis:\n  {x' \\<in> A. f' x' = f' x}\n  \\<in> (\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. the_elem (f ` {xa \\<in> A. f' xa = f' x}) = f x", "from this"], ["proof (chain)\npicking this:\n  {x' \\<in> A. f' x' = f' x}\n  \\<in> (\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}", "have \"{x' \\<in> A. f' x' = f' x} \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\""], ["proof (prove)\nusing this:\n  {x' \\<in> A. f' x' = f' x}\n  \\<in> (\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. {x' \\<in> A. f' x' = f' x}\n    \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "using partitions_eq"], ["proof (prove)\nusing this:\n  {x' \\<in> A. f' x' = f' x}\n  \\<in> (\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n  (\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. {x' \\<in> A. f' x' = f' x}\n    \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "by blast"], ["proof (state)\nthis:\n  {x' \\<in> A. f' x' = f' x}\n  \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. the_elem (f ` {xa \\<in> A. f' xa = f' x}) = f x", "from this"], ["proof (chain)\npicking this:\n  {x' \\<in> A. f' x' = f' x}\n  \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "obtain b where eq: \"{x' \\<in> A. f' x' = f' x} = {x' \\<in> A. f x' = b}\""], ["proof (prove)\nusing this:\n  {x' \\<in> A. f' x' = f' x}\n  \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        {x' \\<in> A. f' x' = f' x} =\n        {x' \\<in> A. f x' = b} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  {x' \\<in> A. f' x' = f' x} = {x' \\<in> A. f x' = b}\n\ngoal (1 subgoal):\n 1. the_elem (f ` {xa \\<in> A. f' xa = f' x}) = f x", "also"], ["proof (state)\nthis:\n  {x' \\<in> A. f' x' = f' x} = {x' \\<in> A. f x' = b}\n\ngoal (1 subgoal):\n 1. the_elem (f ` {xa \\<in> A. f' xa = f' x}) = f x", "from x this"], ["proof (chain)\npicking this:\n  x \\<in> {x' \\<in> A. f' x' = f' x}\n  {x' \\<in> A. f' x' = f' x} = {x' \\<in> A. f x' = b}", "show \"the_elem (f ` {x' \\<in> A. f' x' = f' x}) = f x\""], ["proof (prove)\nusing this:\n  x \\<in> {x' \\<in> A. f' x' = f' x}\n  {x' \\<in> A. f' x' = f' x} = {x' \\<in> A. f x' = b}\n\ngoal (1 subgoal):\n 1. the_elem (f ` {x' \\<in> A. f' x' = f' x}) = f x", "by (metis (mono_tags, lifting) empty_iff mem_Collect_eq the_elem_image_unique)"], ["proof (state)\nthis:\n  the_elem (f ` {x' \\<in> A. f' x' = f' x}) = f x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma the_elem_eq:\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n  assumes \"b \\<in> f ` A\"\n  shows \"the_elem (f ` {x' \\<in> A. f x' = b}) = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_elem (f ` {x' \\<in> A. f x' = b}) = b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. the_elem (f ` {x' \\<in> A. f x' = b}) = b", "from \\<open>b \\<in> f ` A\\<close>"], ["proof (chain)\npicking this:\n  b \\<in> f ` A", "obtain a where \"a \\<in> A\" and \"b = f a\""], ["proof (prove)\nusing this:\n  b \\<in> f ` A\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> A; b = f a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a \\<in> A\n  b = f a\n\ngoal (1 subgoal):\n 1. the_elem (f ` {x' \\<in> A. f x' = b}) = b", "from this"], ["proof (chain)\npicking this:\n  a \\<in> A\n  b = f a", "show \"the_elem (f ` {x' \\<in> A. f x' = b}) = b\""], ["proof (prove)\nusing this:\n  a \\<in> A\n  b = f a\n\ngoal (1 subgoal):\n 1. the_elem (f ` {x' \\<in> A. f x' = b}) = b", "using the_elem[OF \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close> \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>]"], ["proof (prove)\nusing this:\n  a \\<in> A\n  b = f a\n  \\<lbrakk>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n           (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n   ?x \\<in> A\\<rbrakk>\n  \\<Longrightarrow> the_elem (f ` {xa \\<in> A. f xa = f ?x}) = f ?x\n\ngoal (1 subgoal):\n 1. the_elem (f ` {x' \\<in> A. f x' = b}) = b", "by simp"], ["proof (state)\nthis:\n  the_elem (f ` {x' \\<in> A. f x' = b}) = b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partitions_eq_implies:\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E B\" \"f' \\<in> A \\<rightarrow>\\<^sub>E B\"\n  assumes partitions_eq: \"(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = (\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}\"\n  assumes \"x \\<in> A\" \"x' \\<in> A\"\n  assumes \"f x = f x'\"\n  shows \"f' x = f' x'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f' x = f' x'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f' x = f' x'", "have \"f x \\<in> B\" and \"x \\<in> {a \\<in> A. f a = f x}\" and \"x' \\<in> {a \\<in> A. f a = f x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<in> B &&&\n    x \\<in> {a \\<in> A. f a = f x} &&& x' \\<in> {a \\<in> A. f a = f x}", "using \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close> \\<open>x \\<in> A\\<close> \\<open>x' \\<in> A\\<close> \\<open>f x = f x'\\<close>"], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  x \\<in> A\n  x' \\<in> A\n  f x = f x'\n\ngoal (1 subgoal):\n 1. f x \\<in> B &&&\n    x \\<in> {a \\<in> A. f a = f x} &&& x' \\<in> {a \\<in> A. f a = f x}", "by auto"], ["proof (state)\nthis:\n  f x \\<in> B\n  x \\<in> {a \\<in> A. f a = f x}\n  x' \\<in> {a \\<in> A. f a = f x}\n\ngoal (1 subgoal):\n 1. f' x = f' x'", "moreover"], ["proof (state)\nthis:\n  f x \\<in> B\n  x \\<in> {a \\<in> A. f a = f x}\n  x' \\<in> {a \\<in> A. f a = f x}\n\ngoal (1 subgoal):\n 1. f' x = f' x'", "have \"{a \\<in> A. f a = f x} \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a \\<in> A. f a = f x}\n    \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "using \\<open>f x \\<in> B\\<close> \\<open>x \\<in> {a \\<in> A. f a = f x}\\<close>"], ["proof (prove)\nusing this:\n  f x \\<in> B\n  x \\<in> {a \\<in> A. f a = f x}\n\ngoal (1 subgoal):\n 1. {a \\<in> A. f a = f x}\n    \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "by auto"], ["proof (state)\nthis:\n  {a \\<in> A. f a = f x} \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. f' x = f' x'", "ultimately"], ["proof (chain)\npicking this:\n  f x \\<in> B\n  x \\<in> {a \\<in> A. f a = f x}\n  x' \\<in> {a \\<in> A. f a = f x}\n  {a \\<in> A. f a = f x} \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "obtain b where \"x \\<in> {a \\<in> A. f' a = b}\" and \"x' \\<in> {a \\<in> A. f' a = b}\""], ["proof (prove)\nusing this:\n  f x \\<in> B\n  x \\<in> {a \\<in> A. f a = f x}\n  x' \\<in> {a \\<in> A. f a = f x}\n  {a \\<in> A. f a = f x} \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>x \\<in> {a \\<in> A. f' a = b};\n         x' \\<in> {a \\<in> A. f' a = b}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using partitions_eq"], ["proof (prove)\nusing this:\n  f x \\<in> B\n  x \\<in> {a \\<in> A. f a = f x}\n  x' \\<in> {a \\<in> A. f a = f x}\n  {a \\<in> A. f a = f x} \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n  (\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>x \\<in> {a \\<in> A. f' a = b};\n         x' \\<in> {a \\<in> A. f' a = b}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types, lifting) Diff_iff imageE)"], ["proof (state)\nthis:\n  x \\<in> {a \\<in> A. f' a = b}\n  x' \\<in> {a \\<in> A. f' a = b}\n\ngoal (1 subgoal):\n 1. f' x = f' x'", "from this"], ["proof (chain)\npicking this:\n  x \\<in> {a \\<in> A. f' a = b}\n  x' \\<in> {a \\<in> A. f' a = b}", "show \"f' x = f' x'\""], ["proof (prove)\nusing this:\n  x \\<in> {a \\<in> A. f' a = b}\n  x' \\<in> {a \\<in> A. f' a = b}\n\ngoal (1 subgoal):\n 1. f' x = f' x'", "by auto"], ["proof (state)\nthis:\n  f' x = f' x'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_domain_partitions:\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n  assumes \"finite B\"\n  shows \"card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card (f ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card (f ` A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card (f ` A)", "note [simp] = the_elem_eq[OF \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>]"], ["proof (state)\nthis:\n  ?b \\<in> f ` A \\<Longrightarrow>\n  the_elem (f ` {x' \\<in> A. f x' = ?b}) = ?b\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card (f ` A)", "have \"bij_betw (\\<lambda>X. the_elem (f ` X)) ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) (f ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>X. the_elem (f ` X))\n     ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) (f ` A)", "proof (rule bij_betw_imageI)"], ["proof (state)\ngoal (2 subgoals):\n 1. inj_on (\\<lambda>X. the_elem (f ` X))\n     ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n 2. (\\<lambda>X. the_elem (f ` X)) `\n    ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) =\n    f ` A", "show \"inj_on (\\<lambda>X. the_elem (f ` X)) ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>X. the_elem (f ` X))\n     ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})", "proof (rule inj_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n        y \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n        the_elem (f ` x) = the_elem (f ` y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix X X'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n        y \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n        the_elem (f ` x) = the_elem (f ` y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume X: \"X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\""], ["proof (state)\nthis:\n  X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n        y \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n        the_elem (f ` x) = the_elem (f ` y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume X': \"X' \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\""], ["proof (state)\nthis:\n  X' \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n        y \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n        the_elem (f ` x) = the_elem (f ` y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume eq: \"the_elem (f ` X) = the_elem (f ` X')\""], ["proof (state)\nthis:\n  the_elem (f ` X) = the_elem (f ` X')\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n        y \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n        the_elem (f ` x) = the_elem (f ` y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "from X"], ["proof (chain)\npicking this:\n  X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "obtain b where \"b \\<in> B\" and X_eq: \"X = {x \\<in> A. f x = b}\""], ["proof (prove)\nusing this:\n  X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in> B; X = {x \\<in> A. f x = b}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  b \\<in> B\n  X = {x \\<in> A. f x = b}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n        y \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n        the_elem (f ` x) = the_elem (f ` y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "from X this"], ["proof (chain)\npicking this:\n  X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n  b \\<in> B\n  X = {x \\<in> A. f x = b}", "have \"b \\<in> f ` A\""], ["proof (prove)\nusing this:\n  X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n  b \\<in> B\n  X = {x \\<in> A. f x = b}\n\ngoal (1 subgoal):\n 1. b \\<in> f ` A", "using Collect_empty_eq Diff_iff image_iff insertCI"], ["proof (prove)\nusing this:\n  X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n  b \\<in> B\n  X = {x \\<in> A. f x = b}\n  (Collect ?P = {}) = (\\<forall>x. \\<not> ?P x)\n  (?c \\<in> ?A - ?B) = (?c \\<in> ?A \\<and> ?c \\<notin> ?B)\n  (?z \\<in> ?f ` ?A) = (\\<exists>x\\<in>?A. ?z = ?f x)\n  (?a \\<notin> ?B \\<Longrightarrow> ?a = ?b) \\<Longrightarrow>\n  ?a \\<in> insert ?b ?B\n\ngoal (1 subgoal):\n 1. b \\<in> f ` A", "by auto"], ["proof (state)\nthis:\n  b \\<in> f ` A\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n        y \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n        the_elem (f ` x) = the_elem (f ` y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "from X'"], ["proof (chain)\npicking this:\n  X' \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "obtain b' where \"b' \\<in> B\" and X'_eq: \"X' = {x \\<in> A. f x = b'}\""], ["proof (prove)\nusing this:\n  X' \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. (\\<And>b'.\n        \\<lbrakk>b' \\<in> B; X' = {x \\<in> A. f x = b'}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  b' \\<in> B\n  X' = {x \\<in> A. f x = b'}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n        y \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n        the_elem (f ` x) = the_elem (f ` y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "from X' this"], ["proof (chain)\npicking this:\n  X' \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n  b' \\<in> B\n  X' = {x \\<in> A. f x = b'}", "have \"b' \\<in> f ` A\""], ["proof (prove)\nusing this:\n  X' \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n  b' \\<in> B\n  X' = {x \\<in> A. f x = b'}\n\ngoal (1 subgoal):\n 1. b' \\<in> f ` A", "using Collect_empty_eq Diff_iff image_iff insertCI"], ["proof (prove)\nusing this:\n  X' \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n  b' \\<in> B\n  X' = {x \\<in> A. f x = b'}\n  (Collect ?P = {}) = (\\<forall>x. \\<not> ?P x)\n  (?c \\<in> ?A - ?B) = (?c \\<in> ?A \\<and> ?c \\<notin> ?B)\n  (?z \\<in> ?f ` ?A) = (\\<exists>x\\<in>?A. ?z = ?f x)\n  (?a \\<notin> ?B \\<Longrightarrow> ?a = ?b) \\<Longrightarrow>\n  ?a \\<in> insert ?b ?B\n\ngoal (1 subgoal):\n 1. b' \\<in> f ` A", "by auto"], ["proof (state)\nthis:\n  b' \\<in> f ` A\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n        y \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n        the_elem (f ` x) = the_elem (f ` y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "from X_eq X'_eq eq \\<open>\\<And>b. b \\<in> f ` A \\<Longrightarrow> the_elem (f ` {x' \\<in> A. f x' = b}) = b\\<close> \\<open>b \\<in> f ` A\\<close> \\<open>b' \\<in> f ` A\\<close>"], ["proof (chain)\npicking this:\n  X = {x \\<in> A. f x = b}\n  X' = {x \\<in> A. f x = b'}\n  the_elem (f ` X) = the_elem (f ` X')\n  ?b \\<in> f ` A \\<Longrightarrow>\n  the_elem (f ` {x' \\<in> A. f x' = ?b}) = ?b\n  b \\<in> f ` A\n  b' \\<in> f ` A", "have \"b = b'\""], ["proof (prove)\nusing this:\n  X = {x \\<in> A. f x = b}\n  X' = {x \\<in> A. f x = b'}\n  the_elem (f ` X) = the_elem (f ` X')\n  ?b \\<in> f ` A \\<Longrightarrow>\n  the_elem (f ` {x' \\<in> A. f x' = ?b}) = ?b\n  b \\<in> f ` A\n  b' \\<in> f ` A\n\ngoal (1 subgoal):\n 1. b = b'", "by auto"], ["proof (state)\nthis:\n  b = b'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n        y \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}};\n        the_elem (f ` x) = the_elem (f ` y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "from this"], ["proof (chain)\npicking this:\n  b = b'", "show \"X = X'\""], ["proof (prove)\nusing this:\n  b = b'\n\ngoal (1 subgoal):\n 1. X = X'", "using X_eq X'_eq"], ["proof (prove)\nusing this:\n  b = b'\n  X = {x \\<in> A. f x = b}\n  X' = {x \\<in> A. f x = b'}\n\ngoal (1 subgoal):\n 1. X = X'", "by simp"], ["proof (state)\nthis:\n  X = X'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on (\\<lambda>X. the_elem (f ` X))\n   ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n\ngoal (1 subgoal):\n 1. (\\<lambda>X. the_elem (f ` X)) `\n    ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) =\n    f ` A", "show \"(\\<lambda>X. the_elem (f ` X)) ` ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = f ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>X. the_elem (f ` X)) `\n    ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) =\n    f ` A", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>X. the_elem (f ` X)) `\n    ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n    \\<subseteq> f ` A\n 2. f ` A\n    \\<subseteq> (\\<lambda>X. the_elem (f ` X)) `\n                ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})", "show \"(\\<lambda>X. the_elem (f ` X)) ` ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) \\<subseteq> f ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>X. the_elem (f ` X)) `\n    ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n    \\<subseteq> f ` A", "using \\<open>\\<And>b. b \\<in> f ` A \\<Longrightarrow> the_elem (f ` {x' \\<in> A. f x' = b}) = b\\<close>"], ["proof (prove)\nusing this:\n  ?b \\<in> f ` A \\<Longrightarrow>\n  the_elem (f ` {x' \\<in> A. f x' = ?b}) = ?b\n\ngoal (1 subgoal):\n 1. (\\<lambda>X. the_elem (f ` X)) `\n    ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n    \\<subseteq> f ` A", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>X. the_elem (f ` X)) `\n  ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n  \\<subseteq> f ` A\n\ngoal (1 subgoal):\n 1. f ` A\n    \\<subseteq> (\\<lambda>X. the_elem (f ` X)) `\n                ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. f ` A\n    \\<subseteq> (\\<lambda>X. the_elem (f ` X)) `\n                ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})", "show \"f ` A \\<subseteq> (\\<lambda>X. the_elem (f ` X)) ` ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` A\n    \\<subseteq> (\\<lambda>X. the_elem (f ` X)) `\n                ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f ` A \\<Longrightarrow>\n       x \\<in> (\\<lambda>X. the_elem (f ` X)) `\n               ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f ` A \\<Longrightarrow>\n       x \\<in> (\\<lambda>X. the_elem (f ` X)) `\n               ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})", "assume \"b \\<in> f ` A\""], ["proof (state)\nthis:\n  b \\<in> f ` A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f ` A \\<Longrightarrow>\n       x \\<in> (\\<lambda>X. the_elem (f ` X)) `\n               ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})", "from this"], ["proof (chain)\npicking this:\n  b \\<in> f ` A", "have \"b = the_elem (f ` {x \\<in> A. f x = b})\""], ["proof (prove)\nusing this:\n  b \\<in> f ` A\n\ngoal (1 subgoal):\n 1. b = the_elem (f ` {x \\<in> A. f x = b})", "using \\<open>\\<And>b. b \\<in> f ` A \\<Longrightarrow> the_elem (f ` {x' \\<in> A. f x' = b}) = b\\<close>"], ["proof (prove)\nusing this:\n  b \\<in> f ` A\n  ?b \\<in> f ` A \\<Longrightarrow>\n  the_elem (f ` {x' \\<in> A. f x' = ?b}) = ?b\n\ngoal (1 subgoal):\n 1. b = the_elem (f ` {x \\<in> A. f x = b})", "by auto"], ["proof (state)\nthis:\n  b = the_elem (f ` {x \\<in> A. f x = b})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f ` A \\<Longrightarrow>\n       x \\<in> (\\<lambda>X. the_elem (f ` X)) `\n               ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})", "moreover"], ["proof (state)\nthis:\n  b = the_elem (f ` {x \\<in> A. f x = b})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f ` A \\<Longrightarrow>\n       x \\<in> (\\<lambda>X. the_elem (f ` X)) `\n               ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})", "from \\<open>b \\<in> f ` A\\<close>"], ["proof (chain)\npicking this:\n  b \\<in> f ` A", "have \" {x \\<in> A. f x = b} \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\""], ["proof (prove)\nusing this:\n  b \\<in> f ` A\n\ngoal (1 subgoal):\n 1. {x \\<in> A. f x = b} \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "using \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  b \\<in> f ` A\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. {x \\<in> A. f x = b} \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "by auto"], ["proof (state)\nthis:\n  {x \\<in> A. f x = b} \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f ` A \\<Longrightarrow>\n       x \\<in> (\\<lambda>X. the_elem (f ` X)) `\n               ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})", "ultimately"], ["proof (chain)\npicking this:\n  b = the_elem (f ` {x \\<in> A. f x = b})\n  {x \\<in> A. f x = b} \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "show \"b \\<in> (\\<lambda>X. the_elem (f ` X)) ` ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\""], ["proof (prove)\nusing this:\n  b = the_elem (f ` {x \\<in> A. f x = b})\n  {x \\<in> A. f x = b} \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. b \\<in> (\\<lambda>X. the_elem (f ` X)) `\n            ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})", ".."], ["proof (state)\nthis:\n  b \\<in> (\\<lambda>X. the_elem (f ` X)) `\n          ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f ` A\n  \\<subseteq> (\\<lambda>X. the_elem (f ` X)) `\n              ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>X. the_elem (f ` X)) `\n  ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) =\n  f ` A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bij_betw (\\<lambda>X. the_elem (f ` X))\n   ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) (f ` A)\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card (f ` A)", "from this"], ["proof (chain)\npicking this:\n  bij_betw (\\<lambda>X. the_elem (f ` X))\n   ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) (f ` A)", "show ?thesis"], ["proof (prove)\nusing this:\n  bij_betw (\\<lambda>X. the_elem (f ` X))\n   ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) (f ` A)\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card (f ` A)", "by (rule bij_betw_same_card)"], ["proof (state)\nthis:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card (f ` A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partitions_eq_implies_permutes:\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E B\" \"f' \\<in> A \\<rightarrow>\\<^sub>E B\"\n  assumes \"finite B\"\n  assumes partitions_eq: \"(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = (\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}\"\n  shows \"\\<exists>p. p permutes B \\<and> (\\<forall>x\\<in>A. f x = p (f' x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p. p permutes B \\<and> (\\<forall>x\\<in>A. f x = p (f' x))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p. p permutes B \\<and> (\\<forall>x\\<in>A. f x = p (f' x))", "have card_eq: \"card (f' ` A) = card (f ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (f' ` A) = card (f ` A)", "using card_domain_partitions[OF \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close> \\<open>finite B\\<close>]"], ["proof (prove)\nusing this:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card (f ` A)\n\ngoal (1 subgoal):\n 1. card (f' ` A) = card (f ` A)", "using card_domain_partitions[OF \\<open>f' \\<in> A \\<rightarrow>\\<^sub>E B\\<close> \\<open>finite B\\<close>]"], ["proof (prove)\nusing this:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card (f ` A)\n  card ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}) = card (f' ` A)\n\ngoal (1 subgoal):\n 1. card (f' ` A) = card (f ` A)", "using partitions_eq"], ["proof (prove)\nusing this:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card (f ` A)\n  card ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}) = card (f' ` A)\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n  (\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. card (f' ` A) = card (f ` A)", "by simp"], ["proof (state)\nthis:\n  card (f' ` A) = card (f ` A)\n\ngoal (1 subgoal):\n 1. \\<exists>p. p permutes B \\<and> (\\<forall>x\\<in>A. f x = p (f' x))", "have \"f' ` A \\<subseteq> B\" \"f ` A \\<subseteq> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f' ` A \\<subseteq> B &&& f ` A \\<subseteq> B", "using \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close> \\<open>f' \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. f' ` A \\<subseteq> B &&& f ` A \\<subseteq> B", "by auto"], ["proof (state)\nthis:\n  f' ` A \\<subseteq> B\n  f ` A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. \\<exists>p. p permutes B \\<and> (\\<forall>x\\<in>A. f x = p (f' x))", "from this card_eq"], ["proof (chain)\npicking this:\n  f' ` A \\<subseteq> B\n  f ` A \\<subseteq> B\n  card (f' ` A) = card (f ` A)", "have \"card (B - f' ` A) = card (B - f ` A)\""], ["proof (prove)\nusing this:\n  f' ` A \\<subseteq> B\n  f ` A \\<subseteq> B\n  card (f' ` A) = card (f ` A)\n\ngoal (1 subgoal):\n 1. card (B - f' ` A) = card (B - f ` A)", "using \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  f' ` A \\<subseteq> B\n  f ` A \\<subseteq> B\n  card (f' ` A) = card (f ` A)\n  finite B\n\ngoal (1 subgoal):\n 1. card (B - f' ` A) = card (B - f ` A)", "by (auto simp add: card_Diff_subset finite_subset)"], ["proof (state)\nthis:\n  card (B - f' ` A) = card (B - f ` A)\n\ngoal (1 subgoal):\n 1. \\<exists>p. p permutes B \\<and> (\\<forall>x\\<in>A. f x = p (f' x))", "from this"], ["proof (chain)\npicking this:\n  card (B - f' ` A) = card (B - f ` A)", "obtain p' where \"bij_betw p' (B - f' ` A) (B - f ` A)\""], ["proof (prove)\nusing this:\n  card (B - f' ` A) = card (B - f ` A)\n\ngoal (1 subgoal):\n 1. (\\<And>p'.\n        bij_betw p' (B - f' ` A) (B - f ` A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  card (B - f' ` A) = card (B - f ` A)\n  finite B\n\ngoal (1 subgoal):\n 1. (\\<And>p'.\n        bij_betw p' (B - f' ` A) (B - f ` A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis finite_same_card_bij finite_Diff)"], ["proof (state)\nthis:\n  bij_betw p' (B - f' ` A) (B - f ` A)\n\ngoal (1 subgoal):\n 1. \\<exists>p. p permutes B \\<and> (\\<forall>x\\<in>A. f x = p (f' x))", "from this"], ["proof (chain)\npicking this:\n  bij_betw p' (B - f' ` A) (B - f ` A)", "have \"p' ` (B - f' ` A) = (B - f ` A)\""], ["proof (prove)\nusing this:\n  bij_betw p' (B - f' ` A) (B - f ` A)\n\ngoal (1 subgoal):\n 1. p' ` (B - f' ` A) = B - f ` A", "by (simp add: bij_betw_imp_surj_on)"], ["proof (state)\nthis:\n  p' ` (B - f' ` A) = B - f ` A\n\ngoal (1 subgoal):\n 1. \\<exists>p. p permutes B \\<and> (\\<forall>x\\<in>A. f x = p (f' x))", "define p where \"\\<And>b. p b = (if b \\<in> B then\n    (if b \\<in> f' ` A then the_elem (f ` {x \\<in> A. f' x = b}) else p' b) else b)\""], ["proof (state)\nthis:\n  p ?b =\n  (if ?b \\<in> B\n   then if ?b \\<in> f' ` A then the_elem (f ` {x \\<in> A. f' x = ?b})\n        else p' ?b\n   else ?b)\n\ngoal (1 subgoal):\n 1. \\<exists>p. p permutes B \\<and> (\\<forall>x\\<in>A. f x = p (f' x))", "have \"\\<forall>x\\<in>A. f x = p (f' x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A. f x = p (f' x)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> f x = p (f' x)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> f x = p (f' x)", "assume \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> f x = p (f' x)", "from this partitions_eq"], ["proof (chain)\npicking this:\n  x \\<in> A\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n  (\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}", "have \"the_elem (f ` {xa \\<in> A. f' xa = f' x}) = f x\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n  (\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. the_elem (f ` {xa \\<in> A. f' xa = f' x}) = f x", "using the_elem[OF \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close> \\<open>f' \\<in> A \\<rightarrow>\\<^sub>E B\\<close>]"], ["proof (prove)\nusing this:\n  x \\<in> A\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n  (\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}\n  \\<lbrakk>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n           (\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}};\n   ?x \\<in> A\\<rbrakk>\n  \\<Longrightarrow> the_elem (f ` {xa \\<in> A. f' xa = f' ?x}) = f ?x\n\ngoal (1 subgoal):\n 1. the_elem (f ` {xa \\<in> A. f' xa = f' x}) = f x", "by auto"], ["proof (state)\nthis:\n  the_elem (f ` {xa \\<in> A. f' xa = f' x}) = f x\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> f x = p (f' x)", "from this"], ["proof (chain)\npicking this:\n  the_elem (f ` {xa \\<in> A. f' xa = f' x}) = f x", "show \"f x = p (f' x)\""], ["proof (prove)\nusing this:\n  the_elem (f ` {xa \\<in> A. f' xa = f' x}) = f x\n\ngoal (1 subgoal):\n 1. f x = p (f' x)", "using \\<open>x \\<in> A\\<close> p_def \\<open>f' \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  the_elem (f ` {xa \\<in> A. f' xa = f' x}) = f x\n  x \\<in> A\n  p ?b =\n  (if ?b \\<in> B\n   then if ?b \\<in> f' ` A then the_elem (f ` {x \\<in> A. f' x = ?b})\n        else p' ?b\n   else ?b)\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. f x = p (f' x)", "by auto"], ["proof (state)\nthis:\n  f x = p (f' x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x\\<in>A. f x = p (f' x)\n\ngoal (1 subgoal):\n 1. \\<exists>p. p permutes B \\<and> (\\<forall>x\\<in>A. f x = p (f' x))", "moreover"], ["proof (state)\nthis:\n  \\<forall>x\\<in>A. f x = p (f' x)\n\ngoal (1 subgoal):\n 1. \\<exists>p. p permutes B \\<and> (\\<forall>x\\<in>A. f x = p (f' x))", "have \"p permutes B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p permutes B", "proof (rule bij_imp_permutes)"], ["proof (state)\ngoal (2 subgoals):\n 1. bij_betw p B B\n 2. \\<And>x. x \\<notin> B \\<Longrightarrow> p x = x", "let ?invp = \"\\<lambda>b. if b \\<in> f ` A then the_elem (f' ` {x \\<in> A. f x = b}) else b\""], ["proof (state)\ngoal (2 subgoals):\n 1. bij_betw p B B\n 2. \\<And>x. x \\<notin> B \\<Longrightarrow> p x = x", "note [simp] = the_elem[OF \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close> \\<open>f' \\<in> A \\<rightarrow>\\<^sub>E B\\<close> partitions_eq]"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow>\n  the_elem (f ` {xa \\<in> A. f' xa = f' ?x}) = f ?x\n\ngoal (2 subgoals):\n 1. bij_betw p B B\n 2. \\<And>x. x \\<notin> B \\<Longrightarrow> p x = x", "show \"bij_betw p B B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw p B B", "proof (rule bij_betw_imageI)"], ["proof (state)\ngoal (2 subgoals):\n 1. inj_on p B\n 2. p ` B = B", "show \"p ` B = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p ` B = B", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. p ` B \\<subseteq> B\n 2. B \\<subseteq> p ` B", "have \"(\\<lambda>b. the_elem (f ` {x \\<in> A. f' x = b})) ` (f' ` A) \\<subseteq> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b. the_elem (f ` {x \\<in> A. f' x = b})) ` f' ` A\n    \\<subseteq> B", "using \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. the_elem (f ` {x \\<in> A. f' x = b})) ` f' ` A\n    \\<subseteq> B", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>b. the_elem (f ` {x \\<in> A. f' x = b})) ` f' ` A \\<subseteq> B\n\ngoal (2 subgoals):\n 1. p ` B \\<subseteq> B\n 2. B \\<subseteq> p ` B", "from \\<open>p' ` (B - f' ` A) = (B - f ` A)\\<close> this"], ["proof (chain)\npicking this:\n  p' ` (B - f' ` A) = B - f ` A\n  (\\<lambda>b. the_elem (f ` {x \\<in> A. f' x = b})) ` f' ` A \\<subseteq> B", "show \"p ` B \\<subseteq> B\""], ["proof (prove)\nusing this:\n  p' ` (B - f' ` A) = B - f ` A\n  (\\<lambda>b. the_elem (f ` {x \\<in> A. f' x = b})) ` f' ` A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. p ` B \\<subseteq> B", "unfolding p_def \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  p' ` (B - f' ` A) = B - f ` A\n  (\\<lambda>b. the_elem (f ` {x \\<in> A. f' x = b})) ` f' ` A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. (\\<lambda>b.\n        if b \\<in> B\n        then if b \\<in> f' ` A then the_elem (f ` {x \\<in> A. f' x = b})\n             else p' b\n        else b) `\n    B\n    \\<subseteq> B", "by force"], ["proof (state)\nthis:\n  p ` B \\<subseteq> B\n\ngoal (1 subgoal):\n 1. B \\<subseteq> p ` B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<subseteq> p ` B", "show \"B \\<subseteq> p ` B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> p ` B", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> p ` B", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> p ` B", "assume \"b \\<in> B\""], ["proof (state)\nthis:\n  b \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> p ` B", "show \"b \\<in> p ` B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> p ` B", "proof (cases \"b \\<in> f ` A\")"], ["proof (state)\ngoal (2 subgoals):\n 1. b \\<in> f ` A \\<Longrightarrow> b \\<in> p ` B\n 2. b \\<notin> f ` A \\<Longrightarrow> b \\<in> p ` B", "assume \"b \\<notin> f ` A\""], ["proof (state)\nthis:\n  b \\<notin> f ` A\n\ngoal (2 subgoals):\n 1. b \\<in> f ` A \\<Longrightarrow> b \\<in> p ` B\n 2. b \\<notin> f ` A \\<Longrightarrow> b \\<in> p ` B", "note \\<open>p' ` (B - f' ` A) = (B - f ` A)\\<close>"], ["proof (state)\nthis:\n  p' ` (B - f' ` A) = B - f ` A\n\ngoal (2 subgoals):\n 1. b \\<in> f ` A \\<Longrightarrow> b \\<in> p ` B\n 2. b \\<notin> f ` A \\<Longrightarrow> b \\<in> p ` B", "from this \\<open>b \\<in> B\\<close> \\<open>b \\<notin> f ` A\\<close>"], ["proof (chain)\npicking this:\n  p' ` (B - f' ` A) = B - f ` A\n  b \\<in> B\n  b \\<notin> f ` A", "show ?thesis"], ["proof (prove)\nusing this:\n  p' ` (B - f' ` A) = B - f ` A\n  b \\<in> B\n  b \\<notin> f ` A\n\ngoal (1 subgoal):\n 1. b \\<in> p ` B", "unfolding p_def"], ["proof (prove)\nusing this:\n  p' ` (B - f' ` A) = B - f ` A\n  b \\<in> B\n  b \\<notin> f ` A\n\ngoal (1 subgoal):\n 1. b \\<in> (\\<lambda>b.\n                if b \\<in> B\n                then if b \\<in> f' ` A\n                     then the_elem (f ` {x \\<in> A. f' x = b}) else p' b\n                else b) `\n            B", "by auto"], ["proof (state)\nthis:\n  b \\<in> p ` B\n\ngoal (1 subgoal):\n 1. b \\<in> f ` A \\<Longrightarrow> b \\<in> p ` B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<in> f ` A \\<Longrightarrow> b \\<in> p ` B", "assume \"b \\<in> f ` A\""], ["proof (state)\nthis:\n  b \\<in> f ` A\n\ngoal (1 subgoal):\n 1. b \\<in> f ` A \\<Longrightarrow> b \\<in> p ` B", "from this \\<open>\\<forall>x\\<in>A. f x = p (f' x)\\<close> \\<open>b \\<in> B\\<close>"], ["proof (chain)\npicking this:\n  b \\<in> f ` A\n  \\<forall>x\\<in>A. f x = p (f' x)\n  b \\<in> B", "show ?thesis"], ["proof (prove)\nusing this:\n  b \\<in> f ` A\n  \\<forall>x\\<in>A. f x = p (f' x)\n  b \\<in> B\n\ngoal (1 subgoal):\n 1. b \\<in> p ` B", "using \\<open>f' \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  b \\<in> f ` A\n  \\<forall>x\\<in>A. f x = p (f' x)\n  b \\<in> B\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. b \\<in> p ` B", "by auto"], ["proof (state)\nthis:\n  b \\<in> p ` B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b \\<in> p ` B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B \\<subseteq> p ` B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p ` B = B\n\ngoal (1 subgoal):\n 1. inj_on p B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on p B", "show \"inj_on p B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on p B", "proof (rule inj_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> B; y \\<in> B; p x = p y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix b b'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> B; y \\<in> B; p x = p y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume \"b \\<in> B\" \"b' \\<in> B\" \"p b = p b'\""], ["proof (state)\nthis:\n  b \\<in> B\n  b' \\<in> B\n  p b = p b'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> B; y \\<in> B; p x = p y\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"b \\<in> f' ` A \\<longleftrightarrow> b' \\<in> f' ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b \\<in> f' ` A) = (b' \\<in> f' ` A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (b \\<in> f' ` A) = (b' \\<in> f' ` A)", "have \"b \\<in> f' ` A \\<longleftrightarrow> p b \\<in> f ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b \\<in> f' ` A) = (p b \\<in> f ` A)", "unfolding p_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (b \\<in> f' ` A) =\n    ((if b \\<in> B\n      then if b \\<in> f' ` A then the_elem (f ` {x \\<in> A. f' x = b})\n           else p' b\n      else b)\n     \\<in> f ` A)", "using \\<open>b \\<in> B\\<close> \\<open>p' ` (B - f' ` A) = B - f ` A\\<close>"], ["proof (prove)\nusing this:\n  b \\<in> B\n  p' ` (B - f' ` A) = B - f ` A\n\ngoal (1 subgoal):\n 1. (b \\<in> f' ` A) =\n    ((if b \\<in> B\n      then if b \\<in> f' ` A then the_elem (f ` {x \\<in> A. f' x = b})\n           else p' b\n      else b)\n     \\<in> f ` A)", "by auto"], ["proof (state)\nthis:\n  (b \\<in> f' ` A) = (p b \\<in> f ` A)\n\ngoal (1 subgoal):\n 1. (b \\<in> f' ` A) = (b' \\<in> f' ` A)", "also"], ["proof (state)\nthis:\n  (b \\<in> f' ` A) = (p b \\<in> f ` A)\n\ngoal (1 subgoal):\n 1. (b \\<in> f' ` A) = (b' \\<in> f' ` A)", "have \"p b \\<in> f ` A \\<longleftrightarrow> p b' \\<in> f ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p b \\<in> f ` A) = (p b' \\<in> f ` A)", "using \\<open>p b = p b'\\<close>"], ["proof (prove)\nusing this:\n  p b = p b'\n\ngoal (1 subgoal):\n 1. (p b \\<in> f ` A) = (p b' \\<in> f ` A)", "by simp"], ["proof (state)\nthis:\n  (p b \\<in> f ` A) = (p b' \\<in> f ` A)\n\ngoal (1 subgoal):\n 1. (b \\<in> f' ` A) = (b' \\<in> f' ` A)", "also"], ["proof (state)\nthis:\n  (p b \\<in> f ` A) = (p b' \\<in> f ` A)\n\ngoal (1 subgoal):\n 1. (b \\<in> f' ` A) = (b' \\<in> f' ` A)", "have \"p b' \\<in> f ` A \\<longleftrightarrow> b' \\<in> f' ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p b' \\<in> f ` A) = (b' \\<in> f' ` A)", "unfolding p_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((if b' \\<in> B\n      then if b' \\<in> f' ` A then the_elem (f ` {x \\<in> A. f' x = b'})\n           else p' b'\n      else b')\n     \\<in> f ` A) =\n    (b' \\<in> f' ` A)", "using \\<open>b' \\<in> B\\<close> \\<open>p' ` (B - f' ` A) = B - f ` A\\<close>"], ["proof (prove)\nusing this:\n  b' \\<in> B\n  p' ` (B - f' ` A) = B - f ` A\n\ngoal (1 subgoal):\n 1. ((if b' \\<in> B\n      then if b' \\<in> f' ` A then the_elem (f ` {x \\<in> A. f' x = b'})\n           else p' b'\n      else b')\n     \\<in> f ` A) =\n    (b' \\<in> f' ` A)", "by auto"], ["proof (state)\nthis:\n  (p b' \\<in> f ` A) = (b' \\<in> f' ` A)\n\ngoal (1 subgoal):\n 1. (b \\<in> f' ` A) = (b' \\<in> f' ` A)", "finally"], ["proof (chain)\npicking this:\n  (b \\<in> f' ` A) = (b' \\<in> f' ` A)", "show ?thesis"], ["proof (prove)\nusing this:\n  (b \\<in> f' ` A) = (b' \\<in> f' ` A)\n\ngoal (1 subgoal):\n 1. (b \\<in> f' ` A) = (b' \\<in> f' ` A)", "."], ["proof (state)\nthis:\n  (b \\<in> f' ` A) = (b' \\<in> f' ` A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (b \\<in> f' ` A) = (b' \\<in> f' ` A)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> B; y \\<in> B; p x = p y\\<rbrakk>\n       \\<Longrightarrow> x = y", "from this"], ["proof (chain)\npicking this:\n  (b \\<in> f' ` A) = (b' \\<in> f' ` A)", "have \"(b \\<in> f' ` A \\<and> b' \\<in> f' ` A) \\<or> (b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A)\""], ["proof (prove)\nusing this:\n  (b \\<in> f' ` A) = (b' \\<in> f' ` A)\n\ngoal (1 subgoal):\n 1. b \\<in> f' ` A \\<and> b' \\<in> f' ` A \\<or>\n    b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A", "by blast"], ["proof (state)\nthis:\n  b \\<in> f' ` A \\<and> b' \\<in> f' ` A \\<or>\n  b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> B; y \\<in> B; p x = p y\\<rbrakk>\n       \\<Longrightarrow> x = y", "from this"], ["proof (chain)\npicking this:\n  b \\<in> f' ` A \\<and> b' \\<in> f' ` A \\<or>\n  b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A", "show \"b = b'\""], ["proof (prove)\nusing this:\n  b \\<in> f' ` A \\<and> b' \\<in> f' ` A \\<or>\n  b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A\n\ngoal (1 subgoal):\n 1. b = b'", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. b \\<in> f' ` A \\<and> b' \\<in> f' ` A \\<Longrightarrow> b = b'\n 2. b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A \\<Longrightarrow> b = b'", "assume \"b \\<in> f' ` A \\<and> b' \\<in> f' ` A\""], ["proof (state)\nthis:\n  b \\<in> f' ` A \\<and> b' \\<in> f' ` A\n\ngoal (2 subgoals):\n 1. b \\<in> f' ` A \\<and> b' \\<in> f' ` A \\<Longrightarrow> b = b'\n 2. b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A \\<Longrightarrow> b = b'", "from this"], ["proof (chain)\npicking this:\n  b \\<in> f' ` A \\<and> b' \\<in> f' ` A", "obtain a a' where \"a \\<in> A\" \"b = f' a\" and \"a' \\<in> A\" \"b' = f' a'\""], ["proof (prove)\nusing this:\n  b \\<in> f' ` A \\<and> b' \\<in> f' ` A\n\ngoal (1 subgoal):\n 1. (\\<And>a a'.\n        \\<lbrakk>a \\<in> A; b = f' a; a' \\<in> A; b' = f' a'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a \\<in> A\n  b = f' a\n  a' \\<in> A\n  b' = f' a'\n\ngoal (2 subgoals):\n 1. b \\<in> f' ` A \\<and> b' \\<in> f' ` A \\<Longrightarrow> b = b'\n 2. b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A \\<Longrightarrow> b = b'", "from this \\<open>b \\<in> B\\<close> \\<open>b' \\<in> B\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> A\n  b = f' a\n  a' \\<in> A\n  b' = f' a'\n  b \\<in> B\n  b' \\<in> B", "have \"p b = f a\" \"p b' = f a'\""], ["proof (prove)\nusing this:\n  a \\<in> A\n  b = f' a\n  a' \\<in> A\n  b' = f' a'\n  b \\<in> B\n  b' \\<in> B\n\ngoal (1 subgoal):\n 1. p b = f a &&& p b' = f a'", "unfolding p_def"], ["proof (prove)\nusing this:\n  a \\<in> A\n  b = f' a\n  a' \\<in> A\n  b' = f' a'\n  b \\<in> B\n  b' \\<in> B\n\ngoal (1 subgoal):\n 1. (if b \\<in> B\n     then if b \\<in> f' ` A then the_elem (f ` {x \\<in> A. f' x = b})\n          else p' b\n     else b) =\n    f a &&&\n    (if b' \\<in> B\n     then if b' \\<in> f' ` A then the_elem (f ` {x \\<in> A. f' x = b'})\n          else p' b'\n     else b') =\n    f a'", "by auto"], ["proof (state)\nthis:\n  p b = f a\n  p b' = f a'\n\ngoal (2 subgoals):\n 1. b \\<in> f' ` A \\<and> b' \\<in> f' ` A \\<Longrightarrow> b = b'\n 2. b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A \\<Longrightarrow> b = b'", "from this \\<open>p b = p b'\\<close>"], ["proof (chain)\npicking this:\n  p b = f a\n  p b' = f a'\n  p b = p b'", "have \"f a = f a'\""], ["proof (prove)\nusing this:\n  p b = f a\n  p b' = f a'\n  p b = p b'\n\ngoal (1 subgoal):\n 1. f a = f a'", "by simp"], ["proof (state)\nthis:\n  f a = f a'\n\ngoal (2 subgoals):\n 1. b \\<in> f' ` A \\<and> b' \\<in> f' ` A \\<Longrightarrow> b = b'\n 2. b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A \\<Longrightarrow> b = b'", "from this"], ["proof (chain)\npicking this:\n  f a = f a'", "have \"f' a = f' a'\""], ["proof (prove)\nusing this:\n  f a = f a'\n\ngoal (1 subgoal):\n 1. f' a = f' a'", "using partitions_eq_implies[OF \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close> \\<open>f' \\<in> A \\<rightarrow>\\<^sub>E B\\<close> partitions_eq]"], ["proof (prove)\nusing this:\n  f a = f a'\n  \\<lbrakk>?x \\<in> A; ?x' \\<in> A; f ?x = f ?x'\\<rbrakk>\n  \\<Longrightarrow> f' ?x = f' ?x'\n\ngoal (1 subgoal):\n 1. f' a = f' a'", "using \\<open>a \\<in> A\\<close> \\<open>a' \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  f a = f a'\n  \\<lbrakk>?x \\<in> A; ?x' \\<in> A; f ?x = f ?x'\\<rbrakk>\n  \\<Longrightarrow> f' ?x = f' ?x'\n  a \\<in> A\n  a' \\<in> A\n\ngoal (1 subgoal):\n 1. f' a = f' a'", "by blast"], ["proof (state)\nthis:\n  f' a = f' a'\n\ngoal (2 subgoals):\n 1. b \\<in> f' ` A \\<and> b' \\<in> f' ` A \\<Longrightarrow> b = b'\n 2. b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A \\<Longrightarrow> b = b'", "from this"], ["proof (chain)\npicking this:\n  f' a = f' a'", "show \"b = b'\""], ["proof (prove)\nusing this:\n  f' a = f' a'\n\ngoal (1 subgoal):\n 1. b = b'", "using \\<open>b' = f' a'\\<close> \\<open>b = f' a\\<close>"], ["proof (prove)\nusing this:\n  f' a = f' a'\n  b' = f' a'\n  b = f' a\n\ngoal (1 subgoal):\n 1. b = b'", "by simp"], ["proof (state)\nthis:\n  b = b'\n\ngoal (1 subgoal):\n 1. b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A \\<Longrightarrow> b = b'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A \\<Longrightarrow> b = b'", "assume \"b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A\""], ["proof (state)\nthis:\n  b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A\n\ngoal (1 subgoal):\n 1. b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A \\<Longrightarrow> b = b'", "from this \\<open>b \\<in> B\\<close> \\<open>b' \\<in> B\\<close>"], ["proof (chain)\npicking this:\n  b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A\n  b \\<in> B\n  b' \\<in> B", "have \"p b' = p' b'\" \"p b = p' b\""], ["proof (prove)\nusing this:\n  b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A\n  b \\<in> B\n  b' \\<in> B\n\ngoal (1 subgoal):\n 1. p b' = p' b' &&& p b = p' b", "unfolding p_def"], ["proof (prove)\nusing this:\n  b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A\n  b \\<in> B\n  b' \\<in> B\n\ngoal (1 subgoal):\n 1. (if b' \\<in> B\n     then if b' \\<in> f' ` A then the_elem (f ` {x \\<in> A. f' x = b'})\n          else p' b'\n     else b') =\n    p' b' &&&\n    (if b \\<in> B\n     then if b \\<in> f' ` A then the_elem (f ` {x \\<in> A. f' x = b})\n          else p' b\n     else b) =\n    p' b", "by auto"], ["proof (state)\nthis:\n  p b' = p' b'\n  p b = p' b\n\ngoal (1 subgoal):\n 1. b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A \\<Longrightarrow> b = b'", "from this \\<open>p b = p b'\\<close>"], ["proof (chain)\npicking this:\n  p b' = p' b'\n  p b = p' b\n  p b = p b'", "have \"p' b = p' b'\""], ["proof (prove)\nusing this:\n  p b' = p' b'\n  p b = p' b\n  p b = p b'\n\ngoal (1 subgoal):\n 1. p' b = p' b'", "by simp"], ["proof (state)\nthis:\n  p' b = p' b'\n\ngoal (1 subgoal):\n 1. b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A \\<Longrightarrow> b = b'", "moreover"], ["proof (state)\nthis:\n  p' b = p' b'\n\ngoal (1 subgoal):\n 1. b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A \\<Longrightarrow> b = b'", "have \"b \\<in> B - f' ` A\" \"b' \\<in> B - f' ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> B - f' ` A &&& b' \\<in> B - f' ` A", "using \\<open>b \\<in> B\\<close> \\<open>b' \\<in> B\\<close> \\<open>b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A\\<close>"], ["proof (prove)\nusing this:\n  b \\<in> B\n  b' \\<in> B\n  b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A\n\ngoal (1 subgoal):\n 1. b \\<in> B - f' ` A &&& b' \\<in> B - f' ` A", "by auto"], ["proof (state)\nthis:\n  b \\<in> B - f' ` A\n  b' \\<in> B - f' ` A\n\ngoal (1 subgoal):\n 1. b \\<notin> f' ` A \\<and> b' \\<notin> f' ` A \\<Longrightarrow> b = b'", "ultimately"], ["proof (chain)\npicking this:\n  p' b = p' b'\n  b \\<in> B - f' ` A\n  b' \\<in> B - f' ` A", "show \"b = b'\""], ["proof (prove)\nusing this:\n  p' b = p' b'\n  b \\<in> B - f' ` A\n  b' \\<in> B - f' ` A\n\ngoal (1 subgoal):\n 1. b = b'", "using \\<open>bij_betw p' _ _\\<close>"], ["proof (prove)\nusing this:\n  p' b = p' b'\n  b \\<in> B - f' ` A\n  b' \\<in> B - f' ` A\n  bij_betw p' (B - f' ` A) (B - f ` A)\n\ngoal (1 subgoal):\n 1. b = b'", "by (metis bij_betw_inv_into_left)"], ["proof (state)\nthis:\n  b = b'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b = b'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on p B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bij_betw p B B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<notin> B \\<Longrightarrow> p x = x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<notin> B \\<Longrightarrow> p x = x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<notin> B \\<Longrightarrow> p x = x", "assume \"x \\<notin> B\""], ["proof (state)\nthis:\n  x \\<notin> B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<notin> B \\<Longrightarrow> p x = x", "from this"], ["proof (chain)\npicking this:\n  x \\<notin> B", "show \"p x = x\""], ["proof (prove)\nusing this:\n  x \\<notin> B\n\ngoal (1 subgoal):\n 1. p x = x", "using \\<open>f' \\<in> A \\<rightarrow>\\<^sub>E B\\<close> p_def"], ["proof (prove)\nusing this:\n  x \\<notin> B\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n  p ?b =\n  (if ?b \\<in> B\n   then if ?b \\<in> f' ` A then the_elem (f ` {x \\<in> A. f' x = ?b})\n        else p' ?b\n   else ?b)\n\ngoal (1 subgoal):\n 1. p x = x", "by auto"], ["proof (state)\nthis:\n  p x = x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p permutes B\n\ngoal (1 subgoal):\n 1. \\<exists>p. p permutes B \\<and> (\\<forall>x\\<in>A. f x = p (f' x))", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>A. f x = p (f' x)\n  p permutes B", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A. f x = p (f' x)\n  p permutes B\n\ngoal (1 subgoal):\n 1. \\<exists>p. p permutes B \\<and> (\\<forall>x\\<in>A. f x = p (f' x))", "by blast"], ["proof (state)\nthis:\n  \\<exists>p. p permutes B \\<and> (\\<forall>x\\<in>A. f x = p (f' x))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Number Partition of Range\\<close>"], ["", "subsubsection \\<open>Existence of a Suitable Finite Function\\<close>"], ["", "lemma obtain_partition:\n  assumes \"finite A\"\n  assumes \"number_partition (card A) N\"\n  shows \"\\<exists>P. partition_on A P \\<and> image_mset card (mset_set P) = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P. partition_on A P \\<and> image_mset card (mset_set P) = N", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  number_partition (card A) N\n\ngoal (1 subgoal):\n 1. \\<exists>P. partition_on A P \\<and> image_mset card (mset_set P) = N", "proof (induct N arbitrary: A)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>finite A; number_partition (card A) {#}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = {#}\n 2. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "case empty"], ["proof (state)\nthis:\n  finite A\n  number_partition (card A) {#}\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>finite A; number_partition (card A) {#}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = {#}\n 2. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "from this"], ["proof (chain)\npicking this:\n  finite A\n  number_partition (card A) {#}", "have \"A = {}\""], ["proof (prove)\nusing this:\n  finite A\n  number_partition (card A) {#}\n\ngoal (1 subgoal):\n 1. A = {}", "unfolding number_partition_def"], ["proof (prove)\nusing this:\n  finite A\n  \\<Sum>\\<^sub># {#} = card A \\<and> 0 \\<notin># {#}\n\ngoal (1 subgoal):\n 1. A = {}", "by auto"], ["proof (state)\nthis:\n  A = {}\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>finite A; number_partition (card A) {#}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = {#}\n 2. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "from this"], ["proof (chain)\npicking this:\n  A = {}", "have \"partition_on A {}\""], ["proof (prove)\nusing this:\n  A = {}\n\ngoal (1 subgoal):\n 1. partition_on A {}", "by (simp add: partition_on_empty)"], ["proof (state)\nthis:\n  partition_on A {}\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>finite A; number_partition (card A) {#}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = {#}\n 2. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "moreover"], ["proof (state)\nthis:\n  partition_on A {}\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>finite A; number_partition (card A) {#}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = {#}\n 2. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "have \"image_mset card (mset_set {}) = {#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset card (mset_set {}) = {#}", "by simp"], ["proof (state)\nthis:\n  image_mset card (mset_set {}) = {#}\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>finite A; number_partition (card A) {#}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = {#}\n 2. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "ultimately"], ["proof (chain)\npicking this:\n  partition_on A {}\n  image_mset card (mset_set {}) = {#}", "show ?case"], ["proof (prove)\nusing this:\n  partition_on A {}\n  image_mset card (mset_set {}) = {#}\n\ngoal (1 subgoal):\n 1. \\<exists>P. partition_on A P \\<and> image_mset card (mset_set P) = {#}", "by blast"], ["proof (state)\nthis:\n  \\<exists>P. partition_on A P \\<and> image_mset card (mset_set P) = {#}\n\ngoal (1 subgoal):\n 1. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "case (add x N)"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?A; number_partition (card ?A) N\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P.\n                       partition_on ?A P \\<and>\n                       image_mset card (mset_set P) = N\n  finite A\n  number_partition (card A) (add_mset x N)\n\ngoal (1 subgoal):\n 1. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "from add.prems(2)"], ["proof (chain)\npicking this:\n  number_partition (card A) (add_mset x N)", "have \"0 \\<notin># add_mset x N\" and \"sum_mset (add_mset x N) = card A\""], ["proof (prove)\nusing this:\n  number_partition (card A) (add_mset x N)\n\ngoal (1 subgoal):\n 1. 0 \\<notin># add_mset x N &&& \\<Sum>\\<^sub># (add_mset x N) = card A", "unfolding number_partition_def"], ["proof (prove)\nusing this:\n  \\<Sum>\\<^sub># (add_mset x N) = card A \\<and> 0 \\<notin># add_mset x N\n\ngoal (1 subgoal):\n 1. 0 \\<notin># add_mset x N &&& \\<Sum>\\<^sub># (add_mset x N) = card A", "by auto"], ["proof (state)\nthis:\n  0 \\<notin># add_mset x N\n  \\<Sum>\\<^sub># (add_mset x N) = card A\n\ngoal (1 subgoal):\n 1. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "from this"], ["proof (chain)\npicking this:\n  0 \\<notin># add_mset x N\n  \\<Sum>\\<^sub># (add_mset x N) = card A", "have \"x \\<le> card A\""], ["proof (prove)\nusing this:\n  0 \\<notin># add_mset x N\n  \\<Sum>\\<^sub># (add_mset x N) = card A\n\ngoal (1 subgoal):\n 1. x \\<le> card A", "by auto"], ["proof (state)\nthis:\n  x \\<le> card A\n\ngoal (1 subgoal):\n 1. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "from this"], ["proof (chain)\npicking this:\n  x \\<le> card A", "obtain X where \"X \\<subseteq> A\" and \"card X = x\""], ["proof (prove)\nusing this:\n  x \\<le> card A\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>X \\<subseteq> A; card X = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using subset_with_given_card_exists"], ["proof (prove)\nusing this:\n  x \\<le> card A\n  ?n \\<le> card ?A \\<Longrightarrow> \\<exists>B\\<subseteq>?A. card B = ?n\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>X \\<subseteq> A; card X = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  X \\<subseteq> A\n  card X = x\n\ngoal (1 subgoal):\n 1. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "from this"], ["proof (chain)\npicking this:\n  X \\<subseteq> A\n  card X = x", "have \"X \\<noteq> {}\""], ["proof (prove)\nusing this:\n  X \\<subseteq> A\n  card X = x\n\ngoal (1 subgoal):\n 1. X \\<noteq> {}", "using \\<open>0 \\<notin># add_mset x N\\<close> \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  X \\<subseteq> A\n  card X = x\n  0 \\<notin># add_mset x N\n  finite A\n\ngoal (1 subgoal):\n 1. X \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "have \"sum_mset N = card (A - X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># N = card (A - X)", "using \\<open>sum_mset (add_mset x N) = card A\\<close> \\<open>card X = x\\<close> \\<open>X \\<subseteq> A\\<close>"], ["proof (prove)\nusing this:\n  \\<Sum>\\<^sub># (add_mset x N) = card A\n  card X = x\n  X \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># N = card (A - X)", "by (metis add.commute add.prems(1) add_diff_cancel_right' card_Diff_subset infinite_super sum_mset.add_mset)"], ["proof (state)\nthis:\n  \\<Sum>\\<^sub># N = card (A - X)\n\ngoal (1 subgoal):\n 1. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "from this \\<open>0 \\<notin># add_mset x N\\<close>"], ["proof (chain)\npicking this:\n  \\<Sum>\\<^sub># N = card (A - X)\n  0 \\<notin># add_mset x N", "have \"number_partition (card (A - X)) N\""], ["proof (prove)\nusing this:\n  \\<Sum>\\<^sub># N = card (A - X)\n  0 \\<notin># add_mset x N\n\ngoal (1 subgoal):\n 1. number_partition (card (A - X)) N", "unfolding number_partition_def"], ["proof (prove)\nusing this:\n  \\<Sum>\\<^sub># N = card (A - X)\n  0 \\<notin># add_mset x N\n\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># N = card (A - X) \\<and> 0 \\<notin># N", "by auto"], ["proof (state)\nthis:\n  number_partition (card (A - X)) N\n\ngoal (1 subgoal):\n 1. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "from this"], ["proof (chain)\npicking this:\n  number_partition (card (A - X)) N", "obtain P where \"partition_on (A - X) P\" and eq_N: \"image_mset card (mset_set P) = N\""], ["proof (prove)\nusing this:\n  number_partition (card (A - X)) N\n\ngoal (1 subgoal):\n 1. (\\<And>P.\n        \\<lbrakk>partition_on (A - X) P;\n         image_mset card (mset_set P) = N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using add.hyps \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  number_partition (card (A - X)) N\n  \\<lbrakk>finite ?A; number_partition (card ?A) N\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P.\n                       partition_on ?A P \\<and>\n                       image_mset card (mset_set P) = N\n  finite A\n\ngoal (1 subgoal):\n 1. (\\<And>P.\n        \\<lbrakk>partition_on (A - X) P;\n         image_mset card (mset_set P) = N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  partition_on (A - X) P\n  image_mset card (mset_set P) = N\n\ngoal (1 subgoal):\n 1. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "from \\<open>partition_on (A - X) P\\<close>"], ["proof (chain)\npicking this:\n  partition_on (A - X) P", "have \"finite P\""], ["proof (prove)\nusing this:\n  partition_on (A - X) P\n\ngoal (1 subgoal):\n 1. finite P", "using \\<open>finite A\\<close> finite_elements"], ["proof (prove)\nusing this:\n  partition_on (A - X) P\n  finite A\n  \\<lbrakk>finite ?A; partition_on ?A ?P\\<rbrakk>\n  \\<Longrightarrow> finite ?P\n\ngoal (1 subgoal):\n 1. finite P", "by blast"], ["proof (state)\nthis:\n  finite P\n\ngoal (1 subgoal):\n 1. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "from \\<open>partition_on (A - X) P\\<close>"], ["proof (chain)\npicking this:\n  partition_on (A - X) P", "have \"X \\<notin> P\""], ["proof (prove)\nusing this:\n  partition_on (A - X) P\n\ngoal (1 subgoal):\n 1. X \\<notin> P", "using \\<open>X \\<noteq> {}\\<close> partition_onD1"], ["proof (prove)\nusing this:\n  partition_on (A - X) P\n  X \\<noteq> {}\n  partition_on ?A ?P \\<Longrightarrow> ?A = \\<Union> ?P\n\ngoal (1 subgoal):\n 1. X \\<notin> P", "by fastforce"], ["proof (state)\nthis:\n  X \\<notin> P\n\ngoal (1 subgoal):\n 1. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "have \"partition_on A (insert X P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partition_on A (insert X P)", "using \\<open>partition_on (A - X) P\\<close> \\<open>X \\<subseteq> A\\<close> \\<open>X \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  partition_on (A - X) P\n  X \\<subseteq> A\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. partition_on A (insert X P)", "by (rule partition_on_insert')"], ["proof (state)\nthis:\n  partition_on A (insert X P)\n\ngoal (1 subgoal):\n 1. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "moreover"], ["proof (state)\nthis:\n  partition_on A (insert X P)\n\ngoal (1 subgoal):\n 1. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "have \"image_mset card (mset_set (insert X P)) = add_mset x N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset card (mset_set (insert X P)) = add_mset x N", "using eq_N \\<open>card X = x\\<close> \\<open>finite P\\<close> \\<open>X \\<notin> P\\<close>"], ["proof (prove)\nusing this:\n  image_mset card (mset_set P) = N\n  card X = x\n  finite P\n  X \\<notin> P\n\ngoal (1 subgoal):\n 1. image_mset card (mset_set (insert X P)) = add_mset x N", "by simp"], ["proof (state)\nthis:\n  image_mset card (mset_set (insert X P)) = add_mset x N\n\ngoal (1 subgoal):\n 1. \\<And>x N A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; number_partition (card A) N\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P.\n  partition_on A P \\<and> image_mset card (mset_set P) = N;\n        finite A; number_partition (card A) (add_mset x N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            partition_on A P \\<and>\n                            image_mset card (mset_set P) = add_mset x N", "ultimately"], ["proof (chain)\npicking this:\n  partition_on A (insert X P)\n  image_mset card (mset_set (insert X P)) = add_mset x N", "show ?case"], ["proof (prove)\nusing this:\n  partition_on A (insert X P)\n  image_mset card (mset_set (insert X P)) = add_mset x N\n\ngoal (1 subgoal):\n 1. \\<exists>P.\n       partition_on A P \\<and> image_mset card (mset_set P) = add_mset x N", "by blast"], ["proof (state)\nthis:\n  \\<exists>P.\n     partition_on A P \\<and> image_mset card (mset_set P) = add_mset x N\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma obtain_extensional_function_from_number_partition:\n  assumes \"finite A\" \"finite B\"\n  assumes \"number_partition (card A) N\"\n  assumes \"size N \\<le> card B\"\n  shows \"\\<exists>f\\<in>A \\<rightarrow>\\<^sub>E B. image_mset (\\<lambda>X. card X) (mset_set (((\\<lambda>b. {x \\<in> A. f x = b})) ` B - {{}})) = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E B.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n       N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E B.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n       N", "obtain P where \"partition_on A P\" and eq_N: \"image_mset card (mset_set P) = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P.\n        \\<lbrakk>partition_on A P; image_mset card (mset_set P) = N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms obtain_partition"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  number_partition (card A) N\n  size N \\<le> card B\n  \\<lbrakk>finite ?A; number_partition (card ?A) ?N\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P.\n                       partition_on ?A P \\<and>\n                       image_mset card (mset_set P) = ?N\n\ngoal (1 subgoal):\n 1. (\\<And>P.\n        \\<lbrakk>partition_on A P; image_mset card (mset_set P) = N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  partition_on A P\n  image_mset card (mset_set P) = N\n\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E B.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n       N", "from eq_N[symmetric] \\<open>size N \\<le> card B\\<close>"], ["proof (chain)\npicking this:\n  N = image_mset card (mset_set P)\n  size N \\<le> card B", "have \"card P \\<le> card B\""], ["proof (prove)\nusing this:\n  N = image_mset card (mset_set P)\n  size N \\<le> card B\n\ngoal (1 subgoal):\n 1. card P \\<le> card B", "by simp"], ["proof (state)\nthis:\n  card P \\<le> card B\n\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E B.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n       N", "from \\<open>partition_on A P\\<close> this"], ["proof (chain)\npicking this:\n  partition_on A P\n  card P \\<le> card B", "obtain f where \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n    and eq_P: \"(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P\""], ["proof (prove)\nusing this:\n  partition_on A P\n  card P \\<le> card B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E B;\n         (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using obtain_function_with_partition[OF \\<open>finite A\\<close> \\<open>finite B\\<close>]"], ["proof (prove)\nusing this:\n  partition_on A P\n  card P \\<le> card B\n  \\<lbrakk>partition_on A ?P; card ?P \\<le> card B\\<rbrakk>\n  \\<Longrightarrow> \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E B.\n                       (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = ?P\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E B;\n         (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P\n\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E B.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n       N", "have \"image_mset (\\<lambda>X. card X) (mset_set (((\\<lambda>b. {x \\<in> A. f x = b})) ` B - {{}})) = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n    N", "using eq_P eq_N"], ["proof (prove)\nusing this:\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P\n  image_mset card (mset_set P) = N\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n    N", "by simp"], ["proof (state)\nthis:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n  N\n\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E B.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n       N", "from this \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (chain)\npicking this:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n  N\n  f \\<in> A \\<rightarrow>\\<^sub>E B", "show ?thesis"], ["proof (prove)\nusing this:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n  N\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E B.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n       N", "by auto"], ["proof (state)\nthis:\n  \\<exists>f\\<in>A \\<rightarrow>\\<^sub>E B.\n     image_mset card\n      (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n     N\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Equality under Permutation Application\\<close>"], ["", "lemma permutes_implies_multiset_of_partition_cards_eq:\n  assumes \"p\\<^sub>A permutes A\" \"p\\<^sub>B permutes B\"\n  shows \"image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B - {{}})) = image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n        {{}})) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n        {{}})) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "have \"inj_on ((`) (inv p\\<^sub>A)) ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on ((`) (inv p\\<^sub>A))\n     ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})", "by (meson \\<open>p\\<^sub>A permutes A\\<close> inj_image_eq_iff inj_onI permutes_surj surj_imp_inj_inv)"], ["proof (state)\nthis:\n  inj_on ((`) (inv p\\<^sub>A))\n   ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n        {{}})) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "have \"image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B - {{}})) =\n    image_mset card (mset_set ((\\<lambda>X. inv p\\<^sub>A ` X) ` ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n        {{}})) =\n    image_mset card\n     (mset_set\n       ((`) (inv p\\<^sub>A) `\n        ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n        {{}})) =\n    image_mset card\n     (mset_set\n       ((`) (inv p\\<^sub>A) `\n        ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})))", "have \"(\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B - {{}} = (\\<lambda>b. {x \\<in> A. f' (p\\<^sub>A x) = b}) ` B - {{}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B - {{}} =\n    (\\<lambda>b. {x \\<in> A. f' (p\\<^sub>A x) = b}) ` B - {{}}", "using permutes_implies_inv_image_on_eq[OF \\<open>p\\<^sub>B permutes B\\<close>]"], ["proof (prove)\nusing this:\n  (\\<lambda>b. {x \\<in> ?A. p\\<^sub>B (?f x) = b}) ` B =\n  (\\<lambda>b. {x \\<in> ?A. ?f x = b}) ` B\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B - {{}} =\n    (\\<lambda>b. {x \\<in> A. f' (p\\<^sub>A x) = b}) ` B - {{}}", "by metis"], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B - {{}} =\n  (\\<lambda>b. {x \\<in> A. f' (p\\<^sub>A x) = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n        {{}})) =\n    image_mset card\n     (mset_set\n       ((`) (inv p\\<^sub>A) `\n        ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})))", "also"], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B - {{}} =\n  (\\<lambda>b. {x \\<in> A. f' (p\\<^sub>A x) = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n        {{}})) =\n    image_mset card\n     (mset_set\n       ((`) (inv p\\<^sub>A) `\n        ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})))", "have \"\\<dots> = (\\<lambda>b. inv p\\<^sub>A ` {x \\<in> A. f' x = b}) ` B - {{}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f' (p\\<^sub>A x) = b}) ` B - {{}} =\n    (\\<lambda>b. inv p\\<^sub>A ` {x \\<in> A. f' x = b}) ` B - {{}}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f' (p\\<^sub>A x) = b}) ` B - {{}} =\n    (\\<lambda>b. inv p\\<^sub>A ` {x \\<in> A. f' x = b}) ` B - {{}}", "have \"{x \\<in> A. f' (p\\<^sub>A x) = b} = inv p\\<^sub>A ` {x \\<in> A. f' x = b}\" for b"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> A. f' (p\\<^sub>A x) = b} =\n    inv p\\<^sub>A ` {x \\<in> A. f' x = b}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {x \\<in> A. f' (p\\<^sub>A x) = b}\n    \\<subseteq> inv p\\<^sub>A ` {x \\<in> A. f' x = b}\n 2. inv p\\<^sub>A ` {x \\<in> A. f' x = b}\n    \\<subseteq> {x \\<in> A. f' (p\\<^sub>A x) = b}", "show \"{x \\<in> A. f' (p\\<^sub>A x) = b} \\<subseteq> inv p\\<^sub>A ` {x \\<in> A. f' x = b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> A. f' (p\\<^sub>A x) = b}\n    \\<subseteq> inv p\\<^sub>A ` {x \\<in> A. f' x = b}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b} \\<Longrightarrow>\n       x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b} \\<Longrightarrow>\n       x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b}", "assume \"x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b}\""], ["proof (state)\nthis:\n  x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b} \\<Longrightarrow>\n       x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b}", "from this"], ["proof (chain)\npicking this:\n  x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b}", "have \"x \\<in> A\" \"f' (p\\<^sub>A x) = b\""], ["proof (prove)\nusing this:\n  x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b}\n\ngoal (1 subgoal):\n 1. x \\<in> A &&& f' (p\\<^sub>A x) = b", "by auto"], ["proof (state)\nthis:\n  x \\<in> A\n  f' (p\\<^sub>A x) = b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b} \\<Longrightarrow>\n       x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b}", "moreover"], ["proof (state)\nthis:\n  x \\<in> A\n  f' (p\\<^sub>A x) = b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b} \\<Longrightarrow>\n       x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b}", "from this \\<open>p\\<^sub>A permutes A\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> A\n  f' (p\\<^sub>A x) = b\n  p\\<^sub>A permutes A", "have \"p\\<^sub>A x \\<in> A\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  f' (p\\<^sub>A x) = b\n  p\\<^sub>A permutes A\n\ngoal (1 subgoal):\n 1. p\\<^sub>A x \\<in> A", "by (simp add: permutes_in_image)"], ["proof (state)\nthis:\n  p\\<^sub>A x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b} \\<Longrightarrow>\n       x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b}", "moreover"], ["proof (state)\nthis:\n  p\\<^sub>A x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b} \\<Longrightarrow>\n       x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b}", "from \\<open>p\\<^sub>A permutes A\\<close>"], ["proof (chain)\npicking this:\n  p\\<^sub>A permutes A", "have \"x = inv p\\<^sub>A (p\\<^sub>A x)\""], ["proof (prove)\nusing this:\n  p\\<^sub>A permutes A\n\ngoal (1 subgoal):\n 1. x = inv p\\<^sub>A (p\\<^sub>A x)", "using permutes_inverses(2)"], ["proof (prove)\nusing this:\n  p\\<^sub>A permutes A\n  ?p permutes ?S \\<Longrightarrow> inv ?p (?p ?x) = ?x\n\ngoal (1 subgoal):\n 1. x = inv p\\<^sub>A (p\\<^sub>A x)", "by fastforce"], ["proof (state)\nthis:\n  x = inv p\\<^sub>A (p\\<^sub>A x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b} \\<Longrightarrow>\n       x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b}", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> A\n  f' (p\\<^sub>A x) = b\n  p\\<^sub>A x \\<in> A\n  x = inv p\\<^sub>A (p\\<^sub>A x)", "show \"x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b}\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  f' (p\\<^sub>A x) = b\n  p\\<^sub>A x \\<in> A\n  x = inv p\\<^sub>A (p\\<^sub>A x)\n\ngoal (1 subgoal):\n 1. x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b}", "by auto"], ["proof (state)\nthis:\n  x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {x \\<in> A. f' (p\\<^sub>A x) = b}\n  \\<subseteq> inv p\\<^sub>A ` {x \\<in> A. f' x = b}\n\ngoal (1 subgoal):\n 1. inv p\\<^sub>A ` {x \\<in> A. f' x = b}\n    \\<subseteq> {x \\<in> A. f' (p\\<^sub>A x) = b}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. inv p\\<^sub>A ` {x \\<in> A. f' x = b}\n    \\<subseteq> {x \\<in> A. f' (p\\<^sub>A x) = b}", "show \"inv p\\<^sub>A ` {x \\<in> A. f' x = b} \\<subseteq> {x \\<in> A. f' (p\\<^sub>A x) = b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv p\\<^sub>A ` {x \\<in> A. f' x = b}\n    \\<subseteq> {x \\<in> A. f' (p\\<^sub>A x) = b}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b} \\<Longrightarrow>\n       x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b} \\<Longrightarrow>\n       x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b}", "assume \"x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b}\""], ["proof (state)\nthis:\n  x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b} \\<Longrightarrow>\n       x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b}", "from this"], ["proof (chain)\npicking this:\n  x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b}", "obtain x' where x: \"x = inv p\\<^sub>A x'\" \"x' \\<in> A\" \"f' x' = b\""], ["proof (prove)\nusing this:\n  x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b}\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x = inv p\\<^sub>A x'; x' \\<in> A; f' x' = b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = inv p\\<^sub>A x'\n  x' \\<in> A\n  f' x' = b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b} \\<Longrightarrow>\n       x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b}", "from this \\<open>p\\<^sub>A permutes A\\<close>"], ["proof (chain)\npicking this:\n  x = inv p\\<^sub>A x'\n  x' \\<in> A\n  f' x' = b\n  p\\<^sub>A permutes A", "have \"x \\<in> A\""], ["proof (prove)\nusing this:\n  x = inv p\\<^sub>A x'\n  x' \\<in> A\n  f' x' = b\n  p\\<^sub>A permutes A\n\ngoal (1 subgoal):\n 1. x \\<in> A", "by (simp add: permutes_in_image permutes_inv)"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b} \\<Longrightarrow>\n       x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b}", "from \\<open>x = inv p\\<^sub>A x'\\<close> \\<open>f' x' = b\\<close>"], ["proof (chain)\npicking this:\n  x = inv p\\<^sub>A x'\n  f' x' = b", "have \"f' (p\\<^sub>A x) = b\""], ["proof (prove)\nusing this:\n  x = inv p\\<^sub>A x'\n  f' x' = b\n\ngoal (1 subgoal):\n 1. f' (p\\<^sub>A x) = b", "using \\<open>p\\<^sub>A permutes A\\<close> permutes_inverses(1)"], ["proof (prove)\nusing this:\n  x = inv p\\<^sub>A x'\n  f' x' = b\n  p\\<^sub>A permutes A\n  ?p permutes ?S \\<Longrightarrow> ?p (inv ?p ?x) = ?x\n\ngoal (1 subgoal):\n 1. f' (p\\<^sub>A x) = b", "by fastforce"], ["proof (state)\nthis:\n  f' (p\\<^sub>A x) = b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> inv p\\<^sub>A ` {x \\<in> A. f' x = b} \\<Longrightarrow>\n       x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b}", "from this \\<open>x \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  f' (p\\<^sub>A x) = b\n  x \\<in> A", "show \"x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b}\""], ["proof (prove)\nusing this:\n  f' (p\\<^sub>A x) = b\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {x \\<in> A. f' (p\\<^sub>A x) = b}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inv p\\<^sub>A ` {x \\<in> A. f' x = b}\n  \\<subseteq> {x \\<in> A. f' (p\\<^sub>A x) = b}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {x \\<in> A. f' (p\\<^sub>A x) = ?b} =\n  inv p\\<^sub>A ` {x \\<in> A. f' x = ?b}\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f' (p\\<^sub>A x) = b}) ` B - {{}} =\n    (\\<lambda>b. inv p\\<^sub>A ` {x \\<in> A. f' x = b}) ` B - {{}}", "from this"], ["proof (chain)\npicking this:\n  {x \\<in> A. f' (p\\<^sub>A x) = ?b} =\n  inv p\\<^sub>A ` {x \\<in> A. f' x = ?b}", "show ?thesis"], ["proof (prove)\nusing this:\n  {x \\<in> A. f' (p\\<^sub>A x) = ?b} =\n  inv p\\<^sub>A ` {x \\<in> A. f' x = ?b}\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f' (p\\<^sub>A x) = b}) ` B - {{}} =\n    (\\<lambda>b. inv p\\<^sub>A ` {x \\<in> A. f' x = b}) ` B - {{}}", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. f' (p\\<^sub>A x) = b}) ` B - {{}} =\n  (\\<lambda>b. inv p\\<^sub>A ` {x \\<in> A. f' x = b}) ` B - {{}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. f' (p\\<^sub>A x) = b}) ` B - {{}} =\n  (\\<lambda>b. inv p\\<^sub>A ` {x \\<in> A. f' x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n        {{}})) =\n    image_mset card\n     (mset_set\n       ((`) (inv p\\<^sub>A) `\n        ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})))", "also"], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. f' (p\\<^sub>A x) = b}) ` B - {{}} =\n  (\\<lambda>b. inv p\\<^sub>A ` {x \\<in> A. f' x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n        {{}})) =\n    image_mset card\n     (mset_set\n       ((`) (inv p\\<^sub>A) `\n        ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})))", "have \"\\<dots> = (\\<lambda>X. inv p\\<^sub>A ` X) ` ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b. inv p\\<^sub>A ` {x \\<in> A. f' x = b}) ` B - {{}} =\n    (`) (inv p\\<^sub>A) ` ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>b. inv p\\<^sub>A ` {x \\<in> A. f' x = b}) ` B - {{}} =\n  (`) (inv p\\<^sub>A) ` ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n        {{}})) =\n    image_mset card\n     (mset_set\n       ((`) (inv p\\<^sub>A) `\n        ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B - {{}} =\n  (`) (inv p\\<^sub>A) ` ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B - {{}} =\n  (`) (inv p\\<^sub>A) ` ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n        {{}})) =\n    image_mset card\n     (mset_set\n       ((`) (inv p\\<^sub>A) `\n        ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})))", "by simp"], ["proof (state)\nthis:\n  image_mset card\n   (mset_set\n     ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n      {{}})) =\n  image_mset card\n   (mset_set\n     ((`) (inv p\\<^sub>A) `\n      ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  image_mset card\n   (mset_set\n     ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n      {{}})) =\n  image_mset card\n   (mset_set\n     ((`) (inv p\\<^sub>A) `\n      ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})))\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n        {{}})) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "also"], ["proof (state)\nthis:\n  image_mset card\n   (mset_set\n     ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n      {{}})) =\n  image_mset card\n   (mset_set\n     ((`) (inv p\\<^sub>A) `\n      ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})))\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n        {{}})) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "have \"\\<dots> = image_mset (\\<lambda>X. card (inv p\\<^sub>A ` X)) (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((`) (inv p\\<^sub>A) `\n        ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))) =\n    {#card (inv p\\<^sub>A ` X)\n    . X \\<in># mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})#}", "using \\<open>inj_on ((`) (inv p\\<^sub>A)) ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})\\<close>"], ["proof (prove)\nusing this:\n  inj_on ((`) (inv p\\<^sub>A))\n   ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((`) (inv p\\<^sub>A) `\n        ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))) =\n    {#card (inv p\\<^sub>A ` X)\n    . X \\<in># mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})#}", "by (simp only: image_mset_mset_set[symmetric] image_mset.compositionality) (meson comp_apply)"], ["proof (state)\nthis:\n  image_mset card\n   (mset_set\n     ((`) (inv p\\<^sub>A) `\n      ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))) =\n  {#card (inv p\\<^sub>A ` X)\n  . X \\<in># mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})#}\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n        {{}})) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "also"], ["proof (state)\nthis:\n  image_mset card\n   (mset_set\n     ((`) (inv p\\<^sub>A) `\n      ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))) =\n  {#card (inv p\\<^sub>A ` X)\n  . X \\<in># mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})#}\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n        {{}})) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "have \"\\<dots> = image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {#card (inv p\\<^sub>A ` X)\n    . X \\<in># mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})#} =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "using \\<open>p\\<^sub>A permutes A\\<close>"], ["proof (prove)\nusing this:\n  p\\<^sub>A permutes A\n\ngoal (1 subgoal):\n 1. {#card (inv p\\<^sub>A ` X)\n    . X \\<in># mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})#} =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "by (simp add: card_image inj_on_inv_into permutes_surj)"], ["proof (state)\nthis:\n  {#card (inv p\\<^sub>A ` X)\n  . X \\<in># mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})#} =\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n        {{}})) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "finally"], ["proof (chain)\npicking this:\n  image_mset card\n   (mset_set\n     ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n      {{}})) =\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "show ?thesis"], ["proof (prove)\nusing this:\n  image_mset card\n   (mset_set\n     ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n      {{}})) =\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n        {{}})) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "."], ["proof (state)\nthis:\n  image_mset card\n   (mset_set\n     ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n      {{}})) =\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Existence of Permutation\\<close>"], ["", "lemma partition_implies_permutes:\n  assumes \"finite A\"\n  assumes \"partition_on A P\" \"partition_on A P'\"\n  assumes \"image_mset card (mset_set P') = image_mset card (mset_set P)\"\n  obtains p where \"p permutes A\" \"P' = (\\<lambda>X. p ` X) ` P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; P' = (`) p ` P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; P' = (`) p ` P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>partition_on A P\\<close> \\<open>partition_on A P'\\<close>"], ["proof (chain)\npicking this:\n  partition_on A P\n  partition_on A P'", "have \"finite P\" \"finite P'\""], ["proof (prove)\nusing this:\n  partition_on A P\n  partition_on A P'\n\ngoal (1 subgoal):\n 1. finite P &&& finite P'", "using \\<open>finite A\\<close> finite_elements"], ["proof (prove)\nusing this:\n  partition_on A P\n  partition_on A P'\n  finite A\n  \\<lbrakk>finite ?A; partition_on ?A ?P\\<rbrakk>\n  \\<Longrightarrow> finite ?P\n\ngoal (1 subgoal):\n 1. finite P &&& finite P'", "by blast+"], ["proof (state)\nthis:\n  finite P\n  finite P'\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; P' = (`) p ` P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from this \\<open>image_mset card (mset_set P') = image_mset card (mset_set P)\\<close>"], ["proof (chain)\npicking this:\n  finite P\n  finite P'\n  image_mset card (mset_set P') = image_mset card (mset_set P)", "obtain bij where \"bij_betw bij P P'\" and \"\\<forall>X\\<in>P. card X = card (bij X)\""], ["proof (prove)\nusing this:\n  finite P\n  finite P'\n  image_mset card (mset_set P') = image_mset card (mset_set P)\n\ngoal (1 subgoal):\n 1. (\\<And>bij.\n        \\<lbrakk>bij_betw bij P P';\n         \\<forall>X\\<in>P. card X = card (bij X)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using image_mset_eq_implies_bij_betw"], ["proof (prove)\nusing this:\n  finite P\n  finite P'\n  image_mset card (mset_set P') = image_mset card (mset_set P)\n  \\<lbrakk>finite ?A; finite ?A';\n   image_mset ?f (mset_set ?A) = image_mset ?f' (mset_set ?A');\n   \\<And>bij.\n      \\<lbrakk>bij_betw bij ?A ?A';\n       \\<forall>x\\<in>?A. ?f x = ?f' (bij x)\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>bij.\n        \\<lbrakk>bij_betw bij P P';\n         \\<forall>X\\<in>P. card X = card (bij X)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  bij_betw bij P P'\n  \\<forall>X\\<in>P. card X = card (bij X)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; P' = (`) p ` P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<forall>X\\<in>P. \\<exists>p'. bij_betw p' X (bij X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>P. \\<exists>p'. bij_betw p' X (bij X)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X. X \\<in> P \\<Longrightarrow> \\<exists>p'. bij_betw p' X (bij X)", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X. X \\<in> P \\<Longrightarrow> \\<exists>p'. bij_betw p' X (bij X)", "assume \"X \\<in> P\""], ["proof (state)\nthis:\n  X \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>X. X \\<in> P \\<Longrightarrow> \\<exists>p'. bij_betw p' X (bij X)", "from this"], ["proof (chain)\npicking this:\n  X \\<in> P", "have \"X \\<subseteq> A\""], ["proof (prove)\nusing this:\n  X \\<in> P\n\ngoal (1 subgoal):\n 1. X \\<subseteq> A", "using \\<open>partition_on A P\\<close> partition_onD1"], ["proof (prove)\nusing this:\n  X \\<in> P\n  partition_on A P\n  partition_on ?A ?P \\<Longrightarrow> ?A = \\<Union> ?P\n\ngoal (1 subgoal):\n 1. X \\<subseteq> A", "by fastforce"], ["proof (state)\nthis:\n  X \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>X. X \\<in> P \\<Longrightarrow> \\<exists>p'. bij_betw p' X (bij X)", "from this"], ["proof (chain)\npicking this:\n  X \\<subseteq> A", "have \"finite X\""], ["proof (prove)\nusing this:\n  X \\<subseteq> A\n\ngoal (1 subgoal):\n 1. finite X", "using \\<open>finite A\\<close> rev_finite_subset"], ["proof (prove)\nusing this:\n  X \\<subseteq> A\n  finite A\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite X", "by blast"], ["proof (state)\nthis:\n  finite X\n\ngoal (1 subgoal):\n 1. \\<And>X. X \\<in> P \\<Longrightarrow> \\<exists>p'. bij_betw p' X (bij X)", "from \\<open>X \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  X \\<in> P", "have \"bij X \\<in> P'\""], ["proof (prove)\nusing this:\n  X \\<in> P\n\ngoal (1 subgoal):\n 1. bij X \\<in> P'", "using \\<open>bij_betw bij P P'\\<close> bij_betwE"], ["proof (prove)\nusing this:\n  X \\<in> P\n  bij_betw bij P P'\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n\ngoal (1 subgoal):\n 1. bij X \\<in> P'", "by blast"], ["proof (state)\nthis:\n  bij X \\<in> P'\n\ngoal (1 subgoal):\n 1. \\<And>X. X \\<in> P \\<Longrightarrow> \\<exists>p'. bij_betw p' X (bij X)", "from this"], ["proof (chain)\npicking this:\n  bij X \\<in> P'", "have \"bij X \\<subseteq> A\""], ["proof (prove)\nusing this:\n  bij X \\<in> P'\n\ngoal (1 subgoal):\n 1. bij X \\<subseteq> A", "using \\<open>partition_on A P'\\<close> partition_onD1"], ["proof (prove)\nusing this:\n  bij X \\<in> P'\n  partition_on A P'\n  partition_on ?A ?P \\<Longrightarrow> ?A = \\<Union> ?P\n\ngoal (1 subgoal):\n 1. bij X \\<subseteq> A", "by fastforce"], ["proof (state)\nthis:\n  bij X \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>X. X \\<in> P \\<Longrightarrow> \\<exists>p'. bij_betw p' X (bij X)", "from this"], ["proof (chain)\npicking this:\n  bij X \\<subseteq> A", "have \"finite (bij X)\""], ["proof (prove)\nusing this:\n  bij X \\<subseteq> A\n\ngoal (1 subgoal):\n 1. finite (bij X)", "using \\<open>finite A\\<close> rev_finite_subset"], ["proof (prove)\nusing this:\n  bij X \\<subseteq> A\n  finite A\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite (bij X)", "by blast"], ["proof (state)\nthis:\n  finite (bij X)\n\ngoal (1 subgoal):\n 1. \\<And>X. X \\<in> P \\<Longrightarrow> \\<exists>p'. bij_betw p' X (bij X)", "from \\<open>X \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  X \\<in> P", "have \"card X = card (bij X)\""], ["proof (prove)\nusing this:\n  X \\<in> P\n\ngoal (1 subgoal):\n 1. card X = card (bij X)", "using \\<open>\\<forall>X\\<in>P. card X = card (bij X)\\<close>"], ["proof (prove)\nusing this:\n  X \\<in> P\n  \\<forall>X\\<in>P. card X = card (bij X)\n\ngoal (1 subgoal):\n 1. card X = card (bij X)", "by blast"], ["proof (state)\nthis:\n  card X = card (bij X)\n\ngoal (1 subgoal):\n 1. \\<And>X. X \\<in> P \\<Longrightarrow> \\<exists>p'. bij_betw p' X (bij X)", "from this"], ["proof (chain)\npicking this:\n  card X = card (bij X)", "show \"\\<exists>p'. bij_betw p' X (bij X)\""], ["proof (prove)\nusing this:\n  card X = card (bij X)\n\ngoal (1 subgoal):\n 1. \\<exists>p'. bij_betw p' X (bij X)", "using \\<open>finite (bij X)\\<close> \\<open>finite X\\<close> finite_same_card_bij"], ["proof (prove)\nusing this:\n  card X = card (bij X)\n  finite (bij X)\n  finite X\n  \\<lbrakk>finite ?A; finite ?B; card ?A = card ?B\\<rbrakk>\n  \\<Longrightarrow> \\<exists>h. bij_betw h ?A ?B\n\ngoal (1 subgoal):\n 1. \\<exists>p'. bij_betw p' X (bij X)", "by blast"], ["proof (state)\nthis:\n  \\<exists>p'. bij_betw p' X (bij X)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>X\\<in>P. \\<exists>p'. bij_betw p' X (bij X)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; P' = (`) p ` P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from this"], ["proof (chain)\npicking this:\n  \\<forall>X\\<in>P. \\<exists>p'. bij_betw p' X (bij X)", "have \"\\<exists>p'. \\<forall>X\\<in>P. bij_betw (p' X) X (bij X)\""], ["proof (prove)\nusing this:\n  \\<forall>X\\<in>P. \\<exists>p'. bij_betw p' X (bij X)\n\ngoal (1 subgoal):\n 1. \\<exists>p'. \\<forall>X\\<in>P. bij_betw (p' X) X (bij X)", "by metis"], ["proof (state)\nthis:\n  \\<exists>p'. \\<forall>X\\<in>P. bij_betw (p' X) X (bij X)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; P' = (`) p ` P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from this"], ["proof (chain)\npicking this:\n  \\<exists>p'. \\<forall>X\\<in>P. bij_betw (p' X) X (bij X)", "obtain p' where p': \"\\<forall>X\\<in>P. bij_betw (p' X) X (bij X)\""], ["proof (prove)\nusing this:\n  \\<exists>p'. \\<forall>X\\<in>P. bij_betw (p' X) X (bij X)\n\ngoal (1 subgoal):\n 1. (\\<And>p'.\n        \\<forall>X\\<in>P. bij_betw (p' X) X (bij X) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  \\<forall>X\\<in>P. bij_betw (p' X) X (bij X)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; P' = (`) p ` P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define p where \"\\<And>a. p a = (if a \\<in> A then p' (THE X. a \\<in> X \\<and> X \\<in> P) a else a)\""], ["proof (state)\nthis:\n  p ?a =\n  (if ?a \\<in> A then p' (THE X. ?a \\<in> X \\<and> X \\<in> P) ?a else ?a)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; P' = (`) p ` P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"p permutes A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p permutes A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p permutes A", "have \"bij_betw p A A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw p A A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. bij_betw p A A", "have \"disjoint_family_on bij P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disjoint_family_on bij P", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m n.\n       \\<lbrakk>m \\<in> P; n \\<in> P; m \\<noteq> n\\<rbrakk>\n       \\<Longrightarrow> bij m \\<inter> bij n = {}", "fix X X'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m n.\n       \\<lbrakk>m \\<in> P; n \\<in> P; m \\<noteq> n\\<rbrakk>\n       \\<Longrightarrow> bij m \\<inter> bij n = {}", "assume XX': \"X \\<in> P\" \"X' \\<in> P\" \"X \\<noteq> X'\""], ["proof (state)\nthis:\n  X \\<in> P\n  X' \\<in> P\n  X \\<noteq> X'\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       \\<lbrakk>m \\<in> P; n \\<in> P; m \\<noteq> n\\<rbrakk>\n       \\<Longrightarrow> bij m \\<inter> bij n = {}", "from this"], ["proof (chain)\npicking this:\n  X \\<in> P\n  X' \\<in> P\n  X \\<noteq> X'", "have \"bij X \\<in> P'\" \"bij X' \\<in> P'\""], ["proof (prove)\nusing this:\n  X \\<in> P\n  X' \\<in> P\n  X \\<noteq> X'\n\ngoal (1 subgoal):\n 1. bij X \\<in> P' &&& bij X' \\<in> P'", "using \\<open>bij_betw bij P P'\\<close> bij_betwE"], ["proof (prove)\nusing this:\n  X \\<in> P\n  X' \\<in> P\n  X \\<noteq> X'\n  bij_betw bij P P'\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n\ngoal (1 subgoal):\n 1. bij X \\<in> P' &&& bij X' \\<in> P'", "by blast+"], ["proof (state)\nthis:\n  bij X \\<in> P'\n  bij X' \\<in> P'\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       \\<lbrakk>m \\<in> P; n \\<in> P; m \\<noteq> n\\<rbrakk>\n       \\<Longrightarrow> bij m \\<inter> bij n = {}", "moreover"], ["proof (state)\nthis:\n  bij X \\<in> P'\n  bij X' \\<in> P'\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       \\<lbrakk>m \\<in> P; n \\<in> P; m \\<noteq> n\\<rbrakk>\n       \\<Longrightarrow> bij m \\<inter> bij n = {}", "from XX'"], ["proof (chain)\npicking this:\n  X \\<in> P\n  X' \\<in> P\n  X \\<noteq> X'", "have \"bij X \\<noteq> bij X'\""], ["proof (prove)\nusing this:\n  X \\<in> P\n  X' \\<in> P\n  X \\<noteq> X'\n\ngoal (1 subgoal):\n 1. bij X \\<noteq> bij X'", "using \\<open>bij_betw bij P P'\\<close>"], ["proof (prove)\nusing this:\n  X \\<in> P\n  X' \\<in> P\n  X \\<noteq> X'\n  bij_betw bij P P'\n\ngoal (1 subgoal):\n 1. bij X \\<noteq> bij X'", "by (metis bij_betw_inv_into_left)"], ["proof (state)\nthis:\n  bij X \\<noteq> bij X'\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       \\<lbrakk>m \\<in> P; n \\<in> P; m \\<noteq> n\\<rbrakk>\n       \\<Longrightarrow> bij m \\<inter> bij n = {}", "ultimately"], ["proof (chain)\npicking this:\n  bij X \\<in> P'\n  bij X' \\<in> P'\n  bij X \\<noteq> bij X'", "show \"bij X \\<inter> bij X' = {}\""], ["proof (prove)\nusing this:\n  bij X \\<in> P'\n  bij X' \\<in> P'\n  bij X \\<noteq> bij X'\n\ngoal (1 subgoal):\n 1. bij X \\<inter> bij X' = {}", "using \\<open>partition_on A P'\\<close>"], ["proof (prove)\nusing this:\n  bij X \\<in> P'\n  bij X' \\<in> P'\n  bij X \\<noteq> bij X'\n  partition_on A P'\n\ngoal (1 subgoal):\n 1. bij X \\<inter> bij X' = {}", "by (meson partition_onE)"], ["proof (state)\nthis:\n  bij X \\<inter> bij X' = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  disjoint_family_on bij P\n\ngoal (1 subgoal):\n 1. bij_betw p A A", "moreover"], ["proof (state)\nthis:\n  disjoint_family_on bij P\n\ngoal (1 subgoal):\n 1. bij_betw p A A", "have \"bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) X (bij X)\" if \"X \\<in> P\" for X"], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) X\n     (bij X)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) X\n     (bij X)", "from \\<open>X \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  X \\<in> P", "have \"bij_betw (p' X) X (bij X)\""], ["proof (prove)\nusing this:\n  X \\<in> P\n\ngoal (1 subgoal):\n 1. bij_betw (p' X) X (bij X)", "using \\<open>\\<forall>X\\<in>P. bij_betw (p' X) X (bij X)\\<close>"], ["proof (prove)\nusing this:\n  X \\<in> P\n  \\<forall>X\\<in>P. bij_betw (p' X) X (bij X)\n\ngoal (1 subgoal):\n 1. bij_betw (p' X) X (bij X)", "by blast"], ["proof (state)\nthis:\n  bij_betw (p' X) X (bij X)\n\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) X\n     (bij X)", "moreover"], ["proof (state)\nthis:\n  bij_betw (p' X) X (bij X)\n\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) X\n     (bij X)", "from \\<open>X \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  X \\<in> P", "have \"\\<forall>a\\<in>X. (THE X. a \\<in> X \\<and> X \\<in> P) = X\""], ["proof (prove)\nusing this:\n  X \\<in> P\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>X. (THE X. a \\<in> X \\<and> X \\<in> P) = X", "using \\<open>partition_on A P\\<close> partition_on_the_part_eq"], ["proof (prove)\nusing this:\n  X \\<in> P\n  partition_on A P\n  \\<lbrakk>partition_on ?A ?P; ?x \\<in> ?X; ?X \\<in> ?P\\<rbrakk>\n  \\<Longrightarrow> (THE X. ?x \\<in> X \\<and> X \\<in> ?P) = ?X\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>X. (THE X. a \\<in> X \\<and> X \\<in> P) = X", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>a\\<in>X. (THE X. a \\<in> X \\<and> X \\<in> P) = X\n\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) X\n     (bij X)", "ultimately"], ["proof (chain)\npicking this:\n  bij_betw (p' X) X (bij X)\n  \\<forall>a\\<in>X. (THE X. a \\<in> X \\<and> X \\<in> P) = X", "show ?thesis"], ["proof (prove)\nusing this:\n  bij_betw (p' X) X (bij X)\n  \\<forall>a\\<in>X. (THE X. a \\<in> X \\<and> X \\<in> P) = X\n\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) X\n     (bij X)", "by (auto intro: bij_betw_congI)"], ["proof (state)\nthis:\n  bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) X (bij X)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?X \\<in> P \\<Longrightarrow>\n  bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ?X\n   (bij ?X)\n\ngoal (1 subgoal):\n 1. bij_betw p A A", "ultimately"], ["proof (chain)\npicking this:\n  disjoint_family_on bij P\n  ?X \\<in> P \\<Longrightarrow>\n  bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ?X\n   (bij ?X)", "have \"bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) (\\<Union>X\\<in>P. X) (\\<Union>X\\<in>P. bij X)\""], ["proof (prove)\nusing this:\n  disjoint_family_on bij P\n  ?X \\<in> P \\<Longrightarrow>\n  bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ?X\n   (bij ?X)\n\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a)\n     (\\<Union>X\\<in>P. X) (\\<Union> (bij ` P))", "by (rule bij_betw_UNION_disjoint)"], ["proof (state)\nthis:\n  bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a)\n   (\\<Union>X\\<in>P. X) (\\<Union> (bij ` P))\n\ngoal (1 subgoal):\n 1. bij_betw p A A", "moreover"], ["proof (state)\nthis:\n  bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a)\n   (\\<Union>X\\<in>P. X) (\\<Union> (bij ` P))\n\ngoal (1 subgoal):\n 1. bij_betw p A A", "have \"(\\<Union>X\\<in>P. X) = A\" \"(\\<Union>X\\<in>P'. X) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>X\\<in>P. X) = A &&& (\\<Union>X\\<in>P'. X) = A", "using \\<open>partition_on A P\\<close> \\<open>partition_on A P'\\<close> partition_onD1"], ["proof (prove)\nusing this:\n  partition_on A P\n  partition_on A P'\n  partition_on ?A ?P \\<Longrightarrow> ?A = \\<Union> ?P\n\ngoal (1 subgoal):\n 1. (\\<Union>X\\<in>P. X) = A &&& (\\<Union>X\\<in>P'. X) = A", "by auto"], ["proof (state)\nthis:\n  (\\<Union>X\\<in>P. X) = A\n  (\\<Union>X\\<in>P'. X) = A\n\ngoal (1 subgoal):\n 1. bij_betw p A A", "moreover"], ["proof (state)\nthis:\n  (\\<Union>X\\<in>P. X) = A\n  (\\<Union>X\\<in>P'. X) = A\n\ngoal (1 subgoal):\n 1. bij_betw p A A", "have \"(\\<Union>X\\<in>P. bij X) = (\\<Union>X\\<in>P'. X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (bij ` P) = (\\<Union>X\\<in>P'. X)", "using \\<open>bij_betw bij P P'\\<close> bij_betw_imp_surj_on"], ["proof (prove)\nusing this:\n  bij_betw bij P P'\n  bij_betw ?f ?A ?B \\<Longrightarrow> ?f ` ?A = ?B\n\ngoal (1 subgoal):\n 1. \\<Union> (bij ` P) = (\\<Union>X\\<in>P'. X)", "by force"], ["proof (state)\nthis:\n  \\<Union> (bij ` P) = (\\<Union>X\\<in>P'. X)\n\ngoal (1 subgoal):\n 1. bij_betw p A A", "ultimately"], ["proof (chain)\npicking this:\n  bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a)\n   (\\<Union>X\\<in>P. X) (\\<Union> (bij ` P))\n  (\\<Union>X\\<in>P. X) = A\n  (\\<Union>X\\<in>P'. X) = A\n  \\<Union> (bij ` P) = (\\<Union>X\\<in>P'. X)", "have \"bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) A A\""], ["proof (prove)\nusing this:\n  bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a)\n   (\\<Union>X\\<in>P. X) (\\<Union> (bij ` P))\n  (\\<Union>X\\<in>P. X) = A\n  (\\<Union>X\\<in>P'. X) = A\n  \\<Union> (bij ` P) = (\\<Union>X\\<in>P'. X)\n\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) A A", "by simp"], ["proof (state)\nthis:\n  bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) A A\n\ngoal (1 subgoal):\n 1. bij_betw p A A", "moreover"], ["proof (state)\nthis:\n  bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) A A\n\ngoal (1 subgoal):\n 1. bij_betw p A A", "have \"\\<forall>a \\<in> A. p' (THE X. a \\<in> X \\<and> X \\<in> P) a = p a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>A. p' (THE X. a \\<in> X \\<and> X \\<in> P) a = p a", "unfolding p_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>A.\n       p' (THE X. a \\<in> X \\<and> X \\<in> P) a =\n       (if a \\<in> A then p' (THE X. a \\<in> X \\<and> X \\<in> P) a else a)", "by auto"], ["proof (state)\nthis:\n  \\<forall>a\\<in>A. p' (THE X. a \\<in> X \\<and> X \\<in> P) a = p a\n\ngoal (1 subgoal):\n 1. bij_betw p A A", "ultimately"], ["proof (chain)\npicking this:\n  bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) A A\n  \\<forall>a\\<in>A. p' (THE X. a \\<in> X \\<and> X \\<in> P) a = p a", "show ?thesis"], ["proof (prove)\nusing this:\n  bij_betw (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) A A\n  \\<forall>a\\<in>A. p' (THE X. a \\<in> X \\<and> X \\<in> P) a = p a\n\ngoal (1 subgoal):\n 1. bij_betw p A A", "by (rule bij_betw_congI)"], ["proof (state)\nthis:\n  bij_betw p A A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bij_betw p A A\n\ngoal (1 subgoal):\n 1. p permutes A", "moreover"], ["proof (state)\nthis:\n  bij_betw p A A\n\ngoal (1 subgoal):\n 1. p permutes A", "have \"p x = x\" if \"x \\<notin> A\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. p x = x", "using \\<open>x \\<notin> A\\<close> p_def"], ["proof (prove)\nusing this:\n  x \\<notin> A\n  p ?a =\n  (if ?a \\<in> A then p' (THE X. ?a \\<in> X \\<and> X \\<in> P) ?a else ?a)\n\ngoal (1 subgoal):\n 1. p x = x", "by auto"], ["proof (state)\nthis:\n  ?x \\<notin> A \\<Longrightarrow> p ?x = ?x\n\ngoal (1 subgoal):\n 1. p permutes A", "ultimately"], ["proof (chain)\npicking this:\n  bij_betw p A A\n  ?x \\<notin> A \\<Longrightarrow> p ?x = ?x", "show ?thesis"], ["proof (prove)\nusing this:\n  bij_betw p A A\n  ?x \\<notin> A \\<Longrightarrow> p ?x = ?x\n\ngoal (1 subgoal):\n 1. p permutes A", "by (rule bij_imp_permutes)"], ["proof (state)\nthis:\n  p permutes A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p permutes A\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; P' = (`) p ` P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  p permutes A\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; P' = (`) p ` P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"P' = (\\<lambda>X. p ` X) ` P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' = (`) p ` P", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. P' \\<subseteq> (`) p ` P\n 2. (`) p ` P \\<subseteq> P'", "show \"P' \\<subseteq> (\\<lambda>X. p ` X) ` P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' \\<subseteq> (`) p ` P", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> P' \\<Longrightarrow> x \\<in> (`) p ` P", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> P' \\<Longrightarrow> x \\<in> (`) p ` P", "assume \"X \\<in> P'\""], ["proof (state)\nthis:\n  X \\<in> P'\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> P' \\<Longrightarrow> x \\<in> (`) p ` P", "have in_P: \"the_inv_into P bij X \\<in> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_inv_into P bij X \\<in> P", "using \\<open>X \\<in> P'\\<close> \\<open>bij_betw bij P P'\\<close> bij_betwE bij_betw_the_inv_into"], ["proof (prove)\nusing this:\n  X \\<in> P'\n  bij_betw bij P P'\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n  bij_betw ?f ?A ?B \\<Longrightarrow> bij_betw (the_inv_into ?A ?f) ?B ?A\n\ngoal (1 subgoal):\n 1. the_inv_into P bij X \\<in> P", "by blast"], ["proof (state)\nthis:\n  the_inv_into P bij X \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> P' \\<Longrightarrow> x \\<in> (`) p ` P", "have eq_X: \"bij (the_inv_into P bij X) = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij (the_inv_into P bij X) = X", "using \\<open>X \\<in> P'\\<close> \\<open>bij_betw bij P P'\\<close>"], ["proof (prove)\nusing this:\n  X \\<in> P'\n  bij_betw bij P P'\n\ngoal (1 subgoal):\n 1. bij (the_inv_into P bij X) = X", "by (meson f_the_inv_into_f_bij_betw)"], ["proof (state)\nthis:\n  bij (the_inv_into P bij X) = X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> P' \\<Longrightarrow> x \\<in> (`) p ` P", "have \"X = p ` (the_inv_into P bij X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X = p ` the_inv_into P bij X", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. X \\<subseteq> p ` the_inv_into P bij X\n 2. p ` the_inv_into P bij X \\<subseteq> X", "from in_P"], ["proof (chain)\npicking this:\n  the_inv_into P bij X \\<in> P", "have \"the_inv_into P bij X \\<subseteq> A\""], ["proof (prove)\nusing this:\n  the_inv_into P bij X \\<in> P\n\ngoal (1 subgoal):\n 1. the_inv_into P bij X \\<subseteq> A", "using \\<open>partition_on A P\\<close> partition_onD1"], ["proof (prove)\nusing this:\n  the_inv_into P bij X \\<in> P\n  partition_on A P\n  partition_on ?A ?P \\<Longrightarrow> ?A = \\<Union> ?P\n\ngoal (1 subgoal):\n 1. the_inv_into P bij X \\<subseteq> A", "by fastforce"], ["proof (state)\nthis:\n  the_inv_into P bij X \\<subseteq> A\n\ngoal (2 subgoals):\n 1. X \\<subseteq> p ` the_inv_into P bij X\n 2. p ` the_inv_into P bij X \\<subseteq> X", "have \"(\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` the_inv_into P bij X = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n    the_inv_into P bij X =\n    X", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n    the_inv_into P bij X\n    \\<subseteq> X\n 2. X \\<subseteq> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n                  the_inv_into P bij X", "show \"(\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` the_inv_into P bij X \\<subseteq> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n    the_inv_into P bij X\n    \\<subseteq> X", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               the_inv_into P bij X \\<Longrightarrow>\n       x \\<in> X", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               the_inv_into P bij X \\<Longrightarrow>\n       x \\<in> X", "assume \"x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` the_inv_into P bij X\""], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n          the_inv_into P bij X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               the_inv_into P bij X \\<Longrightarrow>\n       x \\<in> X", "from this"], ["proof (chain)\npicking this:\n  x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n          the_inv_into P bij X", "obtain a where a_in: \"a \\<in> the_inv_into P bij X\"\n              and x_eq: \"x = p' (THE X. a \\<in> X \\<and> X \\<in> P) a\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n          the_inv_into P bij X\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> the_inv_into P bij X;\n         x = p' (THE X. a \\<in> X \\<and> X \\<in> P) a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a \\<in> the_inv_into P bij X\n  x = p' (THE X. a \\<in> X \\<and> X \\<in> P) a\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               the_inv_into P bij X \\<Longrightarrow>\n       x \\<in> X", "have \"(THE X. a \\<in> X \\<and> X \\<in> P) = the_inv_into P bij X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE X. a \\<in> X \\<and> X \\<in> P) = the_inv_into P bij X", "using a_in in_P \\<open>partition_on A P\\<close> partition_on_the_part_eq"], ["proof (prove)\nusing this:\n  a \\<in> the_inv_into P bij X\n  the_inv_into P bij X \\<in> P\n  partition_on A P\n  \\<lbrakk>partition_on ?A ?P; ?x \\<in> ?X; ?X \\<in> ?P\\<rbrakk>\n  \\<Longrightarrow> (THE X. ?x \\<in> X \\<and> X \\<in> ?P) = ?X\n\ngoal (1 subgoal):\n 1. (THE X. a \\<in> X \\<and> X \\<in> P) = the_inv_into P bij X", "by fastforce"], ["proof (state)\nthis:\n  (THE X. a \\<in> X \\<and> X \\<in> P) = the_inv_into P bij X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               the_inv_into P bij X \\<Longrightarrow>\n       x \\<in> X", "from this x_eq"], ["proof (chain)\npicking this:\n  (THE X. a \\<in> X \\<and> X \\<in> P) = the_inv_into P bij X\n  x = p' (THE X. a \\<in> X \\<and> X \\<in> P) a", "have x_eq: \"x = p' (the_inv_into P bij X) a\""], ["proof (prove)\nusing this:\n  (THE X. a \\<in> X \\<and> X \\<in> P) = the_inv_into P bij X\n  x = p' (THE X. a \\<in> X \\<and> X \\<in> P) a\n\ngoal (1 subgoal):\n 1. x = p' (the_inv_into P bij X) a", "by auto"], ["proof (state)\nthis:\n  x = p' (the_inv_into P bij X) a\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               the_inv_into P bij X \\<Longrightarrow>\n       x \\<in> X", "from this"], ["proof (chain)\npicking this:\n  x = p' (the_inv_into P bij X) a", "have \"x \\<in> bij (the_inv_into P bij X)\""], ["proof (prove)\nusing this:\n  x = p' (the_inv_into P bij X) a\n\ngoal (1 subgoal):\n 1. x \\<in> bij (the_inv_into P bij X)", "using a_in in_P bij_betwE p'"], ["proof (prove)\nusing this:\n  x = p' (the_inv_into P bij X) a\n  a \\<in> the_inv_into P bij X\n  the_inv_into P bij X \\<in> P\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n  \\<forall>X\\<in>P. bij_betw (p' X) X (bij X)\n\ngoal (1 subgoal):\n 1. x \\<in> bij (the_inv_into P bij X)", "by blast"], ["proof (state)\nthis:\n  x \\<in> bij (the_inv_into P bij X)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               the_inv_into P bij X \\<Longrightarrow>\n       x \\<in> X", "from this eq_X"], ["proof (chain)\npicking this:\n  x \\<in> bij (the_inv_into P bij X)\n  bij (the_inv_into P bij X) = X", "show \"x \\<in> X\""], ["proof (prove)\nusing this:\n  x \\<in> bij (the_inv_into P bij X)\n  bij (the_inv_into P bij X) = X\n\ngoal (1 subgoal):\n 1. x \\<in> X", "by blast"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n  the_inv_into P bij X\n  \\<subseteq> X\n\ngoal (1 subgoal):\n 1. X \\<subseteq> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n                  the_inv_into P bij X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. X \\<subseteq> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n                  the_inv_into P bij X", "show \"X \\<subseteq> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` the_inv_into P bij X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n                  the_inv_into P bij X", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> X \\<Longrightarrow>\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               the_inv_into P bij X", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> X \\<Longrightarrow>\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               the_inv_into P bij X", "assume \"x \\<in> X\""], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> X \\<Longrightarrow>\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               the_inv_into P bij X", "let ?X' = \"the_inv_into P bij X\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> X \\<Longrightarrow>\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               the_inv_into P bij X", "define x' where \"x' = the_inv_into ?X' (p' ?X') x\""], ["proof (state)\nthis:\n  x' = the_inv_into (the_inv_into P bij X) (p' (the_inv_into P bij X)) x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> X \\<Longrightarrow>\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               the_inv_into P bij X", "from in_P p' eq_X"], ["proof (chain)\npicking this:\n  the_inv_into P bij X \\<in> P\n  \\<forall>X\\<in>P. bij_betw (p' X) X (bij X)\n  bij (the_inv_into P bij X) = X", "have bij_betw: \"bij_betw (p' ?X') ?X' X\""], ["proof (prove)\nusing this:\n  the_inv_into P bij X \\<in> P\n  \\<forall>X\\<in>P. bij_betw (p' X) X (bij X)\n  bij (the_inv_into P bij X) = X\n\ngoal (1 subgoal):\n 1. bij_betw (p' (the_inv_into P bij X)) (the_inv_into P bij X) X", "by auto"], ["proof (state)\nthis:\n  bij_betw (p' (the_inv_into P bij X)) (the_inv_into P bij X) X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> X \\<Longrightarrow>\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               the_inv_into P bij X", "from bij_betw \\<open>x \\<in> X\\<close>"], ["proof (chain)\npicking this:\n  bij_betw (p' (the_inv_into P bij X)) (the_inv_into P bij X) X\n  x \\<in> X", "have \"x' \\<in> ?X'\""], ["proof (prove)\nusing this:\n  bij_betw (p' (the_inv_into P bij X)) (the_inv_into P bij X) X\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. x' \\<in> the_inv_into P bij X", "unfolding x'_def"], ["proof (prove)\nusing this:\n  bij_betw (p' (the_inv_into P bij X)) (the_inv_into P bij X) X\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. the_inv_into (the_inv_into P bij X) (p' (the_inv_into P bij X)) x\n    \\<in> the_inv_into P bij X", "using bij_betwE bij_betw_the_inv_into"], ["proof (prove)\nusing this:\n  bij_betw (p' (the_inv_into P bij X)) (the_inv_into P bij X) X\n  x \\<in> X\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n  bij_betw ?f ?A ?B \\<Longrightarrow> bij_betw (the_inv_into ?A ?f) ?B ?A\n\ngoal (1 subgoal):\n 1. the_inv_into (the_inv_into P bij X) (p' (the_inv_into P bij X)) x\n    \\<in> the_inv_into P bij X", "by blast"], ["proof (state)\nthis:\n  x' \\<in> the_inv_into P bij X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> X \\<Longrightarrow>\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               the_inv_into P bij X", "from this in_P"], ["proof (chain)\npicking this:\n  x' \\<in> the_inv_into P bij X\n  the_inv_into P bij X \\<in> P", "have \"(THE X. x' \\<in> X \\<and> X \\<in> P) = ?X'\""], ["proof (prove)\nusing this:\n  x' \\<in> the_inv_into P bij X\n  the_inv_into P bij X \\<in> P\n\ngoal (1 subgoal):\n 1. (THE X. x' \\<in> X \\<and> X \\<in> P) = the_inv_into P bij X", "using \\<open>partition_on A P\\<close> partition_on_the_part_eq"], ["proof (prove)\nusing this:\n  x' \\<in> the_inv_into P bij X\n  the_inv_into P bij X \\<in> P\n  partition_on A P\n  \\<lbrakk>partition_on ?A ?P; ?x \\<in> ?X; ?X \\<in> ?P\\<rbrakk>\n  \\<Longrightarrow> (THE X. ?x \\<in> X \\<and> X \\<in> ?P) = ?X\n\ngoal (1 subgoal):\n 1. (THE X. x' \\<in> X \\<and> X \\<in> P) = the_inv_into P bij X", "by fastforce"], ["proof (state)\nthis:\n  (THE X. x' \\<in> X \\<and> X \\<in> P) = the_inv_into P bij X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> X \\<Longrightarrow>\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               the_inv_into P bij X", "from this \\<open>x \\<in> X\\<close>"], ["proof (chain)\npicking this:\n  (THE X. x' \\<in> X \\<and> X \\<in> P) = the_inv_into P bij X\n  x \\<in> X", "have \"x = p' (THE X. x' \\<in> X \\<and> X \\<in> P) x'\""], ["proof (prove)\nusing this:\n  (THE X. x' \\<in> X \\<and> X \\<in> P) = the_inv_into P bij X\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. x = p' (THE X. x' \\<in> X \\<and> X \\<in> P) x'", "unfolding x'_def"], ["proof (prove)\nusing this:\n  (THE Xa.\n      the_inv_into (the_inv_into P bij X) (p' (the_inv_into P bij X)) x\n      \\<in> Xa \\<and>\n      Xa \\<in> P) =\n  the_inv_into P bij X\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. x =\n    p' (THE Xa.\n           the_inv_into (the_inv_into P bij X) (p' (the_inv_into P bij X)) x\n           \\<in> Xa \\<and>\n           Xa \\<in> P)\n     (the_inv_into (the_inv_into P bij X) (p' (the_inv_into P bij X)) x)", "using bij_betw f_the_inv_into_f_bij_betw"], ["proof (prove)\nusing this:\n  (THE Xa.\n      the_inv_into (the_inv_into P bij X) (p' (the_inv_into P bij X)) x\n      \\<in> Xa \\<and>\n      Xa \\<in> P) =\n  the_inv_into P bij X\n  x \\<in> X\n  bij_betw (p' (the_inv_into P bij X)) (the_inv_into P bij X) X\n  \\<lbrakk>bij_betw ?f ?A ?B;\n   bij_betw ?f ?A ?B \\<Longrightarrow> ?x \\<in> ?B\\<rbrakk>\n  \\<Longrightarrow> ?f (the_inv_into ?A ?f ?x) = ?x\n\ngoal (1 subgoal):\n 1. x =\n    p' (THE Xa.\n           the_inv_into (the_inv_into P bij X) (p' (the_inv_into P bij X)) x\n           \\<in> Xa \\<and>\n           Xa \\<in> P)\n     (the_inv_into (the_inv_into P bij X) (p' (the_inv_into P bij X)) x)", "by fastforce"], ["proof (state)\nthis:\n  x = p' (THE X. x' \\<in> X \\<and> X \\<in> P) x'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> X \\<Longrightarrow>\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               the_inv_into P bij X", "from this \\<open>x' \\<in> ?X'\\<close>"], ["proof (chain)\npicking this:\n  x = p' (THE X. x' \\<in> X \\<and> X \\<in> P) x'\n  x' \\<in> the_inv_into P bij X", "show \"x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` the_inv_into P bij X\""], ["proof (prove)\nusing this:\n  x = p' (THE X. x' \\<in> X \\<and> X \\<in> P) x'\n  x' \\<in> the_inv_into P bij X\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n            the_inv_into P bij X", ".."], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n          the_inv_into P bij X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  X \\<subseteq> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n                the_inv_into P bij X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n  the_inv_into P bij X =\n  X\n\ngoal (2 subgoals):\n 1. X \\<subseteq> p ` the_inv_into P bij X\n 2. p ` the_inv_into P bij X \\<subseteq> X", "from this \\<open>the_inv_into P bij X \\<subseteq> A\\<close>"], ["proof (chain)\npicking this:\n  (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n  the_inv_into P bij X =\n  X\n  the_inv_into P bij X \\<subseteq> A", "show \"X \\<subseteq> p ` the_inv_into P bij X\""], ["proof (prove)\nusing this:\n  (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n  the_inv_into P bij X =\n  X\n  the_inv_into P bij X \\<subseteq> A\n\ngoal (1 subgoal):\n 1. X \\<subseteq> p ` the_inv_into P bij X", "unfolding p_def"], ["proof (prove)\nusing this:\n  (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n  the_inv_into P bij X =\n  X\n  the_inv_into P bij X \\<subseteq> A\n\ngoal (1 subgoal):\n 1. X \\<subseteq> (\\<lambda>a.\n                      if a \\<in> A\n                      then p' (THE X. a \\<in> X \\<and> X \\<in> P) a\n                      else a) `\n                  the_inv_into P bij X", "by auto"], ["proof (state)\nthis:\n  X \\<subseteq> p ` the_inv_into P bij X\n\ngoal (1 subgoal):\n 1. p ` the_inv_into P bij X \\<subseteq> X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p ` the_inv_into P bij X \\<subseteq> X", "show \"p ` the_inv_into P bij X \\<subseteq> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p ` the_inv_into P bij X \\<subseteq> X", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> p ` the_inv_into P bij X \\<Longrightarrow> x \\<in> X", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> p ` the_inv_into P bij X \\<Longrightarrow> x \\<in> X", "assume \"x \\<in> p ` the_inv_into P bij X\""], ["proof (state)\nthis:\n  x \\<in> p ` the_inv_into P bij X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> p ` the_inv_into P bij X \\<Longrightarrow> x \\<in> X", "from this"], ["proof (chain)\npicking this:\n  x \\<in> p ` the_inv_into P bij X", "obtain x' where \"x = p x'\" and \"x' \\<in> the_inv_into P bij X\""], ["proof (prove)\nusing this:\n  x \\<in> p ` the_inv_into P bij X\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x = p x'; x' \\<in> the_inv_into P bij X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = p x'\n  x' \\<in> the_inv_into P bij X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> p ` the_inv_into P bij X \\<Longrightarrow> x \\<in> X", "have \"x' \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x' \\<in> A", "using \\<open>x' \\<in> the_inv_into P bij X\\<close> assms(2) in_P partition_onD1"], ["proof (prove)\nusing this:\n  x' \\<in> the_inv_into P bij X\n  partition_on A P\n  the_inv_into P bij X \\<in> P\n  partition_on ?A ?P \\<Longrightarrow> ?A = \\<Union> ?P\n\ngoal (1 subgoal):\n 1. x' \\<in> A", "by fastforce"], ["proof (state)\nthis:\n  x' \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> p ` the_inv_into P bij X \\<Longrightarrow> x \\<in> X", "have eq: \"(THE X. x' \\<in> X \\<and> X \\<in> P) = the_inv_into P bij X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE X. x' \\<in> X \\<and> X \\<in> P) = the_inv_into P bij X", "using \\<open>x' \\<in> the_inv_into P bij X\\<close> assms(2) in_P partition_on_the_part_eq"], ["proof (prove)\nusing this:\n  x' \\<in> the_inv_into P bij X\n  partition_on A P\n  the_inv_into P bij X \\<in> P\n  \\<lbrakk>partition_on ?A ?P; ?x \\<in> ?X; ?X \\<in> ?P\\<rbrakk>\n  \\<Longrightarrow> (THE X. ?x \\<in> X \\<and> X \\<in> ?P) = ?X\n\ngoal (1 subgoal):\n 1. (THE X. x' \\<in> X \\<and> X \\<in> P) = the_inv_into P bij X", "by fastforce"], ["proof (state)\nthis:\n  (THE X. x' \\<in> X \\<and> X \\<in> P) = the_inv_into P bij X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> p ` the_inv_into P bij X \\<Longrightarrow> x \\<in> X", "have p': \"p' (the_inv_into P bij X) x' \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p' (the_inv_into P bij X) x' \\<in> X", "using \\<open>x' \\<in> the_inv_into P bij X\\<close> bij_betwE eq_X in_P p'"], ["proof (prove)\nusing this:\n  x' \\<in> the_inv_into P bij X\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n  bij (the_inv_into P bij X) = X\n  the_inv_into P bij X \\<in> P\n  \\<forall>X\\<in>P. bij_betw (p' X) X (bij X)\n\ngoal (1 subgoal):\n 1. p' (the_inv_into P bij X) x' \\<in> X", "by blast"], ["proof (state)\nthis:\n  p' (the_inv_into P bij X) x' \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> p ` the_inv_into P bij X \\<Longrightarrow> x \\<in> X", "from \\<open>x = p x'\\<close> \\<open>x' \\<in> A\\<close> eq p'"], ["proof (chain)\npicking this:\n  x = p x'\n  x' \\<in> A\n  (THE X. x' \\<in> X \\<and> X \\<in> P) = the_inv_into P bij X\n  p' (the_inv_into P bij X) x' \\<in> X", "show \"x \\<in> X\""], ["proof (prove)\nusing this:\n  x = p x'\n  x' \\<in> A\n  (THE X. x' \\<in> X \\<and> X \\<in> P) = the_inv_into P bij X\n  p' (the_inv_into P bij X) x' \\<in> X\n\ngoal (1 subgoal):\n 1. x \\<in> X", "unfolding p_def"], ["proof (prove)\nusing this:\n  x =\n  (if x' \\<in> A then p' (THE X. x' \\<in> X \\<and> X \\<in> P) x' else x')\n  x' \\<in> A\n  (THE X. x' \\<in> X \\<and> X \\<in> P) = the_inv_into P bij X\n  p' (the_inv_into P bij X) x' \\<in> X\n\ngoal (1 subgoal):\n 1. x \\<in> X", "by auto"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p ` the_inv_into P bij X \\<subseteq> X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  X = p ` the_inv_into P bij X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> P' \\<Longrightarrow> x \\<in> (`) p ` P", "moreover"], ["proof (state)\nthis:\n  X = p ` the_inv_into P bij X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> P' \\<Longrightarrow> x \\<in> (`) p ` P", "from \\<open>X \\<in> P'\\<close> \\<open>bij_betw bij P P'\\<close>"], ["proof (chain)\npicking this:\n  X \\<in> P'\n  bij_betw bij P P'", "have \"the_inv_into P bij X \\<in> P\""], ["proof (prove)\nusing this:\n  X \\<in> P'\n  bij_betw bij P P'\n\ngoal (1 subgoal):\n 1. the_inv_into P bij X \\<in> P", "using bij_betwE bij_betw_the_inv_into"], ["proof (prove)\nusing this:\n  X \\<in> P'\n  bij_betw bij P P'\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n  bij_betw ?f ?A ?B \\<Longrightarrow> bij_betw (the_inv_into ?A ?f) ?B ?A\n\ngoal (1 subgoal):\n 1. the_inv_into P bij X \\<in> P", "by blast"], ["proof (state)\nthis:\n  the_inv_into P bij X \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> P' \\<Longrightarrow> x \\<in> (`) p ` P", "ultimately"], ["proof (chain)\npicking this:\n  X = p ` the_inv_into P bij X\n  the_inv_into P bij X \\<in> P", "show \"X \\<in> (\\<lambda>X. p ` X) ` P\""], ["proof (prove)\nusing this:\n  X = p ` the_inv_into P bij X\n  the_inv_into P bij X \\<in> P\n\ngoal (1 subgoal):\n 1. X \\<in> (`) p ` P", ".."], ["proof (state)\nthis:\n  X \\<in> (`) p ` P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P' \\<subseteq> (`) p ` P\n\ngoal (1 subgoal):\n 1. (`) p ` P \\<subseteq> P'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (`) p ` P \\<subseteq> P'", "show \"(\\<lambda>X. p ` X) ` P \\<subseteq> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (`) p ` P \\<subseteq> P'", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> (`) p ` P \\<Longrightarrow> x \\<in> P'", "fix X'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> (`) p ` P \\<Longrightarrow> x \\<in> P'", "assume \"X' \\<in> (\\<lambda>X. p ` X) ` P\""], ["proof (state)\nthis:\n  X' \\<in> (`) p ` P\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> (`) p ` P \\<Longrightarrow> x \\<in> P'", "from this"], ["proof (chain)\npicking this:\n  X' \\<in> (`) p ` P", "obtain X where X'_eq: \"X' = p ` X\" and \"X \\<in> P\""], ["proof (prove)\nusing this:\n  X' \\<in> (`) p ` P\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>X' = p ` X; X \\<in> P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  X' = p ` X\n  X \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> (`) p ` P \\<Longrightarrow> x \\<in> P'", "from \\<open>X \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  X \\<in> P", "have \"X \\<subseteq> A\""], ["proof (prove)\nusing this:\n  X \\<in> P\n\ngoal (1 subgoal):\n 1. X \\<subseteq> A", "using assms(2) partition_onD1"], ["proof (prove)\nusing this:\n  X \\<in> P\n  partition_on A P\n  partition_on ?A ?P \\<Longrightarrow> ?A = \\<Union> ?P\n\ngoal (1 subgoal):\n 1. X \\<subseteq> A", "by force"], ["proof (state)\nthis:\n  X \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> (`) p ` P \\<Longrightarrow> x \\<in> P'", "from \\<open>X \\<in> P\\<close> p'"], ["proof (chain)\npicking this:\n  X \\<in> P\n  \\<forall>X\\<in>P. bij_betw (p' X) X (bij X)", "have bij: \"bij_betw (p' X) X (bij X)\""], ["proof (prove)\nusing this:\n  X \\<in> P\n  \\<forall>X\\<in>P. bij_betw (p' X) X (bij X)\n\ngoal (1 subgoal):\n 1. bij_betw (p' X) X (bij X)", "by auto"], ["proof (state)\nthis:\n  bij_betw (p' X) X (bij X)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> (`) p ` P \\<Longrightarrow> x \\<in> P'", "have \"p ` X \\<in> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p ` X \\<in> P'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p ` X \\<in> P'", "from \\<open>X \\<in> P\\<close> \\<open>bij_betw bij P P'\\<close>"], ["proof (chain)\npicking this:\n  X \\<in> P\n  bij_betw bij P P'", "have \"bij X \\<in> P'\""], ["proof (prove)\nusing this:\n  X \\<in> P\n  bij_betw bij P P'\n\ngoal (1 subgoal):\n 1. bij X \\<in> P'", "using bij_betwE"], ["proof (prove)\nusing this:\n  X \\<in> P\n  bij_betw bij P P'\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n\ngoal (1 subgoal):\n 1. bij X \\<in> P'", "by blast"], ["proof (state)\nthis:\n  bij X \\<in> P'\n\ngoal (1 subgoal):\n 1. p ` X \\<in> P'", "moreover"], ["proof (state)\nthis:\n  bij X \\<in> P'\n\ngoal (1 subgoal):\n 1. p ` X \\<in> P'", "have \"(\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X = bij X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X = bij X", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X\n    \\<subseteq> bij X\n 2. bij X\n    \\<subseteq> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X", "show \"(\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X \\<subseteq> bij X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X\n    \\<subseteq> bij X", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               X \\<Longrightarrow>\n       x \\<in> bij X", "fix x'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               X \\<Longrightarrow>\n       x \\<in> bij X", "assume \"x' \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X\""], ["proof (state)\nthis:\n  x' \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               X \\<Longrightarrow>\n       x \\<in> bij X", "from this"], ["proof (chain)\npicking this:\n  x' \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X", "obtain x where \"x \\<in> X\" and x'_eq: \"x' = p' (THE X. x \\<in> X \\<and> X \\<in> P) x\""], ["proof (prove)\nusing this:\n  x' \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> X;\n         x' = p' (THE X. x \\<in> X \\<and> X \\<in> P) x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  x \\<in> X\n  x' = p' (THE X. x \\<in> X \\<and> X \\<in> P) x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               X \\<Longrightarrow>\n       x \\<in> bij X", "from \\<open>X \\<in> P\\<close> \\<open>x \\<in> X\\<close>"], ["proof (chain)\npicking this:\n  X \\<in> P\n  x \\<in> X", "have eq_X: \"(THE X. x \\<in> X \\<and> X \\<in> P) = X\""], ["proof (prove)\nusing this:\n  X \\<in> P\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = X", "using assms(2) partition_on_the_part_eq"], ["proof (prove)\nusing this:\n  X \\<in> P\n  x \\<in> X\n  partition_on A P\n  \\<lbrakk>partition_on ?A ?P; ?x \\<in> ?X; ?X \\<in> ?P\\<rbrakk>\n  \\<Longrightarrow> (THE X. ?x \\<in> X \\<and> X \\<in> ?P) = ?X\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = X", "by fastforce"], ["proof (state)\nthis:\n  (THE X. x \\<in> X \\<and> X \\<in> P) = X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) `\n               X \\<Longrightarrow>\n       x \\<in> bij X", "from bij \\<open>x \\<in> X\\<close> x'_eq eq_X"], ["proof (chain)\npicking this:\n  bij_betw (p' X) X (bij X)\n  x \\<in> X\n  x' = p' (THE X. x \\<in> X \\<and> X \\<in> P) x\n  (THE X. x \\<in> X \\<and> X \\<in> P) = X", "show \"x' \\<in> bij X\""], ["proof (prove)\nusing this:\n  bij_betw (p' X) X (bij X)\n  x \\<in> X\n  x' = p' (THE X. x \\<in> X \\<and> X \\<in> P) x\n  (THE X. x \\<in> X \\<and> X \\<in> P) = X\n\ngoal (1 subgoal):\n 1. x' \\<in> bij X", "using bij_betwE"], ["proof (prove)\nusing this:\n  bij_betw (p' X) X (bij X)\n  x \\<in> X\n  x' = p' (THE X. x \\<in> X \\<and> X \\<in> P) x\n  (THE X. x \\<in> X \\<and> X \\<in> P) = X\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n\ngoal (1 subgoal):\n 1. x' \\<in> bij X", "by blast"], ["proof (state)\nthis:\n  x' \\<in> bij X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X\n  \\<subseteq> bij X\n\ngoal (1 subgoal):\n 1. bij X\n    \\<subseteq> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. bij X\n    \\<subseteq> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X", "show \"bij X \\<subseteq> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij X\n    \\<subseteq> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> bij X \\<Longrightarrow>\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X", "fix x'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> bij X \\<Longrightarrow>\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X", "assume \"x' \\<in> bij X\""], ["proof (state)\nthis:\n  x' \\<in> bij X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> bij X \\<Longrightarrow>\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X", "let ?x = \"inv_into X (p' X) x'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> bij X \\<Longrightarrow>\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X", "from \\<open>x' \\<in> bij X\\<close> bij"], ["proof (chain)\npicking this:\n  x' \\<in> bij X\n  bij_betw (p' X) X (bij X)", "have \"?x \\<in> X\""], ["proof (prove)\nusing this:\n  x' \\<in> bij X\n  bij_betw (p' X) X (bij X)\n\ngoal (1 subgoal):\n 1. inv_into X (p' X) x' \\<in> X", "by (metis  bij_betw_imp_surj_on inv_into_into)"], ["proof (state)\nthis:\n  inv_into X (p' X) x' \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> bij X \\<Longrightarrow>\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X", "from this \\<open>X \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  inv_into X (p' X) x' \\<in> X\n  X \\<in> P", "have \"(THE X. ?x \\<in> X \\<and> X \\<in> P) = X\""], ["proof (prove)\nusing this:\n  inv_into X (p' X) x' \\<in> X\n  X \\<in> P\n\ngoal (1 subgoal):\n 1. (THE Xa. inv_into X (p' X) x' \\<in> Xa \\<and> Xa \\<in> P) = X", "using assms(2) partition_on_the_part_eq"], ["proof (prove)\nusing this:\n  inv_into X (p' X) x' \\<in> X\n  X \\<in> P\n  partition_on A P\n  \\<lbrakk>partition_on ?A ?P; ?x \\<in> ?X; ?X \\<in> ?P\\<rbrakk>\n  \\<Longrightarrow> (THE X. ?x \\<in> X \\<and> X \\<in> ?P) = ?X\n\ngoal (1 subgoal):\n 1. (THE Xa. inv_into X (p' X) x' \\<in> Xa \\<and> Xa \\<in> P) = X", "by fastforce"], ["proof (state)\nthis:\n  (THE Xa. inv_into X (p' X) x' \\<in> Xa \\<and> Xa \\<in> P) = X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> bij X \\<Longrightarrow>\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X", "from this \\<open>x' \\<in> bij X\\<close> bij"], ["proof (chain)\npicking this:\n  (THE Xa. inv_into X (p' X) x' \\<in> Xa \\<and> Xa \\<in> P) = X\n  x' \\<in> bij X\n  bij_betw (p' X) X (bij X)", "have \"x' = p' (THE X. ?x \\<in> X \\<and> X \\<in> P) ?x\""], ["proof (prove)\nusing this:\n  (THE Xa. inv_into X (p' X) x' \\<in> Xa \\<and> Xa \\<in> P) = X\n  x' \\<in> bij X\n  bij_betw (p' X) X (bij X)\n\ngoal (1 subgoal):\n 1. x' =\n    p' (THE Xa. inv_into X (p' X) x' \\<in> Xa \\<and> Xa \\<in> P)\n     (inv_into X (p' X) x')", "using bij_betw_inv_into_right"], ["proof (prove)\nusing this:\n  (THE Xa. inv_into X (p' X) x' \\<in> Xa \\<and> Xa \\<in> P) = X\n  x' \\<in> bij X\n  bij_betw (p' X) X (bij X)\n  \\<lbrakk>bij_betw ?f ?A ?A'; ?a' \\<in> ?A'\\<rbrakk>\n  \\<Longrightarrow> ?f (inv_into ?A ?f ?a') = ?a'\n\ngoal (1 subgoal):\n 1. x' =\n    p' (THE Xa. inv_into X (p' X) x' \\<in> Xa \\<and> Xa \\<in> P)\n     (inv_into X (p' X) x')", "by fastforce"], ["proof (state)\nthis:\n  x' =\n  p' (THE Xa. inv_into X (p' X) x' \\<in> Xa \\<and> Xa \\<in> P)\n   (inv_into X (p' X) x')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> bij X \\<Longrightarrow>\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X", "moreover"], ["proof (state)\nthis:\n  x' =\n  p' (THE Xa. inv_into X (p' X) x' \\<in> Xa \\<and> Xa \\<in> P)\n   (inv_into X (p' X) x')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> bij X \\<Longrightarrow>\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X", "from \\<open>x' \\<in> bij X\\<close> bij"], ["proof (chain)\npicking this:\n  x' \\<in> bij X\n  bij_betw (p' X) X (bij X)", "have \"?x \\<in> X\""], ["proof (prove)\nusing this:\n  x' \\<in> bij X\n  bij_betw (p' X) X (bij X)\n\ngoal (1 subgoal):\n 1. inv_into X (p' X) x' \\<in> X", "by (metis bij_betw_imp_surj_on inv_into_into)"], ["proof (state)\nthis:\n  inv_into X (p' X) x' \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> bij X \\<Longrightarrow>\n       x \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X", "ultimately"], ["proof (chain)\npicking this:\n  x' =\n  p' (THE Xa. inv_into X (p' X) x' \\<in> Xa \\<and> Xa \\<in> P)\n   (inv_into X (p' X) x')\n  inv_into X (p' X) x' \\<in> X", "show \"x' \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X\""], ["proof (prove)\nusing this:\n  x' =\n  p' (THE Xa. inv_into X (p' X) x' \\<in> Xa \\<and> Xa \\<in> P)\n   (inv_into X (p' X) x')\n  inv_into X (p' X) x' \\<in> X\n\ngoal (1 subgoal):\n 1. x' \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X", ".."], ["proof (state)\nthis:\n  x' \\<in> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bij X\n  \\<subseteq> (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X = bij X\n\ngoal (1 subgoal):\n 1. p ` X \\<in> P'", "ultimately"], ["proof (chain)\npicking this:\n  bij X \\<in> P'\n  (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X = bij X", "have \"(\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X \\<in> P'\""], ["proof (prove)\nusing this:\n  bij X \\<in> P'\n  (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X = bij X\n\ngoal (1 subgoal):\n 1. (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X \\<in> P'", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X \\<in> P'\n\ngoal (1 subgoal):\n 1. p ` X \\<in> P'", "have \"(\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X = (\\<lambda>a. if a \\<in> A then p' (THE X. a \\<in> X \\<and> X \\<in> P) a else a) ` X \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X =\n    (\\<lambda>a.\n        if a \\<in> A then p' (THE X. a \\<in> X \\<and> X \\<in> P) a else a) `\n    X", "using \\<open>X \\<subseteq> A\\<close>"], ["proof (prove)\nusing this:\n  X \\<subseteq> A\n\ngoal (1 subgoal):\n 1. (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X =\n    (\\<lambda>a.\n        if a \\<in> A then p' (THE X. a \\<in> X \\<and> X \\<in> P) a else a) `\n    X", "by (auto intro: image_cong)"], ["proof (state)\nthis:\n  (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X =\n  (\\<lambda>a.\n      if a \\<in> A then p' (THE X. a \\<in> X \\<and> X \\<in> P) a else a) `\n  X\n\ngoal (1 subgoal):\n 1. p ` X \\<in> P'", "from this"], ["proof (chain)\npicking this:\n  (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X =\n  (\\<lambda>a.\n      if a \\<in> A then p' (THE X. a \\<in> X \\<and> X \\<in> P) a else a) `\n  X", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X =\n  (\\<lambda>a.\n      if a \\<in> A then p' (THE X. a \\<in> X \\<and> X \\<in> P) a else a) `\n  X\n\ngoal (1 subgoal):\n 1. p ` X \\<in> P'", "using \\<open>(\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X \\<in> P'\\<close>"], ["proof (prove)\nusing this:\n  (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X =\n  (\\<lambda>a.\n      if a \\<in> A then p' (THE X. a \\<in> X \\<and> X \\<in> P) a else a) `\n  X\n  (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X \\<in> P'\n\ngoal (1 subgoal):\n 1. p ` X \\<in> P'", "unfolding p_def"], ["proof (prove)\nusing this:\n  (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X =\n  (\\<lambda>a.\n      if a \\<in> A then p' (THE X. a \\<in> X \\<and> X \\<in> P) a else a) `\n  X\n  (\\<lambda>a. p' (THE X. a \\<in> X \\<and> X \\<in> P) a) ` X \\<in> P'\n\ngoal (1 subgoal):\n 1. (\\<lambda>a.\n        if a \\<in> A then p' (THE X. a \\<in> X \\<and> X \\<in> P) a else a) `\n    X\n    \\<in> P'", "by auto"], ["proof (state)\nthis:\n  p ` X \\<in> P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p ` X \\<in> P'\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> (`) p ` P \\<Longrightarrow> x \\<in> P'", "from this X'_eq"], ["proof (chain)\npicking this:\n  p ` X \\<in> P'\n  X' = p ` X", "show \"X' \\<in> P'\""], ["proof (prove)\nusing this:\n  p ` X \\<in> P'\n  X' = p ` X\n\ngoal (1 subgoal):\n 1. X' \\<in> P'", "by simp"], ["proof (state)\nthis:\n  X' \\<in> P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (`) p ` P \\<subseteq> P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P' = (`) p ` P\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; P' = (`) p ` P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  p permutes A\n  P' = (`) p ` P", "show thesis"], ["proof (prove)\nusing this:\n  p permutes A\n  P' = (`) p ` P\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  p permutes A\n  P' = (`) p ` P\n  \\<lbrakk>?p permutes A; P' = (`) ?p ` P\\<rbrakk> \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma permutes_domain_partition_eq:\n  assumes \"f \\<in> A \\<rightarrow> B\"\n  assumes \"p\\<^sub>A permutes A\"\n  assumes \"b \\<in> B\"\n  shows \"p\\<^sub>A ` {x \\<in> A. f x = b} = {x \\<in> A. f (inv p\\<^sub>A x) = b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p\\<^sub>A ` {x \\<in> A. f x = b} = {x \\<in> A. f (inv p\\<^sub>A x) = b}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. p\\<^sub>A ` {x \\<in> A. f x = b}\n    \\<subseteq> {x \\<in> A. f (inv p\\<^sub>A x) = b}\n 2. {x \\<in> A. f (inv p\\<^sub>A x) = b}\n    \\<subseteq> p\\<^sub>A ` {x \\<in> A. f x = b}", "show \"p\\<^sub>A ` {x \\<in> A. f x = b} \\<subseteq> {x \\<in> A. f (inv p\\<^sub>A x) = b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p\\<^sub>A ` {x \\<in> A. f x = b}\n    \\<subseteq> {x \\<in> A. f (inv p\\<^sub>A x) = b}", "using \\<open>p\\<^sub>A permutes A\\<close> permutes_in_image permutes_inverses(2)"], ["proof (prove)\nusing this:\n  p\\<^sub>A permutes A\n  ?p permutes ?S \\<Longrightarrow> (?p ?x \\<in> ?S) = (?x \\<in> ?S)\n  ?p permutes ?S \\<Longrightarrow> inv ?p (?p ?x) = ?x\n\ngoal (1 subgoal):\n 1. p\\<^sub>A ` {x \\<in> A. f x = b}\n    \\<subseteq> {x \\<in> A. f (inv p\\<^sub>A x) = b}", "by fastforce"], ["proof (state)\nthis:\n  p\\<^sub>A ` {x \\<in> A. f x = b}\n  \\<subseteq> {x \\<in> A. f (inv p\\<^sub>A x) = b}\n\ngoal (1 subgoal):\n 1. {x \\<in> A. f (inv p\\<^sub>A x) = b}\n    \\<subseteq> p\\<^sub>A ` {x \\<in> A. f x = b}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {x \\<in> A. f (inv p\\<^sub>A x) = b}\n    \\<subseteq> p\\<^sub>A ` {x \\<in> A. f x = b}", "show \"{x \\<in> A. f (inv p\\<^sub>A x) = b} \\<subseteq> p\\<^sub>A ` {x \\<in> A. f x = b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> A. f (inv p\\<^sub>A x) = b}\n    \\<subseteq> p\\<^sub>A ` {x \\<in> A. f x = b}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> A. f (inv p\\<^sub>A x) = b} \\<Longrightarrow>\n       x \\<in> p\\<^sub>A ` {x \\<in> A. f x = b}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> A. f (inv p\\<^sub>A x) = b} \\<Longrightarrow>\n       x \\<in> p\\<^sub>A ` {x \\<in> A. f x = b}", "assume \"x \\<in> {x \\<in> A. f (inv p\\<^sub>A x) = b}\""], ["proof (state)\nthis:\n  x \\<in> {x \\<in> A. f (inv p\\<^sub>A x) = b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> A. f (inv p\\<^sub>A x) = b} \\<Longrightarrow>\n       x \\<in> p\\<^sub>A ` {x \\<in> A. f x = b}", "from this"], ["proof (chain)\npicking this:\n  x \\<in> {x \\<in> A. f (inv p\\<^sub>A x) = b}", "have \"x \\<in> A\" \"f (inv p\\<^sub>A x) = b\""], ["proof (prove)\nusing this:\n  x \\<in> {x \\<in> A. f (inv p\\<^sub>A x) = b}\n\ngoal (1 subgoal):\n 1. x \\<in> A &&& f (inv p\\<^sub>A x) = b", "by auto"], ["proof (state)\nthis:\n  x \\<in> A\n  f (inv p\\<^sub>A x) = b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> A. f (inv p\\<^sub>A x) = b} \\<Longrightarrow>\n       x \\<in> p\\<^sub>A ` {x \\<in> A. f x = b}", "from \\<open>x \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> A", "have \"x = p\\<^sub>A (inv p\\<^sub>A x)\""], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x = p\\<^sub>A (inv p\\<^sub>A x)", "using \\<open>p\\<^sub>A permutes A\\<close> permutes_inverses(1)"], ["proof (prove)\nusing this:\n  x \\<in> A\n  p\\<^sub>A permutes A\n  ?p permutes ?S \\<Longrightarrow> ?p (inv ?p ?x) = ?x\n\ngoal (1 subgoal):\n 1. x = p\\<^sub>A (inv p\\<^sub>A x)", "by fastforce"], ["proof (state)\nthis:\n  x = p\\<^sub>A (inv p\\<^sub>A x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> A. f (inv p\\<^sub>A x) = b} \\<Longrightarrow>\n       x \\<in> p\\<^sub>A ` {x \\<in> A. f x = b}", "moreover"], ["proof (state)\nthis:\n  x = p\\<^sub>A (inv p\\<^sub>A x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> A. f (inv p\\<^sub>A x) = b} \\<Longrightarrow>\n       x \\<in> p\\<^sub>A ` {x \\<in> A. f x = b}", "from \\<open>f (inv p\\<^sub>A x) = b\\<close> \\<open>x \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  f (inv p\\<^sub>A x) = b\n  x \\<in> A", "have \"inv p\\<^sub>A x \\<in> {x \\<in> A. f x = b}\""], ["proof (prove)\nusing this:\n  f (inv p\\<^sub>A x) = b\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. inv p\\<^sub>A x \\<in> {x \\<in> A. f x = b}", "by (simp add: \\<open>p\\<^sub>A permutes A\\<close> permutes_in_image permutes_inv)"], ["proof (state)\nthis:\n  inv p\\<^sub>A x \\<in> {x \\<in> A. f x = b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> A. f (inv p\\<^sub>A x) = b} \\<Longrightarrow>\n       x \\<in> p\\<^sub>A ` {x \\<in> A. f x = b}", "ultimately"], ["proof (chain)\npicking this:\n  x = p\\<^sub>A (inv p\\<^sub>A x)\n  inv p\\<^sub>A x \\<in> {x \\<in> A. f x = b}", "show \"x \\<in> p\\<^sub>A ` {x \\<in> A. f x = b}\""], ["proof (prove)\nusing this:\n  x = p\\<^sub>A (inv p\\<^sub>A x)\n  inv p\\<^sub>A x \\<in> {x \\<in> A. f x = b}\n\ngoal (1 subgoal):\n 1. x \\<in> p\\<^sub>A ` {x \\<in> A. f x = b}", ".."], ["proof (state)\nthis:\n  x \\<in> p\\<^sub>A ` {x \\<in> A. f x = b}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {x \\<in> A. f (inv p\\<^sub>A x) = b}\n  \\<subseteq> p\\<^sub>A ` {x \\<in> A. f x = b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma image_domain_partition_eq:\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n  assumes \"p\\<^sub>A permutes A\"\n  shows \"(\\<lambda>X. p\\<^sub>A ` X) ` ((\\<lambda>b. {x \\<in> A. f x = b}) ` B) = (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B =\n    (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n    \\<subseteq> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\n 2. (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\n    \\<subseteq> (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "from \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B", "have \"f \\<in> A \\<rightarrow> B\""], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. f \\<in> A \\<rightarrow> B", "by auto"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow> B\n\ngoal (2 subgoals):\n 1. (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n    \\<subseteq> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\n 2. (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\n    \\<subseteq> (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "note eq = permutes_domain_partition_eq[OF \\<open>f \\<in> A \\<rightarrow> B\\<close> \\<open>p\\<^sub>A permutes A\\<close>]"], ["proof (state)\nthis:\n  ?b \\<in> B \\<Longrightarrow>\n  p\\<^sub>A ` {x \\<in> A. f x = ?b} = {x \\<in> A. f (inv p\\<^sub>A x) = ?b}\n\ngoal (2 subgoals):\n 1. (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n    \\<subseteq> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\n 2. (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\n    \\<subseteq> (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "show \"(\\<lambda>X. p\\<^sub>A ` X) ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B \\<subseteq> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n    \\<subseteq> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (`) p\\<^sub>A `\n               (\\<lambda>b. {x \\<in> A. f x = b}) ` B \\<Longrightarrow>\n       x \\<in> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (`) p\\<^sub>A `\n               (\\<lambda>b. {x \\<in> A. f x = b}) ` B \\<Longrightarrow>\n       x \\<in> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B", "assume \"X \\<in> (\\<lambda>X. p\\<^sub>A ` X) ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B\""], ["proof (state)\nthis:\n  X \\<in> (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (`) p\\<^sub>A `\n               (\\<lambda>b. {x \\<in> A. f x = b}) ` B \\<Longrightarrow>\n       x \\<in> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B", "from this"], ["proof (chain)\npicking this:\n  X \\<in> (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "obtain b where \"b \\<in> B\" and X_eq: \"X = p\\<^sub>A ` {x \\<in> A. f x = b}\""], ["proof (prove)\nusing this:\n  X \\<in> (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in> B; X = p\\<^sub>A ` {x \\<in> A. f x = b}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  b \\<in> B\n  X = p\\<^sub>A ` {x \\<in> A. f x = b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (`) p\\<^sub>A `\n               (\\<lambda>b. {x \\<in> A. f x = b}) ` B \\<Longrightarrow>\n       x \\<in> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B", "from this eq"], ["proof (chain)\npicking this:\n  b \\<in> B\n  X = p\\<^sub>A ` {x \\<in> A. f x = b}\n  ?b \\<in> B \\<Longrightarrow>\n  p\\<^sub>A ` {x \\<in> A. f x = ?b} = {x \\<in> A. f (inv p\\<^sub>A x) = ?b}", "have \"X = {x \\<in> A. f (inv p\\<^sub>A x) = b}\""], ["proof (prove)\nusing this:\n  b \\<in> B\n  X = p\\<^sub>A ` {x \\<in> A. f x = b}\n  ?b \\<in> B \\<Longrightarrow>\n  p\\<^sub>A ` {x \\<in> A. f x = ?b} = {x \\<in> A. f (inv p\\<^sub>A x) = ?b}\n\ngoal (1 subgoal):\n 1. X = {x \\<in> A. f (inv p\\<^sub>A x) = b}", "by simp"], ["proof (state)\nthis:\n  X = {x \\<in> A. f (inv p\\<^sub>A x) = b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (`) p\\<^sub>A `\n               (\\<lambda>b. {x \\<in> A. f x = b}) ` B \\<Longrightarrow>\n       x \\<in> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B", "from this \\<open>b \\<in> B\\<close>"], ["proof (chain)\npicking this:\n  X = {x \\<in> A. f (inv p\\<^sub>A x) = b}\n  b \\<in> B", "show \"X \\<in> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\""], ["proof (prove)\nusing this:\n  X = {x \\<in> A. f (inv p\\<^sub>A x) = b}\n  b \\<in> B\n\ngoal (1 subgoal):\n 1. X \\<in> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B", ".."], ["proof (state)\nthis:\n  X \\<in> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n  \\<subseteq> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\n    \\<subseteq> (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\n    \\<subseteq> (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "from \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B", "have \"f \\<in> A \\<rightarrow> B\""], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. f \\<in> A \\<rightarrow> B", "by auto"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow> B\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\n    \\<subseteq> (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "note eq = permutes_domain_partition_eq[OF \\<open>f \\<in> A \\<rightarrow> B\\<close> \\<open>p\\<^sub>A permutes A\\<close>, symmetric]"], ["proof (state)\nthis:\n  ?b \\<in> B \\<Longrightarrow>\n  {x \\<in> A. f (inv p\\<^sub>A x) = ?b} = p\\<^sub>A ` {x \\<in> A. f x = ?b}\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\n    \\<subseteq> (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "show \"(\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B \\<subseteq> (\\<lambda>X. p\\<^sub>A ` X) ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\n    \\<subseteq> (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) `\n               B \\<Longrightarrow>\n       x \\<in> (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) `\n               B \\<Longrightarrow>\n       x \\<in> (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "assume \"X \\<in> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\""], ["proof (state)\nthis:\n  X \\<in> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) `\n               B \\<Longrightarrow>\n       x \\<in> (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "from this"], ["proof (chain)\npicking this:\n  X \\<in> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B", "obtain b where \"b \\<in> B\" and X_eq: \"X = {x \\<in> A. f (inv p\\<^sub>A x) = b}\""], ["proof (prove)\nusing this:\n  X \\<in> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in> B;\n         X = {x \\<in> A. f (inv p\\<^sub>A x) = b}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  b \\<in> B\n  X = {x \\<in> A. f (inv p\\<^sub>A x) = b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) `\n               B \\<Longrightarrow>\n       x \\<in> (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "from this eq"], ["proof (chain)\npicking this:\n  b \\<in> B\n  X = {x \\<in> A. f (inv p\\<^sub>A x) = b}\n  ?b \\<in> B \\<Longrightarrow>\n  {x \\<in> A. f (inv p\\<^sub>A x) = ?b} = p\\<^sub>A ` {x \\<in> A. f x = ?b}", "have \"X = p\\<^sub>A ` {x \\<in> A. f x = b}\""], ["proof (prove)\nusing this:\n  b \\<in> B\n  X = {x \\<in> A. f (inv p\\<^sub>A x) = b}\n  ?b \\<in> B \\<Longrightarrow>\n  {x \\<in> A. f (inv p\\<^sub>A x) = ?b} = p\\<^sub>A ` {x \\<in> A. f x = ?b}\n\ngoal (1 subgoal):\n 1. X = p\\<^sub>A ` {x \\<in> A. f x = b}", "by simp"], ["proof (state)\nthis:\n  X = p\\<^sub>A ` {x \\<in> A. f x = b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) `\n               B \\<Longrightarrow>\n       x \\<in> (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "from this \\<open>b \\<in> B\\<close>"], ["proof (chain)\npicking this:\n  X = p\\<^sub>A ` {x \\<in> A. f x = b}\n  b \\<in> B", "show \"X \\<in> (\\<lambda>X. p\\<^sub>A ` X) ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B\""], ["proof (prove)\nusing this:\n  X = p\\<^sub>A ` {x \\<in> A. f x = b}\n  b \\<in> B\n\ngoal (1 subgoal):\n 1. X \\<in> (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "by auto"], ["proof (state)\nthis:\n  X \\<in> (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. f (inv p\\<^sub>A x) = b}) ` B\n  \\<subseteq> (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma multiset_of_partition_cards_eq_implies_permutes:\n  assumes \"finite A\" \"finite B\" \"f \\<in> A \\<rightarrow>\\<^sub>E B\" \"f' \\<in> A \\<rightarrow>\\<^sub>E B\"\n  assumes eq: \"image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) = image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\"\n  obtains p\\<^sub>A p\\<^sub>B where \"p\\<^sub>A permutes A\" \"p\\<^sub>B permutes B\" \"\\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>A p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>A p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"partition_on A ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partition_on A ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})", "using \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. partition_on A ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})", "by (auto intro!: partition_onI)"], ["proof (state)\nthis:\n  partition_on A ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>A p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  partition_on A ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>A p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"partition_on A ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partition_on A ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})", "using \\<open>f' \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. partition_on A ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})", "by (auto intro!: partition_onI)"], ["proof (state)\nthis:\n  partition_on A ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})\n\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>A p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  partition_on A ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})\n\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>A p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note partition_implies_permutes[OF \\<open>finite A\\<close> _ _ eq]"], ["proof (state)\nthis:\n  \\<lbrakk>partition_on A ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}});\n   partition_on A ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}});\n   \\<And>p.\n      \\<lbrakk>p permutes A;\n       (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n       (`) p ` ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>A p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  partition_on A ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n  partition_on A ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})\n  \\<lbrakk>partition_on A ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}});\n   partition_on A ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}});\n   \\<And>p.\n      \\<lbrakk>p permutes A;\n       (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n       (`) p ` ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "obtain p\\<^sub>A where \"p\\<^sub>A permutes A\" and\n    inv_image_eq: \"(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n      (`) p\\<^sub>A ` ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})\""], ["proof (prove)\nusing this:\n  partition_on A ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n  partition_on A ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})\n  \\<lbrakk>partition_on A ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}});\n   partition_on A ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}});\n   \\<And>p.\n      \\<lbrakk>p permutes A;\n       (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n       (`) p ` ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>A.\n        \\<lbrakk>p\\<^sub>A permutes A;\n         (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n         (`) p\\<^sub>A `\n         ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  p\\<^sub>A permutes A\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n  (`) p\\<^sub>A ` ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})\n\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>A p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>p\\<^sub>A permutes A\\<close>"], ["proof (chain)\npicking this:\n  p\\<^sub>A permutes A", "have \"inj ((`) p\\<^sub>A)\""], ["proof (prove)\nusing this:\n  p\\<^sub>A permutes A\n\ngoal (1 subgoal):\n 1. inj ((`) p\\<^sub>A)", "by (meson injI inj_image_eq_iff permutes_inj)"], ["proof (state)\nthis:\n  inj ((`) p\\<^sub>A)\n\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>A p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have inv_image_eq': \"(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = (\\<lambda>b. {x \\<in> A. f' (inv p\\<^sub>A x) = b}) ` B - {{}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n    (\\<lambda>b. {x \\<in> A. f' (inv p\\<^sub>A x) = b}) ` B - {{}}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n    (\\<lambda>b. {x \\<in> A. f' (inv p\\<^sub>A x) = b}) ` B - {{}}", "note inv_image_eq"], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n  (`) p\\<^sub>A ` ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n    (\\<lambda>b. {x \\<in> A. f' (inv p\\<^sub>A x) = b}) ` B - {{}}", "also"], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n  (`) p\\<^sub>A ` ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n    (\\<lambda>b. {x \\<in> A. f' (inv p\\<^sub>A x) = b}) ` B - {{}}", "have \"(\\<lambda>X. p\\<^sub>A ` X) ` ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}) = (\\<lambda>b. {x \\<in> A. f' (inv p\\<^sub>A x) = b}) ` B - {{}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (`) p\\<^sub>A ` ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}) =\n    (\\<lambda>b. {x \\<in> A. f' (inv p\\<^sub>A x) = b}) ` B - {{}}", "using image_domain_partition_eq[OF \\<open>f' \\<in> A \\<rightarrow>\\<^sub>E B\\<close> \\<open>p\\<^sub>A permutes A\\<close>]"], ["proof (prove)\nusing this:\n  (`) p\\<^sub>A ` (\\<lambda>b. {x \\<in> A. f' x = b}) ` B =\n  (\\<lambda>b. {x \\<in> A. f' (inv p\\<^sub>A x) = b}) ` B\n\ngoal (1 subgoal):\n 1. (`) p\\<^sub>A ` ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}) =\n    (\\<lambda>b. {x \\<in> A. f' (inv p\\<^sub>A x) = b}) ` B - {{}}", "by (simp add: image_set_diff[OF \\<open>inj ((`) p\\<^sub>A)\\<close>])"], ["proof (state)\nthis:\n  (`) p\\<^sub>A ` ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}) =\n  (\\<lambda>b. {x \\<in> A. f' (inv p\\<^sub>A x) = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n    (\\<lambda>b. {x \\<in> A. f' (inv p\\<^sub>A x) = b}) ` B - {{}}", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n  (\\<lambda>b. {x \\<in> A. f' (inv p\\<^sub>A x) = b}) ` B - {{}}", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n  (\\<lambda>b. {x \\<in> A. f' (inv p\\<^sub>A x) = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n    (\\<lambda>b. {x \\<in> A. f' (inv p\\<^sub>A x) = b}) ` B - {{}}", "."], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n  (\\<lambda>b. {x \\<in> A. f' (inv p\\<^sub>A x) = b}) ` B - {{}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} =\n  (\\<lambda>b. {x \\<in> A. f' (inv p\\<^sub>A x) = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>A p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>p\\<^sub>A permutes A\\<close>"], ["proof (chain)\npicking this:\n  p\\<^sub>A permutes A", "have \"inv p\\<^sub>A permutes A\""], ["proof (prove)\nusing this:\n  p\\<^sub>A permutes A\n\ngoal (1 subgoal):\n 1. inv p\\<^sub>A permutes A", "using permutes_inv"], ["proof (prove)\nusing this:\n  p\\<^sub>A permutes A\n  ?p permutes ?S \\<Longrightarrow> inv ?p permutes ?S\n\ngoal (1 subgoal):\n 1. inv p\\<^sub>A permutes A", "by blast"], ["proof (state)\nthis:\n  inv p\\<^sub>A permutes A\n\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>A p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"(\\<lambda>x. f' (inv p\\<^sub>A x)) \\<in> A \\<rightarrow>\\<^sub>E B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f' (inv p\\<^sub>A x)) \\<in> A \\<rightarrow>\\<^sub>E B", "using \\<open>f' \\<in> A \\<rightarrow>\\<^sub>E B\\<close> \\<open>inv p\\<^sub>A permutes A\\<close> permutes_in_image"], ["proof (prove)\nusing this:\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n  inv p\\<^sub>A permutes A\n  ?p permutes ?S \\<Longrightarrow> (?p ?x \\<in> ?S) = (?x \\<in> ?S)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f' (inv p\\<^sub>A x)) \\<in> A \\<rightarrow>\\<^sub>E B", "by fastforce"], ["proof (state)\nthis:\n  (\\<lambda>x. f' (inv p\\<^sub>A x)) \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>A p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close> this \\<open>finite B\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  (\\<lambda>x. f' (inv p\\<^sub>A x)) \\<in> A \\<rightarrow>\\<^sub>E B\n  finite B", "obtain p\\<^sub>B\n    where \"p\\<^sub>B permutes B\" and eq'': \"\\<forall>x\\<in>A. f x = p\\<^sub>B (f' (inv p\\<^sub>A x))\""], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  (\\<lambda>x. f' (inv p\\<^sub>A x)) \\<in> A \\<rightarrow>\\<^sub>E B\n  finite B\n\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (inv p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using partitions_eq_implies_permutes[OF _ _ _ inv_image_eq']"], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  (\\<lambda>x. f' (inv p\\<^sub>A x)) \\<in> A \\<rightarrow>\\<^sub>E B\n  finite B\n  \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E B;\n   (\\<lambda>x. f' (inv p\\<^sub>A x)) \\<in> A \\<rightarrow>\\<^sub>E B;\n   finite B\\<rbrakk>\n  \\<Longrightarrow> \\<exists>p.\n                       p permutes B \\<and>\n                       (\\<forall>x\\<in>A. f x = p (f' (inv p\\<^sub>A x)))\n\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (inv p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  p\\<^sub>B permutes B\n  \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (inv p\\<^sub>A x))\n\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>A p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>inv p\\<^sub>A permutes A\\<close> \\<open>p\\<^sub>B permutes B\\<close> eq'' that"], ["proof (chain)\npicking this:\n  inv p\\<^sub>A permutes A\n  p\\<^sub>B permutes B\n  \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (inv p\\<^sub>A x))\n  \\<lbrakk>?p\\<^sub>A permutes A; ?p\\<^sub>B permutes B;\n   \\<forall>x\\<in>A. f x = ?p\\<^sub>B (f' (?p\\<^sub>A x))\\<rbrakk>\n  \\<Longrightarrow> thesis", "show thesis"], ["proof (prove)\nusing this:\n  inv p\\<^sub>A permutes A\n  p\\<^sub>B permutes B\n  \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (inv p\\<^sub>A x))\n  \\<lbrakk>?p\\<^sub>A permutes A; ?p\\<^sub>B permutes B;\n   \\<forall>x\\<in>A. f x = ?p\\<^sub>B (f' (?p\\<^sub>A x))\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Bijections on Same Domain and Range\\<close>"], ["", "subsubsection \\<open>Existence of Domain Permutation\\<close>"], ["", "lemma obtain_domain_permutation_for_two_bijections:\n  assumes \"bij_betw f A B\" \"bij_betw f' A B\"\n  obtains p where \"p permutes A\" and \"\\<forall>a\\<in>A. f a = f' (p a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; \\<forall>a\\<in>A. f a = f' (p a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; \\<forall>a\\<in>A. f a = f' (p a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?p = \"\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; \\<forall>a\\<in>A. f a = f' (p a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"?p permutes A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) permutes\n    A", "proof (rule bij_imp_permutes)"], ["proof (state)\ngoal (2 subgoals):\n 1. bij_betw (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a)\n     A A\n 2. \\<And>x.\n       x \\<notin> A \\<Longrightarrow>\n       (if x \\<in> A then the_inv_into A f' (f x) else x) = x", "show \"bij_betw ?p A A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a)\n     A A", "proof (rule bij_betw_imageI)"], ["proof (state)\ngoal (2 subgoals):\n 1. inj_on (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) A\n 2. (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) ` A = A", "show \"inj_on ?p A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) A", "proof (rule inj_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        (if x \\<in> A then the_inv_into A f' (f x) else x) =\n        (if y \\<in> A then the_inv_into A f' (f y) else y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix a a'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        (if x \\<in> A then the_inv_into A f' (f x) else x) =\n        (if y \\<in> A then the_inv_into A f' (f y) else y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume \"a \\<in> A\" \"a' \\<in> A\" \"?p a = ?p a'\""], ["proof (state)\nthis:\n  a \\<in> A\n  a' \\<in> A\n  (if a \\<in> A then the_inv_into A f' (f a) else a) =\n  (if a' \\<in> A then the_inv_into A f' (f a') else a')\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        (if x \\<in> A then the_inv_into A f' (f x) else x) =\n        (if y \\<in> A then the_inv_into A f' (f y) else y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "from this"], ["proof (chain)\npicking this:\n  a \\<in> A\n  a' \\<in> A\n  (if a \\<in> A then the_inv_into A f' (f a) else a) =\n  (if a' \\<in> A then the_inv_into A f' (f a') else a')", "have \"the_inv_into A f' (f a) = the_inv_into A f' (f a')\""], ["proof (prove)\nusing this:\n  a \\<in> A\n  a' \\<in> A\n  (if a \\<in> A then the_inv_into A f' (f a) else a) =\n  (if a' \\<in> A then the_inv_into A f' (f a') else a')\n\ngoal (1 subgoal):\n 1. the_inv_into A f' (f a) = the_inv_into A f' (f a')", "using \\<open>a \\<in> A\\<close> \\<open>a' \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  a \\<in> A\n  a' \\<in> A\n  (if a \\<in> A then the_inv_into A f' (f a) else a) =\n  (if a' \\<in> A then the_inv_into A f' (f a') else a')\n  a \\<in> A\n  a' \\<in> A\n\ngoal (1 subgoal):\n 1. the_inv_into A f' (f a) = the_inv_into A f' (f a')", "by simp"], ["proof (state)\nthis:\n  the_inv_into A f' (f a) = the_inv_into A f' (f a')\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        (if x \\<in> A then the_inv_into A f' (f x) else x) =\n        (if y \\<in> A then the_inv_into A f' (f y) else y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "from this"], ["proof (chain)\npicking this:\n  the_inv_into A f' (f a) = the_inv_into A f' (f a')", "have \"f a = f a'\""], ["proof (prove)\nusing this:\n  the_inv_into A f' (f a) = the_inv_into A f' (f a')\n\ngoal (1 subgoal):\n 1. f a = f a'", "using \\<open>a \\<in> A\\<close> \\<open>a' \\<in> A\\<close> assms"], ["proof (prove)\nusing this:\n  the_inv_into A f' (f a) = the_inv_into A f' (f a')\n  a \\<in> A\n  a' \\<in> A\n  bij_betw f A B\n  bij_betw f' A B\n\ngoal (1 subgoal):\n 1. f a = f a'", "by (metis bij_betwE f_the_inv_into_f_bij_betw)"], ["proof (state)\nthis:\n  f a = f a'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        (if x \\<in> A then the_inv_into A f' (f x) else x) =\n        (if y \\<in> A then the_inv_into A f' (f y) else y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "from this"], ["proof (chain)\npicking this:\n  f a = f a'", "show \"a = a'\""], ["proof (prove)\nusing this:\n  f a = f a'\n\ngoal (1 subgoal):\n 1. a = a'", "using \\<open>a \\<in> A\\<close> \\<open>a' \\<in> A\\<close> assms"], ["proof (prove)\nusing this:\n  f a = f a'\n  a \\<in> A\n  a' \\<in> A\n  bij_betw f A B\n  bij_betw f' A B\n\ngoal (1 subgoal):\n 1. a = a'", "by (metis bij_betw_inv_into_left)"], ["proof (state)\nthis:\n  a = a'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) A\n\ngoal (1 subgoal):\n 1. (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) ` A = A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) ` A = A", "show \"?p ` A = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) ` A = A", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) ` A\n    \\<subseteq> A\n 2. A \\<subseteq> (\\<lambda>a.\n                      if a \\<in> A then the_inv_into A f' (f a) else a) `\n                  A", "show \"?p ` A \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) ` A\n    \\<subseteq> A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a.\n                   if a \\<in> A then the_inv_into A f' (f a) else a) `\n               A \\<Longrightarrow>\n       x \\<in> A", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a.\n                   if a \\<in> A then the_inv_into A f' (f a) else a) `\n               A \\<Longrightarrow>\n       x \\<in> A", "assume \"a \\<in> ?p ` A\""], ["proof (state)\nthis:\n  a \\<in> (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) ` A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a.\n                   if a \\<in> A then the_inv_into A f' (f a) else a) `\n               A \\<Longrightarrow>\n       x \\<in> A", "from this"], ["proof (chain)\npicking this:\n  a \\<in> (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) ` A", "obtain a' where \"a' \\<in> A\" and \"a = the_inv_into A f' (f a')\""], ["proof (prove)\nusing this:\n  a \\<in> (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) ` A\n\ngoal (1 subgoal):\n 1. (\\<And>a'.\n        \\<lbrakk>a' \\<in> A; a = the_inv_into A f' (f a')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a' \\<in> A\n  a = the_inv_into A f' (f a')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a.\n                   if a \\<in> A then the_inv_into A f' (f a) else a) `\n               A \\<Longrightarrow>\n       x \\<in> A", "from this assms"], ["proof (chain)\npicking this:\n  a' \\<in> A\n  a = the_inv_into A f' (f a')\n  bij_betw f A B\n  bij_betw f' A B", "show \"a \\<in> A\""], ["proof (prove)\nusing this:\n  a' \\<in> A\n  a = the_inv_into A f' (f a')\n  bij_betw f A B\n  bij_betw f' A B\n\ngoal (1 subgoal):\n 1. a \\<in> A", "by (metis bij_betwE bij_betw_imp_inj_on bij_betw_imp_surj_on subset_iff the_inv_into_into)"], ["proof (state)\nthis:\n  a \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) ` A\n  \\<subseteq> A\n\ngoal (1 subgoal):\n 1. A \\<subseteq> (\\<lambda>a.\n                      if a \\<in> A then the_inv_into A f' (f a) else a) `\n                  A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<subseteq> (\\<lambda>a.\n                      if a \\<in> A then the_inv_into A f' (f a) else a) `\n                  A", "show \"A \\<subseteq> ?p ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> (\\<lambda>a.\n                      if a \\<in> A then the_inv_into A f' (f a) else a) `\n                  A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<in> (\\<lambda>a.\n                   if a \\<in> A then the_inv_into A f' (f a) else a) `\n               A", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<in> (\\<lambda>a.\n                   if a \\<in> A then the_inv_into A f' (f a) else a) `\n               A", "assume \"a \\<in> A\""], ["proof (state)\nthis:\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<in> (\\<lambda>a.\n                   if a \\<in> A then the_inv_into A f' (f a) else a) `\n               A", "from this assms"], ["proof (chain)\npicking this:\n  a \\<in> A\n  bij_betw f A B\n  bij_betw f' A B", "have \"the_inv_into A f (f' a) \\<in> A\""], ["proof (prove)\nusing this:\n  a \\<in> A\n  bij_betw f A B\n  bij_betw f' A B\n\ngoal (1 subgoal):\n 1. the_inv_into A f (f' a) \\<in> A", "by (meson bij_betwE bij_betw_the_inv_into)"], ["proof (state)\nthis:\n  the_inv_into A f (f' a) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<in> (\\<lambda>a.\n                   if a \\<in> A then the_inv_into A f' (f a) else a) `\n               A", "moreover"], ["proof (state)\nthis:\n  the_inv_into A f (f' a) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<in> (\\<lambda>a.\n                   if a \\<in> A then the_inv_into A f' (f a) else a) `\n               A", "from  \\<open>a \\<in> A\\<close> assms"], ["proof (chain)\npicking this:\n  a \\<in> A\n  bij_betw f A B\n  bij_betw f' A B", "have \"a = the_inv_into A f' (f (the_inv_into A f (f' a)))\""], ["proof (prove)\nusing this:\n  a \\<in> A\n  bij_betw f A B\n  bij_betw f' A B\n\ngoal (1 subgoal):\n 1. a = the_inv_into A f' (f (the_inv_into A f (f' a)))", "by (metis bij_betwE bij_betw_imp_inj_on f_the_inv_into_f_bij_betw the_inv_into_f_eq)"], ["proof (state)\nthis:\n  a = the_inv_into A f' (f (the_inv_into A f (f' a)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<in> (\\<lambda>a.\n                   if a \\<in> A then the_inv_into A f' (f a) else a) `\n               A", "ultimately"], ["proof (chain)\npicking this:\n  the_inv_into A f (f' a) \\<in> A\n  a = the_inv_into A f' (f (the_inv_into A f (f' a)))", "show \"a \\<in> ?p ` A\""], ["proof (prove)\nusing this:\n  the_inv_into A f (f' a) \\<in> A\n  a = the_inv_into A f' (f (the_inv_into A f (f' a)))\n\ngoal (1 subgoal):\n 1. a \\<in> (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) `\n            A", "by auto"], ["proof (state)\nthis:\n  a \\<in> (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) ` A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A \\<subseteq> (\\<lambda>a.\n                    if a \\<in> A then the_inv_into A f' (f a) else a) `\n                A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) ` A = A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bij_betw (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) A\n   A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> A \\<Longrightarrow>\n       (if x \\<in> A then the_inv_into A f' (f x) else x) = x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> A \\<Longrightarrow>\n       (if x \\<in> A then the_inv_into A f' (f x) else x) = x", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> A \\<Longrightarrow>\n       (if x \\<in> A then the_inv_into A f' (f x) else x) = x", "assume \"a \\<notin> A\""], ["proof (state)\nthis:\n  a \\<notin> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> A \\<Longrightarrow>\n       (if x \\<in> A then the_inv_into A f' (f x) else x) = x", "from this"], ["proof (chain)\npicking this:\n  a \\<notin> A", "show \"?p a = a\""], ["proof (prove)\nusing this:\n  a \\<notin> A\n\ngoal (1 subgoal):\n 1. (if a \\<in> A then the_inv_into A f' (f a) else a) = a", "by auto"], ["proof (state)\nthis:\n  (if a \\<in> A then the_inv_into A f' (f a) else a) = a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) permutes A\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; \\<forall>a\\<in>A. f a = f' (p a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) permutes A\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; \\<forall>a\\<in>A. f a = f' (p a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<forall>a\\<in>A. f a = f' (?p a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>A.\n       f a = f' (if a \\<in> A then the_inv_into A f' (f a) else a)", "using \\<open>bij_betw f A B\\<close> \\<open>bij_betw f' A B\\<close>"], ["proof (prove)\nusing this:\n  bij_betw f A B\n  bij_betw f' A B\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>A.\n       f a = f' (if a \\<in> A then the_inv_into A f' (f a) else a)", "using bij_betwE f_the_inv_into_f_bij_betw"], ["proof (prove)\nusing this:\n  bij_betw f A B\n  bij_betw f' A B\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n  \\<lbrakk>bij_betw ?f ?A ?B;\n   bij_betw ?f ?A ?B \\<Longrightarrow> ?x \\<in> ?B\\<rbrakk>\n  \\<Longrightarrow> ?f (the_inv_into ?A ?f ?x) = ?x\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>A.\n       f a = f' (if a \\<in> A then the_inv_into A f' (f a) else a)", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>a\\<in>A.\n     f a = f' (if a \\<in> A then the_inv_into A f' (f a) else a)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; \\<forall>a\\<in>A. f a = f' (p a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  \\<forall>a\\<in>A.\n     f a = f' (if a \\<in> A then the_inv_into A f' (f a) else a)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; \\<forall>a\\<in>A. f a = f' (p a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note that"], ["proof (state)\nthis:\n  \\<lbrakk>?p permutes A; \\<forall>a\\<in>A. f a = f' (?p a)\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; \\<forall>a\\<in>A. f a = f' (p a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) permutes A\n  \\<forall>a\\<in>A.\n     f a = f' (if a \\<in> A then the_inv_into A f' (f a) else a)\n  \\<lbrakk>?p permutes A; \\<forall>a\\<in>A. f a = f' (?p a)\\<rbrakk>\n  \\<Longrightarrow> thesis", "show thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>a. if a \\<in> A then the_inv_into A f' (f a) else a) permutes A\n  \\<forall>a\\<in>A.\n     f a = f' (if a \\<in> A then the_inv_into A f' (f a) else a)\n  \\<lbrakk>?p permutes A; \\<forall>a\\<in>A. f a = f' (?p a)\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Existence of Range Permutation\\<close>"], ["", "lemma obtain_range_permutation_for_two_bijections:\n  assumes \"bij_betw f A B\" \"bij_betw f' A B\"\n  obtains p where \"p permutes B\" and \"\\<forall>a\\<in>A. f a = p (f' a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes B; \\<forall>a\\<in>A. f a = p (f' a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes B; \\<forall>a\\<in>A. f a = p (f' a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?p = \"\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes B; \\<forall>a\\<in>A. f a = p (f' a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"?p permutes B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) permutes B", "proof (rule bij_imp_permutes)"], ["proof (state)\ngoal (2 subgoals):\n 1. bij_betw (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) B B\n 2. \\<And>x.\n       x \\<notin> B \\<Longrightarrow>\n       (if x \\<in> B then f (inv_into A f' x) else x) = x", "show \"bij_betw ?p B B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) B B", "proof (rule bij_betw_imageI)"], ["proof (state)\ngoal (2 subgoals):\n 1. inj_on (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) B\n 2. (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) ` B = B", "show \"inj_on ?p B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) B", "proof (rule inj_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> B; y \\<in> B;\n        (if x \\<in> B then f (inv_into A f' x) else x) =\n        (if y \\<in> B then f (inv_into A f' y) else y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix b b'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> B; y \\<in> B;\n        (if x \\<in> B then f (inv_into A f' x) else x) =\n        (if y \\<in> B then f (inv_into A f' y) else y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume \"b \\<in> B\" \"b' \\<in> B\" \"?p b = ?p b'\""], ["proof (state)\nthis:\n  b \\<in> B\n  b' \\<in> B\n  (if b \\<in> B then f (inv_into A f' b) else b) =\n  (if b' \\<in> B then f (inv_into A f' b') else b')\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> B; y \\<in> B;\n        (if x \\<in> B then f (inv_into A f' x) else x) =\n        (if y \\<in> B then f (inv_into A f' y) else y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "from this"], ["proof (chain)\npicking this:\n  b \\<in> B\n  b' \\<in> B\n  (if b \\<in> B then f (inv_into A f' b) else b) =\n  (if b' \\<in> B then f (inv_into A f' b') else b')", "have \"f (inv_into A f' b) = f (inv_into A f' b')\""], ["proof (prove)\nusing this:\n  b \\<in> B\n  b' \\<in> B\n  (if b \\<in> B then f (inv_into A f' b) else b) =\n  (if b' \\<in> B then f (inv_into A f' b') else b')\n\ngoal (1 subgoal):\n 1. f (inv_into A f' b) = f (inv_into A f' b')", "using \\<open>b \\<in> B\\<close> \\<open>b' \\<in> B\\<close>"], ["proof (prove)\nusing this:\n  b \\<in> B\n  b' \\<in> B\n  (if b \\<in> B then f (inv_into A f' b) else b) =\n  (if b' \\<in> B then f (inv_into A f' b') else b')\n  b \\<in> B\n  b' \\<in> B\n\ngoal (1 subgoal):\n 1. f (inv_into A f' b) = f (inv_into A f' b')", "by simp"], ["proof (state)\nthis:\n  f (inv_into A f' b) = f (inv_into A f' b')\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> B; y \\<in> B;\n        (if x \\<in> B then f (inv_into A f' x) else x) =\n        (if y \\<in> B then f (inv_into A f' y) else y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "from this"], ["proof (chain)\npicking this:\n  f (inv_into A f' b) = f (inv_into A f' b')", "have \"inv_into A f' b = inv_into A f' b'\""], ["proof (prove)\nusing this:\n  f (inv_into A f' b) = f (inv_into A f' b')\n\ngoal (1 subgoal):\n 1. inv_into A f' b = inv_into A f' b'", "using \\<open>b \\<in> B\\<close> \\<open>b' \\<in> B\\<close> assms"], ["proof (prove)\nusing this:\n  f (inv_into A f' b) = f (inv_into A f' b')\n  b \\<in> B\n  b' \\<in> B\n  bij_betw f A B\n  bij_betw f' A B\n\ngoal (1 subgoal):\n 1. inv_into A f' b = inv_into A f' b'", "by (metis bij_betw_imp_surj_on bij_betw_inv_into_left inv_into_into)"], ["proof (state)\nthis:\n  inv_into A f' b = inv_into A f' b'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> B; y \\<in> B;\n        (if x \\<in> B then f (inv_into A f' x) else x) =\n        (if y \\<in> B then f (inv_into A f' y) else y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "from this"], ["proof (chain)\npicking this:\n  inv_into A f' b = inv_into A f' b'", "show \"b = b'\""], ["proof (prove)\nusing this:\n  inv_into A f' b = inv_into A f' b'\n\ngoal (1 subgoal):\n 1. b = b'", "using \\<open>b \\<in> B\\<close> \\<open>b' \\<in> B\\<close> assms(2)"], ["proof (prove)\nusing this:\n  inv_into A f' b = inv_into A f' b'\n  b \\<in> B\n  b' \\<in> B\n  bij_betw f' A B\n\ngoal (1 subgoal):\n 1. b = b'", "by (metis bij_betw_inv_into_right)"], ["proof (state)\nthis:\n  b = b'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) B\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) ` B = B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) ` B = B", "show \"?p ` B = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) ` B = B", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) ` B\n    \\<subseteq> B\n 2. B \\<subseteq> (\\<lambda>b.\n                      if b \\<in> B then f (inv_into A f' b) else b) `\n                  B", "from assms"], ["proof (chain)\npicking this:\n  bij_betw f A B\n  bij_betw f' A B", "show \"?p ` B \\<subseteq> B\""], ["proof (prove)\nusing this:\n  bij_betw f A B\n  bij_betw f' A B\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) ` B\n    \\<subseteq> B", "by (auto simp add: bij_betwE bij_betw_def inv_into_into)"], ["proof (state)\nthis:\n  (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) ` B\n  \\<subseteq> B\n\ngoal (1 subgoal):\n 1. B \\<subseteq> (\\<lambda>b.\n                      if b \\<in> B then f (inv_into A f' b) else b) `\n                  B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<subseteq> (\\<lambda>b.\n                      if b \\<in> B then f (inv_into A f' b) else b) `\n                  B", "show \"B \\<subseteq> ?p ` B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> (\\<lambda>b.\n                      if b \\<in> B then f (inv_into A f' b) else b) `\n                  B", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       x \\<in> (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) `\n               B", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       x \\<in> (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) `\n               B", "assume \"b \\<in> B\""], ["proof (state)\nthis:\n  b \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       x \\<in> (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) `\n               B", "from this assms"], ["proof (chain)\npicking this:\n  b \\<in> B\n  bij_betw f A B\n  bij_betw f' A B", "have \"f' (inv_into A f b) \\<in> B\""], ["proof (prove)\nusing this:\n  b \\<in> B\n  bij_betw f A B\n  bij_betw f' A B\n\ngoal (1 subgoal):\n 1. f' (inv_into A f b) \\<in> B", "by (metis bij_betwE bij_betw_imp_surj_on inv_into_into)"], ["proof (state)\nthis:\n  f' (inv_into A f b) \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       x \\<in> (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) `\n               B", "moreover"], ["proof (state)\nthis:\n  f' (inv_into A f b) \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       x \\<in> (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) `\n               B", "have \"b = ?p (f' (inv_into A f b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b =\n    (if f' (inv_into A f b) \\<in> B\n     then f (inv_into A f' (f' (inv_into A f b))) else f' (inv_into A f b))", "using assms \\<open>f' (inv_into A f b) \\<in> B\\<close> \\<open>b \\<in> B\\<close>"], ["proof (prove)\nusing this:\n  bij_betw f A B\n  bij_betw f' A B\n  f' (inv_into A f b) \\<in> B\n  b \\<in> B\n\ngoal (1 subgoal):\n 1. b =\n    (if f' (inv_into A f b) \\<in> B\n     then f (inv_into A f' (f' (inv_into A f b))) else f' (inv_into A f b))", "by (auto simp add: bij_betw_imp_surj_on bij_betw_inv_into_left bij_betw_inv_into_right inv_into_into)"], ["proof (state)\nthis:\n  b =\n  (if f' (inv_into A f b) \\<in> B\n   then f (inv_into A f' (f' (inv_into A f b))) else f' (inv_into A f b))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       x \\<in> (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) `\n               B", "ultimately"], ["proof (chain)\npicking this:\n  f' (inv_into A f b) \\<in> B\n  b =\n  (if f' (inv_into A f b) \\<in> B\n   then f (inv_into A f' (f' (inv_into A f b))) else f' (inv_into A f b))", "show \"b \\<in> ?p ` B\""], ["proof (prove)\nusing this:\n  f' (inv_into A f b) \\<in> B\n  b =\n  (if f' (inv_into A f b) \\<in> B\n   then f (inv_into A f' (f' (inv_into A f b))) else f' (inv_into A f b))\n\ngoal (1 subgoal):\n 1. b \\<in> (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) ` B", "by auto"], ["proof (state)\nthis:\n  b \\<in> (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) ` B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B \\<subseteq> (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) `\n                B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) ` B = B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bij_betw (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) B B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> B \\<Longrightarrow>\n       (if x \\<in> B then f (inv_into A f' x) else x) = x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> B \\<Longrightarrow>\n       (if x \\<in> B then f (inv_into A f' x) else x) = x", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> B \\<Longrightarrow>\n       (if x \\<in> B then f (inv_into A f' x) else x) = x", "assume \"b \\<notin> B\""], ["proof (state)\nthis:\n  b \\<notin> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> B \\<Longrightarrow>\n       (if x \\<in> B then f (inv_into A f' x) else x) = x", "from this"], ["proof (chain)\npicking this:\n  b \\<notin> B", "show \"?p b = b\""], ["proof (prove)\nusing this:\n  b \\<notin> B\n\ngoal (1 subgoal):\n 1. (if b \\<in> B then f (inv_into A f' b) else b) = b", "by auto"], ["proof (state)\nthis:\n  (if b \\<in> B then f (inv_into A f' b) else b) = b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) permutes B\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes B; \\<forall>a\\<in>A. f a = p (f' a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) permutes B\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes B; \\<forall>a\\<in>A. f a = p (f' a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<forall>a\\<in>A. f a = ?p (f' a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>A.\n       f a = (if f' a \\<in> B then f (inv_into A f' (f' a)) else f' a)", "using \\<open>bij_betw f' A B\\<close> bij_betw_inv_into_left bij_betwE"], ["proof (prove)\nusing this:\n  bij_betw f' A B\n  \\<lbrakk>bij_betw ?f ?A ?A'; ?a \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> inv_into ?A ?f (?f ?a) = ?a\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>A.\n       f a = (if f' a \\<in> B then f (inv_into A f' (f' a)) else f' a)", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>a\\<in>A.\n     f a = (if f' a \\<in> B then f (inv_into A f' (f' a)) else f' a)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes B; \\<forall>a\\<in>A. f a = p (f' a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  \\<forall>a\\<in>A.\n     f a = (if f' a \\<in> B then f (inv_into A f' (f' a)) else f' a)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes B; \\<forall>a\\<in>A. f a = p (f' a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note that"], ["proof (state)\nthis:\n  \\<lbrakk>?p permutes B; \\<forall>a\\<in>A. f a = ?p (f' a)\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes B; \\<forall>a\\<in>A. f a = p (f' a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) permutes B\n  \\<forall>a\\<in>A.\n     f a = (if f' a \\<in> B then f (inv_into A f' (f' a)) else f' a)\n  \\<lbrakk>?p permutes B; \\<forall>a\\<in>A. f a = ?p (f' a)\\<rbrakk>\n  \\<Longrightarrow> thesis", "show thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>b. if b \\<in> B then f (inv_into A f' b) else b) permutes B\n  \\<forall>a\\<in>A.\n     f a = (if f' a \\<in> B then f (inv_into A f' (f' a)) else f' a)\n  \\<lbrakk>?p permutes B; \\<forall>a\\<in>A. f a = ?p (f' a)\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}