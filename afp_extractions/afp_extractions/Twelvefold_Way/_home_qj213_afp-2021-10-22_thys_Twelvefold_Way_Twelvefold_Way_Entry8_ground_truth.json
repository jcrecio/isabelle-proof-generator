{"file_name": "/home/qj213/afp-2021-10-22/thys/Twelvefold_Way/Twelvefold_Way_Entry8.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Twelvefold_Way", "problem_names": ["lemma inj_on_implies_partitions_of:\n  assumes \"F \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B\"\n  assumes \"univ (\\<lambda>f. inj_on f A) F\"\n  shows \"\\<forall>X \\<in> partitions_of A B F. card X = 1\"", "lemma unique_part_eq_singleton:\n  assumes \"partition_on A P\"\n  assumes \"\\<forall>X\\<in>P. card X = 1\"\n  assumes \"x \\<in> A\"\n  shows \"(THE X. x \\<in> X \\<and> X \\<in> P) = {x}\"", "lemma functions_of_is_inj_on:\n  assumes \"finite A\" \"finite B\" \"partition_on A P\" \"card P \\<le> card B\"\n  assumes \"\\<forall>X\\<in>P. card X = 1\"\n  shows \"univ (\\<lambda>f. inj_on f A) (functions_of P A B)\"", "lemma bij_betw_partitions_of:\n  assumes \"finite A\" \"finite B\"\n  shows \"bij_betw (partitions_of A B) ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // range_permutation A B) {P. partition_on A P \\<and> card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}\"", "lemma card_injective_functions_range_permutation:\n  assumes \"finite A\" \"finite B\"\n  shows \"card ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // range_permutation A B) = iverson (card A \\<le> card B)\""], "translations": [["", "lemma inj_on_implies_partitions_of:\n  assumes \"F \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B\"\n  assumes \"univ (\\<lambda>f. inj_on f A) F\"\n  shows \"\\<forall>X \\<in> partitions_of A B F. card X = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>partitions_of A B F. card X = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>partitions_of A B F. card X = 1", "from \\<open>F \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B\\<close>"], ["proof (chain)\npicking this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B", "obtain f where \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n    and F_eq: \"F = range_permutation A B `` {f}\""], ["proof (prove)\nusing this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E B;\n         F = range_permutation A B `` {f}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using quotientE"], ["proof (prove)\nusing this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B\n  \\<lbrakk>?X \\<in> ?A // ?r;\n   \\<And>x.\n      \\<lbrakk>?X = ?r `` {x}; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E B;\n         F = range_permutation A B `` {f}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  F = range_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>partitions_of A B F. card X = 1", "from this \\<open>univ (\\<lambda>f. inj_on f A) F\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  F = range_permutation A B `` {f}\n  univ (\\<lambda>f. inj_on f A) F", "have \"inj_on f A\""], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  F = range_permutation A B `` {f}\n  univ (\\<lambda>f. inj_on f A) F\n\ngoal (1 subgoal):\n 1. inj_on f A", "using univ_commute'[OF equiv_range_permutation inj_on_respects_range_permutation \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>]"], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  F = range_permutation A B `` {f}\n  univ (\\<lambda>f. inj_on f A) F\n  univ (\\<lambda>f. inj_on f A) (range_permutation A B `` {f}) = inj_on f A\n\ngoal (1 subgoal):\n 1. inj_on f A", "by simp"], ["proof (state)\nthis:\n  inj_on f A\n\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>partitions_of A B F. card X = 1", "have \"\\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}. card X = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}. card X = 1", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n               {{}} \\<Longrightarrow>\n       card X = 1", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n               {{}} \\<Longrightarrow>\n       card X = 1", "assume \"X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\""], ["proof (state)\nthis:\n  X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n               {{}} \\<Longrightarrow>\n       card X = 1", "from this"], ["proof (chain)\npicking this:\n  X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "obtain x where \"X = {xa \\<in> A. f xa = f x}\" \"x \\<in> A\""], ["proof (prove)\nusing this:\n  X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>X = {xa \\<in> A. f xa = f x}; x \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  X = {xa \\<in> A. f xa = f x}\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n               {{}} \\<Longrightarrow>\n       card X = 1", "from this"], ["proof (chain)\npicking this:\n  X = {xa \\<in> A. f xa = f x}\n  x \\<in> A", "have \"X = {x}\""], ["proof (prove)\nusing this:\n  X = {xa \\<in> A. f xa = f x}\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. X = {x}", "using \\<open>inj_on f A\\<close>"], ["proof (prove)\nusing this:\n  X = {xa \\<in> A. f xa = f x}\n  x \\<in> A\n  inj_on f A\n\ngoal (1 subgoal):\n 1. X = {x}", "by (auto dest!: inj_onD)"], ["proof (state)\nthis:\n  X = {x}\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n               {{}} \\<Longrightarrow>\n       card X = 1", "from this"], ["proof (chain)\npicking this:\n  X = {x}", "show \"card X = 1\""], ["proof (prove)\nusing this:\n  X = {x}\n\ngoal (1 subgoal):\n 1. card X = 1", "by simp"], ["proof (state)\nthis:\n  card X = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}. card X = 1\n\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>partitions_of A B F. card X = 1", "from this"], ["proof (chain)\npicking this:\n  \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}. card X = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}. card X = 1\n\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>partitions_of A B F. card X = 1", "unfolding partitions_of_def F_eq"], ["proof (prove)\nusing this:\n  \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}. card X = 1\n\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>univ\n                    (\\<lambda>f.\n                        (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n                    (range_permutation A B `` {f}).\n       card X = 1", "using equiv_range_permutation domain_partitions_respects_range_permutation \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}. card X = 1\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (range_permutation ?A ?B)\n  (\\<lambda>f. (\\<lambda>b. {x \\<in> ?A. f x = b}) ` ?B - {{}}) respects\n  range_permutation ?A ?B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>univ\n                    (\\<lambda>f.\n                        (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n                    (range_permutation A B `` {f}).\n       card X = 1", "by (subst univ_commute') assumption+"], ["proof (state)\nthis:\n  \\<forall>X\\<in>partitions_of A B F. card X = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unique_part_eq_singleton:\n  assumes \"partition_on A P\"\n  assumes \"\\<forall>X\\<in>P. card X = 1\"\n  assumes \"x \\<in> A\"\n  shows \"(THE X. x \\<in> X \\<and> X \\<in> P) = {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = {x}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = {x}", "have \"(THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P", "using \\<open>partition_on A P\\<close> \\<open>x \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  partition_on A P\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P", "by (simp add: partition_on_the_part_mem)"], ["proof (state)\nthis:\n  (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = {x}", "from this"], ["proof (chain)\npicking this:\n  (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P", "have \"card (THE X. x \\<in> X \\<and> X \\<in> P) = 1\""], ["proof (prove)\nusing this:\n  (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P\n\ngoal (1 subgoal):\n 1. card (THE X. x \\<in> X \\<and> X \\<in> P) = 1", "using \\<open>\\<forall>X\\<in>P. card X = 1\\<close>"], ["proof (prove)\nusing this:\n  (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P\n  \\<forall>X\\<in>P. card X = 1\n\ngoal (1 subgoal):\n 1. card (THE X. x \\<in> X \\<and> X \\<in> P) = 1", "by auto"], ["proof (state)\nthis:\n  card (THE X. x \\<in> X \\<and> X \\<in> P) = 1\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = {x}", "moreover"], ["proof (state)\nthis:\n  card (THE X. x \\<in> X \\<and> X \\<in> P) = 1\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = {x}", "have \"x \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)", "using \\<open>partition_on A P\\<close> \\<open>x \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  partition_on A P\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)", "by (simp add: partition_on_in_the_unique_part)"], ["proof (state)\nthis:\n  x \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = {x}", "ultimately"], ["proof (chain)\npicking this:\n  card (THE X. x \\<in> X \\<and> X \\<in> P) = 1\n  x \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)", "show ?thesis"], ["proof (prove)\nusing this:\n  card (THE X. x \\<in> X \\<and> X \\<in> P) = 1\n  x \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = {x}", "by (metis card_1_singletonE singleton_iff)"], ["proof (state)\nthis:\n  (THE X. x \\<in> X \\<and> X \\<in> P) = {x}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma functions_of_is_inj_on:\n  assumes \"finite A\" \"finite B\" \"partition_on A P\" \"card P \\<le> card B\"\n  assumes \"\\<forall>X\\<in>P. card X = 1\"\n  shows \"univ (\\<lambda>f. inj_on f A) (functions_of P A B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. inj_on f A) (functions_of P A B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. inj_on f A) (functions_of P A B)", "have \"functions_of P A B \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of P A B\n    \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B", "using functions_of \\<open>finite A\\<close> \\<open>finite B\\<close> \\<open>partition_on A P\\<close> \\<open>card P \\<le> card B\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; finite ?B; partition_on ?A ?P;\n   card ?P \\<le> card ?B\\<rbrakk>\n  \\<Longrightarrow> functions_of ?P ?A ?B\n                    \\<in> (?A \\<rightarrow>\\<^sub>E ?B) //\n                          range_permutation ?A ?B\n  finite A\n  finite B\n  partition_on A P\n  card P \\<le> card B\n\ngoal (1 subgoal):\n 1. functions_of P A B\n    \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B", "by blast"], ["proof (state)\nthis:\n  functions_of P A B\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. inj_on f A) (functions_of P A B)", "from this"], ["proof (chain)\npicking this:\n  functions_of P A B\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B", "obtain f where eq_f: \"functions_of P A B = range_permutation A B `` {f}\" and \"f \\<in> A \\<rightarrow>\\<^sub>E B\""], ["proof (prove)\nusing this:\n  functions_of P A B\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>functions_of P A B = range_permutation A B `` {f};\n         f \\<in> A \\<rightarrow>\\<^sub>E B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using quotientE"], ["proof (prove)\nusing this:\n  functions_of P A B\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B\n  \\<lbrakk>?X \\<in> ?A // ?r;\n   \\<And>x.\n      \\<lbrakk>?X = ?r `` {x}; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>functions_of P A B = range_permutation A B `` {f};\n         f \\<in> A \\<rightarrow>\\<^sub>E B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  functions_of P A B = range_permutation A B `` {f}\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. inj_on f A) (functions_of P A B)", "from eq_f"], ["proof (chain)\npicking this:\n  functions_of P A B = range_permutation A B `` {f}", "have \"f \\<in> functions_of P A B\""], ["proof (prove)\nusing this:\n  functions_of P A B = range_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. f \\<in> functions_of P A B", "using \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close> equiv_range_permutation equiv_class_self"], ["proof (prove)\nusing this:\n  functions_of P A B = range_permutation A B `` {f}\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (range_permutation ?A ?B)\n  \\<lbrakk>equiv ?A ?r; ?a \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> ?r `` {?a}\n\ngoal (1 subgoal):\n 1. f \\<in> functions_of P A B", "by fastforce"], ["proof (state)\nthis:\n  f \\<in> functions_of P A B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. inj_on f A) (functions_of P A B)", "from this"], ["proof (chain)\npicking this:\n  f \\<in> functions_of P A B", "have eq: \"(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P\""], ["proof (prove)\nusing this:\n  f \\<in> functions_of P A B\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P", "unfolding functions_of_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B.\n           (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P}\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. inj_on f A) (functions_of P A B)", "have \"inj_on f A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on f A", "proof (rule inj_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; f x = f y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; f x = f y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume \"x \\<in> A\" \"y \\<in> A\" \"f x = f y\""], ["proof (state)\nthis:\n  x \\<in> A\n  y \\<in> A\n  f x = f y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; f x = f y\\<rbrakk>\n       \\<Longrightarrow> x = y", "from \\<open>x \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> A", "have \"x \\<in> {x' \\<in> A. f x' = f x}\""], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> {x' \\<in> A. f x' = f x}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {x' \\<in> A. f x' = f x}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; f x = f y\\<rbrakk>\n       \\<Longrightarrow> x = y", "moreover"], ["proof (state)\nthis:\n  x \\<in> {x' \\<in> A. f x' = f x}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; f x = f y\\<rbrakk>\n       \\<Longrightarrow> x = y", "from \\<open>y \\<in> A\\<close> \\<open>f x = f y\\<close>"], ["proof (chain)\npicking this:\n  y \\<in> A\n  f x = f y", "have \"y \\<in> {x' \\<in> A. f x' = f x}\""], ["proof (prove)\nusing this:\n  y \\<in> A\n  f x = f y\n\ngoal (1 subgoal):\n 1. y \\<in> {x' \\<in> A. f x' = f x}", "by auto"], ["proof (state)\nthis:\n  y \\<in> {x' \\<in> A. f x' = f x}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; f x = f y\\<rbrakk>\n       \\<Longrightarrow> x = y", "moreover"], ["proof (state)\nthis:\n  y \\<in> {x' \\<in> A. f x' = f x}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; f x = f y\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"card {x' \\<in> A. f x' = f x} = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {x' \\<in> A. f x' = f x} = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {x' \\<in> A. f x' = f x} = 1", "from \\<open>x \\<in> A\\<close> \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> A\n  f \\<in> A \\<rightarrow>\\<^sub>E B", "have \"f x \\<in> B\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. f x \\<in> B", "by auto"], ["proof (state)\nthis:\n  f x \\<in> B\n\ngoal (1 subgoal):\n 1. card {x' \\<in> A. f x' = f x} = 1", "from this \\<open>x \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  f x \\<in> B\n  x \\<in> A", "have \"{x' \\<in> A. f x' = f x} \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\""], ["proof (prove)\nusing this:\n  f x \\<in> B\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. {x' \\<in> A. f x' = f x}\n    \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}", "by auto"], ["proof (state)\nthis:\n  {x' \\<in> A. f x' = f x}\n  \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n\ngoal (1 subgoal):\n 1. card {x' \\<in> A. f x' = f x} = 1", "from this \\<open>\\<forall>X\\<in>P. card X = 1\\<close> eq"], ["proof (chain)\npicking this:\n  {x' \\<in> A. f x' = f x}\n  \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n  \\<forall>X\\<in>P. card X = 1\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P", "show ?thesis"], ["proof (prove)\nusing this:\n  {x' \\<in> A. f x' = f x}\n  \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}\n  \\<forall>X\\<in>P. card X = 1\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P\n\ngoal (1 subgoal):\n 1. card {x' \\<in> A. f x' = f x} = 1", "by auto"], ["proof (state)\nthis:\n  card {x' \\<in> A. f x' = f x} = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {x' \\<in> A. f x' = f x} = 1\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; f x = f y\\<rbrakk>\n       \\<Longrightarrow> x = y", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> {x' \\<in> A. f x' = f x}\n  y \\<in> {x' \\<in> A. f x' = f x}\n  card {x' \\<in> A. f x' = f x} = 1", "show \"x = y\""], ["proof (prove)\nusing this:\n  x \\<in> {x' \\<in> A. f x' = f x}\n  y \\<in> {x' \\<in> A. f x' = f x}\n  card {x' \\<in> A. f x' = f x} = 1\n\ngoal (1 subgoal):\n 1. x = y", "by (metis card_1_singletonE singletonD)"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on f A\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. inj_on f A) (functions_of P A B)", "from this"], ["proof (chain)\npicking this:\n  inj_on f A", "show ?thesis"], ["proof (prove)\nusing this:\n  inj_on f A\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. inj_on f A) (functions_of P A B)", "unfolding eq_f"], ["proof (prove)\nusing this:\n  inj_on f A\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. inj_on f A) (range_permutation A B `` {f})", "using equiv_range_permutation inj_on_respects_range_permutation \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  inj_on f A\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (range_permutation ?A ?B)\n  (\\<lambda>f. inj_on f ?A) respects range_permutation ?A ?B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. inj_on f A) (range_permutation A B `` {f})", "by (subst univ_commute') assumption+"], ["proof (state)\nthis:\n  univ (\\<lambda>f. inj_on f A) (functions_of P A B)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Bijections\\<close>"], ["", "lemma bij_betw_partitions_of:\n  assumes \"finite A\" \"finite B\"\n  shows \"bij_betw (partitions_of A B) ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // range_permutation A B) {P. partition_on A P \\<and> card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (partitions_of A B)\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      range_permutation A B)\n     {P. partition_on A P \\<and>\n         card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}", "proof (rule bij_betw_byWitness[where f'=\"\\<lambda>P. functions_of P A B\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                   range_permutation A B.\n       functions_of (partitions_of A B a) A B = a\n 2. \\<forall>a'\\<in>{P. partition_on A P \\<and>\n                        card P \\<le> card B \\<and>\n                        (\\<forall>X\\<in>P. card X = 1)}.\n       partitions_of A B (functions_of a' A B) = a'\n 3. partitions_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // range_permutation A B\n    \\<subseteq> {P. partition_on A P \\<and>\n                    card P \\<le> card B \\<and>\n                    (\\<forall>X\\<in>P. card X = 1)}\n 4. (\\<lambda>P. functions_of P A B) `\n    {P. partition_on A P \\<and>\n        card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                range_permutation A B", "have quotient_eq: \"{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // range_permutation A B = {F \\<in> ((A \\<rightarrow>\\<^sub>E B) // range_permutation A B). univ (\\<lambda>f. inj_on f A) F}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    range_permutation A B =\n    {F \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B.\n     univ (\\<lambda>f. inj_on f A) F}", "by (simp add: equiv_range_permutation inj_on_respects_range_permutation univ_preserves_predicate)"], ["proof (state)\nthis:\n  {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // range_permutation A B =\n  {F \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B.\n   univ (\\<lambda>f. inj_on f A) F}\n\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                   range_permutation A B.\n       functions_of (partitions_of A B a) A B = a\n 2. \\<forall>a'\\<in>{P. partition_on A P \\<and>\n                        card P \\<le> card B \\<and>\n                        (\\<forall>X\\<in>P. card X = 1)}.\n       partitions_of A B (functions_of a' A B) = a'\n 3. partitions_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // range_permutation A B\n    \\<subseteq> {P. partition_on A P \\<and>\n                    card P \\<le> card B \\<and>\n                    (\\<forall>X\\<in>P. card X = 1)}\n 4. (\\<lambda>P. functions_of P A B) `\n    {P. partition_on A P \\<and>\n        card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                range_permutation A B", "show \"\\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // range_permutation A B. functions_of (partitions_of A B F) A B = F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                   range_permutation A B.\n       functions_of (partitions_of A B F) A B = F", "using \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite B\n\ngoal (1 subgoal):\n 1. \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                   range_permutation A B.\n       functions_of (partitions_of A B F) A B = F", "by (simp add: quotient_eq functions_of_partitions_of)"], ["proof (state)\nthis:\n  \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                 range_permutation A B.\n     functions_of (partitions_of A B F) A B = F\n\ngoal (3 subgoals):\n 1. \\<forall>a'\\<in>{P. partition_on A P \\<and>\n                        card P \\<le> card B \\<and>\n                        (\\<forall>X\\<in>P. card X = 1)}.\n       partitions_of A B (functions_of a' A B) = a'\n 2. partitions_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // range_permutation A B\n    \\<subseteq> {P. partition_on A P \\<and>\n                    card P \\<le> card B \\<and>\n                    (\\<forall>X\\<in>P. card X = 1)}\n 3. (\\<lambda>P. functions_of P A B) `\n    {P. partition_on A P \\<and>\n        card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                range_permutation A B", "show \"\\<forall>P\\<in>{P. partition_on A P \\<and> card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}. partitions_of A B (functions_of P A B) = P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P\\<in>{P. partition_on A P \\<and>\n                       card P \\<le> card B \\<and>\n                       (\\<forall>X\\<in>P. card X = 1)}.\n       partitions_of A B (functions_of P A B) = P", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. \\<forall>P\\<in>{P. partition_on A P \\<and>\n                       card P \\<le> card B \\<and>\n                       (\\<forall>X\\<in>P. card X = 1)}.\n       partitions_of A B (functions_of P A B) = P", "by (simp add: partitions_of_functions_of)"], ["proof (state)\nthis:\n  \\<forall>P\\<in>{P. partition_on A P \\<and>\n                     card P \\<le> card B \\<and>\n                     (\\<forall>X\\<in>P. card X = 1)}.\n     partitions_of A B (functions_of P A B) = P\n\ngoal (2 subgoals):\n 1. partitions_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // range_permutation A B\n    \\<subseteq> {P. partition_on A P \\<and>\n                    card P \\<le> card B \\<and>\n                    (\\<forall>X\\<in>P. card X = 1)}\n 2. (\\<lambda>P. functions_of P A B) `\n    {P. partition_on A P \\<and>\n        card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                range_permutation A B", "show \"partitions_of A B ` ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // range_permutation A B) \\<subseteq> {P. partition_on A P \\<and> card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partitions_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // range_permutation A B\n    \\<subseteq> {P. partition_on A P \\<and>\n                    card P \\<le> card B \\<and>\n                    (\\<forall>X\\<in>P. card X = 1)}", "using \\<open>finite B\\<close> quotient_eq partitions_of inj_on_implies_partitions_of"], ["proof (prove)\nusing this:\n  finite B\n  {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // range_permutation A B =\n  {F \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B.\n   univ (\\<lambda>f. inj_on f A) F}\n  \\<lbrakk>finite ?B;\n   ?F \\<in> (?A \\<rightarrow>\\<^sub>E ?B) //\n            range_permutation ?A ?B\\<rbrakk>\n  \\<Longrightarrow> card (partitions_of ?A ?B ?F) \\<le> card ?B\n  \\<lbrakk>finite ?B;\n   ?F \\<in> (?A \\<rightarrow>\\<^sub>E ?B) //\n            range_permutation ?A ?B\\<rbrakk>\n  \\<Longrightarrow> partition_on ?A (partitions_of ?A ?B ?F)\n  \\<lbrakk>?F \\<in> (?A \\<rightarrow>\\<^sub>E ?B) //\n                    range_permutation ?A ?B;\n   univ (\\<lambda>f. inj_on f ?A) ?F\\<rbrakk>\n  \\<Longrightarrow> \\<forall>X\\<in>partitions_of ?A ?B ?F. card X = 1\n\ngoal (1 subgoal):\n 1. partitions_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // range_permutation A B\n    \\<subseteq> {P. partition_on A P \\<and>\n                    card P \\<le> card B \\<and>\n                    (\\<forall>X\\<in>P. card X = 1)}", "by fastforce"], ["proof (state)\nthis:\n  partitions_of A B `\n  {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // range_permutation A B\n  \\<subseteq> {P. partition_on A P \\<and>\n                  card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}\n\ngoal (1 subgoal):\n 1. (\\<lambda>P. functions_of P A B) `\n    {P. partition_on A P \\<and>\n        card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                range_permutation A B", "show \"(\\<lambda>P. functions_of P A B) ` {P. partition_on A P \\<and> card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)} \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // range_permutation A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>P. functions_of P A B) `\n    {P. partition_on A P \\<and>\n        card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                range_permutation A B", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. (\\<lambda>P. functions_of P A B) `\n    {P. partition_on A P \\<and>\n        card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                range_permutation A B", "by (auto simp add: quotient_eq intro: functions_of functions_of_is_inj_on)"], ["proof (state)\nthis:\n  (\\<lambda>P. functions_of P A B) `\n  {P. partition_on A P \\<and>\n      card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}\n  \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n              range_permutation A B\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Cardinality\\<close>"], ["", "lemma card_injective_functions_range_permutation:\n  assumes \"finite A\" \"finite B\"\n  shows \"card ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // range_permutation A B) = iverson (card A \\<le> card B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      range_permutation A B) =\n    iverson (card A \\<le> card B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      range_permutation A B) =\n    iverson (card A \\<le> card B)", "obtain enum where \"bij_betw enum {0..<card A} A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>enum.\n        bij_betw enum {0..<card A} A \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<open>finite A\\<close> ex_bij_betw_nat_finite"], ["proof (prove)\nusing this:\n  finite A\n  finite ?M \\<Longrightarrow> \\<exists>h. bij_betw h {0..<card ?M} ?M\n\ngoal (1 subgoal):\n 1. (\\<And>enum.\n        bij_betw enum {0..<card A} A \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      range_permutation A B) =\n    iverson (card A \\<le> card B)", "have \"bij_betw (partitions_of A B) ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // range_permutation A B) {P. partition_on A P \\<and> card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (partitions_of A B)\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      range_permutation A B)\n     {P. partition_on A P \\<and>\n         card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. bij_betw (partitions_of A B)\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      range_permutation A B)\n     {P. partition_on A P \\<and>\n         card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}", "by (rule bij_betw_partitions_of)"], ["proof (state)\nthis:\n  bij_betw (partitions_of A B)\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    range_permutation A B)\n   {P. partition_on A P \\<and>\n       card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      range_permutation A B) =\n    iverson (card A \\<le> card B)", "from this"], ["proof (chain)\npicking this:\n  bij_betw (partitions_of A B)\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    range_permutation A B)\n   {P. partition_on A P \\<and>\n       card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}", "have \"card ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // range_permutation A B) = card {P. partition_on A P \\<and> card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}\""], ["proof (prove)\nusing this:\n  bij_betw (partitions_of A B)\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    range_permutation A B)\n   {P. partition_on A P \\<and>\n       card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      range_permutation A B) =\n    card\n     {P. partition_on A P \\<and>\n         card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}", "by (rule bij_betw_same_card)"], ["proof (state)\nthis:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    range_permutation A B) =\n  card\n   {P. partition_on A P \\<and>\n       card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      range_permutation A B) =\n    iverson (card A \\<le> card B)", "also"], ["proof (state)\nthis:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    range_permutation A B) =\n  card\n   {P. partition_on A P \\<and>\n       card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      range_permutation A B) =\n    iverson (card A \\<le> card B)", "have \"card {P. partition_on A P \\<and> card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)} = iverson (card A \\<le> card B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {P. partition_on A P \\<and>\n         card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)} =\n    iverson (card A \\<le> card B)", "using \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. card\n     {P. partition_on A P \\<and>\n         card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)} =\n    iverson (card A \\<le> card B)", "by (rule card_partition_on_size1_eq_iverson)"], ["proof (state)\nthis:\n  card\n   {P. partition_on A P \\<and>\n       card P \\<le> card B \\<and> (\\<forall>X\\<in>P. card X = 1)} =\n  iverson (card A \\<le> card B)\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      range_permutation A B) =\n    iverson (card A \\<le> card B)", "finally"], ["proof (chain)\npicking this:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    range_permutation A B) =\n  iverson (card A \\<le> card B)", "show ?thesis"], ["proof (prove)\nusing this:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    range_permutation A B) =\n  iverson (card A \\<le> card B)\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      range_permutation A B) =\n    iverson (card A \\<le> card B)", "."], ["proof (state)\nthis:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    range_permutation A B) =\n  iverson (card A \\<le> card B)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}