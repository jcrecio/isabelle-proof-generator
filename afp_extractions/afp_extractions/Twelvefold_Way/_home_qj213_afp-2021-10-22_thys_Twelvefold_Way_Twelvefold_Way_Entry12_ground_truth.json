{"file_name": "/home/qj213/afp-2021-10-22/thys/Twelvefold_Way/Twelvefold_Way_Entry12.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Twelvefold_Way", "problem_names": ["lemma size_eq_card_implies_surj_on:\n  assumes \"finite A\" \"finite B\"\n  assumes \"size N = card B\"\n  assumes \"f \\<in> functions_of A B N\"\n  shows   \"f ` A = B\"", "lemma surj_on_implies_size_eq_card:\n  assumes \"finite A\" \"finite B\"\n  assumes \"F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\"\n  assumes \"univ (\\<lambda>f. f ` A = B) F\"\n  shows \"size (number_partition_of A B F) = card B\"", "lemma functions_of_is_surj_on:\n  assumes \"finite A\" \"finite B\"\n  assumes \"number_partition (card A) N\" \"size N = card B\"\n  shows \"univ (\\<lambda>f. f ` A = B) (functions_of A B N)\"", "lemma bij_betw_number_partition_of:\n   assumes \"finite A\" \"finite B\"\n  shows \"bij_betw (number_partition_of A B) ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_and_range_permutation A B) {N. number_partition (card A) N \\<and> size N = card B}\"", "lemma bij_betw_functions_of:\n   assumes \"finite A\" \"finite B\"\n  shows \"bij_betw (functions_of A B) {N. number_partition (card A) N \\<and> size N = card B} ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_and_range_permutation A B)\"", "lemma card_surjective_functions_domain_and_range_permutation:\n  assumes \"finite A\" \"finite B\"\n  shows \"card ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_and_range_permutation A B) = Partition (card A) (card B)\""], "translations": [["", "lemma size_eq_card_implies_surj_on:\n  assumes \"finite A\" \"finite B\"\n  assumes \"size N = card B\"\n  assumes \"f \\<in> functions_of A B N\"\n  shows   \"f ` A = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` A = B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f ` A = B", "from \\<open>f \\<in> functions_of A B N\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> Twelvefold_Way_Entry10.functions_of A B N", "have \"f \\<in> A \\<rightarrow>\\<^sub>E B\" and\n    \"N = image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\""], ["proof (prove)\nusing this:\n  f \\<in> Twelvefold_Way_Entry10.functions_of A B N\n\ngoal (1 subgoal):\n 1. f \\<in> A \\<rightarrow>\\<^sub>E B &&&\n    N =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "unfolding functions_of_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B.\n           image_mset card\n            (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n           N}\n\ngoal (1 subgoal):\n 1. f \\<in> A \\<rightarrow>\\<^sub>E B &&&\n    N =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "by auto"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  N =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. f ` A = B", "from this \\<open>size N = card B\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  N =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n  size N = card B", "have \"card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B\""], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  N =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n  size N = card B\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B", "by simp"], ["proof (state)\nthis:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B\n\ngoal (1 subgoal):\n 1. f ` A = B", "from this \\<open>finite B\\<close> \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (chain)\npicking this:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B\n  finite B\n  f \\<in> A \\<rightarrow>\\<^sub>E B", "show \"f ` A = B\""], ["proof (prove)\nusing this:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B\n  finite B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. f ` A = B", "using card_eq_implies_surjective_on"], ["proof (prove)\nusing this:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B\n  finite B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  \\<lbrakk>finite ?B; ?f \\<in> ?A \\<rightarrow>\\<^sub>E ?B;\n   card ((\\<lambda>b. {x \\<in> ?A. ?f x = b}) ` ?B - {{}}) =\n   card ?B\\<rbrakk>\n  \\<Longrightarrow> ?f ` ?A = ?B\n\ngoal (1 subgoal):\n 1. f ` A = B", "by blast"], ["proof (state)\nthis:\n  f ` A = B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma surj_on_implies_size_eq_card:\n  assumes \"finite A\" \"finite B\"\n  assumes \"F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\"\n  assumes \"univ (\\<lambda>f. f ` A = B) F\"\n  shows \"size (number_partition_of A B F) = card B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size (number_partition_of A B F) = card B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. size (number_partition_of A B F) = card B", "from \\<open>F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\\<close>"], ["proof (chain)\npicking this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B", "obtain f where \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n    and F_eq: \"F = domain_and_range_permutation A B `` {f}\""], ["proof (prove)\nusing this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E B;\n         F = domain_and_range_permutation A B `` {f}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using quotientE"], ["proof (prove)\nusing this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n  \\<lbrakk>?X \\<in> ?A // ?r;\n   \\<And>x.\n      \\<lbrakk>?X = ?r `` {x}; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E B;\n         F = domain_and_range_permutation A B `` {f}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  F = domain_and_range_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. size (number_partition_of A B F) = card B", "have \"number_partition_of A B F = univ (\\<lambda>f. image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. number_partition_of A B F =\n    univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     F", "unfolding number_partition_of_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     F =\n    univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     F", ".."], ["proof (state)\nthis:\n  number_partition_of A B F =\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   F\n\ngoal (1 subgoal):\n 1. size (number_partition_of A B F) = card B", "also"], ["proof (state)\nthis:\n  number_partition_of A B F =\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   F\n\ngoal (1 subgoal):\n 1. size (number_partition_of A B F) = card B", "have \"\\<dots> =  univ (\\<lambda>f. image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))) (domain_and_range_permutation A B `` {f})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     F =\n    univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f})", "unfolding F_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f}) =\n    univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f})", ".."], ["proof (state)\nthis:\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   F =\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   (domain_and_range_permutation A B `` {f})\n\ngoal (1 subgoal):\n 1. size (number_partition_of A B F) = card B", "also"], ["proof (state)\nthis:\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   F =\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   (domain_and_range_permutation A B `` {f})\n\ngoal (1 subgoal):\n 1. size (number_partition_of A B F) = card B", "have \"\\<dots> = image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f}) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "using \\<open>finite B\\<close> equiv_domain_and_range_permutation multiset_of_partition_cards_respects_domain_and_range_permutation \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  finite B\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (domain_and_range_permutation ?A ?B)\n  finite ?B \\<Longrightarrow>\n  (\\<lambda>f.\n      image_mset card\n       (mset_set\n         ((\\<lambda>b. {x \\<in> ?A. f x = b}) ` ?B - {{}}))) respects\n  domain_and_range_permutation ?A ?B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f}) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "by (subst univ_commute') auto"], ["proof (state)\nthis:\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   (domain_and_range_permutation A B `` {f}) =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. size (number_partition_of A B F) = card B", "finally"], ["proof (chain)\npicking this:\n  number_partition_of A B F =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "have eq: \"number_partition_of A B F = image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\""], ["proof (prove)\nusing this:\n  number_partition_of A B F =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. number_partition_of A B F =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "."], ["proof (state)\nthis:\n  number_partition_of A B F =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. size (number_partition_of A B F) = card B", "from iffD1[OF univ_commute', OF equiv_domain_and_range_permutation, OF surjective_respects_domain_and_range_permutation, OF \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>]\n    assms(4)"], ["proof (chain)\npicking this:\n  univ (\\<lambda>f. f ` A = B)\n   (domain_and_range_permutation A B `` {f}) \\<Longrightarrow>\n  f ` A = B\n  univ (\\<lambda>f. f ` A = B) F", "have \"f ` A = B\""], ["proof (prove)\nusing this:\n  univ (\\<lambda>f. f ` A = B)\n   (domain_and_range_permutation A B `` {f}) \\<Longrightarrow>\n  f ` A = B\n  univ (\\<lambda>f. f ` A = B) F\n\ngoal (1 subgoal):\n 1. f ` A = B", "by (simp add: F_eq)"], ["proof (state)\nthis:\n  f ` A = B\n\ngoal (1 subgoal):\n 1. size (number_partition_of A B F) = card B", "have \"size (number_partition_of A B F) = size (image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size (number_partition_of A B F) =\n    size\n     (image_mset card\n       (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))", "unfolding eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. size\n     (image_mset card\n       (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))) =\n    size\n     (image_mset card\n       (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))", ".."], ["proof (state)\nthis:\n  size (number_partition_of A B F) =\n  size\n   (image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n\ngoal (1 subgoal):\n 1. size (number_partition_of A B F) = card B", "also"], ["proof (state)\nthis:\n  size (number_partition_of A B F) =\n  size\n   (image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n\ngoal (1 subgoal):\n 1. size (number_partition_of A B F) = card B", "have \"\\<dots> = card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size\n     (image_mset card\n       (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))) =\n    card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})", "by simp"], ["proof (state)\nthis:\n  size\n   (image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))) =\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n\ngoal (1 subgoal):\n 1. size (number_partition_of A B F) = card B", "also"], ["proof (state)\nthis:\n  size\n   (image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))) =\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n\ngoal (1 subgoal):\n 1. size (number_partition_of A B F) = card B", "from \\<open>f ` A = B\\<close>"], ["proof (chain)\npicking this:\n  f ` A = B", "have \"\\<dots> = card B\""], ["proof (prove)\nusing this:\n  f ` A = B\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B", "using surjective_on_implies_card_eq"], ["proof (prove)\nusing this:\n  f ` A = B\n  ?f ` ?A = ?B \\<Longrightarrow>\n  card ((\\<lambda>b. {x \\<in> ?A. ?f x = b}) ` ?B - {{}}) = card ?B\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B", "by auto"], ["proof (state)\nthis:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B\n\ngoal (1 subgoal):\n 1. size (number_partition_of A B F) = card B", "finally"], ["proof (chain)\npicking this:\n  size (number_partition_of A B F) = card B", "show ?thesis"], ["proof (prove)\nusing this:\n  size (number_partition_of A B F) = card B\n\ngoal (1 subgoal):\n 1. size (number_partition_of A B F) = card B", "."], ["proof (state)\nthis:\n  size (number_partition_of A B F) = card B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma functions_of_is_surj_on:\n  assumes \"finite A\" \"finite B\"\n  assumes \"number_partition (card A) N\" \"size N = card B\"\n  shows \"univ (\\<lambda>f. f ` A = B) (functions_of A B N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (Twelvefold_Way_Entry10.functions_of A B N)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (Twelvefold_Way_Entry10.functions_of A B N)", "have \"functions_of A B N \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Twelvefold_Way_Entry10.functions_of A B N\n    \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B", "using functions_of \\<open>finite A\\<close> \\<open>finite B\\<close> \\<open>number_partition (card A) N \\<close> \\<open>size N = card B\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; finite ?B; number_partition (card ?A) ?N;\n   size ?N \\<le> card ?B\\<rbrakk>\n  \\<Longrightarrow> Twelvefold_Way_Entry10.functions_of ?A ?B ?N\n                    \\<in> (?A \\<rightarrow>\\<^sub>E ?B) //\n                          domain_and_range_permutation ?A ?B\n  finite A\n  finite B\n  number_partition (card A) N\n  size N = card B\n\ngoal (1 subgoal):\n 1. Twelvefold_Way_Entry10.functions_of A B N\n    \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B", "by fastforce"], ["proof (state)\nthis:\n  Twelvefold_Way_Entry10.functions_of A B N\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (Twelvefold_Way_Entry10.functions_of A B N)", "from this"], ["proof (chain)\npicking this:\n  Twelvefold_Way_Entry10.functions_of A B N\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B", "obtain f where eq_f: \"functions_of A B N = domain_and_range_permutation A B `` {f}\" and \"f \\<in> A \\<rightarrow>\\<^sub>E B\""], ["proof (prove)\nusing this:\n  Twelvefold_Way_Entry10.functions_of A B N\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>Twelvefold_Way_Entry10.functions_of A B N =\n                 domain_and_range_permutation A B `` {f};\n         f \\<in> A \\<rightarrow>\\<^sub>E B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using quotientE"], ["proof (prove)\nusing this:\n  Twelvefold_Way_Entry10.functions_of A B N\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n  \\<lbrakk>?X \\<in> ?A // ?r;\n   \\<And>x.\n      \\<lbrakk>?X = ?r `` {x}; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>Twelvefold_Way_Entry10.functions_of A B N =\n                 domain_and_range_permutation A B `` {f};\n         f \\<in> A \\<rightarrow>\\<^sub>E B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Twelvefold_Way_Entry10.functions_of A B N =\n  domain_and_range_permutation A B `` {f}\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (Twelvefold_Way_Entry10.functions_of A B N)", "from eq_f"], ["proof (chain)\npicking this:\n  Twelvefold_Way_Entry10.functions_of A B N =\n  domain_and_range_permutation A B `` {f}", "have \"f \\<in> functions_of A B N\""], ["proof (prove)\nusing this:\n  Twelvefold_Way_Entry10.functions_of A B N =\n  domain_and_range_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. f \\<in> Twelvefold_Way_Entry10.functions_of A B N", "using \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close> equiv_domain_and_range_permutation equiv_class_self"], ["proof (prove)\nusing this:\n  Twelvefold_Way_Entry10.functions_of A B N =\n  domain_and_range_permutation A B `` {f}\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (domain_and_range_permutation ?A ?B)\n  \\<lbrakk>equiv ?A ?r; ?a \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> ?r `` {?a}\n\ngoal (1 subgoal):\n 1. f \\<in> Twelvefold_Way_Entry10.functions_of A B N", "by fastforce"], ["proof (state)\nthis:\n  f \\<in> Twelvefold_Way_Entry10.functions_of A B N\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (Twelvefold_Way_Entry10.functions_of A B N)", "have \"f ` A = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` A = B", "using \\<open>f \\<in> functions_of A B N\\<close> assms size_eq_card_implies_surj_on"], ["proof (prove)\nusing this:\n  f \\<in> Twelvefold_Way_Entry10.functions_of A B N\n  finite A\n  finite B\n  number_partition (card A) N\n  size N = card B\n  \\<lbrakk>finite ?A; finite ?B; size ?N = card ?B;\n   ?f \\<in> Twelvefold_Way_Entry10.functions_of ?A ?B ?N\\<rbrakk>\n  \\<Longrightarrow> ?f ` ?A = ?B\n\ngoal (1 subgoal):\n 1. f ` A = B", "by blast"], ["proof (state)\nthis:\n  f ` A = B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (Twelvefold_Way_Entry10.functions_of A B N)", "from this"], ["proof (chain)\npicking this:\n  f ` A = B", "show ?thesis"], ["proof (prove)\nusing this:\n  f ` A = B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (Twelvefold_Way_Entry10.functions_of A B N)", "unfolding eq_f"], ["proof (prove)\nusing this:\n  f ` A = B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (domain_and_range_permutation A B `` {f})", "using equiv_domain_and_range_permutation surjective_respects_domain_and_range_permutation \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  f ` A = B\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (domain_and_range_permutation ?A ?B)\n  (\\<lambda>f. f ` ?A = ?B) respects domain_and_range_permutation ?A ?B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (domain_and_range_permutation A B `` {f})", "by (subst univ_commute') assumption+"], ["proof (state)\nthis:\n  univ (\\<lambda>f. f ` A = B) (Twelvefold_Way_Entry10.functions_of A B N)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Bijections\\<close>"], ["", "lemma bij_betw_number_partition_of:\n   assumes \"finite A\" \"finite B\"\n  shows \"bij_betw (number_partition_of A B) ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_and_range_permutation A B) {N. number_partition (card A) N \\<and> size N = card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (number_partition_of A B)\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_and_range_permutation A B)\n     {N. number_partition (card A) N \\<and> size N = card B}", "proof (rule bij_betw_byWitness[where f'=\"functions_of A B\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                   domain_and_range_permutation A B.\n       Twelvefold_Way_Entry10.functions_of A B (number_partition_of A B a) =\n       a\n 2. \\<forall>a'\\<in>{N. number_partition (card A) N \\<and> size N = card B}.\n       number_partition_of A B\n        (Twelvefold_Way_Entry10.functions_of A B a') =\n       a'\n 3. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. number_partition (card A) N \\<and> size N = card B}\n 4. Twelvefold_Way_Entry10.functions_of A B `\n    {N. number_partition (card A) N \\<and> size N = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_and_range_permutation A B", "have quotient_eq: \"{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_and_range_permutation A B = {F \\<in> ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B). univ (\\<lambda>f. f ` A = B) F}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B =\n    {F \\<in> (A \\<rightarrow>\\<^sub>E B) //\n             domain_and_range_permutation A B.\n     univ (\\<lambda>f. f ` A = B) F}", "using equiv_domain_and_range_permutation[of A B] surjective_respects_domain_and_range_permutation[of A B]"], ["proof (prove)\nusing this:\n  equiv (A \\<rightarrow>\\<^sub>E B) (domain_and_range_permutation A B)\n  (\\<lambda>f. f ` A = B) respects domain_and_range_permutation A B\n\ngoal (1 subgoal):\n 1. {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B =\n    {F \\<in> (A \\<rightarrow>\\<^sub>E B) //\n             domain_and_range_permutation A B.\n     univ (\\<lambda>f. f ` A = B) F}", "by (simp only: univ_preserves_predicate)"], ["proof (state)\nthis:\n  {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n  domain_and_range_permutation A B =\n  {F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B.\n   univ (\\<lambda>f. f ` A = B) F}\n\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                   domain_and_range_permutation A B.\n       Twelvefold_Way_Entry10.functions_of A B (number_partition_of A B a) =\n       a\n 2. \\<forall>a'\\<in>{N. number_partition (card A) N \\<and> size N = card B}.\n       number_partition_of A B\n        (Twelvefold_Way_Entry10.functions_of A B a') =\n       a'\n 3. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. number_partition (card A) N \\<and> size N = card B}\n 4. Twelvefold_Way_Entry10.functions_of A B `\n    {N. number_partition (card A) N \\<and> size N = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_and_range_permutation A B", "show \"\\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_and_range_permutation A B.\n       functions_of A B (number_partition_of A B F) = F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                   domain_and_range_permutation A B.\n       Twelvefold_Way_Entry10.functions_of A B (number_partition_of A B F) =\n       F", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                   domain_and_range_permutation A B.\n       Twelvefold_Way_Entry10.functions_of A B (number_partition_of A B F) =\n       F", "by (auto simp only: quotient_eq functions_of_number_partition_of)"], ["proof (state)\nthis:\n  \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                 domain_and_range_permutation A B.\n     Twelvefold_Way_Entry10.functions_of A B (number_partition_of A B F) = F\n\ngoal (3 subgoals):\n 1. \\<forall>a'\\<in>{N. number_partition (card A) N \\<and> size N = card B}.\n       number_partition_of A B\n        (Twelvefold_Way_Entry10.functions_of A B a') =\n       a'\n 2. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. number_partition (card A) N \\<and> size N = card B}\n 3. Twelvefold_Way_Entry10.functions_of A B `\n    {N. number_partition (card A) N \\<and> size N = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_and_range_permutation A B", "show \"\\<forall>N\\<in>{N. number_partition (card A) N  \\<and> size N = card B}. number_partition_of A B (functions_of A B N) = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>N\\<in>{N. number_partition (card A) N \\<and> size N = card B}.\n       number_partition_of A B (Twelvefold_Way_Entry10.functions_of A B N) =\n       N", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. \\<forall>N\\<in>{N. number_partition (card A) N \\<and> size N = card B}.\n       number_partition_of A B (Twelvefold_Way_Entry10.functions_of A B N) =\n       N", "by (simp add: number_partition_of_functions_of)"], ["proof (state)\nthis:\n  \\<forall>N\\<in>{N. number_partition (card A) N \\<and> size N = card B}.\n     number_partition_of A B (Twelvefold_Way_Entry10.functions_of A B N) = N\n\ngoal (2 subgoals):\n 1. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. number_partition (card A) N \\<and> size N = card B}\n 2. Twelvefold_Way_Entry10.functions_of A B `\n    {N. number_partition (card A) N \\<and> size N = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_and_range_permutation A B", "show \"number_partition_of A B ` ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_and_range_permutation A B)\n    \\<subseteq> {N. number_partition (card A) N  \\<and> size N = card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. number_partition (card A) N \\<and> size N = card B}", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. number_partition (card A) N \\<and> size N = card B}", "by (auto simp add: quotient_eq number_partition_of surj_on_implies_size_eq_card)"], ["proof (state)\nthis:\n  number_partition_of A B `\n  {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n  domain_and_range_permutation A B\n  \\<subseteq> {N. number_partition (card A) N \\<and> size N = card B}\n\ngoal (1 subgoal):\n 1. Twelvefold_Way_Entry10.functions_of A B `\n    {N. number_partition (card A) N \\<and> size N = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_and_range_permutation A B", "show \"functions_of A B ` {N. number_partition (card A) N \\<and> size N = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_and_range_permutation A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Twelvefold_Way_Entry10.functions_of A B `\n    {N. number_partition (card A) N \\<and> size N = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_and_range_permutation A B", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. Twelvefold_Way_Entry10.functions_of A B `\n    {N. number_partition (card A) N \\<and> size N = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_and_range_permutation A B", "by (auto simp add: quotient_eq intro: functions_of functions_of_is_surj_on)"], ["proof (state)\nthis:\n  Twelvefold_Way_Entry10.functions_of A B `\n  {N. number_partition (card A) N \\<and> size N = card B}\n  \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n              domain_and_range_permutation A B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bij_betw_functions_of:\n   assumes \"finite A\" \"finite B\"\n  shows \"bij_betw (functions_of A B) {N. number_partition (card A) N \\<and> size N = card B} ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_and_range_permutation A B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (Twelvefold_Way_Entry10.functions_of A B)\n     {N. number_partition (card A) N \\<and> size N = card B}\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_and_range_permutation A B)", "proof (rule bij_betw_byWitness[where f'=\"number_partition_of A B\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{N. number_partition (card A) N \\<and> size N = card B}.\n       number_partition_of A B (Twelvefold_Way_Entry10.functions_of A B a) =\n       a\n 2. \\<forall>a'\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                    domain_and_range_permutation A B.\n       Twelvefold_Way_Entry10.functions_of A B\n        (number_partition_of A B a') =\n       a'\n 3. Twelvefold_Way_Entry10.functions_of A B `\n    {N. number_partition (card A) N \\<and> size N = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_and_range_permutation A B\n 4. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. number_partition (card A) N \\<and> size N = card B}", "have quotient_eq: \"{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_and_range_permutation A B = {F \\<in> ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B). univ (\\<lambda>f. f ` A = B) F}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B =\n    {F \\<in> (A \\<rightarrow>\\<^sub>E B) //\n             domain_and_range_permutation A B.\n     univ (\\<lambda>f. f ` A = B) F}", "using equiv_domain_and_range_permutation[of A B] surjective_respects_domain_and_range_permutation[of A B]"], ["proof (prove)\nusing this:\n  equiv (A \\<rightarrow>\\<^sub>E B) (domain_and_range_permutation A B)\n  (\\<lambda>f. f ` A = B) respects domain_and_range_permutation A B\n\ngoal (1 subgoal):\n 1. {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B =\n    {F \\<in> (A \\<rightarrow>\\<^sub>E B) //\n             domain_and_range_permutation A B.\n     univ (\\<lambda>f. f ` A = B) F}", "by (simp only: univ_preserves_predicate)"], ["proof (state)\nthis:\n  {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n  domain_and_range_permutation A B =\n  {F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B.\n   univ (\\<lambda>f. f ` A = B) F}\n\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{N. number_partition (card A) N \\<and> size N = card B}.\n       number_partition_of A B (Twelvefold_Way_Entry10.functions_of A B a) =\n       a\n 2. \\<forall>a'\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                    domain_and_range_permutation A B.\n       Twelvefold_Way_Entry10.functions_of A B\n        (number_partition_of A B a') =\n       a'\n 3. Twelvefold_Way_Entry10.functions_of A B `\n    {N. number_partition (card A) N \\<and> size N = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_and_range_permutation A B\n 4. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. number_partition (card A) N \\<and> size N = card B}", "show \"\\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_and_range_permutation A B.\n       functions_of A B (number_partition_of A B F) = F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                   domain_and_range_permutation A B.\n       Twelvefold_Way_Entry10.functions_of A B (number_partition_of A B F) =\n       F", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                   domain_and_range_permutation A B.\n       Twelvefold_Way_Entry10.functions_of A B (number_partition_of A B F) =\n       F", "by (auto simp only: quotient_eq functions_of_number_partition_of)"], ["proof (state)\nthis:\n  \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                 domain_and_range_permutation A B.\n     Twelvefold_Way_Entry10.functions_of A B (number_partition_of A B F) = F\n\ngoal (3 subgoals):\n 1. \\<forall>a\\<in>{N. number_partition (card A) N \\<and> size N = card B}.\n       number_partition_of A B (Twelvefold_Way_Entry10.functions_of A B a) =\n       a\n 2. Twelvefold_Way_Entry10.functions_of A B `\n    {N. number_partition (card A) N \\<and> size N = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_and_range_permutation A B\n 3. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. number_partition (card A) N \\<and> size N = card B}", "show \"\\<forall>N\\<in>{N. number_partition (card A) N  \\<and> size N = card B}. number_partition_of A B (functions_of A B N) = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>N\\<in>{N. number_partition (card A) N \\<and> size N = card B}.\n       number_partition_of A B (Twelvefold_Way_Entry10.functions_of A B N) =\n       N", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. \\<forall>N\\<in>{N. number_partition (card A) N \\<and> size N = card B}.\n       number_partition_of A B (Twelvefold_Way_Entry10.functions_of A B N) =\n       N", "by (simp add: number_partition_of_functions_of)"], ["proof (state)\nthis:\n  \\<forall>N\\<in>{N. number_partition (card A) N \\<and> size N = card B}.\n     number_partition_of A B (Twelvefold_Way_Entry10.functions_of A B N) = N\n\ngoal (2 subgoals):\n 1. Twelvefold_Way_Entry10.functions_of A B `\n    {N. number_partition (card A) N \\<and> size N = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_and_range_permutation A B\n 2. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. number_partition (card A) N \\<and> size N = card B}", "show \"number_partition_of A B ` ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_and_range_permutation A B)\n    \\<subseteq> {N. number_partition (card A) N  \\<and> size N = card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. number_partition (card A) N \\<and> size N = card B}", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. number_partition (card A) N \\<and> size N = card B}", "by (auto simp add: quotient_eq number_partition_of surj_on_implies_size_eq_card)"], ["proof (state)\nthis:\n  number_partition_of A B `\n  {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n  domain_and_range_permutation A B\n  \\<subseteq> {N. number_partition (card A) N \\<and> size N = card B}\n\ngoal (1 subgoal):\n 1. Twelvefold_Way_Entry10.functions_of A B `\n    {N. number_partition (card A) N \\<and> size N = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_and_range_permutation A B", "show \"functions_of A B ` {N. number_partition (card A) N \\<and> size N = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_and_range_permutation A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Twelvefold_Way_Entry10.functions_of A B `\n    {N. number_partition (card A) N \\<and> size N = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_and_range_permutation A B", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. Twelvefold_Way_Entry10.functions_of A B `\n    {N. number_partition (card A) N \\<and> size N = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_and_range_permutation A B", "by (auto simp add: quotient_eq intro: functions_of functions_of_is_surj_on)"], ["proof (state)\nthis:\n  Twelvefold_Way_Entry10.functions_of A B `\n  {N. number_partition (card A) N \\<and> size N = card B}\n  \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n              domain_and_range_permutation A B\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Cardinality\\<close>"], ["", "lemma card_surjective_functions_domain_and_range_permutation:\n  assumes \"finite A\" \"finite B\"\n  shows \"card ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_and_range_permutation A B) = Partition (card A) (card B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_and_range_permutation A B) =\n    Partition (card A) (card B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_and_range_permutation A B) =\n    Partition (card A) (card B)", "have \"bij_betw (number_partition_of A B) ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_and_range_permutation A B) {N. number_partition (card A) N \\<and> size N = card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (number_partition_of A B)\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_and_range_permutation A B)\n     {N. number_partition (card A) N \\<and> size N = card B}", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. bij_betw (number_partition_of A B)\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_and_range_permutation A B)\n     {N. number_partition (card A) N \\<and> size N = card B}", "by (rule bij_betw_number_partition_of)"], ["proof (state)\nthis:\n  bij_betw (number_partition_of A B)\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B)\n   {N. number_partition (card A) N \\<and> size N = card B}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_and_range_permutation A B) =\n    Partition (card A) (card B)", "from this"], ["proof (chain)\npicking this:\n  bij_betw (number_partition_of A B)\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B)\n   {N. number_partition (card A) N \\<and> size N = card B}", "have \"card ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_and_range_permutation A B) = card {N. number_partition (card A) N \\<and> size N = card B}\""], ["proof (prove)\nusing this:\n  bij_betw (number_partition_of A B)\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B)\n   {N. number_partition (card A) N \\<and> size N = card B}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_and_range_permutation A B) =\n    card {N. number_partition (card A) N \\<and> size N = card B}", "by (rule bij_betw_same_card)"], ["proof (state)\nthis:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B) =\n  card {N. number_partition (card A) N \\<and> size N = card B}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_and_range_permutation A B) =\n    Partition (card A) (card B)", "also"], ["proof (state)\nthis:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B) =\n  card {N. number_partition (card A) N \\<and> size N = card B}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_and_range_permutation A B) =\n    Partition (card A) (card B)", "have \"card {N. number_partition (card A) N \\<and> size N = card B} = Partition (card A) (card B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {N. number_partition (card A) N \\<and> size N = card B} =\n    Partition (card A) (card B)", "by (rule card_partitions_with_k_parts)"], ["proof (state)\nthis:\n  card {N. number_partition (card A) N \\<and> size N = card B} =\n  Partition (card A) (card B)\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_and_range_permutation A B) =\n    Partition (card A) (card B)", "finally"], ["proof (chain)\npicking this:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B) =\n  Partition (card A) (card B)", "show ?thesis"], ["proof (prove)\nusing this:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B) =\n  Partition (card A) (card B)\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_and_range_permutation A B) =\n    Partition (card A) (card B)", "."], ["proof (state)\nthis:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_and_range_permutation A B) =\n  Partition (card A) (card B)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}