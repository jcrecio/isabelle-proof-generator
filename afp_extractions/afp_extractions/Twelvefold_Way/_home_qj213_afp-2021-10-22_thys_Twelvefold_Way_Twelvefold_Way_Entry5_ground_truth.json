{"file_name": "/home/qj213/afp-2021-10-22/thys/Twelvefold_Way/Twelvefold_Way_Entry5.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Twelvefold_Way", "problem_names": ["lemma functions_of_eq:\n  assumes \"finite A\"\n  assumes \"f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\"\n  shows \"functions_of A (f ` A) = domain_permutation A B `` {f}\"", "lemma subset_of:\n  assumes \"F \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B\"\n  shows \"subset_of A F \\<subseteq> B\" and \"card (subset_of A F) = card A\"", "lemma functions_of:\n  assumes \"finite A\" \"finite B\" \"X \\<subseteq> B\" \"card X = card A\"\n  shows \"functions_of A X \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B\"", "lemma subset_of_functions_of:\n  assumes \"finite A\" \"finite X\" \"card A = card X\"\n  shows \"subset_of A (functions_of A X) = X\"", "lemma functions_of_subset_of:\n  assumes \"finite A\"\n  assumes \"F \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B\"\n  shows \"functions_of A (subset_of A F) = F\"", "lemma bij_betw_subset_of:\n  assumes \"finite A\" \"finite B\"\n  shows \"bij_betw (subset_of A) ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B) {X. X \\<subseteq> B \\<and> card X = card A}\"", "lemma bij_betw_functions_of:\n  assumes \"finite A\" \"finite B\"\n  shows \"bij_betw (functions_of A) {X. X \\<subseteq> B \\<and> card X = card A} ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B)\"", "lemma bij_betw_mset_set:\n  shows \"bij_betw mset_set {A. finite A} {M. \\<forall>x. count M x \\<le> 1}\"", "lemma bij_betw_mset_set_card:\n  assumes \"finite A\"\n  shows \"bij_betw mset_set {X. X \\<subseteq> A \\<and> card X = k} {M. M \\<subseteq># mset_set A \\<and> size M = k}\"", "lemma bij_betw_mset_set_card':\n  assumes \"finite A\"\n  shows \"bij_betw mset_set {X. X \\<subseteq> A \\<and> card X = k} {M. set_mset M \\<subseteq> A \\<and> size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}\"", "lemma card_injective_functions_domain_permutation:\n  assumes \"finite A\" \"finite B\"\n  shows \"card ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B) = card B choose card A\"", "lemma card_multiset_only_sets:\n  assumes \"finite A\"\n  shows \"card {M. M \\<subseteq># mset_set A \\<and> size M = k} = card A choose k\"", "lemma card_multiset_only_sets':\n  assumes \"finite A\"\n  shows \"card {M. set_mset M \\<subseteq> A \\<and> size M = k \\<and> (\\<forall>x. count M x \\<le> 1)} = card A choose k\""], "translations": [["", "lemma functions_of_eq:\n  assumes \"finite A\"\n  assumes \"f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\"\n  shows \"functions_of A (f ` A) = domain_permutation A B `` {f}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of A (f ` A) = domain_permutation A B `` {f}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. functions_of A (f ` A) \\<subseteq> domain_permutation A B `` {f}\n 2. domain_permutation A B `` {f} \\<subseteq> functions_of A (f ` A)", "have bij: \"bij_betw f A (f ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw f A (f ` A)", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n\ngoal (1 subgoal):\n 1. bij_betw f A (f ` A)", "by (simp add: bij_betw_imageI)"], ["proof (state)\nthis:\n  bij_betw f A (f ` A)\n\ngoal (2 subgoals):\n 1. functions_of A (f ` A) \\<subseteq> domain_permutation A B `` {f}\n 2. domain_permutation A B `` {f} \\<subseteq> functions_of A (f ` A)", "show \"functions_of A (f ` A) \\<subseteq> domain_permutation A B `` {f}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of A (f ` A) \\<subseteq> domain_permutation A B `` {f}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A (f ` A) \\<Longrightarrow>\n       x \\<in> domain_permutation A B `` {f}", "fix f'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A (f ` A) \\<Longrightarrow>\n       x \\<in> domain_permutation A B `` {f}", "assume \"f' \\<in> functions_of A (f ` A)\""], ["proof (state)\nthis:\n  f' \\<in> functions_of A (f ` A)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A (f ` A) \\<Longrightarrow>\n       x \\<in> domain_permutation A B `` {f}", "from this"], ["proof (chain)\npicking this:\n  f' \\<in> functions_of A (f ` A)", "have \"f' \\<in> A \\<rightarrow>\\<^sub>E f ` A\" and \"f' ` A = f ` A\""], ["proof (prove)\nusing this:\n  f' \\<in> functions_of A (f ` A)\n\ngoal (1 subgoal):\n 1. f' \\<in> A \\<rightarrow>\\<^sub>E f ` A &&& f' ` A = f ` A", "unfolding functions_of_def"], ["proof (prove)\nusing this:\n  f' \\<in> {fa \\<in> A \\<rightarrow>\\<^sub>E f ` A. fa ` A = f ` A}\n\ngoal (1 subgoal):\n 1. f' \\<in> A \\<rightarrow>\\<^sub>E f ` A &&& f' ` A = f ` A", "by auto"], ["proof (state)\nthis:\n  f' \\<in> A \\<rightarrow>\\<^sub>E f ` A\n  f' ` A = f ` A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A (f ` A) \\<Longrightarrow>\n       x \\<in> domain_permutation A B `` {f}", "from this assms"], ["proof (chain)\npicking this:\n  f' \\<in> A \\<rightarrow>\\<^sub>E f ` A\n  f' ` A = f ` A\n  finite A\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "have \"f' \\<in> A \\<rightarrow>\\<^sub>E B\" and \"inj_on f A\""], ["proof (prove)\nusing this:\n  f' \\<in> A \\<rightarrow>\\<^sub>E f ` A\n  f' ` A = f ` A\n  finite A\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n\ngoal (1 subgoal):\n 1. f' \\<in> A \\<rightarrow>\\<^sub>E B &&& inj_on f A", "using PiE_mem"], ["proof (prove)\nusing this:\n  f' \\<in> A \\<rightarrow>\\<^sub>E f ` A\n  f' ` A = f ` A\n  finite A\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n  \\<lbrakk>?f \\<in> Pi\\<^sub>E ?S ?T; ?x \\<in> ?S\\<rbrakk>\n  \\<Longrightarrow> ?f ?x \\<in> ?T ?x\n\ngoal (1 subgoal):\n 1. f' \\<in> A \\<rightarrow>\\<^sub>E B &&& inj_on f A", "by fastforce+"], ["proof (state)\nthis:\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A (f ` A) \\<Longrightarrow>\n       x \\<in> domain_permutation A B `` {f}", "moreover"], ["proof (state)\nthis:\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A (f ` A) \\<Longrightarrow>\n       x \\<in> domain_permutation A B `` {f}", "have \"\\<exists>p. p permutes A \\<and> (\\<forall>x\\<in>A. f x = f' (p x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p. p permutes A \\<and> (\\<forall>x\\<in>A. f x = f' (p x))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. ?p permutes A \\<and> (\\<forall>x\\<in>A. f x = f' (?p x))", "let ?p = \"\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x\""], ["proof (state)\ngoal (1 subgoal):\n 1. ?p permutes A \\<and> (\\<forall>x\\<in>A. f x = f' (?p x))", "show \"?p permutes A \\<and> (\\<forall>x\\<in>A. f x = f' (?p x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) permutes\n    A \\<and>\n    (\\<forall>x\\<in>A.\n        f x = f' (if x \\<in> A then inv_into A f' (f x) else x))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) permutes A\n 2. \\<forall>x\\<in>A.\n       f x = f' (if x \\<in> A then inv_into A f' (f x) else x)", "show \"?p permutes A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) permutes A", "proof (rule bij_imp_permutes)"], ["proof (state)\ngoal (2 subgoals):\n 1. bij_betw (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) A A\n 2. \\<And>x.\n       x \\<notin> A \\<Longrightarrow>\n       (if x \\<in> A then inv_into A f' (f x) else x) = x", "show \"bij_betw ?p A A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) A A", "proof (rule bij_betw_imageI)"], ["proof (state)\ngoal (2 subgoals):\n 1. inj_on (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) A\n 2. (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) ` A = A", "show \"inj_on ?p A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) A", "proof (rule inj_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        (if x \\<in> A then inv_into A f' (f x) else x) =\n        (if y \\<in> A then inv_into A f' (f y) else y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix a a'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        (if x \\<in> A then inv_into A f' (f x) else x) =\n        (if y \\<in> A then inv_into A f' (f y) else y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume \"a \\<in> A\" \"a' \\<in> A\" \"?p a = ?p a'\""], ["proof (state)\nthis:\n  a \\<in> A\n  a' \\<in> A\n  (if a \\<in> A then inv_into A f' (f a) else a) =\n  (if a' \\<in> A then inv_into A f' (f a') else a')\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        (if x \\<in> A then inv_into A f' (f x) else x) =\n        (if y \\<in> A then inv_into A f' (f y) else y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "from this"], ["proof (chain)\npicking this:\n  a \\<in> A\n  a' \\<in> A\n  (if a \\<in> A then inv_into A f' (f a) else a) =\n  (if a' \\<in> A then inv_into A f' (f a') else a')", "have \"inv_into A f' (f a) = inv_into A f' (f a')\""], ["proof (prove)\nusing this:\n  a \\<in> A\n  a' \\<in> A\n  (if a \\<in> A then inv_into A f' (f a) else a) =\n  (if a' \\<in> A then inv_into A f' (f a') else a')\n\ngoal (1 subgoal):\n 1. inv_into A f' (f a) = inv_into A f' (f a')", "by auto"], ["proof (state)\nthis:\n  inv_into A f' (f a) = inv_into A f' (f a')\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        (if x \\<in> A then inv_into A f' (f x) else x) =\n        (if y \\<in> A then inv_into A f' (f y) else y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "from this \\<open>a \\<in> A\\<close> \\<open>a' \\<in> A\\<close> \\<open>f' ` A = f ` A\\<close>"], ["proof (chain)\npicking this:\n  inv_into A f' (f a) = inv_into A f' (f a')\n  a \\<in> A\n  a' \\<in> A\n  f' ` A = f ` A", "have \"f a = f a'\""], ["proof (prove)\nusing this:\n  inv_into A f' (f a) = inv_into A f' (f a')\n  a \\<in> A\n  a' \\<in> A\n  f' ` A = f ` A\n\ngoal (1 subgoal):\n 1. f a = f a'", "using inv_into_injective"], ["proof (prove)\nusing this:\n  inv_into A f' (f a) = inv_into A f' (f a')\n  a \\<in> A\n  a' \\<in> A\n  f' ` A = f ` A\n  \\<lbrakk>inv_into ?A ?f ?x = inv_into ?A ?f ?y; ?x \\<in> ?f ` ?A;\n   ?y \\<in> ?f ` ?A\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. f a = f a'", "by fastforce"], ["proof (state)\nthis:\n  f a = f a'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        (if x \\<in> A then inv_into A f' (f x) else x) =\n        (if y \\<in> A then inv_into A f' (f y) else y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "from this \\<open>a \\<in> A\\<close> \\<open>a' \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  f a = f a'\n  a \\<in> A\n  a' \\<in> A", "show \"a = a'\""], ["proof (prove)\nusing this:\n  f a = f a'\n  a \\<in> A\n  a' \\<in> A\n\ngoal (1 subgoal):\n 1. a = a'", "by (metis bij bij_betw_inv_into_left)"], ["proof (state)\nthis:\n  a = a'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) ` A = A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) ` A = A", "show \"?p ` A = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) ` A = A", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) ` A\n    \\<subseteq> A\n 2. A \\<subseteq> (\\<lambda>x.\n                      if x \\<in> A then inv_into A f' (f x) else x) `\n                  A", "show \"?p ` A \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) ` A\n    \\<subseteq> A", "using \\<open>f' ` A = f ` A\\<close>"], ["proof (prove)\nusing this:\n  f' ` A = f ` A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) ` A\n    \\<subseteq> A", "by (simp add: image_subsetI inv_into_into)"], ["proof (state)\nthis:\n  (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) ` A\n  \\<subseteq> A\n\ngoal (1 subgoal):\n 1. A \\<subseteq> (\\<lambda>x.\n                      if x \\<in> A then inv_into A f' (f x) else x) `\n                  A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<subseteq> (\\<lambda>x.\n                      if x \\<in> A then inv_into A f' (f x) else x) `\n                  A", "show \"A \\<subseteq> ?p ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> (\\<lambda>x.\n                      if x \\<in> A then inv_into A f' (f x) else x) `\n                  A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) `\n               A", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) `\n               A", "assume \"a \\<in> A\""], ["proof (state)\nthis:\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) `\n               A", "have \"inj_on f' A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on f' A", "using \\<open>finite A\\<close> \\<open>f' ` A = f ` A\\<close> \\<open>inj_on f A\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  f' ` A = f ` A\n  inj_on f A\n\ngoal (1 subgoal):\n 1. inj_on f' A", "by (simp add: card_image eq_card_imp_inj_on)"], ["proof (state)\nthis:\n  inj_on f' A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) `\n               A", "from \\<open>a \\<in> A\\<close> \\<open>f' ` A = f ` A\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> A\n  f' ` A = f ` A", "have \"inv_into A f (f' a) \\<in> A\""], ["proof (prove)\nusing this:\n  a \\<in> A\n  f' ` A = f ` A\n\ngoal (1 subgoal):\n 1. inv_into A f (f' a) \\<in> A", "by (metis image_eqI inv_into_into)"], ["proof (state)\nthis:\n  inv_into A f (f' a) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) `\n               A", "moreover"], ["proof (state)\nthis:\n  inv_into A f (f' a) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) `\n               A", "have \"a = inv_into A f' (f (inv_into A f (f' a)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = inv_into A f' (f (inv_into A f (f' a)))", "using \\<open>a \\<in> A\\<close> \\<open>f' ` A = f ` A\\<close> \\<open>inj_on f' A\\<close>"], ["proof (prove)\nusing this:\n  a \\<in> A\n  f' ` A = f ` A\n  inj_on f' A\n\ngoal (1 subgoal):\n 1. a = inv_into A f' (f (inv_into A f (f' a)))", "by (metis f_inv_into_f image_eqI inv_into_f_f)"], ["proof (state)\nthis:\n  a = inv_into A f' (f (inv_into A f (f' a)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) `\n               A", "ultimately"], ["proof (chain)\npicking this:\n  inv_into A f (f' a) \\<in> A\n  a = inv_into A f' (f (inv_into A f (f' a)))", "show \"a \\<in> ?p ` A\""], ["proof (prove)\nusing this:\n  inv_into A f (f' a) \\<in> A\n  a = inv_into A f' (f (inv_into A f (f' a)))\n\ngoal (1 subgoal):\n 1. a \\<in> (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) ` A", "by auto"], ["proof (state)\nthis:\n  a \\<in> (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) ` A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A \\<subseteq> (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) `\n                A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) ` A = A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bij_betw (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) A A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> A \\<Longrightarrow>\n       (if x \\<in> A then inv_into A f' (f x) else x) = x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> A \\<Longrightarrow>\n       (if x \\<in> A then inv_into A f' (f x) else x) = x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> A \\<Longrightarrow>\n       (if x \\<in> A then inv_into A f' (f x) else x) = x", "assume \"x \\<notin> A\""], ["proof (state)\nthis:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> A \\<Longrightarrow>\n       (if x \\<in> A then inv_into A f' (f x) else x) = x", "from this"], ["proof (chain)\npicking this:\n  x \\<notin> A", "show \"?p x = x\""], ["proof (prove)\nusing this:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. (if x \\<in> A then inv_into A f' (f x) else x) = x", "by simp"], ["proof (state)\nthis:\n  (if x \\<in> A then inv_into A f' (f x) else x) = x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) permutes A\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A.\n       f x = f' (if x \\<in> A then inv_into A f' (f x) else x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A.\n       f x = f' (if x \\<in> A then inv_into A f' (f x) else x)", "from \\<open>f' ` A = f ` A\\<close>"], ["proof (chain)\npicking this:\n  f' ` A = f ` A", "show \"\\<forall>x\\<in>A. f x = f' (?p x)\""], ["proof (prove)\nusing this:\n  f' ` A = f ` A\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A.\n       f x = f' (if x \\<in> A then inv_into A f' (f x) else x)", "by (simp add: f_inv_into_f)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>A. f x = f' (if x \\<in> A then inv_into A f' (f x) else x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. if x \\<in> A then inv_into A f' (f x) else x) permutes\n  A \\<and>\n  (\\<forall>x\\<in>A.\n      f x = f' (if x \\<in> A then inv_into A f' (f x) else x))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>p. p permutes A \\<and> (\\<forall>x\\<in>A. f x = f' (p x))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A (f ` A) \\<Longrightarrow>\n       x \\<in> domain_permutation A B `` {f}", "moreover"], ["proof (state)\nthis:\n  \\<exists>p. p permutes A \\<and> (\\<forall>x\\<in>A. f x = f' (p x))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A (f ` A) \\<Longrightarrow>\n       x \\<in> domain_permutation A B `` {f}", "have \"f \\<in> A \\<rightarrow>\\<^sub>E B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> A \\<rightarrow>\\<^sub>E B", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n\ngoal (1 subgoal):\n 1. f \\<in> A \\<rightarrow>\\<^sub>E B", "by auto"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A (f ` A) \\<Longrightarrow>\n       x \\<in> domain_permutation A B `` {f}", "ultimately"], ["proof (chain)\npicking this:\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n  \\<exists>p. p permutes A \\<and> (\\<forall>x\\<in>A. f x = f' (p x))\n  f \\<in> A \\<rightarrow>\\<^sub>E B", "show \"f' \\<in> domain_permutation A B `` {f}\""], ["proof (prove)\nusing this:\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n  \\<exists>p. p permutes A \\<and> (\\<forall>x\\<in>A. f x = f' (p x))\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. f' \\<in> domain_permutation A B `` {f}", "unfolding domain_permutation_def"], ["proof (prove)\nusing this:\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n  \\<exists>p. p permutes A \\<and> (\\<forall>x\\<in>A. f x = f' (p x))\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. f' \\<in> {(f, f').\n              (f, f')\n              \\<in> (A \\<rightarrow>\\<^sub>E B) \\<times>\n                    (A \\<rightarrow>\\<^sub>E B) \\<and>\n              (\\<exists>p.\n                  p permutes A \\<and>\n                  (\\<forall>x\\<in>A. f x = f' (p x)))} ``\n             {f}", "by auto"], ["proof (state)\nthis:\n  f' \\<in> domain_permutation A B `` {f}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  functions_of A (f ` A) \\<subseteq> domain_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. domain_permutation A B `` {f} \\<subseteq> functions_of A (f ` A)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. domain_permutation A B `` {f} \\<subseteq> functions_of A (f ` A)", "show \"domain_permutation A B `` {f} \\<subseteq> functions_of A (f ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. domain_permutation A B `` {f} \\<subseteq> functions_of A (f ` A)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domain_permutation A B `` {f} \\<Longrightarrow>\n       x \\<in> functions_of A (f ` A)", "fix f'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domain_permutation A B `` {f} \\<Longrightarrow>\n       x \\<in> functions_of A (f ` A)", "assume \"f' \\<in> domain_permutation A B `` {f}\""], ["proof (state)\nthis:\n  f' \\<in> domain_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domain_permutation A B `` {f} \\<Longrightarrow>\n       x \\<in> functions_of A (f ` A)", "from this"], ["proof (chain)\npicking this:\n  f' \\<in> domain_permutation A B `` {f}", "obtain p where p: \"p permutes A\" \"\\<forall>x\\<in>A. f x = f' (p x)\"\n      and \"f \\<in> A \\<rightarrow>\\<^sub>E B\" \"f' \\<in> A \\<rightarrow>\\<^sub>E B\""], ["proof (prove)\nusing this:\n  f' \\<in> domain_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; \\<forall>x\\<in>A. f x = f' (p x);\n         f \\<in> A \\<rightarrow>\\<^sub>E B;\n         f' \\<in> A \\<rightarrow>\\<^sub>E B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding domain_permutation_def"], ["proof (prove)\nusing this:\n  f' \\<in> {(f, f').\n            (f, f')\n            \\<in> (A \\<rightarrow>\\<^sub>E B) \\<times>\n                  (A \\<rightarrow>\\<^sub>E B) \\<and>\n            (\\<exists>p.\n                p permutes A \\<and> (\\<forall>x\\<in>A. f x = f' (p x)))} ``\n           {f}\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p permutes A; \\<forall>x\\<in>A. f x = f' (p x);\n         f \\<in> A \\<rightarrow>\\<^sub>E B;\n         f' \\<in> A \\<rightarrow>\\<^sub>E B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p permutes A\n  \\<forall>x\\<in>A. f x = f' (p x)\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domain_permutation A B `` {f} \\<Longrightarrow>\n       x \\<in> functions_of A (f ` A)", "have \"f' ` A = f ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f' ` A = f ` A", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. f' ` A \\<subseteq> f ` A\n 2. f ` A \\<subseteq> f' ` A", "show \"f' ` A \\<subseteq> f ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f' ` A \\<subseteq> f ` A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> f' ` A \\<Longrightarrow> x \\<in> f ` A", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> f' ` A \\<Longrightarrow> x \\<in> f ` A", "assume \"x \\<in> f' ` A\""], ["proof (state)\nthis:\n  x \\<in> f' ` A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> f' ` A \\<Longrightarrow> x \\<in> f ` A", "from this"], ["proof (chain)\npicking this:\n  x \\<in> f' ` A", "obtain x' where \"x = f' x'\" and \"x' \\<in> A\""], ["proof (prove)\nusing this:\n  x \\<in> f' ` A\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x = f' x'; x' \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  x = f' x'\n  x' \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> f' ` A \\<Longrightarrow> x \\<in> f ` A", "from this"], ["proof (chain)\npicking this:\n  x = f' x'\n  x' \\<in> A", "have \"x = f (inv p x')\""], ["proof (prove)\nusing this:\n  x = f' x'\n  x' \\<in> A\n\ngoal (1 subgoal):\n 1. x = f (inv p x')", "using p"], ["proof (prove)\nusing this:\n  x = f' x'\n  x' \\<in> A\n  p permutes A\n  \\<forall>x\\<in>A. f x = f' (p x)\n\ngoal (1 subgoal):\n 1. x = f (inv p x')", "by (metis (mono_tags, lifting) permutes_in_image permutes_inverses(1))"], ["proof (state)\nthis:\n  x = f (inv p x')\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> f' ` A \\<Longrightarrow> x \\<in> f ` A", "moreover"], ["proof (state)\nthis:\n  x = f (inv p x')\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> f' ` A \\<Longrightarrow> x \\<in> f ` A", "have \"inv p x' \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv p x' \\<in> A", "using p \\<open>x' \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  p permutes A\n  \\<forall>x\\<in>A. f x = f' (p x)\n  x' \\<in> A\n\ngoal (1 subgoal):\n 1. inv p x' \\<in> A", "by (simp add: permutes_in_image permutes_inv)"], ["proof (state)\nthis:\n  inv p x' \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> f' ` A \\<Longrightarrow> x \\<in> f ` A", "ultimately"], ["proof (chain)\npicking this:\n  x = f (inv p x')\n  inv p x' \\<in> A", "show \"x \\<in> f ` A\""], ["proof (prove)\nusing this:\n  x = f (inv p x')\n  inv p x' \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> f ` A", ".."], ["proof (state)\nthis:\n  x \\<in> f ` A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f' ` A \\<subseteq> f ` A\n\ngoal (1 subgoal):\n 1. f ` A \\<subseteq> f' ` A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. f ` A \\<subseteq> f' ` A", "show \"f ` A \\<subseteq> f' ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` A \\<subseteq> f' ` A", "using p permutes_in_image"], ["proof (prove)\nusing this:\n  p permutes A\n  \\<forall>x\\<in>A. f x = f' (p x)\n  ?p permutes ?S \\<Longrightarrow> (?p ?x \\<in> ?S) = (?x \\<in> ?S)\n\ngoal (1 subgoal):\n 1. f ` A \\<subseteq> f' ` A", "by fastforce"], ["proof (state)\nthis:\n  f ` A \\<subseteq> f' ` A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f' ` A = f ` A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domain_permutation A B `` {f} \\<Longrightarrow>\n       x \\<in> functions_of A (f ` A)", "moreover"], ["proof (state)\nthis:\n  f' ` A = f ` A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domain_permutation A B `` {f} \\<Longrightarrow>\n       x \\<in> functions_of A (f ` A)", "from this \\<open>f' \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (chain)\npicking this:\n  f' ` A = f ` A\n  f' \\<in> A \\<rightarrow>\\<^sub>E B", "have \"f' \\<in> A \\<rightarrow>\\<^sub>E f ` A\""], ["proof (prove)\nusing this:\n  f' ` A = f ` A\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. f' \\<in> A \\<rightarrow>\\<^sub>E f ` A", "by auto"], ["proof (state)\nthis:\n  f' \\<in> A \\<rightarrow>\\<^sub>E f ` A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domain_permutation A B `` {f} \\<Longrightarrow>\n       x \\<in> functions_of A (f ` A)", "ultimately"], ["proof (chain)\npicking this:\n  f' ` A = f ` A\n  f' \\<in> A \\<rightarrow>\\<^sub>E f ` A", "show \"f' \\<in> functions_of A (f ` A)\""], ["proof (prove)\nusing this:\n  f' ` A = f ` A\n  f' \\<in> A \\<rightarrow>\\<^sub>E f ` A\n\ngoal (1 subgoal):\n 1. f' \\<in> functions_of A (f ` A)", "unfolding functions_of_def"], ["proof (prove)\nusing this:\n  f' ` A = f ` A\n  f' \\<in> A \\<rightarrow>\\<^sub>E f ` A\n\ngoal (1 subgoal):\n 1. f' \\<in> {fa \\<in> A \\<rightarrow>\\<^sub>E f ` A. fa ` A = f ` A}", "by auto"], ["proof (state)\nthis:\n  f' \\<in> functions_of A (f ` A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  domain_permutation A B `` {f} \\<subseteq> functions_of A (f ` A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subset_of:\n  assumes \"F \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B\"\n  shows \"subset_of A F \\<subseteq> B\" and \"card (subset_of A F) = card A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subset_of A F \\<subseteq> B &&& card (subset_of A F) = card A", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. subset_of A F \\<subseteq> B\n 2. card (subset_of A F) = card A", "from assms"], ["proof (chain)\npicking this:\n  F \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n          domain_permutation A B", "obtain f where F_eq: \"F = (domain_permutation A B) `` {f}\"\n    and f: \"f \\<in> A \\<rightarrow>\\<^sub>E B\" \"inj_on f A\""], ["proof (prove)\nusing this:\n  F \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n          domain_permutation A B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>F = domain_permutation A B `` {f};\n         f \\<in> A \\<rightarrow>\\<^sub>E B; inj_on f A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using mem_Collect_eq quotientE"], ["proof (prove)\nusing this:\n  F \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n          domain_permutation A B\n  (?a \\<in> Collect ?P) = ?P ?a\n  \\<lbrakk>?X \\<in> ?A // ?r;\n   \\<And>x.\n      \\<lbrakk>?X = ?r `` {x}; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>F = domain_permutation A B `` {f};\n         f \\<in> A \\<rightarrow>\\<^sub>E B; inj_on f A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  F = domain_permutation A B `` {f}\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n\ngoal (2 subgoals):\n 1. subset_of A F \\<subseteq> B\n 2. card (subset_of A F) = card A", "from this"], ["proof (chain)\npicking this:\n  F = domain_permutation A B `` {f}\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A", "have \"subset_of A (domain_permutation A B `` {f}) = f ` A\""], ["proof (prove)\nusing this:\n  F = domain_permutation A B `` {f}\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n\ngoal (1 subgoal):\n 1. subset_of A (domain_permutation A B `` {f}) = f ` A", "using equiv_domain_permutation image_respects_domain_permutation"], ["proof (prove)\nusing this:\n  F = domain_permutation A B `` {f}\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (domain_permutation ?A ?B)\n  (\\<lambda>f. f ` ?A) respects domain_permutation ?A ?B\n\ngoal (1 subgoal):\n 1. subset_of A (domain_permutation A B `` {f}) = f ` A", "unfolding subset_of_def"], ["proof (prove)\nusing this:\n  F = domain_permutation A B `` {f}\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (domain_permutation ?A ?B)\n  (\\<lambda>f. f ` ?A) respects domain_permutation ?A ?B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A) (domain_permutation A B `` {f}) = f ` A", "by (intro univ_commute') auto"], ["proof (state)\nthis:\n  subset_of A (domain_permutation A B `` {f}) = f ` A\n\ngoal (2 subgoals):\n 1. subset_of A F \\<subseteq> B\n 2. card (subset_of A F) = card A", "from this f F_eq"], ["proof (chain)\npicking this:\n  subset_of A (domain_permutation A B `` {f}) = f ` A\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n  F = domain_permutation A B `` {f}", "show \"subset_of A F \\<subseteq> B\" and \"card (subset_of A F) = card A\""], ["proof (prove)\nusing this:\n  subset_of A (domain_permutation A B `` {f}) = f ` A\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n  F = domain_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. subset_of A F \\<subseteq> B &&& card (subset_of A F) = card A", "by (auto simp add: card_image)"], ["proof (state)\nthis:\n  subset_of A F \\<subseteq> B\n  card (subset_of A F) = card A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma functions_of:\n  assumes \"finite A\" \"finite B\" \"X \\<subseteq> B\" \"card X = card A\"\n  shows \"functions_of A X \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of A X\n    \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n          domain_permutation A B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. functions_of A X\n    \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n          domain_permutation A B", "from assms"], ["proof (chain)\npicking this:\n  finite A\n  finite B\n  X \\<subseteq> B\n  card X = card A", "obtain f where f: \"f \\<in> A \\<rightarrow>\\<^sub>E X \\<and> bij_betw f A X\""], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  X \\<subseteq> B\n  card X = card A\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        f \\<in> A \\<rightarrow>\\<^sub>E X \\<and>\n        bij_betw f A X \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  X \\<subseteq> B\n  card X = card A\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        f \\<in> A \\<rightarrow>\\<^sub>E X \\<and>\n        bij_betw f A X \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis finite_same_card_bij_on_ext_funcset finite_subset)"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E X \\<and> bij_betw f A X\n\ngoal (1 subgoal):\n 1. functions_of A X\n    \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n          domain_permutation A B", "from this"], ["proof (chain)\npicking this:\n  f \\<in> A \\<rightarrow>\\<^sub>E X \\<and> bij_betw f A X", "have \"X = f ` A\""], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E X \\<and> bij_betw f A X\n\ngoal (1 subgoal):\n 1. X = f ` A", "by (simp add: bij_betw_def)"], ["proof (state)\nthis:\n  X = f ` A\n\ngoal (1 subgoal):\n 1. functions_of A X\n    \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n          domain_permutation A B", "from f \\<open>X \\<subseteq> B\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> A \\<rightarrow>\\<^sub>E X \\<and> bij_betw f A X\n  X \\<subseteq> B", "have \"f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\""], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E X \\<and> bij_betw f A X\n  X \\<subseteq> B\n\ngoal (1 subgoal):\n 1. f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "by (auto simp add: bij_betw_imp_inj_on)"], ["proof (state)\nthis:\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n\ngoal (1 subgoal):\n 1. functions_of A X\n    \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n          domain_permutation A B", "have \"functions_of A X = domain_permutation A B `` {f}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of A X = domain_permutation A B `` {f}", "using \\<open>finite A\\<close> \\<open>X = f ` A\\<close> \\<open>f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  X = f ` A\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n\ngoal (1 subgoal):\n 1. functions_of A X = domain_permutation A B `` {f}", "by (simp add: functions_of_eq)"], ["proof (state)\nthis:\n  functions_of A X = domain_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. functions_of A X\n    \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n          domain_permutation A B", "from this"], ["proof (chain)\npicking this:\n  functions_of A X = domain_permutation A B `` {f}", "show \"functions_of A X \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B\""], ["proof (prove)\nusing this:\n  functions_of A X = domain_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. functions_of A X\n    \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n          domain_permutation A B", "using \\<open>f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\\<close>"], ["proof (prove)\nusing this:\n  functions_of A X = domain_permutation A B `` {f}\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n\ngoal (1 subgoal):\n 1. functions_of A X\n    \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n          domain_permutation A B", "by (auto intro: quotientI)"], ["proof (state)\nthis:\n  functions_of A X\n  \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n        domain_permutation A B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subset_of_functions_of:\n  assumes \"finite A\" \"finite X\" \"card A = card X\"\n  shows \"subset_of A (functions_of A X) = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subset_of A (functions_of A X) = X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subset_of A (functions_of A X) = X", "from assms"], ["proof (chain)\npicking this:\n  finite A\n  finite X\n  card A = card X", "obtain f where \"f \\<in> A \\<rightarrow>\\<^sub>E X\" and \"bij_betw f A X\""], ["proof (prove)\nusing this:\n  finite A\n  finite X\n  card A = card X\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E X; bij_betw f A X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using finite_same_card_bij_on_ext_funcset"], ["proof (prove)\nusing this:\n  finite A\n  finite X\n  card A = card X\n  \\<lbrakk>finite ?A; finite ?B; card ?A = card ?B\\<rbrakk>\n  \\<Longrightarrow> \\<exists>f.\n                       f \\<in> ?A \\<rightarrow>\\<^sub>E ?B \\<and>\n                       bij_betw f ?A ?B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E X; bij_betw f A X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E X\n  bij_betw f A X\n\ngoal (1 subgoal):\n 1. subset_of A (functions_of A X) = X", "from this"], ["proof (chain)\npicking this:\n  f \\<in> A \\<rightarrow>\\<^sub>E X\n  bij_betw f A X", "have subset_of: \"subset_of A (domain_permutation A X `` {f}) = f ` A\""], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E X\n  bij_betw f A X\n\ngoal (1 subgoal):\n 1. subset_of A (domain_permutation A X `` {f}) = f ` A", "using equiv_domain_permutation image_respects_domain_permutation"], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E X\n  bij_betw f A X\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (domain_permutation ?A ?B)\n  (\\<lambda>f. f ` ?A) respects domain_permutation ?A ?B\n\ngoal (1 subgoal):\n 1. subset_of A (domain_permutation A X `` {f}) = f ` A", "unfolding subset_of_def"], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E X\n  bij_betw f A X\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (domain_permutation ?A ?B)\n  (\\<lambda>f. f ` ?A) respects domain_permutation ?A ?B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A) (domain_permutation A X `` {f}) = f ` A", "by (intro univ_commute') auto"], ["proof (state)\nthis:\n  subset_of A (domain_permutation A X `` {f}) = f ` A\n\ngoal (1 subgoal):\n 1. subset_of A (functions_of A X) = X", "from \\<open>bij_betw f A X\\<close>"], ["proof (chain)\npicking this:\n  bij_betw f A X", "have \"inj_on f A\" and \"f ` A = X\""], ["proof (prove)\nusing this:\n  bij_betw f A X\n\ngoal (1 subgoal):\n 1. inj_on f A &&& f ` A = X", "by (auto simp add: bij_betw_def)"], ["proof (state)\nthis:\n  inj_on f A\n  f ` A = X\n\ngoal (1 subgoal):\n 1. subset_of A (functions_of A X) = X", "have \"subset_of A (functions_of A X) = subset_of A (functions_of A (f ` A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subset_of A (functions_of A X) = subset_of A (functions_of A (f ` A))", "using \\<open>f ` A = X\\<close>"], ["proof (prove)\nusing this:\n  f ` A = X\n\ngoal (1 subgoal):\n 1. subset_of A (functions_of A X) = subset_of A (functions_of A (f ` A))", "by simp"], ["proof (state)\nthis:\n  subset_of A (functions_of A X) = subset_of A (functions_of A (f ` A))\n\ngoal (1 subgoal):\n 1. subset_of A (functions_of A X) = X", "also"], ["proof (state)\nthis:\n  subset_of A (functions_of A X) = subset_of A (functions_of A (f ` A))\n\ngoal (1 subgoal):\n 1. subset_of A (functions_of A X) = X", "have \"\\<dots> = subset_of A (domain_permutation A X `` {f})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subset_of A (functions_of A (f ` A)) =\n    subset_of A (domain_permutation A X `` {f})", "using \\<open>finite A\\<close> \\<open>inj_on f A\\<close> \\<open>f \\<in> A \\<rightarrow>\\<^sub>E X\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  inj_on f A\n  f \\<in> A \\<rightarrow>\\<^sub>E X\n\ngoal (1 subgoal):\n 1. subset_of A (functions_of A (f ` A)) =\n    subset_of A (domain_permutation A X `` {f})", "by (auto simp add: functions_of_eq)"], ["proof (state)\nthis:\n  subset_of A (functions_of A (f ` A)) =\n  subset_of A (domain_permutation A X `` {f})\n\ngoal (1 subgoal):\n 1. subset_of A (functions_of A X) = X", "also"], ["proof (state)\nthis:\n  subset_of A (functions_of A (f ` A)) =\n  subset_of A (domain_permutation A X `` {f})\n\ngoal (1 subgoal):\n 1. subset_of A (functions_of A X) = X", "have \"\\<dots> = f ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subset_of A (domain_permutation A X `` {f}) = f ` A", "using \\<open>inj_on f A\\<close> \\<open>f \\<in> A \\<rightarrow>\\<^sub>E X\\<close>"], ["proof (prove)\nusing this:\n  inj_on f A\n  f \\<in> A \\<rightarrow>\\<^sub>E X\n\ngoal (1 subgoal):\n 1. subset_of A (domain_permutation A X `` {f}) = f ` A", "by (simp add: subset_of)"], ["proof (state)\nthis:\n  subset_of A (domain_permutation A X `` {f}) = f ` A\n\ngoal (1 subgoal):\n 1. subset_of A (functions_of A X) = X", "also"], ["proof (state)\nthis:\n  subset_of A (domain_permutation A X `` {f}) = f ` A\n\ngoal (1 subgoal):\n 1. subset_of A (functions_of A X) = X", "have \"\\<dots> = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` A = X", "using \\<open>f ` A = X\\<close>"], ["proof (prove)\nusing this:\n  f ` A = X\n\ngoal (1 subgoal):\n 1. f ` A = X", "by simp"], ["proof (state)\nthis:\n  f ` A = X\n\ngoal (1 subgoal):\n 1. subset_of A (functions_of A X) = X", "finally"], ["proof (chain)\npicking this:\n  subset_of A (functions_of A X) = X", "show ?thesis"], ["proof (prove)\nusing this:\n  subset_of A (functions_of A X) = X\n\ngoal (1 subgoal):\n 1. subset_of A (functions_of A X) = X", "."], ["proof (state)\nthis:\n  subset_of A (functions_of A X) = X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma functions_of_subset_of:\n  assumes \"finite A\"\n  assumes \"F \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B\"\n  shows \"functions_of A (subset_of A F) = F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of A (subset_of A F) = F", "using assms(2)"], ["proof (prove)\nusing this:\n  F \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n          domain_permutation A B\n\ngoal (1 subgoal):\n 1. functions_of A (subset_of A F) = F", "proof (rule quotientE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>F = domain_permutation A B `` {x};\n        x \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\\<rbrakk>\n       \\<Longrightarrow> functions_of A (subset_of A F) = F", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>F = domain_permutation A B `` {x};\n        x \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\\<rbrakk>\n       \\<Longrightarrow> functions_of A (subset_of A F) = F", "assume f: \"f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\"\n    and F_eq: \"F = domain_permutation A B `` {f}\""], ["proof (state)\nthis:\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n  F = domain_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>F = domain_permutation A B `` {x};\n        x \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\\<rbrakk>\n       \\<Longrightarrow> functions_of A (subset_of A F) = F", "from this"], ["proof (chain)\npicking this:\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n  F = domain_permutation A B `` {f}", "have \"subset_of A (domain_permutation A B `` {f}) = f ` A\""], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n  F = domain_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. subset_of A (domain_permutation A B `` {f}) = f ` A", "using equiv_domain_permutation image_respects_domain_permutation"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n  F = domain_permutation A B `` {f}\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (domain_permutation ?A ?B)\n  (\\<lambda>f. f ` ?A) respects domain_permutation ?A ?B\n\ngoal (1 subgoal):\n 1. subset_of A (domain_permutation A B `` {f}) = f ` A", "unfolding subset_of_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n  F = domain_permutation A B `` {f}\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (domain_permutation ?A ?B)\n  (\\<lambda>f. f ` ?A) respects domain_permutation ?A ?B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A) (domain_permutation A B `` {f}) = f ` A", "by (intro univ_commute') auto"], ["proof (state)\nthis:\n  subset_of A (domain_permutation A B `` {f}) = f ` A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>F = domain_permutation A B `` {x};\n        x \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\\<rbrakk>\n       \\<Longrightarrow> functions_of A (subset_of A F) = F", "from this f F_eq \\<open>finite A\\<close>"], ["proof (chain)\npicking this:\n  subset_of A (domain_permutation A B `` {f}) = f ` A\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n  F = domain_permutation A B `` {f}\n  finite A", "show \"functions_of A (subset_of A F) = F\""], ["proof (prove)\nusing this:\n  subset_of A (domain_permutation A B `` {f}) = f ` A\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n  F = domain_permutation A B `` {f}\n  finite A\n\ngoal (1 subgoal):\n 1. functions_of A (subset_of A F) = F", "by (simp add: functions_of_eq)"], ["proof (state)\nthis:\n  functions_of A (subset_of A F) = F\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Bijections\\<close>"], ["", "lemma bij_betw_subset_of:\n  assumes \"finite A\" \"finite B\"\n  shows \"bij_betw (subset_of A) ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B) {X. X \\<subseteq> B \\<and> card X = card A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (subset_of A)\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_permutation A B)\n     {X. X \\<subseteq> B \\<and> card X = card A}", "proof (rule bij_betw_byWitness[where f'=\"functions_of A\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                   domain_permutation A B.\n       functions_of A (subset_of A a) = a\n 2. \\<forall>a'\\<in>{X. X \\<subseteq> B \\<and> card X = card A}.\n       subset_of A (functions_of A a') = a'\n 3. subset_of A `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_permutation A B\n    \\<subseteq> {X. X \\<subseteq> B \\<and> card X = card A}\n 4. functions_of A ` {X. X \\<subseteq> B \\<and> card X = card A}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_permutation A B", "show \"\\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B. functions_of A (subset_of A F) = F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                   domain_permutation A B.\n       functions_of A (subset_of A F) = F", "using \\<open>finite A\\<close> functions_of_subset_of"], ["proof (prove)\nusing this:\n  finite A\n  \\<lbrakk>finite ?A;\n   ?F \\<in> {f \\<in> ?A \\<rightarrow>\\<^sub>E ?B. inj_on f ?A} //\n            domain_permutation ?A ?B\\<rbrakk>\n  \\<Longrightarrow> functions_of ?A (subset_of ?A ?F) = ?F\n\ngoal (1 subgoal):\n 1. \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                   domain_permutation A B.\n       functions_of A (subset_of A F) = F", "by auto"], ["proof (state)\nthis:\n  \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                 domain_permutation A B.\n     functions_of A (subset_of A F) = F\n\ngoal (3 subgoals):\n 1. \\<forall>a'\\<in>{X. X \\<subseteq> B \\<and> card X = card A}.\n       subset_of A (functions_of A a') = a'\n 2. subset_of A `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_permutation A B\n    \\<subseteq> {X. X \\<subseteq> B \\<and> card X = card A}\n 3. functions_of A ` {X. X \\<subseteq> B \\<and> card X = card A}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_permutation A B", "show \"\\<forall>X\\<in>{X. X \\<subseteq> B \\<and> card X = card A}. subset_of A (functions_of A X) = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>{X. X \\<subseteq> B \\<and> card X = card A}.\n       subset_of A (functions_of A X) = X", "using subset_of_functions_of \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; finite ?X; card ?A = card ?X\\<rbrakk>\n  \\<Longrightarrow> subset_of ?A (functions_of ?A ?X) = ?X\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>{X. X \\<subseteq> B \\<and> card X = card A}.\n       subset_of A (functions_of A X) = X", "by (metis (mono_tags) finite_subset mem_Collect_eq)"], ["proof (state)\nthis:\n  \\<forall>X\\<in>{X. X \\<subseteq> B \\<and> card X = card A}.\n     subset_of A (functions_of A X) = X\n\ngoal (2 subgoals):\n 1. subset_of A `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_permutation A B\n    \\<subseteq> {X. X \\<subseteq> B \\<and> card X = card A}\n 2. functions_of A ` {X. X \\<subseteq> B \\<and> card X = card A}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_permutation A B", "show \"subset_of A ` ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B) \\<subseteq> {X. X \\<subseteq> B \\<and> card X = card A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subset_of A `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_permutation A B\n    \\<subseteq> {X. X \\<subseteq> B \\<and> card X = card A}", "using subset_of"], ["proof (prove)\nusing this:\n  ?F \\<in> {f \\<in> ?A \\<rightarrow>\\<^sub>E ?B. inj_on f ?A} //\n           domain_permutation ?A ?B \\<Longrightarrow>\n  subset_of ?A ?F \\<subseteq> ?B\n  ?F \\<in> {f \\<in> ?A \\<rightarrow>\\<^sub>E ?B. inj_on f ?A} //\n           domain_permutation ?A ?B \\<Longrightarrow>\n  card (subset_of ?A ?F) = card ?A\n\ngoal (1 subgoal):\n 1. subset_of A `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_permutation A B\n    \\<subseteq> {X. X \\<subseteq> B \\<and> card X = card A}", "by fastforce"], ["proof (state)\nthis:\n  subset_of A `\n  {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B\n  \\<subseteq> {X. X \\<subseteq> B \\<and> card X = card A}\n\ngoal (1 subgoal):\n 1. functions_of A ` {X. X \\<subseteq> B \\<and> card X = card A}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_permutation A B", "show \"functions_of A ` {X. X \\<subseteq> B \\<and> card X = card A} \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of A ` {X. X \\<subseteq> B \\<and> card X = card A}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_permutation A B", "using \\<open>finite A\\<close> \\<open>finite B\\<close> functions_of"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  \\<lbrakk>finite ?A; finite ?B; ?X \\<subseteq> ?B;\n   card ?X = card ?A\\<rbrakk>\n  \\<Longrightarrow> functions_of ?A ?X\n                    \\<in> {f \\<in> ?A \\<rightarrow>\\<^sub>E ?B.\n                           inj_on f ?A} //\n                          domain_permutation ?A ?B\n\ngoal (1 subgoal):\n 1. functions_of A ` {X. X \\<subseteq> B \\<and> card X = card A}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_permutation A B", "by auto"], ["proof (state)\nthis:\n  functions_of A ` {X. X \\<subseteq> B \\<and> card X = card A}\n  \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n              domain_permutation A B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bij_betw_functions_of:\n  assumes \"finite A\" \"finite B\"\n  shows \"bij_betw (functions_of A) {X. X \\<subseteq> B \\<and> card X = card A} ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (functions_of A) {X. X \\<subseteq> B \\<and> card X = card A}\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_permutation A B)", "proof (rule bij_betw_byWitness[where f'=\"subset_of A\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{X. X \\<subseteq> B \\<and> card X = card A}.\n       subset_of A (functions_of A a) = a\n 2. \\<forall>a'\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                    domain_permutation A B.\n       functions_of A (subset_of A a') = a'\n 3. functions_of A ` {X. X \\<subseteq> B \\<and> card X = card A}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_permutation A B\n 4. subset_of A `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_permutation A B\n    \\<subseteq> {X. X \\<subseteq> B \\<and> card X = card A}", "show \"\\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B. functions_of A (subset_of A F) = F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                   domain_permutation A B.\n       functions_of A (subset_of A F) = F", "using \\<open>finite A\\<close> functions_of_subset_of"], ["proof (prove)\nusing this:\n  finite A\n  \\<lbrakk>finite ?A;\n   ?F \\<in> {f \\<in> ?A \\<rightarrow>\\<^sub>E ?B. inj_on f ?A} //\n            domain_permutation ?A ?B\\<rbrakk>\n  \\<Longrightarrow> functions_of ?A (subset_of ?A ?F) = ?F\n\ngoal (1 subgoal):\n 1. \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                   domain_permutation A B.\n       functions_of A (subset_of A F) = F", "by auto"], ["proof (state)\nthis:\n  \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                 domain_permutation A B.\n     functions_of A (subset_of A F) = F\n\ngoal (3 subgoals):\n 1. \\<forall>a\\<in>{X. X \\<subseteq> B \\<and> card X = card A}.\n       subset_of A (functions_of A a) = a\n 2. functions_of A ` {X. X \\<subseteq> B \\<and> card X = card A}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_permutation A B\n 3. subset_of A `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_permutation A B\n    \\<subseteq> {X. X \\<subseteq> B \\<and> card X = card A}", "show \"\\<forall>X\\<in>{X. X \\<subseteq> B \\<and> card X = card A}. subset_of A (functions_of A X) = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>{X. X \\<subseteq> B \\<and> card X = card A}.\n       subset_of A (functions_of A X) = X", "using subset_of_functions_of \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; finite ?X; card ?A = card ?X\\<rbrakk>\n  \\<Longrightarrow> subset_of ?A (functions_of ?A ?X) = ?X\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>{X. X \\<subseteq> B \\<and> card X = card A}.\n       subset_of A (functions_of A X) = X", "by (metis (mono_tags) finite_subset mem_Collect_eq)"], ["proof (state)\nthis:\n  \\<forall>X\\<in>{X. X \\<subseteq> B \\<and> card X = card A}.\n     subset_of A (functions_of A X) = X\n\ngoal (2 subgoals):\n 1. functions_of A ` {X. X \\<subseteq> B \\<and> card X = card A}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_permutation A B\n 2. subset_of A `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_permutation A B\n    \\<subseteq> {X. X \\<subseteq> B \\<and> card X = card A}", "show \"subset_of A ` ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B) \\<subseteq> {X. X \\<subseteq> B \\<and> card X = card A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subset_of A `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_permutation A B\n    \\<subseteq> {X. X \\<subseteq> B \\<and> card X = card A}", "using subset_of"], ["proof (prove)\nusing this:\n  ?F \\<in> {f \\<in> ?A \\<rightarrow>\\<^sub>E ?B. inj_on f ?A} //\n           domain_permutation ?A ?B \\<Longrightarrow>\n  subset_of ?A ?F \\<subseteq> ?B\n  ?F \\<in> {f \\<in> ?A \\<rightarrow>\\<^sub>E ?B. inj_on f ?A} //\n           domain_permutation ?A ?B \\<Longrightarrow>\n  card (subset_of ?A ?F) = card ?A\n\ngoal (1 subgoal):\n 1. subset_of A `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_permutation A B\n    \\<subseteq> {X. X \\<subseteq> B \\<and> card X = card A}", "by fastforce"], ["proof (state)\nthis:\n  subset_of A `\n  {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B\n  \\<subseteq> {X. X \\<subseteq> B \\<and> card X = card A}\n\ngoal (1 subgoal):\n 1. functions_of A ` {X. X \\<subseteq> B \\<and> card X = card A}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_permutation A B", "show \"functions_of A ` {X. X \\<subseteq> B \\<and> card X = card A} \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of A ` {X. X \\<subseteq> B \\<and> card X = card A}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_permutation A B", "using \\<open>finite A\\<close> \\<open>finite B\\<close> functions_of"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  \\<lbrakk>finite ?A; finite ?B; ?X \\<subseteq> ?B;\n   card ?X = card ?A\\<rbrakk>\n  \\<Longrightarrow> functions_of ?A ?X\n                    \\<in> {f \\<in> ?A \\<rightarrow>\\<^sub>E ?B.\n                           inj_on f ?A} //\n                          domain_permutation ?A ?B\n\ngoal (1 subgoal):\n 1. functions_of A ` {X. X \\<subseteq> B \\<and> card X = card A}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_permutation A B", "by auto"], ["proof (state)\nthis:\n  functions_of A ` {X. X \\<subseteq> B \\<and> card X = card A}\n  \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n              domain_permutation A B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bij_betw_mset_set:\n  shows \"bij_betw mset_set {A. finite A} {M. \\<forall>x. count M x \\<le> 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw mset_set {A. finite A} {M. \\<forall>x. count M x \\<le> 1}", "proof (rule bij_betw_byWitness[where f'=\"set_mset\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{A. finite A}. set_mset (mset_set a) = a\n 2. \\<forall>a'\\<in>{M. \\<forall>x. count M x \\<le> 1}.\n       mset_set (set_mset a') = a'\n 3. mset_set ` {A. finite A} \\<subseteq> {M. \\<forall>x. count M x \\<le> 1}\n 4. set_mset ` {M. \\<forall>x. count M x \\<le> 1} \\<subseteq> {A. finite A}", "show \"\\<forall>A\\<in>{A. finite A}. set_mset (mset_set A) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>A\\<in>{A. finite A}. set_mset (mset_set A) = A", "by auto"], ["proof (state)\nthis:\n  \\<forall>A\\<in>{A. finite A}. set_mset (mset_set A) = A\n\ngoal (3 subgoals):\n 1. \\<forall>a'\\<in>{M. \\<forall>x. count M x \\<le> 1}.\n       mset_set (set_mset a') = a'\n 2. mset_set ` {A. finite A} \\<subseteq> {M. \\<forall>x. count M x \\<le> 1}\n 3. set_mset ` {M. \\<forall>x. count M x \\<le> 1} \\<subseteq> {A. finite A}", "show \"\\<forall>M\\<in>{M. \\<forall>x. count M x \\<le> 1}. mset_set (set_mset M) = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>M\\<in>{M. \\<forall>x. count M x \\<le> 1}.\n       mset_set (set_mset M) = M", "by (auto simp add: mset_set_set_mset')"], ["proof (state)\nthis:\n  \\<forall>M\\<in>{M. \\<forall>x. count M x \\<le> 1}.\n     mset_set (set_mset M) = M\n\ngoal (2 subgoals):\n 1. mset_set ` {A. finite A} \\<subseteq> {M. \\<forall>x. count M x \\<le> 1}\n 2. set_mset ` {M. \\<forall>x. count M x \\<le> 1} \\<subseteq> {A. finite A}", "show \"mset_set ` {A. finite A} \\<subseteq> {M. \\<forall>x. count M x \\<le> 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mset_set ` {A. finite A} \\<subseteq> {M. \\<forall>x. count M x \\<le> 1}", "using nat_le_linear"], ["proof (prove)\nusing this:\n  ?m \\<le> ?n \\<or> ?n \\<le> ?m\n\ngoal (1 subgoal):\n 1. mset_set ` {A. finite A} \\<subseteq> {M. \\<forall>x. count M x \\<le> 1}", "by fastforce"], ["proof (state)\nthis:\n  mset_set ` {A. finite A} \\<subseteq> {M. \\<forall>x. count M x \\<le> 1}\n\ngoal (1 subgoal):\n 1. set_mset ` {M. \\<forall>x. count M x \\<le> 1} \\<subseteq> {A. finite A}", "show \"set_mset ` {M. \\<forall>x. count M x \\<le> 1} \\<subseteq> {A. finite A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_mset ` {M. \\<forall>x. count M x \\<le> 1} \\<subseteq> {A. finite A}", "by auto"], ["proof (state)\nthis:\n  set_mset ` {M. \\<forall>x. count M x \\<le> 1} \\<subseteq> {A. finite A}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bij_betw_mset_set_card:\n  assumes \"finite A\"\n  shows \"bij_betw mset_set {X. X \\<subseteq> A \\<and> card X = k} {M. M \\<subseteq># mset_set A \\<and> size M = k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw mset_set {X. X \\<subseteq> A \\<and> card X = k}\n     {M. M \\<subseteq># mset_set A \\<and> size M = k}", "proof (rule bij_betw_byWitness[where f'=\"set_mset\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{X. X \\<subseteq> A \\<and> card X = k}.\n       set_mset (mset_set a) = a\n 2. \\<forall>a'\\<in>{M. M \\<subseteq># mset_set A \\<and> size M = k}.\n       mset_set (set_mset a') = a'\n 3. mset_set ` {X. X \\<subseteq> A \\<and> card X = k}\n    \\<subseteq> {M. M \\<subseteq># mset_set A \\<and> size M = k}\n 4. set_mset ` {M. M \\<subseteq># mset_set A \\<and> size M = k}\n    \\<subseteq> {X. X \\<subseteq> A \\<and> card X = k}", "show \"\\<forall>X\\<in>{X. X \\<subseteq> A \\<and> card X = k}. set_mset (mset_set X) = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>{X. X \\<subseteq> A \\<and> card X = k}.\n       set_mset (mset_set X) = X", "using \\<open>finite A\\<close> rev_finite_subset[of A]"], ["proof (prove)\nusing this:\n  finite A\n  \\<lbrakk>finite A; ?A \\<subseteq> A\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>{X. X \\<subseteq> A \\<and> card X = k}.\n       set_mset (mset_set X) = X", "by auto"], ["proof (state)\nthis:\n  \\<forall>X\\<in>{X. X \\<subseteq> A \\<and> card X = k}.\n     set_mset (mset_set X) = X\n\ngoal (3 subgoals):\n 1. \\<forall>a'\\<in>{M. M \\<subseteq># mset_set A \\<and> size M = k}.\n       mset_set (set_mset a') = a'\n 2. mset_set ` {X. X \\<subseteq> A \\<and> card X = k}\n    \\<subseteq> {M. M \\<subseteq># mset_set A \\<and> size M = k}\n 3. set_mset ` {M. M \\<subseteq># mset_set A \\<and> size M = k}\n    \\<subseteq> {X. X \\<subseteq> A \\<and> card X = k}", "show \"\\<forall>M\\<in>{M. M \\<subseteq># mset_set A \\<and> size M = k}. mset_set (set_mset M) = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>M\\<in>{M. M \\<subseteq># mset_set A \\<and> size M = k}.\n       mset_set (set_mset M) = M", "by (auto simp add: mset_set_set_mset)"], ["proof (state)\nthis:\n  \\<forall>M\\<in>{M. M \\<subseteq># mset_set A \\<and> size M = k}.\n     mset_set (set_mset M) = M\n\ngoal (2 subgoals):\n 1. mset_set ` {X. X \\<subseteq> A \\<and> card X = k}\n    \\<subseteq> {M. M \\<subseteq># mset_set A \\<and> size M = k}\n 2. set_mset ` {M. M \\<subseteq># mset_set A \\<and> size M = k}\n    \\<subseteq> {X. X \\<subseteq> A \\<and> card X = k}", "show \"mset_set ` {X. X \\<subseteq> A \\<and> card X = k} \\<subseteq> {M. M \\<subseteq># mset_set A \\<and> size M = k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mset_set ` {X. X \\<subseteq> A \\<and> card X = k}\n    \\<subseteq> {M. M \\<subseteq># mset_set A \\<and> size M = k}", "using \\<open>finite A\\<close> rev_finite_subset[of A]"], ["proof (prove)\nusing this:\n  finite A\n  \\<lbrakk>finite A; ?A \\<subseteq> A\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. mset_set ` {X. X \\<subseteq> A \\<and> card X = k}\n    \\<subseteq> {M. M \\<subseteq># mset_set A \\<and> size M = k}", "by (auto simp add: mset_set_subseteq_mset_set)"], ["proof (state)\nthis:\n  mset_set ` {X. X \\<subseteq> A \\<and> card X = k}\n  \\<subseteq> {M. M \\<subseteq># mset_set A \\<and> size M = k}\n\ngoal (1 subgoal):\n 1. set_mset ` {M. M \\<subseteq># mset_set A \\<and> size M = k}\n    \\<subseteq> {X. X \\<subseteq> A \\<and> card X = k}", "show \"set_mset ` {M. M \\<subseteq># mset_set A \\<and> size M = k} \\<subseteq> {X. X \\<subseteq> A \\<and> card X = k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_mset ` {M. M \\<subseteq># mset_set A \\<and> size M = k}\n    \\<subseteq> {X. X \\<subseteq> A \\<and> card X = k}", "using assms mset_subset_eqD card_set_mset"], ["proof (prove)\nusing this:\n  finite A\n  \\<lbrakk>?A \\<subseteq># ?B; ?x \\<in># ?A\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in># ?B\n  ?M \\<subseteq># mset_set ?A \\<Longrightarrow> card (set_mset ?M) = size ?M\n\ngoal (1 subgoal):\n 1. set_mset ` {M. M \\<subseteq># mset_set A \\<and> size M = k}\n    \\<subseteq> {X. X \\<subseteq> A \\<and> card X = k}", "by fastforce"], ["proof (state)\nthis:\n  set_mset ` {M. M \\<subseteq># mset_set A \\<and> size M = k}\n  \\<subseteq> {X. X \\<subseteq> A \\<and> card X = k}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bij_betw_mset_set_card':\n  assumes \"finite A\"\n  shows \"bij_betw mset_set {X. X \\<subseteq> A \\<and> card X = k} {M. set_mset M \\<subseteq> A \\<and> size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw mset_set {X. X \\<subseteq> A \\<and> card X = k}\n     {M. set_mset M \\<subseteq> A \\<and>\n         size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}", "proof (rule bij_betw_byWitness[where f'=\"set_mset\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{X. X \\<subseteq> A \\<and> card X = k}.\n       set_mset (mset_set a) = a\n 2. \\<forall>a'\\<in>{M. set_mset M \\<subseteq> A \\<and>\n                        size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}.\n       mset_set (set_mset a') = a'\n 3. mset_set ` {X. X \\<subseteq> A \\<and> card X = k}\n    \\<subseteq> {M. set_mset M \\<subseteq> A \\<and>\n                    size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}\n 4. set_mset `\n    {M. set_mset M \\<subseteq> A \\<and>\n        size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}\n    \\<subseteq> {X. X \\<subseteq> A \\<and> card X = k}", "show \"\\<forall>X\\<in>{X. X \\<subseteq> A \\<and> card X = k}. set_mset (mset_set X) = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>{X. X \\<subseteq> A \\<and> card X = k}.\n       set_mset (mset_set X) = X", "using \\<open>finite A\\<close> rev_finite_subset[of A]"], ["proof (prove)\nusing this:\n  finite A\n  \\<lbrakk>finite A; ?A \\<subseteq> A\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>{X. X \\<subseteq> A \\<and> card X = k}.\n       set_mset (mset_set X) = X", "by auto"], ["proof (state)\nthis:\n  \\<forall>X\\<in>{X. X \\<subseteq> A \\<and> card X = k}.\n     set_mset (mset_set X) = X\n\ngoal (3 subgoals):\n 1. \\<forall>a'\\<in>{M. set_mset M \\<subseteq> A \\<and>\n                        size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}.\n       mset_set (set_mset a') = a'\n 2. mset_set ` {X. X \\<subseteq> A \\<and> card X = k}\n    \\<subseteq> {M. set_mset M \\<subseteq> A \\<and>\n                    size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}\n 3. set_mset `\n    {M. set_mset M \\<subseteq> A \\<and>\n        size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}\n    \\<subseteq> {X. X \\<subseteq> A \\<and> card X = k}", "show \"\\<forall>M\\<in>{M. set_mset M \\<subseteq> A \\<and> size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}. mset_set (set_mset M) = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>M\\<in>{M. set_mset M \\<subseteq> A \\<and>\n                       size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}.\n       mset_set (set_mset M) = M", "by (auto simp add: mset_set_set_mset')"], ["proof (state)\nthis:\n  \\<forall>M\\<in>{M. set_mset M \\<subseteq> A \\<and>\n                     size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}.\n     mset_set (set_mset M) = M\n\ngoal (2 subgoals):\n 1. mset_set ` {X. X \\<subseteq> A \\<and> card X = k}\n    \\<subseteq> {M. set_mset M \\<subseteq> A \\<and>\n                    size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}\n 2. set_mset `\n    {M. set_mset M \\<subseteq> A \\<and>\n        size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}\n    \\<subseteq> {X. X \\<subseteq> A \\<and> card X = k}", "show \"mset_set ` {X. X \\<subseteq> A \\<and> card X = k} \\<subseteq> {M. set_mset M \\<subseteq> A \\<and> size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mset_set ` {X. X \\<subseteq> A \\<and> card X = k}\n    \\<subseteq> {M. set_mset M \\<subseteq> A \\<and>\n                    size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}", "using \\<open>finite A\\<close> rev_finite_subset[of A]"], ["proof (prove)\nusing this:\n  finite A\n  \\<lbrakk>finite A; ?A \\<subseteq> A\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. mset_set ` {X. X \\<subseteq> A \\<and> card X = k}\n    \\<subseteq> {M. set_mset M \\<subseteq> A \\<and>\n                    size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}", "by (auto simp add: count_mset_set_leq')"], ["proof (state)\nthis:\n  mset_set ` {X. X \\<subseteq> A \\<and> card X = k}\n  \\<subseteq> {M. set_mset M \\<subseteq> A \\<and>\n                  size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}\n\ngoal (1 subgoal):\n 1. set_mset `\n    {M. set_mset M \\<subseteq> A \\<and>\n        size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}\n    \\<subseteq> {X. X \\<subseteq> A \\<and> card X = k}", "show \"set_mset ` {M. set_mset M \\<subseteq> A \\<and> size M = k \\<and> (\\<forall>x. count M x \\<le> 1)} \\<subseteq> {X. X \\<subseteq> A \\<and> card X = k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_mset `\n    {M. set_mset M \\<subseteq> A \\<and>\n        size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}\n    \\<subseteq> {X. X \\<subseteq> A \\<and> card X = k}", "by (auto simp add: card_set_mset')"], ["proof (state)\nthis:\n  set_mset `\n  {M. set_mset M \\<subseteq> A \\<and>\n      size M = k \\<and> (\\<forall>x. count M x \\<le> 1)}\n  \\<subseteq> {X. X \\<subseteq> A \\<and> card X = k}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Cardinality\\<close>"], ["", "lemma card_injective_functions_domain_permutation:\n  assumes \"finite A\" \"finite B\"\n  shows \"card ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B) = card B choose card A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_permutation A B) =\n    card B choose card A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_permutation A B) =\n    card B choose card A", "have \"bij_betw (subset_of A) ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B) {X. X \\<subseteq> B \\<and> card X = card A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (subset_of A)\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_permutation A B)\n     {X. X \\<subseteq> B \\<and> card X = card A}", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. bij_betw (subset_of A)\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_permutation A B)\n     {X. X \\<subseteq> B \\<and> card X = card A}", "by (rule bij_betw_subset_of)"], ["proof (state)\nthis:\n  bij_betw (subset_of A)\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_permutation A B)\n   {X. X \\<subseteq> B \\<and> card X = card A}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_permutation A B) =\n    card B choose card A", "from this"], ["proof (chain)\npicking this:\n  bij_betw (subset_of A)\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_permutation A B)\n   {X. X \\<subseteq> B \\<and> card X = card A}", "have \"card ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_permutation A B) = card {X. X \\<subseteq> B \\<and> card X = card A}\""], ["proof (prove)\nusing this:\n  bij_betw (subset_of A)\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_permutation A B)\n   {X. X \\<subseteq> B \\<and> card X = card A}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_permutation A B) =\n    card {X. X \\<subseteq> B \\<and> card X = card A}", "by (rule bij_betw_same_card)"], ["proof (state)\nthis:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_permutation A B) =\n  card {X. X \\<subseteq> B \\<and> card X = card A}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_permutation A B) =\n    card B choose card A", "also"], ["proof (state)\nthis:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_permutation A B) =\n  card {X. X \\<subseteq> B \\<and> card X = card A}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_permutation A B) =\n    card B choose card A", "have \"card {X. X \\<subseteq> B \\<and> card X = card A} = card B choose card A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {X. X \\<subseteq> B \\<and> card X = card A} = card B choose card A", "using \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite B\n\ngoal (1 subgoal):\n 1. card {X. X \\<subseteq> B \\<and> card X = card A} = card B choose card A", "by (rule n_subsets)"], ["proof (state)\nthis:\n  card {X. X \\<subseteq> B \\<and> card X = card A} = card B choose card A\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_permutation A B) =\n    card B choose card A", "finally"], ["proof (chain)\npicking this:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_permutation A B) =\n  card B choose card A", "show ?thesis"], ["proof (prove)\nusing this:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_permutation A B) =\n  card B choose card A\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_permutation A B) =\n    card B choose card A", "."], ["proof (state)\nthis:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_permutation A B) =\n  card B choose card A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_multiset_only_sets:\n  assumes \"finite A\"\n  shows \"card {M. M \\<subseteq># mset_set A \\<and> size M = k} = card A choose k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {M. M \\<subseteq># mset_set A \\<and> size M = k} = card A choose k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {M. M \\<subseteq># mset_set A \\<and> size M = k} = card A choose k", "have \"bij_betw mset_set {X. X \\<subseteq> A \\<and> card X = k} {M. M \\<subseteq># mset_set A \\<and> size M = k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw mset_set {X. X \\<subseteq> A \\<and> card X = k}\n     {M. M \\<subseteq># mset_set A \\<and> size M = k}", "using \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. bij_betw mset_set {X. X \\<subseteq> A \\<and> card X = k}\n     {M. M \\<subseteq># mset_set A \\<and> size M = k}", "by (rule bij_betw_mset_set_card)"], ["proof (state)\nthis:\n  bij_betw mset_set {X. X \\<subseteq> A \\<and> card X = k}\n   {M. M \\<subseteq># mset_set A \\<and> size M = k}\n\ngoal (1 subgoal):\n 1. card {M. M \\<subseteq># mset_set A \\<and> size M = k} = card A choose k", "from this"], ["proof (chain)\npicking this:\n  bij_betw mset_set {X. X \\<subseteq> A \\<and> card X = k}\n   {M. M \\<subseteq># mset_set A \\<and> size M = k}", "have \"card {M. M \\<subseteq># mset_set A \\<and> size M = k} = card {X. X \\<subseteq> A \\<and> card X = k}\""], ["proof (prove)\nusing this:\n  bij_betw mset_set {X. X \\<subseteq> A \\<and> card X = k}\n   {M. M \\<subseteq># mset_set A \\<and> size M = k}\n\ngoal (1 subgoal):\n 1. card {M. M \\<subseteq># mset_set A \\<and> size M = k} =\n    card {X. X \\<subseteq> A \\<and> card X = k}", "by (simp add: bij_betw_same_card)"], ["proof (state)\nthis:\n  card {M. M \\<subseteq># mset_set A \\<and> size M = k} =\n  card {X. X \\<subseteq> A \\<and> card X = k}\n\ngoal (1 subgoal):\n 1. card {M. M \\<subseteq># mset_set A \\<and> size M = k} = card A choose k", "also"], ["proof (state)\nthis:\n  card {M. M \\<subseteq># mset_set A \\<and> size M = k} =\n  card {X. X \\<subseteq> A \\<and> card X = k}\n\ngoal (1 subgoal):\n 1. card {M. M \\<subseteq># mset_set A \\<and> size M = k} = card A choose k", "have \" card {X. X \\<subseteq> A \\<and> card X = k} = card A choose k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {X. X \\<subseteq> A \\<and> card X = k} = card A choose k", "using \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. card {X. X \\<subseteq> A \\<and> card X = k} = card A choose k", "by (rule n_subsets)"], ["proof (state)\nthis:\n  card {X. X \\<subseteq> A \\<and> card X = k} = card A choose k\n\ngoal (1 subgoal):\n 1. card {M. M \\<subseteq># mset_set A \\<and> size M = k} = card A choose k", "finally"], ["proof (chain)\npicking this:\n  card {M. M \\<subseteq># mset_set A \\<and> size M = k} = card A choose k", "show ?thesis"], ["proof (prove)\nusing this:\n  card {M. M \\<subseteq># mset_set A \\<and> size M = k} = card A choose k\n\ngoal (1 subgoal):\n 1. card {M. M \\<subseteq># mset_set A \\<and> size M = k} = card A choose k", "."], ["proof (state)\nthis:\n  card {M. M \\<subseteq># mset_set A \\<and> size M = k} = card A choose k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_multiset_only_sets':\n  assumes \"finite A\"\n  shows \"card {M. set_mset M \\<subseteq> A \\<and> size M = k \\<and> (\\<forall>x. count M x \\<le> 1)} = card A choose k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {M. set_mset M \\<subseteq> A \\<and>\n         size M = k \\<and> (\\<forall>x. count M x \\<le> 1)} =\n    card A choose k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     {M. set_mset M \\<subseteq> A \\<and>\n         size M = k \\<and> (\\<forall>x. count M x \\<le> 1)} =\n    card A choose k", "from \\<open>finite A\\<close>"], ["proof (chain)\npicking this:\n  finite A", "have \"{M. set_mset M \\<subseteq> A \\<and> size M = k \\<and> (\\<forall>x. count M x \\<le> 1)} =\n    {M. M \\<subseteq># mset_set A \\<and> size M = k}\""], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. {M. set_mset M \\<subseteq> A \\<and>\n        size M = k \\<and> (\\<forall>x. count M x \\<le> 1)} =\n    {M. M \\<subseteq># mset_set A \\<and> size M = k}", "using msubset_mset_set_iff"], ["proof (prove)\nusing this:\n  finite A\n  finite ?A \\<Longrightarrow>\n  (set_mset ?M \\<subseteq> ?A \\<and> (\\<forall>x. count ?M x \\<le> 1)) =\n  (?M \\<subseteq># mset_set ?A)\n\ngoal (1 subgoal):\n 1. {M. set_mset M \\<subseteq> A \\<and>\n        size M = k \\<and> (\\<forall>x. count M x \\<le> 1)} =\n    {M. M \\<subseteq># mset_set A \\<and> size M = k}", "by auto"], ["proof (state)\nthis:\n  {M. set_mset M \\<subseteq> A \\<and>\n      size M = k \\<and> (\\<forall>x. count M x \\<le> 1)} =\n  {M. M \\<subseteq># mset_set A \\<and> size M = k}\n\ngoal (1 subgoal):\n 1. card\n     {M. set_mset M \\<subseteq> A \\<and>\n         size M = k \\<and> (\\<forall>x. count M x \\<le> 1)} =\n    card A choose k", "from this \\<open>finite A\\<close> card_multiset_only_sets"], ["proof (chain)\npicking this:\n  {M. set_mset M \\<subseteq> A \\<and>\n      size M = k \\<and> (\\<forall>x. count M x \\<le> 1)} =\n  {M. M \\<subseteq># mset_set A \\<and> size M = k}\n  finite A\n  finite ?A \\<Longrightarrow>\n  card {M. M \\<subseteq># mset_set ?A \\<and> size M = ?k} =\n  card ?A choose ?k", "show ?thesis"], ["proof (prove)\nusing this:\n  {M. set_mset M \\<subseteq> A \\<and>\n      size M = k \\<and> (\\<forall>x. count M x \\<le> 1)} =\n  {M. M \\<subseteq># mset_set A \\<and> size M = k}\n  finite A\n  finite ?A \\<Longrightarrow>\n  card {M. M \\<subseteq># mset_set ?A \\<and> size M = ?k} =\n  card ?A choose ?k\n\ngoal (1 subgoal):\n 1. card\n     {M. set_mset M \\<subseteq> A \\<and>\n         size M = k \\<and> (\\<forall>x. count M x \\<le> 1)} =\n    card A choose k", "by simp"], ["proof (state)\nthis:\n  card\n   {M. set_mset M \\<subseteq> A \\<and>\n       size M = k \\<and> (\\<forall>x. count M x \\<le> 1)} =\n  card A choose k\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}