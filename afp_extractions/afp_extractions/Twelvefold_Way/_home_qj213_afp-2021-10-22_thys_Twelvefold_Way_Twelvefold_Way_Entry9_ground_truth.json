{"file_name": "/home/qj213/afp-2021-10-22/thys/Twelvefold_Way/Twelvefold_Way_Entry9.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Twelvefold_Way", "problem_names": ["lemma surjective_on_implies_card_eq:\n  assumes \"f ` A = B\"\n  shows \"card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B\"", "lemma card_eq_implies_surjective_on:\n  assumes \"finite B\" \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n  assumes card_eq: \"card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B\"\n  shows \"f ` A = B\"", "lemma card_partitions_of:\n  assumes \"F \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B\"\n  assumes \"univ (\\<lambda>f. f ` A = B) F\"\n  shows \"card (partitions_of A B F) = card B\"", "lemma functions_of_is_surj_on:\n  assumes \"finite A\" \"finite B\"\n  assumes \"partition_on A P\" \"card P = card B\"\n  shows \"univ (\\<lambda>f. f ` A = B) (functions_of P A B)\"", "lemma bij_betw_partitions_of:\n  assumes \"finite A\" \"finite B\"\n  shows \"bij_betw (partitions_of A B) ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B) {P. partition_on A P \\<and> card P = card B}\"", "lemma card_surjective_functions_range_permutation:\n  assumes \"finite A\" \"finite B\"\n  shows \"card ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B) = Stirling (card A) (card B)\""], "translations": [["", "lemma surjective_on_implies_card_eq:\n  assumes \"f ` A = B\"\n  shows \"card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B", "from \\<open>f ` A = B\\<close>"], ["proof (chain)\npicking this:\n  f ` A = B", "have \"{} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\""], ["proof (prove)\nusing this:\n  f ` A = B\n\ngoal (1 subgoal):\n 1. {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "by auto"], ["proof (state)\nthis:\n  {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B", "from \\<open>f ` A = B\\<close>"], ["proof (chain)\npicking this:\n  f ` A = B", "have \"inj_on (\\<lambda>b. {x \\<in> A. f x = b}) B\""], ["proof (prove)\nusing this:\n  f ` A = B\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>b. {x \\<in> A. f x = b}) B", "by (fastforce intro: inj_onI)"], ["proof (state)\nthis:\n  inj_on (\\<lambda>b. {x \\<in> A. f x = b}) B\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B", "have \"card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) =\n    card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B)", "using \\<open>{} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\\<close>"], ["proof (prove)\nusing this:\n  {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) =\n    card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B)", "by simp"], ["proof (state)\nthis:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) =\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B)\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B", "also"], ["proof (state)\nthis:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) =\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B)\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B", "have \"\\<dots> = card B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B) = card B", "using \\<open>inj_on (\\<lambda>b. {x \\<in> A. f x = b}) B\\<close>"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>b. {x \\<in> A. f x = b}) B\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B) = card B", "by (rule card_image)"], ["proof (state)\nthis:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B) = card B\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B", "finally"], ["proof (chain)\npicking this:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B", "show ?thesis"], ["proof (prove)\nusing this:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B", "."], ["proof (state)\nthis:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_eq_implies_surjective_on:\n  assumes \"finite B\" \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n  assumes card_eq: \"card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B\"\n  shows \"f ` A = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` A = B", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. f ` A \\<subseteq> B\n 2. B \\<subseteq> f ` A", "from \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B", "show \"f ` A \\<subseteq> B\""], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. f ` A \\<subseteq> B", "by auto"], ["proof (state)\nthis:\n  f ` A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. B \\<subseteq> f ` A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<subseteq> f ` A", "show \"B \\<subseteq> f ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> f ` A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> f ` A", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> f ` A", "assume \"x \\<in> B\""], ["proof (state)\nthis:\n  x \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> f ` A", "have \"{} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "proof (cases \"card B \\<ge> 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 1 \\<le> card B \\<Longrightarrow>\n    {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n 2. \\<not> 1 \\<le> card B \\<Longrightarrow>\n    {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "assume \"\\<not> card B \\<ge> 1\""], ["proof (state)\nthis:\n  \\<not> 1 \\<le> card B\n\ngoal (2 subgoals):\n 1. 1 \\<le> card B \\<Longrightarrow>\n    {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n 2. \\<not> 1 \\<le> card B \\<Longrightarrow>\n    {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "from this"], ["proof (chain)\npicking this:\n  \\<not> 1 \\<le> card B", "have \"card B = 0\""], ["proof (prove)\nusing this:\n  \\<not> 1 \\<le> card B\n\ngoal (1 subgoal):\n 1. card B = 0", "by simp"], ["proof (state)\nthis:\n  card B = 0\n\ngoal (2 subgoals):\n 1. 1 \\<le> card B \\<Longrightarrow>\n    {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n 2. \\<not> 1 \\<le> card B \\<Longrightarrow>\n    {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "from this \\<open>finite B\\<close>"], ["proof (chain)\npicking this:\n  card B = 0\n  finite B", "have \"B = {}\""], ["proof (prove)\nusing this:\n  card B = 0\n  finite B\n\ngoal (1 subgoal):\n 1. B = {}", "by simp"], ["proof (state)\nthis:\n  B = {}\n\ngoal (2 subgoals):\n 1. 1 \\<le> card B \\<Longrightarrow>\n    {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n 2. \\<not> 1 \\<le> card B \\<Longrightarrow>\n    {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "from this"], ["proof (chain)\npicking this:\n  B = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  B = {}\n\ngoal (1 subgoal):\n 1. {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "by simp"], ["proof (state)\nthis:\n  {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n\ngoal (1 subgoal):\n 1. 1 \\<le> card B \\<Longrightarrow>\n    {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<le> card B \\<Longrightarrow>\n    {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "assume \"card B \\<ge> 1\""], ["proof (state)\nthis:\n  1 \\<le> card B\n\ngoal (1 subgoal):\n 1. 1 \\<le> card B \\<Longrightarrow>\n    {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) `\n                       B \\<Longrightarrow>\n    False", "assume \"\\<not> {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\""], ["proof (state)\nthis:\n  \\<not> {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n\ngoal (1 subgoal):\n 1. \\<not> {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) `\n                       B \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  \\<not> {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "have \"{} \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\""], ["proof (prove)\nusing this:\n  \\<not> {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n\ngoal (1 subgoal):\n 1. {} \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B", "by simp"], ["proof (state)\nthis:\n  {} \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n\ngoal (1 subgoal):\n 1. \\<not> {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) `\n                       B \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  {} \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n\ngoal (1 subgoal):\n 1. \\<not> {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) `\n                       B \\<Longrightarrow>\n    False", "have \"card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B) \\<le> card B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B) \\<le> card B", "using \\<open>finite B\\<close> card_image_le"], ["proof (prove)\nusing this:\n  finite B\n  finite ?A \\<Longrightarrow> card (?f ` ?A) \\<le> card ?A\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B) \\<le> card B", "by blast"], ["proof (state)\nthis:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B) \\<le> card B\n\ngoal (1 subgoal):\n 1. \\<not> {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) `\n                       B \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B) \\<le> card B\n\ngoal (1 subgoal):\n 1. \\<not> {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) `\n                       B \\<Longrightarrow>\n    False", "have \"finite ((\\<lambda>b. {x \\<in> A. f x = b}) ` B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ((\\<lambda>b. {x \\<in> A. f x = b}) ` B)", "using \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite B\n\ngoal (1 subgoal):\n 1. finite ((\\<lambda>b. {x \\<in> A. f x = b}) ` B)", "by auto"], ["proof (state)\nthis:\n  finite ((\\<lambda>b. {x \\<in> A. f x = b}) ` B)\n\ngoal (1 subgoal):\n 1. \\<not> {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) `\n                       B \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  {} \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B) \\<le> card B\n  finite ((\\<lambda>b. {x \\<in> A. f x = b}) ` B)", "have \"card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) \\<le> card B - 1\""], ["proof (prove)\nusing this:\n  {} \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B) \\<le> card B\n  finite ((\\<lambda>b. {x \\<in> A. f x = b}) ` B)\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) \\<le> card B - 1", "by (auto simp add: card_Diff_singleton)"], ["proof (state)\nthis:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) \\<le> card B - 1\n\ngoal (1 subgoal):\n 1. \\<not> {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) `\n                       B \\<Longrightarrow>\n    False", "from this card_eq \\<open>card B \\<ge> 1\\<close>"], ["proof (chain)\npicking this:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) \\<le> card B - 1\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B\n  1 \\<le> card B", "show False"], ["proof (prove)\nusing this:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) \\<le> card B - 1\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B\n  1 \\<le> card B\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> f ` A", "from this \\<open>x \\<in> B\\<close>"], ["proof (chain)\npicking this:\n  {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n  x \\<in> B", "show \"x \\<in> f ` A\""], ["proof (prove)\nusing this:\n  {} \\<notin> (\\<lambda>b. {x \\<in> A. f x = b}) ` B\n  x \\<in> B\n\ngoal (1 subgoal):\n 1. x \\<in> f ` A", "by force"], ["proof (state)\nthis:\n  x \\<in> f ` A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B \\<subseteq> f ` A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_partitions_of:\n  assumes \"F \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B\"\n  assumes \"univ (\\<lambda>f. f ` A = B) F\"\n  shows \"card (partitions_of A B F) = card B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (partitions_of A B F) = card B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (partitions_of A B F) = card B", "from \\<open>F \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B\\<close>"], ["proof (chain)\npicking this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B", "obtain f where \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n    and F_eq: \"F = range_permutation A B `` {f}\""], ["proof (prove)\nusing this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E B;\n         F = range_permutation A B `` {f}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using quotientE"], ["proof (prove)\nusing this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B\n  \\<lbrakk>?X \\<in> ?A // ?r;\n   \\<And>x.\n      \\<lbrakk>?X = ?r `` {x}; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E B;\n         F = range_permutation A B `` {f}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  F = range_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. card (partitions_of A B F) = card B", "from this \\<open>univ (\\<lambda>f. f ` A = B) F\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  F = range_permutation A B `` {f}\n  univ (\\<lambda>f. f ` A = B) F", "have \"f ` A = B\""], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  F = range_permutation A B `` {f}\n  univ (\\<lambda>f. f ` A = B) F\n\ngoal (1 subgoal):\n 1. f ` A = B", "using univ_commute'[OF equiv_range_permutation surj_on_respects_range_permutation \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>]"], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  F = range_permutation A B `` {f}\n  univ (\\<lambda>f. f ` A = B) F\n  univ (\\<lambda>f. f ` A = B) (range_permutation A B `` {f}) = (f ` A = B)\n\ngoal (1 subgoal):\n 1. f ` A = B", "by simp"], ["proof (state)\nthis:\n  f ` A = B\n\ngoal (1 subgoal):\n 1. card (partitions_of A B F) = card B", "have \"card (partitions_of A B F) = card (univ (\\<lambda>f. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (partitions_of A B F) =\n    card\n     (univ (\\<lambda>f. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) F)", "unfolding partitions_of_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     (univ (\\<lambda>f. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) F) =\n    card\n     (univ (\\<lambda>f. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) F)", ".."], ["proof (state)\nthis:\n  card (partitions_of A B F) =\n  card (univ (\\<lambda>f. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) F)\n\ngoal (1 subgoal):\n 1. card (partitions_of A B F) = card B", "also"], ["proof (state)\nthis:\n  card (partitions_of A B F) =\n  card (univ (\\<lambda>f. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) F)\n\ngoal (1 subgoal):\n 1. card (partitions_of A B F) = card B", "have \"\\<dots> = card (univ (\\<lambda>f. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) (range_permutation A B `` {f}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     (univ (\\<lambda>f. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) F) =\n    card\n     (univ (\\<lambda>f. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n       (range_permutation A B `` {f}))", "unfolding F_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     (univ (\\<lambda>f. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n       (range_permutation A B `` {f})) =\n    card\n     (univ (\\<lambda>f. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n       (range_permutation A B `` {f}))", ".."], ["proof (state)\nthis:\n  card\n   (univ (\\<lambda>f. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) F) =\n  card\n   (univ (\\<lambda>f. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n     (range_permutation A B `` {f}))\n\ngoal (1 subgoal):\n 1. card (partitions_of A B F) = card B", "also"], ["proof (state)\nthis:\n  card\n   (univ (\\<lambda>f. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) F) =\n  card\n   (univ (\\<lambda>f. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n     (range_permutation A B `` {f}))\n\ngoal (1 subgoal):\n 1. card (partitions_of A B F) = card B", "have \"\\<dots> = card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     (univ (\\<lambda>f. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n       (range_permutation A B `` {f})) =\n    card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})", "using equiv_range_permutation domain_partitions_respects_range_permutation \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (range_permutation ?A ?B)\n  (\\<lambda>f. (\\<lambda>b. {x \\<in> ?A. f x = b}) ` ?B - {{}}) respects\n  range_permutation ?A ?B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. card\n     (univ (\\<lambda>f. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n       (range_permutation A B `` {f})) =\n    card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})", "by (subst univ_commute') auto"], ["proof (state)\nthis:\n  card\n   (univ (\\<lambda>f. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n     (range_permutation A B `` {f})) =\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n\ngoal (1 subgoal):\n 1. card (partitions_of A B F) = card B", "also"], ["proof (state)\nthis:\n  card\n   (univ (\\<lambda>f. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n     (range_permutation A B `` {f})) =\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n\ngoal (1 subgoal):\n 1. card (partitions_of A B F) = card B", "from \\<open>f ` A = B\\<close>"], ["proof (chain)\npicking this:\n  f ` A = B", "have \"\\<dots> = card B\""], ["proof (prove)\nusing this:\n  f ` A = B\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B", "using surjective_on_implies_card_eq"], ["proof (prove)\nusing this:\n  f ` A = B\n  ?f ` ?A = ?B \\<Longrightarrow>\n  card ((\\<lambda>b. {x \\<in> ?A. ?f x = b}) ` ?B - {{}}) = card ?B\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B", "by auto"], ["proof (state)\nthis:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B\n\ngoal (1 subgoal):\n 1. card (partitions_of A B F) = card B", "finally"], ["proof (chain)\npicking this:\n  card (partitions_of A B F) = card B", "show ?thesis"], ["proof (prove)\nusing this:\n  card (partitions_of A B F) = card B\n\ngoal (1 subgoal):\n 1. card (partitions_of A B F) = card B", "."], ["proof (state)\nthis:\n  card (partitions_of A B F) = card B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma functions_of_is_surj_on:\n  assumes \"finite A\" \"finite B\"\n  assumes \"partition_on A P\" \"card P = card B\"\n  shows \"univ (\\<lambda>f. f ` A = B) (functions_of P A B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (functions_of P A B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (functions_of P A B)", "have \"functions_of P A B \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of P A B\n    \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B", "using functions_of \\<open>finite A\\<close> \\<open>finite B\\<close> \\<open>partition_on A P\\<close> \\<open>card P = card B\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; finite ?B; partition_on ?A ?P;\n   card ?P \\<le> card ?B\\<rbrakk>\n  \\<Longrightarrow> functions_of ?P ?A ?B\n                    \\<in> (?A \\<rightarrow>\\<^sub>E ?B) //\n                          range_permutation ?A ?B\n  finite A\n  finite B\n  partition_on A P\n  card P = card B\n\ngoal (1 subgoal):\n 1. functions_of P A B\n    \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B", "by fastforce"], ["proof (state)\nthis:\n  functions_of P A B\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (functions_of P A B)", "from this"], ["proof (chain)\npicking this:\n  functions_of P A B\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B", "obtain f where eq_f: \"functions_of P A B = range_permutation A B `` {f}\" and \"f \\<in> A \\<rightarrow>\\<^sub>E B\""], ["proof (prove)\nusing this:\n  functions_of P A B\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>functions_of P A B = range_permutation A B `` {f};\n         f \\<in> A \\<rightarrow>\\<^sub>E B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using quotientE"], ["proof (prove)\nusing this:\n  functions_of P A B\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B\n  \\<lbrakk>?X \\<in> ?A // ?r;\n   \\<And>x.\n      \\<lbrakk>?X = ?r `` {x}; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>functions_of P A B = range_permutation A B `` {f};\n         f \\<in> A \\<rightarrow>\\<^sub>E B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  functions_of P A B = range_permutation A B `` {f}\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (functions_of P A B)", "from eq_f"], ["proof (chain)\npicking this:\n  functions_of P A B = range_permutation A B `` {f}", "have \"f \\<in> functions_of P A B\""], ["proof (prove)\nusing this:\n  functions_of P A B = range_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. f \\<in> functions_of P A B", "using \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close> equiv_range_permutation equiv_class_self"], ["proof (prove)\nusing this:\n  functions_of P A B = range_permutation A B `` {f}\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (range_permutation ?A ?B)\n  \\<lbrakk>equiv ?A ?r; ?a \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> ?r `` {?a}\n\ngoal (1 subgoal):\n 1. f \\<in> functions_of P A B", "by fastforce"], ["proof (state)\nthis:\n  f \\<in> functions_of P A B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (functions_of P A B)", "from \\<open>f \\<in> functions_of P A B\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> functions_of P A B", "have eq: \"(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P\""], ["proof (prove)\nusing this:\n  f \\<in> functions_of P A B\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P", "unfolding functions_of_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B.\n           (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P}\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (functions_of P A B)", "from this"], ["proof (chain)\npicking this:\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P", "have \"card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B\""], ["proof (prove)\nusing this:\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B", "using \\<open>card P = card B\\<close>"], ["proof (prove)\nusing this:\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}} = P\n  card P = card B\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B", "by simp"], ["proof (state)\nthis:\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (functions_of P A B)", "from \\<open>finite B\\<close> \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close> this"], ["proof (chain)\npicking this:\n  finite B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B", "have \"f ` A = B\""], ["proof (prove)\nusing this:\n  finite B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B\n\ngoal (1 subgoal):\n 1. f ` A = B", "using card_eq_implies_surjective_on"], ["proof (prove)\nusing this:\n  finite B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card B\n  \\<lbrakk>finite ?B; ?f \\<in> ?A \\<rightarrow>\\<^sub>E ?B;\n   card ((\\<lambda>b. {x \\<in> ?A. ?f x = b}) ` ?B - {{}}) =\n   card ?B\\<rbrakk>\n  \\<Longrightarrow> ?f ` ?A = ?B\n\ngoal (1 subgoal):\n 1. f ` A = B", "by blast"], ["proof (state)\nthis:\n  f ` A = B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (functions_of P A B)", "from this"], ["proof (chain)\npicking this:\n  f ` A = B", "show ?thesis"], ["proof (prove)\nusing this:\n  f ` A = B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (functions_of P A B)", "unfolding eq_f"], ["proof (prove)\nusing this:\n  f ` A = B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (range_permutation A B `` {f})", "using equiv_range_permutation surj_on_respects_range_permutation \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  f ` A = B\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (range_permutation ?A ?B)\n  (\\<lambda>f. f ` ?A = ?B) respects range_permutation ?A ?B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (range_permutation A B `` {f})", "by (subst univ_commute') assumption+"], ["proof (state)\nthis:\n  univ (\\<lambda>f. f ` A = B) (functions_of P A B)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Bijections\\<close>"], ["", "lemma bij_betw_partitions_of:\n  assumes \"finite A\" \"finite B\"\n  shows \"bij_betw (partitions_of A B) ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B) {P. partition_on A P \\<and> card P = card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (partitions_of A B)\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      range_permutation A B)\n     {P. partition_on A P \\<and> card P = card B}", "proof (rule bij_betw_byWitness[where f'=\"\\<lambda>P. functions_of P A B\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                   range_permutation A B.\n       functions_of (partitions_of A B a) A B = a\n 2. \\<forall>a'\\<in>{P. partition_on A P \\<and> card P = card B}.\n       partitions_of A B (functions_of a' A B) = a'\n 3. partitions_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B\n    \\<subseteq> {P. partition_on A P \\<and> card P = card B}\n 4. (\\<lambda>P. functions_of P A B) `\n    {P. partition_on A P \\<and> card P = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                range_permutation A B", "have quotient_eq: \"{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B = {F \\<in> ((A \\<rightarrow>\\<^sub>E B) // range_permutation A B). univ (\\<lambda>f. f ` A = B) F}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    range_permutation A B =\n    {F \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B.\n     univ (\\<lambda>f. f ` A = B) F}", "using equiv_range_permutation[of A B] surj_on_respects_range_permutation[of A B]"], ["proof (prove)\nusing this:\n  equiv (A \\<rightarrow>\\<^sub>E B) (range_permutation A B)\n  (\\<lambda>f. f ` A = B) respects range_permutation A B\n\ngoal (1 subgoal):\n 1. {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    range_permutation A B =\n    {F \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B.\n     univ (\\<lambda>f. f ` A = B) F}", "by (simp only: univ_preserves_predicate)"], ["proof (state)\nthis:\n  {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B =\n  {F \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B.\n   univ (\\<lambda>f. f ` A = B) F}\n\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                   range_permutation A B.\n       functions_of (partitions_of A B a) A B = a\n 2. \\<forall>a'\\<in>{P. partition_on A P \\<and> card P = card B}.\n       partitions_of A B (functions_of a' A B) = a'\n 3. partitions_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B\n    \\<subseteq> {P. partition_on A P \\<and> card P = card B}\n 4. (\\<lambda>P. functions_of P A B) `\n    {P. partition_on A P \\<and> card P = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                range_permutation A B", "show \"\\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B. functions_of (partitions_of A B F) A B = F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                   range_permutation A B.\n       functions_of (partitions_of A B F) A B = F", "using \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite B\n\ngoal (1 subgoal):\n 1. \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                   range_permutation A B.\n       functions_of (partitions_of A B F) A B = F", "by (simp add: functions_of_partitions_of quotient_eq)"], ["proof (state)\nthis:\n  \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                 range_permutation A B.\n     functions_of (partitions_of A B F) A B = F\n\ngoal (3 subgoals):\n 1. \\<forall>a'\\<in>{P. partition_on A P \\<and> card P = card B}.\n       partitions_of A B (functions_of a' A B) = a'\n 2. partitions_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B\n    \\<subseteq> {P. partition_on A P \\<and> card P = card B}\n 3. (\\<lambda>P. functions_of P A B) `\n    {P. partition_on A P \\<and> card P = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                range_permutation A B", "show \"\\<forall>P\\<in>{P. partition_on A P \\<and> card P = card B}. partitions_of A B (functions_of P A B) = P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P\\<in>{P. partition_on A P \\<and> card P = card B}.\n       partitions_of A B (functions_of P A B) = P", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. \\<forall>P\\<in>{P. partition_on A P \\<and> card P = card B}.\n       partitions_of A B (functions_of P A B) = P", "by (auto simp add: partitions_of_functions_of)"], ["proof (state)\nthis:\n  \\<forall>P\\<in>{P. partition_on A P \\<and> card P = card B}.\n     partitions_of A B (functions_of P A B) = P\n\ngoal (2 subgoals):\n 1. partitions_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B\n    \\<subseteq> {P. partition_on A P \\<and> card P = card B}\n 2. (\\<lambda>P. functions_of P A B) `\n    {P. partition_on A P \\<and> card P = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                range_permutation A B", "show \"partitions_of A B ` ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B) \\<subseteq> {P. partition_on A P \\<and> card P = card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partitions_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B\n    \\<subseteq> {P. partition_on A P \\<and> card P = card B}", "using \\<open>finite B\\<close> quotient_eq card_partitions_of partitions_of"], ["proof (prove)\nusing this:\n  finite B\n  {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B =\n  {F \\<in> (A \\<rightarrow>\\<^sub>E B) // range_permutation A B.\n   univ (\\<lambda>f. f ` A = B) F}\n  \\<lbrakk>?F \\<in> (?A \\<rightarrow>\\<^sub>E ?B) //\n                    range_permutation ?A ?B;\n   univ (\\<lambda>f. f ` ?A = ?B) ?F\\<rbrakk>\n  \\<Longrightarrow> card (partitions_of ?A ?B ?F) = card ?B\n  \\<lbrakk>finite ?B;\n   ?F \\<in> (?A \\<rightarrow>\\<^sub>E ?B) //\n            range_permutation ?A ?B\\<rbrakk>\n  \\<Longrightarrow> card (partitions_of ?A ?B ?F) \\<le> card ?B\n  \\<lbrakk>finite ?B;\n   ?F \\<in> (?A \\<rightarrow>\\<^sub>E ?B) //\n            range_permutation ?A ?B\\<rbrakk>\n  \\<Longrightarrow> partition_on ?A (partitions_of ?A ?B ?F)\n\ngoal (1 subgoal):\n 1. partitions_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B\n    \\<subseteq> {P. partition_on A P \\<and> card P = card B}", "by fastforce"], ["proof (state)\nthis:\n  partitions_of A B `\n  {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B\n  \\<subseteq> {P. partition_on A P \\<and> card P = card B}\n\ngoal (1 subgoal):\n 1. (\\<lambda>P. functions_of P A B) `\n    {P. partition_on A P \\<and> card P = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                range_permutation A B", "show \"(\\<lambda>P. functions_of P A B) ` {P. partition_on A P \\<and> card P = card B} \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>P. functions_of P A B) `\n    {P. partition_on A P \\<and> card P = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                range_permutation A B", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. (\\<lambda>P. functions_of P A B) `\n    {P. partition_on A P \\<and> card P = card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                range_permutation A B", "by (auto simp add: quotient_eq intro: functions_of functions_of_is_surj_on)"], ["proof (state)\nthis:\n  (\\<lambda>P. functions_of P A B) `\n  {P. partition_on A P \\<and> card P = card B}\n  \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n              range_permutation A B\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Cardinality\\<close>"], ["", "lemma card_surjective_functions_range_permutation:\n  assumes \"finite A\" \"finite B\"\n  shows \"card ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B) = Stirling (card A) (card B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      range_permutation A B) =\n    Stirling (card A) (card B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      range_permutation A B) =\n    Stirling (card A) (card B)", "have \"bij_betw (partitions_of A B) ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B) {P. partition_on A P \\<and> card P = card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (partitions_of A B)\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      range_permutation A B)\n     {P. partition_on A P \\<and> card P = card B}", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. bij_betw (partitions_of A B)\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      range_permutation A B)\n     {P. partition_on A P \\<and> card P = card B}", "by (rule bij_betw_partitions_of)"], ["proof (state)\nthis:\n  bij_betw (partitions_of A B)\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B)\n   {P. partition_on A P \\<and> card P = card B}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      range_permutation A B) =\n    Stirling (card A) (card B)", "from this"], ["proof (chain)\npicking this:\n  bij_betw (partitions_of A B)\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B)\n   {P. partition_on A P \\<and> card P = card B}", "have \"card ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B) = card {P. partition_on A P \\<and> card P = card B}\""], ["proof (prove)\nusing this:\n  bij_betw (partitions_of A B)\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // range_permutation A B)\n   {P. partition_on A P \\<and> card P = card B}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      range_permutation A B) =\n    card {P. partition_on A P \\<and> card P = card B}", "by (rule bij_betw_same_card)"], ["proof (state)\nthis:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    range_permutation A B) =\n  card {P. partition_on A P \\<and> card P = card B}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      range_permutation A B) =\n    Stirling (card A) (card B)", "also"], ["proof (state)\nthis:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    range_permutation A B) =\n  card {P. partition_on A P \\<and> card P = card B}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      range_permutation A B) =\n    Stirling (card A) (card B)", "have \"card {P. partition_on A P \\<and> card P = card B} = Stirling (card A) (card B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {P. partition_on A P \\<and> card P = card B} =\n    Stirling (card A) (card B)", "using \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. card {P. partition_on A P \\<and> card P = card B} =\n    Stirling (card A) (card B)", "by (rule card_partition_on)"], ["proof (state)\nthis:\n  card {P. partition_on A P \\<and> card P = card B} =\n  Stirling (card A) (card B)\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      range_permutation A B) =\n    Stirling (card A) (card B)", "finally"], ["proof (chain)\npicking this:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    range_permutation A B) =\n  Stirling (card A) (card B)", "show ?thesis"], ["proof (prove)\nusing this:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    range_permutation A B) =\n  Stirling (card A) (card B)\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      range_permutation A B) =\n    Stirling (card A) (card B)", "."], ["proof (state)\nthis:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    range_permutation A B) =\n  Stirling (card A) (card B)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}