{"file_name": "/home/qj213/afp-2021-10-22/thys/Twelvefold_Way/Twelvefold_Way_Entry2.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Twelvefold_Way", "problem_names": ["lemma inj_on_implies_distinct:\n  assumes \"bij_betw enum {0..<card A} A\"\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n  assumes \"inj_on f A\"\n  shows \"distinct (sequence_of A enum f)\"", "lemma distinct_implies_inj_on:\n  assumes \"bij_betw enum {0..<card A} A\"\n  assumes \"length xs = card A\"\n  assumes \"distinct xs\"\n  shows \"inj_on (function_of A enum xs) A\"", "lemma image_sequence_of_inj:\n  assumes \"bij_betw enum {0..<card A} A\"\n  shows \"sequence_of A enum ` {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} \\<subseteq> {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\"", "lemma image_function_of_distinct:\n  assumes \"bij_betw enum {0..<card A} A\"\n  shows \"function_of A enum ` {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\"", "lemma bij_betw_sequence_of:\n  assumes \"bij_betw enum {0..<card A} A\"\n  shows \"bij_betw (sequence_of A enum) {f. f \\<in> A \\<rightarrow>\\<^sub>E B \\<and> inj_on f A} {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\"", "lemma bij_betw_function_of:\n  assumes \"bij_betw enum {0..<card A} A\"\n  shows \"bij_betw (function_of A enum) {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\"", "lemma\n  assumes \"finite A\" \"finite B\" \"card A \\<le> card B\"\n  shows \"card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} = \\<Prod>{card B - card A + 1..card B}\"", "lemma card_sequences:\n  assumes \"finite A\" \"finite B\" \"card A \\<le> card B\"\n  shows \"card {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} = fact (card B) div fact (card B - card A)\""], "translations": [["", "lemma inj_on_implies_distinct:\n  assumes \"bij_betw enum {0..<card A} A\"\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n  assumes \"inj_on f A\"\n  shows \"distinct (sequence_of A enum f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (sequence_of A enum f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. distinct (sequence_of A enum f)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. distinct (sequence_of A enum f)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. distinct (sequence_of A enum f)", "assume bounds: \"i < length (sequence_of A enum f)\" \"j < length (sequence_of A enum f)\""], ["proof (state)\nthis:\n  i < length (sequence_of A enum f)\n  j < length (sequence_of A enum f)\n\ngoal (1 subgoal):\n 1. distinct (sequence_of A enum f)", "assume \"i \\<noteq> j\""], ["proof (state)\nthis:\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. distinct (sequence_of A enum f)", "from bounds assms(1, 2)"], ["proof (chain)\npicking this:\n  i < length (sequence_of A enum f)\n  j < length (sequence_of A enum f)\n  bij_betw enum {0..<card A} A\n  f \\<in> A \\<rightarrow>\\<^sub>E B", "have bounds': \"i < card A\" \"j < card A\""], ["proof (prove)\nusing this:\n  i < length (sequence_of A enum f)\n  j < length (sequence_of A enum f)\n  bij_betw enum {0..<card A} A\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. i < card A &&& j < card A", "using length_sequence_of"], ["proof (prove)\nusing this:\n  i < length (sequence_of A enum f)\n  j < length (sequence_of A enum f)\n  bij_betw enum {0..<card A} A\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  \\<lbrakk>bij_betw ?enum {0..<card ?A} ?A;\n   ?f \\<in> ?A \\<rightarrow>\\<^sub>E ?B\\<rbrakk>\n  \\<Longrightarrow> length (sequence_of ?A ?enum ?f) = card ?A\n\ngoal (1 subgoal):\n 1. i < card A &&& j < card A", "by fastforce+"], ["proof (state)\nthis:\n  i < card A\n  j < card A\n\ngoal (1 subgoal):\n 1. distinct (sequence_of A enum f)", "from this assms(1)"], ["proof (chain)\npicking this:\n  i < card A\n  j < card A\n  bij_betw enum {0..<card A} A", "have in_A: \"enum i \\<in> A\" \"enum j \\<in> A\""], ["proof (prove)\nusing this:\n  i < card A\n  j < card A\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. enum i \\<in> A &&& enum j \\<in> A", "using bij_betwE"], ["proof (prove)\nusing this:\n  i < card A\n  j < card A\n  bij_betw enum {0..<card A} A\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n\ngoal (1 subgoal):\n 1. enum i \\<in> A &&& enum j \\<in> A", "by fastforce+"], ["proof (state)\nthis:\n  enum i \\<in> A\n  enum j \\<in> A\n\ngoal (1 subgoal):\n 1. distinct (sequence_of A enum f)", "from \\<open>i \\<noteq> j\\<close>  bounds' assms(1)"], ["proof (chain)\npicking this:\n  i \\<noteq> j\n  i < card A\n  j < card A\n  bij_betw enum {0..<card A} A", "have \"enum i \\<noteq> enum j\""], ["proof (prove)\nusing this:\n  i \\<noteq> j\n  i < card A\n  j < card A\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. enum i \\<noteq> enum j", "by (metis bij_betw_inv_into_left lessThan_iff atLeast0LessThan)"], ["proof (state)\nthis:\n  enum i \\<noteq> enum j\n\ngoal (1 subgoal):\n 1. distinct (sequence_of A enum f)", "from this"], ["proof (chain)\npicking this:\n  enum i \\<noteq> enum j", "have \"f (enum i) \\<noteq> f (enum j)\""], ["proof (prove)\nusing this:\n  enum i \\<noteq> enum j\n\ngoal (1 subgoal):\n 1. f (enum i) \\<noteq> f (enum j)", "using assms(3) in_A inj_onD"], ["proof (prove)\nusing this:\n  enum i \\<noteq> enum j\n  inj_on f A\n  enum i \\<in> A\n  enum j \\<in> A\n  \\<lbrakk>inj_on ?f ?A; ?f ?x = ?f ?y; ?x \\<in> ?A; ?y \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. f (enum i) \\<noteq> f (enum j)", "by fastforce"], ["proof (state)\nthis:\n  f (enum i) \\<noteq> f (enum j)\n\ngoal (1 subgoal):\n 1. distinct (sequence_of A enum f)", "from this bounds'"], ["proof (chain)\npicking this:\n  f (enum i) \\<noteq> f (enum j)\n  i < card A\n  j < card A", "have \"sequence_of A enum f ! i \\<noteq> sequence_of A enum f ! j\""], ["proof (prove)\nusing this:\n  f (enum i) \\<noteq> f (enum j)\n  i < card A\n  j < card A\n\ngoal (1 subgoal):\n 1. sequence_of A enum f ! i \\<noteq> sequence_of A enum f ! j", "by (simp add: nth_sequence_of)"], ["proof (state)\nthis:\n  sequence_of A enum f ! i \\<noteq> sequence_of A enum f ! j\n\ngoal (1 subgoal):\n 1. distinct (sequence_of A enum f)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?i2 < length (sequence_of A enum f);\n   ?j2 < length (sequence_of A enum f); ?i2 \\<noteq> ?j2\\<rbrakk>\n  \\<Longrightarrow> sequence_of A enum f ! ?i2 \\<noteq>\n                    sequence_of A enum f ! ?j2\n\ngoal (1 subgoal):\n 1. distinct (sequence_of A enum f)", "from this"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i2 < length (sequence_of A enum f);\n   ?j2 < length (sequence_of A enum f); ?i2 \\<noteq> ?j2\\<rbrakk>\n  \\<Longrightarrow> sequence_of A enum f ! ?i2 \\<noteq>\n                    sequence_of A enum f ! ?j2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i2 < length (sequence_of A enum f);\n   ?j2 < length (sequence_of A enum f); ?i2 \\<noteq> ?j2\\<rbrakk>\n  \\<Longrightarrow> sequence_of A enum f ! ?i2 \\<noteq>\n                    sequence_of A enum f ! ?j2\n\ngoal (1 subgoal):\n 1. distinct (sequence_of A enum f)", "by (auto simp add: distinct_conv_nth)"], ["proof (state)\nthis:\n  distinct (sequence_of A enum f)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma distinct_implies_inj_on:\n  assumes \"bij_betw enum {0..<card A} A\"\n  assumes \"length xs = card A\"\n  assumes \"distinct xs\"\n  shows \"inj_on (function_of A enum xs) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (function_of A enum xs) A", "proof (rule inj_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        function_of A enum xs x = function_of A enum xs y\\<rbrakk>\n       \\<Longrightarrow> x = y", "let ?idx_of = \"\\<lambda>x. inv_into {0..<length xs} enum x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        function_of A enum xs x = function_of A enum xs y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        function_of A enum xs x = function_of A enum xs y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume \"x \\<in> A\" \"y \\<in> A\" \"function_of A enum xs x = function_of A enum xs y\""], ["proof (state)\nthis:\n  x \\<in> A\n  y \\<in> A\n  function_of A enum xs x = function_of A enum xs y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        function_of A enum xs x = function_of A enum xs y\\<rbrakk>\n       \\<Longrightarrow> x = y", "from this"], ["proof (chain)\npicking this:\n  x \\<in> A\n  y \\<in> A\n  function_of A enum xs x = function_of A enum xs y", "have \"xs ! ?idx_of x = xs ! ?idx_of y\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> A\n  function_of A enum xs x = function_of A enum xs y\n\ngoal (1 subgoal):\n 1. xs ! inv_into {0..<length xs} enum x =\n    xs ! inv_into {0..<length xs} enum y", "unfolding function_of_def"], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> A\n  (if x \\<in> A then xs ! inv_into {0..<length xs} enum x else undefined) =\n  (if y \\<in> A then xs ! inv_into {0..<length xs} enum y else undefined)\n\ngoal (1 subgoal):\n 1. xs ! inv_into {0..<length xs} enum x =\n    xs ! inv_into {0..<length xs} enum y", "by simp"], ["proof (state)\nthis:\n  xs ! inv_into {0..<length xs} enum x =\n  xs ! inv_into {0..<length xs} enum y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        function_of A enum xs x = function_of A enum xs y\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"?idx_of x = ?idx_of y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_into {0..<length xs} enum x = inv_into {0..<length xs} enum y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inv_into {0..<length xs} enum x = inv_into {0..<length xs} enum y", "have \"?idx_of x < length xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_into {0..<length xs} enum x < length xs", "using \\<open>x \\<in> A\\<close> assms(1,2)"], ["proof (prove)\nusing this:\n  x \\<in> A\n  bij_betw enum {0..<card A} A\n  length xs = card A\n\ngoal (1 subgoal):\n 1. inv_into {0..<length xs} enum x < length xs", "by (metis atLeast0LessThan bij_betw_imp_surj_on inv_into_into lessThan_iff)"], ["proof (state)\nthis:\n  inv_into {0..<length xs} enum x < length xs\n\ngoal (1 subgoal):\n 1. inv_into {0..<length xs} enum x = inv_into {0..<length xs} enum y", "moreover"], ["proof (state)\nthis:\n  inv_into {0..<length xs} enum x < length xs\n\ngoal (1 subgoal):\n 1. inv_into {0..<length xs} enum x = inv_into {0..<length xs} enum y", "have \"?idx_of y < length xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_into {0..<length xs} enum y < length xs", "using \\<open>y \\<in> A\\<close> assms(1,2)"], ["proof (prove)\nusing this:\n  y \\<in> A\n  bij_betw enum {0..<card A} A\n  length xs = card A\n\ngoal (1 subgoal):\n 1. inv_into {0..<length xs} enum y < length xs", "by (metis atLeast0LessThan bij_betw_imp_surj_on inv_into_into lessThan_iff)"], ["proof (state)\nthis:\n  inv_into {0..<length xs} enum y < length xs\n\ngoal (1 subgoal):\n 1. inv_into {0..<length xs} enum x = inv_into {0..<length xs} enum y", "moreover"], ["proof (state)\nthis:\n  inv_into {0..<length xs} enum y < length xs\n\ngoal (1 subgoal):\n 1. inv_into {0..<length xs} enum x = inv_into {0..<length xs} enum y", "note \\<open>xs ! ?idx_of x = xs ! ?idx_of y\\<close> \\<open>distinct xs\\<close>"], ["proof (state)\nthis:\n  xs ! inv_into {0..<length xs} enum x =\n  xs ! inv_into {0..<length xs} enum y\n  distinct xs\n\ngoal (1 subgoal):\n 1. inv_into {0..<length xs} enum x = inv_into {0..<length xs} enum y", "ultimately"], ["proof (chain)\npicking this:\n  inv_into {0..<length xs} enum x < length xs\n  inv_into {0..<length xs} enum y < length xs\n  xs ! inv_into {0..<length xs} enum x =\n  xs ! inv_into {0..<length xs} enum y\n  distinct xs", "show ?thesis"], ["proof (prove)\nusing this:\n  inv_into {0..<length xs} enum x < length xs\n  inv_into {0..<length xs} enum y < length xs\n  xs ! inv_into {0..<length xs} enum x =\n  xs ! inv_into {0..<length xs} enum y\n  distinct xs\n\ngoal (1 subgoal):\n 1. inv_into {0..<length xs} enum x = inv_into {0..<length xs} enum y", "by (auto dest: nth_eq_iff_index_eq[where i=\"?idx_of x\" and j=\"?idx_of y\"])"], ["proof (state)\nthis:\n  inv_into {0..<length xs} enum x = inv_into {0..<length xs} enum y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inv_into {0..<length xs} enum x = inv_into {0..<length xs} enum y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        function_of A enum xs x = function_of A enum xs y\\<rbrakk>\n       \\<Longrightarrow> x = y", "from this \\<open>bij_betw _ _ _\\<close>"], ["proof (chain)\npicking this:\n  inv_into {0..<length xs} enum x = inv_into {0..<length xs} enum y\n  bij_betw enum {0..<card A} A", "show \"x = y\""], ["proof (prove)\nusing this:\n  inv_into {0..<length xs} enum x = inv_into {0..<length xs} enum y\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. x = y", "by (metis \\<open>x \\<in> A\\<close> \\<open>y \\<in> A\\<close> \\<open>length xs = card A\\<close> bij_betw_inv_into_right)"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma image_sequence_of_inj:\n  assumes \"bij_betw enum {0..<card A} A\"\n  shows \"sequence_of A enum ` {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} \\<subseteq> {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sequence_of A enum ` {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n    \\<subseteq> {xs.\n                 set xs \\<subseteq> B \\<and>\n                 length xs = card A \\<and> distinct xs}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sequence_of A enum `\n               {f \\<in> A \\<rightarrow>\\<^sub>E B.\n                inj_on f A} \\<Longrightarrow>\n       x \\<in> {xs.\n                set xs \\<subseteq> B \\<and>\n                length xs = card A \\<and> distinct xs}", "fix xs"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sequence_of A enum `\n               {f \\<in> A \\<rightarrow>\\<^sub>E B.\n                inj_on f A} \\<Longrightarrow>\n       x \\<in> {xs.\n                set xs \\<subseteq> B \\<and>\n                length xs = card A \\<and> distinct xs}", "assume \"xs \\<in> sequence_of A enum ` {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\""], ["proof (state)\nthis:\n  xs \\<in> sequence_of A enum `\n           {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sequence_of A enum `\n               {f \\<in> A \\<rightarrow>\\<^sub>E B.\n                inj_on f A} \\<Longrightarrow>\n       x \\<in> {xs.\n                set xs \\<subseteq> B \\<and>\n                length xs = card A \\<and> distinct xs}", "from this"], ["proof (chain)\npicking this:\n  xs \\<in> sequence_of A enum `\n           {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "obtain f where xs: \"xs = sequence_of A enum f\" and f: \"f \\<in> A \\<rightarrow>\\<^sub>E B\" \"inj_on f A\""], ["proof (prove)\nusing this:\n  xs \\<in> sequence_of A enum `\n           {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>xs = sequence_of A enum f;\n         f \\<in> A \\<rightarrow>\\<^sub>E B; inj_on f A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xs = sequence_of A enum f\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sequence_of A enum `\n               {f \\<in> A \\<rightarrow>\\<^sub>E B.\n                inj_on f A} \\<Longrightarrow>\n       x \\<in> {xs.\n                set xs \\<subseteq> B \\<and>\n                length xs = card A \\<and> distinct xs}", "moreover"], ["proof (state)\nthis:\n  xs = sequence_of A enum f\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sequence_of A enum `\n               {f \\<in> A \\<rightarrow>\\<^sub>E B.\n                inj_on f A} \\<Longrightarrow>\n       x \\<in> {xs.\n                set xs \\<subseteq> B \\<and>\n                length xs = card A \\<and> distinct xs}", "from xs f \\<open>bij_betw _ _ _\\<close>"], ["proof (chain)\npicking this:\n  xs = sequence_of A enum f\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n  bij_betw enum {0..<card A} A", "have \"set xs \\<subseteq> B\""], ["proof (prove)\nusing this:\n  xs = sequence_of A enum f\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. set xs \\<subseteq> B", "using set_sequence_of subsetCE"], ["proof (prove)\nusing this:\n  xs = sequence_of A enum f\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n  bij_betw enum {0..<card A} A\n  \\<lbrakk>bij_betw ?enum {0..<card ?A} ?A;\n   ?f \\<in> ?A \\<rightarrow>\\<^sub>E ?B\\<rbrakk>\n  \\<Longrightarrow> set (sequence_of ?A ?enum ?f) \\<subseteq> ?B\n  \\<lbrakk>?A \\<subseteq> ?B; ?c \\<notin> ?A \\<Longrightarrow> ?P;\n   ?c \\<in> ?B \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. set xs \\<subseteq> B", "by blast"], ["proof (state)\nthis:\n  set xs \\<subseteq> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sequence_of A enum `\n               {f \\<in> A \\<rightarrow>\\<^sub>E B.\n                inj_on f A} \\<Longrightarrow>\n       x \\<in> {xs.\n                set xs \\<subseteq> B \\<and>\n                length xs = card A \\<and> distinct xs}", "moreover"], ["proof (state)\nthis:\n  set xs \\<subseteq> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sequence_of A enum `\n               {f \\<in> A \\<rightarrow>\\<^sub>E B.\n                inj_on f A} \\<Longrightarrow>\n       x \\<in> {xs.\n                set xs \\<subseteq> B \\<and>\n                length xs = card A \\<and> distinct xs}", "from xs f \\<open>bij_betw _ _ _\\<close>"], ["proof (chain)\npicking this:\n  xs = sequence_of A enum f\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n  bij_betw enum {0..<card A} A", "have \"length xs = card A\""], ["proof (prove)\nusing this:\n  xs = sequence_of A enum f\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. length xs = card A", "using length_sequence_of"], ["proof (prove)\nusing this:\n  xs = sequence_of A enum f\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n  bij_betw enum {0..<card A} A\n  \\<lbrakk>bij_betw ?enum {0..<card ?A} ?A;\n   ?f \\<in> ?A \\<rightarrow>\\<^sub>E ?B\\<rbrakk>\n  \\<Longrightarrow> length (sequence_of ?A ?enum ?f) = card ?A\n\ngoal (1 subgoal):\n 1. length xs = card A", "by auto"], ["proof (state)\nthis:\n  length xs = card A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sequence_of A enum `\n               {f \\<in> A \\<rightarrow>\\<^sub>E B.\n                inj_on f A} \\<Longrightarrow>\n       x \\<in> {xs.\n                set xs \\<subseteq> B \\<and>\n                length xs = card A \\<and> distinct xs}", "moreover"], ["proof (state)\nthis:\n  length xs = card A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sequence_of A enum `\n               {f \\<in> A \\<rightarrow>\\<^sub>E B.\n                inj_on f A} \\<Longrightarrow>\n       x \\<in> {xs.\n                set xs \\<subseteq> B \\<and>\n                length xs = card A \\<and> distinct xs}", "from xs f \\<open>bij_betw _ _ _\\<close>"], ["proof (chain)\npicking this:\n  xs = sequence_of A enum f\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n  bij_betw enum {0..<card A} A", "have \"distinct xs\""], ["proof (prove)\nusing this:\n  xs = sequence_of A enum f\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. distinct xs", "using inj_on_implies_distinct"], ["proof (prove)\nusing this:\n  xs = sequence_of A enum f\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n  bij_betw enum {0..<card A} A\n  \\<lbrakk>bij_betw ?enum {0..<card ?A} ?A;\n   ?f \\<in> ?A \\<rightarrow>\\<^sub>E ?B; inj_on ?f ?A\\<rbrakk>\n  \\<Longrightarrow> distinct (sequence_of ?A ?enum ?f)\n\ngoal (1 subgoal):\n 1. distinct xs", "by simp"], ["proof (state)\nthis:\n  distinct xs\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sequence_of A enum `\n               {f \\<in> A \\<rightarrow>\\<^sub>E B.\n                inj_on f A} \\<Longrightarrow>\n       x \\<in> {xs.\n                set xs \\<subseteq> B \\<and>\n                length xs = card A \\<and> distinct xs}", "ultimately"], ["proof (chain)\npicking this:\n  xs = sequence_of A enum f\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n  set xs \\<subseteq> B\n  length xs = card A\n  distinct xs", "show \"xs \\<in> {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\""], ["proof (prove)\nusing this:\n  xs = sequence_of A enum f\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n  set xs \\<subseteq> B\n  length xs = card A\n  distinct xs\n\ngoal (1 subgoal):\n 1. xs \\<in> {xs.\n              set xs \\<subseteq> B \\<and>\n              length xs = card A \\<and> distinct xs}", "by auto"], ["proof (state)\nthis:\n  xs \\<in> {xs.\n            set xs \\<subseteq> B \\<and>\n            length xs = card A \\<and> distinct xs}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma image_function_of_distinct:\n  assumes \"bij_betw enum {0..<card A} A\"\n  shows \"function_of A enum ` {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> function_of A enum `\n               {xs.\n                set xs \\<subseteq> B \\<and>\n                length xs = card A \\<and> distinct xs} \\<Longrightarrow>\n       x \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> function_of A enum `\n               {xs.\n                set xs \\<subseteq> B \\<and>\n                length xs = card A \\<and> distinct xs} \\<Longrightarrow>\n       x \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "assume f: \"f \\<in> function_of A enum ` {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\""], ["proof (state)\nthis:\n  f \\<in> function_of A enum `\n          {xs.\n           set xs \\<subseteq> B \\<and>\n           length xs = card A \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> function_of A enum `\n               {xs.\n                set xs \\<subseteq> B \\<and>\n                length xs = card A \\<and> distinct xs} \\<Longrightarrow>\n       x \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "from f assms"], ["proof (chain)\npicking this:\n  f \\<in> function_of A enum `\n          {xs.\n           set xs \\<subseteq> B \\<and>\n           length xs = card A \\<and> distinct xs}\n  bij_betw enum {0..<card A} A", "have \"f \\<in> A \\<rightarrow>\\<^sub>E B\""], ["proof (prove)\nusing this:\n  f \\<in> function_of A enum `\n          {xs.\n           set xs \\<subseteq> B \\<and>\n           length xs = card A \\<and> distinct xs}\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. f \\<in> A \\<rightarrow>\\<^sub>E B", "using function_of_in_extensional_funcset"], ["proof (prove)\nusing this:\n  f \\<in> function_of A enum `\n          {xs.\n           set xs \\<subseteq> B \\<and>\n           length xs = card A \\<and> distinct xs}\n  bij_betw enum {0..<card A} A\n  \\<lbrakk>bij_betw ?enum {0..<card ?A} ?A; set ?xs \\<subseteq> ?B;\n   length ?xs = card ?A\\<rbrakk>\n  \\<Longrightarrow> function_of ?A ?enum ?xs\n                    \\<in> ?A \\<rightarrow>\\<^sub>E ?B\n\ngoal (1 subgoal):\n 1. f \\<in> A \\<rightarrow>\\<^sub>E B", "by blast"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> function_of A enum `\n               {xs.\n                set xs \\<subseteq> B \\<and>\n                length xs = card A \\<and> distinct xs} \\<Longrightarrow>\n       x \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "moreover"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> function_of A enum `\n               {xs.\n                set xs \\<subseteq> B \\<and>\n                length xs = card A \\<and> distinct xs} \\<Longrightarrow>\n       x \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "from f assms"], ["proof (chain)\npicking this:\n  f \\<in> function_of A enum `\n          {xs.\n           set xs \\<subseteq> B \\<and>\n           length xs = card A \\<and> distinct xs}\n  bij_betw enum {0..<card A} A", "have \"inj_on f A\""], ["proof (prove)\nusing this:\n  f \\<in> function_of A enum `\n          {xs.\n           set xs \\<subseteq> B \\<and>\n           length xs = card A \\<and> distinct xs}\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. inj_on f A", "by (auto simp add: assms distinct_implies_inj_on)"], ["proof (state)\nthis:\n  inj_on f A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> function_of A enum `\n               {xs.\n                set xs \\<subseteq> B \\<and>\n                length xs = card A \\<and> distinct xs} \\<Longrightarrow>\n       x \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "ultimately"], ["proof (chain)\npicking this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A", "show \"f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\""], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  inj_on f A\n\ngoal (1 subgoal):\n 1. f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "by auto"], ["proof (state)\nthis:\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Bijections\\<close>"], ["", "lemma bij_betw_sequence_of:\n  assumes \"bij_betw enum {0..<card A} A\"\n  shows \"bij_betw (sequence_of A enum) {f. f \\<in> A \\<rightarrow>\\<^sub>E B \\<and> inj_on f A} {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (sequence_of A enum)\n     {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n     {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}", "proof (rule bij_betw_byWitness[where f'=\"function_of A enum\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}.\n       function_of A enum (sequence_of A enum a) = a\n 2. \\<forall>a'\\<in>{xs.\n                     set xs \\<subseteq> B \\<and>\n                     length xs = card A \\<and> distinct xs}.\n       sequence_of A enum (function_of A enum a') = a'\n 3. sequence_of A enum ` {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n    \\<subseteq> {xs.\n                 set xs \\<subseteq> B \\<and>\n                 length xs = card A \\<and> distinct xs}\n 4. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "show \"\\<forall>f\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}. function_of A enum (sequence_of A enum f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}.\n       function_of A enum (sequence_of A enum f) = f", "using assms"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}.\n       function_of A enum (sequence_of A enum f) = f", "by (auto simp add: function_of_sequence_of)"], ["proof (state)\nthis:\n  \\<forall>f\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}.\n     function_of A enum (sequence_of A enum f) = f\n\ngoal (3 subgoals):\n 1. \\<forall>a'\\<in>{xs.\n                     set xs \\<subseteq> B \\<and>\n                     length xs = card A \\<and> distinct xs}.\n       sequence_of A enum (function_of A enum a') = a'\n 2. sequence_of A enum ` {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n    \\<subseteq> {xs.\n                 set xs \\<subseteq> B \\<and>\n                 length xs = card A \\<and> distinct xs}\n 3. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "show \"\\<forall>xs\\<in>{xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}. sequence_of A enum (function_of A enum xs) = xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xs\\<in>{xs.\n                     set xs \\<subseteq> B \\<and>\n                     length xs = card A \\<and> distinct xs}.\n       sequence_of A enum (function_of A enum xs) = xs", "using assms"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. \\<forall>xs\\<in>{xs.\n                     set xs \\<subseteq> B \\<and>\n                     length xs = card A \\<and> distinct xs}.\n       sequence_of A enum (function_of A enum xs) = xs", "by (auto simp add: sequence_of_function_of)"], ["proof (state)\nthis:\n  \\<forall>xs\\<in>{xs.\n                   set xs \\<subseteq> B \\<and>\n                   length xs = card A \\<and> distinct xs}.\n     sequence_of A enum (function_of A enum xs) = xs\n\ngoal (2 subgoals):\n 1. sequence_of A enum ` {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n    \\<subseteq> {xs.\n                 set xs \\<subseteq> B \\<and>\n                 length xs = card A \\<and> distinct xs}\n 2. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "show \"sequence_of A enum ` {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} \\<subseteq> {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sequence_of A enum ` {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n    \\<subseteq> {xs.\n                 set xs \\<subseteq> B \\<and>\n                 length xs = card A \\<and> distinct xs}", "using assms"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. sequence_of A enum ` {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n    \\<subseteq> {xs.\n                 set xs \\<subseteq> B \\<and>\n                 length xs = card A \\<and> distinct xs}", "by (simp add: image_sequence_of_inj)"], ["proof (state)\nthis:\n  sequence_of A enum ` {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n  \\<subseteq> {xs.\n               set xs \\<subseteq> B \\<and>\n               length xs = card A \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "show \"function_of A enum ` {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "using assms"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "by (simp add: image_function_of_distinct)"], ["proof (state)\nthis:\n  function_of A enum `\n  {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n  \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bij_betw_function_of:\n  assumes \"bij_betw enum {0..<card A} A\"\n  shows \"bij_betw (function_of A enum) {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (function_of A enum)\n     {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n     {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "proof (rule bij_betw_byWitness[where f'=\"sequence_of A enum\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{xs.\n                    set xs \\<subseteq> B \\<and>\n                    length xs = card A \\<and> distinct xs}.\n       sequence_of A enum (function_of A enum a) = a\n 2. \\<forall>a'\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}.\n       function_of A enum (sequence_of A enum a') = a'\n 3. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n 4. sequence_of A enum ` {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n    \\<subseteq> {xs.\n                 set xs \\<subseteq> B \\<and>\n                 length xs = card A \\<and> distinct xs}", "show \"\\<forall>f\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}. function_of A enum (sequence_of A enum f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}.\n       function_of A enum (sequence_of A enum f) = f", "using assms"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}.\n       function_of A enum (sequence_of A enum f) = f", "by (auto simp add: function_of_sequence_of)"], ["proof (state)\nthis:\n  \\<forall>f\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}.\n     function_of A enum (sequence_of A enum f) = f\n\ngoal (3 subgoals):\n 1. \\<forall>a\\<in>{xs.\n                    set xs \\<subseteq> B \\<and>\n                    length xs = card A \\<and> distinct xs}.\n       sequence_of A enum (function_of A enum a) = a\n 2. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n 3. sequence_of A enum ` {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n    \\<subseteq> {xs.\n                 set xs \\<subseteq> B \\<and>\n                 length xs = card A \\<and> distinct xs}", "show \"\\<forall>xs\\<in>{xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}. sequence_of A enum (function_of A enum xs) = xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xs\\<in>{xs.\n                     set xs \\<subseteq> B \\<and>\n                     length xs = card A \\<and> distinct xs}.\n       sequence_of A enum (function_of A enum xs) = xs", "using assms"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. \\<forall>xs\\<in>{xs.\n                     set xs \\<subseteq> B \\<and>\n                     length xs = card A \\<and> distinct xs}.\n       sequence_of A enum (function_of A enum xs) = xs", "by (auto simp add: sequence_of_function_of)"], ["proof (state)\nthis:\n  \\<forall>xs\\<in>{xs.\n                   set xs \\<subseteq> B \\<and>\n                   length xs = card A \\<and> distinct xs}.\n     sequence_of A enum (function_of A enum xs) = xs\n\ngoal (2 subgoals):\n 1. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n 2. sequence_of A enum ` {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n    \\<subseteq> {xs.\n                 set xs \\<subseteq> B \\<and>\n                 length xs = card A \\<and> distinct xs}", "show \"sequence_of A enum ` {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} \\<subseteq> {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sequence_of A enum ` {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n    \\<subseteq> {xs.\n                 set xs \\<subseteq> B \\<and>\n                 length xs = card A \\<and> distinct xs}", "using assms"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. sequence_of A enum ` {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n    \\<subseteq> {xs.\n                 set xs \\<subseteq> B \\<and>\n                 length xs = card A \\<and> distinct xs}", "by (simp add: image_sequence_of_inj)"], ["proof (state)\nthis:\n  sequence_of A enum ` {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n  \\<subseteq> {xs.\n               set xs \\<subseteq> B \\<and>\n               length xs = card A \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "show \"function_of A enum ` {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "using assms"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. function_of A enum `\n    {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "by (simp add: image_function_of_distinct)"], ["proof (state)\nthis:\n  function_of A enum `\n  {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n  \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Cardinality\\<close>"], ["", "lemma\n  assumes \"finite A\" \"finite B\" \"card A \\<le> card B\"\n  shows \"card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} = \\<Prod>{card B - card A + 1..card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} =\n    \\<Prod>{card B - card A + 1..card B}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} =\n    \\<Prod>{card B - card A + 1..card B}", "obtain enum where \"bij_betw enum {0..<card A} A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>enum.\n        bij_betw enum {0..<card A} A \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<open>finite A\\<close> ex_bij_betw_nat_finite"], ["proof (prove)\nusing this:\n  finite A\n  finite ?M \\<Longrightarrow> \\<exists>h. bij_betw h {0..<card ?M} ?M\n\ngoal (1 subgoal):\n 1. (\\<And>enum.\n        bij_betw enum {0..<card A} A \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} =\n    \\<Prod>{card B - card A + 1..card B}", "have \"bij_betw (sequence_of A enum) {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (sequence_of A enum)\n     {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n     {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}", "using \\<open>bij_betw enum {0..<card A} A\\<close>"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. bij_betw (sequence_of A enum)\n     {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n     {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}", "by (rule bij_betw_sequence_of)"], ["proof (state)\nthis:\n  bij_betw (sequence_of A enum)\n   {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} =\n    \\<Prod>{card B - card A + 1..card B}", "from this"], ["proof (chain)\npicking this:\n  bij_betw (sequence_of A enum)\n   {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}", "have \"card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} = card {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\""], ["proof (prove)\nusing this:\n  bij_betw (sequence_of A enum)\n   {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} =\n    card\n     {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}", "by (rule bij_betw_same_card)"], ["proof (state)\nthis:\n  card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} =\n  card\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} =\n    \\<Prod>{card B - card A + 1..card B}", "also"], ["proof (state)\nthis:\n  card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} =\n  card\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} =\n    \\<Prod>{card B - card A + 1..card B}", "have \"card {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} = card {xs. length xs = card A \\<and> distinct xs \\<and> set xs \\<subseteq> B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {xs.\n      set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} =\n    card\n     {xs. length xs = card A \\<and> distinct xs \\<and> set xs \\<subseteq> B}", "by meson"], ["proof (state)\nthis:\n  card\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} =\n  card\n   {xs. length xs = card A \\<and> distinct xs \\<and> set xs \\<subseteq> B}\n\ngoal (1 subgoal):\n 1. card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} =\n    \\<Prod>{card B - card A + 1..card B}", "also"], ["proof (state)\nthis:\n  card\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} =\n  card\n   {xs. length xs = card A \\<and> distinct xs \\<and> set xs \\<subseteq> B}\n\ngoal (1 subgoal):\n 1. card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} =\n    \\<Prod>{card B - card A + 1..card B}", "have \"card {xs. length xs = card A \\<and> distinct xs \\<and> set xs \\<subseteq> B} = \\<Prod>{card B - card A + 1..card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {xs.\n      length xs = card A \\<and> distinct xs \\<and> set xs \\<subseteq> B} =\n    \\<Prod>{card B - card A + 1..card B}", "using \\<open>finite B\\<close> \\<open>card A \\<le> card B\\<close>"], ["proof (prove)\nusing this:\n  finite B\n  card A \\<le> card B\n\ngoal (1 subgoal):\n 1. card\n     {xs.\n      length xs = card A \\<and> distinct xs \\<and> set xs \\<subseteq> B} =\n    \\<Prod>{card B - card A + 1..card B}", "by (rule List.card_lists_distinct_length_eq)"], ["proof (state)\nthis:\n  card\n   {xs. length xs = card A \\<and> distinct xs \\<and> set xs \\<subseteq> B} =\n  \\<Prod>{card B - card A + 1..card B}\n\ngoal (1 subgoal):\n 1. card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} =\n    \\<Prod>{card B - card A + 1..card B}", "finally"], ["proof (chain)\npicking this:\n  card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} =\n  \\<Prod>{card B - card A + 1..card B}", "show ?thesis"], ["proof (prove)\nusing this:\n  card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} =\n  \\<Prod>{card B - card A + 1..card B}\n\ngoal (1 subgoal):\n 1. card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} =\n    \\<Prod>{card B - card A + 1..card B}", "."], ["proof (state)\nthis:\n  card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} =\n  \\<Prod>{card B - card A + 1..card B}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_sequences:\n  assumes \"finite A\" \"finite B\" \"card A \\<le> card B\"\n  shows \"card {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} = fact (card B) div fact (card B - card A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {xs.\n      set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} =\n    fact (card B) div fact (card B - card A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     {xs.\n      set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} =\n    fact (card B) div fact (card B - card A)", "obtain enum where \"bij_betw enum {0..<card A} A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>enum.\n        bij_betw enum {0..<card A} A \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<open>finite A\\<close> ex_bij_betw_nat_finite"], ["proof (prove)\nusing this:\n  finite A\n  finite ?M \\<Longrightarrow> \\<exists>h. bij_betw h {0..<card ?M} ?M\n\ngoal (1 subgoal):\n 1. (\\<And>enum.\n        bij_betw enum {0..<card A} A \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. card\n     {xs.\n      set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} =\n    fact (card B) div fact (card B - card A)", "have \"bij_betw (function_of A enum) {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (function_of A enum)\n     {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n     {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "using \\<open>bij_betw enum {0..<card A} A\\<close>"], ["proof (prove)\nusing this:\n  bij_betw enum {0..<card A} A\n\ngoal (1 subgoal):\n 1. bij_betw (function_of A enum)\n     {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n     {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "by (rule bij_betw_function_of)"], ["proof (state)\nthis:\n  bij_betw (function_of A enum)\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n   {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n\ngoal (1 subgoal):\n 1. card\n     {xs.\n      set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} =\n    fact (card B) div fact (card B - card A)", "from this"], ["proof (chain)\npicking this:\n  bij_betw (function_of A enum)\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n   {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "have \"card {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} = card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\""], ["proof (prove)\nusing this:\n  bij_betw (function_of A enum)\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs}\n   {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n\ngoal (1 subgoal):\n 1. card\n     {xs.\n      set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} =\n    card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}", "by (rule bij_betw_same_card)"], ["proof (state)\nthis:\n  card\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} =\n  card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n\ngoal (1 subgoal):\n 1. card\n     {xs.\n      set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} =\n    fact (card B) div fact (card B - card A)", "also"], ["proof (state)\nthis:\n  card\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} =\n  card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A}\n\ngoal (1 subgoal):\n 1. card\n     {xs.\n      set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} =\n    fact (card B) div fact (card B - card A)", "have \"card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} = fact (card B) div fact (card B - card A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} =\n    fact (card B) div fact (card B - card A)", "using \\<open>finite A\\<close> \\<open>finite B\\<close> \\<open>card A \\<le> card B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  card A \\<le> card B\n\ngoal (1 subgoal):\n 1. card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} =\n    fact (card B) div fact (card B - card A)", "by (rule card_extensional_funcset_inj_on)"], ["proof (state)\nthis:\n  card {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} =\n  fact (card B) div fact (card B - card A)\n\ngoal (1 subgoal):\n 1. card\n     {xs.\n      set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} =\n    fact (card B) div fact (card B - card A)", "finally"], ["proof (chain)\npicking this:\n  card\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} =\n  fact (card B) div fact (card B - card A)", "show ?thesis"], ["proof (prove)\nusing this:\n  card\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} =\n  fact (card B) div fact (card B - card A)\n\ngoal (1 subgoal):\n 1. card\n     {xs.\n      set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} =\n    fact (card B) div fact (card B - card A)", "."], ["proof (state)\nthis:\n  card\n   {xs. set xs \\<subseteq> B \\<and> length xs = card A \\<and> distinct xs} =\n  fact (card B) div fact (card B - card A)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}