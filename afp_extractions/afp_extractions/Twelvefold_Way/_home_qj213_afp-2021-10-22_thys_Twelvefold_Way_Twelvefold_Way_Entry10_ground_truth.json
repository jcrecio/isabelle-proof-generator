{"file_name": "/home/qj213/afp-2021-10-22/thys/Twelvefold_Way/Twelvefold_Way_Entry10.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Twelvefold_Way", "problem_names": ["lemma card_setsum_partition:\n  assumes \"finite A\" \"finite B\" \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n  shows \"sum card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card A\"", "lemma number_partition_of:\n  assumes \"finite A\" \"finite B\"\n  assumes \"F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\"\n  shows \"number_partition (card A) (number_partition_of A B F)\"\n  and \"size (number_partition_of A B F) \\<le> card B\"", "lemma functions_of:\n  assumes \"finite A\" \"finite B\"\n  assumes \"number_partition (card A) N\"\n  assumes \"size N \\<le> card B\"\n  shows \"functions_of A B N \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\"", "lemma functions_of_number_partition_of:\n  assumes \"finite A\" \"finite B\"\n  assumes \"F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\"\n  shows \"functions_of A B (number_partition_of A B F) = F\"", "lemma number_partition_of_functions_of:\n  assumes \"finite A\" \"finite B\"\n  assumes \"number_partition (card A) N\" \"size N \\<le> card B\"\n  shows \"number_partition_of A B (functions_of A B N) = N\"", "lemma bij_betw_number_partition_of:\n  assumes \"finite A\" \"finite B\"\n  shows \"bij_betw (number_partition_of A B) ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B) {N. number_partition (card A) N \\<and> size N \\<le> card B}\"", "lemma card_domain_and_range_permutation:\n  assumes \"finite A\" \"finite B\"\n  shows \"card ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B) = Partition (card A + card B) (card B)\""], "translations": [["", "lemma card_setsum_partition:\n  assumes \"finite A\" \"finite B\" \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n  shows \"sum card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card A", "have \"finite ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})", "using \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite B\n\ngoal (1 subgoal):\n 1. finite ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})", "by blast"], ["proof (state)\nthis:\n  finite ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n\ngoal (1 subgoal):\n 1. sum card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card A", "moreover"], ["proof (state)\nthis:\n  finite ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n\ngoal (1 subgoal):\n 1. sum card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card A", "have \"\\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}. finite X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}. finite X", "using \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}. finite X", "by auto"], ["proof (state)\nthis:\n  \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}. finite X\n\ngoal (1 subgoal):\n 1. sum card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card A", "moreover"], ["proof (state)\nthis:\n  \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}. finite X\n\ngoal (1 subgoal):\n 1. sum card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card A", "have \"\\<Union>((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = A", "using \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. \\<Union> ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = A", "by auto"], ["proof (state)\nthis:\n  \\<Union> ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = A\n\ngoal (1 subgoal):\n 1. sum card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card A", "ultimately"], ["proof (chain)\npicking this:\n  finite ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n  \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}. finite X\n  \\<Union> ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = A", "show ?thesis"], ["proof (prove)\nusing this:\n  finite ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})\n  \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}. finite X\n  \\<Union> ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = A\n\ngoal (1 subgoal):\n 1. sum card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card A", "by (subst card_Union_disjoint[symmetric]) (auto simp: pairwise_def disjnt_def)"], ["proof (state)\nthis:\n  sum card ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}) = card A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma number_partition_of:\n  assumes \"finite A\" \"finite B\"\n  assumes \"F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\"\n  shows \"number_partition (card A) (number_partition_of A B F)\"\n  and \"size (number_partition_of A B F) \\<le> card B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. number_partition (card A) (number_partition_of A B F) &&&\n    size (number_partition_of A B F) \\<le> card B", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. number_partition (card A) (number_partition_of A B F)\n 2. size (number_partition_of A B F) \\<le> card B", "from \\<open>F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\\<close>"], ["proof (chain)\npicking this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B", "obtain f where \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n    and F_eq: \"F = domain_and_range_permutation A B `` {f}\""], ["proof (prove)\nusing this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E B;\n         F = domain_and_range_permutation A B `` {f}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using quotientE"], ["proof (prove)\nusing this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n  \\<lbrakk>?X \\<in> ?A // ?r;\n   \\<And>x.\n      \\<lbrakk>?X = ?r `` {x}; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E B;\n         F = domain_and_range_permutation A B `` {f}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  F = domain_and_range_permutation A B `` {f}\n\ngoal (2 subgoals):\n 1. number_partition (card A) (number_partition_of A B F)\n 2. size (number_partition_of A B F) \\<le> card B", "have number_partition_of_eq: \"number_partition_of A B F = image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. number_partition_of A B F =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. number_partition_of A B F =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "have \"number_partition_of A B F = univ (\\<lambda>f. image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. number_partition_of A B F =\n    univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     F", "unfolding number_partition_of_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     F =\n    univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     F", ".."], ["proof (state)\nthis:\n  number_partition_of A B F =\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   F\n\ngoal (1 subgoal):\n 1. number_partition_of A B F =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "also"], ["proof (state)\nthis:\n  number_partition_of A B F =\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   F\n\ngoal (1 subgoal):\n 1. number_partition_of A B F =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "have \"\\<dots> = univ (\\<lambda>f. image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))) (domain_and_range_permutation A B `` {f})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     F =\n    univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f})", "unfolding F_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f}) =\n    univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f})", ".."], ["proof (state)\nthis:\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   F =\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   (domain_and_range_permutation A B `` {f})\n\ngoal (1 subgoal):\n 1. number_partition_of A B F =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "also"], ["proof (state)\nthis:\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   F =\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   (domain_and_range_permutation A B `` {f})\n\ngoal (1 subgoal):\n 1. number_partition_of A B F =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "have \"\\<dots> = image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f}) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "using \\<open>finite B\\<close> equiv_domain_and_range_permutation multiset_of_partition_cards_respects_domain_and_range_permutation \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  finite B\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (domain_and_range_permutation ?A ?B)\n  finite ?B \\<Longrightarrow>\n  (\\<lambda>f.\n      image_mset card\n       (mset_set\n         ((\\<lambda>b. {x \\<in> ?A. f x = b}) ` ?B - {{}}))) respects\n  domain_and_range_permutation ?A ?B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f}) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "by (subst univ_commute') auto"], ["proof (state)\nthis:\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   (domain_and_range_permutation A B `` {f}) =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. number_partition_of A B F =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "finally"], ["proof (chain)\npicking this:\n  number_partition_of A B F =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "show ?thesis"], ["proof (prove)\nusing this:\n  number_partition_of A B F =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. number_partition_of A B F =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "."], ["proof (state)\nthis:\n  number_partition_of A B F =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  number_partition_of A B F =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n\ngoal (2 subgoals):\n 1. number_partition (card A) (number_partition_of A B F)\n 2. size (number_partition_of A B F) \\<le> card B", "show \"number_partition (card A) (number_partition_of A B F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. number_partition (card A) (number_partition_of A B F)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. number_partition (card A) (number_partition_of A B F)", "have \"sum_mset (number_partition_of A B F) = card A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># (number_partition_of A B F) = card A", "using number_partition_of_eq \\<open>finite A\\<close> \\<open>finite B\\<close> \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  number_partition_of A B F =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n  finite A\n  finite B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># (number_partition_of A B F) = card A", "by (simp only: sum_unfold_sum_mset[symmetric] card_setsum_partition)"], ["proof (state)\nthis:\n  \\<Sum>\\<^sub># (number_partition_of A B F) = card A\n\ngoal (1 subgoal):\n 1. number_partition (card A) (number_partition_of A B F)", "moreover"], ["proof (state)\nthis:\n  \\<Sum>\\<^sub># (number_partition_of A B F) = card A\n\ngoal (1 subgoal):\n 1. number_partition (card A) (number_partition_of A B F)", "have \"0 \\<notin># number_partition_of A B F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<notin># number_partition_of A B F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<notin># number_partition_of A B F", "have \"\\<forall>X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B. finite X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B. finite X", "using \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B. finite X", "by simp"], ["proof (state)\nthis:\n  \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B. finite X\n\ngoal (1 subgoal):\n 1. 0 \\<notin># number_partition_of A B F", "from this"], ["proof (chain)\npicking this:\n  \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B. finite X", "have \"\\<forall>X \\<in> (\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}. card X \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B. finite X\n\ngoal (1 subgoal):\n 1. \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}.\n       card X \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}.\n     card X \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 \\<notin># number_partition_of A B F", "from this"], ["proof (chain)\npicking this:\n  \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}.\n     card X \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}.\n     card X \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 \\<notin># number_partition_of A B F", "using number_partition_of_eq \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>X\\<in>(\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}.\n     card X \\<noteq> 0\n  number_partition_of A B F =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n  finite B\n\ngoal (1 subgoal):\n 1. 0 \\<notin># number_partition_of A B F", "by (simp add: image_iff)"], ["proof (state)\nthis:\n  0 \\<notin># number_partition_of A B F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<notin># number_partition_of A B F\n\ngoal (1 subgoal):\n 1. number_partition (card A) (number_partition_of A B F)", "ultimately"], ["proof (chain)\npicking this:\n  \\<Sum>\\<^sub># (number_partition_of A B F) = card A\n  0 \\<notin># number_partition_of A B F", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Sum>\\<^sub># (number_partition_of A B F) = card A\n  0 \\<notin># number_partition_of A B F\n\ngoal (1 subgoal):\n 1. number_partition (card A) (number_partition_of A B F)", "unfolding number_partition_def"], ["proof (prove)\nusing this:\n  \\<Sum>\\<^sub># (number_partition_of A B F) = card A\n  0 \\<notin># number_partition_of A B F\n\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># (number_partition_of A B F) = card A \\<and>\n    0 \\<notin># number_partition_of A B F", "by simp"], ["proof (state)\nthis:\n  number_partition (card A) (number_partition_of A B F)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  number_partition (card A) (number_partition_of A B F)\n\ngoal (1 subgoal):\n 1. size (number_partition_of A B F) \\<le> card B", "show \"size (number_partition_of A B F) \\<le> card B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size (number_partition_of A B F) \\<le> card B", "using number_partition_of_eq \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  number_partition_of A B F =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. size (number_partition_of A B F) \\<le> card B", "by (metis (no_types, lifting) card_Diff1_le card_image_le finite_imageI le_trans size_image_mset size_mset_set)"], ["proof (state)\nthis:\n  size (number_partition_of A B F) \\<le> card B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma functions_of:\n  assumes \"finite A\" \"finite B\"\n  assumes \"number_partition (card A) N\"\n  assumes \"size N \\<le> card B\"\n  shows \"functions_of A B N \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of A B N\n    \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. functions_of A B N\n    \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B", "obtain f where \"f \\<in> A \\<rightarrow>\\<^sub>E B\" and eq_N: \"image_mset (\\<lambda>X. card X) (mset_set (((\\<lambda>b. {x \\<in> A. f x = b})) ` B - {{}})) = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E B;\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n         N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using obtain_extensional_function_from_number_partition \\<open>finite A\\<close> \\<open>finite B\\<close> \\<open>number_partition (card A) N\\<close> \\<open>size N \\<le> card B\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; finite ?B; number_partition (card ?A) ?N;\n   size ?N \\<le> card ?B\\<rbrakk>\n  \\<Longrightarrow> \\<exists>f\\<in>?A \\<rightarrow>\\<^sub>E ?B.\n                       image_mset card\n                        (mset_set\n                          ((\\<lambda>b. {x \\<in> ?A. f x = b}) ` ?B -\n                           {{}})) =\n                       ?N\n  finite A\n  finite B\n  number_partition (card A) N\n  size N \\<le> card B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E B;\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n         N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n  N\n\ngoal (1 subgoal):\n 1. functions_of A B N\n    \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B", "have \"functions_of A B N = (domain_and_range_permutation A B) `` {f}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of A B N = domain_and_range_permutation A B `` {f}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. functions_of A B N \\<subseteq> domain_and_range_permutation A B `` {f}\n 2. domain_and_range_permutation A B `` {f} \\<subseteq> functions_of A B N", "show \"functions_of A B N \\<subseteq> domain_and_range_permutation A B `` {f}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of A B N \\<subseteq> domain_and_range_permutation A B `` {f}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A B N \\<Longrightarrow>\n       x \\<in> domain_and_range_permutation A B `` {f}", "fix f'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A B N \\<Longrightarrow>\n       x \\<in> domain_and_range_permutation A B `` {f}", "assume \"f' \\<in> functions_of A B N\""], ["proof (state)\nthis:\n  f' \\<in> functions_of A B N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A B N \\<Longrightarrow>\n       x \\<in> domain_and_range_permutation A B `` {f}", "from this"], ["proof (chain)\npicking this:\n  f' \\<in> functions_of A B N", "have eq_N': \"N = image_mset (\\<lambda>X. card X) (mset_set (((\\<lambda>b. {x \\<in> A. f' x = b})) ` B - {{}}))\"\n        and \"f' \\<in> A \\<rightarrow>\\<^sub>E B\""], ["proof (prove)\nusing this:\n  f' \\<in> functions_of A B N\n\ngoal (1 subgoal):\n 1. N =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})) &&&\n    f' \\<in> A \\<rightarrow>\\<^sub>E B", "unfolding functions_of_def"], ["proof (prove)\nusing this:\n  f' \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B.\n            image_mset card\n             (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n            N}\n\ngoal (1 subgoal):\n 1. N =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})) &&&\n    f' \\<in> A \\<rightarrow>\\<^sub>E B", "by auto"], ["proof (state)\nthis:\n  N =\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A B N \\<Longrightarrow>\n       x \\<in> domain_and_range_permutation A B `` {f}", "from \\<open>finite A\\<close> \\<open>finite B\\<close> \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close> \\<open>f' \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (chain)\npicking this:\n  finite A\n  finite B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  f' \\<in> A \\<rightarrow>\\<^sub>E B", "obtain p\\<^sub>A p\\<^sub>B where \"p\\<^sub>A permutes A\" \"p\\<^sub>B permutes B\" \"\\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\""], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>A p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using eq_N eq_N' multiset_of_partition_cards_eq_implies_permutes[of A B f f']"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n  N\n  N =\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\n  \\<lbrakk>finite A; finite B; f \\<in> A \\<rightarrow>\\<^sub>E B;\n   f' \\<in> A \\<rightarrow>\\<^sub>E B;\n   image_mset card\n    (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n   image_mset card\n    (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}));\n   \\<And>p\\<^sub>A p\\<^sub>B.\n      \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n       \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>A p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  p\\<^sub>A permutes A\n  p\\<^sub>B permutes B\n  \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A B N \\<Longrightarrow>\n       x \\<in> domain_and_range_permutation A B `` {f}", "from this"], ["proof (chain)\npicking this:\n  p\\<^sub>A permutes A\n  p\\<^sub>B permutes B\n  \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))", "show \"f' \\<in> domain_and_range_permutation A B `` {f}\""], ["proof (prove)\nusing this:\n  p\\<^sub>A permutes A\n  p\\<^sub>B permutes B\n  \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\n\ngoal (1 subgoal):\n 1. f' \\<in> domain_and_range_permutation A B `` {f}", "using \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close> \\<open>f' \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  p\\<^sub>A permutes A\n  p\\<^sub>B permutes B\n  \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. f' \\<in> domain_and_range_permutation A B `` {f}", "unfolding domain_and_range_permutation_def"], ["proof (prove)\nusing this:\n  p\\<^sub>A permutes A\n  p\\<^sub>B permutes B\n  \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. f' \\<in> {(f, f').\n              (f, f')\n              \\<in> (A \\<rightarrow>\\<^sub>E B) \\<times>\n                    (A \\<rightarrow>\\<^sub>E B) \\<and>\n              (\\<exists>p\\<^sub>A p\\<^sub>B.\n                  p\\<^sub>A permutes A \\<and>\n                  p\\<^sub>B permutes B \\<and>\n                  (\\<forall>x\\<in>A.\n                      f x = p\\<^sub>B (f' (p\\<^sub>A x))))} ``\n             {f}", "by auto"], ["proof (state)\nthis:\n  f' \\<in> domain_and_range_permutation A B `` {f}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  functions_of A B N \\<subseteq> domain_and_range_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. domain_and_range_permutation A B `` {f} \\<subseteq> functions_of A B N", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. domain_and_range_permutation A B `` {f} \\<subseteq> functions_of A B N", "show \"domain_and_range_permutation A B `` {f} \\<subseteq> functions_of A B N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. domain_and_range_permutation A B `` {f} \\<subseteq> functions_of A B N", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domain_and_range_permutation A B `` {f} \\<Longrightarrow>\n       x \\<in> functions_of A B N", "fix f'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domain_and_range_permutation A B `` {f} \\<Longrightarrow>\n       x \\<in> functions_of A B N", "assume \"f' \\<in> domain_and_range_permutation A B `` {f}\""], ["proof (state)\nthis:\n  f' \\<in> domain_and_range_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domain_and_range_permutation A B `` {f} \\<Longrightarrow>\n       x \\<in> functions_of A B N", "from this"], ["proof (chain)\npicking this:\n  f' \\<in> domain_and_range_permutation A B `` {f}", "have in_equiv_relation: \"(f, f') \\<in> domain_and_range_permutation A B\""], ["proof (prove)\nusing this:\n  f' \\<in> domain_and_range_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. (f, f') \\<in> domain_and_range_permutation A B", "by auto"], ["proof (state)\nthis:\n  (f, f') \\<in> domain_and_range_permutation A B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domain_and_range_permutation A B `` {f} \\<Longrightarrow>\n       x \\<in> functions_of A B N", "from eq_N \\<open>finite B\\<close>"], ["proof (chain)\npicking this:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n  N\n  finite B", "have \"image_mset (\\<lambda>X. card X) (mset_set (((\\<lambda>b. {x \\<in> A. f' x = b})) ` B - {{}})) = N\""], ["proof (prove)\nusing this:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n  N\n  finite B\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})) =\n    N", "using congruentD[OF multiset_of_partition_cards_respects_domain_and_range_permutation in_equiv_relation]"], ["proof (prove)\nusing this:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n  N\n  finite B\n  finite B \\<Longrightarrow>\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})) =\n    N", "by metis"], ["proof (state)\nthis:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})) =\n  N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domain_and_range_permutation A B `` {f} \\<Longrightarrow>\n       x \\<in> functions_of A B N", "moreover"], ["proof (state)\nthis:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})) =\n  N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domain_and_range_permutation A B `` {f} \\<Longrightarrow>\n       x \\<in> functions_of A B N", "from \\<open>(f, f') \\<in> domain_and_range_permutation A B\\<close>"], ["proof (chain)\npicking this:\n  (f, f') \\<in> domain_and_range_permutation A B", "have \"f' \\<in> A \\<rightarrow>\\<^sub>E B\""], ["proof (prove)\nusing this:\n  (f, f') \\<in> domain_and_range_permutation A B\n\ngoal (1 subgoal):\n 1. f' \\<in> A \\<rightarrow>\\<^sub>E B", "unfolding domain_and_range_permutation_def"], ["proof (prove)\nusing this:\n  (f, f')\n  \\<in> {(f, f').\n         (f, f')\n         \\<in> (A \\<rightarrow>\\<^sub>E B) \\<times>\n               (A \\<rightarrow>\\<^sub>E B) \\<and>\n         (\\<exists>p\\<^sub>A p\\<^sub>B.\n             p\\<^sub>A permutes A \\<and>\n             p\\<^sub>B permutes B \\<and>\n             (\\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))))}\n\ngoal (1 subgoal):\n 1. f' \\<in> A \\<rightarrow>\\<^sub>E B", "by auto"], ["proof (state)\nthis:\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domain_and_range_permutation A B `` {f} \\<Longrightarrow>\n       x \\<in> functions_of A B N", "ultimately"], ["proof (chain)\npicking this:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})) =\n  N\n  f' \\<in> A \\<rightarrow>\\<^sub>E B", "show \"f' \\<in> functions_of A B N\""], ["proof (prove)\nusing this:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})) =\n  N\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. f' \\<in> functions_of A B N", "unfolding functions_of_def"], ["proof (prove)\nusing this:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})) =\n  N\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. f' \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B.\n              image_mset card\n               (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n              N}", "by auto"], ["proof (state)\nthis:\n  f' \\<in> functions_of A B N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  domain_and_range_permutation A B `` {f} \\<subseteq> functions_of A B N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  functions_of A B N = domain_and_range_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. functions_of A B N\n    \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B", "from this \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (chain)\npicking this:\n  functions_of A B N = domain_and_range_permutation A B `` {f}\n  f \\<in> A \\<rightarrow>\\<^sub>E B", "show ?thesis"], ["proof (prove)\nusing this:\n  functions_of A B N = domain_and_range_permutation A B `` {f}\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. functions_of A B N\n    \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B", "by (auto intro: quotientI)"], ["proof (state)\nthis:\n  functions_of A B N\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma functions_of_number_partition_of:\n  assumes \"finite A\" \"finite B\"\n  assumes \"F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\"\n  shows \"functions_of A B (number_partition_of A B F) = F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of A B (number_partition_of A B F) = F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. functions_of A B (number_partition_of A B F) = F", "from \\<open>F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\\<close>"], ["proof (chain)\npicking this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B", "obtain f where \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n    and F_eq: \"F = domain_and_range_permutation A B `` {f}\""], ["proof (prove)\nusing this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E B;\n         F = domain_and_range_permutation A B `` {f}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using quotientE"], ["proof (prove)\nusing this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n  \\<lbrakk>?X \\<in> ?A // ?r;\n   \\<And>x.\n      \\<lbrakk>?X = ?r `` {x}; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E B;\n         F = domain_and_range_permutation A B `` {f}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  F = domain_and_range_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. functions_of A B (number_partition_of A B F) = F", "have \"number_partition_of A B F = univ (\\<lambda>f. image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. number_partition_of A B F =\n    univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     F", "unfolding number_partition_of_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     F =\n    univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     F", ".."], ["proof (state)\nthis:\n  number_partition_of A B F =\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   F\n\ngoal (1 subgoal):\n 1. functions_of A B (number_partition_of A B F) = F", "also"], ["proof (state)\nthis:\n  number_partition_of A B F =\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   F\n\ngoal (1 subgoal):\n 1. functions_of A B (number_partition_of A B F) = F", "have \"\\<dots> = univ (\\<lambda>f. image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))) (domain_and_range_permutation A B `` {f})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     F =\n    univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f})", "unfolding F_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f}) =\n    univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f})", ".."], ["proof (state)\nthis:\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   F =\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   (domain_and_range_permutation A B `` {f})\n\ngoal (1 subgoal):\n 1. functions_of A B (number_partition_of A B F) = F", "also"], ["proof (state)\nthis:\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   F =\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   (domain_and_range_permutation A B `` {f})\n\ngoal (1 subgoal):\n 1. functions_of A B (number_partition_of A B F) = F", "have \"\\<dots> = image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f}) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "using \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite B\n\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f}) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "using equiv_domain_and_range_permutation multiset_of_partition_cards_respects_domain_and_range_permutation \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  finite B\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (domain_and_range_permutation ?A ?B)\n  finite ?B \\<Longrightarrow>\n  (\\<lambda>f.\n      image_mset card\n       (mset_set\n         ((\\<lambda>b. {x \\<in> ?A. f x = b}) ` ?B - {{}}))) respects\n  domain_and_range_permutation ?A ?B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f}) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "by (subst univ_commute') auto"], ["proof (state)\nthis:\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   (domain_and_range_permutation A B `` {f}) =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. functions_of A B (number_partition_of A B F) = F", "finally"], ["proof (chain)\npicking this:\n  number_partition_of A B F =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "have number_partition_of_eq: \"number_partition_of A B F = image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\""], ["proof (prove)\nusing this:\n  number_partition_of A B F =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. number_partition_of A B F =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "."], ["proof (state)\nthis:\n  number_partition_of A B F =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. functions_of A B (number_partition_of A B F) = F", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of A B (number_partition_of A B F) = F", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. functions_of A B (number_partition_of A B F) \\<subseteq> F\n 2. F \\<subseteq> functions_of A B (number_partition_of A B F)", "show \"functions_of A B (number_partition_of A B F) \\<subseteq> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of A B (number_partition_of A B F) \\<subseteq> F", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A B\n                (number_partition_of A B F) \\<Longrightarrow>\n       x \\<in> F", "fix f'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A B\n                (number_partition_of A B F) \\<Longrightarrow>\n       x \\<in> F", "assume \"f' \\<in> functions_of A B (number_partition_of A B F)\""], ["proof (state)\nthis:\n  f' \\<in> functions_of A B (number_partition_of A B F)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A B\n                (number_partition_of A B F) \\<Longrightarrow>\n       x \\<in> F", "from this"], ["proof (chain)\npicking this:\n  f' \\<in> functions_of A B (number_partition_of A B F)", "have \"f' \\<in> A \\<rightarrow>\\<^sub>E B\"\n        and eq: \"image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})) = image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\""], ["proof (prove)\nusing this:\n  f' \\<in> functions_of A B (number_partition_of A B F)\n\ngoal (1 subgoal):\n 1. f' \\<in> A \\<rightarrow>\\<^sub>E B &&&\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "unfolding functions_of_def"], ["proof (prove)\nusing this:\n  f' \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B.\n            image_mset card\n             (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n            number_partition_of A B F}\n\ngoal (1 subgoal):\n 1. f' \\<in> A \\<rightarrow>\\<^sub>E B &&&\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "by (auto simp add: number_partition_of_eq)"], ["proof (state)\nthis:\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})) =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A B\n                (number_partition_of A B F) \\<Longrightarrow>\n       x \\<in> F", "note \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close> \\<open>f' \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A B\n                (number_partition_of A B F) \\<Longrightarrow>\n       x \\<in> F", "moreover"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A B\n                (number_partition_of A B F) \\<Longrightarrow>\n       x \\<in> F", "obtain p\\<^sub>A p\\<^sub>B where \"p\\<^sub>A permutes A\" \"p\\<^sub>B permutes B\" \"\\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>A p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>finite A\\<close> \\<open>finite B\\<close> \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close> \\<open>f' \\<in> A \\<rightarrow>\\<^sub>E B\\<close> eq\n          multiset_of_partition_cards_eq_implies_permutes[of A B f f']"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}})) =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n  \\<lbrakk>finite A; finite B; f \\<in> A \\<rightarrow>\\<^sub>E B;\n   f' \\<in> A \\<rightarrow>\\<^sub>E B;\n   image_mset card\n    (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n   image_mset card\n    (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}));\n   \\<And>p\\<^sub>A p\\<^sub>B.\n      \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n       \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>A p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  p\\<^sub>A permutes A\n  p\\<^sub>B permutes B\n  \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> functions_of A B\n                (number_partition_of A B F) \\<Longrightarrow>\n       x \\<in> F", "ultimately"], ["proof (chain)\npicking this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n  p\\<^sub>A permutes A\n  p\\<^sub>B permutes B\n  \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))", "show \"f' \\<in> F\""], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n  p\\<^sub>A permutes A\n  p\\<^sub>B permutes B\n  \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\n\ngoal (1 subgoal):\n 1. f' \\<in> F", "unfolding F_eq domain_and_range_permutation_def"], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n  p\\<^sub>A permutes A\n  p\\<^sub>B permutes B\n  \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\n\ngoal (1 subgoal):\n 1. f' \\<in> {(f, f').\n              (f, f')\n              \\<in> (A \\<rightarrow>\\<^sub>E B) \\<times>\n                    (A \\<rightarrow>\\<^sub>E B) \\<and>\n              (\\<exists>p\\<^sub>A p\\<^sub>B.\n                  p\\<^sub>A permutes A \\<and>\n                  p\\<^sub>B permutes B \\<and>\n                  (\\<forall>x\\<in>A.\n                      f x = p\\<^sub>B (f' (p\\<^sub>A x))))} ``\n             {f}", "by auto"], ["proof (state)\nthis:\n  f' \\<in> F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  functions_of A B (number_partition_of A B F) \\<subseteq> F\n\ngoal (1 subgoal):\n 1. F \\<subseteq> functions_of A B (number_partition_of A B F)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. F \\<subseteq> functions_of A B (number_partition_of A B F)", "show \"F \\<subseteq> functions_of A B (number_partition_of A B F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<subseteq> functions_of A B (number_partition_of A B F)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> F \\<Longrightarrow>\n       x \\<in> functions_of A B (number_partition_of A B F)", "fix f'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> F \\<Longrightarrow>\n       x \\<in> functions_of A B (number_partition_of A B F)", "assume \"f' \\<in> F\""], ["proof (state)\nthis:\n  f' \\<in> F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> F \\<Longrightarrow>\n       x \\<in> functions_of A B (number_partition_of A B F)", "from \\<open>f' \\<in> F\\<close>"], ["proof (chain)\npicking this:\n  f' \\<in> F", "obtain p\\<^sub>A p\\<^sub>B where \"p\\<^sub>A permutes A\" \"p\\<^sub>B permutes B\" \"\\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\""], ["proof (prove)\nusing this:\n  f' \\<in> F\n\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>A p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding F_eq domain_and_range_permutation_def"], ["proof (prove)\nusing this:\n  f' \\<in> {(f, f').\n            (f, f')\n            \\<in> (A \\<rightarrow>\\<^sub>E B) \\<times>\n                  (A \\<rightarrow>\\<^sub>E B) \\<and>\n            (\\<exists>p\\<^sub>A p\\<^sub>B.\n                p\\<^sub>A permutes A \\<and>\n                p\\<^sub>B permutes B \\<and>\n                (\\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))))} ``\n           {f}\n\ngoal (1 subgoal):\n 1. (\\<And>p\\<^sub>A p\\<^sub>B.\n        \\<lbrakk>p\\<^sub>A permutes A; p\\<^sub>B permutes B;\n         \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p\\<^sub>A permutes A\n  p\\<^sub>B permutes B\n  \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> F \\<Longrightarrow>\n       x \\<in> functions_of A B (number_partition_of A B F)", "have eq: \"image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) = image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "have \"(\\<lambda>b. {x \\<in> A. f x = b}) ` B = (\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f x = b}) ` B =\n    (\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B", "using \\<open>\\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. {x \\<in> A. f x = b}) ` B =\n    (\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B =\n  (\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "from this"], ["proof (chain)\npicking this:\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B =\n  (\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B", "have \"image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n          image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B - {{}}))\""], ["proof (prove)\nusing this:\n  (\\<lambda>b. {x \\<in> A. f x = b}) ` B =\n  (\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n    image_mset card\n     (mset_set\n       ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n        {{}}))", "by simp"], ["proof (state)\nthis:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n  image_mset card\n   (mset_set\n     ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n      {{}}))\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "also"], ["proof (state)\nthis:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n  image_mset card\n   (mset_set\n     ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n      {{}}))\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "have \"\\<dots> = image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n        {{}})) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "using \\<open>p\\<^sub>A permutes A\\<close> \\<open>p\\<^sub>B permutes B\\<close> permutes_implies_multiset_of_partition_cards_eq"], ["proof (prove)\nusing this:\n  p\\<^sub>A permutes A\n  p\\<^sub>B permutes B\n  \\<lbrakk>?p\\<^sub>A permutes ?A; ?p\\<^sub>B permutes ?B\\<rbrakk>\n  \\<Longrightarrow> image_mset card\n                     (mset_set\n                       ((\\<lambda>b.\n                            {x \\<in> ?A.\n                             ?p\\<^sub>B (?f' (?p\\<^sub>A x)) = b}) `\n                        ?B -\n                        {{}})) =\n                    image_mset card\n                     (mset_set\n                       ((\\<lambda>b. {x \\<in> ?A. ?f' x = b}) ` ?B - {{}}))\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set\n       ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n        {{}})) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "by blast"], ["proof (state)\nthis:\n  image_mset card\n   (mset_set\n     ((\\<lambda>b. {x \\<in> A. p\\<^sub>B (f' (p\\<^sub>A x)) = b}) ` B -\n      {{}})) =\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "finally"], ["proof (chain)\npicking this:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "show ?thesis"], ["proof (prove)\nusing this:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))", "."], ["proof (state)\nthis:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> F \\<Longrightarrow>\n       x \\<in> functions_of A B (number_partition_of A B F)", "moreover"], ["proof (state)\nthis:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> F \\<Longrightarrow>\n       x \\<in> functions_of A B (number_partition_of A B F)", "from \\<open>f' \\<in> F\\<close>"], ["proof (chain)\npicking this:\n  f' \\<in> F", "have \"f' \\<in> A \\<rightarrow>\\<^sub>E B\""], ["proof (prove)\nusing this:\n  f' \\<in> F\n\ngoal (1 subgoal):\n 1. f' \\<in> A \\<rightarrow>\\<^sub>E B", "unfolding F_eq domain_and_range_permutation_def"], ["proof (prove)\nusing this:\n  f' \\<in> {(f, f').\n            (f, f')\n            \\<in> (A \\<rightarrow>\\<^sub>E B) \\<times>\n                  (A \\<rightarrow>\\<^sub>E B) \\<and>\n            (\\<exists>p\\<^sub>A p\\<^sub>B.\n                p\\<^sub>A permutes A \\<and>\n                p\\<^sub>B permutes B \\<and>\n                (\\<forall>x\\<in>A. f x = p\\<^sub>B (f' (p\\<^sub>A x))))} ``\n           {f}\n\ngoal (1 subgoal):\n 1. f' \\<in> A \\<rightarrow>\\<^sub>E B", "by auto"], ["proof (state)\nthis:\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> F \\<Longrightarrow>\n       x \\<in> functions_of A B (number_partition_of A B F)", "ultimately"], ["proof (chain)\npicking this:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\n  f' \\<in> A \\<rightarrow>\\<^sub>E B", "show \"f' \\<in> functions_of A B (number_partition_of A B F)\""], ["proof (prove)\nusing this:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. f' \\<in> functions_of A B (number_partition_of A B F)", "unfolding functions_of_def number_partition_of_eq"], ["proof (prove)\nusing this:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f' x = b}) ` B - {{}}))\n  f' \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. f' \\<in> {fa \\<in> A \\<rightarrow>\\<^sub>E B.\n              image_mset card\n               (mset_set ((\\<lambda>b. {x \\<in> A. fa x = b}) ` B - {{}})) =\n              image_mset card\n               (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))}", "by auto"], ["proof (state)\nthis:\n  f' \\<in> functions_of A B (number_partition_of A B F)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F \\<subseteq> functions_of A B (number_partition_of A B F)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  functions_of A B (number_partition_of A B F) = F\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma number_partition_of_functions_of:\n  assumes \"finite A\" \"finite B\"\n  assumes \"number_partition (card A) N\" \"size N \\<le> card B\"\n  shows \"number_partition_of A B (functions_of A B N) = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. number_partition_of A B (functions_of A B N) = N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. number_partition_of A B (functions_of A B N) = N", "from assms"], ["proof (chain)\npicking this:\n  finite A\n  finite B\n  number_partition (card A) N\n  size N \\<le> card B", "have \"functions_of A B N \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\""], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  number_partition (card A) N\n  size N \\<le> card B\n\ngoal (1 subgoal):\n 1. functions_of A B N\n    \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B", "using functions_of assms"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  number_partition (card A) N\n  size N \\<le> card B\n  \\<lbrakk>finite ?A; finite ?B; number_partition (card ?A) ?N;\n   size ?N \\<le> card ?B\\<rbrakk>\n  \\<Longrightarrow> functions_of ?A ?B ?N\n                    \\<in> (?A \\<rightarrow>\\<^sub>E ?B) //\n                          domain_and_range_permutation ?A ?B\n  finite A\n  finite B\n  number_partition (card A) N\n  size N \\<le> card B\n\ngoal (1 subgoal):\n 1. functions_of A B N\n    \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B", "by fastforce"], ["proof (state)\nthis:\n  functions_of A B N\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n\ngoal (1 subgoal):\n 1. number_partition_of A B (functions_of A B N) = N", "from this"], ["proof (chain)\npicking this:\n  functions_of A B N\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B", "obtain f where \"f \\<in> A \\<rightarrow>\\<^sub>E B\" and \"functions_of A B N = domain_and_range_permutation A B `` {f}\""], ["proof (prove)\nusing this:\n  functions_of A B N\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E B;\n         functions_of A B N =\n         domain_and_range_permutation A B `` {f}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson quotientE)"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  functions_of A B N = domain_and_range_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. number_partition_of A B (functions_of A B N) = N", "from this"], ["proof (chain)\npicking this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  functions_of A B N = domain_and_range_permutation A B `` {f}", "have \"f \\<in> functions_of A B N\""], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  functions_of A B N = domain_and_range_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. f \\<in> functions_of A B N", "using equiv_domain_and_range_permutation equiv_class_self"], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  functions_of A B N = domain_and_range_permutation A B `` {f}\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (domain_and_range_permutation ?A ?B)\n  \\<lbrakk>equiv ?A ?r; ?a \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> ?r `` {?a}\n\ngoal (1 subgoal):\n 1. f \\<in> functions_of A B N", "by fastforce"], ["proof (state)\nthis:\n  f \\<in> functions_of A B N\n\ngoal (1 subgoal):\n 1. number_partition_of A B (functions_of A B N) = N", "have \"number_partition_of A B (functions_of A B N) = univ (\\<lambda>f. image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))) (functions_of A B N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. number_partition_of A B (functions_of A B N) =\n    univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (functions_of A B N)", "unfolding number_partition_of_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (functions_of A B N) =\n    univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (functions_of A B N)", ".."], ["proof (state)\nthis:\n  number_partition_of A B (functions_of A B N) =\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   (functions_of A B N)\n\ngoal (1 subgoal):\n 1. number_partition_of A B (functions_of A B N) = N", "also"], ["proof (state)\nthis:\n  number_partition_of A B (functions_of A B N) =\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   (functions_of A B N)\n\ngoal (1 subgoal):\n 1. number_partition_of A B (functions_of A B N) = N", "have \"\\<dots> = univ (\\<lambda>f.  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))) (domain_and_range_permutation A B `` {f})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (functions_of A B N) =\n    univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f})", "unfolding \\<open>functions_of A B N = domain_and_range_permutation A B `` {f}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f}) =\n    univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f})", ".."], ["proof (state)\nthis:\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   (functions_of A B N) =\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   (domain_and_range_permutation A B `` {f})\n\ngoal (1 subgoal):\n 1. number_partition_of A B (functions_of A B N) = N", "also"], ["proof (state)\nthis:\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   (functions_of A B N) =\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   (domain_and_range_permutation A B `` {f})\n\ngoal (1 subgoal):\n 1. number_partition_of A B (functions_of A B N) = N", "have \"\\<dots> = image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f}) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "using \\<open>finite B\\<close> \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close> equiv_domain_and_range_permutation\n      multiset_of_partition_cards_respects_domain_and_range_permutation"], ["proof (prove)\nusing this:\n  finite B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (domain_and_range_permutation ?A ?B)\n  finite ?B \\<Longrightarrow>\n  (\\<lambda>f.\n      image_mset card\n       (mset_set\n         ((\\<lambda>b. {x \\<in> ?A. f x = b}) ` ?B - {{}}))) respects\n  domain_and_range_permutation ?A ?B\n\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f}) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "by (subst univ_commute') auto"], ["proof (state)\nthis:\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   (domain_and_range_permutation A B `` {f}) =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. number_partition_of A B (functions_of A B N) = N", "also"], ["proof (state)\nthis:\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   (domain_and_range_permutation A B `` {f}) =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. number_partition_of A B (functions_of A B N) = N", "have \"image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n    N", "using \\<open>f \\<in> functions_of A B N\\<close>"], ["proof (prove)\nusing this:\n  f \\<in> functions_of A B N\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n    N", "unfolding functions_of_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B.\n           image_mset card\n            (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n           N}\n\ngoal (1 subgoal):\n 1. image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n    N", "by simp"], ["proof (state)\nthis:\n  image_mset card\n   (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n  N\n\ngoal (1 subgoal):\n 1. number_partition_of A B (functions_of A B N) = N", "finally"], ["proof (chain)\npicking this:\n  number_partition_of A B (functions_of A B N) = N", "show ?thesis"], ["proof (prove)\nusing this:\n  number_partition_of A B (functions_of A B N) = N\n\ngoal (1 subgoal):\n 1. number_partition_of A B (functions_of A B N) = N", "."], ["proof (state)\nthis:\n  number_partition_of A B (functions_of A B N) = N\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Bijections\\<close>"], ["", "lemma bij_betw_number_partition_of:\n  assumes \"finite A\" \"finite B\"\n  shows \"bij_betw (number_partition_of A B) ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B) {N. number_partition (card A) N \\<and> size N \\<le> card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (number_partition_of A B)\n     ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B)\n     {N. number_partition (card A) N \\<and> size N \\<le> card B}", "proof (rule bij_betw_byWitness[where f'=\"\\<lambda>M. functions_of A B M\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>(A \\<rightarrow>\\<^sub>E B) //\n                   domain_and_range_permutation A B.\n       functions_of A B (number_partition_of A B a) = a\n 2. \\<forall>a'\\<in>{N. number_partition (card A) N \\<and>\n                        size N \\<le> card B}.\n       number_partition_of A B (functions_of A B a') = a'\n 3. number_partition_of A B `\n    (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n    \\<subseteq> {N. number_partition (card A) N \\<and> size N \\<le> card B}\n 4. functions_of A B `\n    {N. number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> (A \\<rightarrow>\\<^sub>E B) //\n                domain_and_range_permutation A B", "show \"\\<forall>F\\<in>(A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B. functions_of A B (number_partition_of A B F) = F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>F\\<in>(A \\<rightarrow>\\<^sub>E B) //\n                   domain_and_range_permutation A B.\n       functions_of A B (number_partition_of A B F) = F", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. \\<forall>F\\<in>(A \\<rightarrow>\\<^sub>E B) //\n                   domain_and_range_permutation A B.\n       functions_of A B (number_partition_of A B F) = F", "by (auto simp add: functions_of_number_partition_of)"], ["proof (state)\nthis:\n  \\<forall>F\\<in>(A \\<rightarrow>\\<^sub>E B) //\n                 domain_and_range_permutation A B.\n     functions_of A B (number_partition_of A B F) = F\n\ngoal (3 subgoals):\n 1. \\<forall>a'\\<in>{N. number_partition (card A) N \\<and>\n                        size N \\<le> card B}.\n       number_partition_of A B (functions_of A B a') = a'\n 2. number_partition_of A B `\n    (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n    \\<subseteq> {N. number_partition (card A) N \\<and> size N \\<le> card B}\n 3. functions_of A B `\n    {N. number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> (A \\<rightarrow>\\<^sub>E B) //\n                domain_and_range_permutation A B", "show \"\\<forall>N\\<in>{N. number_partition (card A) N \\<and> size N \\<le> card B}. number_partition_of A B (functions_of A B N) = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>N\\<in>{N. number_partition (card A) N \\<and>\n                       size N \\<le> card B}.\n       number_partition_of A B (functions_of A B N) = N", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. \\<forall>N\\<in>{N. number_partition (card A) N \\<and>\n                       size N \\<le> card B}.\n       number_partition_of A B (functions_of A B N) = N", "by (auto simp add: number_partition_of_functions_of)"], ["proof (state)\nthis:\n  \\<forall>N\\<in>{N. number_partition (card A) N \\<and>\n                     size N \\<le> card B}.\n     number_partition_of A B (functions_of A B N) = N\n\ngoal (2 subgoals):\n 1. number_partition_of A B `\n    (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n    \\<subseteq> {N. number_partition (card A) N \\<and> size N \\<le> card B}\n 2. functions_of A B `\n    {N. number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> (A \\<rightarrow>\\<^sub>E B) //\n                domain_and_range_permutation A B", "show \"number_partition_of A B ` ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B) \\<subseteq> {N. number_partition (card A) N \\<and> size N \\<le> card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. number_partition_of A B `\n    (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n    \\<subseteq> {N. number_partition (card A) N \\<and> size N \\<le> card B}", "using number_partition_of[of A B] \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite A; finite B;\n   ?F \\<in> (A \\<rightarrow>\\<^sub>E B) //\n            domain_and_range_permutation A B\\<rbrakk>\n  \\<Longrightarrow> number_partition (card A) (number_partition_of A B ?F)\n  \\<lbrakk>finite A; finite B;\n   ?F \\<in> (A \\<rightarrow>\\<^sub>E B) //\n            domain_and_range_permutation A B\\<rbrakk>\n  \\<Longrightarrow> size (number_partition_of A B ?F) \\<le> card B\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. number_partition_of A B `\n    (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n    \\<subseteq> {N. number_partition (card A) N \\<and> size N \\<le> card B}", "by auto"], ["proof (state)\nthis:\n  number_partition_of A B `\n  (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n  \\<subseteq> {N. number_partition (card A) N \\<and> size N \\<le> card B}\n\ngoal (1 subgoal):\n 1. functions_of A B `\n    {N. number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> (A \\<rightarrow>\\<^sub>E B) //\n                domain_and_range_permutation A B", "show \"functions_of A B ` {N. number_partition (card A) N \\<and> size N \\<le> card B} \\<subseteq> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of A B `\n    {N. number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> (A \\<rightarrow>\\<^sub>E B) //\n                domain_and_range_permutation A B", "using functions_of \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; finite ?B; number_partition (card ?A) ?N;\n   size ?N \\<le> card ?B\\<rbrakk>\n  \\<Longrightarrow> functions_of ?A ?B ?N\n                    \\<in> (?A \\<rightarrow>\\<^sub>E ?B) //\n                          domain_and_range_permutation ?A ?B\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. functions_of A B `\n    {N. number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> (A \\<rightarrow>\\<^sub>E B) //\n                domain_and_range_permutation A B", "by blast"], ["proof (state)\nthis:\n  functions_of A B `\n  {N. number_partition (card A) N \\<and> size N \\<le> card B}\n  \\<subseteq> (A \\<rightarrow>\\<^sub>E B) //\n              domain_and_range_permutation A B\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Cardinality\\<close>"], ["", "lemma card_domain_and_range_permutation:\n  assumes \"finite A\" \"finite B\"\n  shows \"card ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B) = Partition (card A + card B) (card B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B) =\n    Partition (card A + card B) (card B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B) =\n    Partition (card A + card B) (card B)", "have \"bij_betw (number_partition_of A B) ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B) {N. number_partition (card A) N \\<and> size N \\<le> card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (number_partition_of A B)\n     ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B)\n     {N. number_partition (card A) N \\<and> size N \\<le> card B}", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. bij_betw (number_partition_of A B)\n     ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B)\n     {N. number_partition (card A) N \\<and> size N \\<le> card B}", "by (rule bij_betw_number_partition_of)"], ["proof (state)\nthis:\n  bij_betw (number_partition_of A B)\n   ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B)\n   {N. number_partition (card A) N \\<and> size N \\<le> card B}\n\ngoal (1 subgoal):\n 1. card ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B) =\n    Partition (card A + card B) (card B)", "from this"], ["proof (chain)\npicking this:\n  bij_betw (number_partition_of A B)\n   ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B)\n   {N. number_partition (card A) N \\<and> size N \\<le> card B}", "have \"card ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B) = card {N. number_partition (card A) N \\<and> size N \\<le> card B}\""], ["proof (prove)\nusing this:\n  bij_betw (number_partition_of A B)\n   ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B)\n   {N. number_partition (card A) N \\<and> size N \\<le> card B}\n\ngoal (1 subgoal):\n 1. card ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B) =\n    card {N. number_partition (card A) N \\<and> size N \\<le> card B}", "by (rule bij_betw_same_card)"], ["proof (state)\nthis:\n  card ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B) =\n  card {N. number_partition (card A) N \\<and> size N \\<le> card B}\n\ngoal (1 subgoal):\n 1. card ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B) =\n    Partition (card A + card B) (card B)", "also"], ["proof (state)\nthis:\n  card ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B) =\n  card {N. number_partition (card A) N \\<and> size N \\<le> card B}\n\ngoal (1 subgoal):\n 1. card ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B) =\n    Partition (card A + card B) (card B)", "have \"card {N. number_partition (card A) N \\<and> size N \\<le> card B} = Partition (card A + card B) (card B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {N. number_partition (card A) N \\<and> size N \\<le> card B} =\n    Partition (card A + card B) (card B)", "by (rule card_number_partitions_with_atmost_k_parts)"], ["proof (state)\nthis:\n  card {N. number_partition (card A) N \\<and> size N \\<le> card B} =\n  Partition (card A + card B) (card B)\n\ngoal (1 subgoal):\n 1. card ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B) =\n    Partition (card A + card B) (card B)", "finally"], ["proof (chain)\npicking this:\n  card ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B) =\n  Partition (card A + card B) (card B)", "show ?thesis"], ["proof (prove)\nusing this:\n  card ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B) =\n  Partition (card A + card B) (card B)\n\ngoal (1 subgoal):\n 1. card ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B) =\n    Partition (card A + card B) (card B)", "."], ["proof (state)\nthis:\n  card ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B) =\n  Partition (card A + card B) (card B)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}