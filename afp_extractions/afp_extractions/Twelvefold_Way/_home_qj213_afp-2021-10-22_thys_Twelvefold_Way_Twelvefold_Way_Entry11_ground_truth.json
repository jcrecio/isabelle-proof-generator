{"file_name": "/home/qj213/afp-2021-10-22/thys/Twelvefold_Way/Twelvefold_Way_Entry11.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Twelvefold_Way", "problem_names": ["lemma all_one_implies_inj_on:\n  assumes \"finite A\" \"finite B\"\n  assumes \"\\<forall>n. n\\<in># N \\<longrightarrow> n = 1\" \"number_partition (card A) N\" \"size N \\<le> card B\"\n  assumes \"f \\<in> functions_of A B N\"\n  shows   \"inj_on f A\"", "lemma inj_on_implies_all_one:\n  assumes \"finite A\" \"finite B\"\n  assumes \"F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\"\n  assumes \"univ (\\<lambda>f. inj_on f A) F\"\n  shows \"\\<forall>n. n\\<in># number_partition_of A B F \\<longrightarrow> n = 1\"", "lemma functions_of_is_inj_on:\n  assumes \"finite A\" \"finite B\"\n  assumes \"\\<forall>n. n\\<in># N \\<longrightarrow> n = 1\" \"number_partition (card A) N\" \"size N \\<le> card B\"\n  shows \"univ (\\<lambda>f. inj_on f A) (functions_of A B N)\"", "lemma bij_betw_number_partition_of:\n  assumes \"finite A\" \"finite B\"\n  shows \"bij_betw (number_partition_of A B) ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_and_range_permutation A B) {N. (\\<forall>n. n\\<in># N \\<longrightarrow> n = 1) \\<and> number_partition (card A) N \\<and> size N \\<le> card B}\"", "lemma bij_betw_functions_of:\n  assumes \"finite A\" \"finite B\"\n  shows \"bij_betw (functions_of A B) {N. (\\<forall>n. n\\<in># N \\<longrightarrow> n = 1) \\<and> number_partition (card A) N \\<and> size N \\<le> card B} ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_and_range_permutation A B)\"", "lemma card_injective_functions_domain_and_range_permutation:\n  assumes \"finite A\" \"finite B\"\n  shows \"card ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_and_range_permutation A B) = iverson (card A \\<le> card B)\""], "translations": [["", "lemma all_one_implies_inj_on:\n  assumes \"finite A\" \"finite B\"\n  assumes \"\\<forall>n. n\\<in># N \\<longrightarrow> n = 1\" \"number_partition (card A) N\" \"size N \\<le> card B\"\n  assumes \"f \\<in> functions_of A B N\"\n  shows   \"inj_on f A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on f A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on f A", "from \\<open>f \\<in> functions_of A B N\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> functions_of A B N", "have \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n    and \"N = image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\""], ["proof (prove)\nusing this:\n  f \\<in> functions_of A B N\n\ngoal (1 subgoal):\n 1. f \\<in> A \\<rightarrow>\\<^sub>E B &&&\n    N =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "unfolding functions_of_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E B.\n           image_mset card\n            (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) =\n           N}\n\ngoal (1 subgoal):\n 1. f \\<in> A \\<rightarrow>\\<^sub>E B &&&\n    N =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "by auto"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  N =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. inj_on f A", "from this \\<open>\\<forall>n. n\\<in># N \\<longrightarrow> n = 1\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  N =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n  \\<forall>n. n \\<in># N \\<longrightarrow> n = 1", "have parts: \"\\<forall>b \\<in> B. card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}\""], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  N =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n  \\<forall>n. n \\<in># N \\<longrightarrow> n = 1\n\ngoal (1 subgoal):\n 1. \\<forall>b\\<in>B.\n       card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}", "using \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  N =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n  \\<forall>n. n \\<in># N \\<longrightarrow> n = 1\n  finite B\n\ngoal (1 subgoal):\n 1. \\<forall>b\\<in>B.\n       card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}", "by auto"], ["proof (state)\nthis:\n  \\<forall>b\\<in>B.\n     card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}\n\ngoal (1 subgoal):\n 1. inj_on f A", "show \"inj_on f A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on f A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; f x = f y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; f x = f y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume a: \"x \\<in> A\" \"y \\<in> A\" \"f x = f y\""], ["proof (state)\nthis:\n  x \\<in> A\n  y \\<in> A\n  f x = f y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; f x = f y\\<rbrakk>\n       \\<Longrightarrow> x = y", "from \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close> \\<open>x \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  x \\<in> A", "have \"f x \\<in> B\""], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. f x \\<in> B", "by auto"], ["proof (state)\nthis:\n  f x \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; f x = f y\\<rbrakk>\n       \\<Longrightarrow> x = y", "from a"], ["proof (chain)\npicking this:\n  x \\<in> A\n  y \\<in> A\n  f x = f y", "have 1: \"x \\<in> {x' \\<in> A. f x' = f x}\" \"y \\<in> {x' \\<in> A. f x' = f x}\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> A\n  f x = f y\n\ngoal (1 subgoal):\n 1. x \\<in> {x' \\<in> A. f x' = f x} &&& y \\<in> {x' \\<in> A. f x' = f x}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {x' \\<in> A. f x' = f x}\n  y \\<in> {x' \\<in> A. f x' = f x}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; f x = f y\\<rbrakk>\n       \\<Longrightarrow> x = y", "from this"], ["proof (chain)\npicking this:\n  x \\<in> {x' \\<in> A. f x' = f x}\n  y \\<in> {x' \\<in> A. f x' = f x}", "have 2: \"card {x' \\<in> A. f x' = f x} = 1\""], ["proof (prove)\nusing this:\n  x \\<in> {x' \\<in> A. f x' = f x}\n  y \\<in> {x' \\<in> A. f x' = f x}\n\ngoal (1 subgoal):\n 1. card {x' \\<in> A. f x' = f x} = 1", "using parts \\<open>f x \\<in> B\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> {x' \\<in> A. f x' = f x}\n  y \\<in> {x' \\<in> A. f x' = f x}\n  \\<forall>b\\<in>B.\n     card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}\n  f x \\<in> B\n\ngoal (1 subgoal):\n 1. card {x' \\<in> A. f x' = f x} = 1", "by blast"], ["proof (state)\nthis:\n  card {x' \\<in> A. f x' = f x} = 1\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; f x = f y\\<rbrakk>\n       \\<Longrightarrow> x = y", "from this"], ["proof (chain)\npicking this:\n  card {x' \\<in> A. f x' = f x} = 1", "have \"is_singleton {x' \\<in> A. f x' = f x}\""], ["proof (prove)\nusing this:\n  card {x' \\<in> A. f x' = f x} = 1\n\ngoal (1 subgoal):\n 1. is_singleton {x' \\<in> A. f x' = f x}", "by (simp add: is_singleton_altdef)"], ["proof (state)\nthis:\n  is_singleton {x' \\<in> A. f x' = f x}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; f x = f y\\<rbrakk>\n       \\<Longrightarrow> x = y", "from 1 this"], ["proof (chain)\npicking this:\n  x \\<in> {x' \\<in> A. f x' = f x}\n  y \\<in> {x' \\<in> A. f x' = f x}\n  is_singleton {x' \\<in> A. f x' = f x}", "show \"x = y\""], ["proof (prove)\nusing this:\n  x \\<in> {x' \\<in> A. f x' = f x}\n  y \\<in> {x' \\<in> A. f x' = f x}\n  is_singleton {x' \\<in> A. f x' = f x}\n\ngoal (1 subgoal):\n 1. x = y", "by (metis is_singletonE singletonD)"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on f A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inj_on_implies_all_one:\n  assumes \"finite A\" \"finite B\"\n  assumes \"F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\"\n  assumes \"univ (\\<lambda>f. inj_on f A) F\"\n  shows \"\\<forall>n. n\\<in># number_partition_of A B F \\<longrightarrow> n = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. n \\<in># number_partition_of A B F \\<longrightarrow> n = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n. n \\<in># number_partition_of A B F \\<longrightarrow> n = 1", "from \\<open>F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\\<close>"], ["proof (chain)\npicking this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B", "obtain f where \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n    and F_eq: \"F = domain_and_range_permutation A B `` {f}\""], ["proof (prove)\nusing this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E B;\n         F = domain_and_range_permutation A B `` {f}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using quotientE"], ["proof (prove)\nusing this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n  \\<lbrakk>?X \\<in> ?A // ?r;\n   \\<And>x.\n      \\<lbrakk>?X = ?r `` {x}; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E B;\n         F = domain_and_range_permutation A B `` {f}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  F = domain_and_range_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. \\<forall>n. n \\<in># number_partition_of A B F \\<longrightarrow> n = 1", "have \"number_partition_of A B F = univ (\\<lambda>f. image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. number_partition_of A B F =\n    univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     F", "unfolding number_partition_of_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     F =\n    univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     F", ".."], ["proof (state)\nthis:\n  number_partition_of A B F =\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   F\n\ngoal (1 subgoal):\n 1. \\<forall>n. n \\<in># number_partition_of A B F \\<longrightarrow> n = 1", "also"], ["proof (state)\nthis:\n  number_partition_of A B F =\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   F\n\ngoal (1 subgoal):\n 1. \\<forall>n. n \\<in># number_partition_of A B F \\<longrightarrow> n = 1", "have \"\\<dots> =  univ (\\<lambda>f. image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))) (domain_and_range_permutation A B `` {f})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     F =\n    univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f})", "unfolding F_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f}) =\n    univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f})", ".."], ["proof (state)\nthis:\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   F =\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   (domain_and_range_permutation A B `` {f})\n\ngoal (1 subgoal):\n 1. \\<forall>n. n \\<in># number_partition_of A B F \\<longrightarrow> n = 1", "also"], ["proof (state)\nthis:\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   F =\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   (domain_and_range_permutation A B `` {f})\n\ngoal (1 subgoal):\n 1. \\<forall>n. n \\<in># number_partition_of A B F \\<longrightarrow> n = 1", "have \"\\<dots> = image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f}) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "using \\<open>finite B\\<close> equiv_domain_and_range_permutation multiset_of_partition_cards_respects_domain_and_range_permutation \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  finite B\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (domain_and_range_permutation ?A ?B)\n  finite ?B \\<Longrightarrow>\n  (\\<lambda>f.\n      image_mset card\n       (mset_set\n         ((\\<lambda>b. {x \\<in> ?A. f x = b}) ` ?B - {{}}))) respects\n  domain_and_range_permutation ?A ?B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. univ\n     (\\<lambda>f.\n         image_mset card\n          (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n     (domain_and_range_permutation A B `` {f}) =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "by (subst univ_commute') auto"], ["proof (state)\nthis:\n  univ\n   (\\<lambda>f.\n       image_mset card\n        (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})))\n   (domain_and_range_permutation A B `` {f}) =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. \\<forall>n. n \\<in># number_partition_of A B F \\<longrightarrow> n = 1", "finally"], ["proof (chain)\npicking this:\n  number_partition_of A B F =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "have eq: \"number_partition_of A B F = image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\""], ["proof (prove)\nusing this:\n  number_partition_of A B F =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. number_partition_of A B F =\n    image_mset card\n     (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))", "."], ["proof (state)\nthis:\n  number_partition_of A B F =\n  image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}}))\n\ngoal (1 subgoal):\n 1. \\<forall>n. n \\<in># number_partition_of A B F \\<longrightarrow> n = 1", "from iffD1[OF univ_commute', OF equiv_domain_and_range_permutation, OF inj_on_respects_domain_and_range_permutation, OF \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>]\n    assms(4)"], ["proof (chain)\npicking this:\n  univ (\\<lambda>f. inj_on f A)\n   (domain_and_range_permutation A B `` {f}) \\<Longrightarrow>\n  inj_on f A\n  univ (\\<lambda>f. inj_on f A) F", "have \"inj_on f A\""], ["proof (prove)\nusing this:\n  univ (\\<lambda>f. inj_on f A)\n   (domain_and_range_permutation A B `` {f}) \\<Longrightarrow>\n  inj_on f A\n  univ (\\<lambda>f. inj_on f A) F\n\ngoal (1 subgoal):\n 1. inj_on f A", "by (simp add: F_eq)"], ["proof (state)\nthis:\n  inj_on f A\n\ngoal (1 subgoal):\n 1. \\<forall>n. n \\<in># number_partition_of A B F \\<longrightarrow> n = 1", "have \"\\<forall>n. n \\<in># image_mset card (mset_set ((\\<lambda>b. {x \\<in> A. f x = b}) ` B - {{}})) \\<longrightarrow> n = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       n \\<in># image_mset card\n                 (mset_set\n                   ((\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n                    {{}})) \\<longrightarrow>\n       n = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       n \\<in># image_mset card\n                 (mset_set\n                   ((\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n                    {{}})) \\<longrightarrow>\n       n = 1", "have \"\\<forall>b \\<in> B. card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>b\\<in>B.\n       card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> B \\<Longrightarrow>\n       card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> B \\<Longrightarrow>\n       card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}", "assume \"b \\<in> B\""], ["proof (state)\nthis:\n  b \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> B \\<Longrightarrow>\n       card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}", "show \"card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}", "proof (cases \"b \\<in> f ` A\")"], ["proof (state)\ngoal (2 subgoals):\n 1. b \\<in> f ` A \\<Longrightarrow>\n    card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}\n 2. b \\<notin> f ` A \\<Longrightarrow>\n    card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}", "assume \"b \\<in> f ` A\""], ["proof (state)\nthis:\n  b \\<in> f ` A\n\ngoal (2 subgoals):\n 1. b \\<in> f ` A \\<Longrightarrow>\n    card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}\n 2. b \\<notin> f ` A \\<Longrightarrow>\n    card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}", "from \\<open>inj_on f A\\<close> this"], ["proof (chain)\npicking this:\n  inj_on f A\n  b \\<in> f ` A", "have \"is_singleton {x \\<in> A. f x = b}\""], ["proof (prove)\nusing this:\n  inj_on f A\n  b \\<in> f ` A\n\ngoal (1 subgoal):\n 1. is_singleton {x \\<in> A. f x = b}", "by (auto simp add: inj_on_eq_iff intro: is_singletonI')"], ["proof (state)\nthis:\n  is_singleton {x \\<in> A. f x = b}\n\ngoal (2 subgoals):\n 1. b \\<in> f ` A \\<Longrightarrow>\n    card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}\n 2. b \\<notin> f ` A \\<Longrightarrow>\n    card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}", "from this"], ["proof (chain)\npicking this:\n  is_singleton {x \\<in> A. f x = b}", "have \"card {x \\<in> A. f x = b} = 1\""], ["proof (prove)\nusing this:\n  is_singleton {x \\<in> A. f x = b}\n\ngoal (1 subgoal):\n 1. card {x \\<in> A. f x = b} = 1", "by (subst is_singleton_altdef[symmetric])"], ["proof (state)\nthis:\n  card {x \\<in> A. f x = b} = 1\n\ngoal (2 subgoals):\n 1. b \\<in> f ` A \\<Longrightarrow>\n    card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}\n 2. b \\<notin> f ` A \\<Longrightarrow>\n    card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}", "from this"], ["proof (chain)\npicking this:\n  card {x \\<in> A. f x = b} = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  card {x \\<in> A. f x = b} = 1\n\ngoal (1 subgoal):\n 1. card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}", ".."], ["proof (state)\nthis:\n  card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}\n\ngoal (1 subgoal):\n 1. b \\<notin> f ` A \\<Longrightarrow>\n    card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<notin> f ` A \\<Longrightarrow>\n    card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}", "assume \"b \\<notin> f ` A\""], ["proof (state)\nthis:\n  b \\<notin> f ` A\n\ngoal (1 subgoal):\n 1. b \\<notin> f ` A \\<Longrightarrow>\n    card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}", "from this"], ["proof (chain)\npicking this:\n  b \\<notin> f ` A", "have \"{x \\<in> A. f x = b} = {}\""], ["proof (prove)\nusing this:\n  b \\<notin> f ` A\n\ngoal (1 subgoal):\n 1. {x \\<in> A. f x = b} = {}", "by auto"], ["proof (state)\nthis:\n  {x \\<in> A. f x = b} = {}\n\ngoal (1 subgoal):\n 1. b \\<notin> f ` A \\<Longrightarrow>\n    card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}", "from this"], ["proof (chain)\npicking this:\n  {x \\<in> A. f x = b} = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  {x \\<in> A. f x = b} = {}\n\ngoal (1 subgoal):\n 1. card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}", ".."], ["proof (state)\nthis:\n  card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>b\\<in>B.\n     card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       n \\<in># image_mset card\n                 (mset_set\n                   ((\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n                    {{}})) \\<longrightarrow>\n       n = 1", "from this"], ["proof (chain)\npicking this:\n  \\<forall>b\\<in>B.\n     card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>b\\<in>B.\n     card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       n \\<in># image_mset card\n                 (mset_set\n                   ((\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n                    {{}})) \\<longrightarrow>\n       n = 1", "using \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>b\\<in>B.\n     card {x \\<in> A. f x = b} = 1 \\<or> {x \\<in> A. f x = b} = {}\n  finite B\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       n \\<in># image_mset card\n                 (mset_set\n                   ((\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n                    {{}})) \\<longrightarrow>\n       n = 1", "by auto"], ["proof (state)\nthis:\n  \\<forall>n.\n     n \\<in># image_mset card\n               (mset_set\n                 ((\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n                  {{}})) \\<longrightarrow>\n     n = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n.\n     n \\<in># image_mset card\n               (mset_set\n                 ((\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n                  {{}})) \\<longrightarrow>\n     n = 1\n\ngoal (1 subgoal):\n 1. \\<forall>n. n \\<in># number_partition_of A B F \\<longrightarrow> n = 1", "from this"], ["proof (chain)\npicking this:\n  \\<forall>n.\n     n \\<in># image_mset card\n               (mset_set\n                 ((\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n                  {{}})) \\<longrightarrow>\n     n = 1", "show \"\\<forall>n. n\\<in># number_partition_of A B F \\<longrightarrow> n = 1\""], ["proof (prove)\nusing this:\n  \\<forall>n.\n     n \\<in># image_mset card\n               (mset_set\n                 ((\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n                  {{}})) \\<longrightarrow>\n     n = 1\n\ngoal (1 subgoal):\n 1. \\<forall>n. n \\<in># number_partition_of A B F \\<longrightarrow> n = 1", "unfolding eq"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     n \\<in># image_mset card\n               (mset_set\n                 ((\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n                  {{}})) \\<longrightarrow>\n     n = 1\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       n \\<in># image_mset card\n                 (mset_set\n                   ((\\<lambda>b. {x \\<in> A. f x = b}) ` B -\n                    {{}})) \\<longrightarrow>\n       n = 1", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. n \\<in># number_partition_of A B F \\<longrightarrow> n = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma functions_of_is_inj_on:\n  assumes \"finite A\" \"finite B\"\n  assumes \"\\<forall>n. n\\<in># N \\<longrightarrow> n = 1\" \"number_partition (card A) N\" \"size N \\<le> card B\"\n  shows \"univ (\\<lambda>f. inj_on f A) (functions_of A B N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. inj_on f A) (functions_of A B N)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. inj_on f A) (functions_of A B N)", "have \"functions_of A B N \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of A B N\n    \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B", "using assms functions_of"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  \\<forall>n. n \\<in># N \\<longrightarrow> n = 1\n  number_partition (card A) N\n  size N \\<le> card B\n  \\<lbrakk>finite ?A; finite ?B; number_partition (card ?A) ?N;\n   size ?N \\<le> card ?B\\<rbrakk>\n  \\<Longrightarrow> functions_of ?A ?B ?N\n                    \\<in> (?A \\<rightarrow>\\<^sub>E ?B) //\n                          domain_and_range_permutation ?A ?B\n\ngoal (1 subgoal):\n 1. functions_of A B N\n    \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B", "by auto"], ["proof (state)\nthis:\n  functions_of A B N\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. inj_on f A) (functions_of A B N)", "from this"], ["proof (chain)\npicking this:\n  functions_of A B N\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B", "obtain f where eq_f: \"functions_of A B N = domain_and_range_permutation A B `` {f}\" and \"f \\<in> A \\<rightarrow>\\<^sub>E B\""], ["proof (prove)\nusing this:\n  functions_of A B N\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>functions_of A B N =\n                 domain_and_range_permutation A B `` {f};\n         f \\<in> A \\<rightarrow>\\<^sub>E B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using quotientE"], ["proof (prove)\nusing this:\n  functions_of A B N\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B\n  \\<lbrakk>?X \\<in> ?A // ?r;\n   \\<And>x.\n      \\<lbrakk>?X = ?r `` {x}; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>functions_of A B N =\n                 domain_and_range_permutation A B `` {f};\n         f \\<in> A \\<rightarrow>\\<^sub>E B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  functions_of A B N = domain_and_range_permutation A B `` {f}\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. inj_on f A) (functions_of A B N)", "from eq_f"], ["proof (chain)\npicking this:\n  functions_of A B N = domain_and_range_permutation A B `` {f}", "have \"f \\<in> functions_of A B N\""], ["proof (prove)\nusing this:\n  functions_of A B N = domain_and_range_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. f \\<in> functions_of A B N", "using \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close> equiv_domain_and_range_permutation equiv_class_self"], ["proof (prove)\nusing this:\n  functions_of A B N = domain_and_range_permutation A B `` {f}\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (domain_and_range_permutation ?A ?B)\n  \\<lbrakk>equiv ?A ?r; ?a \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> ?r `` {?a}\n\ngoal (1 subgoal):\n 1. f \\<in> functions_of A B N", "by fastforce"], ["proof (state)\nthis:\n  f \\<in> functions_of A B N\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. inj_on f A) (functions_of A B N)", "have \"inj_on f A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on f A", "using \\<open>f \\<in> functions_of A B N\\<close> assms all_one_implies_inj_on"], ["proof (prove)\nusing this:\n  f \\<in> functions_of A B N\n  finite A\n  finite B\n  \\<forall>n. n \\<in># N \\<longrightarrow> n = 1\n  number_partition (card A) N\n  size N \\<le> card B\n  \\<lbrakk>finite ?A; finite ?B;\n   \\<forall>n. n \\<in># ?N \\<longrightarrow> n = 1;\n   number_partition (card ?A) ?N; size ?N \\<le> card ?B;\n   ?f \\<in> functions_of ?A ?B ?N\\<rbrakk>\n  \\<Longrightarrow> inj_on ?f ?A\n\ngoal (1 subgoal):\n 1. inj_on f A", "by blast"], ["proof (state)\nthis:\n  inj_on f A\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. inj_on f A) (functions_of A B N)", "from this"], ["proof (chain)\npicking this:\n  inj_on f A", "show ?thesis"], ["proof (prove)\nusing this:\n  inj_on f A\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. inj_on f A) (functions_of A B N)", "unfolding eq_f"], ["proof (prove)\nusing this:\n  inj_on f A\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. inj_on f A) (domain_and_range_permutation A B `` {f})", "using equiv_domain_and_range_permutation inj_on_respects_domain_and_range_permutation \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  inj_on f A\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (domain_and_range_permutation ?A ?B)\n  (\\<lambda>f. inj_on f ?A) respects domain_and_range_permutation ?A ?B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. inj_on f A) (domain_and_range_permutation A B `` {f})", "by (subst univ_commute') assumption+"], ["proof (state)\nthis:\n  univ (\\<lambda>f. inj_on f A) (functions_of A B N)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Bijections\\<close>"], ["", "lemma bij_betw_number_partition_of:\n  assumes \"finite A\" \"finite B\"\n  shows \"bij_betw (number_partition_of A B) ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_and_range_permutation A B) {N. (\\<forall>n. n\\<in># N \\<longrightarrow> n = 1) \\<and> number_partition (card A) N \\<and> size N \\<le> card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (number_partition_of A B)\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_and_range_permutation A B)\n     {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n         number_partition (card A) N \\<and> size N \\<le> card B}", "proof (rule bij_betw_byWitness[where f'=\"functions_of A B\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                   domain_and_range_permutation A B.\n       functions_of A B (number_partition_of A B a) = a\n 2. \\<forall>a'\\<in>{N. (\\<forall>n.\n                            n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                        number_partition (card A) N \\<and>\n                        size N \\<le> card B}.\n       number_partition_of A B (functions_of A B a') = a'\n 3. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                    number_partition (card A) N \\<and> size N \\<le> card B}\n 4. functions_of A B `\n    {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n        number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_and_range_permutation A B", "have quotient_eq: \"{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_and_range_permutation A B = {F \\<in> ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B). univ (\\<lambda>f. inj_on f A) F}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B =\n    {F \\<in> (A \\<rightarrow>\\<^sub>E B) //\n             domain_and_range_permutation A B.\n     univ (\\<lambda>f. inj_on f A) F}", "using equiv_domain_and_range_permutation[of A B] inj_on_respects_domain_and_range_permutation[of A B]"], ["proof (prove)\nusing this:\n  equiv (A \\<rightarrow>\\<^sub>E B) (domain_and_range_permutation A B)\n  (\\<lambda>f. inj_on f A) respects domain_and_range_permutation A B\n\ngoal (1 subgoal):\n 1. {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B =\n    {F \\<in> (A \\<rightarrow>\\<^sub>E B) //\n             domain_and_range_permutation A B.\n     univ (\\<lambda>f. inj_on f A) F}", "by (simp only: univ_preserves_predicate)"], ["proof (state)\nthis:\n  {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n  domain_and_range_permutation A B =\n  {F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B.\n   univ (\\<lambda>f. inj_on f A) F}\n\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                   domain_and_range_permutation A B.\n       functions_of A B (number_partition_of A B a) = a\n 2. \\<forall>a'\\<in>{N. (\\<forall>n.\n                            n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                        number_partition (card A) N \\<and>\n                        size N \\<le> card B}.\n       number_partition_of A B (functions_of A B a') = a'\n 3. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                    number_partition (card A) N \\<and> size N \\<le> card B}\n 4. functions_of A B `\n    {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n        number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_and_range_permutation A B", "show \"\\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_and_range_permutation A B.\n       functions_of A B (number_partition_of A B F) = F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                   domain_and_range_permutation A B.\n       functions_of A B (number_partition_of A B F) = F", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                   domain_and_range_permutation A B.\n       functions_of A B (number_partition_of A B F) = F", "by (auto simp only: quotient_eq functions_of_number_partition_of)"], ["proof (state)\nthis:\n  \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                 domain_and_range_permutation A B.\n     functions_of A B (number_partition_of A B F) = F\n\ngoal (3 subgoals):\n 1. \\<forall>a'\\<in>{N. (\\<forall>n.\n                            n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                        number_partition (card A) N \\<and>\n                        size N \\<le> card B}.\n       number_partition_of A B (functions_of A B a') = a'\n 2. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                    number_partition (card A) N \\<and> size N \\<le> card B}\n 3. functions_of A B `\n    {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n        number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_and_range_permutation A B", "show \"\\<forall>N\\<in> {N. (\\<forall>n. n\\<in># N \\<longrightarrow> n = 1) \\<and> number_partition (card A) N \\<and> size N \\<le> card B}. number_partition_of A B (functions_of A B N) = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>N\\<in>{N. (\\<forall>n.\n                           n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                       number_partition (card A) N \\<and>\n                       size N \\<le> card B}.\n       number_partition_of A B (functions_of A B N) = N", "using \\<open>finite A\\<close> \\<open>finite B\\<close> number_partition_of_functions_of"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  \\<lbrakk>finite ?A; finite ?B; number_partition (card ?A) ?N;\n   size ?N \\<le> card ?B\\<rbrakk>\n  \\<Longrightarrow> number_partition_of ?A ?B (functions_of ?A ?B ?N) = ?N\n\ngoal (1 subgoal):\n 1. \\<forall>N\\<in>{N. (\\<forall>n.\n                           n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                       number_partition (card A) N \\<and>\n                       size N \\<le> card B}.\n       number_partition_of A B (functions_of A B N) = N", "by auto"], ["proof (state)\nthis:\n  \\<forall>N\\<in>{N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                     number_partition (card A) N \\<and>\n                     size N \\<le> card B}.\n     number_partition_of A B (functions_of A B N) = N\n\ngoal (2 subgoals):\n 1. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                    number_partition (card A) N \\<and> size N \\<le> card B}\n 2. functions_of A B `\n    {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n        number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_and_range_permutation A B", "show \"number_partition_of A B ` ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_and_range_permutation A B)\n    \\<subseteq> {N. (\\<forall>n. n\\<in># N \\<longrightarrow> n = 1) \\<and> number_partition (card A) N \\<and> size N \\<le> card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                    number_partition (card A) N \\<and> size N \\<le> card B}", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                    number_partition (card A) N \\<and> size N \\<le> card B}", "by (auto simp add: quotient_eq number_partition_of inj_on_implies_all_one simp del: One_nat_def)"], ["proof (state)\nthis:\n  number_partition_of A B `\n  {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n  domain_and_range_permutation A B\n  \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                  number_partition (card A) N \\<and> size N \\<le> card B}\n\ngoal (1 subgoal):\n 1. functions_of A B `\n    {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n        number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_and_range_permutation A B", "show \"functions_of A B ` {N. (\\<forall>n. n\\<in># N \\<longrightarrow> n = 1) \\<and> number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_and_range_permutation A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of A B `\n    {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n        number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_and_range_permutation A B", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. functions_of A B `\n    {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n        number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_and_range_permutation A B", "by (auto simp add: quotient_eq intro: functions_of functions_of_is_inj_on)"], ["proof (state)\nthis:\n  functions_of A B `\n  {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n      number_partition (card A) N \\<and> size N \\<le> card B}\n  \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n              domain_and_range_permutation A B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bij_betw_functions_of:\n  assumes \"finite A\" \"finite B\"\n  shows \"bij_betw (functions_of A B) {N. (\\<forall>n. n\\<in># N \\<longrightarrow> n = 1) \\<and> number_partition (card A) N \\<and> size N \\<le> card B} ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_and_range_permutation A B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (functions_of A B)\n     {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n         number_partition (card A) N \\<and> size N \\<le> card B}\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_and_range_permutation A B)", "proof (rule bij_betw_byWitness[where f'=\"number_partition_of A B\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{N. (\\<forall>n.\n                           n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                       number_partition (card A) N \\<and>\n                       size N \\<le> card B}.\n       number_partition_of A B (functions_of A B a) = a\n 2. \\<forall>a'\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                    domain_and_range_permutation A B.\n       functions_of A B (number_partition_of A B a') = a'\n 3. functions_of A B `\n    {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n        number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_and_range_permutation A B\n 4. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                    number_partition (card A) N \\<and> size N \\<le> card B}", "have quotient_eq: \"{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_and_range_permutation A B = {F \\<in> ((A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B). univ (\\<lambda>f. inj_on f A) F}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B =\n    {F \\<in> (A \\<rightarrow>\\<^sub>E B) //\n             domain_and_range_permutation A B.\n     univ (\\<lambda>f. inj_on f A) F}", "using equiv_domain_and_range_permutation[of A B] inj_on_respects_domain_and_range_permutation[of A B]"], ["proof (prove)\nusing this:\n  equiv (A \\<rightarrow>\\<^sub>E B) (domain_and_range_permutation A B)\n  (\\<lambda>f. inj_on f A) respects domain_and_range_permutation A B\n\ngoal (1 subgoal):\n 1. {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B =\n    {F \\<in> (A \\<rightarrow>\\<^sub>E B) //\n             domain_and_range_permutation A B.\n     univ (\\<lambda>f. inj_on f A) F}", "by (simp only: univ_preserves_predicate)"], ["proof (state)\nthis:\n  {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n  domain_and_range_permutation A B =\n  {F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_and_range_permutation A B.\n   univ (\\<lambda>f. inj_on f A) F}\n\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{N. (\\<forall>n.\n                           n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                       number_partition (card A) N \\<and>\n                       size N \\<le> card B}.\n       number_partition_of A B (functions_of A B a) = a\n 2. \\<forall>a'\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                    domain_and_range_permutation A B.\n       functions_of A B (number_partition_of A B a') = a'\n 3. functions_of A B `\n    {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n        number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_and_range_permutation A B\n 4. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                    number_partition (card A) N \\<and> size N \\<le> card B}", "show \"\\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_and_range_permutation A B.\n       functions_of A B (number_partition_of A B F) = F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                   domain_and_range_permutation A B.\n       functions_of A B (number_partition_of A B F) = F", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                   domain_and_range_permutation A B.\n       functions_of A B (number_partition_of A B F) = F", "by (auto simp only: quotient_eq functions_of_number_partition_of)"], ["proof (state)\nthis:\n  \\<forall>F\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                 domain_and_range_permutation A B.\n     functions_of A B (number_partition_of A B F) = F\n\ngoal (3 subgoals):\n 1. \\<forall>a\\<in>{N. (\\<forall>n.\n                           n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                       number_partition (card A) N \\<and>\n                       size N \\<le> card B}.\n       number_partition_of A B (functions_of A B a) = a\n 2. functions_of A B `\n    {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n        number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_and_range_permutation A B\n 3. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                    number_partition (card A) N \\<and> size N \\<le> card B}", "show \"\\<forall>N\\<in> {N. (\\<forall>n. n\\<in># N \\<longrightarrow> n = 1) \\<and> number_partition (card A) N \\<and> size N \\<le> card B}. number_partition_of A B (functions_of A B N) = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>N\\<in>{N. (\\<forall>n.\n                           n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                       number_partition (card A) N \\<and>\n                       size N \\<le> card B}.\n       number_partition_of A B (functions_of A B N) = N", "using \\<open>finite A\\<close> \\<open>finite B\\<close> number_partition_of_functions_of"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  \\<lbrakk>finite ?A; finite ?B; number_partition (card ?A) ?N;\n   size ?N \\<le> card ?B\\<rbrakk>\n  \\<Longrightarrow> number_partition_of ?A ?B (functions_of ?A ?B ?N) = ?N\n\ngoal (1 subgoal):\n 1. \\<forall>N\\<in>{N. (\\<forall>n.\n                           n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                       number_partition (card A) N \\<and>\n                       size N \\<le> card B}.\n       number_partition_of A B (functions_of A B N) = N", "by auto"], ["proof (state)\nthis:\n  \\<forall>N\\<in>{N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                     number_partition (card A) N \\<and>\n                     size N \\<le> card B}.\n     number_partition_of A B (functions_of A B N) = N\n\ngoal (2 subgoals):\n 1. functions_of A B `\n    {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n        number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_and_range_permutation A B\n 2. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                    number_partition (card A) N \\<and> size N \\<le> card B}", "show \"number_partition_of A B ` ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_and_range_permutation A B)\n    \\<subseteq> {N. (\\<forall>n. n\\<in># N \\<longrightarrow> n = 1) \\<and> number_partition (card A) N \\<and> size N \\<le> card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                    number_partition (card A) N \\<and> size N \\<le> card B}", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. number_partition_of A B `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B\n    \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                    number_partition (card A) N \\<and> size N \\<le> card B}", "by (auto simp add: quotient_eq number_partition_of inj_on_implies_all_one simp del: One_nat_def)"], ["proof (state)\nthis:\n  number_partition_of A B `\n  {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n  domain_and_range_permutation A B\n  \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                  number_partition (card A) N \\<and> size N \\<le> card B}\n\ngoal (1 subgoal):\n 1. functions_of A B `\n    {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n        number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_and_range_permutation A B", "show \"functions_of A B ` {N. (\\<forall>n. n\\<in># N \\<longrightarrow> n = 1) \\<and> number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_and_range_permutation A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of A B `\n    {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n        number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_and_range_permutation A B", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. functions_of A B `\n    {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n        number_partition (card A) N \\<and> size N \\<le> card B}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n                domain_and_range_permutation A B", "by (auto simp add: quotient_eq intro: functions_of functions_of_is_inj_on)"], ["proof (state)\nthis:\n  functions_of A B `\n  {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n      number_partition (card A) N \\<and> size N \\<le> card B}\n  \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n              domain_and_range_permutation A B\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Cardinality\\<close>"], ["", "lemma card_injective_functions_domain_and_range_permutation:\n  assumes \"finite A\" \"finite B\"\n  shows \"card ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_and_range_permutation A B) = iverson (card A \\<le> card B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_and_range_permutation A B) =\n    iverson (card A \\<le> card B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_and_range_permutation A B) =\n    iverson (card A \\<le> card B)", "have \"bij_betw (number_partition_of A B) ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_and_range_permutation A B) {N. (\\<forall>n. n\\<in># N \\<longrightarrow> n = 1) \\<and> number_partition (card A) N \\<and> size N \\<le> card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (number_partition_of A B)\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_and_range_permutation A B)\n     {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n         number_partition (card A) N \\<and> size N \\<le> card B}", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. bij_betw (number_partition_of A B)\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_and_range_permutation A B)\n     {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n         number_partition (card A) N \\<and> size N \\<le> card B}", "by (rule bij_betw_number_partition_of)"], ["proof (state)\nthis:\n  bij_betw (number_partition_of A B)\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B)\n   {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n       number_partition (card A) N \\<and> size N \\<le> card B}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_and_range_permutation A B) =\n    iverson (card A \\<le> card B)", "from this"], ["proof (chain)\npicking this:\n  bij_betw (number_partition_of A B)\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B)\n   {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n       number_partition (card A) N \\<and> size N \\<le> card B}", "have \"card ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} // domain_and_range_permutation A B) = card {N. (\\<forall>n. n\\<in># N \\<longrightarrow> n = 1) \\<and> number_partition (card A) N \\<and> size N \\<le> card B}\""], ["proof (prove)\nusing this:\n  bij_betw (number_partition_of A B)\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B)\n   {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n       number_partition (card A) N \\<and> size N \\<le> card B}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_and_range_permutation A B) =\n    card\n     {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n         number_partition (card A) N \\<and> size N \\<le> card B}", "by (rule bij_betw_same_card)"], ["proof (state)\nthis:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B) =\n  card\n   {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n       number_partition (card A) N \\<and> size N \\<le> card B}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_and_range_permutation A B) =\n    iverson (card A \\<le> card B)", "also"], ["proof (state)\nthis:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B) =\n  card\n   {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n       number_partition (card A) N \\<and> size N \\<le> card B}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_and_range_permutation A B) =\n    iverson (card A \\<le> card B)", "have \"card {N. (\\<forall>n. n\\<in># N \\<longrightarrow> n = 1) \\<and> number_partition (card A) N \\<and> size N \\<le> card B} = iverson (card A \\<le> card B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n         number_partition (card A) N \\<and> size N \\<le> card B} =\n    iverson (card A \\<le> card B)", "by (rule card_number_partitions_with_only_parts_1)"], ["proof (state)\nthis:\n  card\n   {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n       number_partition (card A) N \\<and> size N \\<le> card B} =\n  iverson (card A \\<le> card B)\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_and_range_permutation A B) =\n    iverson (card A \\<le> card B)", "finally"], ["proof (chain)\npicking this:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B) =\n  iverson (card A \\<le> card B)", "show ?thesis"], ["proof (prove)\nusing this:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B) =\n  iverson (card A \\<le> card B)\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n      domain_and_range_permutation A B) =\n    iverson (card A \\<le> card B)", "."], ["proof (state)\nthis:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. inj_on f A} //\n    domain_and_range_permutation A B) =\n  iverson (card A \\<le> card B)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}