{"file_name": "/home/qj213/afp-2021-10-22/thys/Twelvefold_Way/Twelvefold_Way_Entry6.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Twelvefold_Way", "problem_names": ["lemma set_mset_eq_implies_surj_on:\n  assumes \"finite A\"\n  assumes \"size M = card A\" \"set_mset M = B\"\n  assumes \"f \\<in> functions_of A M\"\n  shows   \"f ` A = B\"", "lemma surj_on_implies_set_mset_eq:\n  assumes \"finite A\"\n  assumes \"F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_permutation A B\"\n  assumes \"univ (\\<lambda>f. f ` A = B) F\"\n  shows \"set_mset (msubset_of A F) = B\"", "lemma functions_of_is_surj_on:\n  assumes \"finite A\"\n  assumes \"size M = card A\" \"set_mset M = B\"\n  shows \"univ (\\<lambda>f. f ` A = B) (functions_of A M)\"", "lemma bij_betw_msubset_of:\n  assumes \"finite A\"\n  shows \"bij_betw (msubset_of A) ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_permutation A B)\n    {M. set_mset M = B \\<and> size M = card A}\"\n    (is \"bij_betw _ ?FSet ?MSet\")", "lemma card_surjective_functions_domain_permutation:\n  assumes \"finite A\" \"finite B\"\n  assumes \"card B \\<le> card A\"\n  shows \"card ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_permutation A B) = (card A - 1) choose (card A - card B)\""], "translations": [["", "lemma set_mset_eq_implies_surj_on:\n  assumes \"finite A\"\n  assumes \"size M = card A\" \"set_mset M = B\"\n  assumes \"f \\<in> functions_of A M\"\n  shows   \"f ` A = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` A = B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f ` A = B", "from \\<open>f \\<in> functions_of A M\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> functions_of A M", "have \"image_mset f (mset_set A) = M\""], ["proof (prove)\nusing this:\n  f \\<in> functions_of A M\n\ngoal (1 subgoal):\n 1. image_mset f (mset_set A) = M", "unfolding functions_of_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> A \\<rightarrow>\\<^sub>E set_mset M.\n           image_mset f (mset_set A) = M}\n\ngoal (1 subgoal):\n 1. image_mset f (mset_set A) = M", "by auto"], ["proof (state)\nthis:\n  image_mset f (mset_set A) = M\n\ngoal (1 subgoal):\n 1. f ` A = B", "from \\<open>image_mset f (mset_set A) = M\\<close>"], ["proof (chain)\npicking this:\n  image_mset f (mset_set A) = M", "show \"f ` A = B\""], ["proof (prove)\nusing this:\n  image_mset f (mset_set A) = M\n\ngoal (1 subgoal):\n 1. f ` A = B", "using \\<open>set_mset M = B\\<close> \\<open>finite A\\<close> finite_set_mset_mset_set set_image_mset"], ["proof (prove)\nusing this:\n  image_mset f (mset_set A) = M\n  set_mset M = B\n  finite A\n  finite ?A \\<Longrightarrow> set_mset (mset_set ?A) = ?A\n  set_mset (image_mset ?f ?M) = ?f ` set_mset ?M\n\ngoal (1 subgoal):\n 1. f ` A = B", "by force"], ["proof (state)\nthis:\n  f ` A = B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma surj_on_implies_set_mset_eq:\n  assumes \"finite A\"\n  assumes \"F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_permutation A B\"\n  assumes \"univ (\\<lambda>f. f ` A = B) F\"\n  shows \"set_mset (msubset_of A F) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_mset (msubset_of A F) = B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. set_mset (msubset_of A F) = B", "from \\<open>F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_permutation A B\\<close>"], ["proof (chain)\npicking this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_permutation A B", "obtain f where \"f \\<in> A \\<rightarrow>\\<^sub>E B\"\n    and F_eq: \"F = domain_permutation A B `` {f}\""], ["proof (prove)\nusing this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_permutation A B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E B;\n         F = domain_permutation A B `` {f}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using quotientE"], ["proof (prove)\nusing this:\n  F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_permutation A B\n  \\<lbrakk>?X \\<in> ?A // ?r;\n   \\<And>x.\n      \\<lbrakk>?X = ?r `` {x}; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> A \\<rightarrow>\\<^sub>E B;\n         F = domain_permutation A B `` {f}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  F = domain_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. set_mset (msubset_of A F) = B", "have \"msubset_of A F = univ (\\<lambda>f. image_mset f (mset_set A)) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. msubset_of A F = univ (\\<lambda>f. image_mset f (mset_set A)) F", "unfolding msubset_of_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. image_mset f (mset_set A)) F =\n    univ (\\<lambda>f. image_mset f (mset_set A)) F", ".."], ["proof (state)\nthis:\n  msubset_of A F = univ (\\<lambda>f. image_mset f (mset_set A)) F\n\ngoal (1 subgoal):\n 1. set_mset (msubset_of A F) = B", "also"], ["proof (state)\nthis:\n  msubset_of A F = univ (\\<lambda>f. image_mset f (mset_set A)) F\n\ngoal (1 subgoal):\n 1. set_mset (msubset_of A F) = B", "have \"\\<dots> = univ (\\<lambda>f. image_mset f (mset_set A)) (domain_permutation A B `` {f})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. image_mset f (mset_set A)) F =\n    univ (\\<lambda>f. image_mset f (mset_set A))\n     (domain_permutation A B `` {f})", "unfolding F_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. image_mset f (mset_set A))\n     (domain_permutation A B `` {f}) =\n    univ (\\<lambda>f. image_mset f (mset_set A))\n     (domain_permutation A B `` {f})", ".."], ["proof (state)\nthis:\n  univ (\\<lambda>f. image_mset f (mset_set A)) F =\n  univ (\\<lambda>f. image_mset f (mset_set A))\n   (domain_permutation A B `` {f})\n\ngoal (1 subgoal):\n 1. set_mset (msubset_of A F) = B", "also"], ["proof (state)\nthis:\n  univ (\\<lambda>f. image_mset f (mset_set A)) F =\n  univ (\\<lambda>f. image_mset f (mset_set A))\n   (domain_permutation A B `` {f})\n\ngoal (1 subgoal):\n 1. set_mset (msubset_of A F) = B", "have \"\\<dots> = image_mset f (mset_set A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. image_mset f (mset_set A))\n     (domain_permutation A B `` {f}) =\n    image_mset f (mset_set A)", "using equiv_domain_permutation image_mset_respects_domain_permutation \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (domain_permutation ?A ?B)\n  (\\<lambda>f. image_mset f (mset_set ?A)) respects domain_permutation ?A ?B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. image_mset f (mset_set A))\n     (domain_permutation A B `` {f}) =\n    image_mset f (mset_set A)", "by (subst univ_commute') auto"], ["proof (state)\nthis:\n  univ (\\<lambda>f. image_mset f (mset_set A))\n   (domain_permutation A B `` {f}) =\n  image_mset f (mset_set A)\n\ngoal (1 subgoal):\n 1. set_mset (msubset_of A F) = B", "finally"], ["proof (chain)\npicking this:\n  msubset_of A F = image_mset f (mset_set A)", "have eq: \"msubset_of A F = image_mset f (mset_set A)\""], ["proof (prove)\nusing this:\n  msubset_of A F = image_mset f (mset_set A)\n\ngoal (1 subgoal):\n 1. msubset_of A F = image_mset f (mset_set A)", "."], ["proof (state)\nthis:\n  msubset_of A F = image_mset f (mset_set A)\n\ngoal (1 subgoal):\n 1. set_mset (msubset_of A F) = B", "from iffD1[OF univ_commute', OF equiv_domain_permutation, OF surjective_respects_domain_permutation, OF \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>]\n    \\<open>univ (\\<lambda>f. f ` A = B) F\\<close>"], ["proof (chain)\npicking this:\n  univ (\\<lambda>f. f ` A = B)\n   (domain_permutation A B `` {f}) \\<Longrightarrow>\n  f ` A = B\n  univ (\\<lambda>f. f ` A = B) F", "have \"f ` A = B\""], ["proof (prove)\nusing this:\n  univ (\\<lambda>f. f ` A = B)\n   (domain_permutation A B `` {f}) \\<Longrightarrow>\n  f ` A = B\n  univ (\\<lambda>f. f ` A = B) F\n\ngoal (1 subgoal):\n 1. f ` A = B", "by (simp add: F_eq)"], ["proof (state)\nthis:\n  f ` A = B\n\ngoal (1 subgoal):\n 1. set_mset (msubset_of A F) = B", "have \"set_mset (image_mset f (mset_set A)) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_mset (image_mset f (mset_set A)) = B", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. set_mset (image_mset f (mset_set A)) \\<subseteq> B\n 2. B \\<subseteq> set_mset (image_mset f (mset_set A))", "show \"set_mset (image_mset f (mset_set A)) \\<subseteq> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_mset (image_mset f (mset_set A)) \\<subseteq> B", "using \\<open>finite A\\<close> \\<open>f ` A = B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  f ` A = B\n\ngoal (1 subgoal):\n 1. set_mset (image_mset f (mset_set A)) \\<subseteq> B", "by auto"], ["proof (state)\nthis:\n  set_mset (image_mset f (mset_set A)) \\<subseteq> B\n\ngoal (1 subgoal):\n 1. B \\<subseteq> set_mset (image_mset f (mset_set A))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<subseteq> set_mset (image_mset f (mset_set A))", "show \"B \\<subseteq> set_mset (image_mset f (mset_set A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> set_mset (image_mset f (mset_set A))", "using \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. B \\<subseteq> set_mset (image_mset f (mset_set A))", "by (simp add: \\<open>f ` A = B\\<close>[symmetric] in_image_mset)"], ["proof (state)\nthis:\n  B \\<subseteq> set_mset (image_mset f (mset_set A))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set_mset (image_mset f (mset_set A)) = B\n\ngoal (1 subgoal):\n 1. set_mset (msubset_of A F) = B", "from this"], ["proof (chain)\npicking this:\n  set_mset (image_mset f (mset_set A)) = B", "show \"set_mset (msubset_of A F) = B\""], ["proof (prove)\nusing this:\n  set_mset (image_mset f (mset_set A)) = B\n\ngoal (1 subgoal):\n 1. set_mset (msubset_of A F) = B", "unfolding eq"], ["proof (prove)\nusing this:\n  set_mset (image_mset f (mset_set A)) = B\n\ngoal (1 subgoal):\n 1. set_mset (image_mset f (mset_set A)) = B", "."], ["proof (state)\nthis:\n  set_mset (msubset_of A F) = B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma functions_of_is_surj_on:\n  assumes \"finite A\"\n  assumes \"size M = card A\" \"set_mset M = B\"\n  shows \"univ (\\<lambda>f. f ` A = B) (functions_of A M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (functions_of A M)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (functions_of A M)", "have \"functions_of A M \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_permutation A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of A M\n    \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_permutation A B", "using functions_of \\<open>finite A\\<close> \\<open>size M = card A\\<close> \\<open>set_mset M = B\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; set_mset ?M \\<subseteq> ?B; size ?M = card ?A\\<rbrakk>\n  \\<Longrightarrow> functions_of ?A ?M\n                    \\<in> (?A \\<rightarrow>\\<^sub>E ?B) //\n                          domain_permutation ?A ?B\n  finite A\n  size M = card A\n  set_mset M = B\n\ngoal (1 subgoal):\n 1. functions_of A M\n    \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_permutation A B", "by fastforce"], ["proof (state)\nthis:\n  functions_of A M\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_permutation A B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (functions_of A M)", "from this"], ["proof (chain)\npicking this:\n  functions_of A M\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_permutation A B", "obtain f where eq_f: \"functions_of A M = domain_permutation A B `` {f}\" and \"f \\<in> A \\<rightarrow>\\<^sub>E B\""], ["proof (prove)\nusing this:\n  functions_of A M\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_permutation A B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>functions_of A M = domain_permutation A B `` {f};\n         f \\<in> A \\<rightarrow>\\<^sub>E B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using quotientE"], ["proof (prove)\nusing this:\n  functions_of A M\n  \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_permutation A B\n  \\<lbrakk>?X \\<in> ?A // ?r;\n   \\<And>x.\n      \\<lbrakk>?X = ?r `` {x}; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>functions_of A M = domain_permutation A B `` {f};\n         f \\<in> A \\<rightarrow>\\<^sub>E B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  functions_of A M = domain_permutation A B `` {f}\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (functions_of A M)", "from eq_f"], ["proof (chain)\npicking this:\n  functions_of A M = domain_permutation A B `` {f}", "have \"f \\<in> functions_of A M\""], ["proof (prove)\nusing this:\n  functions_of A M = domain_permutation A B `` {f}\n\ngoal (1 subgoal):\n 1. f \\<in> functions_of A M", "using \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close> equiv_domain_permutation equiv_class_self"], ["proof (prove)\nusing this:\n  functions_of A M = domain_permutation A B `` {f}\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (domain_permutation ?A ?B)\n  \\<lbrakk>equiv ?A ?r; ?a \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> ?r `` {?a}\n\ngoal (1 subgoal):\n 1. f \\<in> functions_of A M", "by fastforce"], ["proof (state)\nthis:\n  f \\<in> functions_of A M\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (functions_of A M)", "have \"f ` A = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` A = B", "using \\<open>f \\<in> functions_of A M\\<close> assms set_mset_eq_implies_surj_on"], ["proof (prove)\nusing this:\n  f \\<in> functions_of A M\n  finite A\n  size M = card A\n  set_mset M = B\n  \\<lbrakk>finite ?A; size ?M = card ?A; set_mset ?M = ?B;\n   ?f \\<in> functions_of ?A ?M\\<rbrakk>\n  \\<Longrightarrow> ?f ` ?A = ?B\n\ngoal (1 subgoal):\n 1. f ` A = B", "by fastforce"], ["proof (state)\nthis:\n  f ` A = B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (functions_of A M)", "from this"], ["proof (chain)\npicking this:\n  f ` A = B", "show ?thesis"], ["proof (prove)\nusing this:\n  f ` A = B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (functions_of A M)", "unfolding eq_f"], ["proof (prove)\nusing this:\n  f ` A = B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (domain_permutation A B `` {f})", "using equiv_domain_permutation surjective_respects_domain_permutation \\<open>f \\<in> A \\<rightarrow>\\<^sub>E B\\<close>"], ["proof (prove)\nusing this:\n  f ` A = B\n  equiv (?A \\<rightarrow>\\<^sub>E ?B) (domain_permutation ?A ?B)\n  (\\<lambda>f. f ` ?A = ?B) respects domain_permutation ?A ?B\n  f \\<in> A \\<rightarrow>\\<^sub>E B\n\ngoal (1 subgoal):\n 1. univ (\\<lambda>f. f ` A = B) (domain_permutation A B `` {f})", "by (subst univ_commute') assumption+"], ["proof (state)\nthis:\n  univ (\\<lambda>f. f ` A = B) (functions_of A M)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Bijections\\<close>"], ["", "lemma bij_betw_msubset_of:\n  assumes \"finite A\"\n  shows \"bij_betw (msubset_of A) ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_permutation A B)\n    {M. set_mset M = B \\<and> size M = card A}\"\n    (is \"bij_betw _ ?FSet ?MSet\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (msubset_of A)\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_permutation A B)\n     {M. set_mset M = B \\<and> size M = card A}", "proof (rule bij_betw_byWitness[where f'=\"\\<lambda>M. functions_of A M\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                   domain_permutation A B.\n       functions_of A (msubset_of A a) = a\n 2. \\<forall>a'\\<in>{M. set_mset M = B \\<and> size M = card A}.\n       msubset_of A (functions_of A a') = a'\n 3. msubset_of A `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_permutation A B\n    \\<subseteq> {M. set_mset M = B \\<and> size M = card A}\n 4. functions_of A ` {M. set_mset M = B \\<and> size M = card A}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_permutation A B", "have quotient_eq: \"?FSet = {F \\<in> ((A \\<rightarrow>\\<^sub>E B) // domain_permutation A B). univ (\\<lambda>f. f ` A = B) F}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_permutation A B =\n    {F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_permutation A B.\n     univ (\\<lambda>f. f ` A = B) F}", "using equiv_domain_permutation[of A B] surjective_respects_domain_permutation[of A B]"], ["proof (prove)\nusing this:\n  equiv (A \\<rightarrow>\\<^sub>E B) (domain_permutation A B)\n  (\\<lambda>f. f ` A = B) respects domain_permutation A B\n\ngoal (1 subgoal):\n 1. {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_permutation A B =\n    {F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_permutation A B.\n     univ (\\<lambda>f. f ` A = B) F}", "by (simp only: univ_preserves_predicate)"], ["proof (state)\nthis:\n  {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_permutation A B =\n  {F \\<in> (A \\<rightarrow>\\<^sub>E B) // domain_permutation A B.\n   univ (\\<lambda>f. f ` A = B) F}\n\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                   domain_permutation A B.\n       functions_of A (msubset_of A a) = a\n 2. \\<forall>a'\\<in>{M. set_mset M = B \\<and> size M = card A}.\n       msubset_of A (functions_of A a') = a'\n 3. msubset_of A `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_permutation A B\n    \\<subseteq> {M. set_mset M = B \\<and> size M = card A}\n 4. functions_of A ` {M. set_mset M = B \\<and> size M = card A}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_permutation A B", "show \"\\<forall>f\\<in>?FSet. functions_of A (msubset_of A f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                   domain_permutation A B.\n       functions_of A (msubset_of A f) = f", "using \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                   domain_permutation A B.\n       functions_of A (msubset_of A f) = f", "by (auto simp only: quotient_eq functions_of_msubset_of)"], ["proof (state)\nthis:\n  \\<forall>f\\<in>{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                 domain_permutation A B.\n     functions_of A (msubset_of A f) = f\n\ngoal (3 subgoals):\n 1. \\<forall>a'\\<in>{M. set_mset M = B \\<and> size M = card A}.\n       msubset_of A (functions_of A a') = a'\n 2. msubset_of A `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_permutation A B\n    \\<subseteq> {M. set_mset M = B \\<and> size M = card A}\n 3. functions_of A ` {M. set_mset M = B \\<and> size M = card A}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_permutation A B", "show \"\\<forall>M\\<in>?MSet. msubset_of A (functions_of A M) = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>M\\<in>{M. set_mset M = B \\<and> size M = card A}.\n       msubset_of A (functions_of A M) = M", "using \\<open>finite A\\<close> msubset_of_functions_of"], ["proof (prove)\nusing this:\n  finite A\n  \\<lbrakk>set_mset ?M \\<subseteq> ?B; size ?M = card ?A; finite ?A\\<rbrakk>\n  \\<Longrightarrow> msubset_of ?A (functions_of ?A ?M) = ?M\n\ngoal (1 subgoal):\n 1. \\<forall>M\\<in>{M. set_mset M = B \\<and> size M = card A}.\n       msubset_of A (functions_of A M) = M", "by blast"], ["proof (state)\nthis:\n  \\<forall>M\\<in>{M. set_mset M = B \\<and> size M = card A}.\n     msubset_of A (functions_of A M) = M\n\ngoal (2 subgoals):\n 1. msubset_of A `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_permutation A B\n    \\<subseteq> {M. set_mset M = B \\<and> size M = card A}\n 2. functions_of A ` {M. set_mset M = B \\<and> size M = card A}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_permutation A B", "show \"msubset_of A ` ?FSet \\<subseteq> ?MSet\""], ["proof (prove)\ngoal (1 subgoal):\n 1. msubset_of A `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_permutation A B\n    \\<subseteq> {M. set_mset M = B \\<and> size M = card A}", "using \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. msubset_of A `\n    {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_permutation A B\n    \\<subseteq> {M. set_mset M = B \\<and> size M = card A}", "by (auto simp add: quotient_eq surj_on_implies_set_mset_eq msubset_of)"], ["proof (state)\nthis:\n  msubset_of A `\n  {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_permutation A B\n  \\<subseteq> {M. set_mset M = B \\<and> size M = card A}\n\ngoal (1 subgoal):\n 1. functions_of A ` {M. set_mset M = B \\<and> size M = card A}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_permutation A B", "show \"functions_of A ` ?MSet \\<subseteq> ?FSet\""], ["proof (prove)\ngoal (1 subgoal):\n 1. functions_of A ` {M. set_mset M = B \\<and> size M = card A}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_permutation A B", "using \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. functions_of A ` {M. set_mset M = B \\<and> size M = card A}\n    \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n                domain_permutation A B", "by (auto simp add: quotient_eq intro: functions_of functions_of_is_surj_on)"], ["proof (state)\nthis:\n  functions_of A ` {M. set_mset M = B \\<and> size M = card A}\n  \\<subseteq> {f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n              domain_permutation A B\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Cardinality\\<close>"], ["", "lemma card_surjective_functions_domain_permutation:\n  assumes \"finite A\" \"finite B\"\n  assumes \"card B \\<le> card A\"\n  shows \"card ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_permutation A B) = (card A - 1) choose (card A - card B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_permutation A B) =\n    card A - 1 choose (card A - card B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_permutation A B) =\n    card A - 1 choose (card A - card B)", "let ?FSet = \"{f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} // domain_permutation A B\"\n  and ?MSet = \"{M. set_mset M = B \\<and> size M = card A}\""], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_permutation A B) =\n    card A - 1 choose (card A - card B)", "have \"bij_betw (msubset_of A) ?FSet ?MSet\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (msubset_of A)\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_permutation A B)\n     {M. set_mset M = B \\<and> size M = card A}", "using \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. bij_betw (msubset_of A)\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_permutation A B)\n     {M. set_mset M = B \\<and> size M = card A}", "by (rule bij_betw_msubset_of)"], ["proof (state)\nthis:\n  bij_betw (msubset_of A)\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_permutation A B)\n   {M. set_mset M = B \\<and> size M = card A}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_permutation A B) =\n    card A - 1 choose (card A - card B)", "from this"], ["proof (chain)\npicking this:\n  bij_betw (msubset_of A)\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_permutation A B)\n   {M. set_mset M = B \\<and> size M = card A}", "have \"card ?FSet = card ?MSet\""], ["proof (prove)\nusing this:\n  bij_betw (msubset_of A)\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_permutation A B)\n   {M. set_mset M = B \\<and> size M = card A}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_permutation A B) =\n    card {M. set_mset M = B \\<and> size M = card A}", "by (rule bij_betw_same_card)"], ["proof (state)\nthis:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_permutation A B) =\n  card {M. set_mset M = B \\<and> size M = card A}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_permutation A B) =\n    card A - 1 choose (card A - card B)", "also"], ["proof (state)\nthis:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_permutation A B) =\n  card {M. set_mset M = B \\<and> size M = card A}\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_permutation A B) =\n    card A - 1 choose (card A - card B)", "have \"card ?MSet = (card A - 1) choose (card A - card B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {M. set_mset M = B \\<and> size M = card A} =\n    card A - 1 choose (card A - card B)", "using \\<open>finite B\\<close> \\<open>card B \\<le> card A\\<close>"], ["proof (prove)\nusing this:\n  finite B\n  card B \\<le> card A\n\ngoal (1 subgoal):\n 1. card {M. set_mset M = B \\<and> size M = card A} =\n    card A - 1 choose (card A - card B)", "by (rule card_multisets_covering_set)"], ["proof (state)\nthis:\n  card {M. set_mset M = B \\<and> size M = card A} =\n  card A - 1 choose (card A - card B)\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_permutation A B) =\n    card A - 1 choose (card A - card B)", "finally"], ["proof (chain)\npicking this:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_permutation A B) =\n  card A - 1 choose (card A - card B)", "show ?thesis"], ["proof (prove)\nusing this:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_permutation A B) =\n  card A - 1 choose (card A - card B)\n\ngoal (1 subgoal):\n 1. card\n     ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n      domain_permutation A B) =\n    card A - 1 choose (card A - card B)", "."], ["proof (state)\nthis:\n  card\n   ({f \\<in> A \\<rightarrow>\\<^sub>E B. f ` A = B} //\n    domain_permutation A B) =\n  card A - 1 choose (card A - card B)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}