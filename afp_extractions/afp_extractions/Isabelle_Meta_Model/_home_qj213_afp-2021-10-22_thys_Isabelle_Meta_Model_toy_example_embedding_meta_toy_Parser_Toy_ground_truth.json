{"file_name": "/home/qj213/afp-2021-10-22/thys/Isabelle_Meta_Model/toy_example/embedding/meta_toy/Parser_Toy.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Isabelle_Meta_Model", "problem_names": ["lemma [code]: \"toy_class_raw.extend = (\\<lambda>toy v. toy_class_raw_rec0 (co4 (\\<lambda>f. f v) toy_class_raw_ext) toy)\"", "lemma [code]: \"toy_class_raw.make = co4 (\\<lambda>f. f ()) toy_class_raw_ext\"", "lemma [code]: \"toy_class_raw.truncate = toy_class_raw_rec (co4 K toy_class_raw.make)\"", "lemma [code]: \"toy_association.extend = (\\<lambda>toy v. toy_association_rec0 (co2 (\\<lambda>f. f v) toy_association_ext) toy)\"", "lemma [code]: \"toy_association.make = co2 (\\<lambda>f. f ()) toy_association_ext\"", "lemma [code]: \"toy_association.truncate = toy_association_rec (co2 K toy_association.make)\"", "lemmas [code] =\n  Parse.of_toy_collection_def\n  Parse.of_toy_multiplicity_single_def\n  Parse.of_toy_multiplicity_def\n  Parse.of_toy_ty_class_node_def\n  Parse.of_toy_ty_class_def\n  Parse.of_toy_ty_obj_core_def\n  Parse.of_toy_ty_obj_def\n  Parse.of_toy_ty_def\n  Parse.of_toy_association_type_def\n  Parse.of_toy_association_relation_def\n  Parse.of_toy_association_def\n  Parse.of_toy_ctxt_prefix_def\n  Parse.of_toy_ctxt_term_def\n  Parse.of_toy_prop_def\n  Parse.of_toy_ctxt_term_inv_def\n  Parse.of_toy_ctxt_term_pp_def\n  Parse.of_toy_ctxt_pre_post_def\n  Parse.of_toy_ctxt_clause_def\n  Parse.of_toy_ctxt_def\n  Parse.of_toy_class_def\n  Parse.of_toy_class_raw_def\n  Parse.of_toy_ass_class_def\n  Parse.of_toy_class_synonym_def\n  Parse.of_toy_enum_def"], "translations": [["", "lemma [code]: \"toy_class_raw.extend = (\\<lambda>toy v. toy_class_raw_rec0 (co4 (\\<lambda>f. f v) toy_class_raw_ext) toy)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. toy_class_raw.extend =\n    (\\<lambda>toy v.\n        toy_class_raw_rec0 (co4 (\\<lambda>f. f v) toy_class_raw_ext) toy)", "by(intro ext, simp add: toy_class_raw_rec0_def\n                        toy_class_raw.extend_def\n                        co4_def K_def)"], ["", "lemma [code]: \"toy_class_raw.make = co4 (\\<lambda>f. f ()) toy_class_raw_ext\""], ["proof (prove)\ngoal (1 subgoal):\n 1. toy_class_raw.make = co4 (\\<lambda>f. f ()) toy_class_raw_ext", "by(intro ext, simp add: toy_class_raw.make_def\n                        co4_def)"], ["", "lemma [code]: \"toy_class_raw.truncate = toy_class_raw_rec (co4 K toy_class_raw.make)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. toy_class_raw.truncate = toy_class_raw_rec (co4 K toy_class_raw.make)", "by(intro ext, simp add: toy_class_raw_rec0_def\n                        toy_class_raw_rec_def\n                        toy_class_raw.truncate_def\n                        toy_class_raw.make_def\n                        co4_def K_def)"], ["", "lemma [code]: \"toy_association.extend = (\\<lambda>toy v. toy_association_rec0 (co2 (\\<lambda>f. f v) toy_association_ext) toy)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. toy_association.extend =\n    (\\<lambda>toy v.\n        toy_association_rec0 (co2 (\\<lambda>f. f v) toy_association_ext)\n         toy)", "by(intro ext, simp add: toy_association_rec0_def\n                        toy_association.extend_def\n                        co2_def K_def)"], ["", "lemma [code]: \"toy_association.make = co2 (\\<lambda>f. f ()) toy_association_ext\""], ["proof (prove)\ngoal (1 subgoal):\n 1. toy_association.make = co2 (\\<lambda>f. f ()) toy_association_ext", "by(intro ext, simp add: toy_association.make_def\n                        co2_def)"], ["", "lemma [code]: \"toy_association.truncate = toy_association_rec (co2 K toy_association.make)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. toy_association.truncate =\n    toy_association_rec (co2 K toy_association.make)", "by(intro ext, simp add: toy_association_rec0_def\n                        toy_association_rec_def\n                        toy_association.truncate_def\n                        toy_association.make_def\n                        co2_def K_def)"], ["", "subsection\\<open>Main\\<close>"], ["", "context Parse\nbegin"], ["", "definition \"of_toy_collection b = rec_toy_collection\n  (b \\<open>Set\\<close>)\n  (b \\<open>Sequence\\<close>)\n  (b \\<open>Ordered0\\<close>)\n  (b \\<open>Subsets0\\<close>)\n  (b \\<open>Union0\\<close>)\n  (b \\<open>Redefines0\\<close>)\n  (b \\<open>Derived0\\<close>)\n  (b \\<open>Qualifier0\\<close>)\n  (b \\<open>Nonunique0\\<close>)\""], ["", "definition \"of_toy_multiplicity_single a b = rec_toy_multiplicity_single\n  (ap1 a (b \\<open>Mult_nat\\<close>) (of_nat a b))\n  (b \\<open>Mult_star\\<close>)\n  (b \\<open>Mult_infinity\\<close>)\""], ["", "definition \"of_toy_multiplicity a b f = toy_multiplicity_rec\n  (ap4 a (b (ext \\<open>toy_multiplicity_ext\\<close>))\n    (of_list a b (of_pair a b (of_toy_multiplicity_single a b) (of_option a b (of_toy_multiplicity_single a b))))\n    (of_option a b (of_string a b))\n    (of_list a b (of_toy_collection b))\n    (f a b))\""], ["", "definition \"of_toy_ty_class_node a b f = toy_ty_class_node_rec\n  (ap4 a (b (ext \\<open>toy_ty_class_node_ext\\<close>))\n    (of_nat a b)\n    (of_toy_multiplicity a b (K of_unit))\n    (of_string a b)\n    (f a b))\""], ["", "definition \"of_toy_ty_class a b f = toy_ty_class_rec\n  (ap6 a (b (ext \\<open>toy_ty_class_ext\\<close>))\n    (of_string a b)\n    (of_nat a b)\n    (of_nat a b)\n    (of_toy_ty_class_node a b (K of_unit))\n    (of_toy_ty_class_node a b (K of_unit))\n    (f a b))\""], ["", "definition \"of_toy_ty_obj_core a b = rec_toy_ty_obj_core\n  (ap1 a (b \\<open>ToyTyCore_pre\\<close>) (of_string a b))\n  (ap1 a (b \\<open>ToyTyCore\\<close>) (of_toy_ty_class a b (K of_unit)))\""], ["", "definition \"of_toy_ty_obj a b = rec_toy_ty_obj\n  (ap2 a (b \\<open>ToyTyObj\\<close>) (of_toy_ty_obj_core a b) (of_list a b (of_list a b (of_toy_ty_obj_core a b))))\""], ["", "definition \"of_toy_ty a b = (\\<lambda>f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15.\n                                    rec_toy_ty f1 f2 f3 f4 f5 f6\n                                               f7 (K o f8) (\\<lambda>_ _. f9) (f10 o map_prod id snd) (\\<lambda>_ _. f11) f12 f13 f14 f15)\n  (b \\<open>ToyTy_base_void\\<close>)\n  (b \\<open>ToyTy_base_boolean\\<close>)\n  (b \\<open>ToyTy_base_integer\\<close>)\n  (b \\<open>ToyTy_base_unlimitednatural\\<close>)\n  (b \\<open>ToyTy_base_real\\<close>)\n  (b \\<open>ToyTy_base_string\\<close>)\n  (ap1 a (b \\<open>ToyTy_object\\<close>) (of_toy_ty_obj a b))\n  (ar2 a (b \\<open>ToyTy_collection\\<close>) (of_toy_multiplicity a b (K of_unit)))\n  (ar2 a (b \\<open>ToyTy_pair\\<close>) id)\n  (ap1 a (b \\<open>ToyTy_binding\\<close>) (of_pair a b (of_option a b (of_string a b)) id))\n  (ar2 a (b \\<open>ToyTy_arrow\\<close>) id)\n  (ap1 a (b \\<open>ToyTy_class_syn\\<close>) (of_string a b))\n  (ap1 a (b \\<open>ToyTy_enum\\<close>) (of_string a b))\n  (ap1 a (b \\<open>ToyTy_raw\\<close>) (of_string a b))\""], ["", "definition \"of_toy_association_type a b = rec_toy_association_type\n  (b \\<open>ToyAssTy_native_attribute\\<close>)\n  (b \\<open>ToyAssTy_association\\<close>)\n  (b \\<open>ToyAssTy_composition\\<close>)\n  (b \\<open>ToyAssTy_aggregation\\<close>)\""], ["", "definition \"of_toy_association_relation a b = rec_toy_association_relation\n  (ap1 a (b \\<open>ToyAssRel\\<close>)\n    (of_list a b (of_pair a b (of_toy_ty_obj a b) (of_toy_multiplicity a b (K of_unit)))))\""], ["", "definition \"of_toy_association a b f = toy_association_rec\n  (ap3 a (b (ext \\<open>toy_association_ext\\<close>))\n    (of_toy_association_type a b)\n    (of_toy_association_relation a b)\n    (f a b))\""], ["", "definition \"of_toy_ctxt_prefix a b = rec_toy_ctxt_prefix\n  (b \\<open>ToyCtxtPre\\<close>)\n  (b \\<open>ToyCtxtPost\\<close>)\""], ["", "definition \"of_toy_ctxt_term a b = (\\<lambda>f0 f1 f2. rec_toy_ctxt_term f0 f1 (co1 K f2))\n  (ap1 a (b \\<open>T_pure\\<close>) (of_pure_term a b))\n  (ap2 a (b \\<open>T_to_be_parsed\\<close>) (of_string a b) (of_string a b))\n  (ar2 a (b \\<open>T_lambda\\<close>) (of_string a b))\""], ["", "definition \"of_toy_prop a b = rec_toy_prop\n  (ap2 a (b \\<open>ToyProp_ctxt\\<close>) (of_option a b (of_string a b)) (of_toy_ctxt_term a b))\""], ["", "definition \"of_toy_ctxt_term_inv a b = rec_toy_ctxt_term_inv\n  (ap2 a (b \\<open>T_inv\\<close>) (of_bool b) (of_toy_prop a b))\""], ["", "definition \"of_toy_ctxt_term_pp a b = rec_toy_ctxt_term_pp\n  (ap2 a (b \\<open>T_pp\\<close>) (of_toy_ctxt_prefix a b) (of_toy_prop a b))\n  (ap1 a (b \\<open>T_invariant\\<close>) (of_toy_ctxt_term_inv a b))\""], ["", "definition \"of_toy_ctxt_pre_post a b f = toy_ctxt_pre_post_rec\n  (ap4 a (b (ext \\<open>toy_ctxt_pre_post_ext\\<close>))\n    (of_string a b)\n    (of_toy_ty a b)\n    (of_list a b (of_toy_ctxt_term_pp a b))\n    (f a b))\""], ["", "definition \"of_toy_ctxt_clause a b = rec_toy_ctxt_clause\n  (ap1 a (b \\<open>Ctxt_pp\\<close>) (of_toy_ctxt_pre_post a b (K of_unit)))\n  (ap1 a (b \\<open>Ctxt_inv\\<close>) (of_toy_ctxt_term_inv a b))\""], ["", "definition \"of_toy_ctxt a b f = toy_ctxt_rec\n  (ap4 a (b (ext \\<open>toy_ctxt_ext\\<close>))\n    (of_list a b (of_string a b))\n    (of_toy_ty_obj a b)\n    (of_list a b (of_toy_ctxt_clause a b))\n    (f a b))\""], ["", "definition \"of_toy_class a b = (\\<lambda>f0 f1 f2 f3. rec_toy_class (ap3 a f0 f1 f2 f3))\n  (b \\<open>ToyClass\\<close>)\n    (of_string a b)\n    (of_list a b (of_pair a b (of_string a b) (of_toy_ty a b)))\n    (of_list a b snd)\""], ["", "definition \"of_toy_class_raw a b f = toy_class_raw_rec\n  (ap5 a (b (ext \\<open>toy_class_raw_ext\\<close>))\n    (of_toy_ty_obj a b)\n    (of_list a b (of_pair a b (of_string a b) (of_toy_ty a b)))\n    (of_list a b (of_toy_ctxt_clause a b))\n    (of_bool b)\n    (f a b))\""], ["", "definition \"of_toy_ass_class a b = rec_toy_ass_class\n  (ap2 a (b \\<open>ToyAssClass\\<close>)\n    (of_toy_association a b (K of_unit))\n    (of_toy_class_raw a b (K of_unit)))\""], ["", "definition \"of_toy_class_synonym a b = rec_toy_class_synonym\n  (ap2 a (b \\<open>ToyClassSynonym\\<close>)\n    (of_string a b)\n    (of_toy_ty a b))\""], ["", "definition \"of_toy_enum a b = rec_toy_enum\n  (ap2 a (b \\<open>ToyEnum\\<close>)\n    (of_string a b)\n    (of_list a b (of_string a b)))\""], ["", "end"], ["", "lemmas [code] =\n  Parse.of_toy_collection_def\n  Parse.of_toy_multiplicity_single_def\n  Parse.of_toy_multiplicity_def\n  Parse.of_toy_ty_class_node_def\n  Parse.of_toy_ty_class_def\n  Parse.of_toy_ty_obj_core_def\n  Parse.of_toy_ty_obj_def\n  Parse.of_toy_ty_def\n  Parse.of_toy_association_type_def\n  Parse.of_toy_association_relation_def\n  Parse.of_toy_association_def\n  Parse.of_toy_ctxt_prefix_def\n  Parse.of_toy_ctxt_term_def\n  Parse.of_toy_prop_def\n  Parse.of_toy_ctxt_term_inv_def\n  Parse.of_toy_ctxt_term_pp_def\n  Parse.of_toy_ctxt_pre_post_def\n  Parse.of_toy_ctxt_clause_def\n  Parse.of_toy_ctxt_def\n  Parse.of_toy_class_def\n  Parse.of_toy_class_raw_def\n  Parse.of_toy_ass_class_def\n  Parse.of_toy_class_synonym_def\n  Parse.of_toy_enum_def"], ["", "end"]]}