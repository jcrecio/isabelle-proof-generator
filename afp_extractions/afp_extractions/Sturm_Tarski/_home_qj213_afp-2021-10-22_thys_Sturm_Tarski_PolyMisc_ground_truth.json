{"file_name": "/home/qj213/afp-2021-10-22/thys/Sturm_Tarski/PolyMisc.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Sturm_Tarski", "problem_names": ["lemma coprime_poly_0:\n  \"poly p x \\<noteq> 0 \\<or> poly q x \\<noteq> 0\" if \"coprime p q\"\n  for x :: \"'a :: field\"", "lemma smult_cancel:\n  fixes p::\"'a::idom poly\"\n  assumes \"c\\<noteq>0\" and smult: \"smult c p = smult c q\" \n  shows \"p=q\"", "lemma dvd_monic:\n  fixes p q:: \"'a :: idom poly\" \n  assumes monic:\"lead_coeff p=1\" and \"p dvd (smult c q)\" and \"c\\<noteq>0\"\n  shows \"p dvd q\"", "lemma poly_power_n_eq:\n  fixes x::\"'a :: idom\"\n  assumes \"n\\<noteq>0\"\n  shows \"poly ([:-a,1:]^n) x=0 \\<longleftrightarrow> (x=a)\"", "lemma poly_power_n_odd:\n  fixes x a:: real\n  assumes \"odd n\"\n  shows \"poly ([:-a,1:]^n) x>0 \\<longleftrightarrow> (x>a)\"", "lemma gcd_coprime_poly:\n  fixes p q::\"'a::{factorial_ring_gcd,semiring_gcd_mult_normalize} poly\"\n  assumes nz: \"p \\<noteq> 0 \\<or> q \\<noteq> 0\" and p': \"p = p' * gcd p q\" and\n    q': \"q = q' * gcd p q\"\n  shows \"coprime p' q'\"", "lemma poly_mod:\n  \"poly (p mod q) x = poly p x\" if \"poly q x = 0\""], "translations": [["", "lemma coprime_poly_0:\n  \"poly p x \\<noteq> 0 \\<or> poly q x \\<noteq> 0\" if \"coprime p q\"\n  for x :: \"'a :: field\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly p x \\<noteq> (0::'a) \\<or> poly q x \\<noteq> (0::'a)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (poly p x \\<noteq> (0::'a) \\<or>\n            poly q x \\<noteq> (0::'a)) \\<Longrightarrow>\n    False", "assume \" \\<not> (poly p x \\<noteq> 0 \\<or> poly q x \\<noteq> 0)\""], ["proof (state)\nthis:\n  \\<not> (poly p x \\<noteq> (0::'a) \\<or> poly q x \\<noteq> (0::'a))\n\ngoal (1 subgoal):\n 1. \\<not> (poly p x \\<noteq> (0::'a) \\<or>\n            poly q x \\<noteq> (0::'a)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (poly p x \\<noteq> (0::'a) \\<or> poly q x \\<noteq> (0::'a))", "have \"[:-x, 1:] dvd p\" \"[:-x, 1:] dvd q\""], ["proof (prove)\nusing this:\n  \\<not> (poly p x \\<noteq> (0::'a) \\<or> poly q x \\<noteq> (0::'a))\n\ngoal (1 subgoal):\n 1. [:- x, 1::'a:] dvd p &&& [:- x, 1::'a:] dvd q", "by (simp_all add: poly_eq_0_iff_dvd)"], ["proof (state)\nthis:\n  [:- x, 1::'a:] dvd p\n  [:- x, 1::'a:] dvd q\n\ngoal (1 subgoal):\n 1. \\<not> (poly p x \\<noteq> (0::'a) \\<or>\n            poly q x \\<noteq> (0::'a)) \\<Longrightarrow>\n    False", "with that"], ["proof (chain)\npicking this:\n  coprime p q\n  [:- x, 1::'a:] dvd p\n  [:- x, 1::'a:] dvd q", "have \"is_unit [:-x, 1:]\""], ["proof (prove)\nusing this:\n  coprime p q\n  [:- x, 1::'a:] dvd p\n  [:- x, 1::'a:] dvd q\n\ngoal (1 subgoal):\n 1. is_unit [:- x, 1::'a:]", "by (rule coprime_common_divisor)"], ["proof (state)\nthis:\n  is_unit [:- x, 1::'a:]\n\ngoal (1 subgoal):\n 1. \\<not> (poly p x \\<noteq> (0::'a) \\<or>\n            poly q x \\<noteq> (0::'a)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  is_unit [:- x, 1::'a:]", "show False"], ["proof (prove)\nusing this:\n  is_unit [:- x, 1::'a:]\n\ngoal (1 subgoal):\n 1. False", "by (auto simp add: is_unit_pCons_iff)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smult_cancel:\n  fixes p::\"'a::idom poly\"\n  assumes \"c\\<noteq>0\" and smult: \"smult c p = smult c q\" \n  shows \"p=q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p = q", "have \"smult c (p-q)=0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smult c (p - q) = 0", "using smult"], ["proof (prove)\nusing this:\n  smult c p = smult c q\n\ngoal (1 subgoal):\n 1. smult c (p - q) = 0", "by (metis diff_self smult_diff_right)"], ["proof (state)\nthis:\n  smult c (p - q) = 0\n\ngoal (1 subgoal):\n 1. p = q", "thus ?thesis"], ["proof (prove)\nusing this:\n  smult c (p - q) = 0\n\ngoal (1 subgoal):\n 1. p = q", "using \\<open>c\\<noteq>0\\<close>"], ["proof (prove)\nusing this:\n  smult c (p - q) = 0\n  c \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. p = q", "by auto"], ["proof (state)\nthis:\n  p = q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dvd_monic:\n  fixes p q:: \"'a :: idom poly\" \n  assumes monic:\"lead_coeff p=1\" and \"p dvd (smult c q)\" and \"c\\<noteq>0\"\n  shows \"p dvd q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p dvd q", "using assms"], ["proof (prove)\nusing this:\n  lead_coeff p = (1::'a)\n  p dvd smult c q\n  c \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. p dvd q", "proof (cases \"q=0 \\<or> degree p=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>lead_coeff p = (1::'a); p dvd smult c q; c \\<noteq> (0::'a);\n     q = 0 \\<or> degree p = 0\\<rbrakk>\n    \\<Longrightarrow> p dvd q\n 2. \\<lbrakk>lead_coeff p = (1::'a); p dvd smult c q; c \\<noteq> (0::'a);\n     \\<not> (q = 0 \\<or> degree p = 0)\\<rbrakk>\n    \\<Longrightarrow> p dvd q", "case True"], ["proof (state)\nthis:\n  q = 0 \\<or> degree p = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>lead_coeff p = (1::'a); p dvd smult c q; c \\<noteq> (0::'a);\n     q = 0 \\<or> degree p = 0\\<rbrakk>\n    \\<Longrightarrow> p dvd q\n 2. \\<lbrakk>lead_coeff p = (1::'a); p dvd smult c q; c \\<noteq> (0::'a);\n     \\<not> (q = 0 \\<or> degree p = 0)\\<rbrakk>\n    \\<Longrightarrow> p dvd q", "thus ?thesis"], ["proof (prove)\nusing this:\n  q = 0 \\<or> degree p = 0\n\ngoal (1 subgoal):\n 1. p dvd q", "using assms"], ["proof (prove)\nusing this:\n  q = 0 \\<or> degree p = 0\n  lead_coeff p = (1::'a)\n  p dvd smult c q\n  c \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. p dvd q", "by (auto elim!: degree_eq_zeroE simp add: const_poly_dvd_iff)"], ["proof (state)\nthis:\n  p dvd q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lead_coeff p = (1::'a); p dvd smult c q; c \\<noteq> (0::'a);\n     \\<not> (q = 0 \\<or> degree p = 0)\\<rbrakk>\n    \\<Longrightarrow> p dvd q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>lead_coeff p = (1::'a); p dvd smult c q; c \\<noteq> (0::'a);\n     \\<not> (q = 0 \\<or> degree p = 0)\\<rbrakk>\n    \\<Longrightarrow> p dvd q", "case False"], ["proof (state)\nthis:\n  \\<not> (q = 0 \\<or> degree p = 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lead_coeff p = (1::'a); p dvd smult c q; c \\<noteq> (0::'a);\n     \\<not> (q = 0 \\<or> degree p = 0)\\<rbrakk>\n    \\<Longrightarrow> p dvd q", "hence \"q\\<noteq>0\" and \"degree p\\<noteq>0\""], ["proof (prove)\nusing this:\n  \\<not> (q = 0 \\<or> degree p = 0)\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 &&& degree p \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  q \\<noteq> 0\n  degree p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lead_coeff p = (1::'a); p dvd smult c q; c \\<noteq> (0::'a);\n     \\<not> (q = 0 \\<or> degree p = 0)\\<rbrakk>\n    \\<Longrightarrow> p dvd q", "obtain k where k:\"smult c q = p*k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k. smult c q = p * k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms dvd_def"], ["proof (prove)\nusing this:\n  lead_coeff p = (1::'a)\n  p dvd smult c q\n  c \\<noteq> (0::'a)\n  (?b dvd ?a) = (\\<exists>k. ?a = ?b * k)\n\ngoal (1 subgoal):\n 1. (\\<And>k. smult c q = p * k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  smult c q = p * k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lead_coeff p = (1::'a); p dvd smult c q; c \\<noteq> (0::'a);\n     \\<not> (q = 0 \\<or> degree p = 0)\\<rbrakk>\n    \\<Longrightarrow> p dvd q", "hence \"k\\<noteq>0\""], ["proof (prove)\nusing this:\n  smult c q = p * k\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0", "by (metis False assms(3) mult_zero_right smult_eq_0_iff)"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lead_coeff p = (1::'a); p dvd smult c q; c \\<noteq> (0::'a);\n     \\<not> (q = 0 \\<or> degree p = 0)\\<rbrakk>\n    \\<Longrightarrow> p dvd q", "hence deg_eq:\"degree q=degree p + degree k\""], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree q = degree p + degree k", "by (metis False assms(3) degree_0 degree_mult_eq degree_smult_eq k)"], ["proof (state)\nthis:\n  degree q = degree p + degree k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lead_coeff p = (1::'a); p dvd smult c q; c \\<noteq> (0::'a);\n     \\<not> (q = 0 \\<or> degree p = 0)\\<rbrakk>\n    \\<Longrightarrow> p dvd q", "have c_dvd:\"\\<forall>n\\<le>degree k. c dvd coeff k (degree k - n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n\\<le>degree k. c dvd coeff k (degree k - n)", "proof (rule,rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. n \\<le> degree k \\<Longrightarrow> c dvd coeff k (degree k - n)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. n \\<le> degree k \\<Longrightarrow> c dvd coeff k (degree k - n)", "assume \"n \\<le> degree k \""], ["proof (state)\nthis:\n  n \\<le> degree k\n\ngoal (1 subgoal):\n 1. \\<And>n. n \\<le> degree k \\<Longrightarrow> c dvd coeff k (degree k - n)", "thus \"c dvd coeff k (degree k - n)\""], ["proof (prove)\nusing this:\n  n \\<le> degree k\n\ngoal (1 subgoal):\n 1. c dvd coeff k (degree k - n)", "proof (induct n rule:nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>m<n.\n                   m \\<le> degree k \\<longrightarrow>\n                   c dvd coeff k (degree k - m);\n        n \\<le> degree k\\<rbrakk>\n       \\<Longrightarrow> c dvd coeff k (degree k - n)", "case (1 n)"], ["proof (state)\nthis:\n  \\<forall>m<n.\n     m \\<le> degree k \\<longrightarrow> c dvd coeff k (degree k - m)\n  n \\<le> degree k\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>m<n.\n                   m \\<le> degree k \\<longrightarrow>\n                   c dvd coeff k (degree k - m);\n        n \\<le> degree k\\<rbrakk>\n       \\<Longrightarrow> c dvd coeff k (degree k - n)", "define T where \"T\\<equiv>(\\<lambda>i. coeff p i * coeff k (degree p+degree k - n - i))\""], ["proof (state)\nthis:\n  T \\<equiv> \\<lambda>i. coeff p i * coeff k (degree p + degree k - n - i)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>m<n.\n                   m \\<le> degree k \\<longrightarrow>\n                   c dvd coeff k (degree k - m);\n        n \\<le> degree k\\<rbrakk>\n       \\<Longrightarrow> c dvd coeff k (degree k - n)", "have \"c * coeff q (degree q - n) = (\\<Sum>i\\<le>degree q - n. coeff p i * coeff k (degree q - n - i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c * coeff q (degree q - n) =\n    (\\<Sum>i\\<le>degree q - n. coeff p i * coeff k (degree q - n - i))", "using coeff_mult[of p k \"degree q - n\"] k coeff_smult[of c q \"degree q -n\"]"], ["proof (prove)\nusing this:\n  coeff (p * k) (degree q - n) =\n  (\\<Sum>i\\<le>degree q - n. coeff p i * coeff k (degree q - n - i))\n  smult c q = p * k\n  coeff (smult c q) (degree q - n) = c * coeff q (degree q - n)\n\ngoal (1 subgoal):\n 1. c * coeff q (degree q - n) =\n    (\\<Sum>i\\<le>degree q - n. coeff p i * coeff k (degree q - n - i))", "by auto"], ["proof (state)\nthis:\n  c * coeff q (degree q - n) =\n  (\\<Sum>i\\<le>degree q - n. coeff p i * coeff k (degree q - n - i))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>m<n.\n                   m \\<le> degree k \\<longrightarrow>\n                   c dvd coeff k (degree k - m);\n        n \\<le> degree k\\<rbrakk>\n       \\<Longrightarrow> c dvd coeff k (degree k - n)", "also"], ["proof (state)\nthis:\n  c * coeff q (degree q - n) =\n  (\\<Sum>i\\<le>degree q - n. coeff p i * coeff k (degree q - n - i))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>m<n.\n                   m \\<le> degree k \\<longrightarrow>\n                   c dvd coeff k (degree k - m);\n        n \\<le> degree k\\<rbrakk>\n       \\<Longrightarrow> c dvd coeff k (degree k - n)", "have \"...=(\\<Sum>i\\<le>degree p+degree k - n. T i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<le>degree q - n. coeff p i * coeff k (degree q - n - i)) =\n    sum T {..degree p + degree k - n}", "using deg_eq"], ["proof (prove)\nusing this:\n  degree q = degree p + degree k\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<le>degree q - n. coeff p i * coeff k (degree q - n - i)) =\n    sum T {..degree p + degree k - n}", "unfolding T_def"], ["proof (prove)\nusing this:\n  degree q = degree p + degree k\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<le>degree q - n. coeff p i * coeff k (degree q - n - i)) =\n    (\\<Sum>i\\<le>degree p + degree k - n.\n        coeff p i * coeff k (degree p + degree k - n - i))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<le>degree q - n. coeff p i * coeff k (degree q - n - i)) =\n  sum T {..degree p + degree k - n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>m<n.\n                   m \\<le> degree k \\<longrightarrow>\n                   c dvd coeff k (degree k - m);\n        n \\<le> degree k\\<rbrakk>\n       \\<Longrightarrow> c dvd coeff k (degree k - n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<le>degree q - n. coeff p i * coeff k (degree q - n - i)) =\n  sum T {..degree p + degree k - n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>m<n.\n                   m \\<le> degree k \\<longrightarrow>\n                   c dvd coeff k (degree k - m);\n        n \\<le> degree k\\<rbrakk>\n       \\<Longrightarrow> c dvd coeff k (degree k - n)", "have \"...=(\\<Sum>i\\<in>{0..<degree p}. T i) + sum T {(degree p)}+ \n                  sum T {degree p + 1..degree p + degree k - n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum T {..degree p + degree k - n} =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum T {..degree p + degree k - n} =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "define C where \"C\\<equiv>{{0..<degree p}, {degree p},{degree p+1..degree p+degree k-n}}\""], ["proof (state)\nthis:\n  C \\<equiv>\n  {{0..<degree p}, {degree p}, {degree p + 1..degree p + degree k - n}}\n\ngoal (1 subgoal):\n 1. sum T {..degree p + degree k - n} =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "have \"\\<forall>A\\<in>C. finite A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>A\\<in>C. finite A", "unfolding C_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>A\\<in>{{0..<degree p}, {degree p},\n                    {degree p + 1..degree p + degree k - n}}.\n       finite A", "by auto"], ["proof (state)\nthis:\n  \\<forall>A\\<in>C. finite A\n\ngoal (1 subgoal):\n 1. sum T {..degree p + degree k - n} =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "moreover"], ["proof (state)\nthis:\n  \\<forall>A\\<in>C. finite A\n\ngoal (1 subgoal):\n 1. sum T {..degree p + degree k - n} =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "have \"\\<forall>A\\<in>C. \\<forall>B\\<in>C. A \\<noteq> B \\<longrightarrow> A \\<inter> B = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>A\\<in>C.\n       \\<forall>B\\<in>C. A \\<noteq> B \\<longrightarrow> A \\<inter> B = {}", "unfolding C_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>A\\<in>{{0..<degree p}, {degree p},\n                    {degree p + 1..degree p + degree k - n}}.\n       \\<forall>B\\<in>{{0..<degree p}, {degree p},\n                       {degree p + 1..degree p + degree k - n}}.\n          A \\<noteq> B \\<longrightarrow> A \\<inter> B = {}", "by auto"], ["proof (state)\nthis:\n  \\<forall>A\\<in>C.\n     \\<forall>B\\<in>C. A \\<noteq> B \\<longrightarrow> A \\<inter> B = {}\n\ngoal (1 subgoal):\n 1. sum T {..degree p + degree k - n} =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>A\\<in>C. finite A\n  \\<forall>A\\<in>C.\n     \\<forall>B\\<in>C. A \\<noteq> B \\<longrightarrow> A \\<inter> B = {}", "have \"sum T (\\<Union>C) = sum (sum T) C\""], ["proof (prove)\nusing this:\n  \\<forall>A\\<in>C. finite A\n  \\<forall>A\\<in>C.\n     \\<forall>B\\<in>C. A \\<noteq> B \\<longrightarrow> A \\<inter> B = {}\n\ngoal (1 subgoal):\n 1. sum T (\\<Union> C) = sum (sum T) C", "using sum.Union_disjoint"], ["proof (prove)\nusing this:\n  \\<forall>A\\<in>C. finite A\n  \\<forall>A\\<in>C.\n     \\<forall>B\\<in>C. A \\<noteq> B \\<longrightarrow> A \\<inter> B = {}\n  \\<lbrakk>\\<forall>A\\<in>?C. finite A;\n   \\<forall>A\\<in>?C.\n      \\<forall>B\\<in>?C.\n         A \\<noteq> B \\<longrightarrow> A \\<inter> B = {}\\<rbrakk>\n  \\<Longrightarrow> sum ?g (\\<Union> ?C) = (sum \\<circ> sum) ?g ?C\n\ngoal (1 subgoal):\n 1. sum T (\\<Union> C) = sum (sum T) C", "by auto"], ["proof (state)\nthis:\n  sum T (\\<Union> C) = sum (sum T) C\n\ngoal (1 subgoal):\n 1. sum T {..degree p + degree k - n} =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "moreover"], ["proof (state)\nthis:\n  sum T (\\<Union> C) = sum (sum T) C\n\ngoal (1 subgoal):\n 1. sum T {..degree p + degree k - n} =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "have \"\\<Union>C={..degree p + degree k - n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> C = {..degree p + degree k - n}", "using \\<open>n \\<le> degree k\\<close>"], ["proof (prove)\nusing this:\n  n \\<le> degree k\n\ngoal (1 subgoal):\n 1. \\<Union> C = {..degree p + degree k - n}", "unfolding C_def"], ["proof (prove)\nusing this:\n  n \\<le> degree k\n\ngoal (1 subgoal):\n 1. \\<Union>\n     {{0..<degree p}, {degree p}, {degree p + 1..degree p + degree k - n}} =\n    {..degree p + degree k - n}", "by auto"], ["proof (state)\nthis:\n  \\<Union> C = {..degree p + degree k - n}\n\ngoal (1 subgoal):\n 1. sum T {..degree p + degree k - n} =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "moreover"], ["proof (state)\nthis:\n  \\<Union> C = {..degree p + degree k - n}\n\ngoal (1 subgoal):\n 1. sum T {..degree p + degree k - n} =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "have  \"sum (sum T) C= sum T {0..<degree p} + sum T {(degree p)} + \n                  sum T {degree p + 1..degree p + degree k - n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (sum T) C =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (sum T) C =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "have \"{0..<degree p}\\<noteq>{degree p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..<degree p} \\<noteq> {degree p}", "by (metis atLeast0LessThan insertI1 lessThan_iff less_imp_not_eq)"], ["proof (state)\nthis:\n  {0..<degree p} \\<noteq> {degree p}\n\ngoal (1 subgoal):\n 1. sum (sum T) C =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "moreover"], ["proof (state)\nthis:\n  {0..<degree p} \\<noteq> {degree p}\n\ngoal (1 subgoal):\n 1. sum (sum T) C =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "have \"{degree p}\\<noteq>{degree p + 1..degree p + degree k - n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {degree p} \\<noteq> {degree p + 1..degree p + degree k - n}", "by (metis add.commute add_diff_cancel_right' atLeastAtMost_singleton_iff \n                  diff_self_eq_0 eq_imp_le not_one_le_zero)"], ["proof (state)\nthis:\n  {degree p} \\<noteq> {degree p + 1..degree p + degree k - n}\n\ngoal (1 subgoal):\n 1. sum (sum T) C =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "moreover"], ["proof (state)\nthis:\n  {degree p} \\<noteq> {degree p + 1..degree p + degree k - n}\n\ngoal (1 subgoal):\n 1. sum (sum T) C =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "have \"{0..<degree p}\\<noteq>{degree p + 1..degree p + degree k - n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..<degree p} \\<noteq> {degree p + 1..degree p + degree k - n}", "using \\<open>degree k\\<ge>n\\<close> \\<open>degree p\\<noteq>0\\<close>"], ["proof (prove)\nusing this:\n  n \\<le> degree k\n  degree p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. {0..<degree p} \\<noteq> {degree p + 1..degree p + degree k - n}", "by fastforce"], ["proof (state)\nthis:\n  {0..<degree p} \\<noteq> {degree p + 1..degree p + degree k - n}\n\ngoal (1 subgoal):\n 1. sum (sum T) C =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "ultimately"], ["proof (chain)\npicking this:\n  {0..<degree p} \\<noteq> {degree p}\n  {degree p} \\<noteq> {degree p + 1..degree p + degree k - n}\n  {0..<degree p} \\<noteq> {degree p + 1..degree p + degree k - n}", "show ?thesis"], ["proof (prove)\nusing this:\n  {0..<degree p} \\<noteq> {degree p}\n  {degree p} \\<noteq> {degree p + 1..degree p + degree k - n}\n  {0..<degree p} \\<noteq> {degree p + 1..degree p + degree k - n}\n\ngoal (1 subgoal):\n 1. sum (sum T) C =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "unfolding C_def"], ["proof (prove)\nusing this:\n  {0..<degree p} \\<noteq> {degree p}\n  {degree p} \\<noteq> {degree p + 1..degree p + degree k - n}\n  {0..<degree p} \\<noteq> {degree p + 1..degree p + degree k - n}\n\ngoal (1 subgoal):\n 1. sum (sum T)\n     {{0..<degree p}, {degree p}, {degree p + 1..degree p + degree k - n}} =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "by auto"], ["proof (state)\nthis:\n  sum (sum T) C =\n  sum T {0..<degree p} + sum T {degree p} +\n  sum T {degree p + 1..degree p + degree k - n}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sum (sum T) C =\n  sum T {0..<degree p} + sum T {degree p} +\n  sum T {degree p + 1..degree p + degree k - n}\n\ngoal (1 subgoal):\n 1. sum T {..degree p + degree k - n} =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "ultimately"], ["proof (chain)\npicking this:\n  sum T (\\<Union> C) = sum (sum T) C\n  \\<Union> C = {..degree p + degree k - n}\n  sum (sum T) C =\n  sum T {0..<degree p} + sum T {degree p} +\n  sum T {degree p + 1..degree p + degree k - n}", "show ?thesis"], ["proof (prove)\nusing this:\n  sum T (\\<Union> C) = sum (sum T) C\n  \\<Union> C = {..degree p + degree k - n}\n  sum (sum T) C =\n  sum T {0..<degree p} + sum T {degree p} +\n  sum T {degree p + 1..degree p + degree k - n}\n\ngoal (1 subgoal):\n 1. sum T {..degree p + degree k - n} =\n    sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n}", "by auto"], ["proof (state)\nthis:\n  sum T {..degree p + degree k - n} =\n  sum T {0..<degree p} + sum T {degree p} +\n  sum T {degree p + 1..degree p + degree k - n}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sum T {..degree p + degree k - n} =\n  sum T {0..<degree p} + sum T {degree p} +\n  sum T {degree p + 1..degree p + degree k - n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>m<n.\n                   m \\<le> degree k \\<longrightarrow>\n                   c dvd coeff k (degree k - m);\n        n \\<le> degree k\\<rbrakk>\n       \\<Longrightarrow> c dvd coeff k (degree k - n)", "also"], ["proof (state)\nthis:\n  sum T {..degree p + degree k - n} =\n  sum T {0..<degree p} + sum T {degree p} +\n  sum T {degree p + 1..degree p + degree k - n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>m<n.\n                   m \\<le> degree k \\<longrightarrow>\n                   c dvd coeff k (degree k - m);\n        n \\<le> degree k\\<rbrakk>\n       \\<Longrightarrow> c dvd coeff k (degree k - n)", "have \"...=(\\<Sum>i\\<in>{0..<degree p}. T i) +  coeff k (degree k - n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n} =\n    sum T {0..<degree p} + coeff k (degree k - n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n} =\n    sum T {0..<degree p} + coeff k (degree k - n)", "have \"\\<forall>x\\<in>{degree p + 1..degree p + degree k - n}. T x=0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{degree p + 1..degree p + degree k - n}. T x = (0::'a)", "using coeff_eq_0[of p]"], ["proof (prove)\nusing this:\n  degree p < ?n \\<Longrightarrow> coeff p ?n = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{degree p + 1..degree p + degree k - n}. T x = (0::'a)", "unfolding T_def"], ["proof (prove)\nusing this:\n  degree p < ?n \\<Longrightarrow> coeff p ?n = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{degree p + 1..degree p + degree k - n}.\n       coeff p x * coeff k (degree p + degree k - n - x) = (0::'a)", "by simp"], ["proof (state)\nthis:\n  \\<forall>x\\<in>{degree p + 1..degree p + degree k - n}. T x = (0::'a)\n\ngoal (1 subgoal):\n 1. sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n} =\n    sum T {0..<degree p} + coeff k (degree k - n)", "hence \"sum T {degree p + 1..degree p + degree k - n}=0\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{degree p + 1..degree p + degree k - n}. T x = (0::'a)\n\ngoal (1 subgoal):\n 1. sum T {degree p + 1..degree p + degree k - n} = (0::'a)", "by auto"], ["proof (state)\nthis:\n  sum T {degree p + 1..degree p + degree k - n} = (0::'a)\n\ngoal (1 subgoal):\n 1. sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n} =\n    sum T {0..<degree p} + coeff k (degree k - n)", "moreover"], ["proof (state)\nthis:\n  sum T {degree p + 1..degree p + degree k - n} = (0::'a)\n\ngoal (1 subgoal):\n 1. sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n} =\n    sum T {0..<degree p} + coeff k (degree k - n)", "have \"T (degree p)=coeff k (degree k - n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T (degree p) = coeff k (degree k - n)", "using monic"], ["proof (prove)\nusing this:\n  lead_coeff p = (1::'a)\n\ngoal (1 subgoal):\n 1. T (degree p) = coeff k (degree k - n)", "by (simp add: T_def)"], ["proof (state)\nthis:\n  T (degree p) = coeff k (degree k - n)\n\ngoal (1 subgoal):\n 1. sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n} =\n    sum T {0..<degree p} + coeff k (degree k - n)", "ultimately"], ["proof (chain)\npicking this:\n  sum T {degree p + 1..degree p + degree k - n} = (0::'a)\n  T (degree p) = coeff k (degree k - n)", "show ?thesis"], ["proof (prove)\nusing this:\n  sum T {degree p + 1..degree p + degree k - n} = (0::'a)\n  T (degree p) = coeff k (degree k - n)\n\ngoal (1 subgoal):\n 1. sum T {0..<degree p} + sum T {degree p} +\n    sum T {degree p + 1..degree p + degree k - n} =\n    sum T {0..<degree p} + coeff k (degree k - n)", "by auto"], ["proof (state)\nthis:\n  sum T {0..<degree p} + sum T {degree p} +\n  sum T {degree p + 1..degree p + degree k - n} =\n  sum T {0..<degree p} + coeff k (degree k - n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sum T {0..<degree p} + sum T {degree p} +\n  sum T {degree p + 1..degree p + degree k - n} =\n  sum T {0..<degree p} + coeff k (degree k - n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>m<n.\n                   m \\<le> degree k \\<longrightarrow>\n                   c dvd coeff k (degree k - m);\n        n \\<le> degree k\\<rbrakk>\n       \\<Longrightarrow> c dvd coeff k (degree k - n)", "finally"], ["proof (chain)\npicking this:\n  c * coeff q (degree q - n) = sum T {0..<degree p} + coeff k (degree k - n)", "have c_coeff: \"c * coeff q (degree q - n) = sum T {0..<degree p} \n              + coeff k (degree k - n)\""], ["proof (prove)\nusing this:\n  c * coeff q (degree q - n) = sum T {0..<degree p} + coeff k (degree k - n)\n\ngoal (1 subgoal):\n 1. c * coeff q (degree q - n) =\n    sum T {0..<degree p} + coeff k (degree k - n)", "."], ["proof (state)\nthis:\n  c * coeff q (degree q - n) = sum T {0..<degree p} + coeff k (degree k - n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>m<n.\n                   m \\<le> degree k \\<longrightarrow>\n                   c dvd coeff k (degree k - m);\n        n \\<le> degree k\\<rbrakk>\n       \\<Longrightarrow> c dvd coeff k (degree k - n)", "moreover"], ["proof (state)\nthis:\n  c * coeff q (degree q - n) = sum T {0..<degree p} + coeff k (degree k - n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>m<n.\n                   m \\<le> degree k \\<longrightarrow>\n                   c dvd coeff k (degree k - m);\n        n \\<le> degree k\\<rbrakk>\n       \\<Longrightarrow> c dvd coeff k (degree k - n)", "have \"n\\<noteq>0\\<Longrightarrow>c dvd sum T {0..<degree p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> c dvd sum T {0..<degree p}", "proof (rule dvd_sum)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>n \\<noteq> 0; a \\<in> {0..<degree p}\\<rbrakk>\n       \\<Longrightarrow> c dvd T a", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>n \\<noteq> 0; a \\<in> {0..<degree p}\\<rbrakk>\n       \\<Longrightarrow> c dvd T a", "assume i:\"i \\<in> {0..<degree p}\" and \"n\\<noteq>0\""], ["proof (state)\nthis:\n  i \\<in> {0..<degree p}\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>n \\<noteq> 0; a \\<in> {0..<degree p}\\<rbrakk>\n       \\<Longrightarrow> c dvd T a", "hence \"(n+i-degree p)\\<le>degree k\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<degree p}\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n + i - degree p \\<le> degree k", "using \\<open>n \\<le> degree k\\<close>"], ["proof (prove)\nusing this:\n  i \\<in> {0..<degree p}\n  n \\<noteq> 0\n  n \\<le> degree k\n\ngoal (1 subgoal):\n 1. n + i - degree p \\<le> degree k", "by auto"], ["proof (state)\nthis:\n  n + i - degree p \\<le> degree k\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>n \\<noteq> 0; a \\<in> {0..<degree p}\\<rbrakk>\n       \\<Longrightarrow> c dvd T a", "moreover"], ["proof (state)\nthis:\n  n + i - degree p \\<le> degree k\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>n \\<noteq> 0; a \\<in> {0..<degree p}\\<rbrakk>\n       \\<Longrightarrow> c dvd T a", "have \"n + i - degree p <n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n + i - degree p < n", "using i \\<open>n\\<noteq>0\\<close>"], ["proof (prove)\nusing this:\n  i \\<in> {0..<degree p}\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n + i - degree p < n", "by auto"], ["proof (state)\nthis:\n  n + i - degree p < n\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>n \\<noteq> 0; a \\<in> {0..<degree p}\\<rbrakk>\n       \\<Longrightarrow> c dvd T a", "ultimately"], ["proof (chain)\npicking this:\n  n + i - degree p \\<le> degree k\n  n + i - degree p < n", "have \"c dvd coeff k (degree k - (n+i-degree p))\""], ["proof (prove)\nusing this:\n  n + i - degree p \\<le> degree k\n  n + i - degree p < n\n\ngoal (1 subgoal):\n 1. c dvd coeff k (degree k - (n + i - degree p))", "using 1(1)"], ["proof (prove)\nusing this:\n  n + i - degree p \\<le> degree k\n  n + i - degree p < n\n  \\<forall>m<n.\n     m \\<le> degree k \\<longrightarrow> c dvd coeff k (degree k - m)\n\ngoal (1 subgoal):\n 1. c dvd coeff k (degree k - (n + i - degree p))", "by auto"], ["proof (state)\nthis:\n  c dvd coeff k (degree k - (n + i - degree p))\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>n \\<noteq> 0; a \\<in> {0..<degree p}\\<rbrakk>\n       \\<Longrightarrow> c dvd T a", "hence \"c dvd coeff k (degree p + degree k - n - i)\""], ["proof (prove)\nusing this:\n  c dvd coeff k (degree k - (n + i - degree p))\n\ngoal (1 subgoal):\n 1. c dvd coeff k (degree p + degree k - n - i)", "by (metis add_diff_cancel_left' deg_eq diff_diff_left dvd_0_right le_degree \n                  le_diff_conv add.commute ordered_cancel_comm_monoid_diff_class.diff_diff_right)"], ["proof (state)\nthis:\n  c dvd coeff k (degree p + degree k - n - i)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>n \\<noteq> 0; a \\<in> {0..<degree p}\\<rbrakk>\n       \\<Longrightarrow> c dvd T a", "thus \"c dvd T i\""], ["proof (prove)\nusing this:\n  c dvd coeff k (degree p + degree k - n - i)\n\ngoal (1 subgoal):\n 1. c dvd T i", "unfolding T_def"], ["proof (prove)\nusing this:\n  c dvd coeff k (degree p + degree k - n - i)\n\ngoal (1 subgoal):\n 1. c dvd coeff p i * coeff k (degree p + degree k - n - i)", "by auto"], ["proof (state)\nthis:\n  c dvd T i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  n \\<noteq> 0 \\<Longrightarrow> c dvd sum T {0..<degree p}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>m<n.\n                   m \\<le> degree k \\<longrightarrow>\n                   c dvd coeff k (degree k - m);\n        n \\<le> degree k\\<rbrakk>\n       \\<Longrightarrow> c dvd coeff k (degree k - n)", "moreover"], ["proof (state)\nthis:\n  n \\<noteq> 0 \\<Longrightarrow> c dvd sum T {0..<degree p}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>m<n.\n                   m \\<le> degree k \\<longrightarrow>\n                   c dvd coeff k (degree k - m);\n        n \\<le> degree k\\<rbrakk>\n       \\<Longrightarrow> c dvd coeff k (degree k - n)", "have \"n=0 \\<Longrightarrow>?case\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = 0 \\<Longrightarrow> c dvd coeff k (degree k - n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. n = 0 \\<Longrightarrow> c dvd coeff k (degree k - n)", "assume \"n=0\""], ["proof (state)\nthis:\n  n = 0\n\ngoal (1 subgoal):\n 1. n = 0 \\<Longrightarrow> c dvd coeff k (degree k - n)", "hence \"\\<forall>i\\<in>{0..<degree p}. coeff k (degree p + degree k - n - i) =0\""], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{0..<degree p}.\n       coeff k (degree p + degree k - n - i) = (0::'a)", "using coeff_eq_0[of k]"], ["proof (prove)\nusing this:\n  n = 0\n  degree k < ?n \\<Longrightarrow> coeff k ?n = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{0..<degree p}.\n       coeff k (degree p + degree k - n - i) = (0::'a)", "by simp"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{0..<degree p}.\n     coeff k (degree p + degree k - n - i) = (0::'a)\n\ngoal (1 subgoal):\n 1. n = 0 \\<Longrightarrow> c dvd coeff k (degree k - n)", "hence \"c * coeff q (degree q - n) = coeff k (degree k - n)\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{0..<degree p}.\n     coeff k (degree p + degree k - n - i) = (0::'a)\n\ngoal (1 subgoal):\n 1. c * coeff q (degree q - n) = coeff k (degree k - n)", "using c_coeff"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{0..<degree p}.\n     coeff k (degree p + degree k - n - i) = (0::'a)\n  c * coeff q (degree q - n) = sum T {0..<degree p} + coeff k (degree k - n)\n\ngoal (1 subgoal):\n 1. c * coeff q (degree q - n) = coeff k (degree k - n)", "unfolding T_def"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{0..<degree p}.\n     coeff k (degree p + degree k - n - i) = (0::'a)\n  c * coeff q (degree q - n) =\n  (\\<Sum>i = 0..<degree p.\n      coeff p i * coeff k (degree p + degree k - n - i)) +\n  coeff k (degree k - n)\n\ngoal (1 subgoal):\n 1. c * coeff q (degree q - n) = coeff k (degree k - n)", "by auto"], ["proof (state)\nthis:\n  c * coeff q (degree q - n) = coeff k (degree k - n)\n\ngoal (1 subgoal):\n 1. n = 0 \\<Longrightarrow> c dvd coeff k (degree k - n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  c * coeff q (degree q - n) = coeff k (degree k - n)\n\ngoal (1 subgoal):\n 1. c dvd coeff k (degree k - n)", "by (metis dvdI)"], ["proof (state)\nthis:\n  c dvd coeff k (degree k - n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  n = 0 \\<Longrightarrow> c dvd coeff k (degree k - n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>m<n.\n                   m \\<le> degree k \\<longrightarrow>\n                   c dvd coeff k (degree k - m);\n        n \\<le> degree k\\<rbrakk>\n       \\<Longrightarrow> c dvd coeff k (degree k - n)", "ultimately"], ["proof (chain)\npicking this:\n  c * coeff q (degree q - n) = sum T {0..<degree p} + coeff k (degree k - n)\n  n \\<noteq> 0 \\<Longrightarrow> c dvd sum T {0..<degree p}\n  n = 0 \\<Longrightarrow> c dvd coeff k (degree k - n)", "show ?case"], ["proof (prove)\nusing this:\n  c * coeff q (degree q - n) = sum T {0..<degree p} + coeff k (degree k - n)\n  n \\<noteq> 0 \\<Longrightarrow> c dvd sum T {0..<degree p}\n  n = 0 \\<Longrightarrow> c dvd coeff k (degree k - n)\n\ngoal (1 subgoal):\n 1. c dvd coeff k (degree k - n)", "by (metis dvd_add_right_iff dvd_triv_left)"], ["proof (state)\nthis:\n  c dvd coeff k (degree k - n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c dvd coeff k (degree k - n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n\\<le>degree k. c dvd coeff k (degree k - n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lead_coeff p = (1::'a); p dvd smult c q; c \\<noteq> (0::'a);\n     \\<not> (q = 0 \\<or> degree p = 0)\\<rbrakk>\n    \\<Longrightarrow> p dvd q", "hence \"\\<forall>n. c dvd coeff k n\""], ["proof (prove)\nusing this:\n  \\<forall>n\\<le>degree k. c dvd coeff k (degree k - n)\n\ngoal (1 subgoal):\n 1. \\<forall>n. c dvd coeff k n", "by (metis diff_diff_cancel dvd_0_right le_add2 le_add_diff_inverse le_degree)"], ["proof (state)\nthis:\n  \\<forall>n. c dvd coeff k n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lead_coeff p = (1::'a); p dvd smult c q; c \\<noteq> (0::'a);\n     \\<not> (q = 0 \\<or> degree p = 0)\\<rbrakk>\n    \\<Longrightarrow> p dvd q", "then"], ["proof (chain)\npicking this:\n  \\<forall>n. c dvd coeff k n", "obtain f where f:\"\\<forall>n. c * f n=coeff k n\""], ["proof (prove)\nusing this:\n  \\<forall>n. c dvd coeff k n\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<forall>n. c * f n = coeff k n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<forall>n. \\<exists>ka. coeff k n = c * ka\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<forall>n. c * f n = coeff k n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<forall>n. c * f n = coeff k n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lead_coeff p = (1::'a); p dvd smult c q; c \\<noteq> (0::'a);\n     \\<not> (q = 0 \\<or> degree p = 0)\\<rbrakk>\n    \\<Longrightarrow> p dvd q", "have \" \\<forall>\\<^sub>\\<infinity> n. f n = 0 \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>n. f n = (0::'a)", "by (metis (mono_tags, lifting) MOST_coeff_eq_0 MOST_mono assms(3) f mult_eq_0_iff)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>\\<infinity>n. f n = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lead_coeff p = (1::'a); p dvd smult c q; c \\<noteq> (0::'a);\n     \\<not> (q = 0 \\<or> degree p = 0)\\<rbrakk>\n    \\<Longrightarrow> p dvd q", "hence \"smult c (Abs_poly f)=k\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>\\<infinity>n. f n = (0::'a)\n\ngoal (1 subgoal):\n 1. smult c (Abs_poly f) = k", "using f smult.abs_eq[of c \"Abs_poly f\"] Abs_poly_inverse[of f] coeff_inverse[of k]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>\\<infinity>n. f n = (0::'a)\n  \\<forall>n. c * f n = coeff k n\n  smult c (Abs_poly f) = Abs_poly (\\<lambda>n. c * coeff (Abs_poly f) n)\n  f \\<in> {f. \\<forall>\\<^sub>\\<infinity>n. f n = (0::'a)} \\<Longrightarrow>\n  coeff (Abs_poly f) = f\n  Abs_poly (coeff k) = k\n\ngoal (1 subgoal):\n 1. smult c (Abs_poly f) = k", "by simp"], ["proof (state)\nthis:\n  smult c (Abs_poly f) = k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lead_coeff p = (1::'a); p dvd smult c q; c \\<noteq> (0::'a);\n     \\<not> (q = 0 \\<or> degree p = 0)\\<rbrakk>\n    \\<Longrightarrow> p dvd q", "hence \"q=p* Abs_poly f\""], ["proof (prove)\nusing this:\n  smult c (Abs_poly f) = k\n\ngoal (1 subgoal):\n 1. q = p * Abs_poly f", "using k \\<open>c\\<noteq>0\\<close> smult_cancel"], ["proof (prove)\nusing this:\n  smult c (Abs_poly f) = k\n  smult c q = p * k\n  c \\<noteq> (0::'a)\n  \\<lbrakk>?c \\<noteq> (0::?'a); smult ?c ?p = smult ?c ?q\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q\n\ngoal (1 subgoal):\n 1. q = p * Abs_poly f", "by auto"], ["proof (state)\nthis:\n  q = p * Abs_poly f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lead_coeff p = (1::'a); p dvd smult c q; c \\<noteq> (0::'a);\n     \\<not> (q = 0 \\<or> degree p = 0)\\<rbrakk>\n    \\<Longrightarrow> p dvd q", "thus ?thesis"], ["proof (prove)\nusing this:\n  q = p * Abs_poly f\n\ngoal (1 subgoal):\n 1. p dvd q", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  q = p * Abs_poly f\n\ngoal (1 subgoal):\n 1. \\<exists>k. q = p * k", "by auto"], ["proof (state)\nthis:\n  p dvd q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_power_n_eq:\n  fixes x::\"'a :: idom\"\n  assumes \"n\\<noteq>0\"\n  shows \"poly ([:-a,1:]^n) x=0 \\<longleftrightarrow> (x=a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (poly ([:- a, 1::'a:] ^ n) x = (0::'a)) = (x = a)", "using assms"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (poly ([:- a, 1::'a:] ^ n) x = (0::'a)) = (x = a)", "by (induct n,auto)"], ["", "lemma poly_power_n_odd:\n  fixes x a:: real\n  assumes \"odd n\"\n  shows \"poly ([:-a,1:]^n) x>0 \\<longleftrightarrow> (x>a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < poly ([:- a, 1:] ^ n) x) = (a < x)", "using assms"], ["proof (prove)\nusing this:\n  odd n\n\ngoal (1 subgoal):\n 1. (0 < poly ([:- a, 1:] ^ n) x) = (a < x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow> (0 < poly ([:- a, 1:] ^ n) x) = (a < x)", "have \"poly ([:-a,1:]^n) x\\<ge>0 = (poly [:- a, 1:] x \\<ge>0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 \\<le> poly ([:- a, 1:] ^ n) x) = (0 \\<le> poly [:- a, 1:] x)", "unfolding poly_power"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 \\<le> poly [:- a, 1:] x ^ n) = (0 \\<le> poly [:- a, 1:] x)", "using zero_le_odd_power[OF \\<open>odd n\\<close>]"], ["proof (prove)\nusing this:\n  ((0::?'a) \\<le> ?a ^ n) = ((0::?'a) \\<le> ?a)\n\ngoal (1 subgoal):\n 1. (0 \\<le> poly [:- a, 1:] x ^ n) = (0 \\<le> poly [:- a, 1:] x)", "by blast"], ["proof (state)\nthis:\n  (0 \\<le> poly ([:- a, 1:] ^ n) x) = (0 \\<le> poly [:- a, 1:] x)\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow> (0 < poly ([:- a, 1:] ^ n) x) = (a < x)", "also"], ["proof (state)\nthis:\n  (0 \\<le> poly ([:- a, 1:] ^ n) x) = (0 \\<le> poly [:- a, 1:] x)\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow> (0 < poly ([:- a, 1:] ^ n) x) = (a < x)", "have \"(poly [:- a, 1:] x \\<ge>0) = (x\\<ge>a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 \\<le> poly [:- a, 1:] x) = (a \\<le> x)", "by fastforce"], ["proof (state)\nthis:\n  (0 \\<le> poly [:- a, 1:] x) = (a \\<le> x)\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow> (0 < poly ([:- a, 1:] ^ n) x) = (a < x)", "finally"], ["proof (chain)\npicking this:\n  (0 \\<le> poly ([:- a, 1:] ^ n) x) = (a \\<le> x)", "have \"poly ([:-a,1:]^n) x\\<ge>0 = (x\\<ge>a)\""], ["proof (prove)\nusing this:\n  (0 \\<le> poly ([:- a, 1:] ^ n) x) = (a \\<le> x)\n\ngoal (1 subgoal):\n 1. (0 \\<le> poly ([:- a, 1:] ^ n) x) = (a \\<le> x)", "."], ["proof (state)\nthis:\n  (0 \\<le> poly ([:- a, 1:] ^ n) x) = (a \\<le> x)\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow> (0 < poly ([:- a, 1:] ^ n) x) = (a < x)", "moreover"], ["proof (state)\nthis:\n  (0 \\<le> poly ([:- a, 1:] ^ n) x) = (a \\<le> x)\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow> (0 < poly ([:- a, 1:] ^ n) x) = (a < x)", "have \"poly ([:-a,1:]^n) x=0 = (x=a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (poly ([:- a, 1:] ^ n) x = 0) = (x = a)", "by(rule poly_power_n_eq, metis assms even_zero)"], ["proof (state)\nthis:\n  (poly ([:- a, 1:] ^ n) x = 0) = (x = a)\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow> (0 < poly ([:- a, 1:] ^ n) x) = (a < x)", "ultimately"], ["proof (chain)\npicking this:\n  (0 \\<le> poly ([:- a, 1:] ^ n) x) = (a \\<le> x)\n  (poly ([:- a, 1:] ^ n) x = 0) = (x = a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (0 \\<le> poly ([:- a, 1:] ^ n) x) = (a \\<le> x)\n  (poly ([:- a, 1:] ^ n) x = 0) = (x = a)\n\ngoal (1 subgoal):\n 1. (0 < poly ([:- a, 1:] ^ n) x) = (a < x)", "by linarith"], ["proof (state)\nthis:\n  (0 < poly ([:- a, 1:] ^ n) x) = (a < x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gcd_coprime_poly:\n  fixes p q::\"'a::{factorial_ring_gcd,semiring_gcd_mult_normalize} poly\"\n  assumes nz: \"p \\<noteq> 0 \\<or> q \\<noteq> 0\" and p': \"p = p' * gcd p q\" and\n    q': \"q = q' * gcd p q\"\n  shows \"coprime p' q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime p' q'", "using gcd_coprime nz p' q'"], ["proof (prove)\nusing this:\n  \\<lbrakk>gcd ?a ?b \\<noteq> (0::?'a); ?a = ?a' * gcd ?a ?b;\n   ?b = ?b' * gcd ?a ?b\\<rbrakk>\n  \\<Longrightarrow> coprime ?a' ?b'\n  p \\<noteq> 0 \\<or> q \\<noteq> 0\n  p = p' * gcd p q\n  q = q' * gcd p q\n\ngoal (1 subgoal):\n 1. coprime p' q'", "by auto"], ["", "lemma poly_mod:\n  \"poly (p mod q) x = poly p x\" if \"poly q x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly (p mod q) x = poly p x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. poly (p mod q) x = poly p x", "from that"], ["proof (chain)\npicking this:\n  poly q x = (0::'a)", "have \"poly (p mod q) x = poly (p div q * q) x + poly (p mod q) x\""], ["proof (prove)\nusing this:\n  poly q x = (0::'a)\n\ngoal (1 subgoal):\n 1. poly (p mod q) x = poly (p div q * q) x + poly (p mod q) x", "by simp"], ["proof (state)\nthis:\n  poly (p mod q) x = poly (p div q * q) x + poly (p mod q) x\n\ngoal (1 subgoal):\n 1. poly (p mod q) x = poly p x", "also"], ["proof (state)\nthis:\n  poly (p mod q) x = poly (p div q * q) x + poly (p mod q) x\n\ngoal (1 subgoal):\n 1. poly (p mod q) x = poly p x", "have \"\\<dots> = poly p x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly (p div q * q) x + poly (p mod q) x = poly p x", "by (simp only: poly_add [symmetric]) simp"], ["proof (state)\nthis:\n  poly (p div q * q) x + poly (p mod q) x = poly p x\n\ngoal (1 subgoal):\n 1. poly (p mod q) x = poly p x", "finally"], ["proof (chain)\npicking this:\n  poly (p mod q) x = poly p x", "show ?thesis"], ["proof (prove)\nusing this:\n  poly (p mod q) x = poly p x\n\ngoal (1 subgoal):\n 1. poly (p mod q) x = poly p x", "."], ["proof (state)\nthis:\n  poly (p mod q) x = poly p x\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}