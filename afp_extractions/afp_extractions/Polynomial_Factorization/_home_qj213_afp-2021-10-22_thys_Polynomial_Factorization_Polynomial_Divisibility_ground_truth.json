{"file_name": "/home/qj213/afp-2021-10-22/thys/Polynomial_Factorization/Polynomial_Divisibility.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Polynomial_Factorization", "problem_names": ["lemma dvd_gcd_mult: fixes p :: \"'a :: semiring_gcd\"\n  assumes dvd: \"k dvd p * q\" \"k dvd p * r\"\n  shows \"k dvd p * gcd q r\"", "lemma poly_gcd_monic_factor:\n  \"monic p \\<Longrightarrow>  gcd (p * q) (p * r) = p * gcd q r\"", "lemma field_poly_irreducible_dvd_mult[simp]:\n  assumes irr: \"irreducible (p :: 'a poly)\"\n  shows \"p dvd q * r \\<longleftrightarrow> p dvd q \\<or> p dvd r\"", "lemma irreducible_dvd_pow:\n  fixes p :: \"'a poly\" \n  assumes irr: \"irreducible p\"  \n  shows \"p dvd q ^ n \\<Longrightarrow> p dvd q\"", "lemma irreducible_dvd_prod: fixes p :: \"'a poly\"\n  assumes irr: \"irreducible p\"\n  and dvd: \"p dvd prod f as\"\n  shows \"\\<exists> a \\<in> as. p dvd f a\"", "lemma irreducible_dvd_prod_list: fixes p :: \"'a poly\"\n  assumes irr: \"irreducible p\"\n  and dvd: \"p dvd prod_list as\"\n  shows \"\\<exists> a \\<in> set as. p dvd a\"", "lemma dvd_mult_imp_degree: fixes p :: \"'a poly\" \n  assumes \"p dvd q * r\"\n  and \"degree p > 0\" \nshows \"\\<exists> s t. irreducible s \\<and> p = s * t \\<and> (s dvd q \\<or> s dvd r)\""], "translations": [["", "lemma dvd_gcd_mult: fixes p :: \"'a :: semiring_gcd\"\n  assumes dvd: \"k dvd p * q\" \"k dvd p * r\"\n  shows \"k dvd p * gcd q r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k dvd p * gcd q r", "by (rule dvd_trans, rule gcd_greatest[OF dvd])\n     (auto intro!: mult_dvd_mono simp: gcd_mult_left)"], ["", "lemma poly_gcd_monic_factor:\n  \"monic p \\<Longrightarrow>  gcd (p * q) (p * r) = p * gcd q r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monic p \\<Longrightarrow> gcd (p * q) (p * r) = p * gcd q r", "by (rule gcdI [symmetric]) (simp_all add: normalize_mult normalize_monic dvd_gcd_mult)"], ["", "context\n  assumes \"SORT_CONSTRAINT('a :: field)\"\nbegin"], ["", "lemma field_poly_irreducible_dvd_mult[simp]:\n  assumes irr: \"irreducible (p :: 'a poly)\"\n  shows \"p dvd q * r \\<longleftrightarrow> p dvd q \\<or> p dvd r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p dvd q * r) = (p dvd q \\<or> p dvd r)", "using field_poly_irreducible_imp_prime[OF irr]"], ["proof (prove)\nusing this:\n  prime_elem p\n\ngoal (1 subgoal):\n 1. (p dvd q * r) = (p dvd q \\<or> p dvd r)", "by (simp add: prime_elem_dvd_mult_iff)"], ["", "lemma irreducible_dvd_pow:\n  fixes p :: \"'a poly\" \n  assumes irr: \"irreducible p\"  \n  shows \"p dvd q ^ n \\<Longrightarrow> p dvd q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p dvd q ^ n \\<Longrightarrow> p dvd q", "using field_poly_irreducible_imp_prime[OF irr]"], ["proof (prove)\nusing this:\n  prime_elem p\n\ngoal (1 subgoal):\n 1. p dvd q ^ n \\<Longrightarrow> p dvd q", "by (rule prime_elem_dvd_power)"], ["", "lemma irreducible_dvd_prod: fixes p :: \"'a poly\"\n  assumes irr: \"irreducible p\"\n  and dvd: \"p dvd prod f as\"\n  shows \"\\<exists> a \\<in> as. p dvd f a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>as. p dvd f a", "by (insert dvd, induct as rule: infinite_finite_induct, insert irr, auto)"], ["", "lemma irreducible_dvd_prod_list: fixes p :: \"'a poly\"\n  assumes irr: \"irreducible p\"\n  and dvd: \"p dvd prod_list as\"\n  shows \"\\<exists> a \\<in> set as. p dvd a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>set as. p dvd a", "by (insert dvd, induct as, insert irr, auto)"], ["", "lemma dvd_mult_imp_degree: fixes p :: \"'a poly\" \n  assumes \"p dvd q * r\"\n  and \"degree p > 0\" \nshows \"\\<exists> s t. irreducible s \\<and> p = s * t \\<and> (s dvd q \\<or> s dvd r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s t.\n       irreducible s \\<and> p = s * t \\<and> (s dvd q \\<or> s dvd r)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>s t.\n       irreducible s \\<and> p = s * t \\<and> (s dvd q \\<or> s dvd r)", "from irreducible\\<^sub>d_factor[OF assms(2)]"], ["proof (chain)\npicking this:\n  \\<exists>q r.\n     irreducible\\<^sub>d q \\<and> p = q * r \\<and> degree r < degree p", "obtain s t\n  where irred: \"irreducible s\" and p: \"p = s * t\""], ["proof (prove)\nusing this:\n  \\<exists>q r.\n     irreducible\\<^sub>d q \\<and> p = q * r \\<and> degree r < degree p\n\ngoal (1 subgoal):\n 1. (\\<And>s t.\n        \\<lbrakk>irreducible s; p = s * t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  irreducible s\n  p = s * t\n\ngoal (1 subgoal):\n 1. \\<exists>s t.\n       irreducible s \\<and> p = s * t \\<and> (s dvd q \\<or> s dvd r)", "from \\<open>p dvd q * r\\<close> p"], ["proof (chain)\npicking this:\n  p dvd q * r\n  p = s * t", "have s: \"s dvd q * r\""], ["proof (prove)\nusing this:\n  p dvd q * r\n  p = s * t\n\ngoal (1 subgoal):\n 1. s dvd q * r", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. q * r = p * k\n  p = s * t\n\ngoal (1 subgoal):\n 1. \\<exists>k. q * r = s * k", "by auto"], ["proof (state)\nthis:\n  s dvd q * r\n\ngoal (1 subgoal):\n 1. \\<exists>s t.\n       irreducible s \\<and> p = s * t \\<and> (s dvd q \\<or> s dvd r)", "from s p irred"], ["proof (chain)\npicking this:\n  s dvd q * r\n  p = s * t\n  irreducible s", "show ?thesis"], ["proof (prove)\nusing this:\n  s dvd q * r\n  p = s * t\n  irreducible s\n\ngoal (1 subgoal):\n 1. \\<exists>s t.\n       irreducible s \\<and> p = s * t \\<and> (s dvd q \\<or> s dvd r)", "by auto"], ["proof (state)\nthis:\n  \\<exists>s t.\n     irreducible s \\<and> p = s * t \\<and> (s dvd q \\<or> s dvd r)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}