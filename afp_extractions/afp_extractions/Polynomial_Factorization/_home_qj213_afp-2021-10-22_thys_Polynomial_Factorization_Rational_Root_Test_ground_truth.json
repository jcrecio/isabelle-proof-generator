{"file_name": "/home/qj213/afp-2021-10-22/thys/Polynomial_Factorization/Rational_Root_Test.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Polynomial_Factorization", "problem_names": ["lemma rational_root_test_main: \n  \"rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\"\n  \"divisors_fun df \\<Longrightarrow> divisors_pos_fun dp \\<Longrightarrow> rational_root_test_main df dp p = None \\<Longrightarrow> \\<not> (\\<exists> x. poly p x = 0)\"", "lemma rational_root_test:   \n  \"rational_root_test p = Some x \\<Longrightarrow> poly p x = 0\"\n  \"rational_root_test p = None \\<Longrightarrow> \\<not> (\\<exists> x. poly p x = 0)\""], "translations": [["", "lemma rational_root_test_main: \n  \"rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\"\n  \"divisors_fun df \\<Longrightarrow> divisors_pos_fun dp \\<Longrightarrow> rational_root_test_main df dp p = None \\<Longrightarrow> \\<not> (\\<exists> x. poly p x = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rational_root_test_main df dp p = Some x \\<Longrightarrow>\n     poly p x = 0) &&&\n    (\\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n      rational_root_test_main df dp p = None\\<rbrakk>\n     \\<Longrightarrow> \\<nexists>x. poly p x = 0)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\n 2. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "let ?r = \"rat_of_int\""], ["proof (state)\ngoal (2 subgoals):\n 1. rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\n 2. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "let ?rp = \"map_poly ?r\""], ["proof (state)\ngoal (2 subgoals):\n 1. rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\n 2. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "obtain a ip where rp: \"rat_to_normalized_int_poly p = (a,ip)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a ip.\n        rat_to_normalized_int_poly p = (a, ip) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  rat_to_normalized_int_poly p = (a, ip)\n\ngoal (2 subgoals):\n 1. rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\n 2. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "from rat_to_normalized_int_poly[OF this]"], ["proof (chain)\npicking this:\n  p = smult a (of_int_poly ip)\n  0 < a\n  p \\<noteq> 0 \\<Longrightarrow> content ip = 1\n  degree ip = degree p", "have p: \"p = smult a (?rp ip)\" and a00: \"a \\<noteq> 0\" \n    and cip: \"p \\<noteq> 0 \\<Longrightarrow> content ip = 1\""], ["proof (prove)\nusing this:\n  p = smult a (of_int_poly ip)\n  0 < a\n  p \\<noteq> 0 \\<Longrightarrow> content ip = 1\n  degree ip = degree p\n\ngoal (1 subgoal):\n 1. p = smult a (of_int_poly ip) &&&\n    a \\<noteq> 0 &&& (p \\<noteq> 0 \\<Longrightarrow> content ip = 1)", "by auto"], ["proof (state)\nthis:\n  p = smult a (of_int_poly ip)\n  a \\<noteq> 0\n  p \\<noteq> 0 \\<Longrightarrow> content ip = 1\n\ngoal (2 subgoals):\n 1. rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\n 2. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "let ?a0 = \"coeff ip 0\""], ["proof (state)\ngoal (2 subgoals):\n 1. rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\n 2. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "let ?an = \"coeff ip (degree ip)\""], ["proof (state)\ngoal (2 subgoals):\n 1. rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\n 2. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "let ?d0 = \"df ?a0\""], ["proof (state)\ngoal (2 subgoals):\n 1. rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\n 2. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "let ?dn = \"dp ?an\""], ["proof (state)\ngoal (2 subgoals):\n 1. rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\n 2. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "let ?ip = \"?rp ip\""], ["proof (state)\ngoal (2 subgoals):\n 1. rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\n 2. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "define tests where \"tests = [rat_of_int b0 / rat_of_int bn . b0 <- ?d0, bn <- ?dn, coprime b0 bn ]\""], ["proof (state)\nthis:\n  tests =\n  concat\n   (map (\\<lambda>b0.\n            concat\n             (map (\\<lambda>bn.\n                      if coprime b0 bn then [rat_of_int b0 / rat_of_int bn]\n                      else [])\n               (dp (lead_coeff ip))))\n     (df (coeff ip 0)))\n\ngoal (2 subgoals):\n 1. rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\n 2. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "let ?f = \"(\\<lambda> x. (x,poly p x))\""], ["proof (state)\ngoal (2 subgoals):\n 1. rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\n 2. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "let ?test = \"(\\<lambda> (_, res). res = 0)\""], ["proof (state)\ngoal (2 subgoals):\n 1. rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\n 2. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "define mo where \"mo = find_map_filter ?f ?test tests\""], ["proof (state)\nthis:\n  mo =\n  find_map_filter (\\<lambda>x. (x, poly p x)) (\\<lambda>(uu_, res). res = 0)\n   tests\n\ngoal (2 subgoals):\n 1. rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\n 2. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "note d = rational_root_test_main_def[of df dp p, unfolded Let_def rp snd_conv mo_def[symmetric] tests_def[symmetric]]"], ["proof (state)\nthis:\n  rational_root_test_main df dp p \\<equiv>\n  if coeff ip 0 = 0 then Some 0 else map_option fst mo\n\ngoal (2 subgoals):\n 1. rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\n 2. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "{"], ["proof (state)\nthis:\n  rational_root_test_main df dp p \\<equiv>\n  if coeff ip 0 = 0 then Some 0 else map_option fst mo\n\ngoal (2 subgoals):\n 1. rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\n 2. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "assume \"rational_root_test_main df dp p = Some x\""], ["proof (state)\nthis:\n  rational_root_test_main df dp p = Some x\n\ngoal (2 subgoals):\n 1. rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\n 2. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "from this[unfolded d]"], ["proof (chain)\npicking this:\n  (if coeff ip 0 = 0 then Some 0 else map_option fst mo) = Some x", "have \"?a0 = 0 \\<and> x = 0 \\<or> map_option fst mo = Some x\""], ["proof (prove)\nusing this:\n  (if coeff ip 0 = 0 then Some 0 else map_option fst mo) = Some x\n\ngoal (1 subgoal):\n 1. coeff ip 0 = 0 \\<and> x = 0 \\<or> map_option fst mo = Some x", "by (auto split: if_splits)"], ["proof (state)\nthis:\n  coeff ip 0 = 0 \\<and> x = 0 \\<or> map_option fst mo = Some x\n\ngoal (2 subgoals):\n 1. rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\n 2. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "thus \"poly p x = 0\""], ["proof (prove)\nusing this:\n  coeff ip 0 = 0 \\<and> x = 0 \\<or> map_option fst mo = Some x\n\ngoal (1 subgoal):\n 1. poly p x = 0", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. coeff ip 0 = 0 \\<and> x = 0 \\<Longrightarrow> poly p x = 0\n 2. map_option fst mo = Some x \\<Longrightarrow> poly p x = 0", "assume *: \"?a0 = 0 \\<and> x = 0\""], ["proof (state)\nthis:\n  coeff ip 0 = 0 \\<and> x = 0\n\ngoal (2 subgoals):\n 1. coeff ip 0 = 0 \\<and> x = 0 \\<Longrightarrow> poly p x = 0\n 2. map_option fst mo = Some x \\<Longrightarrow> poly p x = 0", "hence \"coeff p 0 = 0\""], ["proof (prove)\nusing this:\n  coeff ip 0 = 0 \\<and> x = 0\n\ngoal (1 subgoal):\n 1. coeff p 0 = 0", "unfolding p coeff_smult"], ["proof (prove)\nusing this:\n  coeff ip 0 = 0 \\<and> x = 0\n\ngoal (1 subgoal):\n 1. a * coeff (of_int_poly ip) 0 = 0", "by simp"], ["proof (state)\nthis:\n  coeff p 0 = 0\n\ngoal (2 subgoals):\n 1. coeff ip 0 = 0 \\<and> x = 0 \\<Longrightarrow> poly p x = 0\n 2. map_option fst mo = Some x \\<Longrightarrow> poly p x = 0", "hence \"poly p 0 = 0\""], ["proof (prove)\nusing this:\n  coeff p 0 = 0\n\ngoal (1 subgoal):\n 1. poly p 0 = 0", "by (cases p, auto)"], ["proof (state)\nthis:\n  poly p 0 = 0\n\ngoal (2 subgoals):\n 1. coeff ip 0 = 0 \\<and> x = 0 \\<Longrightarrow> poly p x = 0\n 2. map_option fst mo = Some x \\<Longrightarrow> poly p x = 0", "with *"], ["proof (chain)\npicking this:\n  coeff ip 0 = 0 \\<and> x = 0\n  poly p 0 = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  coeff ip 0 = 0 \\<and> x = 0\n  poly p 0 = 0\n\ngoal (1 subgoal):\n 1. poly p x = 0", "by auto"], ["proof (state)\nthis:\n  poly p x = 0\n\ngoal (1 subgoal):\n 1. map_option fst mo = Some x \\<Longrightarrow> poly p x = 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. map_option fst mo = Some x \\<Longrightarrow> poly p x = 0", "assume \"map_option fst mo = Some x\""], ["proof (state)\nthis:\n  map_option fst mo = Some x\n\ngoal (1 subgoal):\n 1. map_option fst mo = Some x \\<Longrightarrow> poly p x = 0", "then"], ["proof (chain)\npicking this:\n  map_option fst mo = Some x", "obtain pair where find: \"find_map_filter ?f ?test tests = Some pair\" and x: \"x = fst pair\""], ["proof (prove)\nusing this:\n  map_option fst mo = Some x\n\ngoal (1 subgoal):\n 1. (\\<And>pair.\n        \\<lbrakk>find_map_filter (\\<lambda>x. (x, poly p x))\n                  (\\<lambda>(uu_, res). res = 0) tests =\n                 Some pair;\n         x = fst pair\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding mo_def"], ["proof (prove)\nusing this:\n  map_option fst\n   (find_map_filter (\\<lambda>x. (x, poly p x))\n     (\\<lambda>(uu_, res). res = 0) tests) =\n  Some x\n\ngoal (1 subgoal):\n 1. (\\<And>pair.\n        \\<lbrakk>find_map_filter (\\<lambda>x. (x, poly p x))\n                  (\\<lambda>(uu_, res). res = 0) tests =\n                 Some pair;\n         x = fst pair\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto split: option.splits)"], ["proof (state)\nthis:\n  find_map_filter (\\<lambda>x. (x, poly p x)) (\\<lambda>(uu_, res). res = 0)\n   tests =\n  Some pair\n  x = fst pair\n\ngoal (1 subgoal):\n 1. map_option fst mo = Some x \\<Longrightarrow> poly p x = 0", "then"], ["proof (chain)\npicking this:\n  find_map_filter (\\<lambda>x. (x, poly p x)) (\\<lambda>(uu_, res). res = 0)\n   tests =\n  Some pair\n  x = fst pair", "obtain z where pair: \"pair = (x,z)\""], ["proof (prove)\nusing this:\n  find_map_filter (\\<lambda>x. (x, poly p x)) (\\<lambda>(uu_, res). res = 0)\n   tests =\n  Some pair\n  x = fst pair\n\ngoal (1 subgoal):\n 1. (\\<And>z. pair = (x, z) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases pair, auto)"], ["proof (state)\nthis:\n  pair = (x, z)\n\ngoal (1 subgoal):\n 1. map_option fst mo = Some x \\<Longrightarrow> poly p x = 0", "from find_map_filter_Some[OF find, unfolded pair split]"], ["proof (chain)\npicking this:\n  z = 0 \\<and> (x, z) \\<in> (\\<lambda>x. (x, poly p x)) ` set tests", "show \"poly p x = 0\""], ["proof (prove)\nusing this:\n  z = 0 \\<and> (x, z) \\<in> (\\<lambda>x. (x, poly p x)) ` set tests\n\ngoal (1 subgoal):\n 1. poly p x = 0", "by auto"], ["proof (state)\nthis:\n  poly p x = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  poly p x = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "}"], ["proof (state)\nthis:\n  rational_root_test_main df dp p = Some x \\<Longrightarrow> poly p x = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "assume df: \"divisors_fun df\" and dp: \"divisors_pos_fun dp\" and res: \"rational_root_test_main df dp p = None\""], ["proof (state)\nthis:\n  divisors_fun df\n  divisors_pos_fun dp\n  rational_root_test_main df dp p = None\n\ngoal (1 subgoal):\n 1. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "note df = divisors_funD[OF df]"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<noteq> 0; ?d dvd ?x\\<rbrakk>\n  \\<Longrightarrow> ?d \\<in> set (df ?x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "note dp = divisors_pos_funD[OF dp]"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<noteq> 0; ?d dvd ?x; 0 < ?d\\<rbrakk>\n  \\<Longrightarrow> ?d \\<in> set (dp ?x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "from res[unfolded d]"], ["proof (chain)\npicking this:\n  (if coeff ip 0 = 0 then Some 0 else map_option fst mo) = None", "have a0: \"?a0 \\<noteq> 0\" and res: \"map_option fst mo = None\""], ["proof (prove)\nusing this:\n  (if coeff ip 0 = 0 then Some 0 else map_option fst mo) = None\n\ngoal (1 subgoal):\n 1. coeff ip 0 \\<noteq> 0 &&& map_option fst mo = None", "by (auto split: if_splits)"], ["proof (state)\nthis:\n  coeff ip 0 \\<noteq> 0\n  map_option fst mo = None\n\ngoal (1 subgoal):\n 1. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "from res[unfolded mo_def]"], ["proof (chain)\npicking this:\n  map_option fst\n   (find_map_filter (\\<lambda>x. (x, poly p x))\n     (\\<lambda>(uu_, res). res = 0) tests) =\n  None", "have find: \"find_map_filter ?f ?test tests = None\""], ["proof (prove)\nusing this:\n  map_option fst\n   (find_map_filter (\\<lambda>x. (x, poly p x))\n     (\\<lambda>(uu_, res). res = 0) tests) =\n  None\n\ngoal (1 subgoal):\n 1. find_map_filter (\\<lambda>x. (x, poly p x))\n     (\\<lambda>(uu_, res). res = 0) tests =\n    None", "by auto"], ["proof (state)\nthis:\n  find_map_filter (\\<lambda>x. (x, poly p x)) (\\<lambda>(uu_, res). res = 0)\n   tests =\n  None\n\ngoal (1 subgoal):\n 1. \\<lbrakk>divisors_fun df; divisors_pos_fun dp;\n     rational_root_test_main df dp p = None\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. poly p x = 0", "show \"\\<not> (\\<exists> x. poly p x = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>x. poly p x = 0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "assume \"\\<exists> x. poly p x = 0\""], ["proof (state)\nthis:\n  \\<exists>x. poly p x = 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>x. poly p x = 0", "obtain x where \"poly p x = 0\""], ["proof (prove)\nusing this:\n  \\<exists>x. poly p x = 0\n\ngoal (1 subgoal):\n 1. (\\<And>x. poly p x = 0 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  poly p x = 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from this[unfolded p] a00"], ["proof (chain)\npicking this:\n  poly (smult a (of_int_poly ip)) x = 0\n  a \\<noteq> 0", "have \"poly (?rp ip) x = 0\""], ["proof (prove)\nusing this:\n  poly (smult a (of_int_poly ip)) x = 0\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly (of_int_poly ip) x = 0", "by auto"], ["proof (state)\nthis:\n  poly (of_int_poly ip) x = 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from this[unfolded poly_eq_0_iff_dvd]"], ["proof (chain)\npicking this:\n  [:- x, 1:] dvd of_int_poly ip", "have \"[: -x , 1 :] dvd ?ip\""], ["proof (prove)\nusing this:\n  [:- x, 1:] dvd of_int_poly ip\n\ngoal (1 subgoal):\n 1. [:- x, 1:] dvd of_int_poly ip", "by auto"], ["proof (state)\nthis:\n  [:- x, 1:] dvd of_int_poly ip\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  [:- x, 1:] dvd of_int_poly ip", "obtain q where ip_id: \"?ip = [: -x, 1 :] * q\""], ["proof (prove)\nusing this:\n  [:- x, 1:] dvd of_int_poly ip\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        of_int_poly ip = [:- x, 1:] * q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. of_int_poly ip = [:- x, 1:] * k\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        of_int_poly ip = [:- x, 1:] * q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  of_int_poly ip = [:- x, 1:] * q\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "obtain c q where x1: \"rat_to_normalized_int_poly [: -x, 1 :] = (c, q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c q.\n        rat_to_normalized_int_poly [:- x, 1:] = (c, q) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  rat_to_normalized_int_poly [:- x, 1:] = (c, q)\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from rat_to_int_factor_explicit[OF ip_id x1]"], ["proof (chain)\npicking this:\n  \\<exists>r. ip = q * smult (content ip) r", "obtain r where  ip: \"ip = q * r\""], ["proof (prove)\nusing this:\n  \\<exists>r. ip = q * smult (content ip) r\n\ngoal (1 subgoal):\n 1. (\\<And>r. ip = q * r \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  ip = q * r\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from rat_to_normalized_int_poly(4)[OF x1]"], ["proof (chain)\npicking this:\n  degree q = degree [:- x, 1:]", "have deg: \"degree q = 1\""], ["proof (prove)\nusing this:\n  degree q = degree [:- x, 1:]\n\ngoal (1 subgoal):\n 1. degree q = 1", "by auto"], ["proof (state)\nthis:\n  degree q = 1\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from degree1_coeffs[OF deg]"], ["proof (chain)\npicking this:\n  \\<exists>a b. q = [:b, a:] \\<and> a \\<noteq> 0", "obtain a b where q: \"q = [: b, a :]\" and a: \"a \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<exists>a b. q = [:b, a:] \\<and> a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>b a.\n        \\<lbrakk>q = [:b, a:]; a \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  q = [:b, a:]\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "have ipr: \"ip = [: b, a :] * r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ip = [:b, a:] * r", "using ip q"], ["proof (prove)\nusing this:\n  ip = q * r\n  q = [:b, a:]\n\ngoal (1 subgoal):\n 1. ip = [:b, a:] * r", "by auto"], ["proof (state)\nthis:\n  ip = [:b, a:] * r\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from arg_cong[OF ipr, of \"\\<lambda> p. coeff p 0\"]"], ["proof (chain)\npicking this:\n  coeff ip 0 = coeff ([:b, a:] * r) 0", "have ba0: \"b dvd ?a0\""], ["proof (prove)\nusing this:\n  coeff ip 0 = coeff ([:b, a:] * r) 0\n\ngoal (1 subgoal):\n 1. b dvd coeff ip 0", "by auto"], ["proof (state)\nthis:\n  b dvd coeff ip 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "have rpq: \"?rp q = [: ?r b, ?r a :]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_int_poly q = [:rat_of_int b, rat_of_int a:]", "unfolding q"], ["proof (prove)\ngoal (1 subgoal):\n 1. of_int_poly [:b, a:] = [:rat_of_int b, rat_of_int a:]", "proof (rule poly_eqI, unfold of_int_hom.coeff_map_poly_hom)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       rat_of_int (coeff [:b, a:] n) =\n       coeff [:rat_of_int b, rat_of_int a:] n", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       rat_of_int (coeff [:b, a:] n) =\n       coeff [:rat_of_int b, rat_of_int a:] n", "show \"?r (coeff [:b, a:] n) = coeff [: ?r b, ?r a:] n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int (coeff [:b, a:] n) = coeff [:rat_of_int b, rat_of_int a:] n", "unfolding coeff_pCons"], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int\n     (case n of 0 \\<Rightarrow> b | Suc 0 \\<Rightarrow> a\n      | Suc (Suc xa) \\<Rightarrow> coeff 0 xa) =\n    (case n of 0 \\<Rightarrow> rat_of_int b\n     | Suc 0 \\<Rightarrow> rat_of_int a\n     | Suc (Suc xa) \\<Rightarrow> coeff 0 xa)", "by (cases n, force, cases \"n - 1\", auto)"], ["proof (state)\nthis:\n  rat_of_int (coeff [:b, a:] n) = coeff [:rat_of_int b, rat_of_int a:] n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  of_int_poly q = [:rat_of_int b, rat_of_int a:]\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from arg_cong[OF ip, of ?rp, unfolded of_int_poly_hom.hom_mult rpq]"], ["proof (chain)\npicking this:\n  of_int_poly ip = [:rat_of_int b, rat_of_int a:] * of_int_poly r", "have \"[: ?r b, ?r a :] dvd ?rp ip\""], ["proof (prove)\nusing this:\n  of_int_poly ip = [:rat_of_int b, rat_of_int a:] * of_int_poly r\n\ngoal (1 subgoal):\n 1. [:rat_of_int b, rat_of_int a:] dvd of_int_poly ip", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  of_int_poly ip = [:rat_of_int b, rat_of_int a:] * of_int_poly r\n\ngoal (1 subgoal):\n 1. \\<exists>k. of_int_poly ip = [:rat_of_int b, rat_of_int a:] * k", "by blast"], ["proof (state)\nthis:\n  [:rat_of_int b, rat_of_int a:] dvd of_int_poly ip\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "hence \"smult (inverse (?r a)) [: ?r b , ?r a :] dvd ?rp ip\""], ["proof (prove)\nusing this:\n  [:rat_of_int b, rat_of_int a:] dvd of_int_poly ip\n\ngoal (1 subgoal):\n 1. smult (inverse (rat_of_int a)) [:rat_of_int b, rat_of_int a:] dvd\n    of_int_poly ip", "by (rule smult_dvd, insert a, auto)"], ["proof (state)\nthis:\n  smult (inverse (rat_of_int a)) [:rat_of_int b, rat_of_int a:] dvd\n  of_int_poly ip\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  smult (inverse (rat_of_int a)) [:rat_of_int b, rat_of_int a:] dvd\n  of_int_poly ip\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "have \"smult (inverse (?r a)) [: ?r b , ?r a :] = [: ?r b / ?r a, 1 :]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smult (inverse (rat_of_int a)) [:rat_of_int b, rat_of_int a:] =\n    [:rat_of_int b / rat_of_int a, 1:]", "using a"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. smult (inverse (rat_of_int a)) [:rat_of_int b, rat_of_int a:] =\n    [:rat_of_int b / rat_of_int a, 1:]", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  smult (inverse (rat_of_int a)) [:rat_of_int b, rat_of_int a:] =\n  [:rat_of_int b / rat_of_int a, 1:]\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  [:rat_of_int b / rat_of_int a, 1:] dvd of_int_poly ip", "have \"[: - (- ?r b / ?r a), 1 :] dvd ?rp ip\""], ["proof (prove)\nusing this:\n  [:rat_of_int b / rat_of_int a, 1:] dvd of_int_poly ip\n\ngoal (1 subgoal):\n 1. [:- (- rat_of_int b / rat_of_int a), 1:] dvd of_int_poly ip", "by simp"], ["proof (state)\nthis:\n  [:- (- rat_of_int b / rat_of_int a), 1:] dvd of_int_poly ip\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from this[unfolded poly_eq_0_iff_dvd[symmetric]]"], ["proof (chain)\npicking this:\n  poly (of_int_poly ip) (- rat_of_int b / rat_of_int a) = 0", "have rt: \"poly (?rp ip) (- ?r b / ?r a) = 0\""], ["proof (prove)\nusing this:\n  poly (of_int_poly ip) (- rat_of_int b / rat_of_int a) = 0\n\ngoal (1 subgoal):\n 1. poly (of_int_poly ip) (- rat_of_int b / rat_of_int a) = 0", "."], ["proof (state)\nthis:\n  poly (of_int_poly ip) (- rat_of_int b / rat_of_int a) = 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "hence rt: \"poly p (- ?r b / ?r a) = 0\""], ["proof (prove)\nusing this:\n  poly (of_int_poly ip) (- rat_of_int b / rat_of_int a) = 0\n\ngoal (1 subgoal):\n 1. poly p (- rat_of_int b / rat_of_int a) = 0", "unfolding p"], ["proof (prove)\nusing this:\n  poly (of_int_poly ip) (- rat_of_int b / rat_of_int a) = 0\n\ngoal (1 subgoal):\n 1. poly (smult a__ (of_int_poly ip)) (- rat_of_int b / rat_of_int a) = 0", "using a00"], ["proof (prove)\nusing this:\n  poly (of_int_poly ip) (- rat_of_int b / rat_of_int a) = 0\n  a__ \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly (smult a__ (of_int_poly ip)) (- rat_of_int b / rat_of_int a) = 0", "by simp"], ["proof (state)\nthis:\n  poly p (- rat_of_int b / rat_of_int a) = 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "obtain aa bb where quot: \"quotient_of (- ?r b / ?r a) = (bb,aa)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>bb aaa.\n        quotient_of (- rat_of_int b / rat_of_int a) =\n        (bb, aaa) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  quotient_of (- rat_of_int b / rat_of_int a) = (bb, aa)\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "hence \"quotient_of (?r (-b) / ?r a) = (bb, aa)\""], ["proof (prove)\nusing this:\n  quotient_of (- rat_of_int b / rat_of_int a) = (bb, aa)\n\ngoal (1 subgoal):\n 1. quotient_of (rat_of_int (- b) / rat_of_int a) = (bb, aa)", "by simp"], ["proof (state)\nthis:\n  quotient_of (rat_of_int (- b) / rat_of_int a) = (bb, aa)\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from quotient_of_int_div[OF this \\<open>a \\<noteq> 0\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>z. z \\<noteq> 0 \\<and> - b = bb * z \\<and> a = aa * z", "obtain z where \n      z: \"z \\<noteq> 0\" and b: \"- b = z * bb\" and a: \"a = z * aa\""], ["proof (prove)\nusing this:\n  \\<exists>z. z \\<noteq> 0 \\<and> - b = bb * z \\<and> a = aa * z\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<noteq> 0; - b = z * bb; a = z * aa\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z \\<noteq> 0\n  - b = z * bb\n  a = z * aa\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from rt[unfolded quotient_of_div[OF quot]]"], ["proof (chain)\npicking this:\n  poly p (rat_of_int bb / rat_of_int aa) = 0", "have rt: \"poly p (?r bb / ?r aa) = 0\""], ["proof (prove)\nusing this:\n  poly p (rat_of_int bb / rat_of_int aa) = 0\n\ngoal (1 subgoal):\n 1. poly p (rat_of_int bb / rat_of_int aa) = 0", "by auto"], ["proof (state)\nthis:\n  poly p (rat_of_int bb / rat_of_int aa) = 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from quotient_of_coprime[OF quot]"], ["proof (chain)\npicking this:\n  coprime bb aa", "have cop: \"coprime bb aa\" \"coprime (- bb) aa\""], ["proof (prove)\nusing this:\n  coprime bb aa\n\ngoal (1 subgoal):\n 1. coprime bb aa &&& coprime (- bb) aa", "by auto"], ["proof (state)\nthis:\n  coprime bb aa\n  coprime (- bb) aa\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from quotient_of_denom_pos[OF quot]"], ["proof (chain)\npicking this:\n  0 < aa", "have aa: \"aa > 0\""], ["proof (prove)\nusing this:\n  0 < aa\n\ngoal (1 subgoal):\n 1. 0 < aa", "by auto"], ["proof (state)\nthis:\n  0 < aa\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from ba0 arg_cong[OF b, of uminus] z"], ["proof (chain)\npicking this:\n  b dvd coeff ip 0\n  - (- b) = - (z * bb)\n  z \\<noteq> 0", "have bba0: \"bb dvd ?a0\""], ["proof (prove)\nusing this:\n  b dvd coeff ip 0\n  - (- b) = - (z * bb)\n  z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. bb dvd coeff ip 0", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. coeff ip 0 = b * k\n  - (- b) = - (z * bb)\n  z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>k. coeff ip 0 = bb * k", "by (metis ba0 dvdE dvd_mult_right minus_dvd_iff)"], ["proof (state)\nthis:\n  bb dvd coeff ip 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "hence bb0: \"bb \\<noteq> 0\""], ["proof (prove)\nusing this:\n  bb dvd coeff ip 0\n\ngoal (1 subgoal):\n 1. bb \\<noteq> 0", "using a0"], ["proof (prove)\nusing this:\n  bb dvd coeff ip 0\n  coeff ip 0 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. bb \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  bb \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from df[OF a0 bba0]"], ["proof (chain)\npicking this:\n  bb \\<in> set (df (coeff ip 0))", "have bb: \"bb \\<in> set ?d0\""], ["proof (prove)\nusing this:\n  bb \\<in> set (df (coeff ip 0))\n\ngoal (1 subgoal):\n 1. bb \\<in> set (df (coeff ip 0))", "by auto"], ["proof (state)\nthis:\n  bb \\<in> set (df (coeff ip 0))\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from a0"], ["proof (chain)\npicking this:\n  coeff ip 0 \\<noteq> 0", "have ip0: \"ip \\<noteq> 0\""], ["proof (prove)\nusing this:\n  coeff ip 0 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ip \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  ip \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "hence an0: \"?an \\<noteq> 0\""], ["proof (prove)\nusing this:\n  ip \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lead_coeff ip \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  lead_coeff ip \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from ipr ip0"], ["proof (chain)\npicking this:\n  ip = [:b, a:] * r\n  ip \\<noteq> 0", "have \"r \\<noteq> 0\""], ["proof (prove)\nusing this:\n  ip = [:b, a:] * r\n  ip \\<noteq> 0\n\ngoal (1 subgoal):\n 1. r \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from degree_mult_eq[OF _ this, of \"[:b,a:]\", folded ipr] \\<open>a \\<noteq> 0\\<close> ipr"], ["proof (chain)\npicking this:\n  [:b, a:] \\<noteq> 0 \\<Longrightarrow>\n  degree ip = degree [:b, a:] + degree r\n  a \\<noteq> 0\n  ip = [:b, a:] * r", "have deg: \"degree ip = Suc (degree r)\""], ["proof (prove)\nusing this:\n  [:b, a:] \\<noteq> 0 \\<Longrightarrow>\n  degree ip = degree [:b, a:] + degree r\n  a \\<noteq> 0\n  ip = [:b, a:] * r\n\ngoal (1 subgoal):\n 1. degree ip = Suc (degree r)", "by auto"], ["proof (state)\nthis:\n  degree ip = Suc (degree r)\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from arg_cong[OF ipr, of \"\\<lambda> p. coeff p (degree ip)\"]"], ["proof (chain)\npicking this:\n  lead_coeff ip = coeff ([:b, a:] * r) (degree ip)", "have ba0: \"a dvd ?an\""], ["proof (prove)\nusing this:\n  lead_coeff ip = coeff ([:b, a:] * r) (degree ip)\n\ngoal (1 subgoal):\n 1. a dvd lead_coeff ip", "unfolding deg"], ["proof (prove)\nusing this:\n  coeff ip (Suc (degree r)) = coeff ([:b, a:] * r) (Suc (degree r))\n\ngoal (1 subgoal):\n 1. a dvd coeff ip (Suc (degree r))", "by (auto simp: coeff_eq_0)"], ["proof (state)\nthis:\n  a dvd lead_coeff ip\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "hence \"aa dvd ?an\""], ["proof (prove)\nusing this:\n  a dvd lead_coeff ip\n\ngoal (1 subgoal):\n 1. aa dvd lead_coeff ip", "using \\<open>a \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  a dvd lead_coeff ip\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. aa dvd lead_coeff ip", "unfolding a"], ["proof (prove)\nusing this:\n  z * aa dvd lead_coeff ip\n  z * aa \\<noteq> 0\n\ngoal (1 subgoal):\n 1. aa dvd lead_coeff ip", "by (auto simp: dvd_def)"], ["proof (state)\nthis:\n  aa dvd lead_coeff ip\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from dp[OF an0 this aa]"], ["proof (chain)\npicking this:\n  aa \\<in> set (dp (lead_coeff ip))", "have aa: \"aa \\<in> set ?dn\""], ["proof (prove)\nusing this:\n  aa \\<in> set (dp (lead_coeff ip))\n\ngoal (1 subgoal):\n 1. aa \\<in> set (dp (lead_coeff ip))", "."], ["proof (state)\nthis:\n  aa \\<in> set (dp (lead_coeff ip))\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from find_map_filter_None[OF find] rt"], ["proof (chain)\npicking this:\n  \\<forall>b\\<in>(\\<lambda>x. (x, poly p x)) ` set tests.\n     \\<not> (case b of (uu_, res) \\<Rightarrow> res = 0)\n  poly p (rat_of_int bb / rat_of_int aa) = 0", "have \"(?r bb / ?r aa) \\<notin> set tests\""], ["proof (prove)\nusing this:\n  \\<forall>b\\<in>(\\<lambda>x. (x, poly p x)) ` set tests.\n     \\<not> (case b of (uu_, res) \\<Rightarrow> res = 0)\n  poly p (rat_of_int bb / rat_of_int aa) = 0\n\ngoal (1 subgoal):\n 1. rat_of_int bb / rat_of_int aa \\<notin> set tests", "by auto"], ["proof (state)\nthis:\n  rat_of_int bb / rat_of_int aa \\<notin> set tests\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "note test = this[unfolded tests_def, simplified, rule_format, of _ aa]"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> set (df (coeff ip 0));\n   aa \\<in> set (dp (lead_coeff ip)) \\<inter> Collect (coprime ?x)\\<rbrakk>\n  \\<Longrightarrow> rat_of_int bb / rat_of_int aa \\<noteq>\n                    rat_of_int ?x / rat_of_int aa\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0 \\<Longrightarrow> False", "from this[of bb] cop bb aa"], ["proof (chain)\npicking this:\n  \\<lbrakk>bb \\<in> set (df (coeff ip 0));\n   aa \\<in> set (dp (lead_coeff ip)) \\<inter> Collect (coprime bb)\\<rbrakk>\n  \\<Longrightarrow> rat_of_int bb / rat_of_int aa \\<noteq>\n                    rat_of_int bb / rat_of_int aa\n  coprime bb aa\n  coprime (- bb) aa\n  bb \\<in> set (df (coeff ip 0))\n  aa \\<in> set (dp (lead_coeff ip))", "show False"], ["proof (prove)\nusing this:\n  \\<lbrakk>bb \\<in> set (df (coeff ip 0));\n   aa \\<in> set (dp (lead_coeff ip)) \\<inter> Collect (coprime bb)\\<rbrakk>\n  \\<Longrightarrow> rat_of_int bb / rat_of_int aa \\<noteq>\n                    rat_of_int bb / rat_of_int aa\n  coprime bb aa\n  coprime (- bb) aa\n  bb \\<in> set (df (coeff ip 0))\n  aa \\<in> set (dp (lead_coeff ip))\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>x. poly p x = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rational_root_test:   \n  \"rational_root_test p = Some x \\<Longrightarrow> poly p x = 0\"\n  \"rational_root_test p = None \\<Longrightarrow> \\<not> (\\<exists> x. poly p x = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rational_root_test p = Some x \\<Longrightarrow> poly p x = 0) &&&\n    (rational_root_test p = None \\<Longrightarrow>\n     \\<nexists>x. poly p x = 0)", "using rational_root_test_main(1) rational_root_test_main(2)[OF divisors_fun_int divisors_pos_fun_int]"], ["proof (prove)\nusing this:\n  rational_root_test_main ?df ?dp ?p = Some ?x \\<Longrightarrow>\n  poly ?p ?x = 0\n  rational_root_test_main divisors_int divisors_int_pos ?p =\n  None \\<Longrightarrow>\n  \\<nexists>x. poly ?p x = 0\n\ngoal (1 subgoal):\n 1. (rational_root_test p = Some x \\<Longrightarrow> poly p x = 0) &&&\n    (rational_root_test p = None \\<Longrightarrow>\n     \\<nexists>x. poly p x = 0)", "unfolding rational_root_test_def"], ["proof (prove)\nusing this:\n  rational_root_test_main ?df ?dp ?p = Some ?x \\<Longrightarrow>\n  poly ?p ?x = 0\n  rational_root_test_main divisors_int divisors_int_pos ?p =\n  None \\<Longrightarrow>\n  \\<nexists>x. poly ?p x = 0\n\ngoal (1 subgoal):\n 1. (rational_root_test_main divisors_int divisors_int_pos p =\n     Some x \\<Longrightarrow>\n     poly p x = 0) &&&\n    (rational_root_test_main divisors_int divisors_int_pos p =\n     None \\<Longrightarrow>\n     \\<nexists>x. poly p x = 0)", "by blast+"], ["", "end"]]}