{"file_name": "/home/qj213/afp-2021-10-22/thys/Linear_Recurrences/Rational_FPS_Asymptotics.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Linear_Recurrences", "problem_names": ["lemma poly_asymp_equiv:\n  assumes \"p \\<noteq> 0\" and \"F \\<le> at_infinity\"\n  shows   \"poly p \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ degree p)\"", "lemma poly_bigtheta:\n  assumes \"p \\<noteq> 0\" and \"F \\<le> at_infinity\"\n  shows   \"poly p \\<in> \\<Theta>[F](\\<lambda>x. x ^ degree p)\"", "lemma poly_bigo:\n  assumes \"F \\<le> at_infinity\" and \"degree p \\<le> k\"\n  shows   \"poly p \\<in> O[F](\\<lambda>x. x ^ k)\"", "lemma reflect_poly_dvdI:\n  fixes p q :: \"'a::{comm_semiring_1,semiring_no_zero_divisors} poly\"\n  assumes \"p dvd q\"\n  shows   \"reflect_poly p dvd reflect_poly q\"", "lemma smult_altdef: \"smult c p = [:c:] * p\"", "lemma smult_power: \"smult (c ^ n) (p ^ n) = (smult c p) ^ n\"", "lemma order_reflect_poly_ge:\n  fixes c :: \"'a :: field\"\n  assumes \"c \\<noteq> 0\" and \"p \\<noteq> 0\"\n  shows   \"order c (reflect_poly p) \\<ge> order (1 / c) p\"", "lemma order_reflect_poly:\n  fixes c :: \"'a :: field\"\n  assumes \"c \\<noteq> 0\" and \"coeff p 0 \\<noteq> 0\"\n  shows   \"order c (reflect_poly p) = order (1 / c) p\"", "lemma poly_reflect_eq_0_iff:\n  \"poly (reflect_poly p) (x :: 'a :: field) = 0 \\<longleftrightarrow> p = 0 \\<or> x \\<noteq> 0 \\<and> poly p (1 / x) = 0\"", "theorem ratfps_nth_bigo:\n  fixes q :: \"complex poly\"\n  assumes \"R > 0\" \n  assumes roots1: \"\\<And>z. z \\<in> ball 0 (1 / R) \\<Longrightarrow> poly q z \\<noteq> 0\"\n  assumes roots2: \"\\<And>z. z \\<in> sphere 0 (1 / R) \\<Longrightarrow> poly q z = 0 \\<Longrightarrow> order z q \\<le> Suc k\"\n  shows   \"fps_nth (fps_of_poly p / fps_of_poly q) \\<in> O(\\<lambda>n. of_nat n ^ k * of_real R ^ n)\"", "lemma order_power: \"p \\<noteq> 0 \\<Longrightarrow> order c (p ^ n) = n * order c p\"", "lemma same_root_imp_not_coprime:\n  assumes \"poly p x = 0\" and \"poly q (x :: 'a :: {factorial_ring_gcd,semiring_gcd_mult_normalize}) = 0\"\n  shows   \"\\<not>coprime p q\"", "lemma ratfps_nth_bigo_square_free_factorization:\n  fixes p :: \"complex poly\"\n  assumes \"square_free_factorization q (b, cs)\"\n  assumes \"q \\<noteq> 0\" and \"R > 0\"\n  assumes roots1: \"\\<And>c l. (c, l) \\<in> set cs \\<Longrightarrow> \\<forall>x\\<in>ball 0 (1 / R). poly c x \\<noteq> 0\"\n  assumes roots2: \"\\<And>c l. (c, l) \\<in> set cs \\<Longrightarrow> l > k \\<Longrightarrow> \\<forall>x\\<in>sphere 0 (1 / R). poly c x \\<noteq> 0\"\n  shows   \"fps_nth (fps_of_poly p / fps_of_poly q) \\<in> O(\\<lambda>n. of_nat n ^ k * of_real R ^ n)\"", "lemma proots_within_card_zero_iff:\n  assumes \"p \\<noteq> (0 :: 'a :: idom poly)\"\n  shows   \"card (proots_within p A) = 0 \\<longleftrightarrow> (\\<forall>x\\<in>A. poly p x \\<noteq> 0)\"", "lemma ratfps_nth_bigo_square_free_factorization':\n  fixes p :: \"complex poly\"\n  assumes \"square_free_factorization q (b, cs)\"\n  assumes \"q \\<noteq> 0\" and \"R > 0\"\n  assumes roots1: \"list_all (\\<lambda>cl. proots_ball_card (fst cl) 0 (1 / R) = 0) cs\"\n  assumes roots2: \"list_all (\\<lambda>cl. proots_sphere_card (fst cl) 0 (1 / R) = 0)\n                     (filter (\\<lambda>cl. snd cl > k) cs)\"\n  shows   \"fps_nth (fps_of_poly p / fps_of_poly q) \\<in> O(\\<lambda>n. of_nat n ^ k * of_real R ^ n)\"", "lemma ratfps_has_asymptotics_correct:\n  assumes \"ratfps_has_asymptotics q k R\"\n  shows   \"fps_nth (fps_of_poly p / fps_of_poly q) \\<in> O(\\<lambda>n. of_nat n ^ k * of_real R ^ n)\"", "lemma \"fps_nth (fps_of_poly [:0, 1:] / fps_of_poly [:1, -1, -1 :: complex:]) \\<in>\n         O(\\<lambda>n. of_nat n ^ 0 * complex_of_real 1.618034 ^ n)\"", "lemma \"fps_nth (fps_of_poly 1 / fps_of_poly [:1, -3, 3, -1 :: complex:]) \\<in>\n         O(\\<lambda>n. of_nat n ^ 2 * complex_of_real 1 ^ n)\"", "lemma \"fps_nth (fps_of_poly f / fps_of_poly [:5, 4, 3, 2, 1 :: complex:]) \\<in>\n         O(\\<lambda>n. of_nat n ^ 0 * complex_of_real 0.69202 ^ n)\""], "translations": [["", "lemma poly_asymp_equiv:\n  assumes \"p \\<noteq> 0\" and \"F \\<le> at_infinity\"\n  shows   \"poly p \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ degree p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly p \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ degree p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. poly p \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ degree p)", "have poly_pCons': \"poly (pCons a q) = (\\<lambda>x. a + x * poly q x)\" for a :: 'a and q"], ["proof (prove)\ngoal (1 subgoal):\n 1. poly (pCons a q) = (\\<lambda>x. a + x * poly q x)", "by (simp add: fun_eq_iff)"], ["proof (state)\nthis:\n  poly (pCons ?a ?q) = (\\<lambda>x. ?a + x * poly ?q x)\n\ngoal (1 subgoal):\n 1. poly p \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ degree p)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. poly p \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ degree p)", "using assms(1)"], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly p \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ degree p)", "proof (induction p)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<noteq> 0 \\<Longrightarrow>\n    poly 0 \\<sim>[F] (\\<lambda>x. lead_coeff 0 * x ^ degree 0)\n 2. \\<And>a p.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> p \\<noteq> 0;\n        p \\<noteq> 0 \\<Longrightarrow>\n        poly p \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ degree p);\n        pCons a p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> poly\n                          (pCons a\n                            p) \\<sim>[F] (\\<lambda>x.\n       lead_coeff (pCons a p) * x ^ degree (pCons a p))", "case (pCons a p)"], ["proof (state)\nthis:\n  a \\<noteq> (0::'a) \\<or> p \\<noteq> 0\n  p \\<noteq> 0 \\<Longrightarrow>\n  poly p \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ degree p)\n  pCons a p \\<noteq> 0\n\ngoal (2 subgoals):\n 1. 0 \\<noteq> 0 \\<Longrightarrow>\n    poly 0 \\<sim>[F] (\\<lambda>x. lead_coeff 0 * x ^ degree 0)\n 2. \\<And>a p.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> p \\<noteq> 0;\n        p \\<noteq> 0 \\<Longrightarrow>\n        poly p \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ degree p);\n        pCons a p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> poly\n                          (pCons a\n                            p) \\<sim>[F] (\\<lambda>x.\n       lead_coeff (pCons a p) * x ^ degree (pCons a p))", "define n where \"n = Suc (degree p)\""], ["proof (state)\nthis:\n  n = Suc (degree p)\n\ngoal (2 subgoals):\n 1. 0 \\<noteq> 0 \\<Longrightarrow>\n    poly 0 \\<sim>[F] (\\<lambda>x. lead_coeff 0 * x ^ degree 0)\n 2. \\<And>a p.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> p \\<noteq> 0;\n        p \\<noteq> 0 \\<Longrightarrow>\n        poly p \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ degree p);\n        pCons a p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> poly\n                          (pCons a\n                            p) \\<sim>[F] (\\<lambda>x.\n       lead_coeff (pCons a p) * x ^ degree (pCons a p))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. poly\n     (pCons a\n       p) \\<sim>[F] (\\<lambda>x.\n                        lead_coeff (pCons a p) * x ^ degree (pCons a p))", "proof (cases \"p = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow>\n    poly\n     (pCons a\n       p) \\<sim>[F] (\\<lambda>x.\n                        lead_coeff (pCons a p) * x ^ degree (pCons a p))\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    poly\n     (pCons a\n       p) \\<sim>[F] (\\<lambda>x.\n                        lead_coeff (pCons a p) * x ^ degree (pCons a p))", "case [simp]: False"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow>\n    poly\n     (pCons a\n       p) \\<sim>[F] (\\<lambda>x.\n                        lead_coeff (pCons a p) * x ^ degree (pCons a p))\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    poly\n     (pCons a\n       p) \\<sim>[F] (\\<lambda>x.\n                        lead_coeff (pCons a p) * x ^ degree (pCons a p))", "hence *: \"poly p \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ degree p)\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly p \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ degree p)", "by (intro pCons.IH)"], ["proof (state)\nthis:\n  poly p \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ degree p)\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow>\n    poly\n     (pCons a\n       p) \\<sim>[F] (\\<lambda>x.\n                        lead_coeff (pCons a p) * x ^ degree (pCons a p))\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    poly\n     (pCons a\n       p) \\<sim>[F] (\\<lambda>x.\n                        lead_coeff (pCons a p) * x ^ degree (pCons a p))", "have \"poly (pCons a p) = (\\<lambda>x. a + x * poly p x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly (pCons a p) = (\\<lambda>x. a + x * poly p x)", "by (simp add: poly_pCons')"], ["proof (state)\nthis:\n  poly (pCons a p) = (\\<lambda>x. a + x * poly p x)\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow>\n    poly\n     (pCons a\n       p) \\<sim>[F] (\\<lambda>x.\n                        lead_coeff (pCons a p) * x ^ degree (pCons a p))\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    poly\n     (pCons a\n       p) \\<sim>[F] (\\<lambda>x.\n                        lead_coeff (pCons a p) * x ^ degree (pCons a p))", "moreover"], ["proof (state)\nthis:\n  poly (pCons a p) = (\\<lambda>x. a + x * poly p x)\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow>\n    poly\n     (pCons a\n       p) \\<sim>[F] (\\<lambda>x.\n                        lead_coeff (pCons a p) * x ^ degree (pCons a p))\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    poly\n     (pCons a\n       p) \\<sim>[F] (\\<lambda>x.\n                        lead_coeff (pCons a p) * x ^ degree (pCons a p))", "have \"\\<dots> \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        a + x * poly p x) \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ n)", "proof (subst asymp_equiv_add_left)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. a) \\<in> o[F](\\<lambda>x. lead_coeff p * x ^ n)\n 2. (\\<lambda>x. x * poly p x) \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ n)", "have \"(\\<lambda>x. x * poly p x) \\<sim>[F] (\\<lambda>x. x * (lead_coeff p * x ^ degree p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        x *\n        poly p x) \\<sim>[F] (\\<lambda>x. x * (lead_coeff p * x ^ degree p))", "by (intro asymp_equiv_intros *)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      x *\n      poly p x) \\<sim>[F] (\\<lambda>x. x * (lead_coeff p * x ^ degree p))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. a) \\<in> o[F](\\<lambda>x. lead_coeff p * x ^ n)\n 2. (\\<lambda>x. x * poly p x) \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ n)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      x *\n      poly p x) \\<sim>[F] (\\<lambda>x. x * (lead_coeff p * x ^ degree p))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. a) \\<in> o[F](\\<lambda>x. lead_coeff p * x ^ n)\n 2. (\\<lambda>x. x * poly p x) \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ n)", "have \"\\<dots> = (\\<lambda>x. lead_coeff p * x ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x * (lead_coeff p * x ^ degree p)) =\n    (\\<lambda>x. lead_coeff p * x ^ n)", "by (simp add: n_def mult_ac)"], ["proof (state)\nthis:\n  (\\<lambda>x. x * (lead_coeff p * x ^ degree p)) =\n  (\\<lambda>x. lead_coeff p * x ^ n)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. a) \\<in> o[F](\\<lambda>x. lead_coeff p * x ^ n)\n 2. (\\<lambda>x. x * poly p x) \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ n)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. x * poly p x) \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ n)", "show \"(\\<lambda>x. x * poly p x) \\<sim>[F] \\<dots>\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. x * poly p x) \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x * poly p x) \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ n)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. x * poly p x) \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. a) \\<in> o[F](\\<lambda>x. lead_coeff p * x ^ n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. a) \\<in> o[F](\\<lambda>x. lead_coeff p * x ^ n)", "have \"filterlim (\\<lambda>x. x) at_infinity F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM x F. x :> at_infinity", "by (simp add: filterlim_def assms)"], ["proof (state)\nthis:\n  LIM x F. x :> at_infinity\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. a) \\<in> o[F](\\<lambda>x. lead_coeff p * x ^ n)", "hence \"(\\<lambda>x. x ^ n) \\<in> \\<omega>[F](\\<lambda>_. 1 :: 'a)\""], ["proof (prove)\nusing this:\n  LIM x F. x :> at_infinity\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x ^ n) \\<in> \\<omega>[F](\\<lambda>_. 1::'a)", "unfolding smallomega_1_conv_filterlim"], ["proof (prove)\nusing this:\n  LIM x F. x :> at_infinity\n\ngoal (1 subgoal):\n 1. LIM x F. x ^ n :> at_infinity", "by (intro Limits.filterlim_power_at_infinity filterlim_ident) (auto simp: n_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. x ^ n) \\<in> \\<omega>[F](\\<lambda>_. 1::'a)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. a) \\<in> o[F](\\<lambda>x. lead_coeff p * x ^ n)", "hence \"(\\<lambda>x. a) \\<in> o[F](\\<lambda>x. x ^ n)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. x ^ n) \\<in> \\<omega>[F](\\<lambda>_. 1::'a)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. a) \\<in> o[F](\\<lambda>x. x ^ n)", "unfolding smallomega_iff_smallo[symmetric]"], ["proof (prove)\nusing this:\n  (\\<lambda>x. x ^ n) \\<in> \\<omega>[F](\\<lambda>_. 1::'a)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x ^ n) \\<in> \\<omega>[F](\\<lambda>x. a)", "by (cases \"a = 0\") auto"], ["proof (state)\nthis:\n  (\\<lambda>x. a) \\<in> o[F](\\<lambda>x. x ^ n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. a) \\<in> o[F](\\<lambda>x. lead_coeff p * x ^ n)", "thus \"(\\<lambda>x. a) \\<in> o[F](\\<lambda>x. lead_coeff p * x ^ n)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. a) \\<in> o[F](\\<lambda>x. x ^ n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. a) \\<in> o[F](\\<lambda>x. lead_coeff p * x ^ n)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. a) \\<in> o[F](\\<lambda>x. lead_coeff p * x ^ n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      a + x * poly p x) \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ n)\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow>\n    poly\n     (pCons a\n       p) \\<sim>[F] (\\<lambda>x.\n                        lead_coeff (pCons a p) * x ^ degree (pCons a p))\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    poly\n     (pCons a\n       p) \\<sim>[F] (\\<lambda>x.\n                        lead_coeff (pCons a p) * x ^ degree (pCons a p))", "ultimately"], ["proof (chain)\npicking this:\n  poly (pCons a p) = (\\<lambda>x. a + x * poly p x)\n  (\\<lambda>x.\n      a + x * poly p x) \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ n)", "show ?thesis"], ["proof (prove)\nusing this:\n  poly (pCons a p) = (\\<lambda>x. a + x * poly p x)\n  (\\<lambda>x.\n      a + x * poly p x) \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ n)\n\ngoal (1 subgoal):\n 1. poly\n     (pCons a\n       p) \\<sim>[F] (\\<lambda>x.\n                        lead_coeff (pCons a p) * x ^ degree (pCons a p))", "by (simp add: n_def)"], ["proof (state)\nthis:\n  poly\n   (pCons a\n     p) \\<sim>[F] (\\<lambda>x.\n                      lead_coeff (pCons a p) * x ^ degree (pCons a p))\n\ngoal (1 subgoal):\n 1. p = 0 \\<Longrightarrow>\n    poly\n     (pCons a\n       p) \\<sim>[F] (\\<lambda>x.\n                        lead_coeff (pCons a p) * x ^ degree (pCons a p))", "qed auto"], ["proof (state)\nthis:\n  poly\n   (pCons a\n     p) \\<sim>[F] (\\<lambda>x.\n                      lead_coeff (pCons a p) * x ^ degree (pCons a p))\n\ngoal (1 subgoal):\n 1. 0 \\<noteq> 0 \\<Longrightarrow>\n    poly 0 \\<sim>[F] (\\<lambda>x. lead_coeff 0 * x ^ degree 0)", "qed auto"], ["proof (state)\nthis:\n  poly p \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ degree p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_bigtheta:\n  assumes \"p \\<noteq> 0\" and \"F \\<le> at_infinity\"\n  shows   \"poly p \\<in> \\<Theta>[F](\\<lambda>x. x ^ degree p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly p \\<in> \\<Theta>[F](\\<lambda>x. x ^ degree p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. poly p \\<in> \\<Theta>[F](\\<lambda>x. x ^ degree p)", "have \"poly p \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ degree p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly p \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ degree p)", "by (intro poly_asymp_equiv assms)"], ["proof (state)\nthis:\n  poly p \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ degree p)\n\ngoal (1 subgoal):\n 1. poly p \\<in> \\<Theta>[F](\\<lambda>x. x ^ degree p)", "thus ?thesis"], ["proof (prove)\nusing this:\n  poly p \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ degree p)\n\ngoal (1 subgoal):\n 1. poly p \\<in> \\<Theta>[F](\\<lambda>x. x ^ degree p)", "using assms"], ["proof (prove)\nusing this:\n  poly p \\<sim>[F] (\\<lambda>x. lead_coeff p * x ^ degree p)\n  p \\<noteq> 0\n  F \\<le> at_infinity\n\ngoal (1 subgoal):\n 1. poly p \\<in> \\<Theta>[F](\\<lambda>x. x ^ degree p)", "by (auto dest!: asymp_equiv_imp_bigtheta)"], ["proof (state)\nthis:\n  poly p \\<in> \\<Theta>[F](\\<lambda>x. x ^ degree p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_bigo:\n  assumes \"F \\<le> at_infinity\" and \"degree p \\<le> k\"\n  shows   \"poly p \\<in> O[F](\\<lambda>x. x ^ k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly p \\<in> O[F](\\<lambda>x. x ^ k)", "proof (cases \"p = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> poly p \\<in> O[F](\\<lambda>x. x ^ k)\n 2. p \\<noteq> 0 \\<Longrightarrow> poly p \\<in> O[F](\\<lambda>x. x ^ k)", "case True"], ["proof (state)\nthis:\n  p = 0\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> poly p \\<in> O[F](\\<lambda>x. x ^ k)\n 2. p \\<noteq> 0 \\<Longrightarrow> poly p \\<in> O[F](\\<lambda>x. x ^ k)", "hence \"poly p = (\\<lambda>_. 0)\""], ["proof (prove)\nusing this:\n  p = 0\n\ngoal (1 subgoal):\n 1. poly p = (\\<lambda>_. 0::'a)", "by (auto simp: fun_eq_iff)"], ["proof (state)\nthis:\n  poly p = (\\<lambda>_. 0::'a)\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> poly p \\<in> O[F](\\<lambda>x. x ^ k)\n 2. p \\<noteq> 0 \\<Longrightarrow> poly p \\<in> O[F](\\<lambda>x. x ^ k)", "thus ?thesis"], ["proof (prove)\nusing this:\n  poly p = (\\<lambda>_. 0::'a)\n\ngoal (1 subgoal):\n 1. poly p \\<in> O[F](\\<lambda>x. x ^ k)", "by simp"], ["proof (state)\nthis:\n  poly p \\<in> O[F](\\<lambda>x. x ^ k)\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> poly p \\<in> O[F](\\<lambda>x. x ^ k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> poly p \\<in> O[F](\\<lambda>x. x ^ k)", "case False"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> poly p \\<in> O[F](\\<lambda>x. x ^ k)", "have *: \"(\\<lambda>x. x ^ (k - degree p)) \\<in> \\<Omega>[F](\\<lambda>x. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x ^ (k - degree p)) \\<in> \\<Omega>[F](\\<lambda>x. 1::'a)", "proof (cases \"k = degree p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k = degree p \\<Longrightarrow>\n    (\\<lambda>x. x ^ (k - degree p)) \\<in> \\<Omega>[F](\\<lambda>x. 1::'a)\n 2. k \\<noteq> degree p \\<Longrightarrow>\n    (\\<lambda>x. x ^ (k - degree p)) \\<in> \\<Omega>[F](\\<lambda>x. 1::'a)", "case False"], ["proof (state)\nthis:\n  k \\<noteq> degree p\n\ngoal (2 subgoals):\n 1. k = degree p \\<Longrightarrow>\n    (\\<lambda>x. x ^ (k - degree p)) \\<in> \\<Omega>[F](\\<lambda>x. 1::'a)\n 2. k \\<noteq> degree p \\<Longrightarrow>\n    (\\<lambda>x. x ^ (k - degree p)) \\<in> \\<Omega>[F](\\<lambda>x. 1::'a)", "hence \"(\\<lambda>x. x ^ (k - degree p)) \\<in> \\<omega>[F](\\<lambda>_. 1)\""], ["proof (prove)\nusing this:\n  k \\<noteq> degree p\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x ^ (k - degree p)) \\<in> \\<omega>[F](\\<lambda>_. 1::'a)", "unfolding smallomega_1_conv_filterlim"], ["proof (prove)\nusing this:\n  k \\<noteq> degree p\n\ngoal (1 subgoal):\n 1. LIM x F. x ^ (k - degree p) :> at_infinity", "using assms False"], ["proof (prove)\nusing this:\n  k \\<noteq> degree p\n  F \\<le> at_infinity\n  degree p \\<le> k\n  k \\<noteq> degree p\n\ngoal (1 subgoal):\n 1. LIM x F. x ^ (k - degree p) :> at_infinity", "by (intro Limits.filterlim_power_at_infinity filterlim_ident)\n         (auto simp: filterlim_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. x ^ (k - degree p)) \\<in> \\<omega>[F](\\<lambda>_. 1::'a)\n\ngoal (2 subgoals):\n 1. k = degree p \\<Longrightarrow>\n    (\\<lambda>x. x ^ (k - degree p)) \\<in> \\<Omega>[F](\\<lambda>x. 1::'a)\n 2. k \\<noteq> degree p \\<Longrightarrow>\n    (\\<lambda>x. x ^ (k - degree p)) \\<in> \\<Omega>[F](\\<lambda>x. 1::'a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. x ^ (k - degree p)) \\<in> \\<omega>[F](\\<lambda>_. 1::'a)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x ^ (k - degree p)) \\<in> \\<Omega>[F](\\<lambda>x. 1::'a)", "by (rule landau_omega.small_imp_big)"], ["proof (state)\nthis:\n  (\\<lambda>x. x ^ (k - degree p)) \\<in> \\<Omega>[F](\\<lambda>x. 1::'a)\n\ngoal (1 subgoal):\n 1. k = degree p \\<Longrightarrow>\n    (\\<lambda>x. x ^ (k - degree p)) \\<in> \\<Omega>[F](\\<lambda>x. 1::'a)", "qed auto"], ["proof (state)\nthis:\n  (\\<lambda>x. x ^ (k - degree p)) \\<in> \\<Omega>[F](\\<lambda>x. 1::'a)\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> poly p \\<in> O[F](\\<lambda>x. x ^ k)", "have \"poly p \\<in> \\<Theta>[F](\\<lambda>x. x ^ degree p * 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly p \\<in> \\<Theta>[F](\\<lambda>x. x ^ degree p * (1::'a))", "using poly_bigtheta[OF False assms(1)]"], ["proof (prove)\nusing this:\n  poly p \\<in> \\<Theta>[F](\\<lambda>x. x ^ degree p)\n\ngoal (1 subgoal):\n 1. poly p \\<in> \\<Theta>[F](\\<lambda>x. x ^ degree p * (1::'a))", "by simp"], ["proof (state)\nthis:\n  poly p \\<in> \\<Theta>[F](\\<lambda>x. x ^ degree p * (1::'a))\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> poly p \\<in> O[F](\\<lambda>x. x ^ k)", "also"], ["proof (state)\nthis:\n  poly p \\<in> \\<Theta>[F](\\<lambda>x. x ^ degree p * (1::'a))\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> poly p \\<in> O[F](\\<lambda>x. x ^ k)", "have \"(\\<lambda>x. x ^ degree p * 1) \\<in> O[F](\\<lambda>x. x ^ degree p * x ^ (k - degree p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x ^ degree p * (1::'a))\n    \\<in> O[F](\\<lambda>x. x ^ degree p * x ^ (k - degree p))", "using *"], ["proof (prove)\nusing this:\n  (\\<lambda>x. x ^ (k - degree p)) \\<in> \\<Omega>[F](\\<lambda>x. 1::'a)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x ^ degree p * (1::'a))\n    \\<in> O[F](\\<lambda>x. x ^ degree p * x ^ (k - degree p))", "by (intro landau_o.big.mult landau_o.big_refl) (auto simp: bigomega_iff_bigo)"], ["proof (state)\nthis:\n  (\\<lambda>x. x ^ degree p * (1::'a))\n  \\<in> O[F](\\<lambda>x. x ^ degree p * x ^ (k - degree p))\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> poly p \\<in> O[F](\\<lambda>x. x ^ k)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. x ^ degree p * (1::'a))\n  \\<in> O[F](\\<lambda>x. x ^ degree p * x ^ (k - degree p))\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> poly p \\<in> O[F](\\<lambda>x. x ^ k)", "have \"(\\<lambda>x::'a. x ^ degree p * x ^ (k - degree p)) = (\\<lambda>x. x ^ k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x ^ degree p * x ^ (k - degree p)) = (\\<lambda>x. x ^ k)", "using assms"], ["proof (prove)\nusing this:\n  F \\<le> at_infinity\n  degree p \\<le> k\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x ^ degree p * x ^ (k - degree p)) = (\\<lambda>x. x ^ k)", "by (simp add: power_add [symmetric])"], ["proof (state)\nthis:\n  (\\<lambda>x. x ^ degree p * x ^ (k - degree p)) = (\\<lambda>x. x ^ k)\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> poly p \\<in> O[F](\\<lambda>x. x ^ k)", "finally"], ["proof (chain)\npicking this:\n  poly p \\<in> O[F](\\<lambda>x. x ^ k)", "show ?thesis"], ["proof (prove)\nusing this:\n  poly p \\<in> O[F](\\<lambda>x. x ^ k)\n\ngoal (1 subgoal):\n 1. poly p \\<in> O[F](\\<lambda>x. x ^ k)", "."], ["proof (state)\nthis:\n  poly p \\<in> O[F](\\<lambda>x. x ^ k)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reflect_poly_dvdI:\n  fixes p q :: \"'a::{comm_semiring_1,semiring_no_zero_divisors} poly\"\n  assumes \"p dvd q\"\n  shows   \"reflect_poly p dvd reflect_poly q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflect_poly p dvd reflect_poly q", "using assms"], ["proof (prove)\nusing this:\n  p dvd q\n\ngoal (1 subgoal):\n 1. reflect_poly p dvd reflect_poly q", "by (auto simp: reflect_poly_mult)"], ["", "lemma smult_altdef: \"smult c p = [:c:] * p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smult c p = [:c:] * p", "by (induction p) (auto simp: mult_ac)"], ["", "lemma smult_power: \"smult (c ^ n) (p ^ n) = (smult c p) ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smult (c ^ n) (p ^ n) = smult c p ^ n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. smult (c ^ n) (p ^ n) = smult c p ^ n", "have \"smult (c ^ n) (p ^ n) = [:c ^ n:] * p ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smult (c ^ n) (p ^ n) = [:c ^ n:] * p ^ n", "by simp"], ["proof (state)\nthis:\n  smult (c ^ n) (p ^ n) = [:c ^ n:] * p ^ n\n\ngoal (1 subgoal):\n 1. smult (c ^ n) (p ^ n) = smult c p ^ n", "also"], ["proof (state)\nthis:\n  smult (c ^ n) (p ^ n) = [:c ^ n:] * p ^ n\n\ngoal (1 subgoal):\n 1. smult (c ^ n) (p ^ n) = smult c p ^ n", "have \"[:c:] ^ n = [:c ^ n:]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [:c:] ^ n = [:c ^ n:]", "by (induction n) (auto simp: mult_ac)"], ["proof (state)\nthis:\n  [:c:] ^ n = [:c ^ n:]\n\ngoal (1 subgoal):\n 1. smult (c ^ n) (p ^ n) = smult c p ^ n", "hence \"[:c ^ n:] = [:c:] ^ n\""], ["proof (prove)\nusing this:\n  [:c:] ^ n = [:c ^ n:]\n\ngoal (1 subgoal):\n 1. [:c ^ n:] = [:c:] ^ n", ".."], ["proof (state)\nthis:\n  [:c ^ n:] = [:c:] ^ n\n\ngoal (1 subgoal):\n 1. smult (c ^ n) (p ^ n) = smult c p ^ n", "also"], ["proof (state)\nthis:\n  [:c ^ n:] = [:c:] ^ n\n\ngoal (1 subgoal):\n 1. smult (c ^ n) (p ^ n) = smult c p ^ n", "have \"\\<dots> * p ^ n = ([:c:] * p) ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [:c:] ^ n * p ^ n = ([:c:] * p) ^ n", "by (rule power_mult_distrib [symmetric])"], ["proof (state)\nthis:\n  [:c:] ^ n * p ^ n = ([:c:] * p) ^ n\n\ngoal (1 subgoal):\n 1. smult (c ^ n) (p ^ n) = smult c p ^ n", "also"], ["proof (state)\nthis:\n  [:c:] ^ n * p ^ n = ([:c:] * p) ^ n\n\ngoal (1 subgoal):\n 1. smult (c ^ n) (p ^ n) = smult c p ^ n", "have \"\\<dots> = (smult c p) ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([:c:] * p) ^ n = smult c p ^ n", "by simp"], ["proof (state)\nthis:\n  ([:c:] * p) ^ n = smult c p ^ n\n\ngoal (1 subgoal):\n 1. smult (c ^ n) (p ^ n) = smult c p ^ n", "finally"], ["proof (chain)\npicking this:\n  smult (c ^ n) (p ^ n) = smult c p ^ n", "show ?thesis"], ["proof (prove)\nusing this:\n  smult (c ^ n) (p ^ n) = smult c p ^ n\n\ngoal (1 subgoal):\n 1. smult (c ^ n) (p ^ n) = smult c p ^ n", "."], ["proof (state)\nthis:\n  smult (c ^ n) (p ^ n) = smult c p ^ n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma order_reflect_poly_ge:\n  fixes c :: \"'a :: field\"\n  assumes \"c \\<noteq> 0\" and \"p \\<noteq> 0\"\n  shows   \"order c (reflect_poly p) \\<ge> order (1 / c) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order ((1::'a) / c) p \\<le> order c (reflect_poly p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. order ((1::'a) / c) p \\<le> order c (reflect_poly p)", "have \"reflect_poly ([:-(1 / c), 1:] ^ order (1 / c) p) dvd reflect_poly p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflect_poly ([:- ((1::'a) / c), 1::'a:] ^ order ((1::'a) / c) p) dvd\n    reflect_poly p", "by (intro reflect_poly_dvdI, subst order_divides) auto"], ["proof (state)\nthis:\n  reflect_poly ([:- ((1::'a) / c), 1::'a:] ^ order ((1::'a) / c) p) dvd\n  reflect_poly p\n\ngoal (1 subgoal):\n 1. order ((1::'a) / c) p \\<le> order c (reflect_poly p)", "also"], ["proof (state)\nthis:\n  reflect_poly ([:- ((1::'a) / c), 1::'a:] ^ order ((1::'a) / c) p) dvd\n  reflect_poly p\n\ngoal (1 subgoal):\n 1. order ((1::'a) / c) p \\<le> order c (reflect_poly p)", "have \"reflect_poly ([:-(1 / c), 1:] ^ order (1 / c) p) =\n               smult ((-1 / c) ^ order (1 / c) p) ([:-c, 1:] ^ order (1 / c) p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflect_poly ([:- ((1::'a) / c), 1::'a:] ^ order ((1::'a) / c) p) =\n    smult ((- (1::'a) / c) ^ order ((1::'a) / c) p)\n     ([:- c, 1::'a:] ^ order ((1::'a) / c) p)", "using assms"], ["proof (prove)\nusing this:\n  c \\<noteq> (0::'a)\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. reflect_poly ([:- ((1::'a) / c), 1::'a:] ^ order ((1::'a) / c) p) =\n    smult ((- (1::'a) / c) ^ order ((1::'a) / c) p)\n     ([:- c, 1::'a:] ^ order ((1::'a) / c) p)", "by (simp add: reflect_poly_power reflect_poly_pCons smult_power)"], ["proof (state)\nthis:\n  reflect_poly ([:- ((1::'a) / c), 1::'a:] ^ order ((1::'a) / c) p) =\n  smult ((- (1::'a) / c) ^ order ((1::'a) / c) p)\n   ([:- c, 1::'a:] ^ order ((1::'a) / c) p)\n\ngoal (1 subgoal):\n 1. order ((1::'a) / c) p \\<le> order c (reflect_poly p)", "finally"], ["proof (chain)\npicking this:\n  smult ((- (1::'a) / c) ^ order ((1::'a) / c) p)\n   ([:- c, 1::'a:] ^ order ((1::'a) / c) p) dvd\n  reflect_poly p", "have \"([:-c, 1:] ^ order (1 / c) p) dvd reflect_poly p\""], ["proof (prove)\nusing this:\n  smult ((- (1::'a) / c) ^ order ((1::'a) / c) p)\n   ([:- c, 1::'a:] ^ order ((1::'a) / c) p) dvd\n  reflect_poly p\n\ngoal (1 subgoal):\n 1. [:- c, 1::'a:] ^ order ((1::'a) / c) p dvd reflect_poly p", "by (rule smult_dvd_cancel)"], ["proof (state)\nthis:\n  [:- c, 1::'a:] ^ order ((1::'a) / c) p dvd reflect_poly p\n\ngoal (1 subgoal):\n 1. order ((1::'a) / c) p \\<le> order c (reflect_poly p)", "with \\<open>p \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> 0\n  [:- c, 1::'a:] ^ order ((1::'a) / c) p dvd reflect_poly p", "show ?thesis"], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  [:- c, 1::'a:] ^ order ((1::'a) / c) p dvd reflect_poly p\n\ngoal (1 subgoal):\n 1. order ((1::'a) / c) p \\<le> order c (reflect_poly p)", "by (subst (asm) order_divides) auto"], ["proof (state)\nthis:\n  order ((1::'a) / c) p \\<le> order c (reflect_poly p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma order_reflect_poly:\n  fixes c :: \"'a :: field\"\n  assumes \"c \\<noteq> 0\" and \"coeff p 0 \\<noteq> 0\"\n  shows   \"order c (reflect_poly p) = order (1 / c) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order c (reflect_poly p) = order ((1::'a) / c) p", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. order c (reflect_poly p) \\<le> order ((1::'a) / c) p\n 2. order ((1::'a) / c) p \\<le> order c (reflect_poly p)", "from assms"], ["proof (chain)\npicking this:\n  c \\<noteq> (0::'a)\n  constant_term p \\<noteq> (0::'a)", "show \"order c (reflect_poly p) \\<ge> order (1 / c) p\""], ["proof (prove)\nusing this:\n  c \\<noteq> (0::'a)\n  constant_term p \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. order ((1::'a) / c) p \\<le> order c (reflect_poly p)", "by (intro order_reflect_poly_ge) auto"], ["proof (state)\nthis:\n  order ((1::'a) / c) p \\<le> order c (reflect_poly p)\n\ngoal (1 subgoal):\n 1. order c (reflect_poly p) \\<le> order ((1::'a) / c) p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. order c (reflect_poly p) \\<le> order ((1::'a) / c) p", "from assms"], ["proof (chain)\npicking this:\n  c \\<noteq> (0::'a)\n  constant_term p \\<noteq> (0::'a)", "have \"order (1 / (1 / c)) (reflect_poly p) \\<le>\n                     order (1 / c) (reflect_poly (reflect_poly p))\""], ["proof (prove)\nusing this:\n  c \\<noteq> (0::'a)\n  constant_term p \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. order ((1::'a) / ((1::'a) / c)) (reflect_poly p)\n    \\<le> order ((1::'a) / c) (reflect_poly (reflect_poly p))", "by (intro order_reflect_poly_ge) auto"], ["proof (state)\nthis:\n  order ((1::'a) / ((1::'a) / c)) (reflect_poly p)\n  \\<le> order ((1::'a) / c) (reflect_poly (reflect_poly p))\n\ngoal (1 subgoal):\n 1. order c (reflect_poly p) \\<le> order ((1::'a) / c) p", "with assms"], ["proof (chain)\npicking this:\n  c \\<noteq> (0::'a)\n  constant_term p \\<noteq> (0::'a)\n  order ((1::'a) / ((1::'a) / c)) (reflect_poly p)\n  \\<le> order ((1::'a) / c) (reflect_poly (reflect_poly p))", "show \"order c (reflect_poly p) \\<le> order (1 / c) p\""], ["proof (prove)\nusing this:\n  c \\<noteq> (0::'a)\n  constant_term p \\<noteq> (0::'a)\n  order ((1::'a) / ((1::'a) / c)) (reflect_poly p)\n  \\<le> order ((1::'a) / c) (reflect_poly (reflect_poly p))\n\ngoal (1 subgoal):\n 1. order c (reflect_poly p) \\<le> order ((1::'a) / c) p", "by simp"], ["proof (state)\nthis:\n  order c (reflect_poly p) \\<le> order ((1::'a) / c) p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_reflect_eq_0_iff:\n  \"poly (reflect_poly p) (x :: 'a :: field) = 0 \\<longleftrightarrow> p = 0 \\<or> x \\<noteq> 0 \\<and> poly p (1 / x) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (poly (reflect_poly p) x = (0::'a)) =\n    (p = 0 \\<or> x \\<noteq> (0::'a) \\<and> poly p ((1::'a) / x) = (0::'a))", "by (cases \"x = 0\") (auto simp: poly_reflect_poly_nz inverse_eq_divide)"], ["", "theorem ratfps_nth_bigo:\n  fixes q :: \"complex poly\"\n  assumes \"R > 0\" \n  assumes roots1: \"\\<And>z. z \\<in> ball 0 (1 / R) \\<Longrightarrow> poly q z \\<noteq> 0\"\n  assumes roots2: \"\\<And>z. z \\<in> sphere 0 (1 / R) \\<Longrightarrow> poly q z = 0 \\<Longrightarrow> order z q \\<le> Suc k\"\n  shows   \"fps_nth (fps_of_poly p / fps_of_poly q) \\<in> O(\\<lambda>n. of_nat n ^ k * of_real R ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (fps_of_poly p / fps_of_poly q)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ($) (fps_of_poly p / fps_of_poly q)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "define q' where \"q' = reflect_poly q\""], ["proof (state)\nthis:\n  q' = reflect_poly q\n\ngoal (1 subgoal):\n 1. ($) (fps_of_poly p / fps_of_poly q)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "from roots1[of 0] and \\<open>R > 0\\<close>"], ["proof (chain)\npicking this:\n  0 \\<in> ball 0 (1 / R) \\<Longrightarrow> poly q 0 \\<noteq> 0\n  0 < R", "have [simp]: \"coeff q 0 \\<noteq> 0\" \"q \\<noteq> 0\""], ["proof (prove)\nusing this:\n  0 \\<in> ball 0 (1 / R) \\<Longrightarrow> poly q 0 \\<noteq> 0\n  0 < R\n\ngoal (1 subgoal):\n 1. constant_term q \\<noteq> 0 &&& q \\<noteq> 0", "by (auto simp: poly_0_coeff_0)"], ["proof (state)\nthis:\n  constant_term q \\<noteq> 0\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ($) (fps_of_poly p / fps_of_poly q)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "from ratfps_closed_form_exists[OF this(1), of p]"], ["proof (chain)\npicking this:\n  (\\<And>r rs.\n      \\<lbrakk>\\<And>n.\n                  (fps_of_poly p / fps_of_poly q) $ n =\n                  coeff r n +\n                  (\\<Sum>c | poly (reflect_poly q) c = 0.\n                     poly (rs c) (of_nat n) * c ^ n);\n       \\<And>z.\n          poly (reflect_poly q) z = 0 \\<Longrightarrow>\n          degree (rs z) \\<le> order z (reflect_poly q) - 1\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "guess r rs"], ["proof (prove)\nusing this:\n  (\\<And>r rs.\n      \\<lbrakk>\\<And>n.\n                  (fps_of_poly p / fps_of_poly q) $ n =\n                  coeff r n +\n                  (\\<Sum>c | poly (reflect_poly q) c = 0.\n                     poly (rs c) (of_nat n) * c ^ n);\n       \\<And>z.\n          poly (reflect_poly q) z = 0 \\<Longrightarrow>\n          degree (rs z) \\<le> order z (reflect_poly q) - 1\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  (fps_of_poly p / fps_of_poly q) $ ?n =\n  coeff r ?n +\n  (\\<Sum>c | poly (reflect_poly q) c = 0. poly (rs c) (of_nat ?n) * c ^ ?n)\n  poly (reflect_poly q) ?z = 0 \\<Longrightarrow>\n  degree (rs ?z) \\<le> order ?z (reflect_poly q) - 1\n\ngoal (1 subgoal):\n 1. ($) (fps_of_poly p / fps_of_poly q)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "note closed_form = this"], ["proof (state)\nthis:\n  (fps_of_poly p / fps_of_poly q) $ ?n =\n  coeff r ?n +\n  (\\<Sum>c | poly (reflect_poly q) c = 0. poly (rs c) (of_nat ?n) * c ^ ?n)\n  poly (reflect_poly q) ?z = 0 \\<Longrightarrow>\n  degree (rs ?z) \\<le> order ?z (reflect_poly q) - 1\n\ngoal (1 subgoal):\n 1. ($) (fps_of_poly p / fps_of_poly q)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "have \"fps_nth (fps_of_poly p / fps_of_poly q) =\n          (\\<lambda>n. coeff r n + (\\<Sum>c | poly q' c = 0. poly (rs c) (of_nat n) * c ^ n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (fps_of_poly p / fps_of_poly q) =\n    (\\<lambda>n.\n        coeff r n +\n        (\\<Sum>c | poly q' c = 0. poly (rs c) (of_nat n) * c ^ n))", "by (intro ext, subst closed_form) (simp_all add: q'_def)"], ["proof (state)\nthis:\n  ($) (fps_of_poly p / fps_of_poly q) =\n  (\\<lambda>n.\n      coeff r n + (\\<Sum>c | poly q' c = 0. poly (rs c) (of_nat n) * c ^ n))\n\ngoal (1 subgoal):\n 1. ($) (fps_of_poly p / fps_of_poly q)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "also"], ["proof (state)\nthis:\n  ($) (fps_of_poly p / fps_of_poly q) =\n  (\\<lambda>n.\n      coeff r n + (\\<Sum>c | poly q' c = 0. poly (rs c) (of_nat n) * c ^ n))\n\ngoal (1 subgoal):\n 1. ($) (fps_of_poly p / fps_of_poly q)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "have \"\\<dots> \\<in> O(\\<lambda>n. of_nat n ^ k * of_real R ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        coeff r n +\n        (\\<Sum>c | poly q' c = 0. poly (rs c) (of_nat n) * c ^ n))\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "proof (intro sum_in_bigo big_sum_in_bigo)"], ["proof (state)\ngoal (2 subgoals):\n 1. coeff r \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)\n 2. \\<And>x.\n       x \\<in> {c. poly q' c = 0} \\<Longrightarrow>\n       (\\<lambda>xa. poly (rs x) (of_nat xa) * x ^ xa)\n       \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "have \"eventually (\\<lambda>n. coeff r n = 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. coeff r n = 0", "using MOST_nat coeff_eq_0 cofinite_eq_sequentially"], ["proof (prove)\nusing this:\n  (\\<forall>\\<^sub>\\<infinity>n. ?P n) = (\\<exists>m. \\<forall>n>m. ?P n)\n  degree ?p < ?n \\<Longrightarrow> coeff ?p ?n = (0::?'a)\n  cofinite = sequentially\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. coeff r n = 0", "by force"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. coeff r n = 0\n\ngoal (2 subgoals):\n 1. coeff r \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)\n 2. \\<And>x.\n       x \\<in> {c. poly q' c = 0} \\<Longrightarrow>\n       (\\<lambda>xa. poly (rs x) (of_nat xa) * x ^ xa)\n       \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "hence \"coeff r \\<in> \\<Theta>(\\<lambda>_. 0)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially. coeff r n = 0\n\ngoal (1 subgoal):\n 1. coeff r \\<in> \\<Theta>(\\<lambda>_. 0)", "by (rule bigthetaI_cong)"], ["proof (state)\nthis:\n  coeff r \\<in> \\<Theta>(\\<lambda>_. 0)\n\ngoal (2 subgoals):\n 1. coeff r \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)\n 2. \\<And>x.\n       x \\<in> {c. poly q' c = 0} \\<Longrightarrow>\n       (\\<lambda>xa. poly (rs x) (of_nat xa) * x ^ xa)\n       \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "also"], ["proof (state)\nthis:\n  coeff r \\<in> \\<Theta>(\\<lambda>_. 0)\n\ngoal (2 subgoals):\n 1. coeff r \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)\n 2. \\<And>x.\n       x \\<in> {c. poly q' c = 0} \\<Longrightarrow>\n       (\\<lambda>xa. poly (rs x) (of_nat xa) * x ^ xa)\n       \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "have \"(\\<lambda>_. 0 :: complex) \\<in> O(\\<lambda>n. of_nat n ^ k * of_real R ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>_. 0)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>_. 0) \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)\n\ngoal (2 subgoals):\n 1. coeff r \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)\n 2. \\<And>x.\n       x \\<in> {c. poly q' c = 0} \\<Longrightarrow>\n       (\\<lambda>xa. poly (rs x) (of_nat xa) * x ^ xa)\n       \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "finally"], ["proof (chain)\npicking this:\n  coeff r \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "show \"coeff r \\<in> O(\\<lambda>n. of_nat n ^ k * of_real R ^ n)\""], ["proof (prove)\nusing this:\n  coeff r \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)\n\ngoal (1 subgoal):\n 1. coeff r \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "."], ["proof (state)\nthis:\n  coeff r \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {c. poly q' c = 0} \\<Longrightarrow>\n       (\\<lambda>xa. poly (rs x) (of_nat xa) * x ^ xa)\n       \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {c. poly q' c = 0} \\<Longrightarrow>\n       (\\<lambda>xa. poly (rs x) (of_nat xa) * x ^ xa)\n       \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {c. poly q' c = 0} \\<Longrightarrow>\n       (\\<lambda>xa. poly (rs x) (of_nat xa) * x ^ xa)\n       \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "assume c: \"c \\<in> {c. poly q' c = 0}\""], ["proof (state)\nthis:\n  c \\<in> {c. poly q' c = 0}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {c. poly q' c = 0} \\<Longrightarrow>\n       (\\<lambda>xa. poly (rs x) (of_nat xa) * x ^ xa)\n       \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "hence [simp]: \"c \\<noteq> 0\""], ["proof (prove)\nusing this:\n  c \\<in> {c. poly q' c = 0}\n\ngoal (1 subgoal):\n 1. c \\<noteq> 0", "by (auto simp: q'_def)"], ["proof (state)\nthis:\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {c. poly q' c = 0} \\<Longrightarrow>\n       (\\<lambda>xa. poly (rs x) (of_nat xa) * x ^ xa)\n       \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "show \"(\\<lambda>n. poly (rs c) n * c ^ n) \\<in> O(\\<lambda>n. of_nat n ^ k * of_real R ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "proof (cases \"norm c = R\")"], ["proof (state)\ngoal (2 subgoals):\n 1. cmod c = R \\<Longrightarrow>\n    (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)\n 2. cmod c \\<noteq> R \\<Longrightarrow>\n    (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "case True \\<comment>\\<open>The case of a root at the border of the disc\\<close>"], ["proof (state)\nthis:\n  cmod c = R\n\ngoal (2 subgoals):\n 1. cmod c = R \\<Longrightarrow>\n    (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)\n 2. cmod c \\<noteq> R \\<Longrightarrow>\n    (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "proof (intro landau_o.big.mult landau_o.big.compose[OF poly_bigo tendsto_of_nat])"], ["proof (state)\ngoal (3 subgoals):\n 1. at_infinity \\<le> at_infinity\n 2. degree (rs c) \\<le> k\n 3. (^) c \\<in> O((^) (complex_of_real R))", "have \"degree (rs c) \\<le> order c (reflect_poly q) - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (rs c) \\<le> order c (reflect_poly q) - 1", "using c"], ["proof (prove)\nusing this:\n  c \\<in> {c. poly q' c = 0}\n\ngoal (1 subgoal):\n 1. degree (rs c) \\<le> order c (reflect_poly q) - 1", "by (intro closed_form(2)) (auto simp: q'_def)"], ["proof (state)\nthis:\n  degree (rs c) \\<le> order c (reflect_poly q) - 1\n\ngoal (3 subgoals):\n 1. at_infinity \\<le> at_infinity\n 2. degree (rs c) \\<le> k\n 3. (^) c \\<in> O((^) (complex_of_real R))", "also"], ["proof (state)\nthis:\n  degree (rs c) \\<le> order c (reflect_poly q) - 1\n\ngoal (3 subgoals):\n 1. at_infinity \\<le> at_infinity\n 2. degree (rs c) \\<le> k\n 3. (^) c \\<in> O((^) (complex_of_real R))", "have \"order c (reflect_poly q) = order (1 / c) q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order c (reflect_poly q) = order (1 / c) q", "using c"], ["proof (prove)\nusing this:\n  c \\<in> {c. poly q' c = 0}\n\ngoal (1 subgoal):\n 1. order c (reflect_poly q) = order (1 / c) q", "by (intro order_reflect_poly) (auto simp: q'_def)"], ["proof (state)\nthis:\n  order c (reflect_poly q) = order (1 / c) q\n\ngoal (3 subgoals):\n 1. at_infinity \\<le> at_infinity\n 2. degree (rs c) \\<le> k\n 3. (^) c \\<in> O((^) (complex_of_real R))", "also"], ["proof (state)\nthis:\n  order c (reflect_poly q) = order (1 / c) q\n\ngoal (3 subgoals):\n 1. at_infinity \\<le> at_infinity\n 2. degree (rs c) \\<le> k\n 3. (^) c \\<in> O((^) (complex_of_real R))", "{"], ["proof (state)\nthis:\n  order c (reflect_poly q) = order (1 / c) q\n\ngoal (3 subgoals):\n 1. at_infinity \\<le> at_infinity\n 2. degree (rs c) \\<le> k\n 3. (^) c \\<in> O((^) (complex_of_real R))", "have \"order (1 / c) q \\<le> Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order (1 / c) q \\<le> Suc k", "using \\<open>R > 0\\<close> and True and c"], ["proof (prove)\nusing this:\n  0 < R\n  cmod c = R\n  c \\<in> {c. poly q' c = 0}\n\ngoal (1 subgoal):\n 1. order (1 / c) q \\<le> Suc k", "by (intro roots2) (auto simp: q'_def norm_divide poly_reflect_eq_0_iff)"], ["proof (state)\nthis:\n  order (1 / c) q \\<le> Suc k\n\ngoal (3 subgoals):\n 1. at_infinity \\<le> at_infinity\n 2. degree (rs c) \\<le> k\n 3. (^) c \\<in> O((^) (complex_of_real R))", "moreover"], ["proof (state)\nthis:\n  order (1 / c) q \\<le> Suc k\n\ngoal (3 subgoals):\n 1. at_infinity \\<le> at_infinity\n 2. degree (rs c) \\<le> k\n 3. (^) c \\<in> O((^) (complex_of_real R))", "have \"order (1 / c) q \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order (1 / c) q \\<noteq> 0", "using order_root[of q \"1 / c\"] c"], ["proof (prove)\nusing this:\n  (poly q (1 / c) = 0) = (q = 0 \\<or> order (1 / c) q \\<noteq> 0)\n  c \\<in> {c. poly q' c = 0}\n\ngoal (1 subgoal):\n 1. order (1 / c) q \\<noteq> 0", "by (auto simp: q'_def poly_reflect_eq_0_iff)"], ["proof (state)\nthis:\n  order (1 / c) q \\<noteq> 0\n\ngoal (3 subgoals):\n 1. at_infinity \\<le> at_infinity\n 2. degree (rs c) \\<le> k\n 3. (^) c \\<in> O((^) (complex_of_real R))", "ultimately"], ["proof (chain)\npicking this:\n  order (1 / c) q \\<le> Suc k\n  order (1 / c) q \\<noteq> 0", "have \"order (1 / c) q - 1 \\<le> k\""], ["proof (prove)\nusing this:\n  order (1 / c) q \\<le> Suc k\n  order (1 / c) q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. order (1 / c) q - 1 \\<le> k", "by simp"], ["proof (state)\nthis:\n  order (1 / c) q - 1 \\<le> k\n\ngoal (3 subgoals):\n 1. at_infinity \\<le> at_infinity\n 2. degree (rs c) \\<le> k\n 3. (^) c \\<in> O((^) (complex_of_real R))", "}"], ["proof (state)\nthis:\n  order (1 / c) q - 1 \\<le> k\n\ngoal (3 subgoals):\n 1. at_infinity \\<le> at_infinity\n 2. degree (rs c) \\<le> k\n 3. (^) c \\<in> O((^) (complex_of_real R))", "finally"], ["proof (chain)\npicking this:\n  degree (rs c) \\<le> k", "show \"degree (rs c) \\<le> k\""], ["proof (prove)\nusing this:\n  degree (rs c) \\<le> k\n\ngoal (1 subgoal):\n 1. degree (rs c) \\<le> k", "."], ["proof (state)\nthis:\n  degree (rs c) \\<le> k\n\ngoal (2 subgoals):\n 1. at_infinity \\<le> at_infinity\n 2. (^) c \\<in> O((^) (complex_of_real R))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. at_infinity \\<le> at_infinity\n 2. (^) c \\<in> O((^) (complex_of_real R))", "have \"(\\<lambda>n. norm (c ^ n)) \\<in> O(\\<lambda>n. norm (complex_of_real R ^ n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. cmod (c ^ n))\n    \\<in> O(\\<lambda>n. cmod (complex_of_real R ^ n))", "using True and \\<open>R > 0\\<close>"], ["proof (prove)\nusing this:\n  cmod c = R\n  0 < R\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. cmod (c ^ n))\n    \\<in> O(\\<lambda>n. cmod (complex_of_real R ^ n))", "by (simp add: norm_power)"], ["proof (state)\nthis:\n  (\\<lambda>n. cmod (c ^ n))\n  \\<in> O(\\<lambda>n. cmod (complex_of_real R ^ n))\n\ngoal (2 subgoals):\n 1. at_infinity \\<le> at_infinity\n 2. (^) c \\<in> O((^) (complex_of_real R))", "thus \"(\\<lambda>n. c ^ n) \\<in> O(\\<lambda>n. complex_of_real R ^ n)\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. cmod (c ^ n))\n  \\<in> O(\\<lambda>n. cmod (complex_of_real R ^ n))\n\ngoal (1 subgoal):\n 1. (^) c \\<in> O((^) (complex_of_real R))", "by (subst (asm) landau_o.big.norm_iff)"], ["proof (state)\nthis:\n  (^) c \\<in> O((^) (complex_of_real R))\n\ngoal (1 subgoal):\n 1. at_infinity \\<le> at_infinity", "qed auto"], ["proof (state)\nthis:\n  (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n  \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)\n\ngoal (1 subgoal):\n 1. cmod c \\<noteq> R \\<Longrightarrow>\n    (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod c \\<noteq> R \\<Longrightarrow>\n    (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "case False  \\<comment>\\<open>The case of a root in the interior of the disc\\<close>"], ["proof (state)\nthis:\n  cmod c \\<noteq> R\n\ngoal (1 subgoal):\n 1. cmod c \\<noteq> R \\<Longrightarrow>\n    (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "hence \"norm c < R\""], ["proof (prove)\nusing this:\n  cmod c \\<noteq> R\n\ngoal (1 subgoal):\n 1. cmod c < R", "using c and roots1[of \"1/c\"] and \\<open>R > 0\\<close>"], ["proof (prove)\nusing this:\n  cmod c \\<noteq> R\n  c \\<in> {c. poly q' c = 0}\n  1 / c \\<in> ball 0 (1 / R) \\<Longrightarrow> poly q (1 / c) \\<noteq> 0\n  0 < R\n\ngoal (1 subgoal):\n 1. cmod c < R", "by (cases \"norm c\" R rule: linorder_cases)\n           (auto simp: q'_def poly_reflect_eq_0_iff norm_divide field_simps)"], ["proof (state)\nthis:\n  cmod c < R\n\ngoal (1 subgoal):\n 1. cmod c \\<noteq> R \\<Longrightarrow>\n    (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "define l where \"l = degree (rs c)\""], ["proof (state)\nthis:\n  l = degree (rs c)\n\ngoal (1 subgoal):\n 1. cmod c \\<noteq> R \\<Longrightarrow>\n    (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "have \"(\\<lambda>n. poly (rs c) (of_nat n) * c ^ n) \\<in> O(\\<lambda>n. of_nat n ^ l * c ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n    \\<in> O(\\<lambda>n. of_nat n ^ l * c ^ n)", "by (intro landau_o.big.mult landau_o.big.compose[OF poly_bigo tendsto_of_nat])\n           (auto simp: l_def)"], ["proof (state)\nthis:\n  (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n  \\<in> O(\\<lambda>n. of_nat n ^ l * c ^ n)\n\ngoal (1 subgoal):\n 1. cmod c \\<noteq> R \\<Longrightarrow>\n    (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "also"], ["proof (state)\nthis:\n  (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n  \\<in> O(\\<lambda>n. of_nat n ^ l * c ^ n)\n\ngoal (1 subgoal):\n 1. cmod c \\<noteq> R \\<Longrightarrow>\n    (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "have \"(\\<lambda>n. of_nat n ^ l * c ^ n) \\<in> O(\\<lambda>n. of_nat n ^ k * of_real R ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. of_nat n ^ l * c ^ n)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "proof (subst landau_o.big.norm_iff [symmetric])"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. cmod (of_nat x ^ l * c ^ x))\n    \\<in> O(\\<lambda>x. cmod (of_nat x ^ k * complex_of_real R ^ x))", "have \"(\\<lambda>n. real n ^ l) \\<in> O(\\<lambda>n. real n ^ k * (R / norm c) ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. real n ^ l)\n    \\<in> O(\\<lambda>n. real n ^ k * (R / cmod c) ^ n)", "using \\<open>norm c < R\\<close> and \\<open>R > 0\\<close>"], ["proof (prove)\nusing this:\n  cmod c < R\n  0 < R\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. real n ^ l)\n    \\<in> O(\\<lambda>n. real n ^ k * (R / cmod c) ^ n)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>n. real n ^ l)\n  \\<in> O(\\<lambda>n. real n ^ k * (R / cmod c) ^ n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. cmod (of_nat x ^ l * c ^ x))\n    \\<in> O(\\<lambda>x. cmod (of_nat x ^ k * complex_of_real R ^ x))", "hence \"(\\<lambda>n. real n ^ l * norm c ^ n) \\<in> O(\\<lambda>n. real n ^ k * R ^ n)\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. real n ^ l)\n  \\<in> O(\\<lambda>n. real n ^ k * (R / cmod c) ^ n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. real n ^ l * cmod c ^ n)\n    \\<in> O(\\<lambda>n. real n ^ k * R ^ n)", "by (simp add: power_divide landau_o.big.divide_eq1)"], ["proof (state)\nthis:\n  (\\<lambda>n. real n ^ l * cmod c ^ n)\n  \\<in> O(\\<lambda>n. real n ^ k * R ^ n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. cmod (of_nat x ^ l * c ^ x))\n    \\<in> O(\\<lambda>x. cmod (of_nat x ^ k * complex_of_real R ^ x))", "thus \"(\\<lambda>x. norm (of_nat x ^ l * c ^ x)) \\<in> \n                O(\\<lambda>x. norm (of_nat x ^ k * complex_of_real R ^ x))\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. real n ^ l * cmod c ^ n)\n  \\<in> O(\\<lambda>n. real n ^ k * R ^ n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. cmod (of_nat x ^ l * c ^ x))\n    \\<in> O(\\<lambda>x. cmod (of_nat x ^ k * complex_of_real R ^ x))", "unfolding norm_power norm_mult"], ["proof (prove)\nusing this:\n  (\\<lambda>n. real n ^ l * cmod c ^ n)\n  \\<in> O(\\<lambda>n. real n ^ k * R ^ n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. cmod (of_nat x) ^ l * cmod c ^ x)\n    \\<in> O(\\<lambda>x. cmod (of_nat x) ^ k * cmod (complex_of_real R) ^ x)", "using \\<open>R > 0\\<close>"], ["proof (prove)\nusing this:\n  (\\<lambda>n. real n ^ l * cmod c ^ n)\n  \\<in> O(\\<lambda>n. real n ^ k * R ^ n)\n  0 < R\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. cmod (of_nat x) ^ l * cmod c ^ x)\n    \\<in> O(\\<lambda>x. cmod (of_nat x) ^ k * cmod (complex_of_real R) ^ x)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. cmod (of_nat x ^ l * c ^ x))\n  \\<in> O(\\<lambda>x. cmod (of_nat x ^ k * complex_of_real R ^ x))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n. of_nat n ^ l * c ^ n)\n  \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)\n\ngoal (1 subgoal):\n 1. cmod c \\<noteq> R \\<Longrightarrow>\n    (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n  \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n  \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "."], ["proof (state)\nthis:\n  (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n  \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n. poly (rs c) (of_nat n) * c ^ n)\n  \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      coeff r n + (\\<Sum>c | poly q' c = 0. poly (rs c) (of_nat n) * c ^ n))\n  \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)\n\ngoal (1 subgoal):\n 1. ($) (fps_of_poly p / fps_of_poly q)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "finally"], ["proof (chain)\npicking this:\n  ($) (fps_of_poly p / fps_of_poly q)\n  \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "show ?thesis"], ["proof (prove)\nusing this:\n  ($) (fps_of_poly p / fps_of_poly q)\n  \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)\n\ngoal (1 subgoal):\n 1. ($) (fps_of_poly p / fps_of_poly q)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "."], ["proof (state)\nthis:\n  ($) (fps_of_poly p / fps_of_poly q)\n  \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma order_power: \"p \\<noteq> 0 \\<Longrightarrow> order c (p ^ n) = n * order c p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> order c (p ^ n) = n * order c p", "by (induction n) (auto simp: order_mult)"], ["", "lemma same_root_imp_not_coprime:\n  assumes \"poly p x = 0\" and \"poly q (x :: 'a :: {factorial_ring_gcd,semiring_gcd_mult_normalize}) = 0\"\n  shows   \"\\<not>coprime p q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> coprime p q", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. coprime p q \\<Longrightarrow> False", "assume \"coprime p q\""], ["proof (state)\nthis:\n  coprime p q\n\ngoal (1 subgoal):\n 1. coprime p q \\<Longrightarrow> False", "from assms"], ["proof (chain)\npicking this:\n  poly p x = (0::'a)\n  poly q x = (0::'a)", "have \"[:-x, 1:] dvd p\" and \"[:-x, 1:] dvd q\""], ["proof (prove)\nusing this:\n  poly p x = (0::'a)\n  poly q x = (0::'a)\n\ngoal (1 subgoal):\n 1. [:- x, 1::'a:] dvd p &&& [:- x, 1::'a:] dvd q", "by (simp_all add: poly_eq_0_iff_dvd)"], ["proof (state)\nthis:\n  [:- x, 1::'a:] dvd p\n  [:- x, 1::'a:] dvd q\n\ngoal (1 subgoal):\n 1. coprime p q \\<Longrightarrow> False", "hence \"[:-x, 1:] dvd gcd p q\""], ["proof (prove)\nusing this:\n  [:- x, 1::'a:] dvd p\n  [:- x, 1::'a:] dvd q\n\ngoal (1 subgoal):\n 1. [:- x, 1::'a:] dvd gcd p q", "by (simp add: poly_eq_0_iff_dvd)"], ["proof (state)\nthis:\n  [:- x, 1::'a:] dvd gcd p q\n\ngoal (1 subgoal):\n 1. coprime p q \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  [:- x, 1::'a:] dvd gcd p q\n\ngoal (1 subgoal):\n 1. coprime p q \\<Longrightarrow> False", "from \\<open>coprime p q\\<close>"], ["proof (chain)\npicking this:\n  coprime p q", "have \"gcd p q = 1\""], ["proof (prove)\nusing this:\n  coprime p q\n\ngoal (1 subgoal):\n 1. gcd p q = 1", "by (rule coprime_imp_gcd_eq_1)"], ["proof (state)\nthis:\n  gcd p q = 1\n\ngoal (1 subgoal):\n 1. coprime p q \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  is_unit [:- x, 1::'a:]", "show False"], ["proof (prove)\nusing this:\n  is_unit [:- x, 1::'a:]\n\ngoal (1 subgoal):\n 1. False", "by (elim is_unit_polyE) auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ratfps_nth_bigo_square_free_factorization:\n  fixes p :: \"complex poly\"\n  assumes \"square_free_factorization q (b, cs)\"\n  assumes \"q \\<noteq> 0\" and \"R > 0\"\n  assumes roots1: \"\\<And>c l. (c, l) \\<in> set cs \\<Longrightarrow> \\<forall>x\\<in>ball 0 (1 / R). poly c x \\<noteq> 0\"\n  assumes roots2: \"\\<And>c l. (c, l) \\<in> set cs \\<Longrightarrow> l > k \\<Longrightarrow> \\<forall>x\\<in>sphere 0 (1 / R). poly c x \\<noteq> 0\"\n  shows   \"fps_nth (fps_of_poly p / fps_of_poly q) \\<in> O(\\<lambda>n. of_nat n ^ k * of_real R ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (fps_of_poly p / fps_of_poly q)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ($) (fps_of_poly p / fps_of_poly q)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "from assms(1)"], ["proof (chain)\npicking this:\n  square_free_factorization q (b, cs)", "have q: \"q = smult b (\\<Prod>(c, l)\\<in>set cs. c ^ Suc l)\""], ["proof (prove)\nusing this:\n  square_free_factorization q (b, cs)\n\ngoal (1 subgoal):\n 1. q = smult b (\\<Prod>(c, l)\\<in>set cs. c ^ Suc l)", "unfolding square_free_factorization_def prod.case"], ["proof (prove)\nusing this:\n  q = smult b (\\<Prod>(a, i)\\<in>set cs. a ^ Suc i) \\<and>\n  (q = 0 \\<longrightarrow> b = 0 \\<and> cs = []) \\<and>\n  (\\<forall>a i.\n      (a, i) \\<in> set cs \\<longrightarrow>\n      square_free a \\<and> 0 < degree a) \\<and>\n  (\\<forall>a i b j.\n      (a, i) \\<in> set cs \\<longrightarrow>\n      (b, j) \\<in> set cs \\<longrightarrow>\n      (a, i) \\<noteq> (b, j) \\<longrightarrow> coprime a b) \\<and>\n  distinct cs\n\ngoal (1 subgoal):\n 1. q = smult b (\\<Prod>(c, l)\\<in>set cs. c ^ Suc l)", "by blast"], ["proof (state)\nthis:\n  q = smult b (\\<Prod>(c, l)\\<in>set cs. c ^ Suc l)\n\ngoal (1 subgoal):\n 1. ($) (fps_of_poly p / fps_of_poly q)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "with \\<open>q \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  q \\<noteq> 0\n  q = smult b (\\<Prod>(c, l)\\<in>set cs. c ^ Suc l)", "have [simp]: \"b \\<noteq> 0\""], ["proof (prove)\nusing this:\n  q \\<noteq> 0\n  q = smult b (\\<Prod>(c, l)\\<in>set cs. c ^ Suc l)\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ($) (fps_of_poly p / fps_of_poly q)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "from assms(1)"], ["proof (chain)\npicking this:\n  square_free_factorization q (b, cs)", "have [simp]: \"(0, x) \\<notin> set cs\" for x"], ["proof (prove)\nusing this:\n  square_free_factorization q (b, cs)\n\ngoal (1 subgoal):\n 1. (0, x) \\<notin> set cs", "by (auto simp: square_free_factorization_def)"], ["proof (state)\nthis:\n  (0, ?x) \\<notin> set cs\n\ngoal (1 subgoal):\n 1. ($) (fps_of_poly p / fps_of_poly q)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "from assms(1)"], ["proof (chain)\npicking this:\n  square_free_factorization q (b, cs)", "have coprime: \"c1 = c2\" \"m = n\"\n    if \"\\<not>coprime c1 c2\" \"(c1, m) \\<in> set cs\" \"(c2, n) \\<in> set cs\" for c1 c2 m n"], ["proof (prove)\nusing this:\n  square_free_factorization q (b, cs)\n\ngoal (1 subgoal):\n 1. c1 = c2 &&& m = n", "using that"], ["proof (prove)\nusing this:\n  square_free_factorization q (b, cs)\n  \\<not> coprime c1 c2\n  (c1, m) \\<in> set cs\n  (c2, n) \\<in> set cs\n\ngoal (1 subgoal):\n 1. c1 = c2 &&& m = n", "by (auto simp: square_free_factorization_def case_prod_unfold)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<not> coprime ?c1.0 ?c2.0; (?c1.0, ?m) \\<in> set cs;\n   (?c2.0, ?n) \\<in> set cs\\<rbrakk>\n  \\<Longrightarrow> ?c1.0 = ?c2.0\n  \\<lbrakk>\\<not> coprime ?c1.0 ?c2.0; (?c1.0, ?m) \\<in> set cs;\n   (?c2.0, ?n) \\<in> set cs\\<rbrakk>\n  \\<Longrightarrow> ?m = ?n\n\ngoal (1 subgoal):\n 1. ($) (fps_of_poly p / fps_of_poly q)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (fps_of_poly p / fps_of_poly q)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "proof (rule ratfps_nth_bigo)"], ["proof (state)\ngoal (3 subgoals):\n 1. 0 < R\n 2. \\<And>z. z \\<in> ball 0 (1 / R) \\<Longrightarrow> poly q z \\<noteq> 0\n 3. \\<And>z.\n       \\<lbrakk>z \\<in> sphere 0 (1 / R); poly q z = 0\\<rbrakk>\n       \\<Longrightarrow> order z q \\<le> Suc k", "fix z :: complex"], ["proof (state)\ngoal (3 subgoals):\n 1. 0 < R\n 2. \\<And>z. z \\<in> ball 0 (1 / R) \\<Longrightarrow> poly q z \\<noteq> 0\n 3. \\<And>z.\n       \\<lbrakk>z \\<in> sphere 0 (1 / R); poly q z = 0\\<rbrakk>\n       \\<Longrightarrow> order z q \\<le> Suc k", "assume z: \"z \\<in> ball 0 (1 / R)\""], ["proof (state)\nthis:\n  z \\<in> ball 0 (1 / R)\n\ngoal (3 subgoals):\n 1. 0 < R\n 2. \\<And>z. z \\<in> ball 0 (1 / R) \\<Longrightarrow> poly q z \\<noteq> 0\n 3. \\<And>z.\n       \\<lbrakk>z \\<in> sphere 0 (1 / R); poly q z = 0\\<rbrakk>\n       \\<Longrightarrow> order z q \\<le> Suc k", "show \"poly q z \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly q z \\<noteq> 0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. poly q z = 0 \\<Longrightarrow> False", "assume \"poly q z = 0\""], ["proof (state)\nthis:\n  poly q z = 0\n\ngoal (1 subgoal):\n 1. poly q z = 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  poly q z = 0", "obtain c l where cl: \"(c, l) \\<in> set cs\" and \"poly c z = 0\""], ["proof (prove)\nusing this:\n  poly q z = 0\n\ngoal (1 subgoal):\n 1. (\\<And>c l.\n        \\<lbrakk>(c, l) \\<in> set cs; poly c z = 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: q poly_prod image_iff)"], ["proof (state)\nthis:\n  (c, l) \\<in> set cs\n  poly c z = 0\n\ngoal (1 subgoal):\n 1. poly q z = 0 \\<Longrightarrow> False", "with roots1[of c l] and z"], ["proof (chain)\npicking this:\n  (c, l) \\<in> set cs \\<Longrightarrow>\n  \\<forall>x\\<in>ball 0 (1 / R). poly c x \\<noteq> 0\n  z \\<in> ball 0 (1 / R)\n  (c, l) \\<in> set cs\n  poly c z = 0", "show False"], ["proof (prove)\nusing this:\n  (c, l) \\<in> set cs \\<Longrightarrow>\n  \\<forall>x\\<in>ball 0 (1 / R). poly c x \\<noteq> 0\n  z \\<in> ball 0 (1 / R)\n  (c, l) \\<in> set cs\n  poly c z = 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  poly q z \\<noteq> 0\n\ngoal (2 subgoals):\n 1. 0 < R\n 2. \\<And>z.\n       \\<lbrakk>z \\<in> sphere 0 (1 / R); poly q z = 0\\<rbrakk>\n       \\<Longrightarrow> order z q \\<le> Suc k", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < R\n 2. \\<And>z.\n       \\<lbrakk>z \\<in> sphere 0 (1 / R); poly q z = 0\\<rbrakk>\n       \\<Longrightarrow> order z q \\<le> Suc k", "fix z :: complex"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < R\n 2. \\<And>z.\n       \\<lbrakk>z \\<in> sphere 0 (1 / R); poly q z = 0\\<rbrakk>\n       \\<Longrightarrow> order z q \\<le> Suc k", "assume z: \"z \\<in> sphere 0 (1 / R)\""], ["proof (state)\nthis:\n  z \\<in> sphere 0 (1 / R)\n\ngoal (2 subgoals):\n 1. 0 < R\n 2. \\<And>z.\n       \\<lbrakk>z \\<in> sphere 0 (1 / R); poly q z = 0\\<rbrakk>\n       \\<Longrightarrow> order z q \\<le> Suc k", "have order: \"order z q = order z (\\<Prod>(c, l)\\<in>set cs. c ^ Suc l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order z q = order z (\\<Prod>(c, l)\\<in>set cs. c ^ Suc l)", "by (simp add: order_smult q)"], ["proof (state)\nthis:\n  order z q = order z (\\<Prod>(c, l)\\<in>set cs. c ^ Suc l)\n\ngoal (2 subgoals):\n 1. 0 < R\n 2. \\<And>z.\n       \\<lbrakk>z \\<in> sphere 0 (1 / R); poly q z = 0\\<rbrakk>\n       \\<Longrightarrow> order z q \\<le> Suc k", "also"], ["proof (state)\nthis:\n  order z q = order z (\\<Prod>(c, l)\\<in>set cs. c ^ Suc l)\n\ngoal (2 subgoals):\n 1. 0 < R\n 2. \\<And>z.\n       \\<lbrakk>z \\<in> sphere 0 (1 / R); poly q z = 0\\<rbrakk>\n       \\<Longrightarrow> order z q \\<le> Suc k", "have \"\\<dots> = (\\<Sum>x\\<in>set cs. order z (case x of (c, l) \\<Rightarrow> c ^ Suc l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order z (\\<Prod>(c, l)\\<in>set cs. c ^ Suc l) =\n    (\\<Sum>x\\<in>set cs. order z (case x of (c, l) \\<Rightarrow> c ^ Suc l))", "by (subst order_prod) (auto dest: coprime)"], ["proof (state)\nthis:\n  order z (\\<Prod>(c, l)\\<in>set cs. c ^ Suc l) =\n  (\\<Sum>x\\<in>set cs. order z (case x of (c, l) \\<Rightarrow> c ^ Suc l))\n\ngoal (2 subgoals):\n 1. 0 < R\n 2. \\<And>z.\n       \\<lbrakk>z \\<in> sphere 0 (1 / R); poly q z = 0\\<rbrakk>\n       \\<Longrightarrow> order z q \\<le> Suc k", "also"], ["proof (state)\nthis:\n  order z (\\<Prod>(c, l)\\<in>set cs. c ^ Suc l) =\n  (\\<Sum>x\\<in>set cs. order z (case x of (c, l) \\<Rightarrow> c ^ Suc l))\n\ngoal (2 subgoals):\n 1. 0 < R\n 2. \\<And>z.\n       \\<lbrakk>z \\<in> sphere 0 (1 / R); poly q z = 0\\<rbrakk>\n       \\<Longrightarrow> order z q \\<le> Suc k", "have \"\\<dots> = (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>set cs.\n       order z (case x of (c, l) \\<Rightarrow> c ^ Suc l)) =\n    (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c)", "unfolding case_prod_unfold"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>set cs. order z (fst x ^ Suc (snd x))) =\n    (\\<Sum>p\\<in>set cs. Suc (snd p) * order z (fst p))", "by (intro sum.cong refl, subst order_power) auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>set cs. order z (case x of (c, l) \\<Rightarrow> c ^ Suc l)) =\n  (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c)\n\ngoal (2 subgoals):\n 1. 0 < R\n 2. \\<And>z.\n       \\<lbrakk>z \\<in> sphere 0 (1 / R); poly q z = 0\\<rbrakk>\n       \\<Longrightarrow> order z q \\<le> Suc k", "finally"], ["proof (chain)\npicking this:\n  order z q = (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c)", "have \"order z q = \\<dots>\""], ["proof (prove)\nusing this:\n  order z q = (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c)\n\ngoal (1 subgoal):\n 1. order z q = (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c)", "."], ["proof (state)\nthis:\n  order z q = (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c)\n\ngoal (2 subgoals):\n 1. 0 < R\n 2. \\<And>z.\n       \\<lbrakk>z \\<in> sphere 0 (1 / R); poly q z = 0\\<rbrakk>\n       \\<Longrightarrow> order z q \\<le> Suc k", "show \"order z q \\<le> Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order z q \\<le> Suc k", "proof (cases \"\\<exists>c0 l0. (c0, l0) \\<in> set cs \\<and> poly c0 z = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k\n 2. \\<nexists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "case False"], ["proof (state)\nthis:\n  \\<nexists>c0 l0. (c0, l0) \\<in> set cs \\<and> poly c0 z = 0\n\ngoal (2 subgoals):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k\n 2. \\<nexists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "have \"order z q = (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order z q = (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c)", "by fact"], ["proof (state)\nthis:\n  order z q = (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c)\n\ngoal (2 subgoals):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k\n 2. \\<nexists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "also"], ["proof (state)\nthis:\n  order z q = (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c)\n\ngoal (2 subgoals):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k\n 2. \\<nexists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "have \"order z c = 0\" if \"(c, l) \\<in> set cs\" for c l"], ["proof (prove)\ngoal (1 subgoal):\n 1. order z c = 0", "using False that"], ["proof (prove)\nusing this:\n  \\<nexists>c0 l0. (c0, l0) \\<in> set cs \\<and> poly c0 z = 0\n  (c, l) \\<in> set cs\n\ngoal (1 subgoal):\n 1. order z c = 0", "by (auto simp: order_root)"], ["proof (state)\nthis:\n  (?c, ?l) \\<in> set cs \\<Longrightarrow> order z ?c = 0\n\ngoal (2 subgoals):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k\n 2. \\<nexists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "hence \"(\\<Sum>(c, l)\\<in>set cs. Suc l * order z c) = 0\""], ["proof (prove)\nusing this:\n  (?c, ?l) \\<in> set cs \\<Longrightarrow> order z ?c = 0\n\ngoal (1 subgoal):\n 1. (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c) = 0", "by (intro sum.neutral) auto"], ["proof (state)\nthis:\n  (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c) = 0\n\ngoal (2 subgoals):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k\n 2. \\<nexists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "finally"], ["proof (chain)\npicking this:\n  order z q = 0", "show \"order z q \\<le> Suc k\""], ["proof (prove)\nusing this:\n  order z q = 0\n\ngoal (1 subgoal):\n 1. order z q \\<le> Suc k", "by simp"], ["proof (state)\nthis:\n  order z q \\<le> Suc k\n\ngoal (1 subgoal):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "case True \\<comment>\\<open>The order of a root is determined by the unique polynomial in the\n                   square-free factorisation that contains it.\\<close>"], ["proof (state)\nthis:\n  \\<exists>c0 l0. (c0, l0) \\<in> set cs \\<and> poly c0 z = 0\n\ngoal (1 subgoal):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "then"], ["proof (chain)\npicking this:\n  \\<exists>c0 l0. (c0, l0) \\<in> set cs \\<and> poly c0 z = 0", "obtain c0 l0 where cl0: \"(c0, l0) \\<in> set cs\" \"poly c0 z = 0\""], ["proof (prove)\nusing this:\n  \\<exists>c0 l0. (c0, l0) \\<in> set cs \\<and> poly c0 z = 0\n\ngoal (1 subgoal):\n 1. (\\<And>c0 l0.\n        \\<lbrakk>(c0, l0) \\<in> set cs; poly c0 z = 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (c0, l0) \\<in> set cs\n  poly c0 z = 0\n\ngoal (1 subgoal):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "have \"order z q = (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order z q = (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c)", "by fact"], ["proof (state)\nthis:\n  order z q = (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c)\n\ngoal (1 subgoal):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "also"], ["proof (state)\nthis:\n  order z q = (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c)\n\ngoal (1 subgoal):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "have \"\\<dots> = Suc l0 * order z c0 + (\\<Sum>(c, l) \\<in> set cs - {(c0, l0)}. Suc l * order z c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c) =\n    Suc l0 * order z c0 +\n    (\\<Sum>(c, l)\\<in>set cs - {(c0, l0)}. Suc l * order z c)", "using cl0"], ["proof (prove)\nusing this:\n  (c0, l0) \\<in> set cs\n  poly c0 z = 0\n\ngoal (1 subgoal):\n 1. (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c) =\n    Suc l0 * order z c0 +\n    (\\<Sum>(c, l)\\<in>set cs - {(c0, l0)}. Suc l * order z c)", "by (subst sum.remove[of _ \"(c0, l0)\"]) auto"], ["proof (state)\nthis:\n  (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c) =\n  Suc l0 * order z c0 +\n  (\\<Sum>(c, l)\\<in>set cs - {(c0, l0)}. Suc l * order z c)\n\ngoal (1 subgoal):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "also"], ["proof (state)\nthis:\n  (\\<Sum>(c, l)\\<in>set cs. Suc l * order z c) =\n  Suc l0 * order z c0 +\n  (\\<Sum>(c, l)\\<in>set cs - {(c0, l0)}. Suc l * order z c)\n\ngoal (1 subgoal):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "have \"(\\<Sum>(c, l) \\<in> set cs - {(c0, l0)}. Suc l * order z c) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(c, l)\\<in>set cs - {(c0, l0)}. Suc l * order z c) = 0", "proof (intro sum.neutral ballI, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set cs - {(c0, l0)} \\<Longrightarrow>\n       (case x of (c, l) \\<Rightarrow> Suc l * order z c) = 0", "case (1 cl)"], ["proof (state)\nthis:\n  cl \\<in> set cs - {(c0, l0)}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set cs - {(c0, l0)} \\<Longrightarrow>\n       (case x of (c, l) \\<Rightarrow> Suc l * order z c) = 0", "then"], ["proof (chain)\npicking this:\n  cl \\<in> set cs - {(c0, l0)}", "obtain c l where [simp]: \"cl = (c, l)\" and cl: \"(c, l) \\<in> set cs\" \"(c0, l0) \\<noteq> (c, l)\""], ["proof (prove)\nusing this:\n  cl \\<in> set cs - {(c0, l0)}\n\ngoal (1 subgoal):\n 1. (\\<And>c l.\n        \\<lbrakk>cl = (c, l); (c, l) \\<in> set cs;\n         (c0, l0) \\<noteq> (c, l)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases cl) auto"], ["proof (state)\nthis:\n  cl = (c, l)\n  (c, l) \\<in> set cs\n  (c0, l0) \\<noteq> (c, l)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set cs - {(c0, l0)} \\<Longrightarrow>\n       (case x of (c, l) \\<Rightarrow> Suc l * order z c) = 0", "from cl and cl0 and coprime[of c c0 l l0]"], ["proof (chain)\npicking this:\n  (c, l) \\<in> set cs\n  (c0, l0) \\<noteq> (c, l)\n  (c0, l0) \\<in> set cs\n  poly c0 z = 0\n  \\<lbrakk>\\<not> coprime c c0; (c, l) \\<in> set cs;\n   (c0, l0) \\<in> set cs\\<rbrakk>\n  \\<Longrightarrow> c = c0\n  \\<lbrakk>\\<not> coprime c c0; (c, l) \\<in> set cs;\n   (c0, l0) \\<in> set cs\\<rbrakk>\n  \\<Longrightarrow> l = l0", "have \"coprime c c0\""], ["proof (prove)\nusing this:\n  (c, l) \\<in> set cs\n  (c0, l0) \\<noteq> (c, l)\n  (c0, l0) \\<in> set cs\n  poly c0 z = 0\n  \\<lbrakk>\\<not> coprime c c0; (c, l) \\<in> set cs;\n   (c0, l0) \\<in> set cs\\<rbrakk>\n  \\<Longrightarrow> c = c0\n  \\<lbrakk>\\<not> coprime c c0; (c, l) \\<in> set cs;\n   (c0, l0) \\<in> set cs\\<rbrakk>\n  \\<Longrightarrow> l = l0\n\ngoal (1 subgoal):\n 1. coprime c c0", "by auto"], ["proof (state)\nthis:\n  coprime c c0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set cs - {(c0, l0)} \\<Longrightarrow>\n       (case x of (c, l) \\<Rightarrow> Suc l * order z c) = 0", "with same_root_imp_not_coprime[of c z c0] and cl0"], ["proof (chain)\npicking this:\n  \\<lbrakk>poly c z = 0; poly c0 z = 0\\<rbrakk>\n  \\<Longrightarrow> \\<not> coprime c c0\n  (c0, l0) \\<in> set cs\n  poly c0 z = 0\n  coprime c c0", "have \"poly c z \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>poly c z = 0; poly c0 z = 0\\<rbrakk>\n  \\<Longrightarrow> \\<not> coprime c c0\n  (c0, l0) \\<in> set cs\n  poly c0 z = 0\n  coprime c c0\n\ngoal (1 subgoal):\n 1. poly c z \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  poly c z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set cs - {(c0, l0)} \\<Longrightarrow>\n       (case x of (c, l) \\<Rightarrow> Suc l * order z c) = 0", "thus ?case"], ["proof (prove)\nusing this:\n  poly c z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (case cl of (c, l) \\<Rightarrow> Suc l * order z c) = 0", "by (auto simp: order_root)"], ["proof (state)\nthis:\n  (case cl of (c, l) \\<Rightarrow> Suc l * order z c) = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>(c, l)\\<in>set cs - {(c0, l0)}. Suc l * order z c) = 0\n\ngoal (1 subgoal):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "also"], ["proof (state)\nthis:\n  (\\<Sum>(c, l)\\<in>set cs - {(c0, l0)}. Suc l * order z c) = 0\n\ngoal (1 subgoal):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "have \"square_free c0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. square_free c0", "using cl0 assms(1)"], ["proof (prove)\nusing this:\n  (c0, l0) \\<in> set cs\n  poly c0 z = 0\n  square_free_factorization q (b, cs)\n\ngoal (1 subgoal):\n 1. square_free c0", "by (auto simp: square_free_factorization_def)"], ["proof (state)\nthis:\n  square_free c0\n\ngoal (1 subgoal):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "hence \"rsquarefree c0\""], ["proof (prove)\nusing this:\n  square_free c0\n\ngoal (1 subgoal):\n 1. rsquarefree c0", "by (rule square_free_rsquarefree)"], ["proof (state)\nthis:\n  rsquarefree c0\n\ngoal (1 subgoal):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "with cl0"], ["proof (chain)\npicking this:\n  (c0, l0) \\<in> set cs\n  poly c0 z = 0\n  rsquarefree c0", "have \"order z c0 = 1\""], ["proof (prove)\nusing this:\n  (c0, l0) \\<in> set cs\n  poly c0 z = 0\n  rsquarefree c0\n\ngoal (1 subgoal):\n 1. order z c0 = 1", "by (auto simp: rsquarefree_def' order_root intro: antisym)"], ["proof (state)\nthis:\n  order z c0 = 1\n\ngoal (1 subgoal):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "finally"], ["proof (chain)\npicking this:\n  order z q = Suc l0 * 1 + 0", "have \"order z q = Suc l0\""], ["proof (prove)\nusing this:\n  order z q = Suc l0 * 1 + 0\n\ngoal (1 subgoal):\n 1. order z q = Suc l0", "by simp"], ["proof (state)\nthis:\n  order z q = Suc l0\n\ngoal (1 subgoal):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "also"], ["proof (state)\nthis:\n  order z q = Suc l0\n\ngoal (1 subgoal):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "from roots2[of c0 l0] cl0 z"], ["proof (chain)\npicking this:\n  \\<lbrakk>(c0, l0) \\<in> set cs; k < l0\\<rbrakk>\n  \\<Longrightarrow> \\<forall>x\\<in>sphere 0 (1 / R). poly c0 x \\<noteq> 0\n  (c0, l0) \\<in> set cs\n  poly c0 z = 0\n  z \\<in> sphere 0 (1 / R)", "have \"l0 \\<le> k\""], ["proof (prove)\nusing this:\n  \\<lbrakk>(c0, l0) \\<in> set cs; k < l0\\<rbrakk>\n  \\<Longrightarrow> \\<forall>x\\<in>sphere 0 (1 / R). poly c0 x \\<noteq> 0\n  (c0, l0) \\<in> set cs\n  poly c0 z = 0\n  z \\<in> sphere 0 (1 / R)\n\ngoal (1 subgoal):\n 1. l0 \\<le> k", "by (cases l0 k rule: linorder_cases) auto"], ["proof (state)\nthis:\n  l0 \\<le> k\n\ngoal (1 subgoal):\n 1. \\<exists>c0 l0.\n       (c0, l0) \\<in> set cs \\<and> poly c0 z = 0 \\<Longrightarrow>\n    order z q \\<le> Suc k", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> Suc x \\<le> Suc y) \\<Longrightarrow>\n  order z q \\<le> Suc k", "show \"order z q \\<le> Suc k\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> Suc x \\<le> Suc y) \\<Longrightarrow>\n  order z q \\<le> Suc k\n\ngoal (1 subgoal):\n 1. order z q \\<le> Suc k", "by simp"], ["proof (state)\nthis:\n  order z q \\<le> Suc k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  order z q \\<le> Suc k\n\ngoal (1 subgoal):\n 1. 0 < R", "qed fact+"], ["proof (state)\nthis:\n  ($) (fps_of_poly p / fps_of_poly q)\n  \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)\n\ngoal:\nNo subgoals!", "qed"], ["", "find_consts name:\"Count_Complex\""], ["", "term proots_ball_card"], ["", "term proots_sphere_card"], ["", "lemma proots_within_card_zero_iff:\n  assumes \"p \\<noteq> (0 :: 'a :: idom poly)\"\n  shows   \"card (proots_within p A) = 0 \\<longleftrightarrow> (\\<forall>x\\<in>A. poly p x \\<noteq> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (card (proots_within p A) = 0) =\n    (\\<forall>x\\<in>A. poly p x \\<noteq> (0::'a))", "using assms"], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (card (proots_within p A) = 0) =\n    (\\<forall>x\\<in>A. poly p x \\<noteq> (0::'a))", "by (subst card_0_eq) (auto intro: finite_proots)"], ["", "lemma ratfps_nth_bigo_square_free_factorization':\n  fixes p :: \"complex poly\"\n  assumes \"square_free_factorization q (b, cs)\"\n  assumes \"q \\<noteq> 0\" and \"R > 0\"\n  assumes roots1: \"list_all (\\<lambda>cl. proots_ball_card (fst cl) 0 (1 / R) = 0) cs\"\n  assumes roots2: \"list_all (\\<lambda>cl. proots_sphere_card (fst cl) 0 (1 / R) = 0)\n                     (filter (\\<lambda>cl. snd cl > k) cs)\"\n  shows   \"fps_nth (fps_of_poly p / fps_of_poly q) \\<in> O(\\<lambda>n. of_nat n ^ k * of_real R ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (fps_of_poly p / fps_of_poly q)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "proof (rule ratfps_nth_bigo_square_free_factorization[OF assms(1)])"], ["proof (state)\ngoal (4 subgoals):\n 1. q \\<noteq> 0\n 2. 0 < R\n 3. \\<And>c l.\n       (c, l) \\<in> set cs \\<Longrightarrow>\n       \\<forall>x\\<in>ball 0 (1 / R). poly c x \\<noteq> 0\n 4. \\<And>c l.\n       \\<lbrakk>(c, l) \\<in> set cs; k < l\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>sphere 0 (1 / R).\n                            poly c x \\<noteq> 0", "from assms(1)"], ["proof (chain)\npicking this:\n  square_free_factorization q (b, cs)", "have q: \"q = smult b (\\<Prod>(c, l)\\<in>set cs. c ^ Suc l)\""], ["proof (prove)\nusing this:\n  square_free_factorization q (b, cs)\n\ngoal (1 subgoal):\n 1. q = smult b (\\<Prod>(c, l)\\<in>set cs. c ^ Suc l)", "unfolding square_free_factorization_def prod.case"], ["proof (prove)\nusing this:\n  q = smult b (\\<Prod>(a, i)\\<in>set cs. a ^ Suc i) \\<and>\n  (q = 0 \\<longrightarrow> b = 0 \\<and> cs = []) \\<and>\n  (\\<forall>a i.\n      (a, i) \\<in> set cs \\<longrightarrow>\n      square_free a \\<and> 0 < degree a) \\<and>\n  (\\<forall>a i b j.\n      (a, i) \\<in> set cs \\<longrightarrow>\n      (b, j) \\<in> set cs \\<longrightarrow>\n      (a, i) \\<noteq> (b, j) \\<longrightarrow> coprime a b) \\<and>\n  distinct cs\n\ngoal (1 subgoal):\n 1. q = smult b (\\<Prod>(c, l)\\<in>set cs. c ^ Suc l)", "by blast"], ["proof (state)\nthis:\n  q = smult b (\\<Prod>(c, l)\\<in>set cs. c ^ Suc l)\n\ngoal (4 subgoals):\n 1. q \\<noteq> 0\n 2. 0 < R\n 3. \\<And>c l.\n       (c, l) \\<in> set cs \\<Longrightarrow>\n       \\<forall>x\\<in>ball 0 (1 / R). poly c x \\<noteq> 0\n 4. \\<And>c l.\n       \\<lbrakk>(c, l) \\<in> set cs; k < l\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>sphere 0 (1 / R).\n                            poly c x \\<noteq> 0", "with \\<open>q \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  q \\<noteq> 0\n  q = smult b (\\<Prod>(c, l)\\<in>set cs. c ^ Suc l)", "have [simp]: \"b \\<noteq> 0\""], ["proof (prove)\nusing this:\n  q \\<noteq> 0\n  q = smult b (\\<Prod>(c, l)\\<in>set cs. c ^ Suc l)\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  b \\<noteq> 0\n\ngoal (4 subgoals):\n 1. q \\<noteq> 0\n 2. 0 < R\n 3. \\<And>c l.\n       (c, l) \\<in> set cs \\<Longrightarrow>\n       \\<forall>x\\<in>ball 0 (1 / R). poly c x \\<noteq> 0\n 4. \\<And>c l.\n       \\<lbrakk>(c, l) \\<in> set cs; k < l\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>sphere 0 (1 / R).\n                            poly c x \\<noteq> 0", "from assms(1)"], ["proof (chain)\npicking this:\n  square_free_factorization q (b, cs)", "have [simp]: \"(0, x) \\<notin> set cs\" for x"], ["proof (prove)\nusing this:\n  square_free_factorization q (b, cs)\n\ngoal (1 subgoal):\n 1. (0, x) \\<notin> set cs", "by (auto simp: square_free_factorization_def)"], ["proof (state)\nthis:\n  (0, ?x) \\<notin> set cs\n\ngoal (4 subgoals):\n 1. q \\<noteq> 0\n 2. 0 < R\n 3. \\<And>c l.\n       (c, l) \\<in> set cs \\<Longrightarrow>\n       \\<forall>x\\<in>ball 0 (1 / R). poly c x \\<noteq> 0\n 4. \\<And>c l.\n       \\<lbrakk>(c, l) \\<in> set cs; k < l\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>sphere 0 (1 / R).\n                            poly c x \\<noteq> 0", "show \"\\<forall>x\\<in>ball 0 (1 / R). poly c x \\<noteq> 0\" if \"(c, l) \\<in> set cs\" for c l"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>ball 0 (1 / R). poly c x \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>ball 0 (1 / R). poly c x \\<noteq> 0", "from roots1 that"], ["proof (chain)\npicking this:\n  list_all (\\<lambda>cl. proots_ball_card (fst cl) 0 (1 / R) = 0) cs\n  (c, l) \\<in> set cs", "have \"card (proots_within c (ball 0 (1 / R))) = 0\""], ["proof (prove)\nusing this:\n  list_all (\\<lambda>cl. proots_ball_card (fst cl) 0 (1 / R) = 0) cs\n  (c, l) \\<in> set cs\n\ngoal (1 subgoal):\n 1. card (proots_within c (ball 0 (1 / R))) = 0", "by (auto simp: proots_ball_card_def list_all_def)"], ["proof (state)\nthis:\n  card (proots_within c (ball 0 (1 / R))) = 0\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>ball 0 (1 / R). poly c x \\<noteq> 0", "with that"], ["proof (chain)\npicking this:\n  (c, l) \\<in> set cs\n  card (proots_within c (ball 0 (1 / R))) = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  (c, l) \\<in> set cs\n  card (proots_within c (ball 0 (1 / R))) = 0\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>ball 0 (1 / R). poly c x \\<noteq> 0", "by (subst (asm) proots_within_card_zero_iff) auto"], ["proof (state)\nthis:\n  \\<forall>x\\<in>ball 0 (1 / R). poly c x \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (?c, ?l) \\<in> set cs \\<Longrightarrow>\n  \\<forall>x\\<in>ball 0 (1 / R). poly ?c x \\<noteq> 0\n\ngoal (3 subgoals):\n 1. q \\<noteq> 0\n 2. 0 < R\n 3. \\<And>c l.\n       \\<lbrakk>(c, l) \\<in> set cs; k < l\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>sphere 0 (1 / R).\n                            poly c x \\<noteq> 0", "show \"\\<forall>x\\<in>sphere 0 (1 / R). poly c x \\<noteq> 0\" if \"(c, l) \\<in> set cs\" \"l > k\" for c l"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>sphere 0 (1 / R). poly c x \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>sphere 0 (1 / R). poly c x \\<noteq> 0", "from roots2 that"], ["proof (chain)\npicking this:\n  list_all (\\<lambda>cl. proots_sphere_card (fst cl) 0 (1 / R) = 0)\n   (filter (\\<lambda>cl. k < snd cl) cs)\n  (c, l) \\<in> set cs\n  k < l", "have \"card (proots_within c (sphere 0 (1 / R))) = 0\""], ["proof (prove)\nusing this:\n  list_all (\\<lambda>cl. proots_sphere_card (fst cl) 0 (1 / R) = 0)\n   (filter (\\<lambda>cl. k < snd cl) cs)\n  (c, l) \\<in> set cs\n  k < l\n\ngoal (1 subgoal):\n 1. card (proots_within c (sphere 0 (1 / R))) = 0", "by (auto simp: proots_sphere_card_def list_all_def)"], ["proof (state)\nthis:\n  card (proots_within c (sphere 0 (1 / R))) = 0\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>sphere 0 (1 / R). poly c x \\<noteq> 0", "with that"], ["proof (chain)\npicking this:\n  (c, l) \\<in> set cs\n  k < l\n  card (proots_within c (sphere 0 (1 / R))) = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  (c, l) \\<in> set cs\n  k < l\n  card (proots_within c (sphere 0 (1 / R))) = 0\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>sphere 0 (1 / R). poly c x \\<noteq> 0", "by (subst (asm) proots_within_card_zero_iff) auto"], ["proof (state)\nthis:\n  \\<forall>x\\<in>sphere 0 (1 / R). poly c x \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>(?c, ?l) \\<in> set cs; k < ?l\\<rbrakk>\n  \\<Longrightarrow> \\<forall>x\\<in>sphere 0 (1 / R). poly ?c x \\<noteq> 0\n\ngoal (2 subgoals):\n 1. q \\<noteq> 0\n 2. 0 < R", "qed fact+"], ["", "definition ratfps_has_asymptotics where\n  \"ratfps_has_asymptotics q k R \\<longleftrightarrow> q \\<noteq> 0 \\<and> R > 0 \\<and>\n     (let cs = snd (yun_factorization gcd q)\n      in  list_all (\\<lambda>cl. proots_ball_card (fst cl) 0 (1 / R) = 0) cs \\<and>\n          list_all (\\<lambda>cl. proots_sphere_card (fst cl) 0 (1 / R) = 0) (filter (\\<lambda>cl. snd cl > k) cs))\""], ["", "lemma ratfps_has_asymptotics_correct:\n  assumes \"ratfps_has_asymptotics q k R\"\n  shows   \"fps_nth (fps_of_poly p / fps_of_poly q) \\<in> O(\\<lambda>n. of_nat n ^ k * of_real R ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (fps_of_poly p / fps_of_poly q)\n    \\<in> O(\\<lambda>n. of_nat n ^ k * complex_of_real R ^ n)", "proof (rule ratfps_nth_bigo_square_free_factorization')"], ["proof (state)\ngoal (5 subgoals):\n 1. square_free_factorization q (?b, ?cs)\n 2. q \\<noteq> 0\n 3. 0 < R\n 4. list_all (\\<lambda>cl. proots_ball_card (fst cl) 0 (1 / R) = 0) ?cs\n 5. list_all (\\<lambda>cl. proots_sphere_card (fst cl) 0 (1 / R) = 0)\n     (filter (\\<lambda>cl. k < snd cl) ?cs)", "show \"square_free_factorization q (fst (yun_factorization gcd q), snd (yun_factorization gcd q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. square_free_factorization q\n     (fst (yun_factorization gcd q), snd (yun_factorization gcd q))", "by (rule yun_factorization) simp"], ["proof (state)\nthis:\n  square_free_factorization q\n   (fst (yun_factorization gcd q), snd (yun_factorization gcd q))\n\ngoal (4 subgoals):\n 1. q \\<noteq> 0\n 2. 0 < R\n 3. list_all (\\<lambda>cl. proots_ball_card (fst cl) 0 (1 / R) = 0)\n     (snd (yun_factorization gcd q))\n 4. list_all (\\<lambda>cl. proots_sphere_card (fst cl) 0 (1 / R) = 0)\n     (filter (\\<lambda>cl. k < snd cl) (snd (yun_factorization gcd q)))", "qed (insert assms, auto simp: ratfps_has_asymptotics_def Let_def list_all_def)"], ["", "value \"map (fps_nth (fps_of_poly [:0, 1:] / fps_of_poly [:1, -1, -1 :: real:])) [0..<5]\""], ["", "method ratfps_bigo = (rule ratfps_has_asymptotics_correct; eval)"], ["", "lemma \"fps_nth (fps_of_poly [:0, 1:] / fps_of_poly [:1, -1, -1 :: complex:]) \\<in>\n         O(\\<lambda>n. of_nat n ^ 0 * complex_of_real 1.618034 ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (fps_of_poly [:0, 1:] / fps_of_poly [:1, - 1, - 1:])\n    \\<in> O(\\<lambda>n.\n               of_nat n ^ 0 * complex_of_real (1618034 / 10 ^ 6) ^ n)", "by ratfps_bigo"], ["", "lemma \"fps_nth (fps_of_poly 1 / fps_of_poly [:1, -3, 3, -1 :: complex:]) \\<in>\n         O(\\<lambda>n. of_nat n ^ 2 * complex_of_real 1 ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (fps_of_poly 1 / fps_of_poly [:1, - 3, 3, - 1:])\n    \\<in> O(\\<lambda>n. (of_nat n)\\<^sup>2 * complex_of_real 1 ^ n)", "by ratfps_bigo"], ["", "lemma \"fps_nth (fps_of_poly f / fps_of_poly [:5, 4, 3, 2, 1 :: complex:]) \\<in>\n         O(\\<lambda>n. of_nat n ^ 0 * complex_of_real 0.69202 ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (fps_of_poly f / fps_of_poly [:5, 4, 3, 2, 1:])\n    \\<in> O(\\<lambda>n. of_nat n ^ 0 * complex_of_real (69202 / 10 ^ 5) ^ n)", "by ratfps_bigo"], ["", "end"]]}