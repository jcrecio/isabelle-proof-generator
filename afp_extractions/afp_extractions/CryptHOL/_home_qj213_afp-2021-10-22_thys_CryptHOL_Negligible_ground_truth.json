{"file_name": "/home/qj213/afp-2021-10-22/thys/CryptHOL/Negligible.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CryptHOL", "problem_names": ["lemma negligibleI [intro?]:\n  \"(\\<And>c. c > 0 \\<Longrightarrow> f \\<in> o(\\<lambda>x. inverse (x powr c))) \\<Longrightarrow> negligible f\"", "lemma negligibleD:\n  \"\\<lbrakk> negligible f; c > 0 \\<rbrakk> \\<Longrightarrow> f \\<in> o(\\<lambda>x. inverse (x powr c))\"", "lemma negligibleD_real:\n  assumes \"negligible f\"\n  shows \"f \\<in> o(\\<lambda>x. inverse (x powr c))\"", "lemma negligible_mono: \"\\<lbrakk> negligible g; f \\<in> O(g) \\<rbrakk> \\<Longrightarrow> negligible f\"", "lemma negligible_le: \"\\<lbrakk> negligible g; \\<And>\\<eta>. \\<bar>f \\<eta>\\<bar> \\<le> g \\<eta> \\<rbrakk> \\<Longrightarrow> negligible f\"", "lemma negligible_K0 [negligible_intros, simp, intro!]: \"negligible (\\<lambda>_. 0)\"", "lemma negligible_0 [negligible_intros, simp, intro!]: \"negligible 0\"", "lemma negligible_const_iff [simp]: \"negligible (\\<lambda>_. c :: real) \\<longleftrightarrow> c = 0\"", "lemma not_negligible_1: \"\\<not> negligible (\\<lambda>_. 1 :: real)\"", "lemma negligible_plus [negligible_intros]:\n  \"\\<lbrakk> negligible f; negligible g \\<rbrakk> \\<Longrightarrow> negligible (\\<lambda>\\<eta>. f \\<eta> + g \\<eta>)\"", "lemma negligible_uminus [simp]: \"negligible (\\<lambda>\\<eta>. - f \\<eta>) \\<longleftrightarrow> negligible f\"", "lemma negligible_uminusI [negligible_intros]: \"negligible f \\<Longrightarrow> negligible (\\<lambda>\\<eta>. - f \\<eta>)\"", "lemma negligible_minus [negligible_intros]:\n  \"\\<lbrakk> negligible f; negligible g \\<rbrakk> \\<Longrightarrow> negligible (\\<lambda>\\<eta>. f \\<eta> - g \\<eta>)\"", "lemma negligible_cmult: \"negligible (\\<lambda>\\<eta>. c * f \\<eta>) \\<longleftrightarrow> negligible f \\<or> c = 0\"", "lemma negligible_cmultI [negligible_intros]:\n  \"(c \\<noteq> 0 \\<Longrightarrow> negligible f) \\<Longrightarrow> negligible (\\<lambda>\\<eta>. c * f \\<eta>)\"", "lemma negligible_multc: \"negligible (\\<lambda>\\<eta>. f \\<eta> * c) \\<longleftrightarrow> negligible f \\<or> c = 0\"", "lemma negligible_multcI [negligible_intros]:\n  \"(c \\<noteq> 0 \\<Longrightarrow> negligible f) \\<Longrightarrow> negligible (\\<lambda>\\<eta>. f \\<eta> * c)\"", "lemma negligible_times [negligible_intros]:\n  assumes f: \"negligible f\"\n  and g: \"negligible g\"\n  shows \"negligible (\\<lambda>\\<eta>. f \\<eta> * g \\<eta> :: real)\"", "lemma negligible_power [negligible_intros]:\n  assumes \"negligible f\"\n  and \"n > 0\"\n  shows \"negligible (\\<lambda>\\<eta>. f \\<eta> ^ n :: real)\"", "lemma negligible_powr [negligible_intros]:\n  assumes f: \"negligible f\"\n  and p: \"p > 0\"         \n  shows \"negligible (\\<lambda>x. \\<bar>f x\\<bar> powr p :: real)\"", "lemma negligible_abs [simp]: \"negligible (\\<lambda>x. \\<bar>f x\\<bar>) \\<longleftrightarrow> negligible f\"", "lemma negligible_absI [negligible_intros]: \"negligible f \\<Longrightarrow> negligible (\\<lambda>x. \\<bar>f x\\<bar>)\"", "lemma negligible_powrI [negligible_intros]:\n  assumes \"0 \\<le> k\" \"k < 1\"\n  shows \"negligible (\\<lambda>x. k powr x)\"", "lemma negligible_powerI [negligible_intros]:\n  fixes k :: real\n  assumes \"\\<bar>k\\<bar> < 1\"\n  shows \"negligible (\\<lambda>n. k ^ n)\"", "lemma negligible_inverse_powerI [negligible_intros]: \"\\<bar>k\\<bar> > 1 \\<Longrightarrow> negligible (\\<lambda>\\<eta>. 1 / k ^ \\<eta>)\"", "lemma negligible_times_poly:\n  assumes f: \"negligible f\"\n  and g: \"g \\<in> O(\\<lambda>x. x powr n)\"\n  shows \"negligible (\\<lambda>x. f x * g x)\"", "lemma negligible_poly_times:\n  \"\\<lbrakk> f \\<in> O(\\<lambda>x. x powr n); negligible g \\<rbrakk> \\<Longrightarrow> negligible (\\<lambda>x. f x * g x)\"", "lemma negligible_times_polynomial [negligible_intros]:\n  \"\\<lbrakk> negligible f; polynomial g \\<rbrakk> \\<Longrightarrow> negligible (\\<lambda>x. f x * g x)\"", "lemma negligible_polynomial_times [negligible_intros]:\n  \"\\<lbrakk> polynomial f; negligible g \\<rbrakk> \\<Longrightarrow> negligible (\\<lambda>x. f x * g x)\"", "lemma negligible_divide_poly1:\n  \"\\<lbrakk> f \\<in> O(\\<lambda>x. x powr n); negligible (\\<lambda>\\<eta>. 1 / g \\<eta>) \\<rbrakk> \\<Longrightarrow> negligible (\\<lambda>\\<eta>. real (f \\<eta>) / g \\<eta>)\"", "lemma negligible_divide_polynomial1 [negligible_intros]:\n  \"\\<lbrakk> polynomial f; negligible (\\<lambda>\\<eta>. 1 / g \\<eta>) \\<rbrakk> \\<Longrightarrow> negligible (\\<lambda>\\<eta>. real (f \\<eta>) / g \\<eta>)\""], "translations": [["", "lemma negligibleI [intro?]:\n  \"(\\<And>c. c > 0 \\<Longrightarrow> f \\<in> o(\\<lambda>x. inverse (x powr c))) \\<Longrightarrow> negligible f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        0 < c \\<Longrightarrow>\n        f \\<in> o(\\<lambda>x. inverse (real x powr c))) \\<Longrightarrow>\n    negligible f", "unfolding negligible_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        0 < c \\<Longrightarrow>\n        f \\<in> o(\\<lambda>x. inverse (real x powr c))) \\<Longrightarrow>\n    \\<forall>c>0. f \\<in> o(\\<lambda>x. inverse (real x powr c))", "by(simp)"], ["", "lemma negligibleD:\n  \"\\<lbrakk> negligible f; c > 0 \\<rbrakk> \\<Longrightarrow> f \\<in> o(\\<lambda>x. inverse (x powr c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>negligible f; 0 < c\\<rbrakk>\n    \\<Longrightarrow> f \\<in> o(\\<lambda>x. inverse (real x powr c))", "unfolding negligible_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>c>0. f \\<in> o(\\<lambda>x. inverse (real x powr c));\n     0 < c\\<rbrakk>\n    \\<Longrightarrow> f \\<in> o(\\<lambda>x. inverse (real x powr c))", "by(simp)"], ["", "lemma negligibleD_real:\n  assumes \"negligible f\"\n  shows \"f \\<in> o(\\<lambda>x. inverse (x powr c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> o(\\<lambda>x. inverse (real x powr c))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> o(\\<lambda>x. inverse (real x powr c))", "let ?c = \"max 1 c\""], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> o(\\<lambda>x. inverse (real x powr c))", "have \"f \\<in> o(\\<lambda>x. inverse (x powr ?c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> o(\\<lambda>x. inverse (real x powr max 1 c))", "using assms"], ["proof (prove)\nusing this:\n  negligible f\n\ngoal (1 subgoal):\n 1. f \\<in> o(\\<lambda>x. inverse (real x powr max 1 c))", "by(rule negligibleD) simp"], ["proof (state)\nthis:\n  f \\<in> o(\\<lambda>x. inverse (real x powr max 1 c))\n\ngoal (1 subgoal):\n 1. f \\<in> o(\\<lambda>x. inverse (real x powr c))", "also"], ["proof (state)\nthis:\n  f \\<in> o(\\<lambda>x. inverse (real x powr max 1 c))\n\ngoal (1 subgoal):\n 1. f \\<in> o(\\<lambda>x. inverse (real x powr c))", "have \"(\\<lambda>x. x powr c) \\<in> O(\\<lambda>x. real x powr max 1 c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. real x powr c) \\<in> O(\\<lambda>x. real x powr max 1 c)", "by(rule bigoI[where c=1])(auto simp add: eventually_at_top_linorder intro!: exI[where x=1] powr_mono)"], ["proof (state)\nthis:\n  (\\<lambda>x. real x powr c) \\<in> O(\\<lambda>x. real x powr max 1 c)\n\ngoal (1 subgoal):\n 1. f \\<in> o(\\<lambda>x. inverse (real x powr c))", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. real x powr c) \\<in> O(\\<lambda>x. real x powr max 1 c)", "have \"(\\<lambda>x. inverse (real x powr max 1 c)) \\<in> O(\\<lambda>x. inverse (x powr c))\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. real x powr c) \\<in> O(\\<lambda>x. real x powr max 1 c)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. inverse (real x powr max 1 c))\n    \\<in> O(\\<lambda>x. inverse (real x powr c))", "by(auto simp add: eventually_at_top_linorder exI[where x=1] intro: landau_o.big.inverse)"], ["proof (state)\nthis:\n  (\\<lambda>x. inverse (real x powr max 1 c))\n  \\<in> O(\\<lambda>x. inverse (real x powr c))\n\ngoal (1 subgoal):\n 1. f \\<in> o(\\<lambda>x. inverse (real x powr c))", "finally"], ["proof (chain)\npicking this:\n  f \\<in> o(\\<lambda>x. inverse (real x powr c))", "show ?thesis"], ["proof (prove)\nusing this:\n  f \\<in> o(\\<lambda>x. inverse (real x powr c))\n\ngoal (1 subgoal):\n 1. f \\<in> o(\\<lambda>x. inverse (real x powr c))", "."], ["proof (state)\nthis:\n  f \\<in> o(\\<lambda>x. inverse (real x powr c))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma negligible_mono: \"\\<lbrakk> negligible g; f \\<in> O(g) \\<rbrakk> \\<Longrightarrow> negligible f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>negligible g; f \\<in> O(g)\\<rbrakk>\n    \\<Longrightarrow> negligible f", "by(rule negligibleI)(drule (1) negligibleD; erule (1) landau_o.big_small_trans)"], ["", "lemma negligible_le: \"\\<lbrakk> negligible g; \\<And>\\<eta>. \\<bar>f \\<eta>\\<bar> \\<le> g \\<eta> \\<rbrakk> \\<Longrightarrow> negligible f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>negligible g;\n     \\<And>\\<eta>. \\<bar>f \\<eta>\\<bar> \\<le> g \\<eta>\\<rbrakk>\n    \\<Longrightarrow> negligible f", "by(erule negligible_mono)(force intro: order_trans intro!: eventually_sequentiallyI landau_o.big_mono)"], ["", "lemma negligible_K0 [negligible_intros, simp, intro!]: \"negligible (\\<lambda>_. 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. negligible (\\<lambda>_. 0)", "by(rule negligibleI) simp"], ["", "lemma negligible_0 [negligible_intros, simp, intro!]: \"negligible 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. negligible 0", "by(simp add: zero_fun_def)"], ["", "lemma negligible_const_iff [simp]: \"negligible (\\<lambda>_. c :: real) \\<longleftrightarrow> c = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. negligible (\\<lambda>_. c) = (c = 0)", "by(auto simp add: negligible_def const_smallo_inverse_powr filterlim_real_sequentially dest!: spec[where x=1])"], ["", "lemma not_negligible_1: \"\\<not> negligible (\\<lambda>_. 1 :: real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> negligible (\\<lambda>_. 1)", "by simp"], ["", "lemma negligible_plus [negligible_intros]:\n  \"\\<lbrakk> negligible f; negligible g \\<rbrakk> \\<Longrightarrow> negligible (\\<lambda>\\<eta>. f \\<eta> + g \\<eta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>negligible f; negligible g\\<rbrakk>\n    \\<Longrightarrow> negligible (\\<lambda>\\<eta>. f \\<eta> + g \\<eta>)", "by(auto intro!: negligibleI dest!: negligibleD intro: sum_in_smallo)"], ["", "lemma negligible_uminus [simp]: \"negligible (\\<lambda>\\<eta>. - f \\<eta>) \\<longleftrightarrow> negligible f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. negligible (\\<lambda>\\<eta>. - f \\<eta>) = negligible f", "by(simp add: negligible_def)"], ["", "lemma negligible_uminusI [negligible_intros]: \"negligible f \\<Longrightarrow> negligible (\\<lambda>\\<eta>. - f \\<eta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. negligible f \\<Longrightarrow> negligible (\\<lambda>\\<eta>. - f \\<eta>)", "by simp"], ["", "lemma negligible_minus [negligible_intros]:\n  \"\\<lbrakk> negligible f; negligible g \\<rbrakk> \\<Longrightarrow> negligible (\\<lambda>\\<eta>. f \\<eta> - g \\<eta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>negligible f; negligible g\\<rbrakk>\n    \\<Longrightarrow> negligible (\\<lambda>\\<eta>. f \\<eta> - g \\<eta>)", "by(auto simp add: uminus_add_conv_diff[symmetric] negligible_plus simp del: uminus_add_conv_diff)"], ["", "lemma negligible_cmult: \"negligible (\\<lambda>\\<eta>. c * f \\<eta>) \\<longleftrightarrow> negligible f \\<or> c = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. negligible (\\<lambda>\\<eta>. c * f \\<eta>) = (negligible f \\<or> c = 0)", "by(auto intro!: negligibleI dest!: negligibleD)"], ["", "lemma negligible_cmultI [negligible_intros]:\n  \"(c \\<noteq> 0 \\<Longrightarrow> negligible f) \\<Longrightarrow> negligible (\\<lambda>\\<eta>. c * f \\<eta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c \\<noteq> 0 \\<Longrightarrow> negligible f) \\<Longrightarrow>\n    negligible (\\<lambda>\\<eta>. c * f \\<eta>)", "by(auto simp add: negligible_cmult)"], ["", "lemma negligible_multc: \"negligible (\\<lambda>\\<eta>. f \\<eta> * c) \\<longleftrightarrow> negligible f \\<or> c = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. negligible (\\<lambda>\\<eta>. f \\<eta> * c) = (negligible f \\<or> c = 0)", "by(subst mult.commute)(simp add: negligible_cmult)"], ["", "lemma negligible_multcI [negligible_intros]:\n  \"(c \\<noteq> 0 \\<Longrightarrow> negligible f) \\<Longrightarrow> negligible (\\<lambda>\\<eta>. f \\<eta> * c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c \\<noteq> 0 \\<Longrightarrow> negligible f) \\<Longrightarrow>\n    negligible (\\<lambda>\\<eta>. f \\<eta> * c)", "by(auto simp add: negligible_multc)"], ["", "lemma negligible_times [negligible_intros]:\n  assumes f: \"negligible f\"\n  and g: \"negligible g\"\n  shows \"negligible (\\<lambda>\\<eta>. f \\<eta> * g \\<eta> :: real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. negligible (\\<lambda>\\<eta>. f \\<eta> * g \\<eta>)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>\\<eta>. f \\<eta> * g \\<eta>)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "fix c :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>\\<eta>. f \\<eta> * g \\<eta>)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "assume \"0 < c\""], ["proof (state)\nthis:\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>\\<eta>. f \\<eta> * g \\<eta>)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "hence \"0 < c / 2\""], ["proof (prove)\nusing this:\n  0 < c\n\ngoal (1 subgoal):\n 1. 0 < c / 2", "by simp"], ["proof (state)\nthis:\n  0 < c / 2\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>\\<eta>. f \\<eta> * g \\<eta>)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "from negligibleD[OF f this] negligibleD[OF g this]"], ["proof (chain)\npicking this:\n  f \\<in> o(\\<lambda>x. inverse (real x powr (c / 2)))\n  g \\<in> o(\\<lambda>x. inverse (real x powr (c / 2)))", "have \"(\\<lambda>\\<eta>. f \\<eta> * g \\<eta>) \\<in> o(\\<lambda>x. inverse (x powr (c / 2)) * inverse (x powr (c / 2)))\""], ["proof (prove)\nusing this:\n  f \\<in> o(\\<lambda>x. inverse (real x powr (c / 2)))\n  g \\<in> o(\\<lambda>x. inverse (real x powr (c / 2)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>\\<eta>. f \\<eta> * g \\<eta>)\n    \\<in> o(\\<lambda>x.\n               inverse (real x powr (c / 2)) *\n               inverse (real x powr (c / 2)))", "by(rule landau_o.small_mult)"], ["proof (state)\nthis:\n  (\\<lambda>\\<eta>. f \\<eta> * g \\<eta>)\n  \\<in> o(\\<lambda>x.\n             inverse (real x powr (c / 2)) * inverse (real x powr (c / 2)))\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>\\<eta>. f \\<eta> * g \\<eta>)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "also"], ["proof (state)\nthis:\n  (\\<lambda>\\<eta>. f \\<eta> * g \\<eta>)\n  \\<in> o(\\<lambda>x.\n             inverse (real x powr (c / 2)) * inverse (real x powr (c / 2)))\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>\\<eta>. f \\<eta> * g \\<eta>)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "have \"\\<dots> = o(\\<lambda>x. inverse (x powr c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. o(\\<lambda>x.\n         inverse (real x powr (c / 2)) * inverse (real x powr (c / 2))) =\n    o(\\<lambda>x. inverse (real x powr c))", "by(rule landau_o.small.cong)(auto simp add: inverse_mult_distrib[symmetric] powr_add[symmetric] eventually_at_top_linorder intro!: exI[where x=1] simp del: inverse_mult_distrib)"], ["proof (state)\nthis:\n  o(\\<lambda>x.\n       inverse (real x powr (c / 2)) * inverse (real x powr (c / 2))) =\n  o(\\<lambda>x. inverse (real x powr c))\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>\\<eta>. f \\<eta> * g \\<eta>)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>\\<eta>. f \\<eta> * g \\<eta>)\n  \\<in> o(\\<lambda>x. inverse (real x powr c))", "show \"(\\<lambda>\\<eta>. f \\<eta> * g \\<eta>) \\<in> \\<dots>\""], ["proof (prove)\nusing this:\n  (\\<lambda>\\<eta>. f \\<eta> * g \\<eta>)\n  \\<in> o(\\<lambda>x. inverse (real x powr c))\n\ngoal (1 subgoal):\n 1. (\\<lambda>\\<eta>. f \\<eta> * g \\<eta>)\n    \\<in> o(\\<lambda>x. inverse (real x powr c))", "."], ["proof (state)\nthis:\n  (\\<lambda>\\<eta>. f \\<eta> * g \\<eta>)\n  \\<in> o(\\<lambda>x. inverse (real x powr c))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma negligible_power [negligible_intros]:\n  assumes \"negligible f\"\n  and \"n > 0\"\n  shows \"negligible (\\<lambda>\\<eta>. f \\<eta> ^ n :: real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. negligible (\\<lambda>\\<eta>. f \\<eta> ^ n)", "using \\<open>n > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. negligible (\\<lambda>\\<eta>. f \\<eta> ^ n)", "proof(induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < 0 \\<Longrightarrow> negligible (\\<lambda>\\<eta>. f \\<eta> ^ 0)\n 2. \\<And>n.\n       \\<lbrakk>0 < n \\<Longrightarrow>\n                negligible (\\<lambda>\\<eta>. f \\<eta> ^ n);\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> negligible (\\<lambda>\\<eta>. f \\<eta> ^ Suc n)", "case (Suc n)"], ["proof (state)\nthis:\n  0 < n \\<Longrightarrow> negligible (\\<lambda>\\<eta>. f \\<eta> ^ n)\n  0 < Suc n\n\ngoal (2 subgoals):\n 1. 0 < 0 \\<Longrightarrow> negligible (\\<lambda>\\<eta>. f \\<eta> ^ 0)\n 2. \\<And>n.\n       \\<lbrakk>0 < n \\<Longrightarrow>\n                negligible (\\<lambda>\\<eta>. f \\<eta> ^ n);\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> negligible (\\<lambda>\\<eta>. f \\<eta> ^ Suc n)", "thus ?case"], ["proof (prove)\nusing this:\n  0 < n \\<Longrightarrow> negligible (\\<lambda>\\<eta>. f \\<eta> ^ n)\n  0 < Suc n\n\ngoal (1 subgoal):\n 1. negligible (\\<lambda>\\<eta>. f \\<eta> ^ Suc n)", "using \\<open>negligible f\\<close>"], ["proof (prove)\nusing this:\n  0 < n \\<Longrightarrow> negligible (\\<lambda>\\<eta>. f \\<eta> ^ n)\n  0 < Suc n\n  negligible f\n\ngoal (1 subgoal):\n 1. negligible (\\<lambda>\\<eta>. f \\<eta> ^ Suc n)", "by(cases n)(simp_all add: negligible_times)"], ["proof (state)\nthis:\n  negligible (\\<lambda>\\<eta>. f \\<eta> ^ Suc n)\n\ngoal (1 subgoal):\n 1. 0 < 0 \\<Longrightarrow> negligible (\\<lambda>\\<eta>. f \\<eta> ^ 0)", "qed simp"], ["", "lemma negligible_powr [negligible_intros]:\n  assumes f: \"negligible f\"\n  and p: \"p > 0\"         \n  shows \"negligible (\\<lambda>x. \\<bar>f x\\<bar> powr p :: real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. negligible (\\<lambda>x. \\<bar>f x\\<bar> powr p)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "fix c :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "let ?c = \"c / p\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "assume c: \"0 < c\""], ["proof (state)\nthis:\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "with p"], ["proof (chain)\npicking this:\n  0 < p\n  0 < c", "have \"0 < ?c\""], ["proof (prove)\nusing this:\n  0 < p\n  0 < c\n\ngoal (1 subgoal):\n 1. 0 < c / p", "by simp"], ["proof (state)\nthis:\n  0 < c / p\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "with f"], ["proof (chain)\npicking this:\n  negligible f\n  0 < c / p", "have \"f \\<in> o(\\<lambda>x. inverse (x powr ?c))\""], ["proof (prove)\nusing this:\n  negligible f\n  0 < c / p\n\ngoal (1 subgoal):\n 1. f \\<in> o(\\<lambda>x. inverse (real x powr (c / p)))", "by(rule negligibleD)"], ["proof (state)\nthis:\n  f \\<in> o(\\<lambda>x. inverse (real x powr (c / p)))\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "hence \"(\\<lambda>x. \\<bar>f x\\<bar> powr p) \\<in> o(\\<lambda>x. \\<bar>inverse (x powr ?c)\\<bar> powr p)\""], ["proof (prove)\nusing this:\n  f \\<in> o(\\<lambda>x. inverse (real x powr (c / p)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n    \\<in> o(\\<lambda>x. \\<bar>inverse (real x powr (c / p))\\<bar> powr p)", "using p"], ["proof (prove)\nusing this:\n  f \\<in> o(\\<lambda>x. inverse (real x powr (c / p)))\n  0 < p\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n    \\<in> o(\\<lambda>x. \\<bar>inverse (real x powr (c / p))\\<bar> powr p)", "by(rule smallo_powr)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n  \\<in> o(\\<lambda>x. \\<bar>inverse (real x powr (c / p))\\<bar> powr p)\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n  \\<in> o(\\<lambda>x. \\<bar>inverse (real x powr (c / p))\\<bar> powr p)\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "have \"\\<dots> = o(\\<lambda>x. inverse (x powr c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. o(\\<lambda>x. \\<bar>inverse (real x powr (c / p))\\<bar> powr p) =\n    o(\\<lambda>x. inverse (real x powr c))", "apply(rule landau_o.small.cong)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially.\n       \\<bar>inverse (real x powr (c / p))\\<bar> powr p =\n       inverse (real x powr c)", "using p"], ["proof (prove)\nusing this:\n  0 < p\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially.\n       \\<bar>inverse (real x powr (c / p))\\<bar> powr p =\n       inverse (real x powr c)", "by(auto simp add: powr_powr)"], ["proof (state)\nthis:\n  o(\\<lambda>x. \\<bar>inverse (real x powr (c / p))\\<bar> powr p) =\n  o(\\<lambda>x. inverse (real x powr c))\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n  \\<in> o(\\<lambda>x. inverse (real x powr c))", "show \"(\\<lambda>x. \\<bar>f x\\<bar> powr p) \\<in> \\<dots>\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n  \\<in> o(\\<lambda>x. inverse (real x powr c))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n    \\<in> o(\\<lambda>x. inverse (real x powr c))", "."], ["proof (state)\nthis:\n  (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n  \\<in> o(\\<lambda>x. inverse (real x powr c))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma negligible_abs [simp]: \"negligible (\\<lambda>x. \\<bar>f x\\<bar>) \\<longleftrightarrow> negligible f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. negligible (\\<lambda>x. \\<bar>f x\\<bar>) = negligible f", "by(simp add: negligible_def)"], ["", "lemma negligible_absI [negligible_intros]: \"negligible f \\<Longrightarrow> negligible (\\<lambda>x. \\<bar>f x\\<bar>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. negligible f \\<Longrightarrow> negligible (\\<lambda>x. \\<bar>f x\\<bar>)", "by(simp)"], ["", "lemma negligible_powrI [negligible_intros]:\n  assumes \"0 \\<le> k\" \"k < 1\"\n  shows \"negligible (\\<lambda>x. k powr x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. negligible (\\<lambda>x. k powr real x)", "proof(cases \"k = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> negligible (\\<lambda>x. k powr real x)\n 2. k \\<noteq> 0 \\<Longrightarrow> negligible (\\<lambda>x. k powr real x)", "case True"], ["proof (state)\nthis:\n  k = 0\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> negligible (\\<lambda>x. k powr real x)\n 2. k \\<noteq> 0 \\<Longrightarrow> negligible (\\<lambda>x. k powr real x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  k = 0\n\ngoal (1 subgoal):\n 1. negligible (\\<lambda>x. k powr real x)", "by simp"], ["proof (state)\nthis:\n  negligible (\\<lambda>x. k powr real x)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> negligible (\\<lambda>x. k powr real x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> negligible (\\<lambda>x. k powr real x)", "case False"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> negligible (\\<lambda>x. k powr real x)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. negligible (\\<lambda>x. k powr real x)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. k powr real x)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "fix c :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. k powr real x)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "assume \"0 < c\""], ["proof (state)\nthis:\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. k powr real x)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "then"], ["proof (chain)\npicking this:\n  0 < c", "have \"(\\<lambda>x. real x powr c) \\<in> o(\\<lambda>x. inverse k powr real x)\""], ["proof (prove)\nusing this:\n  0 < c\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. real x powr c) \\<in> o(\\<lambda>x. inverse k powr real x)", "using assms False"], ["proof (prove)\nusing this:\n  0 < c\n  0 \\<le> k\n  k < 1\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. real x powr c) \\<in> o(\\<lambda>x. inverse k powr real x)", "by(intro powr_fast_growth_tendsto)(simp_all add: one_less_inverse_iff filterlim_real_sequentially)"], ["proof (state)\nthis:\n  (\\<lambda>x. real x powr c) \\<in> o(\\<lambda>x. inverse k powr real x)\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. k powr real x)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. real x powr c) \\<in> o(\\<lambda>x. inverse k powr real x)", "have \"(\\<lambda>x. inverse (k powr - real x)) \\<in> o(\\<lambda>x. inverse (real x powr c))\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. real x powr c) \\<in> o(\\<lambda>x. inverse k powr real x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. inverse (k powr - real x))\n    \\<in> o(\\<lambda>x. inverse (real x powr c))", "using assms"], ["proof (prove)\nusing this:\n  (\\<lambda>x. real x powr c) \\<in> o(\\<lambda>x. inverse k powr real x)\n  0 \\<le> k\n  k < 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. inverse (k powr - real x))\n    \\<in> o(\\<lambda>x. inverse (real x powr c))", "by(intro landau_o.small.inverse)(auto simp add: False eventually_sequentially powr_minus intro: exI[where x=1])"], ["proof (state)\nthis:\n  (\\<lambda>x. inverse (k powr - real x))\n  \\<in> o(\\<lambda>x. inverse (real x powr c))\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. k powr real x)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. inverse (k powr - real x))\n  \\<in> o(\\<lambda>x. inverse (real x powr c))\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. k powr real x)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "have \"(\\<lambda>x. inverse (k powr - real x)) = (\\<lambda>x. k powr real x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. inverse (k powr - real x)) = (\\<lambda>x. k powr real x)", "by(simp add: powr_minus)"], ["proof (state)\nthis:\n  (\\<lambda>x. inverse (k powr - real x)) = (\\<lambda>x. k powr real x)\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. k powr real x)\n       \\<in> o(\\<lambda>x. inverse (real x powr c))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. k powr real x) \\<in> o(\\<lambda>x. inverse (real x powr c))", "show \"\\<dots> \\<in> o(\\<lambda>x. inverse (x powr c))\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. k powr real x) \\<in> o(\\<lambda>x. inverse (real x powr c))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. k powr real x) \\<in> o(\\<lambda>x. inverse (real x powr c))", "."], ["proof (state)\nthis:\n  (\\<lambda>x. k powr real x) \\<in> o(\\<lambda>x. inverse (real x powr c))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  negligible (\\<lambda>x. k powr real x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma negligible_powerI [negligible_intros]:\n  fixes k :: real\n  assumes \"\\<bar>k\\<bar> < 1\"\n  shows \"negligible (\\<lambda>n. k ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. negligible ((^) k)", "proof(cases \"k = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> negligible ((^) k)\n 2. k \\<noteq> 0 \\<Longrightarrow> negligible ((^) k)", "case True"], ["proof (state)\nthis:\n  k = 0\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> negligible ((^) k)\n 2. k \\<noteq> 0 \\<Longrightarrow> negligible ((^) k)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. negligible ((^) k)", "using negligible_K0"], ["proof (prove)\nusing this:\n  negligible (\\<lambda>_. 0)\n\ngoal (1 subgoal):\n 1. negligible ((^) k)", "by(rule negligible_mono)(auto intro: exI[where x=1] simp add: True eventually_at_top_linorder)"], ["proof (state)\nthis:\n  negligible ((^) k)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> negligible ((^) k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> negligible ((^) k)", "case False"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> negligible ((^) k)", "hence \"0 < \\<bar>k\\<bar>\""], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < \\<bar>k\\<bar>", "by auto"], ["proof (state)\nthis:\n  0 < \\<bar>k\\<bar>\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> negligible ((^) k)", "from assms"], ["proof (chain)\npicking this:\n  \\<bar>k\\<bar> < 1", "have \"negligible (\\<lambda>x. \\<bar>k\\<bar> powr real x)\""], ["proof (prove)\nusing this:\n  \\<bar>k\\<bar> < 1\n\ngoal (1 subgoal):\n 1. negligible (\\<lambda>x. \\<bar>k\\<bar> powr real x)", "using negligible_powrI[of \"\\<bar>k\\<bar>\"]"], ["proof (prove)\nusing this:\n  \\<bar>k\\<bar> < 1\n  \\<lbrakk>0 \\<le> \\<bar>k\\<bar>; \\<bar>k\\<bar> < 1\\<rbrakk>\n  \\<Longrightarrow> negligible (\\<lambda>x. \\<bar>k\\<bar> powr real x)\n\ngoal (1 subgoal):\n 1. negligible (\\<lambda>x. \\<bar>k\\<bar> powr real x)", "by simp"], ["proof (state)\nthis:\n  negligible (\\<lambda>x. \\<bar>k\\<bar> powr real x)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> negligible ((^) k)", "hence \"negligible (\\<lambda>x. \\<bar>k\\<bar> ^ x)\""], ["proof (prove)\nusing this:\n  negligible (\\<lambda>x. \\<bar>k\\<bar> powr real x)\n\ngoal (1 subgoal):\n 1. negligible ((^) \\<bar>k\\<bar>)", "using False"], ["proof (prove)\nusing this:\n  negligible (\\<lambda>x. \\<bar>k\\<bar> powr real x)\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. negligible ((^) \\<bar>k\\<bar>)", "by(elim negligible_mono)(simp add: powr_realpow)"], ["proof (state)\nthis:\n  negligible ((^) \\<bar>k\\<bar>)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> negligible ((^) k)", "then"], ["proof (chain)\npicking this:\n  negligible ((^) \\<bar>k\\<bar>)", "show ?thesis"], ["proof (prove)\nusing this:\n  negligible ((^) \\<bar>k\\<bar>)\n\ngoal (1 subgoal):\n 1. negligible ((^) k)", "by(simp add: power_abs[symmetric])"], ["proof (state)\nthis:\n  negligible ((^) k)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma negligible_inverse_powerI [negligible_intros]: \"\\<bar>k\\<bar> > 1 \\<Longrightarrow> negligible (\\<lambda>\\<eta>. 1 / k ^ \\<eta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < \\<bar>k\\<bar> \\<Longrightarrow>\n    negligible (\\<lambda>\\<eta>. 1 / k ^ \\<eta>)", "using negligible_powerI[of \"1 / k\"]"], ["proof (prove)\nusing this:\n  \\<bar>1 / k\\<bar> < 1 \\<Longrightarrow> negligible ((^) (1 / k))\n\ngoal (1 subgoal):\n 1. 1 < \\<bar>k\\<bar> \\<Longrightarrow>\n    negligible (\\<lambda>\\<eta>. 1 / k ^ \\<eta>)", "by(simp add: power_one_over)"], ["", "inductive polynomial :: \"(nat \\<Rightarrow> real) \\<Rightarrow> bool\"\n  for f\nwhere \"f \\<in> O(\\<lambda>x. x powr n) \\<Longrightarrow> polynomial f\""], ["", "lemma negligible_times_poly:\n  assumes f: \"negligible f\"\n  and g: \"g \\<in> O(\\<lambda>x. x powr n)\"\n  shows \"negligible (\\<lambda>x. f x * g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. negligible (\\<lambda>x. f x * g x)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. f x * g x) \\<in> o(\\<lambda>x. inverse (real x powr c))", "fix c :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. f x * g x) \\<in> o(\\<lambda>x. inverse (real x powr c))", "assume c: \"0 < c\""], ["proof (state)\nthis:\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. f x * g x) \\<in> o(\\<lambda>x. inverse (real x powr c))", "from negligibleD_real[OF f] g"], ["proof (chain)\npicking this:\n  f \\<in> o(\\<lambda>x. inverse (real x powr ?c))\n  g \\<in> O(\\<lambda>x. real x powr n)", "have \"(\\<lambda>x. f x * g x) \\<in> o(\\<lambda>x. inverse (x powr (c + n)) * x powr n)\""], ["proof (prove)\nusing this:\n  f \\<in> o(\\<lambda>x. inverse (real x powr ?c))\n  g \\<in> O(\\<lambda>x. real x powr n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x * g x)\n    \\<in> o(\\<lambda>x. inverse (real x powr (c + n)) * real x powr n)", "by(rule landau_o.small_big_mult)"], ["proof (state)\nthis:\n  (\\<lambda>x. f x * g x)\n  \\<in> o(\\<lambda>x. inverse (real x powr (c + n)) * real x powr n)\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. f x * g x) \\<in> o(\\<lambda>x. inverse (real x powr c))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. f x * g x)\n  \\<in> o(\\<lambda>x. inverse (real x powr (c + n)) * real x powr n)\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. f x * g x) \\<in> o(\\<lambda>x. inverse (real x powr c))", "have \"\\<dots> = o(\\<lambda>x. inverse (x powr c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. o(\\<lambda>x. inverse (real x powr (c + n)) * real x powr n) =\n    o(\\<lambda>x. inverse (real x powr c))", "by(rule landau_o.small.cong)(auto simp add: powr_minus[symmetric] powr_add[symmetric] intro!: exI[where x=0])"], ["proof (state)\nthis:\n  o(\\<lambda>x. inverse (real x powr (c + n)) * real x powr n) =\n  o(\\<lambda>x. inverse (real x powr c))\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       (\\<lambda>x. f x * g x) \\<in> o(\\<lambda>x. inverse (real x powr c))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. f x * g x) \\<in> o(\\<lambda>x. inverse (real x powr c))", "show \"(\\<lambda>x. f x * g x) \\<in> o(\\<lambda>x. inverse (x powr c))\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. f x * g x) \\<in> o(\\<lambda>x. inverse (real x powr c))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x * g x) \\<in> o(\\<lambda>x. inverse (real x powr c))", "."], ["proof (state)\nthis:\n  (\\<lambda>x. f x * g x) \\<in> o(\\<lambda>x. inverse (real x powr c))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma negligible_poly_times:\n  \"\\<lbrakk> f \\<in> O(\\<lambda>x. x powr n); negligible g \\<rbrakk> \\<Longrightarrow> negligible (\\<lambda>x. f x * g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> O(\\<lambda>x. real x powr n); negligible g\\<rbrakk>\n    \\<Longrightarrow> negligible (\\<lambda>x. f x * g x)", "by(subst mult.commute)(rule negligible_times_poly)"], ["", "lemma negligible_times_polynomial [negligible_intros]:\n  \"\\<lbrakk> negligible f; polynomial g \\<rbrakk> \\<Longrightarrow> negligible (\\<lambda>x. f x * g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>negligible f; polynomial g\\<rbrakk>\n    \\<Longrightarrow> negligible (\\<lambda>x. f x * g x)", "by(clarsimp simp add: polynomial.simps negligible_times_poly)"], ["", "lemma negligible_polynomial_times [negligible_intros]:\n  \"\\<lbrakk> polynomial f; negligible g \\<rbrakk> \\<Longrightarrow> negligible (\\<lambda>x. f x * g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>polynomial f; negligible g\\<rbrakk>\n    \\<Longrightarrow> negligible (\\<lambda>x. f x * g x)", "by(clarsimp simp add: polynomial.simps negligible_poly_times)"], ["", "lemma negligible_divide_poly1:\n  \"\\<lbrakk> f \\<in> O(\\<lambda>x. x powr n); negligible (\\<lambda>\\<eta>. 1 / g \\<eta>) \\<rbrakk> \\<Longrightarrow> negligible (\\<lambda>\\<eta>. real (f \\<eta>) / g \\<eta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<lambda>x. real (f x)) \\<in> O(\\<lambda>x. real x powr n);\n     negligible (\\<lambda>\\<eta>. 1 / g \\<eta>)\\<rbrakk>\n    \\<Longrightarrow> negligible\n                       (\\<lambda>\\<eta>. real (f \\<eta>) / g \\<eta>)", "by(drule (1) negligible_times_poly) simp"], ["", "lemma negligible_divide_polynomial1 [negligible_intros]:\n  \"\\<lbrakk> polynomial f; negligible (\\<lambda>\\<eta>. 1 / g \\<eta>) \\<rbrakk> \\<Longrightarrow> negligible (\\<lambda>\\<eta>. real (f \\<eta>) / g \\<eta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>polynomial (\\<lambda>x. real (f x));\n     negligible (\\<lambda>\\<eta>. 1 / g \\<eta>)\\<rbrakk>\n    \\<Longrightarrow> negligible\n                       (\\<lambda>\\<eta>. real (f \\<eta>) / g \\<eta>)", "by(clarsimp simp add: polynomial.simps negligible_divide_poly1)"], ["", "end"]]}