{"file_name": "/home/qj213/afp-2021-10-22/thys/CryptHOL/Set_Applicative.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CryptHOL", "problem_names": ["lemma ap_set_conv_bind: \"ap_set f x = Set.bind f (\\<lambda>f. Set.bind x (\\<lambda>x. {f x}))\"", "lemma in_ap_setI: \"\\<lbrakk> f' \\<in> f; x' \\<in> x \\<rbrakk> \\<Longrightarrow> f' x' \\<in> f \\<diamondop> x\"", "lemma in_ap_setE [elim!]:\n  \"\\<lbrakk> x \\<in> f \\<diamondop> y; \\<And>f' y'. \\<lbrakk> x = f' y'; f' \\<in> f; y' \\<in> y \\<rbrakk> \\<Longrightarrow> thesis \\<rbrakk> \\<Longrightarrow> thesis\"", "lemma in_ap_pure_set [iff]: \"x \\<in> {f} \\<diamondop> y \\<longleftrightarrow> (\\<exists>y'\\<in>y. x = f y')\""], "translations": [["", "lemma ap_set_conv_bind: \"ap_set f x = Set.bind f (\\<lambda>f. Set.bind x (\\<lambda>x. {f x}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Applicative.ap f x =\n    Set.bind f (\\<lambda>f. Set.bind x (\\<lambda>x. {f x}))", "by(auto simp add: ap_set_def bind_UNION)"], ["", "context includes applicative_syntax begin"], ["", "lemma in_ap_setI: \"\\<lbrakk> f' \\<in> f; x' \\<in> x \\<rbrakk> \\<Longrightarrow> f' x' \\<in> f \\<diamondop> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f' \\<in> f; x' \\<in> x\\<rbrakk>\n    \\<Longrightarrow> f' x' \\<in> f \\<diamondop> x", "by(auto simp add: ap_set_def)"], ["", "lemma in_ap_setE [elim!]:\n  \"\\<lbrakk> x \\<in> f \\<diamondop> y; \\<And>f' y'. \\<lbrakk> x = f' y'; f' \\<in> f; y' \\<in> y \\<rbrakk> \\<Longrightarrow> thesis \\<rbrakk> \\<Longrightarrow> thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> f \\<diamondop> y;\n     \\<And>f' y'.\n        \\<lbrakk>x = f' y'; f' \\<in> f; y' \\<in> y\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by(auto simp add: ap_set_def)"], ["", "lemma in_ap_pure_set [iff]: \"x \\<in> {f} \\<diamondop> y \\<longleftrightarrow> (\\<exists>y'\\<in>y. x = f y')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> {f} \\<diamondop> y) = (\\<exists>y'\\<in>y. x = f y')", "unfolding ap_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> {fa x |fa x. fa \\<in> {f} \\<and> x \\<in> y}) =\n    (\\<exists>y'\\<in>y. x = f y')", "by auto"], ["", "end"], ["", "end"]]}