{"file_name": "/home/qj213/afp-2021-10-22/thys/CryptHOL/Cyclic_Group_SPMF.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CryptHOL", "problem_names": ["lemma spmf_sample_uniform: \"spmf (sample_uniform n) x = indicator {..<n} x / n\"", "lemma weight_sample_uniform: \"weight_spmf (sample_uniform n) = indicator (range Suc) n\"", "lemma weight_sample_uniform_0 [simp]: \"weight_spmf (sample_uniform 0) = 0\"", "lemma weight_sample_uniform_gt_0 [simp]: \"0 < n \\<Longrightarrow> weight_spmf (sample_uniform n) = 1\"", "lemma lossless_sample_uniform [simp]: \"lossless_spmf (sample_uniform n) \\<longleftrightarrow> 0 < n\"", "lemma set_spmf_sample_uniform [simp]: \"0 < n \\<Longrightarrow> set_spmf (sample_uniform n) = {..<n}\"", "lemma (in cyclic_group) sample_uniform_one_time_pad:\n  assumes [simp]: \"c \\<in> carrier G\"\n  shows\n  \"map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c) (sample_uniform (order G)) = \n   map_spmf (\\<lambda>x. \\<^bold>g [^] x) (sample_uniform (order G))\"\n   (is \"?lhs = ?rhs\")"], "translations": [["", "lemma spmf_sample_uniform: \"spmf (sample_uniform n) x = indicator {..<n} x / n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spmf (sample_uniform n) x = indicat_real {..<n} x / real n", "by(simp add: sample_uniform_def spmf_of_set)"], ["", "lemma weight_sample_uniform: \"weight_spmf (sample_uniform n) = indicator (range Suc) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weight_spmf (sample_uniform n) = indicat_real (range Suc) n", "by(auto simp add: sample_uniform_def weight_spmf_of_set split: split_indicator elim: lessE)"], ["", "lemma weight_sample_uniform_0 [simp]: \"weight_spmf (sample_uniform 0) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weight_spmf (sample_uniform 0) = 0", "by(auto simp add: weight_sample_uniform indicator_def)"], ["", "lemma weight_sample_uniform_gt_0 [simp]: \"0 < n \\<Longrightarrow> weight_spmf (sample_uniform n) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> weight_spmf (sample_uniform n) = 1", "by(auto simp add: weight_sample_uniform indicator_def gr0_conv_Suc)"], ["", "lemma lossless_sample_uniform [simp]: \"lossless_spmf (sample_uniform n) \\<longleftrightarrow> 0 < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lossless_spmf (sample_uniform n) = (0 < n)", "by(auto simp add: lossless_spmf_def intro: ccontr)"], ["", "lemma set_spmf_sample_uniform [simp]: \"0 < n \\<Longrightarrow> set_spmf (sample_uniform n) = {..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> set_spmf (sample_uniform n) = {..<n}", "by(simp add: sample_uniform_def)"], ["", "lemma (in cyclic_group) sample_uniform_one_time_pad:\n  assumes [simp]: \"c \\<in> carrier G\"\n  shows\n  \"map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c) (sample_uniform (order G)) = \n   map_spmf (\\<lambda>x. \\<^bold>g [^] x) (sample_uniform (order G))\"\n   (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n     (sample_uniform (order G)) =\n    map_spmf (([^]) \\<^bold>g) (sample_uniform (order G))", "proof(cases \"finite (carrier G)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (carrier G) \\<Longrightarrow>\n    map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n     (sample_uniform (order G)) =\n    map_spmf (([^]) \\<^bold>g) (sample_uniform (order G))\n 2. infinite (carrier G) \\<Longrightarrow>\n    map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n     (sample_uniform (order G)) =\n    map_spmf (([^]) \\<^bold>g) (sample_uniform (order G))", "case False"], ["proof (state)\nthis:\n  infinite (carrier G)\n\ngoal (2 subgoals):\n 1. finite (carrier G) \\<Longrightarrow>\n    map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n     (sample_uniform (order G)) =\n    map_spmf (([^]) \\<^bold>g) (sample_uniform (order G))\n 2. infinite (carrier G) \\<Longrightarrow>\n    map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n     (sample_uniform (order G)) =\n    map_spmf (([^]) \\<^bold>g) (sample_uniform (order G))", "thus ?thesis"], ["proof (prove)\nusing this:\n  infinite (carrier G)\n\ngoal (1 subgoal):\n 1. map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n     (sample_uniform (order G)) =\n    map_spmf (([^]) \\<^bold>g) (sample_uniform (order G))", "by(simp add: order_def sample_uniform_def)"], ["proof (state)\nthis:\n  map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n   (sample_uniform (order G)) =\n  map_spmf (([^]) \\<^bold>g) (sample_uniform (order G))\n\ngoal (1 subgoal):\n 1. finite (carrier G) \\<Longrightarrow>\n    map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n     (sample_uniform (order G)) =\n    map_spmf (([^]) \\<^bold>g) (sample_uniform (order G))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (carrier G) \\<Longrightarrow>\n    map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n     (sample_uniform (order G)) =\n    map_spmf (([^]) \\<^bold>g) (sample_uniform (order G))", "case True"], ["proof (state)\nthis:\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. finite (carrier G) \\<Longrightarrow>\n    map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n     (sample_uniform (order G)) =\n    map_spmf (([^]) \\<^bold>g) (sample_uniform (order G))", "have \"?lhs = map_spmf (\\<lambda>x. x \\<otimes> c) ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n     (sample_uniform (order G)) =\n    map_spmf (\\<lambda>x. x \\<otimes> c)\n     (map_spmf (([^]) \\<^bold>g) (sample_uniform (order G)))", "by(simp add: pmf.map_comp o_def option.map_comp)"], ["proof (state)\nthis:\n  map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n   (sample_uniform (order G)) =\n  map_spmf (\\<lambda>x. x \\<otimes> c)\n   (map_spmf (([^]) \\<^bold>g) (sample_uniform (order G)))\n\ngoal (1 subgoal):\n 1. finite (carrier G) \\<Longrightarrow>\n    map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n     (sample_uniform (order G)) =\n    map_spmf (([^]) \\<^bold>g) (sample_uniform (order G))", "also"], ["proof (state)\nthis:\n  map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n   (sample_uniform (order G)) =\n  map_spmf (\\<lambda>x. x \\<otimes> c)\n   (map_spmf (([^]) \\<^bold>g) (sample_uniform (order G)))\n\ngoal (1 subgoal):\n 1. finite (carrier G) \\<Longrightarrow>\n    map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n     (sample_uniform (order G)) =\n    map_spmf (([^]) \\<^bold>g) (sample_uniform (order G))", "have rhs: \"?rhs = spmf_of_set (carrier G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_spmf (([^]) \\<^bold>g) (sample_uniform (order G)) =\n    spmf_of_set (carrier G)", "using True"], ["proof (prove)\nusing this:\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. map_spmf (([^]) \\<^bold>g) (sample_uniform (order G)) =\n    spmf_of_set (carrier G)", "by(simp add: carrier_conv_generator inj_on_generator sample_uniform_def)"], ["proof (state)\nthis:\n  map_spmf (([^]) \\<^bold>g) (sample_uniform (order G)) =\n  spmf_of_set (carrier G)\n\ngoal (1 subgoal):\n 1. finite (carrier G) \\<Longrightarrow>\n    map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n     (sample_uniform (order G)) =\n    map_spmf (([^]) \\<^bold>g) (sample_uniform (order G))", "also"], ["proof (state)\nthis:\n  map_spmf (([^]) \\<^bold>g) (sample_uniform (order G)) =\n  spmf_of_set (carrier G)\n\ngoal (1 subgoal):\n 1. finite (carrier G) \\<Longrightarrow>\n    map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n     (sample_uniform (order G)) =\n    map_spmf (([^]) \\<^bold>g) (sample_uniform (order G))", "have \"map_spmf (\\<lambda>x. x \\<otimes> c) \\<dots> = spmf_of_set ((\\<lambda>x. x \\<otimes> c) ` carrier G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_spmf (\\<lambda>x. x \\<otimes> c) (spmf_of_set (carrier G)) =\n    spmf_of_set ((\\<lambda>x. x \\<otimes> c) ` carrier G)", "by(simp add: inj_on_multc)"], ["proof (state)\nthis:\n  map_spmf (\\<lambda>x. x \\<otimes> c) (spmf_of_set (carrier G)) =\n  spmf_of_set ((\\<lambda>x. x \\<otimes> c) ` carrier G)\n\ngoal (1 subgoal):\n 1. finite (carrier G) \\<Longrightarrow>\n    map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n     (sample_uniform (order G)) =\n    map_spmf (([^]) \\<^bold>g) (sample_uniform (order G))", "also"], ["proof (state)\nthis:\n  map_spmf (\\<lambda>x. x \\<otimes> c) (spmf_of_set (carrier G)) =\n  spmf_of_set ((\\<lambda>x. x \\<otimes> c) ` carrier G)\n\ngoal (1 subgoal):\n 1. finite (carrier G) \\<Longrightarrow>\n    map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n     (sample_uniform (order G)) =\n    map_spmf (([^]) \\<^bold>g) (sample_uniform (order G))", "have \"(\\<lambda>x. x \\<otimes> c) ` carrier G = carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x \\<otimes> c) ` carrier G = carrier G", "using True"], ["proof (prove)\nusing this:\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x \\<otimes> c) ` carrier G = carrier G", "by(rule endo_inj_surj)(auto simp add: inj_on_multc)"], ["proof (state)\nthis:\n  (\\<lambda>x. x \\<otimes> c) ` carrier G = carrier G\n\ngoal (1 subgoal):\n 1. finite (carrier G) \\<Longrightarrow>\n    map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n     (sample_uniform (order G)) =\n    map_spmf (([^]) \\<^bold>g) (sample_uniform (order G))", "finally"], ["proof (chain)\npicking this:\n  map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n   (sample_uniform (order G)) =\n  spmf_of_set (carrier G)", "show ?thesis"], ["proof (prove)\nusing this:\n  map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n   (sample_uniform (order G)) =\n  spmf_of_set (carrier G)\n\ngoal (1 subgoal):\n 1. map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n     (sample_uniform (order G)) =\n    map_spmf (([^]) \\<^bold>g) (sample_uniform (order G))", "using rhs"], ["proof (prove)\nusing this:\n  map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n   (sample_uniform (order G)) =\n  spmf_of_set (carrier G)\n  map_spmf (([^]) \\<^bold>g) (sample_uniform (order G)) =\n  spmf_of_set (carrier G)\n\ngoal (1 subgoal):\n 1. map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n     (sample_uniform (order G)) =\n    map_spmf (([^]) \\<^bold>g) (sample_uniform (order G))", "by simp"], ["proof (state)\nthis:\n  map_spmf (\\<lambda>x. \\<^bold>g [^] x \\<otimes> c)\n   (sample_uniform (order G)) =\n  map_spmf (([^]) \\<^bold>g) (sample_uniform (order G))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}