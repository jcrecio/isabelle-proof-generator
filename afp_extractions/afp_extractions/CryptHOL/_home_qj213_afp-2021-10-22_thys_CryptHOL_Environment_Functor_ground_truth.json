{"file_name": "/home/qj213/afp-2021-10-22/thys/CryptHOL/Environment_Functor.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CryptHOL", "problem_names": ["lemma const_apply [simp]: \"const x i = x\"", "lemma ap_envir_apply [simp]: \"(f \\<diamondop> x) i = f i (x i)\"", "lemma all_envirI [Pure.intro!, intro!]: \"(\\<And>x. p x) \\<Longrightarrow> all_envir p\"", "lemma all_envirE [Pure.elim 2, elim]: \"all_envir p \\<Longrightarrow> (p x \\<Longrightarrow> thesis) \\<Longrightarrow> thesis\"", "lemma all_envirD: \"all_envir p \\<Longrightarrow> p x\"", "lemma pred_envir_conv: \"pred_envir p f \\<longleftrightarrow> (\\<forall>x. p (f x))\"", "lemma pred_envirI [Pure.intro!, intro!]: \"(\\<And>x. p (f x)) \\<Longrightarrow> pred_envir p f\"", "lemma pred_envirD: \"pred_envir p f \\<Longrightarrow> p (f x)\"", "lemma pred_envirE [Pure.elim 2, elim]: \"pred_envir p f \\<Longrightarrow> (p (f x) \\<Longrightarrow> thesis) \\<Longrightarrow> thesis\"", "lemma pred_envir_mono: \"\\<lbrakk> pred_envir p f; \\<And>x. p (f x) \\<Longrightarrow> q (g x) \\<rbrakk> \\<Longrightarrow> pred_envir q g\"", "lemma rel_envir_conv: \"rel_envir p f g \\<longleftrightarrow> (\\<forall>x. p (f x) (g x))\"", "lemma rel_envir_conv_rel_fun: \"rel_envir = rel_fun (=)\"", "lemma rel_envirI [Pure.intro!, intro!]: \"(\\<And>x. p (f x) (g x)) \\<Longrightarrow> rel_envir p f g\"", "lemma rel_envirD: \"rel_envir p f g \\<Longrightarrow> p (f x) (g x)\"", "lemma rel_envirE [Pure.elim 2, elim]: \"rel_envir p f g \\<Longrightarrow> (p (f x) (g x) \\<Longrightarrow> thesis) \\<Longrightarrow> thesis\"", "lemma rel_envir_mono: \"\\<lbrakk> rel_envir p f g; \\<And>x. p (f x) (g x) \\<Longrightarrow> q (f' x) (g' x) \\<rbrakk> \\<Longrightarrow> rel_envir q f' g'\"", "lemma rel_envir_mono1: \"\\<lbrakk> pred_envir p f; \\<And>x. p (f x) \\<Longrightarrow> q (f' x) (g' x) \\<rbrakk> \\<Longrightarrow> rel_envir q f' g'\"", "lemma pred_envir_mono2: \"\\<lbrakk> rel_envir p f g; \\<And>x. p (f x) (g x) \\<Longrightarrow> q (f' x) \\<rbrakk> \\<Longrightarrow> pred_envir q f'\""], "translations": [["", "lemma const_apply [simp]: \"const x i = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pure x i = x", "by(simp add: const_def)"], ["", "context includes applicative_syntax begin"], ["", "lemma ap_envir_apply [simp]: \"(f \\<diamondop> x) i = f i (x i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<diamondop> x) i = f i (x i)", "by(simp add: apf_def)"], ["", "definition all_envir :: \"('i, bool) envir \\<Rightarrow> bool\"\nwhere \"all_envir p \\<longleftrightarrow> (\\<forall>x. p x)\""], ["", "lemma all_envirI [Pure.intro!, intro!]: \"(\\<And>x. p x) \\<Longrightarrow> all_envir p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. p x) \\<Longrightarrow> all_envir p", "by(simp add: all_envir_def)"], ["", "lemma all_envirE [Pure.elim 2, elim]: \"all_envir p \\<Longrightarrow> (p x \\<Longrightarrow> thesis) \\<Longrightarrow> thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>all_envir p; p x \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by(simp add: all_envir_def)"], ["", "lemma all_envirD: \"all_envir p \\<Longrightarrow> p x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. all_envir p \\<Longrightarrow> p x", "by(simp add: all_envir_def)"], ["", "definition pred_envir :: \"('a \\<Rightarrow> bool) \\<Rightarrow> ('i, 'a) envir \\<Rightarrow> bool\"\nwhere \"pred_envir p f = all_envir (const p \\<diamondop> f)\""], ["", "lemma pred_envir_conv: \"pred_envir p f \\<longleftrightarrow> (\\<forall>x. p (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pred_envir p f = (\\<forall>x. p (f x))", "by(auto simp add: pred_envir_def)"], ["", "lemma pred_envirI [Pure.intro!, intro!]: \"(\\<And>x. p (f x)) \\<Longrightarrow> pred_envir p f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. p (f x)) \\<Longrightarrow> pred_envir p f", "by(auto simp add: pred_envir_def)"], ["", "lemma pred_envirD: \"pred_envir p f \\<Longrightarrow> p (f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pred_envir p f \\<Longrightarrow> p (f x)", "by(auto simp add: pred_envir_def)"], ["", "lemma pred_envirE [Pure.elim 2, elim]: \"pred_envir p f \\<Longrightarrow> (p (f x) \\<Longrightarrow> thesis) \\<Longrightarrow> thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pred_envir p f; p (f x) \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by(simp add: pred_envir_conv)"], ["", "lemma pred_envir_mono: \"\\<lbrakk> pred_envir p f; \\<And>x. p (f x) \\<Longrightarrow> q (g x) \\<rbrakk> \\<Longrightarrow> pred_envir q g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pred_envir p f;\n     \\<And>x. p (f x) \\<Longrightarrow> q (g x)\\<rbrakk>\n    \\<Longrightarrow> pred_envir q g", "by blast"], ["", "definition rel_envir :: \"('a \\<Rightarrow> 'b \\<Rightarrow> bool) \\<Rightarrow> ('i, 'a) envir \\<Rightarrow> ('i, 'b) envir \\<Rightarrow> bool\"\nwhere \"rel_envir p f g \\<longleftrightarrow> all_envir (const p \\<diamondop> f \\<diamondop> g)\""], ["", "lemma rel_envir_conv: \"rel_envir p f g \\<longleftrightarrow> (\\<forall>x. p (f x) (g x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_envir p f g = (\\<forall>x. p (f x) (g x))", "by(auto simp add: rel_envir_def)"], ["", "lemma rel_envir_conv_rel_fun: \"rel_envir = rel_fun (=)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_envir = rel_fun (=)", "by(simp add: rel_envir_conv rel_fun_def fun_eq_iff)"], ["", "lemma rel_envirI [Pure.intro!, intro!]: \"(\\<And>x. p (f x) (g x)) \\<Longrightarrow> rel_envir p f g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. p (f x) (g x)) \\<Longrightarrow> rel_envir p f g", "by(auto simp add: rel_envir_def)"], ["", "lemma rel_envirD: \"rel_envir p f g \\<Longrightarrow> p (f x) (g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_envir p f g \\<Longrightarrow> p (f x) (g x)", "by(auto simp add: rel_envir_def)"], ["", "lemma rel_envirE [Pure.elim 2, elim]: \"rel_envir p f g \\<Longrightarrow> (p (f x) (g x) \\<Longrightarrow> thesis) \\<Longrightarrow> thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>rel_envir p f g;\n     p (f x) (g x) \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by(simp add: rel_envir_conv)"], ["", "lemma rel_envir_mono: \"\\<lbrakk> rel_envir p f g; \\<And>x. p (f x) (g x) \\<Longrightarrow> q (f' x) (g' x) \\<rbrakk> \\<Longrightarrow> rel_envir q f' g'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>rel_envir p f g;\n     \\<And>x. p (f x) (g x) \\<Longrightarrow> q (f' x) (g' x)\\<rbrakk>\n    \\<Longrightarrow> rel_envir q f' g'", "by blast"], ["", "lemma rel_envir_mono1: \"\\<lbrakk> pred_envir p f; \\<And>x. p (f x) \\<Longrightarrow> q (f' x) (g' x) \\<rbrakk> \\<Longrightarrow> rel_envir q f' g'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pred_envir p f;\n     \\<And>x. p (f x) \\<Longrightarrow> q (f' x) (g' x)\\<rbrakk>\n    \\<Longrightarrow> rel_envir q f' g'", "by blast"], ["", "lemma pred_envir_mono2: \"\\<lbrakk> rel_envir p f g; \\<And>x. p (f x) (g x) \\<Longrightarrow> q (f' x) \\<rbrakk> \\<Longrightarrow> pred_envir q f'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>rel_envir p f g;\n     \\<And>x. p (f x) (g x) \\<Longrightarrow> q (f' x)\\<rbrakk>\n    \\<Longrightarrow> pred_envir q f'", "by blast"], ["", "end"], ["", "end"]]}