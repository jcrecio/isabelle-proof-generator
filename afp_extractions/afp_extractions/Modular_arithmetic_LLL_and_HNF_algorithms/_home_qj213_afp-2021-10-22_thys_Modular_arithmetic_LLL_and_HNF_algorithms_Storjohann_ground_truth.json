{"file_name": "/home/qj213/afp-2021-10-22/thys/Modular_arithmetic_LLL_and_HNF_algorithms/Storjohann.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Modular_arithmetic_LLL_and_HNF_algorithms", "problem_names": ["lemma max_list_rats_with_index_in_set: \n  assumes max: \"max_list_rats_with_index xs = (nm, dm, im)\"\n  and len: \"length xs \\<ge> 1\"\nshows \"(nm, dm, im) \\<in> set xs\"", "lemma max_list_rats_with_index: assumes \"\\<And> n d i. (n,d,i) \\<in> set xs \\<Longrightarrow> d > 0\" \n  and max: \"max_list_rats_with_index xs = (nm, dm, im)\" \n  and \"(n,d,i) \\<in> set xs\" \nshows \"rat_of_int n / of_int d \\<le> of_int nm / of_int dm\"", "lemma log_base: \"log_base \\<ge> 2\"", "lemma LLL_invD_weak: assumes \"LLL_invariant_weak' i fs\"\n  shows \n  \"lin_indep fs\" \n  \"length (RAT fs) = m\" \n  \"set fs \\<subseteq> carrier_vec n\"\n  \"\\<And> i. i < m \\<Longrightarrow> fs ! i \\<in> carrier_vec n\" \n  \"\\<And> i. i < m \\<Longrightarrow> gso fs i \\<in> carrier_vec n\" \n  \"length fs = m\"\n  \"lattice_of fs = L\" \n  \"weakly_reduced fs i\"\n  \"i \\<le> m\"", "lemma LLL_invI_weak: assumes  \n  \"set fs \\<subseteq> carrier_vec n\"\n  \"length fs = m\"\n  \"lattice_of fs = L\" \n  \"i \\<le> m\"\n  \"lin_indep fs\" \n  \"weakly_reduced fs i\" \nshows \"LLL_invariant_weak' i fs\"", "lemma LLL_invw'_imp_w: \"LLL_invariant_weak' i fs \\<Longrightarrow> LLL_invariant_weak fs\"", "lemma basis_reduction_add_row_weak: \n  assumes Linvw: \"LLL_invariant_weak' i fs\"\n  and i: \"i < m\"  and j: \"j < i\" \n  and fs': \"fs' = fs[ i := fs ! i - c \\<cdot>\\<^sub>v fs ! j]\" \nshows \"LLL_invariant_weak' i fs'\"\n  \"g_bnd B fs \\<Longrightarrow> g_bnd B fs'\"", "lemma LLL_inv_weak_m_impl_i:\n  assumes inv: \"LLL_invariant_weak' m fs\"\n  and i: \"i \\<le> m\"\nshows \"LLL_invariant_weak' i fs\"", "lemma compute_mod_of_max_gso_norm: assumes mn: \"mn \\<ge> 0\"\n  and m: \"m = 0 \\<Longrightarrow> mn = 0\" \n  and p: \"p = compute_mod_of_max_gso_norm first mn\" \nshows  \n  \"p > 1\" \n  \"mod_invariant mn p first\"", "lemma g_bnd_mode_cong: assumes \"\\<And> i. i < m \\<Longrightarrow> gso fs i = gso fs' i\"\n  shows \"g_bnd_mode first b fs = g_bnd_mode first b fs'\"", "lemma LLL_invD_mod: assumes \"LLL_invariant_mod fs mfs dmu p first b i\"\nshows \n  \"length mfs = m\"\n  \"i \\<le> m\"\n  \"length fs = m\"\n  \"lattice_of fs = L\"\n  \"gs.lin_indpt_list (RAT fs)\"\n  \"weakly_reduced fs i\"\n  \"(map (map_vec (\\<lambda>x. x symmod p)) fs = mfs)\"\n  \"(\\<forall>i' < m. \\<forall>j' < i'. \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j'))\"\n  \"(\\<forall>i' < m. \\<forall>j' < m. d\\<mu> fs i' j' = dmu $$ (i',j'))\"\n  \"\\<And> i. i < m \\<Longrightarrow> fs ! i \\<in> carrier_vec n\" \n  \"set fs \\<subseteq> carrier_vec n\"\n  \"\\<And> i. i < m \\<Longrightarrow> gso fs i \\<in> carrier_vec n\" \n  \"\\<And> i. i < m \\<Longrightarrow> mfs ! i \\<in> carrier_vec n\"\n  \"set mfs \\<subseteq> carrier_vec n\"\n  \"p > 1\"\n  \"g_bnd_mode first b fs\"\n  \"mod_invariant b p first\"", "lemma LLL_invI_mod: assumes \n  \"length mfs = m\"\n  \"i \\<le> m\"\n  \"length fs = m\"\n  \"lattice_of fs = L\"\n  \"gs.lin_indpt_list (RAT fs)\"\n  \"weakly_reduced fs i\"\n  \"map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\"\n  \"(\\<forall>i' < m. \\<forall>j' < i'. \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j'))\"\n  \"(\\<forall>i' < m. \\<forall>j' < m. d\\<mu> fs i' j' = dmu $$ (i',j'))\"\n  \"p > 1\"\n  \"g_bnd_mode first b fs\"\n  \"mod_invariant b p first\"\nshows \"LLL_invariant_mod fs mfs dmu p first b i\"", "lemma LLL_invD_modw: assumes \"LLL_invariant_mod_weak fs mfs dmu p first b\"\nshows \n  \"length mfs = m\"\n  \"length fs = m\"\n  \"lattice_of fs = L\"\n  \"gs.lin_indpt_list (RAT fs)\"\n  \"(map (map_vec (\\<lambda>x. x symmod p)) fs = mfs)\"\n  \"(\\<forall>i' < m. \\<forall>j' < i'. \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j'))\"\n  \"(\\<forall>i' < m. \\<forall>j' < m. d\\<mu> fs i' j' = dmu $$ (i',j'))\"\n  \"\\<And> i. i < m \\<Longrightarrow> fs ! i \\<in> carrier_vec n\" \n  \"set fs \\<subseteq> carrier_vec n\"\n  \"\\<And> i. i < m \\<Longrightarrow> gso fs i \\<in> carrier_vec n\" \n  \"\\<And> i. i < m \\<Longrightarrow> mfs ! i \\<in> carrier_vec n\"\n  \"set mfs \\<subseteq> carrier_vec n\"\n  \"p > 1\"\n  \"g_bnd_mode first b fs\"\n  \"mod_invariant b p first\"", "lemma LLL_invI_modw: assumes \n  \"length mfs = m\"\n  \"length fs = m\"\n  \"lattice_of fs = L\"\n  \"gs.lin_indpt_list (RAT fs)\"\n  \"map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\"\n  \"(\\<forall>i' < m. \\<forall>j' < i'. \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j'))\"\n  \"(\\<forall>i' < m. \\<forall>j' < m. d\\<mu> fs i' j' = dmu $$ (i',j'))\"\n  \"p > 1\"\n  \"g_bnd_mode first b fs\"\n  \"mod_invariant b p first\"\nshows \"LLL_invariant_mod_weak fs mfs dmu p first b\"", "lemma dd\\<mu>:\n  assumes i: \"i < m\"\n  shows \"d fs (Suc i) = d\\<mu> fs i i\"", "lemma d_of_main: assumes \"(\\<forall>i' < m. d\\<mu> fs i' i' = dmu $$ (i',i'))\"\n  and \"i \\<le> m\"\nshows \"d_of dmu i = d fs i\"", "lemma d_of: assumes inv: \"LLL_invariant_mod fs mfs dmu p b first j\"\n  and \"i \\<le> m\" \nshows \"d_of dmu i = d fs i\"", "lemma d_of_weak: assumes inv: \"LLL_invariant_mod_weak fs mfs dmu p first b\"\n  and \"i \\<le> m\" \nshows \"d_of dmu i = d fs i\"", "lemma compute_max_gso_norm: assumes dmu: \"(\\<forall>i' < m. d\\<mu> fs i' i' = dmu $$ (i',i'))\" \n  and Linv: \"LLL_invariant_weak fs\" \nshows \"g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs\" \n  \"fst (compute_max_gso_norm first dmu) \\<ge> 0\" \n  \"m = 0 \\<Longrightarrow> fst (compute_max_gso_norm first dmu) = 0\"", "lemma increase_i_mod:\n  assumes Linv: \"LLL_invariant_mod fs mfs dmu p first b i\"\n  and i: \"i < m\" \n  and red_i: \"i \\<noteq> 0 \\<Longrightarrow> sq_norm (gso fs (i - 1)) \\<le> \\<alpha> * sq_norm (gso fs i)\"\nshows \"LLL_invariant_mod fs mfs dmu p first b (Suc i)\" \"LLL_measure i fs > LLL_measure (Suc i) fs\"", "lemma basis_reduction_mod_add_row_main:\n  assumes Linvmw: \"LLL_invariant_mod_weak fs mfs dmu p first b\"\n  and i: \"i < m\"  and j: \"j < i\" \n  and c: \"c = round (\\<mu> fs i j)\"\n  and mfs': \"mfs' = mfs[ i := (map_vec (\\<lambda> x. x symmod p)) (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)]\"\n  and dmu': \"dmu' = mat m m (\\<lambda>(i',j'). (if (i' = i \\<and> j' \\<le> j) \n        then (if j'=j then (dmu $$ (i,j') - c * dmu $$ (j,j')) \n              else (dmu $$ (i,j') - c * dmu $$ (j,j')) \n                    symmod (p * (d_of dmu j') * (d_of dmu (Suc j'))))\n        else (dmu $$ (i',j'))))\"\nshows \"(\\<exists>fs'. LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n        LLL_measure i fs' = LLL_measure i fs\n        \\<and> (\\<mu>_small_row i fs (Suc j) \\<longrightarrow> \\<mu>_small_row i fs' j) \n        \\<and> (\\<forall>k < m. gso fs' k = gso fs k)\n        \\<and> (\\<forall>ii \\<le> m. d fs' ii = d fs ii)\n        \\<and> \\<bar>\\<mu> fs' i j\\<bar> \\<le> 1 / 2\n        \\<and> (\\<forall>i' j'. i' < i \\<longrightarrow> j' \\<le> i' \\<longrightarrow> \\<mu> fs' i' j' = \\<mu> fs i' j')\n        \\<and> (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow> LLL_invariant_mod fs' mfs' dmu' p first b i))\"", "lemma basis_reduction_swap_weak': assumes Linvw: \"LLL_invariant_weak' i fs\"\n  and i: \"i < m\"\n  and i0: \"i \\<noteq> 0\"\n  and mu_F1_i: \"\\<bar>\\<mu> fs i (i-1)\\<bar> \\<le> 1 / 2\"\n  and norm_ineq: \"sq_norm (gso fs (i - 1)) > \\<alpha> * sq_norm (gso fs i)\" \n  and fs'_def: \"fs' = fs[i := fs ! (i - 1), i - 1 := fs ! i]\" \nshows \"LLL_invariant_weak' (i - 1) fs'\"", "lemma basis_reduction_add_row_done_weak: \n  assumes Linv: \"LLL_invariant_weak' i fs\"\n  and i: \"i < m\" \n  and mu_small: \"\\<mu>_small_row i fs 0\" \nshows \"\\<mu>_small fs i\"", "lemma LLL_invariant_mod_to_weak_m_to_i: assumes\n  inv: \"LLL_invariant_mod fs mfs dmu p first b m\"\n  and i: \"i \\<le> m\"\nshows \"LLL_invariant_mod fs mfs dmu p first b i\"\n  \"LLL_invariant_weak' m fs\"\n  \"LLL_invariant_weak' i fs\"", "lemma basis_reduction_mod_swap_main: \n  assumes Linvmw: \"LLL_invariant_mod_weak fs mfs dmu p first b\"\n  and k: \"k < m\"\n  and k0: \"k \\<noteq> 0\"\n  and mu_F1_i: \"\\<bar>\\<mu> fs k (k-1)\\<bar> \\<le> 1 / 2\"\n  and norm_ineq: \"sq_norm (gso fs (k - 1)) > \\<alpha> * sq_norm (gso fs k)\" \n  and mfs'_def: \"mfs' = mfs[k := mfs ! (k - 1), k - 1 := mfs ! k]\"\n  and dmu'_def: \"dmu' = (mat m m (\\<lambda>(i,j). (\n      if j < i then\n        if i = k - 1 then \n           dmu $$ (k, j)\n        else if i = k \\<and> j \\<noteq> k - 1 then \n             dmu $$ (k - 1, j)\n        else if i > k \\<and> j = k then\n           ((d_of dmu (Suc k)) * dmu $$ (i, k - 1) - dmu $$ (k, k - 1) * dmu $$ (i, j)) \n              div (d_of dmu k)\n        else if i > k \\<and> j = k - 1 then\n           (dmu $$ (k, k - 1) * dmu $$ (i, j) + dmu $$ (i, k) * (d_of dmu (k-1)))\n              div (d_of dmu k)\n        else dmu $$ (i, j)\n      else if i = j then \n        if i = k - 1 then \n          ((d_of dmu (Suc k)) * (d_of dmu (k-1)) + dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) \n            div (d_of dmu k)\n        else (d_of dmu (Suc i))\n      else dmu $$ (i, j))\n    ))\"\n  and dmu'_mod_def: \"dmu'_mod = mat m m (\\<lambda>(i, j). (\n        if j < i \\<and> (j = k \\<or> j = k - 1) then \n          dmu' $$ (i, j) symmod (p * (d_of dmu' j) * (d_of dmu' (Suc j)))\n        else dmu' $$ (i, j)))\"\nshows \"(\\<exists>fs'. LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n        LLL_measure (k-1) fs' < LLL_measure k fs \\<and>\n        (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow> LLL_invariant_mod fs' mfs' dmu'_mod p first b (k-1)))\"", "lemma dmu_quot_is_round_of_\\<mu>:\n  assumes Linv: \"LLL_invariant_mod fs mfs dmu p first b i'\"\n    and c: \"c = round_num_denom (dmu $$ (i,j)) (d_of dmu (Suc j))\" \n    and i: \"i < m\"\n    and j: \"j < i\"\n  shows \"c = round(\\<mu> fs i j)\"", "lemma dmu_quot_is_round_of_\\<mu>_weak:\n  assumes Linv: \"LLL_invariant_mod_weak fs mfs dmu p first b\"\n    and c: \"c = round_num_denom (dmu $$ (i,j)) (d_of dmu (Suc j))\" \n    and i: \"i < m\"\n    and j: \"j < i\"\n  shows \"c = round(\\<mu> fs i j)\"", "lemma basis_reduction_mod_add_row: assumes \n  Linv: \"LLL_invariant_mod_weak fs mfs dmu p first b\" \n  and res: \"basis_reduction_mod_add_row p mfs dmu i j = (mfs', dmu')\" \n  and i: \"i < m\"\n  and j: \"j < i\"\n  and igtz: \"i \\<noteq> 0\"\nshows \"(\\<exists>fs'. LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n        LLL_measure i fs' = LLL_measure i fs \\<and>\n        (\\<mu>_small_row i fs (Suc j) \\<longrightarrow> \\<mu>_small_row i fs' j) \\<and>\n        \\<bar>\\<mu> fs' i j\\<bar> \\<le> 1 / 2 \\<and>\n        (\\<forall>i' j'. i' < i \\<longrightarrow> j' \\<le> i' \\<longrightarrow> \\<mu> fs' i' j' = \\<mu> fs i' j') \\<and>\n        (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow> LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n        (\\<forall>ii \\<le> m. d fs' ii = d fs ii))\"", "lemma basis_reduction_mod_swap: assumes\n  Linv: \"LLL_invariant_mod_weak fs mfs dmu p first b\"\n  and mu: \"\\<bar>\\<mu> fs k (k-1)\\<bar> \\<le> 1 / 2\"\n  and res: \"basis_reduction_mod_swap p mfs dmu k = (mfs', dmu'_mod)\" \n  and cond: \"sq_norm (gso fs (k - 1)) > \\<alpha> * sq_norm (gso fs k)\"\n  and i: \"k < m\" \"k \\<noteq> 0\" \nshows \"(\\<exists>fs'. LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n        LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n        (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow> LLL_invariant_mod fs' mfs' dmu'_mod p first b (k-1)))\"", "lemma basis_reduction_adjust_mod: assumes \n  Linv: \"LLL_invariant_mod_weak fs mfs dmu p first b\" \n  and res: \"basis_reduction_adjust_mod p first mfs dmu = (p', mfs', dmu', g_idx')\" \nshows \"(\\<exists>fs' b'. (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow> LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs)\"", "lemma alpha_comparison: assumes \n  Linv: \"LLL_invariant_mod_weak fs mfs dmu p first b\"\n  and alph: \"quotient_of \\<alpha> = (num, denom)\" \n  and i: \"i < m\" \n  and i0: \"i \\<noteq> 0\" \nshows \"(d_of dmu i * d_of dmu i * denom \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i))\n  = (sq_norm (gso fs (i - 1)) \\<le> \\<alpha> * sq_norm (gso fs i))\"", "lemma basis_reduction_adjust_swap_add_step: assumes \n  Linv: \"LLL_invariant_mod_weak fs mfs dmu p first b\" \n  and res: \"basis_reduction_adjust_swap_add_step p first mfs dmu g_idx i = (p', mfs', dmu', g_idx')\" \n  and alph: \"quotient_of \\<alpha> = (num, denom)\" \n  and ineq: \"\\<not> (d_of dmu i * d_of dmu i * denom\n              \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i))\" \n  and i: \"i < m\" \n  and i0: \"i \\<noteq> 0\" \nshows \"\\<exists>fs' b'. LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n        LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n        LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n        (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow> \n         LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))\"", "lemma basis_reduction_mod_step: assumes \n  Linv: \"LLL_invariant_mod fs mfs dmu p first b i\" \n  and res: \"basis_reduction_mod_step p first mfs dmu g_idx i j = (p', mfs', dmu', g_idx', i', j')\" \n  and i: \"i < m\" \nshows \"\\<exists>fs' b'. LLL_measure i' fs' < LLL_measure i fs \\<and> LLL_invariant_mod fs' mfs' dmu' p' first b' i'\"", "lemma basis_reduction_mod_main: assumes \"LLL_invariant_mod fs mfs dmu p first b i\" \n  and res: \"basis_reduction_mod_main p first mfs dmu g_idx i j = (p', mfs', dmu')\" \nshows \"\\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\"", "lemma compute_max_gso_quot_alpha: \n  assumes inv: \"LLL_invariant_mod_weak fs mfs dmu p first b\" \n  and max: \"compute_max_gso_quot dmu = (msq_num, msq_denum, idx)\"\n  and alph: \"quotient_of \\<alpha> = (num, denum)\" \n  and cmp: \"(msq_num * denum  > num * msq_denum) = cmp\" \n  and m: \"m > 1\" \nshows \"cmp \\<Longrightarrow> idx \\<noteq> 0 \\<and> idx < m \\<and> \\<not> (d_of dmu idx * d_of dmu idx * denum\n              \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx))\" \n  and \"\\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m\"", "lemma small_m: \n  assumes inv: \"LLL_invariant_mod_weak fs mfs dmu p first b\" \n  and m: \"m \\<le> 1\" \nshows \"LLL_invariant_mod fs mfs dmu p first b m\"", "lemma basis_reduction_iso_main: assumes \"LLL_invariant_mod_weak fs mfs dmu p first b\"\n  and res: \"basis_reduction_iso_main p first mfs dmu g_idx j = (p', mfs', dmu')\" \nshows \"\\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\"", "lemma basis_reduction_mod_add_rows_loop_inv': assumes \n  fsinv: \"LLL_invariant_mod fs mfs dmu p first b m\" \n  and res: \"basis_reduction_mod_add_rows_loop p mfs dmu i i = (mfs', dmu')\" \n  and i: \"i < m\" \nshows \"\\<exists>fs'. LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n        (\\<forall>i' j'. i' < i \\<longrightarrow> j' \\<le> i' \\<longrightarrow> \\<mu> fs i' j' = \\<mu> fs' i' j') \\<and>\n        \\<mu>_small fs' i\"", "lemma basis_reduction_mod_add_rows_outer_loop_inv:\n  assumes inv: \"LLL_invariant_mod fs mfs dmu p first b m\"\n  and \"(mfs', dmu') = basis_reduction_mod_add_rows_outer_loop p mfs dmu i\"\n  and i: \"i < m\"\nshows \"(\\<exists>fs'. LLL_invariant_mod fs' mfs' dmu' p first b m \\<and> \n  (\\<forall>j. j \\<le> i \\<longrightarrow> \\<mu>_small fs' j))\"", "lemma basis_reduction_mod_fs_bound:\n  assumes Linv: \"LLL_invariant_mod fs mfs dmu p first b k\"\n  and mu_small: \"\\<mu>_small fs i\"\n  and i: \"i < m\"\n  and nFirst: \"\\<not> first\" \nshows \"fs ! i = mfs ! i\"", "lemma basis_reduction_mod_fs_bound_first:\n  assumes Linv: \"LLL_invariant_mod fs mfs dmu p first b k\"\n  and m0: \"m > 0\"\n  and first: \"first\" \nshows \"fs ! 0 = mfs ! 0\"", "lemma dmu_initial: \"dmu_initial = mat m m (\\<lambda> (i,j). d\\<mu> fs_init i j)\"", "lemma LLL_initial_invariant_mod: assumes res: \"compute_initial_state first = (p, mfs, dmu', g_idx)\" \nshows \"\\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0\"", "lemma reduce_basis_mod_inv: assumes res: \"reduce_basis_mod = fs\"    \n  shows \"LLL_invariant True m fs\"", "lemma short_vector_mod_inv: assumes res: \"short_vector_mod = v\"    \n  and m: \"m > 0\" \n  shows \"\\<exists> fs. LLL_invariant_weak fs \\<and> weakly_reduced fs m \\<and> v = hd fs\"", "lemma reduce_basis_iso_inv: assumes res: \"reduce_basis_iso = fs\"\n  shows \"LLL_invariant True m fs\"", "lemma short_vector_iso_inv: assumes res: \"short_vector_iso = v\"    \n  and m: \"m > 0\" \n  shows \"\\<exists> fs. LLL_invariant_weak fs \\<and> weakly_reduced fs m \\<and> v = hd fs\""], "translations": [["", "lemma max_list_rats_with_index_in_set: \n  assumes max: \"max_list_rats_with_index xs = (nm, dm, im)\"\n  and len: \"length xs \\<ge> 1\"\nshows \"(nm, dm, im) \\<in> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (nm, dm, im) \\<in> set xs", "using assms"], ["proof (prove)\nusing this:\n  max_list_rats_with_index xs = (nm, dm, im)\n  1 \\<le> length xs\n\ngoal (1 subgoal):\n 1. (nm, dm, im) \\<in> set xs", "proof (induct xs rule: max_list_rats_with_index.induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>max_list_rats_with_index [x] = (nm, dm, im);\n        1 \\<le> length [x]\\<rbrakk>\n       \\<Longrightarrow> (nm, dm, im) \\<in> set [x]\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs.\n       \\<lbrakk>\\<lbrakk>max_list_rats_with_index\n                          ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                            else (n1, d1, i1)) #\n                           xs) =\n                         (nm, dm, im);\n                 1 \\<le> length\n                          ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                            else (n1, d1, i1)) #\n                           xs)\\<rbrakk>\n                \\<Longrightarrow> (nm, dm, im)\n                                  \\<in> set\n   ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs);\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        1 \\<le> length ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> (nm, dm, im)\n                         \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n 3. \\<lbrakk>max_list_rats_with_index [] = (nm, dm, im);\n     1 \\<le> length []\\<rbrakk>\n    \\<Longrightarrow> (nm, dm, im) \\<in> set []", "case (2 n1 d1 i1 n2 d2 i2 xs)"], ["proof (state)\nthis:\n  \\<lbrakk>max_list_rats_with_index\n            ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n              else (n1, d1, i1)) #\n             xs) =\n           (nm, dm, im);\n   1 \\<le> length\n            ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n              else (n1, d1, i1)) #\n             xs)\\<rbrakk>\n  \\<Longrightarrow> (nm, dm, im)\n                    \\<in> set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                                else (n1, d1, i1)) #\n                               xs)\n  max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) = (nm, dm, im)\n  1 \\<le> length ((n1, d1, i1) # (n2, d2, i2) # xs)\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>max_list_rats_with_index [x] = (nm, dm, im);\n        1 \\<le> length [x]\\<rbrakk>\n       \\<Longrightarrow> (nm, dm, im) \\<in> set [x]\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs.\n       \\<lbrakk>\\<lbrakk>max_list_rats_with_index\n                          ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                            else (n1, d1, i1)) #\n                           xs) =\n                         (nm, dm, im);\n                 1 \\<le> length\n                          ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                            else (n1, d1, i1)) #\n                           xs)\\<rbrakk>\n                \\<Longrightarrow> (nm, dm, im)\n                                  \\<in> set\n   ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs);\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        1 \\<le> length ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> (nm, dm, im)\n                         \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n 3. \\<lbrakk>max_list_rats_with_index [] = (nm, dm, im);\n     1 \\<le> length []\\<rbrakk>\n    \\<Longrightarrow> (nm, dm, im) \\<in> set []", "have \"1 \\<le> length ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> length\n             ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n               else (n1, d1, i1)) #\n              xs)", "by simp"], ["proof (state)\nthis:\n  1 \\<le> length\n           ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) #\n            xs)\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>max_list_rats_with_index [x] = (nm, dm, im);\n        1 \\<le> length [x]\\<rbrakk>\n       \\<Longrightarrow> (nm, dm, im) \\<in> set [x]\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs.\n       \\<lbrakk>\\<lbrakk>max_list_rats_with_index\n                          ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                            else (n1, d1, i1)) #\n                           xs) =\n                         (nm, dm, im);\n                 1 \\<le> length\n                          ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                            else (n1, d1, i1)) #\n                           xs)\\<rbrakk>\n                \\<Longrightarrow> (nm, dm, im)\n                                  \\<in> set\n   ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs);\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        1 \\<le> length ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> (nm, dm, im)\n                         \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n 3. \\<lbrakk>max_list_rats_with_index [] = (nm, dm, im);\n     1 \\<le> length []\\<rbrakk>\n    \\<Longrightarrow> (nm, dm, im) \\<in> set []", "moreover"], ["proof (state)\nthis:\n  1 \\<le> length\n           ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) #\n            xs)\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>max_list_rats_with_index [x] = (nm, dm, im);\n        1 \\<le> length [x]\\<rbrakk>\n       \\<Longrightarrow> (nm, dm, im) \\<in> set [x]\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs.\n       \\<lbrakk>\\<lbrakk>max_list_rats_with_index\n                          ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                            else (n1, d1, i1)) #\n                           xs) =\n                         (nm, dm, im);\n                 1 \\<le> length\n                          ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                            else (n1, d1, i1)) #\n                           xs)\\<rbrakk>\n                \\<Longrightarrow> (nm, dm, im)\n                                  \\<in> set\n   ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs);\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        1 \\<le> length ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> (nm, dm, im)\n                         \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n 3. \\<lbrakk>max_list_rats_with_index [] = (nm, dm, im);\n     1 \\<le> length []\\<rbrakk>\n    \\<Longrightarrow> (nm, dm, im) \\<in> set []", "have \"max_list_rats_with_index ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs)\n              = (nm, dm, im)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_list_rats_with_index\n     ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs) =\n    (nm, dm, im)", "using 2"], ["proof (prove)\nusing this:\n  \\<lbrakk>max_list_rats_with_index\n            ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n              else (n1, d1, i1)) #\n             xs) =\n           (nm, dm, im);\n   1 \\<le> length\n            ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n              else (n1, d1, i1)) #\n             xs)\\<rbrakk>\n  \\<Longrightarrow> (nm, dm, im)\n                    \\<in> set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                                else (n1, d1, i1)) #\n                               xs)\n  max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) = (nm, dm, im)\n  1 \\<le> length ((n1, d1, i1) # (n2, d2, i2) # xs)\n\ngoal (1 subgoal):\n 1. max_list_rats_with_index\n     ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs) =\n    (nm, dm, im)", "by simp"], ["proof (state)\nthis:\n  max_list_rats_with_index\n   ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs) =\n  (nm, dm, im)\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>max_list_rats_with_index [x] = (nm, dm, im);\n        1 \\<le> length [x]\\<rbrakk>\n       \\<Longrightarrow> (nm, dm, im) \\<in> set [x]\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs.\n       \\<lbrakk>\\<lbrakk>max_list_rats_with_index\n                          ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                            else (n1, d1, i1)) #\n                           xs) =\n                         (nm, dm, im);\n                 1 \\<le> length\n                          ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                            else (n1, d1, i1)) #\n                           xs)\\<rbrakk>\n                \\<Longrightarrow> (nm, dm, im)\n                                  \\<in> set\n   ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs);\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        1 \\<le> length ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> (nm, dm, im)\n                         \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n 3. \\<lbrakk>max_list_rats_with_index [] = (nm, dm, im);\n     1 \\<le> length []\\<rbrakk>\n    \\<Longrightarrow> (nm, dm, im) \\<in> set []", "moreover"], ["proof (state)\nthis:\n  max_list_rats_with_index\n   ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs) =\n  (nm, dm, im)\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>max_list_rats_with_index [x] = (nm, dm, im);\n        1 \\<le> length [x]\\<rbrakk>\n       \\<Longrightarrow> (nm, dm, im) \\<in> set [x]\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs.\n       \\<lbrakk>\\<lbrakk>max_list_rats_with_index\n                          ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                            else (n1, d1, i1)) #\n                           xs) =\n                         (nm, dm, im);\n                 1 \\<le> length\n                          ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                            else (n1, d1, i1)) #\n                           xs)\\<rbrakk>\n                \\<Longrightarrow> (nm, dm, im)\n                                  \\<in> set\n   ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs);\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        1 \\<le> length ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> (nm, dm, im)\n                         \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n 3. \\<lbrakk>max_list_rats_with_index [] = (nm, dm, im);\n     1 \\<le> length []\\<rbrakk>\n    \\<Longrightarrow> (nm, dm, im) \\<in> set []", "have \"(if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) \\<in>\n        set ((n1, d1, i1) # (n2, d2, i2) # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1))\n    \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)", "by simp"], ["proof (state)\nthis:\n  (if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1))\n  \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>max_list_rats_with_index [x] = (nm, dm, im);\n        1 \\<le> length [x]\\<rbrakk>\n       \\<Longrightarrow> (nm, dm, im) \\<in> set [x]\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs.\n       \\<lbrakk>\\<lbrakk>max_list_rats_with_index\n                          ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                            else (n1, d1, i1)) #\n                           xs) =\n                         (nm, dm, im);\n                 1 \\<le> length\n                          ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                            else (n1, d1, i1)) #\n                           xs)\\<rbrakk>\n                \\<Longrightarrow> (nm, dm, im)\n                                  \\<in> set\n   ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs);\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        1 \\<le> length ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> (nm, dm, im)\n                         \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n 3. \\<lbrakk>max_list_rats_with_index [] = (nm, dm, im);\n     1 \\<le> length []\\<rbrakk>\n    \\<Longrightarrow> (nm, dm, im) \\<in> set []", "moreover"], ["proof (state)\nthis:\n  (if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1))\n  \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>max_list_rats_with_index [x] = (nm, dm, im);\n        1 \\<le> length [x]\\<rbrakk>\n       \\<Longrightarrow> (nm, dm, im) \\<in> set [x]\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs.\n       \\<lbrakk>\\<lbrakk>max_list_rats_with_index\n                          ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                            else (n1, d1, i1)) #\n                           xs) =\n                         (nm, dm, im);\n                 1 \\<le> length\n                          ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                            else (n1, d1, i1)) #\n                           xs)\\<rbrakk>\n                \\<Longrightarrow> (nm, dm, im)\n                                  \\<in> set\n   ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs);\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        1 \\<le> length ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> (nm, dm, im)\n                         \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n 3. \\<lbrakk>max_list_rats_with_index [] = (nm, dm, im);\n     1 \\<le> length []\\<rbrakk>\n    \\<Longrightarrow> (nm, dm, im) \\<in> set []", "then"], ["proof (chain)\npicking this:\n  (if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1))\n  \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)", "have \"set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs) \\<subseteq>\n        set ((n1, d1, i1) # (n2, d2, i2) # xs)\""], ["proof (prove)\nusing this:\n  (if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1))\n  \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n\ngoal (1 subgoal):\n 1. set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) #\n         xs)\n    \\<subseteq> set ((n1, d1, i1) # (n2, d2, i2) # xs)", "by auto"], ["proof (state)\nthis:\n  set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs)\n  \\<subseteq> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>max_list_rats_with_index [x] = (nm, dm, im);\n        1 \\<le> length [x]\\<rbrakk>\n       \\<Longrightarrow> (nm, dm, im) \\<in> set [x]\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs.\n       \\<lbrakk>\\<lbrakk>max_list_rats_with_index\n                          ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                            else (n1, d1, i1)) #\n                           xs) =\n                         (nm, dm, im);\n                 1 \\<le> length\n                          ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                            else (n1, d1, i1)) #\n                           xs)\\<rbrakk>\n                \\<Longrightarrow> (nm, dm, im)\n                                  \\<in> set\n   ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs);\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        1 \\<le> length ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> (nm, dm, im)\n                         \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n 3. \\<lbrakk>max_list_rats_with_index [] = (nm, dm, im);\n     1 \\<le> length []\\<rbrakk>\n    \\<Longrightarrow> (nm, dm, im) \\<in> set []", "ultimately"], ["proof (chain)\npicking this:\n  1 \\<le> length\n           ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) #\n            xs)\n  max_list_rats_with_index\n   ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs) =\n  (nm, dm, im)\n  (if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1))\n  \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n  set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs)\n  \\<subseteq> set ((n1, d1, i1) # (n2, d2, i2) # xs)", "show ?case"], ["proof (prove)\nusing this:\n  1 \\<le> length\n           ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) #\n            xs)\n  max_list_rats_with_index\n   ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs) =\n  (nm, dm, im)\n  (if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1))\n  \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n  set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs)\n  \\<subseteq> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n\ngoal (1 subgoal):\n 1. (nm, dm, im) \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)", "using 2(1)"], ["proof (prove)\nusing this:\n  1 \\<le> length\n           ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) #\n            xs)\n  max_list_rats_with_index\n   ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs) =\n  (nm, dm, im)\n  (if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1))\n  \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n  set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs)\n  \\<subseteq> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n  \\<lbrakk>max_list_rats_with_index\n            ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n              else (n1, d1, i1)) #\n             xs) =\n           (nm, dm, im);\n   1 \\<le> length\n            ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n              else (n1, d1, i1)) #\n             xs)\\<rbrakk>\n  \\<Longrightarrow> (nm, dm, im)\n                    \\<in> set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                                else (n1, d1, i1)) #\n                               xs)\n\ngoal (1 subgoal):\n 1. (nm, dm, im) \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)", "by auto"], ["proof (state)\nthis:\n  (nm, dm, im) \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>max_list_rats_with_index [x] = (nm, dm, im);\n        1 \\<le> length [x]\\<rbrakk>\n       \\<Longrightarrow> (nm, dm, im) \\<in> set [x]\n 2. \\<lbrakk>max_list_rats_with_index [] = (nm, dm, im);\n     1 \\<le> length []\\<rbrakk>\n    \\<Longrightarrow> (nm, dm, im) \\<in> set []", "qed auto"], ["", "lemma max_list_rats_with_index: assumes \"\\<And> n d i. (n,d,i) \\<in> set xs \\<Longrightarrow> d > 0\" \n  and max: \"max_list_rats_with_index xs = (nm, dm, im)\" \n  and \"(n,d,i) \\<in> set xs\" \nshows \"rat_of_int n / of_int d \\<le> of_int nm / of_int dm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm", "using assms"], ["proof (prove)\nusing this:\n  (?n, ?d, ?i) \\<in> set xs \\<Longrightarrow> 0 < ?d\n  max_list_rats_with_index xs = (nm, dm, im)\n  (n, d, i) \\<in> set xs\n\ngoal (1 subgoal):\n 1. rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm", "proof (induct xs arbitrary: n d i rule: max_list_rats_with_index.induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x n d i.\n       \\<lbrakk>\\<And>n d i.\n                   (n, d, i) \\<in> set [x] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [x] = (nm, dm, im);\n        (n, d, i) \\<in> set [x]\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs n d i.\n       \\<lbrakk>\\<And>n d i.\n                   \\<lbrakk>\\<And>n d i.\n                               (n, d, i)\n                               \\<in> set\n((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) #\n xs) \\<Longrightarrow>\n                               0 < d;\n                    max_list_rats_with_index\n                     ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                       else (n1, d1, i1)) #\n                      xs) =\n                    (nm, dm, im);\n                    (n, d, i)\n                    \\<in> set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                                else (n1, d1, i1)) #\n                               xs)\\<rbrakk>\n                   \\<Longrightarrow> rat_of_int n / rat_of_int d\n                                     \\<le> rat_of_int nm / rat_of_int dm;\n        \\<And>n d i.\n           (n, d, i)\n           \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs) \\<Longrightarrow>\n           0 < d;\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        (n, d, i) \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 3. \\<And>n d i.\n       \\<lbrakk>\\<And>n d i. (n, d, i) \\<in> set [] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [] = (nm, dm, im);\n        (n, d, i) \\<in> set []\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm", "case (2 n1 d1 i1 n2 d2 i2 xs n d i)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>n d i.\n              (n, d, i)\n              \\<in> set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                          else (n1, d1, i1)) #\n                         xs) \\<Longrightarrow>\n              0 < d;\n   max_list_rats_with_index\n    ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) # xs) =\n   (nm, dm, im);\n   (?n, ?d, ?i)\n   \\<in> set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n               else (n1, d1, i1)) #\n              xs)\\<rbrakk>\n  \\<Longrightarrow> rat_of_int ?n / rat_of_int ?d\n                    \\<le> rat_of_int nm / rat_of_int dm\n  (?n, ?d, ?i)\n  \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs) \\<Longrightarrow>\n  0 < ?d\n  max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) = (nm, dm, im)\n  (n, d, i) \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n\ngoal (3 subgoals):\n 1. \\<And>x n d i.\n       \\<lbrakk>\\<And>n d i.\n                   (n, d, i) \\<in> set [x] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [x] = (nm, dm, im);\n        (n, d, i) \\<in> set [x]\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs n d i.\n       \\<lbrakk>\\<And>n d i.\n                   \\<lbrakk>\\<And>n d i.\n                               (n, d, i)\n                               \\<in> set\n((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) #\n xs) \\<Longrightarrow>\n                               0 < d;\n                    max_list_rats_with_index\n                     ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                       else (n1, d1, i1)) #\n                      xs) =\n                    (nm, dm, im);\n                    (n, d, i)\n                    \\<in> set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                                else (n1, d1, i1)) #\n                               xs)\\<rbrakk>\n                   \\<Longrightarrow> rat_of_int n / rat_of_int d\n                                     \\<le> rat_of_int nm / rat_of_int dm;\n        \\<And>n d i.\n           (n, d, i)\n           \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs) \\<Longrightarrow>\n           0 < d;\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        (n, d, i) \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 3. \\<And>n d i.\n       \\<lbrakk>\\<And>n d i. (n, d, i) \\<in> set [] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [] = (nm, dm, im);\n        (n, d, i) \\<in> set []\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm", "let ?r = \"rat_of_int\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x n d i.\n       \\<lbrakk>\\<And>n d i.\n                   (n, d, i) \\<in> set [x] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [x] = (nm, dm, im);\n        (n, d, i) \\<in> set [x]\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs n d i.\n       \\<lbrakk>\\<And>n d i.\n                   \\<lbrakk>\\<And>n d i.\n                               (n, d, i)\n                               \\<in> set\n((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) #\n xs) \\<Longrightarrow>\n                               0 < d;\n                    max_list_rats_with_index\n                     ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                       else (n1, d1, i1)) #\n                      xs) =\n                    (nm, dm, im);\n                    (n, d, i)\n                    \\<in> set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                                else (n1, d1, i1)) #\n                               xs)\\<rbrakk>\n                   \\<Longrightarrow> rat_of_int n / rat_of_int d\n                                     \\<le> rat_of_int nm / rat_of_int dm;\n        \\<And>n d i.\n           (n, d, i)\n           \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs) \\<Longrightarrow>\n           0 < d;\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        (n, d, i) \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 3. \\<And>n d i.\n       \\<lbrakk>\\<And>n d i. (n, d, i) \\<in> set [] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [] = (nm, dm, im);\n        (n, d, i) \\<in> set []\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm", "from 2(2)"], ["proof (chain)\npicking this:\n  (?n, ?d, ?i)\n  \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs) \\<Longrightarrow>\n  0 < ?d", "have \"d1 > 0\" \"d2 > 0\""], ["proof (prove)\nusing this:\n  (?n, ?d, ?i)\n  \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs) \\<Longrightarrow>\n  0 < ?d\n\ngoal (1 subgoal):\n 1. 0 < d1 &&& 0 < d2", "by auto"], ["proof (state)\nthis:\n  0 < d1\n  0 < d2\n\ngoal (3 subgoals):\n 1. \\<And>x n d i.\n       \\<lbrakk>\\<And>n d i.\n                   (n, d, i) \\<in> set [x] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [x] = (nm, dm, im);\n        (n, d, i) \\<in> set [x]\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs n d i.\n       \\<lbrakk>\\<And>n d i.\n                   \\<lbrakk>\\<And>n d i.\n                               (n, d, i)\n                               \\<in> set\n((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) #\n xs) \\<Longrightarrow>\n                               0 < d;\n                    max_list_rats_with_index\n                     ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                       else (n1, d1, i1)) #\n                      xs) =\n                    (nm, dm, im);\n                    (n, d, i)\n                    \\<in> set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                                else (n1, d1, i1)) #\n                               xs)\\<rbrakk>\n                   \\<Longrightarrow> rat_of_int n / rat_of_int d\n                                     \\<le> rat_of_int nm / rat_of_int dm;\n        \\<And>n d i.\n           (n, d, i)\n           \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs) \\<Longrightarrow>\n           0 < d;\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        (n, d, i) \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 3. \\<And>n d i.\n       \\<lbrakk>\\<And>n d i. (n, d, i) \\<in> set [] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [] = (nm, dm, im);\n        (n, d, i) \\<in> set []\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm", "hence d: \"?r d1 > 0\" \"?r d2 > 0\""], ["proof (prove)\nusing this:\n  0 < d1\n  0 < d2\n\ngoal (1 subgoal):\n 1. 0 < rat_of_int d1 &&& 0 < rat_of_int d2", "by auto"], ["proof (state)\nthis:\n  0 < rat_of_int d1\n  0 < rat_of_int d2\n\ngoal (3 subgoals):\n 1. \\<And>x n d i.\n       \\<lbrakk>\\<And>n d i.\n                   (n, d, i) \\<in> set [x] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [x] = (nm, dm, im);\n        (n, d, i) \\<in> set [x]\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs n d i.\n       \\<lbrakk>\\<And>n d i.\n                   \\<lbrakk>\\<And>n d i.\n                               (n, d, i)\n                               \\<in> set\n((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) #\n xs) \\<Longrightarrow>\n                               0 < d;\n                    max_list_rats_with_index\n                     ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                       else (n1, d1, i1)) #\n                      xs) =\n                    (nm, dm, im);\n                    (n, d, i)\n                    \\<in> set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                                else (n1, d1, i1)) #\n                               xs)\\<rbrakk>\n                   \\<Longrightarrow> rat_of_int n / rat_of_int d\n                                     \\<le> rat_of_int nm / rat_of_int dm;\n        \\<And>n d i.\n           (n, d, i)\n           \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs) \\<Longrightarrow>\n           0 < d;\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        (n, d, i) \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 3. \\<And>n d i.\n       \\<lbrakk>\\<And>n d i. (n, d, i) \\<in> set [] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [] = (nm, dm, im);\n        (n, d, i) \\<in> set []\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm", "have \"(n1 * d2 \\<le> n2 * d1) = (?r n1 * ?r d2 \\<le> ?r n2 * ?r d1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n1 * d2 \\<le> n2 * d1) =\n    (rat_of_int n1 * rat_of_int d2 \\<le> rat_of_int n2 * rat_of_int d1)", "unfolding of_int_mult[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (n1 * d2 \\<le> n2 * d1) =\n    (rat_of_int (n1 * d2) \\<le> rat_of_int (n2 * d1))", "by presburger"], ["proof (state)\nthis:\n  (n1 * d2 \\<le> n2 * d1) =\n  (rat_of_int n1 * rat_of_int d2 \\<le> rat_of_int n2 * rat_of_int d1)\n\ngoal (3 subgoals):\n 1. \\<And>x n d i.\n       \\<lbrakk>\\<And>n d i.\n                   (n, d, i) \\<in> set [x] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [x] = (nm, dm, im);\n        (n, d, i) \\<in> set [x]\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs n d i.\n       \\<lbrakk>\\<And>n d i.\n                   \\<lbrakk>\\<And>n d i.\n                               (n, d, i)\n                               \\<in> set\n((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) #\n xs) \\<Longrightarrow>\n                               0 < d;\n                    max_list_rats_with_index\n                     ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                       else (n1, d1, i1)) #\n                      xs) =\n                    (nm, dm, im);\n                    (n, d, i)\n                    \\<in> set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                                else (n1, d1, i1)) #\n                               xs)\\<rbrakk>\n                   \\<Longrightarrow> rat_of_int n / rat_of_int d\n                                     \\<le> rat_of_int nm / rat_of_int dm;\n        \\<And>n d i.\n           (n, d, i)\n           \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs) \\<Longrightarrow>\n           0 < d;\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        (n, d, i) \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 3. \\<And>n d i.\n       \\<lbrakk>\\<And>n d i. (n, d, i) \\<in> set [] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [] = (nm, dm, im);\n        (n, d, i) \\<in> set []\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm", "also"], ["proof (state)\nthis:\n  (n1 * d2 \\<le> n2 * d1) =\n  (rat_of_int n1 * rat_of_int d2 \\<le> rat_of_int n2 * rat_of_int d1)\n\ngoal (3 subgoals):\n 1. \\<And>x n d i.\n       \\<lbrakk>\\<And>n d i.\n                   (n, d, i) \\<in> set [x] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [x] = (nm, dm, im);\n        (n, d, i) \\<in> set [x]\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs n d i.\n       \\<lbrakk>\\<And>n d i.\n                   \\<lbrakk>\\<And>n d i.\n                               (n, d, i)\n                               \\<in> set\n((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) #\n xs) \\<Longrightarrow>\n                               0 < d;\n                    max_list_rats_with_index\n                     ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                       else (n1, d1, i1)) #\n                      xs) =\n                    (nm, dm, im);\n                    (n, d, i)\n                    \\<in> set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                                else (n1, d1, i1)) #\n                               xs)\\<rbrakk>\n                   \\<Longrightarrow> rat_of_int n / rat_of_int d\n                                     \\<le> rat_of_int nm / rat_of_int dm;\n        \\<And>n d i.\n           (n, d, i)\n           \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs) \\<Longrightarrow>\n           0 < d;\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        (n, d, i) \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 3. \\<And>n d i.\n       \\<lbrakk>\\<And>n d i. (n, d, i) \\<in> set [] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [] = (nm, dm, im);\n        (n, d, i) \\<in> set []\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm", "have \"\\<dots> = (?r n1 / ?r d1 \\<le> ?r n2 / ?r d2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rat_of_int n1 * rat_of_int d2 \\<le> rat_of_int n2 * rat_of_int d1) =\n    (rat_of_int n1 / rat_of_int d1 \\<le> rat_of_int n2 / rat_of_int d2)", "using d"], ["proof (prove)\nusing this:\n  0 < rat_of_int d1\n  0 < rat_of_int d2\n\ngoal (1 subgoal):\n 1. (rat_of_int n1 * rat_of_int d2 \\<le> rat_of_int n2 * rat_of_int d1) =\n    (rat_of_int n1 / rat_of_int d1 \\<le> rat_of_int n2 / rat_of_int d2)", "by (smt divide_strict_right_mono leD le_less_linear mult.commute nonzero_mult_div_cancel_left \n        not_less_iff_gr_or_eq times_divide_eq_right)"], ["proof (state)\nthis:\n  (rat_of_int n1 * rat_of_int d2 \\<le> rat_of_int n2 * rat_of_int d1) =\n  (rat_of_int n1 / rat_of_int d1 \\<le> rat_of_int n2 / rat_of_int d2)\n\ngoal (3 subgoals):\n 1. \\<And>x n d i.\n       \\<lbrakk>\\<And>n d i.\n                   (n, d, i) \\<in> set [x] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [x] = (nm, dm, im);\n        (n, d, i) \\<in> set [x]\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs n d i.\n       \\<lbrakk>\\<And>n d i.\n                   \\<lbrakk>\\<And>n d i.\n                               (n, d, i)\n                               \\<in> set\n((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) #\n xs) \\<Longrightarrow>\n                               0 < d;\n                    max_list_rats_with_index\n                     ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                       else (n1, d1, i1)) #\n                      xs) =\n                    (nm, dm, im);\n                    (n, d, i)\n                    \\<in> set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                                else (n1, d1, i1)) #\n                               xs)\\<rbrakk>\n                   \\<Longrightarrow> rat_of_int n / rat_of_int d\n                                     \\<le> rat_of_int nm / rat_of_int dm;\n        \\<And>n d i.\n           (n, d, i)\n           \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs) \\<Longrightarrow>\n           0 < d;\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        (n, d, i) \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 3. \\<And>n d i.\n       \\<lbrakk>\\<And>n d i. (n, d, i) \\<in> set [] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [] = (nm, dm, im);\n        (n, d, i) \\<in> set []\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm", "finally"], ["proof (chain)\npicking this:\n  (n1 * d2 \\<le> n2 * d1) =\n  (rat_of_int n1 / rat_of_int d1 \\<le> rat_of_int n2 / rat_of_int d2)", "have id: \"(n1 * d2 \\<le> n2 * d1) = (?r n1 / ?r d1 \\<le> ?r n2 / ?r d2)\""], ["proof (prove)\nusing this:\n  (n1 * d2 \\<le> n2 * d1) =\n  (rat_of_int n1 / rat_of_int d1 \\<le> rat_of_int n2 / rat_of_int d2)\n\ngoal (1 subgoal):\n 1. (n1 * d2 \\<le> n2 * d1) =\n    (rat_of_int n1 / rat_of_int d1 \\<le> rat_of_int n2 / rat_of_int d2)", "."], ["proof (state)\nthis:\n  (n1 * d2 \\<le> n2 * d1) =\n  (rat_of_int n1 / rat_of_int d1 \\<le> rat_of_int n2 / rat_of_int d2)\n\ngoal (3 subgoals):\n 1. \\<And>x n d i.\n       \\<lbrakk>\\<And>n d i.\n                   (n, d, i) \\<in> set [x] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [x] = (nm, dm, im);\n        (n, d, i) \\<in> set [x]\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs n d i.\n       \\<lbrakk>\\<And>n d i.\n                   \\<lbrakk>\\<And>n d i.\n                               (n, d, i)\n                               \\<in> set\n((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) #\n xs) \\<Longrightarrow>\n                               0 < d;\n                    max_list_rats_with_index\n                     ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                       else (n1, d1, i1)) #\n                      xs) =\n                    (nm, dm, im);\n                    (n, d, i)\n                    \\<in> set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                                else (n1, d1, i1)) #\n                               xs)\\<rbrakk>\n                   \\<Longrightarrow> rat_of_int n / rat_of_int d\n                                     \\<le> rat_of_int nm / rat_of_int dm;\n        \\<And>n d i.\n           (n, d, i)\n           \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs) \\<Longrightarrow>\n           0 < d;\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        (n, d, i) \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 3. \\<And>n d i.\n       \\<lbrakk>\\<And>n d i. (n, d, i) \\<in> set [] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [] = (nm, dm, im);\n        (n, d, i) \\<in> set []\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm", "obtain n' d' i' where new: \"(if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) = (n',d',i')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n' d' i'.\n        (if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) =\n        (n', d', i') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  (if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) =\n  (n', d', i')\n\ngoal (3 subgoals):\n 1. \\<And>x n d i.\n       \\<lbrakk>\\<And>n d i.\n                   (n, d, i) \\<in> set [x] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [x] = (nm, dm, im);\n        (n, d, i) \\<in> set [x]\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs n d i.\n       \\<lbrakk>\\<And>n d i.\n                   \\<lbrakk>\\<And>n d i.\n                               (n, d, i)\n                               \\<in> set\n((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) #\n xs) \\<Longrightarrow>\n                               0 < d;\n                    max_list_rats_with_index\n                     ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                       else (n1, d1, i1)) #\n                      xs) =\n                    (nm, dm, im);\n                    (n, d, i)\n                    \\<in> set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                                else (n1, d1, i1)) #\n                               xs)\\<rbrakk>\n                   \\<Longrightarrow> rat_of_int n / rat_of_int d\n                                     \\<le> rat_of_int nm / rat_of_int dm;\n        \\<And>n d i.\n           (n, d, i)\n           \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs) \\<Longrightarrow>\n           0 < d;\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        (n, d, i) \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 3. \\<And>n d i.\n       \\<lbrakk>\\<And>n d i. (n, d, i) \\<in> set [] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [] = (nm, dm, im);\n        (n, d, i) \\<in> set []\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm", "have nd': \"(n',d',i') \\<in> {(n1,d1,i1), (n2, d2, i2)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n', d', i') \\<in> {(n1, d1, i1), (n2, d2, i2)}", "using new[symmetric]"], ["proof (prove)\nusing this:\n  (n', d', i') =\n  (if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1))\n\ngoal (1 subgoal):\n 1. (n', d', i') \\<in> {(n1, d1, i1), (n2, d2, i2)}", "by auto"], ["proof (state)\nthis:\n  (n', d', i') \\<in> {(n1, d1, i1), (n2, d2, i2)}\n\ngoal (3 subgoals):\n 1. \\<And>x n d i.\n       \\<lbrakk>\\<And>n d i.\n                   (n, d, i) \\<in> set [x] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [x] = (nm, dm, im);\n        (n, d, i) \\<in> set [x]\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs n d i.\n       \\<lbrakk>\\<And>n d i.\n                   \\<lbrakk>\\<And>n d i.\n                               (n, d, i)\n                               \\<in> set\n((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) #\n xs) \\<Longrightarrow>\n                               0 < d;\n                    max_list_rats_with_index\n                     ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                       else (n1, d1, i1)) #\n                      xs) =\n                    (nm, dm, im);\n                    (n, d, i)\n                    \\<in> set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                                else (n1, d1, i1)) #\n                               xs)\\<rbrakk>\n                   \\<Longrightarrow> rat_of_int n / rat_of_int d\n                                     \\<le> rat_of_int nm / rat_of_int dm;\n        \\<And>n d i.\n           (n, d, i)\n           \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs) \\<Longrightarrow>\n           0 < d;\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        (n, d, i) \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 3. \\<And>n d i.\n       \\<lbrakk>\\<And>n d i. (n, d, i) \\<in> set [] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [] = (nm, dm, im);\n        (n, d, i) \\<in> set []\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm", "from 2(3)"], ["proof (chain)\npicking this:\n  max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) = (nm, dm, im)", "have res: \"max_list_rats_with_index ((n',d',i') # xs) = (nm, dm, im)\""], ["proof (prove)\nusing this:\n  max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) = (nm, dm, im)\n\ngoal (1 subgoal):\n 1. max_list_rats_with_index ((n', d', i') # xs) = (nm, dm, im)", "using new"], ["proof (prove)\nusing this:\n  max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) = (nm, dm, im)\n  (if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) =\n  (n', d', i')\n\ngoal (1 subgoal):\n 1. max_list_rats_with_index ((n', d', i') # xs) = (nm, dm, im)", "by auto"], ["proof (state)\nthis:\n  max_list_rats_with_index ((n', d', i') # xs) = (nm, dm, im)\n\ngoal (3 subgoals):\n 1. \\<And>x n d i.\n       \\<lbrakk>\\<And>n d i.\n                   (n, d, i) \\<in> set [x] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [x] = (nm, dm, im);\n        (n, d, i) \\<in> set [x]\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs n d i.\n       \\<lbrakk>\\<And>n d i.\n                   \\<lbrakk>\\<And>n d i.\n                               (n, d, i)\n                               \\<in> set\n((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) #\n xs) \\<Longrightarrow>\n                               0 < d;\n                    max_list_rats_with_index\n                     ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                       else (n1, d1, i1)) #\n                      xs) =\n                    (nm, dm, im);\n                    (n, d, i)\n                    \\<in> set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                                else (n1, d1, i1)) #\n                               xs)\\<rbrakk>\n                   \\<Longrightarrow> rat_of_int n / rat_of_int d\n                                     \\<le> rat_of_int nm / rat_of_int dm;\n        \\<And>n d i.\n           (n, d, i)\n           \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs) \\<Longrightarrow>\n           0 < d;\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        (n, d, i) \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 3. \\<And>n d i.\n       \\<lbrakk>\\<And>n d i. (n, d, i) \\<in> set [] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [] = (nm, dm, im);\n        (n, d, i) \\<in> set []\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm", "note 2 = 2[unfolded new]"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>n d i.\n              (n, d, i) \\<in> set ((n', d', i') # xs) \\<Longrightarrow>\n              0 < d;\n   max_list_rats_with_index ((n', d', i') # xs) = (nm, dm, im);\n   (?n, ?d, ?i) \\<in> set ((n', d', i') # xs)\\<rbrakk>\n  \\<Longrightarrow> rat_of_int ?n / rat_of_int ?d\n                    \\<le> rat_of_int nm / rat_of_int dm\n  (?n, ?d, ?i)\n  \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs) \\<Longrightarrow>\n  0 < ?d\n  max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) = (nm, dm, im)\n  (n, d, i) \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n\ngoal (3 subgoals):\n 1. \\<And>x n d i.\n       \\<lbrakk>\\<And>n d i.\n                   (n, d, i) \\<in> set [x] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [x] = (nm, dm, im);\n        (n, d, i) \\<in> set [x]\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 2. \\<And>n1 d1 i1 n2 d2 i2 xs n d i.\n       \\<lbrakk>\\<And>n d i.\n                   \\<lbrakk>\\<And>n d i.\n                               (n, d, i)\n                               \\<in> set\n((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2) else (n1, d1, i1)) #\n xs) \\<Longrightarrow>\n                               0 < d;\n                    max_list_rats_with_index\n                     ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                       else (n1, d1, i1)) #\n                      xs) =\n                    (nm, dm, im);\n                    (n, d, i)\n                    \\<in> set ((if n1 * d2 \\<le> n2 * d1 then (n2, d2, i2)\n                                else (n1, d1, i1)) #\n                               xs)\\<rbrakk>\n                   \\<Longrightarrow> rat_of_int n / rat_of_int d\n                                     \\<le> rat_of_int nm / rat_of_int dm;\n        \\<And>n d i.\n           (n, d, i)\n           \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs) \\<Longrightarrow>\n           0 < d;\n        max_list_rats_with_index ((n1, d1, i1) # (n2, d2, i2) # xs) =\n        (nm, dm, im);\n        (n, d, i) \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 3. \\<And>n d i.\n       \\<lbrakk>\\<And>n d i. (n, d, i) \\<in> set [] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [] = (nm, dm, im);\n        (n, d, i) \\<in> set []\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm", "proof (cases \"(n,d,i) \\<in> set xs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (n, d, i) \\<in> set xs \\<Longrightarrow>\n    rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm\n 2. (n, d, i) \\<notin> set xs \\<Longrightarrow>\n    rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm", "case True"], ["proof (state)\nthis:\n  (n, d, i) \\<in> set xs\n\ngoal (2 subgoals):\n 1. (n, d, i) \\<in> set xs \\<Longrightarrow>\n    rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm\n 2. (n, d, i) \\<notin> set xs \\<Longrightarrow>\n    rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm", "by (rule 2(1)[of n d, OF 2(2) res], insert True nd', force+)"], ["proof (state)\nthis:\n  rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm\n\ngoal (1 subgoal):\n 1. (n, d, i) \\<notin> set xs \\<Longrightarrow>\n    rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (n, d, i) \\<notin> set xs \\<Longrightarrow>\n    rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm", "case False"], ["proof (state)\nthis:\n  (n, d, i) \\<notin> set xs\n\ngoal (1 subgoal):\n 1. (n, d, i) \\<notin> set xs \\<Longrightarrow>\n    rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm", "with 2(4)"], ["proof (chain)\npicking this:\n  (n, d, i) \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n  (n, d, i) \\<notin> set xs", "have \"n = n1 \\<and> d = d1 \\<or> n = n2 \\<and> d = d2\""], ["proof (prove)\nusing this:\n  (n, d, i) \\<in> set ((n1, d1, i1) # (n2, d2, i2) # xs)\n  (n, d, i) \\<notin> set xs\n\ngoal (1 subgoal):\n 1. n = n1 \\<and> d = d1 \\<or> n = n2 \\<and> d = d2", "by auto"], ["proof (state)\nthis:\n  n = n1 \\<and> d = d1 \\<or> n = n2 \\<and> d = d2\n\ngoal (1 subgoal):\n 1. (n, d, i) \\<notin> set xs \\<Longrightarrow>\n    rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm", "hence \"?r n / ?r d \\<le> ?r n' / ?r d'\""], ["proof (prove)\nusing this:\n  n = n1 \\<and> d = d1 \\<or> n = n2 \\<and> d = d2\n\ngoal (1 subgoal):\n 1. rat_of_int n / rat_of_int d \\<le> rat_of_int n' / rat_of_int d'", "using new[unfolded id]"], ["proof (prove)\nusing this:\n  n = n1 \\<and> d = d1 \\<or> n = n2 \\<and> d = d2\n  (if rat_of_int n1 / rat_of_int d1 \\<le> rat_of_int n2 / rat_of_int d2\n   then (n2, d2, i2) else (n1, d1, i1)) =\n  (n', d', i')\n\ngoal (1 subgoal):\n 1. rat_of_int n / rat_of_int d \\<le> rat_of_int n' / rat_of_int d'", "by (metis linear prod.inject)"], ["proof (state)\nthis:\n  rat_of_int n / rat_of_int d \\<le> rat_of_int n' / rat_of_int d'\n\ngoal (1 subgoal):\n 1. (n, d, i) \\<notin> set xs \\<Longrightarrow>\n    rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm", "also"], ["proof (state)\nthis:\n  rat_of_int n / rat_of_int d \\<le> rat_of_int n' / rat_of_int d'\n\ngoal (1 subgoal):\n 1. (n, d, i) \\<notin> set xs \\<Longrightarrow>\n    rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm", "have \"?r n' / ?r d' \\<le> ?r nm / ?r dm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int n' / rat_of_int d' \\<le> rat_of_int nm / rat_of_int dm", "by (rule 2(1)[of n' d', OF 2(2) res], insert nd', force+)"], ["proof (state)\nthis:\n  rat_of_int n' / rat_of_int d' \\<le> rat_of_int nm / rat_of_int dm\n\ngoal (1 subgoal):\n 1. (n, d, i) \\<notin> set xs \\<Longrightarrow>\n    rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm", "finally"], ["proof (chain)\npicking this:\n  rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm", "show ?thesis"], ["proof (prove)\nusing this:\n  rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm\n\ngoal (1 subgoal):\n 1. rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm", "."], ["proof (state)\nthis:\n  rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rat_of_int n / rat_of_int d \\<le> rat_of_int nm / rat_of_int dm\n\ngoal (2 subgoals):\n 1. \\<And>x n d i.\n       \\<lbrakk>\\<And>n d i.\n                   (n, d, i) \\<in> set [x] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [x] = (nm, dm, im);\n        (n, d, i) \\<in> set [x]\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm\n 2. \\<And>n d i.\n       \\<lbrakk>\\<And>n d i. (n, d, i) \\<in> set [] \\<Longrightarrow> 0 < d;\n        max_list_rats_with_index [] = (nm, dm, im);\n        (n, d, i) \\<in> set []\\<rbrakk>\n       \\<Longrightarrow> rat_of_int n / rat_of_int d\n                         \\<le> rat_of_int nm / rat_of_int dm", "qed auto"], ["", "context LLL\nbegin"], ["", "lemma log_base: \"log_base \\<ge> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> log_base", "unfolding log_base_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> 10", "by auto"], ["", "definition LLL_invariant_weak' :: \"nat \\<Rightarrow> int vec list \\<Rightarrow> bool\" where \n  \"LLL_invariant_weak' i fs = ( \n    gs.lin_indpt_list (RAT fs) \\<and> \n    lattice_of fs = L \\<and>\n    weakly_reduced fs i \\<and>\n    i \\<le> m \\<and> \n    length fs = m    \n  )\""], ["", "lemma LLL_invD_weak: assumes \"LLL_invariant_weak' i fs\"\n  shows \n  \"lin_indep fs\" \n  \"length (RAT fs) = m\" \n  \"set fs \\<subseteq> carrier_vec n\"\n  \"\\<And> i. i < m \\<Longrightarrow> fs ! i \\<in> carrier_vec n\" \n  \"\\<And> i. i < m \\<Longrightarrow> gso fs i \\<in> carrier_vec n\" \n  \"length fs = m\"\n  \"lattice_of fs = L\" \n  \"weakly_reduced fs i\"\n  \"i \\<le> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((gs.lin_indpt_list (map of_int_hom.vec_hom fs) &&&\n      length (map of_int_hom.vec_hom fs) = m) &&&\n     set fs \\<subseteq> carrier_vec n &&&\n     (\\<And>i. i < m \\<Longrightarrow> fs ! i \\<in> carrier_vec n)) &&&\n    ((\\<And>i.\n         i < m \\<Longrightarrow>\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) i \\<in> Rn) &&&\n     length fs = m) &&&\n    lattice_of fs = L &&&\n    gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n     i &&&\n    i \\<le> m", "proof (atomize (full), goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. ((gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      length (map of_int_hom.vec_hom fs) = m) \\<and>\n     set fs \\<subseteq> carrier_vec n \\<and>\n     (\\<forall>i<m. fs ! i \\<in> carrier_vec n)) \\<and>\n    ((\\<forall>i<m.\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) i\n         \\<in> Rn) \\<and>\n     length fs = m) \\<and>\n    lattice_of fs = L \\<and>\n    gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n     i \\<and>\n    i \\<le> m", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. ((gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      length (map of_int_hom.vec_hom fs) = m) \\<and>\n     set fs \\<subseteq> carrier_vec n \\<and>\n     (\\<forall>i<m. fs ! i \\<in> carrier_vec n)) \\<and>\n    ((\\<forall>i<m.\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) i\n         \\<in> Rn) \\<and>\n     length fs = m) \\<and>\n    lattice_of fs = L \\<and>\n    gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n     i \\<and>\n    i \\<le> m", "interpret gs': gram_schmidt_fs_lin_indpt n \"RAT fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gram_schmidt_fs_lin_indpt n (map of_int_hom.vec_hom fs)", "by (standard) (use assms LLL_invariant_weak'_def gs.lin_indpt_list_def in auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. ((gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      length (map of_int_hom.vec_hom fs) = m) \\<and>\n     set fs \\<subseteq> carrier_vec n \\<and>\n     (\\<forall>i<m. fs ! i \\<in> carrier_vec n)) \\<and>\n    ((\\<forall>i<m. gs'.gso i \\<in> Rn) \\<and> length fs = m) \\<and>\n    lattice_of fs = L \\<and> gs'.weakly_reduced \\<alpha> i \\<and> i \\<le> m", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      length (map of_int_hom.vec_hom fs) = m) \\<and>\n     set fs \\<subseteq> carrier_vec n \\<and>\n     (\\<forall>i<m. fs ! i \\<in> carrier_vec n)) \\<and>\n    ((\\<forall>i<m. gs'.gso i \\<in> Rn) \\<and> length fs = m) \\<and>\n    lattice_of fs = L \\<and> gs'.weakly_reduced \\<alpha> i \\<and> i \\<le> m", "using assms gs'.fs_carrier gs'.f_carrier gs'.gso_carrier"], ["proof (prove)\nusing this:\n  LLL_invariant_weak' i fs\n  set (map of_int_hom.vec_hom fs) \\<subseteq> Rn\n  ?i < length (map of_int_hom.vec_hom fs) \\<Longrightarrow>\n  map of_int_hom.vec_hom fs ! ?i \\<in> Rn\n  ?i < length (map of_int_hom.vec_hom fs) \\<Longrightarrow>\n  gs'.gso ?i \\<in> Rn\n\ngoal (1 subgoal):\n 1. ((gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      length (map of_int_hom.vec_hom fs) = m) \\<and>\n     set fs \\<subseteq> carrier_vec n \\<and>\n     (\\<forall>i<m. fs ! i \\<in> carrier_vec n)) \\<and>\n    ((\\<forall>i<m. gs'.gso i \\<in> Rn) \\<and> length fs = m) \\<and>\n    lattice_of fs = L \\<and> gs'.weakly_reduced \\<alpha> i \\<and> i \\<le> m", "by (auto simp add: LLL_invariant_weak'_def gram_schmidt_fs.reduced_def)"], ["proof (state)\nthis:\n  ((gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n    length (map of_int_hom.vec_hom fs) = m) \\<and>\n   set fs \\<subseteq> carrier_vec n \\<and>\n   (\\<forall>i<m. fs ! i \\<in> carrier_vec n)) \\<and>\n  ((\\<forall>i<m. gs'.gso i \\<in> Rn) \\<and> length fs = m) \\<and>\n  lattice_of fs = L \\<and> gs'.weakly_reduced \\<alpha> i \\<and> i \\<le> m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma LLL_invI_weak: assumes  \n  \"set fs \\<subseteq> carrier_vec n\"\n  \"length fs = m\"\n  \"lattice_of fs = L\" \n  \"i \\<le> m\"\n  \"lin_indep fs\" \n  \"weakly_reduced fs i\" \nshows \"LLL_invariant_weak' i fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs", "unfolding LLL_invariant_weak'_def Let_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n    lattice_of fs = L \\<and>\n    gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n     i \\<and>\n    i \\<le> m \\<and> length fs = m", "using assms"], ["proof (prove)\nusing this:\n  set fs \\<subseteq> carrier_vec n\n  length fs = m\n  lattice_of fs = L\n  i \\<le> m\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n\ngoal (1 subgoal):\n 1. gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n    lattice_of fs = L \\<and>\n    gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n     i \\<and>\n    i \\<le> m \\<and> length fs = m", "by auto"], ["", "lemma LLL_invw'_imp_w: \"LLL_invariant_weak' i fs \\<Longrightarrow> LLL_invariant_weak fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs \\<Longrightarrow> LLL_invariant_weak fs", "unfolding LLL_invariant_weak'_def LLL_invariant_weak_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n    lattice_of fs = L \\<and>\n    gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n     i \\<and>\n    i \\<le> m \\<and> length fs = m \\<Longrightarrow>\n    gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n    lattice_of fs = L \\<and> length fs = m", "by auto"], ["", "lemma basis_reduction_add_row_weak: \n  assumes Linvw: \"LLL_invariant_weak' i fs\"\n  and i: \"i < m\"  and j: \"j < i\" \n  and fs': \"fs' = fs[ i := fs ! i - c \\<cdot>\\<^sub>v fs ! j]\" \nshows \"LLL_invariant_weak' i fs'\"\n  \"g_bnd B fs \\<Longrightarrow> g_bnd B fs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs' &&& (g_bnd B fs \\<Longrightarrow> g_bnd B fs')", "proof (atomize(full), goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs' \\<and>\n    (g_bnd B fs \\<longrightarrow> g_bnd B fs')", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs' \\<and>\n    (g_bnd B fs \\<longrightarrow> g_bnd B fs')", "note Linv = LLL_invw'_imp_w[OF Linvw]"], ["proof (state)\nthis:\n  LLL_invariant_weak fs\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs' \\<and>\n    (g_bnd B fs \\<longrightarrow> g_bnd B fs')", "note main = basis_reduction_add_row_main[OF Linv i j fs']"], ["proof (state)\nthis:\n  LLL_invariant_weak fs'\n  LLL_invariant True i fs \\<Longrightarrow> LLL_invariant True i fs'\n  \\<lbrakk>c =\n           round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j);\n   \\<mu>_small_row i fs (Suc j)\\<rbrakk>\n  \\<Longrightarrow> \\<mu>_small_row i fs' j\n  c =\n  round\n   (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i\n     j) \\<Longrightarrow>\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n  \\<le> 1 / 2\n  LLL_measure i fs' = LLL_measure i fs\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?i =\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i\n  \\<lbrakk>?i' < m; ?j' < m\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') ?i'\n                     ?j' =\n                    (if ?i' = i \\<and> ?j' \\<le> j\n                     then gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) i ?j' -\n                          rat_of_int c *\n                          gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) j ?j'\n                     else gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) ?i' ?j')\n  ?ii \\<le> m \\<Longrightarrow> d fs' ?ii = d fs ?ii\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs' \\<and>\n    (g_bnd B fs \\<longrightarrow> g_bnd B fs')", "have bnd: \"g_bnd B fs \\<Longrightarrow> g_bnd B fs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g_bnd B fs \\<Longrightarrow> g_bnd B fs'", "using main(6)"], ["proof (prove)\nusing this:\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?i =\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i\n\ngoal (1 subgoal):\n 1. g_bnd B fs \\<Longrightarrow> g_bnd B fs'", "unfolding g_bnd_def"], ["proof (prove)\nusing this:\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?i =\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i\n\ngoal (1 subgoal):\n 1. \\<forall>i<m.\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> B \\<Longrightarrow>\n    \\<forall>i<m.\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                   i\\<parallel>\\<^sup>2\n       \\<le> B", "by auto"], ["proof (state)\nthis:\n  g_bnd B fs \\<Longrightarrow> g_bnd B fs'\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs' \\<and>\n    (g_bnd B fs \\<longrightarrow> g_bnd B fs')", "note new = LLL_inv_wD[OF main(1)]"], ["proof (state)\nthis:\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs')\n  length (map of_int_hom.vec_hom fs') = m\n  set fs' \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow> fs' ! ?i \\<in> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?i \\<in> Rn\n  length fs' = m\n  lattice_of fs' = L\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs' \\<and>\n    (g_bnd B fs \\<longrightarrow> g_bnd B fs')", "note old = LLL_invD_weak[OF Linvw]"], ["proof (state)\nthis:\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  length (map of_int_hom.vec_hom fs) = m\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  length fs = m\n  lattice_of fs = L\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n  i \\<le> m\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs' \\<and>\n    (g_bnd B fs \\<longrightarrow> g_bnd B fs')", "have red: \"weakly_reduced fs' i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs') \\<alpha> i", "using \\<open>weakly_reduced fs i\\<close> main(6) \\<open>i < m\\<close>"], ["proof (prove)\nusing this:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?i =\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i\n  i < m\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs') \\<alpha> i", "unfolding gram_schmidt_fs.weakly_reduced_def"], ["proof (prove)\nusing this:\n  \\<forall>ia.\n     Suc ia < i \\<longrightarrow>\n     \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                 ia\\<parallel>\\<^sup>2\n     \\<le> \\<alpha> *\n           \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                       (Suc ia)\\<parallel>\\<^sup>2\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?i =\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i\n  i < m\n\ngoal (1 subgoal):\n 1. \\<forall>ia.\n       Suc ia < i \\<longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                   ia\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                         (Suc ia)\\<parallel>\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs') \\<alpha> i\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs' \\<and>\n    (g_bnd B fs \\<longrightarrow> g_bnd B fs')", "have inv: \"LLL_invariant_weak' i fs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs'", "using LLL_inv_wD[OF main(1)] \\<open>i < m\\<close>"], ["proof (prove)\nusing this:\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs')\n  length (map of_int_hom.vec_hom fs') = m\n  set fs' \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow> fs' ! ?i \\<in> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?i \\<in> Rn\n  length fs' = m\n  lattice_of fs' = L\n  i < m\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs'", "by (intro LLL_invI_weak, auto intro: red)"], ["proof (state)\nthis:\n  LLL_invariant_weak' i fs'\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs' \\<and>\n    (g_bnd B fs \\<longrightarrow> g_bnd B fs')", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs' \\<and>\n    (g_bnd B fs \\<longrightarrow> g_bnd B fs')", "using inv red main bnd"], ["proof (prove)\nusing this:\n  LLL_invariant_weak' i fs'\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs') \\<alpha> i\n  LLL_invariant_weak fs'\n  LLL_invariant True i fs \\<Longrightarrow> LLL_invariant True i fs'\n  \\<lbrakk>c =\n           round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j);\n   \\<mu>_small_row i fs (Suc j)\\<rbrakk>\n  \\<Longrightarrow> \\<mu>_small_row i fs' j\n  c =\n  round\n   (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i\n     j) \\<Longrightarrow>\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n  \\<le> 1 / 2\n  LLL_measure i fs' = LLL_measure i fs\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?i =\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i\n  \\<lbrakk>?i' < m; ?j' < m\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') ?i'\n                     ?j' =\n                    (if ?i' = i \\<and> ?j' \\<le> j\n                     then gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) i ?j' -\n                          rat_of_int c *\n                          gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) j ?j'\n                     else gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) ?i' ?j')\n  ?ii \\<le> m \\<Longrightarrow> d fs' ?ii = d fs ?ii\n  g_bnd B fs \\<Longrightarrow> g_bnd B fs'\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs' \\<and>\n    (g_bnd B fs \\<longrightarrow> g_bnd B fs')", "by auto"], ["proof (state)\nthis:\n  LLL_invariant_weak' i fs' \\<and>\n  (g_bnd B fs \\<longrightarrow> g_bnd B fs')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma LLL_inv_weak_m_impl_i:\n  assumes inv: \"LLL_invariant_weak' m fs\"\n  and i: \"i \\<le> m\"\nshows \"LLL_invariant_weak' i fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs", "have \"weakly_reduced fs i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i", "using LLL_invD_weak(8)[OF inv]"], ["proof (prove)\nusing this:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> m\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i", "by (meson assms(2) gram_schmidt_fs.weakly_reduced_def le_trans less_imp_le_nat linorder_not_less)"], ["proof (state)\nthis:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs", "then"], ["proof (chain)\npicking this:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i", "show ?thesis"], ["proof (prove)\nusing this:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs", "using LLL_invI_weak[of fs i, OF LLL_invD_weak(3,6,7)[OF inv] _ LLL_invD_weak(1)[OF inv]] \n      LLL_invD_weak(2,4,5,8-)[OF inv] i"], ["proof (prove)\nusing this:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n  \\<lbrakk>i \\<le> m;\n   gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n    i\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak' i fs\n  length (map of_int_hom.vec_hom fs) = m\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> m\n  m \\<le> m\n  i \\<le> m\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_weak' i fs\n\ngoal:\nNo subgoals!", "qed"], ["", "definition mod_invariant where \n  \"mod_invariant b p first = (b \\<le> rat_of_int (p - 1)^2 / (rat_of_nat (bound_number first) + 3)\n     \\<and> (\\<exists> e. p = log_base ^ e))\""], ["", "lemma compute_mod_of_max_gso_norm: assumes mn: \"mn \\<ge> 0\"\n  and m: \"m = 0 \\<Longrightarrow> mn = 0\" \n  and p: \"p = compute_mod_of_max_gso_norm first mn\" \nshows  \n  \"p > 1\" \n  \"mod_invariant mn p first\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < p &&& mod_invariant mn p first", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. 1 < p\n 2. mod_invariant mn p first", "let ?m = \"bound_number first\""], ["proof (state)\ngoal (2 subgoals):\n 1. 1 < p\n 2. mod_invariant mn p first", "define p' where \"p' = root_rat_ceiling 2 (mn * (rat_of_nat ?m + 3)) + 1\""], ["proof (state)\nthis:\n  p' = root_rat_ceiling 2 (mn * (rat_of_nat (bound_number first) + 3)) + 1\n\ngoal (2 subgoals):\n 1. 1 < p\n 2. mod_invariant mn p first", "define p'' where \"p'' = max 2 p'\""], ["proof (state)\nthis:\n  p'' = max 2 p'\n\ngoal (2 subgoals):\n 1. 1 < p\n 2. mod_invariant mn p first", "define q where \"q = real_of_rat (mn * (rat_of_nat ?m + 3))\""], ["proof (state)\nthis:\n  q = real_of_rat (mn * (rat_of_nat (bound_number first) + 3))\n\ngoal (2 subgoals):\n 1. 1 < p\n 2. mod_invariant mn p first", "have *: \"-1 < (0 :: real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 < 0", "by simp"], ["proof (state)\nthis:\n  - 1 < 0\n\ngoal (2 subgoals):\n 1. 1 < p\n 2. mod_invariant mn p first", "also"], ["proof (state)\nthis:\n  - 1 < 0\n\ngoal (2 subgoals):\n 1. 1 < p\n 2. mod_invariant mn p first", "have \"0 \\<le> root 2 (real_of_rat (mn * (rat_of_nat ?m + 3)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> root 2\n             (real_of_rat (mn * (rat_of_nat (bound_number first) + 3)))", "using mn"], ["proof (prove)\nusing this:\n  0 \\<le> mn\n\ngoal (1 subgoal):\n 1. 0 \\<le> root 2\n             (real_of_rat (mn * (rat_of_nat (bound_number first) + 3)))", "by auto"], ["proof (state)\nthis:\n  0 \\<le> root 2 (real_of_rat (mn * (rat_of_nat (bound_number first) + 3)))\n\ngoal (2 subgoals):\n 1. 1 < p\n 2. mod_invariant mn p first", "finally"], ["proof (chain)\npicking this:\n  - 1 < root 2 (real_of_rat (mn * (rat_of_nat (bound_number first) + 3)))", "have \"p' \\<ge> 0 + 1\""], ["proof (prove)\nusing this:\n  - 1 < root 2 (real_of_rat (mn * (rat_of_nat (bound_number first) + 3)))\n\ngoal (1 subgoal):\n 1. 0 + 1 \\<le> p'", "unfolding p'_def"], ["proof (prove)\nusing this:\n  - 1 < root 2 (real_of_rat (mn * (rat_of_nat (bound_number first) + 3)))\n\ngoal (1 subgoal):\n 1. 0 + 1\n    \\<le> root_rat_ceiling 2 (mn * (rat_of_nat (bound_number first) + 3)) +\n          1", "by (intro plus_left_mono, simp)"], ["proof (state)\nthis:\n  0 + 1 \\<le> p'\n\ngoal (2 subgoals):\n 1. 1 < p\n 2. mod_invariant mn p first", "hence p': \"p' > 0\""], ["proof (prove)\nusing this:\n  0 + 1 \\<le> p'\n\ngoal (1 subgoal):\n 1. 0 < p'", "by auto"], ["proof (state)\nthis:\n  0 < p'\n\ngoal (2 subgoals):\n 1. 1 < p\n 2. mod_invariant mn p first", "have p'': \"p'' > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < p''", "unfolding p''_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < max 2 p'", "by auto"], ["proof (state)\nthis:\n  1 < p''\n\ngoal (2 subgoals):\n 1. 1 < p\n 2. mod_invariant mn p first", "have pp'': \"p \\<ge> p''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p'' \\<le> p", "unfolding compute_mod_of_max_gso_norm_def p  p'_def[symmetric] p''_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. p'' \\<le> log_base ^ log_ceiling log_base p''", "using log_base p'' log_ceiling_sound"], ["proof (prove)\nusing this:\n  2 \\<le> log_base\n  1 < p''\n  \\<lbrakk>1 < ?b; 0 < ?x; log_ceiling ?b ?x = ?y\\<rbrakk>\n  \\<Longrightarrow> ?x \\<le> ?b ^ ?y\n  \\<lbrakk>1 < ?b; 0 < ?x; log_ceiling ?b ?x = ?y; ?y \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> ?b ^ (?y - 1) < ?x\n\ngoal (1 subgoal):\n 1. p'' \\<le> log_base ^ log_ceiling log_base p''", "by auto"], ["proof (state)\nthis:\n  p'' \\<le> p\n\ngoal (2 subgoals):\n 1. 1 < p\n 2. mod_invariant mn p first", "hence pp': \"p \\<ge> p'\""], ["proof (prove)\nusing this:\n  p'' \\<le> p\n\ngoal (1 subgoal):\n 1. p' \\<le> p", "unfolding p''_def"], ["proof (prove)\nusing this:\n  max 2 p' \\<le> p\n\ngoal (1 subgoal):\n 1. p' \\<le> p", "by auto"], ["proof (state)\nthis:\n  p' \\<le> p\n\ngoal (2 subgoals):\n 1. 1 < p\n 2. mod_invariant mn p first", "show \"p > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < p", "using pp'' p''"], ["proof (prove)\nusing this:\n  p'' \\<le> p\n  1 < p''\n\ngoal (1 subgoal):\n 1. 1 < p", "by auto"], ["proof (state)\nthis:\n  1 < p\n\ngoal (1 subgoal):\n 1. mod_invariant mn p first", "have q0: \"q \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> q", "unfolding q_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> real_of_rat (mn * (rat_of_nat (bound_number first) + 3))", "using mn m"], ["proof (prove)\nusing this:\n  0 \\<le> mn\n  m = 0 \\<Longrightarrow> mn = 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> real_of_rat (mn * (rat_of_nat (bound_number first) + 3))", "by auto"], ["proof (state)\nthis:\n  0 \\<le> q\n\ngoal (1 subgoal):\n 1. mod_invariant mn p first", "have \"(mn \\<le> rat_of_int (p' - 1)^2 / (rat_of_nat ?m + 3)) \n    = (real_of_rat mn \\<le> real_of_rat (rat_of_int (p' - 1)^2 / (rat_of_nat ?m + 3)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (mn \\<le> (rat_of_int (p' - 1))\\<^sup>2 /\n              (rat_of_nat (bound_number first) + 3)) =\n    (real_of_rat mn\n     \\<le> real_of_rat\n            ((rat_of_int (p' - 1))\\<^sup>2 /\n             (rat_of_nat (bound_number first) + 3)))", "using of_rat_less_eq"], ["proof (prove)\nusing this:\n  (of_rat ?r \\<le> of_rat ?s) = (?r \\<le> ?s)\n\ngoal (1 subgoal):\n 1. (mn \\<le> (rat_of_int (p' - 1))\\<^sup>2 /\n              (rat_of_nat (bound_number first) + 3)) =\n    (real_of_rat mn\n     \\<le> real_of_rat\n            ((rat_of_int (p' - 1))\\<^sup>2 /\n             (rat_of_nat (bound_number first) + 3)))", "by blast"], ["proof (state)\nthis:\n  (mn \\<le> (rat_of_int (p' - 1))\\<^sup>2 /\n            (rat_of_nat (bound_number first) + 3)) =\n  (real_of_rat mn\n   \\<le> real_of_rat\n          ((rat_of_int (p' - 1))\\<^sup>2 /\n           (rat_of_nat (bound_number first) + 3)))\n\ngoal (1 subgoal):\n 1. mod_invariant mn p first", "also"], ["proof (state)\nthis:\n  (mn \\<le> (rat_of_int (p' - 1))\\<^sup>2 /\n            (rat_of_nat (bound_number first) + 3)) =\n  (real_of_rat mn\n   \\<le> real_of_rat\n          ((rat_of_int (p' - 1))\\<^sup>2 /\n           (rat_of_nat (bound_number first) + 3)))\n\ngoal (1 subgoal):\n 1. mod_invariant mn p first", "have \"\\<dots> = (real_of_rat mn \\<le> real_of_rat (rat_of_int (p' - 1)^2) / real_of_rat (rat_of_nat ?m + 3))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (real_of_rat mn\n     \\<le> real_of_rat\n            ((rat_of_int (p' - 1))\\<^sup>2 /\n             (rat_of_nat (bound_number first) + 3))) =\n    (real_of_rat mn\n     \\<le> real_of_rat ((rat_of_int (p' - 1))\\<^sup>2) /\n           real_of_rat (rat_of_nat (bound_number first) + 3))", "by (simp add: of_rat_divide)"], ["proof (state)\nthis:\n  (real_of_rat mn\n   \\<le> real_of_rat\n          ((rat_of_int (p' - 1))\\<^sup>2 /\n           (rat_of_nat (bound_number first) + 3))) =\n  (real_of_rat mn\n   \\<le> real_of_rat ((rat_of_int (p' - 1))\\<^sup>2) /\n         real_of_rat (rat_of_nat (bound_number first) + 3))\n\ngoal (1 subgoal):\n 1. mod_invariant mn p first", "also"], ["proof (state)\nthis:\n  (real_of_rat mn\n   \\<le> real_of_rat\n          ((rat_of_int (p' - 1))\\<^sup>2 /\n           (rat_of_nat (bound_number first) + 3))) =\n  (real_of_rat mn\n   \\<le> real_of_rat ((rat_of_int (p' - 1))\\<^sup>2) /\n         real_of_rat (rat_of_nat (bound_number first) + 3))\n\ngoal (1 subgoal):\n 1. mod_invariant mn p first", "have \"\\<dots> = (real_of_rat mn \\<le> ((real_of_int (p' - 1))^2) / real_of_rat (rat_of_nat ?m + 3))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (real_of_rat mn\n     \\<le> real_of_rat ((rat_of_int (p' - 1))\\<^sup>2) /\n           real_of_rat (rat_of_nat (bound_number first) + 3)) =\n    (real_of_rat mn\n     \\<le> (real_of_int (p' - 1))\\<^sup>2 /\n           real_of_rat (rat_of_nat (bound_number first) + 3))", "by (metis of_rat_of_int_eq of_rat_power)"], ["proof (state)\nthis:\n  (real_of_rat mn\n   \\<le> real_of_rat ((rat_of_int (p' - 1))\\<^sup>2) /\n         real_of_rat (rat_of_nat (bound_number first) + 3)) =\n  (real_of_rat mn\n   \\<le> (real_of_int (p' - 1))\\<^sup>2 /\n         real_of_rat (rat_of_nat (bound_number first) + 3))\n\ngoal (1 subgoal):\n 1. mod_invariant mn p first", "also"], ["proof (state)\nthis:\n  (real_of_rat mn\n   \\<le> real_of_rat ((rat_of_int (p' - 1))\\<^sup>2) /\n         real_of_rat (rat_of_nat (bound_number first) + 3)) =\n  (real_of_rat mn\n   \\<le> (real_of_int (p' - 1))\\<^sup>2 /\n         real_of_rat (rat_of_nat (bound_number first) + 3))\n\ngoal (1 subgoal):\n 1. mod_invariant mn p first", "have \"\\<dots> = (real_of_rat mn \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)^2 / real_of_rat (rat_of_nat ?m + 3))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (real_of_rat mn\n     \\<le> (real_of_int (p' - 1))\\<^sup>2 /\n           real_of_rat (rat_of_nat (bound_number first) + 3)) =\n    (real_of_rat mn\n     \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2 /\n           real_of_rat (rat_of_nat (bound_number first) + 3))", "unfolding p'_def sqrt_def q_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (real_of_rat mn\n     \\<le> (real_of_int\n             (root_rat_ceiling 2\n               (mn * (rat_of_nat (bound_number first) + 3)) +\n              1 -\n              1))\\<^sup>2 /\n           real_of_rat (rat_of_nat (bound_number first) + 3)) =\n    (real_of_rat mn\n     \\<le> (real_of_int\n             \\<lceil>root 2\n                      (real_of_rat\n                        (mn *\n                         (rat_of_nat (bound_number first) +\n                          3)))\\<rceil>)\\<^sup>2 /\n           real_of_rat (rat_of_nat (bound_number first) + 3))", "by simp"], ["proof (state)\nthis:\n  (real_of_rat mn\n   \\<le> (real_of_int (p' - 1))\\<^sup>2 /\n         real_of_rat (rat_of_nat (bound_number first) + 3)) =\n  (real_of_rat mn\n   \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2 /\n         real_of_rat (rat_of_nat (bound_number first) + 3))\n\ngoal (1 subgoal):\n 1. mod_invariant mn p first", "also"], ["proof (state)\nthis:\n  (real_of_rat mn\n   \\<le> (real_of_int (p' - 1))\\<^sup>2 /\n         real_of_rat (rat_of_nat (bound_number first) + 3)) =\n  (real_of_rat mn\n   \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2 /\n         real_of_rat (rat_of_nat (bound_number first) + 3))\n\ngoal (1 subgoal):\n 1. mod_invariant mn p first", "have \"\\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_rat mn\n    \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2 /\n          real_of_rat (rat_of_nat (bound_number first) + 3)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real_of_rat mn\n    \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2 /\n          real_of_rat (rat_of_nat (bound_number first) + 3)", "have \"real_of_rat mn \\<le> q / real_of_rat (rat_of_nat ?m + 3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_rat mn\n    \\<le> q / real_of_rat (rat_of_nat (bound_number first) + 3)", "unfolding q_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_rat mn\n    \\<le> real_of_rat (mn * (rat_of_nat (bound_number first) + 3)) /\n          real_of_rat (rat_of_nat (bound_number first) + 3)", "using m"], ["proof (prove)\nusing this:\n  m = 0 \\<Longrightarrow> mn = 0\n\ngoal (1 subgoal):\n 1. real_of_rat mn\n    \\<le> real_of_rat (mn * (rat_of_nat (bound_number first) + 3)) /\n          real_of_rat (rat_of_nat (bound_number first) + 3)", "by (auto simp: of_rat_mult)"], ["proof (state)\nthis:\n  real_of_rat mn \\<le> q / real_of_rat (rat_of_nat (bound_number first) + 3)\n\ngoal (1 subgoal):\n 1. real_of_rat mn\n    \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2 /\n          real_of_rat (rat_of_nat (bound_number first) + 3)", "also"], ["proof (state)\nthis:\n  real_of_rat mn \\<le> q / real_of_rat (rat_of_nat (bound_number first) + 3)\n\ngoal (1 subgoal):\n 1. real_of_rat mn\n    \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2 /\n          real_of_rat (rat_of_nat (bound_number first) + 3)", "have \"\\<dots> \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)^2 / real_of_rat (rat_of_nat ?m + 3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q / real_of_rat (rat_of_nat (bound_number first) + 3)\n    \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2 /\n          real_of_rat (rat_of_nat (bound_number first) + 3)", "proof (rule divide_right_mono)"], ["proof (state)\ngoal (2 subgoals):\n 1. q \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2\n 2. 0 \\<le> real_of_rat (rat_of_nat (bound_number first) + 3)", "have \"q = (sqrt q)^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q = (sqrt q)\\<^sup>2", "using q0"], ["proof (prove)\nusing this:\n  0 \\<le> q\n\ngoal (1 subgoal):\n 1. q = (sqrt q)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  q = (sqrt q)\\<^sup>2\n\ngoal (2 subgoals):\n 1. q \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2\n 2. 0 \\<le> real_of_rat (rat_of_nat (bound_number first) + 3)", "also"], ["proof (state)\nthis:\n  q = (sqrt q)\\<^sup>2\n\ngoal (2 subgoals):\n 1. q \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2\n 2. 0 \\<le> real_of_rat (rat_of_nat (bound_number first) + 3)", "have \"\\<dots> \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sqrt q)\\<^sup>2 \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2", "by (rule power_mono, auto simp: q0)"], ["proof (state)\nthis:\n  (sqrt q)\\<^sup>2 \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2\n\ngoal (2 subgoals):\n 1. q \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2\n 2. 0 \\<le> real_of_rat (rat_of_nat (bound_number first) + 3)", "finally"], ["proof (chain)\npicking this:\n  q \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2", "show \"q \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)^2\""], ["proof (prove)\nusing this:\n  q \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2\n\ngoal (1 subgoal):\n 1. q \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2", "."], ["proof (state)\nthis:\n  q \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 \\<le> real_of_rat (rat_of_nat (bound_number first) + 3)", "qed auto"], ["proof (state)\nthis:\n  q / real_of_rat (rat_of_nat (bound_number first) + 3)\n  \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2 /\n        real_of_rat (rat_of_nat (bound_number first) + 3)\n\ngoal (1 subgoal):\n 1. real_of_rat mn\n    \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2 /\n          real_of_rat (rat_of_nat (bound_number first) + 3)", "finally"], ["proof (chain)\npicking this:\n  real_of_rat mn\n  \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2 /\n        real_of_rat (rat_of_nat (bound_number first) + 3)", "show ?thesis"], ["proof (prove)\nusing this:\n  real_of_rat mn\n  \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2 /\n        real_of_rat (rat_of_nat (bound_number first) + 3)\n\ngoal (1 subgoal):\n 1. real_of_rat mn\n    \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2 /\n          real_of_rat (rat_of_nat (bound_number first) + 3)", "."], ["proof (state)\nthis:\n  real_of_rat mn\n  \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2 /\n        real_of_rat (rat_of_nat (bound_number first) + 3)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real_of_rat mn\n  \\<le> (real_of_int \\<lceil>sqrt q\\<rceil>)\\<^sup>2 /\n        real_of_rat (rat_of_nat (bound_number first) + 3)\n\ngoal (1 subgoal):\n 1. mod_invariant mn p first", "finally"], ["proof (chain)\npicking this:\n  mn \\<le> (rat_of_int (p' - 1))\\<^sup>2 /\n           (rat_of_nat (bound_number first) + 3)", "have \"mn \\<le> rat_of_int (p' - 1)^2 / (rat_of_nat ?m + 3)\""], ["proof (prove)\nusing this:\n  mn \\<le> (rat_of_int (p' - 1))\\<^sup>2 /\n           (rat_of_nat (bound_number first) + 3)\n\ngoal (1 subgoal):\n 1. mn \\<le> (rat_of_int (p' - 1))\\<^sup>2 /\n             (rat_of_nat (bound_number first) + 3)", "."], ["proof (state)\nthis:\n  mn \\<le> (rat_of_int (p' - 1))\\<^sup>2 /\n           (rat_of_nat (bound_number first) + 3)\n\ngoal (1 subgoal):\n 1. mod_invariant mn p first", "also"], ["proof (state)\nthis:\n  mn \\<le> (rat_of_int (p' - 1))\\<^sup>2 /\n           (rat_of_nat (bound_number first) + 3)\n\ngoal (1 subgoal):\n 1. mod_invariant mn p first", "have \"\\<dots> \\<le> rat_of_int (p - 1)^2 / (rat_of_nat ?m + 3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rat_of_int (p' - 1))\\<^sup>2 / (rat_of_nat (bound_number first) + 3)\n    \\<le> (rat_of_int (p - 1))\\<^sup>2 /\n          (rat_of_nat (bound_number first) + 3)", "unfolding power2_eq_square"], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int (p' - 1) * rat_of_int (p' - 1) /\n    (rat_of_nat (bound_number first) + 3)\n    \\<le> rat_of_int (p - 1) * rat_of_int (p - 1) /\n          (rat_of_nat (bound_number first) + 3)", "by (intro divide_right_mono mult_mono, insert p' pp', auto)"], ["proof (state)\nthis:\n  (rat_of_int (p' - 1))\\<^sup>2 / (rat_of_nat (bound_number first) + 3)\n  \\<le> (rat_of_int (p - 1))\\<^sup>2 / (rat_of_nat (bound_number first) + 3)\n\ngoal (1 subgoal):\n 1. mod_invariant mn p first", "finally"], ["proof (chain)\npicking this:\n  mn \\<le> (rat_of_int (p - 1))\\<^sup>2 /\n           (rat_of_nat (bound_number first) + 3)", "have \"mn \\<le> rat_of_int (p - 1)^2 / (rat_of_nat ?m + 3)\""], ["proof (prove)\nusing this:\n  mn \\<le> (rat_of_int (p - 1))\\<^sup>2 /\n           (rat_of_nat (bound_number first) + 3)\n\ngoal (1 subgoal):\n 1. mn \\<le> (rat_of_int (p - 1))\\<^sup>2 /\n             (rat_of_nat (bound_number first) + 3)", "."], ["proof (state)\nthis:\n  mn \\<le> (rat_of_int (p - 1))\\<^sup>2 /\n           (rat_of_nat (bound_number first) + 3)\n\ngoal (1 subgoal):\n 1. mod_invariant mn p first", "moreover"], ["proof (state)\nthis:\n  mn \\<le> (rat_of_int (p - 1))\\<^sup>2 /\n           (rat_of_nat (bound_number first) + 3)\n\ngoal (1 subgoal):\n 1. mod_invariant mn p first", "have \"\\<exists> e. p = log_base ^ e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e. p = log_base ^ e", "unfolding p compute_mod_of_max_gso_norm_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e.\n       log_base ^\n       log_ceiling log_base\n        (max 2\n          (root_rat_ceiling 2 (mn * (rat_of_nat (bound_number first) + 3)) +\n           1)) =\n       log_base ^ e", "by auto"], ["proof (state)\nthis:\n  \\<exists>e. p = log_base ^ e\n\ngoal (1 subgoal):\n 1. mod_invariant mn p first", "ultimately"], ["proof (chain)\npicking this:\n  mn \\<le> (rat_of_int (p - 1))\\<^sup>2 /\n           (rat_of_nat (bound_number first) + 3)\n  \\<exists>e. p = log_base ^ e", "show \"mod_invariant mn p first\""], ["proof (prove)\nusing this:\n  mn \\<le> (rat_of_int (p - 1))\\<^sup>2 /\n           (rat_of_nat (bound_number first) + 3)\n  \\<exists>e. p = log_base ^ e\n\ngoal (1 subgoal):\n 1. mod_invariant mn p first", "unfolding mod_invariant_def"], ["proof (prove)\nusing this:\n  mn \\<le> (rat_of_int (p - 1))\\<^sup>2 /\n           (rat_of_nat (bound_number first) + 3)\n  \\<exists>e. p = log_base ^ e\n\ngoal (1 subgoal):\n 1. mn \\<le> (rat_of_int (p - 1))\\<^sup>2 /\n             (rat_of_nat (bound_number first) + 3) \\<and>\n    (\\<exists>e. p = log_base ^ e)", "by auto"], ["proof (state)\nthis:\n  mod_invariant mn p first\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma g_bnd_mode_cong: assumes \"\\<And> i. i < m \\<Longrightarrow> gso fs i = gso fs' i\"\n  shows \"g_bnd_mode first b fs = g_bnd_mode first b fs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g_bnd_mode first b fs = g_bnd_mode first b fs'", "using assms"], ["proof (prove)\nusing this:\n  ?i2 < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i2 =\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?i2\n\ngoal (1 subgoal):\n 1. g_bnd_mode first b fs = g_bnd_mode first b fs'", "unfolding g_bnd_mode_def g_bnd_def"], ["proof (prove)\nusing this:\n  ?i2 < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i2 =\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?i2\n\ngoal (1 subgoal):\n 1. (if first \\<and> m \\<noteq> 0\n     then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2\n          \\<le> b\n     else \\<forall>i<m.\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         i\\<parallel>\\<^sup>2\n             \\<le> b) =\n    (if first \\<and> m \\<noteq> 0\n     then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                      0\\<parallel>\\<^sup>2\n          \\<le> b\n     else \\<forall>i<m.\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                         i\\<parallel>\\<^sup>2\n             \\<le> b)", "by auto"], ["", "definition LLL_invariant_mod :: \"int vec list \\<Rightarrow> int vec list \\<Rightarrow> int mat \\<Rightarrow> int \\<Rightarrow> bool \\<Rightarrow> rat \\<Rightarrow> nat \\<Rightarrow> bool\" where \n  \"LLL_invariant_mod fs mfs dmu p first b i = ( \n    length fs = m \\<and>\n    length mfs = m \\<and>\n    i \\<le> m \\<and>\n    lattice_of fs = L \\<and>\n    gs.lin_indpt_list (RAT fs) \\<and>\n    weakly_reduced fs i \\<and>\n    (map (map_vec (\\<lambda>x. x symmod p)) fs = mfs) \\<and>\n    (\\<forall>i' < m. \\<forall> j' < i'. \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')) \\<and>\n    (\\<forall>i' < m. \\<forall>j' < m. d\\<mu> fs i' j' = dmu $$ (i',j')) \\<and>\n    p > 1 \\<and>\n    g_bnd_mode first b fs \\<and>\n    mod_invariant b p first\n)\""], ["", "lemma LLL_invD_mod: assumes \"LLL_invariant_mod fs mfs dmu p first b i\"\nshows \n  \"length mfs = m\"\n  \"i \\<le> m\"\n  \"length fs = m\"\n  \"lattice_of fs = L\"\n  \"gs.lin_indpt_list (RAT fs)\"\n  \"weakly_reduced fs i\"\n  \"(map (map_vec (\\<lambda>x. x symmod p)) fs = mfs)\"\n  \"(\\<forall>i' < m. \\<forall>j' < i'. \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j'))\"\n  \"(\\<forall>i' < m. \\<forall>j' < m. d\\<mu> fs i' j' = dmu $$ (i',j'))\"\n  \"\\<And> i. i < m \\<Longrightarrow> fs ! i \\<in> carrier_vec n\" \n  \"set fs \\<subseteq> carrier_vec n\"\n  \"\\<And> i. i < m \\<Longrightarrow> gso fs i \\<in> carrier_vec n\" \n  \"\\<And> i. i < m \\<Longrightarrow> mfs ! i \\<in> carrier_vec n\"\n  \"set mfs \\<subseteq> carrier_vec n\"\n  \"p > 1\"\n  \"g_bnd_mode first b fs\"\n  \"mod_invariant b p first\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (((length mfs = m &&& i \\<le> m) &&&\n      length fs = m &&& lattice_of fs = L) &&&\n     (gs.lin_indpt_list (map of_int_hom.vec_hom fs) &&&\n      gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n       i) &&&\n     map (map_vec (\\<lambda>x. x symmod p)) fs = mfs &&&\n     \\<forall>i'<m.\n        \\<forall>j'<i'.\n           \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')) &&&\n    ((\\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j') &&&\n      (\\<And>i. i < m \\<Longrightarrow> fs ! i \\<in> carrier_vec n)) &&&\n     set fs \\<subseteq> carrier_vec n &&&\n     (\\<And>i.\n         i < m \\<Longrightarrow>\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) i \\<in> Rn)) &&&\n    ((\\<And>i. i < m \\<Longrightarrow> mfs ! i \\<in> carrier_vec n) &&&\n     set mfs \\<subseteq> carrier_vec n) &&&\n    1 < p &&& g_bnd_mode first b fs &&& mod_invariant b p first", "proof (atomize (full), goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. (((length mfs = m \\<and> i \\<le> m) \\<and>\n      length fs = m \\<and> lattice_of fs = L) \\<and>\n     (gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n       i) \\<and>\n     map (map_vec (\\<lambda>x. x symmod p)) fs = mfs \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<i'.\n            \\<bar>d\\<mu> fs i' j'\\<bar>\n            < p * d fs j' * d fs (Suc j'))) \\<and>\n    (((\\<forall>i'<m.\n          \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')) \\<and>\n      (\\<forall>i<m. fs ! i \\<in> carrier_vec n)) \\<and>\n     set fs \\<subseteq> carrier_vec n \\<and>\n     (\\<forall>i<m.\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) i\n         \\<in> Rn)) \\<and>\n    ((\\<forall>i<m. mfs ! i \\<in> carrier_vec n) \\<and>\n     set mfs \\<subseteq> carrier_vec n) \\<and>\n    1 < p \\<and> g_bnd_mode first b fs \\<and> mod_invariant b p first", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. (((length mfs = m \\<and> i \\<le> m) \\<and>\n      length fs = m \\<and> lattice_of fs = L) \\<and>\n     (gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n       i) \\<and>\n     map (map_vec (\\<lambda>x. x symmod p)) fs = mfs \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<i'.\n            \\<bar>d\\<mu> fs i' j'\\<bar>\n            < p * d fs j' * d fs (Suc j'))) \\<and>\n    (((\\<forall>i'<m.\n          \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')) \\<and>\n      (\\<forall>i<m. fs ! i \\<in> carrier_vec n)) \\<and>\n     set fs \\<subseteq> carrier_vec n \\<and>\n     (\\<forall>i<m.\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) i\n         \\<in> Rn)) \\<and>\n    ((\\<forall>i<m. mfs ! i \\<in> carrier_vec n) \\<and>\n     set mfs \\<subseteq> carrier_vec n) \\<and>\n    1 < p \\<and> g_bnd_mode first b fs \\<and> mod_invariant b p first", "interpret gs': gram_schmidt_fs_lin_indpt n \"RAT fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gram_schmidt_fs_lin_indpt n (map of_int_hom.vec_hom fs)", "using assms LLL_invariant_mod_def gs.lin_indpt_list_def"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b i\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i =\n  (length ?fs = m \\<and>\n   length ?mfs = m \\<and>\n   ?i \\<le> m \\<and>\n   lattice_of ?fs = L \\<and>\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs) \\<and>\n   gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha>\n    ?i \\<and>\n   map (map_vec (\\<lambda>x. x symmod ?p)) ?fs = ?mfs \\<and>\n   (\\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> ?fs i' j'\\<bar>\n          < ?p * d ?fs j' * d ?fs (Suc j')) \\<and>\n   (\\<forall>i'<m.\n       \\<forall>j'<m. d\\<mu> ?fs i' j' = ?dmu $$ (i', j')) \\<and>\n   1 < ?p \\<and> g_bnd_mode ?first ?b ?fs \\<and> mod_invariant ?b ?p ?first)\n  gs.lin_indpt_list ?fs =\n  (set ?fs \\<subseteq> Rn \\<and> distinct ?fs \\<and> gs.lin_indpt (set ?fs))\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs_lin_indpt n (map of_int_hom.vec_hom fs)", "by (meson gram_schmidt_fs_Rn.intro gram_schmidt_fs_lin_indpt.intro gram_schmidt_fs_lin_indpt_axioms.intro)"], ["proof (state)\ngoal (1 subgoal):\n 1. (((length mfs = m \\<and> i \\<le> m) \\<and>\n      length fs = m \\<and> lattice_of fs = L) \\<and>\n     (gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      gs'.weakly_reduced \\<alpha> i) \\<and>\n     map (map_vec (\\<lambda>x. x symmod p)) fs = mfs \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<i'.\n            \\<bar>d\\<mu> fs i' j'\\<bar>\n            < p * d fs j' * d fs (Suc j'))) \\<and>\n    (((\\<forall>i'<m.\n          \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')) \\<and>\n      (\\<forall>i<m. fs ! i \\<in> carrier_vec n)) \\<and>\n     set fs \\<subseteq> carrier_vec n \\<and>\n     (\\<forall>i<m. gs'.gso i \\<in> Rn)) \\<and>\n    ((\\<forall>i<m. mfs ! i \\<in> carrier_vec n) \\<and>\n     set mfs \\<subseteq> carrier_vec n) \\<and>\n    1 < p \\<and> g_bnd_mode first b fs \\<and> mod_invariant b p first", "have allfs: \"\\<forall>i < m. fs ! i \\<in> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<m. fs ! i \\<in> carrier_vec n", "using assms gs'.f_carrier"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b i\n  ?i < length (map of_int_hom.vec_hom fs) \\<Longrightarrow>\n  map of_int_hom.vec_hom fs ! ?i \\<in> Rn\n\ngoal (1 subgoal):\n 1. \\<forall>i<m. fs ! i \\<in> carrier_vec n", "by (simp add: LLL.LLL_invariant_mod_def)"], ["proof (state)\nthis:\n  \\<forall>i<m. fs ! i \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. (((length mfs = m \\<and> i \\<le> m) \\<and>\n      length fs = m \\<and> lattice_of fs = L) \\<and>\n     (gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      gs'.weakly_reduced \\<alpha> i) \\<and>\n     map (map_vec (\\<lambda>x. x symmod p)) fs = mfs \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<i'.\n            \\<bar>d\\<mu> fs i' j'\\<bar>\n            < p * d fs j' * d fs (Suc j'))) \\<and>\n    (((\\<forall>i'<m.\n          \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')) \\<and>\n      (\\<forall>i<m. fs ! i \\<in> carrier_vec n)) \\<and>\n     set fs \\<subseteq> carrier_vec n \\<and>\n     (\\<forall>i<m. gs'.gso i \\<in> Rn)) \\<and>\n    ((\\<forall>i<m. mfs ! i \\<in> carrier_vec n) \\<and>\n     set mfs \\<subseteq> carrier_vec n) \\<and>\n    1 < p \\<and> g_bnd_mode first b fs \\<and> mod_invariant b p first", "then"], ["proof (chain)\npicking this:\n  \\<forall>i<m. fs ! i \\<in> carrier_vec n", "have setfs: \"set fs \\<subseteq> carrier_vec n\""], ["proof (prove)\nusing this:\n  \\<forall>i<m. fs ! i \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. set fs \\<subseteq> carrier_vec n", "by (metis LLL_invariant_mod_def assms in_set_conv_nth subsetI)"], ["proof (state)\nthis:\n  set fs \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. (((length mfs = m \\<and> i \\<le> m) \\<and>\n      length fs = m \\<and> lattice_of fs = L) \\<and>\n     (gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      gs'.weakly_reduced \\<alpha> i) \\<and>\n     map (map_vec (\\<lambda>x. x symmod p)) fs = mfs \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<i'.\n            \\<bar>d\\<mu> fs i' j'\\<bar>\n            < p * d fs j' * d fs (Suc j'))) \\<and>\n    (((\\<forall>i'<m.\n          \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')) \\<and>\n      (\\<forall>i<m. fs ! i \\<in> carrier_vec n)) \\<and>\n     set fs \\<subseteq> carrier_vec n \\<and>\n     (\\<forall>i<m. gs'.gso i \\<in> Rn)) \\<and>\n    ((\\<forall>i<m. mfs ! i \\<in> carrier_vec n) \\<and>\n     set mfs \\<subseteq> carrier_vec n) \\<and>\n    1 < p \\<and> g_bnd_mode first b fs \\<and> mod_invariant b p first", "have allgso: \"(\\<forall>i < m. gso fs i \\<in> carrier_vec n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<m. gs'.gso i \\<in> Rn", "using assms gs'.gso_carrier"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b i\n  ?i < length (map of_int_hom.vec_hom fs) \\<Longrightarrow>\n  gs'.gso ?i \\<in> Rn\n\ngoal (1 subgoal):\n 1. \\<forall>i<m. gs'.gso i \\<in> Rn", "by (simp add: LLL.LLL_invariant_mod_def)"], ["proof (state)\nthis:\n  \\<forall>i<m. gs'.gso i \\<in> Rn\n\ngoal (1 subgoal):\n 1. (((length mfs = m \\<and> i \\<le> m) \\<and>\n      length fs = m \\<and> lattice_of fs = L) \\<and>\n     (gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      gs'.weakly_reduced \\<alpha> i) \\<and>\n     map (map_vec (\\<lambda>x. x symmod p)) fs = mfs \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<i'.\n            \\<bar>d\\<mu> fs i' j'\\<bar>\n            < p * d fs j' * d fs (Suc j'))) \\<and>\n    (((\\<forall>i'<m.\n          \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')) \\<and>\n      (\\<forall>i<m. fs ! i \\<in> carrier_vec n)) \\<and>\n     set fs \\<subseteq> carrier_vec n \\<and>\n     (\\<forall>i<m. gs'.gso i \\<in> Rn)) \\<and>\n    ((\\<forall>i<m. mfs ! i \\<in> carrier_vec n) \\<and>\n     set mfs \\<subseteq> carrier_vec n) \\<and>\n    1 < p \\<and> g_bnd_mode first b fs \\<and> mod_invariant b p first", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (((length mfs = m \\<and> i \\<le> m) \\<and>\n      length fs = m \\<and> lattice_of fs = L) \\<and>\n     (gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      gs'.weakly_reduced \\<alpha> i) \\<and>\n     map (map_vec (\\<lambda>x. x symmod p)) fs = mfs \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<i'.\n            \\<bar>d\\<mu> fs i' j'\\<bar>\n            < p * d fs j' * d fs (Suc j'))) \\<and>\n    (((\\<forall>i'<m.\n          \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')) \\<and>\n      (\\<forall>i<m. fs ! i \\<in> carrier_vec n)) \\<and>\n     set fs \\<subseteq> carrier_vec n \\<and>\n     (\\<forall>i<m. gs'.gso i \\<in> Rn)) \\<and>\n    ((\\<forall>i<m. mfs ! i \\<in> carrier_vec n) \\<and>\n     set mfs \\<subseteq> carrier_vec n) \\<and>\n    1 < p \\<and> g_bnd_mode first b fs \\<and> mod_invariant b p first", "using assms gs'.fs_carrier gs'.f_carrier gs'.gso_carrier allfs allgso \n      LLL_invariant_mod_def gram_schmidt_fs.reduced_def in_set_conv_nth setfs"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b i\n  set (map of_int_hom.vec_hom fs) \\<subseteq> Rn\n  ?i < length (map of_int_hom.vec_hom fs) \\<Longrightarrow>\n  map of_int_hom.vec_hom fs ! ?i \\<in> Rn\n  ?i < length (map of_int_hom.vec_hom fs) \\<Longrightarrow>\n  gs'.gso ?i \\<in> Rn\n  \\<forall>i<m. fs ! i \\<in> carrier_vec n\n  \\<forall>i<m. gs'.gso i \\<in> Rn\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i =\n  (length ?fs = m \\<and>\n   length ?mfs = m \\<and>\n   ?i \\<le> m \\<and>\n   lattice_of ?fs = L \\<and>\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs) \\<and>\n   gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha>\n    ?i \\<and>\n   map (map_vec (\\<lambda>x. x symmod ?p)) ?fs = ?mfs \\<and>\n   (\\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> ?fs i' j'\\<bar>\n          < ?p * d ?fs j' * d ?fs (Suc j')) \\<and>\n   (\\<forall>i'<m.\n       \\<forall>j'<m. d\\<mu> ?fs i' j' = ?dmu $$ (i', j')) \\<and>\n   1 < ?p \\<and> g_bnd_mode ?first ?b ?fs \\<and> mod_invariant ?b ?p ?first)\n  gram_schmidt_fs.reduced ?n ?fs ?\\<alpha> ?k =\n  (gram_schmidt_fs.weakly_reduced ?n ?fs ?\\<alpha> ?k \\<and>\n   (\\<forall>i j.\n       i < ?k \\<longrightarrow>\n       j < i \\<longrightarrow>\n       \\<bar>gram_schmidt_fs.\\<mu> ?n ?fs i j\\<bar>\n       \\<le> (1::?'a) / (2::?'a)))\n  (?x \\<in> set ?xs) = (\\<exists>i<length ?xs. ?xs ! i = ?x)\n  set fs \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. (((length mfs = m \\<and> i \\<le> m) \\<and>\n      length fs = m \\<and> lattice_of fs = L) \\<and>\n     (gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      gs'.weakly_reduced \\<alpha> i) \\<and>\n     map (map_vec (\\<lambda>x. x symmod p)) fs = mfs \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<i'.\n            \\<bar>d\\<mu> fs i' j'\\<bar>\n            < p * d fs j' * d fs (Suc j'))) \\<and>\n    (((\\<forall>i'<m.\n          \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')) \\<and>\n      (\\<forall>i<m. fs ! i \\<in> carrier_vec n)) \\<and>\n     set fs \\<subseteq> carrier_vec n \\<and>\n     (\\<forall>i<m. gs'.gso i \\<in> Rn)) \\<and>\n    ((\\<forall>i<m. mfs ! i \\<in> carrier_vec n) \\<and>\n     set mfs \\<subseteq> carrier_vec n) \\<and>\n    1 < p \\<and> g_bnd_mode first b fs \\<and> mod_invariant b p first", "by fastforce"], ["proof (state)\nthis:\n  (((length mfs = m \\<and> i \\<le> m) \\<and>\n    length fs = m \\<and> lattice_of fs = L) \\<and>\n   (gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n    gs'.weakly_reduced \\<alpha> i) \\<and>\n   map (map_vec (\\<lambda>x. x symmod p)) fs = mfs \\<and>\n   (\\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j'))) \\<and>\n  (((\\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')) \\<and>\n    (\\<forall>i<m. fs ! i \\<in> carrier_vec n)) \\<and>\n   set fs \\<subseteq> carrier_vec n \\<and>\n   (\\<forall>i<m. gs'.gso i \\<in> Rn)) \\<and>\n  ((\\<forall>i<m. mfs ! i \\<in> carrier_vec n) \\<and>\n   set mfs \\<subseteq> carrier_vec n) \\<and>\n  1 < p \\<and> g_bnd_mode first b fs \\<and> mod_invariant b p first\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma LLL_invI_mod: assumes \n  \"length mfs = m\"\n  \"i \\<le> m\"\n  \"length fs = m\"\n  \"lattice_of fs = L\"\n  \"gs.lin_indpt_list (RAT fs)\"\n  \"weakly_reduced fs i\"\n  \"map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\"\n  \"(\\<forall>i' < m. \\<forall>j' < i'. \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j'))\"\n  \"(\\<forall>i' < m. \\<forall>j' < m. d\\<mu> fs i' j' = dmu $$ (i',j'))\"\n  \"p > 1\"\n  \"g_bnd_mode first b fs\"\n  \"mod_invariant b p first\"\nshows \"LLL_invariant_mod fs mfs dmu p first b i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu p first b i", "unfolding LLL_invariant_mod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. length fs = m \\<and>\n    length mfs = m \\<and>\n    i \\<le> m \\<and>\n    lattice_of fs = L \\<and>\n    gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n    gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n     i \\<and>\n    map (map_vec (\\<lambda>x. x symmod p)) fs = mfs \\<and>\n    (\\<forall>i'<m.\n        \\<forall>j'<i'.\n           \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')) \\<and>\n    (\\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')) \\<and>\n    1 < p \\<and> g_bnd_mode first b fs \\<and> mod_invariant b p first", "using assms"], ["proof (prove)\nusing this:\n  length mfs = m\n  i \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n\ngoal (1 subgoal):\n 1. length fs = m \\<and>\n    length mfs = m \\<and>\n    i \\<le> m \\<and>\n    lattice_of fs = L \\<and>\n    gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n    gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n     i \\<and>\n    map (map_vec (\\<lambda>x. x symmod p)) fs = mfs \\<and>\n    (\\<forall>i'<m.\n        \\<forall>j'<i'.\n           \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')) \\<and>\n    (\\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')) \\<and>\n    1 < p \\<and> g_bnd_mode first b fs \\<and> mod_invariant b p first", "by blast"], ["", "definition LLL_invariant_mod_weak :: \"int vec list \\<Rightarrow> int vec list \\<Rightarrow> int mat \\<Rightarrow> int \\<Rightarrow> bool \\<Rightarrow> rat \\<Rightarrow> bool\" where \n  \"LLL_invariant_mod_weak fs mfs dmu p first b = ( \n    length fs = m \\<and>\n    length mfs = m \\<and>\n    lattice_of fs = L \\<and>\n    gs.lin_indpt_list (RAT fs) \\<and>\n    (map (map_vec (\\<lambda>x. x symmod p)) fs = mfs) \\<and>\n    (\\<forall>i' < m. \\<forall> j' < i'. \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')) \\<and>\n    (\\<forall>i' < m. \\<forall>j' < m. d\\<mu> fs i' j' = dmu $$ (i',j')) \\<and>\n    p > 1 \\<and>\n    g_bnd_mode first b fs \\<and>\n    mod_invariant b p first\n)\""], ["", "lemma LLL_invD_modw: assumes \"LLL_invariant_mod_weak fs mfs dmu p first b\"\nshows \n  \"length mfs = m\"\n  \"length fs = m\"\n  \"lattice_of fs = L\"\n  \"gs.lin_indpt_list (RAT fs)\"\n  \"(map (map_vec (\\<lambda>x. x symmod p)) fs = mfs)\"\n  \"(\\<forall>i' < m. \\<forall>j' < i'. \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j'))\"\n  \"(\\<forall>i' < m. \\<forall>j' < m. d\\<mu> fs i' j' = dmu $$ (i',j'))\"\n  \"\\<And> i. i < m \\<Longrightarrow> fs ! i \\<in> carrier_vec n\" \n  \"set fs \\<subseteq> carrier_vec n\"\n  \"\\<And> i. i < m \\<Longrightarrow> gso fs i \\<in> carrier_vec n\" \n  \"\\<And> i. i < m \\<Longrightarrow> mfs ! i \\<in> carrier_vec n\"\n  \"set mfs \\<subseteq> carrier_vec n\"\n  \"p > 1\"\n  \"g_bnd_mode first b fs\"\n  \"mod_invariant b p first\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((length mfs = m &&& length fs = m &&& lattice_of fs = L) &&&\n     (gs.lin_indpt_list (map of_int_hom.vec_hom fs) &&&\n      map (map_vec (\\<lambda>x. x symmod p)) fs = mfs) &&&\n     \\<forall>i'<m.\n        \\<forall>j'<i'.\n           \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j') &&&\n     \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')) &&&\n    (((\\<And>i. i < m \\<Longrightarrow> fs ! i \\<in> carrier_vec n) &&&\n      set fs \\<subseteq> carrier_vec n) &&&\n     (\\<And>i.\n         i < m \\<Longrightarrow>\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) i \\<in> Rn) &&&\n     (\\<And>i. i < m \\<Longrightarrow> mfs ! i \\<in> carrier_vec n)) &&&\n    (set mfs \\<subseteq> carrier_vec n &&& 1 < p) &&&\n    g_bnd_mode first b fs &&& mod_invariant b p first", "proof (atomize (full), goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. ((length mfs = m \\<and> length fs = m \\<and> lattice_of fs = L) \\<and>\n     (gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      map (map_vec (\\<lambda>x. x symmod p)) fs = mfs) \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<i'.\n            \\<bar>d\\<mu> fs i' j'\\<bar>\n            < p * d fs j' * d fs (Suc j')) \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j'))) \\<and>\n    (((\\<forall>i<m. fs ! i \\<in> carrier_vec n) \\<and>\n      set fs \\<subseteq> carrier_vec n) \\<and>\n     (\\<forall>i<m.\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) i\n         \\<in> Rn) \\<and>\n     (\\<forall>i<m. mfs ! i \\<in> carrier_vec n)) \\<and>\n    (set mfs \\<subseteq> carrier_vec n \\<and> 1 < p) \\<and>\n    g_bnd_mode first b fs \\<and> mod_invariant b p first", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. ((length mfs = m \\<and> length fs = m \\<and> lattice_of fs = L) \\<and>\n     (gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      map (map_vec (\\<lambda>x. x symmod p)) fs = mfs) \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<i'.\n            \\<bar>d\\<mu> fs i' j'\\<bar>\n            < p * d fs j' * d fs (Suc j')) \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j'))) \\<and>\n    (((\\<forall>i<m. fs ! i \\<in> carrier_vec n) \\<and>\n      set fs \\<subseteq> carrier_vec n) \\<and>\n     (\\<forall>i<m.\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) i\n         \\<in> Rn) \\<and>\n     (\\<forall>i<m. mfs ! i \\<in> carrier_vec n)) \\<and>\n    (set mfs \\<subseteq> carrier_vec n \\<and> 1 < p) \\<and>\n    g_bnd_mode first b fs \\<and> mod_invariant b p first", "interpret gs': gram_schmidt_fs_lin_indpt n \"RAT fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gram_schmidt_fs_lin_indpt n (map of_int_hom.vec_hom fs)", "using assms LLL_invariant_mod_weak_def gs.lin_indpt_list_def"], ["proof (prove)\nusing this:\n  LLL_invariant_mod_weak fs mfs dmu p first b\n  LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b =\n  (length ?fs = m \\<and>\n   length ?mfs = m \\<and>\n   lattice_of ?fs = L \\<and>\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs) \\<and>\n   map (map_vec (\\<lambda>x. x symmod ?p)) ?fs = ?mfs \\<and>\n   (\\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> ?fs i' j'\\<bar>\n          < ?p * d ?fs j' * d ?fs (Suc j')) \\<and>\n   (\\<forall>i'<m.\n       \\<forall>j'<m. d\\<mu> ?fs i' j' = ?dmu $$ (i', j')) \\<and>\n   1 < ?p \\<and> g_bnd_mode ?first ?b ?fs \\<and> mod_invariant ?b ?p ?first)\n  gs.lin_indpt_list ?fs =\n  (set ?fs \\<subseteq> Rn \\<and> distinct ?fs \\<and> gs.lin_indpt (set ?fs))\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs_lin_indpt n (map of_int_hom.vec_hom fs)", "by (meson gram_schmidt_fs_Rn.intro gram_schmidt_fs_lin_indpt.intro gram_schmidt_fs_lin_indpt_axioms.intro)"], ["proof (state)\ngoal (1 subgoal):\n 1. ((length mfs = m \\<and> length fs = m \\<and> lattice_of fs = L) \\<and>\n     (gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      map (map_vec (\\<lambda>x. x symmod p)) fs = mfs) \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<i'.\n            \\<bar>d\\<mu> fs i' j'\\<bar>\n            < p * d fs j' * d fs (Suc j')) \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j'))) \\<and>\n    (((\\<forall>i<m. fs ! i \\<in> carrier_vec n) \\<and>\n      set fs \\<subseteq> carrier_vec n) \\<and>\n     (\\<forall>i<m. gs'.gso i \\<in> Rn) \\<and>\n     (\\<forall>i<m. mfs ! i \\<in> carrier_vec n)) \\<and>\n    (set mfs \\<subseteq> carrier_vec n \\<and> 1 < p) \\<and>\n    g_bnd_mode first b fs \\<and> mod_invariant b p first", "have allfs: \"\\<forall>i < m. fs ! i \\<in> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<m. fs ! i \\<in> carrier_vec n", "using assms gs'.f_carrier"], ["proof (prove)\nusing this:\n  LLL_invariant_mod_weak fs mfs dmu p first b\n  ?i < length (map of_int_hom.vec_hom fs) \\<Longrightarrow>\n  map of_int_hom.vec_hom fs ! ?i \\<in> Rn\n\ngoal (1 subgoal):\n 1. \\<forall>i<m. fs ! i \\<in> carrier_vec n", "by (simp add: LLL.LLL_invariant_mod_weak_def)"], ["proof (state)\nthis:\n  \\<forall>i<m. fs ! i \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. ((length mfs = m \\<and> length fs = m \\<and> lattice_of fs = L) \\<and>\n     (gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      map (map_vec (\\<lambda>x. x symmod p)) fs = mfs) \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<i'.\n            \\<bar>d\\<mu> fs i' j'\\<bar>\n            < p * d fs j' * d fs (Suc j')) \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j'))) \\<and>\n    (((\\<forall>i<m. fs ! i \\<in> carrier_vec n) \\<and>\n      set fs \\<subseteq> carrier_vec n) \\<and>\n     (\\<forall>i<m. gs'.gso i \\<in> Rn) \\<and>\n     (\\<forall>i<m. mfs ! i \\<in> carrier_vec n)) \\<and>\n    (set mfs \\<subseteq> carrier_vec n \\<and> 1 < p) \\<and>\n    g_bnd_mode first b fs \\<and> mod_invariant b p first", "then"], ["proof (chain)\npicking this:\n  \\<forall>i<m. fs ! i \\<in> carrier_vec n", "have setfs: \"set fs \\<subseteq> carrier_vec n\""], ["proof (prove)\nusing this:\n  \\<forall>i<m. fs ! i \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. set fs \\<subseteq> carrier_vec n", "by (metis LLL_invariant_mod_weak_def assms in_set_conv_nth subsetI)"], ["proof (state)\nthis:\n  set fs \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. ((length mfs = m \\<and> length fs = m \\<and> lattice_of fs = L) \\<and>\n     (gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      map (map_vec (\\<lambda>x. x symmod p)) fs = mfs) \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<i'.\n            \\<bar>d\\<mu> fs i' j'\\<bar>\n            < p * d fs j' * d fs (Suc j')) \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j'))) \\<and>\n    (((\\<forall>i<m. fs ! i \\<in> carrier_vec n) \\<and>\n      set fs \\<subseteq> carrier_vec n) \\<and>\n     (\\<forall>i<m. gs'.gso i \\<in> Rn) \\<and>\n     (\\<forall>i<m. mfs ! i \\<in> carrier_vec n)) \\<and>\n    (set mfs \\<subseteq> carrier_vec n \\<and> 1 < p) \\<and>\n    g_bnd_mode first b fs \\<and> mod_invariant b p first", "have allgso: \"(\\<forall>i < m. gso fs i \\<in> carrier_vec n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<m. gs'.gso i \\<in> Rn", "using assms gs'.gso_carrier"], ["proof (prove)\nusing this:\n  LLL_invariant_mod_weak fs mfs dmu p first b\n  ?i < length (map of_int_hom.vec_hom fs) \\<Longrightarrow>\n  gs'.gso ?i \\<in> Rn\n\ngoal (1 subgoal):\n 1. \\<forall>i<m. gs'.gso i \\<in> Rn", "by (simp add: LLL.LLL_invariant_mod_weak_def)"], ["proof (state)\nthis:\n  \\<forall>i<m. gs'.gso i \\<in> Rn\n\ngoal (1 subgoal):\n 1. ((length mfs = m \\<and> length fs = m \\<and> lattice_of fs = L) \\<and>\n     (gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      map (map_vec (\\<lambda>x. x symmod p)) fs = mfs) \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<i'.\n            \\<bar>d\\<mu> fs i' j'\\<bar>\n            < p * d fs j' * d fs (Suc j')) \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j'))) \\<and>\n    (((\\<forall>i<m. fs ! i \\<in> carrier_vec n) \\<and>\n      set fs \\<subseteq> carrier_vec n) \\<and>\n     (\\<forall>i<m. gs'.gso i \\<in> Rn) \\<and>\n     (\\<forall>i<m. mfs ! i \\<in> carrier_vec n)) \\<and>\n    (set mfs \\<subseteq> carrier_vec n \\<and> 1 < p) \\<and>\n    g_bnd_mode first b fs \\<and> mod_invariant b p first", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((length mfs = m \\<and> length fs = m \\<and> lattice_of fs = L) \\<and>\n     (gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      map (map_vec (\\<lambda>x. x symmod p)) fs = mfs) \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<i'.\n            \\<bar>d\\<mu> fs i' j'\\<bar>\n            < p * d fs j' * d fs (Suc j')) \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j'))) \\<and>\n    (((\\<forall>i<m. fs ! i \\<in> carrier_vec n) \\<and>\n      set fs \\<subseteq> carrier_vec n) \\<and>\n     (\\<forall>i<m. gs'.gso i \\<in> Rn) \\<and>\n     (\\<forall>i<m. mfs ! i \\<in> carrier_vec n)) \\<and>\n    (set mfs \\<subseteq> carrier_vec n \\<and> 1 < p) \\<and>\n    g_bnd_mode first b fs \\<and> mod_invariant b p first", "using assms gs'.fs_carrier gs'.f_carrier gs'.gso_carrier allfs allgso \n      LLL_invariant_mod_weak_def gram_schmidt_fs.reduced_def in_set_conv_nth setfs"], ["proof (prove)\nusing this:\n  LLL_invariant_mod_weak fs mfs dmu p first b\n  set (map of_int_hom.vec_hom fs) \\<subseteq> Rn\n  ?i < length (map of_int_hom.vec_hom fs) \\<Longrightarrow>\n  map of_int_hom.vec_hom fs ! ?i \\<in> Rn\n  ?i < length (map of_int_hom.vec_hom fs) \\<Longrightarrow>\n  gs'.gso ?i \\<in> Rn\n  \\<forall>i<m. fs ! i \\<in> carrier_vec n\n  \\<forall>i<m. gs'.gso i \\<in> Rn\n  LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b =\n  (length ?fs = m \\<and>\n   length ?mfs = m \\<and>\n   lattice_of ?fs = L \\<and>\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs) \\<and>\n   map (map_vec (\\<lambda>x. x symmod ?p)) ?fs = ?mfs \\<and>\n   (\\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> ?fs i' j'\\<bar>\n          < ?p * d ?fs j' * d ?fs (Suc j')) \\<and>\n   (\\<forall>i'<m.\n       \\<forall>j'<m. d\\<mu> ?fs i' j' = ?dmu $$ (i', j')) \\<and>\n   1 < ?p \\<and> g_bnd_mode ?first ?b ?fs \\<and> mod_invariant ?b ?p ?first)\n  gram_schmidt_fs.reduced ?n ?fs ?\\<alpha> ?k =\n  (gram_schmidt_fs.weakly_reduced ?n ?fs ?\\<alpha> ?k \\<and>\n   (\\<forall>i j.\n       i < ?k \\<longrightarrow>\n       j < i \\<longrightarrow>\n       \\<bar>gram_schmidt_fs.\\<mu> ?n ?fs i j\\<bar>\n       \\<le> (1::?'a) / (2::?'a)))\n  (?x \\<in> set ?xs) = (\\<exists>i<length ?xs. ?xs ! i = ?x)\n  set fs \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. ((length mfs = m \\<and> length fs = m \\<and> lattice_of fs = L) \\<and>\n     (gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n      map (map_vec (\\<lambda>x. x symmod p)) fs = mfs) \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<i'.\n            \\<bar>d\\<mu> fs i' j'\\<bar>\n            < p * d fs j' * d fs (Suc j')) \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j'))) \\<and>\n    (((\\<forall>i<m. fs ! i \\<in> carrier_vec n) \\<and>\n      set fs \\<subseteq> carrier_vec n) \\<and>\n     (\\<forall>i<m. gs'.gso i \\<in> Rn) \\<and>\n     (\\<forall>i<m. mfs ! i \\<in> carrier_vec n)) \\<and>\n    (set mfs \\<subseteq> carrier_vec n \\<and> 1 < p) \\<and>\n    g_bnd_mode first b fs \\<and> mod_invariant b p first", "by fastforce"], ["proof (state)\nthis:\n  ((length mfs = m \\<and> length fs = m \\<and> lattice_of fs = L) \\<and>\n   (gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n    map (map_vec (\\<lambda>x. x symmod p)) fs = mfs) \\<and>\n   (\\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')) \\<and>\n   (\\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j'))) \\<and>\n  (((\\<forall>i<m. fs ! i \\<in> carrier_vec n) \\<and>\n    set fs \\<subseteq> carrier_vec n) \\<and>\n   (\\<forall>i<m. gs'.gso i \\<in> Rn) \\<and>\n   (\\<forall>i<m. mfs ! i \\<in> carrier_vec n)) \\<and>\n  (set mfs \\<subseteq> carrier_vec n \\<and> 1 < p) \\<and>\n  g_bnd_mode first b fs \\<and> mod_invariant b p first\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma LLL_invI_modw: assumes \n  \"length mfs = m\"\n  \"length fs = m\"\n  \"lattice_of fs = L\"\n  \"gs.lin_indpt_list (RAT fs)\"\n  \"map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\"\n  \"(\\<forall>i' < m. \\<forall>j' < i'. \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j'))\"\n  \"(\\<forall>i' < m. \\<forall>j' < m. d\\<mu> fs i' j' = dmu $$ (i',j'))\"\n  \"p > 1\"\n  \"g_bnd_mode first b fs\"\n  \"mod_invariant b p first\"\nshows \"LLL_invariant_mod_weak fs mfs dmu p first b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_mod_weak fs mfs dmu p first b", "unfolding LLL_invariant_mod_weak_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. length fs = m \\<and>\n    length mfs = m \\<and>\n    lattice_of fs = L \\<and>\n    gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n    map (map_vec (\\<lambda>x. x symmod p)) fs = mfs \\<and>\n    (\\<forall>i'<m.\n        \\<forall>j'<i'.\n           \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')) \\<and>\n    (\\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')) \\<and>\n    1 < p \\<and> g_bnd_mode first b fs \\<and> mod_invariant b p first", "using assms"], ["proof (prove)\nusing this:\n  length mfs = m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n\ngoal (1 subgoal):\n 1. length fs = m \\<and>\n    length mfs = m \\<and>\n    lattice_of fs = L \\<and>\n    gs.lin_indpt_list (map of_int_hom.vec_hom fs) \\<and>\n    map (map_vec (\\<lambda>x. x symmod p)) fs = mfs \\<and>\n    (\\<forall>i'<m.\n        \\<forall>j'<i'.\n           \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')) \\<and>\n    (\\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')) \\<and>\n    1 < p \\<and> g_bnd_mode first b fs \\<and> mod_invariant b p first", "by blast"], ["", "lemma dd\\<mu>:\n  assumes i: \"i < m\"\n  shows \"d fs (Suc i) = d\\<mu> fs i i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d fs (Suc i) = d\\<mu> fs i i", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. d fs (Suc i) = d\\<mu> fs i i", "have \"\\<mu> fs i i = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i i = 1", "using i"], ["proof (prove)\nusing this:\n  i < m\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i i = 1", "by (simp add: gram_schmidt_fs.\\<mu>.simps)"], ["proof (state)\nthis:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i i = 1\n\ngoal (1 subgoal):\n 1. d fs (Suc i) = d\\<mu> fs i i", "then"], ["proof (chain)\npicking this:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i i = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i i = 1\n\ngoal (1 subgoal):\n 1. d fs (Suc i) = d\\<mu> fs i i", "using d\\<mu>_def"], ["proof (prove)\nusing this:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i i = 1\n  d\\<mu> ?gs ?i ?j =\n  int_of_rat\n   (rat_of_int (d ?gs (Suc ?j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?gs) ?i ?j)\n\ngoal (1 subgoal):\n 1. d fs (Suc i) = d\\<mu> fs i i", "by simp"], ["proof (state)\nthis:\n  d fs (Suc i) = d\\<mu> fs i i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma d_of_main: assumes \"(\\<forall>i' < m. d\\<mu> fs i' i' = dmu $$ (i',i'))\"\n  and \"i \\<le> m\"\nshows \"d_of dmu i = d fs i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d_of dmu i = d fs i", "proof (cases \"i = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> d_of dmu i = d fs i\n 2. i \\<noteq> 0 \\<Longrightarrow> d_of dmu i = d fs i", "case False"], ["proof (state)\nthis:\n  i \\<noteq> 0\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> d_of dmu i = d fs i\n 2. i \\<noteq> 0 \\<Longrightarrow> d_of dmu i = d fs i", "with assms"], ["proof (chain)\npicking this:\n  \\<forall>i'<m. d\\<mu> fs i' i' = dmu $$ (i', i')\n  i \\<le> m\n  i \\<noteq> 0", "have \"i - 1 < m\""], ["proof (prove)\nusing this:\n  \\<forall>i'<m. d\\<mu> fs i' i' = dmu $$ (i', i')\n  i \\<le> m\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. i - 1 < m", "by auto"], ["proof (state)\nthis:\n  i - 1 < m\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> d_of dmu i = d fs i\n 2. i \\<noteq> 0 \\<Longrightarrow> d_of dmu i = d fs i", "from assms(1)[rule_format, OF this] dd\\<mu>[OF this, of fs] False"], ["proof (chain)\npicking this:\n  d\\<mu> fs (i - 1) (i - 1) = dmu $$ (i - 1, i - 1)\n  d fs (Suc (i - 1)) = d\\<mu> fs (i - 1) (i - 1)\n  i \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  d\\<mu> fs (i - 1) (i - 1) = dmu $$ (i - 1, i - 1)\n  d fs (Suc (i - 1)) = d\\<mu> fs (i - 1) (i - 1)\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. d_of dmu i = d fs i", "by (simp add: d_of_def)"], ["proof (state)\nthis:\n  d_of dmu i = d fs i\n\ngoal (1 subgoal):\n 1. i = 0 \\<Longrightarrow> d_of dmu i = d fs i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i = 0 \\<Longrightarrow> d_of dmu i = d fs i", "case True"], ["proof (state)\nthis:\n  i = 0\n\ngoal (1 subgoal):\n 1. i = 0 \\<Longrightarrow> d_of dmu i = d fs i", "thus ?thesis"], ["proof (prove)\nusing this:\n  i = 0\n\ngoal (1 subgoal):\n 1. d_of dmu i = d fs i", "unfolding d_of_def True d_def"], ["proof (prove)\nusing this:\n  0 = 0\n\ngoal (1 subgoal):\n 1. (if 0 = 0 then 1 else dmu $$ (0 - 1, 0 - 1)) =\n    gs.Gramian_determinant fs 0", "by simp"], ["proof (state)\nthis:\n  d_of dmu i = d fs i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma d_of: assumes inv: \"LLL_invariant_mod fs mfs dmu p b first j\"\n  and \"i \\<le> m\" \nshows \"d_of dmu i = d fs i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d_of dmu i = d fs i", "by (rule d_of_main[OF _ assms(2)], insert LLL_invD_mod(9)[OF inv], auto)"], ["", "lemma d_of_weak: assumes inv: \"LLL_invariant_mod_weak fs mfs dmu p first b\"\n  and \"i \\<le> m\" \nshows \"d_of dmu i = d fs i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d_of dmu i = d fs i", "by (rule d_of_main[OF _ assms(2)], insert LLL_invD_modw(7)[OF inv], auto)"], ["", "lemma compute_max_gso_norm: assumes dmu: \"(\\<forall>i' < m. d\\<mu> fs i' i' = dmu $$ (i',i'))\" \n  and Linv: \"LLL_invariant_weak fs\" \nshows \"g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs\" \n  \"fst (compute_max_gso_norm first dmu) \\<ge> 0\" \n  \"m = 0 \\<Longrightarrow> fst (compute_max_gso_norm first dmu) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs &&&\n    0 \\<le> fst (compute_max_gso_norm first dmu) &&&\n    (m = 0 \\<Longrightarrow> fst (compute_max_gso_norm first dmu) = 0)", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs\n 2. 0 \\<le> fst (compute_max_gso_norm first dmu)\n 3. m = 0 \\<Longrightarrow> fst (compute_max_gso_norm first dmu) = 0", "show gbnd: \"g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs", "proof (cases \"first \\<and> m \\<noteq> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. first \\<and> m \\<noteq> 0 \\<Longrightarrow>\n    g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs\n 2. \\<not> (first \\<and> m \\<noteq> 0) \\<Longrightarrow>\n    g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs", "case False"], ["proof (state)\nthis:\n  \\<not> (first \\<and> m \\<noteq> 0)\n\ngoal (2 subgoals):\n 1. first \\<and> m \\<noteq> 0 \\<Longrightarrow>\n    g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs\n 2. \\<not> (first \\<and> m \\<noteq> 0) \\<Longrightarrow>\n    g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs", "have \"?thesis = (g_bnd (fst (compute_max_gso_norm first dmu)) fs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs =\n    g_bnd (fst (compute_max_gso_norm first dmu)) fs", "unfolding g_bnd_mode_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if first \\<and> m \\<noteq> 0\n     then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2\n          \\<le> fst (compute_max_gso_norm first dmu)\n     else g_bnd (fst (compute_max_gso_norm first dmu)) fs) =\n    g_bnd (fst (compute_max_gso_norm first dmu)) fs", "using False"], ["proof (prove)\nusing this:\n  \\<not> (first \\<and> m \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. (if first \\<and> m \\<noteq> 0\n     then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2\n          \\<le> fst (compute_max_gso_norm first dmu)\n     else g_bnd (fst (compute_max_gso_norm first dmu)) fs) =\n    g_bnd (fst (compute_max_gso_norm first dmu)) fs", "by auto"], ["proof (state)\nthis:\n  g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs =\n  g_bnd (fst (compute_max_gso_norm first dmu)) fs\n\ngoal (2 subgoals):\n 1. first \\<and> m \\<noteq> 0 \\<Longrightarrow>\n    g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs\n 2. \\<not> (first \\<and> m \\<noteq> 0) \\<Longrightarrow>\n    g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs", "also"], ["proof (state)\nthis:\n  g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs =\n  g_bnd (fst (compute_max_gso_norm first dmu)) fs\n\ngoal (2 subgoals):\n 1. first \\<and> m \\<noteq> 0 \\<Longrightarrow>\n    g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs\n 2. \\<not> (first \\<and> m \\<noteq> 0) \\<Longrightarrow>\n    g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs", "have \\<dots>"], ["proof (prove)\ngoal (1 subgoal):\n 1. g_bnd (fst (compute_max_gso_norm first dmu)) fs", "unfolding g_bnd_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<m.\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> fst (compute_max_gso_norm first dmu)", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> fst (compute_max_gso_norm first dmu)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> fst (compute_max_gso_norm first dmu)", "assume i: \"i < m\""], ["proof (state)\nthis:\n  i < m\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> fst (compute_max_gso_norm first dmu)", "have id: \"(if first then 1 else m) = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if first then 1 else m) = m", "using False i"], ["proof (prove)\nusing this:\n  \\<not> (first \\<and> m \\<noteq> 0)\n  i < m\n\ngoal (1 subgoal):\n 1. (if first then 1 else m) = m", "by auto"], ["proof (state)\nthis:\n  (if first then 1 else m) = m\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> fst (compute_max_gso_norm first dmu)", "define list where \"list = map (\\<lambda> i. (d_of dmu (Suc i), d_of dmu i, i)) [0 ..< m ]\""], ["proof (state)\nthis:\n  list = map (\\<lambda>i. (d_of dmu (Suc i), d_of dmu i, i)) [0..<m]\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> fst (compute_max_gso_norm first dmu)", "obtain num denom j where ml: \"max_list_rats_with_index list = (num, denom, j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>num denom j.\n        max_list_rats_with_index list = (num, denom, j) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis prod_cases3)"], ["proof (state)\nthis:\n  max_list_rats_with_index list = (num, denom, j)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> fst (compute_max_gso_norm first dmu)", "have dpos: \"d fs i > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < d fs i", "using LLL_d_pos[OF Linv, of i]  i"], ["proof (prove)\nusing this:\n  i \\<le> m \\<Longrightarrow> 0 < d fs i\n  i < m\n\ngoal (1 subgoal):\n 1. 0 < d fs i", "by auto"], ["proof (state)\nthis:\n  0 < d fs i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> fst (compute_max_gso_norm first dmu)", "have pos: \"(n, d, i) \\<in> set list \\<Longrightarrow> 0 < d\" for n d i"], ["proof (prove)\ngoal (1 subgoal):\n 1. (n, d, i) \\<in> set list \\<Longrightarrow> 0 < d", "using LLL_d_pos[OF Linv]"], ["proof (prove)\nusing this:\n  ?k \\<le> m \\<Longrightarrow> 0 < d fs ?k\n\ngoal (1 subgoal):\n 1. (n, d, i) \\<in> set list \\<Longrightarrow> 0 < d", "unfolding list_def"], ["proof (prove)\nusing this:\n  ?k \\<le> m \\<Longrightarrow> 0 < d fs ?k\n\ngoal (1 subgoal):\n 1. (n, d, i)\n    \\<in> set (map (\\<lambda>i. (d_of dmu (Suc i), d_of dmu i, i))\n                [0..<m]) \\<Longrightarrow>\n    0 < d", "using d_of_main[OF dmu]"], ["proof (prove)\nusing this:\n  ?k \\<le> m \\<Longrightarrow> 0 < d fs ?k\n  ?i \\<le> m \\<Longrightarrow> d_of dmu ?i = d fs ?i\n\ngoal (1 subgoal):\n 1. (n, d, i)\n    \\<in> set (map (\\<lambda>i. (d_of dmu (Suc i), d_of dmu i, i))\n                [0..<m]) \\<Longrightarrow>\n    0 < d", "by auto"], ["proof (state)\nthis:\n  (?n2, ?d2, ?i2) \\<in> set list \\<Longrightarrow> 0 < ?d2\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> fst (compute_max_gso_norm first dmu)", "from i"], ["proof (chain)\npicking this:\n  i < m", "have \"list ! i \\<in> set list\""], ["proof (prove)\nusing this:\n  i < m\n\ngoal (1 subgoal):\n 1. list ! i \\<in> set list", "using i"], ["proof (prove)\nusing this:\n  i < m\n  i < m\n\ngoal (1 subgoal):\n 1. list ! i \\<in> set list", "unfolding list_def"], ["proof (prove)\nusing this:\n  i < m\n  i < m\n\ngoal (1 subgoal):\n 1. map (\\<lambda>i. (d_of dmu (Suc i), d_of dmu i, i)) [0..<m] ! i\n    \\<in> set (map (\\<lambda>i. (d_of dmu (Suc i), d_of dmu i, i)) [0..<m])", "by auto"], ["proof (state)\nthis:\n  list ! i \\<in> set list\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> fst (compute_max_gso_norm first dmu)", "also"], ["proof (state)\nthis:\n  list ! i \\<in> set list\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> fst (compute_max_gso_norm first dmu)", "have \"list ! i = (d_of dmu (Suc i), d_of dmu i, i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list ! i = (d_of dmu (Suc i), d_of dmu i, i)", "unfolding list_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. map (\\<lambda>i. (d_of dmu (Suc i), d_of dmu i, i)) [0..<m] ! i =\n    (d_of dmu (Suc i), d_of dmu i, i)", "using i"], ["proof (prove)\nusing this:\n  i < m\n\ngoal (1 subgoal):\n 1. map (\\<lambda>i. (d_of dmu (Suc i), d_of dmu i, i)) [0..<m] ! i =\n    (d_of dmu (Suc i), d_of dmu i, i)", "by auto"], ["proof (state)\nthis:\n  list ! i = (d_of dmu (Suc i), d_of dmu i, i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> fst (compute_max_gso_norm first dmu)", "also"], ["proof (state)\nthis:\n  list ! i = (d_of dmu (Suc i), d_of dmu i, i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> fst (compute_max_gso_norm first dmu)", "have \"\\<dots> = (d fs (Suc i), d fs i, i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d_of dmu (Suc i), d_of dmu i, i) = (d fs (Suc i), d fs i, i)", "using d_of_main[OF dmu] i"], ["proof (prove)\nusing this:\n  ?i \\<le> m \\<Longrightarrow> d_of dmu ?i = d fs ?i\n  i < m\n\ngoal (1 subgoal):\n 1. (d_of dmu (Suc i), d_of dmu i, i) = (d fs (Suc i), d fs i, i)", "by auto"], ["proof (state)\nthis:\n  (d_of dmu (Suc i), d_of dmu i, i) = (d fs (Suc i), d fs i, i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> fst (compute_max_gso_norm first dmu)", "finally"], ["proof (chain)\npicking this:\n  (d fs (Suc i), d fs i, i) \\<in> set list", "have \"(d fs (Suc i), d fs i, i) \\<in> set list\""], ["proof (prove)\nusing this:\n  (d fs (Suc i), d fs i, i) \\<in> set list\n\ngoal (1 subgoal):\n 1. (d fs (Suc i), d fs i, i) \\<in> set list", "."], ["proof (state)\nthis:\n  (d fs (Suc i), d fs i, i) \\<in> set list\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> fst (compute_max_gso_norm first dmu)", "from max_list_rats_with_index[OF pos ml this]"], ["proof (chain)\npicking this:\n  (\\<And>n d i.\n      (n, d, i) \\<in> set list \\<Longrightarrow>\n      (?n3 n d i, d, ?i3 n d i) \\<in> set list) \\<Longrightarrow>\n  rat_of_int (d fs (Suc i)) / rat_of_int (d fs i)\n  \\<le> rat_of_int num / rat_of_int denom", "have \"of_int (d fs (Suc i)) / of_int (d fs i) \\<le> fst (compute_max_gso_norm first dmu)\""], ["proof (prove)\nusing this:\n  (\\<And>n d i.\n      (n, d, i) \\<in> set list \\<Longrightarrow>\n      (?n3 n d i, d, ?i3 n d i) \\<in> set list) \\<Longrightarrow>\n  rat_of_int (d fs (Suc i)) / rat_of_int (d fs i)\n  \\<le> rat_of_int num / rat_of_int denom\n\ngoal (1 subgoal):\n 1. rat_of_int (d fs (Suc i)) / rat_of_int (d fs i)\n    \\<le> fst (compute_max_gso_norm first dmu)", "unfolding compute_max_gso_norm_def list_def[symmetric] ml id split"], ["proof (prove)\nusing this:\n  (\\<And>n d i.\n      (n, d, i) \\<in> set list \\<Longrightarrow>\n      (?n3 n d i, d, ?i3 n d i) \\<in> set list) \\<Longrightarrow>\n  rat_of_int (d fs (Suc i)) / rat_of_int (d fs i)\n  \\<le> rat_of_int num / rat_of_int denom\n\ngoal (1 subgoal):\n 1. rat_of_int (d fs (Suc i)) / rat_of_int (d fs i)\n    \\<le> fst (if m = 0 then (0, 0)\n               else (rat_of_int num / rat_of_int denom, j))", "using i"], ["proof (prove)\nusing this:\n  (\\<And>n d i.\n      (n, d, i) \\<in> set list \\<Longrightarrow>\n      (?n3 n d i, d, ?i3 n d i) \\<in> set list) \\<Longrightarrow>\n  rat_of_int (d fs (Suc i)) / rat_of_int (d fs i)\n  \\<le> rat_of_int num / rat_of_int denom\n  i < m\n\ngoal (1 subgoal):\n 1. rat_of_int (d fs (Suc i)) / rat_of_int (d fs i)\n    \\<le> fst (if m = 0 then (0, 0)\n               else (rat_of_int num / rat_of_int denom, j))", "by auto"], ["proof (state)\nthis:\n  rat_of_int (d fs (Suc i)) / rat_of_int (d fs i)\n  \\<le> fst (compute_max_gso_norm first dmu)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> fst (compute_max_gso_norm first dmu)", "also"], ["proof (state)\nthis:\n  rat_of_int (d fs (Suc i)) / rat_of_int (d fs i)\n  \\<le> fst (compute_max_gso_norm first dmu)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> fst (compute_max_gso_norm first dmu)", "have \"of_int (d fs (Suc i)) / of_int (d fs i) = sq_norm (gso fs i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int (d fs (Suc i)) / rat_of_int (d fs i) =\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                i\\<parallel>\\<^sup>2", "using LLL_d_Suc[OF Linv i] dpos"], ["proof (prove)\nusing this:\n  rat_of_int (d fs (Suc i)) =\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              i\\<parallel>\\<^sup>2 *\n  rat_of_int (d fs i)\n  0 < d fs i\n\ngoal (1 subgoal):\n 1. rat_of_int (d fs (Suc i)) / rat_of_int (d fs i) =\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                i\\<parallel>\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  rat_of_int (d fs (Suc i)) / rat_of_int (d fs i) =\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              i\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> fst (compute_max_gso_norm first dmu)", "finally"], ["proof (chain)\npicking this:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              i\\<parallel>\\<^sup>2\n  \\<le> fst (compute_max_gso_norm first dmu)", "show \"sq_norm (gso fs i) \\<le> fst (compute_max_gso_norm first dmu)\""], ["proof (prove)\nusing this:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              i\\<parallel>\\<^sup>2\n  \\<le> fst (compute_max_gso_norm first dmu)\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                i\\<parallel>\\<^sup>2\n    \\<le> fst (compute_max_gso_norm first dmu)", "."], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              i\\<parallel>\\<^sup>2\n  \\<le> fst (compute_max_gso_norm first dmu)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g_bnd (fst (compute_max_gso_norm first dmu)) fs\n\ngoal (2 subgoals):\n 1. first \\<and> m \\<noteq> 0 \\<Longrightarrow>\n    g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs\n 2. \\<not> (first \\<and> m \\<noteq> 0) \\<Longrightarrow>\n    g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs", "finally"], ["proof (chain)\npicking this:\n  g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs", "show ?thesis"], ["proof (prove)\nusing this:\n  g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs\n\ngoal (1 subgoal):\n 1. g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs", "."], ["proof (state)\nthis:\n  g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs\n\ngoal (1 subgoal):\n 1. first \\<and> m \\<noteq> 0 \\<Longrightarrow>\n    g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. first \\<and> m \\<noteq> 0 \\<Longrightarrow>\n    g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs", "case True"], ["proof (state)\nthis:\n  first \\<and> m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. first \\<and> m \\<noteq> 0 \\<Longrightarrow>\n    g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs", "thus ?thesis"], ["proof (prove)\nusing this:\n  first \\<and> m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs", "unfolding g_bnd_mode_def compute_max_gso_norm_def"], ["proof (prove)\nusing this:\n  first \\<and> m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. if first \\<and> m \\<noteq> 0\n    then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                     0\\<parallel>\\<^sup>2\n         \\<le> fst (if m = 0 then (0, 0)\n                    else case max_list_rats_with_index\n                               (map (\\<lambda>i.\n  (d_of dmu (Suc i), d_of dmu i, i))\n                                 [0..<if first then 1 else m]) of\n                         (num, denom, xa) \\<Rightarrow>\n                           (rat_of_int num / rat_of_int denom, xa))\n    else g_bnd\n          (fst (if m = 0 then (0, 0)\n                else case max_list_rats_with_index\n                           (map (\\<lambda>i.\n                                    (d_of dmu (Suc i), d_of dmu i, i))\n                             [0..<if first then 1 else m]) of\n                     (num, denom, xa) \\<Rightarrow>\n                       (rat_of_int num / rat_of_int denom, xa)))\n          fs", "using d_of_main[OF dmu] \n      LLL_d_Suc[OF Linv, of 0] LLL_d_pos[OF Linv, of 0] LLL_d_pos[OF Linv, of 1]"], ["proof (prove)\nusing this:\n  first \\<and> m \\<noteq> 0\n  ?i \\<le> m \\<Longrightarrow> d_of dmu ?i = d fs ?i\n  0 < m \\<Longrightarrow>\n  rat_of_int (d fs (Suc 0)) =\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              0\\<parallel>\\<^sup>2 *\n  rat_of_int (d fs 0)\n  0 \\<le> m \\<Longrightarrow> 0 < d fs 0\n  1 \\<le> m \\<Longrightarrow> 0 < d fs 1\n\ngoal (1 subgoal):\n 1. if first \\<and> m \\<noteq> 0\n    then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                     0\\<parallel>\\<^sup>2\n         \\<le> fst (if m = 0 then (0, 0)\n                    else case max_list_rats_with_index\n                               (map (\\<lambda>i.\n  (d_of dmu (Suc i), d_of dmu i, i))\n                                 [0..<if first then 1 else m]) of\n                         (num, denom, xa) \\<Rightarrow>\n                           (rat_of_int num / rat_of_int denom, xa))\n    else g_bnd\n          (fst (if m = 0 then (0, 0)\n                else case max_list_rats_with_index\n                           (map (\\<lambda>i.\n                                    (d_of dmu (Suc i), d_of dmu i, i))\n                             [0..<if first then 1 else m]) of\n                     (num, denom, xa) \\<Rightarrow>\n                       (rat_of_int num / rat_of_int denom, xa)))\n          fs", "by auto"], ["proof (state)\nthis:\n  g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g_bnd_mode first (fst (compute_max_gso_norm first dmu)) fs\n\ngoal (2 subgoals):\n 1. 0 \\<le> fst (compute_max_gso_norm first dmu)\n 2. m = 0 \\<Longrightarrow> fst (compute_max_gso_norm first dmu) = 0", "show \"fst (compute_max_gso_norm first dmu) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> fst (compute_max_gso_norm first dmu)", "proof (cases \"m = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> 0 \\<le> fst (compute_max_gso_norm first dmu)\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    0 \\<le> fst (compute_max_gso_norm first dmu)", "case True"], ["proof (state)\nthis:\n  m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> 0 \\<le> fst (compute_max_gso_norm first dmu)\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    0 \\<le> fst (compute_max_gso_norm first dmu)", "thus ?thesis"], ["proof (prove)\nusing this:\n  m = 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> fst (compute_max_gso_norm first dmu)", "unfolding compute_max_gso_norm_def"], ["proof (prove)\nusing this:\n  m = 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> fst (if m = 0 then (0, 0)\n                 else case max_list_rats_with_index\n                            (map (\\<lambda>i.\n                                     (d_of dmu (Suc i), d_of dmu i, i))\n                              [0..<if first then 1 else m]) of\n                      (num, denom, xa) \\<Rightarrow>\n                        (rat_of_int num / rat_of_int denom, xa))", "by simp"], ["proof (state)\nthis:\n  0 \\<le> fst (compute_max_gso_norm first dmu)\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    0 \\<le> fst (compute_max_gso_norm first dmu)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    0 \\<le> fst (compute_max_gso_norm first dmu)", "case False"], ["proof (state)\nthis:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    0 \\<le> fst (compute_max_gso_norm first dmu)", "hence 0: \"0 < m\""], ["proof (prove)\nusing this:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < m", "by simp"], ["proof (state)\nthis:\n  0 < m\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    0 \\<le> fst (compute_max_gso_norm first dmu)", "have \"0 \\<le> sq_norm (gso fs 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                        0\\<parallel>\\<^sup>2", "by blast"], ["proof (state)\nthis:\n  0 \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    0 \\<le> fst (compute_max_gso_norm first dmu)", "also"], ["proof (state)\nthis:\n  0 \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    0 \\<le> fst (compute_max_gso_norm first dmu)", "have \"\\<dots> \\<le> fst (compute_max_gso_norm first dmu)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2\n    \\<le> fst (compute_max_gso_norm first dmu)", "using gbnd[unfolded g_bnd_mode_def g_bnd_def]"], ["proof (prove)\nusing this:\n  if first \\<and> m \\<noteq> 0\n  then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   0\\<parallel>\\<^sup>2\n       \\<le> fst (compute_max_gso_norm first dmu)\n  else \\<forall>i<m.\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      i\\<parallel>\\<^sup>2\n          \\<le> fst (compute_max_gso_norm first dmu)\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2\n    \\<le> fst (compute_max_gso_norm first dmu)", "using 0"], ["proof (prove)\nusing this:\n  if first \\<and> m \\<noteq> 0\n  then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   0\\<parallel>\\<^sup>2\n       \\<le> fst (compute_max_gso_norm first dmu)\n  else \\<forall>i<m.\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      i\\<parallel>\\<^sup>2\n          \\<le> fst (compute_max_gso_norm first dmu)\n  0 < m\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2\n    \\<le> fst (compute_max_gso_norm first dmu)", "by metis"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              0\\<parallel>\\<^sup>2\n  \\<le> fst (compute_max_gso_norm first dmu)\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    0 \\<le> fst (compute_max_gso_norm first dmu)", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> fst (compute_max_gso_norm first dmu)", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> fst (compute_max_gso_norm first dmu)\n\ngoal (1 subgoal):\n 1. 0 \\<le> fst (compute_max_gso_norm first dmu)", "."], ["proof (state)\nthis:\n  0 \\<le> fst (compute_max_gso_norm first dmu)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> fst (compute_max_gso_norm first dmu)\n\ngoal (1 subgoal):\n 1. m = 0 \\<Longrightarrow> fst (compute_max_gso_norm first dmu) = 0", "qed (auto simp: LLL.compute_max_gso_norm_def)"], ["", "lemma increase_i_mod:\n  assumes Linv: \"LLL_invariant_mod fs mfs dmu p first b i\"\n  and i: \"i < m\" \n  and red_i: \"i \\<noteq> 0 \\<Longrightarrow> sq_norm (gso fs (i - 1)) \\<le> \\<alpha> * sq_norm (gso fs i)\"\nshows \"LLL_invariant_mod fs mfs dmu p first b (Suc i)\" \"LLL_measure i fs > LLL_measure (Suc i) fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu p first b (Suc i) &&&\n    LLL_measure (Suc i) fs < LLL_measure i fs", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. LLL_invariant_mod fs mfs dmu p first b (Suc i)\n 2. LLL_measure (Suc i) fs < LLL_measure i fs", "note inv = LLL_invD_mod[OF Linv]"], ["proof (state)\nthis:\n  length mfs = m\n  i \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n\ngoal (2 subgoals):\n 1. LLL_invariant_mod fs mfs dmu p first b (Suc i)\n 2. LLL_measure (Suc i) fs < LLL_measure i fs", "from inv"], ["proof (chain)\npicking this:\n  length mfs = m\n  i \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first", "have red: \"weakly_reduced fs i\""], ["proof (prove)\nusing this:\n  length mfs = m\n  i \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i", "by (auto)"], ["proof (state)\nthis:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n\ngoal (2 subgoals):\n 1. LLL_invariant_mod fs mfs dmu p first b (Suc i)\n 2. LLL_measure (Suc i) fs < LLL_measure i fs", "from red red_i i"], ["proof (chain)\npicking this:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n  i \\<noteq> 0 \\<Longrightarrow>\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              (i - 1)\\<parallel>\\<^sup>2\n  \\<le> \\<alpha> *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    i\\<parallel>\\<^sup>2\n  i < m", "have red: \"weakly_reduced fs (Suc i)\""], ["proof (prove)\nusing this:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n  i \\<noteq> 0 \\<Longrightarrow>\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              (i - 1)\\<parallel>\\<^sup>2\n  \\<le> \\<alpha> *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    i\\<parallel>\\<^sup>2\n  i < m\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n     (Suc i)", "unfolding gram_schmidt_fs.weakly_reduced_def"], ["proof (prove)\nusing this:\n  \\<forall>ia.\n     Suc ia < i \\<longrightarrow>\n     \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                 ia\\<parallel>\\<^sup>2\n     \\<le> \\<alpha> *\n           \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                       (Suc ia)\\<parallel>\\<^sup>2\n  i \\<noteq> 0 \\<Longrightarrow>\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              (i - 1)\\<parallel>\\<^sup>2\n  \\<le> \\<alpha> *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    i\\<parallel>\\<^sup>2\n  i < m\n\ngoal (1 subgoal):\n 1. \\<forall>ia.\n       Suc ia < Suc i \\<longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   ia\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         (Suc ia)\\<parallel>\\<^sup>2", "by (intro allI impI, rename_tac ii, case_tac \"Suc ii = i\", auto)"], ["proof (state)\nthis:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n   (Suc i)\n\ngoal (2 subgoals):\n 1. LLL_invariant_mod fs mfs dmu p first b (Suc i)\n 2. LLL_measure (Suc i) fs < LLL_measure i fs", "show \"LLL_invariant_mod fs mfs dmu p first b (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu p first b (Suc i)", "by (intro LLL_invI_mod, insert inv red i, auto)"], ["proof (state)\nthis:\n  LLL_invariant_mod fs mfs dmu p first b (Suc i)\n\ngoal (1 subgoal):\n 1. LLL_measure (Suc i) fs < LLL_measure i fs", "show \"LLL_measure i fs > LLL_measure (Suc i) fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_measure (Suc i) fs < LLL_measure i fs", "unfolding LLL_measure_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * logD fs + m - Suc i < 2 * logD fs + m - i", "using i"], ["proof (prove)\nusing this:\n  i < m\n\ngoal (1 subgoal):\n 1. 2 * logD fs + m - Suc i < 2 * logD fs + m - i", "by auto"], ["proof (state)\nthis:\n  LLL_measure (Suc i) fs < LLL_measure i fs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma basis_reduction_mod_add_row_main:\n  assumes Linvmw: \"LLL_invariant_mod_weak fs mfs dmu p first b\"\n  and i: \"i < m\"  and j: \"j < i\" \n  and c: \"c = round (\\<mu> fs i j)\"\n  and mfs': \"mfs' = mfs[ i := (map_vec (\\<lambda> x. x symmod p)) (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)]\"\n  and dmu': \"dmu' = mat m m (\\<lambda>(i',j'). (if (i' = i \\<and> j' \\<le> j) \n        then (if j'=j then (dmu $$ (i,j') - c * dmu $$ (j,j')) \n              else (dmu $$ (i,j') - c * dmu $$ (j,j')) \n                    symmod (p * (d_of dmu j') * (d_of dmu (Suc j'))))\n        else (dmu $$ (i',j'))))\"\nshows \"(\\<exists>fs'. LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n        LLL_measure i fs' = LLL_measure i fs\n        \\<and> (\\<mu>_small_row i fs (Suc j) \\<longrightarrow> \\<mu>_small_row i fs' j) \n        \\<and> (\\<forall>k < m. gso fs' k = gso fs k)\n        \\<and> (\\<forall>ii \\<le> m. d fs' ii = d fs ii)\n        \\<and> \\<bar>\\<mu> fs' i j\\<bar> \\<le> 1 / 2\n        \\<and> (\\<forall>i' j'. i' < i \\<longrightarrow> j' \\<le> i' \\<longrightarrow> \\<mu> fs' i' j' = \\<mu> fs i' j')\n        \\<and> (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow> LLL_invariant_mod fs' mfs' dmu' p first b i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "define fs' where \"fs' = fs[ i := fs ! i - c \\<cdot>\\<^sub>v fs ! j]\""], ["proof (state)\nthis:\n  fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j]\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "from LLL_invD_modw[OF Linvmw]"], ["proof (chain)\npicking this:\n  length mfs = m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first", "have gbnd: \"g_bnd_mode first b fs\" and p1: \"p > 1\" and pgtz: \"p > 0\""], ["proof (prove)\nusing this:\n  length mfs = m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n\ngoal (1 subgoal):\n 1. g_bnd_mode first b fs &&& 1 < p &&& 0 < p", "by auto"], ["proof (state)\nthis:\n  g_bnd_mode first b fs\n  1 < p\n  0 < p\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have Linvww: \"LLL_invariant_weak fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak fs", "using LLL_invD_modw[OF Linvmw] LLL_invariant_weak_def"], ["proof (prove)\nusing this:\n  length mfs = m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  LLL_invariant_weak ?fs =\n  (gs.lin_indpt_list (map of_int_hom.vec_hom ?fs) \\<and>\n   lattice_of ?fs = L \\<and> length ?fs = m)\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak fs", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_weak fs\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have \n    Linvw': \"LLL_invariant_weak fs'\" and\n    01: \"c = round (\\<mu> fs i j) \\<Longrightarrow> \\<mu>_small_row i fs (Suc j) \\<Longrightarrow> \\<mu>_small_row i fs' j\" and\n    02: \"LLL_measure i fs' = LLL_measure i fs\" and\n    03: \"\\<And> i. i < m \\<Longrightarrow> gso fs' i = gso fs i\" and\n    04: \"\\<And> i' j'. i' < m \\<Longrightarrow> j' < m \\<Longrightarrow> \n      \\<mu> fs' i' j' = (if i' = i \\<and> j' \\<le> j then \\<mu> fs i j' - of_int c * \\<mu> fs j j' else \\<mu> fs i' j')\" and\n    05: \"\\<And> ii. ii \\<le> m \\<Longrightarrow> d fs' ii = d fs ii\" and \n    06: \"\\<bar>\\<mu> fs' i j\\<bar> \\<le> 1 / 2\" and\n    061: \"(\\<forall>i' j'. i' < i \\<longrightarrow> j' \\<le> i' \\<longrightarrow> \\<mu> fs i' j' = \\<mu> fs' i' j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((LLL_invariant_weak fs' &&&\n      (\\<lbrakk>c =\n                round\n                 (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j);\n        \\<mu>_small_row i fs (Suc j)\\<rbrakk>\n       \\<Longrightarrow> \\<mu>_small_row i fs' j)) &&&\n     LLL_measure i fs' = LLL_measure i fs &&&\n     (\\<And>i.\n         i < m \\<Longrightarrow>\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') i =\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) i)) &&&\n    ((\\<And>i' j'.\n         \\<lbrakk>i' < m; j' < m\\<rbrakk>\n         \\<Longrightarrow> gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom fs') i' j' =\n                           (if i' = i \\<and> j' \\<le> j\n                            then gram_schmidt_fs.\\<mu> n\n                                  (map of_int_hom.vec_hom fs) i j' -\n                                 rat_of_int c *\n                                 gram_schmidt_fs.\\<mu> n\n                                  (map of_int_hom.vec_hom fs) j j'\n                            else gram_schmidt_fs.\\<mu> n\n                                  (map of_int_hom.vec_hom fs) i' j')) &&&\n     (\\<And>ii. ii \\<le> m \\<Longrightarrow> d fs' ii = d fs ii)) &&&\n    \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n    \\<le> 1 / 2 &&&\n    \\<forall>i' j'.\n       i' < i \\<longrightarrow>\n       j' \\<le> i' \\<longrightarrow>\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'", "using basis_reduction_add_row_main[OF Linvww i j fs'_def] c i"], ["proof (prove)\nusing this:\n  LLL_invariant_weak fs'\n  LLL_invariant True i fs \\<Longrightarrow> LLL_invariant True i fs'\n  \\<lbrakk>c =\n           round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j);\n   \\<mu>_small_row i fs (Suc j)\\<rbrakk>\n  \\<Longrightarrow> \\<mu>_small_row i fs' j\n  c =\n  round\n   (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i\n     j) \\<Longrightarrow>\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n  \\<le> 1 / 2\n  LLL_measure i fs' = LLL_measure i fs\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?i =\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i\n  \\<lbrakk>?i' < m; ?j' < m\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') ?i'\n                     ?j' =\n                    (if ?i' = i \\<and> ?j' \\<le> j\n                     then gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) i ?j' -\n                          rat_of_int c *\n                          gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) j ?j'\n                     else gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) ?i' ?j')\n  ?ii \\<le> m \\<Longrightarrow> d fs' ?ii = d fs ?ii\n  c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)\n  i < m\n\ngoal (1 subgoal):\n 1. ((LLL_invariant_weak fs' &&&\n      (\\<lbrakk>c =\n                round\n                 (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j);\n        \\<mu>_small_row i fs (Suc j)\\<rbrakk>\n       \\<Longrightarrow> \\<mu>_small_row i fs' j)) &&&\n     LLL_measure i fs' = LLL_measure i fs &&&\n     (\\<And>i.\n         i < m \\<Longrightarrow>\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') i =\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) i)) &&&\n    ((\\<And>i' j'.\n         \\<lbrakk>i' < m; j' < m\\<rbrakk>\n         \\<Longrightarrow> gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom fs') i' j' =\n                           (if i' = i \\<and> j' \\<le> j\n                            then gram_schmidt_fs.\\<mu> n\n                                  (map of_int_hom.vec_hom fs) i j' -\n                                 rat_of_int c *\n                                 gram_schmidt_fs.\\<mu> n\n                                  (map of_int_hom.vec_hom fs) j j'\n                            else gram_schmidt_fs.\\<mu> n\n                                  (map of_int_hom.vec_hom fs) i' j')) &&&\n     (\\<And>ii. ii \\<le> m \\<Longrightarrow> d fs' ii = d fs ii)) &&&\n    \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n    \\<le> 1 / 2 &&&\n    \\<forall>i' j'.\n       i' < i \\<longrightarrow>\n       j' \\<le> i' \\<longrightarrow>\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'", "by auto"], ["proof (state)\nthis:\n  LLL_invariant_weak fs'\n  \\<lbrakk>c =\n           round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j);\n   \\<mu>_small_row i fs (Suc j)\\<rbrakk>\n  \\<Longrightarrow> \\<mu>_small_row i fs' j\n  LLL_measure i fs' = LLL_measure i fs\n  ?i2 < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?i2 =\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i2\n  \\<lbrakk>?i'2 < m; ?j'2 < m\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs')\n                     ?i'2 ?j'2 =\n                    (if ?i'2 = i \\<and> ?j'2 \\<le> j\n                     then gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) i ?j'2 -\n                          rat_of_int c *\n                          gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) j ?j'2\n                     else gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) ?i'2 ?j'2)\n  ?ii2 \\<le> m \\<Longrightarrow> d fs' ?ii2 = d fs ?ii2\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n  \\<le> 1 / 2\n  \\<forall>i' j'.\n     i' < i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 07: \"lin_indep fs'\" and \n    08: \"length fs' = m\" and \n    09: \"lattice_of fs' = L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gs.lin_indpt_list (map of_int_hom.vec_hom fs') &&&\n    length fs' = m &&& lattice_of fs' = L", "using LLL_inv_wD Linvw'"], ["proof (prove)\nusing this:\n  LLL_invariant_weak ?fs \\<Longrightarrow>\n  gs.lin_indpt_list (map of_int_hom.vec_hom ?fs)\n  LLL_invariant_weak ?fs \\<Longrightarrow>\n  length (map of_int_hom.vec_hom ?fs) = m\n  LLL_invariant_weak ?fs \\<Longrightarrow> set ?fs \\<subseteq> carrier_vec n\n  \\<lbrakk>LLL_invariant_weak ?fs; ?i < m\\<rbrakk>\n  \\<Longrightarrow> ?fs ! ?i \\<in> carrier_vec n\n  \\<lbrakk>LLL_invariant_weak ?fs; ?i < m\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.gso n (map of_int_hom.vec_hom ?fs) ?i\n                    \\<in> Rn\n  LLL_invariant_weak ?fs \\<Longrightarrow> length ?fs = m\n  LLL_invariant_weak ?fs \\<Longrightarrow> lattice_of ?fs = L\n  LLL_invariant_weak fs'\n\ngoal (1 subgoal):\n 1. gs.lin_indpt_list (map of_int_hom.vec_hom fs') &&&\n    length fs' = m &&& lattice_of fs' = L", "by auto"], ["proof (state)\nthis:\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs')\n  length fs' = m\n  lattice_of fs' = L\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 091: \"fs_int_indpt n fs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fs_int_indpt n fs'", "using 07"], ["proof (prove)\nusing this:\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs')\n\ngoal (1 subgoal):\n 1. fs_int_indpt n fs'", "using Gram_Schmidt_2.fs_int_indpt.intro"], ["proof (prove)\nusing this:\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs')\n  cof_vec_space.lin_indpt_list ?n\n   (map of_int_hom.vec_hom ?fs) \\<Longrightarrow>\n  fs_int_indpt ?n ?fs\n\ngoal (1 subgoal):\n 1. fs_int_indpt n fs'", "by simp"], ["proof (state)\nthis:\n  fs_int_indpt n fs'\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "define I where \"I = {(i',j'). i' = i \\<and> j' < j}\""], ["proof (state)\nthis:\n  I = {(i', j'). i' = i \\<and> j' < j}\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 10: \"I \\<subseteq> {(i',j'). i' < m \\<and> j' < i'}\" \"(i,j)\\<notin> I\" \"\\<forall>j' \\<ge> j. (i,j') \\<notin> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<subseteq> {(i', j'). i' < m \\<and> j' < i'} &&&\n    (i, j) \\<notin> I &&& \\<forall>j'\\<ge>j. (i, j') \\<notin> I", "using I_def i j"], ["proof (prove)\nusing this:\n  I = {(i', j'). i' = i \\<and> j' < j}\n  i < m\n  j < i\n\ngoal (1 subgoal):\n 1. I \\<subseteq> {(i', j'). i' < m \\<and> j' < i'} &&&\n    (i, j) \\<notin> I &&& \\<forall>j'\\<ge>j. (i, j') \\<notin> I", "by auto"], ["proof (state)\nthis:\n  I \\<subseteq> {(i', j'). i' < m \\<and> j' < i'}\n  (i, j) \\<notin> I\n  \\<forall>j'\\<ge>j. (i, j') \\<notin> I\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "obtain fs'' where \n    11: \"lattice_of fs'' = L\" and\n    12: \"map (map_vec (\\<lambda> x. x symmod p)) fs'' = map (map_vec (\\<lambda> x. x symmod p)) fs'\" and\n    13: \"lin_indep fs''\" and\n    14: \"length fs'' = m\" and\n    15: \"(\\<forall> k < m. gso fs'' k = gso fs' k)\" and\n    16: \"(\\<forall> k \\<le> m. d fs'' k = d fs' k)\" and\n    17: \"(\\<forall> i' < m. \\<forall> j' < m. d\\<mu> fs'' i' j' = \n      (if (i',j') \\<in> I then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j')) else d\\<mu> fs' i' j'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>fs''.\n        \\<lbrakk>lattice_of fs'' = L;\n         map (map_vec (\\<lambda>x. x symmod p)) fs'' =\n         map (map_vec (\\<lambda>x. x symmod p)) fs';\n         gs.lin_indpt_list (map of_int_hom.vec_hom fs''); length fs'' = m;\n         \\<forall>k<m.\n            gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n            gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k;\n         \\<forall>k\\<le>m. d fs'' k = d fs' k;\n         \\<forall>i'<m.\n            \\<forall>j'<m.\n               d\\<mu> fs'' i' j' =\n               (if (i', j') \\<in> I\n                then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n                else d\\<mu> fs' i' j')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using mod_finite_set[OF 07 08 10(1) 09 pgtz]"], ["proof (prove)\nusing this:\n  \\<exists>fs'a.\n     lattice_of fs'a = L \\<and>\n     map (map_vec (\\<lambda>x. x mod p)) fs'a =\n     map (map_vec (\\<lambda>x. x mod p)) fs' \\<and>\n     map (map_vec (\\<lambda>x. x symmod p)) fs'a =\n     map (map_vec (\\<lambda>x. x symmod p)) fs' \\<and>\n     gs.lin_indpt_list (map of_int_hom.vec_hom fs'a) \\<and>\n     length fs'a = m \\<and>\n     (\\<forall>k<m.\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'a) k =\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k) \\<and>\n     (\\<forall>k\\<le>m. d fs'a k = d fs' k) \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<m.\n            d\\<mu> fs'a i' j' =\n            (if (i', j') \\<in> I\n             then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n             else d\\<mu> fs' i' j'))\n\ngoal (1 subgoal):\n 1. (\\<And>fs''.\n        \\<lbrakk>lattice_of fs'' = L;\n         map (map_vec (\\<lambda>x. x symmod p)) fs'' =\n         map (map_vec (\\<lambda>x. x symmod p)) fs';\n         gs.lin_indpt_list (map of_int_hom.vec_hom fs''); length fs'' = m;\n         \\<forall>k<m.\n            gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n            gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k;\n         \\<forall>k\\<le>m. d fs'' k = d fs' k;\n         \\<forall>i'<m.\n            \\<forall>j'<m.\n               d\\<mu> fs'' i' j' =\n               (if (i', j') \\<in> I\n                then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n                else d\\<mu> fs' i' j')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  lattice_of fs'' = L\n  map (map_vec (\\<lambda>x. x symmod p)) fs'' =\n  map (map_vec (\\<lambda>x. x symmod p)) fs'\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs'')\n  length fs'' = m\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k\n  \\<forall>k\\<le>m. d fs'' k = d fs' k\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs'' i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n         else d\\<mu> fs' i' j')\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 171: \"(\\<forall>i' j'. i' < i \\<longrightarrow> j' \\<le> i' \\<longrightarrow> \\<mu> fs'' i' j' = \\<mu> fs' i' j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i' j'.\n       i' < i \\<longrightarrow>\n       j' \\<le> i' \\<longrightarrow>\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i' j'.\n       i' < i \\<longrightarrow>\n       j' \\<le> i' \\<longrightarrow>\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i' j'.\n       i' < i \\<longrightarrow>\n       j' \\<le> i' \\<longrightarrow>\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'", "fix i' j'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i' j'.\n       i' < i \\<longrightarrow>\n       j' \\<le> i' \\<longrightarrow>\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'", "assume i'j': \"i' < i\" \"j' \\<le> i'\""], ["proof (state)\nthis:\n  i' < i\n  j' \\<le> i'\n\ngoal (1 subgoal):\n 1. \\<forall>i' j'.\n       i' < i \\<longrightarrow>\n       j' \\<le> i' \\<longrightarrow>\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'", "have \"rat_of_int (d\\<mu> fs'' i' j') = rat_of_int (d\\<mu> fs' i' j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int (d\\<mu> fs'' i' j') = rat_of_int (d\\<mu> fs' i' j')", "using \"17\" I_def i i'j'"], ["proof (prove)\nusing this:\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs'' i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n         else d\\<mu> fs' i' j')\n  I = {(i', j'). i' = i \\<and> j' < j}\n  i < m\n  i' < i\n  j' \\<le> i'\n\ngoal (1 subgoal):\n 1. rat_of_int (d\\<mu> fs'' i' j') = rat_of_int (d\\<mu> fs' i' j')", "by auto"], ["proof (state)\nthis:\n  rat_of_int (d\\<mu> fs'' i' j') = rat_of_int (d\\<mu> fs' i' j')\n\ngoal (1 subgoal):\n 1. \\<forall>i' j'.\n       i' < i \\<longrightarrow>\n       j' \\<le> i' \\<longrightarrow>\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'", "then"], ["proof (chain)\npicking this:\n  rat_of_int (d\\<mu> fs'' i' j') = rat_of_int (d\\<mu> fs' i' j')", "have \"rat_of_int (int_of_rat (rat_of_int (d fs'' (Suc j')) * \\<mu> fs'' i' j')) = \n        rat_of_int (int_of_rat (rat_of_int (d fs' (Suc j')) * \\<mu> fs' i' j'))\""], ["proof (prove)\nusing this:\n  rat_of_int (d\\<mu> fs'' i' j') = rat_of_int (d\\<mu> fs' i' j')\n\ngoal (1 subgoal):\n 1. rat_of_int\n     (int_of_rat\n       (rat_of_int (d fs'' (Suc j')) *\n        gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j')) =\n    rat_of_int\n     (int_of_rat\n       (rat_of_int (d fs' (Suc j')) *\n        gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'))", "using d\\<mu>_def i'j' j"], ["proof (prove)\nusing this:\n  rat_of_int (d\\<mu> fs'' i' j') = rat_of_int (d\\<mu> fs' i' j')\n  d\\<mu> ?gs ?i ?j =\n  int_of_rat\n   (rat_of_int (d ?gs (Suc ?j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?gs) ?i ?j)\n  i' < i\n  j' \\<le> i'\n  j < i\n\ngoal (1 subgoal):\n 1. rat_of_int\n     (int_of_rat\n       (rat_of_int (d fs'' (Suc j')) *\n        gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j')) =\n    rat_of_int\n     (int_of_rat\n       (rat_of_int (d fs' (Suc j')) *\n        gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'))", "by auto"], ["proof (state)\nthis:\n  rat_of_int\n   (int_of_rat\n     (rat_of_int (d fs'' (Suc j')) *\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j')) =\n  rat_of_int\n   (int_of_rat\n     (rat_of_int (d fs' (Suc j')) *\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'))\n\ngoal (1 subgoal):\n 1. \\<forall>i' j'.\n       i' < i \\<longrightarrow>\n       j' \\<le> i' \\<longrightarrow>\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'", "then"], ["proof (chain)\npicking this:\n  rat_of_int\n   (int_of_rat\n     (rat_of_int (d fs'' (Suc j')) *\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j')) =\n  rat_of_int\n   (int_of_rat\n     (rat_of_int (d fs' (Suc j')) *\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'))", "have \"rat_of_int (d fs'' (Suc j')) * \\<mu> fs'' i' j' = \n        rat_of_int (d fs' (Suc j')) * \\<mu> fs' i' j'\""], ["proof (prove)\nusing this:\n  rat_of_int\n   (int_of_rat\n     (rat_of_int (d fs'' (Suc j')) *\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j')) =\n  rat_of_int\n   (int_of_rat\n     (rat_of_int (d fs' (Suc j')) *\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'))\n\ngoal (1 subgoal):\n 1. rat_of_int (d fs'' (Suc j')) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n    rat_of_int (d fs' (Suc j')) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'", "by (smt \"08\" \"091\" \"13\" \"14\" d_def dual_order.strict_trans fs_int.d_def \n            fs_int_indpt.fs_int_mu_d_Z fs_int_indpt.intro i i'j'(1) i'j'(2) int_of_rat(2))"], ["proof (state)\nthis:\n  rat_of_int (d fs'' (Suc j')) *\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n  rat_of_int (d fs' (Suc j')) *\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'\n\ngoal (1 subgoal):\n 1. \\<forall>i' j'.\n       i' < i \\<longrightarrow>\n       j' \\<le> i' \\<longrightarrow>\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'", "then"], ["proof (chain)\npicking this:\n  rat_of_int (d fs'' (Suc j')) *\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n  rat_of_int (d fs' (Suc j')) *\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'", "have \"\\<mu> fs'' i' j' = \\<mu> fs' i' j'\""], ["proof (prove)\nusing this:\n  rat_of_int (d fs'' (Suc j')) *\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n  rat_of_int (d fs' (Suc j')) *\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'", "by (smt \"16\" \n            LLL_d_pos[OF Linvw'] Suc_leI int_of_rat(1)\n            dual_order.strict_trans fs'_def i i'j' j \n            le_neq_implies_less nonzero_mult_div_cancel_left of_int_hom.hom_zero)"], ["proof (state)\nthis:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'\n\ngoal (1 subgoal):\n 1. \\<forall>i' j'.\n       i' < i \\<longrightarrow>\n       j' \\<le> i' \\<longrightarrow>\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?i'4 < i; ?j'4 \\<le> ?i'4\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'')\n                     ?i'4 ?j'4 =\n                    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs')\n                     ?i'4 ?j'4\n\ngoal (1 subgoal):\n 1. \\<forall>i' j'.\n       i' < i \\<longrightarrow>\n       j' \\<le> i' \\<longrightarrow>\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i'4 < i; ?j'4 \\<le> ?i'4\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'')\n                     ?i'4 ?j'4 =\n                    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs')\n                     ?i'4 ?j'4", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i'4 < i; ?j'4 \\<le> ?i'4\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'')\n                     ?i'4 ?j'4 =\n                    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs')\n                     ?i'4 ?j'4\n\ngoal (1 subgoal):\n 1. \\<forall>i' j'.\n       i' < i \\<longrightarrow>\n       j' \\<le> i' \\<longrightarrow>\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'", "by simp"], ["proof (state)\nthis:\n  \\<forall>i' j'.\n     i' < i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i' j'.\n     i' < i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "then"], ["proof (chain)\npicking this:\n  \\<forall>i' j'.\n     i' < i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'", "have 172: \"(\\<forall>i' j'. i' < i \\<longrightarrow> j' \\<le> i' \\<longrightarrow> \\<mu> fs'' i' j' = \\<mu> fs i' j')\""], ["proof (prove)\nusing this:\n  \\<forall>i' j'.\n     i' < i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'\n\ngoal (1 subgoal):\n 1. \\<forall>i' j'.\n       i' < i \\<longrightarrow>\n       j' \\<le> i' \\<longrightarrow>\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'", "using 061"], ["proof (prove)\nusing this:\n  \\<forall>i' j'.\n     i' < i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'\n  \\<forall>i' j'.\n     i' < i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'\n\ngoal (1 subgoal):\n 1. \\<forall>i' j'.\n       i' < i \\<longrightarrow>\n       j' \\<le> i' \\<longrightarrow>\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'", "by simp"], ["proof (state)\nthis:\n  \\<forall>i' j'.\n     i' < i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "(* goal *)"], ["proof (state)\nthis:\n  \\<forall>i' j'.\n     i' < i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 18: \"LLL_measure i fs'' = LLL_measure i fs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_measure i fs'' = LLL_measure i fs'", "using 16 LLL_measure_def logD_def D_def"], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>m. d fs'' k = d fs' k\n  LLL_measure ?i ?fs = 2 * logD ?fs + m - ?i\n  logD ?fs =\n  (if \\<alpha> = 4 / 3 then D ?fs\n   else nat \\<lfloor>log (1 / real_of_rat reduction)\n                      (real (D ?fs))\\<rfloor>)\n  D ?fs = nat (prod (d ?fs) {..<m})\n\ngoal (1 subgoal):\n 1. LLL_measure i fs'' = LLL_measure i fs'", "by simp"], ["proof (state)\nthis:\n  LLL_measure i fs'' = LLL_measure i fs'\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 19: \"(\\<forall>k < m. gso fs'' k = gso fs k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k<m.\n       gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n       gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k", "using 03 15"], ["proof (prove)\nusing this:\n  ?i2 < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?i2 =\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i2\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k\n\ngoal (1 subgoal):\n 1. \\<forall>k<m.\n       gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n       gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k", "by simp"], ["proof (state)\nthis:\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have \"\\<forall>j' \\<in> {j..(m-1)}. j' < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}. j' < m", "using j i"], ["proof (prove)\nusing this:\n  j < i\n  i < m\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}. j' < m", "by auto"], ["proof (state)\nthis:\n  \\<forall>j'\\<in>{j..m - 1}. j' < m\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "then"], ["proof (chain)\npicking this:\n  \\<forall>j'\\<in>{j..m - 1}. j' < m", "have 20: \"\\<forall>j' \\<in> {j..(m-1)}. d\\<mu> fs'' i j' = d\\<mu> fs' i j'\""], ["proof (prove)\nusing this:\n  \\<forall>j'\\<in>{j..m - 1}. j' < m\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}. d\\<mu> fs'' i j' = d\\<mu> fs' i j'", "using 10(3) 17 Suc_lessD less_trans_Suc"], ["proof (prove)\nusing this:\n  \\<forall>j'\\<in>{j..m - 1}. j' < m\n  \\<forall>j'\\<ge>j. (i, j') \\<notin> I\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs'' i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n         else d\\<mu> fs' i' j')\n  Suc ?m < ?n \\<Longrightarrow> ?m < ?n\n  \\<lbrakk>?i < ?j; ?j < ?k\\<rbrakk> \\<Longrightarrow> Suc ?i < ?k\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}. d\\<mu> fs'' i j' = d\\<mu> fs' i j'", "by (meson atLeastAtMost_iff i)"], ["proof (state)\nthis:\n  \\<forall>j'\\<in>{j..m - 1}. d\\<mu> fs'' i j' = d\\<mu> fs' i j'\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 21: \"\\<forall>j' \\<in> {j..(m-1)}. \\<mu> fs'' i j' = \\<mu> fs' i j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}.\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}.\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}.\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'", "fix j'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}.\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'", "assume j': \"j' \\<in> {j..(m-1)}\""], ["proof (state)\nthis:\n  j' \\<in> {j..m - 1}\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}.\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'", "define \\<mu>'' :: rat where \"\\<mu>'' = \\<mu> fs'' i j'\""], ["proof (state)\nthis:\n  \\<mu>'' = gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j'\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}.\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'", "define \\<mu>' :: rat where \"\\<mu>' = \\<mu> fs' i j'\""], ["proof (state)\nthis:\n  \\<mu>' = gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}.\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'", "have \"rat_of_int (d\\<mu> fs'' i j') = rat_of_int (d\\<mu> fs' i j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int (d\\<mu> fs'' i j') = rat_of_int (d\\<mu> fs' i j')", "using 20 j'"], ["proof (prove)\nusing this:\n  \\<forall>j'\\<in>{j..m - 1}. d\\<mu> fs'' i j' = d\\<mu> fs' i j'\n  j' \\<in> {j..m - 1}\n\ngoal (1 subgoal):\n 1. rat_of_int (d\\<mu> fs'' i j') = rat_of_int (d\\<mu> fs' i j')", "by simp"], ["proof (state)\nthis:\n  rat_of_int (d\\<mu> fs'' i j') = rat_of_int (d\\<mu> fs' i j')\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}.\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'", "moreover"], ["proof (state)\nthis:\n  rat_of_int (d\\<mu> fs'' i j') = rat_of_int (d\\<mu> fs' i j')\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}.\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'", "have \"j' < length fs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j' < length fs'", "using i j' 08"], ["proof (prove)\nusing this:\n  i < m\n  j' \\<in> {j..m - 1}\n  length fs' = m\n\ngoal (1 subgoal):\n 1. j' < length fs'", "by auto"], ["proof (state)\nthis:\n  j' < length fs'\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}.\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'", "ultimately"], ["proof (chain)\npicking this:\n  rat_of_int (d\\<mu> fs'' i j') = rat_of_int (d\\<mu> fs' i j')\n  j' < length fs'", "have \"rat_of_int (d fs' (Suc j')) * gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'\n        = rat_of_int (d fs'' (Suc j')) * gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j'\""], ["proof (prove)\nusing this:\n  rat_of_int (d\\<mu> fs'' i j') = rat_of_int (d\\<mu> fs' i j')\n  j' < length fs'\n\ngoal (1 subgoal):\n 1. rat_of_int (d fs' (Suc j')) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j' =\n    rat_of_int (d fs'' (Suc j')) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j'", "using 20 08 091 13 14 fs_int_indpt.d\\<mu>_def fs_int.d_def fs_int_indpt.d\\<mu> d\\<mu>_def d_def i fs_int_indpt.intro j'"], ["proof (prove)\nusing this:\n  rat_of_int (d\\<mu> fs'' i j') = rat_of_int (d\\<mu> fs' i j')\n  j' < length fs'\n  \\<forall>j'\\<in>{j..m - 1}. d\\<mu> fs'' i j' = d\\<mu> fs' i j'\n  length fs' = m\n  fs_int_indpt n fs'\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs'')\n  length fs'' = m\n  fs_int_indpt ?n ?fs \\<Longrightarrow>\n  fs_int_indpt.d\\<mu> ?n ?fs ?i ?j =\n  int_of_rat\n   (rat_of_int (fs_int.d ?n ?fs (Suc ?j)) *\n    gram_schmidt_fs.\\<mu> ?n (map of_int_hom.vec_hom ?fs) ?i ?j)\n  fs_int.d ?n ?fs ?k = gram_schmidt.Gramian_determinant ?n ?fs ?k\n  \\<lbrakk>fs_int_indpt ?n ?fs; ?j < length ?fs; ?ii < length ?fs\\<rbrakk>\n  \\<Longrightarrow> rat_of_int (fs_int_indpt.d\\<mu> ?n ?fs ?ii ?j) =\n                    rat_of_int (fs_int.d ?n ?fs (Suc ?j)) *\n                    gram_schmidt_fs.\\<mu> ?n (map of_int_hom.vec_hom ?fs)\n                     ?ii ?j\n  d\\<mu> ?gs ?i ?j =\n  int_of_rat\n   (rat_of_int (d ?gs (Suc ?j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?gs) ?i ?j)\n  d ?fs ?k = gs.Gramian_determinant ?fs ?k\n  i < m\n  cof_vec_space.lin_indpt_list ?n\n   (map of_int_hom.vec_hom ?fs) \\<Longrightarrow>\n  fs_int_indpt ?n ?fs\n  j' \\<in> {j..m - 1}\n\ngoal (1 subgoal):\n 1. rat_of_int (d fs' (Suc j')) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j' =\n    rat_of_int (d fs'' (Suc j')) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j'", "by metis"], ["proof (state)\nthis:\n  rat_of_int (d fs' (Suc j')) *\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j' =\n  rat_of_int (d fs'' (Suc j')) *\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j'\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}.\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'", "then"], ["proof (chain)\npicking this:\n  rat_of_int (d fs' (Suc j')) *\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j' =\n  rat_of_int (d fs'' (Suc j')) *\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j'", "have \"rat_of_int (d fs' (Suc j')) * \\<mu>'' = rat_of_int (d fs' (Suc j')) * \\<mu>'\""], ["proof (prove)\nusing this:\n  rat_of_int (d fs' (Suc j')) *\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j' =\n  rat_of_int (d fs'' (Suc j')) *\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j'\n\ngoal (1 subgoal):\n 1. rat_of_int (d fs' (Suc j')) * \\<mu>'' =\n    rat_of_int (d fs' (Suc j')) * \\<mu>'", "using 16 i j' \\<mu>'_def \\<mu>''_def"], ["proof (prove)\nusing this:\n  rat_of_int (d fs' (Suc j')) *\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j' =\n  rat_of_int (d fs'' (Suc j')) *\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j'\n  \\<forall>k\\<le>m. d fs'' k = d fs' k\n  i < m\n  j' \\<in> {j..m - 1}\n  \\<mu>' = gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'\n  \\<mu>'' = gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j'\n\ngoal (1 subgoal):\n 1. rat_of_int (d fs' (Suc j')) * \\<mu>'' =\n    rat_of_int (d fs' (Suc j')) * \\<mu>'", "unfolding d\\<mu>_def"], ["proof (prove)\nusing this:\n  rat_of_int (d fs' (Suc j')) *\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j' =\n  rat_of_int (d fs'' (Suc j')) *\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j'\n  \\<forall>k\\<le>m. d fs'' k = d fs' k\n  i < m\n  j' \\<in> {j..m - 1}\n  \\<mu>' = gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'\n  \\<mu>'' = gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j'\n\ngoal (1 subgoal):\n 1. rat_of_int (d fs' (Suc j')) * \\<mu>'' =\n    rat_of_int (d fs' (Suc j')) * \\<mu>'", "by auto"], ["proof (state)\nthis:\n  rat_of_int (d fs' (Suc j')) * \\<mu>'' =\n  rat_of_int (d fs' (Suc j')) * \\<mu>'\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}.\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'", "moreover"], ["proof (state)\nthis:\n  rat_of_int (d fs' (Suc j')) * \\<mu>'' =\n  rat_of_int (d fs' (Suc j')) * \\<mu>'\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}.\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'", "have \"0 < d fs' (Suc j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < d fs' (Suc j')", "using LLL_d_pos[OF Linvw', of \"Suc j'\"] i j'"], ["proof (prove)\nusing this:\n  Suc j' \\<le> m \\<Longrightarrow> 0 < d fs' (Suc j')\n  i < m\n  j' \\<in> {j..m - 1}\n\ngoal (1 subgoal):\n 1. 0 < d fs' (Suc j')", "by auto"], ["proof (state)\nthis:\n  0 < d fs' (Suc j')\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}.\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'", "ultimately"], ["proof (chain)\npicking this:\n  rat_of_int (d fs' (Suc j')) * \\<mu>'' =\n  rat_of_int (d fs' (Suc j')) * \\<mu>'\n  0 < d fs' (Suc j')", "have \"\\<mu> fs'' i j' = \\<mu> fs' i j'\""], ["proof (prove)\nusing this:\n  rat_of_int (d fs' (Suc j')) * \\<mu>'' =\n  rat_of_int (d fs' (Suc j')) * \\<mu>'\n  0 < d fs' (Suc j')\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'", "using \\<mu>'_def \\<mu>''_def"], ["proof (prove)\nusing this:\n  rat_of_int (d fs' (Suc j')) * \\<mu>'' =\n  rat_of_int (d fs' (Suc j')) * \\<mu>'\n  0 < d fs' (Suc j')\n  \\<mu>' = gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'\n  \\<mu>'' = gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j'\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'", "by simp"], ["proof (state)\nthis:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}.\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'", "}"], ["proof (state)\nthis:\n  ?j'4 \\<in> {j..m - 1} \\<Longrightarrow>\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i ?j'4 =\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i ?j'4\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}.\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'", "then"], ["proof (chain)\npicking this:\n  ?j'4 \\<in> {j..m - 1} \\<Longrightarrow>\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i ?j'4 =\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i ?j'4", "show ?thesis"], ["proof (prove)\nusing this:\n  ?j'4 \\<in> {j..m - 1} \\<Longrightarrow>\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i ?j'4 =\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i ?j'4\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<in>{j..m - 1}.\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n       gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'", "by simp"], ["proof (state)\nthis:\n  \\<forall>j'\\<in>{j..m - 1}.\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>j'\\<in>{j..m - 1}.\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "then"], ["proof (chain)\npicking this:\n  \\<forall>j'\\<in>{j..m - 1}.\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'", "have 22: \"\\<mu> fs'' i j = \\<mu> fs' i j\""], ["proof (prove)\nusing this:\n  \\<forall>j'\\<in>{j..m - 1}.\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j =\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j", "using i j"], ["proof (prove)\nusing this:\n  \\<forall>j'\\<in>{j..m - 1}.\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'\n  i < m\n  j < i\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j =\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j", "by simp"], ["proof (state)\nthis:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j =\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "then"], ["proof (chain)\npicking this:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j =\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j", "have 23: \"\\<bar>\\<mu> fs'' i j\\<bar> \\<le> 1 / 2\""], ["proof (prove)\nusing this:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j =\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\n\ngoal (1 subgoal):\n 1. \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j\\<bar>\n    \\<le> 1 / 2", "using 06"], ["proof (prove)\nusing this:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j =\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n  \\<le> 1 / 2\n\ngoal (1 subgoal):\n 1. \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j\\<bar>\n    \\<le> 1 / 2", "by simp"], ["proof (state)\nthis:\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j\\<bar>\n  \\<le> 1 / 2\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "(* goal *)"], ["proof (state)\nthis:\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j\\<bar>\n  \\<le> 1 / 2\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 24: \"LLL_measure i fs'' = LLL_measure i fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_measure i fs'' = LLL_measure i fs", "using 02 18"], ["proof (prove)\nusing this:\n  LLL_measure i fs' = LLL_measure i fs\n  LLL_measure i fs'' = LLL_measure i fs'\n\ngoal (1 subgoal):\n 1. LLL_measure i fs'' = LLL_measure i fs", "by simp"], ["proof (state)\nthis:\n  LLL_measure i fs'' = LLL_measure i fs\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "(* goal *)"], ["proof (state)\nthis:\n  LLL_measure i fs'' = LLL_measure i fs\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 25: \"(\\<forall> k \\<le> m. d fs'' k = d fs k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>m. d fs'' k = d fs k", "using 16 05"], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>m. d fs'' k = d fs' k\n  ?ii2 \\<le> m \\<Longrightarrow> d fs' ?ii2 = d fs ?ii2\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>m. d fs'' k = d fs k", "by simp"], ["proof (state)\nthis:\n  \\<forall>k\\<le>m. d fs'' k = d fs k\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "(* goal *)"], ["proof (state)\nthis:\n  \\<forall>k\\<le>m. d fs'' k = d fs k\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 26: \"(\\<forall> k < m. gso fs'' k = gso fs k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k<m.\n       gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n       gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k", "using 15 03"], ["proof (prove)\nusing this:\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k\n  ?i2 < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?i2 =\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i2\n\ngoal (1 subgoal):\n 1. \\<forall>k<m.\n       gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n       gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k", "by simp"], ["proof (state)\nthis:\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "(* goal *)"], ["proof (state)\nthis:\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 27: \"\\<mu>_small_row i fs (Suc j) \\<Longrightarrow> \\<mu>_small_row i fs'' j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu>_small_row i fs (Suc j) \\<Longrightarrow> \\<mu>_small_row i fs'' j", "using 21 01 \\<mu>_small_row_def i j c"], ["proof (prove)\nusing this:\n  \\<forall>j'\\<in>{j..m - 1}.\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j'\n  \\<lbrakk>c =\n           round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j);\n   \\<mu>_small_row i fs (Suc j)\\<rbrakk>\n  \\<Longrightarrow> \\<mu>_small_row i fs' j\n  \\<mu>_small_row ?i ?fs ?j =\n  (\\<forall>j'\\<ge>?j.\n      j' < ?i \\<longrightarrow>\n      \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?fs) ?i j'\\<bar>\n      \\<le> inverse 2)\n  i < m\n  j < i\n  c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)\n\ngoal (1 subgoal):\n 1. \\<mu>_small_row i fs (Suc j) \\<Longrightarrow> \\<mu>_small_row i fs'' j", "by auto"], ["proof (state)\nthis:\n  \\<mu>_small_row i fs (Suc j) \\<Longrightarrow> \\<mu>_small_row i fs'' j\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "(* goal *)"], ["proof (state)\nthis:\n  \\<mu>_small_row i fs (Suc j) \\<Longrightarrow> \\<mu>_small_row i fs'' j\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 28: \"length fs = m\" \"length mfs = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length fs = m &&& length mfs = m", "using LLL_invD_modw[OF Linvmw]"], ["proof (prove)\nusing this:\n  length mfs = m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n\ngoal (1 subgoal):\n 1. length fs = m &&& length mfs = m", "by auto"], ["proof (state)\nthis:\n  length fs = m\n  length mfs = m\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 29: \"map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map (map_vec (\\<lambda>x. x symmod p)) fs = mfs", "using assms LLL_invD_modw"], ["proof (prove)\nusing this:\n  LLL_invariant_mod_weak fs mfs dmu p first b\n  i < m\n  j < i\n  c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)\n  mfs' = mfs\n  [i := map_vec (\\<lambda>x. x symmod p)\n         (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)]\n  dmu' =\n  mat m m\n   (\\<lambda>(i', j').\n       if i' = i \\<and> j' \\<le> j\n       then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n            else (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n                 (p * d_of dmu j' * d_of dmu (Suc j'))\n       else dmu $$ (i', j'))\n  LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b \\<Longrightarrow>\n  length ?mfs = m\n  LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b \\<Longrightarrow>\n  length ?fs = m\n  LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b \\<Longrightarrow>\n  lattice_of ?fs = L\n  LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b \\<Longrightarrow>\n  gs.lin_indpt_list (map of_int_hom.vec_hom ?fs)\n  LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b \\<Longrightarrow>\n  map (map_vec (\\<lambda>x. x symmod ?p)) ?fs = ?mfs\n  LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b \\<Longrightarrow>\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> ?fs i' j'\\<bar> < ?p * d ?fs j' * d ?fs (Suc j')\n  LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b \\<Longrightarrow>\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> ?fs i' j' = ?dmu $$ (i', j')\n  \\<lbrakk>LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b;\n   ?i < m\\<rbrakk>\n  \\<Longrightarrow> ?fs ! ?i \\<in> carrier_vec n\n  LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b \\<Longrightarrow>\n  set ?fs \\<subseteq> carrier_vec n\n  \\<lbrakk>LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b;\n   ?i < m\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.gso n (map of_int_hom.vec_hom ?fs) ?i\n                    \\<in> Rn\n  \\<lbrakk>LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b;\n   ?i < m\\<rbrakk>\n  \\<Longrightarrow> ?mfs ! ?i \\<in> carrier_vec n\n  LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b \\<Longrightarrow>\n  set ?mfs \\<subseteq> carrier_vec n\n  LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b \\<Longrightarrow> 1 < ?p\n  LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b \\<Longrightarrow>\n  g_bnd_mode ?first ?b ?fs\n  LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b \\<Longrightarrow>\n  mod_invariant ?b ?p ?first\n\ngoal (1 subgoal):\n 1. map (map_vec (\\<lambda>x. x symmod p)) fs = mfs", "by simp"], ["proof (state)\nthis:\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 30: \"\\<And> i. i < m \\<Longrightarrow> fs ! i \\<in> carrier_vec n\" \"\\<And> i. i < m \\<Longrightarrow> mfs ! i \\<in> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i. i < m \\<Longrightarrow> fs ! i \\<in> carrier_vec n) &&&\n    (\\<And>i. i < m \\<Longrightarrow> mfs ! i \\<in> carrier_vec n)", "using LLL_invD_modw[OF Linvmw]"], ["proof (prove)\nusing this:\n  length mfs = m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n\ngoal (1 subgoal):\n 1. (\\<And>i. i < m \\<Longrightarrow> fs ! i \\<in> carrier_vec n) &&&\n    (\\<And>i. i < m \\<Longrightarrow> mfs ! i \\<in> carrier_vec n)", "by auto"], ["proof (state)\nthis:\n  ?i2 < m \\<Longrightarrow> fs ! ?i2 \\<in> carrier_vec n\n  ?i2 < m \\<Longrightarrow> mfs ! ?i2 \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 31: \"\\<And> i. i < m \\<Longrightarrow> fs' ! i \\<in> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> fs' ! i \\<in> carrier_vec n", "using fs'_def 30(1)"], ["proof (prove)\nusing this:\n  fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j]\n  ?i2 < m \\<Longrightarrow> fs ! ?i2 \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> fs' ! i \\<in> carrier_vec n", "using \"08\" \"091\" fs_int_indpt.f_carrier"], ["proof (prove)\nusing this:\n  fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j]\n  ?i2 < m \\<Longrightarrow> fs ! ?i2 \\<in> carrier_vec n\n  length fs' = m\n  fs_int_indpt n fs'\n  \\<lbrakk>fs_int_indpt ?n ?fs; ?i < length ?fs\\<rbrakk>\n  \\<Longrightarrow> ?fs ! ?i \\<in> carrier_vec ?n\n\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> fs' ! i \\<in> carrier_vec n", "by blast"], ["proof (state)\nthis:\n  ?i2 < m \\<Longrightarrow> fs' ! ?i2 \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 32: \"\\<And> i. i < m \\<Longrightarrow> mfs' ! i \\<in> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> mfs' ! i \\<in> carrier_vec n", "unfolding mfs'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < m \\<Longrightarrow>\n       mfs[i := map_vec (\\<lambda>x. x symmod p)\n                 (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)] !\n       ia\n       \\<in> carrier_vec n", "using 30(2) 28(2)"], ["proof (prove)\nusing this:\n  ?i2 < m \\<Longrightarrow> mfs ! ?i2 \\<in> carrier_vec n\n  length mfs = m\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < m \\<Longrightarrow>\n       mfs[i := map_vec (\\<lambda>x. x symmod p)\n                 (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)] !\n       ia\n       \\<in> carrier_vec n", "by (metis (no_types, lifting) Suc_lessD j less_trans_Suc map_carrier_vec minus_carrier_vec \n        nth_list_update_eq nth_list_update_neq smult_closed)"], ["proof (state)\nthis:\n  ?i2 < m \\<Longrightarrow> mfs' ! ?i2 \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 33: \"length mfs' = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length mfs' = m", "using 28(2) mfs'"], ["proof (prove)\nusing this:\n  length mfs = m\n  mfs' = mfs\n  [i := map_vec (\\<lambda>x. x symmod p)\n         (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)]\n\ngoal (1 subgoal):\n 1. length mfs' = m", "by simp"], ["proof (state)\nthis:\n  length mfs' = m\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "(* invariant goal *)"], ["proof (state)\nthis:\n  length mfs' = m\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "then"], ["proof (chain)\npicking this:\n  length mfs' = m", "have 34: \"map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'\""], ["proof (prove)\nusing this:\n  length mfs' = m\n\ngoal (1 subgoal):\n 1. map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. length mfs' = m \\<Longrightarrow>\n    map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. length mfs' = m \\<Longrightarrow>\n    map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'", "fix i' j'"], ["proof (state)\ngoal (1 subgoal):\n 1. length mfs' = m \\<Longrightarrow>\n    map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'", "have j2: \"j < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < m", "using j i"], ["proof (prove)\nusing this:\n  j < i\n  i < m\n\ngoal (1 subgoal):\n 1. j < m", "by auto"], ["proof (state)\nthis:\n  j < m\n\ngoal (1 subgoal):\n 1. length mfs' = m \\<Longrightarrow>\n    map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'", "assume i': \"i' < m\""], ["proof (state)\nthis:\n  i' < m\n\ngoal (1 subgoal):\n 1. length mfs' = m \\<Longrightarrow>\n    map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'", "assume j': \"j' < n\""], ["proof (state)\nthis:\n  j' < n\n\ngoal (1 subgoal):\n 1. length mfs' = m \\<Longrightarrow>\n    map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'", "then"], ["proof (chain)\npicking this:\n  j' < n", "have fsij: \"(fs ! i' $ j') symmod p = mfs ! i' $ j'\""], ["proof (prove)\nusing this:\n  j' < n\n\ngoal (1 subgoal):\n 1. fs ! i' $ j' symmod p = mfs ! i' $ j'", "using 30 i' j' 28 29"], ["proof (prove)\nusing this:\n  j' < n\n  ?i2 < m \\<Longrightarrow> fs ! ?i2 \\<in> carrier_vec n\n  ?i2 < m \\<Longrightarrow> mfs ! ?i2 \\<in> carrier_vec n\n  i' < m\n  j' < n\n  length fs = m\n  length mfs = m\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n\ngoal (1 subgoal):\n 1. fs ! i' $ j' symmod p = mfs ! i' $ j'", "by fastforce"], ["proof (state)\nthis:\n  fs ! i' $ j' symmod p = mfs ! i' $ j'\n\ngoal (1 subgoal):\n 1. length mfs' = m \\<Longrightarrow>\n    map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'", "have \"mfs' ! i $ j' = (mfs ! i $ j'- (c \\<cdot>\\<^sub>v mfs ! j) $ j') symmod p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mfs' ! i $ j' =\n    (mfs ! i $ j' - (c \\<cdot>\\<^sub>v mfs ! j) $ j') symmod p", "unfolding mfs'"], ["proof (prove)\ngoal (1 subgoal):\n 1. mfs[i := map_vec (\\<lambda>x. x symmod p)\n              (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)] !\n    i $\n    j' =\n    (mfs ! i $ j' - (c \\<cdot>\\<^sub>v mfs ! j) $ j') symmod p", "using 30(2) j' 28 j2"], ["proof (prove)\nusing this:\n  ?i2 < m \\<Longrightarrow> mfs ! ?i2 \\<in> carrier_vec n\n  j' < n\n  length fs = m\n  length mfs = m\n  j < m\n\ngoal (1 subgoal):\n 1. mfs[i := map_vec (\\<lambda>x. x symmod p)\n              (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)] !\n    i $\n    j' =\n    (mfs ! i $ j' - (c \\<cdot>\\<^sub>v mfs ! j) $ j') symmod p", "by (metis (no_types, lifting) carrier_vecD i index_map_vec(1) index_minus_vec(1) \n            index_minus_vec(2) index_smult_vec(2) nth_list_update_eq)"], ["proof (state)\nthis:\n  mfs' ! i $ j' = (mfs ! i $ j' - (c \\<cdot>\\<^sub>v mfs ! j) $ j') symmod p\n\ngoal (1 subgoal):\n 1. length mfs' = m \\<Longrightarrow>\n    map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'", "then"], ["proof (chain)\npicking this:\n  mfs' ! i $ j' = (mfs ! i $ j' - (c \\<cdot>\\<^sub>v mfs ! j) $ j') symmod p", "have mfs'ij: \"mfs' ! i $ j' = (mfs ! i $ j'- c * mfs ! j $ j') symmod p\""], ["proof (prove)\nusing this:\n  mfs' ! i $ j' = (mfs ! i $ j' - (c \\<cdot>\\<^sub>v mfs ! j) $ j') symmod p\n\ngoal (1 subgoal):\n 1. mfs' ! i $ j' = (mfs ! i $ j' - c * mfs ! j $ j') symmod p", "unfolding mfs'"], ["proof (prove)\nusing this:\n  mfs[i := map_vec (\\<lambda>x. x symmod p)\n            (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)] !\n  i $\n  j' =\n  (mfs ! i $ j' - (c \\<cdot>\\<^sub>v mfs ! j) $ j') symmod p\n\ngoal (1 subgoal):\n 1. mfs[i := map_vec (\\<lambda>x. x symmod p)\n              (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)] !\n    i $\n    j' =\n    (mfs ! i $ j' - c * mfs ! j $ j') symmod p", "using 30(2) i' j' 28 j2"], ["proof (prove)\nusing this:\n  mfs[i := map_vec (\\<lambda>x. x symmod p)\n            (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)] !\n  i $\n  j' =\n  (mfs ! i $ j' - (c \\<cdot>\\<^sub>v mfs ! j) $ j') symmod p\n  ?i2 < m \\<Longrightarrow> mfs ! ?i2 \\<in> carrier_vec n\n  i' < m\n  j' < n\n  length fs = m\n  length mfs = m\n  j < m\n\ngoal (1 subgoal):\n 1. mfs[i := map_vec (\\<lambda>x. x symmod p)\n              (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)] !\n    i $\n    j' =\n    (mfs ! i $ j' - c * mfs ! j $ j') symmod p", "by fastforce"], ["proof (state)\nthis:\n  mfs' ! i $ j' = (mfs ! i $ j' - c * mfs ! j $ j') symmod p\n\ngoal (1 subgoal):\n 1. length mfs' = m \\<Longrightarrow>\n    map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'", "have \"(fs' ! i' $ j') symmod p = mfs' ! i' $ j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "proof(cases \"i' = i\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i' = i \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'\n 2. i' \\<noteq> i \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "case True"], ["proof (state)\nthis:\n  i' = i\n\ngoal (2 subgoals):\n 1. i' = i \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'\n 2. i' \\<noteq> i \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "using fs'_def mfs' True 28 fsij"], ["proof (prove)\nusing this:\n  fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j]\n  mfs' = mfs\n  [i := map_vec (\\<lambda>x. x symmod p)\n         (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)]\n  i' = i\n  length fs = m\n  length mfs = m\n  fs ! i' $ j' symmod p = mfs ! i' $ j'\n\ngoal (1 subgoal):\n 1. fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j];\n     mfs' = mfs\n     [i := map_vec (\\<lambda>x. x symmod p)\n            (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)];\n     i' = i; length fs = m; length mfs = m;\n     fs ! i' $ j' symmod p = mfs ! i' $ j'\\<rbrakk>\n    \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "have \"fs' ! i' $ j' = (fs ! i' - c \\<cdot>\\<^sub>v fs ! j) $ j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fs' ! i' $ j' = (fs ! i' - c \\<cdot>\\<^sub>v fs ! j) $ j'", "using fs'_def True i' j' 28(1)"], ["proof (prove)\nusing this:\n  fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j]\n  i' = i\n  i' < m\n  j' < n\n  length fs = m\n\ngoal (1 subgoal):\n 1. fs' ! i' $ j' = (fs ! i' - c \\<cdot>\\<^sub>v fs ! j) $ j'", "by simp"], ["proof (state)\nthis:\n  fs' ! i' $ j' = (fs ! i' - c \\<cdot>\\<^sub>v fs ! j) $ j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j];\n     mfs' = mfs\n     [i := map_vec (\\<lambda>x. x symmod p)\n            (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)];\n     i' = i; length fs = m; length mfs = m;\n     fs ! i' $ j' symmod p = mfs ! i' $ j'\\<rbrakk>\n    \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "also"], ["proof (state)\nthis:\n  fs' ! i' $ j' = (fs ! i' - c \\<cdot>\\<^sub>v fs ! j) $ j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j];\n     mfs' = mfs\n     [i := map_vec (\\<lambda>x. x symmod p)\n            (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)];\n     i' = i; length fs = m; length mfs = m;\n     fs ! i' $ j' symmod p = mfs ! i' $ j'\\<rbrakk>\n    \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "have \"\\<dots> = fs ! i' $ j' - (c \\<cdot>\\<^sub>v fs ! j) $ j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fs ! i' - c \\<cdot>\\<^sub>v fs ! j) $ j' =\n    fs ! i' $ j' - (c \\<cdot>\\<^sub>v fs ! j) $ j'", "using i' j' 30(1)"], ["proof (prove)\nusing this:\n  i' < m\n  j' < n\n  ?i2 < m \\<Longrightarrow> fs ! ?i2 \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. (fs ! i' - c \\<cdot>\\<^sub>v fs ! j) $ j' =\n    fs ! i' $ j' - (c \\<cdot>\\<^sub>v fs ! j) $ j'", "by (metis Suc_lessD carrier_vecD i index_minus_vec(1) index_smult_vec(2) j less_trans_Suc)"], ["proof (state)\nthis:\n  (fs ! i' - c \\<cdot>\\<^sub>v fs ! j) $ j' =\n  fs ! i' $ j' - (c \\<cdot>\\<^sub>v fs ! j) $ j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j];\n     mfs' = mfs\n     [i := map_vec (\\<lambda>x. x symmod p)\n            (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)];\n     i' = i; length fs = m; length mfs = m;\n     fs ! i' $ j' symmod p = mfs ! i' $ j'\\<rbrakk>\n    \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "finally"], ["proof (chain)\npicking this:\n  fs' ! i' $ j' = fs ! i' $ j' - (c \\<cdot>\\<^sub>v fs ! j) $ j'", "have \"fs' ! i' $ j' = fs ! i' $ j' - (c \\<cdot>\\<^sub>v fs ! j) $ j'\""], ["proof (prove)\nusing this:\n  fs' ! i' $ j' = fs ! i' $ j' - (c \\<cdot>\\<^sub>v fs ! j) $ j'\n\ngoal (1 subgoal):\n 1. fs' ! i' $ j' = fs ! i' $ j' - (c \\<cdot>\\<^sub>v fs ! j) $ j'", "by auto"], ["proof (state)\nthis:\n  fs' ! i' $ j' = fs ! i' $ j' - (c \\<cdot>\\<^sub>v fs ! j) $ j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j];\n     mfs' = mfs\n     [i := map_vec (\\<lambda>x. x symmod p)\n            (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)];\n     i' = i; length fs = m; length mfs = m;\n     fs ! i' $ j' symmod p = mfs ! i' $ j'\\<rbrakk>\n    \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "then"], ["proof (chain)\npicking this:\n  fs' ! i' $ j' = fs ! i' $ j' - (c \\<cdot>\\<^sub>v fs ! j) $ j'", "have \"(fs' ! i' $ j') symmod p = (fs ! i' $ j' - (c \\<cdot>\\<^sub>v fs ! j) $ j') symmod p\""], ["proof (prove)\nusing this:\n  fs' ! i' $ j' = fs ! i' $ j' - (c \\<cdot>\\<^sub>v fs ! j) $ j'\n\ngoal (1 subgoal):\n 1. fs' ! i' $ j' symmod p =\n    (fs ! i' $ j' - (c \\<cdot>\\<^sub>v fs ! j) $ j') symmod p", "by auto"], ["proof (state)\nthis:\n  fs' ! i' $ j' symmod p =\n  (fs ! i' $ j' - (c \\<cdot>\\<^sub>v fs ! j) $ j') symmod p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j];\n     mfs' = mfs\n     [i := map_vec (\\<lambda>x. x symmod p)\n            (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)];\n     i' = i; length fs = m; length mfs = m;\n     fs ! i' $ j' symmod p = mfs ! i' $ j'\\<rbrakk>\n    \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "also"], ["proof (state)\nthis:\n  fs' ! i' $ j' symmod p =\n  (fs ! i' $ j' - (c \\<cdot>\\<^sub>v fs ! j) $ j') symmod p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j];\n     mfs' = mfs\n     [i := map_vec (\\<lambda>x. x symmod p)\n            (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)];\n     i' = i; length fs = m; length mfs = m;\n     fs ! i' $ j' symmod p = mfs ! i' $ j'\\<rbrakk>\n    \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "have \"\\<dots> = ((fs ! i' $ j') symmod p - ((c \\<cdot>\\<^sub>v fs ! j) $ j') symmod p) symmod p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fs ! i' $ j' - (c \\<cdot>\\<^sub>v fs ! j) $ j') symmod p =\n    (fs ! i' $ j' symmod p -\n     (c \\<cdot>\\<^sub>v fs ! j) $ j' symmod p) symmod\n    p", "by (simp add: sym_mod_diff_eq)"], ["proof (state)\nthis:\n  (fs ! i' $ j' - (c \\<cdot>\\<^sub>v fs ! j) $ j') symmod p =\n  (fs ! i' $ j' symmod p - (c \\<cdot>\\<^sub>v fs ! j) $ j' symmod p) symmod\n  p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j];\n     mfs' = mfs\n     [i := map_vec (\\<lambda>x. x symmod p)\n            (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)];\n     i' = i; length fs = m; length mfs = m;\n     fs ! i' $ j' symmod p = mfs ! i' $ j'\\<rbrakk>\n    \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "also"], ["proof (state)\nthis:\n  (fs ! i' $ j' - (c \\<cdot>\\<^sub>v fs ! j) $ j') symmod p =\n  (fs ! i' $ j' symmod p - (c \\<cdot>\\<^sub>v fs ! j) $ j' symmod p) symmod\n  p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j];\n     mfs' = mfs\n     [i := map_vec (\\<lambda>x. x symmod p)\n            (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)];\n     i' = i; length fs = m; length mfs = m;\n     fs ! i' $ j' symmod p = mfs ! i' $ j'\\<rbrakk>\n    \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "have \"(c \\<cdot>\\<^sub>v fs ! j) $ j' = c * (fs ! j $ j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c \\<cdot>\\<^sub>v fs ! j) $ j' = c * fs ! j $ j'", "using i' j' True 28 30(1) j"], ["proof (prove)\nusing this:\n  i' < m\n  j' < n\n  i' = i\n  length fs = m\n  length mfs = m\n  ?i2 < m \\<Longrightarrow> fs ! ?i2 \\<in> carrier_vec n\n  j < i\n\ngoal (1 subgoal):\n 1. (c \\<cdot>\\<^sub>v fs ! j) $ j' = c * fs ! j $ j'", "by (metis Suc_lessD carrier_vecD index_smult_vec(1) less_trans_Suc)"], ["proof (state)\nthis:\n  (c \\<cdot>\\<^sub>v fs ! j) $ j' = c * fs ! j $ j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j];\n     mfs' = mfs\n     [i := map_vec (\\<lambda>x. x symmod p)\n            (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)];\n     i' = i; length fs = m; length mfs = m;\n     fs ! i' $ j' symmod p = mfs ! i' $ j'\\<rbrakk>\n    \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "also"], ["proof (state)\nthis:\n  (c \\<cdot>\\<^sub>v fs ! j) $ j' = c * fs ! j $ j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j];\n     mfs' = mfs\n     [i := map_vec (\\<lambda>x. x symmod p)\n            (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)];\n     i' = i; length fs = m; length mfs = m;\n     fs ! i' $ j' symmod p = mfs ! i' $ j'\\<rbrakk>\n    \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "have \"((fs ! i' $ j') symmod p - (c * (fs ! j $ j')) symmod p) symmod p = \n            ((fs ! i' $ j') symmod p - c * ((fs ! j $ j') symmod p)) symmod p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fs ! i' $ j' symmod p - c * fs ! j $ j' symmod p) symmod p =\n    (fs ! i' $ j' symmod p - c * (fs ! j $ j' symmod p)) symmod p", "using i' j' True 28 30(1) j"], ["proof (prove)\nusing this:\n  i' < m\n  j' < n\n  i' = i\n  length fs = m\n  length mfs = m\n  ?i2 < m \\<Longrightarrow> fs ! ?i2 \\<in> carrier_vec n\n  j < i\n\ngoal (1 subgoal):\n 1. (fs ! i' $ j' symmod p - c * fs ! j $ j' symmod p) symmod p =\n    (fs ! i' $ j' symmod p - c * (fs ! j $ j' symmod p)) symmod p", "by (metis sym_mod_diff_right_eq sym_mod_mult_right_eq)"], ["proof (state)\nthis:\n  (fs ! i' $ j' symmod p - c * fs ! j $ j' symmod p) symmod p =\n  (fs ! i' $ j' symmod p - c * (fs ! j $ j' symmod p)) symmod p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j];\n     mfs' = mfs\n     [i := map_vec (\\<lambda>x. x symmod p)\n            (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)];\n     i' = i; length fs = m; length mfs = m;\n     fs ! i' $ j' symmod p = mfs ! i' $ j'\\<rbrakk>\n    \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "also"], ["proof (state)\nthis:\n  (fs ! i' $ j' symmod p - c * fs ! j $ j' symmod p) symmod p =\n  (fs ! i' $ j' symmod p - c * (fs ! j $ j' symmod p)) symmod p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j];\n     mfs' = mfs\n     [i := map_vec (\\<lambda>x. x symmod p)\n            (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)];\n     i' = i; length fs = m; length mfs = m;\n     fs ! i' $ j' symmod p = mfs ! i' $ j'\\<rbrakk>\n    \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "have \"((fs ! j $ j') symmod p) = mfs ! j $ j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fs ! j $ j' symmod p = mfs ! j $ j'", "using 30 i' j' 28 29 j2"], ["proof (prove)\nusing this:\n  ?i2 < m \\<Longrightarrow> fs ! ?i2 \\<in> carrier_vec n\n  ?i2 < m \\<Longrightarrow> mfs ! ?i2 \\<in> carrier_vec n\n  i' < m\n  j' < n\n  length fs = m\n  length mfs = m\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  j < m\n\ngoal (1 subgoal):\n 1. fs ! j $ j' symmod p = mfs ! j $ j'", "by fastforce"], ["proof (state)\nthis:\n  fs ! j $ j' symmod p = mfs ! j $ j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j];\n     mfs' = mfs\n     [i := map_vec (\\<lambda>x. x symmod p)\n            (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)];\n     i' = i; length fs = m; length mfs = m;\n     fs ! i' $ j' symmod p = mfs ! i' $ j'\\<rbrakk>\n    \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "also"], ["proof (state)\nthis:\n  fs ! j $ j' symmod p = mfs ! j $ j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j];\n     mfs' = mfs\n     [i := map_vec (\\<lambda>x. x symmod p)\n            (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)];\n     i' = i; length fs = m; length mfs = m;\n     fs ! i' $ j' symmod p = mfs ! i' $ j'\\<rbrakk>\n    \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "have \"((fs ! i' $ j') symmod p - c * mfs ! j $ j') symmod p = \n            (mfs ! i' $ j' - c * mfs ! j $ j') symmod p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fs ! i' $ j' symmod p - c * mfs ! j $ j') symmod p =\n    (mfs ! i' $ j' - c * mfs ! j $ j') symmod p", "using fsij"], ["proof (prove)\nusing this:\n  fs ! i' $ j' symmod p = mfs ! i' $ j'\n\ngoal (1 subgoal):\n 1. (fs ! i' $ j' symmod p - c * mfs ! j $ j') symmod p =\n    (mfs ! i' $ j' - c * mfs ! j $ j') symmod p", "by simp"], ["proof (state)\nthis:\n  (fs ! i' $ j' symmod p - c * mfs ! j $ j') symmod p =\n  (mfs ! i' $ j' - c * mfs ! j $ j') symmod p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j];\n     mfs' = mfs\n     [i := map_vec (\\<lambda>x. x symmod p)\n            (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)];\n     i' = i; length fs = m; length mfs = m;\n     fs ! i' $ j' symmod p = mfs ! i' $ j'\\<rbrakk>\n    \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "finally"], ["proof (chain)\npicking this:\n  fs' ! i' $ j' symmod p = (mfs ! i' $ j' - c * mfs ! j $ j') symmod p", "show ?thesis"], ["proof (prove)\nusing this:\n  fs' ! i' $ j' symmod p = (mfs ! i' $ j' - c * mfs ! j $ j') symmod p\n\ngoal (1 subgoal):\n 1. fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "using mfs'ij"], ["proof (prove)\nusing this:\n  fs' ! i' $ j' symmod p = (mfs ! i' $ j' - c * mfs ! j $ j') symmod p\n  mfs' ! i $ j' = (mfs ! i $ j' - c * mfs ! j $ j') symmod p\n\ngoal (1 subgoal):\n 1. fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "by (simp add: True)"], ["proof (state)\nthis:\n  fs' ! i' $ j' symmod p = mfs' ! i' $ j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fs' ! i' $ j' symmod p = mfs' ! i' $ j'\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "case False"], ["proof (state)\nthis:\n  i' \\<noteq> i\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow> fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "using fs'_def mfs' False 28 fsij"], ["proof (prove)\nusing this:\n  fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j]\n  mfs' = mfs\n  [i := map_vec (\\<lambda>x. x symmod p)\n         (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)]\n  i' \\<noteq> i\n  length fs = m\n  length mfs = m\n  fs ! i' $ j' symmod p = mfs ! i' $ j'\n\ngoal (1 subgoal):\n 1. fs' ! i' $ j' symmod p = mfs' ! i' $ j'", "by simp"], ["proof (state)\nthis:\n  fs' ! i' $ j' symmod p = mfs' ! i' $ j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fs' ! i' $ j' symmod p = mfs' ! i' $ j'\n\ngoal (1 subgoal):\n 1. length mfs' = m \\<Longrightarrow>\n    map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?i'4 < m; ?j'4 < n\\<rbrakk>\n  \\<Longrightarrow> fs' ! ?i'4 $ ?j'4 symmod p = mfs' ! ?i'4 $ ?j'4\n\ngoal (1 subgoal):\n 1. length mfs' = m \\<Longrightarrow>\n    map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i'4 < m; ?j'4 < n\\<rbrakk>\n  \\<Longrightarrow> fs' ! ?i'4 $ ?j'4 symmod p = mfs' ! ?i'4 $ ?j'4", "have \"\\<forall>i' < m. (map_vec (\\<lambda>x. x symmod p)) (fs' ! i') = mfs' ! i'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?i'4 < m; ?j'4 < n\\<rbrakk>\n  \\<Longrightarrow> fs' ! ?i'4 $ ?j'4 symmod p = mfs' ! ?i'4 $ ?j'4\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. map_vec (\\<lambda>x. x symmod p) (fs' ! i') = mfs' ! i'", "using 31 32 33 08"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i'4 < m; ?j'4 < n\\<rbrakk>\n  \\<Longrightarrow> fs' ! ?i'4 $ ?j'4 symmod p = mfs' ! ?i'4 $ ?j'4\n  ?i2 < m \\<Longrightarrow> fs' ! ?i2 \\<in> carrier_vec n\n  ?i2 < m \\<Longrightarrow> mfs' ! ?i2 \\<in> carrier_vec n\n  length mfs' = m\n  length fs' = m\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. map_vec (\\<lambda>x. x symmod p) (fs' ! i') = mfs' ! i'", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>i'<m. map_vec (\\<lambda>x. x symmod p) (fs' ! i') = mfs' ! i'\n\ngoal (1 subgoal):\n 1. length mfs' = m \\<Longrightarrow>\n    map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'", "then"], ["proof (chain)\npicking this:\n  \\<forall>i'<m. map_vec (\\<lambda>x. x symmod p) (fs' ! i') = mfs' ! i'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>i'<m. map_vec (\\<lambda>x. x symmod p) (fs' ! i') = mfs' ! i'\n\ngoal (1 subgoal):\n 1. map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'", "using 31 32 33 08"], ["proof (prove)\nusing this:\n  \\<forall>i'<m. map_vec (\\<lambda>x. x symmod p) (fs' ! i') = mfs' ! i'\n  ?i2 < m \\<Longrightarrow> fs' ! ?i2 \\<in> carrier_vec n\n  ?i2 < m \\<Longrightarrow> mfs' ! ?i2 \\<in> carrier_vec n\n  length mfs' = m\n  length fs' = m\n\ngoal (1 subgoal):\n 1. map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'", "by (simp add: map_nth_eq_conv)"], ["proof (state)\nthis:\n  map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "then"], ["proof (chain)\npicking this:\n  map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'", "have 35: \"map (map_vec (\\<lambda>x. x symmod p)) fs'' = mfs'\""], ["proof (prove)\nusing this:\n  map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'\n\ngoal (1 subgoal):\n 1. map (map_vec (\\<lambda>x. x symmod p)) fs'' = mfs'", "using 12"], ["proof (prove)\nusing this:\n  map (map_vec (\\<lambda>x. x symmod p)) fs' = mfs'\n  map (map_vec (\\<lambda>x. x symmod p)) fs'' =\n  map (map_vec (\\<lambda>x. x symmod p)) fs'\n\ngoal (1 subgoal):\n 1. map (map_vec (\\<lambda>x. x symmod p)) fs'' = mfs'", "by simp"], ["proof (state)\nthis:\n  map (map_vec (\\<lambda>x. x symmod p)) fs'' = mfs'\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "(* invariant req. *)"], ["proof (state)\nthis:\n  map (map_vec (\\<lambda>x. x symmod p)) fs'' = mfs'\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 36: \"lin_indep fs''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gs.lin_indpt_list (map of_int_hom.vec_hom fs'')", "using 13"], ["proof (prove)\nusing this:\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs'')\n\ngoal (1 subgoal):\n 1. gs.lin_indpt_list (map of_int_hom.vec_hom fs'')", "by simp"], ["proof (state)\nthis:\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs'')\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "(* invariant req. *)"], ["proof (state)\nthis:\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs'')\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have Linvw'': \"LLL_invariant_weak fs''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak fs''", "using LLL_invariant_weak_def 11 13 14"], ["proof (prove)\nusing this:\n  LLL_invariant_weak ?fs =\n  (gs.lin_indpt_list (map of_int_hom.vec_hom ?fs) \\<and>\n   lattice_of ?fs = L \\<and> length ?fs = m)\n  lattice_of fs'' = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs'')\n  length fs'' = m\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak fs''", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_weak fs''\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 39: \"(\\<forall>i' < m. \\<forall>j' < i'. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "(* invariant req. *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "fix i' j'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "assume i': \"i' < m\""], ["proof (state)\nthis:\n  i' < m\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "assume j': \"j' < i'\""], ["proof (state)\nthis:\n  j' < i'\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "define pdd where \"pdd = (p * d fs'' j' * d fs'' (Suc j'))\""], ["proof (state)\nthis:\n  pdd = p * d fs'' j' * d fs'' (Suc j')\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  pdd = p * d fs'' j' * d fs'' (Suc j')", "have pddgtz: \"pdd > 0\""], ["proof (prove)\nusing this:\n  pdd = p * d fs'' j' * d fs'' (Suc j')\n\ngoal (1 subgoal):\n 1. 0 < pdd", "using pgtz j' LLL_d_pos[OF Linvw', of \"Suc j'\"] LLL_d_pos[OF Linvw', of j'] j' i' 16"], ["proof (prove)\nusing this:\n  pdd = p * d fs'' j' * d fs'' (Suc j')\n  0 < p\n  j' < i'\n  Suc j' \\<le> m \\<Longrightarrow> 0 < d fs' (Suc j')\n  j' \\<le> m \\<Longrightarrow> 0 < d fs' j'\n  j' < i'\n  i' < m\n  \\<forall>k\\<le>m. d fs'' k = d fs' k\n\ngoal (1 subgoal):\n 1. 0 < pdd", "by simp"], ["proof (state)\nthis:\n  0 < pdd\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "have \"\\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "proof(cases \"i' = i\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i' = i \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. i' \\<noteq> i \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "case i'i: True"], ["proof (state)\nthis:\n  i' = i\n\ngoal (2 subgoals):\n 1. i' = i \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. i' \\<noteq> i \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  i' = i", "show ?thesis"], ["proof (prove)\nusing this:\n  i' = i\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "proof (cases \"j' < j\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i' = i; j' < j\\<rbrakk>\n    \\<Longrightarrow> \\<bar>d\\<mu> fs'' i' j'\\<bar>\n                      < p * d fs'' j' * d fs'' (Suc j')\n 2. \\<lbrakk>i' = i; \\<not> j' < j\\<rbrakk>\n    \\<Longrightarrow> \\<bar>d\\<mu> fs'' i' j'\\<bar>\n                      < p * d fs'' j' * d fs'' (Suc j')", "case True"], ["proof (state)\nthis:\n  j' < j\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i' = i; j' < j\\<rbrakk>\n    \\<Longrightarrow> \\<bar>d\\<mu> fs'' i' j'\\<bar>\n                      < p * d fs'' j' * d fs'' (Suc j')\n 2. \\<lbrakk>i' = i; \\<not> j' < j\\<rbrakk>\n    \\<Longrightarrow> \\<bar>d\\<mu> fs'' i' j'\\<bar>\n                      < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  j' < j", "have eq'': \"d\\<mu> fs'' i' j' = d\\<mu> fs' i' j' symmod (p * d fs'' j' * d fs'' (Suc j'))\""], ["proof (prove)\nusing this:\n  j' < j\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' =\n    d\\<mu> fs' i' j' symmod (p * d fs'' j' * d fs'' (Suc j'))", "using 16 17 10 I_def True i' j' i'i"], ["proof (prove)\nusing this:\n  j' < j\n  \\<forall>k\\<le>m. d fs'' k = d fs' k\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs'' i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n         else d\\<mu> fs' i' j')\n  I \\<subseteq> {(i', j'). i' < m \\<and> j' < i'}\n  (i, j) \\<notin> I\n  \\<forall>j'\\<ge>j. (i, j') \\<notin> I\n  I = {(i', j'). i' = i \\<and> j' < j}\n  j' < j\n  i' < m\n  j' < i'\n  i' = i\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' =\n    d\\<mu> fs' i' j' symmod (p * d fs'' j' * d fs'' (Suc j'))", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' =\n  d\\<mu> fs' i' j' symmod (p * d fs'' j' * d fs'' (Suc j'))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i' = i; j' < j\\<rbrakk>\n    \\<Longrightarrow> \\<bar>d\\<mu> fs'' i' j'\\<bar>\n                      < p * d fs'' j' * d fs'' (Suc j')\n 2. \\<lbrakk>i' = i; \\<not> j' < j\\<rbrakk>\n    \\<Longrightarrow> \\<bar>d\\<mu> fs'' i' j'\\<bar>\n                      < p * d fs'' j' * d fs'' (Suc j')", "have \"0 < pdd\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < pdd", "using pddgtz"], ["proof (prove)\nusing this:\n  0 < pdd\n\ngoal (1 subgoal):\n 1. 0 < pdd", "by simp"], ["proof (state)\nthis:\n  0 < pdd\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i' = i; j' < j\\<rbrakk>\n    \\<Longrightarrow> \\<bar>d\\<mu> fs'' i' j'\\<bar>\n                      < p * d fs'' j' * d fs'' (Suc j')\n 2. \\<lbrakk>i' = i; \\<not> j' < j\\<rbrakk>\n    \\<Longrightarrow> \\<bar>d\\<mu> fs'' i' j'\\<bar>\n                      < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  0 < pdd", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < pdd\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "unfolding eq''"], ["proof (prove)\nusing this:\n  0 < pdd\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs' i' j' symmod (p * d fs'' j' * d fs'' (Suc j'))\\<bar>\n    < p * d fs'' j' * d fs'' (Suc j')", "unfolding pdd_def[symmetric]"], ["proof (prove)\nusing this:\n  0 < pdd\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs' i' j' symmod pdd\\<bar> < pdd", "using sym_mod_abs"], ["proof (prove)\nusing this:\n  0 < pdd\n  0 < ?y \\<Longrightarrow> \\<bar>?x symmod ?y\\<bar> < ?y\n  1 \\<le> ?y \\<Longrightarrow> \\<bar>?x symmod ?y\\<bar> \\<le> ?y div 2\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs' i' j' symmod pdd\\<bar> < pdd", "by blast"], ["proof (state)\nthis:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i' = i; \\<not> j' < j\\<rbrakk>\n    \\<Longrightarrow> \\<bar>d\\<mu> fs'' i' j'\\<bar>\n                      < p * d fs'' j' * d fs'' (Suc j')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i' = i; \\<not> j' < j\\<rbrakk>\n    \\<Longrightarrow> \\<bar>d\\<mu> fs'' i' j'\\<bar>\n                      < p * d fs'' j' * d fs'' (Suc j')", "case fls: False"], ["proof (state)\nthis:\n  \\<not> j' < j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i' = i; \\<not> j' < j\\<rbrakk>\n    \\<Longrightarrow> \\<bar>d\\<mu> fs'' i' j'\\<bar>\n                      < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  \\<not> j' < j", "have \"(i',j') \\<notin> I\""], ["proof (prove)\nusing this:\n  \\<not> j' < j\n\ngoal (1 subgoal):\n 1. (i', j') \\<notin> I", "using I_def i'i"], ["proof (prove)\nusing this:\n  \\<not> j' < j\n  I = {(i', j'). i' = i \\<and> j' < j}\n  i' = i\n\ngoal (1 subgoal):\n 1. (i', j') \\<notin> I", "by simp"], ["proof (state)\nthis:\n  (i', j') \\<notin> I\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i' = i; \\<not> j' < j\\<rbrakk>\n    \\<Longrightarrow> \\<bar>d\\<mu> fs'' i' j'\\<bar>\n                      < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  (i', j') \\<notin> I", "have dmufs''fs': \"d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'\""], ["proof (prove)\nusing this:\n  (i', j') \\<notin> I\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'", "using 17 i' j'"], ["proof (prove)\nusing this:\n  (i', j') \\<notin> I\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs'' i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n         else d\\<mu> fs' i' j')\n  i' < m\n  j' < i'\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i' = i; \\<not> j' < j\\<rbrakk>\n    \\<Longrightarrow> \\<bar>d\\<mu> fs'' i' j'\\<bar>\n                      < p * d fs'' j' * d fs'' (Suc j')", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "proof (cases \"j' = j\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "case True"], ["proof (state)\nthis:\n  j' = j\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "define \\<mu>'' where \"\\<mu>'' = \\<mu> fs'' i' j'\""], ["proof (state)\nthis:\n  \\<mu>'' = gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j'\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "define d'' where \"d'' = d fs'' (Suc j')\""], ["proof (state)\nthis:\n  d'' = d fs'' (Suc j')\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "have pge1: \"p \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> p", "using pgtz"], ["proof (prove)\nusing this:\n  0 < p\n\ngoal (1 subgoal):\n 1. 1 \\<le> p", "by simp"], ["proof (state)\nthis:\n  1 \\<le> p\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "have lh: \"\\<bar>\\<mu>''\\<bar> \\<le> 1 / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>\\<mu>''\\<bar> \\<le> 1 / 2", "using 23 True i'i \\<mu>''_def"], ["proof (prove)\nusing this:\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j\\<bar>\n  \\<le> 1 / 2\n  j' = j\n  i' = i\n  \\<mu>'' = gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j'\n\ngoal (1 subgoal):\n 1. \\<bar>\\<mu>''\\<bar> \\<le> 1 / 2", "by simp"], ["proof (state)\nthis:\n  \\<bar>\\<mu>''\\<bar> \\<le> 1 / 2\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "moreover"], ["proof (state)\nthis:\n  \\<bar>\\<mu>''\\<bar> \\<le> 1 / 2\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "have eq: \"d\\<mu> fs'' i' j' = \\<mu>'' * d''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_int (d\\<mu> fs'' i' j') = of_rat \\<mu>'' * of_int d''", "using d\\<mu>_def i' j' \\<mu>''_def d''_def"], ["proof (prove)\nusing this:\n  d\\<mu> ?gs ?i ?j =\n  int_of_rat\n   (rat_of_int (d ?gs (Suc ?j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?gs) ?i ?j)\n  i' < m\n  j' < i'\n  \\<mu>'' = gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j'\n  d'' = d fs'' (Suc j')\n\ngoal (1 subgoal):\n 1. of_int (d\\<mu> fs'' i' j') = of_rat \\<mu>'' * of_int d''", "by (smt \"14\" \"36\" LLL.d_def Suc_lessD fs_int.d_def fs_int_indpt.d\\<mu> fs_int_indpt.intro \n                  int_of_rat(1) less_trans_Suc mult_of_int_commute of_rat_mult of_rat_of_int_eq)"], ["proof (state)\nthis:\n  of_int (d\\<mu> fs'' i' j') = of_rat \\<mu>'' * of_int d''\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "moreover"], ["proof (state)\nthis:\n  of_int (d\\<mu> fs'' i' j') = of_rat \\<mu>'' * of_int d''\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "have Sj': \"Suc j' \\<le> m\" \"j' \\<le> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc j' \\<le> m &&& j' \\<le> m", "using True j' i i'"], ["proof (prove)\nusing this:\n  j' = j\n  j' < i'\n  i < m\n  i' < m\n\ngoal (1 subgoal):\n 1. Suc j' \\<le> m &&& j' \\<le> m", "by auto"], ["proof (state)\nthis:\n  Suc j' \\<le> m\n  j' \\<le> m\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "moreover"], ["proof (state)\nthis:\n  Suc j' \\<le> m\n  j' \\<le> m\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  Suc j' \\<le> m\n  j' \\<le> m", "have gtz: \"0 < d''\""], ["proof (prove)\nusing this:\n  Suc j' \\<le> m\n  j' \\<le> m\n\ngoal (1 subgoal):\n 1. 0 < d''", "using LLL_d_pos[OF Linvw''] d''_def"], ["proof (prove)\nusing this:\n  Suc j' \\<le> m\n  j' \\<le> m\n  ?k \\<le> m \\<Longrightarrow> 0 < d fs'' ?k\n  d'' = d fs'' (Suc j')\n\ngoal (1 subgoal):\n 1. 0 < d''", "by simp"], ["proof (state)\nthis:\n  0 < d''\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "moreover"], ["proof (state)\nthis:\n  0 < d''\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "have \"rat_of_int \\<bar>d\\<mu> fs'' i' j'\\<bar> = \\<bar>\\<mu>'' * (rat_of_int d'')\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int \\<bar>d\\<mu> fs'' i' j'\\<bar> =\n    \\<bar>\\<mu>'' * rat_of_int d''\\<bar>", "using eq"], ["proof (prove)\nusing this:\n  of_int (d\\<mu> fs'' i' j') = of_rat \\<mu>'' * of_int d''\n\ngoal (1 subgoal):\n 1. rat_of_int \\<bar>d\\<mu> fs'' i' j'\\<bar> =\n    \\<bar>\\<mu>'' * rat_of_int d''\\<bar>", "by (metis of_int_abs of_rat_hom.injectivity of_rat_mult of_rat_of_int_eq)"], ["proof (state)\nthis:\n  rat_of_int \\<bar>d\\<mu> fs'' i' j'\\<bar> =\n  \\<bar>\\<mu>'' * rat_of_int d''\\<bar>\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "moreover"], ["proof (state)\nthis:\n  rat_of_int \\<bar>d\\<mu> fs'' i' j'\\<bar> =\n  \\<bar>\\<mu>'' * rat_of_int d''\\<bar>\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  rat_of_int \\<bar>d\\<mu> fs'' i' j'\\<bar> =\n  \\<bar>\\<mu>'' * rat_of_int d''\\<bar>", "have \"\\<bar>\\<mu>'' * rat_of_int d'' \\<bar> =  \\<bar>\\<mu>''\\<bar> * rat_of_int \\<bar>d''\\<bar>\""], ["proof (prove)\nusing this:\n  rat_of_int \\<bar>d\\<mu> fs'' i' j'\\<bar> =\n  \\<bar>\\<mu>'' * rat_of_int d''\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>\\<mu>'' * rat_of_int d''\\<bar> =\n    \\<bar>\\<mu>''\\<bar> * rat_of_int \\<bar>d''\\<bar>", "by (metis (mono_tags, hide_lams) abs_mult of_int_abs)"], ["proof (state)\nthis:\n  \\<bar>\\<mu>'' * rat_of_int d''\\<bar> =\n  \\<bar>\\<mu>''\\<bar> * rat_of_int \\<bar>d''\\<bar>\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "moreover"], ["proof (state)\nthis:\n  \\<bar>\\<mu>'' * rat_of_int d''\\<bar> =\n  \\<bar>\\<mu>''\\<bar> * rat_of_int \\<bar>d''\\<bar>\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "have \"\\<dots> = \\<bar>\\<mu>''\\<bar> * rat_of_int d'' \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>\\<mu>''\\<bar> * rat_of_int \\<bar>d''\\<bar> =\n    \\<bar>\\<mu>''\\<bar> * rat_of_int d''", "using gtz"], ["proof (prove)\nusing this:\n  0 < d''\n\ngoal (1 subgoal):\n 1. \\<bar>\\<mu>''\\<bar> * rat_of_int \\<bar>d''\\<bar> =\n    \\<bar>\\<mu>''\\<bar> * rat_of_int d''", "by simp"], ["proof (state)\nthis:\n  \\<bar>\\<mu>''\\<bar> * rat_of_int \\<bar>d''\\<bar> =\n  \\<bar>\\<mu>''\\<bar> * rat_of_int d''\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "moreover"], ["proof (state)\nthis:\n  \\<bar>\\<mu>''\\<bar> * rat_of_int \\<bar>d''\\<bar> =\n  \\<bar>\\<mu>''\\<bar> * rat_of_int d''\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "have \"\\<dots> < rat_of_int d''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>\\<mu>''\\<bar> * rat_of_int d'' < rat_of_int d''", "using lh gtz"], ["proof (prove)\nusing this:\n  \\<bar>\\<mu>''\\<bar> \\<le> 1 / 2\n  0 < d''\n\ngoal (1 subgoal):\n 1. \\<bar>\\<mu>''\\<bar> * rat_of_int d'' < rat_of_int d''", "by simp"], ["proof (state)\nthis:\n  \\<bar>\\<mu>''\\<bar> * rat_of_int d'' < rat_of_int d''\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "ultimately"], ["proof (chain)\npicking this:\n  \\<bar>\\<mu>''\\<bar> \\<le> 1 / 2\n  of_int (d\\<mu> fs'' i' j') = of_rat \\<mu>'' * of_int d''\n  Suc j' \\<le> m\n  j' \\<le> m\n  0 < d''\n  rat_of_int \\<bar>d\\<mu> fs'' i' j'\\<bar> =\n  \\<bar>\\<mu>'' * rat_of_int d''\\<bar>\n  \\<bar>\\<mu>'' * rat_of_int d''\\<bar> =\n  \\<bar>\\<mu>''\\<bar> * rat_of_int \\<bar>d''\\<bar>\n  \\<bar>\\<mu>''\\<bar> * rat_of_int \\<bar>d''\\<bar> =\n  \\<bar>\\<mu>''\\<bar> * rat_of_int d''\n  \\<bar>\\<mu>''\\<bar> * rat_of_int d'' < rat_of_int d''", "have \"rat_of_int \\<bar>d\\<mu> fs'' i' j'\\<bar> < rat_of_int d''\""], ["proof (prove)\nusing this:\n  \\<bar>\\<mu>''\\<bar> \\<le> 1 / 2\n  of_int (d\\<mu> fs'' i' j') = of_rat \\<mu>'' * of_int d''\n  Suc j' \\<le> m\n  j' \\<le> m\n  0 < d''\n  rat_of_int \\<bar>d\\<mu> fs'' i' j'\\<bar> =\n  \\<bar>\\<mu>'' * rat_of_int d''\\<bar>\n  \\<bar>\\<mu>'' * rat_of_int d''\\<bar> =\n  \\<bar>\\<mu>''\\<bar> * rat_of_int \\<bar>d''\\<bar>\n  \\<bar>\\<mu>''\\<bar> * rat_of_int \\<bar>d''\\<bar> =\n  \\<bar>\\<mu>''\\<bar> * rat_of_int d''\n  \\<bar>\\<mu>''\\<bar> * rat_of_int d'' < rat_of_int d''\n\ngoal (1 subgoal):\n 1. rat_of_int \\<bar>d\\<mu> fs'' i' j'\\<bar> < rat_of_int d''", "by simp"], ["proof (state)\nthis:\n  rat_of_int \\<bar>d\\<mu> fs'' i' j'\\<bar> < rat_of_int d''\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  rat_of_int \\<bar>d\\<mu> fs'' i' j'\\<bar> < rat_of_int d''", "have \"\\<bar>d\\<mu> fs'' i' j'\\<bar> <  d fs'' (Suc j')\""], ["proof (prove)\nusing this:\n  rat_of_int \\<bar>d\\<mu> fs'' i' j'\\<bar> < rat_of_int d''\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < d fs'' (Suc j')", "using d''_def"], ["proof (prove)\nusing this:\n  rat_of_int \\<bar>d\\<mu> fs'' i' j'\\<bar> < rat_of_int d''\n  d'' = d fs'' (Suc j')\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < d fs'' (Suc j')", "by simp"], ["proof (state)\nthis:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < d fs'' (Suc j')\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < d fs'' (Suc j')", "have \"\\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' (Suc j')\""], ["proof (prove)\nusing this:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < d fs'' (Suc j')\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' (Suc j')", "using pge1"], ["proof (prove)\nusing this:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < d fs'' (Suc j')\n  1 \\<le> p\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' (Suc j')", "by (smt mult_less_cancel_right2)"], ["proof (state)\nthis:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' (Suc j')\n\ngoal (2 subgoals):\n 1. j' = j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' (Suc j')", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' (Suc j')\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "using pge1 LLL_d_pos[OF Linvw'' Sj'(2)] gtz"], ["proof (prove)\nusing this:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' (Suc j')\n  1 \\<le> p\n  0 < d fs'' j'\n  0 < d''\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "unfolding d''_def"], ["proof (prove)\nusing this:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' (Suc j')\n  1 \\<le> p\n  0 < d fs'' j'\n  0 < d fs'' (Suc j')\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "by (smt mult_less_cancel_left2 mult_right_less_imp_less)"], ["proof (state)\nthis:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n\ngoal (1 subgoal):\n 1. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "case False"], ["proof (state)\nthis:\n  j' \\<noteq> j\n\ngoal (1 subgoal):\n 1. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "have \"j' < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j' < m", "using i' j'"], ["proof (prove)\nusing this:\n  i' < m\n  j' < i'\n\ngoal (1 subgoal):\n 1. j' < m", "by simp"], ["proof (state)\nthis:\n  j' < m\n\ngoal (1 subgoal):\n 1. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "moreover"], ["proof (state)\nthis:\n  j' < m\n\ngoal (1 subgoal):\n 1. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "have \"j' > j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < j'", "using False fls"], ["proof (prove)\nusing this:\n  j' \\<noteq> j\n  \\<not> j' < j\n\ngoal (1 subgoal):\n 1. j < j'", "by simp"], ["proof (state)\nthis:\n  j < j'\n\ngoal (1 subgoal):\n 1. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "ultimately"], ["proof (chain)\npicking this:\n  j' < m\n  j < j'", "have \"\\<mu> fs' i' j' = \\<mu> fs i' j'\""], ["proof (prove)\nusing this:\n  j' < m\n  j < j'\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'", "using i' 04 i"], ["proof (prove)\nusing this:\n  j' < m\n  j < j'\n  i' < m\n  \\<lbrakk>?i'2 < m; ?j'2 < m\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs')\n                     ?i'2 ?j'2 =\n                    (if ?i'2 = i \\<and> ?j'2 \\<le> j\n                     then gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) i ?j'2 -\n                          rat_of_int c *\n                          gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) j ?j'2\n                     else gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) ?i'2 ?j'2)\n  i < m\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'", "by simp"], ["proof (state)\nthis:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'\n\ngoal (1 subgoal):\n 1. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'", "have \"d\\<mu> fs' i' j' = d\\<mu> fs i' j'\""], ["proof (prove)\nusing this:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = d\\<mu> fs i' j'", "using d\\<mu>_def i' j' 05"], ["proof (prove)\nusing this:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'\n  d\\<mu> ?gs ?i ?j =\n  int_of_rat\n   (rat_of_int (d ?gs (Suc ?j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?gs) ?i ?j)\n  i' < m\n  j' < i'\n  ?ii2 \\<le> m \\<Longrightarrow> d fs' ?ii2 = d fs ?ii2\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = d\\<mu> fs i' j'", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'\n\ngoal (1 subgoal):\n 1. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'", "have \"d\\<mu> fs'' i' j' = d\\<mu> fs i' j'\""], ["proof (prove)\nusing this:\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = d\\<mu> fs i' j'", "using dmufs''fs'"], ["proof (prove)\nusing this:\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'\n  d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = d\\<mu> fs i' j'", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = d\\<mu> fs i' j'\n\ngoal (1 subgoal):\n 1. j' \\<noteq> j \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  d\\<mu> fs'' i' j' = d\\<mu> fs i' j'", "show ?thesis"], ["proof (prove)\nusing this:\n  d\\<mu> fs'' i' j' = d\\<mu> fs i' j'\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "using LLL_invD_modw[OF Linvmw] i' j' 25"], ["proof (prove)\nusing this:\n  d\\<mu> fs'' i' j' = d\\<mu> fs i' j'\n  length mfs = m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  i' < m\n  j' < i'\n  \\<forall>k\\<le>m. d fs'' k = d fs k\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "by simp"], ["proof (state)\nthis:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "case False"], ["proof (state)\nthis:\n  i' \\<noteq> i\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  i' \\<noteq> i", "have \"(i',j') \\<notin> I\""], ["proof (prove)\nusing this:\n  i' \\<noteq> i\n\ngoal (1 subgoal):\n 1. (i', j') \\<notin> I", "using I_def"], ["proof (prove)\nusing this:\n  i' \\<noteq> i\n  I = {(i', j'). i' = i \\<and> j' < j}\n\ngoal (1 subgoal):\n 1. (i', j') \\<notin> I", "by simp"], ["proof (state)\nthis:\n  (i', j') \\<notin> I\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  (i', j') \\<notin> I", "have dmufs''fs': \"d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'\""], ["proof (prove)\nusing this:\n  (i', j') \\<notin> I\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'", "using 17 i' j'"], ["proof (prove)\nusing this:\n  (i', j') \\<notin> I\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs'' i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n         else d\\<mu> fs' i' j')\n  i' < m\n  j' < i'\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "have \"\\<mu> fs' i' j' = \\<mu> fs i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'", "using i' 04 j' False"], ["proof (prove)\nusing this:\n  i' < m\n  \\<lbrakk>?i'2 < m; ?j'2 < m\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs')\n                     ?i'2 ?j'2 =\n                    (if ?i'2 = i \\<and> ?j'2 \\<le> j\n                     then gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) i ?j'2 -\n                          rat_of_int c *\n                          gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) j ?j'2\n                     else gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) ?i'2 ?j'2)\n  j' < i'\n  i' \\<noteq> i\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'", "by simp"], ["proof (state)\nthis:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'", "have \"d\\<mu> fs' i' j' = d\\<mu> fs i' j'\""], ["proof (prove)\nusing this:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = d\\<mu> fs i' j'", "using d\\<mu>_def i' j' 05"], ["proof (prove)\nusing this:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'\n  d\\<mu> ?gs ?i ?j =\n  int_of_rat\n   (rat_of_int (d ?gs (Suc ?j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?gs) ?i ?j)\n  i' < m\n  j' < i'\n  ?ii2 \\<le> m \\<Longrightarrow> d fs' ?ii2 = d fs ?ii2\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = d\\<mu> fs i' j'", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "moreover"], ["proof (state)\nthis:\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'", "have \"d\\<mu> fs'' i' j' = d\\<mu> fs i' j'\""], ["proof (prove)\nusing this:\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = d\\<mu> fs i' j'", "using dmufs''fs'"], ["proof (prove)\nusing this:\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'\n  d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = d\\<mu> fs i' j'", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = d\\<mu> fs i' j'\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  d\\<mu> fs'' i' j' = d\\<mu> fs i' j'", "show ?thesis"], ["proof (prove)\nusing this:\n  d\\<mu> fs'' i' j' = d\\<mu> fs i' j'\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "using LLL_invD_modw[OF Linvmw] i' j' 25"], ["proof (prove)\nusing this:\n  d\\<mu> fs'' i' j' = d\\<mu> fs i' j'\n  length mfs = m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  i' < m\n  j' < i'\n  \\<forall>k\\<le>m. d fs'' k = d fs k\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "by simp"], ["proof (state)\nthis:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?i'4 < m; ?j'4 < ?i'4\\<rbrakk>\n  \\<Longrightarrow> \\<bar>d\\<mu> fs'' ?i'4 ?j'4\\<bar>\n                    < p * d fs'' ?j'4 * d fs'' (Suc ?j'4)\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i'4 < m; ?j'4 < ?i'4\\<rbrakk>\n  \\<Longrightarrow> \\<bar>d\\<mu> fs'' ?i'4 ?j'4\\<bar>\n                    < p * d fs'' ?j'4 * d fs'' (Suc ?j'4)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i'4 < m; ?j'4 < ?i'4\\<rbrakk>\n  \\<Longrightarrow> \\<bar>d\\<mu> fs'' ?i'4 ?j'4\\<bar>\n                    < p * d fs'' ?j'4 * d fs'' (Suc ?j'4)\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "by simp"], ["proof (state)\nthis:\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 40: \"(\\<forall>i' < m. \\<forall>j' < m. i' \\<noteq> i \\<or> j' > j \\<longrightarrow> d\\<mu> fs' i' j' = dmu $$ (i',j'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<m.\n          i' \\<noteq> i \\<or> j < j' \\<longrightarrow>\n          d\\<mu> fs' i' j' = dmu $$ (i', j')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<m.\n          i' \\<noteq> i \\<or> j < j' \\<longrightarrow>\n          d\\<mu> fs' i' j' = dmu $$ (i', j')", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<m.\n          i' \\<noteq> i \\<or> j < j' \\<longrightarrow>\n          d\\<mu> fs' i' j' = dmu $$ (i', j')", "fix i' j'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<m.\n          i' \\<noteq> i \\<or> j < j' \\<longrightarrow>\n          d\\<mu> fs' i' j' = dmu $$ (i', j')", "assume i': \"i' < m\" and j': \"j' < m\""], ["proof (state)\nthis:\n  i' < m\n  j' < m\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<m.\n          i' \\<noteq> i \\<or> j < j' \\<longrightarrow>\n          d\\<mu> fs' i' j' = dmu $$ (i', j')", "assume assm: \"i' \\<noteq> i \\<or> j' > j\""], ["proof (state)\nthis:\n  i' \\<noteq> i \\<or> j < j'\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<m.\n          i' \\<noteq> i \\<or> j < j' \\<longrightarrow>\n          d\\<mu> fs' i' j' = dmu $$ (i', j')", "have \"d\\<mu> fs' i' j' = dmu $$ (i',j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = dmu $$ (i', j')", "proof (cases \"i' \\<noteq> i\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i' \\<noteq> i \\<Longrightarrow> d\\<mu> fs' i' j' = dmu $$ (i', j')\n 2. \\<not> i' \\<noteq> i \\<Longrightarrow>\n    d\\<mu> fs' i' j' = dmu $$ (i', j')", "case True"], ["proof (state)\nthis:\n  i' \\<noteq> i\n\ngoal (2 subgoals):\n 1. i' \\<noteq> i \\<Longrightarrow> d\\<mu> fs' i' j' = dmu $$ (i', j')\n 2. \\<not> i' \\<noteq> i \\<Longrightarrow>\n    d\\<mu> fs' i' j' = dmu $$ (i', j')", "then"], ["proof (chain)\npicking this:\n  i' \\<noteq> i", "show ?thesis"], ["proof (prove)\nusing this:\n  i' \\<noteq> i\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = dmu $$ (i', j')", "using fs'_def LLL_invD_modw[OF Linvmw] d\\<mu>_def i i' j j'\n          04 28(1) LLL_invI_weak basis_reduction_add_row_main(8)[OF Linvww]"], ["proof (prove)\nusing this:\n  i' \\<noteq> i\n  fs' = fs[i := fs ! i - c \\<cdot>\\<^sub>v fs ! j]\n  length mfs = m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  d\\<mu> ?gs ?i ?j =\n  int_of_rat\n   (rat_of_int (d ?gs (Suc ?j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?gs) ?i ?j)\n  i < m\n  i' < m\n  j < i\n  j' < m\n  \\<lbrakk>?i'2 < m; ?j'2 < m\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs')\n                     ?i'2 ?j'2 =\n                    (if ?i'2 = i \\<and> ?j'2 \\<le> j\n                     then gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) i ?j'2 -\n                          rat_of_int c *\n                          gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) j ?j'2\n                     else gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) ?i'2 ?j'2)\n  length fs = m\n  \\<lbrakk>set ?fs \\<subseteq> carrier_vec n; length ?fs = m;\n   lattice_of ?fs = L; ?i \\<le> m;\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs);\n   gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha>\n    ?i\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak' ?i ?fs\n  \\<lbrakk>?i < m; ?j < ?i;\n   ?fs' = fs[?i := fs ! ?i - ?c \\<cdot>\\<^sub>v fs ! ?j];\n   ?ii \\<le> m\\<rbrakk>\n  \\<Longrightarrow> d ?fs' ?ii = d fs ?ii\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = dmu $$ (i', j')", "by auto"], ["proof (state)\nthis:\n  d\\<mu> fs' i' j' = dmu $$ (i', j')\n\ngoal (1 subgoal):\n 1. \\<not> i' \\<noteq> i \\<Longrightarrow>\n    d\\<mu> fs' i' j' = dmu $$ (i', j')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i' \\<noteq> i \\<Longrightarrow>\n    d\\<mu> fs' i' j' = dmu $$ (i', j')", "case False"], ["proof (state)\nthis:\n  \\<not> i' \\<noteq> i\n\ngoal (1 subgoal):\n 1. \\<not> i' \\<noteq> i \\<Longrightarrow>\n    d\\<mu> fs' i' j' = dmu $$ (i', j')", "then"], ["proof (chain)\npicking this:\n  \\<not> i' \\<noteq> i", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> i' \\<noteq> i\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = dmu $$ (i', j')", "using 05 LLL_invD_modw[OF Linvmw] d\\<mu>_def i j j' 04 assm"], ["proof (prove)\nusing this:\n  \\<not> i' \\<noteq> i\n  ?ii2 \\<le> m \\<Longrightarrow> d fs' ?ii2 = d fs ?ii2\n  length mfs = m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  d\\<mu> ?gs ?i ?j =\n  int_of_rat\n   (rat_of_int (d ?gs (Suc ?j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?gs) ?i ?j)\n  i < m\n  j < i\n  j' < m\n  \\<lbrakk>?i'2 < m; ?j'2 < m\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs')\n                     ?i'2 ?j'2 =\n                    (if ?i'2 = i \\<and> ?j'2 \\<le> j\n                     then gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) i ?j'2 -\n                          rat_of_int c *\n                          gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) j ?j'2\n                     else gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) ?i'2 ?j'2)\n  i' \\<noteq> i \\<or> j < j'\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = dmu $$ (i', j')", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs' i' j' = dmu $$ (i', j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  d\\<mu> fs' i' j' = dmu $$ (i', j')\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<m.\n          i' \\<noteq> i \\<or> j < j' \\<longrightarrow>\n          d\\<mu> fs' i' j' = dmu $$ (i', j')", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?i'4 < m; ?j'4 < m; ?i'4 \\<noteq> i \\<or> j < ?j'4\\<rbrakk>\n  \\<Longrightarrow> d\\<mu> fs' ?i'4 ?j'4 = dmu $$ (?i'4, ?j'4)\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<m.\n          i' \\<noteq> i \\<or> j < j' \\<longrightarrow>\n          d\\<mu> fs' i' j' = dmu $$ (i', j')", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i'4 < m; ?j'4 < m; ?i'4 \\<noteq> i \\<or> j < ?j'4\\<rbrakk>\n  \\<Longrightarrow> d\\<mu> fs' ?i'4 ?j'4 = dmu $$ (?i'4, ?j'4)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i'4 < m; ?j'4 < m; ?i'4 \\<noteq> i \\<or> j < ?j'4\\<rbrakk>\n  \\<Longrightarrow> d\\<mu> fs' ?i'4 ?j'4 = dmu $$ (?i'4, ?j'4)\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<m.\n          i' \\<noteq> i \\<or> j < j' \\<longrightarrow>\n          d\\<mu> fs' i' j' = dmu $$ (i', j')", "by simp"], ["proof (state)\nthis:\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        i' \\<noteq> i \\<or> j < j' \\<longrightarrow>\n        d\\<mu> fs' i' j' = dmu $$ (i', j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        i' \\<noteq> i \\<or> j < j' \\<longrightarrow>\n        d\\<mu> fs' i' j' = dmu $$ (i', j')\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 41: \"\\<forall>j' \\<le> j. d\\<mu> fs' i j' = dmu $$ (i,j') - c * dmu $$ (j,j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "let ?oi = \"of_int :: _ \\<Rightarrow> rat\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "fix j'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "assume j': \"j' \\<le> j\""], ["proof (state)\nthis:\n  j' \\<le> j\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "define dj' \\<mu>i \\<mu>j where \"dj' = d fs (Suc j')\" and \"\\<mu>i = \\<mu> fs i j'\" and \"\\<mu>j = \\<mu> fs j j'\""], ["proof (state)\nthis:\n  dj' = d fs (Suc j')\n  \\<mu>i = gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j'\n  \\<mu>j = gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j'\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "have \"?oi (d\\<mu> fs' i j') = ?oi (d fs (Suc j')) * (\\<mu> fs i j' - ?oi c * \\<mu> fs j j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int (d\\<mu> fs' i j') =\n    rat_of_int (d fs (Suc j')) *\n    (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j' -\n     rat_of_int c *\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j')", "using j' 04 d\\<mu>_def"], ["proof (prove)\nusing this:\n  j' \\<le> j\n  \\<lbrakk>?i'2 < m; ?j'2 < m\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs')\n                     ?i'2 ?j'2 =\n                    (if ?i'2 = i \\<and> ?j'2 \\<le> j\n                     then gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) i ?j'2 -\n                          rat_of_int c *\n                          gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) j ?j'2\n                     else gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) ?i'2 ?j'2)\n  d\\<mu> ?gs ?i ?j =\n  int_of_rat\n   (rat_of_int (d ?gs (Suc ?j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?gs) ?i ?j)\n\ngoal (1 subgoal):\n 1. rat_of_int (d\\<mu> fs' i j') =\n    rat_of_int (d fs (Suc j')) *\n    (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j' -\n     rat_of_int c *\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j')", "by (smt \"05\" \"08\" \"091\" Suc_leI d_def diff_diff_cancel fs_int.d_def \n            fs_int_indpt.fs_int_mu_d_Z i int_of_rat(2) j less_imp_diff_less less_imp_le_nat)"], ["proof (state)\nthis:\n  rat_of_int (d\\<mu> fs' i j') =\n  rat_of_int (d fs (Suc j')) *\n  (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j' -\n   rat_of_int c * gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j')\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "also"], ["proof (state)\nthis:\n  rat_of_int (d\\<mu> fs' i j') =\n  rat_of_int (d fs (Suc j')) *\n  (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j' -\n   rat_of_int c * gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j')\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "have \"\\<dots> = (?oi dj') * (\\<mu>i - of_int c * \\<mu>j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int (d fs (Suc j')) *\n    (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j' -\n     rat_of_int c *\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j') =\n    rat_of_int dj' * (\\<mu>i - rat_of_int c * \\<mu>j)", "using dj'_def \\<mu>i_def \\<mu>j_def"], ["proof (prove)\nusing this:\n  dj' = d fs (Suc j')\n  \\<mu>i = gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j'\n  \\<mu>j = gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j'\n\ngoal (1 subgoal):\n 1. rat_of_int (d fs (Suc j')) *\n    (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j' -\n     rat_of_int c *\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j') =\n    rat_of_int dj' * (\\<mu>i - rat_of_int c * \\<mu>j)", "by (simp add: of_rat_mult)"], ["proof (state)\nthis:\n  rat_of_int (d fs (Suc j')) *\n  (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j' -\n   rat_of_int c *\n   gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j') =\n  rat_of_int dj' * (\\<mu>i - rat_of_int c * \\<mu>j)\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "also"], ["proof (state)\nthis:\n  rat_of_int (d fs (Suc j')) *\n  (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j' -\n   rat_of_int c *\n   gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j') =\n  rat_of_int dj' * (\\<mu>i - rat_of_int c * \\<mu>j)\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "have \"\\<dots> = (rat_of_int dj') * \\<mu>i - of_int c * (rat_of_int dj') * \\<mu>j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int dj' * (\\<mu>i - rat_of_int c * \\<mu>j) =\n    rat_of_int dj' * \\<mu>i - rat_of_int c * rat_of_int dj' * \\<mu>j", "by algebra"], ["proof (state)\nthis:\n  rat_of_int dj' * (\\<mu>i - rat_of_int c * \\<mu>j) =\n  rat_of_int dj' * \\<mu>i - rat_of_int c * rat_of_int dj' * \\<mu>j\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "also"], ["proof (state)\nthis:\n  rat_of_int dj' * (\\<mu>i - rat_of_int c * \\<mu>j) =\n  rat_of_int dj' * \\<mu>i - rat_of_int c * rat_of_int dj' * \\<mu>j\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "have \"\\<dots> = rat_of_int (d\\<mu> fs i j') - ?oi c * rat_of_int (d\\<mu> fs j j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int dj' * \\<mu>i - rat_of_int c * rat_of_int dj' * \\<mu>j =\n    rat_of_int (d\\<mu> fs i j') - rat_of_int c * rat_of_int (d\\<mu> fs j j')", "unfolding dj'_def \\<mu>i_def \\<mu>j_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int (d fs (Suc j')) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j' -\n    rat_of_int c * rat_of_int (d fs (Suc j')) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j' =\n    rat_of_int (d\\<mu> fs i j') - rat_of_int c * rat_of_int (d\\<mu> fs j j')", "using i j j' d\\<mu>_def"], ["proof (prove)\nusing this:\n  i < m\n  j < i\n  j' \\<le> j\n  d\\<mu> ?gs ?i ?j =\n  int_of_rat\n   (rat_of_int (d ?gs (Suc ?j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?gs) ?i ?j)\n\ngoal (1 subgoal):\n 1. rat_of_int (d fs (Suc j')) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j' -\n    rat_of_int c * rat_of_int (d fs (Suc j')) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j' =\n    rat_of_int (d\\<mu> fs i j') - rat_of_int c * rat_of_int (d\\<mu> fs j j')", "using \"28\"(1) LLL.LLL_invD_modw(4) Linvmw d_def fs_int.d_def fs_int_indpt.fs_int_mu_d_Z fs_int_indpt.intro"], ["proof (prove)\nusing this:\n  i < m\n  j < i\n  j' \\<le> j\n  d\\<mu> ?gs ?i ?j =\n  int_of_rat\n   (rat_of_int (d ?gs (Suc ?j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?gs) ?i ?j)\n  length fs = m\n  LLL.LLL_invariant_mod_weak ?n ?m ?fs_init ?fs ?mfs ?dmu ?p ?first\n   ?b \\<Longrightarrow>\n  cof_vec_space.lin_indpt_list ?n (map of_int_hom.vec_hom ?fs)\n  LLL_invariant_mod_weak fs mfs dmu p first b\n  d ?fs ?k = gs.Gramian_determinant ?fs ?k\n  fs_int.d ?n ?fs ?k = gram_schmidt.Gramian_determinant ?n ?fs ?k\n  \\<lbrakk>fs_int_indpt ?n ?fs; ?j \\<le> ?ii; ?ii < length ?fs\\<rbrakk>\n  \\<Longrightarrow> rat_of_int (fs_int.d ?n ?fs (Suc ?j)) *\n                    gram_schmidt_fs.\\<mu> ?n (map of_int_hom.vec_hom ?fs)\n                     ?ii ?j\n                    \\<in> \\<int>\n  cof_vec_space.lin_indpt_list ?n\n   (map of_int_hom.vec_hom ?fs) \\<Longrightarrow>\n  fs_int_indpt ?n ?fs\n\ngoal (1 subgoal):\n 1. rat_of_int (d fs (Suc j')) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j' -\n    rat_of_int c * rat_of_int (d fs (Suc j')) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j' =\n    rat_of_int (d\\<mu> fs i j') - rat_of_int c * rat_of_int (d\\<mu> fs j j')", "by auto"], ["proof (state)\nthis:\n  rat_of_int dj' * \\<mu>i - rat_of_int c * rat_of_int dj' * \\<mu>j =\n  rat_of_int (d\\<mu> fs i j') - rat_of_int c * rat_of_int (d\\<mu> fs j j')\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "also"], ["proof (state)\nthis:\n  rat_of_int dj' * \\<mu>i - rat_of_int c * rat_of_int dj' * \\<mu>j =\n  rat_of_int (d\\<mu> fs i j') - rat_of_int c * rat_of_int (d\\<mu> fs j j')\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "have \"\\<dots> = rat_of_int (dmu $$ (i,j')) - ?oi c * rat_of_int (dmu $$ (j,j'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int (d\\<mu> fs i j') -\n    rat_of_int c * rat_of_int (d\\<mu> fs j j') =\n    rat_of_int (dmu $$ (i, j')) - rat_of_int c * rat_of_int (dmu $$ (j, j'))", "using LLL_invD_modw(7)[OF Linvmw] d\\<mu>_def j' i j"], ["proof (prove)\nusing this:\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  d\\<mu> ?gs ?i ?j =\n  int_of_rat\n   (rat_of_int (d ?gs (Suc ?j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?gs) ?i ?j)\n  j' \\<le> j\n  i < m\n  j < i\n\ngoal (1 subgoal):\n 1. rat_of_int (d\\<mu> fs i j') -\n    rat_of_int c * rat_of_int (d\\<mu> fs j j') =\n    rat_of_int (dmu $$ (i, j')) - rat_of_int c * rat_of_int (dmu $$ (j, j'))", "by auto"], ["proof (state)\nthis:\n  rat_of_int (d\\<mu> fs i j') - rat_of_int c * rat_of_int (d\\<mu> fs j j') =\n  rat_of_int (dmu $$ (i, j')) - rat_of_int c * rat_of_int (dmu $$ (j, j'))\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "finally"], ["proof (chain)\npicking this:\n  rat_of_int (d\\<mu> fs' i j') =\n  rat_of_int (dmu $$ (i, j')) - rat_of_int c * rat_of_int (dmu $$ (j, j'))", "have \"?oi (d\\<mu> fs' i j') = rat_of_int (dmu $$ (i,j')) - ?oi c * rat_of_int (dmu $$ (j,j'))\""], ["proof (prove)\nusing this:\n  rat_of_int (d\\<mu> fs' i j') =\n  rat_of_int (dmu $$ (i, j')) - rat_of_int c * rat_of_int (dmu $$ (j, j'))\n\ngoal (1 subgoal):\n 1. rat_of_int (d\\<mu> fs' i j') =\n    rat_of_int (dmu $$ (i, j')) - rat_of_int c * rat_of_int (dmu $$ (j, j'))", "by simp"], ["proof (state)\nthis:\n  rat_of_int (d\\<mu> fs' i j') =\n  rat_of_int (dmu $$ (i, j')) - rat_of_int c * rat_of_int (dmu $$ (j, j'))\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "then"], ["proof (chain)\npicking this:\n  rat_of_int (d\\<mu> fs' i j') =\n  rat_of_int (dmu $$ (i, j')) - rat_of_int c * rat_of_int (dmu $$ (j, j'))", "have \"d\\<mu> fs' i j' = dmu $$ (i,j') - c * dmu $$ (j,j')\""], ["proof (prove)\nusing this:\n  rat_of_int (d\\<mu> fs' i j') =\n  rat_of_int (dmu $$ (i, j')) - rat_of_int c * rat_of_int (dmu $$ (j, j'))\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "using of_int_eq_iff"], ["proof (prove)\nusing this:\n  rat_of_int (d\\<mu> fs' i j') =\n  rat_of_int (dmu $$ (i, j')) - rat_of_int c * rat_of_int (dmu $$ (j, j'))\n  (of_int ?w = of_int ?z) = (?w = ?z)\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "by fastforce"], ["proof (state)\nthis:\n  d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "}"], ["proof (state)\nthis:\n  ?j'4 \\<le> j \\<Longrightarrow>\n  d\\<mu> fs' i ?j'4 = dmu $$ (i, ?j'4) - c * dmu $$ (j, ?j'4)\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "then"], ["proof (chain)\npicking this:\n  ?j'4 \\<le> j \\<Longrightarrow>\n  d\\<mu> fs' i ?j'4 = dmu $$ (i, ?j'4) - c * dmu $$ (j, ?j'4)", "show ?thesis"], ["proof (prove)\nusing this:\n  ?j'4 \\<le> j \\<Longrightarrow>\n  d\\<mu> fs' i ?j'4 = dmu $$ (i, ?j'4) - c * dmu $$ (j, ?j'4)\n\ngoal (1 subgoal):\n 1. \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "by simp"], ["proof (state)\nthis:\n  \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 42: \"(\\<forall>i' < m. \\<forall>j' < m. d\\<mu> fs'' i' j' = dmu' $$ (i',j'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "fix i' j'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "assume i': \"i' < m\" and j': \"j' < m\""], ["proof (state)\nthis:\n  i' < m\n  j' < m\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "have \"d\\<mu> fs'' i' j' = dmu' $$ (i',j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "proof (cases \"i' = i\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i' = i \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n 2. i' \\<noteq> i \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "case i'i: True"], ["proof (state)\nthis:\n  i' = i\n\ngoal (2 subgoals):\n 1. i' = i \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n 2. i' \\<noteq> i \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "then"], ["proof (chain)\npicking this:\n  i' = i", "show ?thesis"], ["proof (prove)\nusing this:\n  i' = i\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "proof (cases \"j' > j\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i' = i; j < j'\\<rbrakk>\n    \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n 2. \\<lbrakk>i' = i; \\<not> j < j'\\<rbrakk>\n    \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "case True"], ["proof (state)\nthis:\n  j < j'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i' = i; j < j'\\<rbrakk>\n    \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n 2. \\<lbrakk>i' = i; \\<not> j < j'\\<rbrakk>\n    \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "then"], ["proof (chain)\npicking this:\n  j < j'", "have \"(i',j')\\<notin>I\""], ["proof (prove)\nusing this:\n  j < j'\n\ngoal (1 subgoal):\n 1. (i', j') \\<notin> I", "using I_def"], ["proof (prove)\nusing this:\n  j < j'\n  I = {(i', j'). i' = i \\<and> j' < j}\n\ngoal (1 subgoal):\n 1. (i', j') \\<notin> I", "by simp"], ["proof (state)\nthis:\n  (i', j') \\<notin> I\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i' = i; j < j'\\<rbrakk>\n    \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n 2. \\<lbrakk>i' = i; \\<not> j < j'\\<rbrakk>\n    \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "moreover"], ["proof (state)\nthis:\n  (i', j') \\<notin> I\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i' = i; j < j'\\<rbrakk>\n    \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n 2. \\<lbrakk>i' = i; \\<not> j < j'\\<rbrakk>\n    \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "then"], ["proof (chain)\npicking this:\n  (i', j') \\<notin> I", "have \"d\\<mu> fs' i' j' = d\\<mu> fs i' j'\""], ["proof (prove)\nusing this:\n  (i', j') \\<notin> I\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = d\\<mu> fs i' j'", "using \"04\" \"05\" True Suc_leI d\\<mu>_def i' j'"], ["proof (prove)\nusing this:\n  (i', j') \\<notin> I\n  \\<lbrakk>?i'2 < m; ?j'2 < m\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs')\n                     ?i'2 ?j'2 =\n                    (if ?i'2 = i \\<and> ?j'2 \\<le> j\n                     then gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) i ?j'2 -\n                          rat_of_int c *\n                          gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) j ?j'2\n                     else gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) ?i'2 ?j'2)\n  ?ii2 \\<le> m \\<Longrightarrow> d fs' ?ii2 = d fs ?ii2\n  j < j'\n  ?m < ?n \\<Longrightarrow> Suc ?m \\<le> ?n\n  d\\<mu> ?gs ?i ?j =\n  int_of_rat\n   (rat_of_int (d ?gs (Suc ?j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?gs) ?i ?j)\n  i' < m\n  j' < m\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = d\\<mu> fs i' j'", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i' = i; j < j'\\<rbrakk>\n    \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n 2. \\<lbrakk>i' = i; \\<not> j < j'\\<rbrakk>\n    \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "moreover"], ["proof (state)\nthis:\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i' = i; j < j'\\<rbrakk>\n    \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n 2. \\<lbrakk>i' = i; \\<not> j < j'\\<rbrakk>\n    \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "have \"dmu' $$ (i',j') = dmu $$ (i',j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dmu' $$ (i', j') = dmu $$ (i', j')", "using dmu' True i' j'"], ["proof (prove)\nusing this:\n  dmu' =\n  mat m m\n   (\\<lambda>(i', j').\n       if i' = i \\<and> j' \\<le> j\n       then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n            else (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n                 (p * d_of dmu j' * d_of dmu (Suc j'))\n       else dmu $$ (i', j'))\n  j < j'\n  i' < m\n  j' < m\n\ngoal (1 subgoal):\n 1. dmu' $$ (i', j') = dmu $$ (i', j')", "by simp"], ["proof (state)\nthis:\n  dmu' $$ (i', j') = dmu $$ (i', j')\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i' = i; j < j'\\<rbrakk>\n    \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n 2. \\<lbrakk>i' = i; \\<not> j < j'\\<rbrakk>\n    \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "ultimately"], ["proof (chain)\npicking this:\n  (i', j') \\<notin> I\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'\n  dmu' $$ (i', j') = dmu $$ (i', j')", "show ?thesis"], ["proof (prove)\nusing this:\n  (i', j') \\<notin> I\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'\n  dmu' $$ (i', j') = dmu $$ (i', j')\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "using \"17\" \"40\" True i' j'"], ["proof (prove)\nusing this:\n  (i', j') \\<notin> I\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'\n  dmu' $$ (i', j') = dmu $$ (i', j')\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs'' i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n         else d\\<mu> fs' i' j')\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        i' \\<noteq> i \\<or> j < j' \\<longrightarrow>\n        d\\<mu> fs' i' j' = dmu $$ (i', j')\n  j < j'\n  i' < m\n  j' < m\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "by auto"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i' = i; \\<not> j < j'\\<rbrakk>\n    \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i' = i; \\<not> j < j'\\<rbrakk>\n    \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "case False"], ["proof (state)\nthis:\n  \\<not> j < j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i' = i; \\<not> j < j'\\<rbrakk>\n    \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "then"], ["proof (chain)\npicking this:\n  \\<not> j < j'", "have j'lej: \"j' \\<le> j\""], ["proof (prove)\nusing this:\n  \\<not> j < j'\n\ngoal (1 subgoal):\n 1. j' \\<le> j", "by simp"], ["proof (state)\nthis:\n  j' \\<le> j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i' = i; \\<not> j < j'\\<rbrakk>\n    \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "then"], ["proof (chain)\npicking this:\n  j' \\<le> j", "have eq': \"d\\<mu> fs' i j' = dmu $$ (i,j') - c * dmu $$ (j,j')\""], ["proof (prove)\nusing this:\n  j' \\<le> j\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "using 41"], ["proof (prove)\nusing this:\n  j' \\<le> j\n  \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i' = i; \\<not> j < j'\\<rbrakk>\n    \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "have id: \"d_of dmu j' = d fs j'\" \"d_of dmu (Suc j') = d fs (Suc j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d_of dmu j' = d fs j' &&& d_of dmu (Suc j') = d fs (Suc j')", "using d_of_weak[OF Linvmw] \\<open>j' < m\\<close>"], ["proof (prove)\nusing this:\n  ?i \\<le> m \\<Longrightarrow> d_of dmu ?i = d fs ?i\n  j' < m\n\ngoal (1 subgoal):\n 1. d_of dmu j' = d fs j' &&& d_of dmu (Suc j') = d fs (Suc j')", "by auto"], ["proof (state)\nthis:\n  d_of dmu j' = d fs j'\n  d_of dmu (Suc j') = d fs (Suc j')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i' = i; \\<not> j < j'\\<rbrakk>\n    \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "proof (cases \"j' \\<noteq> j\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j' \\<noteq> j \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n 2. \\<not> j' \\<noteq> j \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "case True"], ["proof (state)\nthis:\n  j' \\<noteq> j\n\ngoal (2 subgoals):\n 1. j' \\<noteq> j \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n 2. \\<not> j' \\<noteq> j \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "then"], ["proof (chain)\npicking this:\n  j' \\<noteq> j", "have j'ltj: \"j' < j\""], ["proof (prove)\nusing this:\n  j' \\<noteq> j\n\ngoal (1 subgoal):\n 1. j' < j", "using True False"], ["proof (prove)\nusing this:\n  j' \\<noteq> j\n  j' \\<noteq> j\n  \\<not> j < j'\n\ngoal (1 subgoal):\n 1. j' < j", "by simp"], ["proof (state)\nthis:\n  j' < j\n\ngoal (2 subgoals):\n 1. j' \\<noteq> j \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n 2. \\<not> j' \\<noteq> j \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "then"], ["proof (chain)\npicking this:\n  j' < j", "have \"(i',j') \\<in> I\""], ["proof (prove)\nusing this:\n  j' < j\n\ngoal (1 subgoal):\n 1. (i', j') \\<in> I", "using I_def True i'i"], ["proof (prove)\nusing this:\n  j' < j\n  I = {(i', j'). i' = i \\<and> j' < j}\n  j' \\<noteq> j\n  i' = i\n\ngoal (1 subgoal):\n 1. (i', j') \\<in> I", "by simp"], ["proof (state)\nthis:\n  (i', j') \\<in> I\n\ngoal (2 subgoals):\n 1. j' \\<noteq> j \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n 2. \\<not> j' \\<noteq> j \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "then"], ["proof (chain)\npicking this:\n  (i', j') \\<in> I", "have \"d\\<mu> fs'' i' j' = \n              (dmu $$ (i,j') - c * dmu $$ (j,j')) symmod (p * d fs' j' * d fs' (Suc j'))\""], ["proof (prove)\nusing this:\n  (i', j') \\<in> I\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' =\n    (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n    (p * d fs' j' * d fs' (Suc j'))", "using 17 i' 41 j'lej"], ["proof (prove)\nusing this:\n  (i', j') \\<in> I\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs'' i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n         else d\\<mu> fs' i' j')\n  i' < m\n  \\<forall>j'\\<le>j. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')\n  j' \\<le> j\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' =\n    (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n    (p * d fs' j' * d fs' (Suc j'))", "by (simp add: j' i'i)"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' =\n  (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n  (p * d fs' j' * d fs' (Suc j'))\n\ngoal (2 subgoals):\n 1. j' \\<noteq> j \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n 2. \\<not> j' \\<noteq> j \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "also"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' =\n  (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n  (p * d fs' j' * d fs' (Suc j'))\n\ngoal (2 subgoals):\n 1. j' \\<noteq> j \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n 2. \\<not> j' \\<noteq> j \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "have \"\\<dots> = (dmu $$ (i,j') - c * dmu $$ (j,j')) symmod (p * d fs j' * d fs (Suc j'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n    (p * d fs' j' * d fs' (Suc j')) =\n    (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n    (p * d fs j' * d fs (Suc j'))", "using 05 i j'ltj j"], ["proof (prove)\nusing this:\n  ?ii2 \\<le> m \\<Longrightarrow> d fs' ?ii2 = d fs ?ii2\n  i < m\n  j' < j\n  j < i\n\ngoal (1 subgoal):\n 1. (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n    (p * d fs' j' * d fs' (Suc j')) =\n    (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n    (p * d fs j' * d fs (Suc j'))", "by simp"], ["proof (state)\nthis:\n  (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n  (p * d fs' j' * d fs' (Suc j')) =\n  (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod (p * d fs j' * d fs (Suc j'))\n\ngoal (2 subgoals):\n 1. j' \\<noteq> j \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n 2. \\<not> j' \\<noteq> j \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "also"], ["proof (state)\nthis:\n  (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n  (p * d fs' j' * d fs' (Suc j')) =\n  (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod (p * d fs j' * d fs (Suc j'))\n\ngoal (2 subgoals):\n 1. j' \\<noteq> j \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n 2. \\<not> j' \\<noteq> j \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "have \"\\<dots> = dmu' $$ (i,j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n    (p * d fs j' * d fs (Suc j')) =\n    dmu' $$ (i, j')", "unfolding dmu' index_mat(1)[OF \\<open>i < m\\<close> \\<open>j' < m\\<close>] split id"], ["proof (prove)\ngoal (1 subgoal):\n 1. (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n    (p * d fs j' * d fs (Suc j')) =\n    (if i = i \\<and> j' \\<le> j\n     then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n          else (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n               (p * d fs j' * d fs (Suc j'))\n     else dmu $$ (i, j'))", "using j'lej True"], ["proof (prove)\nusing this:\n  j' \\<le> j\n  j' \\<noteq> j\n\ngoal (1 subgoal):\n 1. (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n    (p * d fs j' * d fs (Suc j')) =\n    (if i = i \\<and> j' \\<le> j\n     then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n          else (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n               (p * d fs j' * d fs (Suc j'))\n     else dmu $$ (i, j'))", "by auto"], ["proof (state)\nthis:\n  (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n  (p * d fs j' * d fs (Suc j')) =\n  dmu' $$ (i, j')\n\ngoal (2 subgoals):\n 1. j' \\<noteq> j \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n 2. \\<not> j' \\<noteq> j \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "finally"], ["proof (chain)\npicking this:\n  d\\<mu> fs'' i' j' = dmu' $$ (i, j')", "show ?thesis"], ["proof (prove)\nusing this:\n  d\\<mu> fs'' i' j' = dmu' $$ (i, j')\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "using i'i"], ["proof (prove)\nusing this:\n  d\\<mu> fs'' i' j' = dmu' $$ (i, j')\n  i' = i\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n\ngoal (1 subgoal):\n 1. \\<not> j' \\<noteq> j \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> j' \\<noteq> j \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "case False"], ["proof (state)\nthis:\n  \\<not> j' \\<noteq> j\n\ngoal (1 subgoal):\n 1. \\<not> j' \\<noteq> j \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "then"], ["proof (chain)\npicking this:\n  \\<not> j' \\<noteq> j", "have j'j: \"j' = j\""], ["proof (prove)\nusing this:\n  \\<not> j' \\<noteq> j\n\ngoal (1 subgoal):\n 1. j' = j", "by simp"], ["proof (state)\nthis:\n  j' = j\n\ngoal (1 subgoal):\n 1. \\<not> j' \\<noteq> j \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "then"], ["proof (chain)\npicking this:\n  j' = j", "have \"d\\<mu> fs'' i j' = d\\<mu> fs' i j'\""], ["proof (prove)\nusing this:\n  j' = j\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i j' = d\\<mu> fs' i j'", "using 20 j'"], ["proof (prove)\nusing this:\n  j' = j\n  \\<forall>j'\\<in>{j..m - 1}. d\\<mu> fs'' i j' = d\\<mu> fs' i j'\n  j' < m\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i j' = d\\<mu> fs' i j'", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs'' i j' = d\\<mu> fs' i j'\n\ngoal (1 subgoal):\n 1. \\<not> j' \\<noteq> j \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "also"], ["proof (state)\nthis:\n  d\\<mu> fs'' i j' = d\\<mu> fs' i j'\n\ngoal (1 subgoal):\n 1. \\<not> j' \\<noteq> j \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "have \"\\<dots> = dmu $$ (i,j') - c * dmu $$ (j,j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "using eq'"], ["proof (prove)\nusing this:\n  d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')\n\ngoal (1 subgoal):\n 1. \\<not> j' \\<noteq> j \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "also"], ["proof (state)\nthis:\n  d\\<mu> fs' i j' = dmu $$ (i, j') - c * dmu $$ (j, j')\n\ngoal (1 subgoal):\n 1. \\<not> j' \\<noteq> j \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "have \"\\<dots> = dmu' $$ (i,j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dmu $$ (i, j') - c * dmu $$ (j, j') = dmu' $$ (i, j')", "using dmu' j'j i j'"], ["proof (prove)\nusing this:\n  dmu' =\n  mat m m\n   (\\<lambda>(i', j').\n       if i' = i \\<and> j' \\<le> j\n       then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n            else (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n                 (p * d_of dmu j' * d_of dmu (Suc j'))\n       else dmu $$ (i', j'))\n  j' = j\n  i < m\n  j' < m\n\ngoal (1 subgoal):\n 1. dmu $$ (i, j') - c * dmu $$ (j, j') = dmu' $$ (i, j')", "by simp"], ["proof (state)\nthis:\n  dmu $$ (i, j') - c * dmu $$ (j, j') = dmu' $$ (i, j')\n\ngoal (1 subgoal):\n 1. \\<not> j' \\<noteq> j \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "finally"], ["proof (chain)\npicking this:\n  d\\<mu> fs'' i j' = dmu' $$ (i, j')", "show ?thesis"], ["proof (prove)\nusing this:\n  d\\<mu> fs'' i j' = dmu' $$ (i, j')\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "using i'i"], ["proof (prove)\nusing this:\n  d\\<mu> fs'' i j' = dmu' $$ (i, j')\n  i' = i\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "case False"], ["proof (state)\nthis:\n  i' \\<noteq> i\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "then"], ["proof (chain)\npicking this:\n  i' \\<noteq> i", "have \"(i',j')\\<notin>I\""], ["proof (prove)\nusing this:\n  i' \\<noteq> i\n\ngoal (1 subgoal):\n 1. (i', j') \\<notin> I", "using I_def"], ["proof (prove)\nusing this:\n  i' \\<noteq> i\n  I = {(i', j'). i' = i \\<and> j' < j}\n\ngoal (1 subgoal):\n 1. (i', j') \\<notin> I", "by simp"], ["proof (state)\nthis:\n  (i', j') \\<notin> I\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "moreover"], ["proof (state)\nthis:\n  (i', j') \\<notin> I\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "then"], ["proof (chain)\npicking this:\n  (i', j') \\<notin> I", "have \"d\\<mu> fs' i' j' = d\\<mu> fs i' j'\""], ["proof (prove)\nusing this:\n  (i', j') \\<notin> I\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = d\\<mu> fs i' j'", "by (simp add: \"04\" \"05\" False Suc_leI d\\<mu>_def i' j')"], ["proof (state)\nthis:\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "moreover"], ["proof (state)\nthis:\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "then"], ["proof (chain)\npicking this:\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'", "have \"dmu' $$ (i',j') = dmu $$ (i',j')\""], ["proof (prove)\nusing this:\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'\n\ngoal (1 subgoal):\n 1. dmu' $$ (i', j') = dmu $$ (i', j')", "using dmu' False i' j'"], ["proof (prove)\nusing this:\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'\n  dmu' =\n  mat m m\n   (\\<lambda>(i', j').\n       if i' = i \\<and> j' \\<le> j\n       then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n            else (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n                 (p * d_of dmu j' * d_of dmu (Suc j'))\n       else dmu $$ (i', j'))\n  i' \\<noteq> i\n  i' < m\n  j' < m\n\ngoal (1 subgoal):\n 1. dmu' $$ (i', j') = dmu $$ (i', j')", "by simp"], ["proof (state)\nthis:\n  dmu' $$ (i', j') = dmu $$ (i', j')\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow> d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "ultimately"], ["proof (chain)\npicking this:\n  (i', j') \\<notin> I\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'\n  dmu' $$ (i', j') = dmu $$ (i', j')", "show ?thesis"], ["proof (prove)\nusing this:\n  (i', j') \\<notin> I\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'\n  dmu' $$ (i', j') = dmu $$ (i', j')\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "using \"17\" \"40\" False i' j'"], ["proof (prove)\nusing this:\n  (i', j') \\<notin> I\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'\n  dmu' $$ (i', j') = dmu $$ (i', j')\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs'' i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n         else d\\<mu> fs' i' j')\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        i' \\<noteq> i \\<or> j < j' \\<longrightarrow>\n        d\\<mu> fs' i' j' = dmu $$ (i', j')\n  i' \\<noteq> i\n  i' < m\n  j' < m\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "by auto"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?i'4 < m; ?j'4 < m\\<rbrakk>\n  \\<Longrightarrow> d\\<mu> fs'' ?i'4 ?j'4 = dmu' $$ (?i'4, ?j'4)\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i'4 < m; ?j'4 < m\\<rbrakk>\n  \\<Longrightarrow> d\\<mu> fs'' ?i'4 ?j'4 = dmu' $$ (?i'4, ?j'4)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i'4 < m; ?j'4 < m\\<rbrakk>\n  \\<Longrightarrow> d\\<mu> fs'' ?i'4 ?j'4 = dmu' $$ (?i'4, ?j'4)\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "by simp"], ["proof (state)\nthis:\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "from gbnd 26"], ["proof (chain)\npicking this:\n  g_bnd_mode first b fs\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k", "have gbnd: \"g_bnd_mode first b fs''\""], ["proof (prove)\nusing this:\n  g_bnd_mode first b fs\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k\n\ngoal (1 subgoal):\n 1. g_bnd_mode first b fs''", "using g_bnd_mode_cong[of fs'' fs]"], ["proof (prove)\nusing this:\n  g_bnd_mode first b fs\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k\n  (\\<And>i.\n      i < m \\<Longrightarrow>\n      gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') i =\n      gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) i) \\<Longrightarrow>\n  g_bnd_mode ?first ?b fs'' = g_bnd_mode ?first ?b fs\n\ngoal (1 subgoal):\n 1. g_bnd_mode first b fs''", "by simp"], ["proof (state)\nthis:\n  g_bnd_mode first b fs''\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "{"], ["proof (state)\nthis:\n  g_bnd_mode first b fs''\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "assume Linv: \"LLL_invariant_mod fs mfs dmu p first b i\""], ["proof (state)\nthis:\n  LLL_invariant_mod fs mfs dmu p first b i\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have Linvw: \"LLL_invariant_weak' i fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs", "using Linv LLL_invD_mod LLL_invI_weak"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b i\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  length ?mfs = m\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  ?i \\<le> m\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  length ?fs = m\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  lattice_of ?fs = L\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  gs.lin_indpt_list (map of_int_hom.vec_hom ?fs)\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha> ?i\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  map (map_vec (\\<lambda>x. x symmod ?p)) ?fs = ?mfs\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> ?fs i' j'\\<bar> < ?p * d ?fs j' * d ?fs (Suc j')\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> ?fs i' j' = ?dmu $$ (i', j')\n  \\<lbrakk>LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?ia; ?i < m\\<rbrakk>\n  \\<Longrightarrow> ?fs ! ?i \\<in> carrier_vec n\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  set ?fs \\<subseteq> carrier_vec n\n  \\<lbrakk>LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?ia; ?i < m\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.gso n (map of_int_hom.vec_hom ?fs) ?i\n                    \\<in> Rn\n  \\<lbrakk>LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?ia; ?i < m\\<rbrakk>\n  \\<Longrightarrow> ?mfs ! ?i \\<in> carrier_vec n\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  set ?mfs \\<subseteq> carrier_vec n\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow> 1 < ?p\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  g_bnd_mode ?first ?b ?fs\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  mod_invariant ?b ?p ?first\n  \\<lbrakk>set ?fs \\<subseteq> carrier_vec n; length ?fs = m;\n   lattice_of ?fs = L; ?i \\<le> m;\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs);\n   gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha>\n    ?i\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak' ?i ?fs\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_weak' i fs\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "note Linvww = LLL_invw'_imp_w[OF Linvw]"], ["proof (state)\nthis:\n  LLL_invariant_weak fs\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 00: \"LLL_invariant_weak' i fs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs'", "using Linvw basis_reduction_add_row_weak[OF Linvw i j fs'_def]"], ["proof (prove)\nusing this:\n  LLL_invariant_weak' i fs\n  LLL_invariant_weak' i fs'\n  g_bnd ?B fs \\<Longrightarrow> g_bnd ?B fs'\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs'", "by auto"], ["proof (state)\nthis:\n  LLL_invariant_weak' i fs'\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 37: \"weakly_reduced fs'' i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs'') \\<alpha>\n     i", "using 15 LLL_invD_weak(8)[OF 00] gram_schmidt_fs.weakly_reduced_def"], ["proof (prove)\nusing this:\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs') \\<alpha> i\n  gram_schmidt_fs.weakly_reduced ?n ?fs ?\\<alpha> ?k =\n  (\\<forall>i.\n      Suc i < ?k \\<longrightarrow>\n      \\<parallel>gram_schmidt_fs.gso ?n ?fs i\\<parallel>\\<^sup>2\n      \\<le> ?\\<alpha> *\n            \\<parallel>gram_schmidt_fs.gso ?n ?fs\n                        (Suc i)\\<parallel>\\<^sup>2)\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs'') \\<alpha>\n     i", "by (smt Suc_lessD i less_trans_Suc)"], ["proof (state)\nthis:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs'') \\<alpha> i\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "(* invariant req. *)"], ["proof (state)\nthis:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs'') \\<alpha> i\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have 38: \"LLL_invariant_weak' i fs''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs''", "using 00 11 14 36 37 i 31 12  LLL_invariant_weak'_def"], ["proof (prove)\nusing this:\n  LLL_invariant_weak' i fs'\n  lattice_of fs'' = L\n  length fs'' = m\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs'')\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs'') \\<alpha> i\n  i < m\n  ?i2 < m \\<Longrightarrow> fs' ! ?i2 \\<in> carrier_vec n\n  map (map_vec (\\<lambda>x. x symmod p)) fs'' =\n  map (map_vec (\\<lambda>x. x symmod p)) fs'\n  LLL_invariant_weak' ?i ?fs =\n  (gs.lin_indpt_list (map of_int_hom.vec_hom ?fs) \\<and>\n   lattice_of ?fs = L \\<and>\n   gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha>\n    ?i \\<and>\n   ?i \\<le> m \\<and> length ?fs = m)\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs''", "by blast"], ["proof (state)\nthis:\n  LLL_invariant_weak' i fs''\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have \"LLL_invariant_mod fs'' mfs' dmu' p first b i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs'' mfs' dmu' p first b i", "using LLL_invI_mod[OF 33 _ 14 11 13 37 35 39 42 p1 gbnd LLL_invD_mod(17)[OF Linv]] i"], ["proof (prove)\nusing this:\n  i \\<le> m \\<Longrightarrow> LLL_invariant_mod fs'' mfs' dmu' p first b i\n  i < m\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs'' mfs' dmu' p first b i", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_mod fs'' mfs' dmu' p first b i\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "}"], ["proof (state)\nthis:\n  LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n  LLL_invariant_mod fs'' mfs' dmu' p first b i\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "moreover"], ["proof (state)\nthis:\n  LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n  LLL_invariant_mod fs'' mfs' dmu' p first b i\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "have \"LLL_invariant_mod_weak fs'' mfs' dmu' p first b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_mod_weak fs'' mfs' dmu' p first b", "using LLL_invI_modw[OF 33 14 11 13 35 39 42 p1 gbnd LLL_invD_modw(15)[OF Linvmw]]"], ["proof (prove)\nusing this:\n  LLL_invariant_mod_weak fs'' mfs' dmu' p first b\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod_weak fs'' mfs' dmu' p first b", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_mod_weak fs'' mfs' dmu' p first b\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "ultimately"], ["proof (chain)\npicking this:\n  LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n  LLL_invariant_mod fs'' mfs' dmu' p first b i\n  LLL_invariant_mod_weak fs'' mfs' dmu' p first b", "show ?thesis"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n  LLL_invariant_mod fs'' mfs' dmu' p first b i\n  LLL_invariant_mod_weak fs'' mfs' dmu' p first b\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "using 27 23 24 25 26 172"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n  LLL_invariant_mod fs'' mfs' dmu' p first b i\n  LLL_invariant_mod_weak fs'' mfs' dmu' p first b\n  \\<mu>_small_row i fs (Suc j) \\<Longrightarrow> \\<mu>_small_row i fs'' j\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i j\\<bar>\n  \\<le> 1 / 2\n  LLL_measure i fs'' = LLL_measure i fs\n  \\<forall>k\\<le>m. d fs'' k = d fs k\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k\n  \\<forall>i' j'.\n     i' < i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       (\\<forall>k<m.\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i)", "by auto"], ["proof (state)\nthis:\n  \\<exists>fs'.\n     LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n     LLL_measure i fs' = LLL_measure i fs \\<and>\n     (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n      \\<mu>_small_row i fs' j) \\<and>\n     (\\<forall>k<m.\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n     (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n     \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n     \\<le> 1 / 2 \\<and>\n     (\\<forall>i' j'.\n         i' < i \\<longrightarrow>\n         j' \\<le> i' \\<longrightarrow>\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n     (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n      LLL_invariant_mod fs' mfs' dmu' p first b i)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition D_mod :: \"int mat \\<Rightarrow> nat\" where \"D_mod dmu = nat (\\<Prod> i < m. d_of dmu i)\""], ["", "definition logD_mod :: \"int mat \\<Rightarrow> nat\"\n  where \"logD_mod dmu = (if \\<alpha> = 4/3 then (D_mod dmu) else nat (floor (log (1 / of_rat reduction) (D_mod dmu))))\""], ["", "end"], ["", "locale fs_int'_mod = \n  fixes n m fs_init \\<alpha> i fs mfs dmu p first b \n  assumes LLL_inv_mod: \"LLL.LLL_invariant_mod n m fs_init \\<alpha> fs mfs dmu p first b i\""], ["", "context LLL_with_assms\nbegin"], ["", "lemma basis_reduction_swap_weak': assumes Linvw: \"LLL_invariant_weak' i fs\"\n  and i: \"i < m\"\n  and i0: \"i \\<noteq> 0\"\n  and mu_F1_i: \"\\<bar>\\<mu> fs i (i-1)\\<bar> \\<le> 1 / 2\"\n  and norm_ineq: \"sq_norm (gso fs (i - 1)) > \\<alpha> * sq_norm (gso fs i)\" \n  and fs'_def: \"fs' = fs[i := fs ! (i - 1), i - 1 := fs ! i]\" \nshows \"LLL_invariant_weak' (i - 1) fs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' (i - 1) fs'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' (i - 1) fs'", "note inv = LLL_invD_weak[OF Linvw]"], ["proof (state)\nthis:\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  length (map of_int_hom.vec_hom fs) = m\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  length fs = m\n  lattice_of fs = L\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n  i \\<le> m\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' (i - 1) fs'", "note invw = LLL_invw'_imp_w[OF Linvw]"], ["proof (state)\nthis:\n  LLL_invariant_weak fs\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' (i - 1) fs'", "note main = basis_reduction_swap_main[OF invw disjI2[OF mu_F1_i] i i0 norm_ineq fs'_def]"], ["proof (state)\nthis:\n  LLL_invariant_weak fs'\n  LLL_invariant False i fs \\<Longrightarrow> LLL_invariant False (i - 1) fs'\n  LLL_measure (i - 1) fs' < LLL_measure i fs\n  ?k < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?k =\n  (if ?k = i - 1\n   then gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) i +\n        gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i\n         (i - 1) \\<cdot>\\<^sub>v\n        gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) (i - 1)\n   else if ?k = i\n        then gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) (i - 1) -\n             map of_int_hom.vec_hom fs ! (i - 1) \\<bullet>\n             gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') (i - 1) /\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                         (i - 1)\\<parallel>\\<^sup>2 \\<cdot>\\<^sub>v\n             gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') (i - 1)\n        else gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?k)\n  ?k < m \\<Longrightarrow>\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n              ?k\\<parallel>\\<^sup>2 =\n  (if ?k = i - 1\n   then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    i\\<parallel>\\<^sup>2 +\n        gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i (i - 1) *\n        gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i (i - 1) *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    (i - 1)\\<parallel>\\<^sup>2\n   else if ?k = i\n        then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         i\\<parallel>\\<^sup>2 *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         (i - 1)\\<parallel>\\<^sup>2 /\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                         (i - 1)\\<parallel>\\<^sup>2\n        else \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         ?k\\<parallel>\\<^sup>2)\n  \\<lbrakk>?ii < m; ?j < ?ii\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') ?ii\n                     ?j =\n                    (if ?ii = i - 1\n                     then gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) i ?j\n                     else if ?ii = i\n                          then if ?j = i - 1\n                               then gram_schmidt_fs.\\<mu> n\n                                     (map of_int_hom.vec_hom fs) i (i - 1) *\n                                    \\<parallel>gram_schmidt_fs.gso n\n          (map of_int_hom.vec_hom fs) (i - 1)\\<parallel>\\<^sup>2 /\n                                    \\<parallel>gram_schmidt_fs.gso n\n          (map of_int_hom.vec_hom fs') (i - 1)\\<parallel>\\<^sup>2\n                               else gram_schmidt_fs.\\<mu> n\n                                     (map of_int_hom.vec_hom fs) (i - 1) ?j\n                          else if i < ?ii \\<and> ?j = i\n                               then gram_schmidt_fs.\\<mu> n\n                                     (map of_int_hom.vec_hom fs) ?ii\n                                     (i - 1) -\n                                    gram_schmidt_fs.\\<mu> n\n                                     (map of_int_hom.vec_hom fs) i (i - 1) *\n                                    gram_schmidt_fs.\\<mu> n\n                                     (map of_int_hom.vec_hom fs) ?ii i\n                               else if i < ?ii \\<and> ?j = i - 1\n                                    then gram_schmidt_fs.\\<mu> n\n    (map of_int_hom.vec_hom fs) ?ii (i - 1) *\n   gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i (i - 1) +\n   gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) ?ii i *\n   \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n               i\\<parallel>\\<^sup>2 /\n   \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n               (i - 1)\\<parallel>\\<^sup>2\n                                    else gram_schmidt_fs.\\<mu> n\n    (map of_int_hom.vec_hom fs) ?ii ?j)\n  ?ii \\<le> m \\<Longrightarrow>\n  rat_of_int (d fs' ?ii) =\n  (if ?ii = i\n   then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                    (i - 1)\\<parallel>\\<^sup>2 /\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    (i - 1)\\<parallel>\\<^sup>2 *\n        rat_of_int (d fs i)\n   else rat_of_int (d fs ?ii))\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' (i - 1) fs'", "note inv' = LLL_inv_wD[OF main(1)]"], ["proof (state)\nthis:\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs')\n  length (map of_int_hom.vec_hom fs') = m\n  set fs' \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow> fs' ! ?i \\<in> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?i \\<in> Rn\n  length fs' = m\n  lattice_of fs' = L\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' (i - 1) fs'", "from \\<open>weakly_reduced fs i\\<close>"], ["proof (chain)\npicking this:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i", "have \"weakly_reduced fs (i - 1)\""], ["proof (prove)\nusing this:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n     (i - 1)", "unfolding gram_schmidt_fs.weakly_reduced_def"], ["proof (prove)\nusing this:\n  \\<forall>ia.\n     Suc ia < i \\<longrightarrow>\n     \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                 ia\\<parallel>\\<^sup>2\n     \\<le> \\<alpha> *\n           \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                       (Suc ia)\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<forall>ia.\n       Suc ia < i - 1 \\<longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   ia\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         (Suc ia)\\<parallel>\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n   (i - 1)\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' (i - 1) fs'", "also"], ["proof (state)\nthis:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n   (i - 1)\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' (i - 1) fs'", "have \"weakly_reduced fs (i - 1) = weakly_reduced fs' (i - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n     (i - 1) =\n    gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs') \\<alpha>\n     (i - 1)", "unfolding gram_schmidt_fs.weakly_reduced_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>ia.\n        Suc ia < i - 1 \\<longrightarrow>\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    ia\\<parallel>\\<^sup>2\n        \\<le> \\<alpha> *\n              \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                          (Suc ia)\\<parallel>\\<^sup>2) =\n    (\\<forall>ia.\n        Suc ia < i - 1 \\<longrightarrow>\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                    ia\\<parallel>\\<^sup>2\n        \\<le> \\<alpha> *\n              \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                          (Suc ia)\\<parallel>\\<^sup>2)", "by (intro all_cong, insert i0 i main(5), auto)"], ["proof (state)\nthis:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n   (i - 1) =\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs') \\<alpha>\n   (i - 1)\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' (i - 1) fs'", "finally"], ["proof (chain)\npicking this:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs') \\<alpha>\n   (i - 1)", "have red: \"weakly_reduced fs' (i - 1)\""], ["proof (prove)\nusing this:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs') \\<alpha>\n   (i - 1)\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs') \\<alpha>\n     (i - 1)", "."], ["proof (state)\nthis:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs') \\<alpha>\n   (i - 1)\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' (i - 1) fs'", "show \"LLL_invariant_weak' (i - 1) fs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' (i - 1) fs'", "using i"], ["proof (prove)\nusing this:\n  i < m\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' (i - 1) fs'", "by (intro LLL_invI_weak red inv', auto)"], ["proof (state)\nthis:\n  LLL_invariant_weak' (i - 1) fs'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma basis_reduction_add_row_done_weak: \n  assumes Linv: \"LLL_invariant_weak' i fs\"\n  and i: \"i < m\" \n  and mu_small: \"\\<mu>_small_row i fs 0\" \nshows \"\\<mu>_small fs i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu>_small fs i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<mu>_small fs i", "note inv = LLL_invD_weak[OF Linv]"], ["proof (state)\nthis:\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  length (map of_int_hom.vec_hom fs) = m\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  length fs = m\n  lattice_of fs = L\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n  i \\<le> m\n\ngoal (1 subgoal):\n 1. \\<mu>_small fs i", "from mu_small"], ["proof (chain)\npicking this:\n  \\<mu>_small_row i fs 0", "have mu_small: \"\\<mu>_small fs i\""], ["proof (prove)\nusing this:\n  \\<mu>_small_row i fs 0\n\ngoal (1 subgoal):\n 1. \\<mu>_small fs i", "unfolding \\<mu>_small_row_def \\<mu>_small_def"], ["proof (prove)\nusing this:\n  \\<forall>j'\\<ge>0.\n     j' < i \\<longrightarrow>\n     \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j'\\<bar>\n     \\<le> inverse 2\n\ngoal (1 subgoal):\n 1. \\<forall>j<i.\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j\\<bar>\n       \\<le> 1 / 2", "by auto"], ["proof (state)\nthis:\n  \\<mu>_small fs i\n\ngoal (1 subgoal):\n 1. \\<mu>_small fs i", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu>_small fs i", "using i mu_small LLL_invI_weak[OF inv(3,6,7,9,1)]"], ["proof (prove)\nusing this:\n  i < m\n  \\<mu>_small fs i\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n   i \\<Longrightarrow>\n  LLL_invariant_weak' i fs\n\ngoal (1 subgoal):\n 1. \\<mu>_small fs i", "by auto"], ["proof (state)\nthis:\n  \\<mu>_small fs i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma LLL_invariant_mod_to_weak_m_to_i: assumes\n  inv: \"LLL_invariant_mod fs mfs dmu p first b m\"\n  and i: \"i \\<le> m\"\nshows \"LLL_invariant_mod fs mfs dmu p first b i\"\n  \"LLL_invariant_weak' m fs\"\n  \"LLL_invariant_weak' i fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu p first b i &&&\n    LLL_invariant_weak' m fs &&& LLL_invariant_weak' i fs", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. LLL_invariant_mod fs mfs dmu p first b i\n 2. LLL_invariant_weak' m fs\n 3. LLL_invariant_weak' i fs", "show \"LLL_invariant_mod fs mfs dmu p first b i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu p first b i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu p first b i", "have \"LLL_invariant_weak' m fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' m fs", "using LLL_invD_mod[OF inv] LLL_invI_weak"], ["proof (prove)\nusing this:\n  length mfs = m\n  m \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> m\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  \\<lbrakk>set ?fs \\<subseteq> carrier_vec n; length ?fs = m;\n   lattice_of ?fs = L; ?i \\<le> m;\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs);\n   gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha>\n    ?i\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak' ?i ?fs\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' m fs", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_weak' m fs\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu p first b i", "then"], ["proof (chain)\npicking this:\n  LLL_invariant_weak' m fs", "have \"LLL_invariant_weak' i fs\""], ["proof (prove)\nusing this:\n  LLL_invariant_weak' m fs\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs", "using LLL_inv_weak_m_impl_i i"], ["proof (prove)\nusing this:\n  LLL_invariant_weak' m fs\n  \\<lbrakk>LLL_invariant_weak' m ?fs; ?i \\<le> m\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak' ?i ?fs\n  i \\<le> m\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_weak' i fs\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu p first b i", "then"], ["proof (chain)\npicking this:\n  LLL_invariant_weak' i fs", "have \"weakly_reduced fs i\""], ["proof (prove)\nusing this:\n  LLL_invariant_weak' i fs\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i", "using i LLL_invD_weak(8)"], ["proof (prove)\nusing this:\n  LLL_invariant_weak' i fs\n  i \\<le> m\n  LLL_invariant_weak' ?i ?fs \\<Longrightarrow>\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha> ?i\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i", "by simp"], ["proof (state)\nthis:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu p first b i", "then"], ["proof (chain)\npicking this:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i", "show ?thesis"], ["proof (prove)\nusing this:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu p first b i", "using LLL_invD_mod[OF inv] LLL_invI_mod i"], ["proof (prove)\nusing this:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n  length mfs = m\n  m \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> m\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  \\<lbrakk>length ?mfs = m; ?i \\<le> m; length ?fs = m; lattice_of ?fs = L;\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs);\n   gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha>\n    ?i;\n   map (map_vec (\\<lambda>x. x symmod ?p)) ?fs = ?mfs;\n   \\<forall>i'<m.\n      \\<forall>j'<i'.\n         \\<bar>d\\<mu> ?fs i' j'\\<bar> < ?p * d ?fs j' * d ?fs (Suc j');\n   \\<forall>i'<m. \\<forall>j'<m. d\\<mu> ?fs i' j' = ?dmu $$ (i', j');\n   1 < ?p; g_bnd_mode ?first ?b ?fs; mod_invariant ?b ?p ?first\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i\n  i \\<le> m\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu p first b i", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_mod fs mfs dmu p first b i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  LLL_invariant_mod fs mfs dmu p first b i\n\ngoal (2 subgoals):\n 1. LLL_invariant_weak' m fs\n 2. LLL_invariant_weak' i fs", "then"], ["proof (chain)\npicking this:\n  LLL_invariant_mod fs mfs dmu p first b i", "show fsinvwi: \"LLL_invariant_weak' i fs\""], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b i\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs", "using LLL_invD_mod LLL_invI_weak"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b i\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  length ?mfs = m\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  ?i \\<le> m\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  length ?fs = m\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  lattice_of ?fs = L\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  gs.lin_indpt_list (map of_int_hom.vec_hom ?fs)\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha> ?i\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  map (map_vec (\\<lambda>x. x symmod ?p)) ?fs = ?mfs\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> ?fs i' j'\\<bar> < ?p * d ?fs j' * d ?fs (Suc j')\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> ?fs i' j' = ?dmu $$ (i', j')\n  \\<lbrakk>LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?ia; ?i < m\\<rbrakk>\n  \\<Longrightarrow> ?fs ! ?i \\<in> carrier_vec n\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  set ?fs \\<subseteq> carrier_vec n\n  \\<lbrakk>LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?ia; ?i < m\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.gso n (map of_int_hom.vec_hom ?fs) ?i\n                    \\<in> Rn\n  \\<lbrakk>LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?ia; ?i < m\\<rbrakk>\n  \\<Longrightarrow> ?mfs ! ?i \\<in> carrier_vec n\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  set ?mfs \\<subseteq> carrier_vec n\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow> 1 < ?p\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  g_bnd_mode ?first ?b ?fs\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  mod_invariant ?b ?p ?first\n  \\<lbrakk>set ?fs \\<subseteq> carrier_vec n; length ?fs = m;\n   lattice_of ?fs = L; ?i \\<le> m;\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs);\n   gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha>\n    ?i\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak' ?i ?fs\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_weak' i fs\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' m fs", "show \"LLL_invariant_weak' m fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' m fs", "using LLL_invD_mod[OF inv] LLL_invI_weak"], ["proof (prove)\nusing this:\n  length mfs = m\n  m \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> m\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  \\<lbrakk>set ?fs \\<subseteq> carrier_vec n; length ?fs = m;\n   lattice_of ?fs = L; ?i \\<le> m;\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs);\n   gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha>\n    ?i\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak' ?i ?fs\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' m fs", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_weak' m fs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma basis_reduction_mod_swap_main: \n  assumes Linvmw: \"LLL_invariant_mod_weak fs mfs dmu p first b\"\n  and k: \"k < m\"\n  and k0: \"k \\<noteq> 0\"\n  and mu_F1_i: \"\\<bar>\\<mu> fs k (k-1)\\<bar> \\<le> 1 / 2\"\n  and norm_ineq: \"sq_norm (gso fs (k - 1)) > \\<alpha> * sq_norm (gso fs k)\" \n  and mfs'_def: \"mfs' = mfs[k := mfs ! (k - 1), k - 1 := mfs ! k]\"\n  and dmu'_def: \"dmu' = (mat m m (\\<lambda>(i,j). (\n      if j < i then\n        if i = k - 1 then \n           dmu $$ (k, j)\n        else if i = k \\<and> j \\<noteq> k - 1 then \n             dmu $$ (k - 1, j)\n        else if i > k \\<and> j = k then\n           ((d_of dmu (Suc k)) * dmu $$ (i, k - 1) - dmu $$ (k, k - 1) * dmu $$ (i, j)) \n              div (d_of dmu k)\n        else if i > k \\<and> j = k - 1 then\n           (dmu $$ (k, k - 1) * dmu $$ (i, j) + dmu $$ (i, k) * (d_of dmu (k-1)))\n              div (d_of dmu k)\n        else dmu $$ (i, j)\n      else if i = j then \n        if i = k - 1 then \n          ((d_of dmu (Suc k)) * (d_of dmu (k-1)) + dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) \n            div (d_of dmu k)\n        else (d_of dmu (Suc i))\n      else dmu $$ (i, j))\n    ))\"\n  and dmu'_mod_def: \"dmu'_mod = mat m m (\\<lambda>(i, j). (\n        if j < i \\<and> (j = k \\<or> j = k - 1) then \n          dmu' $$ (i, j) symmod (p * (d_of dmu' j) * (d_of dmu' (Suc j)))\n        else dmu' $$ (i, j)))\"\nshows \"(\\<exists>fs'. LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n        LLL_measure (k-1) fs' < LLL_measure k fs \\<and>\n        (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow> LLL_invariant_mod fs' mfs' dmu'_mod p first b (k-1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "define fs' where \"fs' = fs[k := fs ! (k - 1), k - 1 := fs ! k]\""], ["proof (state)\nthis:\n  fs' = fs[k := fs ! (k - 1), k - 1 := fs ! k]\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "have pgtz: \"p > 0\" and p1: \"p > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < p &&& 1 < p", "using LLL_invD_modw[OF Linvmw]"], ["proof (prove)\nusing this:\n  length mfs = m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n\ngoal (1 subgoal):\n 1. 0 < p &&& 1 < p", "by auto"], ["proof (state)\nthis:\n  0 < p\n  1 < p\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "have invw: \"LLL_invariant_weak fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak fs", "using LLL_invD_modw[OF Linvmw] LLL_invariant_weak_def"], ["proof (prove)\nusing this:\n  length mfs = m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  LLL_invariant_weak ?fs =\n  (gs.lin_indpt_list (map of_int_hom.vec_hom ?fs) \\<and>\n   lattice_of ?fs = L \\<and> length ?fs = m)\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak fs", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_weak fs\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "note swap_main = basis_reduction_swap_main(3-)[OF invw disjI2[OF mu_F1_i] k k0 norm_ineq fs'_def]"], ["proof (state)\nthis:\n  LLL_measure (k - 1) fs' < LLL_measure k fs\n  ?k < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?k =\n  (if ?k = k - 1\n   then gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k +\n        gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) k\n         (k - 1) \\<cdot>\\<^sub>v\n        gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) (k - 1)\n   else if ?k = k\n        then gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) (k - 1) -\n             map of_int_hom.vec_hom fs ! (k - 1) \\<bullet>\n             gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') (k - 1) /\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                         (k - 1)\\<parallel>\\<^sup>2 \\<cdot>\\<^sub>v\n             gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') (k - 1)\n        else gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?k)\n  ?k < m \\<Longrightarrow>\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n              ?k\\<parallel>\\<^sup>2 =\n  (if ?k = k - 1\n   then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    k\\<parallel>\\<^sup>2 +\n        gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) k (k - 1) *\n        gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) k (k - 1) *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    (k - 1)\\<parallel>\\<^sup>2\n   else if ?k = k\n        then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         k\\<parallel>\\<^sup>2 *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         (k - 1)\\<parallel>\\<^sup>2 /\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                         (k - 1)\\<parallel>\\<^sup>2\n        else \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         ?k\\<parallel>\\<^sup>2)\n  \\<lbrakk>?ii < m; ?j < ?ii\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') ?ii\n                     ?j =\n                    (if ?ii = k - 1\n                     then gram_schmidt_fs.\\<mu> n\n                           (map of_int_hom.vec_hom fs) k ?j\n                     else if ?ii = k\n                          then if ?j = k - 1\n                               then gram_schmidt_fs.\\<mu> n\n                                     (map of_int_hom.vec_hom fs) k (k - 1) *\n                                    \\<parallel>gram_schmidt_fs.gso n\n          (map of_int_hom.vec_hom fs) (k - 1)\\<parallel>\\<^sup>2 /\n                                    \\<parallel>gram_schmidt_fs.gso n\n          (map of_int_hom.vec_hom fs') (k - 1)\\<parallel>\\<^sup>2\n                               else gram_schmidt_fs.\\<mu> n\n                                     (map of_int_hom.vec_hom fs) (k - 1) ?j\n                          else if k < ?ii \\<and> ?j = k\n                               then gram_schmidt_fs.\\<mu> n\n                                     (map of_int_hom.vec_hom fs) ?ii\n                                     (k - 1) -\n                                    gram_schmidt_fs.\\<mu> n\n                                     (map of_int_hom.vec_hom fs) k (k - 1) *\n                                    gram_schmidt_fs.\\<mu> n\n                                     (map of_int_hom.vec_hom fs) ?ii k\n                               else if k < ?ii \\<and> ?j = k - 1\n                                    then gram_schmidt_fs.\\<mu> n\n    (map of_int_hom.vec_hom fs) ?ii (k - 1) *\n   gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') k (k - 1) +\n   gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) ?ii k *\n   \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n               k\\<parallel>\\<^sup>2 /\n   \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n               (k - 1)\\<parallel>\\<^sup>2\n                                    else gram_schmidt_fs.\\<mu> n\n    (map of_int_hom.vec_hom fs) ?ii ?j)\n  ?ii \\<le> m \\<Longrightarrow>\n  rat_of_int (d fs' ?ii) =\n  (if ?ii = k\n   then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                    (k - 1)\\<parallel>\\<^sup>2 /\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    (k - 1)\\<parallel>\\<^sup>2 *\n        rat_of_int (d fs k)\n   else rat_of_int (d fs ?ii))\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "note dd\\<mu>_swap = d_d\\<mu>_swap[OF invw disjI2[OF mu_F1_i] k k0 norm_ineq fs'_def]"], ["proof (state)\nthis:\n  ?i \\<le> m \\<Longrightarrow>\n  d fs' ?i =\n  (if ?i = k\n   then (d fs (Suc k) * d fs (k - 1) +\n         d\\<mu> fs k (k - 1) * d\\<mu> fs k (k - 1)) div\n        d fs k\n   else d fs ?i)\n  \\<lbrakk>?i < m; ?j < ?i\\<rbrakk>\n  \\<Longrightarrow> d\\<mu> fs' ?i ?j =\n                    (if ?i = k - 1 then d\\<mu> fs k ?j\n                     else if ?i = k \\<and> ?j \\<noteq> k - 1\n                          then d\\<mu> fs (k - 1) ?j\n                          else if k < ?i \\<and> ?j = k\n                               then (d fs (Suc k) * d\\<mu> fs ?i (k - 1) -\n                                     d\\<mu> fs k (k - 1) *\n                                     d\\<mu> fs ?i ?j) div\n                                    d fs k\n                               else if k < ?i \\<and> ?j = k - 1\n                                    then (d\\<mu> fs k (k - 1) *\n    d\\<mu> fs ?i ?j +\n    d\\<mu> fs ?i k * d fs (k - 1)) div\n   d fs k\n                                    else d\\<mu> fs ?i ?j)\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "have invw': \"LLL_invariant_weak fs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak fs'", "using fs'_def assms invw basis_reduction_swap_main(1)"], ["proof (prove)\nusing this:\n  fs' = fs[k := fs ! (k - 1), k - 1 := fs ! k]\n  LLL_invariant_mod_weak fs mfs dmu p first b\n  k < m\n  k \\<noteq> 0\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) k (k - 1)\\<bar>\n  \\<le> 1 / 2\n  \\<alpha> *\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              k\\<parallel>\\<^sup>2\n  < \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                (k - 1)\\<parallel>\\<^sup>2\n  mfs' = mfs[k := mfs ! (k - 1), k - 1 := mfs ! k]\n  dmu' =\n  mat m m\n   (\\<lambda>(i, j).\n       if j < i\n       then if i = k - 1 then dmu $$ (k, j)\n            else if i = k \\<and> j \\<noteq> k - 1 then dmu $$ (k - 1, j)\n                 else if k < i \\<and> j = k\n                      then (d_of dmu (Suc k) * dmu $$ (i, k - 1) -\n                            dmu $$ (k, k - 1) * dmu $$ (i, j)) div\n                           d_of dmu k\n                      else if k < i \\<and> j = k - 1\n                           then (dmu $$ (k, k - 1) * dmu $$ (i, j) +\n                                 dmu $$ (i, k) * d_of dmu (k - 1)) div\n                                d_of dmu k\n                           else dmu $$ (i, j)\n       else if i = j\n            then if i = k - 1\n                 then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n                       dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n                      d_of dmu k\n                 else d_of dmu (Suc i)\n            else dmu $$ (i, j))\n  dmu'_mod =\n  mat m m\n   (\\<lambda>(i, j).\n       if j < i \\<and> (j = k \\<or> j = k - 1)\n       then dmu' $$ (i, j) symmod (p * d_of dmu' j * d_of dmu' (Suc j))\n       else dmu' $$ (i, j))\n  LLL_invariant_weak fs\n  \\<lbrakk>LLL_invariant_weak ?fs;\n   LLL_invariant False ?i ?fs \\<or>\n   \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?fs) ?i\n          (?i - 1)\\<bar>\n   \\<le> 1 / 2;\n   ?i < m; ?i \\<noteq> 0;\n   \\<alpha> *\n   \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom ?fs)\n               ?i\\<parallel>\\<^sup>2\n   < \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom ?fs)\n                 (?i - 1)\\<parallel>\\<^sup>2;\n   ?fs' = ?fs[?i := ?fs ! (?i - 1), ?i - 1 := ?fs ! ?i]\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak ?fs'\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak fs'", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_weak fs'\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "have 02: \"LLL_measure k fs > LLL_measure (k - 1) fs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_measure (k - 1) fs' < LLL_measure k fs", "by fact"], ["proof (state)\nthis:\n  LLL_measure (k - 1) fs' < LLL_measure k fs\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "have 03: \"\\<And> i j. i < m \\<Longrightarrow> j < i \\<Longrightarrow> \n          d\\<mu> fs' i j = (\n        if i = k - 1 then \n           d\\<mu> fs k j\n        else if i = k \\<and> j \\<noteq> k - 1 then \n             d\\<mu> fs (k - 1) j\n        else if i > k \\<and> j = k then\n           (d fs (Suc k) * d\\<mu> fs i (k - 1) - d\\<mu> fs k (k - 1) * d\\<mu> fs i j) div d fs k\n        else if i > k \\<and> j = k - 1 then \n           (d\\<mu> fs k (k - 1) * d\\<mu> fs i j + d\\<mu> fs i k * d fs (k - 1)) div d fs k\n        else d\\<mu> fs i j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < m; j < i\\<rbrakk>\n       \\<Longrightarrow> d\\<mu> fs' i j =\n                         (if i = k - 1 then d\\<mu> fs k j\n                          else if i = k \\<and> j \\<noteq> k - 1\n                               then d\\<mu> fs (k - 1) j\n                               else if k < i \\<and> j = k\n                                    then (d fs (Suc k) *\n    d\\<mu> fs i (k - 1) -\n    d\\<mu> fs k (k - 1) * d\\<mu> fs i j) div\n   d fs k\n                                    else if k < i \\<and> j = k - 1\n   then (d\\<mu> fs k (k - 1) * d\\<mu> fs i j +\n         d\\<mu> fs i k * d fs (k - 1)) div\n        d fs k\n   else d\\<mu> fs i j)", "using dd\\<mu>_swap"], ["proof (prove)\nusing this:\n  ?i \\<le> m \\<Longrightarrow>\n  d fs' ?i =\n  (if ?i = k\n   then (d fs (Suc k) * d fs (k - 1) +\n         d\\<mu> fs k (k - 1) * d\\<mu> fs k (k - 1)) div\n        d fs k\n   else d fs ?i)\n  \\<lbrakk>?i < m; ?j < ?i\\<rbrakk>\n  \\<Longrightarrow> d\\<mu> fs' ?i ?j =\n                    (if ?i = k - 1 then d\\<mu> fs k ?j\n                     else if ?i = k \\<and> ?j \\<noteq> k - 1\n                          then d\\<mu> fs (k - 1) ?j\n                          else if k < ?i \\<and> ?j = k\n                               then (d fs (Suc k) * d\\<mu> fs ?i (k - 1) -\n                                     d\\<mu> fs k (k - 1) *\n                                     d\\<mu> fs ?i ?j) div\n                                    d fs k\n                               else if k < ?i \\<and> ?j = k - 1\n                                    then (d\\<mu> fs k (k - 1) *\n    d\\<mu> fs ?i ?j +\n    d\\<mu> fs ?i k * d fs (k - 1)) div\n   d fs k\n                                    else d\\<mu> fs ?i ?j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < m; j < i\\<rbrakk>\n       \\<Longrightarrow> d\\<mu> fs' i j =\n                         (if i = k - 1 then d\\<mu> fs k j\n                          else if i = k \\<and> j \\<noteq> k - 1\n                               then d\\<mu> fs (k - 1) j\n                               else if k < i \\<and> j = k\n                                    then (d fs (Suc k) *\n    d\\<mu> fs i (k - 1) -\n    d\\<mu> fs k (k - 1) * d\\<mu> fs i j) div\n   d fs k\n                                    else if k < i \\<and> j = k - 1\n   then (d\\<mu> fs k (k - 1) * d\\<mu> fs i j +\n         d\\<mu> fs i k * d fs (k - 1)) div\n        d fs k\n   else d\\<mu> fs i j)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?i2 < m; ?j2 < ?i2\\<rbrakk>\n  \\<Longrightarrow> d\\<mu> fs' ?i2 ?j2 =\n                    (if ?i2 = k - 1 then d\\<mu> fs k ?j2\n                     else if ?i2 = k \\<and> ?j2 \\<noteq> k - 1\n                          then d\\<mu> fs (k - 1) ?j2\n                          else if k < ?i2 \\<and> ?j2 = k\n                               then (d fs (Suc k) * d\\<mu> fs ?i2 (k - 1) -\n                                     d\\<mu> fs k (k - 1) *\n                                     d\\<mu> fs ?i2 ?j2) div\n                                    d fs k\n                               else if k < ?i2 \\<and> ?j2 = k - 1\n                                    then (d\\<mu> fs k (k - 1) *\n    d\\<mu> fs ?i2 ?j2 +\n    d\\<mu> fs ?i2 k * d fs (k - 1)) div\n   d fs k\n                                    else d\\<mu> fs ?i2 ?j2)\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "have 031: \"\\<And>i. i < k-1 \\<Longrightarrow> gso fs' i = gso fs i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < k - 1 \\<Longrightarrow>\n       gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') i =\n       gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) i", "using swap_main(2) k k0"], ["proof (prove)\nusing this:\n  ?k < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?k =\n  (if ?k = k - 1\n   then gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k +\n        gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) k\n         (k - 1) \\<cdot>\\<^sub>v\n        gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) (k - 1)\n   else if ?k = k\n        then gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) (k - 1) -\n             map of_int_hom.vec_hom fs ! (k - 1) \\<bullet>\n             gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') (k - 1) /\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                         (k - 1)\\<parallel>\\<^sup>2 \\<cdot>\\<^sub>v\n             gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') (k - 1)\n        else gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?k)\n  k < m\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < k - 1 \\<Longrightarrow>\n       gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') i =\n       gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) i", "by auto"], ["proof (state)\nthis:\n  ?i2 < k - 1 \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?i2 =\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i2\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "have 032: \"\\<And> ii. ii \\<le> m \\<Longrightarrow> of_int (d fs' ii) = (if ii = k then \n           sq_norm (gso fs' (k - 1)) / sq_norm (gso fs (k - 1)) * of_int (d fs k)\n           else of_int (d fs ii))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ii.\n       ii \\<le> m \\<Longrightarrow>\n       rat_of_int (d fs' ii) =\n       (if ii = k\n        then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                         (k - 1)\\<parallel>\\<^sup>2 /\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         (k - 1)\\<parallel>\\<^sup>2 *\n             rat_of_int (d fs k)\n        else rat_of_int (d fs ii))", "by fact"], ["proof (state)\nthis:\n  ?ii2 \\<le> m \\<Longrightarrow>\n  rat_of_int (d fs' ?ii2) =\n  (if ?ii2 = k\n   then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                    (k - 1)\\<parallel>\\<^sup>2 /\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    (k - 1)\\<parallel>\\<^sup>2 *\n        rat_of_int (d fs k)\n   else rat_of_int (d fs ?ii2))\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "have gbnd: \"g_bnd_mode first b fs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g_bnd_mode first b fs'", "proof (cases \"first \\<and> m \\<noteq> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. first \\<and> m \\<noteq> 0 \\<Longrightarrow> g_bnd_mode first b fs'\n 2. \\<not> (first \\<and> m \\<noteq> 0) \\<Longrightarrow>\n    g_bnd_mode first b fs'", "case True"], ["proof (state)\nthis:\n  first \\<and> m \\<noteq> 0\n\ngoal (2 subgoals):\n 1. first \\<and> m \\<noteq> 0 \\<Longrightarrow> g_bnd_mode first b fs'\n 2. \\<not> (first \\<and> m \\<noteq> 0) \\<Longrightarrow>\n    g_bnd_mode first b fs'", "have \"sq_norm (gso fs' 0) \\<le> sq_norm (gso fs 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "proof (cases \"k - 1 = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2\n 2. k - 1 \\<noteq> 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "case False"], ["proof (state)\nthis:\n  k - 1 \\<noteq> 0\n\ngoal (2 subgoals):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2\n 2. k - 1 \\<noteq> 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "thus ?thesis"], ["proof (prove)\nusing this:\n  k - 1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "using 031[of 0]"], ["proof (prove)\nusing this:\n  k - 1 \\<noteq> 0\n  0 < k - 1 \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') 0 =\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) 0\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n              0\\<parallel>\\<^sup>2\n  \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "case *: True"], ["proof (state)\nthis:\n  k - 1 = 0\n\ngoal (1 subgoal):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "have k_1: \"k - 1 < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k - 1 < m", "using k"], ["proof (prove)\nusing this:\n  k < m\n\ngoal (1 subgoal):\n 1. k - 1 < m", "by auto"], ["proof (state)\nthis:\n  k - 1 < m\n\ngoal (1 subgoal):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "from * k0"], ["proof (chain)\npicking this:\n  k - 1 = 0\n  k \\<noteq> 0", "have k1: \"k = 1\""], ["proof (prove)\nusing this:\n  k - 1 = 0\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. k = 1", "by simp"], ["proof (state)\nthis:\n  k = 1\n\ngoal (1 subgoal):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "(* this is a copy of what is done in LLL.swap-main, should be made accessible in swap-main *)"], ["proof (state)\nthis:\n  k = 1\n\ngoal (1 subgoal):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "have \"sq_norm (gso fs' 0) \\<le> abs (sq_norm (gso fs' 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<bar>\\<parallel>gram_schmidt_fs.gso n\n                            (map of_int_hom.vec_hom fs')\n                            0\\<parallel>\\<^sup>2\\<bar>", "by simp"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n              0\\<parallel>\\<^sup>2\n  \\<le> \\<bar>\\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                          0\\<parallel>\\<^sup>2\\<bar>\n\ngoal (1 subgoal):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "also"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n              0\\<parallel>\\<^sup>2\n  \\<le> \\<bar>\\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                          0\\<parallel>\\<^sup>2\\<bar>\n\ngoal (1 subgoal):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "have \"\\<dots> = abs (sq_norm (gso fs 1) + \\<mu> fs 1 0 * \\<mu> fs 1 0 * sq_norm (gso fs 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>\\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                      0\\<parallel>\\<^sup>2\\<bar> =\n    \\<bar>\\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      1\\<parallel>\\<^sup>2 +\n          gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 0 *\n          gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 0 *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2\\<bar>", "by (subst swap_main(3)[OF k_1, unfolded *], auto simp: k1)"], ["proof (state)\nthis:\n  \\<bar>\\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                    0\\<parallel>\\<^sup>2\\<bar> =\n  \\<bar>\\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    1\\<parallel>\\<^sup>2 +\n        gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 0 *\n        gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 0 *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    0\\<parallel>\\<^sup>2\\<bar>\n\ngoal (1 subgoal):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "also"], ["proof (state)\nthis:\n  \\<bar>\\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                    0\\<parallel>\\<^sup>2\\<bar> =\n  \\<bar>\\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    1\\<parallel>\\<^sup>2 +\n        gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 0 *\n        gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 0 *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    0\\<parallel>\\<^sup>2\\<bar>\n\ngoal (1 subgoal):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "have \"\\<dots> \\<le> sq_norm (gso fs 1) + abs (\\<mu> fs 1 0) * abs (\\<mu> fs 1 0) * sq_norm (gso fs 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>\\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      1\\<parallel>\\<^sup>2 +\n          gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 0 *\n          gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 0 *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2\\<bar>\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      1\\<parallel>\\<^sup>2 +\n          \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1\n                 0\\<bar> *\n          \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1\n                 0\\<bar> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "by (simp add: sq_norm_vec_ge_0)"], ["proof (state)\nthis:\n  \\<bar>\\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    1\\<parallel>\\<^sup>2 +\n        gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 0 *\n        gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 0 *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    0\\<parallel>\\<^sup>2\\<bar>\n  \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    1\\<parallel>\\<^sup>2 +\n        \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1\n               0\\<bar> *\n        \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1\n               0\\<bar> *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "also"], ["proof (state)\nthis:\n  \\<bar>\\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    1\\<parallel>\\<^sup>2 +\n        gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 0 *\n        gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 0 *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    0\\<parallel>\\<^sup>2\\<bar>\n  \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    1\\<parallel>\\<^sup>2 +\n        \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1\n               0\\<bar> *\n        \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1\n               0\\<bar> *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "have \"\\<dots> \\<le> sq_norm (gso fs 1) + (1 / 2) * (1 / 2) * sq_norm (gso fs 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                1\\<parallel>\\<^sup>2 +\n    \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 0\\<bar> *\n    \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 0\\<bar> *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      1\\<parallel>\\<^sup>2 +\n          1 / 2 * (1 / 2) *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "using mu_F1_i[unfolded k1]"], ["proof (prove)\nusing this:\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 (1 - 1)\\<bar>\n  \\<le> 1 / 2\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                1\\<parallel>\\<^sup>2 +\n    \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 0\\<bar> *\n    \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 0\\<bar> *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      1\\<parallel>\\<^sup>2 +\n          1 / 2 * (1 / 2) *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "by (intro plus_right_mono mult_mono, auto)"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              1\\<parallel>\\<^sup>2 +\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 0\\<bar> *\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 0\\<bar> *\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              0\\<parallel>\\<^sup>2\n  \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    1\\<parallel>\\<^sup>2 +\n        1 / 2 * (1 / 2) *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "also"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              1\\<parallel>\\<^sup>2 +\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 0\\<bar> *\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) 1 0\\<bar> *\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              0\\<parallel>\\<^sup>2\n  \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    1\\<parallel>\\<^sup>2 +\n        1 / 2 * (1 / 2) *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "have \"\\<dots> < 1 / \\<alpha> * sq_norm (gso fs 0) + (1 / 2) * (1 / 2) * sq_norm (gso fs 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                1\\<parallel>\\<^sup>2 +\n    1 / 2 * (1 / 2) *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2\n    < 1 / \\<alpha> *\n      \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                  0\\<parallel>\\<^sup>2 +\n      1 / 2 * (1 / 2) *\n      \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                  0\\<parallel>\\<^sup>2", "by (intro add_strict_right_mono, insert norm_ineq[unfolded mult.commute[of \\<alpha>],\n          THEN mult_imp_less_div_pos[OF \\<alpha>0(1)]] k1, auto)"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              1\\<parallel>\\<^sup>2 +\n  1 / 2 * (1 / 2) *\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              0\\<parallel>\\<^sup>2\n  < 1 / \\<alpha> *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2 +\n    1 / 2 * (1 / 2) *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "also"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              1\\<parallel>\\<^sup>2 +\n  1 / 2 * (1 / 2) *\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              0\\<parallel>\\<^sup>2\n  < 1 / \\<alpha> *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2 +\n    1 / 2 * (1 / 2) *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "have \"\\<dots> = reduction * sq_norm (gso fs 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / \\<alpha> *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2 +\n    1 / 2 * (1 / 2) *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2 =\n    reduction *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2", "unfolding reduction_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / \\<alpha> *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2 +\n    1 / 2 * (1 / 2) *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2 =\n    (4 + \\<alpha>) / (4 * \\<alpha>) *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2", "using \\<alpha>0"], ["proof (prove)\nusing this:\n  0 < \\<alpha>\n  \\<alpha> \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 / \\<alpha> *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2 +\n    1 / 2 * (1 / 2) *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2 =\n    (4 + \\<alpha>) / (4 * \\<alpha>) *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2", "by (simp add: ring_distribs add_divide_distrib)"], ["proof (state)\nthis:\n  1 / \\<alpha> *\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              0\\<parallel>\\<^sup>2 +\n  1 / 2 * (1 / 2) *\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              0\\<parallel>\\<^sup>2 =\n  reduction *\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "also"], ["proof (state)\nthis:\n  1 / \\<alpha> *\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              0\\<parallel>\\<^sup>2 +\n  1 / 2 * (1 / 2) *\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              0\\<parallel>\\<^sup>2 =\n  reduction *\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "have \"\\<dots> \\<le> 1 * sq_norm (gso fs 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reduction *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2\n    \\<le> 1 *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "using reduction(2)"], ["proof (prove)\nusing this:\n  reduction \\<le> 1\n\ngoal (1 subgoal):\n 1. reduction *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2\n    \\<le> 1 *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "by (intro mult_right_mono, auto)"], ["proof (state)\nthis:\n  reduction *\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              0\\<parallel>\\<^sup>2\n  \\<le> 1 *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. k - 1 = 0 \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "finally"], ["proof (chain)\npicking this:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n              0\\<parallel>\\<^sup>2\n  < 1 *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n              0\\<parallel>\\<^sup>2\n  < 1 *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                0\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      0\\<parallel>\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n              0\\<parallel>\\<^sup>2\n  \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    0\\<parallel>\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n              0\\<parallel>\\<^sup>2\n  \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    0\\<parallel>\\<^sup>2\n\ngoal (2 subgoals):\n 1. first \\<and> m \\<noteq> 0 \\<Longrightarrow> g_bnd_mode first b fs'\n 2. \\<not> (first \\<and> m \\<noteq> 0) \\<Longrightarrow>\n    g_bnd_mode first b fs'", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n              0\\<parallel>\\<^sup>2\n  \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. g_bnd_mode first b fs'", "using LLL_invD_modw(14)[OF Linvmw] True"], ["proof (prove)\nusing this:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n              0\\<parallel>\\<^sup>2\n  \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    0\\<parallel>\\<^sup>2\n  g_bnd_mode first b fs\n  first \\<and> m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. g_bnd_mode first b fs'", "unfolding g_bnd_mode_def"], ["proof (prove)\nusing this:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n              0\\<parallel>\\<^sup>2\n  \\<le> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    0\\<parallel>\\<^sup>2\n  if first \\<and> m \\<noteq> 0\n  then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   0\\<parallel>\\<^sup>2\n       \\<le> b\n  else g_bnd b fs\n  first \\<and> m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. if first \\<and> m \\<noteq> 0\n    then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                     0\\<parallel>\\<^sup>2\n         \\<le> b\n    else g_bnd b fs'", "by auto"], ["proof (state)\nthis:\n  g_bnd_mode first b fs'\n\ngoal (1 subgoal):\n 1. \\<not> (first \\<and> m \\<noteq> 0) \\<Longrightarrow>\n    g_bnd_mode first b fs'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (first \\<and> m \\<noteq> 0) \\<Longrightarrow>\n    g_bnd_mode first b fs'", "case False"], ["proof (state)\nthis:\n  \\<not> (first \\<and> m \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<not> (first \\<and> m \\<noteq> 0) \\<Longrightarrow>\n    g_bnd_mode first b fs'", "from LLL_invD_modw(14)[OF Linvmw] False"], ["proof (chain)\npicking this:\n  g_bnd_mode first b fs\n  \\<not> (first \\<and> m \\<noteq> 0)", "have \"g_bnd b fs\""], ["proof (prove)\nusing this:\n  g_bnd_mode first b fs\n  \\<not> (first \\<and> m \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. g_bnd b fs", "unfolding g_bnd_mode_def"], ["proof (prove)\nusing this:\n  if first \\<and> m \\<noteq> 0\n  then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   0\\<parallel>\\<^sup>2\n       \\<le> b\n  else g_bnd b fs\n  \\<not> (first \\<and> m \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. g_bnd b fs", "by auto"], ["proof (state)\nthis:\n  g_bnd b fs\n\ngoal (1 subgoal):\n 1. \\<not> (first \\<and> m \\<noteq> 0) \\<Longrightarrow>\n    g_bnd_mode first b fs'", "hence \"g_bnd b fs'\""], ["proof (prove)\nusing this:\n  g_bnd b fs\n\ngoal (1 subgoal):\n 1. g_bnd b fs'", "using g_bnd_swap[OF k k0 invw mu_F1_i norm_ineq fs'_def]"], ["proof (prove)\nusing this:\n  g_bnd b fs\n  g_bnd ?B fs \\<Longrightarrow> g_bnd ?B fs'\n\ngoal (1 subgoal):\n 1. g_bnd b fs'", "by simp"], ["proof (state)\nthis:\n  g_bnd b fs'\n\ngoal (1 subgoal):\n 1. \\<not> (first \\<and> m \\<noteq> 0) \\<Longrightarrow>\n    g_bnd_mode first b fs'", "thus ?thesis"], ["proof (prove)\nusing this:\n  g_bnd b fs'\n\ngoal (1 subgoal):\n 1. g_bnd_mode first b fs'", "using False"], ["proof (prove)\nusing this:\n  g_bnd b fs'\n  \\<not> (first \\<and> m \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. g_bnd_mode first b fs'", "unfolding g_bnd_mode_def"], ["proof (prove)\nusing this:\n  g_bnd b fs'\n  \\<not> (first \\<and> m \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. if first \\<and> m \\<noteq> 0\n    then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                     0\\<parallel>\\<^sup>2\n         \\<le> b\n    else g_bnd b fs'", "by auto"], ["proof (state)\nthis:\n  g_bnd_mode first b fs'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g_bnd_mode first b fs'\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "note d_of = d_of_weak[OF Linvmw]"], ["proof (state)\nthis:\n  ?i \\<le> m \\<Longrightarrow> d_of dmu ?i = d fs ?i\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "have 033: \"\\<And> i. i < m \\<Longrightarrow> d\\<mu> fs' i i = (\n            if i = k - 1 then \n             ((d_of dmu (Suc k)) * (d_of dmu (k-1)) + dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) \n                div (d_of dmu k)\n            else (d_of dmu (Suc i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       d\\<mu> fs' i i =\n       (if i = k - 1\n        then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n              dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n             d_of dmu k\n        else d_of dmu (Suc i))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       d\\<mu> fs' i i =\n       (if i = k - 1\n        then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n              dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n             d_of dmu k\n        else d_of dmu (Suc i))", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       d\\<mu> fs' i i =\n       (if i = k - 1\n        then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n              dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n             d_of dmu k\n        else d_of dmu (Suc i))", "assume i: \"i < m\""], ["proof (state)\nthis:\n  i < m\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       d\\<mu> fs' i i =\n       (if i = k - 1\n        then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n              dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n             d_of dmu k\n        else d_of dmu (Suc i))", "have \"d\\<mu> fs' i i = d fs' (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d\\<mu> fs' i i = d fs' (Suc i)", "using dd\\<mu> i"], ["proof (prove)\nusing this:\n  ?i < m \\<Longrightarrow> d ?fs (Suc ?i) = d\\<mu> ?fs ?i ?i\n  i < m\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i i = d fs' (Suc i)", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs' i i = d fs' (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       d\\<mu> fs' i i =\n       (if i = k - 1\n        then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n              dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n             d_of dmu k\n        else d_of dmu (Suc i))", "also"], ["proof (state)\nthis:\n  d\\<mu> fs' i i = d fs' (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       d\\<mu> fs' i i =\n       (if i = k - 1\n        then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n              dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n             d_of dmu k\n        else d_of dmu (Suc i))", "have \"\\<dots> = (if i = k - 1 then \n          (d fs (Suc k) * d fs (k - 1) + d\\<mu> fs k (k - 1) * d\\<mu> fs k (k - 1)) div d fs k \n        else d fs (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d fs' (Suc i) =\n    (if i = k - 1\n     then (d fs (Suc k) * d fs (k - 1) +\n           d\\<mu> fs k (k - 1) * d\\<mu> fs k (k - 1)) div\n          d fs k\n     else d fs (Suc i))", "by (subst dd\\<mu>_swap, insert dd\\<mu> k0 i, auto)"], ["proof (state)\nthis:\n  d fs' (Suc i) =\n  (if i = k - 1\n   then (d fs (Suc k) * d fs (k - 1) +\n         d\\<mu> fs k (k - 1) * d\\<mu> fs k (k - 1)) div\n        d fs k\n   else d fs (Suc i))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       d\\<mu> fs' i i =\n       (if i = k - 1\n        then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n              dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n             d_of dmu k\n        else d_of dmu (Suc i))", "also"], ["proof (state)\nthis:\n  d fs' (Suc i) =\n  (if i = k - 1\n   then (d fs (Suc k) * d fs (k - 1) +\n         d\\<mu> fs k (k - 1) * d\\<mu> fs k (k - 1)) div\n        d fs k\n   else d fs (Suc i))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       d\\<mu> fs' i i =\n       (if i = k - 1\n        then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n              dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n             d_of dmu k\n        else d_of dmu (Suc i))", "have \"\\<dots> = (if i = k - 1 then \n        ((d_of dmu (Suc k)) * (d_of dmu (k-1)) + dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) \n          div (d_of dmu k)\n       else (d_of dmu (Suc i)))\" (is \"_ = ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i = k - 1\n     then (d fs (Suc k) * d fs (k - 1) +\n           d\\<mu> fs k (k - 1) * d\\<mu> fs k (k - 1)) div\n          d fs k\n     else d fs (Suc i)) =\n    (if i = k - 1\n     then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n           dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n          d_of dmu k\n     else d_of dmu (Suc i))", "using d_of i k LLL_invD_modw(7)[OF Linvmw]"], ["proof (prove)\nusing this:\n  ?i \\<le> m \\<Longrightarrow> d_of dmu ?i = d fs ?i\n  i < m\n  k < m\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n\ngoal (1 subgoal):\n 1. (if i = k - 1\n     then (d fs (Suc k) * d fs (k - 1) +\n           d\\<mu> fs k (k - 1) * d\\<mu> fs k (k - 1)) div\n          d fs k\n     else d fs (Suc i)) =\n    (if i = k - 1\n     then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n           dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n          d_of dmu k\n     else d_of dmu (Suc i))", "by auto"], ["proof (state)\nthis:\n  (if i = k - 1\n   then (d fs (Suc k) * d fs (k - 1) +\n         d\\<mu> fs k (k - 1) * d\\<mu> fs k (k - 1)) div\n        d fs k\n   else d fs (Suc i)) =\n  (if i = k - 1\n   then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n         dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n        d_of dmu k\n   else d_of dmu (Suc i))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < m \\<Longrightarrow>\n       d\\<mu> fs' i i =\n       (if i = k - 1\n        then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n              dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n             d_of dmu k\n        else d_of dmu (Suc i))", "finally"], ["proof (chain)\npicking this:\n  d\\<mu> fs' i i =\n  (if i = k - 1\n   then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n         dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n        d_of dmu k\n   else d_of dmu (Suc i))", "show \"d\\<mu> fs' i i = ?r\""], ["proof (prove)\nusing this:\n  d\\<mu> fs' i i =\n  (if i = k - 1\n   then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n         dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n        d_of dmu k\n   else d_of dmu (Suc i))\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i i =\n    (if i = k - 1\n     then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n           dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n          d_of dmu k\n     else d_of dmu (Suc i))", "."], ["proof (state)\nthis:\n  d\\<mu> fs' i i =\n  (if i = k - 1\n   then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n         dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n        d_of dmu k\n   else d_of dmu (Suc i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i2 < m \\<Longrightarrow>\n  d\\<mu> fs' ?i2 ?i2 =\n  (if ?i2 = k - 1\n   then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n         dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n        d_of dmu k\n   else d_of dmu (Suc ?i2))\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "have 04: \"lin_indep fs'\" \"length fs' = m\" \"lattice_of fs' = L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gs.lin_indpt_list (map of_int_hom.vec_hom fs') &&&\n    length fs' = m &&& lattice_of fs' = L", "using LLL_inv_wD[OF invw']"], ["proof (prove)\nusing this:\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs')\n  length (map of_int_hom.vec_hom fs') = m\n  set fs' \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow> fs' ! ?i \\<in> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?i \\<in> Rn\n  length fs' = m\n  lattice_of fs' = L\n\ngoal (1 subgoal):\n 1. gs.lin_indpt_list (map of_int_hom.vec_hom fs') &&&\n    length fs' = m &&& lattice_of fs' = L", "by auto"], ["proof (state)\nthis:\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs')\n  length fs' = m\n  lattice_of fs' = L\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "define I where \"I = {(i, j). i < m \\<and> j < i \\<and> (j = k \\<or> j = k - 1)}\""], ["proof (state)\nthis:\n  I = {(i, j). i < m \\<and> j < i \\<and> (j = k \\<or> j = k - 1)}\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "then"], ["proof (chain)\npicking this:\n  I = {(i, j). i < m \\<and> j < i \\<and> (j = k \\<or> j = k - 1)}", "have Isubs: \"I \\<subseteq> {(i,j). i < m \\<and> j < i}\""], ["proof (prove)\nusing this:\n  I = {(i, j). i < m \\<and> j < i \\<and> (j = k \\<or> j = k - 1)}\n\ngoal (1 subgoal):\n 1. I \\<subseteq> {(i, j). i < m \\<and> j < i}", "using k k0"], ["proof (prove)\nusing this:\n  I = {(i, j). i < m \\<and> j < i \\<and> (j = k \\<or> j = k - 1)}\n  k < m\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. I \\<subseteq> {(i, j). i < m \\<and> j < i}", "by auto"], ["proof (state)\nthis:\n  I \\<subseteq> {(i, j). i < m \\<and> j < i}\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "obtain fs'' where \n    05: \"lattice_of fs'' = L\" and\n    06: \"map (map_vec (\\<lambda> x. x symmod p)) fs'' = map (map_vec (\\<lambda> x. x symmod p)) fs'\" and\n    07: \"lin_indep fs''\" and\n    08: \"length fs'' = m\" and\n    09: \"(\\<forall> k < m. gso fs'' k = gso fs' k)\" and\n    10: \"(\\<forall> k \\<le> m. d fs'' k = d fs' k)\" and\n    11: \"(\\<forall> i' < m. \\<forall> j' < m. d\\<mu> fs'' i' j' = \n           (if (i',j') \\<in> I then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j')) else d\\<mu> fs' i' j'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>fs''.\n        \\<lbrakk>lattice_of fs'' = L;\n         map (map_vec (\\<lambda>x. x symmod p)) fs'' =\n         map (map_vec (\\<lambda>x. x symmod p)) fs';\n         gs.lin_indpt_list (map of_int_hom.vec_hom fs''); length fs'' = m;\n         \\<forall>k<m.\n            gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n            gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k;\n         \\<forall>k\\<le>m. d fs'' k = d fs' k;\n         \\<forall>i'<m.\n            \\<forall>j'<m.\n               d\\<mu> fs'' i' j' =\n               (if (i', j') \\<in> I\n                then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n                else d\\<mu> fs' i' j')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using mod_finite_set[OF 04(1) 04(2) Isubs 04(3) pgtz]"], ["proof (prove)\nusing this:\n  \\<exists>fs'a.\n     lattice_of fs'a = L \\<and>\n     map (map_vec (\\<lambda>x. x mod p)) fs'a =\n     map (map_vec (\\<lambda>x. x mod p)) fs' \\<and>\n     map (map_vec (\\<lambda>x. x symmod p)) fs'a =\n     map (map_vec (\\<lambda>x. x symmod p)) fs' \\<and>\n     gs.lin_indpt_list (map of_int_hom.vec_hom fs'a) \\<and>\n     length fs'a = m \\<and>\n     (\\<forall>k<m.\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'a) k =\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k) \\<and>\n     (\\<forall>k\\<le>m. d fs'a k = d fs' k) \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<m.\n            d\\<mu> fs'a i' j' =\n            (if (i', j') \\<in> I\n             then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n             else d\\<mu> fs' i' j'))\n\ngoal (1 subgoal):\n 1. (\\<And>fs''.\n        \\<lbrakk>lattice_of fs'' = L;\n         map (map_vec (\\<lambda>x. x symmod p)) fs'' =\n         map (map_vec (\\<lambda>x. x symmod p)) fs';\n         gs.lin_indpt_list (map of_int_hom.vec_hom fs''); length fs'' = m;\n         \\<forall>k<m.\n            gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n            gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k;\n         \\<forall>k\\<le>m. d fs'' k = d fs' k;\n         \\<forall>i'<m.\n            \\<forall>j'<m.\n               d\\<mu> fs'' i' j' =\n               (if (i', j') \\<in> I\n                then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n                else d\\<mu> fs' i' j')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  lattice_of fs'' = L\n  map (map_vec (\\<lambda>x. x symmod p)) fs'' =\n  map (map_vec (\\<lambda>x. x symmod p)) fs'\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs'')\n  length fs'' = m\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k\n  \\<forall>k\\<le>m. d fs'' k = d fs' k\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs'' i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n         else d\\<mu> fs' i' j')\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "have 13: \"length mfs' = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length mfs' = m", "using mfs'_def LLL_invD_modw(1)[OF Linvmw]"], ["proof (prove)\nusing this:\n  mfs' = mfs[k := mfs ! (k - 1), k - 1 := mfs ! k]\n  length mfs = m\n\ngoal (1 subgoal):\n 1. length mfs' = m", "by simp"], ["proof (state)\nthis:\n  length mfs' = m\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "(* invariant requirement *)"], ["proof (state)\nthis:\n  length mfs' = m\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "have 14: \"map (map_vec (\\<lambda> x. x symmod p)) fs'' = mfs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map (map_vec (\\<lambda>x. x symmod p)) fs'' = mfs'", "(* invariant requirement *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. map (map_vec (\\<lambda>x. x symmod p)) fs'' = mfs'", "using 06 fs'_def k k0 04(2) LLL_invD_modw(5)[OF Linvmw]"], ["proof (prove)\nusing this:\n  map (map_vec (\\<lambda>x. x symmod p)) fs'' =\n  map (map_vec (\\<lambda>x. x symmod p)) fs'\n  fs' = fs[k := fs ! (k - 1), k - 1 := fs ! k]\n  k < m\n  k \\<noteq> 0\n  length fs' = m\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n\ngoal (1 subgoal):\n 1. map (map_vec (\\<lambda>x. x symmod p)) fs'' = mfs'", "by (metis (no_types, lifting) length_list_update less_imp_diff_less map_update mfs'_def nth_map)"], ["proof (state)\nthis:\n  map (map_vec (\\<lambda>x. x symmod p)) fs'' = mfs'\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "have \"LLL_measure (k - 1) fs'' = LLL_measure (k - 1) fs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_measure (k - 1) fs'' = LLL_measure (k - 1) fs'", "using 10 LLL_measure_def logD_def D_def"], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>m. d fs'' k = d fs' k\n  LLL_measure ?i ?fs = 2 * logD ?fs + m - ?i\n  logD ?fs =\n  (if \\<alpha> = 4 / 3 then D ?fs\n   else nat \\<lfloor>log (1 / real_of_rat reduction)\n                      (real (D ?fs))\\<rfloor>)\n  D ?fs = nat (prod (d ?fs) {..<m})\n\ngoal (1 subgoal):\n 1. LLL_measure (k - 1) fs'' = LLL_measure (k - 1) fs'", "by simp"], ["proof (state)\nthis:\n  LLL_measure (k - 1) fs'' = LLL_measure (k - 1) fs'\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "then"], ["proof (chain)\npicking this:\n  LLL_measure (k - 1) fs'' = LLL_measure (k - 1) fs'", "have 15: \"LLL_measure (k - 1) fs'' < LLL_measure k fs\""], ["proof (prove)\nusing this:\n  LLL_measure (k - 1) fs'' = LLL_measure (k - 1) fs'\n\ngoal (1 subgoal):\n 1. LLL_measure (k - 1) fs'' < LLL_measure k fs", "using 02"], ["proof (prove)\nusing this:\n  LLL_measure (k - 1) fs'' = LLL_measure (k - 1) fs'\n  LLL_measure (k - 1) fs' < LLL_measure k fs\n\ngoal (1 subgoal):\n 1. LLL_measure (k - 1) fs'' < LLL_measure k fs", "by simp"], ["proof (state)\nthis:\n  LLL_measure (k - 1) fs'' < LLL_measure k fs\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "(* goal *)"], ["proof (state)\nthis:\n  LLL_measure (k - 1) fs'' < LLL_measure k fs\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "{"], ["proof (state)\nthis:\n  LLL_measure (k - 1) fs'' < LLL_measure k fs\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "fix i' j'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "assume i'j': \"i'<m\" \"j'<i'\" \n      and neq: \"j' \\<noteq> k\" \"j' \\<noteq> k - 1\""], ["proof (state)\nthis:\n  i' < m\n  j' < i'\n  j' \\<noteq> k\n  j' \\<noteq> k - 1\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "hence j'k: \"j' \\<noteq> k\" \"Suc j' \\<noteq> k\""], ["proof (prove)\nusing this:\n  i' < m\n  j' < i'\n  j' \\<noteq> k\n  j' \\<noteq> k - 1\n\ngoal (1 subgoal):\n 1. j' \\<noteq> k &&& Suc j' \\<noteq> k", "using k0"], ["proof (prove)\nusing this:\n  i' < m\n  j' < i'\n  j' \\<noteq> k\n  j' \\<noteq> k - 1\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. j' \\<noteq> k &&& Suc j' \\<noteq> k", "by auto"], ["proof (state)\nthis:\n  j' \\<noteq> k\n  Suc j' \\<noteq> k\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "hence \"d fs'' j' = d fs j'\" \"d fs'' (Suc j') = d fs (Suc j')\""], ["proof (prove)\nusing this:\n  j' \\<noteq> k\n  Suc j' \\<noteq> k\n\ngoal (1 subgoal):\n 1. d fs'' j' = d fs j' &&& d fs'' (Suc j') = d fs (Suc j')", "using \\<open>k < m\\<close> i'j' k0\n        10[rule_format, of j'] 032[rule_format, of j']\n        10[rule_format, of \"Suc j'\"] 032[rule_format, of \"Suc j'\"]"], ["proof (prove)\nusing this:\n  j' \\<noteq> k\n  Suc j' \\<noteq> k\n  k < m\n  i' < m\n  j' < i'\n  k \\<noteq> 0\n  j' \\<le> m \\<Longrightarrow> d fs'' j' = d fs' j'\n  j' \\<le> m \\<Longrightarrow>\n  rat_of_int (d fs' j') =\n  (if j' = k\n   then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                    (k - 1)\\<parallel>\\<^sup>2 /\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    (k - 1)\\<parallel>\\<^sup>2 *\n        rat_of_int (d fs k)\n   else rat_of_int (d fs j'))\n  Suc j' \\<le> m \\<Longrightarrow> d fs'' (Suc j') = d fs' (Suc j')\n  Suc j' \\<le> m \\<Longrightarrow>\n  rat_of_int (d fs' (Suc j')) =\n  (if Suc j' = k\n   then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                    (k - 1)\\<parallel>\\<^sup>2 /\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    (k - 1)\\<parallel>\\<^sup>2 *\n        rat_of_int (d fs k)\n   else rat_of_int (d fs (Suc j')))\n\ngoal (1 subgoal):\n 1. d fs'' j' = d fs j' &&& d fs'' (Suc j') = d fs (Suc j')", "by auto"], ["proof (state)\nthis:\n  d fs'' j' = d fs j'\n  d fs'' (Suc j') = d fs (Suc j')\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?i'4 < m; ?j'4 < ?i'4; ?j'4 \\<noteq> k;\n   ?j'4 \\<noteq> k - 1\\<rbrakk>\n  \\<Longrightarrow> d fs'' ?j'4 = d fs ?j'4\n  \\<lbrakk>?i'4 < m; ?j'4 < ?i'4; ?j'4 \\<noteq> k;\n   ?j'4 \\<noteq> k - 1\\<rbrakk>\n  \\<Longrightarrow> d fs'' (Suc ?j'4) = d fs (Suc ?j'4)\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "note d_id = this"], ["proof (state)\nthis:\n  \\<lbrakk>?i'4 < m; ?j'4 < ?i'4; ?j'4 \\<noteq> k;\n   ?j'4 \\<noteq> k - 1\\<rbrakk>\n  \\<Longrightarrow> d fs'' ?j'4 = d fs ?j'4\n  \\<lbrakk>?i'4 < m; ?j'4 < ?i'4; ?j'4 \\<noteq> k;\n   ?j'4 \\<noteq> k - 1\\<rbrakk>\n  \\<Longrightarrow> d fs'' (Suc ?j'4) = d fs (Suc ?j'4)\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "have 16: \"\\<forall>i'<m. \\<forall>j'<i'. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "(* invariant requirement *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "fix i' j'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "assume i'j': \"i'<m\" \"j'<i'\""], ["proof (state)\nthis:\n  i' < m\n  j' < i'\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "have \"\\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "proof (cases \"(i',j') \\<in> I\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (i', j') \\<in> I \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. (i', j') \\<notin> I \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "case True"], ["proof (state)\nthis:\n  (i', j') \\<in> I\n\ngoal (2 subgoals):\n 1. (i', j') \\<in> I \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. (i', j') \\<notin> I \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "define pdd where \"pdd = (p * d fs' j' * d fs' (Suc j'))\""], ["proof (state)\nthis:\n  pdd = p * d fs' j' * d fs' (Suc j')\n\ngoal (2 subgoals):\n 1. (i', j') \\<in> I \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. (i', j') \\<notin> I \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "have pdd_pos: \"pdd > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < pdd", "using pgtz i'j' LLL_d_pos[OF invw'] pdd_def"], ["proof (prove)\nusing this:\n  0 < p\n  i' < m\n  j' < i'\n  ?k \\<le> m \\<Longrightarrow> 0 < d fs' ?k\n  pdd = p * d fs' j' * d fs' (Suc j')\n\ngoal (1 subgoal):\n 1. 0 < pdd", "by simp"], ["proof (state)\nthis:\n  0 < pdd\n\ngoal (2 subgoals):\n 1. (i', j') \\<in> I \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. (i', j') \\<notin> I \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "have \"d\\<mu> fs'' i' j' = d\\<mu> fs' i' j' symmod pdd\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = d\\<mu> fs' i' j' symmod pdd", "using True 11 i'j' pdd_def"], ["proof (prove)\nusing this:\n  (i', j') \\<in> I\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs'' i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n         else d\\<mu> fs' i' j')\n  i' < m\n  j' < i'\n  pdd = p * d fs' j' * d fs' (Suc j')\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = d\\<mu> fs' i' j' symmod pdd", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = d\\<mu> fs' i' j' symmod pdd\n\ngoal (2 subgoals):\n 1. (i', j') \\<in> I \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. (i', j') \\<notin> I \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  d\\<mu> fs'' i' j' = d\\<mu> fs' i' j' symmod pdd", "have \"\\<bar>d\\<mu> fs'' i' j'\\<bar> < pdd\""], ["proof (prove)\nusing this:\n  d\\<mu> fs'' i' j' = d\\<mu> fs' i' j' symmod pdd\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < pdd", "using True 11 i'j' pdd_pos sym_mod_abs"], ["proof (prove)\nusing this:\n  d\\<mu> fs'' i' j' = d\\<mu> fs' i' j' symmod pdd\n  (i', j') \\<in> I\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs'' i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n         else d\\<mu> fs' i' j')\n  i' < m\n  j' < i'\n  0 < pdd\n  0 < ?y \\<Longrightarrow> \\<bar>?x symmod ?y\\<bar> < ?y\n  1 \\<le> ?y \\<Longrightarrow> \\<bar>?x symmod ?y\\<bar> \\<le> ?y div 2\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < pdd", "by simp"], ["proof (state)\nthis:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < pdd\n\ngoal (2 subgoals):\n 1. (i', j') \\<in> I \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. (i', j') \\<notin> I \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < pdd", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < pdd\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "unfolding pdd_def"], ["proof (prove)\nusing this:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs' j' * d fs' (Suc j')\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "using 10 i'j'"], ["proof (prove)\nusing this:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs' j' * d fs' (Suc j')\n  \\<forall>k\\<le>m. d fs'' k = d fs' k\n  i' < m\n  j' < i'\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "by simp"], ["proof (state)\nthis:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n\ngoal (1 subgoal):\n 1. (i', j') \\<notin> I \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (i', j') \\<notin> I \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "case False"], ["proof (state)\nthis:\n  (i', j') \\<notin> I\n\ngoal (1 subgoal):\n 1. (i', j') \\<notin> I \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "from False[unfolded I_def] i'j'"], ["proof (chain)\npicking this:\n  (i', j')\n  \\<notin> {(i, j). i < m \\<and> j < i \\<and> (j = k \\<or> j = k - 1)}\n  i' < m\n  j' < i'", "have neg: \"j' \\<noteq> k\" \"j' \\<noteq> k - 1\""], ["proof (prove)\nusing this:\n  (i', j')\n  \\<notin> {(i, j). i < m \\<and> j < i \\<and> (j = k \\<or> j = k - 1)}\n  i' < m\n  j' < i'\n\ngoal (1 subgoal):\n 1. j' \\<noteq> k &&& j' \\<noteq> k - 1", "by auto"], ["proof (state)\nthis:\n  j' \\<noteq> k\n  j' \\<noteq> k - 1\n\ngoal (1 subgoal):\n 1. (i', j') \\<notin> I \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "consider (1) \"i' = k - 1 \\<or> i' = k\" | (2) \"\\<not> (i' = k - 1 \\<or> i' = k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i' = k - 1 \\<or> i' = k \\<Longrightarrow> thesis;\n     \\<not> (i' = k - 1 \\<or> i' = k) \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using False i'j'"], ["proof (prove)\nusing this:\n  (i', j') \\<notin> I\n  i' < m\n  j' < i'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i' = k - 1 \\<or> i' = k \\<Longrightarrow> thesis;\n     \\<not> (i' = k - 1 \\<or> i' = k) \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding I_def"], ["proof (prove)\nusing this:\n  (i', j')\n  \\<notin> {(i, j). i < m \\<and> j < i \\<and> (j = k \\<or> j = k - 1)}\n  i' < m\n  j' < i'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i' = k - 1 \\<or> i' = k \\<Longrightarrow> thesis;\n     \\<not> (i' = k - 1 \\<or> i' = k) \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by linarith"], ["proof (state)\nthis:\n  \\<lbrakk>i' = k - 1 \\<or> i' = k \\<Longrightarrow> ?thesis2;\n   \\<not> (i' = k - 1 \\<or> i' = k) \\<Longrightarrow> ?thesis2\\<rbrakk>\n  \\<Longrightarrow> ?thesis2\n\ngoal (1 subgoal):\n 1. (i', j') \\<notin> I \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' = k - 1 \\<or> i' = k \\<Longrightarrow> ?thesis2;\n   \\<not> (i' = k - 1 \\<or> i' = k) \\<Longrightarrow> ?thesis2\\<rbrakk>\n  \\<Longrightarrow> ?thesis2\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. i' = k - 1 \\<or> i' = k \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. \\<not> (i' = k - 1 \\<or> i' = k) \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "case **: 1"], ["proof (state)\nthis:\n  i' = k - 1 \\<or> i' = k\n\ngoal (2 subgoals):\n 1. i' = k - 1 \\<or> i' = k \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. \\<not> (i' = k - 1 \\<or> i' = k) \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "let ?i'' = \"if i' = k - 1 then k else k -1\""], ["proof (state)\ngoal (2 subgoals):\n 1. i' = k - 1 \\<or> i' = k \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. \\<not> (i' = k - 1 \\<or> i' = k) \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "from ** neg i'j'"], ["proof (chain)\npicking this:\n  i' = k - 1 \\<or> i' = k\n  j' \\<noteq> k\n  j' \\<noteq> k - 1\n  i' < m\n  j' < i'", "have i'': \"?i'' < m\" \"j' < ?i''\""], ["proof (prove)\nusing this:\n  i' = k - 1 \\<or> i' = k\n  j' \\<noteq> k\n  j' \\<noteq> k - 1\n  i' < m\n  j' < i'\n\ngoal (1 subgoal):\n 1. (if i' = k - 1 then k else k - 1) < m &&&\n    j' < (if i' = k - 1 then k else k - 1)", "using k0 k"], ["proof (prove)\nusing this:\n  i' = k - 1 \\<or> i' = k\n  j' \\<noteq> k\n  j' \\<noteq> k - 1\n  i' < m\n  j' < i'\n  k \\<noteq> 0\n  k < m\n\ngoal (1 subgoal):\n 1. (if i' = k - 1 then k else k - 1) < m &&&\n    j' < (if i' = k - 1 then k else k - 1)", "by auto"], ["proof (state)\nthis:\n  (if i' = k - 1 then k else k - 1) < m\n  j' < (if i' = k - 1 then k else k - 1)\n\ngoal (2 subgoals):\n 1. i' = k - 1 \\<or> i' = k \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. \\<not> (i' = k - 1 \\<or> i' = k) \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "have \"d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'", "using 11 False i'j'"], ["proof (prove)\nusing this:\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs'' i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n         else d\\<mu> fs' i' j')\n  (i', j') \\<notin> I\n  i' < m\n  j' < i'\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'\n\ngoal (2 subgoals):\n 1. i' = k - 1 \\<or> i' = k \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. \\<not> (i' = k - 1 \\<or> i' = k) \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "also"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'\n\ngoal (2 subgoals):\n 1. i' = k - 1 \\<or> i' = k \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. \\<not> (i' = k - 1 \\<or> i' = k) \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "have \"\\<dots> = d\\<mu> fs ?i'' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = d\\<mu> fs (if i' = k - 1 then k else k - 1) j'", "unfolding 03[OF \\<open>i' < m\\<close> \\<open>j' < i'\\<close>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i' = k - 1 then d\\<mu> fs k j'\n     else if i' = k \\<and> j' \\<noteq> k - 1 then d\\<mu> fs (k - 1) j'\n          else if k < i' \\<and> j' = k\n               then (d fs (Suc k) * d\\<mu> fs i' (k - 1) -\n                     d\\<mu> fs k (k - 1) * d\\<mu> fs i' j') div\n                    d fs k\n               else if k < i' \\<and> j' = k - 1\n                    then (d\\<mu> fs k (k - 1) * d\\<mu> fs i' j' +\n                          d\\<mu> fs i' k * d fs (k - 1)) div\n                         d fs k\n                    else d\\<mu> fs i' j') =\n    d\\<mu> fs (if i' = k - 1 then k else k - 1) j'", "using ** neg"], ["proof (prove)\nusing this:\n  i' = k - 1 \\<or> i' = k\n  j' \\<noteq> k\n  j' \\<noteq> k - 1\n\ngoal (1 subgoal):\n 1. (if i' = k - 1 then d\\<mu> fs k j'\n     else if i' = k \\<and> j' \\<noteq> k - 1 then d\\<mu> fs (k - 1) j'\n          else if k < i' \\<and> j' = k\n               then (d fs (Suc k) * d\\<mu> fs i' (k - 1) -\n                     d\\<mu> fs k (k - 1) * d\\<mu> fs i' j') div\n                    d fs k\n               else if k < i' \\<and> j' = k - 1\n                    then (d\\<mu> fs k (k - 1) * d\\<mu> fs i' j' +\n                          d\\<mu> fs i' k * d fs (k - 1)) div\n                         d fs k\n                    else d\\<mu> fs i' j') =\n    d\\<mu> fs (if i' = k - 1 then k else k - 1) j'", "by auto"], ["proof (state)\nthis:\n  d\\<mu> fs' i' j' = d\\<mu> fs (if i' = k - 1 then k else k - 1) j'\n\ngoal (2 subgoals):\n 1. i' = k - 1 \\<or> i' = k \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n 2. \\<not> (i' = k - 1 \\<or> i' = k) \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "finally"], ["proof (chain)\npicking this:\n  d\\<mu> fs'' i' j' = d\\<mu> fs (if i' = k - 1 then k else k - 1) j'", "show ?thesis"], ["proof (prove)\nusing this:\n  d\\<mu> fs'' i' j' = d\\<mu> fs (if i' = k - 1 then k else k - 1) j'\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "using LLL_invD_modw(6)[OF Linvmw, rule_format, OF i'']"], ["proof (prove)\nusing this:\n  d\\<mu> fs'' i' j' = d\\<mu> fs (if i' = k - 1 then k else k - 1) j'\n  \\<bar>d\\<mu> fs (if i' = k - 1 then k else k - 1) j'\\<bar>\n  < p * d fs j' * d fs (Suc j')\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "unfolding d_id[OF i'j' neg]"], ["proof (prove)\nusing this:\n  d\\<mu> fs'' i' j' = d\\<mu> fs (if i' = k - 1 then k else k - 1) j'\n  \\<bar>d\\<mu> fs (if i' = k - 1 then k else k - 1) j'\\<bar>\n  < p * d fs j' * d fs (Suc j')\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs j' * d fs (Suc j')", "by auto"], ["proof (state)\nthis:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n\ngoal (1 subgoal):\n 1. \\<not> (i' = k - 1 \\<or> i' = k) \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (i' = k - 1 \\<or> i' = k) \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "case **: 2"], ["proof (state)\nthis:\n  \\<not> (i' = k - 1 \\<or> i' = k)\n\ngoal (1 subgoal):\n 1. \\<not> (i' = k - 1 \\<or> i' = k) \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "hence neq: \"j' \\<noteq> k\" \"j' \\<noteq> k - 1\""], ["proof (prove)\nusing this:\n  \\<not> (i' = k - 1 \\<or> i' = k)\n\ngoal (1 subgoal):\n 1. j' \\<noteq> k &&& j' \\<noteq> k - 1", "using False k k0 i'j'"], ["proof (prove)\nusing this:\n  \\<not> (i' = k - 1 \\<or> i' = k)\n  (i', j') \\<notin> I\n  k < m\n  k \\<noteq> 0\n  i' < m\n  j' < i'\n\ngoal (1 subgoal):\n 1. j' \\<noteq> k &&& j' \\<noteq> k - 1", "unfolding I_def"], ["proof (prove)\nusing this:\n  \\<not> (i' = k - 1 \\<or> i' = k)\n  (i', j')\n  \\<notin> {(i, j). i < m \\<and> j < i \\<and> (j = k \\<or> j = k - 1)}\n  k < m\n  k \\<noteq> 0\n  i' < m\n  j' < i'\n\ngoal (1 subgoal):\n 1. j' \\<noteq> k &&& j' \\<noteq> k - 1", "by auto"], ["proof (state)\nthis:\n  j' \\<noteq> k\n  j' \\<noteq> k - 1\n\ngoal (1 subgoal):\n 1. \\<not> (i' = k - 1 \\<or> i' = k) \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "have \"d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'", "using 11 False i'j'"], ["proof (prove)\nusing this:\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs'' i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n         else d\\<mu> fs' i' j')\n  (i', j') \\<notin> I\n  i' < m\n  j' < i'\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'\n\ngoal (1 subgoal):\n 1. \\<not> (i' = k - 1 \\<or> i' = k) \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "also"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'\n\ngoal (1 subgoal):\n 1. \\<not> (i' = k - 1 \\<or> i' = k) \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "have \"\\<dots> = d\\<mu> fs i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = d\\<mu> fs i' j'", "unfolding 03[OF \\<open>i' < m\\<close> \\<open>j' < i'\\<close>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i' = k - 1 then d\\<mu> fs k j'\n     else if i' = k \\<and> j' \\<noteq> k - 1 then d\\<mu> fs (k - 1) j'\n          else if k < i' \\<and> j' = k\n               then (d fs (Suc k) * d\\<mu> fs i' (k - 1) -\n                     d\\<mu> fs k (k - 1) * d\\<mu> fs i' j') div\n                    d fs k\n               else if k < i' \\<and> j' = k - 1\n                    then (d\\<mu> fs k (k - 1) * d\\<mu> fs i' j' +\n                          d\\<mu> fs i' k * d fs (k - 1)) div\n                         d fs k\n                    else d\\<mu> fs i' j') =\n    d\\<mu> fs i' j'", "using ** neq"], ["proof (prove)\nusing this:\n  \\<not> (i' = k - 1 \\<or> i' = k)\n  j' \\<noteq> k\n  j' \\<noteq> k - 1\n\ngoal (1 subgoal):\n 1. (if i' = k - 1 then d\\<mu> fs k j'\n     else if i' = k \\<and> j' \\<noteq> k - 1 then d\\<mu> fs (k - 1) j'\n          else if k < i' \\<and> j' = k\n               then (d fs (Suc k) * d\\<mu> fs i' (k - 1) -\n                     d\\<mu> fs k (k - 1) * d\\<mu> fs i' j') div\n                    d fs k\n               else if k < i' \\<and> j' = k - 1\n                    then (d\\<mu> fs k (k - 1) * d\\<mu> fs i' j' +\n                          d\\<mu> fs i' k * d fs (k - 1)) div\n                         d fs k\n                    else d\\<mu> fs i' j') =\n    d\\<mu> fs i' j'", "by auto"], ["proof (state)\nthis:\n  d\\<mu> fs' i' j' = d\\<mu> fs i' j'\n\ngoal (1 subgoal):\n 1. \\<not> (i' = k - 1 \\<or> i' = k) \\<Longrightarrow>\n    \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "finally"], ["proof (chain)\npicking this:\n  d\\<mu> fs'' i' j' = d\\<mu> fs i' j'", "show ?thesis"], ["proof (prove)\nusing this:\n  d\\<mu> fs'' i' j' = d\\<mu> fs i' j'\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "using LLL_invD_modw(6)[OF Linvmw, rule_format, OF i'j']"], ["proof (prove)\nusing this:\n  d\\<mu> fs'' i' j' = d\\<mu> fs i' j'\n  \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "using d_id[OF i'j' neq]"], ["proof (prove)\nusing this:\n  d\\<mu> fs'' i' j' = d\\<mu> fs i' j'\n  \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  d fs'' j' = d fs j'\n  d fs'' (Suc j') = d fs (Suc j')\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "by auto"], ["proof (state)\nthis:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?i'4 < m; ?j'4 < ?i'4\\<rbrakk>\n  \\<Longrightarrow> \\<bar>d\\<mu> fs'' ?i'4 ?j'4\\<bar>\n                    < p * d fs'' ?j'4 * d fs'' (Suc ?j'4)\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i'4 < m; ?j'4 < ?i'4\\<rbrakk>\n  \\<Longrightarrow> \\<bar>d\\<mu> fs'' ?i'4 ?j'4\\<bar>\n                    < p * d fs'' ?j'4 * d fs'' (Suc ?j'4)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i'4 < m; ?j'4 < ?i'4\\<rbrakk>\n  \\<Longrightarrow> \\<bar>d\\<mu> fs'' ?i'4 ?j'4\\<bar>\n                    < p * d fs'' ?j'4 * d fs'' (Suc ?j'4)\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')", "by simp"], ["proof (state)\nthis:\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "have 17: \"\\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "(* invariant requirement *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "fix i' j'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "assume i'j': \"i'<m\" \"j'<i'\""], ["proof (state)\nthis:\n  i' < m\n  j' < i'\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "have d'dmu': \"\\<forall>j' < m. d fs' (Suc j') = dmu' $$ (j', j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j'<m. d fs' (Suc j') = dmu' $$ (j', j')", "using dd\\<mu> dmu'_def 033"], ["proof (prove)\nusing this:\n  ?i < m \\<Longrightarrow> d ?fs (Suc ?i) = d\\<mu> ?fs ?i ?i\n  dmu' =\n  mat m m\n   (\\<lambda>(i, j).\n       if j < i\n       then if i = k - 1 then dmu $$ (k, j)\n            else if i = k \\<and> j \\<noteq> k - 1 then dmu $$ (k - 1, j)\n                 else if k < i \\<and> j = k\n                      then (d_of dmu (Suc k) * dmu $$ (i, k - 1) -\n                            dmu $$ (k, k - 1) * dmu $$ (i, j)) div\n                           d_of dmu k\n                      else if k < i \\<and> j = k - 1\n                           then (dmu $$ (k, k - 1) * dmu $$ (i, j) +\n                                 dmu $$ (i, k) * d_of dmu (k - 1)) div\n                                d_of dmu k\n                           else dmu $$ (i, j)\n       else if i = j\n            then if i = k - 1\n                 then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n                       dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n                      d_of dmu k\n                 else d_of dmu (Suc i)\n            else dmu $$ (i, j))\n  ?i2 < m \\<Longrightarrow>\n  d\\<mu> fs' ?i2 ?i2 =\n  (if ?i2 = k - 1\n   then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n         dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n        d_of dmu k\n   else d_of dmu (Suc ?i2))\n\ngoal (1 subgoal):\n 1. \\<forall>j'<m. d fs' (Suc j') = dmu' $$ (j', j')", "by simp"], ["proof (state)\nthis:\n  \\<forall>j'<m. d fs' (Suc j') = dmu' $$ (j', j')\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "have eq': \"d\\<mu> fs' i' j' = dmu' $$ (i', j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = dmu' $$ (i', j')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = dmu' $$ (i', j')", "have t00: \"d\\<mu> fs k j' = dmu $$ (k, j')\" and\n          t01: \"d\\<mu> fs (k - 1) j' =  dmu $$ (k - 1, j')\" and\n          t04: \"d\\<mu> fs k (k - 1) = dmu $$ (k, k - 1)\" and\n          t05: \"d\\<mu> fs i' k = dmu $$ (i', k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d\\<mu> fs k j' = dmu $$ (k, j') &&&\n     d\\<mu> fs (k - 1) j' = dmu $$ (k - 1, j')) &&&\n    d\\<mu> fs k (k - 1) = dmu $$ (k, k - 1) &&&\n    d\\<mu> fs i' k = dmu $$ (i', k)", "using LLL_invD_modw(7)[OF Linvmw] i'j' k dd\\<mu> k0"], ["proof (prove)\nusing this:\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  i' < m\n  j' < i'\n  k < m\n  ?i < m \\<Longrightarrow> d ?fs (Suc ?i) = d\\<mu> ?fs ?i ?i\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (d\\<mu> fs k j' = dmu $$ (k, j') &&&\n     d\\<mu> fs (k - 1) j' = dmu $$ (k - 1, j')) &&&\n    d\\<mu> fs k (k - 1) = dmu $$ (k, k - 1) &&&\n    d\\<mu> fs i' k = dmu $$ (i', k)", "by auto"], ["proof (state)\nthis:\n  d\\<mu> fs k j' = dmu $$ (k, j')\n  d\\<mu> fs (k - 1) j' = dmu $$ (k - 1, j')\n  d\\<mu> fs k (k - 1) = dmu $$ (k, k - 1)\n  d\\<mu> fs i' k = dmu $$ (i', k)\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = dmu' $$ (i', j')", "have t03: \"d fs k = d\\<mu> fs (k-1) (k-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d fs k = d\\<mu> fs (k - 1) (k - 1)", "using k0 k"], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n  k < m\n\ngoal (1 subgoal):\n 1. d fs k = d\\<mu> fs (k - 1) (k - 1)", "by (metis LLL.dd\\<mu> Suc_diff_1 lessI not_gr_zero)"], ["proof (state)\nthis:\n  d fs k = d\\<mu> fs (k - 1) (k - 1)\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = dmu' $$ (i', j')", "have t06: \"d fs (k - 1) = (d_of dmu (k-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d fs (k - 1) = d_of dmu (k - 1)", "using d_of k"], ["proof (prove)\nusing this:\n  ?i \\<le> m \\<Longrightarrow> d_of dmu ?i = d fs ?i\n  k < m\n\ngoal (1 subgoal):\n 1. d fs (k - 1) = d_of dmu (k - 1)", "by auto"], ["proof (state)\nthis:\n  d fs (k - 1) = d_of dmu (k - 1)\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = dmu' $$ (i', j')", "have t07: \"d fs k = (d_of dmu k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d fs k = d_of dmu k", "using d_of k"], ["proof (prove)\nusing this:\n  ?i \\<le> m \\<Longrightarrow> d_of dmu ?i = d fs ?i\n  k < m\n\ngoal (1 subgoal):\n 1. d fs k = d_of dmu k", "by auto"], ["proof (state)\nthis:\n  d fs k = d_of dmu k\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = dmu' $$ (i', j')", "have j': \"j' < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j' < m", "using i'j'"], ["proof (prove)\nusing this:\n  i' < m\n  j' < i'\n\ngoal (1 subgoal):\n 1. j' < m", "by simp"], ["proof (state)\nthis:\n  j' < m\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = dmu' $$ (i', j')", "have \"d\\<mu> fs' i' j' = (if i' = k - 1 then \n                   dmu $$ (k, j')\n                else if i' = k \\<and> j' \\<noteq> k - 1 then \n                   dmu $$ (k - 1, j')\n                else if i' > k \\<and> j' = k then\n                   (dmu $$ (k, k) * dmu $$ (i', k - 1) - dmu $$ (k, k - 1) * dmu $$ (i', j')) div (d_of dmu k)\n                else if i' > k \\<and> j' = k - 1 then \n                   (dmu $$ (k, k - 1) * dmu $$ (i', j') + dmu $$ (i', k) * d fs (k - 1)) div (d_of dmu k)\n                else dmu $$ (i', j'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' =\n    (if i' = k - 1 then dmu $$ (k, j')\n     else if i' = k \\<and> j' \\<noteq> k - 1 then dmu $$ (k - 1, j')\n          else if k < i' \\<and> j' = k\n               then (dmu $$ (k, k) * dmu $$ (i', k - 1) -\n                     dmu $$ (k, k - 1) * dmu $$ (i', j')) div\n                    d_of dmu k\n               else if k < i' \\<and> j' = k - 1\n                    then (dmu $$ (k, k - 1) * dmu $$ (i', j') +\n                          dmu $$ (i', k) * d fs (k - 1)) div\n                         d_of dmu k\n                    else dmu $$ (i', j'))", "using dd\\<mu> k t00 t01 t03 LLL_invD_modw(7)[OF Linvmw] k i'j' j' 03 t07"], ["proof (prove)\nusing this:\n  ?i < m \\<Longrightarrow> d ?fs (Suc ?i) = d\\<mu> ?fs ?i ?i\n  k < m\n  d\\<mu> fs k j' = dmu $$ (k, j')\n  d\\<mu> fs (k - 1) j' = dmu $$ (k - 1, j')\n  d fs k = d\\<mu> fs (k - 1) (k - 1)\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  k < m\n  i' < m\n  j' < i'\n  j' < m\n  \\<lbrakk>?i2 < m; ?j2 < ?i2\\<rbrakk>\n  \\<Longrightarrow> d\\<mu> fs' ?i2 ?j2 =\n                    (if ?i2 = k - 1 then d\\<mu> fs k ?j2\n                     else if ?i2 = k \\<and> ?j2 \\<noteq> k - 1\n                          then d\\<mu> fs (k - 1) ?j2\n                          else if k < ?i2 \\<and> ?j2 = k\n                               then (d fs (Suc k) * d\\<mu> fs ?i2 (k - 1) -\n                                     d\\<mu> fs k (k - 1) *\n                                     d\\<mu> fs ?i2 ?j2) div\n                                    d fs k\n                               else if k < ?i2 \\<and> ?j2 = k - 1\n                                    then (d\\<mu> fs k (k - 1) *\n    d\\<mu> fs ?i2 ?j2 +\n    d\\<mu> fs ?i2 k * d fs (k - 1)) div\n   d fs k\n                                    else d\\<mu> fs ?i2 ?j2)\n  d fs k = d_of dmu k\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' =\n    (if i' = k - 1 then dmu $$ (k, j')\n     else if i' = k \\<and> j' \\<noteq> k - 1 then dmu $$ (k - 1, j')\n          else if k < i' \\<and> j' = k\n               then (dmu $$ (k, k) * dmu $$ (i', k - 1) -\n                     dmu $$ (k, k - 1) * dmu $$ (i', j')) div\n                    d_of dmu k\n               else if k < i' \\<and> j' = k - 1\n                    then (dmu $$ (k, k - 1) * dmu $$ (i', j') +\n                          dmu $$ (i', k) * d fs (k - 1)) div\n                         d_of dmu k\n                    else dmu $$ (i', j'))", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs' i' j' =\n  (if i' = k - 1 then dmu $$ (k, j')\n   else if i' = k \\<and> j' \\<noteq> k - 1 then dmu $$ (k - 1, j')\n        else if k < i' \\<and> j' = k\n             then (dmu $$ (k, k) * dmu $$ (i', k - 1) -\n                   dmu $$ (k, k - 1) * dmu $$ (i', j')) div\n                  d_of dmu k\n             else if k < i' \\<and> j' = k - 1\n                  then (dmu $$ (k, k - 1) * dmu $$ (i', j') +\n                        dmu $$ (i', k) * d fs (k - 1)) div\n                       d_of dmu k\n                  else dmu $$ (i', j'))\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = dmu' $$ (i', j')", "then"], ["proof (chain)\npicking this:\n  d\\<mu> fs' i' j' =\n  (if i' = k - 1 then dmu $$ (k, j')\n   else if i' = k \\<and> j' \\<noteq> k - 1 then dmu $$ (k - 1, j')\n        else if k < i' \\<and> j' = k\n             then (dmu $$ (k, k) * dmu $$ (i', k - 1) -\n                   dmu $$ (k, k - 1) * dmu $$ (i', j')) div\n                  d_of dmu k\n             else if k < i' \\<and> j' = k - 1\n                  then (dmu $$ (k, k - 1) * dmu $$ (i', j') +\n                        dmu $$ (i', k) * d fs (k - 1)) div\n                       d_of dmu k\n                  else dmu $$ (i', j'))", "show ?thesis"], ["proof (prove)\nusing this:\n  d\\<mu> fs' i' j' =\n  (if i' = k - 1 then dmu $$ (k, j')\n   else if i' = k \\<and> j' \\<noteq> k - 1 then dmu $$ (k - 1, j')\n        else if k < i' \\<and> j' = k\n             then (dmu $$ (k, k) * dmu $$ (i', k - 1) -\n                   dmu $$ (k, k - 1) * dmu $$ (i', j')) div\n                  d_of dmu k\n             else if k < i' \\<and> j' = k - 1\n                  then (dmu $$ (k, k - 1) * dmu $$ (i', j') +\n                        dmu $$ (i', k) * d fs (k - 1)) div\n                       d_of dmu k\n                  else dmu $$ (i', j'))\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = dmu' $$ (i', j')", "using dmu'_def i'j' j' t06 t07"], ["proof (prove)\nusing this:\n  d\\<mu> fs' i' j' =\n  (if i' = k - 1 then dmu $$ (k, j')\n   else if i' = k \\<and> j' \\<noteq> k - 1 then dmu $$ (k - 1, j')\n        else if k < i' \\<and> j' = k\n             then (dmu $$ (k, k) * dmu $$ (i', k - 1) -\n                   dmu $$ (k, k - 1) * dmu $$ (i', j')) div\n                  d_of dmu k\n             else if k < i' \\<and> j' = k - 1\n                  then (dmu $$ (k, k - 1) * dmu $$ (i', j') +\n                        dmu $$ (i', k) * d fs (k - 1)) div\n                       d_of dmu k\n                  else dmu $$ (i', j'))\n  dmu' =\n  mat m m\n   (\\<lambda>(i, j).\n       if j < i\n       then if i = k - 1 then dmu $$ (k, j)\n            else if i = k \\<and> j \\<noteq> k - 1 then dmu $$ (k - 1, j)\n                 else if k < i \\<and> j = k\n                      then (d_of dmu (Suc k) * dmu $$ (i, k - 1) -\n                            dmu $$ (k, k - 1) * dmu $$ (i, j)) div\n                           d_of dmu k\n                      else if k < i \\<and> j = k - 1\n                           then (dmu $$ (k, k - 1) * dmu $$ (i, j) +\n                                 dmu $$ (i, k) * d_of dmu (k - 1)) div\n                                d_of dmu k\n                           else dmu $$ (i, j)\n       else if i = j\n            then if i = k - 1\n                 then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n                       dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n                      d_of dmu k\n                 else d_of dmu (Suc i)\n            else dmu $$ (i, j))\n  i' < m\n  j' < i'\n  j' < m\n  d fs (k - 1) = d_of dmu (k - 1)\n  d fs k = d_of dmu k\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = dmu' $$ (i', j')", "by (simp add: d_of_def)"], ["proof (state)\nthis:\n  d\\<mu> fs' i' j' = dmu' $$ (i', j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  d\\<mu> fs' i' j' = dmu' $$ (i', j')\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "have \"d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "proof (cases \"(i',j') \\<in> I\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (i', j') \\<in> I \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')\n 2. (i', j') \\<notin> I \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "case i'j'I: True"], ["proof (state)\nthis:\n  (i', j') \\<in> I\n\ngoal (2 subgoals):\n 1. (i', j') \\<in> I \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')\n 2. (i', j') \\<notin> I \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "have j': \"j' < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j' < m", "using i'j'"], ["proof (prove)\nusing this:\n  i' < m\n  j' < i'\n\ngoal (1 subgoal):\n 1. j' < m", "by simp"], ["proof (state)\nthis:\n  j' < m\n\ngoal (2 subgoals):\n 1. (i', j') \\<in> I \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')\n 2. (i', j') \\<notin> I \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "have \"dmu'_mod $$ (i',j') = dmu' $$ (i',j') \n                  symmod (p * (d_of dmu' j') * (d_of dmu' (Suc j')))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dmu'_mod $$ (i', j') =\n    dmu' $$ (i', j') symmod (p * d_of dmu' j' * d_of dmu' (Suc j'))", "using dmu'_mod_def i'j' i'j'I I_def"], ["proof (prove)\nusing this:\n  dmu'_mod =\n  mat m m\n   (\\<lambda>(i, j).\n       if j < i \\<and> (j = k \\<or> j = k - 1)\n       then dmu' $$ (i, j) symmod (p * d_of dmu' j * d_of dmu' (Suc j))\n       else dmu' $$ (i, j))\n  i' < m\n  j' < i'\n  (i', j') \\<in> I\n  I = {(i, j). i < m \\<and> j < i \\<and> (j = k \\<or> j = k - 1)}\n\ngoal (1 subgoal):\n 1. dmu'_mod $$ (i', j') =\n    dmu' $$ (i', j') symmod (p * d_of dmu' j' * d_of dmu' (Suc j'))", "by simp"], ["proof (state)\nthis:\n  dmu'_mod $$ (i', j') =\n  dmu' $$ (i', j') symmod (p * d_of dmu' j' * d_of dmu' (Suc j'))\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "also"], ["proof (state)\nthis:\n  dmu'_mod $$ (i', j') =\n  dmu' $$ (i', j') symmod (p * d_of dmu' j' * d_of dmu' (Suc j'))\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "have \"d_of dmu' j' = d fs' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d_of dmu' j' = d fs' j'", "using j' d'dmu' d_def Suc_diff_1 less_imp_diff_less"], ["proof (prove)\nusing this:\n  j' < m\n  \\<forall>j'<m. d fs' (Suc j') = dmu' $$ (j', j')\n  d ?fs ?k = gs.Gramian_determinant ?fs ?k\n  0 < ?n \\<Longrightarrow> Suc (?n - 1) = ?n\n  ?j < ?k \\<Longrightarrow> ?j - ?n < ?k\n\ngoal (1 subgoal):\n 1. d_of dmu' j' = d fs' j'", "unfolding d_of_def"], ["proof (prove)\nusing this:\n  j' < m\n  \\<forall>j'<m. d fs' (Suc j') = dmu' $$ (j', j')\n  d ?fs ?k = gs.Gramian_determinant ?fs ?k\n  0 < ?n \\<Longrightarrow> Suc (?n - 1) = ?n\n  ?j < ?k \\<Longrightarrow> ?j - ?n < ?k\n\ngoal (1 subgoal):\n 1. (if j' = 0 then 1 else dmu' $$ (j' - 1, j' - 1)) = d fs' j'", "by (cases j', auto)"], ["proof (state)\nthis:\n  d_of dmu' j' = d fs' j'\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "finally"], ["proof (chain)\npicking this:\n  dmu'_mod $$ (i', j') =\n  dmu' $$ (i', j') symmod (p * d fs' j' * d_of dmu' (Suc j'))", "have \"dmu'_mod $$ (i',j') = dmu' $$ (i',j') symmod (p * d fs' j' * d fs' (Suc j'))\""], ["proof (prove)\nusing this:\n  dmu'_mod $$ (i', j') =\n  dmu' $$ (i', j') symmod (p * d fs' j' * d_of dmu' (Suc j'))\n\ngoal (1 subgoal):\n 1. dmu'_mod $$ (i', j') =\n    dmu' $$ (i', j') symmod (p * d fs' j' * d fs' (Suc j'))", "using dd\\<mu>[OF j'] d'dmu' j'"], ["proof (prove)\nusing this:\n  dmu'_mod $$ (i', j') =\n  dmu' $$ (i', j') symmod (p * d fs' j' * d_of dmu' (Suc j'))\n  d ?fs (Suc j') = d\\<mu> ?fs j' j'\n  \\<forall>j'<m. d fs' (Suc j') = dmu' $$ (j', j')\n  j' < m\n\ngoal (1 subgoal):\n 1. dmu'_mod $$ (i', j') =\n    dmu' $$ (i', j') symmod (p * d fs' j' * d fs' (Suc j'))", "by (auto simp: d_of_def)"], ["proof (state)\nthis:\n  dmu'_mod $$ (i', j') =\n  dmu' $$ (i', j') symmod (p * d fs' j' * d fs' (Suc j'))\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "then"], ["proof (chain)\npicking this:\n  dmu'_mod $$ (i', j') =\n  dmu' $$ (i', j') symmod (p * d fs' j' * d fs' (Suc j'))", "show ?thesis"], ["proof (prove)\nusing this:\n  dmu'_mod $$ (i', j') =\n  dmu' $$ (i', j') symmod (p * d fs' j' * d fs' (Suc j'))\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "using i'j'I 11 i'j' eq'"], ["proof (prove)\nusing this:\n  dmu'_mod $$ (i', j') =\n  dmu' $$ (i', j') symmod (p * d fs' j' * d fs' (Suc j'))\n  (i', j') \\<in> I\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs'' i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n         else d\\<mu> fs' i' j')\n  i' < m\n  j' < i'\n  d\\<mu> fs' i' j' = dmu' $$ (i', j')\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')\n\ngoal (1 subgoal):\n 1. (i', j') \\<notin> I \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (i', j') \\<notin> I \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "case False"], ["proof (state)\nthis:\n  (i', j') \\<notin> I\n\ngoal (1 subgoal):\n 1. (i', j') \\<notin> I \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "have \"d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'", "using False 11 i'j'"], ["proof (prove)\nusing this:\n  (i', j') \\<notin> I\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs'' i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n         else d\\<mu> fs' i' j')\n  i' < m\n  j' < i'\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'\n\ngoal (1 subgoal):\n 1. (i', j') \\<notin> I \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "also"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = d\\<mu> fs' i' j'\n\ngoal (1 subgoal):\n 1. (i', j') \\<notin> I \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "have \"\\<dots> = dmu' $$ (i', j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' = dmu' $$ (i', j')", "unfolding eq'"], ["proof (prove)\ngoal (1 subgoal):\n 1. dmu' $$ (i', j') = dmu' $$ (i', j')", ".."], ["proof (state)\nthis:\n  d\\<mu> fs' i' j' = dmu' $$ (i', j')\n\ngoal (1 subgoal):\n 1. (i', j') \\<notin> I \\<Longrightarrow>\n    d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "finally"], ["proof (chain)\npicking this:\n  d\\<mu> fs'' i' j' = dmu' $$ (i', j')", "show ?thesis"], ["proof (prove)\nusing this:\n  d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "unfolding dmu'_mod_def"], ["proof (prove)\nusing this:\n  d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' =\n    mat m m\n     (\\<lambda>(i, j).\n         if j < i \\<and> (j = k \\<or> j = k - 1)\n         then dmu' $$ (i, j) symmod (p * d_of dmu' j * d_of dmu' (Suc j))\n         else dmu' $$ (i, j)) $$\n    (i', j')", "using False[unfolded I_def] i'j'"], ["proof (prove)\nusing this:\n  d\\<mu> fs'' i' j' = dmu' $$ (i', j')\n  (i', j')\n  \\<notin> {(i, j). i < m \\<and> j < i \\<and> (j = k \\<or> j = k - 1)}\n  i' < m\n  j' < i'\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' =\n    mat m m\n     (\\<lambda>(i, j).\n         if j < i \\<and> (j = k \\<or> j = k - 1)\n         then dmu' $$ (i, j) symmod (p * d_of dmu' j * d_of dmu' (Suc j))\n         else dmu' $$ (i, j)) $$\n    (i', j')", "by auto"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?i'4 < m; ?j'4 < ?i'4\\<rbrakk>\n  \\<Longrightarrow> d\\<mu> fs'' ?i'4 ?j'4 = dmu'_mod $$ (?i'4, ?j'4)\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>?i'4 < m; ?j'4 < ?i'4\\<rbrakk>\n  \\<Longrightarrow> d\\<mu> fs'' ?i'4 ?j'4 = dmu'_mod $$ (?i'4, ?j'4)\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "have \"\\<forall>i' j'. i' < m \\<longrightarrow> j' < m \\<longrightarrow> i' = j' \\<longrightarrow> d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i' j'.\n       i' < m \\<longrightarrow>\n       j' < m \\<longrightarrow>\n       i' = j' \\<longrightarrow> d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "using dd\\<mu> dmu'_def 033 10 dmu'_mod_def 11 I_def"], ["proof (prove)\nusing this:\n  ?i < m \\<Longrightarrow> d ?fs (Suc ?i) = d\\<mu> ?fs ?i ?i\n  dmu' =\n  mat m m\n   (\\<lambda>(i, j).\n       if j < i\n       then if i = k - 1 then dmu $$ (k, j)\n            else if i = k \\<and> j \\<noteq> k - 1 then dmu $$ (k - 1, j)\n                 else if k < i \\<and> j = k\n                      then (d_of dmu (Suc k) * dmu $$ (i, k - 1) -\n                            dmu $$ (k, k - 1) * dmu $$ (i, j)) div\n                           d_of dmu k\n                      else if k < i \\<and> j = k - 1\n                           then (dmu $$ (k, k - 1) * dmu $$ (i, j) +\n                                 dmu $$ (i, k) * d_of dmu (k - 1)) div\n                                d_of dmu k\n                           else dmu $$ (i, j)\n       else if i = j\n            then if i = k - 1\n                 then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n                       dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n                      d_of dmu k\n                 else d_of dmu (Suc i)\n            else dmu $$ (i, j))\n  ?i2 < m \\<Longrightarrow>\n  d\\<mu> fs' ?i2 ?i2 =\n  (if ?i2 = k - 1\n   then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n         dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n        d_of dmu k\n   else d_of dmu (Suc ?i2))\n  \\<forall>k\\<le>m. d fs'' k = d fs' k\n  dmu'_mod =\n  mat m m\n   (\\<lambda>(i, j).\n       if j < i \\<and> (j = k \\<or> j = k - 1)\n       then dmu' $$ (i, j) symmod (p * d_of dmu' j * d_of dmu' (Suc j))\n       else dmu' $$ (i, j))\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs'' i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs' i' j' symmod (p * d fs' j' * d fs' (Suc j'))\n         else d\\<mu> fs' i' j')\n  I = {(i, j). i < m \\<and> j < i \\<and> (j = k \\<or> j = k - 1)}\n\ngoal (1 subgoal):\n 1. \\<forall>i' j'.\n       i' < m \\<longrightarrow>\n       j' < m \\<longrightarrow>\n       i' = j' \\<longrightarrow> d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "by simp"], ["proof (state)\nthis:\n  \\<forall>i' j'.\n     i' < m \\<longrightarrow>\n     j' < m \\<longrightarrow>\n     i' = j' \\<longrightarrow> d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "moreover"], ["proof (state)\nthis:\n  \\<forall>i' j'.\n     i' < m \\<longrightarrow>\n     j' < m \\<longrightarrow>\n     i' = j' \\<longrightarrow> d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "{"], ["proof (state)\nthis:\n  \\<forall>i' j'.\n     i' < m \\<longrightarrow>\n     j' < m \\<longrightarrow>\n     i' = j' \\<longrightarrow> d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "fix i' j'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "assume i'j'': \"i' < m\" \"j' < m\" \"i' < j'\""], ["proof (state)\nthis:\n  i' < m\n  j' < m\n  i' < j'\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "then"], ["proof (chain)\npicking this:\n  i' < m\n  j' < m\n  i' < j'", "have \\<mu>z: \"\\<mu> fs'' i' j' = 0\""], ["proof (prove)\nusing this:\n  i' < m\n  j' < m\n  i' < j'\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' = 0", "by (simp add: gram_schmidt_fs.\\<mu>.simps)"], ["proof (state)\nthis:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' = 0\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "have \"dmu'_mod $$ (i',j') = dmu' $$ (i',j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dmu'_mod $$ (i', j') = dmu' $$ (i', j')", "using dmu'_mod_def i'j''"], ["proof (prove)\nusing this:\n  dmu'_mod =\n  mat m m\n   (\\<lambda>(i, j).\n       if j < i \\<and> (j = k \\<or> j = k - 1)\n       then dmu' $$ (i, j) symmod (p * d_of dmu' j * d_of dmu' (Suc j))\n       else dmu' $$ (i, j))\n  i' < m\n  j' < m\n  i' < j'\n\ngoal (1 subgoal):\n 1. dmu'_mod $$ (i', j') = dmu' $$ (i', j')", "by auto"], ["proof (state)\nthis:\n  dmu'_mod $$ (i', j') = dmu' $$ (i', j')\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "also"], ["proof (state)\nthis:\n  dmu'_mod $$ (i', j') = dmu' $$ (i', j')\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "have \"\\<dots> = d\\<mu> fs i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dmu' $$ (i', j') = d\\<mu> fs i' j'", "using LLL_invD_modw(7)[OF Linvmw] i'j'' dmu'_def"], ["proof (prove)\nusing this:\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  i' < m\n  j' < m\n  i' < j'\n  dmu' =\n  mat m m\n   (\\<lambda>(i, j).\n       if j < i\n       then if i = k - 1 then dmu $$ (k, j)\n            else if i = k \\<and> j \\<noteq> k - 1 then dmu $$ (k - 1, j)\n                 else if k < i \\<and> j = k\n                      then (d_of dmu (Suc k) * dmu $$ (i, k - 1) -\n                            dmu $$ (k, k - 1) * dmu $$ (i, j)) div\n                           d_of dmu k\n                      else if k < i \\<and> j = k - 1\n                           then (dmu $$ (k, k - 1) * dmu $$ (i, j) +\n                                 dmu $$ (i, k) * d_of dmu (k - 1)) div\n                                d_of dmu k\n                           else dmu $$ (i, j)\n       else if i = j\n            then if i = k - 1\n                 then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n                       dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n                      d_of dmu k\n                 else d_of dmu (Suc i)\n            else dmu $$ (i, j))\n\ngoal (1 subgoal):\n 1. dmu' $$ (i', j') = d\\<mu> fs i' j'", "by simp"], ["proof (state)\nthis:\n  dmu' $$ (i', j') = d\\<mu> fs i' j'\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "also"], ["proof (state)\nthis:\n  dmu' $$ (i', j') = d\\<mu> fs i' j'\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "have \"\\<dots> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d\\<mu> fs i' j' = 0", "using d\\<mu>_def i'j''"], ["proof (prove)\nusing this:\n  d\\<mu> ?gs ?i ?j =\n  int_of_rat\n   (rat_of_int (d ?gs (Suc ?j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?gs) ?i ?j)\n  i' < m\n  j' < m\n  i' < j'\n\ngoal (1 subgoal):\n 1. d\\<mu> fs i' j' = 0", "by (simp add: gram_schmidt_fs.\\<mu>.simps)"], ["proof (state)\nthis:\n  d\\<mu> fs i' j' = 0\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "finally"], ["proof (chain)\npicking this:\n  dmu'_mod $$ (i', j') = 0", "have \"d\\<mu> fs'' i' j' =  dmu'_mod $$ (i',j')\""], ["proof (prove)\nusing this:\n  dmu'_mod $$ (i', j') = 0\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "using \\<mu>z d_def i'j'' d\\<mu>_def"], ["proof (prove)\nusing this:\n  dmu'_mod $$ (i', j') = 0\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' = 0\n  d ?fs ?k = gs.Gramian_determinant ?fs ?k\n  i' < m\n  j' < m\n  i' < j'\n  d\\<mu> ?gs ?i ?j =\n  int_of_rat\n   (rat_of_int (d ?gs (Suc ?j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?gs) ?i ?j)\n\ngoal (1 subgoal):\n 1. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?i'4 < m; ?j'4 < m; ?i'4 < ?j'4\\<rbrakk>\n  \\<Longrightarrow> d\\<mu> fs'' ?i'4 ?j'4 = dmu'_mod $$ (?i'4, ?j'4)\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i'4 < m; ?j'4 < ?i'4\\<rbrakk>\n  \\<Longrightarrow> d\\<mu> fs'' ?i'4 ?j'4 = dmu'_mod $$ (?i'4, ?j'4)\n  \\<forall>i' j'.\n     i' < m \\<longrightarrow>\n     j' < m \\<longrightarrow>\n     i' = j' \\<longrightarrow> d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')\n  \\<lbrakk>?i'4 < m; ?j'4 < m; ?i'4 < ?j'4\\<rbrakk>\n  \\<Longrightarrow> d\\<mu> fs'' ?i'4 ?j'4 = dmu'_mod $$ (?i'4, ?j'4)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i'4 < m; ?j'4 < ?i'4\\<rbrakk>\n  \\<Longrightarrow> d\\<mu> fs'' ?i'4 ?j'4 = dmu'_mod $$ (?i'4, ?j'4)\n  \\<forall>i' j'.\n     i' < m \\<longrightarrow>\n     j' < m \\<longrightarrow>\n     i' = j' \\<longrightarrow> d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')\n  \\<lbrakk>?i'4 < m; ?j'4 < m; ?i'4 < ?j'4\\<rbrakk>\n  \\<Longrightarrow> d\\<mu> fs'' ?i'4 ?j'4 = dmu'_mod $$ (?i'4, ?j'4)\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')", "by (meson nat_neq_iff)"], ["proof (state)\nthis:\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'_mod $$ (i', j')\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "from gbnd 09"], ["proof (chain)\npicking this:\n  g_bnd_mode first b fs'\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k", "have g_bnd: \"g_bnd_mode first b fs''\""], ["proof (prove)\nusing this:\n  g_bnd_mode first b fs'\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k\n\ngoal (1 subgoal):\n 1. g_bnd_mode first b fs''", "using g_bnd_mode_cong[of fs' fs'']"], ["proof (prove)\nusing this:\n  g_bnd_mode first b fs'\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k\n  (\\<And>i.\n      i < m \\<Longrightarrow>\n      gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') i =\n      gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n       i) \\<Longrightarrow>\n  g_bnd_mode ?first ?b fs' = g_bnd_mode ?first ?b fs''\n\ngoal (1 subgoal):\n 1. g_bnd_mode first b fs''", "by auto"], ["proof (state)\nthis:\n  g_bnd_mode first b fs''\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "{"], ["proof (state)\nthis:\n  g_bnd_mode first b fs''\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "assume Linv: \"LLL_invariant_mod fs mfs dmu p first b k\""], ["proof (state)\nthis:\n  LLL_invariant_mod fs mfs dmu p first b k\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "have 00: \"LLL_invariant_weak' k fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' k fs", "using LLL_invD_mod[OF Linv] LLL_invI_weak"], ["proof (prove)\nusing this:\n  length mfs = m\n  k \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> k\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  \\<lbrakk>set ?fs \\<subseteq> carrier_vec n; length ?fs = m;\n   lattice_of ?fs = L; ?i \\<le> m;\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs);\n   gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha>\n    ?i\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak' ?i ?fs\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' k fs", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_weak' k fs\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "note swap_weak' = basis_reduction_swap_weak'[OF 00 k k0 mu_F1_i norm_ineq fs'_def]"], ["proof (state)\nthis:\n  LLL_invariant_weak' (k - 1) fs'\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "have 01: \"LLL_invariant_weak' (k - 1) fs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' (k - 1) fs'", "by fact"], ["proof (state)\nthis:\n  LLL_invariant_weak' (k - 1) fs'\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "have 12: \"weakly_reduced fs'' (k-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs'') \\<alpha>\n     (k - 1)", "(* invariant requirement *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs'') \\<alpha>\n     (k - 1)", "using 031 09 k LLL_invD_weak(8)[OF 00]"], ["proof (prove)\nusing this:\n  ?i2 < k - 1 \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?i2 =\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i2\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k\n  k < m\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> k\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs'') \\<alpha>\n     (k - 1)", "unfolding gram_schmidt_fs.weakly_reduced_def"], ["proof (prove)\nusing this:\n  ?i2 < k - 1 \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') ?i2 =\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i2\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k\n  k < m\n  \\<forall>i.\n     Suc i < k \\<longrightarrow>\n     \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                 i\\<parallel>\\<^sup>2\n     \\<le> \\<alpha> *\n           \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                       (Suc i)\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       Suc i < k - 1 \\<longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                   i\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                         (Suc i)\\<parallel>\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs'') \\<alpha>\n   (k - 1)\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "have \"LLL_invariant_mod fs'' mfs' dmu'_mod p first b (k-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs'' mfs' dmu'_mod p first b (k - 1)", "using LLL_invI_mod[OF 13 _ 08 05 07 12 14 16 17 p1 g_bnd LLL_invD_mod(17)[OF Linv]] k"], ["proof (prove)\nusing this:\n  k - 1 \\<le> m \\<Longrightarrow>\n  LLL_invariant_mod fs'' mfs' dmu'_mod p first b (k - 1)\n  k < m\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs'' mfs' dmu'_mod p first b (k - 1)", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_mod fs'' mfs' dmu'_mod p first b (k - 1)\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "}"], ["proof (state)\nthis:\n  LLL_invariant_mod fs mfs dmu p first b k \\<Longrightarrow>\n  LLL_invariant_mod fs'' mfs' dmu'_mod p first b (k - 1)\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "moreover"], ["proof (state)\nthis:\n  LLL_invariant_mod fs mfs dmu p first b k \\<Longrightarrow>\n  LLL_invariant_mod fs'' mfs' dmu'_mod p first b (k - 1)\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "have \"LLL_invariant_mod_weak fs'' mfs' dmu'_mod p first b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_mod_weak fs'' mfs' dmu'_mod p first b", "using LLL_invI_modw[OF 13 08 05 07 14 16 17 p1 g_bnd LLL_invD_modw(15)[OF Linvmw]]"], ["proof (prove)\nusing this:\n  LLL_invariant_mod_weak fs'' mfs' dmu'_mod p first b\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod_weak fs'' mfs' dmu'_mod p first b", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_mod_weak fs'' mfs' dmu'_mod p first b\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "ultimately"], ["proof (chain)\npicking this:\n  LLL_invariant_mod fs mfs dmu p first b k \\<Longrightarrow>\n  LLL_invariant_mod fs'' mfs' dmu'_mod p first b (k - 1)\n  LLL_invariant_mod_weak fs'' mfs' dmu'_mod p first b", "show ?thesis"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b k \\<Longrightarrow>\n  LLL_invariant_mod fs'' mfs' dmu'_mod p first b (k - 1)\n  LLL_invariant_mod_weak fs'' mfs' dmu'_mod p first b\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "using 15"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b k \\<Longrightarrow>\n  LLL_invariant_mod fs'' mfs' dmu'_mod p first b (k - 1)\n  LLL_invariant_mod_weak fs'' mfs' dmu'_mod p first b\n  LLL_measure (k - 1) fs'' < LLL_measure k fs\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "by auto"], ["proof (state)\nthis:\n  \\<exists>fs'.\n     LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n     LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n     (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n      LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dmu_quot_is_round_of_\\<mu>:\n  assumes Linv: \"LLL_invariant_mod fs mfs dmu p first b i'\"\n    and c: \"c = round_num_denom (dmu $$ (i,j)) (d_of dmu (Suc j))\" \n    and i: \"i < m\"\n    and j: \"j < i\"\n  shows \"c = round(\\<mu> fs i j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "have Linvw: \"LLL_invariant_weak' i' fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i' fs", "using LLL_invD_mod[OF Linv] LLL_invI_weak"], ["proof (prove)\nusing this:\n  length mfs = m\n  i' \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i'\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  \\<lbrakk>set ?fs \\<subseteq> carrier_vec n; length ?fs = m;\n   lattice_of ?fs = L; ?i \\<le> m;\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs);\n   gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha>\n    ?i\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak' ?i ?fs\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i' fs", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_weak' i' fs\n\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "have j2: \"j < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < m", "using i j"], ["proof (prove)\nusing this:\n  i < m\n  j < i\n\ngoal (1 subgoal):\n 1. j < m", "by simp"], ["proof (state)\nthis:\n  j < m\n\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "then"], ["proof (chain)\npicking this:\n  j < m", "have j3: \"Suc j \\<le> m\""], ["proof (prove)\nusing this:\n  j < m\n\ngoal (1 subgoal):\n 1. Suc j \\<le> m", "by simp"], ["proof (state)\nthis:\n  Suc j \\<le> m\n\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "have \\<mu>1: \"\\<mu> fs j j = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j = 1", "using i j"], ["proof (prove)\nusing this:\n  i < m\n  j < i\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j = 1", "by (meson gram_schmidt_fs.\\<mu>.elims less_irrefl_nat)"], ["proof (state)\nthis:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j = 1\n\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "have inZ: \"rat_of_int (d fs (Suc j)) * \\<mu> fs i j \\<in> \\<int>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int (d fs (Suc j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j\n    \\<in> \\<int>", "using fs_int_indpt.fs_int_mu_d_Z_m_m i j\n      LLL_invD_mod(5)[OF Linv] LLL_invD_weak(2) Linvw d_def fs_int.d_def fs_int_indpt.intro"], ["proof (prove)\nusing this:\n  \\<lbrakk>fs_int_indpt ?n ?fs; ?j < length ?fs; ?ii < length ?fs\\<rbrakk>\n  \\<Longrightarrow> rat_of_int (fs_int.d ?n ?fs (Suc ?j)) *\n                    gram_schmidt_fs.\\<mu> ?n (map of_int_hom.vec_hom ?fs)\n                     ?ii ?j\n                    \\<in> \\<int>\n  i < m\n  j < i\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  LLL_invariant_weak' ?i ?fs \\<Longrightarrow>\n  length (map of_int_hom.vec_hom ?fs) = m\n  LLL_invariant_weak' i' fs\n  d ?fs ?k = gs.Gramian_determinant ?fs ?k\n  fs_int.d ?n ?fs ?k = gram_schmidt.Gramian_determinant ?n ?fs ?k\n  cof_vec_space.lin_indpt_list ?n\n   (map of_int_hom.vec_hom ?fs) \\<Longrightarrow>\n  fs_int_indpt ?n ?fs\n\ngoal (1 subgoal):\n 1. rat_of_int (d fs (Suc j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j\n    \\<in> \\<int>", "by auto"], ["proof (state)\nthis:\n  rat_of_int (d fs (Suc j)) *\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j\n  \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "have \"c = round(rat_of_int (d\\<mu> fs i j) / rat_of_int (d\\<mu> fs j j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c = round (rat_of_int (d\\<mu> fs i j) / rat_of_int (d\\<mu> fs j j))", "using LLL_invD_mod(9) Linv i j c"], ["proof (prove)\nusing this:\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> ?fs i' j' = ?dmu $$ (i', j')\n  LLL_invariant_mod fs mfs dmu p first b i'\n  i < m\n  j < i\n  c = round_num_denom (dmu $$ (i, j)) (d_of dmu (Suc j))\n\ngoal (1 subgoal):\n 1. c = round (rat_of_int (d\\<mu> fs i j) / rat_of_int (d\\<mu> fs j j))", "by (simp add: round_num_denom d_of_def)"], ["proof (state)\nthis:\n  c = round (rat_of_int (d\\<mu> fs i j) / rat_of_int (d\\<mu> fs j j))\n\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "then"], ["proof (chain)\npicking this:\n  c = round (rat_of_int (d\\<mu> fs i j) / rat_of_int (d\\<mu> fs j j))", "show ?thesis"], ["proof (prove)\nusing this:\n  c = round (rat_of_int (d\\<mu> fs i j) / rat_of_int (d\\<mu> fs j j))\n\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "using LLL_d_pos[OF LLL_invw'_imp_w[OF Linvw] j3] j i inZ d\\<mu>_def \\<mu>1"], ["proof (prove)\nusing this:\n  c = round (rat_of_int (d\\<mu> fs i j) / rat_of_int (d\\<mu> fs j j))\n  0 < d fs (Suc j)\n  j < i\n  i < m\n  rat_of_int (d fs (Suc j)) *\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j\n  \\<in> \\<int>\n  d\\<mu> ?gs ?i ?j =\n  int_of_rat\n   (rat_of_int (d ?gs (Suc ?j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?gs) ?i ?j)\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j = 1\n\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "by simp"], ["proof (state)\nthis:\n  c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dmu_quot_is_round_of_\\<mu>_weak:\n  assumes Linv: \"LLL_invariant_mod_weak fs mfs dmu p first b\"\n    and c: \"c = round_num_denom (dmu $$ (i,j)) (d_of dmu (Suc j))\" \n    and i: \"i < m\"\n    and j: \"j < i\"\n  shows \"c = round(\\<mu> fs i j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "have Linvww: \"LLL_invariant_weak fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak fs", "using LLL_invD_modw[OF Linv] LLL_invariant_weak_def"], ["proof (prove)\nusing this:\n  length mfs = m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  LLL_invariant_weak ?fs =\n  (gs.lin_indpt_list (map of_int_hom.vec_hom ?fs) \\<and>\n   lattice_of ?fs = L \\<and> length ?fs = m)\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak fs", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_weak fs\n\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "have j2: \"j < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < m", "using i j"], ["proof (prove)\nusing this:\n  i < m\n  j < i\n\ngoal (1 subgoal):\n 1. j < m", "by simp"], ["proof (state)\nthis:\n  j < m\n\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "then"], ["proof (chain)\npicking this:\n  j < m", "have j3: \"Suc j \\<le> m\""], ["proof (prove)\nusing this:\n  j < m\n\ngoal (1 subgoal):\n 1. Suc j \\<le> m", "by simp"], ["proof (state)\nthis:\n  Suc j \\<le> m\n\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "have \\<mu>1: \"\\<mu> fs j j = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j = 1", "using i j"], ["proof (prove)\nusing this:\n  i < m\n  j < i\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j = 1", "by (meson gram_schmidt_fs.\\<mu>.elims less_irrefl_nat)"], ["proof (state)\nthis:\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j = 1\n\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "have inZ: \"rat_of_int (d fs (Suc j)) * \\<mu> fs i j \\<in> \\<int>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int (d fs (Suc j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j\n    \\<in> \\<int>", "using fs_int_indpt.fs_int_mu_d_Z_m_m i j\n      LLL_invD_modw[OF Linv] d_def fs_int.d_def fs_int_indpt.intro"], ["proof (prove)\nusing this:\n  \\<lbrakk>fs_int_indpt ?n ?fs; ?j < length ?fs; ?ii < length ?fs\\<rbrakk>\n  \\<Longrightarrow> rat_of_int (fs_int.d ?n ?fs (Suc ?j)) *\n                    gram_schmidt_fs.\\<mu> ?n (map of_int_hom.vec_hom ?fs)\n                     ?ii ?j\n                    \\<in> \\<int>\n  i < m\n  j < i\n  length mfs = m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  d ?fs ?k = gs.Gramian_determinant ?fs ?k\n  fs_int.d ?n ?fs ?k = gram_schmidt.Gramian_determinant ?n ?fs ?k\n  cof_vec_space.lin_indpt_list ?n\n   (map of_int_hom.vec_hom ?fs) \\<Longrightarrow>\n  fs_int_indpt ?n ?fs\n\ngoal (1 subgoal):\n 1. rat_of_int (d fs (Suc j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j\n    \\<in> \\<int>", "by auto"], ["proof (state)\nthis:\n  rat_of_int (d fs (Suc j)) *\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j\n  \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "have \"c = round(rat_of_int (d\\<mu> fs i j) / rat_of_int (d\\<mu> fs j j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c = round (rat_of_int (d\\<mu> fs i j) / rat_of_int (d\\<mu> fs j j))", "using LLL_invD_modw(7) Linv i j c"], ["proof (prove)\nusing this:\n  LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b \\<Longrightarrow>\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> ?fs i' j' = ?dmu $$ (i', j')\n  LLL_invariant_mod_weak fs mfs dmu p first b\n  i < m\n  j < i\n  c = round_num_denom (dmu $$ (i, j)) (d_of dmu (Suc j))\n\ngoal (1 subgoal):\n 1. c = round (rat_of_int (d\\<mu> fs i j) / rat_of_int (d\\<mu> fs j j))", "by (simp add: round_num_denom d_of_def)"], ["proof (state)\nthis:\n  c = round (rat_of_int (d\\<mu> fs i j) / rat_of_int (d\\<mu> fs j j))\n\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "then"], ["proof (chain)\npicking this:\n  c = round (rat_of_int (d\\<mu> fs i j) / rat_of_int (d\\<mu> fs j j))", "show ?thesis"], ["proof (prove)\nusing this:\n  c = round (rat_of_int (d\\<mu> fs i j) / rat_of_int (d\\<mu> fs j j))\n\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "using LLL_d_pos[OF Linvww j3] j i inZ d\\<mu>_def \\<mu>1"], ["proof (prove)\nusing this:\n  c = round (rat_of_int (d\\<mu> fs i j) / rat_of_int (d\\<mu> fs j j))\n  0 < d fs (Suc j)\n  j < i\n  i < m\n  rat_of_int (d fs (Suc j)) *\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j\n  \\<in> \\<int>\n  d\\<mu> ?gs ?i ?j =\n  int_of_rat\n   (rat_of_int (d ?gs (Suc ?j)) *\n    gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?gs) ?i ?j)\n  gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) j j = 1\n\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "by simp"], ["proof (state)\nthis:\n  c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma basis_reduction_mod_add_row: assumes \n  Linv: \"LLL_invariant_mod_weak fs mfs dmu p first b\" \n  and res: \"basis_reduction_mod_add_row p mfs dmu i j = (mfs', dmu')\" \n  and i: \"i < m\"\n  and j: \"j < i\"\n  and igtz: \"i \\<noteq> 0\"\nshows \"(\\<exists>fs'. LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n        LLL_measure i fs' = LLL_measure i fs \\<and>\n        (\\<mu>_small_row i fs (Suc j) \\<longrightarrow> \\<mu>_small_row i fs' j) \\<and>\n        \\<bar>\\<mu> fs' i j\\<bar> \\<le> 1 / 2 \\<and>\n        (\\<forall>i' j'. i' < i \\<longrightarrow> j' \\<le> i' \\<longrightarrow> \\<mu> fs' i' j' = \\<mu> fs i' j') \\<and>\n        (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow> LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n        (\\<forall>ii \\<le> m. d fs' ii = d fs ii))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "define c where \"c = round_num_denom (dmu $$ (i,j)) (d_of dmu (Suc j))\""], ["proof (state)\nthis:\n  c = round_num_denom (dmu $$ (i, j)) (d_of dmu (Suc j))\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "then"], ["proof (chain)\npicking this:\n  c = round_num_denom (dmu $$ (i, j)) (d_of dmu (Suc j))", "have c: \"c = round(\\<mu> fs i j)\""], ["proof (prove)\nusing this:\n  c = round_num_denom (dmu $$ (i, j)) (d_of dmu (Suc j))\n\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "using dmu_quot_is_round_of_\\<mu>_weak[OF Linv c_def i j]"], ["proof (prove)\nusing this:\n  c = round_num_denom (dmu $$ (i, j)) (d_of dmu (Suc j))\n  c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)\n\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "by simp"], ["proof (state)\nthis:\n  c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "proof (cases \"c = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c = 0 \\<Longrightarrow>\n    \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)\n 2. c \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "case True"], ["proof (state)\nthis:\n  c = 0\n\ngoal (2 subgoals):\n 1. c = 0 \\<Longrightarrow>\n    \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)\n 2. c \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "then"], ["proof (chain)\npicking this:\n  c = 0", "have pair_id: \"(mfs', dmu') = (mfs, dmu)\""], ["proof (prove)\nusing this:\n  c = 0\n\ngoal (1 subgoal):\n 1. (mfs', dmu') = (mfs, dmu)", "using res c_def"], ["proof (prove)\nusing this:\n  c = 0\n  basis_reduction_mod_add_row p mfs dmu i j = (mfs', dmu')\n  c = round_num_denom (dmu $$ (i, j)) (d_of dmu (Suc j))\n\ngoal (1 subgoal):\n 1. (mfs', dmu') = (mfs, dmu)", "unfolding basis_reduction_mod_add_row_def Let_def"], ["proof (prove)\nusing this:\n  c = 0\n  (if round_num_denom (dmu $$ (i, j)) (d_of dmu (Suc j)) = 0 then (mfs, dmu)\n   else (mfs[i := map_vec (\\<lambda>x. x symmod p)\n                   (mfs ! i -\n                    round_num_denom (dmu $$ (i, j))\n                     (d_of dmu (Suc j)) \\<cdot>\\<^sub>v\n                    mfs ! j)],\n         mat m m\n          (\\<lambda>(i', j').\n              if i' = i \\<and> j' \\<le> j\n              then if j' = j\n                   then dmu $$ (i, j') -\n                        round_num_denom (dmu $$ (i, j)) (d_of dmu (Suc j)) *\n                        dmu $$ (j, j')\n                   else (dmu $$ (i, j') -\n                         round_num_denom (dmu $$ (i, j))\n                          (d_of dmu (Suc j)) *\n                         dmu $$ (j, j')) symmod\n                        (p * d_of dmu j' * d_of dmu (Suc j'))\n              else dmu $$ (i', j')))) =\n  (mfs', dmu')\n  c = round_num_denom (dmu $$ (i, j)) (d_of dmu (Suc j))\n\ngoal (1 subgoal):\n 1. (mfs', dmu') = (mfs, dmu)", "by auto"], ["proof (state)\nthis:\n  (mfs', dmu') = (mfs, dmu)\n\ngoal (2 subgoals):\n 1. c = 0 \\<Longrightarrow>\n    \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)\n 2. c \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "moreover"], ["proof (state)\nthis:\n  (mfs', dmu') = (mfs, dmu)\n\ngoal (2 subgoals):\n 1. c = 0 \\<Longrightarrow>\n    \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)\n 2. c \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "have \"\\<bar>\\<mu> fs i j\\<bar> \\<le> inverse 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j\\<bar>\n    \\<le> inverse 2", "using c[symmetric, unfolded True]"], ["proof (prove)\nusing this:\n  round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j) = 0\n\ngoal (1 subgoal):\n 1. \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j\\<bar>\n    \\<le> inverse 2", "by (simp add: round_def, linarith)"], ["proof (state)\nthis:\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j\\<bar>\n  \\<le> inverse 2\n\ngoal (2 subgoals):\n 1. c = 0 \\<Longrightarrow>\n    \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)\n 2. c \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "moreover"], ["proof (state)\nthis:\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j\\<bar>\n  \\<le> inverse 2\n\ngoal (2 subgoals):\n 1. c = 0 \\<Longrightarrow>\n    \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)\n 2. c \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "then"], ["proof (chain)\npicking this:\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j\\<bar>\n  \\<le> inverse 2", "have \"(\\<mu>_small_row i fs (Suc j) \\<longrightarrow> \\<mu>_small_row i fs j)\""], ["proof (prove)\nusing this:\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j\\<bar>\n  \\<le> inverse 2\n\ngoal (1 subgoal):\n 1. \\<mu>_small_row i fs (Suc j) \\<longrightarrow> \\<mu>_small_row i fs j", "unfolding \\<mu>_small_row_def"], ["proof (prove)\nusing this:\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j\\<bar>\n  \\<le> inverse 2\n\ngoal (1 subgoal):\n 1. (\\<forall>j'\\<ge>Suc j.\n        j' < i \\<longrightarrow>\n        \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j'\\<bar>\n        \\<le> inverse 2) \\<longrightarrow>\n    (\\<forall>j'\\<ge>j.\n        j' < i \\<longrightarrow>\n        \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j'\\<bar>\n        \\<le> inverse 2)", "using Suc_leI le_neq_implies_less"], ["proof (prove)\nusing this:\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j\\<bar>\n  \\<le> inverse 2\n  ?m < ?n \\<Longrightarrow> Suc ?m \\<le> ?n\n  \\<lbrakk>?m \\<le> ?n; ?m \\<noteq> ?n\\<rbrakk> \\<Longrightarrow> ?m < ?n\n\ngoal (1 subgoal):\n 1. (\\<forall>j'\\<ge>Suc j.\n        j' < i \\<longrightarrow>\n        \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j'\\<bar>\n        \\<le> inverse 2) \\<longrightarrow>\n    (\\<forall>j'\\<ge>j.\n        j' < i \\<longrightarrow>\n        \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j'\\<bar>\n        \\<le> inverse 2)", "by blast"], ["proof (state)\nthis:\n  \\<mu>_small_row i fs (Suc j) \\<longrightarrow> \\<mu>_small_row i fs j\n\ngoal (2 subgoals):\n 1. c = 0 \\<Longrightarrow>\n    \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)\n 2. c \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "ultimately"], ["proof (chain)\npicking this:\n  (mfs', dmu') = (mfs, dmu)\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j\\<bar>\n  \\<le> inverse 2\n  \\<mu>_small_row i fs (Suc j) \\<longrightarrow> \\<mu>_small_row i fs j", "show ?thesis"], ["proof (prove)\nusing this:\n  (mfs', dmu') = (mfs, dmu)\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j\\<bar>\n  \\<le> inverse 2\n  \\<mu>_small_row i fs (Suc j) \\<longrightarrow> \\<mu>_small_row i fs j\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "using Linv pair_id"], ["proof (prove)\nusing this:\n  (mfs', dmu') = (mfs, dmu)\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j\\<bar>\n  \\<le> inverse 2\n  \\<mu>_small_row i fs (Suc j) \\<longrightarrow> \\<mu>_small_row i fs j\n  LLL_invariant_mod_weak fs mfs dmu p first b\n  (mfs', dmu') = (mfs, dmu)\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "by auto"], ["proof (state)\nthis:\n  \\<exists>fs'.\n     LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n     LLL_measure i fs' = LLL_measure i fs \\<and>\n     (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n      \\<mu>_small_row i fs' j) \\<and>\n     \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n     \\<le> 1 / 2 \\<and>\n     (\\<forall>i' j'.\n         i' < i \\<longrightarrow>\n         j' \\<le> i' \\<longrightarrow>\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n     (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n      LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n     (\\<forall>ii\\<le>m. d fs' ii = d fs ii)\n\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "case False"], ["proof (state)\nthis:\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "then"], ["proof (chain)\npicking this:\n  c \\<noteq> 0", "have pair_id: \"(mfs', dmu') = (mfs[i := map_vec (\\<lambda>x. x symmod p) (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)],\n                mat m m (\\<lambda>(i', j'). if i' = i \\<and> j' \\<le> j\n                  then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n                       else (dmu $$ (i,j') - c * dmu $$ (j,j')) \n                              symmod (p * (d_of dmu j') * (d_of dmu (Suc j')))\n                  else dmu $$ (i', j')))\""], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (mfs', dmu') =\n    (mfs[i := map_vec (\\<lambda>x. x symmod p)\n               (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)],\n     mat m m\n      (\\<lambda>(i', j').\n          if i' = i \\<and> j' \\<le> j\n          then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n               else (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n                    (p * d_of dmu j' * d_of dmu (Suc j'))\n          else dmu $$ (i', j')))", "using res c_def"], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n  basis_reduction_mod_add_row p mfs dmu i j = (mfs', dmu')\n  c = round_num_denom (dmu $$ (i, j)) (d_of dmu (Suc j))\n\ngoal (1 subgoal):\n 1. (mfs', dmu') =\n    (mfs[i := map_vec (\\<lambda>x. x symmod p)\n               (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)],\n     mat m m\n      (\\<lambda>(i', j').\n          if i' = i \\<and> j' \\<le> j\n          then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n               else (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n                    (p * d_of dmu j' * d_of dmu (Suc j'))\n          else dmu $$ (i', j')))", "unfolding basis_reduction_mod_add_row_def Let_def"], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n  (if round_num_denom (dmu $$ (i, j)) (d_of dmu (Suc j)) = 0 then (mfs, dmu)\n   else (mfs[i := map_vec (\\<lambda>x. x symmod p)\n                   (mfs ! i -\n                    round_num_denom (dmu $$ (i, j))\n                     (d_of dmu (Suc j)) \\<cdot>\\<^sub>v\n                    mfs ! j)],\n         mat m m\n          (\\<lambda>(i', j').\n              if i' = i \\<and> j' \\<le> j\n              then if j' = j\n                   then dmu $$ (i, j') -\n                        round_num_denom (dmu $$ (i, j)) (d_of dmu (Suc j)) *\n                        dmu $$ (j, j')\n                   else (dmu $$ (i, j') -\n                         round_num_denom (dmu $$ (i, j))\n                          (d_of dmu (Suc j)) *\n                         dmu $$ (j, j')) symmod\n                        (p * d_of dmu j' * d_of dmu (Suc j'))\n              else dmu $$ (i', j')))) =\n  (mfs', dmu')\n  c = round_num_denom (dmu $$ (i, j)) (d_of dmu (Suc j))\n\ngoal (1 subgoal):\n 1. (mfs', dmu') =\n    (mfs[i := map_vec (\\<lambda>x. x symmod p)\n               (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)],\n     mat m m\n      (\\<lambda>(i', j').\n          if i' = i \\<and> j' \\<le> j\n          then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n               else (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n                    (p * d_of dmu j' * d_of dmu (Suc j'))\n          else dmu $$ (i', j')))", "by auto"], ["proof (state)\nthis:\n  (mfs', dmu') =\n  (mfs[i := map_vec (\\<lambda>x. x symmod p)\n             (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)],\n   mat m m\n    (\\<lambda>(i', j').\n        if i' = i \\<and> j' \\<le> j\n        then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n             else (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n                  (p * d_of dmu j' * d_of dmu (Suc j'))\n        else dmu $$ (i', j')))\n\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "then"], ["proof (chain)\npicking this:\n  (mfs', dmu') =\n  (mfs[i := map_vec (\\<lambda>x. x symmod p)\n             (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)],\n   mat m m\n    (\\<lambda>(i', j').\n        if i' = i \\<and> j' \\<le> j\n        then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n             else (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n                  (p * d_of dmu j' * d_of dmu (Suc j'))\n        else dmu $$ (i', j')))", "have mfs': \"mfs' = mfs[i := map_vec (\\<lambda>x. x symmod p) (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)]\"\n      and dmu': \"dmu' = mat m m (\\<lambda>(i', j'). if i' = i \\<and> j' \\<le> j\n                  then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n                       else (dmu $$ (i,j') - c * dmu $$ (j,j')) \n                              symmod (p * (d_of dmu j') * (d_of dmu (Suc j')))\n                  else dmu $$ (i', j'))\""], ["proof (prove)\nusing this:\n  (mfs', dmu') =\n  (mfs[i := map_vec (\\<lambda>x. x symmod p)\n             (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)],\n   mat m m\n    (\\<lambda>(i', j').\n        if i' = i \\<and> j' \\<le> j\n        then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n             else (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n                  (p * d_of dmu j' * d_of dmu (Suc j'))\n        else dmu $$ (i', j')))\n\ngoal (1 subgoal):\n 1. mfs' = mfs\n    [i := map_vec (\\<lambda>x. x symmod p)\n           (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)] &&&\n    dmu' =\n    mat m m\n     (\\<lambda>(i', j').\n         if i' = i \\<and> j' \\<le> j\n         then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n              else (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n                   (p * d_of dmu j' * d_of dmu (Suc j'))\n         else dmu $$ (i', j'))", "by auto"], ["proof (state)\nthis:\n  mfs' = mfs\n  [i := map_vec (\\<lambda>x. x symmod p)\n         (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)]\n  dmu' =\n  mat m m\n   (\\<lambda>(i', j').\n       if i' = i \\<and> j' \\<le> j\n       then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n            else (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n                 (p * d_of dmu j' * d_of dmu (Suc j'))\n       else dmu $$ (i', j'))\n\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "using basis_reduction_mod_add_row_main[OF Linv i j c mfs' dmu']"], ["proof (prove)\nusing this:\n  \\<exists>fs'.\n     LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n     LLL_measure i fs' = LLL_measure i fs \\<and>\n     (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n      \\<mu>_small_row i fs' j) \\<and>\n     (\\<forall>k<m.\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k) \\<and>\n     (\\<forall>ii\\<le>m. d fs' ii = d fs ii) \\<and>\n     \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n     \\<le> 1 / 2 \\<and>\n     (\\<forall>i' j'.\n         i' < i \\<longrightarrow>\n         j' \\<le> i' \\<longrightarrow>\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n     (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n      LLL_invariant_mod fs' mfs' dmu' p first b i)\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n       LLL_measure i fs' = LLL_measure i fs \\<and>\n       (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n        \\<mu>_small_row i fs' j) \\<and>\n       \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n       \\<le> 1 / 2 \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n       (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "by blast"], ["proof (state)\nthis:\n  \\<exists>fs'.\n     LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n     LLL_measure i fs' = LLL_measure i fs \\<and>\n     (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n      \\<mu>_small_row i fs' j) \\<and>\n     \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n     \\<le> 1 / 2 \\<and>\n     (\\<forall>i' j'.\n         i' < i \\<longrightarrow>\n         j' \\<le> i' \\<longrightarrow>\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n     (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n      LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n     (\\<forall>ii\\<le>m. d fs' ii = d fs ii)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>fs'.\n     LLL_invariant_mod_weak fs' mfs' dmu' p first b \\<and>\n     LLL_measure i fs' = LLL_measure i fs \\<and>\n     (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n      \\<mu>_small_row i fs' j) \\<and>\n     \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n     \\<le> 1 / 2 \\<and>\n     (\\<forall>i' j'.\n         i' < i \\<longrightarrow>\n         j' \\<le> i' \\<longrightarrow>\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n     (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n      LLL_invariant_mod fs' mfs' dmu' p first b i) \\<and>\n     (\\<forall>ii\\<le>m. d fs' ii = d fs ii)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma basis_reduction_mod_swap: assumes\n  Linv: \"LLL_invariant_mod_weak fs mfs dmu p first b\"\n  and mu: \"\\<bar>\\<mu> fs k (k-1)\\<bar> \\<le> 1 / 2\"\n  and res: \"basis_reduction_mod_swap p mfs dmu k = (mfs', dmu'_mod)\" \n  and cond: \"sq_norm (gso fs (k - 1)) > \\<alpha> * sq_norm (gso fs k)\"\n  and i: \"k < m\" \"k \\<noteq> 0\" \nshows \"(\\<exists>fs'. LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n        LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n        (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow> LLL_invariant_mod fs' mfs' dmu'_mod p first b (k-1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "using res[unfolded basis_reduction_mod_swap_def basis_reduction_mod_swap_dmu_mod_def] \n    basis_reduction_mod_swap_main[OF Linv i mu cond]"], ["proof (prove)\nusing this:\n  (mfs[k := mfs ! (k - 1), k - 1 := mfs ! k],\n   mat m m\n    (\\<lambda>(i, j).\n        if j < i \\<and> (j = k \\<or> j = k - 1)\n        then mat m m\n              (\\<lambda>(i, j).\n                  if j < i\n                  then if i = k - 1 then dmu $$ (k, j)\n                       else if i = k \\<and> j \\<noteq> k - 1\n                            then dmu $$ (k - 1, j)\n                            else if k < i \\<and> j = k\n                                 then (d_of dmu (Suc k) *\n dmu $$ (i, k - 1) -\n dmu $$ (k, k - 1) * dmu $$ (i, j)) div\nd_of dmu k\n                                 else if k < i \\<and> j = k - 1\nthen (dmu $$ (k, k - 1) * dmu $$ (i, j) +\n      dmu $$ (i, k) * d_of dmu (k - 1)) div\n     d_of dmu k\nelse dmu $$ (i, j)\n                  else if i = j\n                       then if i = k - 1\n                            then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n                                  dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n                                 d_of dmu k\n                            else d_of dmu (Suc i)\n                       else dmu $$ (i, j)) $$\n             (i, j) symmod\n             (p *\n              d_of\n               (mat m m\n                 (\\<lambda>(i, j).\n                     if j < i\n                     then if i = k - 1 then dmu $$ (k, j)\n                          else if i = k \\<and> j \\<noteq> k - 1\n                               then dmu $$ (k - 1, j)\n                               else if k < i \\<and> j = k\n                                    then (d_of dmu (Suc k) *\n    dmu $$ (i, k - 1) -\n    dmu $$ (k, k - 1) * dmu $$ (i, j)) div\n   d_of dmu k\n                                    else if k < i \\<and> j = k - 1\n   then (dmu $$ (k, k - 1) * dmu $$ (i, j) +\n         dmu $$ (i, k) * d_of dmu (k - 1)) div\n        d_of dmu k\n   else dmu $$ (i, j)\n                     else if i = j\n                          then if i = k - 1\n                               then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n                                     dmu $$ (k, k - 1) *\n                                     dmu $$ (k, k - 1)) div\n                                    d_of dmu k\n                               else d_of dmu (Suc i)\n                          else dmu $$ (i, j)))\n               j *\n              d_of\n               (mat m m\n                 (\\<lambda>(i, j).\n                     if j < i\n                     then if i = k - 1 then dmu $$ (k, j)\n                          else if i = k \\<and> j \\<noteq> k - 1\n                               then dmu $$ (k - 1, j)\n                               else if k < i \\<and> j = k\n                                    then (d_of dmu (Suc k) *\n    dmu $$ (i, k - 1) -\n    dmu $$ (k, k - 1) * dmu $$ (i, j)) div\n   d_of dmu k\n                                    else if k < i \\<and> j = k - 1\n   then (dmu $$ (k, k - 1) * dmu $$ (i, j) +\n         dmu $$ (i, k) * d_of dmu (k - 1)) div\n        d_of dmu k\n   else dmu $$ (i, j)\n                     else if i = j\n                          then if i = k - 1\n                               then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n                                     dmu $$ (k, k - 1) *\n                                     dmu $$ (k, k - 1)) div\n                                    d_of dmu k\n                               else d_of dmu (Suc i)\n                          else dmu $$ (i, j)))\n               (Suc j))\n        else mat m m\n              (\\<lambda>(i, j).\n                  if j < i\n                  then if i = k - 1 then dmu $$ (k, j)\n                       else if i = k \\<and> j \\<noteq> k - 1\n                            then dmu $$ (k - 1, j)\n                            else if k < i \\<and> j = k\n                                 then (d_of dmu (Suc k) *\n dmu $$ (i, k - 1) -\n dmu $$ (k, k - 1) * dmu $$ (i, j)) div\nd_of dmu k\n                                 else if k < i \\<and> j = k - 1\nthen (dmu $$ (k, k - 1) * dmu $$ (i, j) +\n      dmu $$ (i, k) * d_of dmu (k - 1)) div\n     d_of dmu k\nelse dmu $$ (i, j)\n                  else if i = j\n                       then if i = k - 1\n                            then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n                                  dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n                                 d_of dmu k\n                            else d_of dmu (Suc i)\n                       else dmu $$ (i, j)) $$\n             (i, j))) =\n  (mfs', dmu'_mod)\n  \\<lbrakk>?mfs' = mfs[k := mfs ! (k - 1), k - 1 := mfs ! k];\n   ?dmu' =\n   mat m m\n    (\\<lambda>(i, j).\n        if j < i\n        then if i = k - 1 then dmu $$ (k, j)\n             else if i = k \\<and> j \\<noteq> k - 1 then dmu $$ (k - 1, j)\n                  else if k < i \\<and> j = k\n                       then (d_of dmu (Suc k) * dmu $$ (i, k - 1) -\n                             dmu $$ (k, k - 1) * dmu $$ (i, j)) div\n                            d_of dmu k\n                       else if k < i \\<and> j = k - 1\n                            then (dmu $$ (k, k - 1) * dmu $$ (i, j) +\n                                  dmu $$ (i, k) * d_of dmu (k - 1)) div\n                                 d_of dmu k\n                            else dmu $$ (i, j)\n        else if i = j\n             then if i = k - 1\n                  then (d_of dmu (Suc k) * d_of dmu (k - 1) +\n                        dmu $$ (k, k - 1) * dmu $$ (k, k - 1)) div\n                       d_of dmu k\n                  else d_of dmu (Suc i)\n             else dmu $$ (i, j));\n   ?dmu'_mod =\n   mat m m\n    (\\<lambda>(i, j).\n        if j < i \\<and> (j = k \\<or> j = k - 1)\n        then ?dmu' $$ (i, j) symmod (p * d_of ?dmu' j * d_of ?dmu' (Suc j))\n        else ?dmu' $$ (i, j))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs'.\n                       LLL_invariant_mod_weak fs' ?mfs' ?dmu'_mod p first\n                        b \\<and>\n                       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n                       (LLL_invariant_mod fs mfs dmu p first b\n                         k \\<longrightarrow>\n                        LLL_invariant_mod fs' ?mfs' ?dmu'_mod p first b\n                         (k - 1))\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod_weak fs' mfs' dmu'_mod p first b \\<and>\n       LLL_measure (k - 1) fs' < LLL_measure k fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b k \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu'_mod p first b (k - 1))", "by blast"], ["", "lemma basis_reduction_adjust_mod: assumes \n  Linv: \"LLL_invariant_mod_weak fs mfs dmu p first b\" \n  and res: \"basis_reduction_adjust_mod p first mfs dmu = (p', mfs', dmu', g_idx')\" \nshows \"(\\<exists>fs' b'. (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow> LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "proof (cases \"\\<exists> g_idx. basis_reduction_adjust_mod p first mfs dmu = (p, mfs, dmu, g_idx)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs\n 2. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "case True"], ["proof (state)\nthis:\n  \\<exists>g_idx.\n     basis_reduction_adjust_mod p first mfs dmu = (p, mfs, dmu, g_idx)\n\ngoal (2 subgoals):\n 1. \\<exists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs\n 2. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>g_idx.\n     basis_reduction_adjust_mod p first mfs dmu = (p, mfs, dmu, g_idx)\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "using res Linv"], ["proof (prove)\nusing this:\n  \\<exists>g_idx.\n     basis_reduction_adjust_mod p first mfs dmu = (p, mfs, dmu, g_idx)\n  basis_reduction_adjust_mod p first mfs dmu = (p', mfs', dmu', g_idx')\n  LLL_invariant_mod_weak fs mfs dmu p first b\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "by auto"], ["proof (state)\nthis:\n  \\<exists>fs' b'.\n     (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n      LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n     LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n     LLL_measure i fs' = LLL_measure i fs\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "case False"], ["proof (state)\nthis:\n  \\<nexists>g_idx.\n     basis_reduction_adjust_mod p first mfs dmu = (p, mfs, dmu, g_idx)\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "obtain b' g_idx where norm: \"compute_max_gso_norm first dmu = (b', g_idx)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b' g_idx.\n        compute_max_gso_norm first dmu = (b', g_idx) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  compute_max_gso_norm first dmu = (b', g_idx)\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "define p'' where \"p'' = compute_mod_of_max_gso_norm first b'\""], ["proof (state)\nthis:\n  p'' = compute_mod_of_max_gso_norm first b'\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "define d_vec where \"d_vec = vec (Suc m) (\\<lambda>i. d_of dmu i)\""], ["proof (state)\nthis:\n  d_vec = vec (Suc m) (d_of dmu)\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "define mfs'' where \"mfs'' = map (map_vec (\\<lambda>x. x symmod p'')) mfs\""], ["proof (state)\nthis:\n  mfs'' = map (map_vec (\\<lambda>x. x symmod p'')) mfs\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "define dmu'' where \"dmu'' = mat m m (\\<lambda>(i, j).\n                   if j < i then dmu $$ (i, j) symmod (p'' * d_vec $ j * d_vec $ Suc j)\n                   else dmu $$ (i, j))\""], ["proof (state)\nthis:\n  dmu'' =\n  mat m m\n   (\\<lambda>(i, j).\n       if j < i then dmu $$ (i, j) symmod (p'' * d_vec $ j * d_vec $ Suc j)\n       else dmu $$ (i, j))\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "note res = res False"], ["proof (state)\nthis:\n  basis_reduction_adjust_mod p first mfs dmu = (p', mfs', dmu', g_idx')\n  \\<nexists>g_idx.\n     basis_reduction_adjust_mod p first mfs dmu = (p, mfs, dmu, g_idx)\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "note res = res[unfolded basis_reduction_adjust_mod.simps Let_def norm split, \n      folded p''_def, folded d_vec_def mfs''_def, folded dmu''_def]"], ["proof (state)\nthis:\n  (if p'' < p then (p'', mfs'', dmu'', g_idx) else (p, mfs, dmu, g_idx)) =\n  (p', mfs', dmu', g_idx')\n  \\<nexists>g_idxa.\n     (if p'' < p then (p'', mfs'', dmu'', g_idx)\n      else (p, mfs, dmu, g_idx)) =\n     (p, mfs, dmu, g_idxa)\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "from res"], ["proof (chain)\npicking this:\n  (if p'' < p then (p'', mfs'', dmu'', g_idx) else (p, mfs, dmu, g_idx)) =\n  (p', mfs', dmu', g_idx')\n  \\<nexists>g_idxa.\n     (if p'' < p then (p'', mfs'', dmu'', g_idx)\n      else (p, mfs, dmu, g_idx)) =\n     (p, mfs, dmu, g_idxa)", "have pp': \"p'' < p\" and id: \"dmu' = dmu''\" \"mfs' = mfs''\" \"p' = p''\" \"g_idx' = g_idx\""], ["proof (prove)\nusing this:\n  (if p'' < p then (p'', mfs'', dmu'', g_idx) else (p, mfs, dmu, g_idx)) =\n  (p', mfs', dmu', g_idx')\n  \\<nexists>g_idxa.\n     (if p'' < p then (p'', mfs'', dmu'', g_idx)\n      else (p, mfs, dmu, g_idx)) =\n     (p, mfs, dmu, g_idxa)\n\ngoal (1 subgoal):\n 1. p'' < p &&&\n    (dmu' = dmu'' &&& mfs' = mfs'') &&& p' = p'' &&& g_idx' = g_idx", "by (auto split: if_splits)"], ["proof (state)\nthis:\n  p'' < p\n  dmu' = dmu''\n  mfs' = mfs''\n  p' = p''\n  g_idx' = g_idx\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "define I where \"I = {(i',j'). i' < m \\<and> j' < i'}\""], ["proof (state)\nthis:\n  I = {(i', j'). i' < m \\<and> j' < i'}\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "note inv = LLL_invD_modw[OF Linv]"], ["proof (state)\nthis:\n  length mfs = m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "from inv(4)"], ["proof (chain)\npicking this:\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)", "have lin: \"gs.lin_indpt_list (RAT fs)\""], ["proof (prove)\nusing this:\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n\ngoal (1 subgoal):\n 1. gs.lin_indpt_list (map of_int_hom.vec_hom fs)", "."], ["proof (state)\nthis:\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "from inv(3)"], ["proof (chain)\npicking this:\n  lattice_of fs = L", "have lat: \"lattice_of fs = L\""], ["proof (prove)\nusing this:\n  lattice_of fs = L\n\ngoal (1 subgoal):\n 1. lattice_of fs = L", "."], ["proof (state)\nthis:\n  lattice_of fs = L\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "from inv(2)"], ["proof (chain)\npicking this:\n  length fs = m", "have len: \"length fs = m\""], ["proof (prove)\nusing this:\n  length fs = m\n\ngoal (1 subgoal):\n 1. length fs = m", "."], ["proof (state)\nthis:\n  length fs = m\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "have weak: \"LLL_invariant_weak fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak fs", "using Linv"], ["proof (prove)\nusing this:\n  LLL_invariant_mod_weak fs mfs dmu p first b\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak fs", "by (auto simp: LLL_invariant_mod_weak_def LLL_invariant_weak_def)"], ["proof (state)\nthis:\n  LLL_invariant_weak fs\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "from compute_max_gso_norm[OF _ weak, of dmu first, unfolded norm] inv(7)"], ["proof (chain)\npicking this:\n  \\<forall>i'<m. d\\<mu> fs i' i' = dmu $$ (i', i') \\<Longrightarrow>\n  g_bnd_mode first (fst (b', g_idx)) fs\n  \\<forall>i'<m. d\\<mu> fs i' i' = dmu $$ (i', i') \\<Longrightarrow>\n  0 \\<le> fst (b', g_idx)\n  \\<lbrakk>\\<forall>i'<m. d\\<mu> fs i' i' = dmu $$ (i', i'); m = 0\\<rbrakk>\n  \\<Longrightarrow> fst (b', g_idx) = 0\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')", "have bnd: \"g_bnd_mode first b' fs\" and b': \"b' \\<ge> 0\" \"m = 0 \\<Longrightarrow> b' = 0\""], ["proof (prove)\nusing this:\n  \\<forall>i'<m. d\\<mu> fs i' i' = dmu $$ (i', i') \\<Longrightarrow>\n  g_bnd_mode first (fst (b', g_idx)) fs\n  \\<forall>i'<m. d\\<mu> fs i' i' = dmu $$ (i', i') \\<Longrightarrow>\n  0 \\<le> fst (b', g_idx)\n  \\<lbrakk>\\<forall>i'<m. d\\<mu> fs i' i' = dmu $$ (i', i'); m = 0\\<rbrakk>\n  \\<Longrightarrow> fst (b', g_idx) = 0\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n\ngoal (1 subgoal):\n 1. g_bnd_mode first b' fs &&&\n    0 \\<le> b' &&& (m = 0 \\<Longrightarrow> b' = 0)", "by auto"], ["proof (state)\nthis:\n  g_bnd_mode first b' fs\n  0 \\<le> b'\n  m = 0 \\<Longrightarrow> b' = 0\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "from compute_mod_of_max_gso_norm[OF b' p''_def]"], ["proof (chain)\npicking this:\n  (m = 0 \\<Longrightarrow> m = 0) \\<Longrightarrow> 1 < p''\n  (m = 0 \\<Longrightarrow> m = 0) \\<Longrightarrow>\n  mod_invariant b' p'' first", "have p'': \"0 < p''\" \"1 < p''\" \"mod_invariant b' p'' first\""], ["proof (prove)\nusing this:\n  (m = 0 \\<Longrightarrow> m = 0) \\<Longrightarrow> 1 < p''\n  (m = 0 \\<Longrightarrow> m = 0) \\<Longrightarrow>\n  mod_invariant b' p'' first\n\ngoal (1 subgoal):\n 1. 0 < p'' &&& 1 < p'' &&& mod_invariant b' p'' first", "by auto"], ["proof (state)\nthis:\n  0 < p''\n  1 < p''\n  mod_invariant b' p'' first\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "obtain fs' where \n    01: \"lattice_of fs' = L\" and\n    02: \"map (map_vec (\\<lambda> x. x symmod p'')) fs' = map (map_vec (\\<lambda> x. x symmod p'')) fs\" and\n    03: \"lin_indep fs'\" and\n    04: \"length fs' = m\" and\n    05: \"(\\<forall> k < m. gso fs' k = gso fs k)\" and\n    06: \"(\\<forall> k \\<le> m. d fs' k = d fs k)\" and\n    07: \"(\\<forall> i' < m. \\<forall> j' < m. d\\<mu> fs' i' j' = \n      (if (i',j') \\<in> I then d\\<mu> fs i' j' symmod (p'' * d fs j' * d fs (Suc j')) else d\\<mu> fs i' j'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>fs'.\n        \\<lbrakk>lattice_of fs' = L;\n         map (map_vec (\\<lambda>x. x symmod p'')) fs' =\n         map (map_vec (\\<lambda>x. x symmod p'')) fs;\n         gs.lin_indpt_list (map of_int_hom.vec_hom fs'); length fs' = m;\n         \\<forall>k<m.\n            gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n            gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k;\n         \\<forall>k\\<le>m. d fs' k = d fs k;\n         \\<forall>i'<m.\n            \\<forall>j'<m.\n               d\\<mu> fs' i' j' =\n               (if (i', j') \\<in> I\n                then d\\<mu> fs i' j' symmod (p'' * d fs j' * d fs (Suc j'))\n                else d\\<mu> fs i' j')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using mod_finite_set[OF lin len _ lat, of I] I_def p''"], ["proof (prove)\nusing this:\n  \\<lbrakk>I \\<subseteq> {(i, j). i < m \\<and> j < i}; 0 < ?p\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs'.\n                       lattice_of fs' = L \\<and>\n                       map (map_vec (\\<lambda>x. x mod ?p)) fs' =\n                       map (map_vec (\\<lambda>x. x mod ?p)) fs \\<and>\n                       map (map_vec (\\<lambda>x. x symmod ?p)) fs' =\n                       map (map_vec (\\<lambda>x. x symmod ?p)) fs \\<and>\n                       gs.lin_indpt_list (map of_int_hom.vec_hom fs') \\<and>\n                       length fs' = m \\<and>\n                       (\\<forall>k<m.\n                           gram_schmidt_fs.gso n\n                            (map of_int_hom.vec_hom fs') k =\n                           gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                            k) \\<and>\n                       (\\<forall>k\\<le>m. d fs' k = d fs k) \\<and>\n                       (\\<forall>i'<m.\n                           \\<forall>j'<m.\n                              d\\<mu> fs' i' j' =\n                              (if (i', j') \\<in> I\n                               then d\\<mu> fs i' j' symmod\n                                    (?p * d fs j' * d fs (Suc j'))\n                               else d\\<mu> fs i' j'))\n  I = {(i', j'). i' < m \\<and> j' < i'}\n  0 < p''\n  1 < p''\n  mod_invariant b' p'' first\n\ngoal (1 subgoal):\n 1. (\\<And>fs'.\n        \\<lbrakk>lattice_of fs' = L;\n         map (map_vec (\\<lambda>x. x symmod p'')) fs' =\n         map (map_vec (\\<lambda>x. x symmod p'')) fs;\n         gs.lin_indpt_list (map of_int_hom.vec_hom fs'); length fs' = m;\n         \\<forall>k<m.\n            gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n            gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k;\n         \\<forall>k\\<le>m. d fs' k = d fs k;\n         \\<forall>i'<m.\n            \\<forall>j'<m.\n               d\\<mu> fs' i' j' =\n               (if (i', j') \\<in> I\n                then d\\<mu> fs i' j' symmod (p'' * d fs j' * d fs (Suc j'))\n                else d\\<mu> fs i' j')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  lattice_of fs' = L\n  map (map_vec (\\<lambda>x. x symmod p'')) fs' =\n  map (map_vec (\\<lambda>x. x symmod p'')) fs\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs')\n  length fs' = m\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k\n  \\<forall>k\\<le>m. d fs' k = d fs k\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs' i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs i' j' symmod (p'' * d fs j' * d fs (Suc j'))\n         else d\\<mu> fs i' j')\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "from bnd 05"], ["proof (chain)\npicking this:\n  g_bnd_mode first b' fs\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k", "have bnd: \"g_bnd_mode first b' fs'\""], ["proof (prove)\nusing this:\n  g_bnd_mode first b' fs\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k\n\ngoal (1 subgoal):\n 1. g_bnd_mode first b' fs'", "using g_bnd_mode_cong[of fs fs']"], ["proof (prove)\nusing this:\n  g_bnd_mode first b' fs\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k\n  (\\<And>i.\n      i < m \\<Longrightarrow>\n      gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) i =\n      gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n       i) \\<Longrightarrow>\n  g_bnd_mode ?first ?b fs = g_bnd_mode ?first ?b fs'\n\ngoal (1 subgoal):\n 1. g_bnd_mode first b' fs'", "by auto"], ["proof (state)\nthis:\n  g_bnd_mode first b' fs'\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "have D: \"D fs = D fs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D fs = D fs'", "unfolding D_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. nat (prod (d fs) {..<m}) = nat (prod (d fs') {..<m})", "using 06"], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>m. d fs' k = d fs k\n\ngoal (1 subgoal):\n 1. nat (prod (d fs) {..<m}) = nat (prod (d fs') {..<m})", "by auto"], ["proof (state)\nthis:\n  D fs = D fs'\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "have Linv': \"LLL_invariant_mod_weak fs' mfs'' dmu'' p'' first b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_mod_weak fs' mfs'' dmu'' p'' first b'", "proof (intro LLL_invI_modw p'' 04 03 01 bnd)"], ["proof (state)\ngoal (4 subgoals):\n 1. length mfs'' = m\n 2. map (map_vec (\\<lambda>x. x symmod p'')) fs' = mfs''\n 3. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')\n 4. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs' i' j' = dmu'' $$ (i', j')", "{"], ["proof (state)\ngoal (4 subgoals):\n 1. length mfs'' = m\n 2. map (map_vec (\\<lambda>x. x symmod p'')) fs' = mfs''\n 3. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')\n 4. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs' i' j' = dmu'' $$ (i', j')", "have \"mfs'' = map (map_vec (\\<lambda>x. x symmod p'')) mfs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mfs'' = map (map_vec (\\<lambda>x. x symmod p'')) mfs", "by fact"], ["proof (state)\nthis:\n  mfs'' = map (map_vec (\\<lambda>x. x symmod p'')) mfs\n\ngoal (4 subgoals):\n 1. length mfs'' = m\n 2. map (map_vec (\\<lambda>x. x symmod p'')) fs' = mfs''\n 3. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')\n 4. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs' i' j' = dmu'' $$ (i', j')", "also"], ["proof (state)\nthis:\n  mfs'' = map (map_vec (\\<lambda>x. x symmod p'')) mfs\n\ngoal (4 subgoals):\n 1. length mfs'' = m\n 2. map (map_vec (\\<lambda>x. x symmod p'')) fs' = mfs''\n 3. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')\n 4. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs' i' j' = dmu'' $$ (i', j')", "have \"\\<dots> = map (map_vec (\\<lambda>x. x symmod p'')) (map (map_vec (\\<lambda>x. x symmod p)) fs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map (map_vec (\\<lambda>x. x symmod p'')) mfs =\n    map (map_vec (\\<lambda>x. x symmod p''))\n     (map (map_vec (\\<lambda>x. x symmod p)) fs)", "using inv"], ["proof (prove)\nusing this:\n  length mfs = m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n\ngoal (1 subgoal):\n 1. map (map_vec (\\<lambda>x. x symmod p'')) mfs =\n    map (map_vec (\\<lambda>x. x symmod p''))\n     (map (map_vec (\\<lambda>x. x symmod p)) fs)", "by simp"], ["proof (state)\nthis:\n  map (map_vec (\\<lambda>x. x symmod p'')) mfs =\n  map (map_vec (\\<lambda>x. x symmod p''))\n   (map (map_vec (\\<lambda>x. x symmod p)) fs)\n\ngoal (4 subgoals):\n 1. length mfs'' = m\n 2. map (map_vec (\\<lambda>x. x symmod p'')) fs' = mfs''\n 3. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')\n 4. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs' i' j' = dmu'' $$ (i', j')", "also"], ["proof (state)\nthis:\n  map (map_vec (\\<lambda>x. x symmod p'')) mfs =\n  map (map_vec (\\<lambda>x. x symmod p''))\n   (map (map_vec (\\<lambda>x. x symmod p)) fs)\n\ngoal (4 subgoals):\n 1. length mfs'' = m\n 2. map (map_vec (\\<lambda>x. x symmod p'')) fs' = mfs''\n 3. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')\n 4. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs' i' j' = dmu'' $$ (i', j')", "have \"\\<dots> = map (map_vec (\\<lambda>x. x symmod p symmod p'')) fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map (map_vec (\\<lambda>x. x symmod p''))\n     (map (map_vec (\\<lambda>x. x symmod p)) fs) =\n    map (map_vec (\\<lambda>x. x symmod p symmod p'')) fs", "by auto"], ["proof (state)\nthis:\n  map (map_vec (\\<lambda>x. x symmod p''))\n   (map (map_vec (\\<lambda>x. x symmod p)) fs) =\n  map (map_vec (\\<lambda>x. x symmod p symmod p'')) fs\n\ngoal (4 subgoals):\n 1. length mfs'' = m\n 2. map (map_vec (\\<lambda>x. x symmod p'')) fs' = mfs''\n 3. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')\n 4. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs' i' j' = dmu'' $$ (i', j')", "also"], ["proof (state)\nthis:\n  map (map_vec (\\<lambda>x. x symmod p''))\n   (map (map_vec (\\<lambda>x. x symmod p)) fs) =\n  map (map_vec (\\<lambda>x. x symmod p symmod p'')) fs\n\ngoal (4 subgoals):\n 1. length mfs'' = m\n 2. map (map_vec (\\<lambda>x. x symmod p'')) fs' = mfs''\n 3. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')\n 4. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs' i' j' = dmu'' $$ (i', j')", "have \"(\\<lambda> x. x symmod p symmod p'') = (\\<lambda> x. x symmod p'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x symmod p symmod p'') = (\\<lambda>x. x symmod p'')", "proof (intro ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x symmod p symmod p'' = x symmod p''", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x symmod p symmod p'' = x symmod p''", "from \\<open>mod_invariant b p first\\<close>[unfolded mod_invariant_def]"], ["proof (chain)\npicking this:\n  b \\<le> (rat_of_int (p - 1))\\<^sup>2 /\n          (rat_of_nat (bound_number first) + 3) \\<and>\n  (\\<exists>e. p = log_base ^ e)", "obtain e where \n          p: \"p = log_base ^ e\""], ["proof (prove)\nusing this:\n  b \\<le> (rat_of_int (p - 1))\\<^sup>2 /\n          (rat_of_nat (bound_number first) + 3) \\<and>\n  (\\<exists>e. p = log_base ^ e)\n\ngoal (1 subgoal):\n 1. (\\<And>e. p = log_base ^ e \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p = log_base ^ e\n\ngoal (1 subgoal):\n 1. \\<And>x. x symmod p symmod p'' = x symmod p''", "from p''[unfolded mod_invariant_def]"], ["proof (chain)\npicking this:\n  0 < p''\n  1 < p''\n  b' \\<le> (rat_of_int (p'' - 1))\\<^sup>2 /\n           (rat_of_nat (bound_number first) + 3) \\<and>\n  (\\<exists>e. p'' = log_base ^ e)", "obtain e' where\n          p'': \"p'' = log_base ^ e'\""], ["proof (prove)\nusing this:\n  0 < p''\n  1 < p''\n  b' \\<le> (rat_of_int (p'' - 1))\\<^sup>2 /\n           (rat_of_nat (bound_number first) + 3) \\<and>\n  (\\<exists>e. p'' = log_base ^ e)\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        p'' = log_base ^ e' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p'' = log_base ^ e'\n\ngoal (1 subgoal):\n 1. \\<And>x. x symmod p symmod p'' = x symmod p''", "from pp'[unfolded p p''] log_base"], ["proof (chain)\npicking this:\n  log_base ^ e' < log_base ^ e\n  2 \\<le> log_base", "have \"e' \\<le> e\""], ["proof (prove)\nusing this:\n  log_base ^ e' < log_base ^ e\n  2 \\<le> log_base\n\ngoal (1 subgoal):\n 1. e' \\<le> e", "by simp"], ["proof (state)\nthis:\n  e' \\<le> e\n\ngoal (1 subgoal):\n 1. \\<And>x. x symmod p symmod p'' = x symmod p''", "hence dvd: \"p'' dvd p\""], ["proof (prove)\nusing this:\n  e' \\<le> e\n\ngoal (1 subgoal):\n 1. p'' dvd p", "unfolding p p''"], ["proof (prove)\nusing this:\n  e' \\<le> e\n\ngoal (1 subgoal):\n 1. log_base ^ e' dvd log_base ^ e", "using log_base"], ["proof (prove)\nusing this:\n  e' \\<le> e\n  2 \\<le> log_base\n\ngoal (1 subgoal):\n 1. log_base ^ e' dvd log_base ^ e", "by (metis le_imp_power_dvd)"], ["proof (state)\nthis:\n  p'' dvd p\n\ngoal (1 subgoal):\n 1. \\<And>x. x symmod p symmod p'' = x symmod p''", "thus \"x symmod p symmod p'' = x symmod p''\""], ["proof (prove)\nusing this:\n  p'' dvd p\n\ngoal (1 subgoal):\n 1. x symmod p symmod p'' = x symmod p''", "by (intro sym_mod_sym_mod_cancel)"], ["proof (state)\nthis:\n  x symmod p symmod p'' = x symmod p''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. x symmod p symmod p'') = (\\<lambda>x. x symmod p'')\n\ngoal (4 subgoals):\n 1. length mfs'' = m\n 2. map (map_vec (\\<lambda>x. x symmod p'')) fs' = mfs''\n 3. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')\n 4. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs' i' j' = dmu'' $$ (i', j')", "finally"], ["proof (chain)\npicking this:\n  mfs'' = map (map_vec (\\<lambda>x. x symmod p'')) fs", "show \"map (map_vec (\\<lambda>x. x symmod p'')) fs' = mfs''\""], ["proof (prove)\nusing this:\n  mfs'' = map (map_vec (\\<lambda>x. x symmod p'')) fs\n\ngoal (1 subgoal):\n 1. map (map_vec (\\<lambda>x. x symmod p'')) fs' = mfs''", "unfolding 02"], ["proof (prove)\nusing this:\n  mfs'' = map (map_vec (\\<lambda>x. x symmod p'')) fs\n\ngoal (1 subgoal):\n 1. map (map_vec (\\<lambda>x. x symmod p'')) fs = mfs''", ".."], ["proof (state)\nthis:\n  map (map_vec (\\<lambda>x. x symmod p'')) fs' = mfs''\n\ngoal (3 subgoals):\n 1. length mfs'' = m\n 2. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')\n 3. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs' i' j' = dmu'' $$ (i', j')", "}"], ["proof (state)\nthis:\n  map (map_vec (\\<lambda>x. x symmod p'')) fs' = mfs''\n\ngoal (3 subgoals):\n 1. length mfs'' = m\n 2. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')\n 3. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs' i' j' = dmu'' $$ (i', j')", "thus \"length mfs'' = m\""], ["proof (prove)\nusing this:\n  map (map_vec (\\<lambda>x. x symmod p'')) fs' = mfs''\n\ngoal (1 subgoal):\n 1. length mfs'' = m", "using 04"], ["proof (prove)\nusing this:\n  map (map_vec (\\<lambda>x. x symmod p'')) fs' = mfs''\n  length fs' = m\n\ngoal (1 subgoal):\n 1. length mfs'' = m", "by auto"], ["proof (state)\nthis:\n  length mfs'' = m\n\ngoal (2 subgoals):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')\n 2. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs' i' j' = dmu'' $$ (i', j')", "show \"\\<forall>i'<m. \\<forall>j'<i'. \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')", "fix i' j'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')", "assume i'j': \"i' < m\" \"j' < i'\""], ["proof (state)\nthis:\n  i' < m\n  j' < i'\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')", "then"], ["proof (chain)\npicking this:\n  i' < m\n  j' < i'", "have \"d\\<mu> fs' i' j' = d\\<mu> fs i' j' symmod (p'' * d fs' j' * d fs' (Suc j'))\""], ["proof (prove)\nusing this:\n  i' < m\n  j' < i'\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' =\n    d\\<mu> fs i' j' symmod (p'' * d fs' j' * d fs' (Suc j'))", "using 07 06"], ["proof (prove)\nusing this:\n  i' < m\n  j' < i'\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs' i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs i' j' symmod (p'' * d fs j' * d fs (Suc j'))\n         else d\\<mu> fs i' j')\n  \\<forall>k\\<le>m. d fs' k = d fs k\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' =\n    d\\<mu> fs i' j' symmod (p'' * d fs' j' * d fs' (Suc j'))", "unfolding I_def"], ["proof (prove)\nusing this:\n  i' < m\n  j' < i'\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs' i' j' =\n        (if (i', j') \\<in> {(i', j'). i' < m \\<and> j' < i'}\n         then d\\<mu> fs i' j' symmod (p'' * d fs j' * d fs (Suc j'))\n         else d\\<mu> fs i' j')\n  \\<forall>k\\<le>m. d fs' k = d fs k\n\ngoal (1 subgoal):\n 1. d\\<mu> fs' i' j' =\n    d\\<mu> fs i' j' symmod (p'' * d fs' j' * d fs' (Suc j'))", "by simp"], ["proof (state)\nthis:\n  d\\<mu> fs' i' j' =\n  d\\<mu> fs i' j' symmod (p'' * d fs' j' * d fs' (Suc j'))\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')", "then"], ["proof (chain)\npicking this:\n  d\\<mu> fs' i' j' =\n  d\\<mu> fs i' j' symmod (p'' * d fs' j' * d fs' (Suc j'))", "have \"\\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')\""], ["proof (prove)\nusing this:\n  d\\<mu> fs' i' j' =\n  d\\<mu> fs i' j' symmod (p'' * d fs' j' * d fs' (Suc j'))\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')", "using sym_mod_abs p'' LLL_d_pos[OF weak] mult_pos_pos"], ["proof (prove)\nusing this:\n  d\\<mu> fs' i' j' =\n  d\\<mu> fs i' j' symmod (p'' * d fs' j' * d fs' (Suc j'))\n  0 < ?y \\<Longrightarrow> \\<bar>?x symmod ?y\\<bar> < ?y\n  1 \\<le> ?y \\<Longrightarrow> \\<bar>?x symmod ?y\\<bar> \\<le> ?y div 2\n  0 < p''\n  1 < p''\n  mod_invariant b' p'' first\n  ?k \\<le> m \\<Longrightarrow> 0 < d fs ?k\n  \\<lbrakk>(0::?'a) < ?a; (0::?'a) < ?b\\<rbrakk>\n  \\<Longrightarrow> (0::?'a) < ?a * ?b\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')", "by (smt \"06\" i'j' less_imp_le_nat less_trans_Suc nat_SN.gt_trans)"], ["proof (state)\nthis:\n  \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?i'4 < m; ?j'4 < ?i'4\\<rbrakk>\n  \\<Longrightarrow> \\<bar>d\\<mu> fs' ?i'4 ?j'4\\<bar>\n                    < p'' * d fs' ?j'4 * d fs' (Suc ?j'4)\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i'4 < m; ?j'4 < ?i'4\\<rbrakk>\n  \\<Longrightarrow> \\<bar>d\\<mu> fs' ?i'4 ?j'4\\<bar>\n                    < p'' * d fs' ?j'4 * d fs' (Suc ?j'4)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i'4 < m; ?j'4 < ?i'4\\<rbrakk>\n  \\<Longrightarrow> \\<bar>d\\<mu> fs' ?i'4 ?j'4\\<bar>\n                    < p'' * d fs' ?j'4 * d fs' (Suc ?j'4)\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')", "by simp"], ["proof (state)\nthis:\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs' i' j'\\<bar> < p'' * d fs' j' * d fs' (Suc j')\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs' i' j' = dmu'' $$ (i', j')", "from inv(7)"], ["proof (chain)\npicking this:\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')", "have dmu: \"i' < m \\<Longrightarrow> j' < m \\<Longrightarrow> dmu $$ (i', j') = d\\<mu> fs i' j'\" for i' j'"], ["proof (prove)\nusing this:\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i' < m; j' < m\\<rbrakk>\n    \\<Longrightarrow> dmu $$ (i', j') = d\\<mu> fs i' j'", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?i'2 < m; ?j'2 < m\\<rbrakk>\n  \\<Longrightarrow> dmu $$ (?i'2, ?j'2) = d\\<mu> fs ?i'2 ?j'2\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs' i' j' = dmu'' $$ (i', j')", "note d_of = d_of_weak[OF Linv]"], ["proof (state)\nthis:\n  ?i \\<le> m \\<Longrightarrow> d_of dmu ?i = d fs ?i\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs' i' j' = dmu'' $$ (i', j')", "have dvec: \"i \\<le> m \\<Longrightarrow> d_vec $ i = d fs i\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<le> m \\<Longrightarrow> d_vec $ i = d fs i", "unfolding d_vec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<le> m \\<Longrightarrow> vec (Suc m) (d_of dmu) $ i = d fs i", "using d_of"], ["proof (prove)\nusing this:\n  ?i \\<le> m \\<Longrightarrow> d_of dmu ?i = d fs ?i\n\ngoal (1 subgoal):\n 1. i \\<le> m \\<Longrightarrow> vec (Suc m) (d_of dmu) $ i = d fs i", "by auto"], ["proof (state)\nthis:\n  ?i2 \\<le> m \\<Longrightarrow> d_vec $ ?i2 = d fs ?i2\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs' i' j' = dmu'' $$ (i', j')", "show \"\\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs' i' j' = dmu'' $$ (i', j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs' i' j' = dmu'' $$ (i', j')", "using 07"], ["proof (prove)\nusing this:\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs' i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs i' j' symmod (p'' * d fs j' * d fs (Suc j'))\n         else d\\<mu> fs i' j')\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs' i' j' = dmu'' $$ (i', j')", "unfolding dmu''_def I_def"], ["proof (prove)\nusing this:\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs' i' j' =\n        (if (i', j') \\<in> {(i', j'). i' < m \\<and> j' < i'}\n         then d\\<mu> fs i' j' symmod (p'' * d fs j' * d fs (Suc j'))\n         else d\\<mu> fs i' j')\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<m.\n          d\\<mu> fs' i' j' =\n          mat m m\n           (\\<lambda>(i, j).\n               if j < i\n               then dmu $$ (i, j) symmod (p'' * d_vec $ j * d_vec $ Suc j)\n               else dmu $$ (i, j)) $$\n          (i', j')", "by (auto simp: dmu dvec)"], ["proof (state)\nthis:\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs' i' j' = dmu'' $$ (i', j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  LLL_invariant_mod_weak fs' mfs'' dmu'' p'' first b'\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "moreover"], ["proof (state)\nthis:\n  LLL_invariant_mod_weak fs' mfs'' dmu'' p'' first b'\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "{"], ["proof (state)\nthis:\n  LLL_invariant_mod_weak fs' mfs'' dmu'' p'' first b'\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "assume linv: \"LLL_invariant_mod fs mfs dmu p first b i\""], ["proof (state)\nthis:\n  LLL_invariant_mod fs mfs dmu p first b i\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "note inv = LLL_invD_mod[OF linv]"], ["proof (state)\nthis:\n  length mfs = m\n  i \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "hence i: \"i \\<le> m\""], ["proof (prove)\nusing this:\n  length mfs = m\n  i \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n\ngoal (1 subgoal):\n 1. i \\<le> m", "by auto"], ["proof (state)\nthis:\n  i \\<le> m\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "have norm: \"j < m \\<Longrightarrow> \\<parallel>gso fs j\\<parallel>\\<^sup>2 = \\<parallel>gso fs' j\\<parallel>\\<^sup>2\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. j < m \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                j\\<parallel>\\<^sup>2 =\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                j\\<parallel>\\<^sup>2", "using 05"], ["proof (prove)\nusing this:\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k\n\ngoal (1 subgoal):\n 1. j < m \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                j\\<parallel>\\<^sup>2 =\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                j\\<parallel>\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  ?j2 < m \\<Longrightarrow>\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              ?j2\\<parallel>\\<^sup>2 =\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n              ?j2\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "have \"weakly_reduced fs i = weakly_reduced fs' i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n     i =\n    gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs') \\<alpha> i", "unfolding gram_schmidt_fs.weakly_reduced_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>ia.\n        Suc ia < i \\<longrightarrow>\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    ia\\<parallel>\\<^sup>2\n        \\<le> \\<alpha> *\n              \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                          (Suc ia)\\<parallel>\\<^sup>2) =\n    (\\<forall>ia.\n        Suc ia < i \\<longrightarrow>\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                    ia\\<parallel>\\<^sup>2\n        \\<le> \\<alpha> *\n              \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                          (Suc ia)\\<parallel>\\<^sup>2)", "using i"], ["proof (prove)\nusing this:\n  i \\<le> m\n\ngoal (1 subgoal):\n 1. (\\<forall>ia.\n        Suc ia < i \\<longrightarrow>\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    ia\\<parallel>\\<^sup>2\n        \\<le> \\<alpha> *\n              \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                          (Suc ia)\\<parallel>\\<^sup>2) =\n    (\\<forall>ia.\n        Suc ia < i \\<longrightarrow>\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                    ia\\<parallel>\\<^sup>2\n        \\<le> \\<alpha> *\n              \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs')\n                          (Suc ia)\\<parallel>\\<^sup>2)", "by (intro all_cong arg_cong2[where f = \"(\\<le>)\"] arg_cong[where f = \"\\<lambda> x. _ * x\"] norm, auto)"], ["proof (state)\nthis:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i =\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs') \\<alpha> i\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "with inv"], ["proof (chain)\npicking this:\n  length mfs = m\n  i \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i =\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs') \\<alpha> i", "have \"weakly_reduced fs' i\""], ["proof (prove)\nusing this:\n  length mfs = m\n  i \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i =\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs') \\<alpha> i\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs') \\<alpha> i", "by auto"], ["proof (state)\nthis:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs') \\<alpha> i\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "hence \"LLL_invariant_mod fs' mfs'' dmu'' p'' first b' i\""], ["proof (prove)\nusing this:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs') \\<alpha> i\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs' mfs'' dmu'' p'' first b' i", "using inv"], ["proof (prove)\nusing this:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs') \\<alpha> i\n  length mfs = m\n  i \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs' mfs'' dmu'' p'' first b' i", "by (intro LLL_invI_mod LLL_invD_modw[OF Linv'])"], ["proof (state)\nthis:\n  LLL_invariant_mod fs' mfs'' dmu'' p'' first b' i\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "}"], ["proof (state)\nthis:\n  LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n  LLL_invariant_mod fs' mfs'' dmu'' p'' first b' i\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "moreover"], ["proof (state)\nthis:\n  LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n  LLL_invariant_mod fs' mfs'' dmu'' p'' first b' i\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "have \"LLL_measure i fs' = LLL_measure i fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_measure i fs' = LLL_measure i fs", "unfolding LLL_measure_def logD_def D"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 *\n    (if \\<alpha> = 4 / 3 then D fs'\n     else nat \\<lfloor>log (1 / real_of_rat reduction)\n                        (real (D fs'))\\<rfloor>) +\n    m -\n    i =\n    2 *\n    (if \\<alpha> = 4 / 3 then D fs'\n     else nat \\<lfloor>log (1 / real_of_rat reduction)\n                        (real (D fs'))\\<rfloor>) +\n    m -\n    i", ".."], ["proof (state)\nthis:\n  LLL_measure i fs' = LLL_measure i fs\n\ngoal (1 subgoal):\n 1. \\<nexists>g_idx.\n       basis_reduction_adjust_mod p first mfs dmu =\n       (p, mfs, dmu, g_idx) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "ultimately"], ["proof (chain)\npicking this:\n  LLL_invariant_mod_weak fs' mfs'' dmu'' p'' first b'\n  LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n  LLL_invariant_mod fs' mfs'' dmu'' p'' first b' i\n  LLL_measure i fs' = LLL_measure i fs", "show ?thesis"], ["proof (prove)\nusing this:\n  LLL_invariant_mod_weak fs' mfs'' dmu'' p'' first b'\n  LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n  LLL_invariant_mod fs' mfs'' dmu'' p'' first b' i\n  LLL_measure i fs' = LLL_measure i fs\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "unfolding id"], ["proof (prove)\nusing this:\n  LLL_invariant_mod_weak fs' mfs'' dmu'' p'' first b'\n  LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n  LLL_invariant_mod fs' mfs'' dmu'' p'' first b' i\n  LLL_measure i fs' = LLL_measure i fs\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs'' dmu'' p'' first b' i) \\<and>\n       LLL_invariant_mod_weak fs' mfs'' dmu'' p'' first b' \\<and>\n       LLL_measure i fs' = LLL_measure i fs", "by blast"], ["proof (state)\nthis:\n  \\<exists>fs' b'.\n     (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n      LLL_invariant_mod fs' mfs' dmu' p' first b' i) \\<and>\n     LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n     LLL_measure i fs' = LLL_measure i fs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma alpha_comparison: assumes \n  Linv: \"LLL_invariant_mod_weak fs mfs dmu p first b\"\n  and alph: \"quotient_of \\<alpha> = (num, denom)\" \n  and i: \"i < m\" \n  and i0: \"i \\<noteq> 0\" \nshows \"(d_of dmu i * d_of dmu i * denom \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i))\n  = (sq_norm (gso fs (i - 1)) \\<le> \\<alpha> * sq_norm (gso fs i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d_of dmu i * d_of dmu i * denom\n     \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)) =\n    (\\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                 (i - 1)\\<parallel>\\<^sup>2\n     \\<le> \\<alpha> *\n           \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                       i\\<parallel>\\<^sup>2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (d_of dmu i * d_of dmu i * denom\n     \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)) =\n    (\\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                 (i - 1)\\<parallel>\\<^sup>2\n     \\<le> \\<alpha> *\n           \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                       i\\<parallel>\\<^sup>2)", "note inv = LLL_invD_modw[OF Linv]"], ["proof (state)\nthis:\n  length mfs = m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n\ngoal (1 subgoal):\n 1. (d_of dmu i * d_of dmu i * denom\n     \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)) =\n    (\\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                 (i - 1)\\<parallel>\\<^sup>2\n     \\<le> \\<alpha> *\n           \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                       i\\<parallel>\\<^sup>2)", "interpret fs_indep: fs_int_indpt n fs"], ["proof (prove)\ngoal (1 subgoal):\n 1. fs_int_indpt n fs", "by (unfold_locales, insert inv, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. (d_of dmu i * d_of dmu i * denom\n     \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)) =\n    (\\<parallel>fs_indep.gs.gso (i - 1)\\<parallel>\\<^sup>2\n     \\<le> \\<alpha> * \\<parallel>fs_indep.gs.gso i\\<parallel>\\<^sup>2)", "from inv(2) i"], ["proof (chain)\npicking this:\n  length fs = m\n  i < m", "have ifs: \"i < length fs\""], ["proof (prove)\nusing this:\n  length fs = m\n  i < m\n\ngoal (1 subgoal):\n 1. i < length fs", "by auto"], ["proof (state)\nthis:\n  i < length fs\n\ngoal (1 subgoal):\n 1. (d_of dmu i * d_of dmu i * denom\n     \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)) =\n    (\\<parallel>fs_indep.gs.gso (i - 1)\\<parallel>\\<^sup>2\n     \\<le> \\<alpha> * \\<parallel>fs_indep.gs.gso i\\<parallel>\\<^sup>2)", "note d_of_fs = d_of_weak[OF Linv]"], ["proof (state)\nthis:\n  ?i \\<le> m \\<Longrightarrow> d_of dmu ?i = d fs ?i\n\ngoal (1 subgoal):\n 1. (d_of dmu i * d_of dmu i * denom\n     \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)) =\n    (\\<parallel>fs_indep.gs.gso (i - 1)\\<parallel>\\<^sup>2\n     \\<le> \\<alpha> * \\<parallel>fs_indep.gs.gso i\\<parallel>\\<^sup>2)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (d_of dmu i * d_of dmu i * denom\n     \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)) =\n    (\\<parallel>fs_indep.gs.gso (i - 1)\\<parallel>\\<^sup>2\n     \\<le> \\<alpha> * \\<parallel>fs_indep.gs.gso i\\<parallel>\\<^sup>2)", "unfolding fs_indep.d_sq_norm_comparison[OF alph ifs i0, symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (d_of dmu i * d_of dmu i * denom\n     \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)) =\n    (fs_indep.d fs i * fs_indep.d fs i * denom\n     \\<le> num * fs_indep.d fs (i - 1) * fs_indep.d fs (Suc i))", "by (subst (1 2 3 4) d_of_fs, use i d_def fs_indep.d_def in auto)"], ["proof (state)\nthis:\n  (d_of dmu i * d_of dmu i * denom\n   \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)) =\n  (\\<parallel>fs_indep.gs.gso (i - 1)\\<parallel>\\<^sup>2\n   \\<le> \\<alpha> * \\<parallel>fs_indep.gs.gso i\\<parallel>\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma basis_reduction_adjust_swap_add_step: assumes \n  Linv: \"LLL_invariant_mod_weak fs mfs dmu p first b\" \n  and res: \"basis_reduction_adjust_swap_add_step p first mfs dmu g_idx i = (p', mfs', dmu', g_idx')\" \n  and alph: \"quotient_of \\<alpha> = (num, denom)\" \n  and ineq: \"\\<not> (d_of dmu i * d_of dmu i * denom\n              \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i))\" \n  and i: \"i < m\" \n  and i0: \"i \\<noteq> 0\" \nshows \"\\<exists>fs' b'. LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n        LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n        LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n        (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow> \n         LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "obtain mfs0 dmu0 where add: \"basis_reduction_mod_add_row p mfs dmu i (i-1) = (mfs0, dmu0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>mfs0 dmu0.\n        basis_reduction_mod_add_row p mfs dmu i (i - 1) =\n        (mfs0, dmu0) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  basis_reduction_mod_add_row p mfs dmu i (i - 1) = (mfs0, dmu0)\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "obtain mfs1 dmu1 where swap: \"basis_reduction_mod_swap p mfs0 dmu0 i = (mfs1, dmu1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>mfs1 dmu1.\n        basis_reduction_mod_swap p mfs0 dmu0 i =\n        (mfs1, dmu1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  basis_reduction_mod_swap p mfs0 dmu0 i = (mfs1, dmu1)\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "note res = res[unfolded basis_reduction_adjust_swap_add_step_def Let_def add split swap]"], ["proof (state)\nthis:\n  (if i - 1 = g_idx then basis_reduction_adjust_mod p first mfs1 dmu1\n   else (p, mfs1, dmu1, g_idx)) =\n  (p', mfs', dmu', g_idx')\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "from i0"], ["proof (chain)\npicking this:\n  i \\<noteq> 0", "have ii: \"i - 1 < i\""], ["proof (prove)\nusing this:\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. i - 1 < i", "by auto"], ["proof (state)\nthis:\n  i - 1 < i\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "from basis_reduction_mod_add_row[OF Linv add i ii i0]"], ["proof (chain)\npicking this:\n  \\<exists>fs'.\n     LLL_invariant_mod_weak fs' mfs0 dmu0 p first b \\<and>\n     LLL_measure i fs' = LLL_measure i fs \\<and>\n     (\\<mu>_small_row i fs (Suc (i - 1)) \\<longrightarrow>\n      \\<mu>_small_row i fs' (i - 1)) \\<and>\n     \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i\n            (i - 1)\\<bar>\n     \\<le> 1 / 2 \\<and>\n     (\\<forall>i' j'.\n         i' < i \\<longrightarrow>\n         j' \\<le> i' \\<longrightarrow>\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n     (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n      LLL_invariant_mod fs' mfs0 dmu0 p first b i) \\<and>\n     (\\<forall>ii\\<le>m. d fs' ii = d fs ii)", "obtain fs0 where Linv0: \"LLL_invariant_mod_weak fs0 mfs0 dmu0 p first b\" \n    and meas0: \"LLL_measure i fs0 = LLL_measure i fs\" \n    and small: \"\\<bar>\\<mu> fs0 i (i - 1)\\<bar> \\<le> 1 / 2\" \n    and Linv0': \"LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow> LLL_invariant_mod fs0 mfs0 dmu0 p first b i\""], ["proof (prove)\nusing this:\n  \\<exists>fs'.\n     LLL_invariant_mod_weak fs' mfs0 dmu0 p first b \\<and>\n     LLL_measure i fs' = LLL_measure i fs \\<and>\n     (\\<mu>_small_row i fs (Suc (i - 1)) \\<longrightarrow>\n      \\<mu>_small_row i fs' (i - 1)) \\<and>\n     \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i\n            (i - 1)\\<bar>\n     \\<le> 1 / 2 \\<and>\n     (\\<forall>i' j'.\n         i' < i \\<longrightarrow>\n         j' \\<le> i' \\<longrightarrow>\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n     (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n      LLL_invariant_mod fs' mfs0 dmu0 p first b i) \\<and>\n     (\\<forall>ii\\<le>m. d fs' ii = d fs ii)\n\ngoal (1 subgoal):\n 1. (\\<And>fs0.\n        \\<lbrakk>LLL_invariant_mod_weak fs0 mfs0 dmu0 p first b;\n         LLL_measure i fs0 = LLL_measure i fs;\n         \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs0) i\n                (i - 1)\\<bar>\n         \\<le> 1 / 2;\n         LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n         LLL_invariant_mod fs0 mfs0 dmu0 p first b i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  LLL_invariant_mod_weak fs0 mfs0 dmu0 p first b\n  LLL_measure i fs0 = LLL_measure i fs\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs0) i (i - 1)\\<bar>\n  \\<le> 1 / 2\n  LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n  LLL_invariant_mod fs0 mfs0 dmu0 p first b i\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "{"], ["proof (state)\nthis:\n  LLL_invariant_mod_weak fs0 mfs0 dmu0 p first b\n  LLL_measure i fs0 = LLL_measure i fs\n  \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs0) i (i - 1)\\<bar>\n  \\<le> 1 / 2\n  LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n  LLL_invariant_mod fs0 mfs0 dmu0 p first b i\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "have id: \"d_of dmu0 i = d_of dmu i\" \"d_of dmu0 (i - 1) = d_of dmu (i - 1)\"\n      \"d_of dmu0 (Suc i) = d_of dmu (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d_of dmu0 i = d_of dmu i &&&\n    d_of dmu0 (i - 1) = d_of dmu (i - 1) &&&\n    d_of dmu0 (Suc i) = d_of dmu (Suc i)", "using i i0 add[unfolded basis_reduction_mod_add_row_def Let_def]"], ["proof (prove)\nusing this:\n  i < m\n  i \\<noteq> 0\n  (if round_num_denom (dmu $$ (i, i - 1)) (d_of dmu (Suc (i - 1))) = 0\n   then (mfs, dmu)\n   else (mfs[i := map_vec (\\<lambda>x. x symmod p)\n                   (mfs ! i -\n                    round_num_denom (dmu $$ (i, i - 1))\n                     (d_of dmu (Suc (i - 1))) \\<cdot>\\<^sub>v\n                    mfs ! (i - 1))],\n         mat m m\n          (\\<lambda>(i', j').\n              if i' = i \\<and> j' \\<le> i - 1\n              then if j' = i - 1\n                   then dmu $$ (i, j') -\n                        round_num_denom (dmu $$ (i, i - 1))\n                         (d_of dmu (Suc (i - 1))) *\n                        dmu $$ (i - 1, j')\n                   else (dmu $$ (i, j') -\n                         round_num_denom (dmu $$ (i, i - 1))\n                          (d_of dmu (Suc (i - 1))) *\n                         dmu $$ (i - 1, j')) symmod\n                        (p * d_of dmu j' * d_of dmu (Suc j'))\n              else dmu $$ (i', j')))) =\n  (mfs0, dmu0)\n\ngoal (1 subgoal):\n 1. d_of dmu0 i = d_of dmu i &&&\n    d_of dmu0 (i - 1) = d_of dmu (i - 1) &&&\n    d_of dmu0 (Suc i) = d_of dmu (Suc i)", "by (auto split: if_splits simp: d_of_def)"], ["proof (state)\nthis:\n  d_of dmu0 i = d_of dmu i\n  d_of dmu0 (i - 1) = d_of dmu (i - 1)\n  d_of dmu0 (Suc i) = d_of dmu (Suc i)\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "from ineq[folded id, unfolded alpha_comparison[OF Linv0 alph i i0]]"], ["proof (chain)\npicking this:\n  \\<not> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs0)\n                     (i - 1)\\<parallel>\\<^sup>2\n         \\<le> \\<alpha> *\n               \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs0)\n                           i\\<parallel>\\<^sup>2", "have \"\\<parallel>gso fs0 (i - 1)\\<parallel>\\<^sup>2 > \\<alpha> * \\<parallel>gso fs0 i\\<parallel>\\<^sup>2\""], ["proof (prove)\nusing this:\n  \\<not> \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs0)\n                     (i - 1)\\<parallel>\\<^sup>2\n         \\<le> \\<alpha> *\n               \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs0)\n                           i\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<alpha> *\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs0)\n                i\\<parallel>\\<^sup>2\n    < \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs0)\n                  (i - 1)\\<parallel>\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  \\<alpha> *\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs0)\n              i\\<parallel>\\<^sup>2\n  < \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs0)\n                (i - 1)\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "}"], ["proof (state)\nthis:\n  \\<alpha> *\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs0)\n              i\\<parallel>\\<^sup>2\n  < \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs0)\n                (i - 1)\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "note ineq = this"], ["proof (state)\nthis:\n  \\<alpha> *\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs0)\n              i\\<parallel>\\<^sup>2\n  < \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs0)\n                (i - 1)\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "from Linv"], ["proof (chain)\npicking this:\n  LLL_invariant_mod_weak fs mfs dmu p first b", "have \"LLL_invariant_weak fs\""], ["proof (prove)\nusing this:\n  LLL_invariant_mod_weak fs mfs dmu p first b\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak fs", "by (auto simp: LLL_invariant_weak_def LLL_invariant_mod_weak_def)"], ["proof (state)\nthis:\n  LLL_invariant_weak fs\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "from basis_reduction_mod_swap[OF Linv0 small swap ineq i i0, unfolded meas0] Linv0'"], ["proof (chain)\npicking this:\n  \\<exists>fs'.\n     LLL_invariant_mod_weak fs' mfs1 dmu1 p first b \\<and>\n     LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n     (LLL_invariant_mod fs0 mfs0 dmu0 p first b i \\<longrightarrow>\n      LLL_invariant_mod fs' mfs1 dmu1 p first b (i - 1))\n  LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n  LLL_invariant_mod fs0 mfs0 dmu0 p first b i", "obtain fs1 where Linv1: \"LLL_invariant_mod_weak fs1 mfs1 dmu1 p first b\"\n    and meas1: \"LLL_measure (i - 1) fs1 < LLL_measure i fs\" \n    and Linv1': \"LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow> LLL_invariant_mod fs1 mfs1 dmu1 p first b (i - 1)\""], ["proof (prove)\nusing this:\n  \\<exists>fs'.\n     LLL_invariant_mod_weak fs' mfs1 dmu1 p first b \\<and>\n     LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n     (LLL_invariant_mod fs0 mfs0 dmu0 p first b i \\<longrightarrow>\n      LLL_invariant_mod fs' mfs1 dmu1 p first b (i - 1))\n  LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n  LLL_invariant_mod fs0 mfs0 dmu0 p first b i\n\ngoal (1 subgoal):\n 1. (\\<And>fs1.\n        \\<lbrakk>LLL_invariant_mod_weak fs1 mfs1 dmu1 p first b;\n         LLL_measure (i - 1) fs1 < LLL_measure i fs;\n         LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n         LLL_invariant_mod fs1 mfs1 dmu1 p first b (i - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  LLL_invariant_mod_weak fs1 mfs1 dmu1 p first b\n  LLL_measure (i - 1) fs1 < LLL_measure i fs\n  LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n  LLL_invariant_mod fs1 mfs1 dmu1 p first b (i - 1)\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "proof (cases \"i - 1 = g_idx\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i - 1 = g_idx \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))\n 2. i - 1 \\<noteq> g_idx \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "case False"], ["proof (state)\nthis:\n  i - 1 \\<noteq> g_idx\n\ngoal (2 subgoals):\n 1. i - 1 = g_idx \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))\n 2. i - 1 \\<noteq> g_idx \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "with res"], ["proof (chain)\npicking this:\n  (if i - 1 = g_idx then basis_reduction_adjust_mod p first mfs1 dmu1\n   else (p, mfs1, dmu1, g_idx)) =\n  (p', mfs', dmu', g_idx')\n  i - 1 \\<noteq> g_idx", "have id: \"p' = p\" \"mfs' = mfs1\" \"dmu' = dmu1\" \"g_idx' = g_idx\""], ["proof (prove)\nusing this:\n  (if i - 1 = g_idx then basis_reduction_adjust_mod p first mfs1 dmu1\n   else (p, mfs1, dmu1, g_idx)) =\n  (p', mfs', dmu', g_idx')\n  i - 1 \\<noteq> g_idx\n\ngoal (1 subgoal):\n 1. (p' = p &&& mfs' = mfs1) &&& dmu' = dmu1 &&& g_idx' = g_idx", "by auto"], ["proof (state)\nthis:\n  p' = p\n  mfs' = mfs1\n  dmu' = dmu1\n  g_idx' = g_idx\n\ngoal (2 subgoals):\n 1. i - 1 = g_idx \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))\n 2. i - 1 \\<noteq> g_idx \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "unfolding id"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs1 dmu1 p first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs1 dmu1 p first b' (i - 1))", "using Linv1' meas1 Linv1"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n  LLL_invariant_mod fs1 mfs1 dmu1 p first b (i - 1)\n  LLL_measure (i - 1) fs1 < LLL_measure i fs\n  LLL_invariant_mod_weak fs1 mfs1 dmu1 p first b\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs1 dmu1 p first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs1 dmu1 p first b' (i - 1))", "by (intro exI[of _ fs1] exI[of _ b], auto simp: LLL_measure_def)"], ["proof (state)\nthis:\n  \\<exists>fs' b'.\n     LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n     LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n     LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n     (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n      LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))\n\ngoal (1 subgoal):\n 1. i - 1 = g_idx \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i - 1 = g_idx \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "case True"], ["proof (state)\nthis:\n  i - 1 = g_idx\n\ngoal (1 subgoal):\n 1. i - 1 = g_idx \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "with res"], ["proof (chain)\npicking this:\n  (if i - 1 = g_idx then basis_reduction_adjust_mod p first mfs1 dmu1\n   else (p, mfs1, dmu1, g_idx)) =\n  (p', mfs', dmu', g_idx')\n  i - 1 = g_idx", "have adjust: \"basis_reduction_adjust_mod p first mfs1 dmu1 = (p', mfs', dmu', g_idx')\""], ["proof (prove)\nusing this:\n  (if i - 1 = g_idx then basis_reduction_adjust_mod p first mfs1 dmu1\n   else (p, mfs1, dmu1, g_idx)) =\n  (p', mfs', dmu', g_idx')\n  i - 1 = g_idx\n\ngoal (1 subgoal):\n 1. basis_reduction_adjust_mod p first mfs1 dmu1 = (p', mfs', dmu', g_idx')", "by simp"], ["proof (state)\nthis:\n  basis_reduction_adjust_mod p first mfs1 dmu1 = (p', mfs', dmu', g_idx')\n\ngoal (1 subgoal):\n 1. i - 1 = g_idx \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "from basis_reduction_adjust_mod[OF Linv1 adjust, of \"i - 1\"] Linv1'"], ["proof (chain)\npicking this:\n  \\<exists>fs' b'.\n     (LLL_invariant_mod fs1 mfs1 dmu1 p first b (i - 1) \\<longrightarrow>\n      LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1)) \\<and>\n     LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n     LLL_measure (i - 1) fs' = LLL_measure (i - 1) fs1\n  LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n  LLL_invariant_mod fs1 mfs1 dmu1 p first b (i - 1)", "obtain fs' b' where Linvw: \"LLL_invariant_mod_weak fs' mfs' dmu' p' first b'\"\n      and Linv: \"LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow> LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1)\"\n      and meas: \"LLL_measure (i - 1) fs' = LLL_measure (i - 1) fs1\""], ["proof (prove)\nusing this:\n  \\<exists>fs' b'.\n     (LLL_invariant_mod fs1 mfs1 dmu1 p first b (i - 1) \\<longrightarrow>\n      LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1)) \\<and>\n     LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n     LLL_measure (i - 1) fs' = LLL_measure (i - 1) fs1\n  LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n  LLL_invariant_mod fs1 mfs1 dmu1 p first b (i - 1)\n\ngoal (1 subgoal):\n 1. (\\<And>fs' b'.\n        \\<lbrakk>LLL_invariant_mod_weak fs' mfs' dmu' p' first b';\n         LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n         LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1);\n         LLL_measure (i - 1) fs' = LLL_measure (i - 1) fs1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  LLL_invariant_mod_weak fs' mfs' dmu' p' first b'\n  LLL_invariant_mod fs mfs dmu p first b i \\<Longrightarrow>\n  LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1)\n  LLL_measure (i - 1) fs' = LLL_measure (i - 1) fs1\n\ngoal (1 subgoal):\n 1. i - 1 = g_idx \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "note meas = meas1[folded meas]"], ["proof (state)\nthis:\n  LLL_measure (i - 1) fs' < LLL_measure i fs\n\ngoal (1 subgoal):\n 1. i - 1 = g_idx \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "from meas"], ["proof (chain)\npicking this:\n  LLL_measure (i - 1) fs' < LLL_measure i fs", "have meas': \"LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs\""], ["proof (prove)\nusing this:\n  LLL_measure (i - 1) fs' < LLL_measure i fs\n\ngoal (1 subgoal):\n 1. LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs", "unfolding LLL_measure_def"], ["proof (prove)\nusing this:\n  2 * logD fs' + m - (i - 1) < 2 * logD fs + m - i\n\ngoal (1 subgoal):\n 1. 2 * logD fs' + m - (m - 1) < 2 * logD fs + m - (m - 1)", "using i"], ["proof (prove)\nusing this:\n  2 * logD fs' + m - (i - 1) < 2 * logD fs + m - i\n  i < m\n\ngoal (1 subgoal):\n 1. 2 * logD fs' + m - (m - 1) < 2 * logD fs + m - (m - 1)", "by auto"], ["proof (state)\nthis:\n  LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs\n\ngoal (1 subgoal):\n 1. i - 1 = g_idx \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n       (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n        LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))", "by (intro exI conjI impI, rule Linvw, rule meas, rule meas', rule Linv)"], ["proof (state)\nthis:\n  \\<exists>fs' b'.\n     LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n     LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n     LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n     (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n      LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>fs' b'.\n     LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n     LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n     LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n     (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n      LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma basis_reduction_mod_step: assumes \n  Linv: \"LLL_invariant_mod fs mfs dmu p first b i\" \n  and res: \"basis_reduction_mod_step p first mfs dmu g_idx i j = (p', mfs', dmu', g_idx', i', j')\" \n  and i: \"i < m\" \nshows \"\\<exists>fs' b'. LLL_measure i' fs' < LLL_measure i fs \\<and> LLL_invariant_mod fs' mfs' dmu' p' first b' i'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "note res = res[unfolded basis_reduction_mod_step_def Let_def]"], ["proof (state)\nthis:\n  (if i = 0 then (p, mfs, dmu, g_idx, Suc i, j)\n   else case quotient_of \\<alpha> of\n        (num, denom) \\<Rightarrow>\n          if d_of dmu i * d_of dmu i * denom\n             \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)\n          then (p, mfs, dmu, g_idx, Suc i, j)\n          else case basis_reduction_adjust_swap_add_step p first mfs dmu\n                     g_idx i of\n               (p', mfs', dmu', g_idx') \\<Rightarrow>\n                 (p', mfs', dmu', g_idx', i - 1, j + 1)) =\n  (p', mfs', dmu', g_idx', i', j')\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "from Linv"], ["proof (chain)\npicking this:\n  LLL_invariant_mod fs mfs dmu p first b i", "have Linvw: \"LLL_invariant_mod_weak fs mfs dmu p first b\""], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b i\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod_weak fs mfs dmu p first b", "by (auto simp: LLL_invariant_mod_weak_def LLL_invariant_mod_def)"], ["proof (state)\nthis:\n  LLL_invariant_mod_weak fs mfs dmu p first b\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "proof (cases \"i = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'\n 2. i \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "case True"], ["proof (state)\nthis:\n  i = 0\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'\n 2. i \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "then"], ["proof (chain)\npicking this:\n  i = 0", "have ids: \"mfs' = mfs\" \"dmu' = dmu\" \"i' = Suc i\" \"p' = p\""], ["proof (prove)\nusing this:\n  i = 0\n\ngoal (1 subgoal):\n 1. (mfs' = mfs &&& dmu' = dmu) &&& i' = Suc i &&& p' = p", "using res"], ["proof (prove)\nusing this:\n  i = 0\n  (if i = 0 then (p, mfs, dmu, g_idx, Suc i, j)\n   else case quotient_of \\<alpha> of\n        (num, denom) \\<Rightarrow>\n          if d_of dmu i * d_of dmu i * denom\n             \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)\n          then (p, mfs, dmu, g_idx, Suc i, j)\n          else case basis_reduction_adjust_swap_add_step p first mfs dmu\n                     g_idx i of\n               (p', mfs', dmu', g_idx') \\<Rightarrow>\n                 (p', mfs', dmu', g_idx', i - 1, j + 1)) =\n  (p', mfs', dmu', g_idx', i', j')\n\ngoal (1 subgoal):\n 1. (mfs' = mfs &&& dmu' = dmu) &&& i' = Suc i &&& p' = p", "by auto"], ["proof (state)\nthis:\n  mfs' = mfs\n  dmu' = dmu\n  i' = Suc i\n  p' = p\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'\n 2. i \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "have \"LLL_measure i' fs < LLL_measure i fs \\<and> LLL_invariant_mod fs mfs' dmu' p first b i'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_measure i' fs < LLL_measure i fs \\<and>\n    LLL_invariant_mod fs mfs' dmu' p first b i'", "using increase_i_mod[OF Linv i] True res ids inv"], ["proof (prove)\nusing this:\n  (i \\<noteq> 0 \\<Longrightarrow>\n   \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n               (i - 1)\\<parallel>\\<^sup>2\n   \\<le> \\<alpha> *\n         \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                     i\\<parallel>\\<^sup>2) \\<Longrightarrow>\n  LLL_invariant_mod fs mfs dmu p first b (Suc i)\n  (i \\<noteq> 0 \\<Longrightarrow>\n   \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n               (i - 1)\\<parallel>\\<^sup>2\n   \\<le> \\<alpha> *\n         \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                     i\\<parallel>\\<^sup>2) \\<Longrightarrow>\n  LLL_measure (Suc i) fs < LLL_measure i fs\n  i = 0\n  (if i = 0 then (p, mfs, dmu, g_idx, Suc i, j)\n   else case quotient_of \\<alpha> of\n        (num, denom) \\<Rightarrow>\n          if d_of dmu i * d_of dmu i * denom\n             \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)\n          then (p, mfs, dmu, g_idx, Suc i, j)\n          else case basis_reduction_adjust_swap_add_step p first mfs dmu\n                     g_idx i of\n               (p', mfs', dmu', g_idx') \\<Rightarrow>\n                 (p', mfs', dmu', g_idx', i - 1, j + 1)) =\n  (p', mfs', dmu', g_idx', i', j')\n  mfs' = mfs\n  dmu' = dmu\n  i' = Suc i\n  p' = p\n  ?h \\<in> ?H \\<Longrightarrow>\n  inv\\<^bsub>?G\\<^esub> ?h \\<in> generate ?G ?H\n\ngoal (1 subgoal):\n 1. LLL_measure i' fs < LLL_measure i fs \\<and>\n    LLL_invariant_mod fs mfs' dmu' p first b i'", "by simp"], ["proof (state)\nthis:\n  LLL_measure i' fs < LLL_measure i fs \\<and>\n  LLL_invariant_mod fs mfs' dmu' p first b i'\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'\n 2. i \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "then"], ["proof (chain)\npicking this:\n  LLL_measure i' fs < LLL_measure i fs \\<and>\n  LLL_invariant_mod fs mfs' dmu' p first b i'", "show ?thesis"], ["proof (prove)\nusing this:\n  LLL_measure i' fs < LLL_measure i fs \\<and>\n  LLL_invariant_mod fs mfs' dmu' p first b i'\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "using res ids inv"], ["proof (prove)\nusing this:\n  LLL_measure i' fs < LLL_measure i fs \\<and>\n  LLL_invariant_mod fs mfs' dmu' p first b i'\n  (if i = 0 then (p, mfs, dmu, g_idx, Suc i, j)\n   else case quotient_of \\<alpha> of\n        (num, denom) \\<Rightarrow>\n          if d_of dmu i * d_of dmu i * denom\n             \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)\n          then (p, mfs, dmu, g_idx, Suc i, j)\n          else case basis_reduction_adjust_swap_add_step p first mfs dmu\n                     g_idx i of\n               (p', mfs', dmu', g_idx') \\<Rightarrow>\n                 (p', mfs', dmu', g_idx', i - 1, j + 1)) =\n  (p', mfs', dmu', g_idx', i', j')\n  mfs' = mfs\n  dmu' = dmu\n  i' = Suc i\n  p' = p\n  ?h \\<in> ?H \\<Longrightarrow>\n  inv\\<^bsub>?G\\<^esub> ?h \\<in> generate ?G ?H\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "by auto"], ["proof (state)\nthis:\n  \\<exists>fs' b'.\n     LLL_measure i' fs' < LLL_measure i fs \\<and>\n     LLL_invariant_mod fs' mfs' dmu' p' first b' i'\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "case False"], ["proof (state)\nthis:\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "hence id: \"(i = 0) = False\""], ["proof (prove)\nusing this:\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (i = 0) = False", "by auto"], ["proof (state)\nthis:\n  (i = 0) = False\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "obtain num denom where alph: \"quotient_of \\<alpha> = (num, denom)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>num denom.\n        quotient_of \\<alpha> = (num, denom) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  quotient_of \\<alpha> = (num, denom)\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "note res = res[unfolded id if_False alph split]"], ["proof (state)\nthis:\n  (if d_of dmu i * d_of dmu i * denom\n      \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)\n   then (p, mfs, dmu, g_idx, Suc i, j)\n   else case basis_reduction_adjust_swap_add_step p first mfs dmu g_idx i of\n        (p', mfs', dmu', g_idx') \\<Rightarrow>\n          (p', mfs', dmu', g_idx', i - 1, j + 1)) =\n  (p', mfs', dmu', g_idx', i', j')\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "let ?comp = \"d_of dmu i * d_of dmu i * denom \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "proof (cases ?comp)"], ["proof (state)\ngoal (2 subgoals):\n 1. d_of dmu i * d_of dmu i * denom\n    \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'\n 2. \\<not> d_of dmu i * d_of dmu i * denom\n           \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "case False"], ["proof (state)\nthis:\n  \\<not> d_of dmu i * d_of dmu i * denom\n         \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)\n\ngoal (2 subgoals):\n 1. d_of dmu i * d_of dmu i * denom\n    \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'\n 2. \\<not> d_of dmu i * d_of dmu i * denom\n           \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "hence id: \"?comp = False\""], ["proof (prove)\nusing this:\n  \\<not> d_of dmu i * d_of dmu i * denom\n         \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)\n\ngoal (1 subgoal):\n 1. (d_of dmu i * d_of dmu i * denom\n     \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)) =\n    False", "by simp"], ["proof (state)\nthis:\n  (d_of dmu i * d_of dmu i * denom\n   \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)) =\n  False\n\ngoal (2 subgoals):\n 1. d_of dmu i * d_of dmu i * denom\n    \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'\n 2. \\<not> d_of dmu i * d_of dmu i * denom\n           \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "note res = res[unfolded id if_False]"], ["proof (state)\nthis:\n  (case basis_reduction_adjust_swap_add_step p first mfs dmu g_idx i of\n   (p', mfs', dmu', g_idx') \\<Rightarrow>\n     (p', mfs', dmu', g_idx', i - 1, j + 1)) =\n  (p', mfs', dmu', g_idx', i', j')\n\ngoal (2 subgoals):\n 1. d_of dmu i * d_of dmu i * denom\n    \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'\n 2. \\<not> d_of dmu i * d_of dmu i * denom\n           \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "let ?step = \"basis_reduction_adjust_swap_add_step p first mfs dmu g_idx i\""], ["proof (state)\ngoal (2 subgoals):\n 1. d_of dmu i * d_of dmu i * denom\n    \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'\n 2. \\<not> d_of dmu i * d_of dmu i * denom\n           \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "from res"], ["proof (chain)\npicking this:\n  (case basis_reduction_adjust_swap_add_step p first mfs dmu g_idx i of\n   (p', mfs', dmu', g_idx') \\<Rightarrow>\n     (p', mfs', dmu', g_idx', i - 1, j + 1)) =\n  (p', mfs', dmu', g_idx', i', j')", "have step: \"?step = (p', mfs', dmu', g_idx')\" \n        and i': \"i' = i - 1\""], ["proof (prove)\nusing this:\n  (case basis_reduction_adjust_swap_add_step p first mfs dmu g_idx i of\n   (p', mfs', dmu', g_idx') \\<Rightarrow>\n     (p', mfs', dmu', g_idx', i - 1, j + 1)) =\n  (p', mfs', dmu', g_idx', i', j')\n\ngoal (1 subgoal):\n 1. basis_reduction_adjust_swap_add_step p first mfs dmu g_idx i =\n    (p', mfs', dmu', g_idx') &&&\n    i' = i - 1", "by (cases ?step, auto)+"], ["proof (state)\nthis:\n  basis_reduction_adjust_swap_add_step p first mfs dmu g_idx i =\n  (p', mfs', dmu', g_idx')\n  i' = i - 1\n\ngoal (2 subgoals):\n 1. d_of dmu i * d_of dmu i * denom\n    \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'\n 2. \\<not> d_of dmu i * d_of dmu i * denom\n           \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "from basis_reduction_adjust_swap_add_step[OF Linvw step alph False i \\<open>i \\<noteq> 0\\<close>] Linv"], ["proof (chain)\npicking this:\n  \\<exists>fs' b'.\n     LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n     LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n     LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n     (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n      LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))\n  LLL_invariant_mod fs mfs dmu p first b i", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>fs' b'.\n     LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n     LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n     LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n     (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n      LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))\n  LLL_invariant_mod fs mfs dmu p first b i\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "unfolding i'"], ["proof (prove)\nusing this:\n  \\<exists>fs' b'.\n     LLL_invariant_mod_weak fs' mfs' dmu' p' first b' \\<and>\n     LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n     LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n     (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n      LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1))\n  LLL_invariant_mod fs mfs dmu p first b i\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_measure (i - 1) fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' (i - 1)", "by blast"], ["proof (state)\nthis:\n  \\<exists>fs' b'.\n     LLL_measure i' fs' < LLL_measure i fs \\<and>\n     LLL_invariant_mod fs' mfs' dmu' p' first b' i'\n\ngoal (1 subgoal):\n 1. d_of dmu i * d_of dmu i * denom\n    \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. d_of dmu i * d_of dmu i * denom\n    \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "case True"], ["proof (state)\nthis:\n  d_of dmu i * d_of dmu i * denom\n  \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)\n\ngoal (1 subgoal):\n 1. d_of dmu i * d_of dmu i * denom\n    \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "hence id: \"?comp = True\""], ["proof (prove)\nusing this:\n  d_of dmu i * d_of dmu i * denom\n  \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)\n\ngoal (1 subgoal):\n 1. (d_of dmu i * d_of dmu i * denom\n     \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)) =\n    True", "by simp"], ["proof (state)\nthis:\n  (d_of dmu i * d_of dmu i * denom\n   \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)) =\n  True\n\ngoal (1 subgoal):\n 1. d_of dmu i * d_of dmu i * denom\n    \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "note res = res[unfolded id if_True]"], ["proof (state)\nthis:\n  (p, mfs, dmu, g_idx, Suc i, j) = (p', mfs', dmu', g_idx', i', j')\n\ngoal (1 subgoal):\n 1. d_of dmu i * d_of dmu i * denom\n    \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "from res"], ["proof (chain)\npicking this:\n  (p, mfs, dmu, g_idx, Suc i, j) = (p', mfs', dmu', g_idx', i', j')", "have ids: \"p' = p\" \"mfs' = mfs\" \"dmu' = dmu\" \"i' = Suc i\""], ["proof (prove)\nusing this:\n  (p, mfs, dmu, g_idx, Suc i, j) = (p', mfs', dmu', g_idx', i', j')\n\ngoal (1 subgoal):\n 1. (p' = p &&& mfs' = mfs) &&& dmu' = dmu &&& i' = Suc i", "by auto"], ["proof (state)\nthis:\n  p' = p\n  mfs' = mfs\n  dmu' = dmu\n  i' = Suc i\n\ngoal (1 subgoal):\n 1. d_of dmu i * d_of dmu i * denom\n    \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "from True alpha_comparison[OF Linvw alph i False]"], ["proof (chain)\npicking this:\n  d_of dmu i * d_of dmu i * denom\n  \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)\n  (d_of dmu i * d_of dmu i * denom\n   \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)) =\n  (\\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n               (i - 1)\\<parallel>\\<^sup>2\n   \\<le> \\<alpha> *\n         \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                     i\\<parallel>\\<^sup>2)", "have ineq: \"sq_norm (gso fs (i - 1)) \\<le> \\<alpha> * sq_norm (gso fs i)\""], ["proof (prove)\nusing this:\n  d_of dmu i * d_of dmu i * denom\n  \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)\n  (d_of dmu i * d_of dmu i * denom\n   \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i)) =\n  (\\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n               (i - 1)\\<parallel>\\<^sup>2\n   \\<le> \\<alpha> *\n         \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                     i\\<parallel>\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                (i - 1)\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      i\\<parallel>\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              (i - 1)\\<parallel>\\<^sup>2\n  \\<le> \\<alpha> *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    i\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. d_of dmu i * d_of dmu i * denom\n    \\<le> num * d_of dmu (i - 1) * d_of dmu (Suc i) \\<Longrightarrow>\n    \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "from increase_i_mod[OF Linv i ineq]"], ["proof (chain)\npicking this:\n  LLL_invariant_mod fs mfs dmu p first b (Suc i)\n  LLL_measure (Suc i) fs < LLL_measure i fs", "show ?thesis"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b (Suc i)\n  LLL_measure (Suc i) fs < LLL_measure i fs\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_measure i' fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs' dmu' p' first b' i'", "unfolding ids"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b (Suc i)\n  LLL_measure (Suc i) fs < LLL_measure i fs\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'.\n       LLL_measure (Suc i) fs' < LLL_measure i fs \\<and>\n       LLL_invariant_mod fs' mfs dmu p first b' (Suc i)", "by auto"], ["proof (state)\nthis:\n  \\<exists>fs' b'.\n     LLL_measure i' fs' < LLL_measure i fs \\<and>\n     LLL_invariant_mod fs' mfs' dmu' p' first b' i'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>fs' b'.\n     LLL_measure i' fs' < LLL_measure i fs \\<and>\n     LLL_invariant_mod fs' mfs' dmu' p' first b' i'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>fs' b'.\n     LLL_measure i' fs' < LLL_measure i fs \\<and>\n     LLL_invariant_mod fs' mfs' dmu' p' first b' i'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma basis_reduction_mod_main: assumes \"LLL_invariant_mod fs mfs dmu p first b i\" \n  and res: \"basis_reduction_mod_main p first mfs dmu g_idx i j = (p', mfs', dmu')\" \nshows \"\\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "using assms"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b i\n  basis_reduction_mod_main p first mfs dmu g_idx i j = (p', mfs', dmu')\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "proof (induct \"LLL_measure i fs\" arbitrary: i mfs dmu j p b fs g_idx rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i fs mfs dmu j p b g_idx.\n       \\<lbrakk>\\<And>ia fsa mfs dmu j p b g_idx.\n                   \\<lbrakk>LLL_measure ia fsa < LLL_measure i fs;\n                    LLL_invariant_mod fsa mfs dmu p first b ia;\n                    basis_reduction_mod_main p first mfs dmu g_idx ia j =\n                    (p', mfs', dmu')\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs' b'.\n  LLL_invariant_mod fs' mfs' dmu' p' first b' m;\n        LLL_invariant_mod fs mfs dmu p first b i;\n        basis_reduction_mod_main p first mfs dmu g_idx i j =\n        (p', mfs', dmu')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs' b'.\n                            LLL_invariant_mod fs' mfs' dmu' p' first b' m", "case (less i fs mfs dmu j p b g_idx)"], ["proof (state)\nthis:\n  \\<lbrakk>LLL_measure ?i2 ?fs2 < LLL_measure i fs;\n   LLL_invariant_mod ?fs2 ?mfs2 ?dmu2 ?p2 first ?b2 ?i2;\n   basis_reduction_mod_main ?p2 first ?mfs2 ?dmu2 ?g_idx2 ?i2 ?j2 =\n   (p', mfs', dmu')\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs' b'.\n                       LLL_invariant_mod fs' mfs' dmu' p' first b' m\n  LLL_invariant_mod fs mfs dmu p first b i\n  basis_reduction_mod_main p first mfs dmu g_idx i j = (p', mfs', dmu')\n\ngoal (1 subgoal):\n 1. \\<And>i fs mfs dmu j p b g_idx.\n       \\<lbrakk>\\<And>ia fsa mfs dmu j p b g_idx.\n                   \\<lbrakk>LLL_measure ia fsa < LLL_measure i fs;\n                    LLL_invariant_mod fsa mfs dmu p first b ia;\n                    basis_reduction_mod_main p first mfs dmu g_idx ia j =\n                    (p', mfs', dmu')\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs' b'.\n  LLL_invariant_mod fs' mfs' dmu' p' first b' m;\n        LLL_invariant_mod fs mfs dmu p first b i;\n        basis_reduction_mod_main p first mfs dmu g_idx i j =\n        (p', mfs', dmu')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs' b'.\n                            LLL_invariant_mod fs' mfs' dmu' p' first b' m", "hence fsinv: \"LLL_invariant_mod fs mfs dmu p first b i\""], ["proof (prove)\nusing this:\n  \\<lbrakk>LLL_measure ?i2 ?fs2 < LLL_measure i fs;\n   LLL_invariant_mod ?fs2 ?mfs2 ?dmu2 ?p2 first ?b2 ?i2;\n   basis_reduction_mod_main ?p2 first ?mfs2 ?dmu2 ?g_idx2 ?i2 ?j2 =\n   (p', mfs', dmu')\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs' b'.\n                       LLL_invariant_mod fs' mfs' dmu' p' first b' m\n  LLL_invariant_mod fs mfs dmu p first b i\n  basis_reduction_mod_main p first mfs dmu g_idx i j = (p', mfs', dmu')\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu p first b i", "by auto"], ["proof (state)\nthis:\n  LLL_invariant_mod fs mfs dmu p first b i\n\ngoal (1 subgoal):\n 1. \\<And>i fs mfs dmu j p b g_idx.\n       \\<lbrakk>\\<And>ia fsa mfs dmu j p b g_idx.\n                   \\<lbrakk>LLL_measure ia fsa < LLL_measure i fs;\n                    LLL_invariant_mod fsa mfs dmu p first b ia;\n                    basis_reduction_mod_main p first mfs dmu g_idx ia j =\n                    (p', mfs', dmu')\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs' b'.\n  LLL_invariant_mod fs' mfs' dmu' p' first b' m;\n        LLL_invariant_mod fs mfs dmu p first b i;\n        basis_reduction_mod_main p first mfs dmu g_idx i j =\n        (p', mfs', dmu')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs' b'.\n                            LLL_invariant_mod fs' mfs' dmu' p' first b' m", "note res = less(3)[unfolded basis_reduction_mod_main.simps[of p first mfs dmu g_idx i j]]"], ["proof (state)\nthis:\n  (if i < m\n   then case basis_reduction_mod_step p first mfs dmu g_idx i j of\n        (p', mfs', dmu', g_idx', x, xb) \\<Rightarrow>\n          basis_reduction_mod_main p' first mfs' dmu' g_idx' x xb\n   else (p, mfs, dmu)) =\n  (p', mfs', dmu')\n\ngoal (1 subgoal):\n 1. \\<And>i fs mfs dmu j p b g_idx.\n       \\<lbrakk>\\<And>ia fsa mfs dmu j p b g_idx.\n                   \\<lbrakk>LLL_measure ia fsa < LLL_measure i fs;\n                    LLL_invariant_mod fsa mfs dmu p first b ia;\n                    basis_reduction_mod_main p first mfs dmu g_idx ia j =\n                    (p', mfs', dmu')\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs' b'.\n  LLL_invariant_mod fs' mfs' dmu' p' first b' m;\n        LLL_invariant_mod fs mfs dmu p first b i;\n        basis_reduction_mod_main p first mfs dmu g_idx i j =\n        (p', mfs', dmu')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs' b'.\n                            LLL_invariant_mod fs' mfs' dmu' p' first b' m", "note inv = less(2)"], ["proof (state)\nthis:\n  LLL_invariant_mod fs mfs dmu p first b i\n\ngoal (1 subgoal):\n 1. \\<And>i fs mfs dmu j p b g_idx.\n       \\<lbrakk>\\<And>ia fsa mfs dmu j p b g_idx.\n                   \\<lbrakk>LLL_measure ia fsa < LLL_measure i fs;\n                    LLL_invariant_mod fsa mfs dmu p first b ia;\n                    basis_reduction_mod_main p first mfs dmu g_idx ia j =\n                    (p', mfs', dmu')\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs' b'.\n  LLL_invariant_mod fs' mfs' dmu' p' first b' m;\n        LLL_invariant_mod fs mfs dmu p first b i;\n        basis_reduction_mod_main p first mfs dmu g_idx i j =\n        (p', mfs', dmu')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs' b'.\n                            LLL_invariant_mod fs' mfs' dmu' p' first b' m", "note IH = less(1)"], ["proof (state)\nthis:\n  \\<lbrakk>LLL_measure ?i2 ?fs2 < LLL_measure i fs;\n   LLL_invariant_mod ?fs2 ?mfs2 ?dmu2 ?p2 first ?b2 ?i2;\n   basis_reduction_mod_main ?p2 first ?mfs2 ?dmu2 ?g_idx2 ?i2 ?j2 =\n   (p', mfs', dmu')\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs' b'.\n                       LLL_invariant_mod fs' mfs' dmu' p' first b' m\n\ngoal (1 subgoal):\n 1. \\<And>i fs mfs dmu j p b g_idx.\n       \\<lbrakk>\\<And>ia fsa mfs dmu j p b g_idx.\n                   \\<lbrakk>LLL_measure ia fsa < LLL_measure i fs;\n                    LLL_invariant_mod fsa mfs dmu p first b ia;\n                    basis_reduction_mod_main p first mfs dmu g_idx ia j =\n                    (p', mfs', dmu')\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs' b'.\n  LLL_invariant_mod fs' mfs' dmu' p' first b' m;\n        LLL_invariant_mod fs mfs dmu p first b i;\n        basis_reduction_mod_main p first mfs dmu g_idx i j =\n        (p', mfs', dmu')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs' b'.\n                            LLL_invariant_mod fs' mfs' dmu' p' first b' m", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "proof (cases \"i < m\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i < m \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n 2. \\<not> i < m \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "case i: True"], ["proof (state)\nthis:\n  i < m\n\ngoal (2 subgoals):\n 1. i < m \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n 2. \\<not> i < m \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "obtain p' mfs' dmu' g_idx' i' j' where step: \"basis_reduction_mod_step p first mfs dmu g_idx i j = (p', mfs', dmu', g_idx', i', j')\" \n      (is \"?step = _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p' mfs' dmu' g_idx' i' j'.\n        basis_reduction_mod_step p first mfs dmu g_idx i j =\n        (p', mfs', dmu', g_idx', i', j') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases ?step, auto)"], ["proof (state)\nthis:\n  basis_reduction_mod_step p first mfs dmu g_idx i j =\n  (p', mfs', dmu', g_idx', i', j')\n\ngoal (2 subgoals):\n 1. i < m \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n 2. \\<not> i < m \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "then"], ["proof (chain)\npicking this:\n  basis_reduction_mod_step p first mfs dmu g_idx i j =\n  (p', mfs', dmu', g_idx', i', j')", "obtain fs' b' where Linv: \"LLL_invariant_mod fs' mfs' dmu' p' first b' i'\" \n      and decr: \"LLL_measure i' fs' < LLL_measure i fs\""], ["proof (prove)\nusing this:\n  basis_reduction_mod_step p first mfs dmu g_idx i j =\n  (p', mfs', dmu', g_idx', i', j')\n\ngoal (1 subgoal):\n 1. (\\<And>fs' b'.\n        \\<lbrakk>LLL_invariant_mod fs' mfs' dmu' p' first b' i';\n         LLL_measure i' fs' < LLL_measure i fs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using basis_reduction_mod_step[OF fsinv step i] i fsinv"], ["proof (prove)\nusing this:\n  basis_reduction_mod_step p first mfs dmu g_idx i j =\n  (p', mfs', dmu', g_idx', i', j')\n  \\<exists>fs' b'.\n     LLL_measure i' fs' < LLL_measure i fs \\<and>\n     LLL_invariant_mod fs' mfs' dmu' p' first b' i'\n  i < m\n  LLL_invariant_mod fs mfs dmu p first b i\n\ngoal (1 subgoal):\n 1. (\\<And>fs' b'.\n        \\<lbrakk>LLL_invariant_mod fs' mfs' dmu' p' first b' i';\n         LLL_measure i' fs' < LLL_measure i fs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  LLL_invariant_mod fs' mfs' dmu' p' first b' i'\n  LLL_measure i' fs' < LLL_measure i fs\n\ngoal (2 subgoals):\n 1. i < m \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n 2. \\<not> i < m \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "note res = res[unfolded step split]"], ["proof (state)\nthis:\n  (if i < m then basis_reduction_mod_main p' first mfs' dmu' g_idx' i' j'\n   else (p, mfs, dmu)) =\n  (p', mfs', dmu')\n\ngoal (2 subgoals):\n 1. i < m \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n 2. \\<not> i < m \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "from res i"], ["proof (chain)\npicking this:\n  (if i < m then basis_reduction_mod_main p' first mfs' dmu' g_idx' i' j'\n   else (p, mfs, dmu)) =\n  (p', mfs', dmu')\n  i < m", "show ?thesis"], ["proof (prove)\nusing this:\n  (if i < m then basis_reduction_mod_main p' first mfs' dmu' g_idx' i' j'\n   else (p, mfs, dmu)) =\n  (p', mfs', dmu')\n  i < m\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "using IH[OF decr Linv]"], ["proof (prove)\nusing this:\n  (if i < m then basis_reduction_mod_main p' first mfs' dmu' g_idx' i' j'\n   else (p, mfs, dmu)) =\n  (p', mfs', dmu')\n  i < m\n  basis_reduction_mod_main p' first mfs' dmu' ?g_idx2 i' ?j2 =\n  (p', mfs', dmu') \\<Longrightarrow>\n  \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "by auto"], ["proof (state)\nthis:\n  \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n\ngoal (1 subgoal):\n 1. \\<not> i < m \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i < m \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "case False"], ["proof (state)\nthis:\n  \\<not> i < m\n\ngoal (1 subgoal):\n 1. \\<not> i < m \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "with LLL_invD_mod[OF fsinv] res"], ["proof (chain)\npicking this:\n  length mfs = m\n  i \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  (if i < m\n   then case basis_reduction_mod_step p first mfs dmu g_idx i j of\n        (p', mfs', dmu', g_idx', x, xb) \\<Rightarrow>\n          basis_reduction_mod_main p' first mfs' dmu' g_idx' x xb\n   else (p, mfs, dmu)) =\n  (p', mfs', dmu')\n  \\<not> i < m", "have i: \"i = m\" \"p' = p\""], ["proof (prove)\nusing this:\n  length mfs = m\n  i \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  (if i < m\n   then case basis_reduction_mod_step p first mfs dmu g_idx i j of\n        (p', mfs', dmu', g_idx', x, xb) \\<Rightarrow>\n          basis_reduction_mod_main p' first mfs' dmu' g_idx' x xb\n   else (p, mfs, dmu)) =\n  (p', mfs', dmu')\n  \\<not> i < m\n\ngoal (1 subgoal):\n 1. i = m &&& p' = p", "by auto"], ["proof (state)\nthis:\n  i = m\n  p' = p\n\ngoal (1 subgoal):\n 1. \\<not> i < m \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "then"], ["proof (chain)\npicking this:\n  i = m\n  p' = p", "obtain fs' b' where \"LLL_invariant_mod fs' mfs' dmu' p first b' m\""], ["proof (prove)\nusing this:\n  i = m\n  p' = p\n\ngoal (1 subgoal):\n 1. (\\<And>fs' b'.\n        LLL_invariant_mod fs' mfs' dmu' p first b' m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using False res fsinv"], ["proof (prove)\nusing this:\n  i = m\n  p' = p\n  \\<not> i < m\n  (if i < m\n   then case basis_reduction_mod_step p first mfs dmu g_idx i j of\n        (p', mfs', dmu', g_idx', x, xb) \\<Rightarrow>\n          basis_reduction_mod_main p' first mfs' dmu' g_idx' x xb\n   else (p, mfs, dmu)) =\n  (p', mfs', dmu')\n  LLL_invariant_mod fs mfs dmu p first b i\n\ngoal (1 subgoal):\n 1. (\\<And>fs' b'.\n        LLL_invariant_mod fs' mfs' dmu' p first b' m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_mod fs' mfs' dmu' p first b' m\n\ngoal (1 subgoal):\n 1. \\<not> i < m \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "then"], ["proof (chain)\npicking this:\n  LLL_invariant_mod fs' mfs' dmu' p first b' m", "show ?thesis"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs' mfs' dmu' p first b' m\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "using i"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs' mfs' dmu' p first b' m\n  i = m\n  p' = p\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "by auto"], ["proof (state)\nthis:\n  \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma compute_max_gso_quot_alpha: \n  assumes inv: \"LLL_invariant_mod_weak fs mfs dmu p first b\" \n  and max: \"compute_max_gso_quot dmu = (msq_num, msq_denum, idx)\"\n  and alph: \"quotient_of \\<alpha> = (num, denum)\" \n  and cmp: \"(msq_num * denum  > num * msq_denum) = cmp\" \n  and m: \"m > 1\" \nshows \"cmp \\<Longrightarrow> idx \\<noteq> 0 \\<and> idx < m \\<and> \\<not> (d_of dmu idx * d_of dmu idx * denum\n              \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx))\" \n  and \"\\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cmp \\<Longrightarrow>\n     idx \\<noteq> 0 \\<and>\n     idx < m \\<and>\n     \\<not> d_of dmu idx * d_of dmu idx * denum\n            \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)) &&&\n    (\\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. cmp \\<Longrightarrow>\n    idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n 2. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "from inv"], ["proof (chain)\npicking this:\n  LLL_invariant_mod_weak fs mfs dmu p first b", "have fsinv: \"LLL_invariant_weak fs\""], ["proof (prove)\nusing this:\n  LLL_invariant_mod_weak fs mfs dmu p first b\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak fs", "by (simp add: LLL_invariant_mod_weak_def LLL_invariant_weak_def)"], ["proof (state)\nthis:\n  LLL_invariant_weak fs\n\ngoal (2 subgoals):\n 1. cmp \\<Longrightarrow>\n    idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n 2. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "define qt where \"qt = (\\<lambda>i. ((d_of dmu (i + 1)) * (d_of dmu (i + 1)),\n            (d_of dmu (i + 2)) * (d_of dmu i), Suc i))\""], ["proof (state)\nthis:\n  qt =\n  (\\<lambda>i.\n      (d_of dmu (i + 1) * d_of dmu (i + 1), d_of dmu (i + 2) * d_of dmu i,\n       Suc i))\n\ngoal (2 subgoals):\n 1. cmp \\<Longrightarrow>\n    idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n 2. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "define lst where \"lst = (map (\\<lambda>i. qt i) [0..<(m-1)])\""], ["proof (state)\nthis:\n  lst = map qt [0..<m - 1]\n\ngoal (2 subgoals):\n 1. cmp \\<Longrightarrow>\n    idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n 2. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "have msqlst: \"(msq_num, msq_denum, idx) = max_list_rats_with_index lst\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (msq_num, msq_denum, idx) = max_list_rats_with_index lst", "using max lst_def qt_def"], ["proof (prove)\nusing this:\n  compute_max_gso_quot dmu = (msq_num, msq_denum, idx)\n  lst = map qt [0..<m - 1]\n  qt =\n  (\\<lambda>i.\n      (d_of dmu (i + 1) * d_of dmu (i + 1), d_of dmu (i + 2) * d_of dmu i,\n       Suc i))\n\ngoal (1 subgoal):\n 1. (msq_num, msq_denum, idx) = max_list_rats_with_index lst", "unfolding compute_max_gso_quot_def"], ["proof (prove)\nusing this:\n  max_list_rats_with_index\n   (map (\\<lambda>i.\n            (d_of dmu (i + 1) * d_of dmu (i + 1),\n             d_of dmu (i + 2) * d_of dmu i, Suc i))\n     [0..<m - 1]) =\n  (msq_num, msq_denum, idx)\n  lst = map qt [0..<m - 1]\n  qt =\n  (\\<lambda>i.\n      (d_of dmu (i + 1) * d_of dmu (i + 1), d_of dmu (i + 2) * d_of dmu i,\n       Suc i))\n\ngoal (1 subgoal):\n 1. (msq_num, msq_denum, idx) = max_list_rats_with_index lst", "by simp"], ["proof (state)\nthis:\n  (msq_num, msq_denum, idx) = max_list_rats_with_index lst\n\ngoal (2 subgoals):\n 1. cmp \\<Longrightarrow>\n    idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n 2. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "have nz: \"\\<And>n d i. (n, d, i) \\<in> set lst \\<Longrightarrow> d > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n d i. (n, d, i) \\<in> set lst \\<Longrightarrow> 0 < d", "unfolding lst_def qt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n d i.\n       (n, d, i)\n       \\<in> set (map (\\<lambda>i.\n                          (d_of dmu (i + 1) * d_of dmu (i + 1),\n                           d_of dmu (i + 2) * d_of dmu i, Suc i))\n                   [0..<m - 1]) \\<Longrightarrow>\n       0 < d", "using d_of_weak[OF inv] LLL_d_pos[OF fsinv]"], ["proof (prove)\nusing this:\n  ?i \\<le> m \\<Longrightarrow> d_of dmu ?i = d fs ?i\n  ?k \\<le> m \\<Longrightarrow> 0 < d fs ?k\n\ngoal (1 subgoal):\n 1. \\<And>n d i.\n       (n, d, i)\n       \\<in> set (map (\\<lambda>i.\n                          (d_of dmu (i + 1) * d_of dmu (i + 1),\n                           d_of dmu (i + 2) * d_of dmu i, Suc i))\n                   [0..<m - 1]) \\<Longrightarrow>\n       0 < d", "by auto"], ["proof (state)\nthis:\n  (?n2, ?d2, ?i2) \\<in> set lst \\<Longrightarrow> 0 < ?d2\n\ngoal (2 subgoals):\n 1. cmp \\<Longrightarrow>\n    idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n 2. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "have geq: \"\\<forall>(n, d, i) \\<in> set lst. rat_of_int msq_num / of_int msq_denum \\<ge> rat_of_int n / of_int d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>(n, d, i)\\<in>set lst.\n       rat_of_int n / rat_of_int d\n       \\<le> rat_of_int msq_num / rat_of_int msq_denum", "using max_list_rats_with_index[of lst] nz msqlst"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>n d i. (n, d, i) \\<in> set lst \\<Longrightarrow> 0 < d;\n   max_list_rats_with_index lst = (?nm, ?dm, ?im);\n   (?n, ?d, ?i) \\<in> set lst\\<rbrakk>\n  \\<Longrightarrow> rat_of_int ?n / rat_of_int ?d\n                    \\<le> rat_of_int ?nm / rat_of_int ?dm\n  (?n2, ?d2, ?i2) \\<in> set lst \\<Longrightarrow> 0 < ?d2\n  (msq_num, msq_denum, idx) = max_list_rats_with_index lst\n\ngoal (1 subgoal):\n 1. \\<forall>(n, d, i)\\<in>set lst.\n       rat_of_int n / rat_of_int d\n       \\<le> rat_of_int msq_num / rat_of_int msq_denum", "by (metis (no_types, lifting) case_prodI2)"], ["proof (state)\nthis:\n  \\<forall>(n, d, i)\\<in>set lst.\n     rat_of_int n / rat_of_int d\n     \\<le> rat_of_int msq_num / rat_of_int msq_denum\n\ngoal (2 subgoals):\n 1. cmp \\<Longrightarrow>\n    idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n 2. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "have len: \"length lst \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> length lst", "using m"], ["proof (prove)\nusing this:\n  1 < m\n\ngoal (1 subgoal):\n 1. 1 \\<le> length lst", "unfolding lst_def"], ["proof (prove)\nusing this:\n  1 < m\n\ngoal (1 subgoal):\n 1. 1 \\<le> length (map qt [0..<m - 1])", "by simp"], ["proof (state)\nthis:\n  1 \\<le> length lst\n\ngoal (2 subgoals):\n 1. cmp \\<Longrightarrow>\n    idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n 2. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "have inset: \"(msq_num, msq_denum, idx) \\<in> set lst\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (msq_num, msq_denum, idx) \\<in> set lst", "using max_list_rats_with_index_in_set[OF msqlst[symmetric] len] nz"], ["proof (prove)\nusing this:\n  (msq_num, msq_denum, idx) \\<in> set lst\n  (?n2, ?d2, ?i2) \\<in> set lst \\<Longrightarrow> 0 < ?d2\n\ngoal (1 subgoal):\n 1. (msq_num, msq_denum, idx) \\<in> set lst", "by simp"], ["proof (state)\nthis:\n  (msq_num, msq_denum, idx) \\<in> set lst\n\ngoal (2 subgoals):\n 1. cmp \\<Longrightarrow>\n    idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n 2. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "then"], ["proof (chain)\npicking this:\n  (msq_num, msq_denum, idx) \\<in> set lst", "have idxm: \"idx \\<in> {1..<m}\""], ["proof (prove)\nusing this:\n  (msq_num, msq_denum, idx) \\<in> set lst\n\ngoal (1 subgoal):\n 1. idx \\<in> {1..<m}", "using lst_def[unfolded qt_def]"], ["proof (prove)\nusing this:\n  (msq_num, msq_denum, idx) \\<in> set lst\n  lst =\n  map (\\<lambda>i.\n          (d_of dmu (i + 1) * d_of dmu (i + 1),\n           d_of dmu (i + 2) * d_of dmu i, Suc i))\n   [0..<m - 1]\n\ngoal (1 subgoal):\n 1. idx \\<in> {1..<m}", "by auto"], ["proof (state)\nthis:\n  idx \\<in> {1..<m}\n\ngoal (2 subgoals):\n 1. cmp \\<Longrightarrow>\n    idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n 2. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "then"], ["proof (chain)\npicking this:\n  idx \\<in> {1..<m}", "have idx0: \"idx \\<noteq> 0\" and idx: \"idx < m\""], ["proof (prove)\nusing this:\n  idx \\<in> {1..<m}\n\ngoal (1 subgoal):\n 1. idx \\<noteq> 0 &&& idx < m", "by auto"], ["proof (state)\nthis:\n  idx \\<noteq> 0\n  idx < m\n\ngoal (2 subgoals):\n 1. cmp \\<Longrightarrow>\n    idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n 2. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "have 00: \"(msq_num, msq_denum, idx)  = qt (idx - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (msq_num, msq_denum, idx) = qt (idx - 1)", "using lst_def inset qt_def"], ["proof (prove)\nusing this:\n  lst = map qt [0..<m - 1]\n  (msq_num, msq_denum, idx) \\<in> set lst\n  qt =\n  (\\<lambda>i.\n      (d_of dmu (i + 1) * d_of dmu (i + 1), d_of dmu (i + 2) * d_of dmu i,\n       Suc i))\n\ngoal (1 subgoal):\n 1. (msq_num, msq_denum, idx) = qt (idx - 1)", "by auto"], ["proof (state)\nthis:\n  (msq_num, msq_denum, idx) = qt (idx - 1)\n\ngoal (2 subgoals):\n 1. cmp \\<Longrightarrow>\n    idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n 2. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "then"], ["proof (chain)\npicking this:\n  (msq_num, msq_denum, idx) = qt (idx - 1)", "have id_qt: \"msq_num = d_of dmu idx * d_of dmu idx\" \"msq_denum = d_of dmu (Suc idx) * d_of dmu (idx - 1)\""], ["proof (prove)\nusing this:\n  (msq_num, msq_denum, idx) = qt (idx - 1)\n\ngoal (1 subgoal):\n 1. msq_num = d_of dmu idx * d_of dmu idx &&&\n    msq_denum = d_of dmu (Suc idx) * d_of dmu (idx - 1)", "unfolding qt_def"], ["proof (prove)\nusing this:\n  (msq_num, msq_denum, idx) =\n  (d_of dmu (idx - 1 + 1) * d_of dmu (idx - 1 + 1),\n   d_of dmu (idx - 1 + 2) * d_of dmu (idx - 1), Suc (idx - 1))\n\ngoal (1 subgoal):\n 1. msq_num = d_of dmu idx * d_of dmu idx &&&\n    msq_denum = d_of dmu (Suc idx) * d_of dmu (idx - 1)", "by auto"], ["proof (state)\nthis:\n  msq_num = d_of dmu idx * d_of dmu idx\n  msq_denum = d_of dmu (Suc idx) * d_of dmu (idx - 1)\n\ngoal (2 subgoals):\n 1. cmp \\<Longrightarrow>\n    idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n 2. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "have \"msq_denum = (d_of dmu (idx + 1)) * (d_of dmu (idx - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. msq_denum = d_of dmu (idx + 1) * d_of dmu (idx - 1)", "using 00"], ["proof (prove)\nusing this:\n  (msq_num, msq_denum, idx) = qt (idx - 1)\n\ngoal (1 subgoal):\n 1. msq_denum = d_of dmu (idx + 1) * d_of dmu (idx - 1)", "unfolding qt_def"], ["proof (prove)\nusing this:\n  (msq_num, msq_denum, idx) =\n  (d_of dmu (idx - 1 + 1) * d_of dmu (idx - 1 + 1),\n   d_of dmu (idx - 1 + 2) * d_of dmu (idx - 1), Suc (idx - 1))\n\ngoal (1 subgoal):\n 1. msq_denum = d_of dmu (idx + 1) * d_of dmu (idx - 1)", "by simp"], ["proof (state)\nthis:\n  msq_denum = d_of dmu (idx + 1) * d_of dmu (idx - 1)\n\ngoal (2 subgoals):\n 1. cmp \\<Longrightarrow>\n    idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n 2. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "then"], ["proof (chain)\npicking this:\n  msq_denum = d_of dmu (idx + 1) * d_of dmu (idx - 1)", "have dengt0: \"msq_denum > 0\""], ["proof (prove)\nusing this:\n  msq_denum = d_of dmu (idx + 1) * d_of dmu (idx - 1)\n\ngoal (1 subgoal):\n 1. 0 < msq_denum", "using d_of_weak[OF inv] idxm LLL_d_pos[OF fsinv]"], ["proof (prove)\nusing this:\n  msq_denum = d_of dmu (idx + 1) * d_of dmu (idx - 1)\n  ?i \\<le> m \\<Longrightarrow> d_of dmu ?i = d fs ?i\n  idx \\<in> {1..<m}\n  ?k \\<le> m \\<Longrightarrow> 0 < d fs ?k\n\ngoal (1 subgoal):\n 1. 0 < msq_denum", "by auto"], ["proof (state)\nthis:\n  0 < msq_denum\n\ngoal (2 subgoals):\n 1. cmp \\<Longrightarrow>\n    idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n 2. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "have \\<alpha>dengt0: \"denum > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < denum", "using alph"], ["proof (prove)\nusing this:\n  quotient_of \\<alpha> = (num, denum)\n\ngoal (1 subgoal):\n 1. 0 < denum", "by (metis quotient_of_denom_pos)"], ["proof (state)\nthis:\n  0 < denum\n\ngoal (2 subgoals):\n 1. cmp \\<Longrightarrow>\n    idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n 2. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "from cmp[unfolded id_qt]"], ["proof (chain)\npicking this:\n  (num * (d_of dmu (Suc idx) * d_of dmu (idx - 1))\n   < d_of dmu idx * d_of dmu idx * denum) =\n  cmp", "have cmp: \"cmp = (\\<not> (d_of dmu idx * d_of dmu idx * denum \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)))\""], ["proof (prove)\nusing this:\n  (num * (d_of dmu (Suc idx) * d_of dmu (idx - 1))\n   < d_of dmu idx * d_of dmu idx * denum) =\n  cmp\n\ngoal (1 subgoal):\n 1. cmp =\n    (\\<not> d_of dmu idx * d_of dmu idx * denum\n            \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx))", "by (auto simp: ac_simps)"], ["proof (state)\nthis:\n  cmp =\n  (\\<not> d_of dmu idx * d_of dmu idx * denum\n          \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx))\n\ngoal (2 subgoals):\n 1. cmp \\<Longrightarrow>\n    idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n 2. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "{"], ["proof (state)\nthis:\n  cmp =\n  (\\<not> d_of dmu idx * d_of dmu idx * denum\n          \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx))\n\ngoal (2 subgoals):\n 1. cmp \\<Longrightarrow>\n    idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n 2. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "assume cmp"], ["proof (state)\nthis:\n  cmp\n\ngoal (2 subgoals):\n 1. cmp \\<Longrightarrow>\n    idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n 2. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "from this[unfolded cmp]"], ["proof (chain)\npicking this:\n  \\<not> d_of dmu idx * d_of dmu idx * denum\n         \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)", "show \"idx \\<noteq> 0 \\<and> idx < m \\<and> \\<not> (d_of dmu idx * d_of dmu idx * denum\n              \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx))\""], ["proof (prove)\nusing this:\n  \\<not> d_of dmu idx * d_of dmu idx * denum\n         \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n\ngoal (1 subgoal):\n 1. idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)", "using idx0 idx"], ["proof (prove)\nusing this:\n  \\<not> d_of dmu idx * d_of dmu idx * denum\n         \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n  idx \\<noteq> 0\n  idx < m\n\ngoal (1 subgoal):\n 1. idx \\<noteq> 0 \\<and>\n    idx < m \\<and>\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)", "by auto"], ["proof (state)\nthis:\n  idx \\<noteq> 0 \\<and>\n  idx < m \\<and>\n  \\<not> d_of dmu idx * d_of dmu idx * denum\n         \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n\ngoal (1 subgoal):\n 1. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "}"], ["proof (state)\nthis:\n  cmp \\<Longrightarrow>\n  idx \\<noteq> 0 \\<and>\n  idx < m \\<and>\n  \\<not> d_of dmu idx * d_of dmu idx * denum\n         \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n\ngoal (1 subgoal):\n 1. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "{"], ["proof (state)\nthis:\n  cmp \\<Longrightarrow>\n  idx \\<noteq> 0 \\<and>\n  idx < m \\<and>\n  \\<not> d_of dmu idx * d_of dmu idx * denum\n         \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n\ngoal (1 subgoal):\n 1. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "assume \"\\<not> cmp\""], ["proof (state)\nthis:\n  \\<not> cmp\n\ngoal (1 subgoal):\n 1. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "from this[unfolded cmp]"], ["proof (chain)\npicking this:\n  \\<not> \\<not> d_of dmu idx * d_of dmu idx * denum\n                \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)", "have small: \"d_of dmu idx * d_of dmu idx * denum \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\""], ["proof (prove)\nusing this:\n  \\<not> \\<not> d_of dmu idx * d_of dmu idx * denum\n                \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n\ngoal (1 subgoal):\n 1. d_of dmu idx * d_of dmu idx * denum\n    \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)", "by auto"], ["proof (state)\nthis:\n  d_of dmu idx * d_of dmu idx * denum\n  \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n\ngoal (1 subgoal):\n 1. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "note d_pos = LLL_d_pos[OF fsinv]"], ["proof (state)\nthis:\n  ?k \\<le> m \\<Longrightarrow> 0 < d fs ?k\n\ngoal (1 subgoal):\n 1. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "have gso: \"k < m \\<Longrightarrow> sq_norm (gso fs k) = of_int (d fs (Suc k)) / of_int (d fs k)\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. k < m \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                k\\<parallel>\\<^sup>2 =\n    rat_of_int (d fs (Suc k)) / rat_of_int (d fs k)", "using \n        LLL_d_Suc[OF fsinv, of k] d_pos[of k]"], ["proof (prove)\nusing this:\n  k < m \\<Longrightarrow>\n  rat_of_int (d fs (Suc k)) =\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              k\\<parallel>\\<^sup>2 *\n  rat_of_int (d fs k)\n  k \\<le> m \\<Longrightarrow> 0 < d fs k\n\ngoal (1 subgoal):\n 1. k < m \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                k\\<parallel>\\<^sup>2 =\n    rat_of_int (d fs (Suc k)) / rat_of_int (d fs k)", "by simp"], ["proof (state)\nthis:\n  ?k2 < m \\<Longrightarrow>\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              ?k2\\<parallel>\\<^sup>2 =\n  rat_of_int (d fs (Suc ?k2)) / rat_of_int (d fs ?k2)\n\ngoal (1 subgoal):\n 1. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "have gso_pos: \"k < m \\<Longrightarrow> sq_norm (gso fs k) > 0\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. k < m \\<Longrightarrow>\n    0 < \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    k\\<parallel>\\<^sup>2", "using gso[of k] d_pos[of k] d_pos[of \"Suc k\"]"], ["proof (prove)\nusing this:\n  k < m \\<Longrightarrow>\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              k\\<parallel>\\<^sup>2 =\n  rat_of_int (d fs (Suc k)) / rat_of_int (d fs k)\n  k \\<le> m \\<Longrightarrow> 0 < d fs k\n  Suc k \\<le> m \\<Longrightarrow> 0 < d fs (Suc k)\n\ngoal (1 subgoal):\n 1. k < m \\<Longrightarrow>\n    0 < \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    k\\<parallel>\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  ?k2 < m \\<Longrightarrow>\n  0 < \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                  ?k2\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "from small[unfolded alpha_comparison[OF inv alph idx idx0]]"], ["proof (chain)\npicking this:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              (idx - 1)\\<parallel>\\<^sup>2\n  \\<le> \\<alpha> *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    idx\\<parallel>\\<^sup>2", "have alph: \"sq_norm (gso fs (idx - 1)) \\<le> \\<alpha> * sq_norm (gso fs idx)\""], ["proof (prove)\nusing this:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              (idx - 1)\\<parallel>\\<^sup>2\n  \\<le> \\<alpha> *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    idx\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                (idx - 1)\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      idx\\<parallel>\\<^sup>2", "."], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              (idx - 1)\\<parallel>\\<^sup>2\n  \\<le> \\<alpha> *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    idx\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "with gso_pos[OF idx]"], ["proof (chain)\npicking this:\n  0 < \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                  idx\\<parallel>\\<^sup>2\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              (idx - 1)\\<parallel>\\<^sup>2\n  \\<le> \\<alpha> *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    idx\\<parallel>\\<^sup>2", "have alph: \"sq_norm (gso fs (idx - 1)) / sq_norm (gso fs idx) \\<le> \\<alpha>\""], ["proof (prove)\nusing this:\n  0 < \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                  idx\\<parallel>\\<^sup>2\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              (idx - 1)\\<parallel>\\<^sup>2\n  \\<le> \\<alpha> *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    idx\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                (idx - 1)\\<parallel>\\<^sup>2 /\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                idx\\<parallel>\\<^sup>2\n    \\<le> \\<alpha>", "by (metis mult_imp_div_pos_le)"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              (idx - 1)\\<parallel>\\<^sup>2 /\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              idx\\<parallel>\\<^sup>2\n  \\<le> \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "have weak: \"weakly_reduced fs m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> m", "unfolding gram_schmidt_fs.weakly_reduced_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       Suc i < m \\<longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         (Suc i)\\<parallel>\\<^sup>2", "proof (intro allI impI, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         (Suc i)\\<parallel>\\<^sup>2", "case (1 i)"], ["proof (state)\nthis:\n  Suc i < m\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         (Suc i)\\<parallel>\\<^sup>2", "from idx"], ["proof (chain)\npicking this:\n  idx < m", "have idx1: \"idx - 1 < m\""], ["proof (prove)\nusing this:\n  idx < m\n\ngoal (1 subgoal):\n 1. idx - 1 < m", "by auto"], ["proof (state)\nthis:\n  idx - 1 < m\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         (Suc i)\\<parallel>\\<^sup>2", "from geq[unfolded lst_def]"], ["proof (chain)\npicking this:\n  \\<forall>(n, d, i)\\<in>set (map qt [0..<m - 1]).\n     rat_of_int n / rat_of_int d\n     \\<le> rat_of_int msq_num / rat_of_int msq_denum", "have mem: \"(d_of dmu (Suc i) * d_of dmu (Suc i),\n            d_of dmu (Suc (Suc i)) * d_of dmu i, Suc i) \\<in> set lst\""], ["proof (prove)\nusing this:\n  \\<forall>(n, d, i)\\<in>set (map qt [0..<m - 1]).\n     rat_of_int n / rat_of_int d\n     \\<le> rat_of_int msq_num / rat_of_int msq_denum\n\ngoal (1 subgoal):\n 1. (d_of dmu (Suc i) * d_of dmu (Suc i),\n     d_of dmu (Suc (Suc i)) * d_of dmu i, Suc i)\n    \\<in> set lst", "unfolding lst_def qt_def"], ["proof (prove)\nusing this:\n  \\<forall>(n, d, i)\n           \\<in>set (map (\\<lambda>i.\n                             (d_of dmu (i + 1) * d_of dmu (i + 1),\n                              d_of dmu (i + 2) * d_of dmu i, Suc i))\n                      [0..<m - 1]).\n     rat_of_int n / rat_of_int d\n     \\<le> rat_of_int msq_num / rat_of_int msq_denum\n\ngoal (1 subgoal):\n 1. (d_of dmu (Suc i) * d_of dmu (Suc i),\n     d_of dmu (Suc (Suc i)) * d_of dmu i, Suc i)\n    \\<in> set (map (\\<lambda>i.\n                       (d_of dmu (i + 1) * d_of dmu (i + 1),\n                        d_of dmu (i + 2) * d_of dmu i, Suc i))\n                [0..<m - 1])", "using 1"], ["proof (prove)\nusing this:\n  \\<forall>(n, d, i)\n           \\<in>set (map (\\<lambda>i.\n                             (d_of dmu (i + 1) * d_of dmu (i + 1),\n                              d_of dmu (i + 2) * d_of dmu i, Suc i))\n                      [0..<m - 1]).\n     rat_of_int n / rat_of_int d\n     \\<le> rat_of_int msq_num / rat_of_int msq_denum\n  Suc i < m\n\ngoal (1 subgoal):\n 1. (d_of dmu (Suc i) * d_of dmu (Suc i),\n     d_of dmu (Suc (Suc i)) * d_of dmu i, Suc i)\n    \\<in> set (map (\\<lambda>i.\n                       (d_of dmu (i + 1) * d_of dmu (i + 1),\n                        d_of dmu (i + 2) * d_of dmu i, Suc i))\n                [0..<m - 1])", "by auto"], ["proof (state)\nthis:\n  (d_of dmu (Suc i) * d_of dmu (Suc i), d_of dmu (Suc (Suc i)) * d_of dmu i,\n   Suc i)\n  \\<in> set lst\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         (Suc i)\\<parallel>\\<^sup>2", "have \"sq_norm (gso fs i) / sq_norm (gso fs (Suc i)) = \n        of_int (d_of dmu (Suc i) * d_of dmu (Suc i)) / of_int (d_of dmu (Suc (Suc i)) * d_of dmu i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                i\\<parallel>\\<^sup>2 /\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                (Suc i)\\<parallel>\\<^sup>2 =\n    rat_of_int (d_of dmu (Suc i) * d_of dmu (Suc i)) /\n    rat_of_int (d_of dmu (Suc (Suc i)) * d_of dmu i)", "using gso idx0 d_of_weak[OF inv] 1"], ["proof (prove)\nusing this:\n  ?k2 < m \\<Longrightarrow>\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              ?k2\\<parallel>\\<^sup>2 =\n  rat_of_int (d fs (Suc ?k2)) / rat_of_int (d fs ?k2)\n  idx \\<noteq> 0\n  ?i \\<le> m \\<Longrightarrow> d_of dmu ?i = d fs ?i\n  Suc i < m\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                i\\<parallel>\\<^sup>2 /\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                (Suc i)\\<parallel>\\<^sup>2 =\n    rat_of_int (d_of dmu (Suc i) * d_of dmu (Suc i)) /\n    rat_of_int (d_of dmu (Suc (Suc i)) * d_of dmu i)", "by auto"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              i\\<parallel>\\<^sup>2 /\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              (Suc i)\\<parallel>\\<^sup>2 =\n  rat_of_int (d_of dmu (Suc i) * d_of dmu (Suc i)) /\n  rat_of_int (d_of dmu (Suc (Suc i)) * d_of dmu i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         (Suc i)\\<parallel>\\<^sup>2", "also"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              i\\<parallel>\\<^sup>2 /\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              (Suc i)\\<parallel>\\<^sup>2 =\n  rat_of_int (d_of dmu (Suc i) * d_of dmu (Suc i)) /\n  rat_of_int (d_of dmu (Suc (Suc i)) * d_of dmu i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         (Suc i)\\<parallel>\\<^sup>2", "have \"\\<dots> \\<le> rat_of_int msq_num / rat_of_int msq_denum\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int (d_of dmu (Suc i) * d_of dmu (Suc i)) /\n    rat_of_int (d_of dmu (Suc (Suc i)) * d_of dmu i)\n    \\<le> rat_of_int msq_num / rat_of_int msq_denum", "using geq[rule_format, OF mem, unfolded split]"], ["proof (prove)\nusing this:\n  rat_of_int (d_of dmu (Suc i) * d_of dmu (Suc i)) /\n  rat_of_int (d_of dmu (Suc (Suc i)) * d_of dmu i)\n  \\<le> rat_of_int msq_num / rat_of_int msq_denum\n\ngoal (1 subgoal):\n 1. rat_of_int (d_of dmu (Suc i) * d_of dmu (Suc i)) /\n    rat_of_int (d_of dmu (Suc (Suc i)) * d_of dmu i)\n    \\<le> rat_of_int msq_num / rat_of_int msq_denum", "by auto"], ["proof (state)\nthis:\n  rat_of_int (d_of dmu (Suc i) * d_of dmu (Suc i)) /\n  rat_of_int (d_of dmu (Suc (Suc i)) * d_of dmu i)\n  \\<le> rat_of_int msq_num / rat_of_int msq_denum\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         (Suc i)\\<parallel>\\<^sup>2", "also"], ["proof (state)\nthis:\n  rat_of_int (d_of dmu (Suc i) * d_of dmu (Suc i)) /\n  rat_of_int (d_of dmu (Suc (Suc i)) * d_of dmu i)\n  \\<le> rat_of_int msq_num / rat_of_int msq_denum\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         (Suc i)\\<parallel>\\<^sup>2", "have \"\\<dots> = sq_norm (gso fs (idx - 1)) / sq_norm (gso fs idx)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int msq_num / rat_of_int msq_denum =\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                (idx - 1)\\<parallel>\\<^sup>2 /\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                idx\\<parallel>\\<^sup>2", "unfolding id_qt gso[OF idx] gso[OF idx1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int (d_of dmu idx * d_of dmu idx) /\n    rat_of_int (d_of dmu (Suc idx) * d_of dmu (idx - 1)) =\n    rat_of_int (d fs (Suc (idx - 1))) / rat_of_int (d fs (idx - 1)) /\n    (rat_of_int (d fs (Suc idx)) / rat_of_int (d fs idx))", "using idx0 d_of_weak[OF inv] idx"], ["proof (prove)\nusing this:\n  idx \\<noteq> 0\n  ?i \\<le> m \\<Longrightarrow> d_of dmu ?i = d fs ?i\n  idx < m\n\ngoal (1 subgoal):\n 1. rat_of_int (d_of dmu idx * d_of dmu idx) /\n    rat_of_int (d_of dmu (Suc idx) * d_of dmu (idx - 1)) =\n    rat_of_int (d fs (Suc (idx - 1))) / rat_of_int (d fs (idx - 1)) /\n    (rat_of_int (d fs (Suc idx)) / rat_of_int (d fs idx))", "by auto"], ["proof (state)\nthis:\n  rat_of_int msq_num / rat_of_int msq_denum =\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              (idx - 1)\\<parallel>\\<^sup>2 /\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              idx\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         (Suc i)\\<parallel>\\<^sup>2", "also"], ["proof (state)\nthis:\n  rat_of_int msq_num / rat_of_int msq_denum =\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              (idx - 1)\\<parallel>\\<^sup>2 /\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              idx\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         (Suc i)\\<parallel>\\<^sup>2", "have \"\\<dots> \\<le> \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                (idx - 1)\\<parallel>\\<^sup>2 /\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                idx\\<parallel>\\<^sup>2\n    \\<le> \\<alpha>", "by fact"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              (idx - 1)\\<parallel>\\<^sup>2 /\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              idx\\<parallel>\\<^sup>2\n  \\<le> \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i < m \\<Longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         (Suc i)\\<parallel>\\<^sup>2", "finally"], ["proof (chain)\npicking this:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              i\\<parallel>\\<^sup>2 /\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              (Suc i)\\<parallel>\\<^sup>2\n  \\<le> \\<alpha>", "show \"sq_norm (gso fs i) \\<le> \\<alpha> * sq_norm (gso fs (Suc i))\""], ["proof (prove)\nusing this:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              i\\<parallel>\\<^sup>2 /\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              (Suc i)\\<parallel>\\<^sup>2\n  \\<le> \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                i\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      (Suc i)\\<parallel>\\<^sup>2", "using gso_pos[OF 1]"], ["proof (prove)\nusing this:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              i\\<parallel>\\<^sup>2 /\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              (Suc i)\\<parallel>\\<^sup>2\n  \\<le> \\<alpha>\n  0 < \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                  (Suc i)\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                i\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      (Suc i)\\<parallel>\\<^sup>2", "using pos_divide_le_eq"], ["proof (prove)\nusing this:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              i\\<parallel>\\<^sup>2 /\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              (Suc i)\\<parallel>\\<^sup>2\n  \\<le> \\<alpha>\n  0 < \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                  (Suc i)\\<parallel>\\<^sup>2\n  (0::?'a) < ?c \\<Longrightarrow> (?b / ?c \\<le> ?a) = (?b \\<le> ?a * ?c)\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                i\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                      (Suc i)\\<parallel>\\<^sup>2", "by blast"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              i\\<parallel>\\<^sup>2\n  \\<le> \\<alpha> *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                    (Suc i)\\<parallel>\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> m\n\ngoal (1 subgoal):\n 1. \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m", "with inv"], ["proof (chain)\npicking this:\n  LLL_invariant_mod_weak fs mfs dmu p first b\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> m", "show \"LLL_invariant_mod fs mfs dmu p first b m\""], ["proof (prove)\nusing this:\n  LLL_invariant_mod_weak fs mfs dmu p first b\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> m\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu p first b m", "by (auto simp: LLL_invariant_mod_weak_def LLL_invariant_mod_def)"], ["proof (state)\nthis:\n  LLL_invariant_mod fs mfs dmu p first b m\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  \\<not> cmp \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma small_m: \n  assumes inv: \"LLL_invariant_mod_weak fs mfs dmu p first b\" \n  and m: \"m \\<le> 1\" \nshows \"LLL_invariant_mod fs mfs dmu p first b m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu p first b m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu p first b m", "have weak: \"weakly_reduced fs m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> m", "unfolding gram_schmidt_fs.weakly_reduced_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       Suc i < m \\<longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         (Suc i)\\<parallel>\\<^sup>2", "using m"], ["proof (prove)\nusing this:\n  m \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       Suc i < m \\<longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                   i\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                         (Suc i)\\<parallel>\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> m\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu p first b m", "with inv"], ["proof (chain)\npicking this:\n  LLL_invariant_mod_weak fs mfs dmu p first b\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> m", "show \"LLL_invariant_mod fs mfs dmu p first b m\""], ["proof (prove)\nusing this:\n  LLL_invariant_mod_weak fs mfs dmu p first b\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> m\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu p first b m", "by (auto simp: LLL_invariant_mod_weak_def LLL_invariant_mod_def)"], ["proof (state)\nthis:\n  LLL_invariant_mod fs mfs dmu p first b m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma basis_reduction_iso_main: assumes \"LLL_invariant_mod_weak fs mfs dmu p first b\"\n  and res: \"basis_reduction_iso_main p first mfs dmu g_idx j = (p', mfs', dmu')\" \nshows \"\\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "using assms"], ["proof (prove)\nusing this:\n  LLL_invariant_mod_weak fs mfs dmu p first b\n  basis_reduction_iso_main p first mfs dmu g_idx j = (p', mfs', dmu')\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "proof (induct \"LLL_measure (m-1) fs\" arbitrary: fs mfs dmu j p b g_idx rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>fs mfs dmu j p b g_idx.\n       \\<lbrakk>\\<And>fsa mfs dmu j p b g_idx.\n                   \\<lbrakk>LLL_measure (m - 1) fsa\n                            < LLL_measure (m - 1) fs;\n                    LLL_invariant_mod_weak fsa mfs dmu p first b;\n                    basis_reduction_iso_main p first mfs dmu g_idx j =\n                    (p', mfs', dmu')\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs' b'.\n  LLL_invariant_mod fs' mfs' dmu' p' first b' m;\n        LLL_invariant_mod_weak fs mfs dmu p first b;\n        basis_reduction_iso_main p first mfs dmu g_idx j =\n        (p', mfs', dmu')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs' b'.\n                            LLL_invariant_mod fs' mfs' dmu' p' first b' m", "case (less fs mfs dmu j p b g_idx)"], ["proof (state)\nthis:\n  \\<lbrakk>LLL_measure (m - 1) ?fs2 < LLL_measure (m - 1) fs;\n   LLL_invariant_mod_weak ?fs2 ?mfs2 ?dmu2 ?p2 first ?b2;\n   basis_reduction_iso_main ?p2 first ?mfs2 ?dmu2 ?g_idx2 ?j2 =\n   (p', mfs', dmu')\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs' b'.\n                       LLL_invariant_mod fs' mfs' dmu' p' first b' m\n  LLL_invariant_mod_weak fs mfs dmu p first b\n  basis_reduction_iso_main p first mfs dmu g_idx j = (p', mfs', dmu')\n\ngoal (1 subgoal):\n 1. \\<And>fs mfs dmu j p b g_idx.\n       \\<lbrakk>\\<And>fsa mfs dmu j p b g_idx.\n                   \\<lbrakk>LLL_measure (m - 1) fsa\n                            < LLL_measure (m - 1) fs;\n                    LLL_invariant_mod_weak fsa mfs dmu p first b;\n                    basis_reduction_iso_main p first mfs dmu g_idx j =\n                    (p', mfs', dmu')\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs' b'.\n  LLL_invariant_mod fs' mfs' dmu' p' first b' m;\n        LLL_invariant_mod_weak fs mfs dmu p first b;\n        basis_reduction_iso_main p first mfs dmu g_idx j =\n        (p', mfs', dmu')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs' b'.\n                            LLL_invariant_mod fs' mfs' dmu' p' first b' m", "have inv: \"LLL_invariant_mod_weak fs mfs dmu p first b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_mod_weak fs mfs dmu p first b", "using less"], ["proof (prove)\nusing this:\n  \\<lbrakk>LLL_measure (m - 1) ?fs2 < LLL_measure (m - 1) fs;\n   LLL_invariant_mod_weak ?fs2 ?mfs2 ?dmu2 ?p2 first ?b2;\n   basis_reduction_iso_main ?p2 first ?mfs2 ?dmu2 ?g_idx2 ?j2 =\n   (p', mfs', dmu')\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs' b'.\n                       LLL_invariant_mod fs' mfs' dmu' p' first b' m\n  LLL_invariant_mod_weak fs mfs dmu p first b\n  basis_reduction_iso_main p first mfs dmu g_idx j = (p', mfs', dmu')\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod_weak fs mfs dmu p first b", "by auto"], ["proof (state)\nthis:\n  LLL_invariant_mod_weak fs mfs dmu p first b\n\ngoal (1 subgoal):\n 1. \\<And>fs mfs dmu j p b g_idx.\n       \\<lbrakk>\\<And>fsa mfs dmu j p b g_idx.\n                   \\<lbrakk>LLL_measure (m - 1) fsa\n                            < LLL_measure (m - 1) fs;\n                    LLL_invariant_mod_weak fsa mfs dmu p first b;\n                    basis_reduction_iso_main p first mfs dmu g_idx j =\n                    (p', mfs', dmu')\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs' b'.\n  LLL_invariant_mod fs' mfs' dmu' p' first b' m;\n        LLL_invariant_mod_weak fs mfs dmu p first b;\n        basis_reduction_iso_main p first mfs dmu g_idx j =\n        (p', mfs', dmu')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs' b'.\n                            LLL_invariant_mod fs' mfs' dmu' p' first b' m", "hence fsinv: \"LLL_invariant_weak fs\""], ["proof (prove)\nusing this:\n  LLL_invariant_mod_weak fs mfs dmu p first b\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak fs", "by (simp add: LLL_invariant_mod_weak_def LLL_invariant_weak_def)"], ["proof (state)\nthis:\n  LLL_invariant_weak fs\n\ngoal (1 subgoal):\n 1. \\<And>fs mfs dmu j p b g_idx.\n       \\<lbrakk>\\<And>fsa mfs dmu j p b g_idx.\n                   \\<lbrakk>LLL_measure (m - 1) fsa\n                            < LLL_measure (m - 1) fs;\n                    LLL_invariant_mod_weak fsa mfs dmu p first b;\n                    basis_reduction_iso_main p first mfs dmu g_idx j =\n                    (p', mfs', dmu')\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs' b'.\n  LLL_invariant_mod fs' mfs' dmu' p' first b' m;\n        LLL_invariant_mod_weak fs mfs dmu p first b;\n        basis_reduction_iso_main p first mfs dmu g_idx j =\n        (p', mfs', dmu')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs' b'.\n                            LLL_invariant_mod fs' mfs' dmu' p' first b' m", "note res = less(3)[unfolded basis_reduction_iso_main.simps[of p first mfs dmu g_idx j]]"], ["proof (state)\nthis:\n  (if 1 < m\n   then let (max_gso_num, max_gso_denum, indx) = compute_max_gso_quot dmu;\n            (num, denum) = quotient_of \\<alpha>\n        in if num * max_gso_denum < max_gso_num * denum\n           then case basis_reduction_adjust_swap_add_step p first mfs dmu\n                      g_idx indx of\n                (p', mfs', dmu', g_idx') \\<Rightarrow>\n                  basis_reduction_iso_main p' first mfs' dmu' g_idx' (j + 1)\n           else (p, mfs, dmu)\n   else (p, mfs, dmu)) =\n  (p', mfs', dmu')\n\ngoal (1 subgoal):\n 1. \\<And>fs mfs dmu j p b g_idx.\n       \\<lbrakk>\\<And>fsa mfs dmu j p b g_idx.\n                   \\<lbrakk>LLL_measure (m - 1) fsa\n                            < LLL_measure (m - 1) fs;\n                    LLL_invariant_mod_weak fsa mfs dmu p first b;\n                    basis_reduction_iso_main p first mfs dmu g_idx j =\n                    (p', mfs', dmu')\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs' b'.\n  LLL_invariant_mod fs' mfs' dmu' p' first b' m;\n        LLL_invariant_mod_weak fs mfs dmu p first b;\n        basis_reduction_iso_main p first mfs dmu g_idx j =\n        (p', mfs', dmu')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs' b'.\n                            LLL_invariant_mod fs' mfs' dmu' p' first b' m", "note IH = less(1)"], ["proof (state)\nthis:\n  \\<lbrakk>LLL_measure (m - 1) ?fs2 < LLL_measure (m - 1) fs;\n   LLL_invariant_mod_weak ?fs2 ?mfs2 ?dmu2 ?p2 first ?b2;\n   basis_reduction_iso_main ?p2 first ?mfs2 ?dmu2 ?g_idx2 ?j2 =\n   (p', mfs', dmu')\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs' b'.\n                       LLL_invariant_mod fs' mfs' dmu' p' first b' m\n\ngoal (1 subgoal):\n 1. \\<And>fs mfs dmu j p b g_idx.\n       \\<lbrakk>\\<And>fsa mfs dmu j p b g_idx.\n                   \\<lbrakk>LLL_measure (m - 1) fsa\n                            < LLL_measure (m - 1) fs;\n                    LLL_invariant_mod_weak fsa mfs dmu p first b;\n                    basis_reduction_iso_main p first mfs dmu g_idx j =\n                    (p', mfs', dmu')\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs' b'.\n  LLL_invariant_mod fs' mfs' dmu' p' first b' m;\n        LLL_invariant_mod_weak fs mfs dmu p first b;\n        basis_reduction_iso_main p first mfs dmu g_idx j =\n        (p', mfs', dmu')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs' b'.\n                            LLL_invariant_mod fs' mfs' dmu' p' first b' m", "obtain msq_num msq_denum idx where max: \"compute_max_gso_quot dmu = (msq_num, msq_denum, idx)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>msq_num msq_denum idx.\n        compute_max_gso_quot dmu =\n        (msq_num, msq_denum, idx) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis prod_cases3)"], ["proof (state)\nthis:\n  compute_max_gso_quot dmu = (msq_num, msq_denum, idx)\n\ngoal (1 subgoal):\n 1. \\<And>fs mfs dmu j p b g_idx.\n       \\<lbrakk>\\<And>fsa mfs dmu j p b g_idx.\n                   \\<lbrakk>LLL_measure (m - 1) fsa\n                            < LLL_measure (m - 1) fs;\n                    LLL_invariant_mod_weak fsa mfs dmu p first b;\n                    basis_reduction_iso_main p first mfs dmu g_idx j =\n                    (p', mfs', dmu')\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs' b'.\n  LLL_invariant_mod fs' mfs' dmu' p' first b' m;\n        LLL_invariant_mod_weak fs mfs dmu p first b;\n        basis_reduction_iso_main p first mfs dmu g_idx j =\n        (p', mfs', dmu')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs' b'.\n                            LLL_invariant_mod fs' mfs' dmu' p' first b' m", "obtain num denum where alph: \"quotient_of \\<alpha> = (num, denum)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>num denum.\n        quotient_of \\<alpha> = (num, denum) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  quotient_of \\<alpha> = (num, denum)\n\ngoal (1 subgoal):\n 1. \\<And>fs mfs dmu j p b g_idx.\n       \\<lbrakk>\\<And>fsa mfs dmu j p b g_idx.\n                   \\<lbrakk>LLL_measure (m - 1) fsa\n                            < LLL_measure (m - 1) fs;\n                    LLL_invariant_mod_weak fsa mfs dmu p first b;\n                    basis_reduction_iso_main p first mfs dmu g_idx j =\n                    (p', mfs', dmu')\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs' b'.\n  LLL_invariant_mod fs' mfs' dmu' p' first b' m;\n        LLL_invariant_mod_weak fs mfs dmu p first b;\n        basis_reduction_iso_main p first mfs dmu g_idx j =\n        (p', mfs', dmu')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs' b'.\n                            LLL_invariant_mod fs' mfs' dmu' p' first b' m", "note res = res[unfolded max alph Let_def split]"], ["proof (state)\nthis:\n  (if 1 < m\n   then if num * msq_denum < msq_num * denum\n        then case basis_reduction_adjust_swap_add_step p first mfs dmu g_idx\n                   idx of\n             (p', mfs', dmu', g_idx') \\<Rightarrow>\n               basis_reduction_iso_main p' first mfs' dmu' g_idx' (j + 1)\n        else (p, mfs, dmu)\n   else (p, mfs, dmu)) =\n  (p', mfs', dmu')\n\ngoal (1 subgoal):\n 1. \\<And>fs mfs dmu j p b g_idx.\n       \\<lbrakk>\\<And>fsa mfs dmu j p b g_idx.\n                   \\<lbrakk>LLL_measure (m - 1) fsa\n                            < LLL_measure (m - 1) fs;\n                    LLL_invariant_mod_weak fsa mfs dmu p first b;\n                    basis_reduction_iso_main p first mfs dmu g_idx j =\n                    (p', mfs', dmu')\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs' b'.\n  LLL_invariant_mod fs' mfs' dmu' p' first b' m;\n        LLL_invariant_mod_weak fs mfs dmu p first b;\n        basis_reduction_iso_main p first mfs dmu g_idx j =\n        (p', mfs', dmu')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs' b'.\n                            LLL_invariant_mod fs' mfs' dmu' p' first b' m", "consider (small) \"m \\<le> 1\" | (final) \"m > 1\" \"\\<not> (num * msq_denum < msq_num * denum)\" | (step) \"m > 1\" \"num * msq_denum < msq_num * denum\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<le> 1 \\<Longrightarrow> thesis;\n     \\<lbrakk>1 < m; \\<not> num * msq_denum < msq_num * denum\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>1 < m; num * msq_denum < msq_num * denum\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by linarith"], ["proof (state)\nthis:\n  \\<lbrakk>m \\<le> 1 \\<Longrightarrow> ?thesis2;\n   \\<lbrakk>1 < m; \\<not> num * msq_denum < msq_num * denum\\<rbrakk>\n   \\<Longrightarrow> ?thesis2;\n   \\<lbrakk>1 < m; num * msq_denum < msq_num * denum\\<rbrakk>\n   \\<Longrightarrow> ?thesis2\\<rbrakk>\n  \\<Longrightarrow> ?thesis2\n\ngoal (1 subgoal):\n 1. \\<And>fs mfs dmu j p b g_idx.\n       \\<lbrakk>\\<And>fsa mfs dmu j p b g_idx.\n                   \\<lbrakk>LLL_measure (m - 1) fsa\n                            < LLL_measure (m - 1) fs;\n                    LLL_invariant_mod_weak fsa mfs dmu p first b;\n                    basis_reduction_iso_main p first mfs dmu g_idx j =\n                    (p', mfs', dmu')\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs' b'.\n  LLL_invariant_mod fs' mfs' dmu' p' first b' m;\n        LLL_invariant_mod_weak fs mfs dmu p first b;\n        basis_reduction_iso_main p first mfs dmu g_idx j =\n        (p', mfs', dmu')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs' b'.\n                            LLL_invariant_mod fs' mfs' dmu' p' first b' m", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>m \\<le> 1 \\<Longrightarrow> ?thesis2;\n   \\<lbrakk>1 < m; \\<not> num * msq_denum < msq_num * denum\\<rbrakk>\n   \\<Longrightarrow> ?thesis2;\n   \\<lbrakk>1 < m; num * msq_denum < msq_num * denum\\<rbrakk>\n   \\<Longrightarrow> ?thesis2\\<rbrakk>\n  \\<Longrightarrow> ?thesis2\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. m \\<le> 1 \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n 2. \\<lbrakk>1 < m; \\<not> num * msq_denum < msq_num * denum\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs' b'.\n                         LLL_invariant_mod fs' mfs' dmu' p' first b' m\n 3. \\<lbrakk>1 < m; num * msq_denum < msq_num * denum\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs' b'.\n                         LLL_invariant_mod fs' mfs' dmu' p' first b' m", "case *: step"], ["proof (state)\nthis:\n  1 < m\n  num * msq_denum < msq_num * denum\n\ngoal (3 subgoals):\n 1. m \\<le> 1 \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n 2. \\<lbrakk>1 < m; \\<not> num * msq_denum < msq_num * denum\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs' b'.\n                         LLL_invariant_mod fs' mfs' dmu' p' first b' m\n 3. \\<lbrakk>1 < m; num * msq_denum < msq_num * denum\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs' b'.\n                         LLL_invariant_mod fs' mfs' dmu' p' first b' m", "obtain p1 mfs1 dmu1 g_idx1 where step: \"basis_reduction_adjust_swap_add_step p first mfs dmu g_idx idx = (p1, mfs1, dmu1, g_idx1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p1 mfs1 dmu1 g_idx1.\n        basis_reduction_adjust_swap_add_step p first mfs dmu g_idx idx =\n        (p1, mfs1, dmu1, g_idx1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis prod_cases4)"], ["proof (state)\nthis:\n  basis_reduction_adjust_swap_add_step p first mfs dmu g_idx idx =\n  (p1, mfs1, dmu1, g_idx1)\n\ngoal (3 subgoals):\n 1. m \\<le> 1 \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n 2. \\<lbrakk>1 < m; \\<not> num * msq_denum < msq_num * denum\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs' b'.\n                         LLL_invariant_mod fs' mfs' dmu' p' first b' m\n 3. \\<lbrakk>1 < m; num * msq_denum < msq_num * denum\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs' b'.\n                         LLL_invariant_mod fs' mfs' dmu' p' first b' m", "from res[unfolded step split] *"], ["proof (chain)\npicking this:\n  (if 1 < m\n   then if num * msq_denum < msq_num * denum\n        then basis_reduction_iso_main p1 first mfs1 dmu1 g_idx1 (j + 1)\n        else (p, mfs, dmu)\n   else (p, mfs, dmu)) =\n  (p', mfs', dmu')\n  1 < m\n  num * msq_denum < msq_num * denum", "have res: \"basis_reduction_iso_main p1 first mfs1 dmu1 g_idx1 (j + 1) = (p', mfs', dmu')\""], ["proof (prove)\nusing this:\n  (if 1 < m\n   then if num * msq_denum < msq_num * denum\n        then basis_reduction_iso_main p1 first mfs1 dmu1 g_idx1 (j + 1)\n        else (p, mfs, dmu)\n   else (p, mfs, dmu)) =\n  (p', mfs', dmu')\n  1 < m\n  num * msq_denum < msq_num * denum\n\ngoal (1 subgoal):\n 1. basis_reduction_iso_main p1 first mfs1 dmu1 g_idx1 (j + 1) =\n    (p', mfs', dmu')", "by auto"], ["proof (state)\nthis:\n  basis_reduction_iso_main p1 first mfs1 dmu1 g_idx1 (j + 1) =\n  (p', mfs', dmu')\n\ngoal (3 subgoals):\n 1. m \\<le> 1 \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n 2. \\<lbrakk>1 < m; \\<not> num * msq_denum < msq_num * denum\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs' b'.\n                         LLL_invariant_mod fs' mfs' dmu' p' first b' m\n 3. \\<lbrakk>1 < m; num * msq_denum < msq_num * denum\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs' b'.\n                         LLL_invariant_mod fs' mfs' dmu' p' first b' m", "from compute_max_gso_quot_alpha(1)[OF inv max alph refl *]"], ["proof (chain)\npicking this:\n  idx \\<noteq> 0 \\<and>\n  idx < m \\<and>\n  \\<not> d_of dmu idx * d_of dmu idx * denum\n         \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)", "have idx0: \"idx \\<noteq> 0\" and idx: \"idx < m\" and cmp: \"\\<not> d_of dmu idx * d_of dmu idx * denum \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\""], ["proof (prove)\nusing this:\n  idx \\<noteq> 0 \\<and>\n  idx < m \\<and>\n  \\<not> d_of dmu idx * d_of dmu idx * denum\n         \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n\ngoal (1 subgoal):\n 1. idx \\<noteq> 0 &&&\n    idx < m &&&\n    \\<not> d_of dmu idx * d_of dmu idx * denum\n           \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)", "by auto"], ["proof (state)\nthis:\n  idx \\<noteq> 0\n  idx < m\n  \\<not> d_of dmu idx * d_of dmu idx * denum\n         \\<le> num * d_of dmu (idx - 1) * d_of dmu (Suc idx)\n\ngoal (3 subgoals):\n 1. m \\<le> 1 \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n 2. \\<lbrakk>1 < m; \\<not> num * msq_denum < msq_num * denum\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs' b'.\n                         LLL_invariant_mod fs' mfs' dmu' p' first b' m\n 3. \\<lbrakk>1 < m; num * msq_denum < msq_num * denum\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs' b'.\n                         LLL_invariant_mod fs' mfs' dmu' p' first b' m", "from basis_reduction_adjust_swap_add_step[OF inv step alph cmp idx idx0]"], ["proof (chain)\npicking this:\n  \\<exists>fs' b'.\n     LLL_invariant_mod_weak fs' mfs1 dmu1 p1 first b' \\<and>\n     LLL_measure (idx - 1) fs' < LLL_measure idx fs \\<and>\n     LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n     (LLL_invariant_mod fs mfs dmu p first b idx \\<longrightarrow>\n      LLL_invariant_mod fs' mfs1 dmu1 p1 first b' (idx - 1))", "obtain fs1 b1 \n      where inv1: \"LLL_invariant_mod_weak fs1 mfs1 dmu1 p1 first b1\" and meas: \"LLL_measure (m - 1) fs1 < LLL_measure (m - 1) fs\""], ["proof (prove)\nusing this:\n  \\<exists>fs' b'.\n     LLL_invariant_mod_weak fs' mfs1 dmu1 p1 first b' \\<and>\n     LLL_measure (idx - 1) fs' < LLL_measure idx fs \\<and>\n     LLL_measure (m - 1) fs' < LLL_measure (m - 1) fs \\<and>\n     (LLL_invariant_mod fs mfs dmu p first b idx \\<longrightarrow>\n      LLL_invariant_mod fs' mfs1 dmu1 p1 first b' (idx - 1))\n\ngoal (1 subgoal):\n 1. (\\<And>fs1 b1.\n        \\<lbrakk>LLL_invariant_mod_weak fs1 mfs1 dmu1 p1 first b1;\n         LLL_measure (m - 1) fs1 < LLL_measure (m - 1) fs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  LLL_invariant_mod_weak fs1 mfs1 dmu1 p1 first b1\n  LLL_measure (m - 1) fs1 < LLL_measure (m - 1) fs\n\ngoal (3 subgoals):\n 1. m \\<le> 1 \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n 2. \\<lbrakk>1 < m; \\<not> num * msq_denum < msq_num * denum\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs' b'.\n                         LLL_invariant_mod fs' mfs' dmu' p' first b' m\n 3. \\<lbrakk>1 < m; num * msq_denum < msq_num * denum\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs' b'.\n                         LLL_invariant_mod fs' mfs' dmu' p' first b' m", "from IH[OF meas inv1 res]"], ["proof (chain)\npicking this:\n  \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "."], ["proof (state)\nthis:\n  \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n\ngoal (2 subgoals):\n 1. m \\<le> 1 \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n 2. \\<lbrakk>1 < m; \\<not> num * msq_denum < msq_num * denum\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs' b'.\n                         LLL_invariant_mod fs' mfs' dmu' p' first b' m", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. m \\<le> 1 \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n 2. \\<lbrakk>1 < m; \\<not> num * msq_denum < msq_num * denum\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs' b'.\n                         LLL_invariant_mod fs' mfs' dmu' p' first b' m", "case small"], ["proof (state)\nthis:\n  m \\<le> 1\n\ngoal (2 subgoals):\n 1. m \\<le> 1 \\<Longrightarrow>\n    \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n 2. \\<lbrakk>1 < m; \\<not> num * msq_denum < msq_num * denum\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs' b'.\n                         LLL_invariant_mod fs' mfs' dmu' p' first b' m", "with res small_m[OF inv]"], ["proof (chain)\npicking this:\n  (if 1 < m\n   then if num * msq_denum < msq_num * denum\n        then case basis_reduction_adjust_swap_add_step p first mfs dmu g_idx\n                   idx of\n             (p', mfs', dmu', g_idx') \\<Rightarrow>\n               basis_reduction_iso_main p' first mfs' dmu' g_idx' (j + 1)\n        else (p, mfs, dmu)\n   else (p, mfs, dmu)) =\n  (p', mfs', dmu')\n  m \\<le> 1 \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m\n  m \\<le> 1", "show ?thesis"], ["proof (prove)\nusing this:\n  (if 1 < m\n   then if num * msq_denum < msq_num * denum\n        then case basis_reduction_adjust_swap_add_step p first mfs dmu g_idx\n                   idx of\n             (p', mfs', dmu', g_idx') \\<Rightarrow>\n               basis_reduction_iso_main p' first mfs' dmu' g_idx' (j + 1)\n        else (p, mfs, dmu)\n   else (p, mfs, dmu)) =\n  (p', mfs', dmu')\n  m \\<le> 1 \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b m\n  m \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "by auto"], ["proof (state)\nthis:\n  \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < m; \\<not> num * msq_denum < msq_num * denum\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs' b'.\n                         LLL_invariant_mod fs' mfs' dmu' p' first b' m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < m; \\<not> num * msq_denum < msq_num * denum\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs' b'.\n                         LLL_invariant_mod fs' mfs' dmu' p' first b' m", "case final"], ["proof (state)\nthis:\n  1 < m\n  \\<not> num * msq_denum < msq_num * denum\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < m; \\<not> num * msq_denum < msq_num * denum\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs' b'.\n                         LLL_invariant_mod fs' mfs' dmu' p' first b' m", "from compute_max_gso_quot_alpha(2)[OF inv max alph refl final]\n      final"], ["proof (chain)\npicking this:\n  LLL_invariant_mod fs mfs dmu p first b m\n  1 < m\n  \\<not> num * msq_denum < msq_num * denum", "show ?thesis"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b m\n  1 < m\n  \\<not> num * msq_denum < msq_num * denum\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "using res"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b m\n  1 < m\n  \\<not> num * msq_denum < msq_num * denum\n  (if 1 < m\n   then if num * msq_denum < msq_num * denum\n        then case basis_reduction_adjust_swap_add_step p first mfs dmu g_idx\n                   idx of\n             (p', mfs', dmu', g_idx') \\<Rightarrow>\n               basis_reduction_iso_main p' first mfs' dmu' g_idx' (j + 1)\n        else (p, mfs, dmu)\n   else (p, mfs, dmu)) =\n  (p', mfs', dmu')\n\ngoal (1 subgoal):\n 1. \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m", "by auto"], ["proof (state)\nthis:\n  \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>fs' b'. LLL_invariant_mod fs' mfs' dmu' p' first b' m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma basis_reduction_mod_add_rows_loop_inv': assumes \n  fsinv: \"LLL_invariant_mod fs mfs dmu p first b m\" \n  and res: \"basis_reduction_mod_add_rows_loop p mfs dmu i i = (mfs', dmu')\" \n  and i: \"i < m\" \nshows \"\\<exists>fs'. LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n        (\\<forall>i' j'. i' < i \\<longrightarrow> j' \\<le> i' \\<longrightarrow> \\<mu> fs i' j' = \\<mu> fs' i' j') \\<and>\n        \\<mu>_small fs' i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i'\n            j') \\<and>\n       \\<mu>_small fs' i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i'\n            j') \\<and>\n       \\<mu>_small fs' i", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i'\n            j') \\<and>\n       \\<mu>_small fs' i", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i'\n            j') \\<and>\n       \\<mu>_small fs' i", "assume j: \"j \\<le> i\" and mu_small: \"\\<mu>_small_row i fs j\" \n      and resj: \"basis_reduction_mod_add_rows_loop p mfs dmu i j = (mfs', dmu')\""], ["proof (state)\nthis:\n  j \\<le> i\n  \\<mu>_small_row i fs j\n  basis_reduction_mod_add_rows_loop p mfs dmu i j = (mfs', dmu')\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i'\n            j') \\<and>\n       \\<mu>_small fs' i", "have \"\\<exists>fs'. LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n        (\\<forall>i' j'. i' < i \\<longrightarrow> j' \\<le> i' \\<longrightarrow> \\<mu> fs i' j' = \\<mu> fs' i' j') \\<and>\n        (\\<mu>_small fs' i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i'\n            j') \\<and>\n       \\<mu>_small fs' i", "proof (insert fsinv mu_small resj i j, induct j arbitrary: fs mfs dmu mfs' dmu')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>fs mfs dmu mfs' dmu'.\n       \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs 0;\n        basis_reduction_mod_add_rows_loop p mfs dmu i 0 = (mfs', dmu');\n        i < m; 0 \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i\n 2. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "case (0 fs)"], ["proof (state)\nthis:\n  LLL_invariant_mod fs mfs dmu p first b m\n  \\<mu>_small_row i fs 0\n  basis_reduction_mod_add_rows_loop p mfs dmu i 0 = (mfs', dmu')\n  i < m\n  0 \\<le> i\n\ngoal (2 subgoals):\n 1. \\<And>fs mfs dmu mfs' dmu'.\n       \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs 0;\n        basis_reduction_mod_add_rows_loop p mfs dmu i 0 = (mfs', dmu');\n        i < m; 0 \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i\n 2. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "then"], ["proof (chain)\npicking this:\n  LLL_invariant_mod fs mfs dmu p first b m\n  \\<mu>_small_row i fs 0\n  basis_reduction_mod_add_rows_loop p mfs dmu i 0 = (mfs', dmu')\n  i < m\n  0 \\<le> i", "have \"(mfs', dmu') = (mfs, dmu)\""], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b m\n  \\<mu>_small_row i fs 0\n  basis_reduction_mod_add_rows_loop p mfs dmu i 0 = (mfs', dmu')\n  i < m\n  0 \\<le> i\n\ngoal (1 subgoal):\n 1. (mfs', dmu') = (mfs, dmu)", "by simp"], ["proof (state)\nthis:\n  (mfs', dmu') = (mfs, dmu)\n\ngoal (2 subgoals):\n 1. \\<And>fs mfs dmu mfs' dmu'.\n       \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs 0;\n        basis_reduction_mod_add_rows_loop p mfs dmu i 0 = (mfs', dmu');\n        i < m; 0 \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i\n 2. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "then"], ["proof (chain)\npicking this:\n  (mfs', dmu') = (mfs, dmu)", "show ?case"], ["proof (prove)\nusing this:\n  (mfs', dmu') = (mfs, dmu)\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i'\n            j') \\<and>\n       \\<mu>_small fs' i", "using LLL_invariant_mod_to_weak_m_to_i(3) basis_reduction_add_row_done_weak 0"], ["proof (prove)\nusing this:\n  (mfs', dmu') = (mfs, dmu)\n  \\<lbrakk>LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b m;\n   ?i \\<le> m\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak' ?i ?fs\n  \\<lbrakk>LLL_invariant_weak' ?i ?fs; ?i < m;\n   \\<mu>_small_row ?i ?fs 0\\<rbrakk>\n  \\<Longrightarrow> \\<mu>_small ?fs ?i\n  LLL_invariant_mod fs mfs dmu p first b m\n  \\<mu>_small_row i fs 0\n  basis_reduction_mod_add_rows_loop p mfs dmu i 0 = (mfs', dmu')\n  i < m\n  0 \\<le> i\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i'\n            j') \\<and>\n       \\<mu>_small fs' i", "by auto"], ["proof (state)\nthis:\n  \\<exists>fs'.\n     LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n     (\\<forall>i' j'.\n         i' < i \\<longrightarrow>\n         j' \\<le> i' \\<longrightarrow>\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n     \\<mu>_small fs' i\n\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "case (Suc j)"], ["proof (state)\nthis:\n  \\<lbrakk>LLL_invariant_mod ?fs2 ?mfs2 ?dmu2 p first b m;\n   \\<mu>_small_row i ?fs2 j;\n   basis_reduction_mod_add_rows_loop p ?mfs2 ?dmu2 i j = (?mfs'2, ?dmu'2);\n   i < m; j \\<le> i\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs'.\n                       LLL_invariant_mod fs' ?mfs'2 ?dmu'2 p first b\n                        m \\<and>\n                       (\\<forall>i' j'.\n                           i' < i \\<longrightarrow>\n                           j' \\<le> i' \\<longrightarrow>\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom ?fs2) i' j' =\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom fs') i' j') \\<and>\n                       \\<mu>_small fs' i\n  LLL_invariant_mod fs mfs dmu p first b m\n  \\<mu>_small_row i fs (Suc j)\n  basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) = (mfs', dmu')\n  i < m\n  Suc j \\<le> i\n\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "hence j: \"j < i\""], ["proof (prove)\nusing this:\n  \\<lbrakk>LLL_invariant_mod ?fs2 ?mfs2 ?dmu2 p first b m;\n   \\<mu>_small_row i ?fs2 j;\n   basis_reduction_mod_add_rows_loop p ?mfs2 ?dmu2 i j = (?mfs'2, ?dmu'2);\n   i < m; j \\<le> i\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs'.\n                       LLL_invariant_mod fs' ?mfs'2 ?dmu'2 p first b\n                        m \\<and>\n                       (\\<forall>i' j'.\n                           i' < i \\<longrightarrow>\n                           j' \\<le> i' \\<longrightarrow>\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom ?fs2) i' j' =\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom fs') i' j') \\<and>\n                       \\<mu>_small fs' i\n  LLL_invariant_mod fs mfs dmu p first b m\n  \\<mu>_small_row i fs (Suc j)\n  basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) = (mfs', dmu')\n  i < m\n  Suc j \\<le> i\n\ngoal (1 subgoal):\n 1. j < i", "by auto"], ["proof (state)\nthis:\n  j < i\n\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "have in0: \"i \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<noteq> 0", "using Suc(6)"], ["proof (prove)\nusing this:\n  Suc j \\<le> i\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "define c where \"c = round_num_denom (dmu $$ (i,j)) (d_of dmu (Suc j))\""], ["proof (state)\nthis:\n  c = round_num_denom (dmu $$ (i, j)) (d_of dmu (Suc j))\n\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "have c2: \"c = round (\\<mu> fs i j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "using dmu_quot_is_round_of_\\<mu>[OF _ _ i j] c_def Suc"], ["proof (prove)\nusing this:\n  \\<lbrakk>LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i';\n   ?c = round_num_denom (?dmu $$ (i, j)) (d_of ?dmu (Suc j))\\<rbrakk>\n  \\<Longrightarrow> ?c =\n                    round\n                     (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?fs) i\n                       j)\n  c = round_num_denom (dmu $$ (i, j)) (d_of dmu (Suc j))\n  \\<lbrakk>LLL_invariant_mod ?fs2 ?mfs2 ?dmu2 p first b m;\n   \\<mu>_small_row i ?fs2 j;\n   basis_reduction_mod_add_rows_loop p ?mfs2 ?dmu2 i j = (?mfs'2, ?dmu'2);\n   i < m; j \\<le> i\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs'.\n                       LLL_invariant_mod fs' ?mfs'2 ?dmu'2 p first b\n                        m \\<and>\n                       (\\<forall>i' j'.\n                           i' < i \\<longrightarrow>\n                           j' \\<le> i' \\<longrightarrow>\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom ?fs2) i' j' =\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom fs') i' j') \\<and>\n                       \\<mu>_small fs' i\n  LLL_invariant_mod fs mfs dmu p first b m\n  \\<mu>_small_row i fs (Suc j)\n  basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) = (mfs', dmu')\n  i < m\n  Suc j \\<le> i\n\ngoal (1 subgoal):\n 1. c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)", "by simp"], ["proof (state)\nthis:\n  c = round (gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i j)\n\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "define mfs'' where \"mfs'' = (if c=0 then mfs else mfs[ i := (map_vec (\\<lambda> x. x symmod p)) (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)])\""], ["proof (state)\nthis:\n  mfs'' =\n  (if c = 0 then mfs\n   else mfs[i := map_vec (\\<lambda>x. x symmod p)\n                  (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)])\n\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "define dmu'' where \"dmu'' = (if c=0 then dmu else mat m m (\\<lambda>(i',j'). (if (i' = i \\<and> j' \\<le> j) \n        then (if j'=j then (dmu $$ (i,j') - c * dmu $$ (j,j')) \n              else (dmu $$ (i,j') - c * dmu $$ (j,j')) symmod (p * (d_of dmu j') * (d_of dmu (Suc j'))))\n        else (dmu $$ (i',j')))))\""], ["proof (state)\nthis:\n  dmu'' =\n  (if c = 0 then dmu\n   else mat m m\n         (\\<lambda>(i', j').\n             if i' = i \\<and> j' \\<le> j\n             then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n                  else (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n                       (p * d_of dmu j' * d_of dmu (Suc j'))\n             else dmu $$ (i', j')))\n\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "have 00: \"basis_reduction_mod_add_row p mfs dmu i j = (mfs'', dmu'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis_reduction_mod_add_row p mfs dmu i j = (mfs'', dmu'')", "using mfs''_def dmu''_def"], ["proof (prove)\nusing this:\n  mfs'' =\n  (if c = 0 then mfs\n   else mfs[i := map_vec (\\<lambda>x. x symmod p)\n                  (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)])\n  dmu'' =\n  (if c = 0 then dmu\n   else mat m m\n         (\\<lambda>(i', j').\n             if i' = i \\<and> j' \\<le> j\n             then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n                  else (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n                       (p * d_of dmu j' * d_of dmu (Suc j'))\n             else dmu $$ (i', j')))\n\ngoal (1 subgoal):\n 1. basis_reduction_mod_add_row p mfs dmu i j = (mfs'', dmu'')", "unfolding basis_reduction_mod_add_row_def c_def[symmetric]"], ["proof (prove)\nusing this:\n  mfs'' =\n  (if c = 0 then mfs\n   else mfs[i := map_vec (\\<lambda>x. x symmod p)\n                  (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)])\n  dmu'' =\n  (if c = 0 then dmu\n   else mat m m\n         (\\<lambda>(i', j').\n             if i' = i \\<and> j' \\<le> j\n             then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n                  else (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n                       (p * d_of dmu j' * d_of dmu (Suc j'))\n             else dmu $$ (i', j')))\n\ngoal (1 subgoal):\n 1. (let c = c\n     in if c = 0 then (mfs, dmu)\n        else (mfs[i := map_vec (\\<lambda>x. x symmod p)\n                        (mfs ! i - c \\<cdot>\\<^sub>v mfs ! j)],\n              mat m m\n               (\\<lambda>(i', j').\n                   if i' = i \\<and> j' \\<le> j\n                   then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n                        else (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n                             (p * d_of dmu j' * d_of dmu (Suc j'))\n                   else dmu $$ (i', j')))) =\n    (mfs'', dmu'')", "by simp"], ["proof (state)\nthis:\n  basis_reduction_mod_add_row p mfs dmu i j = (mfs'', dmu'')\n\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "then"], ["proof (chain)\npicking this:\n  basis_reduction_mod_add_row p mfs dmu i j = (mfs'', dmu'')", "have 01: \"basis_reduction_mod_add_rows_loop p mfs'' dmu'' i j = (mfs', dmu')\""], ["proof (prove)\nusing this:\n  basis_reduction_mod_add_row p mfs dmu i j = (mfs'', dmu'')\n\ngoal (1 subgoal):\n 1. basis_reduction_mod_add_rows_loop p mfs'' dmu'' i j = (mfs', dmu')", "using basis_reduction_mod_add_rows_loop.simps(2)[of p mfs dmu i j] Suc"], ["proof (prove)\nusing this:\n  basis_reduction_mod_add_row p mfs dmu i j = (mfs'', dmu'')\n  basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n  (let (mfs', dmu') = basis_reduction_mod_add_row p mfs dmu i j\n   in basis_reduction_mod_add_rows_loop p mfs' dmu' i j)\n  \\<lbrakk>LLL_invariant_mod ?fs2 ?mfs2 ?dmu2 p first b m;\n   \\<mu>_small_row i ?fs2 j;\n   basis_reduction_mod_add_rows_loop p ?mfs2 ?dmu2 i j = (?mfs'2, ?dmu'2);\n   i < m; j \\<le> i\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs'.\n                       LLL_invariant_mod fs' ?mfs'2 ?dmu'2 p first b\n                        m \\<and>\n                       (\\<forall>i' j'.\n                           i' < i \\<longrightarrow>\n                           j' \\<le> i' \\<longrightarrow>\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom ?fs2) i' j' =\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom fs') i' j') \\<and>\n                       \\<mu>_small fs' i\n  LLL_invariant_mod fs mfs dmu p first b m\n  \\<mu>_small_row i fs (Suc j)\n  basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) = (mfs', dmu')\n  i < m\n  Suc j \\<le> i\n\ngoal (1 subgoal):\n 1. basis_reduction_mod_add_rows_loop p mfs'' dmu'' i j = (mfs', dmu')", "by simp"], ["proof (state)\nthis:\n  basis_reduction_mod_add_rows_loop p mfs'' dmu'' i j = (mfs', dmu')\n\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "have fsinvi: \"LLL_invariant_mod fs mfs dmu p first b i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu p first b i", "using LLL_invariant_mod_to_weak_m_to_i[OF Suc(2)] i"], ["proof (prove)\nusing this:\n  ?i \\<le> m \\<Longrightarrow> LLL_invariant_mod fs mfs dmu p first b ?i\n  ?i \\<le> m \\<Longrightarrow> LLL_invariant_weak' m fs\n  ?i \\<le> m \\<Longrightarrow> LLL_invariant_weak' ?i fs\n  i < m\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu p first b i", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_mod fs mfs dmu p first b i\n\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "then"], ["proof (chain)\npicking this:\n  LLL_invariant_mod fs mfs dmu p first b i", "have fsinvmw: \"LLL_invariant_mod_weak fs mfs dmu p first b\""], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b i\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod_weak fs mfs dmu p first b", "using LLL_invD_mod LLL_invI_modw"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b i\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  length ?mfs = m\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  ?i \\<le> m\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  length ?fs = m\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  lattice_of ?fs = L\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  gs.lin_indpt_list (map of_int_hom.vec_hom ?fs)\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha> ?i\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  map (map_vec (\\<lambda>x. x symmod ?p)) ?fs = ?mfs\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> ?fs i' j'\\<bar> < ?p * d ?fs j' * d ?fs (Suc j')\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> ?fs i' j' = ?dmu $$ (i', j')\n  \\<lbrakk>LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?ia; ?i < m\\<rbrakk>\n  \\<Longrightarrow> ?fs ! ?i \\<in> carrier_vec n\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  set ?fs \\<subseteq> carrier_vec n\n  \\<lbrakk>LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?ia; ?i < m\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.gso n (map of_int_hom.vec_hom ?fs) ?i\n                    \\<in> Rn\n  \\<lbrakk>LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?ia; ?i < m\\<rbrakk>\n  \\<Longrightarrow> ?mfs ! ?i \\<in> carrier_vec n\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  set ?mfs \\<subseteq> carrier_vec n\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow> 1 < ?p\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  g_bnd_mode ?first ?b ?fs\n  LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i \\<Longrightarrow>\n  mod_invariant ?b ?p ?first\n  \\<lbrakk>length ?mfs = m; length ?fs = m; lattice_of ?fs = L;\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs);\n   map (map_vec (\\<lambda>x. x symmod ?p)) ?fs = ?mfs;\n   \\<forall>i'<m.\n      \\<forall>j'<i'.\n         \\<bar>d\\<mu> ?fs i' j'\\<bar> < ?p * d ?fs j' * d ?fs (Suc j');\n   \\<forall>i'<m. \\<forall>j'<m. d\\<mu> ?fs i' j' = ?dmu $$ (i', j');\n   1 < ?p; g_bnd_mode ?first ?b ?fs; mod_invariant ?b ?p ?first\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod_weak fs mfs dmu p first b", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_mod_weak fs mfs dmu p first b\n\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "obtain fs'' where fs''invi: \"LLL_invariant_mod fs'' mfs'' dmu'' p first b i\" and\n          \\<mu>_small': \"(\\<mu>_small_row i fs (Suc j) \\<longrightarrow> \\<mu>_small_row i fs'' j)\" and\n          \\<mu>s: \"(\\<forall>i' j'. i' < i \\<longrightarrow> j' \\<le> i' \\<longrightarrow> \\<mu> fs'' i' j' = \\<mu> fs i' j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>fs''.\n        \\<lbrakk>LLL_invariant_mod fs'' mfs'' dmu'' p first b i;\n         \\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n         \\<mu>_small_row i fs'' j;\n         \\<forall>i' j'.\n            i' < i \\<longrightarrow>\n            j' \\<le> i' \\<longrightarrow>\n            gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n            gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i'\n             j'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Suc basis_reduction_mod_add_row[OF fsinvmw 00 i j] fsinvi"], ["proof (prove)\nusing this:\n  \\<lbrakk>LLL_invariant_mod ?fs2 ?mfs2 ?dmu2 p first b m;\n   \\<mu>_small_row i ?fs2 j;\n   basis_reduction_mod_add_rows_loop p ?mfs2 ?dmu2 i j = (?mfs'2, ?dmu'2);\n   i < m; j \\<le> i\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs'.\n                       LLL_invariant_mod fs' ?mfs'2 ?dmu'2 p first b\n                        m \\<and>\n                       (\\<forall>i' j'.\n                           i' < i \\<longrightarrow>\n                           j' \\<le> i' \\<longrightarrow>\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom ?fs2) i' j' =\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom fs') i' j') \\<and>\n                       \\<mu>_small fs' i\n  LLL_invariant_mod fs mfs dmu p first b m\n  \\<mu>_small_row i fs (Suc j)\n  basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) = (mfs', dmu')\n  i < m\n  Suc j \\<le> i\n  i \\<noteq> 0 \\<Longrightarrow>\n  \\<exists>fs'.\n     LLL_invariant_mod_weak fs' mfs'' dmu'' p first b \\<and>\n     LLL_measure i fs' = LLL_measure i fs \\<and>\n     (\\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n      \\<mu>_small_row i fs' j) \\<and>\n     \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i j\\<bar>\n     \\<le> 1 / 2 \\<and>\n     (\\<forall>i' j'.\n         i' < i \\<longrightarrow>\n         j' \\<le> i' \\<longrightarrow>\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j' =\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j') \\<and>\n     (LLL_invariant_mod fs mfs dmu p first b i \\<longrightarrow>\n      LLL_invariant_mod fs' mfs'' dmu'' p first b i) \\<and>\n     (\\<forall>ii\\<le>m. d fs' ii = d fs ii)\n  LLL_invariant_mod fs mfs dmu p first b i\n\ngoal (1 subgoal):\n 1. (\\<And>fs''.\n        \\<lbrakk>LLL_invariant_mod fs'' mfs'' dmu'' p first b i;\n         \\<mu>_small_row i fs (Suc j) \\<longrightarrow>\n         \\<mu>_small_row i fs'' j;\n         \\<forall>i' j'.\n            i' < i \\<longrightarrow>\n            j' \\<le> i' \\<longrightarrow>\n            gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n            gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i'\n             j'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  LLL_invariant_mod fs'' mfs'' dmu'' p first b i\n  \\<mu>_small_row i fs (Suc j) \\<longrightarrow> \\<mu>_small_row i fs'' j\n  \\<forall>i' j'.\n     i' < i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'\n\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "moreover"], ["proof (state)\nthis:\n  LLL_invariant_mod fs'' mfs'' dmu'' p first b i\n  \\<mu>_small_row i fs (Suc j) \\<longrightarrow> \\<mu>_small_row i fs'' j\n  \\<forall>i' j'.\n     i' < i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'\n\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "then"], ["proof (chain)\npicking this:\n  LLL_invariant_mod fs'' mfs'' dmu'' p first b i\n  \\<mu>_small_row i fs (Suc j) \\<longrightarrow> \\<mu>_small_row i fs'' j\n  \\<forall>i' j'.\n     i' < i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'", "have \\<mu>sm: \"\\<mu>_small_row i fs'' j\""], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs'' mfs'' dmu'' p first b i\n  \\<mu>_small_row i fs (Suc j) \\<longrightarrow> \\<mu>_small_row i fs'' j\n  \\<forall>i' j'.\n     i' < i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'\n\ngoal (1 subgoal):\n 1. \\<mu>_small_row i fs'' j", "using Suc"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs'' mfs'' dmu'' p first b i\n  \\<mu>_small_row i fs (Suc j) \\<longrightarrow> \\<mu>_small_row i fs'' j\n  \\<forall>i' j'.\n     i' < i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'\n  \\<lbrakk>LLL_invariant_mod ?fs2 ?mfs2 ?dmu2 p first b m;\n   \\<mu>_small_row i ?fs2 j;\n   basis_reduction_mod_add_rows_loop p ?mfs2 ?dmu2 i j = (?mfs'2, ?dmu'2);\n   i < m; j \\<le> i\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs'.\n                       LLL_invariant_mod fs' ?mfs'2 ?dmu'2 p first b\n                        m \\<and>\n                       (\\<forall>i' j'.\n                           i' < i \\<longrightarrow>\n                           j' \\<le> i' \\<longrightarrow>\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom ?fs2) i' j' =\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom fs') i' j') \\<and>\n                       \\<mu>_small fs' i\n  LLL_invariant_mod fs mfs dmu p first b m\n  \\<mu>_small_row i fs (Suc j)\n  basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) = (mfs', dmu')\n  i < m\n  Suc j \\<le> i\n\ngoal (1 subgoal):\n 1. \\<mu>_small_row i fs'' j", "by simp"], ["proof (state)\nthis:\n  \\<mu>_small_row i fs'' j\n\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "have fs''invwi: \"LLL_invariant_weak' i fs''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs''", "using LLL_invD_mod[OF fs''invi] LLL_invI_weak"], ["proof (prove)\nusing this:\n  length mfs'' = m\n  i \\<le> m\n  length fs'' = m\n  lattice_of fs'' = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs'')\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs'') \\<alpha> i\n  map (map_vec (\\<lambda>x. x symmod p)) fs'' = mfs''\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'' $$ (i', j')\n  ?i < m \\<Longrightarrow> fs'' ! ?i \\<in> carrier_vec n\n  set fs'' \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs'' ! ?i \\<in> carrier_vec n\n  set mfs'' \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs''\n  mod_invariant b p first\n  \\<lbrakk>set ?fs \\<subseteq> carrier_vec n; length ?fs = m;\n   lattice_of ?fs = L; ?i \\<le> m;\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs);\n   gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha>\n    ?i\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak' ?i ?fs\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs''", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_weak' i fs''\n\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "have fsinvwi: \"LLL_invariant_weak' i fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs", "using LLL_invD_mod[OF fsinvi] LLL_invI_weak"], ["proof (prove)\nusing this:\n  length mfs = m\n  i \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> i\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  \\<lbrakk>set ?fs \\<subseteq> carrier_vec n; length ?fs = m;\n   lattice_of ?fs = L; ?i \\<le> m;\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs);\n   gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha>\n    ?i\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak' ?i ?fs\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' i fs", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_weak' i fs\n\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "note invw = LLL_invw'_imp_w[OF fsinvwi]"], ["proof (state)\nthis:\n  LLL_invariant_weak fs\n\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "note invw'' = LLL_invw'_imp_w[OF fs''invwi]"], ["proof (state)\nthis:\n  LLL_invariant_weak fs''\n\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "have \"LLL_invariant_mod fs'' mfs'' dmu'' p first b m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs'' mfs'' dmu'' p first b m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs'' mfs'' dmu'' p first b m", "have \"(\\<forall> l. Suc l < m \\<longrightarrow> sq_norm (gso fs'' l) \\<le> \\<alpha> * sq_norm (gso fs'' (Suc l)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l.\n       Suc l < m \\<longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                   l\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                         (Suc l)\\<parallel>\\<^sup>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>l.\n       Suc l < m \\<longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                   l\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                         (Suc l)\\<parallel>\\<^sup>2", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>l.\n       Suc l < m \\<longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                   l\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                         (Suc l)\\<parallel>\\<^sup>2", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>l.\n       Suc l < m \\<longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                   l\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                         (Suc l)\\<parallel>\\<^sup>2", "assume l: \"Suc l < m\""], ["proof (state)\nthis:\n  Suc l < m\n\ngoal (1 subgoal):\n 1. \\<forall>l.\n       Suc l < m \\<longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                   l\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                         (Suc l)\\<parallel>\\<^sup>2", "have \"sq_norm (gso fs'' l) \\<le> \\<alpha> * sq_norm (gso fs'' (Suc l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "proof (cases \"i \\<le> Suc l\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2\n 2. \\<not> i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "case True"], ["proof (state)\nthis:\n  i \\<le> Suc l\n\ngoal (2 subgoals):\n 1. i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2\n 2. \\<not> i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "have deq: \"\\<And>k. k < m \\<Longrightarrow> d fs (Suc k) = d fs'' (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k. k < m \\<Longrightarrow> d fs (Suc k) = d fs'' (Suc k)", "using dd\\<mu> LLL_invD_mod(9)[OF fs''invi] LLL_invD_mod(9)[OF Suc(2)] dmu''_def j"], ["proof (prove)\nusing this:\n  ?i < m \\<Longrightarrow> d ?fs (Suc ?i) = d\\<mu> ?fs ?i ?i\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'' $$ (i', j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  dmu'' =\n  (if c = 0 then dmu\n   else mat m m\n         (\\<lambda>(i', j').\n             if i' = i \\<and> j' \\<le> j\n             then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n                  else (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n                       (p * d_of dmu j' * d_of dmu (Suc j'))\n             else dmu $$ (i', j')))\n  j < i\n\ngoal (1 subgoal):\n 1. \\<And>k. k < m \\<Longrightarrow> d fs (Suc k) = d fs'' (Suc k)", "by simp"], ["proof (state)\nthis:\n  ?k2 < m \\<Longrightarrow> d fs (Suc ?k2) = d fs'' (Suc ?k2)\n\ngoal (2 subgoals):\n 1. i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2\n 2. \\<not> i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "{"], ["proof (state)\nthis:\n  ?k2 < m \\<Longrightarrow> d fs (Suc ?k2) = d fs'' (Suc ?k2)\n\ngoal (2 subgoals):\n 1. i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2\n 2. \\<not> i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "fix k"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2\n 2. \\<not> i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "assume k: \"k < m\""], ["proof (state)\nthis:\n  k < m\n\ngoal (2 subgoals):\n 1. i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2\n 2. \\<not> i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "then"], ["proof (chain)\npicking this:\n  k < m", "have \"d fs (Suc k) = d fs'' (Suc k)\""], ["proof (prove)\nusing this:\n  k < m\n\ngoal (1 subgoal):\n 1. d fs (Suc k) = d fs'' (Suc k)", "using dd\\<mu> LLL_invD_mod(9)[OF fs''invi] LLL_invD_mod(9)[OF Suc(2)] dmu''_def j"], ["proof (prove)\nusing this:\n  k < m\n  ?i < m \\<Longrightarrow> d ?fs (Suc ?i) = d\\<mu> ?fs ?i ?i\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'' $$ (i', j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  dmu'' =\n  (if c = 0 then dmu\n   else mat m m\n         (\\<lambda>(i', j').\n             if i' = i \\<and> j' \\<le> j\n             then if j' = j then dmu $$ (i, j') - c * dmu $$ (j, j')\n                  else (dmu $$ (i, j') - c * dmu $$ (j, j')) symmod\n                       (p * d_of dmu j' * d_of dmu (Suc j'))\n             else dmu $$ (i', j')))\n  j < i\n\ngoal (1 subgoal):\n 1. d fs (Suc k) = d fs'' (Suc k)", "by simp"], ["proof (state)\nthis:\n  d fs (Suc k) = d fs'' (Suc k)\n\ngoal (2 subgoals):\n 1. i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2\n 2. \\<not> i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "have \"d fs 0 = 1\" \"d fs'' 0 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d fs 0 = 1 &&& d fs'' 0 = 1", "using d_def"], ["proof (prove)\nusing this:\n  d ?fs ?k = gs.Gramian_determinant ?fs ?k\n\ngoal (1 subgoal):\n 1. d fs 0 = 1 &&& d fs'' 0 = 1", "by auto"], ["proof (state)\nthis:\n  d fs 0 = 1\n  d fs'' 0 = 1\n\ngoal (2 subgoals):\n 1. i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2\n 2. \\<not> i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "moreover"], ["proof (state)\nthis:\n  d fs 0 = 1\n  d fs'' 0 = 1\n\ngoal (2 subgoals):\n 1. i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2\n 2. \\<not> i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "have sqid: \"sq_norm (gso fs'' k) = rat_of_int (d fs'' (Suc k)) / rat_of_int (d fs'' k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                k\\<parallel>\\<^sup>2 =\n    rat_of_int (d fs'' (Suc k)) / rat_of_int (d fs'' k)", "using LLL_d_Suc[OF invw''] LLL_d_pos[OF invw''] k"], ["proof (prove)\nusing this:\n  ?k < m \\<Longrightarrow>\n  rat_of_int (d fs'' (Suc ?k)) =\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n              ?k\\<parallel>\\<^sup>2 *\n  rat_of_int (d fs'' ?k)\n  ?k \\<le> m \\<Longrightarrow> 0 < d fs'' ?k\n  k < m\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                k\\<parallel>\\<^sup>2 =\n    rat_of_int (d fs'' (Suc k)) / rat_of_int (d fs'' k)", "by (smt One_nat_def Suc_less_eq Suc_pred le_imp_less_Suc mult_eq_0_iff less_imp_le_nat\n                        nonzero_mult_div_cancel_right of_int_0_less_iff of_int_hom.hom_zero)"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n              k\\<parallel>\\<^sup>2 =\n  rat_of_int (d fs'' (Suc k)) / rat_of_int (d fs'' k)\n\ngoal (2 subgoals):\n 1. i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2\n 2. \\<not> i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "moreover"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n              k\\<parallel>\\<^sup>2 =\n  rat_of_int (d fs'' (Suc k)) / rat_of_int (d fs'' k)\n\ngoal (2 subgoals):\n 1. i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2\n 2. \\<not> i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "have \"sq_norm (gso fs k) = rat_of_int (d fs (Suc k)) / rat_of_int (d fs k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                k\\<parallel>\\<^sup>2 =\n    rat_of_int (d fs (Suc k)) / rat_of_int (d fs k)", "using LLL_d_Suc[OF invw] LLL_d_pos[OF invw] k"], ["proof (prove)\nusing this:\n  ?k < m \\<Longrightarrow>\n  rat_of_int (d fs (Suc ?k)) =\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              ?k\\<parallel>\\<^sup>2 *\n  rat_of_int (d fs ?k)\n  ?k \\<le> m \\<Longrightarrow> 0 < d fs ?k\n  k < m\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                k\\<parallel>\\<^sup>2 =\n    rat_of_int (d fs (Suc k)) / rat_of_int (d fs k)", "by (smt One_nat_def Suc_less_eq Suc_pred le_imp_less_Suc mult_eq_0_iff less_imp_le_nat\n                        nonzero_mult_div_cancel_right of_int_0_less_iff of_int_hom.hom_zero)"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              k\\<parallel>\\<^sup>2 =\n  rat_of_int (d fs (Suc k)) / rat_of_int (d fs k)\n\ngoal (2 subgoals):\n 1. i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2\n 2. \\<not> i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "ultimately"], ["proof (chain)\npicking this:\n  d fs 0 = 1\n  d fs'' 0 = 1\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n              k\\<parallel>\\<^sup>2 =\n  rat_of_int (d fs'' (Suc k)) / rat_of_int (d fs'' k)\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              k\\<parallel>\\<^sup>2 =\n  rat_of_int (d fs (Suc k)) / rat_of_int (d fs k)", "have \"sq_norm (gso fs k) = sq_norm (gso fs'' k)\""], ["proof (prove)\nusing this:\n  d fs 0 = 1\n  d fs'' 0 = 1\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n              k\\<parallel>\\<^sup>2 =\n  rat_of_int (d fs'' (Suc k)) / rat_of_int (d fs'' k)\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              k\\<parallel>\\<^sup>2 =\n  rat_of_int (d fs (Suc k)) / rat_of_int (d fs k)\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                k\\<parallel>\\<^sup>2 =\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                k\\<parallel>\\<^sup>2", "using k deq \n                      LLL_d_pos[OF invw] LLL_d_pos[OF invw'']"], ["proof (prove)\nusing this:\n  d fs 0 = 1\n  d fs'' 0 = 1\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n              k\\<parallel>\\<^sup>2 =\n  rat_of_int (d fs'' (Suc k)) / rat_of_int (d fs'' k)\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              k\\<parallel>\\<^sup>2 =\n  rat_of_int (d fs (Suc k)) / rat_of_int (d fs k)\n  k < m\n  ?k2 < m \\<Longrightarrow> d fs (Suc ?k2) = d fs'' (Suc ?k2)\n  ?k \\<le> m \\<Longrightarrow> 0 < d fs ?k\n  ?k \\<le> m \\<Longrightarrow> 0 < d fs'' ?k\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                k\\<parallel>\\<^sup>2 =\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                k\\<parallel>\\<^sup>2", "by (metis (no_types, lifting) Nat.lessE Suc_lessD old.nat.inject zero_less_Suc)"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              k\\<parallel>\\<^sup>2 =\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n              k\\<parallel>\\<^sup>2\n\ngoal (2 subgoals):\n 1. i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2\n 2. \\<not> i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "}"], ["proof (state)\nthis:\n  ?k4 < m \\<Longrightarrow>\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              ?k4\\<parallel>\\<^sup>2 =\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n              ?k4\\<parallel>\\<^sup>2\n\ngoal (2 subgoals):\n 1. i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2\n 2. \\<not> i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "then"], ["proof (chain)\npicking this:\n  ?k4 < m \\<Longrightarrow>\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              ?k4\\<parallel>\\<^sup>2 =\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n              ?k4\\<parallel>\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  ?k4 < m \\<Longrightarrow>\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              ?k4\\<parallel>\\<^sup>2 =\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n              ?k4\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "using LLL_invD_mod(6)[OF Suc(2)]"], ["proof (prove)\nusing this:\n  ?k4 < m \\<Longrightarrow>\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              ?k4\\<parallel>\\<^sup>2 =\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n              ?k4\\<parallel>\\<^sup>2\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> m\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "by (simp add: gram_schmidt_fs.weakly_reduced_def l)"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n              l\\<parallel>\\<^sup>2\n  \\<le> \\<alpha> *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                    (Suc l)\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "case False"], ["proof (state)\nthis:\n  \\<not> i \\<le> Suc l\n\ngoal (1 subgoal):\n 1. \\<not> i \\<le> Suc l \\<Longrightarrow>\n    \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "then"], ["proof (chain)\npicking this:\n  \\<not> i \\<le> Suc l", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> i \\<le> Suc l\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "using LLL_invD_mod(6)[OF fs''invi] gram_schmidt_fs.weakly_reduced_def"], ["proof (prove)\nusing this:\n  \\<not> i \\<le> Suc l\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs'') \\<alpha> i\n  gram_schmidt_fs.weakly_reduced ?n ?fs ?\\<alpha> ?k =\n  (\\<forall>i.\n      Suc i < ?k \\<longrightarrow>\n      \\<parallel>gram_schmidt_fs.gso ?n ?fs i\\<parallel>\\<^sup>2\n      \\<le> ?\\<alpha> *\n            \\<parallel>gram_schmidt_fs.gso ?n ?fs\n                        (Suc i)\\<parallel>\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                l\\<parallel>\\<^sup>2\n    \\<le> \\<alpha> *\n          \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                      (Suc l)\\<parallel>\\<^sup>2", "by (metis less_or_eq_imp_le nat_neq_iff)"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n              l\\<parallel>\\<^sup>2\n  \\<le> \\<alpha> *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                    (Suc l)\\<parallel>\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n              l\\<parallel>\\<^sup>2\n  \\<le> \\<alpha> *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                    (Suc l)\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<forall>l.\n       Suc l < m \\<longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                   l\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                         (Suc l)\\<parallel>\\<^sup>2", "}"], ["proof (state)\nthis:\n  Suc ?l4 < m \\<Longrightarrow>\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n              ?l4\\<parallel>\\<^sup>2\n  \\<le> \\<alpha> *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                    (Suc ?l4)\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<forall>l.\n       Suc l < m \\<longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                   l\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                         (Suc l)\\<parallel>\\<^sup>2", "then"], ["proof (chain)\npicking this:\n  Suc ?l4 < m \\<Longrightarrow>\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n              ?l4\\<parallel>\\<^sup>2\n  \\<le> \\<alpha> *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                    (Suc ?l4)\\<parallel>\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  Suc ?l4 < m \\<Longrightarrow>\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n              ?l4\\<parallel>\\<^sup>2\n  \\<le> \\<alpha> *\n        \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                    (Suc ?l4)\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<forall>l.\n       Suc l < m \\<longrightarrow>\n       \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                   l\\<parallel>\\<^sup>2\n       \\<le> \\<alpha> *\n             \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                         (Suc l)\\<parallel>\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  \\<forall>l.\n     Suc l < m \\<longrightarrow>\n     \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                 l\\<parallel>\\<^sup>2\n     \\<le> \\<alpha> *\n           \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                       (Suc l)\\<parallel>\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>l.\n     Suc l < m \\<longrightarrow>\n     \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                 l\\<parallel>\\<^sup>2\n     \\<le> \\<alpha> *\n           \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                       (Suc l)\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs'' mfs'' dmu'' p first b m", "then"], ["proof (chain)\npicking this:\n  \\<forall>l.\n     Suc l < m \\<longrightarrow>\n     \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                 l\\<parallel>\\<^sup>2\n     \\<le> \\<alpha> *\n           \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                       (Suc l)\\<parallel>\\<^sup>2", "have \"weakly_reduced fs'' m\""], ["proof (prove)\nusing this:\n  \\<forall>l.\n     Suc l < m \\<longrightarrow>\n     \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                 l\\<parallel>\\<^sup>2\n     \\<le> \\<alpha> *\n           \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                       (Suc l)\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs'') \\<alpha>\n     m", "using gram_schmidt_fs.weakly_reduced_def"], ["proof (prove)\nusing this:\n  \\<forall>l.\n     Suc l < m \\<longrightarrow>\n     \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                 l\\<parallel>\\<^sup>2\n     \\<le> \\<alpha> *\n           \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'')\n                       (Suc l)\\<parallel>\\<^sup>2\n  gram_schmidt_fs.weakly_reduced ?n ?fs ?\\<alpha> ?k =\n  (\\<forall>i.\n      Suc i < ?k \\<longrightarrow>\n      \\<parallel>gram_schmidt_fs.gso ?n ?fs i\\<parallel>\\<^sup>2\n      \\<le> ?\\<alpha> *\n            \\<parallel>gram_schmidt_fs.gso ?n ?fs\n                        (Suc i)\\<parallel>\\<^sup>2)\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs'') \\<alpha>\n     m", "by blast"], ["proof (state)\nthis:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs'') \\<alpha> m\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs'' mfs'' dmu'' p first b m", "then"], ["proof (chain)\npicking this:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs'') \\<alpha> m", "show ?thesis"], ["proof (prove)\nusing this:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs'') \\<alpha> m\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs'' mfs'' dmu'' p first b m", "using LLL_invD_mod[OF fs''invi] LLL_invI_mod"], ["proof (prove)\nusing this:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs'') \\<alpha> m\n  length mfs'' = m\n  i \\<le> m\n  length fs'' = m\n  lattice_of fs'' = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs'')\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs'') \\<alpha> i\n  map (map_vec (\\<lambda>x. x symmod p)) fs'' = mfs''\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs'' i' j'\\<bar> < p * d fs'' j' * d fs'' (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs'' i' j' = dmu'' $$ (i', j')\n  ?i < m \\<Longrightarrow> fs'' ! ?i \\<in> carrier_vec n\n  set fs'' \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs'') ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs'' ! ?i \\<in> carrier_vec n\n  set mfs'' \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs''\n  mod_invariant b p first\n  \\<lbrakk>length ?mfs = m; ?i \\<le> m; length ?fs = m; lattice_of ?fs = L;\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs);\n   gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha>\n    ?i;\n   map (map_vec (\\<lambda>x. x symmod ?p)) ?fs = ?mfs;\n   \\<forall>i'<m.\n      \\<forall>j'<i'.\n         \\<bar>d\\<mu> ?fs i' j'\\<bar> < ?p * d ?fs j' * d ?fs (Suc j');\n   \\<forall>i'<m. \\<forall>j'<m. d\\<mu> ?fs i' j' = ?dmu $$ (i', j');\n   1 < ?p; g_bnd_mode ?first ?b ?fs; mod_invariant ?b ?p ?first\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs'' mfs'' dmu'' p first b m", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_mod fs'' mfs'' dmu'' p first b m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  LLL_invariant_mod fs'' mfs'' dmu'' p first b m\n\ngoal (1 subgoal):\n 1. \\<And>j fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    \\<mu>_small_row i fs j;\n                    basis_reduction_mod_add_rows_loop p mfs dmu i j =\n                    (mfs', dmu');\n                    i < m; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>i' j'.\n      i' < i \\<longrightarrow>\n      j' \\<le> i' \\<longrightarrow>\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n      gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n  \\<mu>_small fs' i;\n        LLL_invariant_mod fs mfs dmu p first b m;\n        \\<mu>_small_row i fs (Suc j);\n        basis_reduction_mod_add_rows_loop p mfs dmu i (Suc j) =\n        (mfs', dmu');\n        i < m; Suc j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>i' j'.\n                                i' < i \\<longrightarrow>\n                                j' \\<le> i' \\<longrightarrow>\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs) i' j' =\n                                gram_schmidt_fs.\\<mu> n\n                                 (map of_int_hom.vec_hom fs') i' j') \\<and>\n                            \\<mu>_small fs' i", "then"], ["proof (chain)\npicking this:\n  LLL_invariant_mod fs'' mfs'' dmu'' p first b m", "show ?case"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs'' mfs'' dmu'' p first b m\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i'\n            j') \\<and>\n       \\<mu>_small fs' i", "using \"01\" Suc.hyps i j less_imp_le_nat \\<mu>sm \\<mu>s"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs'' mfs'' dmu'' p first b m\n  basis_reduction_mod_add_rows_loop p mfs'' dmu'' i j = (mfs', dmu')\n  \\<lbrakk>LLL_invariant_mod ?fs2 ?mfs2 ?dmu2 p first b m;\n   \\<mu>_small_row i ?fs2 j;\n   basis_reduction_mod_add_rows_loop p ?mfs2 ?dmu2 i j = (?mfs'2, ?dmu'2);\n   i < m; j \\<le> i\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs'.\n                       LLL_invariant_mod fs' ?mfs'2 ?dmu'2 p first b\n                        m \\<and>\n                       (\\<forall>i' j'.\n                           i' < i \\<longrightarrow>\n                           j' \\<le> i' \\<longrightarrow>\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom ?fs2) i' j' =\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom fs') i' j') \\<and>\n                       \\<mu>_small fs' i\n  i < m\n  j < i\n  ?m < ?n \\<Longrightarrow> ?m \\<le> ?n\n  \\<mu>_small_row i fs'' j\n  \\<forall>i' j'.\n     i' < i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j'\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i'\n            j') \\<and>\n       \\<mu>_small fs' i", "by metis"], ["proof (state)\nthis:\n  \\<exists>fs'.\n     LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n     (\\<forall>i' j'.\n         i' < i \\<longrightarrow>\n         j' \\<le> i' \\<longrightarrow>\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n     \\<mu>_small fs' i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>fs'.\n     LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n     (\\<forall>i' j'.\n         i' < i \\<longrightarrow>\n         j' \\<le> i' \\<longrightarrow>\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n     \\<mu>_small fs' i\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i'\n            j') \\<and>\n       \\<mu>_small fs' i", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?j4 \\<le> i; \\<mu>_small_row i fs ?j4;\n   basis_reduction_mod_add_rows_loop p mfs dmu i ?j4 = (mfs', dmu')\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs'.\n                       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n                       (\\<forall>i' j'.\n                           i' < i \\<longrightarrow>\n                           j' \\<le> i' \\<longrightarrow>\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom fs) i' j' =\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom fs') i' j') \\<and>\n                       \\<mu>_small fs' i\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i'\n            j') \\<and>\n       \\<mu>_small fs' i", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?j4 \\<le> i; \\<mu>_small_row i fs ?j4;\n   basis_reduction_mod_add_rows_loop p mfs dmu i ?j4 = (mfs', dmu')\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs'.\n                       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n                       (\\<forall>i' j'.\n                           i' < i \\<longrightarrow>\n                           j' \\<le> i' \\<longrightarrow>\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom fs) i' j' =\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom fs') i' j') \\<and>\n                       \\<mu>_small fs' i", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?j4 \\<le> i; \\<mu>_small_row i fs ?j4;\n   basis_reduction_mod_add_rows_loop p mfs dmu i ?j4 = (mfs', dmu')\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs'.\n                       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n                       (\\<forall>i' j'.\n                           i' < i \\<longrightarrow>\n                           j' \\<le> i' \\<longrightarrow>\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom fs) i' j' =\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom fs') i' j') \\<and>\n                       \\<mu>_small fs' i\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i'\n            j') \\<and>\n       \\<mu>_small fs' i", "using \\<mu>_small_row_refl res"], ["proof (prove)\nusing this:\n  \\<lbrakk>?j4 \\<le> i; \\<mu>_small_row i fs ?j4;\n   basis_reduction_mod_add_rows_loop p mfs dmu i ?j4 = (mfs', dmu')\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs'.\n                       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n                       (\\<forall>i' j'.\n                           i' < i \\<longrightarrow>\n                           j' \\<le> i' \\<longrightarrow>\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom fs) i' j' =\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom fs') i' j') \\<and>\n                       \\<mu>_small fs' i\n  \\<mu>_small_row ?i ?fs ?i\n  basis_reduction_mod_add_rows_loop p mfs dmu i i = (mfs', dmu')\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n       (\\<forall>i' j'.\n           i' < i \\<longrightarrow>\n           j' \\<le> i' \\<longrightarrow>\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n           gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i'\n            j') \\<and>\n       \\<mu>_small fs' i", "by auto"], ["proof (state)\nthis:\n  \\<exists>fs'.\n     LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n     (\\<forall>i' j'.\n         i' < i \\<longrightarrow>\n         j' \\<le> i' \\<longrightarrow>\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs) i' j' =\n         gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j') \\<and>\n     \\<mu>_small fs' i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma basis_reduction_mod_add_rows_outer_loop_inv:\n  assumes inv: \"LLL_invariant_mod fs mfs dmu p first b m\"\n  and \"(mfs', dmu') = basis_reduction_mod_add_rows_outer_loop p mfs dmu i\"\n  and i: \"i < m\"\nshows \"(\\<exists>fs'. LLL_invariant_mod fs' mfs' dmu' p first b m \\<and> \n  (\\<forall>j. j \\<le> i \\<longrightarrow> \\<mu>_small fs' j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n       (\\<forall>j\\<le>i. \\<mu>_small fs' j)", "proof(insert assms, induct i arbitrary: fs mfs dmu mfs' dmu')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>fs mfs dmu mfs' dmu'.\n       \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n        (mfs', dmu') = basis_reduction_mod_add_rows_outer_loop p mfs dmu 0;\n        0 < m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>j\\<le>0. \\<mu>_small fs' j)\n 2. \\<And>i fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    (mfs', dmu') =\n                    basis_reduction_mod_add_rows_outer_loop p mfs dmu i;\n                    i < m\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>j\\<le>i. \\<mu>_small fs' j);\n        LLL_invariant_mod fs mfs dmu p first b m;\n        (mfs', dmu') =\n        basis_reduction_mod_add_rows_outer_loop p mfs dmu (Suc i);\n        Suc i < m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>j\\<le>Suc i. \\<mu>_small fs' j)", "case (0 fs)"], ["proof (state)\nthis:\n  LLL_invariant_mod fs mfs dmu p first b m\n  (mfs', dmu') = basis_reduction_mod_add_rows_outer_loop p mfs dmu 0\n  0 < m\n\ngoal (2 subgoals):\n 1. \\<And>fs mfs dmu mfs' dmu'.\n       \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n        (mfs', dmu') = basis_reduction_mod_add_rows_outer_loop p mfs dmu 0;\n        0 < m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>j\\<le>0. \\<mu>_small fs' j)\n 2. \\<And>i fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    (mfs', dmu') =\n                    basis_reduction_mod_add_rows_outer_loop p mfs dmu i;\n                    i < m\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>j\\<le>i. \\<mu>_small fs' j);\n        LLL_invariant_mod fs mfs dmu p first b m;\n        (mfs', dmu') =\n        basis_reduction_mod_add_rows_outer_loop p mfs dmu (Suc i);\n        Suc i < m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>j\\<le>Suc i. \\<mu>_small fs' j)", "then"], ["proof (chain)\npicking this:\n  LLL_invariant_mod fs mfs dmu p first b m\n  (mfs', dmu') = basis_reduction_mod_add_rows_outer_loop p mfs dmu 0\n  0 < m", "show ?case"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b m\n  (mfs', dmu') = basis_reduction_mod_add_rows_outer_loop p mfs dmu 0\n  0 < m\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n       (\\<forall>j\\<le>0. \\<mu>_small fs' j)", "using \\<mu>_small_def"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu p first b m\n  (mfs', dmu') = basis_reduction_mod_add_rows_outer_loop p mfs dmu 0\n  0 < m\n  \\<mu>_small ?fs ?i =\n  (\\<forall>j<?i.\n      \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?fs) ?i j\\<bar>\n      \\<le> 1 / 2)\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n       (\\<forall>j\\<le>0. \\<mu>_small fs' j)", "by auto"], ["proof (state)\nthis:\n  \\<exists>fs'.\n     LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n     (\\<forall>j\\<le>0. \\<mu>_small fs' j)\n\ngoal (1 subgoal):\n 1. \\<And>i fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    (mfs', dmu') =\n                    basis_reduction_mod_add_rows_outer_loop p mfs dmu i;\n                    i < m\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>j\\<le>i. \\<mu>_small fs' j);\n        LLL_invariant_mod fs mfs dmu p first b m;\n        (mfs', dmu') =\n        basis_reduction_mod_add_rows_outer_loop p mfs dmu (Suc i);\n        Suc i < m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>j\\<le>Suc i. \\<mu>_small fs' j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    (mfs', dmu') =\n                    basis_reduction_mod_add_rows_outer_loop p mfs dmu i;\n                    i < m\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>j\\<le>i. \\<mu>_small fs' j);\n        LLL_invariant_mod fs mfs dmu p first b m;\n        (mfs', dmu') =\n        basis_reduction_mod_add_rows_outer_loop p mfs dmu (Suc i);\n        Suc i < m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>j\\<le>Suc i. \\<mu>_small fs' j)", "case (Suc i fs mfs dmu mfs' dmu')"], ["proof (state)\nthis:\n  \\<lbrakk>LLL_invariant_mod ?fs2 ?mfs2 ?dmu2 p first b m;\n   (?mfs'2, ?dmu'2) =\n   basis_reduction_mod_add_rows_outer_loop p ?mfs2 ?dmu2 i;\n   i < m\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs'.\n                       LLL_invariant_mod fs' ?mfs'2 ?dmu'2 p first b\n                        m \\<and>\n                       (\\<forall>j\\<le>i. \\<mu>_small fs' j)\n  LLL_invariant_mod fs mfs dmu p first b m\n  (mfs', dmu') = basis_reduction_mod_add_rows_outer_loop p mfs dmu (Suc i)\n  Suc i < m\n\ngoal (1 subgoal):\n 1. \\<And>i fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    (mfs', dmu') =\n                    basis_reduction_mod_add_rows_outer_loop p mfs dmu i;\n                    i < m\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>j\\<le>i. \\<mu>_small fs' j);\n        LLL_invariant_mod fs mfs dmu p first b m;\n        (mfs', dmu') =\n        basis_reduction_mod_add_rows_outer_loop p mfs dmu (Suc i);\n        Suc i < m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>j\\<le>Suc i. \\<mu>_small fs' j)", "obtain mfs'' dmu'' where mfs''dmu'': \"(mfs'', dmu'')\n    = basis_reduction_mod_add_rows_outer_loop p mfs dmu i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>mfs'' dmu''.\n        (mfs'', dmu'') =\n        basis_reduction_mod_add_rows_outer_loop p mfs dmu\n         i \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis surj_pair)"], ["proof (state)\nthis:\n  (mfs'', dmu'') = basis_reduction_mod_add_rows_outer_loop p mfs dmu i\n\ngoal (1 subgoal):\n 1. \\<And>i fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    (mfs', dmu') =\n                    basis_reduction_mod_add_rows_outer_loop p mfs dmu i;\n                    i < m\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>j\\<le>i. \\<mu>_small fs' j);\n        LLL_invariant_mod fs mfs dmu p first b m;\n        (mfs', dmu') =\n        basis_reduction_mod_add_rows_outer_loop p mfs dmu (Suc i);\n        Suc i < m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>j\\<le>Suc i. \\<mu>_small fs' j)", "then"], ["proof (chain)\npicking this:\n  (mfs'', dmu'') = basis_reduction_mod_add_rows_outer_loop p mfs dmu i", "obtain fs'' where fs'': \"LLL_invariant_mod fs'' mfs'' dmu'' p first b m\" \n    and 00: \"(\\<forall>j. j \\<le> i \\<longrightarrow> \\<mu>_small fs'' j)\""], ["proof (prove)\nusing this:\n  (mfs'', dmu'') = basis_reduction_mod_add_rows_outer_loop p mfs dmu i\n\ngoal (1 subgoal):\n 1. (\\<And>fs''.\n        \\<lbrakk>LLL_invariant_mod fs'' mfs'' dmu'' p first b m;\n         \\<forall>j\\<le>i. \\<mu>_small fs'' j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Suc"], ["proof (prove)\nusing this:\n  (mfs'', dmu'') = basis_reduction_mod_add_rows_outer_loop p mfs dmu i\n  \\<lbrakk>LLL_invariant_mod ?fs2 ?mfs2 ?dmu2 p first b m;\n   (?mfs'2, ?dmu'2) =\n   basis_reduction_mod_add_rows_outer_loop p ?mfs2 ?dmu2 i;\n   i < m\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs'.\n                       LLL_invariant_mod fs' ?mfs'2 ?dmu'2 p first b\n                        m \\<and>\n                       (\\<forall>j\\<le>i. \\<mu>_small fs' j)\n  LLL_invariant_mod fs mfs dmu p first b m\n  (mfs', dmu') = basis_reduction_mod_add_rows_outer_loop p mfs dmu (Suc i)\n  Suc i < m\n\ngoal (1 subgoal):\n 1. (\\<And>fs''.\n        \\<lbrakk>LLL_invariant_mod fs'' mfs'' dmu'' p first b m;\n         \\<forall>j\\<le>i. \\<mu>_small fs'' j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  LLL_invariant_mod fs'' mfs'' dmu'' p first b m\n  \\<forall>j\\<le>i. \\<mu>_small fs'' j\n\ngoal (1 subgoal):\n 1. \\<And>i fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    (mfs', dmu') =\n                    basis_reduction_mod_add_rows_outer_loop p mfs dmu i;\n                    i < m\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>j\\<le>i. \\<mu>_small fs' j);\n        LLL_invariant_mod fs mfs dmu p first b m;\n        (mfs', dmu') =\n        basis_reduction_mod_add_rows_outer_loop p mfs dmu (Suc i);\n        Suc i < m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>j\\<le>Suc i. \\<mu>_small fs' j)", "have \"(mfs', dmu') = basis_reduction_mod_add_rows_loop p mfs'' dmu'' (Suc i) (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (mfs', dmu') =\n    basis_reduction_mod_add_rows_loop p mfs'' dmu'' (Suc i) (Suc i)", "using Suc(3,4) mfs''dmu''"], ["proof (prove)\nusing this:\n  (mfs', dmu') = basis_reduction_mod_add_rows_outer_loop p mfs dmu (Suc i)\n  Suc i < m\n  (mfs'', dmu'') = basis_reduction_mod_add_rows_outer_loop p mfs dmu i\n\ngoal (1 subgoal):\n 1. (mfs', dmu') =\n    basis_reduction_mod_add_rows_loop p mfs'' dmu'' (Suc i) (Suc i)", "by (smt basis_reduction_mod_add_rows_outer_loop.simps(2) case_prod_conv)"], ["proof (state)\nthis:\n  (mfs', dmu') =\n  basis_reduction_mod_add_rows_loop p mfs'' dmu'' (Suc i) (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>i fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    (mfs', dmu') =\n                    basis_reduction_mod_add_rows_outer_loop p mfs dmu i;\n                    i < m\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>j\\<le>i. \\<mu>_small fs' j);\n        LLL_invariant_mod fs mfs dmu p first b m;\n        (mfs', dmu') =\n        basis_reduction_mod_add_rows_outer_loop p mfs dmu (Suc i);\n        Suc i < m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>j\\<le>Suc i. \\<mu>_small fs' j)", "then"], ["proof (chain)\npicking this:\n  (mfs', dmu') =\n  basis_reduction_mod_add_rows_loop p mfs'' dmu'' (Suc i) (Suc i)", "obtain fs' where 01: \"LLL_invariant_mod fs' mfs' dmu' p first b m\" \n    and 02: \"\\<forall>i' j'. i' < (Suc i) \\<longrightarrow> j' \\<le> i' \\<longrightarrow> \\<mu> fs'' i' j' = \\<mu> fs' i' j'\" and 03: \"\\<mu>_small fs' (Suc i)\""], ["proof (prove)\nusing this:\n  (mfs', dmu') =\n  basis_reduction_mod_add_rows_loop p mfs'' dmu'' (Suc i) (Suc i)\n\ngoal (1 subgoal):\n 1. (\\<And>fs'.\n        \\<lbrakk>LLL_invariant_mod fs' mfs' dmu' p first b m;\n         \\<forall>i' j'.\n            i' < Suc i \\<longrightarrow>\n            j' \\<le> i' \\<longrightarrow>\n            gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n            gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j';\n         \\<mu>_small fs' (Suc i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using fs'' basis_reduction_mod_add_rows_loop_inv' Suc"], ["proof (prove)\nusing this:\n  (mfs', dmu') =\n  basis_reduction_mod_add_rows_loop p mfs'' dmu'' (Suc i) (Suc i)\n  LLL_invariant_mod fs'' mfs'' dmu'' p first b m\n  \\<lbrakk>LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b m;\n   basis_reduction_mod_add_rows_loop ?p ?mfs ?dmu ?i ?i = (?mfs', ?dmu');\n   ?i < m\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs'.\n                       LLL_invariant_mod fs' ?mfs' ?dmu' ?p ?first ?b\n                        m \\<and>\n                       (\\<forall>i' j'.\n                           i' < ?i \\<longrightarrow>\n                           j' \\<le> i' \\<longrightarrow>\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom ?fs) i' j' =\n                           gram_schmidt_fs.\\<mu> n\n                            (map of_int_hom.vec_hom fs') i' j') \\<and>\n                       \\<mu>_small fs' ?i\n  \\<lbrakk>LLL_invariant_mod ?fs2 ?mfs2 ?dmu2 p first b m;\n   (?mfs'2, ?dmu'2) =\n   basis_reduction_mod_add_rows_outer_loop p ?mfs2 ?dmu2 i;\n   i < m\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs'.\n                       LLL_invariant_mod fs' ?mfs'2 ?dmu'2 p first b\n                        m \\<and>\n                       (\\<forall>j\\<le>i. \\<mu>_small fs' j)\n  LLL_invariant_mod fs mfs dmu p first b m\n  (mfs', dmu') = basis_reduction_mod_add_rows_outer_loop p mfs dmu (Suc i)\n  Suc i < m\n\ngoal (1 subgoal):\n 1. (\\<And>fs'.\n        \\<lbrakk>LLL_invariant_mod fs' mfs' dmu' p first b m;\n         \\<forall>i' j'.\n            i' < Suc i \\<longrightarrow>\n            j' \\<le> i' \\<longrightarrow>\n            gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n            gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j';\n         \\<mu>_small fs' (Suc i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  LLL_invariant_mod fs' mfs' dmu' p first b m\n  \\<forall>i' j'.\n     i' < Suc i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'\n  \\<mu>_small fs' (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>i fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    (mfs', dmu') =\n                    basis_reduction_mod_add_rows_outer_loop p mfs dmu i;\n                    i < m\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>j\\<le>i. \\<mu>_small fs' j);\n        LLL_invariant_mod fs mfs dmu p first b m;\n        (mfs', dmu') =\n        basis_reduction_mod_add_rows_outer_loop p mfs dmu (Suc i);\n        Suc i < m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>j\\<le>Suc i. \\<mu>_small fs' j)", "moreover"], ["proof (state)\nthis:\n  LLL_invariant_mod fs' mfs' dmu' p first b m\n  \\<forall>i' j'.\n     i' < Suc i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'\n  \\<mu>_small fs' (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>i fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    (mfs', dmu') =\n                    basis_reduction_mod_add_rows_outer_loop p mfs dmu i;\n                    i < m\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>j\\<le>i. \\<mu>_small fs' j);\n        LLL_invariant_mod fs mfs dmu p first b m;\n        (mfs', dmu') =\n        basis_reduction_mod_add_rows_outer_loop p mfs dmu (Suc i);\n        Suc i < m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>j\\<le>Suc i. \\<mu>_small fs' j)", "have \"\\<forall>j. j \\<le> (Suc i) \\<longrightarrow> \\<mu>_small fs' j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j\\<le>Suc i. \\<mu>_small fs' j", "using 02 00 03 \\<mu>_small_def"], ["proof (prove)\nusing this:\n  \\<forall>i' j'.\n     i' < Suc i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'\n  \\<forall>j\\<le>i. \\<mu>_small fs'' j\n  \\<mu>_small fs' (Suc i)\n  \\<mu>_small ?fs ?i =\n  (\\<forall>j<?i.\n      \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?fs) ?i j\\<bar>\n      \\<le> 1 / 2)\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<le>Suc i. \\<mu>_small fs' j", "by (simp add: le_Suc_eq)"], ["proof (state)\nthis:\n  \\<forall>j\\<le>Suc i. \\<mu>_small fs' j\n\ngoal (1 subgoal):\n 1. \\<And>i fs mfs dmu mfs' dmu'.\n       \\<lbrakk>\\<And>fs mfs dmu mfs' dmu'.\n                   \\<lbrakk>LLL_invariant_mod fs mfs dmu p first b m;\n                    (mfs', dmu') =\n                    basis_reduction_mod_add_rows_outer_loop p mfs dmu i;\n                    i < m\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>fs'.\n  LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n  (\\<forall>j\\<le>i. \\<mu>_small fs' j);\n        LLL_invariant_mod fs mfs dmu p first b m;\n        (mfs', dmu') =\n        basis_reduction_mod_add_rows_outer_loop p mfs dmu (Suc i);\n        Suc i < m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'.\n                            LLL_invariant_mod fs' mfs' dmu' p first b\n                             m \\<and>\n                            (\\<forall>j\\<le>Suc i. \\<mu>_small fs' j)", "ultimately"], ["proof (chain)\npicking this:\n  LLL_invariant_mod fs' mfs' dmu' p first b m\n  \\<forall>i' j'.\n     i' < Suc i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'\n  \\<mu>_small fs' (Suc i)\n  \\<forall>j\\<le>Suc i. \\<mu>_small fs' j", "show ?case"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs' mfs' dmu' p first b m\n  \\<forall>i' j'.\n     i' < Suc i \\<longrightarrow>\n     j' \\<le> i' \\<longrightarrow>\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs'') i' j' =\n     gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom fs') i' j'\n  \\<mu>_small fs' (Suc i)\n  \\<forall>j\\<le>Suc i. \\<mu>_small fs' j\n\ngoal (1 subgoal):\n 1. \\<exists>fs'.\n       LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n       (\\<forall>j\\<le>Suc i. \\<mu>_small fs' j)", "by blast"], ["proof (state)\nthis:\n  \\<exists>fs'.\n     LLL_invariant_mod fs' mfs' dmu' p first b m \\<and>\n     (\\<forall>j\\<le>Suc i. \\<mu>_small fs' j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma basis_reduction_mod_fs_bound:\n  assumes Linv: \"LLL_invariant_mod fs mfs dmu p first b k\"\n  and mu_small: \"\\<mu>_small fs i\"\n  and i: \"i < m\"\n  and nFirst: \"\\<not> first\" \nshows \"fs ! i = mfs ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "from LLL_invD_mod(16-17)[OF Linv] nFirst g_bnd_mode_def"], ["proof (chain)\npicking this:\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  \\<not> first\n  g_bnd_mode ?first ?b ?fs =\n  (if ?first \\<and> m \\<noteq> 0\n   then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom ?fs)\n                    0\\<parallel>\\<^sup>2\n        \\<le> ?b\n   else g_bnd ?b ?fs)", "have gbnd: \"g_bnd b fs\" and bp: \"b \\<le> (rat_of_int (p - 1))\\<^sup>2 / (rat_of_nat m + 3)\""], ["proof (prove)\nusing this:\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  \\<not> first\n  g_bnd_mode ?first ?b ?fs =\n  (if ?first \\<and> m \\<noteq> 0\n   then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom ?fs)\n                    0\\<parallel>\\<^sup>2\n        \\<le> ?b\n   else g_bnd ?b ?fs)\n\ngoal (1 subgoal):\n 1. g_bnd b fs &&& b \\<le> (rat_of_int (p - 1))\\<^sup>2 / (rat_of_nat m + 3)", "by (auto simp: mod_invariant_def bound_number_def)"], ["proof (state)\nthis:\n  g_bnd b fs\n  b \\<le> (rat_of_int (p - 1))\\<^sup>2 / (rat_of_nat m + 3)\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have Linvw: \"LLL_invariant_weak' k fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' k fs", "using LLL_invD_mod[OF Linv] LLL_invI_weak"], ["proof (prove)\nusing this:\n  length mfs = m\n  k \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> k\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  \\<lbrakk>set ?fs \\<subseteq> carrier_vec n; length ?fs = m;\n   lattice_of ?fs = L; ?i \\<le> m;\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs);\n   gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha>\n    ?i\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak' ?i ?fs\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' k fs", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_weak' k fs\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have \"fs_int_indpt n fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fs_int_indpt n fs", "using LLL_invD_mod(5)[OF Linv] Gram_Schmidt_2.fs_int_indpt.intro"], ["proof (prove)\nusing this:\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  cof_vec_space.lin_indpt_list ?n\n   (map of_int_hom.vec_hom ?fs) \\<Longrightarrow>\n  fs_int_indpt ?n ?fs\n\ngoal (1 subgoal):\n 1. fs_int_indpt n fs", "by simp"], ["proof (state)\nthis:\n  fs_int_indpt n fs\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "then"], ["proof (chain)\npicking this:\n  fs_int_indpt n fs", "interpret fs: fs_int_indpt n fs"], ["proof (prove)\nusing this:\n  fs_int_indpt n fs\n\ngoal (1 subgoal):\n 1. fs_int_indpt n fs", "using fs_int_indpt.sq_norm_fs_via_sum_mu_gso"], ["proof (prove)\nusing this:\n  fs_int_indpt n fs\n  \\<lbrakk>fs_int_indpt ?n ?fs; ?i < length ?fs\\<rbrakk>\n  \\<Longrightarrow> rat_of_int \\<parallel>?fs ! ?i\\<parallel>\\<^sup>2 =\n                    (\\<Sum>j\\<leftarrow>[0..<\n   Suc ?i]. (gram_schmidt_fs.\\<mu> ?n (map of_int_hom.vec_hom ?fs) ?i\n              j)\\<^sup>2 *\n            \\<parallel>gram_schmidt_fs.gso ?n (map of_int_hom.vec_hom ?fs)\n                        j\\<parallel>\\<^sup>2)\n\ngoal (1 subgoal):\n 1. fs_int_indpt n fs", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have \"\\<parallel>gso fs 0\\<parallel>\\<^sup>2 \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2 \\<le> b", "using gbnd i"], ["proof (prove)\nusing this:\n  g_bnd b fs\n  i < m\n\ngoal (1 subgoal):\n 1. \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2 \\<le> b", "unfolding g_bnd_def"], ["proof (prove)\nusing this:\n  \\<forall>i<m. \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2 \\<le> b\n  i < m\n\ngoal (1 subgoal):\n 1. \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2 \\<le> b", "by blast"], ["proof (state)\nthis:\n  \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2 \\<le> b\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "then"], ["proof (chain)\npicking this:\n  \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2 \\<le> b", "have b0: \"0 \\<le> b\""], ["proof (prove)\nusing this:\n  \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2 \\<le> b\n\ngoal (1 subgoal):\n 1. 0 \\<le> b", "using sq_norm_vec_ge_0 dual_order.trans"], ["proof (prove)\nusing this:\n  \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2 \\<le> b\n  (0::?'a) \\<le> \\<parallel>?v\\<parallel>\\<^sup>2\n  \\<lbrakk>?b \\<le> ?a; ?c \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?c \\<le> ?a\n\ngoal (1 subgoal):\n 1. 0 \\<le> b", "by auto"], ["proof (state)\nthis:\n  0 \\<le> b\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have 00: \"of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2 = (\\<Sum>j\\<leftarrow>[0..<Suc i]. (\\<mu> fs i j)\\<^sup>2 * \\<parallel>gso fs j\\<parallel>\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2 =\n    (\\<Sum>j\\<leftarrow>[0..<\n                         Suc i]. (fs.gs.\\<mu> i j)\\<^sup>2 *\n                                 \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2)", "using fs.sq_norm_fs_via_sum_mu_gso LLL_invD_mod[OF Linv] Gram_Schmidt_2.fs_int_indpt.intro i"], ["proof (prove)\nusing this:\n  ?i < length fs \\<Longrightarrow>\n  rat_of_int \\<parallel>fs ! ?i\\<parallel>\\<^sup>2 =\n  (\\<Sum>j\\<leftarrow>[0..<\n                       Suc ?i]. (fs.gs.\\<mu> ?i j)\\<^sup>2 *\n                                \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2)\n  length mfs = m\n  k \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  fs.gs.weakly_reduced \\<alpha> k\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow> fs.gs.gso ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  cof_vec_space.lin_indpt_list ?n\n   (map of_int_hom.vec_hom ?fs) \\<Longrightarrow>\n  fs_int_indpt ?n ?fs\n  i < m\n\ngoal (1 subgoal):\n 1. rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2 =\n    (\\<Sum>j\\<leftarrow>[0..<\n                         Suc i]. (fs.gs.\\<mu> i j)\\<^sup>2 *\n                                 \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2 =\n  (\\<Sum>j\\<leftarrow>[0..<\n                       Suc i]. (fs.gs.\\<mu> i j)\\<^sup>2 *\n                               \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2)\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have 01: \"\\<forall>j < i. (\\<mu> fs i j)\\<^sup>2 * \\<parallel>gso fs j\\<parallel>\\<^sup>2 \\<le> (1 / rat_of_int 4) * \\<parallel>gso fs j\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j<i.\n       (fs.gs.\\<mu> i j)\\<^sup>2 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n       \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>j<i.\n       (fs.gs.\\<mu> i j)\\<^sup>2 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n       \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>j<i.\n       (fs.gs.\\<mu> i j)\\<^sup>2 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n       \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>j<i.\n       (fs.gs.\\<mu> i j)\\<^sup>2 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n       \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2", "assume j: \"j < i\""], ["proof (state)\nthis:\n  j < i\n\ngoal (1 subgoal):\n 1. \\<forall>j<i.\n       (fs.gs.\\<mu> i j)\\<^sup>2 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n       \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2", "then"], ["proof (chain)\npicking this:\n  j < i", "have \"\\<bar>fs.gs.\\<mu> i j\\<bar> \\<le> 1 / (rat_of_int 2)\""], ["proof (prove)\nusing this:\n  j < i\n\ngoal (1 subgoal):\n 1. \\<bar>fs.gs.\\<mu> i j\\<bar> \\<le> 1 / rat_of_int 2", "using mu_small Power.linordered_idom_class.abs_square_le_1 j"], ["proof (prove)\nusing this:\n  j < i\n  \\<mu>_small fs i\n  (?x\\<^sup>2 \\<le> (1::?'a)) = (\\<bar>?x\\<bar> \\<le> (1::?'a))\n  j < i\n\ngoal (1 subgoal):\n 1. \\<bar>fs.gs.\\<mu> i j\\<bar> \\<le> 1 / rat_of_int 2", "unfolding \\<mu>_small_def"], ["proof (prove)\nusing this:\n  j < i\n  \\<forall>j<i. \\<bar>fs.gs.\\<mu> i j\\<bar> \\<le> 1 / 2\n  (?x\\<^sup>2 \\<le> (1::?'a)) = (\\<bar>?x\\<bar> \\<le> (1::?'a))\n  j < i\n\ngoal (1 subgoal):\n 1. \\<bar>fs.gs.\\<mu> i j\\<bar> \\<le> 1 / rat_of_int 2", "by simp"], ["proof (state)\nthis:\n  \\<bar>fs.gs.\\<mu> i j\\<bar> \\<le> 1 / rat_of_int 2\n\ngoal (1 subgoal):\n 1. \\<forall>j<i.\n       (fs.gs.\\<mu> i j)\\<^sup>2 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n       \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2", "moreover"], ["proof (state)\nthis:\n  \\<bar>fs.gs.\\<mu> i j\\<bar> \\<le> 1 / rat_of_int 2\n\ngoal (1 subgoal):\n 1. \\<forall>j<i.\n       (fs.gs.\\<mu> i j)\\<^sup>2 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n       \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2", "have \"\\<bar>\\<mu> fs i j\\<bar> \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> \\<bar>fs.gs.\\<mu> i j\\<bar>", "by simp"], ["proof (state)\nthis:\n  0 \\<le> \\<bar>fs.gs.\\<mu> i j\\<bar>\n\ngoal (1 subgoal):\n 1. \\<forall>j<i.\n       (fs.gs.\\<mu> i j)\\<^sup>2 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n       \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2", "ultimately"], ["proof (chain)\npicking this:\n  \\<bar>fs.gs.\\<mu> i j\\<bar> \\<le> 1 / rat_of_int 2\n  0 \\<le> \\<bar>fs.gs.\\<mu> i j\\<bar>", "have \"\\<bar>\\<mu> fs i j\\<bar>\\<^sup>2 \\<le> (1 / rat_of_int 2)\\<^sup>2\""], ["proof (prove)\nusing this:\n  \\<bar>fs.gs.\\<mu> i j\\<bar> \\<le> 1 / rat_of_int 2\n  0 \\<le> \\<bar>fs.gs.\\<mu> i j\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>fs.gs.\\<mu> i j\\<bar>\\<^sup>2 \\<le> (1 / rat_of_int 2)\\<^sup>2", "using Power.linordered_idom_class.abs_le_square_iff"], ["proof (prove)\nusing this:\n  \\<bar>fs.gs.\\<mu> i j\\<bar> \\<le> 1 / rat_of_int 2\n  0 \\<le> \\<bar>fs.gs.\\<mu> i j\\<bar>\n  (\\<bar>?x\\<bar> \\<le> \\<bar>?y\\<bar>) = (?x\\<^sup>2 \\<le> ?y\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<bar>fs.gs.\\<mu> i j\\<bar>\\<^sup>2 \\<le> (1 / rat_of_int 2)\\<^sup>2", "by fastforce"], ["proof (state)\nthis:\n  \\<bar>fs.gs.\\<mu> i j\\<bar>\\<^sup>2 \\<le> (1 / rat_of_int 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<forall>j<i.\n       (fs.gs.\\<mu> i j)\\<^sup>2 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n       \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2", "also"], ["proof (state)\nthis:\n  \\<bar>fs.gs.\\<mu> i j\\<bar>\\<^sup>2 \\<le> (1 / rat_of_int 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<forall>j<i.\n       (fs.gs.\\<mu> i j)\\<^sup>2 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n       \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2", "have \"\\<dots> = 1 / (rat_of_int 4)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 / rat_of_int 2)\\<^sup>2 = 1 / rat_of_int 4", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (1 / rat_of_int 2)\\<^sup>2 = 1 / rat_of_int 4\n\ngoal (1 subgoal):\n 1. \\<forall>j<i.\n       (fs.gs.\\<mu> i j)\\<^sup>2 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n       \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2", "finally"], ["proof (chain)\npicking this:\n  \\<bar>fs.gs.\\<mu> i j\\<bar>\\<^sup>2 \\<le> 1 / rat_of_int 4", "have \"\\<bar>\\<mu> fs i j\\<bar>\\<^sup>2 \\<le> 1 / rat_of_int 4\""], ["proof (prove)\nusing this:\n  \\<bar>fs.gs.\\<mu> i j\\<bar>\\<^sup>2 \\<le> 1 / rat_of_int 4\n\ngoal (1 subgoal):\n 1. \\<bar>fs.gs.\\<mu> i j\\<bar>\\<^sup>2 \\<le> 1 / rat_of_int 4", "by simp"], ["proof (state)\nthis:\n  \\<bar>fs.gs.\\<mu> i j\\<bar>\\<^sup>2 \\<le> 1 / rat_of_int 4\n\ngoal (1 subgoal):\n 1. \\<forall>j<i.\n       (fs.gs.\\<mu> i j)\\<^sup>2 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n       \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2", "}"], ["proof (state)\nthis:\n  ?j4 < i \\<Longrightarrow>\n  \\<bar>fs.gs.\\<mu> i ?j4\\<bar>\\<^sup>2 \\<le> 1 / rat_of_int 4\n\ngoal (1 subgoal):\n 1. \\<forall>j<i.\n       (fs.gs.\\<mu> i j)\\<^sup>2 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n       \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2", "then"], ["proof (chain)\npicking this:\n  ?j4 < i \\<Longrightarrow>\n  \\<bar>fs.gs.\\<mu> i ?j4\\<bar>\\<^sup>2 \\<le> 1 / rat_of_int 4", "show ?thesis"], ["proof (prove)\nusing this:\n  ?j4 < i \\<Longrightarrow>\n  \\<bar>fs.gs.\\<mu> i ?j4\\<bar>\\<^sup>2 \\<le> 1 / rat_of_int 4\n\ngoal (1 subgoal):\n 1. \\<forall>j<i.\n       (fs.gs.\\<mu> i j)\\<^sup>2 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n       \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2", "using fs.gs.\\<mu>.simps"], ["proof (prove)\nusing this:\n  ?j4 < i \\<Longrightarrow>\n  \\<bar>fs.gs.\\<mu> i ?j4\\<bar>\\<^sup>2 \\<le> 1 / rat_of_int 4\n  fs.gs.\\<mu> ?i ?j =\n  (if ?j < ?i\n   then map of_int_hom.vec_hom fs ! ?i \\<bullet> fs.gs.gso ?j /\n        \\<parallel>fs.gs.gso ?j\\<parallel>\\<^sup>2\n   else if ?i = ?j then 1 else 0)\n\ngoal (1 subgoal):\n 1. \\<forall>j<i.\n       (fs.gs.\\<mu> i j)\\<^sup>2 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n       \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2", "by (metis mult_right_mono power2_abs sq_norm_vec_ge_0)"], ["proof (state)\nthis:\n  \\<forall>j<i.\n     (fs.gs.\\<mu> i j)\\<^sup>2 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n     \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>j<i.\n     (fs.gs.\\<mu> i j)\\<^sup>2 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n     \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "then"], ["proof (chain)\npicking this:\n  \\<forall>j<i.\n     (fs.gs.\\<mu> i j)\\<^sup>2 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n     \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2", "have 0111: \"\\<And>j. j \\<in> set [0..<i] \\<Longrightarrow> (\\<mu> fs i j)\\<^sup>2 * \\<parallel>gso fs j\\<parallel>\\<^sup>2 \\<le> (1 / rat_of_int 4) * \\<parallel>gso fs j\\<parallel>\\<^sup>2\""], ["proof (prove)\nusing this:\n  \\<forall>j<i.\n     (fs.gs.\\<mu> i j)\\<^sup>2 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n     \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> set [0..<i] \\<Longrightarrow>\n       (fs.gs.\\<mu> i j)\\<^sup>2 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2\n       \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  ?j2 \\<in> set [0..<i] \\<Longrightarrow>\n  (fs.gs.\\<mu> i ?j2)\\<^sup>2 * \\<parallel>fs.gs.gso ?j2\\<parallel>\\<^sup>2\n  \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso ?j2\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "{"], ["proof (state)\nthis:\n  ?j2 \\<in> set [0..<i] \\<Longrightarrow>\n  (fs.gs.\\<mu> i ?j2)\\<^sup>2 * \\<parallel>fs.gs.gso ?j2\\<parallel>\\<^sup>2\n  \\<le> 1 / rat_of_int 4 * \\<parallel>fs.gs.gso ?j2\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "assume j: \"j < n\""], ["proof (state)\nthis:\n  j < n\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have 011: \"(\\<mu> fs i i)\\<^sup>2 * \\<parallel>gso fs i\\<parallel>\\<^sup>2 = 1 * \\<parallel>gso fs i\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fs.gs.\\<mu> i i)\\<^sup>2 * \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2 =\n    1 * \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2", "using fs.gs.\\<mu>.simps"], ["proof (prove)\nusing this:\n  fs.gs.\\<mu> ?i ?j =\n  (if ?j < ?i\n   then map of_int_hom.vec_hom fs ! ?i \\<bullet> fs.gs.gso ?j /\n        \\<parallel>fs.gs.gso ?j\\<parallel>\\<^sup>2\n   else if ?i = ?j then 1 else 0)\n\ngoal (1 subgoal):\n 1. (fs.gs.\\<mu> i i)\\<^sup>2 * \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2 =\n    1 * \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  (fs.gs.\\<mu> i i)\\<^sup>2 * \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2 =\n  1 * \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have 02: \"\\<forall>j < Suc i. \\<parallel>gso fs j\\<parallel>\\<^sup>2 \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j<Suc i. \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2 \\<le> b", "using gbnd i"], ["proof (prove)\nusing this:\n  g_bnd b fs\n  i < m\n\ngoal (1 subgoal):\n 1. \\<forall>j<Suc i. \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2 \\<le> b", "unfolding g_bnd_def"], ["proof (prove)\nusing this:\n  \\<forall>i<m. \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2 \\<le> b\n  i < m\n\ngoal (1 subgoal):\n 1. \\<forall>j<Suc i. \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2 \\<le> b", "by simp"], ["proof (state)\nthis:\n  \\<forall>j<Suc i. \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2 \\<le> b\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have 03: \"length [0..<Suc i] = (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length [0..<Suc i] = Suc i", "by simp"], ["proof (state)\nthis:\n  length [0..<Suc i] = Suc i\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have \"of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2 = (\\<Sum>j\\<leftarrow>[0..<i]. (\\<mu> fs i j)\\<^sup>2 * \\<parallel>gso fs j\\<parallel>\\<^sup>2) + \\<parallel>gso fs i\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2 =\n    (\\<Sum>j\\<leftarrow>[0..<\n                         i]. (fs.gs.\\<mu> i j)\\<^sup>2 *\n                             \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2) +\n    \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2", "unfolding 00"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j\\<leftarrow>[0..<\n                         Suc i]. (fs.gs.\\<mu> i j)\\<^sup>2 *\n                                 \\<parallel>fs.gs.gso\n       j\\<parallel>\\<^sup>2) =\n    (\\<Sum>j\\<leftarrow>[0..<\n                         i]. (fs.gs.\\<mu> i j)\\<^sup>2 *\n                             \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2) +\n    \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2", "using 011"], ["proof (prove)\nusing this:\n  (fs.gs.\\<mu> i i)\\<^sup>2 * \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2 =\n  1 * \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<Sum>j\\<leftarrow>[0..<\n                         Suc i]. (fs.gs.\\<mu> i j)\\<^sup>2 *\n                                 \\<parallel>fs.gs.gso\n       j\\<parallel>\\<^sup>2) =\n    (\\<Sum>j\\<leftarrow>[0..<\n                         i]. (fs.gs.\\<mu> i j)\\<^sup>2 *\n                             \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2) +\n    \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2 =\n  (\\<Sum>j\\<leftarrow>[0..<\n                       i]. (fs.gs.\\<mu> i j)\\<^sup>2 *\n                           \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2) +\n  \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "also"], ["proof (state)\nthis:\n  rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2 =\n  (\\<Sum>j\\<leftarrow>[0..<\n                       i]. (fs.gs.\\<mu> i j)\\<^sup>2 *\n                           \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2) +\n  \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have \"(\\<Sum>j\\<leftarrow>[0..<i]. (\\<mu> fs i j)\\<^sup>2 * \\<parallel>gso fs j\\<parallel>\\<^sup>2) \\<le> (\\<Sum>j\\<leftarrow>[0..<i]. ((1 / rat_of_int 4) * \\<parallel>gso fs j\\<parallel>\\<^sup>2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j\\<leftarrow>[0..<\n                         i]. (fs.gs.\\<mu> i j)\\<^sup>2 *\n                             \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2)\n    \\<le> (\\<Sum>j\\<leftarrow>[0..<\n                               i]. 1 / rat_of_int 4 *\n                                   \\<parallel>fs.gs.gso\n         j\\<parallel>\\<^sup>2)", "using Groups_List.sum_list_mono[OF 0111]"], ["proof (prove)\nusing this:\n  (\\<And>x.\n      x \\<in> set ?xs \\<Longrightarrow>\n      ?j3 x \\<in> set [0..<i]) \\<Longrightarrow>\n  (\\<Sum>x\\<leftarrow>?xs. (fs.gs.\\<mu> i (?j3 x))\\<^sup>2 *\n                           \\<parallel>fs.gs.gso (?j3 x)\\<parallel>\\<^sup>2)\n  \\<le> (\\<Sum>x\\<leftarrow>?xs. 1 / rat_of_int 4 *\n                                 \\<parallel>fs.gs.gso\n       (?j3 x)\\<parallel>\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j\\<leftarrow>[0..<\n                         i]. (fs.gs.\\<mu> i j)\\<^sup>2 *\n                             \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2)\n    \\<le> (\\<Sum>j\\<leftarrow>[0..<\n                               i]. 1 / rat_of_int 4 *\n                                   \\<parallel>fs.gs.gso\n         j\\<parallel>\\<^sup>2)", "by fast"], ["proof (state)\nthis:\n  (\\<Sum>j\\<leftarrow>[0..<\n                       i]. (fs.gs.\\<mu> i j)\\<^sup>2 *\n                           \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2)\n  \\<le> (\\<Sum>j\\<leftarrow>[0..<\n                             i]. 1 / rat_of_int 4 *\n                                 \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2)\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x + \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2\n      \\<le> y + \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2) \\<Longrightarrow>\n  rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n  \\<le> (\\<Sum>j\\<leftarrow>[0..<\n                             i]. 1 / rat_of_int 4 *\n                                 \\<parallel>fs.gs.gso\n       j\\<parallel>\\<^sup>2) +\n        \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2", "have \"of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2 \\<le> (\\<Sum>j\\<leftarrow>[0..<i]. ((1 / rat_of_int 4) * \\<parallel>gso fs j\\<parallel>\\<^sup>2)) + \\<parallel>gso fs i\\<parallel>\\<^sup>2\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x + \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2\n      \\<le> y + \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2) \\<Longrightarrow>\n  rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n  \\<le> (\\<Sum>j\\<leftarrow>[0..<\n                             i]. 1 / rat_of_int 4 *\n                                 \\<parallel>fs.gs.gso\n       j\\<parallel>\\<^sup>2) +\n        \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n    \\<le> (\\<Sum>j\\<leftarrow>[0..<\n                               i]. 1 / rat_of_int 4 *\n                                   \\<parallel>fs.gs.gso\n         j\\<parallel>\\<^sup>2) +\n          \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n  \\<le> (\\<Sum>j\\<leftarrow>[0..<\n                             i]. 1 / rat_of_int 4 *\n                                 \\<parallel>fs.gs.gso\n       j\\<parallel>\\<^sup>2) +\n        \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "also"], ["proof (state)\nthis:\n  rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n  \\<le> (\\<Sum>j\\<leftarrow>[0..<\n                             i]. 1 / rat_of_int 4 *\n                                 \\<parallel>fs.gs.gso\n       j\\<parallel>\\<^sup>2) +\n        \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have \"(\\<Sum>j\\<leftarrow>[0..<i]. ((1 / rat_of_int 4) * \\<parallel>gso fs j\\<parallel>\\<^sup>2)) \\<le> (\\<Sum>j\\<leftarrow>[0..<i]. (1 / rat_of_int 4) * b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j\\<leftarrow>[0..<\n                         i]. 1 / rat_of_int 4 *\n                             \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2)\n    \\<le> (\\<Sum>j\\<leftarrow>[0..<i]. 1 / rat_of_int 4 * b)", "by (intro sum_list_mono, insert 02, auto)"], ["proof (state)\nthis:\n  (\\<Sum>j\\<leftarrow>[0..<\n                       i]. 1 / rat_of_int 4 *\n                           \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2)\n  \\<le> (\\<Sum>j\\<leftarrow>[0..<i]. 1 / rat_of_int 4 * b)\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "also"], ["proof (state)\nthis:\n  (\\<Sum>j\\<leftarrow>[0..<\n                       i]. 1 / rat_of_int 4 *\n                           \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2)\n  \\<le> (\\<Sum>j\\<leftarrow>[0..<i]. 1 / rat_of_int 4 * b)\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have \" \\<parallel>gso fs i\\<parallel>\\<^sup>2 \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2 \\<le> b", "using 02"], ["proof (prove)\nusing this:\n  \\<forall>j<Suc i. \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2 \\<le> b\n\ngoal (1 subgoal):\n 1. \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2 \\<le> b", "by simp"], ["proof (state)\nthis:\n  \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2 \\<le> b\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x y.\n              x \\<le> y \\<Longrightarrow>\n              x + \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2\n              \\<le> y + \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2;\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      (\\<Sum>j\\<leftarrow>[0..<i]. 1 / rat_of_int 4 * b) + x\n      \\<le> (\\<Sum>j\\<leftarrow>[0..<i]. 1 / rat_of_int 4 * b) + y\\<rbrakk>\n  \\<Longrightarrow> rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n                    \\<le> (\\<Sum>j\\<leftarrow>[0..<\n         i]. 1 / rat_of_int 4 * b) +\n                          b", "have \"of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2 \\<le> (\\<Sum>j\\<leftarrow>[0..<i]. (1 / rat_of_int 4) * b) + b\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x y.\n              x \\<le> y \\<Longrightarrow>\n              x + \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2\n              \\<le> y + \\<parallel>fs.gs.gso i\\<parallel>\\<^sup>2;\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      (\\<Sum>j\\<leftarrow>[0..<i]. 1 / rat_of_int 4 * b) + x\n      \\<le> (\\<Sum>j\\<leftarrow>[0..<i]. 1 / rat_of_int 4 * b) + y\\<rbrakk>\n  \\<Longrightarrow> rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n                    \\<le> (\\<Sum>j\\<leftarrow>[0..<\n         i]. 1 / rat_of_int 4 * b) +\n                          b\n\ngoal (1 subgoal):\n 1. rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n    \\<le> (\\<Sum>j\\<leftarrow>[0..<i]. 1 / rat_of_int 4 * b) + b", "by simp"], ["proof (state)\nthis:\n  rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n  \\<le> (\\<Sum>j\\<leftarrow>[0..<i]. 1 / rat_of_int 4 * b) + b\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "also"], ["proof (state)\nthis:\n  rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n  \\<le> (\\<Sum>j\\<leftarrow>[0..<i]. 1 / rat_of_int 4 * b) + b\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have \"\\<dots> = (rat_of_nat i) * ((1 / rat_of_int 4) *  b) + b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j\\<leftarrow>[0..<i]. 1 / rat_of_int 4 * b) + b =\n    rat_of_nat i * (1 / rat_of_int 4 * b) + b", "using 03 sum_list_triv[of \"(1 / rat_of_int 4) * b\" \"[0..<i]\"]"], ["proof (prove)\nusing this:\n  length [0..<Suc i] = Suc i\n  (\\<Sum>x\\<leftarrow>[0..<i]. 1 / rat_of_int 4 * b) =\n  rat_of_nat (length [0..<i]) * (1 / rat_of_int 4 * b)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j\\<leftarrow>[0..<i]. 1 / rat_of_int 4 * b) + b =\n    rat_of_nat i * (1 / rat_of_int 4 * b) + b", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>j\\<leftarrow>[0..<i]. 1 / rat_of_int 4 * b) + b =\n  rat_of_nat i * (1 / rat_of_int 4 * b) + b\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "also"], ["proof (state)\nthis:\n  (\\<Sum>j\\<leftarrow>[0..<i]. 1 / rat_of_int 4 * b) + b =\n  rat_of_nat i * (1 / rat_of_int 4 * b) + b\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have \"\\<dots> = (rat_of_nat i) / 4 * b + b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_nat i * (1 / rat_of_int 4 * b) + b = rat_of_nat i / 4 * b + b", "by simp"], ["proof (state)\nthis:\n  rat_of_nat i * (1 / rat_of_int 4 * b) + b = rat_of_nat i / 4 * b + b\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "also"], ["proof (state)\nthis:\n  rat_of_nat i * (1 / rat_of_int 4 * b) + b = rat_of_nat i / 4 * b + b\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have \"\\<dots> = ((rat_of_nat i) / 4 + 1)* b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_nat i / 4 * b + b = (rat_of_nat i / 4 + 1) * b", "by algebra"], ["proof (state)\nthis:\n  rat_of_nat i / 4 * b + b = (rat_of_nat i / 4 + 1) * b\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "also"], ["proof (state)\nthis:\n  rat_of_nat i / 4 * b + b = (rat_of_nat i / 4 + 1) * b\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have \"\\<dots> = (rat_of_nat i + 4) / 4 * b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rat_of_nat i / 4 + 1) * b = (rat_of_nat i + 4) / 4 * b", "by simp"], ["proof (state)\nthis:\n  (rat_of_nat i / 4 + 1) * b = (rat_of_nat i + 4) / 4 * b\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "finally"], ["proof (chain)\npicking this:\n  rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n  \\<le> (rat_of_nat i + 4) / 4 * b", "have \"of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2 \\<le> (rat_of_nat i + 4) / 4 * b\""], ["proof (prove)\nusing this:\n  rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n  \\<le> (rat_of_nat i + 4) / 4 * b\n\ngoal (1 subgoal):\n 1. rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n    \\<le> (rat_of_nat i + 4) / 4 * b", "by simp"], ["proof (state)\nthis:\n  rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n  \\<le> (rat_of_nat i + 4) / 4 * b\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "also"], ["proof (state)\nthis:\n  rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n  \\<le> (rat_of_nat i + 4) / 4 * b\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have \"\\<dots> \\<le> (rat_of_nat (m + 3)) / 4 * b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rat_of_nat i + 4) / 4 * b \\<le> rat_of_nat (m + 3) / 4 * b", "using i b0 times_left_mono"], ["proof (prove)\nusing this:\n  i < m\n  0 \\<le> b\n  \\<lbrakk>(0::?'a) \\<le> ?z; ?y \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> ?y * ?z \\<le> ?x * ?z\n\ngoal (1 subgoal):\n 1. (rat_of_nat i + 4) / 4 * b \\<le> rat_of_nat (m + 3) / 4 * b", "by fastforce"], ["proof (state)\nthis:\n  (rat_of_nat i + 4) / 4 * b \\<le> rat_of_nat (m + 3) / 4 * b\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "finally"], ["proof (chain)\npicking this:\n  rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n  \\<le> rat_of_nat (m + 3) / 4 * b", "have \"of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2 \\<le> rat_of_nat (m+3) / 4 * b\""], ["proof (prove)\nusing this:\n  rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n  \\<le> rat_of_nat (m + 3) / 4 * b\n\ngoal (1 subgoal):\n 1. rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n    \\<le> rat_of_nat (m + 3) / 4 * b", "by simp"], ["proof (state)\nthis:\n  rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n  \\<le> rat_of_nat (m + 3) / 4 * b\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "moreover"], ["proof (state)\nthis:\n  rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n  \\<le> rat_of_nat (m + 3) / 4 * b\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have \"\\<bar>fs ! i $ j\\<bar>\\<^sup>2 \\<le> \\<parallel>fs ! i\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>fs ! i $ j\\<bar>\\<^sup>2\n    \\<le> \\<parallel>fs ! i\\<parallel>\\<^sup>2", "using vec_le_sq_norm LLL_invD_mod(10)[OF Linv] i j"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> carrier_vec ?n; ?i < ?n\\<rbrakk>\n  \\<Longrightarrow> \\<bar>?v $ ?i\\<bar>\\<^sup>2\n                    \\<le> \\<parallel>?v\\<parallel>\\<^sup>2\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  i < m\n  j < n\n\ngoal (1 subgoal):\n 1. \\<bar>fs ! i $ j\\<bar>\\<^sup>2\n    \\<le> \\<parallel>fs ! i\\<parallel>\\<^sup>2", "by blast"], ["proof (state)\nthis:\n  \\<bar>fs ! i $ j\\<bar>\\<^sup>2 \\<le> \\<parallel>fs ! i\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "ultimately"], ["proof (chain)\npicking this:\n  rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n  \\<le> rat_of_nat (m + 3) / 4 * b\n  \\<bar>fs ! i $ j\\<bar>\\<^sup>2 \\<le> \\<parallel>fs ! i\\<parallel>\\<^sup>2", "have 04: \"of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2) \\<le> rat_of_nat (m+3) / 4 * b\""], ["proof (prove)\nusing this:\n  rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n  \\<le> rat_of_nat (m + 3) / 4 * b\n  \\<bar>fs ! i $ j\\<bar>\\<^sup>2 \\<le> \\<parallel>fs ! i\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. rat_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n    \\<le> rat_of_nat (m + 3) / 4 * b", "using ge_trans i"], ["proof (prove)\nusing this:\n  rat_of_int \\<parallel>fs ! i\\<parallel>\\<^sup>2\n  \\<le> rat_of_nat (m + 3) / 4 * b\n  \\<bar>fs ! i $ j\\<bar>\\<^sup>2 \\<le> \\<parallel>fs ! i\\<parallel>\\<^sup>2\n  \\<lbrakk>?y \\<le> ?x; ?z \\<le> ?y\\<rbrakk> \\<Longrightarrow> ?z \\<le> ?x\n  i < m\n\ngoal (1 subgoal):\n 1. rat_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n    \\<le> rat_of_nat (m + 3) / 4 * b", "by linarith"], ["proof (state)\nthis:\n  rat_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n  \\<le> rat_of_nat (m + 3) / 4 * b\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "then"], ["proof (chain)\npicking this:\n  rat_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n  \\<le> rat_of_nat (m + 3) / 4 * b", "have 05: \"real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2) \\<le> real_of_rat (rat_of_nat (m+3) / 4 * b)\""], ["proof (prove)\nusing this:\n  rat_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n  \\<le> rat_of_nat (m + 3) / 4 * b\n\ngoal (1 subgoal):\n 1. real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n    \\<le> real_of_rat (rat_of_nat (m + 3) / 4 * b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rat_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n    \\<le> rat_of_nat (m + 3) / 4 * b \\<Longrightarrow>\n    real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n    \\<le> real_of_rat (rat_of_nat (m + 3) / 4 * b)", "from j"], ["proof (chain)\npicking this:\n  j < n", "have \"rat_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2) \\<le> rat_of_nat (m+3) / 4 * b\""], ["proof (prove)\nusing this:\n  j < n\n\ngoal (1 subgoal):\n 1. rat_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n    \\<le> rat_of_nat (m + 3) / 4 * b", "using 04"], ["proof (prove)\nusing this:\n  j < n\n  rat_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n  \\<le> rat_of_nat (m + 3) / 4 * b\n\ngoal (1 subgoal):\n 1. rat_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n    \\<le> rat_of_nat (m + 3) / 4 * b", "by simp"], ["proof (state)\nthis:\n  rat_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n  \\<le> rat_of_nat (m + 3) / 4 * b\n\ngoal (1 subgoal):\n 1. rat_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n    \\<le> rat_of_nat (m + 3) / 4 * b \\<Longrightarrow>\n    real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n    \\<le> real_of_rat (rat_of_nat (m + 3) / 4 * b)", "then"], ["proof (chain)\npicking this:\n  rat_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n  \\<le> rat_of_nat (m + 3) / 4 * b", "have \"real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2) \\<le> real_of_rat (rat_of_nat (m+3) / 4 * b)\""], ["proof (prove)\nusing this:\n  rat_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n  \\<le> rat_of_nat (m + 3) / 4 * b\n\ngoal (1 subgoal):\n 1. real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n    \\<le> real_of_rat (rat_of_nat (m + 3) / 4 * b)", "using j of_rat_less_eq"], ["proof (prove)\nusing this:\n  rat_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n  \\<le> rat_of_nat (m + 3) / 4 * b\n  j < n\n  (of_rat ?r \\<le> of_rat ?s) = (?r \\<le> ?s)\n\ngoal (1 subgoal):\n 1. real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n    \\<le> real_of_rat (rat_of_nat (m + 3) / 4 * b)", "by (metis of_rat_of_int_eq)"], ["proof (state)\nthis:\n  real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n  \\<le> real_of_rat (rat_of_nat (m + 3) / 4 * b)\n\ngoal (1 subgoal):\n 1. rat_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n    \\<le> rat_of_nat (m + 3) / 4 * b \\<Longrightarrow>\n    real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n    \\<le> real_of_rat (rat_of_nat (m + 3) / 4 * b)", "then"], ["proof (chain)\npicking this:\n  real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n  \\<le> real_of_rat (rat_of_nat (m + 3) / 4 * b)", "show ?thesis"], ["proof (prove)\nusing this:\n  real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n  \\<le> real_of_rat (rat_of_nat (m + 3) / 4 * b)\n\ngoal (1 subgoal):\n 1. real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n    \\<le> real_of_rat (rat_of_nat (m + 3) / 4 * b)", "by simp"], ["proof (state)\nthis:\n  real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n  \\<le> real_of_rat (rat_of_nat (m + 3) / 4 * b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n  \\<le> real_of_rat (rat_of_nat (m + 3) / 4 * b)\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "define rhs where \"rhs = real_of_rat (rat_of_nat (m+3) / 4 * b)\""], ["proof (state)\nthis:\n  rhs = real_of_rat (rat_of_nat (m + 3) / 4 * b)\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have rhs0: \"rhs \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> rhs", "using b0 i rhs_def"], ["proof (prove)\nusing this:\n  0 \\<le> b\n  i < m\n  rhs = real_of_rat (rat_of_nat (m + 3) / 4 * b)\n\ngoal (1 subgoal):\n 1. 0 \\<le> rhs", "by simp"], ["proof (state)\nthis:\n  0 \\<le> rhs\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have fsij: \"real_of_int \\<bar>fs ! i $ j\\<bar> \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> real_of_int \\<bar>fs ! i $ j\\<bar>", "by simp"], ["proof (state)\nthis:\n  0 \\<le> real_of_int \\<bar>fs ! i $ j\\<bar>\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have \"real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2) = (real_of_int \\<bar>fs ! i $ j\\<bar>)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2) =\n    (real_of_int \\<bar>fs ! i $ j\\<bar>)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2) =\n  (real_of_int \\<bar>fs ! i $ j\\<bar>)\\<^sup>2\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "then"], ["proof (chain)\npicking this:\n  real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2) =\n  (real_of_int \\<bar>fs ! i $ j\\<bar>)\\<^sup>2", "have \"(real_of_int \\<bar>fs ! i $ j\\<bar>)\\<^sup>2 \\<le> rhs\""], ["proof (prove)\nusing this:\n  real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2) =\n  (real_of_int \\<bar>fs ! i $ j\\<bar>)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (real_of_int \\<bar>fs ! i $ j\\<bar>)\\<^sup>2 \\<le> rhs", "using 05 j rhs_def"], ["proof (prove)\nusing this:\n  real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2) =\n  (real_of_int \\<bar>fs ! i $ j\\<bar>)\\<^sup>2\n  real_of_int (\\<bar>fs ! i $ j\\<bar>\\<^sup>2)\n  \\<le> real_of_rat (rat_of_nat (m + 3) / 4 * b)\n  j < n\n  rhs = real_of_rat (rat_of_nat (m + 3) / 4 * b)\n\ngoal (1 subgoal):\n 1. (real_of_int \\<bar>fs ! i $ j\\<bar>)\\<^sup>2 \\<le> rhs", "by simp"], ["proof (state)\nthis:\n  (real_of_int \\<bar>fs ! i $ j\\<bar>)\\<^sup>2 \\<le> rhs\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "then"], ["proof (chain)\npicking this:\n  (real_of_int \\<bar>fs ! i $ j\\<bar>)\\<^sup>2 \\<le> rhs", "have g1: \"real_of_int \\<bar>fs ! i $ j\\<bar> \\<le> sqrt rhs\""], ["proof (prove)\nusing this:\n  (real_of_int \\<bar>fs ! i $ j\\<bar>)\\<^sup>2 \\<le> rhs\n\ngoal (1 subgoal):\n 1. real_of_int \\<bar>fs ! i $ j\\<bar> \\<le> sqrt rhs", "using NthRoot.real_le_rsqrt"], ["proof (prove)\nusing this:\n  (real_of_int \\<bar>fs ! i $ j\\<bar>)\\<^sup>2 \\<le> rhs\n  ?x\\<^sup>2 \\<le> ?y \\<Longrightarrow> ?x \\<le> sqrt ?y\n\ngoal (1 subgoal):\n 1. real_of_int \\<bar>fs ! i $ j\\<bar> \\<le> sqrt rhs", "by simp"], ["proof (state)\nthis:\n  real_of_int \\<bar>fs ! i $ j\\<bar> \\<le> sqrt rhs\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have pbnd: \"2 * \\<bar>fs ! i $ j\\<bar> < p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! i $ j\\<bar> < p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! i $ j\\<bar> < p", "have \"rat_of_nat (m+3) / 4 * b \\<le> (rat_of_nat (m +3) / 4) * (rat_of_int (p - 1))\\<^sup>2 / (rat_of_nat m+3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_nat (m + 3) / 4 * b\n    \\<le> rat_of_nat (m + 3) / 4 * (rat_of_int (p - 1))\\<^sup>2 /\n          (rat_of_nat m + 3)", "using bp b0 i times_left_mono SN_Orders.of_nat_ge_zero gs.m_comm times_divide_eq_right"], ["proof (prove)\nusing this:\n  b \\<le> (rat_of_int (p - 1))\\<^sup>2 / (rat_of_nat m + 3)\n  0 \\<le> b\n  i < m\n  \\<lbrakk>(0::?'a) \\<le> ?z; ?y \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> ?y * ?z \\<le> ?x * ?z\n  (0::?'a) \\<le> of_nat ?n\n  ?x * ?y = ?y * ?x\n  ?a * (?b / ?c) = ?a * ?b / ?c\n\ngoal (1 subgoal):\n 1. rat_of_nat (m + 3) / 4 * b\n    \\<le> rat_of_nat (m + 3) / 4 * (rat_of_int (p - 1))\\<^sup>2 /\n          (rat_of_nat m + 3)", "by (smt gs.l_null le_divide_eq_numeral1(1))"], ["proof (state)\nthis:\n  rat_of_nat (m + 3) / 4 * b\n  \\<le> rat_of_nat (m + 3) / 4 * (rat_of_int (p - 1))\\<^sup>2 /\n        (rat_of_nat m + 3)\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! i $ j\\<bar> < p", "also"], ["proof (state)\nthis:\n  rat_of_nat (m + 3) / 4 * b\n  \\<le> rat_of_nat (m + 3) / 4 * (rat_of_int (p - 1))\\<^sup>2 /\n        (rat_of_nat m + 3)\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! i $ j\\<bar> < p", "have \"\\<dots> = (rat_of_int (p - 1))\\<^sup>2 / 4 * (rat_of_nat (m + 3) / rat_of_nat (m + 3))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_nat (m + 3) / 4 * (rat_of_int (p - 1))\\<^sup>2 /\n    (rat_of_nat m + 3) =\n    (rat_of_int (p - 1))\\<^sup>2 / 4 *\n    (rat_of_nat (m + 3) / rat_of_nat (m + 3))", "by (metis (no_types, lifting) gs.m_comm of_nat_add of_nat_numeral times_divide_eq_left)"], ["proof (state)\nthis:\n  rat_of_nat (m + 3) / 4 * (rat_of_int (p - 1))\\<^sup>2 /\n  (rat_of_nat m + 3) =\n  (rat_of_int (p - 1))\\<^sup>2 / 4 *\n  (rat_of_nat (m + 3) / rat_of_nat (m + 3))\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! i $ j\\<bar> < p", "finally"], ["proof (chain)\npicking this:\n  rat_of_nat (m + 3) / 4 * b\n  \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4 *\n        (rat_of_nat (m + 3) / rat_of_nat (m + 3))", "have \"rat_of_nat (m+3) / 4 * b \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4\""], ["proof (prove)\nusing this:\n  rat_of_nat (m + 3) / 4 * b\n  \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4 *\n        (rat_of_nat (m + 3) / rat_of_nat (m + 3))\n\ngoal (1 subgoal):\n 1. rat_of_nat (m + 3) / 4 * b \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4", "by simp"], ["proof (state)\nthis:\n  rat_of_nat (m + 3) / 4 * b \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! i $ j\\<bar> < p", "then"], ["proof (chain)\npicking this:\n  rat_of_nat (m + 3) / 4 * b \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4", "have \"sqrt rhs \\<le> sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4))\""], ["proof (prove)\nusing this:\n  rat_of_nat (m + 3) / 4 * b \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4\n\ngoal (1 subgoal):\n 1. sqrt rhs \\<le> sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4))", "unfolding rhs_def"], ["proof (prove)\nusing this:\n  rat_of_nat (m + 3) / 4 * b \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4\n\ngoal (1 subgoal):\n 1. sqrt (real_of_rat (rat_of_nat (m + 3) / 4 * b))\n    \\<le> sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4))", "using of_rat_less_eq"], ["proof (prove)\nusing this:\n  rat_of_nat (m + 3) / 4 * b \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4\n  (of_rat ?r \\<le> of_rat ?s) = (?r \\<le> ?s)\n\ngoal (1 subgoal):\n 1. sqrt (real_of_rat (rat_of_nat (m + 3) / 4 * b))\n    \\<le> sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4))", "by fastforce"], ["proof (state)\nthis:\n  sqrt rhs \\<le> sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4))\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! i $ j\\<bar> < p", "then"], ["proof (chain)\npicking this:\n  sqrt rhs \\<le> sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4))", "have two_ineq: \n        \"2 * \\<bar>fs ! i $ j\\<bar> \\<le> 2 * sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4))\""], ["proof (prove)\nusing this:\n  sqrt rhs \\<le> sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4))\n\ngoal (1 subgoal):\n 1. real_of_int (2 * \\<bar>fs ! i $ j\\<bar>)\n    \\<le> 2 * sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4))", "using g1"], ["proof (prove)\nusing this:\n  sqrt rhs \\<le> sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4))\n  real_of_int \\<bar>fs ! i $ j\\<bar> \\<le> sqrt rhs\n\ngoal (1 subgoal):\n 1. real_of_int (2 * \\<bar>fs ! i $ j\\<bar>)\n    \\<le> 2 * sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4))", "by linarith"], ["proof (state)\nthis:\n  real_of_int (2 * \\<bar>fs ! i $ j\\<bar>)\n  \\<le> 2 * sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4))\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! i $ j\\<bar> < p", "have \"2 * sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4)) =\n      sqrt (real_of_rat (4 * ((rat_of_int (p - 1))\\<^sup>2 / 4)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4)) =\n    sqrt (real_of_rat (4 * ((rat_of_int (p - 1))\\<^sup>2 / 4)))", "by (metis (no_types, hide_lams) real_sqrt_mult of_int_numeral of_rat_hom.hom_mult \n            of_rat_of_int_eq real_sqrt_four times_divide_eq_right)"], ["proof (state)\nthis:\n  2 * sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4)) =\n  sqrt (real_of_rat (4 * ((rat_of_int (p - 1))\\<^sup>2 / 4)))\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! i $ j\\<bar> < p", "also"], ["proof (state)\nthis:\n  2 * sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4)) =\n  sqrt (real_of_rat (4 * ((rat_of_int (p - 1))\\<^sup>2 / 4)))\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! i $ j\\<bar> < p", "have \"\\<dots> = sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (real_of_rat (4 * ((rat_of_int (p - 1))\\<^sup>2 / 4))) =\n    sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2))", "using i"], ["proof (prove)\nusing this:\n  i < m\n\ngoal (1 subgoal):\n 1. sqrt (real_of_rat (4 * ((rat_of_int (p - 1))\\<^sup>2 / 4))) =\n    sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2))", "by simp"], ["proof (state)\nthis:\n  sqrt (real_of_rat (4 * ((rat_of_int (p - 1))\\<^sup>2 / 4))) =\n  sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2))\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! i $ j\\<bar> < p", "also"], ["proof (state)\nthis:\n  sqrt (real_of_rat (4 * ((rat_of_int (p - 1))\\<^sup>2 / 4))) =\n  sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2))\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! i $ j\\<bar> < p", "have \"(real_of_rat ((rat_of_int (p - 1))\\<^sup>2)) = (real_of_rat (rat_of_int (p - 1)))\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_rat ((rat_of_int (p - 1))\\<^sup>2) =\n    (real_of_rat (rat_of_int (p - 1)))\\<^sup>2", "using Rat.of_rat_power"], ["proof (prove)\nusing this:\n  of_rat (?a ^ ?n) = of_rat ?a ^ ?n\n\ngoal (1 subgoal):\n 1. real_of_rat ((rat_of_int (p - 1))\\<^sup>2) =\n    (real_of_rat (rat_of_int (p - 1)))\\<^sup>2", "by blast"], ["proof (state)\nthis:\n  real_of_rat ((rat_of_int (p - 1))\\<^sup>2) =\n  (real_of_rat (rat_of_int (p - 1)))\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! i $ j\\<bar> < p", "also"], ["proof (state)\nthis:\n  real_of_rat ((rat_of_int (p - 1))\\<^sup>2) =\n  (real_of_rat (rat_of_int (p - 1)))\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! i $ j\\<bar> < p", "have \"sqrt ((real_of_rat (rat_of_int (p - 1)))\\<^sup>2) = real_of_rat (rat_of_int (p - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt ((real_of_rat (rat_of_int (p - 1)))\\<^sup>2) =\n    real_of_rat (rat_of_int (p - 1))", "using LLL_invD_mod(15)[OF Linv]"], ["proof (prove)\nusing this:\n  1 < p\n\ngoal (1 subgoal):\n 1. sqrt ((real_of_rat (rat_of_int (p - 1)))\\<^sup>2) =\n    real_of_rat (rat_of_int (p - 1))", "by simp"], ["proof (state)\nthis:\n  sqrt ((real_of_rat (rat_of_int (p - 1)))\\<^sup>2) =\n  real_of_rat (rat_of_int (p - 1))\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! i $ j\\<bar> < p", "finally"], ["proof (chain)\npicking this:\n  2 * sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4)) =\n  real_of_rat (rat_of_int (p - 1))", "have \"2 * sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4)) =\n      real_of_rat (rat_of_int (p - 1))\""], ["proof (prove)\nusing this:\n  2 * sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4)) =\n  real_of_rat (rat_of_int (p - 1))\n\ngoal (1 subgoal):\n 1. 2 * sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4)) =\n    real_of_rat (rat_of_int (p - 1))", "by simp"], ["proof (state)\nthis:\n  2 * sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4)) =\n  real_of_rat (rat_of_int (p - 1))\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! i $ j\\<bar> < p", "then"], ["proof (chain)\npicking this:\n  2 * sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4)) =\n  real_of_rat (rat_of_int (p - 1))", "have \"2 * \\<bar>fs ! i $ j\\<bar> \\<le> real_of_rat (rat_of_int (p - 1))\""], ["proof (prove)\nusing this:\n  2 * sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4)) =\n  real_of_rat (rat_of_int (p - 1))\n\ngoal (1 subgoal):\n 1. real_of_int (2 * \\<bar>fs ! i $ j\\<bar>)\n    \\<le> real_of_rat (rat_of_int (p - 1))", "using two_ineq"], ["proof (prove)\nusing this:\n  2 * sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4)) =\n  real_of_rat (rat_of_int (p - 1))\n  real_of_int (2 * \\<bar>fs ! i $ j\\<bar>)\n  \\<le> 2 * sqrt (real_of_rat ((rat_of_int (p - 1))\\<^sup>2 / 4))\n\ngoal (1 subgoal):\n 1. real_of_int (2 * \\<bar>fs ! i $ j\\<bar>)\n    \\<le> real_of_rat (rat_of_int (p - 1))", "by simp"], ["proof (state)\nthis:\n  real_of_int (2 * \\<bar>fs ! i $ j\\<bar>)\n  \\<le> real_of_rat (rat_of_int (p - 1))\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! i $ j\\<bar> < p", "then"], ["proof (chain)\npicking this:\n  real_of_int (2 * \\<bar>fs ! i $ j\\<bar>)\n  \\<le> real_of_rat (rat_of_int (p - 1))", "show ?thesis"], ["proof (prove)\nusing this:\n  real_of_int (2 * \\<bar>fs ! i $ j\\<bar>)\n  \\<le> real_of_rat (rat_of_int (p - 1))\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! i $ j\\<bar> < p", "by (metis of_int_le_iff of_rat_of_int_eq zle_diff1_eq)"], ["proof (state)\nthis:\n  2 * \\<bar>fs ! i $ j\\<bar> < p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 * \\<bar>fs ! i $ j\\<bar> < p\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have p1: \"p > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < p", "using LLL_invD_mod[OF Linv]"], ["proof (prove)\nusing this:\n  length mfs = m\n  k \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  fs.gs.weakly_reduced \\<alpha> k\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow> fs.gs.gso ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n\ngoal (1 subgoal):\n 1. 1 < p", "by blast"], ["proof (state)\nthis:\n  1 < p\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "interpret pm: poly_mod_2 p"], ["proof (prove)\ngoal (1 subgoal):\n 1. poly_mod_2 p", "by (unfold_locales, rule p1)"], ["proof (state)\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "from LLL_invD_mod[OF Linv]"], ["proof (chain)\npicking this:\n  length mfs = m\n  k \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  fs.gs.weakly_reduced \\<alpha> k\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow> fs.gs.gso ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first", "have len: \"length fs = m\" and fs: \"set fs \\<subseteq> carrier_vec n\""], ["proof (prove)\nusing this:\n  length mfs = m\n  k \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  fs.gs.weakly_reduced \\<alpha> k\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow> fs.gs.gso ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n\ngoal (1 subgoal):\n 1. length fs = m &&& set fs \\<subseteq> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  length fs = m\n  set fs \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "from pm.inv_M_rev[OF pbnd, unfolded pm.M_def]"], ["proof (chain)\npicking this:\n  pm.inv_M (fs ! i $ j mod p) = fs ! i $ j", "have \"pm.inv_M (fs ! i $ j mod p) = fs ! i $ j\""], ["proof (prove)\nusing this:\n  pm.inv_M (fs ! i $ j mod p) = fs ! i $ j\n\ngoal (1 subgoal):\n 1. pm.inv_M (fs ! i $ j mod p) = fs ! i $ j", "."], ["proof (state)\nthis:\n  pm.inv_M (fs ! i $ j mod p) = fs ! i $ j\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "also"], ["proof (state)\nthis:\n  pm.inv_M (fs ! i $ j mod p) = fs ! i $ j\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "have \"pm.inv_M (fs ! i $ j mod p) = mfs ! i $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pm.inv_M (fs ! i $ j mod p) = mfs ! i $ j", "unfolding LLL_invD_mod(7)[OF Linv, symmetric] sym_mod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. pm.inv_M (fs ! i $ j mod p) =\n    map (map_vec (\\<lambda>x. pm.inv_M (x mod p))) fs ! i $ j", "using i j len fs"], ["proof (prove)\nusing this:\n  i < m\n  j < n\n  length fs = m\n  set fs \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. pm.inv_M (fs ! i $ j mod p) =\n    map (map_vec (\\<lambda>x. pm.inv_M (x mod p))) fs ! i $ j", "by auto"], ["proof (state)\nthis:\n  pm.inv_M (fs ! i $ j mod p) = mfs ! i $ j\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "finally"], ["proof (chain)\npicking this:\n  mfs ! i $ j = fs ! i $ j", "have \"fs ! i $ j = mfs ! i $ j\""], ["proof (prove)\nusing this:\n  mfs ! i $ j = fs ! i $ j\n\ngoal (1 subgoal):\n 1. fs ! i $ j = mfs ! i $ j", ".."], ["proof (state)\nthis:\n  fs ! i $ j = mfs ! i $ j\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "}"], ["proof (state)\nthis:\n  ?j4 < n \\<Longrightarrow> fs ! i $ ?j4 = mfs ! i $ ?j4\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "thus \"fs ! i = mfs ! i\""], ["proof (prove)\nusing this:\n  ?j4 < n \\<Longrightarrow> fs ! i $ ?j4 = mfs ! i $ ?j4\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "using LLL_invD_mod(10,13)[OF Linv i]"], ["proof (prove)\nusing this:\n  ?j4 < n \\<Longrightarrow> fs ! i $ ?j4 = mfs ! i $ ?j4\n  fs ! i \\<in> carrier_vec n\n  mfs ! i \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. fs ! i = mfs ! i", "by auto"], ["proof (state)\nthis:\n  fs ! i = mfs ! i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma basis_reduction_mod_fs_bound_first:\n  assumes Linv: \"LLL_invariant_mod fs mfs dmu p first b k\"\n  and m0: \"m > 0\"\n  and first: \"first\" \nshows \"fs ! 0 = mfs ! 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "from LLL_invD_mod(16-17)[OF Linv] first g_bnd_mode_def m0"], ["proof (chain)\npicking this:\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  first\n  g_bnd_mode ?first ?b ?fs =\n  (if ?first \\<and> m \\<noteq> 0\n   then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom ?fs)\n                    0\\<parallel>\\<^sup>2\n        \\<le> ?b\n   else g_bnd ?b ?fs)\n  0 < m", "have gbnd: \"sq_norm (gso fs 0) \\<le> b\" and bp: \"b \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4\""], ["proof (prove)\nusing this:\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  first\n  g_bnd_mode ?first ?b ?fs =\n  (if ?first \\<and> m \\<noteq> 0\n   then \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom ?fs)\n                    0\\<parallel>\\<^sup>2\n        \\<le> ?b\n   else g_bnd ?b ?fs)\n  0 < m\n\ngoal (1 subgoal):\n 1. \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n                0\\<parallel>\\<^sup>2\n    \\<le> b &&&\n    b \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4", "by (auto simp: mod_invariant_def bound_number_def)"], ["proof (state)\nthis:\n  \\<parallel>gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs)\n              0\\<parallel>\\<^sup>2\n  \\<le> b\n  b \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "from LLL_invD_mod[OF Linv]"], ["proof (chain)\npicking this:\n  length mfs = m\n  k \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> k\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first", "have p1: \"p > 1\""], ["proof (prove)\nusing this:\n  length mfs = m\n  k \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> k\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n\ngoal (1 subgoal):\n 1. 1 < p", "by blast"], ["proof (state)\nthis:\n  1 < p\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "have Linvw: \"LLL_invariant_weak' k fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' k fs", "using LLL_invD_mod[OF Linv] LLL_invI_weak"], ["proof (prove)\nusing this:\n  length mfs = m\n  k \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> k\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  \\<lbrakk>set ?fs \\<subseteq> carrier_vec n; length ?fs = m;\n   lattice_of ?fs = L; ?i \\<le> m;\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs);\n   gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha>\n    ?i\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak' ?i ?fs\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' k fs", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_weak' k fs\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "have \"fs_int_indpt n fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fs_int_indpt n fs", "using LLL_invD_mod(5)[OF Linv] Gram_Schmidt_2.fs_int_indpt.intro"], ["proof (prove)\nusing this:\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  cof_vec_space.lin_indpt_list ?n\n   (map of_int_hom.vec_hom ?fs) \\<Longrightarrow>\n  fs_int_indpt ?n ?fs\n\ngoal (1 subgoal):\n 1. fs_int_indpt n fs", "by simp"], ["proof (state)\nthis:\n  fs_int_indpt n fs\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "then"], ["proof (chain)\npicking this:\n  fs_int_indpt n fs", "interpret fs: fs_int_indpt n fs"], ["proof (prove)\nusing this:\n  fs_int_indpt n fs\n\ngoal (1 subgoal):\n 1. fs_int_indpt n fs", "using fs_int_indpt.sq_norm_fs_via_sum_mu_gso"], ["proof (prove)\nusing this:\n  fs_int_indpt n fs\n  \\<lbrakk>fs_int_indpt ?n ?fs; ?i < length ?fs\\<rbrakk>\n  \\<Longrightarrow> rat_of_int \\<parallel>?fs ! ?i\\<parallel>\\<^sup>2 =\n                    (\\<Sum>j\\<leftarrow>[0..<\n   Suc ?i]. (gram_schmidt_fs.\\<mu> ?n (map of_int_hom.vec_hom ?fs) ?i\n              j)\\<^sup>2 *\n            \\<parallel>gram_schmidt_fs.gso ?n (map of_int_hom.vec_hom ?fs)\n                        j\\<parallel>\\<^sup>2)\n\ngoal (1 subgoal):\n 1. fs_int_indpt n fs", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "from gbnd"], ["proof (chain)\npicking this:\n  \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2 \\<le> b", "have b0: \"0 \\<le> b\""], ["proof (prove)\nusing this:\n  \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2 \\<le> b\n\ngoal (1 subgoal):\n 1. 0 \\<le> b", "using sq_norm_vec_ge_0 dual_order.trans"], ["proof (prove)\nusing this:\n  \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2 \\<le> b\n  (0::?'a) \\<le> \\<parallel>?v\\<parallel>\\<^sup>2\n  \\<lbrakk>?b \\<le> ?a; ?c \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?c \\<le> ?a\n\ngoal (1 subgoal):\n 1. 0 \\<le> b", "by auto"], ["proof (state)\nthis:\n  0 \\<le> b\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "have \"of_int \\<parallel>fs ! 0\\<parallel>\\<^sup>2 = (\\<mu> fs 0 0)\\<^sup>2 * \\<parallel>gso fs 0\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int \\<parallel>fs ! 0\\<parallel>\\<^sup>2 =\n    (fs.gs.\\<mu> 0 0)\\<^sup>2 * \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2", "using fs.sq_norm_fs_via_sum_mu_gso LLL_invD_mod[OF Linv] Gram_Schmidt_2.fs_int_indpt.intro m0"], ["proof (prove)\nusing this:\n  ?i < length fs \\<Longrightarrow>\n  rat_of_int \\<parallel>fs ! ?i\\<parallel>\\<^sup>2 =\n  (\\<Sum>j\\<leftarrow>[0..<\n                       Suc ?i]. (fs.gs.\\<mu> ?i j)\\<^sup>2 *\n                                \\<parallel>fs.gs.gso j\\<parallel>\\<^sup>2)\n  length mfs = m\n  k \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  fs.gs.weakly_reduced \\<alpha> k\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow> fs.gs.gso ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  cof_vec_space.lin_indpt_list ?n\n   (map of_int_hom.vec_hom ?fs) \\<Longrightarrow>\n  fs_int_indpt ?n ?fs\n  0 < m\n\ngoal (1 subgoal):\n 1. rat_of_int \\<parallel>fs ! 0\\<parallel>\\<^sup>2 =\n    (fs.gs.\\<mu> 0 0)\\<^sup>2 * \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  rat_of_int \\<parallel>fs ! 0\\<parallel>\\<^sup>2 =\n  (fs.gs.\\<mu> 0 0)\\<^sup>2 * \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "also"], ["proof (state)\nthis:\n  rat_of_int \\<parallel>fs ! 0\\<parallel>\\<^sup>2 =\n  (fs.gs.\\<mu> 0 0)\\<^sup>2 * \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "have \"\\<dots> = \\<parallel>gso fs 0\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fs.gs.\\<mu> 0 0)\\<^sup>2 * \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2 =\n    \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2", "unfolding fs.gs.\\<mu>.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if 0 < 0\n     then map of_int_hom.vec_hom fs ! 0 \\<bullet> fs.gs.gso 0 /\n          \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2\n     else if 0 = 0 then 1 else 0)\\<^sup>2 *\n    \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2 =\n    \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2", "by (simp add: gs.\\<mu>.simps)"], ["proof (state)\nthis:\n  (fs.gs.\\<mu> 0 0)\\<^sup>2 * \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2 =\n  \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "also"], ["proof (state)\nthis:\n  (fs.gs.\\<mu> 0 0)\\<^sup>2 * \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2 =\n  \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "have \"\\<dots> \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2\n    \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4", "using gbnd bp"], ["proof (prove)\nusing this:\n  \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2 \\<le> b\n  b \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4\n\ngoal (1 subgoal):\n 1. \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2\n    \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4", "by auto"], ["proof (state)\nthis:\n  \\<parallel>fs.gs.gso 0\\<parallel>\\<^sup>2\n  \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "finally"], ["proof (chain)\npicking this:\n  rat_of_int \\<parallel>fs ! 0\\<parallel>\\<^sup>2\n  \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4", "have one: \"of_int (sq_norm (fs ! 0)) \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4\""], ["proof (prove)\nusing this:\n  rat_of_int \\<parallel>fs ! 0\\<parallel>\\<^sup>2\n  \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4\n\ngoal (1 subgoal):\n 1. rat_of_int \\<parallel>fs ! 0\\<parallel>\\<^sup>2\n    \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4", "."], ["proof (state)\nthis:\n  rat_of_int \\<parallel>fs ! 0\\<parallel>\\<^sup>2\n  \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "{"], ["proof (state)\nthis:\n  rat_of_int \\<parallel>fs ! 0\\<parallel>\\<^sup>2\n  \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "assume j: \"j < n\""], ["proof (state)\nthis:\n  j < n\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "have leq: \"\\<bar>fs ! 0 $ j\\<bar>\\<^sup>2 \\<le> \\<parallel>fs ! 0\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>fs ! 0 $ j\\<bar>\\<^sup>2\n    \\<le> \\<parallel>fs ! 0\\<parallel>\\<^sup>2", "using vec_le_sq_norm LLL_invD_mod(10)[OF Linv] m0 j"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> carrier_vec ?n; ?i < ?n\\<rbrakk>\n  \\<Longrightarrow> \\<bar>?v $ ?i\\<bar>\\<^sup>2\n                    \\<le> \\<parallel>?v\\<parallel>\\<^sup>2\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  0 < m\n  j < n\n\ngoal (1 subgoal):\n 1. \\<bar>fs ! 0 $ j\\<bar>\\<^sup>2\n    \\<le> \\<parallel>fs ! 0\\<parallel>\\<^sup>2", "by blast"], ["proof (state)\nthis:\n  \\<bar>fs ! 0 $ j\\<bar>\\<^sup>2 \\<le> \\<parallel>fs ! 0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "have \"rat_of_int ((2 * \\<bar>fs ! 0 $ j\\<bar>)^2) = rat_of_int (4 * \\<bar>fs ! 0 $ j\\<bar>\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int ((2 * \\<bar>fs ! 0 $ j\\<bar>)\\<^sup>2) =\n    rat_of_int (4 * \\<bar>fs ! 0 $ j\\<bar>\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  rat_of_int ((2 * \\<bar>fs ! 0 $ j\\<bar>)\\<^sup>2) =\n  rat_of_int (4 * \\<bar>fs ! 0 $ j\\<bar>\\<^sup>2)\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "also"], ["proof (state)\nthis:\n  rat_of_int ((2 * \\<bar>fs ! 0 $ j\\<bar>)\\<^sup>2) =\n  rat_of_int (4 * \\<bar>fs ! 0 $ j\\<bar>\\<^sup>2)\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "have \"\\<dots> \\<le> 4 * of_int \\<parallel>fs ! 0\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int (4 * \\<bar>fs ! 0 $ j\\<bar>\\<^sup>2)\n    \\<le> 4 * rat_of_int \\<parallel>fs ! 0\\<parallel>\\<^sup>2", "using leq"], ["proof (prove)\nusing this:\n  \\<bar>fs ! 0 $ j\\<bar>\\<^sup>2 \\<le> \\<parallel>fs ! 0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. rat_of_int (4 * \\<bar>fs ! 0 $ j\\<bar>\\<^sup>2)\n    \\<le> 4 * rat_of_int \\<parallel>fs ! 0\\<parallel>\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  rat_of_int (4 * \\<bar>fs ! 0 $ j\\<bar>\\<^sup>2)\n  \\<le> 4 * rat_of_int \\<parallel>fs ! 0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "also"], ["proof (state)\nthis:\n  rat_of_int (4 * \\<bar>fs ! 0 $ j\\<bar>\\<^sup>2)\n  \\<le> 4 * rat_of_int \\<parallel>fs ! 0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "have \"\\<dots> \\<le> 4 * (rat_of_int (p - 1))\\<^sup>2 / 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 * rat_of_int \\<parallel>fs ! 0\\<parallel>\\<^sup>2\n    \\<le> 4 * (rat_of_int (p - 1))\\<^sup>2 / 4", "using one"], ["proof (prove)\nusing this:\n  rat_of_int \\<parallel>fs ! 0\\<parallel>\\<^sup>2\n  \\<le> (rat_of_int (p - 1))\\<^sup>2 / 4\n\ngoal (1 subgoal):\n 1. 4 * rat_of_int \\<parallel>fs ! 0\\<parallel>\\<^sup>2\n    \\<le> 4 * (rat_of_int (p - 1))\\<^sup>2 / 4", "by simp"], ["proof (state)\nthis:\n  4 * rat_of_int \\<parallel>fs ! 0\\<parallel>\\<^sup>2\n  \\<le> 4 * (rat_of_int (p - 1))\\<^sup>2 / 4\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "also"], ["proof (state)\nthis:\n  4 * rat_of_int \\<parallel>fs ! 0\\<parallel>\\<^sup>2\n  \\<le> 4 * (rat_of_int (p - 1))\\<^sup>2 / 4\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "have \"\\<dots> = (rat_of_int (p - 1))\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 * (rat_of_int (p - 1))\\<^sup>2 / 4 = (rat_of_int (p - 1))\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  4 * (rat_of_int (p - 1))\\<^sup>2 / 4 = (rat_of_int (p - 1))\\<^sup>2\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "also"], ["proof (state)\nthis:\n  4 * (rat_of_int (p - 1))\\<^sup>2 / 4 = (rat_of_int (p - 1))\\<^sup>2\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "have \"\\<dots> = rat_of_int ((p - 1)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rat_of_int (p - 1))\\<^sup>2 = rat_of_int ((p - 1)\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  (rat_of_int (p - 1))\\<^sup>2 = rat_of_int ((p - 1)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "finally"], ["proof (chain)\npicking this:\n  rat_of_int ((2 * \\<bar>fs ! 0 $ j\\<bar>)\\<^sup>2)\n  \\<le> rat_of_int ((p - 1)\\<^sup>2)", "have \"(2 * \\<bar>fs ! 0 $ j\\<bar>)^2 \\<le> (p - 1)\\<^sup>2\""], ["proof (prove)\nusing this:\n  rat_of_int ((2 * \\<bar>fs ! 0 $ j\\<bar>)\\<^sup>2)\n  \\<le> rat_of_int ((p - 1)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (2 * \\<bar>fs ! 0 $ j\\<bar>)\\<^sup>2 \\<le> (p - 1)\\<^sup>2", "by linarith"], ["proof (state)\nthis:\n  (2 * \\<bar>fs ! 0 $ j\\<bar>)\\<^sup>2 \\<le> (p - 1)\\<^sup>2\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "hence \"2 * \\<bar>fs ! 0 $ j\\<bar> \\<le> p - 1\""], ["proof (prove)\nusing this:\n  (2 * \\<bar>fs ! 0 $ j\\<bar>)\\<^sup>2 \\<le> (p - 1)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! 0 $ j\\<bar> \\<le> p - 1", "using p1"], ["proof (prove)\nusing this:\n  (2 * \\<bar>fs ! 0 $ j\\<bar>)\\<^sup>2 \\<le> (p - 1)\\<^sup>2\n  1 < p\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! 0 $ j\\<bar> \\<le> p - 1", "by (smt power_mono_iff zero_less_numeral)"], ["proof (state)\nthis:\n  2 * \\<bar>fs ! 0 $ j\\<bar> \\<le> p - 1\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "hence pbnd: \"2 * \\<bar>fs ! 0 $ j\\<bar> < p\""], ["proof (prove)\nusing this:\n  2 * \\<bar>fs ! 0 $ j\\<bar> \\<le> p - 1\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>fs ! 0 $ j\\<bar> < p", "by simp"], ["proof (state)\nthis:\n  2 * \\<bar>fs ! 0 $ j\\<bar> < p\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "interpret pm: poly_mod_2 p"], ["proof (prove)\ngoal (1 subgoal):\n 1. poly_mod_2 p", "by (unfold_locales, rule p1)"], ["proof (state)\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "from LLL_invD_mod[OF Linv] m0"], ["proof (chain)\npicking this:\n  length mfs = m\n  k \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  fs.gs.weakly_reduced \\<alpha> k\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow> fs.gs.gso ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  0 < m", "have len: \"length fs = m\" \"length mfs = m\" \n      and fs: \"fs ! 0 \\<in> carrier_vec n\" \"mfs ! 0 \\<in> carrier_vec n\""], ["proof (prove)\nusing this:\n  length mfs = m\n  k \\<le> m\n  length fs = m\n  lattice_of fs = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  fs.gs.weakly_reduced \\<alpha> k\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu $$ (i', j')\n  ?i < m \\<Longrightarrow> fs ! ?i \\<in> carrier_vec n\n  set fs \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow> fs.gs.gso ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs ! ?i \\<in> carrier_vec n\n  set mfs \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode first b fs\n  mod_invariant b p first\n  0 < m\n\ngoal (1 subgoal):\n 1. (length fs = m &&& length mfs = m) &&&\n    fs ! 0 \\<in> carrier_vec n &&& mfs ! 0 \\<in> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  length fs = m\n  length mfs = m\n  fs ! 0 \\<in> carrier_vec n\n  mfs ! 0 \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "from pm.inv_M_rev[OF pbnd, unfolded pm.M_def]"], ["proof (chain)\npicking this:\n  pm.inv_M (fs ! 0 $ j mod p) = fs ! 0 $ j", "have \"pm.inv_M (fs ! 0 $ j mod p) = fs ! 0 $ j\""], ["proof (prove)\nusing this:\n  pm.inv_M (fs ! 0 $ j mod p) = fs ! 0 $ j\n\ngoal (1 subgoal):\n 1. pm.inv_M (fs ! 0 $ j mod p) = fs ! 0 $ j", "."], ["proof (state)\nthis:\n  pm.inv_M (fs ! 0 $ j mod p) = fs ! 0 $ j\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "also"], ["proof (state)\nthis:\n  pm.inv_M (fs ! 0 $ j mod p) = fs ! 0 $ j\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "have \"pm.inv_M (fs ! 0 $ j mod p) = mfs ! 0 $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pm.inv_M (fs ! 0 $ j mod p) = mfs ! 0 $ j", "unfolding LLL_invD_mod(7)[OF Linv, symmetric] sym_mod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. pm.inv_M (fs ! 0 $ j mod p) =\n    map (map_vec (\\<lambda>x. pm.inv_M (x mod p))) fs ! 0 $ j", "using m0 j len fs"], ["proof (prove)\nusing this:\n  0 < m\n  j < n\n  length fs = m\n  length mfs = m\n  fs ! 0 \\<in> carrier_vec n\n  mfs ! 0 \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. pm.inv_M (fs ! 0 $ j mod p) =\n    map (map_vec (\\<lambda>x. pm.inv_M (x mod p))) fs ! 0 $ j", "by auto"], ["proof (state)\nthis:\n  pm.inv_M (fs ! 0 $ j mod p) = mfs ! 0 $ j\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "finally"], ["proof (chain)\npicking this:\n  mfs ! 0 $ j = fs ! 0 $ j", "have \"mfs ! 0 $ j = fs ! 0 $ j\""], ["proof (prove)\nusing this:\n  mfs ! 0 $ j = fs ! 0 $ j\n\ngoal (1 subgoal):\n 1. mfs ! 0 $ j = fs ! 0 $ j", "."], ["proof (state)\nthis:\n  mfs ! 0 $ j = fs ! 0 $ j\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "}"], ["proof (state)\nthis:\n  ?j4 < n \\<Longrightarrow> mfs ! 0 $ ?j4 = fs ! 0 $ ?j4\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "thus \"fs ! 0 = mfs ! 0\""], ["proof (prove)\nusing this:\n  ?j4 < n \\<Longrightarrow> mfs ! 0 $ ?j4 = fs ! 0 $ ?j4\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "using LLL_invD_mod(10,13)[OF Linv m0]"], ["proof (prove)\nusing this:\n  ?j4 < n \\<Longrightarrow> mfs ! 0 $ ?j4 = fs ! 0 $ ?j4\n  fs ! 0 \\<in> carrier_vec n\n  mfs ! 0 \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. fs ! 0 = mfs ! 0", "by auto"], ["proof (state)\nthis:\n  fs ! 0 = mfs ! 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dmu_initial: \"dmu_initial = mat m m (\\<lambda> (i,j). d\\<mu> fs_init i j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dmu_initial = mat m m (\\<lambda>(i, j). d\\<mu> fs_init i j)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dmu_initial = mat m m (\\<lambda>(i, j). d\\<mu> fs_init i j)", "interpret fs: fs_int_indpt n fs_init"], ["proof (prove)\ngoal (1 subgoal):\n 1. fs_int_indpt n fs_init", "by (unfold_locales, intro lin_dep)"], ["proof (state)\ngoal (1 subgoal):\n 1. dmu_initial = mat m m (\\<lambda>(i, j). d\\<mu> fs_init i j)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dmu_initial = mat m m (\\<lambda>(i, j). d\\<mu> fs_init i j)", "unfolding dmu_initial_def Let_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. mat m m\n     (\\<lambda>(i, j).\n         if j \\<le> i then d\\<mu>_impl fs_init !! i !! j else 0) =\n    mat m m (\\<lambda>(i, j). d\\<mu> fs_init i j)", "proof (intro cong_mat refl refl, unfold split, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < m; j < m\\<rbrakk>\n       \\<Longrightarrow> (if j \\<le> i then d\\<mu>_impl fs_init !! i !! j\n                          else 0) =\n                         d\\<mu> fs_init i j", "case (1 i j)"], ["proof (state)\nthis:\n  i < m\n  j < m\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < m; j < m\\<rbrakk>\n       \\<Longrightarrow> (if j \\<le> i then d\\<mu>_impl fs_init !! i !! j\n                          else 0) =\n                         d\\<mu> fs_init i j", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if j \\<le> i then d\\<mu>_impl fs_init !! i !! j else 0) =\n    d\\<mu> fs_init i j", "proof (cases \"j \\<le> i\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j \\<le> i \\<Longrightarrow>\n    (if j \\<le> i then d\\<mu>_impl fs_init !! i !! j else 0) =\n    d\\<mu> fs_init i j\n 2. \\<not> j \\<le> i \\<Longrightarrow>\n    (if j \\<le> i then d\\<mu>_impl fs_init !! i !! j else 0) =\n    d\\<mu> fs_init i j", "case False"], ["proof (state)\nthis:\n  \\<not> j \\<le> i\n\ngoal (2 subgoals):\n 1. j \\<le> i \\<Longrightarrow>\n    (if j \\<le> i then d\\<mu>_impl fs_init !! i !! j else 0) =\n    d\\<mu> fs_init i j\n 2. \\<not> j \\<le> i \\<Longrightarrow>\n    (if j \\<le> i then d\\<mu>_impl fs_init !! i !! j else 0) =\n    d\\<mu> fs_init i j", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> j \\<le> i\n\ngoal (1 subgoal):\n 1. (if j \\<le> i then d\\<mu>_impl fs_init !! i !! j else 0) =\n    d\\<mu> fs_init i j", "by (auto simp: d\\<mu>_def gs.\\<mu>.simps)"], ["proof (state)\nthis:\n  (if j \\<le> i then d\\<mu>_impl fs_init !! i !! j else 0) =\n  d\\<mu> fs_init i j\n\ngoal (1 subgoal):\n 1. j \\<le> i \\<Longrightarrow>\n    (if j \\<le> i then d\\<mu>_impl fs_init !! i !! j else 0) =\n    d\\<mu> fs_init i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<le> i \\<Longrightarrow>\n    (if j \\<le> i then d\\<mu>_impl fs_init !! i !! j else 0) =\n    d\\<mu> fs_init i j", "case True"], ["proof (state)\nthis:\n  j \\<le> i\n\ngoal (1 subgoal):\n 1. j \\<le> i \\<Longrightarrow>\n    (if j \\<le> i then d\\<mu>_impl fs_init !! i !! j else 0) =\n    d\\<mu> fs_init i j", "hence id: \"d\\<mu>_impl fs_init !! i !! j = fs.d\\<mu> i j\""], ["proof (prove)\nusing this:\n  j \\<le> i\n\ngoal (1 subgoal):\n 1. d\\<mu>_impl fs_init !! i !! j = fs.d\\<mu> i j", "unfolding fs.d\\<mu>_impl"], ["proof (prove)\nusing this:\n  j \\<le> i\n\ngoal (1 subgoal):\n 1. IArray.of_fun (\\<lambda>i. IArray.of_fun (fs.d\\<mu> i) (Suc i))\n     (length fs_init) !!\n    i !!\n    j =\n    fs.d\\<mu> i j", "by (subst of_fun_nth, use 1 len in force, subst of_fun_nth, insert True, auto)"], ["proof (state)\nthis:\n  d\\<mu>_impl fs_init !! i !! j = fs.d\\<mu> i j\n\ngoal (1 subgoal):\n 1. j \\<le> i \\<Longrightarrow>\n    (if j \\<le> i then d\\<mu>_impl fs_init !! i !! j else 0) =\n    d\\<mu> fs_init i j", "also"], ["proof (state)\nthis:\n  d\\<mu>_impl fs_init !! i !! j = fs.d\\<mu> i j\n\ngoal (1 subgoal):\n 1. j \\<le> i \\<Longrightarrow>\n    (if j \\<le> i then d\\<mu>_impl fs_init !! i !! j else 0) =\n    d\\<mu> fs_init i j", "have \"\\<dots> = d\\<mu> fs_init i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fs.d\\<mu> i j = d\\<mu> fs_init i j", "unfolding fs.d\\<mu>_def d\\<mu>_def fs.d_def d_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. int_of_rat\n     (rat_of_int (gs.Gramian_determinant fs_init (Suc j)) * gs.\\<mu> i j) =\n    int_of_rat\n     (rat_of_int (gs.Gramian_determinant fs_init (Suc j)) * gs.\\<mu> i j)", "by simp"], ["proof (state)\nthis:\n  fs.d\\<mu> i j = d\\<mu> fs_init i j\n\ngoal (1 subgoal):\n 1. j \\<le> i \\<Longrightarrow>\n    (if j \\<le> i then d\\<mu>_impl fs_init !! i !! j else 0) =\n    d\\<mu> fs_init i j", "finally"], ["proof (chain)\npicking this:\n  d\\<mu>_impl fs_init !! i !! j = d\\<mu> fs_init i j", "show ?thesis"], ["proof (prove)\nusing this:\n  d\\<mu>_impl fs_init !! i !! j = d\\<mu> fs_init i j\n\ngoal (1 subgoal):\n 1. (if j \\<le> i then d\\<mu>_impl fs_init !! i !! j else 0) =\n    d\\<mu> fs_init i j", "using True"], ["proof (prove)\nusing this:\n  d\\<mu>_impl fs_init !! i !! j = d\\<mu> fs_init i j\n  j \\<le> i\n\ngoal (1 subgoal):\n 1. (if j \\<le> i then d\\<mu>_impl fs_init !! i !! j else 0) =\n    d\\<mu> fs_init i j", "by auto"], ["proof (state)\nthis:\n  (if j \\<le> i then d\\<mu>_impl fs_init !! i !! j else 0) =\n  d\\<mu> fs_init i j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (if j \\<le> i then d\\<mu>_impl fs_init !! i !! j else 0) =\n  d\\<mu> fs_init i j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dmu_initial = mat m m (\\<lambda>(i, j). d\\<mu> fs_init i j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma LLL_initial_invariant_mod: assumes res: \"compute_initial_state first = (p, mfs, dmu', g_idx)\" \nshows \"\\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "from dmu_initial"], ["proof (chain)\npicking this:\n  dmu_initial = mat m m (\\<lambda>(i, j). d\\<mu> fs_init i j)", "have dmu: \"(\\<forall>i' < m. \\<forall>j' < m. d\\<mu> fs_init i' j' = dmu_initial $$ (i',j'))\""], ["proof (prove)\nusing this:\n  dmu_initial = mat m m (\\<lambda>(i, j). d\\<mu> fs_init i j)\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<m. d\\<mu> fs_init i' j' = dmu_initial $$ (i', j')", "by auto"], ["proof (state)\nthis:\n  \\<forall>i'<m.\n     \\<forall>j'<m. d\\<mu> fs_init i' j' = dmu_initial $$ (i', j')\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "obtain b g_idx where norm: \"compute_max_gso_norm first dmu_initial = (b,g_idx)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b g_idx.\n        compute_max_gso_norm first dmu_initial =\n        (b, g_idx) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  compute_max_gso_norm first dmu_initial = (b, g_idx)\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "note res = res[unfolded compute_initial_state_def Let_def norm split]"], ["proof (state)\nthis:\n  (compute_mod_of_max_gso_norm first b,\n   compute_initial_mfs (compute_mod_of_max_gso_norm first b),\n   compute_initial_dmu (compute_mod_of_max_gso_norm first b) dmu_initial,\n   g_idx) =\n  (p, mfs, dmu', g_idx)\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "from res"], ["proof (chain)\npicking this:\n  (compute_mod_of_max_gso_norm first b,\n   compute_initial_mfs (compute_mod_of_max_gso_norm first b),\n   compute_initial_dmu (compute_mod_of_max_gso_norm first b) dmu_initial,\n   g_idx) =\n  (p, mfs, dmu', g_idx)", "have p: \"p = compute_mod_of_max_gso_norm first b\""], ["proof (prove)\nusing this:\n  (compute_mod_of_max_gso_norm first b,\n   compute_initial_mfs (compute_mod_of_max_gso_norm first b),\n   compute_initial_dmu (compute_mod_of_max_gso_norm first b) dmu_initial,\n   g_idx) =\n  (p, mfs, dmu', g_idx)\n\ngoal (1 subgoal):\n 1. p = compute_mod_of_max_gso_norm first b", "by auto"], ["proof (state)\nthis:\n  p = compute_mod_of_max_gso_norm first b\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "then"], ["proof (chain)\npicking this:\n  p = compute_mod_of_max_gso_norm first b", "have p0: \"p > 0\""], ["proof (prove)\nusing this:\n  p = compute_mod_of_max_gso_norm first b\n\ngoal (1 subgoal):\n 1. 0 < p", "unfolding compute_mod_of_max_gso_norm_def"], ["proof (prove)\nusing this:\n  p =\n  log_base ^\n  log_ceiling log_base\n   (max 2\n     (root_rat_ceiling 2 (b * (rat_of_nat (bound_number first) + 3)) + 1))\n\ngoal (1 subgoal):\n 1. 0 < p", "using log_base"], ["proof (prove)\nusing this:\n  p =\n  log_base ^\n  log_ceiling log_base\n   (max 2\n     (root_rat_ceiling 2 (b * (rat_of_nat (bound_number first) + 3)) + 1))\n  2 \\<le> log_base\n\ngoal (1 subgoal):\n 1. 0 < p", "by simp"], ["proof (state)\nthis:\n  0 < p\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "then"], ["proof (chain)\npicking this:\n  0 < p", "have p1: \"p \\<ge> 1\""], ["proof (prove)\nusing this:\n  0 < p\n\ngoal (1 subgoal):\n 1. 1 \\<le> p", "by simp"], ["proof (state)\nthis:\n  1 \\<le> p\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "note res = res[folded p]"], ["proof (state)\nthis:\n  (p, compute_initial_mfs p, compute_initial_dmu p dmu_initial, g_idx) =\n  (p, mfs, dmu', g_idx)\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "from res[unfolded compute_initial_mfs_def]"], ["proof (chain)\npicking this:\n  (p, map (map_vec (\\<lambda>x. x symmod p)) fs_init,\n   compute_initial_dmu p dmu_initial, g_idx) =\n  (p, mfs, dmu', g_idx)", "have mfs: \"mfs = map (map_vec (\\<lambda>x. x symmod p)) fs_init\""], ["proof (prove)\nusing this:\n  (p, map (map_vec (\\<lambda>x. x symmod p)) fs_init,\n   compute_initial_dmu p dmu_initial, g_idx) =\n  (p, mfs, dmu', g_idx)\n\ngoal (1 subgoal):\n 1. mfs = map (map_vec (\\<lambda>x. x symmod p)) fs_init", "by auto"], ["proof (state)\nthis:\n  mfs = map (map_vec (\\<lambda>x. x symmod p)) fs_init\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "from res[unfolded compute_initial_dmu_def]"], ["proof (chain)\npicking this:\n  (p, compute_initial_mfs p,\n   mat m m\n    (\\<lambda>(i', j').\n        if j' < i'\n        then dmu_initial $$ (i', j') symmod\n             (p * d_of dmu_initial j' * d_of dmu_initial (Suc j'))\n        else dmu_initial $$ (i', j')),\n   g_idx) =\n  (p, mfs, dmu', g_idx)", "have dmu': \"dmu' = mat m m (\\<lambda>(i',j'). if j' < i' \n              then dmu_initial $$ (i', j') symmod (p * d_of dmu_initial j' * d_of dmu_initial (Suc j')) \n              else dmu_initial $$ (i',j'))\""], ["proof (prove)\nusing this:\n  (p, compute_initial_mfs p,\n   mat m m\n    (\\<lambda>(i', j').\n        if j' < i'\n        then dmu_initial $$ (i', j') symmod\n             (p * d_of dmu_initial j' * d_of dmu_initial (Suc j'))\n        else dmu_initial $$ (i', j')),\n   g_idx) =\n  (p, mfs, dmu', g_idx)\n\ngoal (1 subgoal):\n 1. dmu' =\n    mat m m\n     (\\<lambda>(i', j').\n         if j' < i'\n         then dmu_initial $$ (i', j') symmod\n              (p * d_of dmu_initial j' * d_of dmu_initial (Suc j'))\n         else dmu_initial $$ (i', j'))", "by auto"], ["proof (state)\nthis:\n  dmu' =\n  mat m m\n   (\\<lambda>(i', j').\n       if j' < i'\n       then dmu_initial $$ (i', j') symmod\n            (p * d_of dmu_initial j' * d_of dmu_initial (Suc j'))\n       else dmu_initial $$ (i', j'))\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "have lat: \"lattice_of fs_init = L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lattice_of fs_init = L", "by (auto simp: L_def)"], ["proof (state)\nthis:\n  lattice_of fs_init = L\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "define I where \"I = {(i',j'). i' < m \\<and> j' < i'}\""], ["proof (state)\nthis:\n  I = {(i', j'). i' < m \\<and> j' < i'}\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "obtain fs where \n    01: \"lattice_of fs = L\" and\n    02: \"map (map_vec (\\<lambda> x. x symmod p)) fs = map (map_vec (\\<lambda> x. x symmod p)) fs_init\" and\n    03: \"lin_indep fs\" and\n    04: \"length fs = m\" and\n    05: \"(\\<forall> k < m. gso fs k = gso fs_init k)\" and\n    06: \"(\\<forall> k \\<le> m. d fs k = d fs_init k)\" and\n    07: \"(\\<forall> i' < m. \\<forall> j' < m. d\\<mu> fs i' j' = \n      (if (i',j') \\<in> I then d\\<mu> fs_init i' j' symmod (p * d fs_init j' * d fs_init (Suc j')) else d\\<mu> fs_init i' j'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>fs.\n        \\<lbrakk>lattice_of fs = L;\n         map (map_vec (\\<lambda>x. x symmod p)) fs =\n         map (map_vec (\\<lambda>x. x symmod p)) fs_init;\n         gs.lin_indpt_list (map of_int_hom.vec_hom fs); length fs = m;\n         \\<forall>k<m.\n            gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k = gs.gso k;\n         \\<forall>k\\<le>m. d fs k = d fs_init k;\n         \\<forall>i'<m.\n            \\<forall>j'<m.\n               d\\<mu> fs i' j' =\n               (if (i', j') \\<in> I\n                then d\\<mu> fs_init i' j' symmod\n                     (p * d fs_init j' * d fs_init (Suc j'))\n                else d\\<mu> fs_init i' j')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using mod_finite_set[OF lin_dep len _ lat p0, of I] I_def"], ["proof (prove)\nusing this:\n  I \\<subseteq> {(i, j). i < m \\<and> j < i} \\<Longrightarrow>\n  \\<exists>fs'.\n     lattice_of fs' = L \\<and>\n     map (map_vec (\\<lambda>x. x mod p)) fs' =\n     map (map_vec (\\<lambda>x. x mod p)) fs_init \\<and>\n     map (map_vec (\\<lambda>x. x symmod p)) fs' =\n     map (map_vec (\\<lambda>x. x symmod p)) fs_init \\<and>\n     gs.lin_indpt_list (map of_int_hom.vec_hom fs') \\<and>\n     length fs' = m \\<and>\n     (\\<forall>k<m.\n         gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs') k =\n         gs.gso k) \\<and>\n     (\\<forall>k\\<le>m. d fs' k = d fs_init k) \\<and>\n     (\\<forall>i'<m.\n         \\<forall>j'<m.\n            d\\<mu> fs' i' j' =\n            (if (i', j') \\<in> I\n             then d\\<mu> fs_init i' j' symmod\n                  (p * d fs_init j' * d fs_init (Suc j'))\n             else d\\<mu> fs_init i' j'))\n  I = {(i', j'). i' < m \\<and> j' < i'}\n\ngoal (1 subgoal):\n 1. (\\<And>fs.\n        \\<lbrakk>lattice_of fs = L;\n         map (map_vec (\\<lambda>x. x symmod p)) fs =\n         map (map_vec (\\<lambda>x. x symmod p)) fs_init;\n         gs.lin_indpt_list (map of_int_hom.vec_hom fs); length fs = m;\n         \\<forall>k<m.\n            gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k = gs.gso k;\n         \\<forall>k\\<le>m. d fs k = d fs_init k;\n         \\<forall>i'<m.\n            \\<forall>j'<m.\n               d\\<mu> fs i' j' =\n               (if (i', j') \\<in> I\n                then d\\<mu> fs_init i' j' symmod\n                     (p * d fs_init j' * d fs_init (Suc j'))\n                else d\\<mu> fs_init i' j')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  lattice_of fs = L\n  map (map_vec (\\<lambda>x. x symmod p)) fs =\n  map (map_vec (\\<lambda>x. x symmod p)) fs_init\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n  length fs = m\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k = gs.gso k\n  \\<forall>k\\<le>m. d fs k = d fs_init k\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs_init i' j' symmod\n              (p * d fs_init j' * d fs_init (Suc j'))\n         else d\\<mu> fs_init i' j')\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "have inv: \"LLL_invariant_weak fs_init\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak fs_init", "by (intro LLL_inv_wI lat len lin_dep fs_init)"], ["proof (state)\nthis:\n  LLL_invariant_weak fs_init\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "have \"\\<forall>i'<m. d\\<mu> fs_init i' i' = dmu_initial $$ (i', i')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i'<m. d\\<mu> fs_init i' i' = dmu_initial $$ (i', i')", "unfolding dmu_initial"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       d\\<mu> fs_init i' i' =\n       mat m m (\\<lambda>(x, y). d\\<mu> fs_init x y) $$ (i', i')", "by auto"], ["proof (state)\nthis:\n  \\<forall>i'<m. d\\<mu> fs_init i' i' = dmu_initial $$ (i', i')\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "from compute_max_gso_norm[OF this inv, of first, unfolded norm]"], ["proof (chain)\npicking this:\n  g_bnd_mode first (fst (b, g_idx)) fs_init\n  0 \\<le> fst (b, g_idx)\n  m = 0 \\<Longrightarrow> fst (b, g_idx) = 0", "have gbnd: \"g_bnd_mode first b fs_init\" \n    and b0: \"0 \\<le> b\" and mb0: \"m = 0 \\<Longrightarrow> b = 0\""], ["proof (prove)\nusing this:\n  g_bnd_mode first (fst (b, g_idx)) fs_init\n  0 \\<le> fst (b, g_idx)\n  m = 0 \\<Longrightarrow> fst (b, g_idx) = 0\n\ngoal (1 subgoal):\n 1. g_bnd_mode first b fs_init &&&\n    0 \\<le> b &&& (m = 0 \\<Longrightarrow> b = 0)", "by auto"], ["proof (state)\nthis:\n  g_bnd_mode first b fs_init\n  0 \\<le> b\n  m = 0 \\<Longrightarrow> b = 0\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "from gbnd 05"], ["proof (chain)\npicking this:\n  g_bnd_mode first b fs_init\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k = gs.gso k", "have gbnd: \"g_bnd_mode first b fs\""], ["proof (prove)\nusing this:\n  g_bnd_mode first b fs_init\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k = gs.gso k\n\ngoal (1 subgoal):\n 1. g_bnd_mode first b fs", "using g_bnd_mode_cong[of fs fs_init]"], ["proof (prove)\nusing this:\n  g_bnd_mode first b fs_init\n  \\<forall>k<m.\n     gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) k = gs.gso k\n  (\\<And>i.\n      i < m \\<Longrightarrow>\n      gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs) i =\n      gs.gso i) \\<Longrightarrow>\n  g_bnd_mode ?first ?b fs = g_bnd_mode ?first ?b fs_init\n\ngoal (1 subgoal):\n 1. g_bnd_mode first b fs", "by auto"], ["proof (state)\nthis:\n  g_bnd_mode first b fs\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "have d\\<mu>dmu': \"\\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu' $$ (i', j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu' $$ (i', j')", "using 07 dmu d_of_main[of fs_init dmu_initial]"], ["proof (prove)\nusing this:\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs_init i' j' symmod\n              (p * d fs_init j' * d fs_init (Suc j'))\n         else d\\<mu> fs_init i' j')\n  \\<forall>i'<m.\n     \\<forall>j'<m. d\\<mu> fs_init i' j' = dmu_initial $$ (i', j')\n  \\<lbrakk>\\<forall>i'<m. d\\<mu> fs_init i' i' = dmu_initial $$ (i', i');\n   ?i \\<le> m\\<rbrakk>\n  \\<Longrightarrow> d_of dmu_initial ?i = d fs_init ?i\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu' $$ (i', j')", "unfolding I_def dmu'"], ["proof (prove)\nusing this:\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs i' j' =\n        (if (i', j') \\<in> {(i', j'). i' < m \\<and> j' < i'}\n         then d\\<mu> fs_init i' j' symmod\n              (p * d fs_init j' * d fs_init (Suc j'))\n         else d\\<mu> fs_init i' j')\n  \\<forall>i'<m.\n     \\<forall>j'<m. d\\<mu> fs_init i' j' = dmu_initial $$ (i', j')\n  \\<lbrakk>\\<forall>i'<m. d\\<mu> fs_init i' i' = dmu_initial $$ (i', i');\n   ?i \\<le> m\\<rbrakk>\n  \\<Longrightarrow> d_of dmu_initial ?i = d fs_init ?i\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<m.\n          d\\<mu> fs i' j' =\n          mat m m\n           (\\<lambda>(i', j').\n               if j' < i'\n               then dmu_initial $$ (i', j') symmod\n                    (p * d_of dmu_initial j' * d_of dmu_initial (Suc j'))\n               else dmu_initial $$ (i', j')) $$\n          (i', j')", "by simp"], ["proof (state)\nthis:\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs i' j' = dmu' $$ (i', j')\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "have wred: \"weakly_reduced fs 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> 0", "by (simp add: gram_schmidt_fs.weakly_reduced_def)"], ["proof (state)\nthis:\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha> 0\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "have fs_carr: \"set fs \\<subseteq> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set fs \\<subseteq> carrier_vec n", "using 03"], ["proof (prove)\nusing this:\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs)\n\ngoal (1 subgoal):\n 1. set fs \\<subseteq> carrier_vec n", "unfolding gs.lin_indpt_list_def"], ["proof (prove)\nusing this:\n  set (map of_int_hom.vec_hom fs) \\<subseteq> Rn \\<and>\n  distinct (map of_int_hom.vec_hom fs) \\<and>\n  gs.lin_indpt (set (map of_int_hom.vec_hom fs))\n\ngoal (1 subgoal):\n 1. set fs \\<subseteq> carrier_vec n", "by force"], ["proof (state)\nthis:\n  set fs \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "have m0: \"m \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> m", "using len"], ["proof (prove)\nusing this:\n  length fs_init = m\n\ngoal (1 subgoal):\n 1. 0 \\<le> m", "by auto"], ["proof (state)\nthis:\n  0 \\<le> m\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "have Linv: \"LLL_invariant_weak' 0 fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' 0 fs", "by (intro LLL_invI_weak 03 04 01 wred fs_carr m0)"], ["proof (state)\nthis:\n  LLL_invariant_weak' 0 fs\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "note Linvw = LLL_invw'_imp_w[OF Linv]"], ["proof (state)\nthis:\n  LLL_invariant_weak fs\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "from compute_mod_of_max_gso_norm[OF b0 mb0 p]"], ["proof (chain)\npicking this:\n  (m = 0 \\<Longrightarrow> m = 0) \\<Longrightarrow> 1 < p\n  (m = 0 \\<Longrightarrow> m = 0) \\<Longrightarrow> mod_invariant b p first", "have p: \"mod_invariant b p first\" \"p > 1\""], ["proof (prove)\nusing this:\n  (m = 0 \\<Longrightarrow> m = 0) \\<Longrightarrow> 1 < p\n  (m = 0 \\<Longrightarrow> m = 0) \\<Longrightarrow> mod_invariant b p first\n\ngoal (1 subgoal):\n 1. mod_invariant b p first &&& 1 < p", "by auto"], ["proof (state)\nthis:\n  mod_invariant b p first\n  1 < p\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "from len mfs"], ["proof (chain)\npicking this:\n  length fs_init = m\n  mfs = map (map_vec (\\<lambda>x. x symmod p)) fs_init", "have len': \"length mfs = m\""], ["proof (prove)\nusing this:\n  length fs_init = m\n  mfs = map (map_vec (\\<lambda>x. x symmod p)) fs_init\n\ngoal (1 subgoal):\n 1. length mfs = m", "by auto"], ["proof (state)\nthis:\n  length mfs = m\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "have modbnd: \"\\<forall>i'<m. \\<forall>j'<i'. \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')", "have \"\\<forall> i' < m. \\<forall> j' < i'. d\\<mu> fs i' j' = d\\<mu> fs i' j' symmod (p * d fs j' * d fs (Suc j'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          d\\<mu> fs i' j' =\n          d\\<mu> fs i' j' symmod (p * d fs j' * d fs (Suc j'))", "using I_def 07 06"], ["proof (prove)\nusing this:\n  I = {(i', j'). i' < m \\<and> j' < i'}\n  \\<forall>i'<m.\n     \\<forall>j'<m.\n        d\\<mu> fs i' j' =\n        (if (i', j') \\<in> I\n         then d\\<mu> fs_init i' j' symmod\n              (p * d fs_init j' * d fs_init (Suc j'))\n         else d\\<mu> fs_init i' j')\n  \\<forall>k\\<le>m. d fs k = d fs_init k\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          d\\<mu> fs i' j' =\n          d\\<mu> fs i' j' symmod (p * d fs j' * d fs (Suc j'))", "by simp"], ["proof (state)\nthis:\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        d\\<mu> fs i' j' =\n        d\\<mu> fs i' j' symmod (p * d fs j' * d fs (Suc j'))\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')", "moreover"], ["proof (state)\nthis:\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        d\\<mu> fs i' j' =\n        d\\<mu> fs i' j' symmod (p * d fs j' * d fs (Suc j'))\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')", "have \"\\<forall>j' < m. p * d fs j' * d fs (Suc j') > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j'<m. 0 < p * d fs j' * d fs (Suc j')", "using p(2) LLL_d_pos[OF Linvw]"], ["proof (prove)\nusing this:\n  1 < p\n  ?k \\<le> m \\<Longrightarrow> 0 < d fs ?k\n\ngoal (1 subgoal):\n 1. \\<forall>j'<m. 0 < p * d fs j' * d fs (Suc j')", "by simp"], ["proof (state)\nthis:\n  \\<forall>j'<m. 0 < p * d fs j' * d fs (Suc j')\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        d\\<mu> fs i' j' =\n        d\\<mu> fs i' j' symmod (p * d fs j' * d fs (Suc j'))\n  \\<forall>j'<m. 0 < p * d fs j' * d fs (Suc j')", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        d\\<mu> fs i' j' =\n        d\\<mu> fs i' j' symmod (p * d fs j' * d fs (Suc j'))\n  \\<forall>j'<m. 0 < p * d fs j' * d fs (Suc j')\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')", "using sym_mod_abs"], ["proof (prove)\nusing this:\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        d\\<mu> fs i' j' =\n        d\\<mu> fs i' j' symmod (p * d fs j' * d fs (Suc j'))\n  \\<forall>j'<m. 0 < p * d fs j' * d fs (Suc j')\n  0 < ?y \\<Longrightarrow> \\<bar>?x symmod ?y\\<bar> < ?y\n  1 \\<le> ?y \\<Longrightarrow> \\<bar>?x symmod ?y\\<bar> \\<le> ?y div 2\n\ngoal (1 subgoal):\n 1. \\<forall>i'<m.\n       \\<forall>j'<i'.\n          \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')", "by (smt Euclidean_Division.pos_mod_bound Euclidean_Division.pos_mod_sign less_trans)"], ["proof (state)\nthis:\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs i' j'\\<bar> < p * d fs j' * d fs (Suc j')\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "have \"LLL_invariant_mod fs mfs dmu' p first b 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu' p first b 0", "using LLL_invI_mod[OF len' m0 04 01 03 wred _ modbnd d\\<mu>dmu' p(2) gbnd p(1)] 02 mfs"], ["proof (prove)\nusing this:\n  map (map_vec (\\<lambda>x. x symmod p)) fs = mfs \\<Longrightarrow>\n  LLL_invariant_mod fs mfs dmu' p first b 0\n  map (map_vec (\\<lambda>x. x symmod p)) fs =\n  map (map_vec (\\<lambda>x. x symmod p)) fs_init\n  mfs = map (map_vec (\\<lambda>x. x symmod p)) fs_init\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs mfs dmu' p first b 0", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_mod fs mfs dmu' p first b 0\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "then"], ["proof (chain)\npicking this:\n  LLL_invariant_mod fs mfs dmu' p first b 0", "show ?thesis"], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs mfs dmu' p first b 0\n\ngoal (1 subgoal):\n 1. \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>fs b. LLL_invariant_mod fs mfs dmu' p first b 0\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Soundness of Storjohann's algorithm\\<close>"], ["", "text \\<open>For all of these abstract algorithms, we actually formulate their soundness proofs by linking\n  to the LLL-invariant (which implies that @{term fs} is reduced (@{term \"LLL_invariant True m fs\"})\n  or that the first vector of @{term fs} is short (@{term \"LLL_invariant_weak fs \\<and> weakly_reduced fs m\"}).\\<close>"], ["", "text \\<open>Soundness of Storjohann's algorithm\\<close>"], ["", "lemma reduce_basis_mod_inv: assumes res: \"reduce_basis_mod = fs\"    \n  shows \"LLL_invariant True m fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant True m fs", "proof (cases \"m = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> LLL_invariant True m fs\n 2. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "case True"], ["proof (state)\nthis:\n  m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> LLL_invariant True m fs\n 2. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "from True"], ["proof (chain)\npicking this:\n  m = 0", "have *: \"fs_init = []\""], ["proof (prove)\nusing this:\n  m = 0\n\ngoal (1 subgoal):\n 1. fs_init = []", "using len"], ["proof (prove)\nusing this:\n  m = 0\n  length fs_init = m\n\ngoal (1 subgoal):\n 1. fs_init = []", "by simp"], ["proof (state)\nthis:\n  fs_init = []\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> LLL_invariant True m fs\n 2. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "moreover"], ["proof (state)\nthis:\n  fs_init = []\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> LLL_invariant True m fs\n 2. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "have \"fs = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fs = []", "using res basis_reduction_mod_add_rows_outer_loop.simps(1)"], ["proof (prove)\nusing this:\n  reduce_basis_mod = fs\n  basis_reduction_mod_add_rows_outer_loop ?p ?mfs ?dmu 0 = (?mfs, ?dmu)\n\ngoal (1 subgoal):\n 1. fs = []", "unfolding reduce_basis_mod_def Let_def basis_reduction_mod_main.simps[of _ _ _ _ _ 0] \n      compute_initial_mfs_def compute_initial_state_def compute_initial_dmu_def"], ["proof (prove)\nusing this:\n  (case case compute_max_gso_norm False dmu_initial of\n        (b, g_idx) \\<Rightarrow>\n          (compute_mod_of_max_gso_norm False b,\n           map (map_vec\n                 (\\<lambda>x. x symmod compute_mod_of_max_gso_norm False b))\n            fs_init,\n           mat m m\n            (\\<lambda>(i', j').\n                if j' < i'\n                then dmu_initial $$ (i', j') symmod\n                     (compute_mod_of_max_gso_norm False b *\n                      d_of dmu_initial j' *\n                      d_of dmu_initial (Suc j'))\n                else dmu_initial $$ (i', j')),\n           g_idx) of\n   (p0, mfs0, dmu0, g_idx) \\<Rightarrow>\n     case if 0 < m\n          then case basis_reduction_mod_step p0 False mfs0 dmu0 g_idx 0 0 of\n               (p', mfs', dmu', g_idx', x, xb) \\<Rightarrow>\n                 basis_reduction_mod_main p' False mfs' dmu' g_idx' x xb\n          else (p0, mfs0, dmu0) of\n     (p', mfs', dmu') \\<Rightarrow>\n       case basis_reduction_mod_add_rows_outer_loop p' mfs' dmu' (m - 1) of\n       (mfs'', dmu'') \\<Rightarrow> mfs'') =\n  fs\n  basis_reduction_mod_add_rows_outer_loop ?p ?mfs ?dmu 0 = (?mfs, ?dmu)\n\ngoal (1 subgoal):\n 1. fs = []", "unfolding True *"], ["proof (prove)\nusing this:\n  (case case LLL.compute_max_gso_norm 0 False (LLL.dmu_initial 0 []) of\n        (b, g_idx) \\<Rightarrow>\n          (LLL.compute_mod_of_max_gso_norm 0 False b,\n           map (map_vec\n                 (\\<lambda>x.\n                     x symmod LLL.compute_mod_of_max_gso_norm 0 False b))\n            [],\n           mat 0 0\n            (\\<lambda>(i', j').\n                if j' < i'\n                then LLL.dmu_initial 0 [] $$ (i', j') symmod\n                     (LLL.compute_mod_of_max_gso_norm 0 False b *\n                      d_of (LLL.dmu_initial 0 []) j' *\n                      d_of (LLL.dmu_initial 0 []) (Suc j'))\n                else LLL.dmu_initial 0 [] $$ (i', j')),\n           g_idx) of\n   (p0, mfs0, dmu0, g_idx) \\<Rightarrow>\n     case if 0 < 0\n          then case LLL.basis_reduction_mod_step 0 \\<alpha> p0 False mfs0\n                     dmu0 g_idx 0 0 of\n               (p', mfs', dmu', g_idx', x, xb) \\<Rightarrow>\n                 LLL.basis_reduction_mod_main 0 \\<alpha> p' False mfs' dmu'\n                  g_idx' x xb\n          else (p0, mfs0, dmu0) of\n     (p', mfs', dmu') \\<Rightarrow>\n       case LLL.basis_reduction_mod_add_rows_outer_loop 0 p' mfs' dmu'\n             (0 - 1) of\n       (mfs'', dmu'') \\<Rightarrow> mfs'') =\n  fs\n  LLL.basis_reduction_mod_add_rows_outer_loop 0 ?p ?mfs ?dmu 0 =\n  (?mfs, ?dmu)\n\ngoal (1 subgoal):\n 1. fs = []", "by (auto split: prod.splits)"], ["proof (state)\nthis:\n  fs = []\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> LLL_invariant True m fs\n 2. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "ultimately"], ["proof (chain)\npicking this:\n  fs_init = []\n  fs = []", "show ?thesis"], ["proof (prove)\nusing this:\n  fs_init = []\n  fs = []\n\ngoal (1 subgoal):\n 1. LLL_invariant True m fs", "using True LLL_inv_initial_state"], ["proof (prove)\nusing this:\n  fs_init = []\n  fs = []\n  m = 0\n  LLL_invariant True 0 fs_init\n\ngoal (1 subgoal):\n 1. LLL_invariant True m fs", "by blast"], ["proof (state)\nthis:\n  LLL_invariant True m fs\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "case False"], ["proof (state)\nthis:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "let ?first = False"], ["proof (state)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "obtain p mfs0 dmu0 g_idx0 where init: \"compute_initial_state ?first = (p, mfs0, dmu0, g_idx0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p mfs0 dmu0 g_idx0.\n        compute_initial_state False =\n        (p, mfs0, dmu0, g_idx0) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis prod_cases4)"], ["proof (state)\nthis:\n  compute_initial_state False = (p, mfs0, dmu0, g_idx0)\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "from LLL_initial_invariant_mod[OF init]"], ["proof (chain)\npicking this:\n  \\<exists>fs b. LLL_invariant_mod fs mfs0 dmu0 p False b 0", "obtain fs0 b where fs0: \"LLL_invariant_mod fs0 mfs0 dmu0 p ?first b 0\""], ["proof (prove)\nusing this:\n  \\<exists>fs b. LLL_invariant_mod fs mfs0 dmu0 p False b 0\n\ngoal (1 subgoal):\n 1. (\\<And>fs0 b.\n        LLL_invariant_mod fs0 mfs0 dmu0 p False b 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  LLL_invariant_mod fs0 mfs0 dmu0 p False b 0\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "note res = res[unfolded reduce_basis_mod_def init Let_def split]"], ["proof (state)\nthis:\n  (case basis_reduction_mod_main p False mfs0 dmu0 g_idx0 0 0 of\n   (p', mfs', dmu') \\<Rightarrow>\n     case basis_reduction_mod_add_rows_outer_loop p' mfs' dmu' (m - 1) of\n     (mfs'', dmu'') \\<Rightarrow> mfs'') =\n  fs\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "obtain p1 mfs1 dmu1 where mfs1dmu1: \"(p1, mfs1, dmu1) = basis_reduction_mod_main p ?first mfs0 dmu0 g_idx0 0 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p1 mfs1 dmu1.\n        (p1, mfs1, dmu1) =\n        basis_reduction_mod_main p False mfs0 dmu0 g_idx0 0\n         0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis prod.exhaust)"], ["proof (state)\nthis:\n  (p1, mfs1, dmu1) = basis_reduction_mod_main p False mfs0 dmu0 g_idx0 0 0\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "obtain fs1 b1 where Linv1: \"LLL_invariant_mod fs1 mfs1 dmu1 p1 ?first b1 m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>fs1 b1.\n        LLL_invariant_mod fs1 mfs1 dmu1 p1 False b1 m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using basis_reduction_mod_main[OF fs0 mfs1dmu1[symmetric]]"], ["proof (prove)\nusing this:\n  \\<exists>fs' b'. LLL_invariant_mod fs' mfs1 dmu1 p1 False b' m\n\ngoal (1 subgoal):\n 1. (\\<And>fs1 b1.\n        LLL_invariant_mod fs1 mfs1 dmu1 p1 False b1 m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  LLL_invariant_mod fs1 mfs1 dmu1 p1 False b1 m\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "obtain mfs2 dmu2 where mfs2dmu2:\n    \"(mfs2, dmu2) = basis_reduction_mod_add_rows_outer_loop p1 mfs1 dmu1 (m-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>mfs2 dmu2.\n        (mfs2, dmu2) =\n        basis_reduction_mod_add_rows_outer_loop p1 mfs1 dmu1\n         (m - 1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis old.prod.exhaust)"], ["proof (state)\nthis:\n  (mfs2, dmu2) =\n  basis_reduction_mod_add_rows_outer_loop p1 mfs1 dmu1 (m - 1)\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "obtain fs2 where fs2: \"LLL_invariant_mod fs2 mfs2 dmu2 p1 ?first b1 m\" \n    and \\<mu>s: \"((\\<forall>j. j < m \\<longrightarrow> \\<mu>_small fs2 j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>fs2.\n        \\<lbrakk>LLL_invariant_mod fs2 mfs2 dmu2 p1 False b1 m;\n         \\<forall>j<m. \\<mu>_small fs2 j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using basis_reduction_mod_add_rows_outer_loop_inv[OF _ mfs2dmu2, of fs1 ?first b1] Linv1 False"], ["proof (prove)\nusing this:\n  \\<lbrakk>LLL_invariant_mod fs1 mfs1 dmu1 p1 False b1 m; m - 1 < m\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs'.\n                       LLL_invariant_mod fs' mfs2 dmu2 p1 False b1 m \\<and>\n                       (\\<forall>j\\<le>m - 1. \\<mu>_small fs' j)\n  LLL_invariant_mod fs1 mfs1 dmu1 p1 False b1 m\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>fs2.\n        \\<lbrakk>LLL_invariant_mod fs2 mfs2 dmu2 p1 False b1 m;\n         \\<forall>j<m. \\<mu>_small fs2 j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  LLL_invariant_mod fs2 mfs2 dmu2 p1 False b1 m\n  \\<forall>j<m. \\<mu>_small fs2 j\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "have rbd: \"LLL_invariant_weak' m fs2\" \"\\<forall>j < m. \\<mu>_small fs2 j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' m fs2 &&& \\<forall>j<m. \\<mu>_small fs2 j", "using LLL_invD_mod[OF fs2] LLL_invI_weak \\<mu>s"], ["proof (prove)\nusing this:\n  length mfs2 = m\n  m \\<le> m\n  length fs2 = m\n  lattice_of fs2 = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs2)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs2) \\<alpha> m\n  map (map_vec (\\<lambda>x. x symmod p1)) fs2 = mfs2\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs2 i' j'\\<bar> < p1 * d fs2 j' * d fs2 (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs2 i' j' = dmu2 $$ (i', j')\n  ?i < m \\<Longrightarrow> fs2 ! ?i \\<in> carrier_vec n\n  set fs2 \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs2) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs2 ! ?i \\<in> carrier_vec n\n  set mfs2 \\<subseteq> carrier_vec n\n  1 < p1\n  g_bnd_mode False b1 fs2\n  mod_invariant b1 p1 False\n  \\<lbrakk>set ?fs \\<subseteq> carrier_vec n; length ?fs = m;\n   lattice_of ?fs = L; ?i \\<le> m;\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs);\n   gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha>\n    ?i\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak' ?i ?fs\n  \\<forall>j<m. \\<mu>_small fs2 j\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' m fs2 &&& \\<forall>j<m. \\<mu>_small fs2 j", "by auto"], ["proof (state)\nthis:\n  LLL_invariant_weak' m fs2\n  \\<forall>j<m. \\<mu>_small fs2 j\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "have redfs2: \"reduced fs2 m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gram_schmidt_fs.reduced n (map of_int_hom.vec_hom fs2) \\<alpha> m", "using rbd LLL_invD_weak(8) gram_schmidt_fs.reduced_def \\<mu>_small_def"], ["proof (prove)\nusing this:\n  LLL_invariant_weak' m fs2\n  \\<forall>j<m. \\<mu>_small fs2 j\n  LLL_invariant_weak' ?i ?fs \\<Longrightarrow>\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha> ?i\n  gram_schmidt_fs.reduced ?n ?fs ?\\<alpha> ?k =\n  (gram_schmidt_fs.weakly_reduced ?n ?fs ?\\<alpha> ?k \\<and>\n   (\\<forall>i j.\n       i < ?k \\<longrightarrow>\n       j < i \\<longrightarrow>\n       \\<bar>gram_schmidt_fs.\\<mu> ?n ?fs i j\\<bar>\n       \\<le> (1::?'a) / (2::?'a)))\n  \\<mu>_small ?fs ?i =\n  (\\<forall>j<?i.\n      \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?fs) ?i j\\<bar>\n      \\<le> 1 / 2)\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.reduced n (map of_int_hom.vec_hom fs2) \\<alpha> m", "by blast"], ["proof (state)\nthis:\n  gram_schmidt_fs.reduced n (map of_int_hom.vec_hom fs2) \\<alpha> m\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "have fs: \"fs = mfs2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fs = mfs2", "using res[folded mfs1dmu1, unfolded Let_def split, folded mfs2dmu2, unfolded split]"], ["proof (prove)\nusing this:\n  mfs2 = fs\n\ngoal (1 subgoal):\n 1. fs = mfs2", ".."], ["proof (state)\nthis:\n  fs = mfs2\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "have \"\\<forall>i < m. fs2 ! i = fs ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<m. fs2 ! i = fs ! i", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> fs2 ! i = fs ! i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> fs2 ! i = fs ! i", "assume i: \"i < m\""], ["proof (state)\nthis:\n  i < m\n\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> fs2 ! i = fs ! i", "then"], ["proof (chain)\npicking this:\n  i < m", "have fs2i: \"LLL_invariant_mod fs2 mfs2 dmu2 p1 ?first b1 i\""], ["proof (prove)\nusing this:\n  i < m\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs2 mfs2 dmu2 p1 False b1 i", "using fs2 LLL_invariant_mod_to_weak_m_to_i"], ["proof (prove)\nusing this:\n  i < m\n  LLL_invariant_mod fs2 mfs2 dmu2 p1 False b1 m\n  \\<lbrakk>LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b m;\n   ?i \\<le> m\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i\n  \\<lbrakk>LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b m;\n   ?i \\<le> m\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak' m ?fs\n  \\<lbrakk>LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b m;\n   ?i \\<le> m\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak' ?i ?fs\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs2 mfs2 dmu2 p1 False b1 i", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_mod fs2 mfs2 dmu2 p1 False b1 i\n\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> fs2 ! i = fs ! i", "have \\<mu>si: \"\\<mu>_small fs2 i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu>_small fs2 i", "using \\<mu>s i"], ["proof (prove)\nusing this:\n  \\<forall>j<m. \\<mu>_small fs2 j\n  i < m\n\ngoal (1 subgoal):\n 1. \\<mu>_small fs2 i", "by simp"], ["proof (state)\nthis:\n  \\<mu>_small fs2 i\n\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> fs2 ! i = fs ! i", "show \"fs2 ! i = fs ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fs2 ! i = fs ! i", "using basis_reduction_mod_fs_bound(1)[OF fs2i \\<mu>si i] fs"], ["proof (prove)\nusing this:\n  \\<not> False \\<Longrightarrow> fs2 ! i = mfs2 ! i\n  fs = mfs2\n\ngoal (1 subgoal):\n 1. fs2 ! i = fs ! i", "by simp"], ["proof (state)\nthis:\n  fs2 ! i = fs ! i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i<m. fs2 ! i = fs ! i\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "then"], ["proof (chain)\npicking this:\n  \\<forall>i<m. fs2 ! i = fs ! i", "have \"fs2 = fs\""], ["proof (prove)\nusing this:\n  \\<forall>i<m. fs2 ! i = fs ! i\n\ngoal (1 subgoal):\n 1. fs2 = fs", "using LLL_invD_mod(1,3,10,13)[OF fs2] fs"], ["proof (prove)\nusing this:\n  \\<forall>i<m. fs2 ! i = fs ! i\n  length mfs2 = m\n  length fs2 = m\n  ?i < m \\<Longrightarrow> fs2 ! ?i \\<in> carrier_vec n\n  ?i < m \\<Longrightarrow> mfs2 ! ?i \\<in> carrier_vec n\n  fs = mfs2\n\ngoal (1 subgoal):\n 1. fs2 = fs", "by (metis nth_equalityI)"], ["proof (state)\nthis:\n  fs2 = fs\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "then"], ["proof (chain)\npicking this:\n  fs2 = fs", "show ?thesis"], ["proof (prove)\nusing this:\n  fs2 = fs\n\ngoal (1 subgoal):\n 1. LLL_invariant True m fs", "using redfs2 fs rbd(1) reduce_basis_def res LLL_invD_weak \n      LLL_invariant_def"], ["proof (prove)\nusing this:\n  fs2 = fs\n  gram_schmidt_fs.reduced n (map of_int_hom.vec_hom fs2) \\<alpha> m\n  fs = mfs2\n  LLL_invariant_weak' m fs2\n  local.reduce_basis = local.basis_reduction_main (True, 0, fs_init)\n  (case basis_reduction_mod_main p False mfs0 dmu0 g_idx0 0 0 of\n   (p', mfs', dmu') \\<Rightarrow>\n     case basis_reduction_mod_add_rows_outer_loop p' mfs' dmu' (m - 1) of\n     (mfs'', dmu'') \\<Rightarrow> mfs'') =\n  fs\n  LLL_invariant_weak' ?i ?fs \\<Longrightarrow>\n  gs.lin_indpt_list (map of_int_hom.vec_hom ?fs)\n  LLL_invariant_weak' ?i ?fs \\<Longrightarrow>\n  length (map of_int_hom.vec_hom ?fs) = m\n  LLL_invariant_weak' ?i ?fs \\<Longrightarrow>\n  set ?fs \\<subseteq> carrier_vec n\n  \\<lbrakk>LLL_invariant_weak' ?ia ?fs; ?i < m\\<rbrakk>\n  \\<Longrightarrow> ?fs ! ?i \\<in> carrier_vec n\n  \\<lbrakk>LLL_invariant_weak' ?ia ?fs; ?i < m\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.gso n (map of_int_hom.vec_hom ?fs) ?i\n                    \\<in> Rn\n  LLL_invariant_weak' ?i ?fs \\<Longrightarrow> length ?fs = m\n  LLL_invariant_weak' ?i ?fs \\<Longrightarrow> lattice_of ?fs = L\n  LLL_invariant_weak' ?i ?fs \\<Longrightarrow>\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha> ?i\n  LLL_invariant_weak' ?i ?fs \\<Longrightarrow> ?i \\<le> m\n  LLL_invariant ?upw ?i ?fs =\n  (gs.lin_indpt_list (map of_int_hom.vec_hom ?fs) \\<and>\n   lattice_of ?fs = L \\<and>\n   gram_schmidt_fs.reduced n (map of_int_hom.vec_hom ?fs) \\<alpha> ?i \\<and>\n   ?i \\<le> m \\<and> length ?fs = m \\<and> (?upw \\<or> \\<mu>_small ?fs ?i))\n\ngoal (1 subgoal):\n 1. LLL_invariant True m fs", "by simp"], ["proof (state)\nthis:\n  LLL_invariant True m fs\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Soundness of Storjohann's algorithm for computing a short vector.\\<close>"], ["", "lemma short_vector_mod_inv: assumes res: \"short_vector_mod = v\"    \n  and m: \"m > 0\" \n  shows \"\\<exists> fs. LLL_invariant_weak fs \\<and> weakly_reduced fs m \\<and> v = hd fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "let ?first = True"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "obtain p mfs0 dmu0 g_idx0 where init: \"compute_initial_state ?first = (p, mfs0, dmu0, g_idx0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p mfs0 dmu0 g_idx0.\n        compute_initial_state True =\n        (p, mfs0, dmu0, g_idx0) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis prod_cases4)"], ["proof (state)\nthis:\n  compute_initial_state True = (p, mfs0, dmu0, g_idx0)\n\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "from LLL_initial_invariant_mod[OF init]"], ["proof (chain)\npicking this:\n  \\<exists>fs b. LLL_invariant_mod fs mfs0 dmu0 p True b 0", "obtain fs0 b where fs0: \"LLL_invariant_mod fs0 mfs0 dmu0 p ?first b 0\""], ["proof (prove)\nusing this:\n  \\<exists>fs b. LLL_invariant_mod fs mfs0 dmu0 p True b 0\n\ngoal (1 subgoal):\n 1. (\\<And>fs0 b.\n        LLL_invariant_mod fs0 mfs0 dmu0 p True b 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  LLL_invariant_mod fs0 mfs0 dmu0 p True b 0\n\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "obtain p1 mfs1 dmu1 where main: \"basis_reduction_mod_main p ?first mfs0 dmu0 g_idx0 0 0 = (p1, mfs1, dmu1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p1 mfs1 dmu1.\n        basis_reduction_mod_main p True mfs0 dmu0 g_idx0 0 0 =\n        (p1, mfs1, dmu1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis prod.exhaust)"], ["proof (state)\nthis:\n  basis_reduction_mod_main p True mfs0 dmu0 g_idx0 0 0 = (p1, mfs1, dmu1)\n\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "obtain fs1 b1 where Linv1: \"LLL_invariant_mod fs1 mfs1 dmu1 p1 ?first b1 m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>fs1 b1.\n        LLL_invariant_mod fs1 mfs1 dmu1 p1 True b1 m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using basis_reduction_mod_main[OF fs0 main]"], ["proof (prove)\nusing this:\n  \\<exists>fs' b'. LLL_invariant_mod fs' mfs1 dmu1 p1 True b' m\n\ngoal (1 subgoal):\n 1. (\\<And>fs1 b1.\n        LLL_invariant_mod fs1 mfs1 dmu1 p1 True b1 m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  LLL_invariant_mod fs1 mfs1 dmu1 p1 True b1 m\n\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "have \"v = hd mfs1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = hd mfs1", "using res[unfolded short_vector_mod_def Let_def init split main]"], ["proof (prove)\nusing this:\n  hd mfs1 = v\n\ngoal (1 subgoal):\n 1. v = hd mfs1", ".."], ["proof (state)\nthis:\n  v = hd mfs1\n\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "with basis_reduction_mod_fs_bound_first[OF Linv1 m] LLL_invD_mod(1,3)[OF Linv1] m"], ["proof (chain)\npicking this:\n  True \\<Longrightarrow> fs1 ! 0 = mfs1 ! 0\n  length mfs1 = m\n  length fs1 = m\n  0 < m\n  v = hd mfs1", "have v: \"v = hd fs1\""], ["proof (prove)\nusing this:\n  True \\<Longrightarrow> fs1 ! 0 = mfs1 ! 0\n  length mfs1 = m\n  length fs1 = m\n  0 < m\n  v = hd mfs1\n\ngoal (1 subgoal):\n 1. v = hd fs1", "by (cases fs1; cases mfs1; auto)"], ["proof (state)\nthis:\n  v = hd fs1\n\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "from Linv1"], ["proof (chain)\npicking this:\n  LLL_invariant_mod fs1 mfs1 dmu1 p1 True b1 m", "have Linv1: \"LLL_invariant_weak fs1\" and red: \"weakly_reduced fs1 m\""], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs1 mfs1 dmu1 p1 True b1 m\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak fs1 &&&\n    gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs1) \\<alpha> m", "unfolding LLL_invariant_mod_def LLL_invariant_weak_def"], ["proof (prove)\nusing this:\n  length fs1 = m \\<and>\n  length mfs1 = m \\<and>\n  m \\<le> m \\<and>\n  lattice_of fs1 = L \\<and>\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs1) \\<and>\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs1) \\<alpha>\n   m \\<and>\n  map (map_vec (\\<lambda>x. x symmod p1)) fs1 = mfs1 \\<and>\n  (\\<forall>i'<m.\n      \\<forall>j'<i'.\n         \\<bar>d\\<mu> fs1 i' j'\\<bar>\n         < p1 * d fs1 j' * d fs1 (Suc j')) \\<and>\n  (\\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs1 i' j' = dmu1 $$ (i', j')) \\<and>\n  1 < p1 \\<and> g_bnd_mode True b1 fs1 \\<and> mod_invariant b1 p1 True\n\ngoal (1 subgoal):\n 1. gs.lin_indpt_list (map of_int_hom.vec_hom fs1) \\<and>\n    lattice_of fs1 = L \\<and> length fs1 = m &&&\n    gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs1) \\<alpha> m", "by auto"], ["proof (state)\nthis:\n  LLL_invariant_weak fs1\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs1) \\<alpha> m\n\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "by (intro exI[of _ fs1] conjI Linv1 red v)"], ["proof (state)\nthis:\n  \\<exists>fs.\n     LLL_invariant_weak fs \\<and>\n     gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n      m \\<and>\n     v = hd fs\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Soundness of Storjohann's algorithm with improved swap order\\<close>"], ["", "lemma reduce_basis_iso_inv: assumes res: \"reduce_basis_iso = fs\"\n  shows \"LLL_invariant True m fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant True m fs", "proof (cases \"m = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> LLL_invariant True m fs\n 2. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "case True"], ["proof (state)\nthis:\n  m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> LLL_invariant True m fs\n 2. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "then"], ["proof (chain)\npicking this:\n  m = 0", "have *: \"fs_init = []\""], ["proof (prove)\nusing this:\n  m = 0\n\ngoal (1 subgoal):\n 1. fs_init = []", "using len"], ["proof (prove)\nusing this:\n  m = 0\n  length fs_init = m\n\ngoal (1 subgoal):\n 1. fs_init = []", "by simp"], ["proof (state)\nthis:\n  fs_init = []\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> LLL_invariant True m fs\n 2. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "moreover"], ["proof (state)\nthis:\n  fs_init = []\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> LLL_invariant True m fs\n 2. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "have \"fs = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fs = []", "using res basis_reduction_mod_add_rows_outer_loop.simps(1)"], ["proof (prove)\nusing this:\n  reduce_basis_iso = fs\n  basis_reduction_mod_add_rows_outer_loop ?p ?mfs ?dmu 0 = (?mfs, ?dmu)\n\ngoal (1 subgoal):\n 1. fs = []", "unfolding reduce_basis_iso_def Let_def basis_reduction_iso_main.simps[of _ _ _ _ _ 0] \n      compute_initial_mfs_def compute_initial_state_def compute_initial_dmu_def"], ["proof (prove)\nusing this:\n  (case case compute_max_gso_norm False dmu_initial of\n        (b, g_idx) \\<Rightarrow>\n          (compute_mod_of_max_gso_norm False b,\n           map (map_vec\n                 (\\<lambda>x. x symmod compute_mod_of_max_gso_norm False b))\n            fs_init,\n           mat m m\n            (\\<lambda>(i', j').\n                if j' < i'\n                then dmu_initial $$ (i', j') symmod\n                     (compute_mod_of_max_gso_norm False b *\n                      d_of dmu_initial j' *\n                      d_of dmu_initial (Suc j'))\n                else dmu_initial $$ (i', j')),\n           g_idx) of\n   (p0, mfs0, dmu0, g_idx) \\<Rightarrow>\n     case if 1 < m\n          then case compute_max_gso_quot dmu0 of\n               (max_gso_num, max_gso_denum, indx) \\<Rightarrow>\n                 case quotient_of \\<alpha> of\n                 (num, denum) \\<Rightarrow>\n                   if num * max_gso_denum < max_gso_num * denum\n                   then case basis_reduction_adjust_swap_add_step p0 False\n                              mfs0 dmu0 g_idx indx of\n                        (p', mfs', dmu', g_idx') \\<Rightarrow>\n                          basis_reduction_iso_main p' False mfs' dmu' g_idx'\n                           (0 + 1)\n                   else (p0, mfs0, dmu0)\n          else (p0, mfs0, dmu0) of\n     (p', mfs', dmu') \\<Rightarrow>\n       case basis_reduction_mod_add_rows_outer_loop p' mfs' dmu' (m - 1) of\n       (mfs'', dmu'') \\<Rightarrow> mfs'') =\n  fs\n  basis_reduction_mod_add_rows_outer_loop ?p ?mfs ?dmu 0 = (?mfs, ?dmu)\n\ngoal (1 subgoal):\n 1. fs = []", "unfolding True *"], ["proof (prove)\nusing this:\n  (case case LLL.compute_max_gso_norm 0 False (LLL.dmu_initial 0 []) of\n        (b, g_idx) \\<Rightarrow>\n          (LLL.compute_mod_of_max_gso_norm 0 False b,\n           map (map_vec\n                 (\\<lambda>x.\n                     x symmod LLL.compute_mod_of_max_gso_norm 0 False b))\n            [],\n           mat 0 0\n            (\\<lambda>(i', j').\n                if j' < i'\n                then LLL.dmu_initial 0 [] $$ (i', j') symmod\n                     (LLL.compute_mod_of_max_gso_norm 0 False b *\n                      d_of (LLL.dmu_initial 0 []) j' *\n                      d_of (LLL.dmu_initial 0 []) (Suc j'))\n                else LLL.dmu_initial 0 [] $$ (i', j')),\n           g_idx) of\n   (p0, mfs0, dmu0, g_idx) \\<Rightarrow>\n     case if 1 < 0\n          then case LLL.compute_max_gso_quot 0 dmu0 of\n               (max_gso_num, max_gso_denum, indx) \\<Rightarrow>\n                 case quotient_of \\<alpha> of\n                 (num, denum) \\<Rightarrow>\n                   if num * max_gso_denum < max_gso_num * denum\n                   then case LLL.basis_reduction_adjust_swap_add_step 0 p0\n                              False mfs0 dmu0 g_idx indx of\n                        (p', mfs', dmu', g_idx') \\<Rightarrow>\n                          LLL.basis_reduction_iso_main 0 \\<alpha> p' False\n                           mfs' dmu' g_idx' (0 + 1)\n                   else (p0, mfs0, dmu0)\n          else (p0, mfs0, dmu0) of\n     (p', mfs', dmu') \\<Rightarrow>\n       case LLL.basis_reduction_mod_add_rows_outer_loop 0 p' mfs' dmu'\n             (0 - 1) of\n       (mfs'', dmu'') \\<Rightarrow> mfs'') =\n  fs\n  LLL.basis_reduction_mod_add_rows_outer_loop 0 ?p ?mfs ?dmu 0 =\n  (?mfs, ?dmu)\n\ngoal (1 subgoal):\n 1. fs = []", "by (auto split: prod.splits)"], ["proof (state)\nthis:\n  fs = []\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> LLL_invariant True m fs\n 2. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "ultimately"], ["proof (chain)\npicking this:\n  fs_init = []\n  fs = []", "show ?thesis"], ["proof (prove)\nusing this:\n  fs_init = []\n  fs = []\n\ngoal (1 subgoal):\n 1. LLL_invariant True m fs", "using True LLL_inv_initial_state"], ["proof (prove)\nusing this:\n  fs_init = []\n  fs = []\n  m = 0\n  LLL_invariant True 0 fs_init\n\ngoal (1 subgoal):\n 1. LLL_invariant True m fs", "by blast"], ["proof (state)\nthis:\n  LLL_invariant True m fs\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "case False"], ["proof (state)\nthis:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "let ?first = False"], ["proof (state)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "obtain p mfs0 dmu0 g_idx0 where init: \"compute_initial_state ?first = (p, mfs0, dmu0, g_idx0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p mfs0 dmu0 g_idx0.\n        compute_initial_state False =\n        (p, mfs0, dmu0, g_idx0) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis prod_cases4)"], ["proof (state)\nthis:\n  compute_initial_state False = (p, mfs0, dmu0, g_idx0)\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "from LLL_initial_invariant_mod[OF init]"], ["proof (chain)\npicking this:\n  \\<exists>fs b. LLL_invariant_mod fs mfs0 dmu0 p False b 0", "obtain fs0 b where fs0: \"LLL_invariant_mod fs0 mfs0 dmu0 p ?first b 0\""], ["proof (prove)\nusing this:\n  \\<exists>fs b. LLL_invariant_mod fs mfs0 dmu0 p False b 0\n\ngoal (1 subgoal):\n 1. (\\<And>fs0 b.\n        LLL_invariant_mod fs0 mfs0 dmu0 p False b 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  LLL_invariant_mod fs0 mfs0 dmu0 p False b 0\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "have fs0w: \"LLL_invariant_mod_weak fs0 mfs0 dmu0 p ?first b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_mod_weak fs0 mfs0 dmu0 p False b", "using LLL_invD_mod[OF fs0] LLL_invI_modw"], ["proof (prove)\nusing this:\n  length mfs0 = m\n  0 \\<le> m\n  length fs0 = m\n  lattice_of fs0 = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs0)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs0) \\<alpha> 0\n  map (map_vec (\\<lambda>x. x symmod p)) fs0 = mfs0\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs0 i' j'\\<bar> < p * d fs0 j' * d fs0 (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs0 i' j' = dmu0 $$ (i', j')\n  ?i < m \\<Longrightarrow> fs0 ! ?i \\<in> carrier_vec n\n  set fs0 \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs0) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs0 ! ?i \\<in> carrier_vec n\n  set mfs0 \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode False b fs0\n  mod_invariant b p False\n  \\<lbrakk>length ?mfs = m; length ?fs = m; lattice_of ?fs = L;\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs);\n   map (map_vec (\\<lambda>x. x symmod ?p)) ?fs = ?mfs;\n   \\<forall>i'<m.\n      \\<forall>j'<i'.\n         \\<bar>d\\<mu> ?fs i' j'\\<bar> < ?p * d ?fs j' * d ?fs (Suc j');\n   \\<forall>i'<m. \\<forall>j'<m. d\\<mu> ?fs i' j' = ?dmu $$ (i', j');\n   1 < ?p; g_bnd_mode ?first ?b ?fs; mod_invariant ?b ?p ?first\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod_weak fs0 mfs0 dmu0 p False b", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_mod_weak fs0 mfs0 dmu0 p False b\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "note res = res[unfolded reduce_basis_iso_def init Let_def split]"], ["proof (state)\nthis:\n  (case basis_reduction_iso_main p False mfs0 dmu0 g_idx0 0 of\n   (p', mfs', dmu') \\<Rightarrow>\n     case basis_reduction_mod_add_rows_outer_loop p' mfs' dmu' (m - 1) of\n     (mfs'', dmu'') \\<Rightarrow> mfs'') =\n  fs\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "obtain p1 mfs1 dmu1 where mfs1dmu1: \"(p1, mfs1, dmu1) = basis_reduction_iso_main p ?first mfs0 dmu0 g_idx0 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p1 mfs1 dmu1.\n        (p1, mfs1, dmu1) =\n        basis_reduction_iso_main p False mfs0 dmu0 g_idx0\n         0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis prod.exhaust)"], ["proof (state)\nthis:\n  (p1, mfs1, dmu1) = basis_reduction_iso_main p False mfs0 dmu0 g_idx0 0\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "obtain fs1 b1 where Linv1: \"LLL_invariant_mod fs1 mfs1 dmu1 p1 ?first b1 m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>fs1 b1.\n        LLL_invariant_mod fs1 mfs1 dmu1 p1 False b1 m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using basis_reduction_iso_main[OF fs0w mfs1dmu1[symmetric]]"], ["proof (prove)\nusing this:\n  \\<exists>fs' b'. LLL_invariant_mod fs' mfs1 dmu1 p1 False b' m\n\ngoal (1 subgoal):\n 1. (\\<And>fs1 b1.\n        LLL_invariant_mod fs1 mfs1 dmu1 p1 False b1 m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  LLL_invariant_mod fs1 mfs1 dmu1 p1 False b1 m\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "obtain mfs2 dmu2 where mfs2dmu2:\n    \"(mfs2, dmu2) = basis_reduction_mod_add_rows_outer_loop p1 mfs1 dmu1 (m-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>mfs2 dmu2.\n        (mfs2, dmu2) =\n        basis_reduction_mod_add_rows_outer_loop p1 mfs1 dmu1\n         (m - 1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis old.prod.exhaust)"], ["proof (state)\nthis:\n  (mfs2, dmu2) =\n  basis_reduction_mod_add_rows_outer_loop p1 mfs1 dmu1 (m - 1)\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "obtain fs2 where fs2: \"LLL_invariant_mod fs2 mfs2 dmu2 p1 ?first b1 m\" \n    and \\<mu>s: \"((\\<forall>j. j < m \\<longrightarrow> \\<mu>_small fs2 j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>fs2.\n        \\<lbrakk>LLL_invariant_mod fs2 mfs2 dmu2 p1 False b1 m;\n         \\<forall>j<m. \\<mu>_small fs2 j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using basis_reduction_mod_add_rows_outer_loop_inv[OF _ mfs2dmu2, of fs1 ?first b1] Linv1 False"], ["proof (prove)\nusing this:\n  \\<lbrakk>LLL_invariant_mod fs1 mfs1 dmu1 p1 False b1 m; m - 1 < m\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fs'.\n                       LLL_invariant_mod fs' mfs2 dmu2 p1 False b1 m \\<and>\n                       (\\<forall>j\\<le>m - 1. \\<mu>_small fs' j)\n  LLL_invariant_mod fs1 mfs1 dmu1 p1 False b1 m\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>fs2.\n        \\<lbrakk>LLL_invariant_mod fs2 mfs2 dmu2 p1 False b1 m;\n         \\<forall>j<m. \\<mu>_small fs2 j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  LLL_invariant_mod fs2 mfs2 dmu2 p1 False b1 m\n  \\<forall>j<m. \\<mu>_small fs2 j\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "have rbd: \"LLL_invariant_weak' m fs2\" \"\\<forall>j < m. \\<mu>_small fs2 j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_weak' m fs2 &&& \\<forall>j<m. \\<mu>_small fs2 j", "using LLL_invD_mod[OF fs2] LLL_invI_weak \\<mu>s"], ["proof (prove)\nusing this:\n  length mfs2 = m\n  m \\<le> m\n  length fs2 = m\n  lattice_of fs2 = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs2)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs2) \\<alpha> m\n  map (map_vec (\\<lambda>x. x symmod p1)) fs2 = mfs2\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs2 i' j'\\<bar> < p1 * d fs2 j' * d fs2 (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs2 i' j' = dmu2 $$ (i', j')\n  ?i < m \\<Longrightarrow> fs2 ! ?i \\<in> carrier_vec n\n  set fs2 \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs2) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs2 ! ?i \\<in> carrier_vec n\n  set mfs2 \\<subseteq> carrier_vec n\n  1 < p1\n  g_bnd_mode False b1 fs2\n  mod_invariant b1 p1 False\n  \\<lbrakk>set ?fs \\<subseteq> carrier_vec n; length ?fs = m;\n   lattice_of ?fs = L; ?i \\<le> m;\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs);\n   gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha>\n    ?i\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak' ?i ?fs\n  \\<forall>j<m. \\<mu>_small fs2 j\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak' m fs2 &&& \\<forall>j<m. \\<mu>_small fs2 j", "by auto"], ["proof (state)\nthis:\n  LLL_invariant_weak' m fs2\n  \\<forall>j<m. \\<mu>_small fs2 j\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "have redfs2: \"reduced fs2 m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gram_schmidt_fs.reduced n (map of_int_hom.vec_hom fs2) \\<alpha> m", "using rbd LLL_invD_weak(8) gram_schmidt_fs.reduced_def \\<mu>_small_def"], ["proof (prove)\nusing this:\n  LLL_invariant_weak' m fs2\n  \\<forall>j<m. \\<mu>_small fs2 j\n  LLL_invariant_weak' ?i ?fs \\<Longrightarrow>\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha> ?i\n  gram_schmidt_fs.reduced ?n ?fs ?\\<alpha> ?k =\n  (gram_schmidt_fs.weakly_reduced ?n ?fs ?\\<alpha> ?k \\<and>\n   (\\<forall>i j.\n       i < ?k \\<longrightarrow>\n       j < i \\<longrightarrow>\n       \\<bar>gram_schmidt_fs.\\<mu> ?n ?fs i j\\<bar>\n       \\<le> (1::?'a) / (2::?'a)))\n  \\<mu>_small ?fs ?i =\n  (\\<forall>j<?i.\n      \\<bar>gram_schmidt_fs.\\<mu> n (map of_int_hom.vec_hom ?fs) ?i j\\<bar>\n      \\<le> 1 / 2)\n\ngoal (1 subgoal):\n 1. gram_schmidt_fs.reduced n (map of_int_hom.vec_hom fs2) \\<alpha> m", "by blast"], ["proof (state)\nthis:\n  gram_schmidt_fs.reduced n (map of_int_hom.vec_hom fs2) \\<alpha> m\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "have fs: \"fs = mfs2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fs = mfs2", "using res[folded mfs1dmu1, unfolded Let_def split, folded mfs2dmu2, unfolded split]"], ["proof (prove)\nusing this:\n  mfs2 = fs\n\ngoal (1 subgoal):\n 1. fs = mfs2", ".."], ["proof (state)\nthis:\n  fs = mfs2\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "have \"\\<forall>i < m. fs2 ! i = fs ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<m. fs2 ! i = fs ! i", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> fs2 ! i = fs ! i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> fs2 ! i = fs ! i", "assume i: \"i < m\""], ["proof (state)\nthis:\n  i < m\n\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> fs2 ! i = fs ! i", "then"], ["proof (chain)\npicking this:\n  i < m", "have fs2i: \"LLL_invariant_mod fs2 mfs2 dmu2 p1 ?first b1 i\""], ["proof (prove)\nusing this:\n  i < m\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs2 mfs2 dmu2 p1 False b1 i", "using fs2 LLL_invariant_mod_to_weak_m_to_i"], ["proof (prove)\nusing this:\n  i < m\n  LLL_invariant_mod fs2 mfs2 dmu2 p1 False b1 m\n  \\<lbrakk>LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b m;\n   ?i \\<le> m\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b ?i\n  \\<lbrakk>LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b m;\n   ?i \\<le> m\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak' m ?fs\n  \\<lbrakk>LLL_invariant_mod ?fs ?mfs ?dmu ?p ?first ?b m;\n   ?i \\<le> m\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_weak' ?i ?fs\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod fs2 mfs2 dmu2 p1 False b1 i", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_mod fs2 mfs2 dmu2 p1 False b1 i\n\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> fs2 ! i = fs ! i", "have \\<mu>si: \"\\<mu>_small fs2 i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu>_small fs2 i", "using \\<mu>s i"], ["proof (prove)\nusing this:\n  \\<forall>j<m. \\<mu>_small fs2 j\n  i < m\n\ngoal (1 subgoal):\n 1. \\<mu>_small fs2 i", "by simp"], ["proof (state)\nthis:\n  \\<mu>_small fs2 i\n\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> fs2 ! i = fs ! i", "show \"fs2 ! i = fs ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fs2 ! i = fs ! i", "using basis_reduction_mod_fs_bound(1)[OF fs2i \\<mu>si i] fs"], ["proof (prove)\nusing this:\n  \\<not> False \\<Longrightarrow> fs2 ! i = mfs2 ! i\n  fs = mfs2\n\ngoal (1 subgoal):\n 1. fs2 ! i = fs ! i", "by simp"], ["proof (state)\nthis:\n  fs2 ! i = fs ! i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i<m. fs2 ! i = fs ! i\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "then"], ["proof (chain)\npicking this:\n  \\<forall>i<m. fs2 ! i = fs ! i", "have \"fs2 = fs\""], ["proof (prove)\nusing this:\n  \\<forall>i<m. fs2 ! i = fs ! i\n\ngoal (1 subgoal):\n 1. fs2 = fs", "using LLL_invD_mod(1,3,10,13)[OF fs2] fs"], ["proof (prove)\nusing this:\n  \\<forall>i<m. fs2 ! i = fs ! i\n  length mfs2 = m\n  length fs2 = m\n  ?i < m \\<Longrightarrow> fs2 ! ?i \\<in> carrier_vec n\n  ?i < m \\<Longrightarrow> mfs2 ! ?i \\<in> carrier_vec n\n  fs = mfs2\n\ngoal (1 subgoal):\n 1. fs2 = fs", "by (metis nth_equalityI)"], ["proof (state)\nthis:\n  fs2 = fs\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> LLL_invariant True m fs", "then"], ["proof (chain)\npicking this:\n  fs2 = fs", "show ?thesis"], ["proof (prove)\nusing this:\n  fs2 = fs\n\ngoal (1 subgoal):\n 1. LLL_invariant True m fs", "using redfs2 fs rbd(1) reduce_basis_def res LLL_invD_weak \n      LLL_invariant_def"], ["proof (prove)\nusing this:\n  fs2 = fs\n  gram_schmidt_fs.reduced n (map of_int_hom.vec_hom fs2) \\<alpha> m\n  fs = mfs2\n  LLL_invariant_weak' m fs2\n  local.reduce_basis = local.basis_reduction_main (True, 0, fs_init)\n  (case basis_reduction_iso_main p False mfs0 dmu0 g_idx0 0 of\n   (p', mfs', dmu') \\<Rightarrow>\n     case basis_reduction_mod_add_rows_outer_loop p' mfs' dmu' (m - 1) of\n     (mfs'', dmu'') \\<Rightarrow> mfs'') =\n  fs\n  LLL_invariant_weak' ?i ?fs \\<Longrightarrow>\n  gs.lin_indpt_list (map of_int_hom.vec_hom ?fs)\n  LLL_invariant_weak' ?i ?fs \\<Longrightarrow>\n  length (map of_int_hom.vec_hom ?fs) = m\n  LLL_invariant_weak' ?i ?fs \\<Longrightarrow>\n  set ?fs \\<subseteq> carrier_vec n\n  \\<lbrakk>LLL_invariant_weak' ?ia ?fs; ?i < m\\<rbrakk>\n  \\<Longrightarrow> ?fs ! ?i \\<in> carrier_vec n\n  \\<lbrakk>LLL_invariant_weak' ?ia ?fs; ?i < m\\<rbrakk>\n  \\<Longrightarrow> gram_schmidt_fs.gso n (map of_int_hom.vec_hom ?fs) ?i\n                    \\<in> Rn\n  LLL_invariant_weak' ?i ?fs \\<Longrightarrow> length ?fs = m\n  LLL_invariant_weak' ?i ?fs \\<Longrightarrow> lattice_of ?fs = L\n  LLL_invariant_weak' ?i ?fs \\<Longrightarrow>\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom ?fs) \\<alpha> ?i\n  LLL_invariant_weak' ?i ?fs \\<Longrightarrow> ?i \\<le> m\n  LLL_invariant ?upw ?i ?fs =\n  (gs.lin_indpt_list (map of_int_hom.vec_hom ?fs) \\<and>\n   lattice_of ?fs = L \\<and>\n   gram_schmidt_fs.reduced n (map of_int_hom.vec_hom ?fs) \\<alpha> ?i \\<and>\n   ?i \\<le> m \\<and> length ?fs = m \\<and> (?upw \\<or> \\<mu>_small ?fs ?i))\n\ngoal (1 subgoal):\n 1. LLL_invariant True m fs", "by simp"], ["proof (state)\nthis:\n  LLL_invariant True m fs\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Soundness of Storjohann's algorithm to compute short vectors with improved swap order\\<close>"], ["", "lemma short_vector_iso_inv: assumes res: \"short_vector_iso = v\"    \n  and m: \"m > 0\" \n  shows \"\\<exists> fs. LLL_invariant_weak fs \\<and> weakly_reduced fs m \\<and> v = hd fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "let ?first = True"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "obtain p mfs0 dmu0 g_idx0 where init: \"compute_initial_state ?first = (p, mfs0, dmu0, g_idx0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p mfs0 dmu0 g_idx0.\n        compute_initial_state True =\n        (p, mfs0, dmu0, g_idx0) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis prod_cases4)"], ["proof (state)\nthis:\n  compute_initial_state True = (p, mfs0, dmu0, g_idx0)\n\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "from LLL_initial_invariant_mod[OF init]"], ["proof (chain)\npicking this:\n  \\<exists>fs b. LLL_invariant_mod fs mfs0 dmu0 p True b 0", "obtain fs0 b where fs0: \"LLL_invariant_mod fs0 mfs0 dmu0 p ?first b 0\""], ["proof (prove)\nusing this:\n  \\<exists>fs b. LLL_invariant_mod fs mfs0 dmu0 p True b 0\n\ngoal (1 subgoal):\n 1. (\\<And>fs0 b.\n        LLL_invariant_mod fs0 mfs0 dmu0 p True b 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  LLL_invariant_mod fs0 mfs0 dmu0 p True b 0\n\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "have fs0w: \"LLL_invariant_mod_weak fs0 mfs0 dmu0 p ?first b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_invariant_mod_weak fs0 mfs0 dmu0 p True b", "using LLL_invD_mod[OF fs0] LLL_invI_modw"], ["proof (prove)\nusing this:\n  length mfs0 = m\n  0 \\<le> m\n  length fs0 = m\n  lattice_of fs0 = L\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs0)\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs0) \\<alpha> 0\n  map (map_vec (\\<lambda>x. x symmod p)) fs0 = mfs0\n  \\<forall>i'<m.\n     \\<forall>j'<i'.\n        \\<bar>d\\<mu> fs0 i' j'\\<bar> < p * d fs0 j' * d fs0 (Suc j')\n  \\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs0 i' j' = dmu0 $$ (i', j')\n  ?i < m \\<Longrightarrow> fs0 ! ?i \\<in> carrier_vec n\n  set fs0 \\<subseteq> carrier_vec n\n  ?i < m \\<Longrightarrow>\n  gram_schmidt_fs.gso n (map of_int_hom.vec_hom fs0) ?i \\<in> Rn\n  ?i < m \\<Longrightarrow> mfs0 ! ?i \\<in> carrier_vec n\n  set mfs0 \\<subseteq> carrier_vec n\n  1 < p\n  g_bnd_mode True b fs0\n  mod_invariant b p True\n  \\<lbrakk>length ?mfs = m; length ?fs = m; lattice_of ?fs = L;\n   gs.lin_indpt_list (map of_int_hom.vec_hom ?fs);\n   map (map_vec (\\<lambda>x. x symmod ?p)) ?fs = ?mfs;\n   \\<forall>i'<m.\n      \\<forall>j'<i'.\n         \\<bar>d\\<mu> ?fs i' j'\\<bar> < ?p * d ?fs j' * d ?fs (Suc j');\n   \\<forall>i'<m. \\<forall>j'<m. d\\<mu> ?fs i' j' = ?dmu $$ (i', j');\n   1 < ?p; g_bnd_mode ?first ?b ?fs; mod_invariant ?b ?p ?first\\<rbrakk>\n  \\<Longrightarrow> LLL_invariant_mod_weak ?fs ?mfs ?dmu ?p ?first ?b\n\ngoal (1 subgoal):\n 1. LLL_invariant_mod_weak fs0 mfs0 dmu0 p True b", "by simp"], ["proof (state)\nthis:\n  LLL_invariant_mod_weak fs0 mfs0 dmu0 p True b\n\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "obtain p1 mfs1 dmu1 where main: \"basis_reduction_iso_main p ?first mfs0 dmu0 g_idx0 0 = (p1, mfs1, dmu1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p1 mfs1 dmu1.\n        basis_reduction_iso_main p True mfs0 dmu0 g_idx0 0 =\n        (p1, mfs1, dmu1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis prod.exhaust)"], ["proof (state)\nthis:\n  basis_reduction_iso_main p True mfs0 dmu0 g_idx0 0 = (p1, mfs1, dmu1)\n\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "obtain fs1 b1 where Linv1: \"LLL_invariant_mod fs1 mfs1 dmu1 p1 ?first b1 m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>fs1 b1.\n        LLL_invariant_mod fs1 mfs1 dmu1 p1 True b1 m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using basis_reduction_iso_main[OF fs0w main]"], ["proof (prove)\nusing this:\n  \\<exists>fs' b'. LLL_invariant_mod fs' mfs1 dmu1 p1 True b' m\n\ngoal (1 subgoal):\n 1. (\\<And>fs1 b1.\n        LLL_invariant_mod fs1 mfs1 dmu1 p1 True b1 m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  LLL_invariant_mod fs1 mfs1 dmu1 p1 True b1 m\n\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "have \"v = hd mfs1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = hd mfs1", "using res[unfolded short_vector_iso_def Let_def init split main]"], ["proof (prove)\nusing this:\n  hd mfs1 = v\n\ngoal (1 subgoal):\n 1. v = hd mfs1", ".."], ["proof (state)\nthis:\n  v = hd mfs1\n\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "with basis_reduction_mod_fs_bound_first[OF Linv1 m] LLL_invD_mod(1,3)[OF Linv1] m"], ["proof (chain)\npicking this:\n  True \\<Longrightarrow> fs1 ! 0 = mfs1 ! 0\n  length mfs1 = m\n  length fs1 = m\n  0 < m\n  v = hd mfs1", "have v: \"v = hd fs1\""], ["proof (prove)\nusing this:\n  True \\<Longrightarrow> fs1 ! 0 = mfs1 ! 0\n  length mfs1 = m\n  length fs1 = m\n  0 < m\n  v = hd mfs1\n\ngoal (1 subgoal):\n 1. v = hd fs1", "by (cases fs1; cases mfs1; auto)"], ["proof (state)\nthis:\n  v = hd fs1\n\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "from Linv1"], ["proof (chain)\npicking this:\n  LLL_invariant_mod fs1 mfs1 dmu1 p1 True b1 m", "have Linv1: \"LLL_invariant_weak fs1\" and red: \"weakly_reduced fs1 m\""], ["proof (prove)\nusing this:\n  LLL_invariant_mod fs1 mfs1 dmu1 p1 True b1 m\n\ngoal (1 subgoal):\n 1. LLL_invariant_weak fs1 &&&\n    gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs1) \\<alpha> m", "unfolding LLL_invariant_mod_def LLL_invariant_weak_def"], ["proof (prove)\nusing this:\n  length fs1 = m \\<and>\n  length mfs1 = m \\<and>\n  m \\<le> m \\<and>\n  lattice_of fs1 = L \\<and>\n  gs.lin_indpt_list (map of_int_hom.vec_hom fs1) \\<and>\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs1) \\<alpha>\n   m \\<and>\n  map (map_vec (\\<lambda>x. x symmod p1)) fs1 = mfs1 \\<and>\n  (\\<forall>i'<m.\n      \\<forall>j'<i'.\n         \\<bar>d\\<mu> fs1 i' j'\\<bar>\n         < p1 * d fs1 j' * d fs1 (Suc j')) \\<and>\n  (\\<forall>i'<m. \\<forall>j'<m. d\\<mu> fs1 i' j' = dmu1 $$ (i', j')) \\<and>\n  1 < p1 \\<and> g_bnd_mode True b1 fs1 \\<and> mod_invariant b1 p1 True\n\ngoal (1 subgoal):\n 1. gs.lin_indpt_list (map of_int_hom.vec_hom fs1) \\<and>\n    lattice_of fs1 = L \\<and> length fs1 = m &&&\n    gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs1) \\<alpha> m", "by auto"], ["proof (state)\nthis:\n  LLL_invariant_weak fs1\n  gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs1) \\<alpha> m\n\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fs.\n       LLL_invariant_weak fs \\<and>\n       gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n        m \\<and>\n       v = hd fs", "by (intro exI[of _ fs1] conjI Linv1 red v)"], ["proof (state)\nthis:\n  \\<exists>fs.\n     LLL_invariant_weak fs \\<and>\n     gram_schmidt_fs.weakly_reduced n (map of_int_hom.vec_hom fs) \\<alpha>\n      m \\<and>\n     v = hd fs\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>From the soundness results of these abstract versions of the algorithms, \n  one just needs to derive actual implementations that may integrate low-level\n  optimizations.\\<close>"], ["", "end"]]}