{"file_name": "/home/qj213/afp-2021-10-22/thys/Falling_Factorial_Sum/Falling_Factorial_Sum_Induction.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Falling_Factorial_Sum", "problem_names": ["lemma ffact_add_nat:\n  \"ffact n (x + y) = (\\<Sum>k=0..n. (n choose k) * ffact k x * ffact (n - k) y)\"", "lemma ffact_add:\n  fixes x y :: \"'a::{ab_group_add, comm_semiring_1_cancel, ring_1}\"\n  shows \"ffact n (x + y) = (\\<Sum>k=0..n. of_nat (n choose k) * ffact k x * ffact (n - k) y)\""], "translations": [["", "lemma ffact_add_nat:\n  \"ffact n (x + y) = (\\<Sum>k=0..n. (n choose k) * ffact k x * ffact (n - k) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ffact n (x + y) =\n    (\\<Sum>k = 0..n. (n choose k) * ffact k x * ffact (n - k) y)", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. ffact 0 (x + y) =\n    (\\<Sum>k = 0..0. (0 choose k) * ffact k x * ffact (0 - k) y)\n 2. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. ffact 0 (x + y) =\n    (\\<Sum>k = 0..0. (0 choose k) * ffact k x * ffact (0 - k) y)\n 2. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ffact 0 (x + y) =\n    (\\<Sum>k = 0..0. (0 choose k) * ffact k x * ffact (0 - k) y)", "by simp"], ["proof (state)\nthis:\n  ffact 0 (x + y) =\n  (\\<Sum>k = 0..0. (0 choose k) * ffact k x * ffact (0 - k) y)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "case (Suc n)"], ["proof (state)\nthis:\n  ffact n (x + y) =\n  (\\<Sum>k = 0..n. (n choose k) * ffact k x * ffact (n - k) y)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "let ?s = \"\\<lambda>k. (n choose k) * ffact k x * ffact (n - k) y\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "let ?t = \"\\<lambda>k. ffact k x * ffact (Suc n - k) y\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "let ?u = \"\\<lambda>k. ffact (Suc k) x * ffact (n - k) y\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"ffact (Suc n) (x + y) = (x + y - n) * ffact n (x + y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ffact (Suc n) (x + y) = (x + y - n) * ffact n (x + y)", "by (simp add: ffact_Suc_rev_nat)"], ["proof (state)\nthis:\n  ffact (Suc n) (x + y) = (x + y - n) * ffact n (x + y)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "also"], ["proof (state)\nthis:\n  ffact (Suc n) (x + y) = (x + y - n) * ffact n (x + y)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"\\<dots> = (x + y - n) * (\\<Sum>k = 0..n. (n choose k) * ffact k x * ffact (n - k) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y - n) * ffact n (x + y) =\n    (x + y - n) *\n    (\\<Sum>k = 0..n. (n choose k) * ffact k x * ffact (n - k) y)", "using Suc.hyps"], ["proof (prove)\nusing this:\n  ffact n (x + y) =\n  (\\<Sum>k = 0..n. (n choose k) * ffact k x * ffact (n - k) y)\n\ngoal (1 subgoal):\n 1. (x + y - n) * ffact n (x + y) =\n    (x + y - n) *\n    (\\<Sum>k = 0..n. (n choose k) * ffact k x * ffact (n - k) y)", "by simp"], ["proof (state)\nthis:\n  (x + y - n) * ffact n (x + y) =\n  (x + y - n) * (\\<Sum>k = 0..n. (n choose k) * ffact k x * ffact (n - k) y)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "also"], ["proof (state)\nthis:\n  (x + y - n) * ffact n (x + y) =\n  (x + y - n) * (\\<Sum>k = 0..n. (n choose k) * ffact k x * ffact (n - k) y)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"\\<dots> = (\\<Sum>k = 0..n. ?s k * (x + y - n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y - n) *\n    (\\<Sum>k = 0..n. (n choose k) * ffact k x * ffact (n - k) y) =\n    (\\<Sum>k = 0..n.\n        (n choose k) * ffact k x * ffact (n - k) y * (x + y - n))", "by (simp add: mult.commute sum_distrib_left)"], ["proof (state)\nthis:\n  (x + y - n) *\n  (\\<Sum>k = 0..n. (n choose k) * ffact k x * ffact (n - k) y) =\n  (\\<Sum>k = 0..n. (n choose k) * ffact k x * ffact (n - k) y * (x + y - n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "also"], ["proof (state)\nthis:\n  (x + y - n) *\n  (\\<Sum>k = 0..n. (n choose k) * ffact k x * ffact (n - k) y) =\n  (\\<Sum>k = 0..n. (n choose k) * ffact k x * ffact (n - k) y * (x + y - n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"\\<dots> = (\\<Sum>k = 0..n. ?s k * ((y + k - n) + (x - k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        (n choose k) * ffact k x * ffact (n - k) y * (x + y - n)) =\n    (\\<Sum>k = 0..n.\n        (n choose k) * ffact k x * ffact (n - k) y * (y + k - n + (x - k)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        (n choose k) * ffact k x * ffact (n - k) y * (x + y - n)) =\n    (\\<Sum>k = 0..n.\n        (n choose k) * ffact k x * ffact (n - k) y * (y + k - n + (x - k)))", "have \"?s k * (x + y - n) = ?s k * ((y + k - n) + (x - k))\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. (n choose k) * ffact k x * ffact (n - k) y * (x + y - n) =\n    (n choose k) * ffact k x * ffact (n - k) y * (y + k - n + (x - k))", "by (cases \"k \\<le> x \\<or> n - k \\<le> y\") (auto simp add: ffact_nat_triv)"], ["proof (state)\nthis:\n  (n choose ?k) * ffact ?k x * ffact (n - ?k) y * (x + y - n) =\n  (n choose ?k) * ffact ?k x * ffact (n - ?k) y * (y + ?k - n + (x - ?k))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        (n choose k) * ffact k x * ffact (n - k) y * (x + y - n)) =\n    (\\<Sum>k = 0..n.\n        (n choose k) * ffact k x * ffact (n - k) y * (y + k - n + (x - k)))", "from this"], ["proof (chain)\npicking this:\n  (n choose ?k) * ffact ?k x * ffact (n - ?k) y * (x + y - n) =\n  (n choose ?k) * ffact ?k x * ffact (n - ?k) y * (y + ?k - n + (x - ?k))", "show ?thesis"], ["proof (prove)\nusing this:\n  (n choose ?k) * ffact ?k x * ffact (n - ?k) y * (x + y - n) =\n  (n choose ?k) * ffact ?k x * ffact (n - ?k) y * (y + ?k - n + (x - ?k))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        (n choose k) * ffact k x * ffact (n - k) y * (x + y - n)) =\n    (\\<Sum>k = 0..n.\n        (n choose k) * ffact k x * ffact (n - k) y * (y + k - n + (x - k)))", "by (auto intro: sum.cong simp only: refl)"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n.\n      (n choose k) * ffact k x * ffact (n - k) y * (x + y - n)) =\n  (\\<Sum>k = 0..n.\n      (n choose k) * ffact k x * ffact (n - k) y * (y + k - n + (x - k)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n.\n      (n choose k) * ffact k x * ffact (n - k) y * (x + y - n)) =\n  (\\<Sum>k = 0..n.\n      (n choose k) * ffact k x * ffact (n - k) y * (y + k - n + (x - k)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n.\n      (n choose k) * ffact k x * ffact (n - k) y * (x + y - n)) =\n  (\\<Sum>k = 0..n.\n      (n choose k) * ffact k x * ffact (n - k) y * (y + k - n + (x - k)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"\\<dots> = (\\<Sum>k = 0..n. (n choose k) * (?t k + ?u k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        (n choose k) * ffact k x * ffact (n - k) y *\n        (y + k - n + (x - k))) =\n    (\\<Sum>k = 0..n.\n        (n choose k) *\n        (ffact k x * ffact (Suc n - k) y +\n         ffact (Suc k) x * ffact (n - k) y))", "by (auto intro!: sum.cong simp add: Suc_diff_le ffact_Suc_rev_nat) algebra"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n.\n      (n choose k) * ffact k x * ffact (n - k) y * (y + k - n + (x - k))) =\n  (\\<Sum>k = 0..n.\n      (n choose k) *\n      (ffact k x * ffact (Suc n - k) y + ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n.\n      (n choose k) * ffact k x * ffact (n - k) y * (y + k - n + (x - k))) =\n  (\\<Sum>k = 0..n.\n      (n choose k) *\n      (ffact k x * ffact (Suc n - k) y + ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"\\<dots> = (\\<Sum>k = 0..n. (n choose k) * ?t k) + (\\<Sum>k = 0..n. (n choose k) * ?u k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        (n choose k) *\n        (ffact k x * ffact (Suc n - k) y +\n         ffact (Suc k) x * ffact (n - k) y)) =\n    (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y))", "by (simp add: sum.distrib add_mult_distrib2 mult.commute mult.left_commute)"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n.\n      (n choose k) *\n      (ffact k x * ffact (Suc n - k) y +\n       ffact (Suc k) x * ffact (n - k) y)) =\n  (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n  (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n.\n      (n choose k) *\n      (ffact k x * ffact (Suc n - k) y +\n       ffact (Suc k) x * ffact (n - k) y)) =\n  (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n  (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"\\<dots> = ?t 0 + (\\<Sum>k = 0..n. (n choose k + (n choose Suc k)) * ?u k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y))", "have \"\\<dots> = (?t 0 + (\\<Sum>k = 0..n. (n choose Suc k) * ?u k)) + (\\<Sum>k = 0..n. (n choose k) * ?u k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) +\n    (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) +\n    (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y))", "have \"(\\<Sum>k = Suc 0..n. (n choose k) * ?t k) = (\\<Sum>k = 0..n. (n choose Suc k) * ?u k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n    (\\<Sum>k = 0..n. (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n    (\\<Sum>k = 0..n. (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "have \"(\\<Sum>k = Suc 0..n. (n choose k) * ?t k) = (\\<Sum>k = Suc 0..Suc n. (n choose k) * ?t k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n    (\\<Sum>k = Suc 0..Suc n.\n        (n choose k) * (ffact k x * ffact (Suc n - k) y))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k = Suc 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n  (\\<Sum>k = Suc 0..Suc n. (n choose k) * (ffact k x * ffact (Suc n - k) y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n    (\\<Sum>k = 0..n. (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = Suc 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n  (\\<Sum>k = Suc 0..Suc n. (n choose k) * (ffact k x * ffact (Suc n - k) y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n    (\\<Sum>k = 0..n. (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "have \"\\<dots> = (sum ((\\<lambda>k. (n choose k) * ?t k) o Suc) {0..n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..Suc n.\n        (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n    sum ((\\<lambda>k.\n             (n choose k) * (ffact k x * ffact (Suc n - k) y)) \\<circ>\n         Suc)\n     {0..n}", "by (simp only: sum.reindex[symmetric, of Suc] inj_Suc image_Suc_atLeastAtMost)"], ["proof (state)\nthis:\n  (\\<Sum>k = Suc 0..Suc n.\n      (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n  sum ((\\<lambda>k.\n           (n choose k) * (ffact k x * ffact (Suc n - k) y)) \\<circ>\n       Suc)\n   {0..n}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n    (\\<Sum>k = 0..n. (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = Suc 0..Suc n.\n      (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n  sum ((\\<lambda>k.\n           (n choose k) * (ffact k x * ffact (Suc n - k) y)) \\<circ>\n       Suc)\n   {0..n}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n    (\\<Sum>k = 0..n. (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "have \"\\<dots> = (\\<Sum>k = 0..n. (n choose Suc k) * ?u k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((\\<lambda>k.\n             (n choose k) * (ffact k x * ffact (Suc n - k) y)) \\<circ>\n         Suc)\n     {0..n} =\n    (\\<Sum>k = 0..n. (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "by simp"], ["proof (state)\nthis:\n  sum ((\\<lambda>k.\n           (n choose k) * (ffact k x * ffact (Suc n - k) y)) \\<circ>\n       Suc)\n   {0..n} =\n  (\\<Sum>k = 0..n. (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n    (\\<Sum>k = 0..n. (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k = Suc 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n  (\\<Sum>k = 0..n. (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k = Suc 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n  (\\<Sum>k = 0..n. (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n    (\\<Sum>k = 0..n. (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "."], ["proof (state)\nthis:\n  (\\<Sum>k = Suc 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n  (\\<Sum>k = 0..n. (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k = Suc 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n  (\\<Sum>k = 0..n. (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) +\n    (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y))", "from this"], ["proof (chain)\npicking this:\n  (\\<Sum>k = Suc 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n  (\\<Sum>k = 0..n. (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k = Suc 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n  (\\<Sum>k = 0..n. (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) +\n    (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y))", "by (simp add: sum.atLeast_Suc_atMost[of _ _ \"\\<lambda>k. (n choose k) * ?t k\"])"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n  (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n. (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) +\n  (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n  (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n. (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) +\n  (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y))", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n  (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n. (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) +\n  (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y))", "have \"\\<dots> = ?t 0 + (\\<Sum>k = 0..n. (n choose k + (n choose Suc k)) * ?u k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) +\n    (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y))", "by (simp add: distrib_right sum.distrib)"], ["proof (state)\nthis:\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n. (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) +\n  (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      (n choose k + (n choose Suc k)) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n  (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      (n choose k + (n choose Suc k)) * (ffact (Suc k) x * ffact (n - k) y))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n  (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      (n choose k + (n choose Suc k)) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y))", "."], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n  (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      (n choose k + (n choose Suc k)) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n  (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      (n choose k + (n choose Suc k)) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n. (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n  (\\<Sum>k = 0..n. (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      (n choose k + (n choose Suc k)) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"\\<dots> = (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y)) =\n    (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y)) =\n    (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "let ?v = \"\\<lambda>k. (Suc n choose k) * ffact k x * ffact (Suc n - k) y\""], ["proof (state)\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y)) =\n    (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"\\<dots> = ?v 0 + (\\<Sum>k = 0..n. (Suc n choose (Suc k)) * ?u k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y)) =\n    (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (Suc n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "by simp"], ["proof (state)\nthis:\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      (n choose k + (n choose Suc k)) *\n      (ffact (Suc k) x * ffact (n - k) y)) =\n  (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      (Suc n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y)) =\n    (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "also"], ["proof (state)\nthis:\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      (n choose k + (n choose Suc k)) *\n      (ffact (Suc k) x * ffact (n - k) y)) =\n  (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      (Suc n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y)) =\n    (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"\\<dots> = ?v 0 + (\\<Sum>k = Suc 0..Suc n. ?v k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (Suc n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = Suc 0..Suc n.\n        (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "by (simp only: sum.shift_bounds_cl_Suc_ivl diff_Suc_Suc mult.assoc)"], ["proof (state)\nthis:\n  (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      (Suc n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = Suc 0..Suc n.\n      (Suc n choose k) * ffact k x * ffact (Suc n - k) y)\n\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y)) =\n    (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "also"], ["proof (state)\nthis:\n  (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      (Suc n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = Suc 0..Suc n.\n      (Suc n choose k) * ffact k x * ffact (Suc n - k) y)\n\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y)) =\n    (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"\\<dots> = (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = Suc 0..Suc n.\n        (Suc n choose k) * ffact k x * ffact (Suc n - k) y) =\n    (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "by (simp add: sum.atLeast_Suc_atMost)"], ["proof (state)\nthis:\n  (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = Suc 0..Suc n.\n      (Suc n choose k) * ffact k x * ffact (Suc n - k) y) =\n  (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)\n\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y)) =\n    (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "finally"], ["proof (chain)\npicking this:\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      (n choose k + (n choose Suc k)) *\n      (ffact (Suc k) x * ffact (n - k) y)) =\n  (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "show ?thesis"], ["proof (prove)\nusing this:\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      (n choose k + (n choose Suc k)) *\n      (ffact (Suc k) x * ffact (n - k) y)) =\n  (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)\n\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y)) =\n    (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "."], ["proof (state)\nthis:\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      (n choose k + (n choose Suc k)) *\n      (ffact (Suc k) x * ffact (n - k) y)) =\n  (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      (n choose k + (n choose Suc k)) *\n      (ffact (Suc k) x * ffact (n - k) y)) =\n  (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           (n choose k) * ffact k x * ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "finally"], ["proof (chain)\npicking this:\n  ffact (Suc n) (x + y) =\n  (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "show ?case"], ["proof (prove)\nusing this:\n  ffact (Suc n) (x + y) =\n  (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)\n\ngoal (1 subgoal):\n 1. ffact (Suc n) (x + y) =\n    (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "."], ["proof (state)\nthis:\n  ffact (Suc n) (x + y) =\n  (\\<Sum>k = 0..Suc n. (Suc n choose k) * ffact k x * ffact (Suc n - k) y)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* TODO: what's the right class here? *)"], ["", "lemma ffact_add:\n  fixes x y :: \"'a::{ab_group_add, comm_semiring_1_cancel, ring_1}\"\n  shows \"ffact n (x + y) = (\\<Sum>k=0..n. of_nat (n choose k) * ffact k x * ffact (n - k) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ffact n (x + y) =\n    (\\<Sum>k = 0..n. of_nat (n choose k) * ffact k x * ffact (n - k) y)", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. ffact 0 (x + y) =\n    (\\<Sum>k = 0..0. of_nat (0 choose k) * ffact k x * ffact (0 - k) y)\n 2. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. ffact 0 (x + y) =\n    (\\<Sum>k = 0..0. of_nat (0 choose k) * ffact k x * ffact (0 - k) y)\n 2. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ffact 0 (x + y) =\n    (\\<Sum>k = 0..0. of_nat (0 choose k) * ffact k x * ffact (0 - k) y)", "by simp"], ["proof (state)\nthis:\n  ffact 0 (x + y) =\n  (\\<Sum>k = 0..0. of_nat (0 choose k) * ffact k x * ffact (0 - k) y)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "case (Suc n)"], ["proof (state)\nthis:\n  ffact n (x + y) =\n  (\\<Sum>k = 0..n. of_nat (n choose k) * ffact k x * ffact (n - k) y)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "let ?s = \"\\<lambda>k. of_nat (n choose k) * ffact k x * ffact (n - k) y\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "let ?t = \"\\<lambda>k. ffact k x * ffact (Suc n - k) y\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "let ?u = \"\\<lambda>k. ffact (Suc k) x * ffact (n - k) y\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"ffact (Suc n) (x + y) = (x + y - of_nat n) * ffact n (x + y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ffact (Suc n) (x + y) = (x + y - of_nat n) * ffact n (x + y)", "by (simp add: ffact_Suc_rev)"], ["proof (state)\nthis:\n  ffact (Suc n) (x + y) = (x + y - of_nat n) * ffact n (x + y)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "also"], ["proof (state)\nthis:\n  ffact (Suc n) (x + y) = (x + y - of_nat n) * ffact n (x + y)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"\\<dots> = (x + y - of_nat n) * (\\<Sum>k = 0..n. of_nat (n choose k) * ffact k x * ffact (n - k) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y - of_nat n) * ffact n (x + y) =\n    (x + y - of_nat n) *\n    (\\<Sum>k = 0..n. of_nat (n choose k) * ffact k x * ffact (n - k) y)", "using Suc.hyps"], ["proof (prove)\nusing this:\n  ffact n (x + y) =\n  (\\<Sum>k = 0..n. of_nat (n choose k) * ffact k x * ffact (n - k) y)\n\ngoal (1 subgoal):\n 1. (x + y - of_nat n) * ffact n (x + y) =\n    (x + y - of_nat n) *\n    (\\<Sum>k = 0..n. of_nat (n choose k) * ffact k x * ffact (n - k) y)", "by simp"], ["proof (state)\nthis:\n  (x + y - of_nat n) * ffact n (x + y) =\n  (x + y - of_nat n) *\n  (\\<Sum>k = 0..n. of_nat (n choose k) * ffact k x * ffact (n - k) y)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "also"], ["proof (state)\nthis:\n  (x + y - of_nat n) * ffact n (x + y) =\n  (x + y - of_nat n) *\n  (\\<Sum>k = 0..n. of_nat (n choose k) * ffact k x * ffact (n - k) y)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"\\<dots> = (\\<Sum>k = 0..n. ?s k * (x + y - of_nat n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y - of_nat n) *\n    (\\<Sum>k = 0..n. of_nat (n choose k) * ffact k x * ffact (n - k) y) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) * ffact k x * ffact (n - k) y *\n        (x + y - of_nat n))", "by (simp add: mult.commute sum_distrib_left)"], ["proof (state)\nthis:\n  (x + y - of_nat n) *\n  (\\<Sum>k = 0..n. of_nat (n choose k) * ffact k x * ffact (n - k) y) =\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * ffact k x * ffact (n - k) y *\n      (x + y - of_nat n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "also"], ["proof (state)\nthis:\n  (x + y - of_nat n) *\n  (\\<Sum>k = 0..n. of_nat (n choose k) * ffact k x * ffact (n - k) y) =\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * ffact k x * ffact (n - k) y *\n      (x + y - of_nat n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"\\<dots> = (\\<Sum>k = 0..n. ?s k * ((y + of_nat k - of_nat n) + (x - of_nat k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * ffact k x * ffact (n - k) y *\n        (x + y - of_nat n)) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) * ffact k x * ffact (n - k) y *\n        (y + of_nat k - of_nat n + (x - of_nat k)))", "by (auto intro: sum.cong simp add: diff_add_eq add_diff_eq add.commute)"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * ffact k x * ffact (n - k) y *\n      (x + y - of_nat n)) =\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * ffact k x * ffact (n - k) y *\n      (y + of_nat k - of_nat n + (x - of_nat k)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * ffact k x * ffact (n - k) y *\n      (x + y - of_nat n)) =\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * ffact k x * ffact (n - k) y *\n      (y + of_nat k - of_nat n + (x - of_nat k)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"\\<dots> = (\\<Sum>k = 0..n. of_nat (n choose k) * (?t k + ?u k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * ffact k x * ffact (n - k) y *\n        (y + of_nat k - of_nat n + (x - of_nat k))) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) *\n        (ffact k x * ffact (Suc n - k) y +\n         ffact (Suc k) x * ffact (n - k) y))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * ffact k x * ffact (n - k) y *\n        (y + of_nat k - of_nat n + (x - of_nat k))) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) *\n        (ffact k x * ffact (Suc n - k) y +\n         ffact (Suc k) x * ffact (n - k) y))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * ffact k x * ffact (n - k) y *\n        (y + of_nat k - of_nat n + (x - of_nat k))) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) *\n        (ffact k x * ffact (Suc n - k) y +\n         ffact (Suc k) x * ffact (n - k) y))", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * ffact k x * ffact (n - k) y *\n        (y + of_nat k - of_nat n + (x - of_nat k))) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) *\n        (ffact k x * ffact (Suc n - k) y +\n         ffact (Suc k) x * ffact (n - k) y))", "assume \"k \\<le> n\""], ["proof (state)\nthis:\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * ffact k x * ffact (n - k) y *\n        (y + of_nat k - of_nat n + (x - of_nat k))) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) *\n        (ffact k x * ffact (Suc n - k) y +\n         ffact (Suc k) x * ffact (n - k) y))", "have \"?u k = ffact k x * ffact (n - k) y * (x - of_nat k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ffact (Suc k) x * ffact (n - k) y =\n    ffact k x * ffact (n - k) y * (x - of_nat k)", "by (simp add: ffact_Suc_rev Suc_diff_le of_nat_diff mult.commute mult.left_commute)"], ["proof (state)\nthis:\n  ffact (Suc k) x * ffact (n - k) y =\n  ffact k x * ffact (n - k) y * (x - of_nat k)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * ffact k x * ffact (n - k) y *\n        (y + of_nat k - of_nat n + (x - of_nat k))) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) *\n        (ffact k x * ffact (Suc n - k) y +\n         ffact (Suc k) x * ffact (n - k) y))", "moreover"], ["proof (state)\nthis:\n  ffact (Suc k) x * ffact (n - k) y =\n  ffact k x * ffact (n - k) y * (x - of_nat k)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * ffact k x * ffact (n - k) y *\n        (y + of_nat k - of_nat n + (x - of_nat k))) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) *\n        (ffact k x * ffact (Suc n - k) y +\n         ffact (Suc k) x * ffact (n - k) y))", "from \\<open>k \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  k \\<le> n", "have \"?t k = ffact k x * ffact (n - k) y * (y + of_nat k - of_nat n)\""], ["proof (prove)\nusing this:\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. ffact k x * ffact (Suc n - k) y =\n    ffact k x * ffact (n - k) y * (y + of_nat k - of_nat n)", "by (simp add: ffact_Suc_rev Suc_diff_le of_nat_diff diff_diff_eq2 mult.commute mult.left_commute)"], ["proof (state)\nthis:\n  ffact k x * ffact (Suc n - k) y =\n  ffact k x * ffact (n - k) y * (y + of_nat k - of_nat n)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * ffact k x * ffact (n - k) y *\n        (y + of_nat k - of_nat n + (x - of_nat k))) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) *\n        (ffact k x * ffact (Suc n - k) y +\n         ffact (Suc k) x * ffact (n - k) y))", "ultimately"], ["proof (chain)\npicking this:\n  ffact (Suc k) x * ffact (n - k) y =\n  ffact k x * ffact (n - k) y * (x - of_nat k)\n  ffact k x * ffact (Suc n - k) y =\n  ffact k x * ffact (n - k) y * (y + of_nat k - of_nat n)", "have\n        \"?s k * ((y + of_nat k - of_nat n) + (x - of_nat k)) = of_nat (n choose k) * (?t k + ?u k)\""], ["proof (prove)\nusing this:\n  ffact (Suc k) x * ffact (n - k) y =\n  ffact k x * ffact (n - k) y * (x - of_nat k)\n  ffact k x * ffact (Suc n - k) y =\n  ffact k x * ffact (n - k) y * (y + of_nat k - of_nat n)\n\ngoal (1 subgoal):\n 1. of_nat (n choose k) * ffact k x * ffact (n - k) y *\n    (y + of_nat k - of_nat n + (x - of_nat k)) =\n    of_nat (n choose k) *\n    (ffact k x * ffact (Suc n - k) y + ffact (Suc k) x * ffact (n - k) y)", "by (metis (no_types, lifting) distrib_left mult.assoc)"], ["proof (state)\nthis:\n  of_nat (n choose k) * ffact k x * ffact (n - k) y *\n  (y + of_nat k - of_nat n + (x - of_nat k)) =\n  of_nat (n choose k) *\n  (ffact k x * ffact (Suc n - k) y + ffact (Suc k) x * ffact (n - k) y)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * ffact k x * ffact (n - k) y *\n        (y + of_nat k - of_nat n + (x - of_nat k))) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) *\n        (ffact k x * ffact (Suc n - k) y +\n         ffact (Suc k) x * ffact (n - k) y))", "}"], ["proof (state)\nthis:\n  ?k2 \\<le> n \\<Longrightarrow>\n  of_nat (n choose ?k2) * ffact ?k2 x * ffact (n - ?k2) y *\n  (y + of_nat ?k2 - of_nat n + (x - of_nat ?k2)) =\n  of_nat (n choose ?k2) *\n  (ffact ?k2 x * ffact (Suc n - ?k2) y +\n   ffact (Suc ?k2) x * ffact (n - ?k2) y)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * ffact k x * ffact (n - k) y *\n        (y + of_nat k - of_nat n + (x - of_nat k))) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) *\n        (ffact k x * ffact (Suc n - k) y +\n         ffact (Suc k) x * ffact (n - k) y))", "from this"], ["proof (chain)\npicking this:\n  ?k2 \\<le> n \\<Longrightarrow>\n  of_nat (n choose ?k2) * ffact ?k2 x * ffact (n - ?k2) y *\n  (y + of_nat ?k2 - of_nat n + (x - of_nat ?k2)) =\n  of_nat (n choose ?k2) *\n  (ffact ?k2 x * ffact (Suc n - ?k2) y +\n   ffact (Suc ?k2) x * ffact (n - ?k2) y)", "show ?thesis"], ["proof (prove)\nusing this:\n  ?k2 \\<le> n \\<Longrightarrow>\n  of_nat (n choose ?k2) * ffact ?k2 x * ffact (n - ?k2) y *\n  (y + of_nat ?k2 - of_nat n + (x - of_nat ?k2)) =\n  of_nat (n choose ?k2) *\n  (ffact ?k2 x * ffact (Suc n - ?k2) y +\n   ffact (Suc ?k2) x * ffact (n - ?k2) y)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * ffact k x * ffact (n - k) y *\n        (y + of_nat k - of_nat n + (x - of_nat k))) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) *\n        (ffact k x * ffact (Suc n - k) y +\n         ffact (Suc k) x * ffact (n - k) y))", "by (auto intro: sum.cong)"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * ffact k x * ffact (n - k) y *\n      (y + of_nat k - of_nat n + (x - of_nat k))) =\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) *\n      (ffact k x * ffact (Suc n - k) y + ffact (Suc k) x * ffact (n - k) y))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * ffact k x * ffact (n - k) y *\n      (y + of_nat k - of_nat n + (x - of_nat k))) =\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) *\n      (ffact k x * ffact (Suc n - k) y + ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * ffact k x * ffact (n - k) y *\n      (y + of_nat k - of_nat n + (x - of_nat k))) =\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) *\n      (ffact k x * ffact (Suc n - k) y + ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"\\<dots> = (\\<Sum>k = 0..n. of_nat (n choose k) * ?t k) + (\\<Sum>k = 0..n. of_nat (n choose k) * ?u k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) *\n        (ffact k x * ffact (Suc n - k) y +\n         ffact (Suc k) x * ffact (n - k) y)) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y))", "by (simp add: sum.distrib distrib_left mult.commute mult.left_commute)"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) *\n      (ffact k x * ffact (Suc n - k) y +\n       ffact (Suc k) x * ffact (n - k) y)) =\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) *\n      (ffact k x * ffact (Suc n - k) y +\n       ffact (Suc k) x * ffact (n - k) y)) =\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"\\<dots> = ?t 0 + (\\<Sum>k = 0..n. of_nat (n choose k + (n choose Suc k)) * ?u k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y))", "have \"\\<dots> = (?t 0 + (\\<Sum>k = 0..n. of_nat (n choose Suc k) * ?u k)) + (\\<Sum>k = 0..n. of_nat (n choose k) * ?u k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y))", "have \"(\\<Sum>k = Suc 0..n. of_nat (n choose k) * ?t k) = (\\<Sum>k = 0..n. of_nat (n choose Suc k) * ?u k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "have \"(\\<Sum>k = Suc 0..n. of_nat (n choose k) * ?t k) = (\\<Sum>k = Suc 0..Suc n. of_nat (n choose k) * ?t k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n    (\\<Sum>k = Suc 0..Suc n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y))", "by (simp add: binomial_eq_0)"], ["proof (state)\nthis:\n  (\\<Sum>k = Suc 0..n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n  (\\<Sum>k = Suc 0..Suc n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = Suc 0..n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n  (\\<Sum>k = Suc 0..Suc n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "have \"\\<dots> = (sum ((\\<lambda>k. of_nat (n choose k) * ?t k) o Suc) {0..n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..Suc n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n    sum ((\\<lambda>k.\n             of_nat (n choose k) *\n             (ffact k x * ffact (Suc n - k) y)) \\<circ>\n         Suc)\n     {0..n}", "by (simp only: sum.reindex[symmetric, of Suc] inj_Suc image_Suc_atLeastAtMost)"], ["proof (state)\nthis:\n  (\\<Sum>k = Suc 0..Suc n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n  sum ((\\<lambda>k.\n           of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) \\<circ>\n       Suc)\n   {0..n}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = Suc 0..Suc n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n  sum ((\\<lambda>k.\n           of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) \\<circ>\n       Suc)\n   {0..n}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "have \"\\<dots> = (\\<Sum>k = 0..n. of_nat (n choose Suc k) * ?u k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((\\<lambda>k.\n             of_nat (n choose k) *\n             (ffact k x * ffact (Suc n - k) y)) \\<circ>\n         Suc)\n     {0..n} =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "by simp"], ["proof (state)\nthis:\n  sum ((\\<lambda>k.\n           of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) \\<circ>\n       Suc)\n   {0..n} =\n  (\\<Sum>k = 0..n.\n      of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k = Suc 0..n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n  (\\<Sum>k = 0..n.\n      of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k = Suc 0..n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n  (\\<Sum>k = 0..n.\n      of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n    (\\<Sum>k = 0..n.\n        of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "."], ["proof (state)\nthis:\n  (\\<Sum>k = Suc 0..n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n  (\\<Sum>k = 0..n.\n      of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k = Suc 0..n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n  (\\<Sum>k = 0..n.\n      of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y))", "from this"], ["proof (chain)\npicking this:\n  (\\<Sum>k = Suc 0..n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n  (\\<Sum>k = 0..n.\n      of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k = Suc 0..n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) =\n  (\\<Sum>k = 0..n.\n      of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y))", "by (simp add: sum.atLeast_Suc_atMost[of _ _ \"\\<lambda>k. of_nat (n choose k) * ?t k\"])"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y))", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y))", "have \"\\<dots> = ?t 0 + (\\<Sum>k = 0..n. of_nat (n choose k + (n choose Suc k)) * ?u k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y))", "by (simp add: distrib_right sum.distrib)"], ["proof (state)\nthis:\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k + (n choose Suc k)) *\n      (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k + (n choose Suc k)) *\n      (ffact (Suc k) x * ffact (n - k) y))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k + (n choose Suc k)) *\n      (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y))", "."], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k + (n choose Suc k)) *\n      (ffact (Suc k) x * ffact (n - k) y))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k + (n choose Suc k)) *\n      (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact k x * ffact (Suc n - k) y)) +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k + (n choose Suc k)) *\n      (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"\\<dots> = (\\<Sum>k = 0..Suc n. of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y)) =\n    (\\<Sum>k = 0..Suc n.\n        of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y)) =\n    (\\<Sum>k = 0..Suc n.\n        of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "let ?v = \"\\<lambda>k. of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y\""], ["proof (state)\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y)) =\n    (\\<Sum>k = 0..Suc n.\n        of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"\\<dots> = ?v 0 + (\\<Sum>k = 0..n. of_nat (Suc n choose (Suc k)) * ?u k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y)) =\n    of_nat (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (Suc n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))", "by simp"], ["proof (state)\nthis:\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k + (n choose Suc k)) *\n      (ffact (Suc k) x * ffact (n - k) y)) =\n  of_nat (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      of_nat (Suc n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y)) =\n    (\\<Sum>k = 0..Suc n.\n        of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "also"], ["proof (state)\nthis:\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k + (n choose Suc k)) *\n      (ffact (Suc k) x * ffact (n - k) y)) =\n  of_nat (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      of_nat (Suc n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y))\n\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y)) =\n    (\\<Sum>k = 0..Suc n.\n        of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"\\<dots> = ?v 0 + (\\<Sum>k = Suc 0..Suc n. ?v k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (Suc n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) =\n    of_nat (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = Suc 0..Suc n.\n        of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "by (simp only: sum.shift_bounds_cl_Suc_ivl diff_Suc_Suc mult.assoc)"], ["proof (state)\nthis:\n  of_nat (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      of_nat (Suc n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  of_nat (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = Suc 0..Suc n.\n      of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)\n\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y)) =\n    (\\<Sum>k = 0..Suc n.\n        of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "also"], ["proof (state)\nthis:\n  of_nat (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      of_nat (Suc n choose Suc k) * (ffact (Suc k) x * ffact (n - k) y)) =\n  of_nat (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = Suc 0..Suc n.\n      of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)\n\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y)) =\n    (\\<Sum>k = 0..Suc n.\n        of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "have \"\\<dots> = (\\<Sum>k = 0..Suc n. of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = Suc 0..Suc n.\n        of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y) =\n    (\\<Sum>k = 0..Suc n.\n        of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "by (simp add: sum.atLeast_Suc_atMost)"], ["proof (state)\nthis:\n  of_nat (Suc n choose 0) * ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = Suc 0..Suc n.\n      of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y) =\n  (\\<Sum>k = 0..Suc n.\n      of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)\n\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y)) =\n    (\\<Sum>k = 0..Suc n.\n        of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "finally"], ["proof (chain)\npicking this:\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k + (n choose Suc k)) *\n      (ffact (Suc k) x * ffact (n - k) y)) =\n  (\\<Sum>k = 0..Suc n.\n      of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "show ?thesis"], ["proof (prove)\nusing this:\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k + (n choose Suc k)) *\n      (ffact (Suc k) x * ffact (n - k) y)) =\n  (\\<Sum>k = 0..Suc n.\n      of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)\n\ngoal (1 subgoal):\n 1. ffact 0 x * ffact (Suc n - 0) y +\n    (\\<Sum>k = 0..n.\n        of_nat (n choose k + (n choose Suc k)) *\n        (ffact (Suc k) x * ffact (n - k) y)) =\n    (\\<Sum>k = 0..Suc n.\n        of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "."], ["proof (state)\nthis:\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k + (n choose Suc k)) *\n      (ffact (Suc k) x * ffact (n - k) y)) =\n  (\\<Sum>k = 0..Suc n.\n      of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ffact 0 x * ffact (Suc n - 0) y +\n  (\\<Sum>k = 0..n.\n      of_nat (n choose k + (n choose Suc k)) *\n      (ffact (Suc k) x * ffact (n - k) y)) =\n  (\\<Sum>k = 0..Suc n.\n      of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ffact n (x + y) =\n       (\\<Sum>k = 0..n.\n           of_nat (n choose k) * ffact k x *\n           ffact (n - k) y) \\<Longrightarrow>\n       ffact (Suc n) (x + y) =\n       (\\<Sum>k = 0..Suc n.\n           of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "finally"], ["proof (chain)\npicking this:\n  ffact (Suc n) (x + y) =\n  (\\<Sum>k = 0..Suc n.\n      of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "show ?case"], ["proof (prove)\nusing this:\n  ffact (Suc n) (x + y) =\n  (\\<Sum>k = 0..Suc n.\n      of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)\n\ngoal (1 subgoal):\n 1. ffact (Suc n) (x + y) =\n    (\\<Sum>k = 0..Suc n.\n        of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)", "."], ["proof (state)\nthis:\n  ffact (Suc n) (x + y) =\n  (\\<Sum>k = 0..Suc n.\n      of_nat (Suc n choose k) * ffact k x * ffact (Suc n - k) y)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}