{"file_name": "/home/qj213/afp-2021-10-22/thys/Falling_Factorial_Sum/Falling_Factorial_Sum_Vandermonde.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Falling_Factorial_Sum", "problem_names": ["lemma ffact_add_nat:\n  shows \"ffact k (n + m) = (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)\""], "translations": [["", "lemma ffact_add_nat:\n  shows \"ffact k (n + m) = (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ffact k (n + m) =\n    (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ffact k (n + m) =\n    (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)", "have \"ffact k (n + m) = fact k * ((n + m) choose k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ffact k (n + m) = fact k * (n + m choose k)", "by (simp only: ffact_eq_fact_mult_binomial)"], ["proof (state)\nthis:\n  ffact k (n + m) = fact k * (n + m choose k)\n\ngoal (1 subgoal):\n 1. ffact k (n + m) =\n    (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)", "also"], ["proof (state)\nthis:\n  ffact k (n + m) = fact k * (n + m choose k)\n\ngoal (1 subgoal):\n 1. ffact k (n + m) =\n    (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)", "have \"\\<dots> = fact k * (\\<Sum>i\\<le>k. (n choose i) * (m choose (k - i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fact k * (n + m choose k) =\n    fact k * (\\<Sum>i\\<le>k. (n choose i) * (m choose (k - i)))", "by (simp only: vandermonde)"], ["proof (state)\nthis:\n  fact k * (n + m choose k) =\n  fact k * (\\<Sum>i\\<le>k. (n choose i) * (m choose (k - i)))\n\ngoal (1 subgoal):\n 1. ffact k (n + m) =\n    (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)", "also"], ["proof (state)\nthis:\n  fact k * (n + m choose k) =\n  fact k * (\\<Sum>i\\<le>k. (n choose i) * (m choose (k - i)))\n\ngoal (1 subgoal):\n 1. ffact k (n + m) =\n    (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)", "have \"\\<dots> = (\\<Sum>i\\<le>k. fact k * (n choose i) * (m choose (k - i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fact k * (\\<Sum>i\\<le>k. (n choose i) * (m choose (k - i))) =\n    (\\<Sum>i\\<le>k. fact k * (n choose i) * (m choose (k - i)))", "by (simp add: sum_distrib_left field_simps)"], ["proof (state)\nthis:\n  fact k * (\\<Sum>i\\<le>k. (n choose i) * (m choose (k - i))) =\n  (\\<Sum>i\\<le>k. fact k * (n choose i) * (m choose (k - i)))\n\ngoal (1 subgoal):\n 1. ffact k (n + m) =\n    (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)", "also"], ["proof (state)\nthis:\n  fact k * (\\<Sum>i\\<le>k. (n choose i) * (m choose (k - i))) =\n  (\\<Sum>i\\<le>k. fact k * (n choose i) * (m choose (k - i)))\n\ngoal (1 subgoal):\n 1. ffact k (n + m) =\n    (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)", "have \"\\<dots> = (\\<Sum>i\\<le>k. (fact i * fact (k - i) * (k choose i)) * (n choose i) * (m choose (k - i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<le>k. fact k * (n choose i) * (m choose (k - i))) =\n    (\\<Sum>i\\<le>k.\n        fact i * fact (k - i) * (k choose i) * (n choose i) *\n        (m choose (k - i)))", "by (simp add: binomial_fact_lemma)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<le>k. fact k * (n choose i) * (m choose (k - i))) =\n  (\\<Sum>i\\<le>k.\n      fact i * fact (k - i) * (k choose i) * (n choose i) *\n      (m choose (k - i)))\n\ngoal (1 subgoal):\n 1. ffact k (n + m) =\n    (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<le>k. fact k * (n choose i) * (m choose (k - i))) =\n  (\\<Sum>i\\<le>k.\n      fact i * fact (k - i) * (k choose i) * (n choose i) *\n      (m choose (k - i)))\n\ngoal (1 subgoal):\n 1. ffact k (n + m) =\n    (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)", "have \"\\<dots> = (\\<Sum>i\\<le>k. (k choose i) * (fact i * (n choose i)) * (fact (k - i) * (m choose (k - i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<le>k.\n        fact i * fact (k - i) * (k choose i) * (n choose i) *\n        (m choose (k - i))) =\n    (\\<Sum>i\\<le>k.\n        (k choose i) * (fact i * (n choose i)) *\n        (fact (k - i) * (m choose (k - i))))", "by (auto intro: sum.cong)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<le>k.\n      fact i * fact (k - i) * (k choose i) * (n choose i) *\n      (m choose (k - i))) =\n  (\\<Sum>i\\<le>k.\n      (k choose i) * (fact i * (n choose i)) *\n      (fact (k - i) * (m choose (k - i))))\n\ngoal (1 subgoal):\n 1. ffact k (n + m) =\n    (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<le>k.\n      fact i * fact (k - i) * (k choose i) * (n choose i) *\n      (m choose (k - i))) =\n  (\\<Sum>i\\<le>k.\n      (k choose i) * (fact i * (n choose i)) *\n      (fact (k - i) * (m choose (k - i))))\n\ngoal (1 subgoal):\n 1. ffact k (n + m) =\n    (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)", "have \"\\<dots> = (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<le>k.\n        (k choose i) * (fact i * (n choose i)) *\n        (fact (k - i) * (m choose (k - i)))) =\n    (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)", "by (simp only: ffact_eq_fact_mult_binomial)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<le>k.\n      (k choose i) * (fact i * (n choose i)) *\n      (fact (k - i) * (m choose (k - i)))) =\n  (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)\n\ngoal (1 subgoal):\n 1. ffact k (n + m) =\n    (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)", "finally"], ["proof (chain)\npicking this:\n  ffact k (n + m) =\n  (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)", "show ?thesis"], ["proof (prove)\nusing this:\n  ffact k (n + m) =\n  (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)\n\ngoal (1 subgoal):\n 1. ffact k (n + m) =\n    (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)", "."], ["proof (state)\nthis:\n  ffact k (n + m) =\n  (\\<Sum>i\\<le>k. (k choose i) * ffact i n * ffact (k - i) m)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}