{"file_name": "/home/qj213/afp-2021-10-22/thys/Polynomial_Interpolation/Is_Rat_To_Rat.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Polynomial_Interpolation", "problem_names": ["lemma of_rat_to_rat[simp]: \"x \\<in> \\<rat> \\<Longrightarrow> of_rat (to_rat x) = x\"", "lemma to_rat_of_rat[simp]: \"to_rat (of_rat x) = x\"", "lemma of_nat_complex: \"of_nat n = Complex (of_nat n) 0\"", "lemma of_int_complex: \"of_int z = Complex (of_int z) 0\"", "lemma of_rat_complex: \"of_rat q = Complex (of_rat q) 0\"", "lemma complex_of_real_of_rat[simp]: \"complex_of_real (real_of_rat q) = of_rat q\"", "lemma is_rat_complex_iff: \"x \\<in> \\<rat> \\<longleftrightarrow> Re x \\<in> \\<rat> \\<and> Im x = 0\"", "lemma [code_unfold]: \"(x \\<in> \\<rat>) = (is_rat x)\"", "lemma is_int_rat[simp]: \"is_int_rat x = (x \\<in> \\<int>)\"", "lemma int_of_rat[simp]: \"int_of_rat (rat_of_int x) = x\" \"z \\<in> \\<int> \\<Longrightarrow> rat_of_int (int_of_rat z) = z\"", "lemma int_of_rat_0[simp]: \"(int_of_rat x = 0) = (x = 0)\""], "translations": [["", "lemma of_rat_to_rat[simp]: \"x \\<in> \\<rat> \\<Longrightarrow> of_rat (to_rat x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> \\<rat> \\<Longrightarrow> of_rat (to_rat x) = x", "unfolding to_rat Rats_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> range of_rat \\<Longrightarrow>\n    of_rat (if x \\<in> range of_rat then THE y. x = of_rat y else 0) = x", "by auto"], ["", "lemma to_rat_of_rat[simp]: \"to_rat (of_rat x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_rat (of_rat x) = x", "unfolding to_rat"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if of_rat x \\<in> \\<rat> then THE y. of_rat x = of_rat y else 0) = x", "by simp"], ["", "instantiation rat :: is_rat\nbegin"], ["", "definition \"is_rat_rat (x :: rat) = True\""], ["", "definition \"to_rat_rat (x :: rat) = x\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(rat, is_rat_class)", "by (intro_classes, auto simp: is_rat_rat_def to_rat_rat_def Rats_def)"], ["", "end"], ["", "text \\<open>The definition for reals at the moment is not executable, but it will become\n  executable after loading the real algebraic numbers theory.\\<close>"], ["", "instantiation real :: is_rat\nbegin"], ["", "definition \"is_rat_real (x :: real) = (x \\<in> \\<rat>)\""], ["", "definition \"to_rat_real (x :: real) = (if x \\<in> \\<rat> then (THE y. x = of_rat y) else 0)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(real, is_rat_class)", "by (intro_classes, auto simp: is_rat_real_def to_rat_real_def)"], ["", "end"], ["", "lemma of_nat_complex: \"of_nat n = Complex (of_nat n) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat n = Complex (real n) 0", "by (simp add: complex_eqI)"], ["", "lemma of_int_complex: \"of_int z = Complex (of_int z) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_int z = Complex (real_of_int z) 0", "by (simp add: complex_eq_iff)"], ["", "lemma of_rat_complex: \"of_rat q = Complex (of_rat q) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_rat q = Complex (real_of_rat q) 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. of_rat q = Complex (real_of_rat q) 0", "obtain d n where dn: \"quotient_of q = (d,n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d n.\n        quotient_of q = (d, n) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  quotient_of q = (d, n)\n\ngoal (1 subgoal):\n 1. of_rat q = Complex (real_of_rat q) 0", "from quotient_of_div[OF dn]"], ["proof (chain)\npicking this:\n  q = rat_of_int d / rat_of_int n", "have q: \"q = of_int d / of_int n\""], ["proof (prove)\nusing this:\n  q = rat_of_int d / rat_of_int n\n\ngoal (1 subgoal):\n 1. q = rat_of_int d / rat_of_int n", "by auto"], ["proof (state)\nthis:\n  q = rat_of_int d / rat_of_int n\n\ngoal (1 subgoal):\n 1. of_rat q = Complex (real_of_rat q) 0", "then"], ["proof (chain)\npicking this:\n  q = rat_of_int d / rat_of_int n", "have \"of_rat q = complex_of_real (real_of_rat q) \\<or> (0::complex) = of_int n \\<or> 0 = real_of_int n\""], ["proof (prove)\nusing this:\n  q = rat_of_int d / rat_of_int n\n\ngoal (1 subgoal):\n 1. of_rat q = complex_of_real (real_of_rat q) \\<or>\n    0 = of_int n \\<or> 0 = real_of_int n", "by (simp add: of_rat_divide q)"], ["proof (state)\nthis:\n  of_rat q = complex_of_real (real_of_rat q) \\<or>\n  0 = of_int n \\<or> 0 = real_of_int n\n\ngoal (1 subgoal):\n 1. of_rat q = Complex (real_of_rat q) 0", "then"], ["proof (chain)\npicking this:\n  of_rat q = complex_of_real (real_of_rat q) \\<or>\n  0 = of_int n \\<or> 0 = real_of_int n", "show ?thesis"], ["proof (prove)\nusing this:\n  of_rat q = complex_of_real (real_of_rat q) \\<or>\n  0 = of_int n \\<or> 0 = real_of_int n\n\ngoal (1 subgoal):\n 1. of_rat q = Complex (real_of_rat q) 0", "using Complex_eq_0 complex_of_real_def q"], ["proof (prove)\nusing this:\n  of_rat q = complex_of_real (real_of_rat q) \\<or>\n  0 = of_int n \\<or> 0 = real_of_int n\n  (Complex ?a ?b = 0) = (?a = 0 \\<and> ?b = 0)\n  complex_of_real ?r = Complex ?r 0\n  q = rat_of_int d / rat_of_int n\n\ngoal (1 subgoal):\n 1. of_rat q = Complex (real_of_rat q) 0", "by auto"], ["proof (state)\nthis:\n  of_rat q = Complex (real_of_rat q) 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma complex_of_real_of_rat[simp]: \"complex_of_real (real_of_rat q) = of_rat q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (real_of_rat q) = of_rat q", "unfolding complex_of_real_def of_rat_complex"], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex (real_of_rat q) 0 = Complex (real_of_rat q) 0", "by simp"], ["", "lemma is_rat_complex_iff: \"x \\<in> \\<rat> \\<longleftrightarrow> Re x \\<in> \\<rat> \\<and> Im x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> \\<rat>) = (Re x \\<in> \\<rat> \\<and> Im x = 0)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> \\<rat> \\<Longrightarrow> Re x \\<in> \\<rat> \\<and> Im x = 0\n 2. Re x \\<in> \\<rat> \\<and> Im x = 0 \\<Longrightarrow> x \\<in> \\<rat>", "assume \"x \\<in> \\<rat>\""], ["proof (state)\nthis:\n  x \\<in> \\<rat>\n\ngoal (2 subgoals):\n 1. x \\<in> \\<rat> \\<Longrightarrow> Re x \\<in> \\<rat> \\<and> Im x = 0\n 2. Re x \\<in> \\<rat> \\<and> Im x = 0 \\<Longrightarrow> x \\<in> \\<rat>", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<rat>", "obtain q where x: \"x = of_rat q\""], ["proof (prove)\nusing this:\n  x \\<in> \\<rat>\n\ngoal (1 subgoal):\n 1. (\\<And>q. x = of_rat q \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Rats_def"], ["proof (prove)\nusing this:\n  x \\<in> range of_rat\n\ngoal (1 subgoal):\n 1. (\\<And>q. x = of_rat q \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = of_rat q\n\ngoal (2 subgoals):\n 1. x \\<in> \\<rat> \\<Longrightarrow> Re x \\<in> \\<rat> \\<and> Im x = 0\n 2. Re x \\<in> \\<rat> \\<and> Im x = 0 \\<Longrightarrow> x \\<in> \\<rat>", "let ?y = \"Complex (of_rat q) 0\""], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> \\<rat> \\<Longrightarrow> Re x \\<in> \\<rat> \\<and> Im x = 0\n 2. Re x \\<in> \\<rat> \\<and> Im x = 0 \\<Longrightarrow> x \\<in> \\<rat>", "have \"x - ?y = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x - Complex (real_of_rat q) 0 = 0", "unfolding x"], ["proof (prove)\ngoal (1 subgoal):\n 1. of_rat q - Complex (real_of_rat q) 0 = 0", "by (simp add: Complex_eq)"], ["proof (state)\nthis:\n  x - Complex (real_of_rat q) 0 = 0\n\ngoal (2 subgoals):\n 1. x \\<in> \\<rat> \\<Longrightarrow> Re x \\<in> \\<rat> \\<and> Im x = 0\n 2. Re x \\<in> \\<rat> \\<and> Im x = 0 \\<Longrightarrow> x \\<in> \\<rat>", "hence x: \"x = ?y\""], ["proof (prove)\nusing this:\n  x - Complex (real_of_rat q) 0 = 0\n\ngoal (1 subgoal):\n 1. x = Complex (real_of_rat q) 0", "by simp"], ["proof (state)\nthis:\n  x = Complex (real_of_rat q) 0\n\ngoal (2 subgoals):\n 1. x \\<in> \\<rat> \\<Longrightarrow> Re x \\<in> \\<rat> \\<and> Im x = 0\n 2. Re x \\<in> \\<rat> \\<and> Im x = 0 \\<Longrightarrow> x \\<in> \\<rat>", "show \"Re x \\<in> \\<rat> \\<and> Im x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re x \\<in> \\<rat> \\<and> Im x = 0", "unfolding x complex.sel"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_rat q \\<in> \\<rat> \\<and> 0 = 0", "by auto"], ["proof (state)\nthis:\n  Re x \\<in> \\<rat> \\<and> Im x = 0\n\ngoal (1 subgoal):\n 1. Re x \\<in> \\<rat> \\<and> Im x = 0 \\<Longrightarrow> x \\<in> \\<rat>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Re x \\<in> \\<rat> \\<and> Im x = 0 \\<Longrightarrow> x \\<in> \\<rat>", "assume \"Re x \\<in> \\<rat> \\<and> Im x = 0\""], ["proof (state)\nthis:\n  Re x \\<in> \\<rat> \\<and> Im x = 0\n\ngoal (1 subgoal):\n 1. Re x \\<in> \\<rat> \\<and> Im x = 0 \\<Longrightarrow> x \\<in> \\<rat>", "then"], ["proof (chain)\npicking this:\n  Re x \\<in> \\<rat> \\<and> Im x = 0", "obtain q where \"Re x = of_rat q\" \"Im x = 0\""], ["proof (prove)\nusing this:\n  Re x \\<in> \\<rat> \\<and> Im x = 0\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>Re x = real_of_rat q; Im x = 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Rats_def"], ["proof (prove)\nusing this:\n  Re x \\<in> range real_of_rat \\<and> Im x = 0\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>Re x = real_of_rat q; Im x = 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Re x = real_of_rat q\n  Im x = 0\n\ngoal (1 subgoal):\n 1. Re x \\<in> \\<rat> \\<and> Im x = 0 \\<Longrightarrow> x \\<in> \\<rat>", "hence \"x = Complex (of_rat q) 0\""], ["proof (prove)\nusing this:\n  Re x = real_of_rat q\n  Im x = 0\n\ngoal (1 subgoal):\n 1. x = Complex (real_of_rat q) 0", "by (metis complex_surj)"], ["proof (state)\nthis:\n  x = Complex (real_of_rat q) 0\n\ngoal (1 subgoal):\n 1. Re x \\<in> \\<rat> \\<and> Im x = 0 \\<Longrightarrow> x \\<in> \\<rat>", "thus \"x \\<in> \\<rat>\""], ["proof (prove)\nusing this:\n  x = Complex (real_of_rat q) 0\n\ngoal (1 subgoal):\n 1. x \\<in> \\<rat>", "by (simp add: Complex_eq)"], ["proof (state)\nthis:\n  x \\<in> \\<rat>\n\ngoal:\nNo subgoals!", "qed"], ["", "instantiation complex :: is_rat\nbegin"], ["", "definition \"is_rat_complex (x :: complex) = (is_rat (Re x) \\<and> Im x = 0)\""], ["", "definition \"to_rat_complex (x :: complex) = (if is_rat (Re x) \\<and> Im x = 0 then to_rat (Re x) else 0)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(complex, is_rat_class)", "proof (intro_classes, auto simp: is_rat_complex_def to_rat_complex_def is_rat_complex_iff)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Re x \\<in> \\<rat>; Im x = 0\\<rbrakk>\n       \\<Longrightarrow> to_rat (Re x) = (THE y. x = of_rat y)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Re x \\<in> \\<rat>; Im x = 0\\<rbrakk>\n       \\<Longrightarrow> to_rat (Re x) = (THE y. x = of_rat y)", "assume r: \"Re x \\<in> \\<rat>\" and i: \"Im x = 0\""], ["proof (state)\nthis:\n  Re x \\<in> \\<rat>\n  Im x = 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Re x \\<in> \\<rat>; Im x = 0\\<rbrakk>\n       \\<Longrightarrow> to_rat (Re x) = (THE y. x = of_rat y)", "hence \"x \\<in> \\<rat>\""], ["proof (prove)\nusing this:\n  Re x \\<in> \\<rat>\n  Im x = 0\n\ngoal (1 subgoal):\n 1. x \\<in> \\<rat>", "unfolding is_rat_complex_iff"], ["proof (prove)\nusing this:\n  Re x \\<in> \\<rat>\n  Im x = 0\n\ngoal (1 subgoal):\n 1. Re x \\<in> \\<rat> \\<and> Im x = 0", "by auto"], ["proof (state)\nthis:\n  x \\<in> \\<rat>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Re x \\<in> \\<rat>; Im x = 0\\<rbrakk>\n       \\<Longrightarrow> to_rat (Re x) = (THE y. x = of_rat y)", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<rat>", "obtain y where x: \"x = of_rat y\""], ["proof (prove)\nusing this:\n  x \\<in> \\<rat>\n\ngoal (1 subgoal):\n 1. (\\<And>y. x = of_rat y \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Rats_def"], ["proof (prove)\nusing this:\n  x \\<in> range of_rat\n\ngoal (1 subgoal):\n 1. (\\<And>y. x = of_rat y \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x = of_rat y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Re x \\<in> \\<rat>; Im x = 0\\<rbrakk>\n       \\<Longrightarrow> to_rat (Re x) = (THE y. x = of_rat y)", "from this[unfolded of_rat_complex]"], ["proof (chain)\npicking this:\n  x = Complex (real_of_rat y) 0", "have x: \"x = Complex (real_of_rat y) 0\""], ["proof (prove)\nusing this:\n  x = Complex (real_of_rat y) 0\n\ngoal (1 subgoal):\n 1. x = Complex (real_of_rat y) 0", "by auto"], ["proof (state)\nthis:\n  x = Complex (real_of_rat y) 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Re x \\<in> \\<rat>; Im x = 0\\<rbrakk>\n       \\<Longrightarrow> to_rat (Re x) = (THE y. x = of_rat y)", "show \"to_rat (Re x) = (THE y. x = of_rat y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_rat (Re x) = (THE y. x = of_rat y)", "by (subst of_rat_eq_iff[symmetric, where 'a = real], unfold of_rat_to_rat[OF r] of_rat_complex,\n    unfold x complex.sel, auto)"], ["proof (state)\nthis:\n  to_rat (Re x) = (THE y. x = of_rat y)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma [code_unfold]: \"(x \\<in> \\<rat>) = (is_rat x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> \\<rat>) = is_rat x", "by simp"], ["", "definition is_int_rat :: \"rat \\<Rightarrow> bool\" where\n  \"is_int_rat x \\<equiv> snd (quotient_of x) = 1\""], ["", "definition int_of_rat :: \"rat \\<Rightarrow> int\" where\n  \"int_of_rat x \\<equiv> fst (quotient_of x)\""], ["", "lemma is_int_rat[simp]: \"is_int_rat x = (x \\<in> \\<int>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_int_rat x = (x \\<in> \\<int>)", "unfolding is_int_rat_def Ints_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (snd (quotient_of x) = 1) = (x \\<in> range rat_of_int)", "by (metis Ints_def Ints_induct \n    quotient_of_int is_int_rat_def old.prod.exhaust quotient_of_inject rangeI snd_conv)"], ["", "lemma int_of_rat[simp]: \"int_of_rat (rat_of_int x) = x\" \"z \\<in> \\<int> \\<Longrightarrow> rat_of_int (int_of_rat z) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int_of_rat (rat_of_int x) = x &&&\n    (z \\<in> \\<int> \\<Longrightarrow> rat_of_int (int_of_rat z) = z)", "proof (force simp: int_of_rat_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<in> \\<int> \\<Longrightarrow> rat_of_int (int_of_rat z) = z", "assume \"z \\<in> \\<int>\""], ["proof (state)\nthis:\n  z \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. z \\<in> \\<int> \\<Longrightarrow> rat_of_int (int_of_rat z) = z", "thus \"rat_of_int (int_of_rat z) = z\""], ["proof (prove)\nusing this:\n  z \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. rat_of_int (int_of_rat z) = z", "unfolding int_of_rat_def"], ["proof (prove)\nusing this:\n  z \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. rat_of_int (fst (quotient_of z)) = z", "by (metis Ints_cases Pair_inject quotient_of_int surjective_pairing)"], ["proof (state)\nthis:\n  rat_of_int (int_of_rat z) = z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma int_of_rat_0[simp]: \"(int_of_rat x = 0) = (x = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (int_of_rat x = 0) = (x = 0)", "unfolding int_of_rat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (fst (quotient_of x) = 0) = (x = 0)", "using quotient_of_div[of x]"], ["proof (prove)\nusing this:\n  quotient_of x = (?n, ?d) \\<Longrightarrow>\n  x = rat_of_int ?n / rat_of_int ?d\n\ngoal (1 subgoal):\n 1. (fst (quotient_of x) = 0) = (x = 0)", "by (cases \"quotient_of x\", auto)"], ["", "end"]]}