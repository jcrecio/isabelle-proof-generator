{"file_name": "/home/qj213/afp-2021-10-22/thys/Amortized_Complexity/Amortized_Examples.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Amortized_Complexity", "problem_names": ["lemma a_incr: \"t\\<^sub>i\\<^sub>n\\<^sub>c\\<^sub>r bs + \\<Phi>(incr bs) - \\<Phi> bs = 2\"", "lemma ac: \"a \\<ge> 1/(c - 1)\"", "lemma a0[arith]: \"a>0\"", "lemma b0[arith]: \"b > 0\""], "translations": [["", "lemma a_incr: \"t\\<^sub>i\\<^sub>n\\<^sub>c\\<^sub>r bs + \\<Phi>(incr bs) - \\<Phi> bs = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (t\\<^sub>i\\<^sub>n\\<^sub>c\\<^sub>r bs) + \\<Phi> (incr bs) -\n    \\<Phi> bs =\n    2", "apply(induction bs rule: incr.induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. real (t\\<^sub>i\\<^sub>n\\<^sub>c\\<^sub>r []) + \\<Phi> (incr []) -\n    \\<Phi> [] =\n    2\n 2. \\<And>bs.\n       real (t\\<^sub>i\\<^sub>n\\<^sub>c\\<^sub>r (False # bs)) +\n       \\<Phi> (incr (False # bs)) -\n       \\<Phi> (False # bs) =\n       2\n 3. \\<And>bs.\n       real (t\\<^sub>i\\<^sub>n\\<^sub>c\\<^sub>r bs) + \\<Phi> (incr bs) -\n       \\<Phi> bs =\n       2 \\<Longrightarrow>\n       real (t\\<^sub>i\\<^sub>n\\<^sub>c\\<^sub>r (True # bs)) +\n       \\<Phi> (incr (True # bs)) -\n       \\<Phi> (True # bs) =\n       2", "apply (simp_all add: \\<Phi>_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "fun exec :: \"op \\<Rightarrow> bool list list \\<Rightarrow> bool list\" where\n\"exec Empty [] = []\" |\n\"exec Incr [bs] = incr bs\""], ["", "fun cost :: \"op \\<Rightarrow> bool list list \\<Rightarrow> nat\" where\n\"cost Empty _ = 1\" |\n\"cost Incr [bs] = t\\<^sub>i\\<^sub>n\\<^sub>c\\<^sub>r bs\""], ["", "interpretation Amortized\nwhere exec = exec and arity = arity and inv = \"\\<lambda>_. True\"\nand cost = cost and \\<Phi> = \\<Phi> and U = \"\\<lambda>f _. case f of Empty \\<Rightarrow> 1 | Incr \\<Rightarrow> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Amortized arity exec (\\<lambda>_. True) cost \\<Phi>\n     (\\<lambda>f _. case f of Empty \\<Rightarrow> 1 | Incr \\<Rightarrow> 2)", "proof (standard, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> True\n 2. \\<And>s. True \\<Longrightarrow> 0 \\<le> \\<Phi> s\n 3. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + \\<Phi> (exec f ss) -\n                         sum_list (map \\<Phi> ss)\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Incr \\<Rightarrow> 2)", "case 1"], ["proof (state)\nthis:\n  \\<forall>s\\<in>set ss_. True\n  length ss_ = arity f_\n\ngoal (3 subgoals):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> True\n 2. \\<And>s. True \\<Longrightarrow> 0 \\<le> \\<Phi> s\n 3. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + \\<Phi> (exec f ss) -\n                         sum_list (map \\<Phi> ss)\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Incr \\<Rightarrow> 2)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. True", "by simp"], ["proof (state)\nthis:\n  True\n\ngoal (2 subgoals):\n 1. \\<And>s. True \\<Longrightarrow> 0 \\<le> \\<Phi> s\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + \\<Phi> (exec f ss) -\n                         sum_list (map \\<Phi> ss)\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Incr \\<Rightarrow> 2)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s. True \\<Longrightarrow> 0 \\<le> \\<Phi> s\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + \\<Phi> (exec f ss) -\n                         sum_list (map \\<Phi> ss)\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Incr \\<Rightarrow> 2)", "case 2"], ["proof (state)\nthis:\n  True\n\ngoal (2 subgoals):\n 1. \\<And>s. True \\<Longrightarrow> 0 \\<le> \\<Phi> s\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + \\<Phi> (exec f ss) -\n                         sum_list (map \\<Phi> ss)\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Incr \\<Rightarrow> 2)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> \\<Phi> s_", "by(simp add: \\<Phi>_def)"], ["proof (state)\nthis:\n  0 \\<le> \\<Phi> s_\n\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + \\<Phi> (exec f ss) -\n                         sum_list (map \\<Phi> ss)\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Incr \\<Rightarrow> 2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + \\<Phi> (exec f ss) -\n                         sum_list (map \\<Phi> ss)\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Incr \\<Rightarrow> 2)", "case 3"], ["proof (state)\nthis:\n  \\<forall>s\\<in>set ss_. True\n  length ss_ = arity f_\n\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + \\<Phi> (exec f ss) -\n                         sum_list (map \\<Phi> ss)\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Incr \\<Rightarrow> 2)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>s\\<in>set ss_. True\n  length ss_ = arity f_\n\ngoal (1 subgoal):\n 1. real (cost f_ ss_) + \\<Phi> (exec f_ ss_) - sum_list (map \\<Phi> ss_)\n    \\<le> (case f_ of Empty \\<Rightarrow> 1 | Incr \\<Rightarrow> 2)", "using a_incr"], ["proof (prove)\nusing this:\n  \\<forall>s\\<in>set ss_. True\n  length ss_ = arity f_\n  real (t\\<^sub>i\\<^sub>n\\<^sub>c\\<^sub>r ?bs) + \\<Phi> (incr ?bs) -\n  \\<Phi> ?bs =\n  2\n\ngoal (1 subgoal):\n 1. real (cost f_ ss_) + \\<Phi> (exec f_ ss_) - sum_list (map \\<Phi> ss_)\n    \\<le> (case f_ of Empty \\<Rightarrow> 1 | Incr \\<Rightarrow> 2)", "by(auto simp: \\<Phi>_def split: op.split)"], ["proof (state)\nthis:\n  real (cost f_ ss_) + \\<Phi> (exec f_ ss_) - sum_list (map \\<Phi> ss_)\n  \\<le> (case f_ of Empty \\<Rightarrow> 1 | Incr \\<Rightarrow> 2)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* Bin_Counter *)"], ["", "subsection \"Stack with multipop\""], ["", "locale Multipop\nbegin"], ["", "datatype 'a op = Empty | Push 'a | Pop nat"], ["", "fun arity :: \"'a op \\<Rightarrow> nat\" where\n\"arity Empty = 0\" |\n\"arity (Push _) = 1\" |\n\"arity (Pop _) = 1\""], ["", "fun exec :: \"'a op \\<Rightarrow> 'a list list \\<Rightarrow> 'a list\" where\n\"exec Empty [] = []\" |\n\"exec (Push x) [xs] = x # xs\" |\n\"exec (Pop n) [xs] = drop n xs\""], ["", "fun cost :: \"'a op \\<Rightarrow> 'a list list \\<Rightarrow> nat\" where\n\"cost Empty _ = 1\" |\n\"cost (Push x) _ = 1\" |\n\"cost (Pop n) [xs] = min n (length xs)\""], ["", "interpretation Amortized\nwhere arity = arity and exec = exec and inv = \"\\<lambda>_. True\"\nand cost = cost and \\<Phi> = \"length\"\nand U = \"\\<lambda>f _. case f of Empty \\<Rightarrow> 1 | Push _ \\<Rightarrow> 2 | Pop _ \\<Rightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Amortized arity exec (\\<lambda>_. True) cost\n     (\\<lambda>x. real (length x))\n     (\\<lambda>f _.\n         case f of Empty \\<Rightarrow> 1 | Push x \\<Rightarrow> 2\n         | Pop x \\<Rightarrow> 0)", "proof (standard, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> True\n 2. \\<And>s. True \\<Longrightarrow> 0 \\<le> real (length s)\n 3. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + real (length (exec f ss)) -\n                         (\\<Sum>x\\<leftarrow>ss. real (length x))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Push x \\<Rightarrow> 2\n                                | Pop x \\<Rightarrow> 0)", "case 1"], ["proof (state)\nthis:\n  \\<forall>s\\<in>set ss_. True\n  length ss_ = arity f_\n\ngoal (3 subgoals):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> True\n 2. \\<And>s. True \\<Longrightarrow> 0 \\<le> real (length s)\n 3. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + real (length (exec f ss)) -\n                         (\\<Sum>x\\<leftarrow>ss. real (length x))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Push x \\<Rightarrow> 2\n                                | Pop x \\<Rightarrow> 0)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. True", "by simp"], ["proof (state)\nthis:\n  True\n\ngoal (2 subgoals):\n 1. \\<And>s. True \\<Longrightarrow> 0 \\<le> real (length s)\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + real (length (exec f ss)) -\n                         (\\<Sum>x\\<leftarrow>ss. real (length x))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Push x \\<Rightarrow> 2\n                                | Pop x \\<Rightarrow> 0)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s. True \\<Longrightarrow> 0 \\<le> real (length s)\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + real (length (exec f ss)) -\n                         (\\<Sum>x\\<leftarrow>ss. real (length x))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Push x \\<Rightarrow> 2\n                                | Pop x \\<Rightarrow> 0)", "case 2"], ["proof (state)\nthis:\n  True\n\ngoal (2 subgoals):\n 1. \\<And>s. True \\<Longrightarrow> 0 \\<le> real (length s)\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + real (length (exec f ss)) -\n                         (\\<Sum>x\\<leftarrow>ss. real (length x))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Push x \\<Rightarrow> 2\n                                | Pop x \\<Rightarrow> 0)", "thus ?case"], ["proof (prove)\nusing this:\n  True\n\ngoal (1 subgoal):\n 1. 0 \\<le> real (length s_)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> real (length s_)\n\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + real (length (exec f ss)) -\n                         (\\<Sum>x\\<leftarrow>ss. real (length x))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Push x \\<Rightarrow> 2\n                                | Pop x \\<Rightarrow> 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + real (length (exec f ss)) -\n                         (\\<Sum>x\\<leftarrow>ss. real (length x))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Push x \\<Rightarrow> 2\n                                | Pop x \\<Rightarrow> 0)", "case 3"], ["proof (state)\nthis:\n  \\<forall>s\\<in>set ss_. True\n  length ss_ = arity f_\n\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + real (length (exec f ss)) -\n                         (\\<Sum>x\\<leftarrow>ss. real (length x))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Push x \\<Rightarrow> 2\n                                | Pop x \\<Rightarrow> 0)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>s\\<in>set ss_. True\n  length ss_ = arity f_\n\ngoal (1 subgoal):\n 1. real (cost f_ ss_) + real (length (exec f_ ss_)) -\n    (\\<Sum>x\\<leftarrow>ss_. real (length x))\n    \\<le> (case f_ of Empty \\<Rightarrow> 1 | Push x \\<Rightarrow> 2\n           | Pop x \\<Rightarrow> 0)", "by (auto split: op.split)"], ["proof (state)\nthis:\n  real (cost f_ ss_) + real (length (exec f_ ss_)) -\n  (\\<Sum>x\\<leftarrow>ss_. real (length x))\n  \\<le> (case f_ of Empty \\<Rightarrow> 1 | Push x \\<Rightarrow> 2\n         | Pop x \\<Rightarrow> 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* Multipop *)"], ["", "subsection \"Dynamic tables: insert only\""], ["", "locale Dyn_Tab1\nbegin"], ["", "type_synonym tab = \"nat \\<times> nat\""], ["", "datatype op = Empty | Ins"], ["", "fun arity :: \"op \\<Rightarrow> nat\" where\n\"arity Empty = 0\" |\n\"arity Ins = 1\""], ["", "fun exec :: \"op \\<Rightarrow> tab list \\<Rightarrow> tab\" where\n\"exec Empty [] = (0::nat,0::nat)\" |\n\"exec Ins [(n,l)] = (n+1, if n<l then l else if l=0 then 1 else 2*l)\""], ["", "fun cost :: \"op \\<Rightarrow> tab list \\<Rightarrow> nat\" where\n\"cost Empty _ = 1\" |\n\"cost Ins [(n,l)] = (if n<l then 1 else n+1)\""], ["", "interpretation Amortized\nwhere exec = exec and arity = arity\nand inv = \"\\<lambda>(n,l). if l=0 then n=0 else n \\<le> l \\<and> l < 2*n\"\nand cost = cost and \\<Phi> = \"\\<lambda>(n,l). 2*n - l\"\nand U = \"\\<lambda>f _. case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Amortized arity exec\n     (\\<lambda>(n, l). if l = 0 then n = 0 else n \\<le> l \\<and> l < 2 * n)\n     cost (\\<lambda>x. real (case x of (n, l) \\<Rightarrow> 2 * n - l))\n     (\\<lambda>f _. case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> 3)", "proof (standard, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0 else n \\<le> l \\<and> l < 2 * n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> case exec f ss of\n                         (n, l) \\<Rightarrow>\n                           if l = 0 then n = 0\n                           else n \\<le> l \\<and> l < 2 * n\n 2. \\<And>s.\n       case s of\n       (n, l) \\<Rightarrow>\n         if l = 0 then n = 0\n         else n \\<le> l \\<and> l < 2 * n \\<Longrightarrow>\n       0 \\<le> real (case s of (n, l) \\<Rightarrow> 2 * n - l)\n 3. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0 else n \\<le> l \\<and> l < 2 * n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (n, l) \\<Rightarrow> 2 * n - l) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (n, l) \\<Rightarrow> 2 * n - l))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> 3)", "case (1 _ f)"], ["proof (state)\nthis:\n  \\<forall>s\\<in>set ss_.\n     case s of\n     (n, l) \\<Rightarrow>\n       if l = 0 then n = 0 else n \\<le> l \\<and> l < 2 * n\n  length ss_ = arity f\n\ngoal (3 subgoals):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0 else n \\<le> l \\<and> l < 2 * n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> case exec f ss of\n                         (n, l) \\<Rightarrow>\n                           if l = 0 then n = 0\n                           else n \\<le> l \\<and> l < 2 * n\n 2. \\<And>s.\n       case s of\n       (n, l) \\<Rightarrow>\n         if l = 0 then n = 0\n         else n \\<le> l \\<and> l < 2 * n \\<Longrightarrow>\n       0 \\<le> real (case s of (n, l) \\<Rightarrow> 2 * n - l)\n 3. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0 else n \\<le> l \\<and> l < 2 * n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (n, l) \\<Rightarrow> 2 * n - l) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (n, l) \\<Rightarrow> 2 * n - l))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> 3)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>s\\<in>set ss_.\n     case s of\n     (n, l) \\<Rightarrow>\n       if l = 0 then n = 0 else n \\<le> l \\<and> l < 2 * n\n  length ss_ = arity f\n\ngoal (1 subgoal):\n 1. case exec f ss_ of\n    (n, l) \\<Rightarrow> if l = 0 then n = 0 else n \\<le> l \\<and> l < 2 * n", "by(cases f) (auto split: if_splits)"], ["proof (state)\nthis:\n  case exec f ss_ of\n  (n, l) \\<Rightarrow> if l = 0 then n = 0 else n \\<le> l \\<and> l < 2 * n\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       case s of\n       (n, l) \\<Rightarrow>\n         if l = 0 then n = 0\n         else n \\<le> l \\<and> l < 2 * n \\<Longrightarrow>\n       0 \\<le> real (case s of (n, l) \\<Rightarrow> 2 * n - l)\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0 else n \\<le> l \\<and> l < 2 * n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (n, l) \\<Rightarrow> 2 * n - l) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (n, l) \\<Rightarrow> 2 * n - l))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> 3)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       case s of\n       (n, l) \\<Rightarrow>\n         if l = 0 then n = 0\n         else n \\<le> l \\<and> l < 2 * n \\<Longrightarrow>\n       0 \\<le> real (case s of (n, l) \\<Rightarrow> 2 * n - l)\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0 else n \\<le> l \\<and> l < 2 * n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (n, l) \\<Rightarrow> 2 * n - l) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (n, l) \\<Rightarrow> 2 * n - l))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> 3)", "case 2"], ["proof (state)\nthis:\n  case s_ of\n  (n, l) \\<Rightarrow> if l = 0 then n = 0 else n \\<le> l \\<and> l < 2 * n\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       case s of\n       (n, l) \\<Rightarrow>\n         if l = 0 then n = 0\n         else n \\<le> l \\<and> l < 2 * n \\<Longrightarrow>\n       0 \\<le> real (case s of (n, l) \\<Rightarrow> 2 * n - l)\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0 else n \\<le> l \\<and> l < 2 * n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (n, l) \\<Rightarrow> 2 * n - l) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (n, l) \\<Rightarrow> 2 * n - l))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> 3)", "thus ?case"], ["proof (prove)\nusing this:\n  case s_ of\n  (n, l) \\<Rightarrow> if l = 0 then n = 0 else n \\<le> l \\<and> l < 2 * n\n\ngoal (1 subgoal):\n 1. 0 \\<le> real (case s_ of (n, l) \\<Rightarrow> 2 * n - l)", "by(auto split: prod.splits)"], ["proof (state)\nthis:\n  0 \\<le> real (case s_ of (n, l) \\<Rightarrow> 2 * n - l)\n\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0 else n \\<le> l \\<and> l < 2 * n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (n, l) \\<Rightarrow> 2 * n - l) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (n, l) \\<Rightarrow> 2 * n - l))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> 3)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0 else n \\<le> l \\<and> l < 2 * n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (n, l) \\<Rightarrow> 2 * n - l) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (n, l) \\<Rightarrow> 2 * n - l))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> 3)", "case 3"], ["proof (state)\nthis:\n  \\<forall>s\\<in>set ss_.\n     case s of\n     (n, l) \\<Rightarrow>\n       if l = 0 then n = 0 else n \\<le> l \\<and> l < 2 * n\n  length ss_ = arity f_\n\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0 else n \\<le> l \\<and> l < 2 * n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (n, l) \\<Rightarrow> 2 * n - l) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (n, l) \\<Rightarrow> 2 * n - l))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> 3)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>s\\<in>set ss_.\n     case s of\n     (n, l) \\<Rightarrow>\n       if l = 0 then n = 0 else n \\<le> l \\<and> l < 2 * n\n  length ss_ = arity f_\n\ngoal (1 subgoal):\n 1. real (cost f_ ss_) +\n    real (case exec f_ ss_ of (n, l) \\<Rightarrow> 2 * n - l) -\n    (\\<Sum>x\\<leftarrow>ss_. real\n                              (case x of (n, l) \\<Rightarrow> 2 * n - l))\n    \\<le> (case f_ of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> 3)", "by (auto split: op.split) linarith"], ["proof (state)\nthis:\n  real (cost f_ ss_) +\n  real (case exec f_ ss_ of (n, l) \\<Rightarrow> 2 * n - l) -\n  (\\<Sum>x\\<leftarrow>ss_. real (case x of (n, l) \\<Rightarrow> 2 * n - l))\n  \\<le> (case f_ of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> 3)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* Dyn_Tab1 *)"], ["", "locale Dyn_Tab2 =\nfixes a :: real\nfixes c :: real\nassumes c1[arith]: \"c > 1\" \nassumes ac2: \"a \\<ge> c/(c - 1)\"\nbegin"], ["", "lemma ac: \"a \\<ge> 1/(c - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / (c - 1) \\<le> a", "using ac2"], ["proof (prove)\nusing this:\n  c / (c - 1) \\<le> a\n\ngoal (1 subgoal):\n 1. 1 / (c - 1) \\<le> a", "by(simp add: field_simps)"], ["", "lemma a0[arith]: \"a>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < a", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < a", "have \"1/(c - 1) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 1 / (c - 1)", "using ac"], ["proof (prove)\nusing this:\n  1 / (c - 1) \\<le> a\n\ngoal (1 subgoal):\n 1. 0 < 1 / (c - 1)", "by simp"], ["proof (state)\nthis:\n  0 < 1 / (c - 1)\n\ngoal (1 subgoal):\n 1. 0 < a", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 < 1 / (c - 1)\n\ngoal (1 subgoal):\n 1. 0 < a", "by (metis ac dual_order.strict_trans1)"], ["proof (state)\nthis:\n  0 < a\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"b = 1/(c - 1)\""], ["", "lemma b0[arith]: \"b > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < b", "using ac"], ["proof (prove)\nusing this:\n  1 / (c - 1) \\<le> a\n\ngoal (1 subgoal):\n 1. 0 < b", "by (simp add: b_def)"], ["", "type_synonym tab = \"nat \\<times> nat\""], ["", "datatype op = Empty | Ins"], ["", "fun arity :: \"op \\<Rightarrow> nat\" where\n\"arity Empty = 0\" |\n\"arity Ins = 1\""], ["", "fun \"ins\" :: \"tab \\<Rightarrow> tab\" where\n\"ins(n,l) = (n+1, if n<l then l else if l=0 then 1 else nat(ceiling(c*l)))\""], ["", "fun exec :: \"op \\<Rightarrow> tab list \\<Rightarrow> tab\" where\n\"exec Empty [] = (0::nat,0::nat)\" |\n\"exec Ins [s] = ins s\" |\n\"exec _ _ = (0,0)\""], ["", "(* otherwise fun goes wrong with odd error msg *)"], ["", "fun cost :: \"op \\<Rightarrow> tab list \\<Rightarrow> nat\" where\n\"cost Empty _ = 1\" |\n\"cost Ins [(n,l)] = (if n<l then 1 else n+1)\""], ["", "fun \\<Phi> :: \"tab \\<Rightarrow> real\" where\n\"\\<Phi>(n,l) = a*n - b*l\""], ["", "interpretation Amortized\nwhere exec = exec and arity = arity\nand inv = \"\\<lambda>(n,l). if l=0 then n=0 else n \\<le> l \\<and> (b/a)*l \\<le> n\"\nand cost = cost and \\<Phi> = \\<Phi> and U = \"\\<lambda>f _. case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Amortized arity exec\n     (\\<lambda>x.\n         case case x of (x, y) \\<Rightarrow> (real x, real y) of\n         (n, l) \\<Rightarrow>\n           if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n)\n     cost \\<Phi>\n     (\\<lambda>f _.\n         case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "proof (standard, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case case s of (x, y) \\<Rightarrow> (real x, real y) of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0\n                     else n \\<le> l \\<and> b / a * l \\<le> n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> case case exec f ss of\n                              (x, y) \\<Rightarrow> (real x, real y) of\n                         (n, l) \\<Rightarrow>\n                           if l = 0 then n = 0\n                           else n \\<le> l \\<and> b / a * l \\<le> n\n 2. \\<And>s.\n       case case s of (x, y) \\<Rightarrow> (real x, real y) of\n       (n, l) \\<Rightarrow>\n         if l = 0 then n = 0\n         else n \\<le> l \\<and> b / a * l \\<le> n \\<Longrightarrow>\n       0 \\<le> \\<Phi> s\n 3. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case case s of (x, y) \\<Rightarrow> (real x, real y) of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0\n                     else n \\<le> l \\<and> b / a * l \\<le> n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + \\<Phi> (exec f ss) -\n                         sum_list (map \\<Phi> ss)\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> a + 1)", "case (1 ss f)"], ["proof (state)\nthis:\n  \\<forall>s\\<in>set ss.\n     case case s of (x, y) \\<Rightarrow> (real x, real y) of\n     (n, l) \\<Rightarrow>\n       if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n  length ss = arity f\n\ngoal (3 subgoals):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case case s of (x, y) \\<Rightarrow> (real x, real y) of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0\n                     else n \\<le> l \\<and> b / a * l \\<le> n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> case case exec f ss of\n                              (x, y) \\<Rightarrow> (real x, real y) of\n                         (n, l) \\<Rightarrow>\n                           if l = 0 then n = 0\n                           else n \\<le> l \\<and> b / a * l \\<le> n\n 2. \\<And>s.\n       case case s of (x, y) \\<Rightarrow> (real x, real y) of\n       (n, l) \\<Rightarrow>\n         if l = 0 then n = 0\n         else n \\<le> l \\<and> b / a * l \\<le> n \\<Longrightarrow>\n       0 \\<le> \\<Phi> s\n 3. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case case s of (x, y) \\<Rightarrow> (real x, real y) of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0\n                     else n \\<le> l \\<and> b / a * l \\<le> n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + \\<Phi> (exec f ss) -\n                         sum_list (map \\<Phi> ss)\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> a + 1)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "proof (cases f)"], ["proof (state)\ngoal (2 subgoals):\n 1. f = Empty \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n 2. f = Ins \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "case Empty"], ["proof (state)\nthis:\n  f = Empty\n\ngoal (2 subgoals):\n 1. f = Empty \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n 2. f = Ins \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "thus ?thesis"], ["proof (prove)\nusing this:\n  f = Empty\n\ngoal (1 subgoal):\n 1. case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "using 1"], ["proof (prove)\nusing this:\n  f = Empty\n  \\<forall>s\\<in>set ss.\n     case case s of (x, y) \\<Rightarrow> (real x, real y) of\n     (n, l) \\<Rightarrow>\n       if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n  length ss = arity f\n\ngoal (1 subgoal):\n 1. case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "by auto"], ["proof (state)\nthis:\n  case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n  (n, l) \\<Rightarrow>\n    if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n\ngoal (1 subgoal):\n 1. f = Ins \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. f = Ins \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "case [simp]: Ins"], ["proof (state)\nthis:\n  f = Ins\n\ngoal (1 subgoal):\n 1. f = Ins \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "obtain n l where [simp]: \"ss = [(n,l)]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n l. ss = [(n, l)] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 1(2)"], ["proof (prove)\nusing this:\n  length ss = arity f\n\ngoal (1 subgoal):\n 1. (\\<And>n l. ss = [(n, l)] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto)"], ["proof (state)\nthis:\n  ss = [(n, l)]\n\ngoal (1 subgoal):\n 1. f = Ins \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n 2. \\<not> ?P \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "assume \"l=0\""], ["proof (state)\nthis:\n  l = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n 2. \\<not> ?P \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "thus ?thesis"], ["proof (prove)\nusing this:\n  l = 0\n\ngoal (1 subgoal):\n 1. case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "using 1 ac"], ["proof (prove)\nusing this:\n  l = 0\n  \\<forall>s\\<in>set ss.\n     case case s of (x, y) \\<Rightarrow> (real x, real y) of\n     (n, l) \\<Rightarrow>\n       if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n  length ss = arity f\n  1 / (c - 1) \\<le> a\n\ngoal (1 subgoal):\n 1. case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "by (simp add: b_def field_simps)"], ["proof (state)\nthis:\n  case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n  (n, l) \\<Rightarrow>\n    if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "assume \"l\\<noteq>0\""], ["proof (state)\nthis:\n  l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n 2. \\<not> ?P \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "assume \"n<l\""], ["proof (state)\nthis:\n  n < l\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n 2. \\<not> ?P \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "thus ?thesis"], ["proof (prove)\nusing this:\n  n < l\n\ngoal (1 subgoal):\n 1. case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "using 1"], ["proof (prove)\nusing this:\n  n < l\n  \\<forall>s\\<in>set ss.\n     case case s of (x, y) \\<Rightarrow> (real x, real y) of\n     (n, l) \\<Rightarrow>\n       if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n  length ss = arity f\n\ngoal (1 subgoal):\n 1. case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "by(simp add: algebra_simps)"], ["proof (state)\nthis:\n  case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n  (n, l) \\<Rightarrow>\n    if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> n < l \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> n < l \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "assume \"\\<not> n<l\""], ["proof (state)\nthis:\n  \\<not> n < l\n\ngoal (1 subgoal):\n 1. \\<not> n < l \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "hence [simp]: \"n=l\""], ["proof (prove)\nusing this:\n  \\<not> n < l\n\ngoal (1 subgoal):\n 1. n = l", "using 1 \\<open>l\\<noteq>0\\<close>"], ["proof (prove)\nusing this:\n  \\<not> n < l\n  \\<forall>s\\<in>set ss.\n     case case s of (x, y) \\<Rightarrow> (real x, real y) of\n     (n, l) \\<Rightarrow>\n       if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n  length ss = arity f\n  l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n = l", "by simp"], ["proof (state)\nthis:\n  n = l\n\ngoal (1 subgoal):\n 1. \\<not> n < l \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "have 1: \"(b/a) * ceiling(c * l) \\<le> real l + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b / a * real_of_int \\<lceil>c * real l\\<rceil> \\<le> real l + 1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. b / a * real_of_int \\<lceil>c * real l\\<rceil> \\<le> real l + 1", "have \"(b/a) * ceiling(c * l) = ceiling(c * l)/(a*(c - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b / a * real_of_int \\<lceil>c * real l\\<rceil> =\n    real_of_int \\<lceil>c * real l\\<rceil> / (a * (c - 1))", "by(simp add: b_def)"], ["proof (state)\nthis:\n  b / a * real_of_int \\<lceil>c * real l\\<rceil> =\n  real_of_int \\<lceil>c * real l\\<rceil> / (a * (c - 1))\n\ngoal (1 subgoal):\n 1. b / a * real_of_int \\<lceil>c * real l\\<rceil> \\<le> real l + 1", "also"], ["proof (state)\nthis:\n  b / a * real_of_int \\<lceil>c * real l\\<rceil> =\n  real_of_int \\<lceil>c * real l\\<rceil> / (a * (c - 1))\n\ngoal (1 subgoal):\n 1. b / a * real_of_int \\<lceil>c * real l\\<rceil> \\<le> real l + 1", "have \"ceiling(c * l) \\<le> c*l + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int \\<lceil>c * real l\\<rceil> \\<le> c * real l + 1", "by simp"], ["proof (state)\nthis:\n  real_of_int \\<lceil>c * real l\\<rceil> \\<le> c * real l + 1\n\ngoal (1 subgoal):\n 1. b / a * real_of_int \\<lceil>c * real l\\<rceil> \\<le> real l + 1", "also"], ["proof (state)\nthis:\n  real_of_int \\<lceil>c * real l\\<rceil> \\<le> c * real l + 1\n\ngoal (1 subgoal):\n 1. b / a * real_of_int \\<lceil>c * real l\\<rceil> \\<le> real l + 1", "have \"\\<dots> \\<le> c*(real l+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c * real l + 1 \\<le> c * (real l + 1)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  c * real l + 1 \\<le> c * (real l + 1)\n\ngoal (1 subgoal):\n 1. b / a * real_of_int \\<lceil>c * real l\\<rceil> \\<le> real l + 1", "also"], ["proof (state)\nthis:\n  c * real l + 1 \\<le> c * (real l + 1)\n\ngoal (1 subgoal):\n 1. b / a * real_of_int \\<lceil>c * real l\\<rceil> \\<le> real l + 1", "have \"\\<dots> / (a*(c - 1)) = (c/(a*(c - 1))) * (real l + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c * (real l + 1) / (a * (c - 1)) = c / (a * (c - 1)) * (real l + 1)", "by simp"], ["proof (state)\nthis:\n  c * (real l + 1) / (a * (c - 1)) = c / (a * (c - 1)) * (real l + 1)\n\ngoal (1 subgoal):\n 1. b / a * real_of_int \\<lceil>c * real l\\<rceil> \\<le> real l + 1", "also"], ["proof (state)\nthis:\n  c * (real l + 1) / (a * (c - 1)) = c / (a * (c - 1)) * (real l + 1)\n\ngoal (1 subgoal):\n 1. b / a * real_of_int \\<lceil>c * real l\\<rceil> \\<le> real l + 1", "have \"c/(a*(c - 1)) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c / (a * (c - 1)) \\<le> 1", "using ac2"], ["proof (prove)\nusing this:\n  c / (c - 1) \\<le> a\n\ngoal (1 subgoal):\n 1. c / (a * (c - 1)) \\<le> 1", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  c / (a * (c - 1)) \\<le> 1\n\ngoal (1 subgoal):\n 1. b / a * real_of_int \\<lceil>c * real l\\<rceil> \\<le> real l + 1", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x y.\n              x \\<le> y \\<Longrightarrow>\n              x / (a * (c - 1)) \\<le> y / (a * (c - 1));\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow> x / (a * (c - 1)) \\<le> y / (a * (c - 1));\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x * (real l + 1) \\<le> y * (real l + 1)\\<rbrakk>\n  \\<Longrightarrow> b / a * real_of_int \\<lceil>c * real l\\<rceil>\n                    \\<le> 1 * (real l + 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x y.\n              x \\<le> y \\<Longrightarrow>\n              x / (a * (c - 1)) \\<le> y / (a * (c - 1));\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow> x / (a * (c - 1)) \\<le> y / (a * (c - 1));\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x * (real l + 1) \\<le> y * (real l + 1)\\<rbrakk>\n  \\<Longrightarrow> b / a * real_of_int \\<lceil>c * real l\\<rceil>\n                    \\<le> 1 * (real l + 1)\n\ngoal (1 subgoal):\n 1. b / a * real_of_int \\<lceil>c * real l\\<rceil> \\<le> real l + 1", "by (simp add: divide_right_mono)"], ["proof (state)\nthis:\n  b / a * real_of_int \\<lceil>c * real l\\<rceil> \\<le> real l + 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b / a * real_of_int \\<lceil>c * real l\\<rceil> \\<le> real l + 1\n\ngoal (1 subgoal):\n 1. \\<not> n < l \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "have 2: \"real l + 1 \\<le> ceiling(c * real l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real l + 1 \\<le> real_of_int \\<lceil>c * real l\\<rceil>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. real l + 1 \\<le> real_of_int \\<lceil>c * real l\\<rceil>", "have \"real l + 1 = of_int(int(l)) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real l + 1 = real_of_int (int l) + 1", "by simp"], ["proof (state)\nthis:\n  real l + 1 = real_of_int (int l) + 1\n\ngoal (1 subgoal):\n 1. real l + 1 \\<le> real_of_int \\<lceil>c * real l\\<rceil>", "also"], ["proof (state)\nthis:\n  real l + 1 = real_of_int (int l) + 1\n\ngoal (1 subgoal):\n 1. real l + 1 \\<le> real_of_int \\<lceil>c * real l\\<rceil>", "have \"... \\<le> ceiling(c * real l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (int l) + 1 \\<le> real_of_int \\<lceil>c * real l\\<rceil>", "using \\<open>l \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. real_of_int (int l) + 1 \\<le> real_of_int \\<lceil>c * real l\\<rceil>", "by(simp only: int_less_real_le[symmetric] less_ceiling_iff)\n              (simp add: mult_less_cancel_right1)"], ["proof (state)\nthis:\n  real_of_int (int l) + 1 \\<le> real_of_int \\<lceil>c * real l\\<rceil>\n\ngoal (1 subgoal):\n 1. real l + 1 \\<le> real_of_int \\<lceil>c * real l\\<rceil>", "finally"], ["proof (chain)\npicking this:\n  real l + 1 \\<le> real_of_int \\<lceil>c * real l\\<rceil>", "show ?thesis"], ["proof (prove)\nusing this:\n  real l + 1 \\<le> real_of_int \\<lceil>c * real l\\<rceil>\n\ngoal (1 subgoal):\n 1. real l + 1 \\<le> real_of_int \\<lceil>c * real l\\<rceil>", "."], ["proof (state)\nthis:\n  real l + 1 \\<le> real_of_int \\<lceil>c * real l\\<rceil>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real l + 1 \\<le> real_of_int \\<lceil>c * real l\\<rceil>\n\ngoal (1 subgoal):\n 1. \\<not> n < l \\<Longrightarrow>\n    case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "from \\<open>l\\<noteq>0\\<close> 1 2"], ["proof (chain)\npicking this:\n  l \\<noteq> 0\n  b / a * real_of_int \\<lceil>c * real l\\<rceil> \\<le> real l + 1\n  real l + 1 \\<le> real_of_int \\<lceil>c * real l\\<rceil>", "show ?thesis"], ["proof (prove)\nusing this:\n  l \\<noteq> 0\n  b / a * real_of_int \\<lceil>c * real l\\<rceil> \\<le> real l + 1\n  real l + 1 \\<le> real_of_int \\<lceil>c * real l\\<rceil>\n\ngoal (1 subgoal):\n 1. case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n", "by simp (simp add: not_le zero_less_mult_iff)"], ["proof (state)\nthis:\n  case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n  (n, l) \\<Rightarrow>\n    if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n  (n, l) \\<Rightarrow>\n    if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n  (n, l) \\<Rightarrow>\n    if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  case case exec f ss of (x, y) \\<Rightarrow> (real x, real y) of\n  (n, l) \\<Rightarrow>\n    if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       case case s of (x, y) \\<Rightarrow> (real x, real y) of\n       (n, l) \\<Rightarrow>\n         if l = 0 then n = 0\n         else n \\<le> l \\<and> b / a * l \\<le> n \\<Longrightarrow>\n       0 \\<le> \\<Phi> s\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case case s of (x, y) \\<Rightarrow> (real x, real y) of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0\n                     else n \\<le> l \\<and> b / a * l \\<le> n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + \\<Phi> (exec f ss) -\n                         sum_list (map \\<Phi> ss)\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> a + 1)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       case case s of (x, y) \\<Rightarrow> (real x, real y) of\n       (n, l) \\<Rightarrow>\n         if l = 0 then n = 0\n         else n \\<le> l \\<and> b / a * l \\<le> n \\<Longrightarrow>\n       0 \\<le> \\<Phi> s\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case case s of (x, y) \\<Rightarrow> (real x, real y) of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0\n                     else n \\<le> l \\<and> b / a * l \\<le> n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + \\<Phi> (exec f ss) -\n                         sum_list (map \\<Phi> ss)\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> a + 1)", "case 2"], ["proof (state)\nthis:\n  case case s_ of (x, y) \\<Rightarrow> (real x, real y) of\n  (n, l) \\<Rightarrow>\n    if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       case case s of (x, y) \\<Rightarrow> (real x, real y) of\n       (n, l) \\<Rightarrow>\n         if l = 0 then n = 0\n         else n \\<le> l \\<and> b / a * l \\<le> n \\<Longrightarrow>\n       0 \\<le> \\<Phi> s\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case case s of (x, y) \\<Rightarrow> (real x, real y) of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0\n                     else n \\<le> l \\<and> b / a * l \\<le> n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + \\<Phi> (exec f ss) -\n                         sum_list (map \\<Phi> ss)\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> a + 1)", "thus ?case"], ["proof (prove)\nusing this:\n  case case s_ of (x, y) \\<Rightarrow> (real x, real y) of\n  (n, l) \\<Rightarrow>\n    if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n\ngoal (1 subgoal):\n 1. 0 \\<le> \\<Phi> s_", "by(auto simp: field_simps split: if_splits prod.splits)"], ["proof (state)\nthis:\n  0 \\<le> \\<Phi> s_\n\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case case s of (x, y) \\<Rightarrow> (real x, real y) of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0\n                     else n \\<le> l \\<and> b / a * l \\<le> n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + \\<Phi> (exec f ss) -\n                         sum_list (map \\<Phi> ss)\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> a + 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case case s of (x, y) \\<Rightarrow> (real x, real y) of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0\n                     else n \\<le> l \\<and> b / a * l \\<le> n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + \\<Phi> (exec f ss) -\n                         sum_list (map \\<Phi> ss)\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> a + 1)", "case (3 ss f)"], ["proof (state)\nthis:\n  \\<forall>s\\<in>set ss.\n     case case s of (x, y) \\<Rightarrow> (real x, real y) of\n     (n, l) \\<Rightarrow>\n       if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n  length ss = arity f\n\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case case s of (x, y) \\<Rightarrow> (real x, real y) of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0\n                     else n \\<le> l \\<and> b / a * l \\<le> n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) + \\<Phi> (exec f ss) -\n                         sum_list (map \\<Phi> ss)\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> a + 1)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "proof (cases f)"], ["proof (state)\ngoal (2 subgoals):\n 1. f = Empty \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)\n 2. f = Ins \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "case Empty"], ["proof (state)\nthis:\n  f = Empty\n\ngoal (2 subgoals):\n 1. f = Empty \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)\n 2. f = Ins \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  f = Empty\n\ngoal (1 subgoal):\n 1. real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "using 3(2)"], ["proof (prove)\nusing this:\n  f = Empty\n  length ss = arity f\n\ngoal (1 subgoal):\n 1. real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "by simp"], ["proof (state)\nthis:\n  real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n  \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)\n\ngoal (1 subgoal):\n 1. f = Ins \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. f = Ins \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "case [simp]: Ins"], ["proof (state)\nthis:\n  f = Ins\n\ngoal (1 subgoal):\n 1. f = Ins \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "obtain n l where [simp]: \"ss = [(n,l)]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n l. ss = [(n, l)] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 3(2)"], ["proof (prove)\nusing this:\n  length ss = arity f\n\ngoal (1 subgoal):\n 1. (\\<And>n l. ss = [(n, l)] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto)"], ["proof (state)\nthis:\n  ss = [(n, l)]\n\ngoal (1 subgoal):\n 1. f = Ins \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)\n 2. \\<not> ?P \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "assume \"l=0\""], ["proof (state)\nthis:\n  l = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)\n 2. \\<not> ?P \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  l = 0\n\ngoal (1 subgoal):\n 1. real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "using 3"], ["proof (prove)\nusing this:\n  l = 0\n  \\<forall>s\\<in>set ss.\n     case case s of (x, y) \\<Rightarrow> (real x, real y) of\n     (n, l) \\<Rightarrow>\n       if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n  length ss = arity f\n\ngoal (1 subgoal):\n 1. real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "by (simp)"], ["proof (state)\nthis:\n  real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n  \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)\n\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "assume [arith]: \"l\\<noteq>0\""], ["proof (state)\nthis:\n  l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)\n 2. \\<not> ?P \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "assume \"n<l\""], ["proof (state)\nthis:\n  n < l\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)\n 2. \\<not> ?P \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  n < l\n\ngoal (1 subgoal):\n 1. real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "using 3 ac"], ["proof (prove)\nusing this:\n  n < l\n  \\<forall>s\\<in>set ss.\n     case case s of (x, y) \\<Rightarrow> (real x, real y) of\n     (n, l) \\<Rightarrow>\n       if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n  length ss = arity f\n  1 / (c - 1) \\<le> a\n\ngoal (1 subgoal):\n 1. real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "by(simp add: algebra_simps b_def)"], ["proof (state)\nthis:\n  real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n  \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)\n\ngoal (1 subgoal):\n 1. \\<not> n < l \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> n < l \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "assume \"\\<not> n<l\""], ["proof (state)\nthis:\n  \\<not> n < l\n\ngoal (1 subgoal):\n 1. \\<not> n < l \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "hence [simp]: \"n=l\""], ["proof (prove)\nusing this:\n  \\<not> n < l\n\ngoal (1 subgoal):\n 1. n = l", "using 3"], ["proof (prove)\nusing this:\n  \\<not> n < l\n  \\<forall>s\\<in>set ss.\n     case case s of (x, y) \\<Rightarrow> (real x, real y) of\n     (n, l) \\<Rightarrow>\n       if l = 0 then n = 0 else n \\<le> l \\<and> b / a * l \\<le> n\n  length ss = arity f\n\ngoal (1 subgoal):\n 1. n = l", "by simp"], ["proof (state)\nthis:\n  n = l\n\ngoal (1 subgoal):\n 1. \\<not> n < l \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "have \"cost Ins [(n,l)] + \\<Phi> (ins (n,l)) - \\<Phi>(n,l) = l + a + 1 + (- b*ceiling(c*l)) + b*l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (cost Ins [(n, l)]) + \\<Phi> (ins (n, l)) - \\<Phi> (n, l) =\n    real l + a + 1 + - b * real_of_int \\<lceil>c * real l\\<rceil> +\n    b * real l", "using \\<open>l\\<noteq>0\\<close>"], ["proof (prove)\nusing this:\n  l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. real (cost Ins [(n, l)]) + \\<Phi> (ins (n, l)) - \\<Phi> (n, l) =\n    real l + a + 1 + - b * real_of_int \\<lceil>c * real l\\<rceil> +\n    b * real l", "by(simp add: algebra_simps less_trans[of \"-1::real\" 0])"], ["proof (state)\nthis:\n  real (cost Ins [(n, l)]) + \\<Phi> (ins (n, l)) - \\<Phi> (n, l) =\n  real l + a + 1 + - b * real_of_int \\<lceil>c * real l\\<rceil> + b * real l\n\ngoal (1 subgoal):\n 1. \\<not> n < l \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "also"], ["proof (state)\nthis:\n  real (cost Ins [(n, l)]) + \\<Phi> (ins (n, l)) - \\<Phi> (n, l) =\n  real l + a + 1 + - b * real_of_int \\<lceil>c * real l\\<rceil> + b * real l\n\ngoal (1 subgoal):\n 1. \\<not> n < l \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "have \"- b * ceiling(c*l) \\<le> - b * (c*l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - b * real_of_int \\<lceil>c * real l\\<rceil> \\<le> - b * (c * real l)", "by (simp add: ceiling_correct)"], ["proof (state)\nthis:\n  - b * real_of_int \\<lceil>c * real l\\<rceil> \\<le> - b * (c * real l)\n\ngoal (1 subgoal):\n 1. \\<not> n < l \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "also"], ["proof (state)\nthis:\n  - b * real_of_int \\<lceil>c * real l\\<rceil> \\<le> - b * (c * real l)\n\ngoal (1 subgoal):\n 1. \\<not> n < l \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "have \"l + a + 1 + - b*(c*l) + b*l = a + 1 + l*(1 - b*(c - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real l + a + 1 + - b * (c * real l) + b * real l =\n    a + 1 + real l * (1 - b * (c - 1))", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  real l + a + 1 + - b * (c * real l) + b * real l =\n  a + 1 + real l * (1 - b * (c - 1))\n\ngoal (1 subgoal):\n 1. \\<not> n < l \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "also"], ["proof (state)\nthis:\n  real l + a + 1 + - b * (c * real l) + b * real l =\n  a + 1 + real l * (1 - b * (c - 1))\n\ngoal (1 subgoal):\n 1. \\<not> n < l \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "have \"b*(c - 1) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b * (c - 1) = 1", "by(simp add: b_def)"], ["proof (state)\nthis:\n  b * (c - 1) = 1\n\ngoal (1 subgoal):\n 1. \\<not> n < l \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "also"], ["proof (state)\nthis:\n  b * (c - 1) = 1\n\ngoal (1 subgoal):\n 1. \\<not> n < l \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "have \"a + 1 + (real l)*(1 - 1) = a+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a + 1 + real l * (1 - 1) = a + 1", "by simp"], ["proof (state)\nthis:\n  a + 1 + real l * (1 - 1) = a + 1\n\ngoal (1 subgoal):\n 1. \\<not> n < l \\<Longrightarrow>\n    real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      real l + a + 1 + x + b * real l\n      \\<le> real l + a + 1 + y + b * real l) \\<Longrightarrow>\n  real (cost Ins [(n, l)]) + \\<Phi> (ins (n, l)) - \\<Phi> (n, l) \\<le> a + 1", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      real l + a + 1 + x + b * real l\n      \\<le> real l + a + 1 + y + b * real l) \\<Longrightarrow>\n  real (cost Ins [(n, l)]) + \\<Phi> (ins (n, l)) - \\<Phi> (n, l) \\<le> a + 1\n\ngoal (1 subgoal):\n 1. real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)", "by simp"], ["proof (state)\nthis:\n  real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n  \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n  \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n  \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real (cost f ss) + \\<Phi> (exec f ss) - sum_list (map \\<Phi> ss)\n  \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> a + 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* Dyn_Tab2 *)"], ["", "subsection \"Dynamic tables: insert and delete\""], ["", "locale Dyn_Tab3\nbegin"], ["", "type_synonym tab = \"nat \\<times> nat\""], ["", "datatype op = Empty | Ins | Del"], ["", "fun arity :: \"op \\<Rightarrow> nat\" where\n\"arity Empty = 0\" |\n\"arity Ins = 1\" |\n\"arity Del = 1\""], ["", "fun exec :: \"op \\<Rightarrow> tab list \\<Rightarrow> tab\" where\n\"exec Empty [] = (0::nat,0::nat)\" |\n\"exec Ins [(n,l)] = (n+1, if n<l then l else if l=0 then 1 else 2*l)\" |\n\"exec Del [(n,l)] = (n-1, if n\\<le>1 then 0 else if 4*(n - 1)<l then l div 2 else l)\""], ["", "fun cost :: \"op \\<Rightarrow> tab list \\<Rightarrow> nat\" where\n\"cost Empty _ = 1\" |\n\"cost Ins [(n,l)] = (if n<l then 1 else n+1)\" |\n\"cost Del [(n,l)] = (if n\\<le>1 then 1 else if 4*(n - 1)<l then n else 1)\""], ["", "interpretation Amortized\nwhere arity = arity and exec = exec\nand inv = \"\\<lambda>(n,l). if l=0 then n=0 else n \\<le> l \\<and> l \\<le> 4*n\"\nand cost = cost and \\<Phi> = \"(\\<lambda>(n,l). if 2*n < l then l/2 - n else 2*n - l)\"\nand U = \"\\<lambda>f _. case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> 3 | Del \\<Rightarrow> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Amortized arity exec\n     (\\<lambda>(n, l).\n         if l = 0 then n = 0 else n \\<le> l \\<and> l \\<le> 4 * n)\n     cost\n     (\\<lambda>(n, l).\n         if 2 * n < l then real l / 2 - real n else real (2 * n - l))\n     (\\<lambda>f _.\n         case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> 3\n         | Del \\<Rightarrow> 2)", "proof (standard, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0\n                     else n \\<le> l \\<and> l \\<le> 4 * n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> case exec f ss of\n                         (n, l) \\<Rightarrow>\n                           if l = 0 then n = 0\n                           else n \\<le> l \\<and> l \\<le> 4 * n\n 2. \\<And>s.\n       case s of\n       (n, l) \\<Rightarrow>\n         if l = 0 then n = 0\n         else n \\<le> l \\<and> l \\<le> 4 * n \\<Longrightarrow>\n       0 \\<le> (case s of\n                (n, l) \\<Rightarrow>\n                  if 2 * n < l then real l / 2 - real n\n                  else real (2 * n - l))\n 3. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0\n                     else n \\<le> l \\<and> l \\<le> 4 * n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         (case exec f ss of\n                          (n, l) \\<Rightarrow>\n                            if 2 * n < l then real l / 2 - real n\n                            else real (2 * n - l)) -\n                         (\\<Sum>(n,\n                             l)\\<leftarrow>ss. if 2 * n < l\n         then real l / 2 - real n else real (2 * n - l))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> 3 | Del \\<Rightarrow> 2)", "case (1 _ f)"], ["proof (state)\nthis:\n  \\<forall>s\\<in>set ss_.\n     case s of\n     (n, l) \\<Rightarrow>\n       if l = 0 then n = 0 else n \\<le> l \\<and> l \\<le> 4 * n\n  length ss_ = arity f\n\ngoal (3 subgoals):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0\n                     else n \\<le> l \\<and> l \\<le> 4 * n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> case exec f ss of\n                         (n, l) \\<Rightarrow>\n                           if l = 0 then n = 0\n                           else n \\<le> l \\<and> l \\<le> 4 * n\n 2. \\<And>s.\n       case s of\n       (n, l) \\<Rightarrow>\n         if l = 0 then n = 0\n         else n \\<le> l \\<and> l \\<le> 4 * n \\<Longrightarrow>\n       0 \\<le> (case s of\n                (n, l) \\<Rightarrow>\n                  if 2 * n < l then real l / 2 - real n\n                  else real (2 * n - l))\n 3. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0\n                     else n \\<le> l \\<and> l \\<le> 4 * n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         (case exec f ss of\n                          (n, l) \\<Rightarrow>\n                            if 2 * n < l then real l / 2 - real n\n                            else real (2 * n - l)) -\n                         (\\<Sum>(n,\n                             l)\\<leftarrow>ss. if 2 * n < l\n         then real l / 2 - real n else real (2 * n - l))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> 3 | Del \\<Rightarrow> 2)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>s\\<in>set ss_.\n     case s of\n     (n, l) \\<Rightarrow>\n       if l = 0 then n = 0 else n \\<le> l \\<and> l \\<le> 4 * n\n  length ss_ = arity f\n\ngoal (1 subgoal):\n 1. case exec f ss_ of\n    (n, l) \\<Rightarrow>\n      if l = 0 then n = 0 else n \\<le> l \\<and> l \\<le> 4 * n", "by (cases f) (auto split: if_splits)"], ["proof (state)\nthis:\n  case exec f ss_ of\n  (n, l) \\<Rightarrow>\n    if l = 0 then n = 0 else n \\<le> l \\<and> l \\<le> 4 * n\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       case s of\n       (n, l) \\<Rightarrow>\n         if l = 0 then n = 0\n         else n \\<le> l \\<and> l \\<le> 4 * n \\<Longrightarrow>\n       0 \\<le> (case s of\n                (n, l) \\<Rightarrow>\n                  if 2 * n < l then real l / 2 - real n\n                  else real (2 * n - l))\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0\n                     else n \\<le> l \\<and> l \\<le> 4 * n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         (case exec f ss of\n                          (n, l) \\<Rightarrow>\n                            if 2 * n < l then real l / 2 - real n\n                            else real (2 * n - l)) -\n                         (\\<Sum>(n,\n                             l)\\<leftarrow>ss. if 2 * n < l\n         then real l / 2 - real n else real (2 * n - l))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> 3 | Del \\<Rightarrow> 2)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       case s of\n       (n, l) \\<Rightarrow>\n         if l = 0 then n = 0\n         else n \\<le> l \\<and> l \\<le> 4 * n \\<Longrightarrow>\n       0 \\<le> (case s of\n                (n, l) \\<Rightarrow>\n                  if 2 * n < l then real l / 2 - real n\n                  else real (2 * n - l))\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0\n                     else n \\<le> l \\<and> l \\<le> 4 * n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         (case exec f ss of\n                          (n, l) \\<Rightarrow>\n                            if 2 * n < l then real l / 2 - real n\n                            else real (2 * n - l)) -\n                         (\\<Sum>(n,\n                             l)\\<leftarrow>ss. if 2 * n < l\n         then real l / 2 - real n else real (2 * n - l))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> 3 | Del \\<Rightarrow> 2)", "case 2"], ["proof (state)\nthis:\n  case s_ of\n  (n, l) \\<Rightarrow>\n    if l = 0 then n = 0 else n \\<le> l \\<and> l \\<le> 4 * n\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       case s of\n       (n, l) \\<Rightarrow>\n         if l = 0 then n = 0\n         else n \\<le> l \\<and> l \\<le> 4 * n \\<Longrightarrow>\n       0 \\<le> (case s of\n                (n, l) \\<Rightarrow>\n                  if 2 * n < l then real l / 2 - real n\n                  else real (2 * n - l))\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0\n                     else n \\<le> l \\<and> l \\<le> 4 * n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         (case exec f ss of\n                          (n, l) \\<Rightarrow>\n                            if 2 * n < l then real l / 2 - real n\n                            else real (2 * n - l)) -\n                         (\\<Sum>(n,\n                             l)\\<leftarrow>ss. if 2 * n < l\n         then real l / 2 - real n else real (2 * n - l))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> 3 | Del \\<Rightarrow> 2)", "thus ?case"], ["proof (prove)\nusing this:\n  case s_ of\n  (n, l) \\<Rightarrow>\n    if l = 0 then n = 0 else n \\<le> l \\<and> l \\<le> 4 * n\n\ngoal (1 subgoal):\n 1. 0 \\<le> (case s_ of\n             (n, l) \\<Rightarrow>\n               if 2 * n < l then real l / 2 - real n else real (2 * n - l))", "by(auto split: prod.splits)"], ["proof (state)\nthis:\n  0 \\<le> (case s_ of\n           (n, l) \\<Rightarrow>\n             if 2 * n < l then real l / 2 - real n else real (2 * n - l))\n\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0\n                     else n \\<le> l \\<and> l \\<le> 4 * n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         (case exec f ss of\n                          (n, l) \\<Rightarrow>\n                            if 2 * n < l then real l / 2 - real n\n                            else real (2 * n - l)) -\n                         (\\<Sum>(n,\n                             l)\\<leftarrow>ss. if 2 * n < l\n         then real l / 2 - real n else real (2 * n - l))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> 3 | Del \\<Rightarrow> 2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0\n                     else n \\<le> l \\<and> l \\<le> 4 * n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         (case exec f ss of\n                          (n, l) \\<Rightarrow>\n                            if 2 * n < l then real l / 2 - real n\n                            else real (2 * n - l)) -\n                         (\\<Sum>(n,\n                             l)\\<leftarrow>ss. if 2 * n < l\n         then real l / 2 - real n else real (2 * n - l))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> 3 | Del \\<Rightarrow> 2)", "case (3 _ f)"], ["proof (state)\nthis:\n  \\<forall>s\\<in>set ss_.\n     case s of\n     (n, l) \\<Rightarrow>\n       if l = 0 then n = 0 else n \\<le> l \\<and> l \\<le> 4 * n\n  length ss_ = arity f\n\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (n, l) \\<Rightarrow>\n                     if l = 0 then n = 0\n                     else n \\<le> l \\<and> l \\<le> 4 * n;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         (case exec f ss of\n                          (n, l) \\<Rightarrow>\n                            if 2 * n < l then real l / 2 - real n\n                            else real (2 * n - l)) -\n                         (\\<Sum>(n,\n                             l)\\<leftarrow>ss. if 2 * n < l\n         then real l / 2 - real n else real (2 * n - l))\n                         \\<le> (case f of Empty \\<Rightarrow> 1\n                                | Ins \\<Rightarrow> 3 | Del \\<Rightarrow> 2)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>s\\<in>set ss_.\n     case s of\n     (n, l) \\<Rightarrow>\n       if l = 0 then n = 0 else n \\<le> l \\<and> l \\<le> 4 * n\n  length ss_ = arity f\n\ngoal (1 subgoal):\n 1. real (cost f ss_) +\n    (case exec f ss_ of\n     (n, l) \\<Rightarrow>\n       if 2 * n < l then real l / 2 - real n else real (2 * n - l)) -\n    (\\<Sum>(n,\n        l)\\<leftarrow>ss_. if 2 * n < l then real l / 2 - real n\n                           else real (2 * n - l))\n    \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> 3\n           | Del \\<Rightarrow> 2)", "by (cases f)(auto simp: field_simps split: prod.splits)"], ["proof (state)\nthis:\n  real (cost f ss_) +\n  (case exec f ss_ of\n   (n, l) \\<Rightarrow>\n     if 2 * n < l then real l / 2 - real n else real (2 * n - l)) -\n  (\\<Sum>(n,\n      l)\\<leftarrow>ss_. if 2 * n < l then real l / 2 - real n\n                         else real (2 * n - l))\n  \\<le> (case f of Empty \\<Rightarrow> 1 | Ins \\<Rightarrow> 3\n         | Del \\<Rightarrow> 2)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* Dyn_Tab3 *)"], ["", "subsection \"Queue\""], ["", "text\\<open>See, for example, the book by Okasaki~\\cite{Okasaki}.\\<close>"], ["", "locale Queue\nbegin"], ["", "datatype 'a op = Empty | Enq 'a | Deq"], ["", "type_synonym 'a queue = \"'a list * 'a list\""], ["", "fun arity :: \"'a op \\<Rightarrow> nat\" where\n\"arity Empty = 0\" |\n\"arity (Enq _) = 1\" |\n\"arity Deq = 1\""], ["", "fun exec :: \"'a op \\<Rightarrow> 'a queue list \\<Rightarrow> 'a queue\" where\n\"exec Empty [] = ([],[])\" |\n\"exec (Enq x) [(xs,ys)] = (x#xs,ys)\" |\n\"exec Deq [(xs,ys)] = (if ys = [] then ([], tl(rev xs)) else (xs,tl ys))\""], ["", "fun cost :: \"'a op \\<Rightarrow> 'a queue list \\<Rightarrow> nat\" where\n\"cost Empty _ = 0\" |\n\"cost (Enq x) [(xs,ys)] = 1\" |\n\"cost Deq [(xs,ys)] = (if ys = [] then length xs else 0)\""], ["", "interpretation Amortized\nwhere arity = arity and exec = exec and inv = \"\\<lambda>_. True\"\nand cost = cost and \\<Phi> = \"\\<lambda>(xs,ys). length xs\"\nand U = \"\\<lambda>f _. case f of Empty \\<Rightarrow> 0 | Enq _ \\<Rightarrow> 2 | Deq \\<Rightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Amortized arity exec (\\<lambda>_. True) cost\n     (\\<lambda>x. real (case x of (xs, ys) \\<Rightarrow> length xs))\n     (\\<lambda>f _. case f of Enq x \\<Rightarrow> 2 | _ \\<Rightarrow> 0)", "proof (standard, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> True\n 2. \\<And>s.\n       True \\<Longrightarrow>\n       0 \\<le> real (case s of (xs, ys) \\<Rightarrow> length xs)\n 3. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 2\n                                | _ \\<Rightarrow> 0)", "case 1"], ["proof (state)\nthis:\n  \\<forall>s\\<in>set ss_. True\n  length ss_ = arity f_\n\ngoal (3 subgoals):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> True\n 2. \\<And>s.\n       True \\<Longrightarrow>\n       0 \\<le> real (case s of (xs, ys) \\<Rightarrow> length xs)\n 3. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 2\n                                | _ \\<Rightarrow> 0)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. True", "by simp"], ["proof (state)\nthis:\n  True\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       True \\<Longrightarrow>\n       0 \\<le> real (case s of (xs, ys) \\<Rightarrow> length xs)\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 2\n                                | _ \\<Rightarrow> 0)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       True \\<Longrightarrow>\n       0 \\<le> real (case s of (xs, ys) \\<Rightarrow> length xs)\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 2\n                                | _ \\<Rightarrow> 0)", "case 2"], ["proof (state)\nthis:\n  True\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       True \\<Longrightarrow>\n       0 \\<le> real (case s of (xs, ys) \\<Rightarrow> length xs)\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 2\n                                | _ \\<Rightarrow> 0)", "thus ?case"], ["proof (prove)\nusing this:\n  True\n\ngoal (1 subgoal):\n 1. 0 \\<le> real (case s_ of (xs, ys) \\<Rightarrow> length xs)", "by (auto split: prod.splits)"], ["proof (state)\nthis:\n  0 \\<le> real (case s_ of (xs, ys) \\<Rightarrow> length xs)\n\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 2\n                                | _ \\<Rightarrow> 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 2\n                                | _ \\<Rightarrow> 0)", "case 3"], ["proof (state)\nthis:\n  \\<forall>s\\<in>set ss_. True\n  length ss_ = arity f_\n\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 2\n                                | _ \\<Rightarrow> 0)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>s\\<in>set ss_. True\n  length ss_ = arity f_\n\ngoal (1 subgoal):\n 1. real (cost f_ ss_) +\n    real (case exec f_ ss_ of (xs, ys) \\<Rightarrow> length xs) -\n    (\\<Sum>x\\<leftarrow>ss_. real\n                              (case x of (xs, ys) \\<Rightarrow> length xs))\n    \\<le> (case f_ of Enq x \\<Rightarrow> 2 | _ \\<Rightarrow> 0)", "by(auto split: op.split)"], ["proof (state)\nthis:\n  real (cost f_ ss_) +\n  real (case exec f_ ss_ of (xs, ys) \\<Rightarrow> length xs) -\n  (\\<Sum>x\\<leftarrow>ss_. real\n                            (case x of (xs, ys) \\<Rightarrow> length xs))\n  \\<le> (case f_ of Enq x \\<Rightarrow> 2 | _ \\<Rightarrow> 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* Queue *)"], ["", "locale Queue2\nbegin"], ["", "datatype 'a op = Empty | Enq 'a | Deq"], ["", "type_synonym 'a queue = \"'a list * 'a list\""], ["", "fun arity :: \"'a op \\<Rightarrow> nat\" where\n\"arity Empty = 0\" |\n\"arity (Enq _) = 1\" |\n\"arity Deq = 1\""], ["", "fun adjust :: \"'a queue \\<Rightarrow> 'a queue\" where\n\"adjust(xs,ys) = (if ys = [] then ([], rev xs) else (xs,ys))\""], ["", "fun exec :: \"'a op \\<Rightarrow> 'a queue list \\<Rightarrow> 'a queue\" where\n\"exec Empty [] = ([],[])\" |\n\"exec (Enq x) [(xs,ys)] = adjust(x#xs,ys)\" |\n\"exec Deq [(xs,ys)] = adjust (xs, tl ys)\""], ["", "fun cost :: \"'a op \\<Rightarrow> 'a queue list \\<Rightarrow> nat\" where\n\"cost Empty _ = 0\" |\n\"cost (Enq x) [(xs,ys)] = 1 + (if ys = [] then size xs + 1 else 0)\" |\n\"cost Deq [(xs,ys)] = (if tl ys = [] then size xs else 0)\""], ["", "interpretation Amortized\nwhere arity = arity and exec = exec\nand inv = \"\\<lambda>_. True\"\nand cost = cost and \\<Phi> = \"\\<lambda>(xs,ys). size xs\"\nand U = \"\\<lambda>f _. case f of Empty \\<Rightarrow> 0 | Enq _ \\<Rightarrow> 2 | Deq \\<Rightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Amortized arity exec (\\<lambda>_. True) cost\n     (\\<lambda>x. real (case x of (xs, ys) \\<Rightarrow> length xs))\n     (\\<lambda>f _. case f of Enq x \\<Rightarrow> 2 | _ \\<Rightarrow> 0)", "proof (standard, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> True\n 2. \\<And>s.\n       True \\<Longrightarrow>\n       0 \\<le> real (case s of (xs, ys) \\<Rightarrow> length xs)\n 3. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 2\n                                | _ \\<Rightarrow> 0)", "case (1 _ f)"], ["proof (state)\nthis:\n  \\<forall>s\\<in>set ss_. True\n  length ss_ = arity f\n\ngoal (3 subgoals):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> True\n 2. \\<And>s.\n       True \\<Longrightarrow>\n       0 \\<le> real (case s of (xs, ys) \\<Rightarrow> length xs)\n 3. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 2\n                                | _ \\<Rightarrow> 0)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>s\\<in>set ss_. True\n  length ss_ = arity f\n\ngoal (1 subgoal):\n 1. True", "by (cases f) (auto split: if_splits)"], ["proof (state)\nthis:\n  True\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       True \\<Longrightarrow>\n       0 \\<le> real (case s of (xs, ys) \\<Rightarrow> length xs)\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 2\n                                | _ \\<Rightarrow> 0)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       True \\<Longrightarrow>\n       0 \\<le> real (case s of (xs, ys) \\<Rightarrow> length xs)\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 2\n                                | _ \\<Rightarrow> 0)", "case 2"], ["proof (state)\nthis:\n  True\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       True \\<Longrightarrow>\n       0 \\<le> real (case s of (xs, ys) \\<Rightarrow> length xs)\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 2\n                                | _ \\<Rightarrow> 0)", "thus ?case"], ["proof (prove)\nusing this:\n  True\n\ngoal (1 subgoal):\n 1. 0 \\<le> real (case s_ of (xs, ys) \\<Rightarrow> length xs)", "by (auto)"], ["proof (state)\nthis:\n  0 \\<le> real (case s_ of (xs, ys) \\<Rightarrow> length xs)\n\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 2\n                                | _ \\<Rightarrow> 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 2\n                                | _ \\<Rightarrow> 0)", "case (3 _ f)"], ["proof (state)\nthis:\n  \\<forall>s\\<in>set ss_. True\n  length ss_ = arity f\n\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss. True; length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 2\n                                | _ \\<Rightarrow> 0)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>s\\<in>set ss_. True\n  length ss_ = arity f\n\ngoal (1 subgoal):\n 1. real (cost f ss_) +\n    real (case exec f ss_ of (xs, ys) \\<Rightarrow> length xs) -\n    (\\<Sum>x\\<leftarrow>ss_. real\n                              (case x of (xs, ys) \\<Rightarrow> length xs))\n    \\<le> (case f of Enq x \\<Rightarrow> 2 | _ \\<Rightarrow> 0)", "by(cases f) (auto split: if_splits)"], ["proof (state)\nthis:\n  real (cost f ss_) +\n  real (case exec f ss_ of (xs, ys) \\<Rightarrow> length xs) -\n  (\\<Sum>x\\<leftarrow>ss_. real\n                            (case x of (xs, ys) \\<Rightarrow> length xs))\n  \\<le> (case f of Enq x \\<Rightarrow> 2 | _ \\<Rightarrow> 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* Queue2 *)"], ["", "locale Queue3\nbegin"], ["", "datatype 'a op = Empty | Enq 'a | Deq"], ["", "type_synonym 'a queue = \"'a list * 'a list\""], ["", "fun arity :: \"'a op \\<Rightarrow> nat\" where\n\"arity Empty = 0\" |\n\"arity (Enq _) = 1\" |\n\"arity Deq = 1\""], ["", "fun balance :: \"'a queue \\<Rightarrow> 'a queue\" where\n\"balance(xs,ys) = (if size xs \\<le> size ys then (xs,ys) else ([], ys @ rev xs))\""], ["", "fun exec :: \"'a op \\<Rightarrow> 'a queue list \\<Rightarrow> 'a queue\" where\n\"exec Empty [] = ([],[])\" |\n\"exec (Enq x) [(xs,ys)] = balance(x#xs,ys)\" |\n\"exec Deq [(xs,ys)] = balance (xs, tl ys)\""], ["", "fun cost :: \"'a op \\<Rightarrow> 'a queue list \\<Rightarrow> nat\" where\n\"cost Empty _ = 0\" |\n\"cost (Enq x) [(xs,ys)] = 1 + (if size xs + 1 \\<le> size ys then 0 else size xs + 1 + size ys)\" |\n\"cost Deq [(xs,ys)] = (if size xs \\<le> size ys - 1 then 0 else size xs + (size ys - 1))\""], ["", "interpretation Amortized\nwhere arity = arity and exec = exec\nand inv = \"\\<lambda>(xs,ys). size xs \\<le> size ys\"\nand cost = cost and \\<Phi> = \"\\<lambda>(xs,ys). 2 * size xs\"\nand U = \"\\<lambda>f _. case f of Empty \\<Rightarrow> 0 | Enq _ \\<Rightarrow> 3 | Deq \\<Rightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Amortized arity exec (\\<lambda>(xs, ys). length xs \\<le> length ys) cost\n     (\\<lambda>x. real (case x of (xs, ys) \\<Rightarrow> 2 * length xs))\n     (\\<lambda>f _. case f of Enq x \\<Rightarrow> 3 | _ \\<Rightarrow> 0)", "proof (standard, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (xs, ys) \\<Rightarrow> length xs \\<le> length ys;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> case exec f ss of\n                         (xs, ys) \\<Rightarrow> length xs \\<le> length ys\n 2. \\<And>s.\n       case s of\n       (xs, ys) \\<Rightarrow> length xs \\<le> length ys \\<Longrightarrow>\n       0 \\<le> real (case s of (xs, ys) \\<Rightarrow> 2 * length xs)\n 3. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (xs, ys) \\<Rightarrow> length xs \\<le> length ys;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> 2 * length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> 2 * length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 3\n                                | _ \\<Rightarrow> 0)", "case (1 _ f)"], ["proof (state)\nthis:\n  \\<forall>s\\<in>set ss_.\n     case s of (xs, ys) \\<Rightarrow> length xs \\<le> length ys\n  length ss_ = arity f\n\ngoal (3 subgoals):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (xs, ys) \\<Rightarrow> length xs \\<le> length ys;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> case exec f ss of\n                         (xs, ys) \\<Rightarrow> length xs \\<le> length ys\n 2. \\<And>s.\n       case s of\n       (xs, ys) \\<Rightarrow> length xs \\<le> length ys \\<Longrightarrow>\n       0 \\<le> real (case s of (xs, ys) \\<Rightarrow> 2 * length xs)\n 3. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (xs, ys) \\<Rightarrow> length xs \\<le> length ys;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> 2 * length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> 2 * length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 3\n                                | _ \\<Rightarrow> 0)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>s\\<in>set ss_.\n     case s of (xs, ys) \\<Rightarrow> length xs \\<le> length ys\n  length ss_ = arity f\n\ngoal (1 subgoal):\n 1. case exec f ss_ of (xs, ys) \\<Rightarrow> length xs \\<le> length ys", "by (cases f) (auto split: if_splits)"], ["proof (state)\nthis:\n  case exec f ss_ of (xs, ys) \\<Rightarrow> length xs \\<le> length ys\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       case s of\n       (xs, ys) \\<Rightarrow> length xs \\<le> length ys \\<Longrightarrow>\n       0 \\<le> real (case s of (xs, ys) \\<Rightarrow> 2 * length xs)\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (xs, ys) \\<Rightarrow> length xs \\<le> length ys;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> 2 * length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> 2 * length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 3\n                                | _ \\<Rightarrow> 0)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       case s of\n       (xs, ys) \\<Rightarrow> length xs \\<le> length ys \\<Longrightarrow>\n       0 \\<le> real (case s of (xs, ys) \\<Rightarrow> 2 * length xs)\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (xs, ys) \\<Rightarrow> length xs \\<le> length ys;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> 2 * length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> 2 * length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 3\n                                | _ \\<Rightarrow> 0)", "case 2"], ["proof (state)\nthis:\n  case s_ of (xs, ys) \\<Rightarrow> length xs \\<le> length ys\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       case s of\n       (xs, ys) \\<Rightarrow> length xs \\<le> length ys \\<Longrightarrow>\n       0 \\<le> real (case s of (xs, ys) \\<Rightarrow> 2 * length xs)\n 2. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (xs, ys) \\<Rightarrow> length xs \\<le> length ys;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> 2 * length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> 2 * length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 3\n                                | _ \\<Rightarrow> 0)", "thus ?case"], ["proof (prove)\nusing this:\n  case s_ of (xs, ys) \\<Rightarrow> length xs \\<le> length ys\n\ngoal (1 subgoal):\n 1. 0 \\<le> real (case s_ of (xs, ys) \\<Rightarrow> 2 * length xs)", "by (auto)"], ["proof (state)\nthis:\n  0 \\<le> real (case s_ of (xs, ys) \\<Rightarrow> 2 * length xs)\n\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (xs, ys) \\<Rightarrow> length xs \\<le> length ys;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> 2 * length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> 2 * length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 3\n                                | _ \\<Rightarrow> 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (xs, ys) \\<Rightarrow> length xs \\<le> length ys;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> 2 * length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> 2 * length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 3\n                                | _ \\<Rightarrow> 0)", "case (3 _ f)"], ["proof (state)\nthis:\n  \\<forall>s\\<in>set ss_.\n     case s of (xs, ys) \\<Rightarrow> length xs \\<le> length ys\n  length ss_ = arity f\n\ngoal (1 subgoal):\n 1. \\<And>ss f.\n       \\<lbrakk>\\<forall>s\\<in>set ss.\n                   case s of\n                   (xs, ys) \\<Rightarrow> length xs \\<le> length ys;\n        length ss = arity f\\<rbrakk>\n       \\<Longrightarrow> real (cost f ss) +\n                         real\n                          (case exec f ss of\n                           (xs, ys) \\<Rightarrow> 2 * length xs) -\n                         (\\<Sum>x\\<leftarrow>ss. real\n            (case x of (xs, ys) \\<Rightarrow> 2 * length xs))\n                         \\<le> (case f of Enq x \\<Rightarrow> 3\n                                | _ \\<Rightarrow> 0)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>s\\<in>set ss_.\n     case s of (xs, ys) \\<Rightarrow> length xs \\<le> length ys\n  length ss_ = arity f\n\ngoal (1 subgoal):\n 1. real (cost f ss_) +\n    real (case exec f ss_ of (xs, ys) \\<Rightarrow> 2 * length xs) -\n    (\\<Sum>x\\<leftarrow>ss_. real\n                              (case x of\n                               (xs, ys) \\<Rightarrow> 2 * length xs))\n    \\<le> (case f of Enq x \\<Rightarrow> 3 | _ \\<Rightarrow> 0)", "by(cases f) (auto split: prod.splits)"], ["proof (state)\nthis:\n  real (cost f ss_) +\n  real (case exec f ss_ of (xs, ys) \\<Rightarrow> 2 * length xs) -\n  (\\<Sum>x\\<leftarrow>ss_. real\n                            (case x of\n                             (xs, ys) \\<Rightarrow> 2 * length xs))\n  \\<le> (case f of Enq x \\<Rightarrow> 3 | _ \\<Rightarrow> 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* Queue3 *)"], ["", "end"]]}