{"file_name": "/home/qj213/afp-2021-10-22/thys/Amortized_Complexity/Lemmas_log.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Amortized_Complexity", "problem_names": ["lemma ld_sum_inequality:\n  assumes \"x > 0\" \"y > 0\"\n  shows   \"log 2 x + log 2 y + 2 \\<le> 2 * log 2 (x + y)\"", "lemma ld_ld_1_less:\n  \"\\<lbrakk>x > 0; y > 0 \\<rbrakk> \\<Longrightarrow> 1 + log 2 x + log 2 y < 2 * log 2 (x+y)\"", "lemma ld_le_2ld:\n  assumes \"x \\<ge> 0\" \"y \\<ge> 0\" shows \"log 2 (1+x+y) \\<le> 1 + log 2 (1+x) + log 2 (1+y)\"", "lemma ld_ld_less2: assumes \"x \\<ge> 2\" \"y \\<ge> 2\"\n  shows \"1 + log 2 x + log 2 y \\<le> 2 * log 2 (x + y - 1)\""], "translations": [["", "lemma ld_sum_inequality:\n  assumes \"x > 0\" \"y > 0\"\n  shows   \"log 2 x + log 2 y + 2 \\<le> 2 * log 2 (x + y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. log 2 x + log 2 y + 2 \\<le> 2 * log 2 (x + y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. log 2 x + log 2 y + 2 \\<le> 2 * log 2 (x + y)", "have 0: \"0 \\<le> (x-y)^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (x - y)\\<^sup>2", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n  0 < y\n\ngoal (1 subgoal):\n 1. 0 \\<le> (x - y)\\<^sup>2", "by(simp)"], ["proof (state)\nthis:\n  0 \\<le> (x - y)\\<^sup>2\n\ngoal (1 subgoal):\n 1. log 2 x + log 2 y + 2 \\<le> 2 * log 2 (x + y)", "have \"2 powr (2 + log 2 x + log 2 y) = 4 * x * y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 powr (2 + log 2 x + log 2 y) = 4 * x * y", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n  0 < y\n\ngoal (1 subgoal):\n 1. 2 powr (2 + log 2 x + log 2 y) = 4 * x * y", "by(simp add: powr_add)"], ["proof (state)\nthis:\n  2 powr (2 + log 2 x + log 2 y) = 4 * x * y\n\ngoal (1 subgoal):\n 1. log 2 x + log 2 y + 2 \\<le> 2 * log 2 (x + y)", "also"], ["proof (state)\nthis:\n  2 powr (2 + log 2 x + log 2 y) = 4 * x * y\n\ngoal (1 subgoal):\n 1. log 2 x + log 2 y + 2 \\<le> 2 * log 2 (x + y)", "have \"4*x*y \\<le> (x+y)^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 * x * y \\<le> (x + y)\\<^sup>2", "using 0"], ["proof (prove)\nusing this:\n  0 \\<le> (x - y)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 4 * x * y \\<le> (x + y)\\<^sup>2", "by(simp add: algebra_simps numeral_eq_Suc)"], ["proof (state)\nthis:\n  4 * x * y \\<le> (x + y)\\<^sup>2\n\ngoal (1 subgoal):\n 1. log 2 x + log 2 y + 2 \\<le> 2 * log 2 (x + y)", "also"], ["proof (state)\nthis:\n  4 * x * y \\<le> (x + y)\\<^sup>2\n\ngoal (1 subgoal):\n 1. log 2 x + log 2 y + 2 \\<le> 2 * log 2 (x + y)", "have \"\\<dots> = 2 powr (log 2 (x + y) * 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>2 = 2 powr (log 2 (x + y) * 2)", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n  0 < y\n\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>2 = 2 powr (log 2 (x + y) * 2)", "by(simp add: powr_powr[symmetric] powr_numeral)"], ["proof (state)\nthis:\n  (x + y)\\<^sup>2 = 2 powr (log 2 (x + y) * 2)\n\ngoal (1 subgoal):\n 1. log 2 x + log 2 y + 2 \\<le> 2 * log 2 (x + y)", "finally"], ["proof (chain)\npicking this:\n  2 powr (2 + log 2 x + log 2 y) \\<le> 2 powr (log 2 (x + y) * 2)", "show ?thesis"], ["proof (prove)\nusing this:\n  2 powr (2 + log 2 x + log 2 y) \\<le> 2 powr (log 2 (x + y) * 2)\n\ngoal (1 subgoal):\n 1. log 2 x + log 2 y + 2 \\<le> 2 * log 2 (x + y)", "by (simp add: mult_ac)"], ["proof (state)\nthis:\n  log 2 x + log 2 y + 2 \\<le> 2 * log 2 (x + y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ld_ld_1_less:\n  \"\\<lbrakk>x > 0; y > 0 \\<rbrakk> \\<Longrightarrow> 1 + log 2 x + log 2 y < 2 * log 2 (x+y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < x; 0 < y\\<rbrakk>\n    \\<Longrightarrow> 1 + log 2 x + log 2 y < 2 * log 2 (x + y)", "using ld_sum_inequality[of x y]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < x; 0 < y\\<rbrakk>\n  \\<Longrightarrow> log 2 x + log 2 y + 2 \\<le> 2 * log 2 (x + y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < x; 0 < y\\<rbrakk>\n    \\<Longrightarrow> 1 + log 2 x + log 2 y < 2 * log 2 (x + y)", "by linarith"], ["", "(*\nproof -\n  have 1: \"2*x*y < (x+y)^2\" using assms\n    by(simp add: numeral_eq_Suc algebra_simps add_pos_pos)\n  show ?thesis\n    apply(rule powr_less_cancel_iff[of 2, THEN iffD1])\n     apply simp\n    using assms 1 by(simp add: powr_add log_powr[symmetric] powr_numeral)\nqed\n*)"], ["", "lemma ld_le_2ld:\n  assumes \"x \\<ge> 0\" \"y \\<ge> 0\" shows \"log 2 (1+x+y) \\<le> 1 + log 2 (1+x) + log 2 (1+y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. log 2 (1 + x + y) \\<le> 1 + log 2 (1 + x) + log 2 (1 + y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. log 2 (1 + x + y) \\<le> 1 + log 2 (1 + x) + log 2 (1 + y)", "have 1: \"1+x+y \\<le> (x+1)*(y+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + x + y \\<le> (x + 1) * (y + 1)", "using assms"], ["proof (prove)\nusing this:\n  0 \\<le> x\n  0 \\<le> y\n\ngoal (1 subgoal):\n 1. 1 + x + y \\<le> (x + 1) * (y + 1)", "by(simp add: algebra_simps)"], ["proof (state)\nthis:\n  1 + x + y \\<le> (x + 1) * (y + 1)\n\ngoal (1 subgoal):\n 1. log 2 (1 + x + y) \\<le> 1 + log 2 (1 + x) + log 2 (1 + y)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. log 2 (1 + x + y) \\<le> 1 + log 2 (1 + x) + log 2 (1 + y)", "apply(rule powr_le_cancel_iff[of 2, THEN iffD1])"], ["proof (prove)\ngoal (2 subgoals):\n 1. 1 < 2\n 2. 2 powr log 2 (1 + x + y)\n    \\<le> 2 powr (1 + log 2 (1 + x) + log 2 (1 + y))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 powr log 2 (1 + x + y)\n    \\<le> 2 powr (1 + log 2 (1 + x) + log 2 (1 + y))", "using assms 1"], ["proof (prove)\nusing this:\n  0 \\<le> x\n  0 \\<le> y\n  1 + x + y \\<le> (x + 1) * (y + 1)\n\ngoal (1 subgoal):\n 1. 2 powr log 2 (1 + x + y)\n    \\<le> 2 powr (1 + log 2 (1 + x) + log 2 (1 + y))", "by(simp add: powr_add algebra_simps)"], ["proof (state)\nthis:\n  log 2 (1 + x + y) \\<le> 1 + log 2 (1 + x) + log 2 (1 + y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ld_ld_less2: assumes \"x \\<ge> 2\" \"y \\<ge> 2\"\n  shows \"1 + log 2 x + log 2 y \\<le> 2 * log 2 (x + y - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + log 2 x + log 2 y \\<le> 2 * log 2 (x + y - 1)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 + log 2 x + log 2 y \\<le> 2 * log 2 (x + y - 1)", "from assms"], ["proof (chain)\npicking this:\n  2 \\<le> x\n  2 \\<le> y", "have \"2*x \\<le> x*x\" \"2*y \\<le> y*y\""], ["proof (prove)\nusing this:\n  2 \\<le> x\n  2 \\<le> y\n\ngoal (1 subgoal):\n 1. 2 * x \\<le> x * x &&& 2 * y \\<le> y * y", "by simp_all"], ["proof (state)\nthis:\n  2 * x \\<le> x * x\n  2 * y \\<le> y * y\n\ngoal (1 subgoal):\n 1. 1 + log 2 x + log 2 y \\<le> 2 * log 2 (x + y - 1)", "hence 1: \"2 * x * y \\<le> (x + y - 1)^2\""], ["proof (prove)\nusing this:\n  2 * x \\<le> x * x\n  2 * y \\<le> y * y\n\ngoal (1 subgoal):\n 1. 2 * x * y \\<le> (x + y - 1)\\<^sup>2", "by(simp add: numeral_eq_Suc algebra_simps)"], ["proof (state)\nthis:\n  2 * x * y \\<le> (x + y - 1)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 1 + log 2 x + log 2 y \\<le> 2 * log 2 (x + y - 1)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + log 2 x + log 2 y \\<le> 2 * log 2 (x + y - 1)", "apply(rule powr_le_cancel_iff[of 2, THEN iffD1])"], ["proof (prove)\ngoal (2 subgoals):\n 1. 1 < 2\n 2. 2 powr (1 + log 2 x + log 2 y) \\<le> 2 powr (2 * log 2 (x + y - 1))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 powr (1 + log 2 x + log 2 y) \\<le> 2 powr (2 * log 2 (x + y - 1))", "using assms 1"], ["proof (prove)\nusing this:\n  2 \\<le> x\n  2 \\<le> y\n  2 * x * y \\<le> (x + y - 1)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 powr (1 + log 2 x + log 2 y) \\<le> 2 powr (2 * log 2 (x + y - 1))", "by(simp add: powr_add log_powr[symmetric] powr_numeral)"], ["proof (state)\nthis:\n  1 + log 2 x + log 2 y \\<le> 2 * log 2 (x + y - 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}