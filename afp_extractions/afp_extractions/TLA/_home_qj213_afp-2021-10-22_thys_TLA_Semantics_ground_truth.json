{"file_name": "/home/qj213/afp-2021-10-22/thys/TLA/Semantics.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/TLA", "problem_names": ["lemma eventually_defs: \"(w \\<Turnstile> \\<diamond> F) = (\\<exists> n. (w |\\<^sub>s n) \\<Turnstile> F)\"", "lemma angle_action_defs: \"(w \\<Turnstile> \\<diamond>\\<langle>P\\<rangle>_v) = (\\<exists> i. ((w |\\<^sub>s i) \\<Turnstile> P) \\<and> ((w |\\<^sub>s i) \\<Turnstile> v$ \\<noteq> $v))\"", "lemma unch_defs: \"(w \\<Turnstile> Unchanged v) = (((second w) \\<Turnstile> v) = ((first w) \\<Turnstile> v))\"", "lemma linalw:\n  assumes h1: \"a \\<le> b\" and h2: \"(w |\\<^sub>s a) \\<Turnstile> \\<box>A\"\n  shows \"(w |\\<^sub>s b) \\<Turnstile> \\<box>A\"", "lemma stutinv_strictly_stronger: \n  assumes h: \"STUTINV F\" shows \"NSTUTINV F\"", "theorem stut_before: \"STUTINV $F\"", "lemma nstut_after: \"NSTUTINV F$\"", "theorem stut_always: assumes H:\"STUTINV F\" shows \"STUTINV \\<box>F\"", "lemma stut_action_lemma:\n  assumes H: \"NSTUTINV P\" and st: \"s \\<approx> t\" and P: \"t \\<Turnstile> \\<box>[P]_v\"\n  shows \"s \\<Turnstile> \\<box>[P]_v\"", "theorem stut_action: assumes H: \"NSTUTINV P\" shows \"STUTINV \\<box>[P]_v\"", "lemma stut_and: \"\\<lbrakk>STUTINV F;STUTINV G\\<rbrakk> \\<Longrightarrow> STUTINV (F \\<and> G)\"", "lemma stut_or: \"\\<lbrakk>STUTINV F;STUTINV G\\<rbrakk> \\<Longrightarrow> STUTINV (F \\<or> G)\"", "lemma stut_imp: \"\\<lbrakk>STUTINV F;STUTINV G\\<rbrakk> \\<Longrightarrow> STUTINV (F \\<longrightarrow> G)\"", "lemma stut_eq: \"\\<lbrakk>STUTINV F;STUTINV G\\<rbrakk> \\<Longrightarrow> STUTINV (F = G)\"", "lemma stut_noteq: \"\\<lbrakk>STUTINV F;STUTINV G\\<rbrakk> \\<Longrightarrow> STUTINV (F \\<noteq> G)\"", "lemma stut_not: \"STUTINV F \\<Longrightarrow> STUTINV (\\<not> F)\"", "lemma stut_all: \"(\\<And>x. STUTINV (F x)) \\<Longrightarrow> STUTINV (\\<forall> x. F x)\"", "lemma stut_ex: \"(\\<And>x. STUTINV (F x)) \\<Longrightarrow> STUTINV (\\<exists> x. F x)\"", "lemma stut_const: \"STUTINV #c\"", "lemma stut_fun1: \"STUTINV X \\<Longrightarrow> STUTINV (f <X>)\"", "lemma stut_fun2: \"\\<lbrakk>STUTINV X;STUTINV Y\\<rbrakk> \\<Longrightarrow> STUTINV (f <X,Y>)\"", "lemma stut_fun3: \"\\<lbrakk>STUTINV X;STUTINV Y;STUTINV Z\\<rbrakk> \\<Longrightarrow> STUTINV (f <X,Y,Z>)\"", "lemma stut_fun4: \"\\<lbrakk>STUTINV X;STUTINV Y;STUTINV Z; STUTINV W\\<rbrakk> \\<Longrightarrow> STUTINV (f <X,Y,Z,W>)\"", "lemma stut_plus: \"\\<lbrakk>STUTINV x;STUTINV y\\<rbrakk> \\<Longrightarrow> STUTINV (x+y)\"", "lemma nstut_nexts: assumes H: \"STUTINV F\" shows \"NSTUTINV \\<circle>F\"", "lemma nstut_and: \"\\<lbrakk>NSTUTINV F;NSTUTINV G\\<rbrakk> \\<Longrightarrow> NSTUTINV (F \\<and> G)\"", "lemma nstut_or: \"\\<lbrakk>NSTUTINV F;NSTUTINV G\\<rbrakk> \\<Longrightarrow> NSTUTINV (F \\<or> G)\"", "lemma nstut_imp: \"\\<lbrakk>NSTUTINV F;NSTUTINV G\\<rbrakk> \\<Longrightarrow> NSTUTINV (F \\<longrightarrow> G)\"", "lemma nstut_eq: \"\\<lbrakk>NSTUTINV F; NSTUTINV G\\<rbrakk> \\<Longrightarrow> NSTUTINV (F = G)\"", "lemma nstut_not: \"NSTUTINV F \\<Longrightarrow> NSTUTINV (\\<not> F)\"", "lemma nstut_noteq: \"\\<lbrakk>NSTUTINV F; NSTUTINV G\\<rbrakk> \\<Longrightarrow> NSTUTINV (F \\<noteq> G)\"", "lemma nstut_all: \"(\\<And>x. NSTUTINV (F x)) \\<Longrightarrow> NSTUTINV (\\<forall> x. F x)\"", "lemma nstut_ex: \"(\\<And>x. NSTUTINV (F x)) \\<Longrightarrow> NSTUTINV (\\<exists> x. F x)\"", "lemma nstut_const: \"NSTUTINV #c\"", "lemma nstut_fun1: \"NSTUTINV X \\<Longrightarrow> NSTUTINV (f <X>)\"", "lemma nstut_fun2: \"\\<lbrakk>NSTUTINV X; NSTUTINV Y\\<rbrakk> \\<Longrightarrow> NSTUTINV (f <X,Y>)\"", "lemma nstut_fun3: \"\\<lbrakk>NSTUTINV X; NSTUTINV Y; NSTUTINV Z\\<rbrakk> \\<Longrightarrow> NSTUTINV (f <X,Y,Z>)\"", "lemma nstut_fun4: \"\\<lbrakk>NSTUTINV X; NSTUTINV Y; NSTUTINV Z; NSTUTINV W\\<rbrakk> \\<Longrightarrow> NSTUTINV (f <X,Y,Z,W>)\"", "lemma nstut_plus: \"\\<lbrakk>NSTUTINV x;NSTUTINV y\\<rbrakk> \\<Longrightarrow> NSTUTINV (x+y)\"", "lemmas nstut_before = stut_before[THEN stutinv_strictly_stronger]", "lemma nstut_unch: \"NSTUTINV (Unchanged v)\"", "lemma nstut_actrans: \"NSTUTINV P \\<Longrightarrow> NSTUTINV [P]_v\"", "lemma stut_eventually: \"STUTINV F \\<Longrightarrow> STUTINV \\<diamond>F\"", "lemma stut_leadsto: \"\\<lbrakk>STUTINV F; STUTINV G\\<rbrakk> \\<Longrightarrow> STUTINV (F \\<leadsto> G)\"", "lemma stut_angle_action: \"NSTUTINV P \\<Longrightarrow> STUTINV \\<diamond>\\<langle>P\\<rangle>_v\"", "lemma nstut_angle_acttrans: \"NSTUTINV P \\<Longrightarrow> NSTUTINV \\<langle>P\\<rangle>_v\"", "lemmas stutinvs = stut_before stut_always stut_action\n  stut_and stut_or stut_imp stut_eq stut_noteq stut_not\n  stut_all stut_ex stut_eventually stut_leadsto stut_angle_action stut_const \n  stut_fun1 stut_fun2 stut_fun3 stut_fun4", "lemmas nstutinvs =  nstut_after nstut_nexts nstut_actrans\n  nstut_unch nstut_and nstut_or nstut_imp nstut_eq nstut_noteq nstut_not\n  nstut_all nstut_ex nstut_angle_acttrans stutinv_strictly_stronger \n  nstut_fun1 nstut_fun2 nstut_fun3 nstut_fun4 stutinvs[THEN stutinv_strictly_stronger]", "lemmas bothstutinvs = stutinvs nstutinvs"], "translations": [["", "lemma eventually_defs: \"(w \\<Turnstile> \\<diamond> F) = (\\<exists> n. (w |\\<^sub>s n) \\<Turnstile> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond>F) w = (\\<exists>n. F (w |\\<^sub>s n))", "by (simp add: eventually_def always_def)"], ["", "lemma angle_action_defs: \"(w \\<Turnstile> \\<diamond>\\<langle>P\\<rangle>_v) = (\\<exists> i. ((w |\\<^sub>s i) \\<Turnstile> P) \\<and> ((w |\\<^sub>s i) \\<Turnstile> v$ \\<noteq> $v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond>\\<langle>P\\<rangle>_v) w =\n    (\\<exists>i.\n        P (w |\\<^sub>s i) \\<and>\n        ((w |\\<^sub>s i) \\<Turnstile> v$ \\<noteq> $v))", "by (simp add: angle_action_def action_def unch_def)"], ["", "lemma unch_defs: \"(w \\<Turnstile> Unchanged v) = (((second w) \\<Turnstile> v) = ((first w) \\<Turnstile> v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Unchanged v) w = (v (second w) = v (first w))", "by (simp add: unch_def before_def nexts_def after_def tail_def suffix_def first_def second_def)"], ["", "lemma linalw:\n  assumes h1: \"a \\<le> b\" and h2: \"(w |\\<^sub>s a) \\<Turnstile> \\<box>A\"\n  shows \"(w |\\<^sub>s b) \\<Turnstile> \\<box>A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<box>A) (w |\\<^sub>s b)", "proof (clarsimp simp: always_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. A (w |\\<^sub>s b |\\<^sub>s n)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. A (w |\\<^sub>s b |\\<^sub>s n)", "from h1"], ["proof (chain)\npicking this:\n  a \\<le> b", "obtain k where g1: \"b = a + k\""], ["proof (prove)\nusing this:\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. (\\<And>k. b = a + k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto simp: le_iff_add)"], ["proof (state)\nthis:\n  b = a + k\n\ngoal (1 subgoal):\n 1. \\<And>n. A (w |\\<^sub>s b |\\<^sub>s n)", "with h2"], ["proof (chain)\npicking this:\n  (\\<box>A) (w |\\<^sub>s a)\n  b = a + k", "show \"(w |\\<^sub>s b |\\<^sub>s n) \\<Turnstile> A\""], ["proof (prove)\nusing this:\n  (\\<box>A) (w |\\<^sub>s a)\n  b = a + k\n\ngoal (1 subgoal):\n 1. A (w |\\<^sub>s b |\\<^sub>s n)", "by (auto simp: always_def suffix_plus ac_simps)"], ["proof (state)\nthis:\n  A (w |\\<^sub>s b |\\<^sub>s n)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Invariance Under Stuttering\""], ["", "text \\<open>\n  A key feature of \\tlastar{} is that specification at different abstraction\n  levels can be compared. The soundness of this relies on the stuttering invariance \n  of formulas. Since the embedding is shallow, it cannot be shown that a generic \n  \\tlastar{} formula is stuttering invariant. However, this section will show that \n  each operator is stuttering invariant or preserves stuttering invariance in an\n  appropriate sense, which can be used to show stuttering invariance\n  for given specifications. \n\n  Formula \\<open>F\\<close> is stuttering invariant if for any two similar behaviours\n  (i.e., sequences of states), \\<open>F\\<close> holds in one iff it holds in the other.\n  The definition is generalised to arbitrary expressions, and not just predicates.\n\\<close>"], ["", "definition stutinv :: \"('a,'b) formfun \\<Rightarrow> bool\"\nwhere \"stutinv F \\<equiv> \\<forall> \\<sigma> \\<tau>. \\<sigma> \\<approx> \\<tau> \\<longrightarrow> (\\<sigma> \\<Turnstile> F) = (\\<tau> \\<Turnstile> F)\""], ["", "text\\<open>\n  The requirement for stuttering invariance is too strong for pre-formulas. \n  For example, an action formula specifies a relation between the first two states\n  of a behaviour, and will rarely be satisfied by a stuttering step. This is why\n  pre-formulas are ``protected'' by (square or angle) brackets in \\tlastar{}:\n  the only place a pre-formula \\<open>P\\<close> can be used is inside an action:\n  \\<open>\\<box>[P]_v\\<close>.\n  To show that \\<open>\\<box>[P]_v\\<close> is stuttering invariant, is must be shown that a \n  slightly weaker predicate holds for @{term P}. For example, if @{term P} contains \n  a term of the form \\<open>\\<circle>\\<circle>Q\\<close>, then it is not a well-formed pre-formula, thus \n  \\<open>\\<box>[P]_v\\<close> is not stuttering invariant. This weaker version of\n  stuttering invariance has been named \\emph{near stuttering invariance}.\n\\<close>"], ["", "definition nstutinv :: \"('a,'b) formfun \\<Rightarrow> bool\"\nwhere \"nstutinv P \\<equiv> \\<forall> \\<sigma> \\<tau>. (first \\<sigma> = first \\<tau>) \\<and> (tail \\<sigma>) \\<approx> (tail \\<tau>) \\<longrightarrow> (\\<sigma> \\<Turnstile> P) = (\\<tau> \\<Turnstile> P)\""], ["", "syntax\n  \"_stutinv\" :: \"lift \\<Rightarrow> bool\" (\"(STUTINV _)\" [40] 40)\n  \"_nstutinv\" :: \"lift \\<Rightarrow> bool\" (\"(NSTUTINV _)\" [40] 40)"], ["", "translations\n  \"_stutinv\" \\<rightleftharpoons> \"CONST stutinv\"\n  \"_nstutinv\" \\<rightleftharpoons> \"CONST nstutinv\""], ["", "text \\<open>\n  Predicate @{term \"stutinv F\"} formalises stuttering invariance for\n  formula @{term F}. That is if two sequences are similar @{term \"s \\<approx> t\"} (equal up\n  to stuttering) then the validity of @{term F} under both @{term s} and @{term t}\n  are equivalent. Predicate @{term \"nstutinv P\"} should be read as \\emph{nearly\n  stuttering invariant} -- and is required for some stuttering invariance proofs.\n\\<close>"], ["", "lemma stutinv_strictly_stronger: \n  assumes h: \"STUTINV F\" shows \"NSTUTINV F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NSTUTINV F", "unfolding nstutinv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma> \\<tau>.\n       first \\<sigma> = first \\<tau> \\<and>\n       tail \\<sigma> \\<approx> tail \\<tau> \\<longrightarrow>\n       F \\<sigma> = F \\<tau>", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<lbrakk>first \\<sigma> = first \\<tau>;\n        tail \\<sigma> \\<approx> tail \\<tau>\\<rbrakk>\n       \\<Longrightarrow> F \\<sigma> = F \\<tau>", "fix s t :: \"nat \\<Rightarrow> 'a\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<lbrakk>first \\<sigma> = first \\<tau>;\n        tail \\<sigma> \\<approx> tail \\<tau>\\<rbrakk>\n       \\<Longrightarrow> F \\<sigma> = F \\<tau>", "assume a1: \"first s = first t\" and a2: \"(tail s) \\<approx> (tail t)\""], ["proof (state)\nthis:\n  first s = first t\n  tail s \\<approx> tail t\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<lbrakk>first \\<sigma> = first \\<tau>;\n        tail \\<sigma> \\<approx> tail \\<tau>\\<rbrakk>\n       \\<Longrightarrow> F \\<sigma> = F \\<tau>", "have \"s \\<approx> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<approx> t", "have tg1: \"(first s) ## (tail s) = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. first s ## tail s = s", "by (rule seq_app_first_tail)"], ["proof (state)\nthis:\n  first s ## tail s = s\n\ngoal (1 subgoal):\n 1. s \\<approx> t", "have tg2: \"(first t) ## (tail t) = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. first t ## tail t = t", "by (rule seq_app_first_tail)"], ["proof (state)\nthis:\n  first t ## tail t = t\n\ngoal (1 subgoal):\n 1. s \\<approx> t", "with a1"], ["proof (chain)\npicking this:\n  first s = first t\n  first t ## tail t = t", "have tg2': \"(first s) ## (tail t) = t\""], ["proof (prove)\nusing this:\n  first s = first t\n  first t ## tail t = t\n\ngoal (1 subgoal):\n 1. first s ## tail t = t", "by simp"], ["proof (state)\nthis:\n  first s ## tail t = t\n\ngoal (1 subgoal):\n 1. s \\<approx> t", "from a2"], ["proof (chain)\npicking this:\n  tail s \\<approx> tail t", "have \"(first s) ## (tail s) \\<approx> (first s) ## (tail t)\""], ["proof (prove)\nusing this:\n  tail s \\<approx> tail t\n\ngoal (1 subgoal):\n 1. first s ## tail s \\<approx> first s ## tail t", "by (rule app_seqsimilar)"], ["proof (state)\nthis:\n  first s ## tail s \\<approx> first s ## tail t\n\ngoal (1 subgoal):\n 1. s \\<approx> t", "with tg1 tg2'"], ["proof (chain)\npicking this:\n  first s ## tail s = s\n  first s ## tail t = t\n  first s ## tail s \\<approx> first s ## tail t", "show ?thesis"], ["proof (prove)\nusing this:\n  first s ## tail s = s\n  first s ## tail t = t\n  first s ## tail s \\<approx> first s ## tail t\n\ngoal (1 subgoal):\n 1. s \\<approx> t", "by simp"], ["proof (state)\nthis:\n  s \\<approx> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<lbrakk>first \\<sigma> = first \\<tau>;\n        tail \\<sigma> \\<approx> tail \\<tau>\\<rbrakk>\n       \\<Longrightarrow> F \\<sigma> = F \\<tau>", "with h"], ["proof (chain)\npicking this:\n  STUTINV F\n  s \\<approx> t", "show \"(s \\<Turnstile> F) = (t \\<Turnstile> F)\""], ["proof (prove)\nusing this:\n  STUTINV F\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. F s = F t", "by (simp add: stutinv_def)"], ["proof (state)\nthis:\n  F s = F t\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \"Properties of @{term stutinv}\""], ["", "text \\<open>\n  This subsection proves stuttering invariance, preservation of stuttering invariance\n  and introduction of stuttering invariance for different formulas. \n  First, state predicates are stuttering invariant.\n\\<close>"], ["", "theorem stut_before: \"STUTINV $F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. STUTINV $F", "proof (clarsimp simp: stutinv_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<sigma> \\<approx> \\<tau> \\<Longrightarrow>\n       ($F) \\<sigma> = ($F) \\<tau>", "fix s t :: \"'a seq\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<sigma> \\<approx> \\<tau> \\<Longrightarrow>\n       ($F) \\<sigma> = ($F) \\<tau>", "assume a1: \"s \\<approx> t\""], ["proof (state)\nthis:\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<sigma> \\<approx> \\<tau> \\<Longrightarrow>\n       ($F) \\<sigma> = ($F) \\<tau>", "hence \"(first s) = (first t)\""], ["proof (prove)\nusing this:\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. first s = first t", "by (rule sim_first)"], ["proof (state)\nthis:\n  first s = first t\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<sigma> \\<approx> \\<tau> \\<Longrightarrow>\n       ($F) \\<sigma> = ($F) \\<tau>", "thus \"(s \\<Turnstile> $F) = (t \\<Turnstile> $F)\""], ["proof (prove)\nusing this:\n  first s = first t\n\ngoal (1 subgoal):\n 1. ($F) s = ($F) t", "by (simp add: before_def)"], ["proof (state)\nthis:\n  ($F) s = ($F) t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nstut_after: \"NSTUTINV F$\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NSTUTINV F$", "proof (clarsimp simp: nstutinv_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<lbrakk>first \\<sigma> = first \\<tau>;\n        tail \\<sigma> \\<approx> tail \\<tau>\\<rbrakk>\n       \\<Longrightarrow> (F$) \\<sigma> = (F$) \\<tau>", "fix s t :: \"'a seq\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<lbrakk>first \\<sigma> = first \\<tau>;\n        tail \\<sigma> \\<approx> tail \\<tau>\\<rbrakk>\n       \\<Longrightarrow> (F$) \\<sigma> = (F$) \\<tau>", "assume a1: \"tail s \\<approx> tail t\""], ["proof (state)\nthis:\n  tail s \\<approx> tail t\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<lbrakk>first \\<sigma> = first \\<tau>;\n        tail \\<sigma> \\<approx> tail \\<tau>\\<rbrakk>\n       \\<Longrightarrow> (F$) \\<sigma> = (F$) \\<tau>", "thus \"(s \\<Turnstile> F$) = (t \\<Turnstile> F$)\""], ["proof (prove)\nusing this:\n  tail s \\<approx> tail t\n\ngoal (1 subgoal):\n 1. (F$) s = (F$) t", "by (simp add: after_def tail_sim_second)"], ["proof (state)\nthis:\n  (F$) s = (F$) t\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>The always operator preserves stuttering invariance.\\<close>"], ["", "theorem stut_always: assumes H:\"STUTINV F\" shows \"STUTINV \\<box>F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. STUTINV \\<box>F", "proof (clarsimp simp: stutinv_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<sigma> \\<approx> \\<tau> \\<Longrightarrow>\n       (\\<box>F) \\<sigma> = (\\<box>F) \\<tau>", "fix s t :: \"'a seq\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<sigma> \\<approx> \\<tau> \\<Longrightarrow>\n       (\\<box>F) \\<sigma> = (\\<box>F) \\<tau>", "assume a2: \"s \\<approx> t\""], ["proof (state)\nthis:\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<sigma> \\<approx> \\<tau> \\<Longrightarrow>\n       (\\<box>F) \\<sigma> = (\\<box>F) \\<tau>", "show \"(s \\<Turnstile> (\\<box> F)) = (t \\<Turnstile> (\\<box> F))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<box>F) s = (\\<box>F) t", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<box>F) s \\<Longrightarrow> (\\<box>F) t\n 2. (\\<box>F) t \\<Longrightarrow> (\\<box>F) s", "assume a1: \"t \\<Turnstile> \\<box> F\""], ["proof (state)\nthis:\n  (\\<box>F) t\n\ngoal (2 subgoals):\n 1. (\\<box>F) s \\<Longrightarrow> (\\<box>F) t\n 2. (\\<box>F) t \\<Longrightarrow> (\\<box>F) s", "show \"s \\<Turnstile> \\<box> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<box>F) s", "proof (clarsimp simp: always_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. F (s |\\<^sub>s n)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. F (s |\\<^sub>s n)", "from a2[THEN sim_step]"], ["proof (chain)\npicking this:\n  \\<exists>m.\n     s |\\<^sub>s ?n \\<approx> t |\\<^sub>s m \\<and>\n     (s |\\<^sub>s Suc ?n \\<approx> t |\\<^sub>s Suc m \\<or>\n      s |\\<^sub>s Suc ?n \\<approx> t |\\<^sub>s m)", "obtain m where m: \"s |\\<^sub>s n \\<approx> t |\\<^sub>s m\""], ["proof (prove)\nusing this:\n  \\<exists>m.\n     s |\\<^sub>s ?n \\<approx> t |\\<^sub>s m \\<and>\n     (s |\\<^sub>s Suc ?n \\<approx> t |\\<^sub>s Suc m \\<or>\n      s |\\<^sub>s Suc ?n \\<approx> t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m\n\ngoal (1 subgoal):\n 1. \\<And>n. F (s |\\<^sub>s n)", "from a1"], ["proof (chain)\npicking this:\n  (\\<box>F) t", "have \"(t |\\<^sub>s m) \\<Turnstile> F\""], ["proof (prove)\nusing this:\n  (\\<box>F) t\n\ngoal (1 subgoal):\n 1. F (t |\\<^sub>s m)", "by (simp add: always_def)"], ["proof (state)\nthis:\n  F (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. \\<And>n. F (s |\\<^sub>s n)", "with H m"], ["proof (chain)\npicking this:\n  STUTINV F\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m\n  F (t |\\<^sub>s m)", "show \"(s |\\<^sub>s n) \\<Turnstile> F\""], ["proof (prove)\nusing this:\n  STUTINV F\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m\n  F (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. F (s |\\<^sub>s n)", "by (simp add: stutinv_def)"], ["proof (state)\nthis:\n  F (s |\\<^sub>s n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<box>F) s\n\ngoal (1 subgoal):\n 1. (\\<box>F) s \\<Longrightarrow> (\\<box>F) t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<box>F) s \\<Longrightarrow> (\\<box>F) t", "assume a1: \"s \\<Turnstile> (\\<box> F)\""], ["proof (state)\nthis:\n  (\\<box>F) s\n\ngoal (1 subgoal):\n 1. (\\<box>F) s \\<Longrightarrow> (\\<box>F) t", "show \"t \\<Turnstile> (\\<box> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<box>F) t", "proof (clarsimp simp: always_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. F (t |\\<^sub>s n)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. F (t |\\<^sub>s n)", "from a2[THEN seqsim_sym, THEN sim_step]"], ["proof (chain)\npicking this:\n  \\<exists>m.\n     t |\\<^sub>s ?n \\<approx> s |\\<^sub>s m \\<and>\n     (t |\\<^sub>s Suc ?n \\<approx> s |\\<^sub>s Suc m \\<or>\n      t |\\<^sub>s Suc ?n \\<approx> s |\\<^sub>s m)", "obtain m where m: \"t |\\<^sub>s n \\<approx> s |\\<^sub>s m\""], ["proof (prove)\nusing this:\n  \\<exists>m.\n     t |\\<^sub>s ?n \\<approx> s |\\<^sub>s m \\<and>\n     (t |\\<^sub>s Suc ?n \\<approx> s |\\<^sub>s Suc m \\<or>\n      t |\\<^sub>s Suc ?n \\<approx> s |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        t |\\<^sub>s n \\<approx> s |\\<^sub>s m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t |\\<^sub>s n \\<approx> s |\\<^sub>s m\n\ngoal (1 subgoal):\n 1. \\<And>n. F (t |\\<^sub>s n)", "from a1"], ["proof (chain)\npicking this:\n  (\\<box>F) s", "have \"(s |\\<^sub>s m) \\<Turnstile> F\""], ["proof (prove)\nusing this:\n  (\\<box>F) s\n\ngoal (1 subgoal):\n 1. F (s |\\<^sub>s m)", "by (simp add: always_def)"], ["proof (state)\nthis:\n  F (s |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. \\<And>n. F (t |\\<^sub>s n)", "with H m"], ["proof (chain)\npicking this:\n  STUTINV F\n  t |\\<^sub>s n \\<approx> s |\\<^sub>s m\n  F (s |\\<^sub>s m)", "show \"(t |\\<^sub>s n) \\<Turnstile> F\""], ["proof (prove)\nusing this:\n  STUTINV F\n  t |\\<^sub>s n \\<approx> s |\\<^sub>s m\n  F (s |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. F (t |\\<^sub>s n)", "by (simp add: stutinv_def)"], ["proof (state)\nthis:\n  F (t |\\<^sub>s n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<box>F) t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<box>F) s = (\\<box>F) t\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Assuming that formula @{term P} is nearly suttering invariant\n  then \\<open>\\<box>[P]_v\\<close> will be stuttering invariant.\n\\<close>"], ["", "lemma stut_action_lemma:\n  assumes H: \"NSTUTINV P\" and st: \"s \\<approx> t\" and P: \"t \\<Turnstile> \\<box>[P]_v\"\n  shows \"s \\<Turnstile> \\<box>[P]_v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<box>[P]_v) s", "proof (clarsimp simp: action_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<not> (Unchanged v) (s |\\<^sub>s i) \\<Longrightarrow>\n       P (s |\\<^sub>s i)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<not> (Unchanged v) (s |\\<^sub>s i) \\<Longrightarrow>\n       P (s |\\<^sub>s i)", "assume \"\\<not> ((s |\\<^sub>s n) \\<Turnstile> Unchanged v)\""], ["proof (state)\nthis:\n  \\<not> (Unchanged v) (s |\\<^sub>s n)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<not> (Unchanged v) (s |\\<^sub>s i) \\<Longrightarrow>\n       P (s |\\<^sub>s i)", "hence v: \"v (s (Suc n)) \\<noteq> v (s n)\""], ["proof (prove)\nusing this:\n  \\<not> (Unchanged v) (s |\\<^sub>s n)\n\ngoal (1 subgoal):\n 1. v (s (Suc n)) \\<noteq> v (s n)", "by (simp add: unch_defs first_def second_def suffix_def)"], ["proof (state)\nthis:\n  v (s (Suc n)) \\<noteq> v (s n)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<not> (Unchanged v) (s |\\<^sub>s i) \\<Longrightarrow>\n       P (s |\\<^sub>s i)", "from st[THEN sim_step]"], ["proof (chain)\npicking this:\n  \\<exists>m.\n     s |\\<^sub>s ?n \\<approx> t |\\<^sub>s m \\<and>\n     (s |\\<^sub>s Suc ?n \\<approx> t |\\<^sub>s Suc m \\<or>\n      s |\\<^sub>s Suc ?n \\<approx> t |\\<^sub>s m)", "obtain m where\n    a2': \"s |\\<^sub>s n \\<approx> t |\\<^sub>s m \n          \\<and> (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or> s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m)\""], ["proof (prove)\nusing this:\n  \\<exists>m.\n     s |\\<^sub>s ?n \\<approx> t |\\<^sub>s m \\<and>\n     (s |\\<^sub>s Suc ?n \\<approx> t |\\<^sub>s Suc m \\<or>\n      s |\\<^sub>s Suc ?n \\<approx> t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<and>\n        (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or>\n         s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<and>\n  (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or>\n   s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<not> (Unchanged v) (s |\\<^sub>s i) \\<Longrightarrow>\n       P (s |\\<^sub>s i)", "hence g1: \"(s |\\<^sub>s n \\<approx> t |\\<^sub>s m)\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<and>\n  (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or>\n   s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s n \\<approx> t |\\<^sub>s m", "by simp"], ["proof (state)\nthis:\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<not> (Unchanged v) (s |\\<^sub>s i) \\<Longrightarrow>\n       P (s |\\<^sub>s i)", "hence g1'': \"first (s |\\<^sub>s n) = first (t |\\<^sub>s m)\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m\n\ngoal (1 subgoal):\n 1. first (s |\\<^sub>s n) = first (t |\\<^sub>s m)", "by (simp add: sim_first)"], ["proof (state)\nthis:\n  first (s |\\<^sub>s n) = first (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<not> (Unchanged v) (s |\\<^sub>s i) \\<Longrightarrow>\n       P (s |\\<^sub>s i)", "hence g1': \"s n = t m\""], ["proof (prove)\nusing this:\n  first (s |\\<^sub>s n) = first (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. s n = t m", "by (simp add: suffix_def first_def)"], ["proof (state)\nthis:\n  s n = t m\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<not> (Unchanged v) (s |\\<^sub>s i) \\<Longrightarrow>\n       P (s |\\<^sub>s i)", "from a2'"], ["proof (chain)\npicking this:\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<and>\n  (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or>\n   s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m)", "have g2: \"s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or> s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<and>\n  (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or>\n   s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or>\n    s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "by simp"], ["proof (state)\nthis:\n  s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or>\n  s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<not> (Unchanged v) (s |\\<^sub>s i) \\<Longrightarrow>\n       P (s |\\<^sub>s i)", "from P"], ["proof (chain)\npicking this:\n  (\\<box>[P]_v) t", "have a1': \"((t |\\<^sub>s m) \\<Turnstile> P) \\<or> ((t |\\<^sub>s m) \\<Turnstile> Unchanged v)\""], ["proof (prove)\nusing this:\n  (\\<box>[P]_v) t\n\ngoal (1 subgoal):\n 1. P (t |\\<^sub>s m) \\<or> (Unchanged v) (t |\\<^sub>s m)", "by (simp add: action_def)"], ["proof (state)\nthis:\n  P (t |\\<^sub>s m) \\<or> (Unchanged v) (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<not> (Unchanged v) (s |\\<^sub>s i) \\<Longrightarrow>\n       P (s |\\<^sub>s i)", "from g2"], ["proof (chain)\npicking this:\n  s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or>\n  s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "show \"(s |\\<^sub>s n) \\<Turnstile> P\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or>\n  s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m\n\ngoal (1 subgoal):\n 1. P (s |\\<^sub>s n)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<Longrightarrow>\n    P (s |\\<^sub>s n)\n 2. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m \\<Longrightarrow>\n    P (s |\\<^sub>s n)", "assume \"s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m\""], ["proof (state)\nthis:\n  s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m\n\ngoal (2 subgoals):\n 1. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<Longrightarrow>\n    P (s |\\<^sub>s n)\n 2. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m \\<Longrightarrow>\n    P (s |\\<^sub>s n)", "hence \"first (s |\\<^sub>s Suc n) = first (t |\\<^sub>s m)\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m\n\ngoal (1 subgoal):\n 1. first (s |\\<^sub>s Suc n) = first (t |\\<^sub>s m)", "by (simp add: sim_first)"], ["proof (state)\nthis:\n  first (s |\\<^sub>s Suc n) = first (t |\\<^sub>s m)\n\ngoal (2 subgoals):\n 1. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<Longrightarrow>\n    P (s |\\<^sub>s n)\n 2. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m \\<Longrightarrow>\n    P (s |\\<^sub>s n)", "hence \"s (Suc n) = t m\""], ["proof (prove)\nusing this:\n  first (s |\\<^sub>s Suc n) = first (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. s (Suc n) = t m", "by (simp add: suffix_def first_def)"], ["proof (state)\nthis:\n  s (Suc n) = t m\n\ngoal (2 subgoals):\n 1. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<Longrightarrow>\n    P (s |\\<^sub>s n)\n 2. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m \\<Longrightarrow>\n    P (s |\\<^sub>s n)", "with g1' v"], ["proof (chain)\npicking this:\n  s n = t m\n  v (s (Suc n)) \\<noteq> v (s n)\n  s (Suc n) = t m", "show ?thesis"], ["proof (prove)\nusing this:\n  s n = t m\n  v (s (Suc n)) \\<noteq> v (s n)\n  s (Suc n) = t m\n\ngoal (1 subgoal):\n 1. P (s |\\<^sub>s n)", "by simp  \\<comment> \\<open>by contradiction\\<close>"], ["proof (state)\nthis:\n  P (s |\\<^sub>s n)\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<Longrightarrow>\n    P (s |\\<^sub>s n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<Longrightarrow>\n    P (s |\\<^sub>s n)", "assume a3: \"s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m\""], ["proof (state)\nthis:\n  s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<Longrightarrow>\n    P (s |\\<^sub>s n)", "hence \"first (s |\\<^sub>s Suc n) = first (t |\\<^sub>s Suc m)\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m\n\ngoal (1 subgoal):\n 1. first (s |\\<^sub>s Suc n) = first (t |\\<^sub>s Suc m)", "by (simp add: sim_first)"], ["proof (state)\nthis:\n  first (s |\\<^sub>s Suc n) = first (t |\\<^sub>s Suc m)\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<Longrightarrow>\n    P (s |\\<^sub>s n)", "hence a3': \"s (Suc n) = t (Suc m)\""], ["proof (prove)\nusing this:\n  first (s |\\<^sub>s Suc n) = first (t |\\<^sub>s Suc m)\n\ngoal (1 subgoal):\n 1. s (Suc n) = t (Suc m)", "by (simp add: suffix_def first_def)"], ["proof (state)\nthis:\n  s (Suc n) = t (Suc m)\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<Longrightarrow>\n    P (s |\\<^sub>s n)", "from a1'"], ["proof (chain)\npicking this:\n  P (t |\\<^sub>s m) \\<or> (Unchanged v) (t |\\<^sub>s m)", "show ?thesis"], ["proof (prove)\nusing this:\n  P (t |\\<^sub>s m) \\<or> (Unchanged v) (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. P (s |\\<^sub>s n)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. P (t |\\<^sub>s m) \\<Longrightarrow> P (s |\\<^sub>s n)\n 2. (Unchanged v) (t |\\<^sub>s m) \\<Longrightarrow> P (s |\\<^sub>s n)", "assume \"(t |\\<^sub>s m) \\<Turnstile> Unchanged v\""], ["proof (state)\nthis:\n  (Unchanged v) (t |\\<^sub>s m)\n\ngoal (2 subgoals):\n 1. P (t |\\<^sub>s m) \\<Longrightarrow> P (s |\\<^sub>s n)\n 2. (Unchanged v) (t |\\<^sub>s m) \\<Longrightarrow> P (s |\\<^sub>s n)", "hence \"v (t (Suc m)) = v (t m)\""], ["proof (prove)\nusing this:\n  (Unchanged v) (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. v (t (Suc m)) = v (t m)", "by (simp add: unch_defs first_def second_def suffix_def)"], ["proof (state)\nthis:\n  v (t (Suc m)) = v (t m)\n\ngoal (2 subgoals):\n 1. P (t |\\<^sub>s m) \\<Longrightarrow> P (s |\\<^sub>s n)\n 2. (Unchanged v) (t |\\<^sub>s m) \\<Longrightarrow> P (s |\\<^sub>s n)", "with g1' a3' v"], ["proof (chain)\npicking this:\n  s n = t m\n  s (Suc n) = t (Suc m)\n  v (s (Suc n)) \\<noteq> v (s n)\n  v (t (Suc m)) = v (t m)", "show ?thesis"], ["proof (prove)\nusing this:\n  s n = t m\n  s (Suc n) = t (Suc m)\n  v (s (Suc n)) \\<noteq> v (s n)\n  v (t (Suc m)) = v (t m)\n\ngoal (1 subgoal):\n 1. P (s |\\<^sub>s n)", "by simp  \\<comment> \\<open>again, by contradiction\\<close>"], ["proof (state)\nthis:\n  P (s |\\<^sub>s n)\n\ngoal (1 subgoal):\n 1. P (t |\\<^sub>s m) \\<Longrightarrow> P (s |\\<^sub>s n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P (t |\\<^sub>s m) \\<Longrightarrow> P (s |\\<^sub>s n)", "assume a4: \"(t |\\<^sub>s m) \\<Turnstile> P\""], ["proof (state)\nthis:\n  P (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. P (t |\\<^sub>s m) \\<Longrightarrow> P (s |\\<^sub>s n)", "from a3"], ["proof (chain)\npicking this:\n  s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m", "have \"tail (s |\\<^sub>s n) \\<approx> tail (t |\\<^sub>s m)\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m\n\ngoal (1 subgoal):\n 1. tail (s |\\<^sub>s n) \\<approx> tail (t |\\<^sub>s m)", "by (simp add: tail_def suffix_plus)"], ["proof (state)\nthis:\n  tail (s |\\<^sub>s n) \\<approx> tail (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. P (t |\\<^sub>s m) \\<Longrightarrow> P (s |\\<^sub>s n)", "with H g1'' a4"], ["proof (chain)\npicking this:\n  NSTUTINV P\n  first (s |\\<^sub>s n) = first (t |\\<^sub>s m)\n  P (t |\\<^sub>s m)\n  tail (s |\\<^sub>s n) \\<approx> tail (t |\\<^sub>s m)", "show ?thesis"], ["proof (prove)\nusing this:\n  NSTUTINV P\n  first (s |\\<^sub>s n) = first (t |\\<^sub>s m)\n  P (t |\\<^sub>s m)\n  tail (s |\\<^sub>s n) \\<approx> tail (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. P (s |\\<^sub>s n)", "by (auto simp: nstutinv_def)"], ["proof (state)\nthis:\n  P (s |\\<^sub>s n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P (s |\\<^sub>s n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P (s |\\<^sub>s n)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem stut_action: assumes H: \"NSTUTINV P\" shows \"STUTINV \\<box>[P]_v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. STUTINV \\<box>[P]_v", "proof (clarsimp simp: stutinv_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<sigma> \\<approx> \\<tau> \\<Longrightarrow>\n       (\\<box>[P]_v) \\<sigma> = (\\<box>[P]_v) \\<tau>", "fix s t :: \"'a seq\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<sigma> \\<approx> \\<tau> \\<Longrightarrow>\n       (\\<box>[P]_v) \\<sigma> = (\\<box>[P]_v) \\<tau>", "assume st: \"s \\<approx> t\""], ["proof (state)\nthis:\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<sigma> \\<approx> \\<tau> \\<Longrightarrow>\n       (\\<box>[P]_v) \\<sigma> = (\\<box>[P]_v) \\<tau>", "show \"(s \\<Turnstile> \\<box>[P]_v) = (t \\<Turnstile> \\<box>[P]_v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<box>[P]_v) s = (\\<box>[P]_v) t", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<box>[P]_v) s \\<Longrightarrow> (\\<box>[P]_v) t\n 2. (\\<box>[P]_v) t \\<Longrightarrow> (\\<box>[P]_v) s", "assume \"t \\<Turnstile> \\<box>[P]_v\""], ["proof (state)\nthis:\n  (\\<box>[P]_v) t\n\ngoal (2 subgoals):\n 1. (\\<box>[P]_v) s \\<Longrightarrow> (\\<box>[P]_v) t\n 2. (\\<box>[P]_v) t \\<Longrightarrow> (\\<box>[P]_v) s", "with H st"], ["proof (chain)\npicking this:\n  NSTUTINV P\n  s \\<approx> t\n  (\\<box>[P]_v) t", "show \"s \\<Turnstile> \\<box>[P]_v\""], ["proof (prove)\nusing this:\n  NSTUTINV P\n  s \\<approx> t\n  (\\<box>[P]_v) t\n\ngoal (1 subgoal):\n 1. (\\<box>[P]_v) s", "by (rule stut_action_lemma)"], ["proof (state)\nthis:\n  (\\<box>[P]_v) s\n\ngoal (1 subgoal):\n 1. (\\<box>[P]_v) s \\<Longrightarrow> (\\<box>[P]_v) t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<box>[P]_v) s \\<Longrightarrow> (\\<box>[P]_v) t", "assume \"s \\<Turnstile> \\<box>[P]_v\""], ["proof (state)\nthis:\n  (\\<box>[P]_v) s\n\ngoal (1 subgoal):\n 1. (\\<box>[P]_v) s \\<Longrightarrow> (\\<box>[P]_v) t", "with H st[THEN seqsim_sym]"], ["proof (chain)\npicking this:\n  NSTUTINV P\n  t \\<approx> s\n  (\\<box>[P]_v) s", "show \"t \\<Turnstile> \\<box>[P]_v\""], ["proof (prove)\nusing this:\n  NSTUTINV P\n  t \\<approx> s\n  (\\<box>[P]_v) s\n\ngoal (1 subgoal):\n 1. (\\<box>[P]_v) t", "by (rule stut_action_lemma)"], ["proof (state)\nthis:\n  (\\<box>[P]_v) t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<box>[P]_v) s = (\\<box>[P]_v) t\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The lemmas below shows that propositional and predicate operators \n  preserve stuttering invariance.\n\\<close>"], ["", "lemma stut_and: \"\\<lbrakk>STUTINV F;STUTINV G\\<rbrakk> \\<Longrightarrow> STUTINV (F \\<and> G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>STUTINV F; STUTINV G\\<rbrakk>\n    \\<Longrightarrow> STUTINV (F \\<and> G)", "by (simp add: stutinv_def)"], ["", "lemma stut_or: \"\\<lbrakk>STUTINV F;STUTINV G\\<rbrakk> \\<Longrightarrow> STUTINV (F \\<or> G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>STUTINV F; STUTINV G\\<rbrakk>\n    \\<Longrightarrow> STUTINV (F \\<or> G)", "by (simp add: stutinv_def)"], ["", "lemma stut_imp: \"\\<lbrakk>STUTINV F;STUTINV G\\<rbrakk> \\<Longrightarrow> STUTINV (F \\<longrightarrow> G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>STUTINV F; STUTINV G\\<rbrakk>\n    \\<Longrightarrow> STUTINV (F \\<longrightarrow> G)", "by (simp add: stutinv_def)"], ["", "lemma stut_eq: \"\\<lbrakk>STUTINV F;STUTINV G\\<rbrakk> \\<Longrightarrow> STUTINV (F = G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>STUTINV F; STUTINV G\\<rbrakk> \\<Longrightarrow> STUTINV F = G", "by (simp add: stutinv_def)"], ["", "lemma stut_noteq: \"\\<lbrakk>STUTINV F;STUTINV G\\<rbrakk> \\<Longrightarrow> STUTINV (F \\<noteq> G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>STUTINV F; STUTINV G\\<rbrakk>\n    \\<Longrightarrow> STUTINV F \\<noteq> G", "by (simp add: stutinv_def)"], ["", "lemma stut_not: \"STUTINV F \\<Longrightarrow> STUTINV (\\<not> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. STUTINV F \\<Longrightarrow> STUTINV \\<not> F", "by (simp add: stutinv_def)"], ["", "lemma stut_all: \"(\\<And>x. STUTINV (F x)) \\<Longrightarrow> STUTINV (\\<forall> x. F x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. STUTINV F x) \\<Longrightarrow> STUTINV (\\<forall>x. F x)", "by (simp add: stutinv_def)"], ["", "lemma stut_ex: \"(\\<And>x. STUTINV (F x)) \\<Longrightarrow> STUTINV (\\<exists> x. F x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. STUTINV F x) \\<Longrightarrow> STUTINV (\\<exists>x. F x)", "by (simp add: stutinv_def)"], ["", "lemma stut_const: \"STUTINV #c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. STUTINV #c", "by (simp add: stutinv_def)"], ["", "lemma stut_fun1: \"STUTINV X \\<Longrightarrow> STUTINV (f <X>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. STUTINV X \\<Longrightarrow> STUTINV f<X>", "by (simp add: stutinv_def)"], ["", "lemma stut_fun2: \"\\<lbrakk>STUTINV X;STUTINV Y\\<rbrakk> \\<Longrightarrow> STUTINV (f <X,Y>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>STUTINV X; STUTINV Y\\<rbrakk> \\<Longrightarrow> STUTINV f<X, Y>", "by (simp add: stutinv_def)"], ["", "lemma stut_fun3: \"\\<lbrakk>STUTINV X;STUTINV Y;STUTINV Z\\<rbrakk> \\<Longrightarrow> STUTINV (f <X,Y,Z>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>STUTINV X; STUTINV Y; STUTINV Z\\<rbrakk>\n    \\<Longrightarrow> STUTINV f<X, Y, Z>", "by (simp add: stutinv_def)"], ["", "lemma stut_fun4: \"\\<lbrakk>STUTINV X;STUTINV Y;STUTINV Z; STUTINV W\\<rbrakk> \\<Longrightarrow> STUTINV (f <X,Y,Z,W>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>STUTINV X; STUTINV Y; STUTINV Z; STUTINV W\\<rbrakk>\n    \\<Longrightarrow> STUTINV f<X, Y, Z, W>", "by (simp add: stutinv_def)"], ["", "lemma stut_plus: \"\\<lbrakk>STUTINV x;STUTINV y\\<rbrakk> \\<Longrightarrow> STUTINV (x+y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>STUTINV x; STUTINV y\\<rbrakk> \\<Longrightarrow> STUTINV x + y", "by (simp add: stutinv_def)"], ["", "subsubsection \"Properties of @{term nstutinv}\""], ["", "text \\<open>\n  This subsection shows analogous properties about near stuttering\n  invariance.\n\n  If a formula @{term F} is stuttering invariant then \\<open>\\<circle>F\\<close> is\n  nearly stuttering invariant.\n\\<close>"], ["", "lemma nstut_nexts: assumes H: \"STUTINV F\" shows \"NSTUTINV \\<circle>F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NSTUTINV \\<circle>F", "using H"], ["proof (prove)\nusing this:\n  STUTINV F\n\ngoal (1 subgoal):\n 1. NSTUTINV \\<circle>F", "by (simp add: stutinv_def nstutinv_def nexts_def)"], ["", "text \\<open>\n  The lemmas below shows that propositional and predicate operators \n  preserves near stuttering invariance.\n\\<close>"], ["", "lemma nstut_and: \"\\<lbrakk>NSTUTINV F;NSTUTINV G\\<rbrakk> \\<Longrightarrow> NSTUTINV (F \\<and> G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>NSTUTINV F; NSTUTINV G\\<rbrakk>\n    \\<Longrightarrow> NSTUTINV (F \\<and> G)", "by (auto simp: nstutinv_def)"], ["", "lemma nstut_or: \"\\<lbrakk>NSTUTINV F;NSTUTINV G\\<rbrakk> \\<Longrightarrow> NSTUTINV (F \\<or> G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>NSTUTINV F; NSTUTINV G\\<rbrakk>\n    \\<Longrightarrow> NSTUTINV (F \\<or> G)", "by (auto simp: nstutinv_def)"], ["", "lemma nstut_imp: \"\\<lbrakk>NSTUTINV F;NSTUTINV G\\<rbrakk> \\<Longrightarrow> NSTUTINV (F \\<longrightarrow> G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>NSTUTINV F; NSTUTINV G\\<rbrakk>\n    \\<Longrightarrow> NSTUTINV (F \\<longrightarrow> G)", "by (auto simp: nstutinv_def)"], ["", "lemma nstut_eq: \"\\<lbrakk>NSTUTINV F; NSTUTINV G\\<rbrakk> \\<Longrightarrow> NSTUTINV (F = G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>NSTUTINV F; NSTUTINV G\\<rbrakk>\n    \\<Longrightarrow> NSTUTINV F = G", "by (force simp: nstutinv_def)"], ["", "lemma nstut_not: \"NSTUTINV F \\<Longrightarrow> NSTUTINV (\\<not> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NSTUTINV F \\<Longrightarrow> NSTUTINV \\<not> F", "by (auto simp: nstutinv_def)"], ["", "lemma nstut_noteq: \"\\<lbrakk>NSTUTINV F; NSTUTINV G\\<rbrakk> \\<Longrightarrow> NSTUTINV (F \\<noteq> G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>NSTUTINV F; NSTUTINV G\\<rbrakk>\n    \\<Longrightarrow> NSTUTINV F \\<noteq> G", "by (simp add: nstut_eq nstut_not)"], ["", "lemma nstut_all: \"(\\<And>x. NSTUTINV (F x)) \\<Longrightarrow> NSTUTINV (\\<forall> x. F x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. NSTUTINV F x) \\<Longrightarrow> NSTUTINV (\\<forall>x. F x)", "by (auto simp: nstutinv_def)"], ["", "lemma nstut_ex: \"(\\<And>x. NSTUTINV (F x)) \\<Longrightarrow> NSTUTINV (\\<exists> x. F x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. NSTUTINV F x) \\<Longrightarrow> NSTUTINV (\\<exists>x. F x)", "by (auto simp: nstutinv_def)"], ["", "lemma nstut_const: \"NSTUTINV #c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NSTUTINV #c", "by (auto simp: nstutinv_def)"], ["", "lemma nstut_fun1: \"NSTUTINV X \\<Longrightarrow> NSTUTINV (f <X>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NSTUTINV X \\<Longrightarrow> NSTUTINV f<X>", "by (force simp: nstutinv_def)"], ["", "lemma nstut_fun2: \"\\<lbrakk>NSTUTINV X; NSTUTINV Y\\<rbrakk> \\<Longrightarrow> NSTUTINV (f <X,Y>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>NSTUTINV X; NSTUTINV Y\\<rbrakk>\n    \\<Longrightarrow> NSTUTINV f<X, Y>", "by (force simp: nstutinv_def)"], ["", "lemma nstut_fun3: \"\\<lbrakk>NSTUTINV X; NSTUTINV Y; NSTUTINV Z\\<rbrakk> \\<Longrightarrow> NSTUTINV (f <X,Y,Z>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>NSTUTINV X; NSTUTINV Y; NSTUTINV Z\\<rbrakk>\n    \\<Longrightarrow> NSTUTINV f<X, Y, Z>", "by (force simp: nstutinv_def)"], ["", "lemma nstut_fun4: \"\\<lbrakk>NSTUTINV X; NSTUTINV Y; NSTUTINV Z; NSTUTINV W\\<rbrakk> \\<Longrightarrow> NSTUTINV (f <X,Y,Z,W>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>NSTUTINV X; NSTUTINV Y; NSTUTINV Z; NSTUTINV W\\<rbrakk>\n    \\<Longrightarrow> NSTUTINV f<X, Y, Z, W>", "by (force simp: nstutinv_def)"], ["", "lemma nstut_plus: \"\\<lbrakk>NSTUTINV x;NSTUTINV y\\<rbrakk> \\<Longrightarrow> NSTUTINV (x+y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>NSTUTINV x; NSTUTINV y\\<rbrakk>\n    \\<Longrightarrow> NSTUTINV x + y", "by (simp add: nstut_fun2)"], ["", "subsubsection \"Abbreviations\""], ["", "text \\<open>\n  We show the obvious fact that the same properties holds for abbreviated\n  operators.\n\\<close>"], ["", "lemmas nstut_before = stut_before[THEN stutinv_strictly_stronger]"], ["", "lemma nstut_unch: \"NSTUTINV (Unchanged v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NSTUTINV Unchanged v", "proof (unfold unch_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. NSTUTINV v$ = $v", "have g1: \"NSTUTINV v$\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NSTUTINV v$", "by (rule nstut_after)"], ["proof (state)\nthis:\n  NSTUTINV v$\n\ngoal (1 subgoal):\n 1. NSTUTINV v$ = $v", "have \"NSTUTINV $v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NSTUTINV $v", "by (rule stut_before[THEN stutinv_strictly_stronger])"], ["proof (state)\nthis:\n  NSTUTINV $v\n\ngoal (1 subgoal):\n 1. NSTUTINV v$ = $v", "with g1"], ["proof (chain)\npicking this:\n  NSTUTINV v$\n  NSTUTINV $v", "show \"NSTUTINV (v$ = $v)\""], ["proof (prove)\nusing this:\n  NSTUTINV v$\n  NSTUTINV $v\n\ngoal (1 subgoal):\n 1. NSTUTINV v$ = $v", "by (rule nstut_eq)"], ["proof (state)\nthis:\n  NSTUTINV v$ = $v\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\n  Formulas \\<open>[P]_v\\<close> are not \\tlastar{} formulas by themselves,\n  but we need to reason about them when they appear wrapped\n  inside \\<open>\\<box>[-]_v\\<close>. We only require that it preserves nearly\n  stuttering invariance. Observe that \\<open>[P]_v\\<close> trivially holds for\n  a stuttering step, so it cannot be stuttering invariant.\n\\<close>"], ["", "lemma nstut_actrans: \"NSTUTINV P \\<Longrightarrow> NSTUTINV [P]_v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NSTUTINV P \\<Longrightarrow> NSTUTINV _actrans P v", "by (simp add: actrans_def nstut_unch nstut_or)"], ["", "lemma stut_eventually: \"STUTINV F \\<Longrightarrow> STUTINV \\<diamond>F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. STUTINV F \\<Longrightarrow> STUTINV \\<diamond>F", "by (simp add: eventually_def stut_not stut_always)"], ["", "lemma stut_leadsto: \"\\<lbrakk>STUTINV F; STUTINV G\\<rbrakk> \\<Longrightarrow> STUTINV (F \\<leadsto> G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>STUTINV F; STUTINV G\\<rbrakk>\n    \\<Longrightarrow> STUTINV (F \\<leadsto> G)", "by (simp add: leadsto_def stut_always stut_eventually stut_imp)"], ["", "lemma stut_angle_action: \"NSTUTINV P \\<Longrightarrow> STUTINV \\<diamond>\\<langle>P\\<rangle>_v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NSTUTINV P \\<Longrightarrow> STUTINV \\<diamond>\\<langle>P\\<rangle>_v", "by (simp add: angle_action_def nstut_not stut_action stut_not)"], ["", "lemma nstut_angle_acttrans: \"NSTUTINV P \\<Longrightarrow> NSTUTINV \\<langle>P\\<rangle>_v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NSTUTINV P \\<Longrightarrow> NSTUTINV \\<langle>P\\<rangle>_v", "by (simp add: angle_actrans_def nstut_not nstut_actrans)"], ["", "lemmas stutinvs = stut_before stut_always stut_action\n  stut_and stut_or stut_imp stut_eq stut_noteq stut_not\n  stut_all stut_ex stut_eventually stut_leadsto stut_angle_action stut_const \n  stut_fun1 stut_fun2 stut_fun3 stut_fun4"], ["", "lemmas nstutinvs =  nstut_after nstut_nexts nstut_actrans\n  nstut_unch nstut_and nstut_or nstut_imp nstut_eq nstut_noteq nstut_not\n  nstut_all nstut_ex nstut_angle_acttrans stutinv_strictly_stronger \n  nstut_fun1 nstut_fun2 nstut_fun3 nstut_fun4 stutinvs[THEN stutinv_strictly_stronger]"], ["", "lemmas bothstutinvs = stutinvs nstutinvs"], ["", "end"]]}