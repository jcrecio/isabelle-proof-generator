{"file_name": "/home/qj213/afp-2021-10-22/thys/TLA/Sequence.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/TLA", "problem_names": ["lemma first_tail_second: \"first(tail s) = second s\"", "lemma suffix_first: \"first (s |\\<^sub>s n) = s n\"", "lemma suffix_second: \"second (s |\\<^sub>s n) = s (Suc n)\"", "lemma suffix_plus: \"s |\\<^sub>s n |\\<^sub>s m = s |\\<^sub>s (m + n)\"", "lemma suffix_commute: \"((s |\\<^sub>s n) |\\<^sub>s m) = ((s |\\<^sub>s m) |\\<^sub>s n)\"", "lemma suffix_plus_com: \"s |\\<^sub>s m |\\<^sub>s n = s |\\<^sub>s (m + n)\"", "lemma suffix_zero[simp]: \"s |\\<^sub>s 0 = s\"", "lemma suffix_tail: \"s |\\<^sub>s 1 = tail s\"", "lemma tail_suffix_suc: \"s |\\<^sub>s (Suc n) = tail (s |\\<^sub>s n)\"", "lemma seq_app_second: \"(s ## \\<sigma>) 1 = \\<sigma> 0\"", "lemma seq_app_first: \"(s ## \\<sigma>) 0 = s\"", "lemma seq_app_first_tail: \"(first s) ## (tail s) = s\"", "lemma seq_app_tail: \"tail (x ## s) = s\"", "lemma seq_app_greater_than_zero: \"n > 0 \\<Longrightarrow> (s ## \\<sigma>) n = \\<sigma> (n - 1)\"", "lemma empty_is_finite: assumes \"emptyseq s\" shows \"fin s\"", "lemma empty_suffix_is_empty: assumes H: \"emptyseq s\" shows \"emptyseq (s |\\<^sub>s n)\"", "lemma suc_empty: assumes H1: \"emptyseq (s |\\<^sub>s m)\" shows \"emptyseq (s |\\<^sub>s (Suc m))\"", "lemma empty_suffix_exteq: assumes H:\"emptyseq s\" shows \"(s |\\<^sub>s n) m = s m\"", "lemma empty_suffix_eq: assumes H: \"emptyseq s\" shows \"(s |\\<^sub>s n) = s\"", "lemma seq_empty_all: assumes H: \"emptyseq s\" shows \"s i = s j\"", "lemma fin_stut_after_last: assumes H: \"fin s\" shows \"\\<forall>j \\<ge> last s. s j = s (last s)\"", "lemma seq_empty_is_nonstut: \n  assumes H: \"emptyseq s\" shows \"nonstutseq s\"", "lemma notempty_exist_nonstut: \n  assumes H: \"\\<not> emptyseq (s |\\<^sub>s m)\" shows \"\\<exists> i. s i \\<noteq> s m \\<and> i > m\"", "lemma nextnat_le_unch: assumes H: \"n < nextnat s\" shows \"s n = s 0\"", "lemma stutnempty: \n  assumes H: \"\\<not> stutstep s n\" shows \"\\<not> emptyseq (s |\\<^sub>s n)\"", "lemma notstutstep_nexnat1: \n  assumes H: \"\\<not> stutstep s n\" shows \"nextnat (s |\\<^sub>s n) = 1\"", "lemma stutstep_notempty_notempty: \n  assumes h1: \"emptyseq (s |\\<^sub>s Suc n)\" (is \"emptyseq ?sn\")\n      and h2: \"stutstep s n\" \n  shows \"emptyseq (s |\\<^sub>s n)\" (is \"emptyseq ?s\")", "lemma stutstep_empty_suc:\n  assumes \"stutstep s n\"\n  shows \"emptyseq (s |\\<^sub>s Suc n) = emptyseq (s |\\<^sub>s n)\"", "lemma stutstep_notempty_sucnextnat: \n  assumes h1: \"\\<not> emptyseq  (s |\\<^sub>s n)\" and h2: \"stutstep s n\" \n   shows \"(nextnat (s |\\<^sub>s n)) = Suc (nextnat (s |\\<^sub>s (Suc n)))\"", "lemma nextnat_empty_neq: assumes H: \"\\<not> emptyseq s\" shows \"s (nextnat s) \\<noteq> s 0\"", "lemma nextnat_empty_gzero: assumes H: \"\\<not> emptyseq s\" shows \"nextnat s > 0\"", "lemma empty_nextsuffix: \n  assumes H: \"emptyseq s\" shows \"nextsuffix s = s\"", "lemma empty_nextsuffix_id: \n  assumes H: \"emptyseq s\" shows \"nextsuffix s = id s\"", "lemma notstutstep_nextsuffix1: \n  assumes H: \"\\<not> stutstep s n\" shows \"nextsuffix (s |\\<^sub>s n) = s |\\<^sub>s (Suc n)\"", "lemma next_suc_suffix: \"next (Suc n) s = nextsuffix (next n s)\"", "lemma next_suffix_com: \"nextsuffix (next n s) = (next n (nextsuffix s))\"", "lemma next_plus: \"next (m+n) s = next m (next n s)\"", "lemma next_empty: assumes H: \"emptyseq s\" shows \"next n s = s\"", "lemma notempty_nextnotzero: \n  assumes H: \"\\<not>emptyseq s\" shows \"(next (Suc 0) s) 0 \\<noteq> s 0\"", "lemma next_ex_id: \"\\<exists> i. s i = (next m s) 0\"", "lemma emptyseq_collapse_eq: assumes A1: \"emptyseq s\" shows \"\\<natural> s = s\"", "lemma empty_collapse_empty: \n  assumes H: \"emptyseq s\" shows \"emptyseq (\\<natural> s)\"", "lemma collapse_empty_empty: \n  assumes H: \"emptyseq (\\<natural> s)\" shows \"emptyseq s\"", "lemma collapse_empty_iff_empty [simp]: \"emptyseq (\\<natural> s) = emptyseq s\"", "lemma seqsim_refl [iff]: \"s \\<approx> s\"", "lemma seqsim_sym: assumes H: \"s \\<approx> t\" shows \"t \\<approx> s\"", "lemma seqeq_imp_sim: assumes H: \"s = t\" shows \"s \\<approx> t\"", "lemma seqsim_trans [trans]: assumes h1: \"s \\<approx> t\" and h2: \"t \\<approx> z\" shows \"s \\<approx> z\"", "theorem sim_first: assumes H: \"s \\<approx> t\" shows \"first s = first t\"", "lemmas sim_first2 = sim_first[unfolded first_def]", "lemma tail_sim_second: assumes H: \"tail s \\<approx> tail t\" shows \"second s = second t\"", "lemma seqsimilarI:\n  assumes 1: \"first s = first t\" and 2: \"nextsuffix s \\<approx> nextsuffix t\"\n  shows \"s \\<approx> t\"", "lemma seqsim_empty_empty: \n  assumes H1: \"s \\<approx> t\" and H2: \"emptyseq s\" shows \"emptyseq t\"", "lemma seqsim_empty_iff_empty:\n  assumes H: \"s \\<approx> t\" shows \"emptyseq s = emptyseq t\"", "lemma seq_empty_eq: \n  assumes H1: \"s 0 = t 0\" and H2: \"emptyseq s\" and H3: \"emptyseq t\"\n  shows \"s = t\"", "lemma seqsim_notstutstep: \n  assumes H: \"\\<not> (stutstep s n)\" shows \"(s |\\<^sub>s (Suc n)) \\<approx> nextsuffix (s |\\<^sub>s n)\"", "lemma stut_nextsuf_suc: \n  assumes H: \"stutstep s n\" shows \"nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s (Suc n))\"", "lemma seqsim_suffix_seqsim:\n  assumes H: \"s \\<approx> t\" shows \"nextsuffix s \\<approx> nextsuffix t\"", "lemma seqsim_stutstep:\n  assumes H: \"stutstep s n\" shows \"(s |\\<^sub>s (Suc n)) \\<approx> (s |\\<^sub>s n)\" (is \"?sn \\<approx> ?s\")", "lemma addfeqstut: \"stutstep ((first t) ## t) 0\"", "lemma addfeqsim: \"((first t) ## t) \\<approx> t\"", "lemma addfirststut:\n  assumes H: \"first s = second s\" shows \"s \\<approx> tail s\"", "lemma app_seqsimilar:\n  assumes h1: \"s \\<approx> t\" shows \"(x ## s) \\<approx> (x ## t)\"", "lemma simstep_disj1: assumes H: \"s \\<approx> t\" shows \"\\<exists> m. ((s |\\<^sub>s n) \\<approx> (t |\\<^sub>s m))\"", "lemma nextnat_le_seqsim: \n  assumes n: \"n < nextnat s\" shows \"s \\<approx> (s |\\<^sub>s n)\"", "lemma seqsim_prev_nextnat: \"s \\<approx> s |\\<^sub>s ((nextnat s) - 1)\"", "lemma seqsim_suffix_suc:\n  assumes H: \"s |\\<^sub>s n \\<approx> t |\\<^sub>s m\"\n  shows \"\\<exists>m'. s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and> ((s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m') \\<or> (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m'))\"", "theorem sim_step: \n  assumes H: \"s \\<approx> t\" \n  shows \"\\<exists> m. s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<and> \n              ((s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m) \\<or> (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m))\"\n    (is \"\\<exists>m. ?Sim n m\")"], "translations": [["", "lemma first_tail_second: \"first(tail s) = second s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. first (tail s) = second s", "by (simp add: first_def second_def tail_def suffix_def)"], ["", "subsubsection \"Properties of @{term suffix}\""], ["", "lemma suffix_first: \"first (s |\\<^sub>s n) = s n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. first (s |\\<^sub>s n) = s n", "by (auto simp add: suffix_def first_def)"], ["", "lemma suffix_second: \"second (s |\\<^sub>s n) = s (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. second (s |\\<^sub>s n) = s (Suc n)", "by (auto simp add: suffix_def second_def)"], ["", "lemma suffix_plus: \"s |\\<^sub>s n |\\<^sub>s m = s |\\<^sub>s (m + n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s |\\<^sub>s n |\\<^sub>s m = s |\\<^sub>s m + n", "by (simp add: suffix_def add.assoc)"], ["", "lemma suffix_commute: \"((s |\\<^sub>s n) |\\<^sub>s m) = ((s |\\<^sub>s m) |\\<^sub>s n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s |\\<^sub>s n |\\<^sub>s m = s |\\<^sub>s m |\\<^sub>s n", "by (simp add: suffix_plus add.commute)"], ["", "lemma suffix_plus_com: \"s |\\<^sub>s m |\\<^sub>s n = s |\\<^sub>s (m + n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s |\\<^sub>s m |\\<^sub>s n = s |\\<^sub>s m + n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s |\\<^sub>s m |\\<^sub>s n = s |\\<^sub>s m + n", "have \"s |\\<^sub>s n |\\<^sub>s m = s |\\<^sub>s (m + n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s |\\<^sub>s n |\\<^sub>s m = s |\\<^sub>s m + n", "by (rule suffix_plus)"], ["proof (state)\nthis:\n  s |\\<^sub>s n |\\<^sub>s m = s |\\<^sub>s m + n\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s m |\\<^sub>s n = s |\\<^sub>s m + n", "thus \"s |\\<^sub>s m |\\<^sub>s n = s |\\<^sub>s (m + n)\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s n |\\<^sub>s m = s |\\<^sub>s m + n\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s m |\\<^sub>s n = s |\\<^sub>s m + n", "by (simp add: suffix_commute)"], ["proof (state)\nthis:\n  s |\\<^sub>s m |\\<^sub>s n = s |\\<^sub>s m + n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma suffix_zero[simp]: \"s |\\<^sub>s 0 = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s |\\<^sub>s 0 = s", "by (simp add: suffix_def)"], ["", "lemma suffix_tail: \"s |\\<^sub>s 1 = tail s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s |\\<^sub>s 1 = tail s", "by (simp add: tail_def)"], ["", "lemma tail_suffix_suc: \"s |\\<^sub>s (Suc n) = tail (s |\\<^sub>s n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s |\\<^sub>s Suc n = tail (s |\\<^sub>s n)", "by (simp add: suffix_def tail_def)"], ["", "subsubsection \"Properties of  @{term app}\""], ["", "lemma seq_app_second: \"(s ## \\<sigma>) 1 = \\<sigma> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s ## \\<sigma>) 1 = \\<sigma> 0", "by (simp add: app_def)"], ["", "lemma seq_app_first: \"(s ## \\<sigma>) 0 = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s ## \\<sigma>) 0 = s", "by (simp add: app_def)"], ["", "lemma seq_app_first_tail: \"(first s) ## (tail s) = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. first s ## tail s = s", "proof (rule ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (first s ## tail s) x = s x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (first s ## tail s) x = s x", "show \"(first s ## tail s) x = s x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (first s ## tail s) x = s x", "by (simp add: first_def app_def suffix_def tail_def)"], ["proof (state)\nthis:\n  (first s ## tail s) x = s x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma seq_app_tail: \"tail (x ## s) = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tail (x ## s) = s", "by (simp add: app_def tail_def suffix_def)"], ["", "lemma seq_app_greater_than_zero: \"n > 0 \\<Longrightarrow> (s ## \\<sigma>) n = \\<sigma> (n - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> (s ## \\<sigma>) n = \\<sigma> (n - 1)", "by (simp add: app_def)"], ["", "subsection \"Finite and Empty Sequences\""], ["", "text\\<open>\n  We identify finite and empty sequences and prove lemmas about them. \n\\<close>"], ["", "definition fin :: \"('a seq) \\<Rightarrow> bool\"\nwhere \"fin s \\<equiv> \\<exists> i. \\<forall> j \\<ge> i. s j = s i\""], ["", "abbreviation inf :: \"('a seq) \\<Rightarrow> bool\"\nwhere \"inf s \\<equiv> \\<not>(fin s)\""], ["", "definition last :: \"('a seq) \\<Rightarrow> nat\"\nwhere \"last s \\<equiv> LEAST i. (\\<forall> j \\<ge> i. s j = s i)\""], ["", "definition laststate :: \"('a seq) \\<Rightarrow> 'a\"\nwhere \"laststate s \\<equiv> s (last s)\""], ["", "definition emptyseq :: \"('a seq) \\<Rightarrow> bool\"\nwhere \"emptyseq \\<equiv> \\<lambda> s. \\<forall> i. s i = s 0\""], ["", "abbreviation notemptyseq :: \"('a seq) \\<Rightarrow> bool\"\nwhere \"notemptyseq s \\<equiv> \\<not>(emptyseq s)\""], ["", "text \\<open>\n  Predicate @{term fin} holds if there is an element\n  in the sequence such that all subsequent elements are identical,\n  i.e. the sequence is finite. @{term \"last s\"} returns the smallest index\n  from which on all elements of a finite sequence @{term s} are identical. Note that \n  if \\<open>s\\<close> is not finite then an arbitrary number is returned.\n  @{term laststate} returns the last element of a finite sequence. We assume \n  that the sequence is finite when using  @{term last} and  @{term laststate}.\n  Predicate @{term emptyseq} identifies empty sequences -- i.e. all states in\n  the sequence are identical to the initial one, while @{term notemptyseq} holds\n  if the given sequence is not empty.\n\\<close>"], ["", "subsubsection \"Properties of @{term emptyseq}\""], ["", "lemma empty_is_finite: assumes \"emptyseq s\" shows \"fin s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fin s", "using assms"], ["proof (prove)\nusing this:\n  emptyseq s\n\ngoal (1 subgoal):\n 1. fin s", "by (auto simp: fin_def emptyseq_def)"], ["", "lemma empty_suffix_is_empty: assumes H: \"emptyseq s\" shows \"emptyseq (s |\\<^sub>s n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emptyseq (s |\\<^sub>s n)", "proof (clarsimp simp: emptyseq_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. (s |\\<^sub>s n) i = (s |\\<^sub>s n) 0", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. (s |\\<^sub>s n) i = (s |\\<^sub>s n) 0", "from H"], ["proof (chain)\npicking this:\n  emptyseq s", "have \"(s |\\<^sub>s n) i = s 0\""], ["proof (prove)\nusing this:\n  emptyseq s\n\ngoal (1 subgoal):\n 1. (s |\\<^sub>s n) i = s 0", "by (simp add: emptyseq_def suffix_def)"], ["proof (state)\nthis:\n  (s |\\<^sub>s n) i = s 0\n\ngoal (1 subgoal):\n 1. \\<And>i. (s |\\<^sub>s n) i = (s |\\<^sub>s n) 0", "moreover"], ["proof (state)\nthis:\n  (s |\\<^sub>s n) i = s 0\n\ngoal (1 subgoal):\n 1. \\<And>i. (s |\\<^sub>s n) i = (s |\\<^sub>s n) 0", "from H"], ["proof (chain)\npicking this:\n  emptyseq s", "have \"(s |\\<^sub>s n) 0 = s 0\""], ["proof (prove)\nusing this:\n  emptyseq s\n\ngoal (1 subgoal):\n 1. (s |\\<^sub>s n) 0 = s 0", "by (simp add: emptyseq_def suffix_def)"], ["proof (state)\nthis:\n  (s |\\<^sub>s n) 0 = s 0\n\ngoal (1 subgoal):\n 1. \\<And>i. (s |\\<^sub>s n) i = (s |\\<^sub>s n) 0", "ultimately"], ["proof (chain)\npicking this:\n  (s |\\<^sub>s n) i = s 0\n  (s |\\<^sub>s n) 0 = s 0", "show \"(s |\\<^sub>s n) i = (s |\\<^sub>s n) 0\""], ["proof (prove)\nusing this:\n  (s |\\<^sub>s n) i = s 0\n  (s |\\<^sub>s n) 0 = s 0\n\ngoal (1 subgoal):\n 1. (s |\\<^sub>s n) i = (s |\\<^sub>s n) 0", "by simp"], ["proof (state)\nthis:\n  (s |\\<^sub>s n) i = (s |\\<^sub>s n) 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma suc_empty: assumes H1: \"emptyseq (s |\\<^sub>s m)\" shows \"emptyseq (s |\\<^sub>s (Suc m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emptyseq (s |\\<^sub>s Suc m)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. emptyseq (s |\\<^sub>s Suc m)", "from H1"], ["proof (chain)\npicking this:\n  emptyseq (s |\\<^sub>s m)", "have \"emptyseq ((s |\\<^sub>s m) |\\<^sub>s 1)\""], ["proof (prove)\nusing this:\n  emptyseq (s |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. emptyseq (s |\\<^sub>s m |\\<^sub>s 1)", "by (rule empty_suffix_is_empty)"], ["proof (state)\nthis:\n  emptyseq (s |\\<^sub>s m |\\<^sub>s 1)\n\ngoal (1 subgoal):\n 1. emptyseq (s |\\<^sub>s Suc m)", "thus ?thesis"], ["proof (prove)\nusing this:\n  emptyseq (s |\\<^sub>s m |\\<^sub>s 1)\n\ngoal (1 subgoal):\n 1. emptyseq (s |\\<^sub>s Suc m)", "by (simp add: suffix_plus)"], ["proof (state)\nthis:\n  emptyseq (s |\\<^sub>s Suc m)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma empty_suffix_exteq: assumes H:\"emptyseq s\" shows \"(s |\\<^sub>s n) m = s m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s |\\<^sub>s n) m = s m", "proof (unfold suffix_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. s (m + n) = s m", "from H"], ["proof (chain)\npicking this:\n  emptyseq s", "have \"s (m+n) = s 0\""], ["proof (prove)\nusing this:\n  emptyseq s\n\ngoal (1 subgoal):\n 1. s (m + n) = s 0", "by (simp add: emptyseq_def)"], ["proof (state)\nthis:\n  s (m + n) = s 0\n\ngoal (1 subgoal):\n 1. s (m + n) = s m", "moreover"], ["proof (state)\nthis:\n  s (m + n) = s 0\n\ngoal (1 subgoal):\n 1. s (m + n) = s m", "from H"], ["proof (chain)\npicking this:\n  emptyseq s", "have \"s m = s 0\""], ["proof (prove)\nusing this:\n  emptyseq s\n\ngoal (1 subgoal):\n 1. s m = s 0", "by (simp add: emptyseq_def)"], ["proof (state)\nthis:\n  s m = s 0\n\ngoal (1 subgoal):\n 1. s (m + n) = s m", "ultimately"], ["proof (chain)\npicking this:\n  s (m + n) = s 0\n  s m = s 0", "show \"s (m + n) = s m\""], ["proof (prove)\nusing this:\n  s (m + n) = s 0\n  s m = s 0\n\ngoal (1 subgoal):\n 1. s (m + n) = s m", "by simp"], ["proof (state)\nthis:\n  s (m + n) = s m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma empty_suffix_eq: assumes H: \"emptyseq s\" shows \"(s |\\<^sub>s n) = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s |\\<^sub>s n = s", "proof (rule ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (s |\\<^sub>s n) x = s x", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (s |\\<^sub>s n) x = s x", "from H"], ["proof (chain)\npicking this:\n  emptyseq s", "show \"(s |\\<^sub>s n) m = s m\""], ["proof (prove)\nusing this:\n  emptyseq s\n\ngoal (1 subgoal):\n 1. (s |\\<^sub>s n) m = s m", "by (rule empty_suffix_exteq)"], ["proof (state)\nthis:\n  (s |\\<^sub>s n) m = s m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma seq_empty_all: assumes H: \"emptyseq s\" shows \"s i = s j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s i = s j", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s i = s j", "from H"], ["proof (chain)\npicking this:\n  emptyseq s", "have \"s i = s 0\""], ["proof (prove)\nusing this:\n  emptyseq s\n\ngoal (1 subgoal):\n 1. s i = s 0", "by (simp add: emptyseq_def)"], ["proof (state)\nthis:\n  s i = s 0\n\ngoal (1 subgoal):\n 1. s i = s j", "moreover"], ["proof (state)\nthis:\n  s i = s 0\n\ngoal (1 subgoal):\n 1. s i = s j", "from H"], ["proof (chain)\npicking this:\n  emptyseq s", "have \"s j = s 0\""], ["proof (prove)\nusing this:\n  emptyseq s\n\ngoal (1 subgoal):\n 1. s j = s 0", "by (simp add: emptyseq_def)"], ["proof (state)\nthis:\n  s j = s 0\n\ngoal (1 subgoal):\n 1. s i = s j", "ultimately"], ["proof (chain)\npicking this:\n  s i = s 0\n  s j = s 0", "show ?thesis"], ["proof (prove)\nusing this:\n  s i = s 0\n  s j = s 0\n\ngoal (1 subgoal):\n 1. s i = s j", "by simp"], ["proof (state)\nthis:\n  s i = s j\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \"Properties of @{term last} and @{term laststate}\""], ["", "lemma fin_stut_after_last: assumes H: \"fin s\" shows \"\\<forall>j \\<ge> last s. s j = s (last s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j\\<ge>Sequence.last s. s j = s (Sequence.last s)", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       Sequence.last s \\<le> j \\<Longrightarrow> s j = s (Sequence.last s)", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       Sequence.last s \\<le> j \\<Longrightarrow> s j = s (Sequence.last s)", "assume j: \"j \\<ge> last s\""], ["proof (state)\nthis:\n  Sequence.last s \\<le> j\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       Sequence.last s \\<le> j \\<Longrightarrow> s j = s (Sequence.last s)", "from H"], ["proof (chain)\npicking this:\n  fin s", "obtain i where \"\\<forall>j \\<ge> i. s j = s i\" (is \"?P i\")"], ["proof (prove)\nusing this:\n  fin s\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<forall>j\\<ge>i. s j = s i \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: fin_def)"], ["proof (state)\nthis:\n  \\<forall>j\\<ge>i. s j = s i\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       Sequence.last s \\<le> j \\<Longrightarrow> s j = s (Sequence.last s)", "hence \"?P (last s)\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<ge>i. s j = s i\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<ge>Sequence.last s. s j = s (Sequence.last s)", "unfolding last_def"], ["proof (prove)\nusing this:\n  \\<forall>j\\<ge>i. s j = s i\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<ge>LEAST i. \\<forall>j\\<ge>i. s j = s i.\n       s j = s (LEAST i. \\<forall>j\\<ge>i. s j = s i)", "by (rule LeastI)"], ["proof (state)\nthis:\n  \\<forall>j\\<ge>Sequence.last s. s j = s (Sequence.last s)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       Sequence.last s \\<le> j \\<Longrightarrow> s j = s (Sequence.last s)", "with j"], ["proof (chain)\npicking this:\n  Sequence.last s \\<le> j\n  \\<forall>j\\<ge>Sequence.last s. s j = s (Sequence.last s)", "show \"s j = s (last s)\""], ["proof (prove)\nusing this:\n  Sequence.last s \\<le> j\n  \\<forall>j\\<ge>Sequence.last s. s j = s (Sequence.last s)\n\ngoal (1 subgoal):\n 1. s j = s (Sequence.last s)", "by blast"], ["proof (state)\nthis:\n  s j = s (Sequence.last s)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Stuttering Invariance\""], ["", "text \\<open>\n  This subsection provides functions for removing stuttering\n  steps of sequences, i.e. we formalise Lamports \\<open>\\<natural>\\<close> operator.\n  Our formal definition is close to that of Wahab in the PVS prover.\n\n  The key novelty with the @{term \"Sequence\"} theory, is the treatment of\n  stuttering invariance, which enables verification of stuttering invariance of\n  the operators derived using it. Such proofs require comparing sequences\n  up to stuttering. Here, Lamport's \\cite{Lamport94} method is used to\n  mechanise the equality of sequences up to stuttering: he defines \n  the \\<open>\\<natural>\\<close> operator, which collapses a sequence by removing\n  all stuttering steps, except possibly infinite stuttering at the end of the sequence. \n  These are left unchanged.\n\\<close>"], ["", "definition nonstutseq :: \"('a seq) \\<Rightarrow> bool\"\nwhere \"nonstutseq s \\<equiv> \\<forall> i. s i = s (Suc i) \\<longrightarrow> (\\<forall> j > i. s i = s j)\""], ["", "definition stutstep :: \"('a seq) \\<Rightarrow> nat \\<Rightarrow> bool\"\nwhere \"stutstep s n \\<equiv> (s n = s (Suc n))\""], ["", "definition nextnat :: \"('a seq) \\<Rightarrow> nat\"\nwhere \"nextnat s \\<equiv> if emptyseq s then 0 else LEAST i. s i \\<noteq> s 0\""], ["", "definition nextsuffix :: \"('a seq) \\<Rightarrow> ('a seq)\"\nwhere \"nextsuffix s \\<equiv> s |\\<^sub>s (nextnat s)\""], ["", "fun \"next\" :: \"nat \\<Rightarrow> ('a seq) \\<Rightarrow> ('a seq)\" where\n  \"next 0 = id\"\n| \"next (Suc n) = nextsuffix o (next n)\""], ["", "definition collapse :: \"('a seq) \\<Rightarrow> ('a seq)\" (\"\\<natural>\")\nwhere \"\\<natural> s \\<equiv> \\<lambda> n. (next n s) 0\""], ["", "text \\<open>\n  Predicate @{term nonstutseq} identifies sequences without any \n  stuttering steps -- except possibly for infinite stuttering at the end.\n  Further, @{term \"stutstep s n\"} is a predicate which holds if the element\n  after @{term \"s n\"} is equal to @{term \"s n\"}, i.e. @{term \"Suc n\"} is\n  a stuttering step.\n  @{term \"collapse s\"} formalises Lamports  @{term \"\\<natural>\"}\n  operator. It returns the first state of the result of @{term \"next n s\"}. \n  @{term \"next n s\"} finds suffix of the $n^{th}$ change. Hence the first\n  element, which @{term \"\\<natural> s\"} returns, is the state after the $n^{th}$ \n  change.  @{term \"next n s\"} is defined by primitive recursion on \n  @{term \"n\"} using function composition of function @{term nextsuffix}. E.g.\n  @{term \"next 3 s\"} equals @{term \"nextsuffix (nextsuffix (nextsuffix s))\"}.\n  @{term \"nextsuffix s\"} returns the suffix of the sequence starting at the\n  next changing state. It uses @{term \"nextnat\"} to obtain this. All the real\n  computation is done in this function. Firstly, an empty sequence will obviously\n  not contain any changes, and \\<open>0\\<close> is therefore returned. In this case \n  @{term \"nextsuffix\"} behaves like the identify function. If the sequence is not\n  empty then the smallest number @{term \"i\"} such that @{term \"s i\"} is different\n  from the initial state is returned. This is achieved by @{term \"Least\"}.\n\\<close>"], ["", "subsubsection \"Properties of @{term nonstutseq}\""], ["", "lemma seq_empty_is_nonstut: \n  assumes H: \"emptyseq s\" shows \"nonstutseq s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nonstutseq s", "using H"], ["proof (prove)\nusing this:\n  emptyseq s\n\ngoal (1 subgoal):\n 1. nonstutseq s", "by (auto simp: nonstutseq_def seq_empty_all)"], ["", "lemma notempty_exist_nonstut: \n  assumes H: \"\\<not> emptyseq (s |\\<^sub>s m)\" shows \"\\<exists> i. s i \\<noteq> s m \\<and> i > m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i. s i \\<noteq> s m \\<and> m < i", "using H"], ["proof (prove)\nusing this:\n  notemptyseq (s |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. \\<exists>i. s i \\<noteq> s m \\<and> m < i", "proof (auto simp: emptyseq_def suffix_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       s (i + m) \\<noteq> s m \\<Longrightarrow>\n       \\<exists>i. s i \\<noteq> s m \\<and> m < i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       s (i + m) \\<noteq> s m \\<Longrightarrow>\n       \\<exists>i. s i \\<noteq> s m \\<and> m < i", "assume i: \"s (i + m) \\<noteq> s m\""], ["proof (state)\nthis:\n  s (i + m) \\<noteq> s m\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       s (i + m) \\<noteq> s m \\<Longrightarrow>\n       \\<exists>i. s i \\<noteq> s m \\<and> m < i", "hence \"i \\<noteq> 0\""], ["proof (prove)\nusing this:\n  s (i + m) \\<noteq> s m\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0", "by (intro notI, simp)"], ["proof (state)\nthis:\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       s (i + m) \\<noteq> s m \\<Longrightarrow>\n       \\<exists>i. s i \\<noteq> s m \\<and> m < i", "with i"], ["proof (chain)\npicking this:\n  s (i + m) \\<noteq> s m\n  i \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  s (i + m) \\<noteq> s m\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>i. s i \\<noteq> s m \\<and> m < i", "by auto"], ["proof (state)\nthis:\n  \\<exists>i. s i \\<noteq> s m \\<and> m < i\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \"Properties of @{term nextnat}\""], ["", "lemma nextnat_le_unch: assumes H: \"n < nextnat s\" shows \"s n = s 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s n = s 0", "proof (cases \"emptyseq s\")"], ["proof (state)\ngoal (2 subgoals):\n 1. emptyseq s \\<Longrightarrow> s n = s 0\n 2. notemptyseq s \\<Longrightarrow> s n = s 0", "assume \"emptyseq s\""], ["proof (state)\nthis:\n  emptyseq s\n\ngoal (2 subgoals):\n 1. emptyseq s \\<Longrightarrow> s n = s 0\n 2. notemptyseq s \\<Longrightarrow> s n = s 0", "hence \"nextnat s = 0\""], ["proof (prove)\nusing this:\n  emptyseq s\n\ngoal (1 subgoal):\n 1. nextnat s = 0", "by (simp add: nextnat_def)"], ["proof (state)\nthis:\n  nextnat s = 0\n\ngoal (2 subgoals):\n 1. emptyseq s \\<Longrightarrow> s n = s 0\n 2. notemptyseq s \\<Longrightarrow> s n = s 0", "with H"], ["proof (chain)\npicking this:\n  n < nextnat s\n  nextnat s = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n < nextnat s\n  nextnat s = 0\n\ngoal (1 subgoal):\n 1. s n = s 0", "by auto"], ["proof (state)\nthis:\n  s n = s 0\n\ngoal (1 subgoal):\n 1. notemptyseq s \\<Longrightarrow> s n = s 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. notemptyseq s \\<Longrightarrow> s n = s 0", "assume \"\\<not> emptyseq s\""], ["proof (state)\nthis:\n  notemptyseq s\n\ngoal (1 subgoal):\n 1. notemptyseq s \\<Longrightarrow> s n = s 0", "hence a1: \"nextnat s = (LEAST i. s i \\<noteq> s 0)\""], ["proof (prove)\nusing this:\n  notemptyseq s\n\ngoal (1 subgoal):\n 1. nextnat s = (LEAST i. s i \\<noteq> s 0)", "by (simp add: nextnat_def)"], ["proof (state)\nthis:\n  nextnat s = (LEAST i. s i \\<noteq> s 0)\n\ngoal (1 subgoal):\n 1. notemptyseq s \\<Longrightarrow> s n = s 0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. s n = s 0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. s n \\<noteq> s 0 \\<Longrightarrow> False", "assume a2: \"s n \\<noteq> s 0\" (is \"?P n\")"], ["proof (state)\nthis:\n  s n \\<noteq> s 0\n\ngoal (1 subgoal):\n 1. s n \\<noteq> s 0 \\<Longrightarrow> False", "hence \"(LEAST i. s i \\<noteq> s 0) \\<le> n\""], ["proof (prove)\nusing this:\n  s n \\<noteq> s 0\n\ngoal (1 subgoal):\n 1. (LEAST i. s i \\<noteq> s 0) \\<le> n", "by (rule Least_le)"], ["proof (state)\nthis:\n  (LEAST i. s i \\<noteq> s 0) \\<le> n\n\ngoal (1 subgoal):\n 1. s n \\<noteq> s 0 \\<Longrightarrow> False", "hence \"\\<not>(n < (LEAST i. s i \\<noteq> s 0))\""], ["proof (prove)\nusing this:\n  (LEAST i. s i \\<noteq> s 0) \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> n < (LEAST i. s i \\<noteq> s 0)", "by auto"], ["proof (state)\nthis:\n  \\<not> n < (LEAST i. s i \\<noteq> s 0)\n\ngoal (1 subgoal):\n 1. s n \\<noteq> s 0 \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  \\<not> n < (LEAST i. s i \\<noteq> s 0)\n\ngoal (1 subgoal):\n 1. s n \\<noteq> s 0 \\<Longrightarrow> False", "from H a1"], ["proof (chain)\npicking this:\n  n < nextnat s\n  nextnat s = (LEAST i. s i \\<noteq> s 0)", "have \"n < (LEAST i. s i \\<noteq> s 0)\""], ["proof (prove)\nusing this:\n  n < nextnat s\n  nextnat s = (LEAST i. s i \\<noteq> s 0)\n\ngoal (1 subgoal):\n 1. n < (LEAST i. s i \\<noteq> s 0)", "by simp"], ["proof (state)\nthis:\n  n < (LEAST i. s i \\<noteq> s 0)\n\ngoal (1 subgoal):\n 1. s n \\<noteq> s 0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> n < (LEAST i. s i \\<noteq> s 0)\n  n < (LEAST i. s i \\<noteq> s 0)", "show False"], ["proof (prove)\nusing this:\n  \\<not> n < (LEAST i. s i \\<noteq> s 0)\n  n < (LEAST i. s i \\<noteq> s 0)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s n = s 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stutnempty: \n  assumes H: \"\\<not> stutstep s n\" shows \"\\<not> emptyseq (s |\\<^sub>s n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. notemptyseq (s |\\<^sub>s n)", "proof (unfold emptyseq_def suffix_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i. s (i + n) = s (0 + n))", "from H"], ["proof (chain)\npicking this:\n  \\<not> stutstep s n", "have \"s (Suc n) \\<noteq> s n\""], ["proof (prove)\nusing this:\n  \\<not> stutstep s n\n\ngoal (1 subgoal):\n 1. s (Suc n) \\<noteq> s n", "by (auto simp add: stutstep_def)"], ["proof (state)\nthis:\n  s (Suc n) \\<noteq> s n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i. s (i + n) = s (0 + n))", "hence \"s (1+n) \\<noteq> s (0+n)\""], ["proof (prove)\nusing this:\n  s (Suc n) \\<noteq> s n\n\ngoal (1 subgoal):\n 1. s (1 + n) \\<noteq> s (0 + n)", "by simp"], ["proof (state)\nthis:\n  s (1 + n) \\<noteq> s (0 + n)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i. s (i + n) = s (0 + n))", "thus \"\\<not>(\\<forall> i. s (i+n) = s (0+n))\""], ["proof (prove)\nusing this:\n  s (1 + n) \\<noteq> s (0 + n)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i. s (i + n) = s (0 + n))", "by blast"], ["proof (state)\nthis:\n  \\<not> (\\<forall>i. s (i + n) = s (0 + n))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma notstutstep_nexnat1: \n  assumes H: \"\\<not> stutstep s n\" shows \"nextnat (s |\\<^sub>s n) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = 1", "from H"], ["proof (chain)\npicking this:\n  \\<not> stutstep s n", "have h': \"nextnat (s |\\<^sub>s n) = (LEAST i. (s |\\<^sub>s n) i \\<noteq> (s |\\<^sub>s n) 0)\""], ["proof (prove)\nusing this:\n  \\<not> stutstep s n\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) =\n    (LEAST i. (s |\\<^sub>s n) i \\<noteq> (s |\\<^sub>s n) 0)", "by (auto simp add: nextnat_def stutnempty)"], ["proof (state)\nthis:\n  nextnat (s |\\<^sub>s n) =\n  (LEAST i. (s |\\<^sub>s n) i \\<noteq> (s |\\<^sub>s n) 0)\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = 1", "from H"], ["proof (chain)\npicking this:\n  \\<not> stutstep s n", "have \"s (Suc n) \\<noteq> s n\""], ["proof (prove)\nusing this:\n  \\<not> stutstep s n\n\ngoal (1 subgoal):\n 1. s (Suc n) \\<noteq> s n", "by (auto simp add: stutstep_def)"], ["proof (state)\nthis:\n  s (Suc n) \\<noteq> s n\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = 1", "hence \"(s |\\<^sub>s n) 1 \\<noteq> (s |\\<^sub>s n) 0\" (is \"?P 1\")"], ["proof (prove)\nusing this:\n  s (Suc n) \\<noteq> s n\n\ngoal (1 subgoal):\n 1. (s |\\<^sub>s n) 1 \\<noteq> (s |\\<^sub>s n) 0", "by (auto simp add: suffix_def)"], ["proof (state)\nthis:\n  (s |\\<^sub>s n) 1 \\<noteq> (s |\\<^sub>s n) 0\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = 1", "hence \"Least ?P \\<le> 1\""], ["proof (prove)\nusing this:\n  (s |\\<^sub>s n) 1 \\<noteq> (s |\\<^sub>s n) 0\n\ngoal (1 subgoal):\n 1. (LEAST a. (s |\\<^sub>s n) a \\<noteq> (s |\\<^sub>s n) 0) \\<le> 1", "by (rule Least_le)"], ["proof (state)\nthis:\n  (LEAST a. (s |\\<^sub>s n) a \\<noteq> (s |\\<^sub>s n) 0) \\<le> 1\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = 1", "hence g1: \"Least ?P = 0 \\<or> Least ?P = 1\""], ["proof (prove)\nusing this:\n  (LEAST a. (s |\\<^sub>s n) a \\<noteq> (s |\\<^sub>s n) 0) \\<le> 1\n\ngoal (1 subgoal):\n 1. (LEAST a. (s |\\<^sub>s n) a \\<noteq> (s |\\<^sub>s n) 0) = 0 \\<or>\n    (LEAST a. (s |\\<^sub>s n) a \\<noteq> (s |\\<^sub>s n) 0) = 1", "by auto"], ["proof (state)\nthis:\n  (LEAST a. (s |\\<^sub>s n) a \\<noteq> (s |\\<^sub>s n) 0) = 0 \\<or>\n  (LEAST a. (s |\\<^sub>s n) a \\<noteq> (s |\\<^sub>s n) 0) = 1\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = 1", "with h'"], ["proof (chain)\npicking this:\n  nextnat (s |\\<^sub>s n) =\n  (LEAST i. (s |\\<^sub>s n) i \\<noteq> (s |\\<^sub>s n) 0)\n  (LEAST a. (s |\\<^sub>s n) a \\<noteq> (s |\\<^sub>s n) 0) = 0 \\<or>\n  (LEAST a. (s |\\<^sub>s n) a \\<noteq> (s |\\<^sub>s n) 0) = 1", "have g1': \"nextnat (s |\\<^sub>s n) = 0 \\<or> nextnat (s |\\<^sub>s n) = 1\""], ["proof (prove)\nusing this:\n  nextnat (s |\\<^sub>s n) =\n  (LEAST i. (s |\\<^sub>s n) i \\<noteq> (s |\\<^sub>s n) 0)\n  (LEAST a. (s |\\<^sub>s n) a \\<noteq> (s |\\<^sub>s n) 0) = 0 \\<or>\n  (LEAST a. (s |\\<^sub>s n) a \\<noteq> (s |\\<^sub>s n) 0) = 1\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = 0 \\<or> nextnat (s |\\<^sub>s n) = 1", "by auto"], ["proof (state)\nthis:\n  nextnat (s |\\<^sub>s n) = 0 \\<or> nextnat (s |\\<^sub>s n) = 1\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = 1", "also"], ["proof (state)\nthis:\n  nextnat (s |\\<^sub>s n) = 0 \\<or> nextnat (s |\\<^sub>s n) = 1\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = 1", "have \"nextnat (s |\\<^sub>s n) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) \\<noteq> 0", "from H"], ["proof (chain)\npicking this:\n  \\<not> stutstep s n", "have \"\\<not> emptyseq (s |\\<^sub>s n)\""], ["proof (prove)\nusing this:\n  \\<not> stutstep s n\n\ngoal (1 subgoal):\n 1. notemptyseq (s |\\<^sub>s n)", "by (rule stutnempty)"], ["proof (state)\nthis:\n  notemptyseq (s |\\<^sub>s n)\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  notemptyseq (s |\\<^sub>s n)", "obtain i where \"(s |\\<^sub>s n) i \\<noteq>  (s |\\<^sub>s n) 0\""], ["proof (prove)\nusing this:\n  notemptyseq (s |\\<^sub>s n)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (s |\\<^sub>s n) i \\<noteq> (s |\\<^sub>s n) 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: emptyseq_def)"], ["proof (state)\nthis:\n  (s |\\<^sub>s n) i \\<noteq> (s |\\<^sub>s n) 0\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) \\<noteq> 0", "hence \"(s |\\<^sub>s n) (LEAST i. (s |\\<^sub>s n) i \\<noteq> (s |\\<^sub>s n) 0) \\<noteq> (s |\\<^sub>s n) 0\""], ["proof (prove)\nusing this:\n  (s |\\<^sub>s n) i \\<noteq> (s |\\<^sub>s n) 0\n\ngoal (1 subgoal):\n 1. (s |\\<^sub>s n)\n     (LEAST i. (s |\\<^sub>s n) i \\<noteq> (s |\\<^sub>s n) 0) \\<noteq>\n    (s |\\<^sub>s n) 0", "by (rule LeastI)"], ["proof (state)\nthis:\n  (s |\\<^sub>s n)\n   (LEAST i. (s |\\<^sub>s n) i \\<noteq> (s |\\<^sub>s n) 0) \\<noteq>\n  (s |\\<^sub>s n) 0\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) \\<noteq> 0", "with h'"], ["proof (chain)\npicking this:\n  nextnat (s |\\<^sub>s n) =\n  (LEAST i. (s |\\<^sub>s n) i \\<noteq> (s |\\<^sub>s n) 0)\n  (s |\\<^sub>s n)\n   (LEAST i. (s |\\<^sub>s n) i \\<noteq> (s |\\<^sub>s n) 0) \\<noteq>\n  (s |\\<^sub>s n) 0", "have g2: \"(s |\\<^sub>s n) (nextnat (s |\\<^sub>s n)) \\<noteq> (s |\\<^sub>s n) 0\""], ["proof (prove)\nusing this:\n  nextnat (s |\\<^sub>s n) =\n  (LEAST i. (s |\\<^sub>s n) i \\<noteq> (s |\\<^sub>s n) 0)\n  (s |\\<^sub>s n)\n   (LEAST i. (s |\\<^sub>s n) i \\<noteq> (s |\\<^sub>s n) 0) \\<noteq>\n  (s |\\<^sub>s n) 0\n\ngoal (1 subgoal):\n 1. (s |\\<^sub>s n) (nextnat (s |\\<^sub>s n)) \\<noteq> (s |\\<^sub>s n) 0", "by auto"], ["proof (state)\nthis:\n  (s |\\<^sub>s n) (nextnat (s |\\<^sub>s n)) \\<noteq> (s |\\<^sub>s n) 0\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) \\<noteq> 0", "show \"(nextnat (s |\\<^sub>s n)) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) \\<noteq> 0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = 0 \\<Longrightarrow> False", "assume \"(nextnat (s |\\<^sub>s n)) = 0\""], ["proof (state)\nthis:\n  nextnat (s |\\<^sub>s n) = 0\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = 0 \\<Longrightarrow> False", "with g2"], ["proof (chain)\npicking this:\n  (s |\\<^sub>s n) (nextnat (s |\\<^sub>s n)) \\<noteq> (s |\\<^sub>s n) 0\n  nextnat (s |\\<^sub>s n) = 0", "show \"False\""], ["proof (prove)\nusing this:\n  (s |\\<^sub>s n) (nextnat (s |\\<^sub>s n)) \\<noteq> (s |\\<^sub>s n) 0\n  nextnat (s |\\<^sub>s n) = 0\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nextnat (s |\\<^sub>s n) \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nextnat (s |\\<^sub>s n) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = 1", "ultimately"], ["proof (chain)\npicking this:\n  nextnat (s |\\<^sub>s n) = 0 \\<or> nextnat (s |\\<^sub>s n) = 1\n  nextnat (s |\\<^sub>s n) \\<noteq> 0", "show  \"nextnat (s |\\<^sub>s n) = 1\""], ["proof (prove)\nusing this:\n  nextnat (s |\\<^sub>s n) = 0 \\<or> nextnat (s |\\<^sub>s n) = 1\n  nextnat (s |\\<^sub>s n) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = 1", "by auto"], ["proof (state)\nthis:\n  nextnat (s |\\<^sub>s n) = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stutstep_notempty_notempty: \n  assumes h1: \"emptyseq (s |\\<^sub>s Suc n)\" (is \"emptyseq ?sn\")\n      and h2: \"stutstep s n\" \n  shows \"emptyseq (s |\\<^sub>s n)\" (is \"emptyseq ?s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. emptyseq (s |\\<^sub>s n)", "proof (auto simp: emptyseq_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. (s |\\<^sub>s n) i = (s |\\<^sub>s n) 0", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. (s |\\<^sub>s n) i = (s |\\<^sub>s n) 0", "show \"?s k = ?s 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s |\\<^sub>s n) k = (s |\\<^sub>s n) 0", "proof (cases k)"], ["proof (state)\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> (s |\\<^sub>s n) k = (s |\\<^sub>s n) 0\n 2. \\<And>nat.\n       k = Suc nat \\<Longrightarrow> (s |\\<^sub>s n) k = (s |\\<^sub>s n) 0", "assume \"k = 0\""], ["proof (state)\nthis:\n  k = 0\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> (s |\\<^sub>s n) k = (s |\\<^sub>s n) 0\n 2. \\<And>nat.\n       k = Suc nat \\<Longrightarrow> (s |\\<^sub>s n) k = (s |\\<^sub>s n) 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  k = 0\n\ngoal (1 subgoal):\n 1. (s |\\<^sub>s n) k = (s |\\<^sub>s n) 0", "by simp"], ["proof (state)\nthis:\n  (s |\\<^sub>s n) k = (s |\\<^sub>s n) 0\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       k = Suc nat \\<Longrightarrow> (s |\\<^sub>s n) k = (s |\\<^sub>s n) 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       k = Suc nat \\<Longrightarrow> (s |\\<^sub>s n) k = (s |\\<^sub>s n) 0", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       k = Suc nat \\<Longrightarrow> (s |\\<^sub>s n) k = (s |\\<^sub>s n) 0", "assume k: \"k = Suc m\""], ["proof (state)\nthis:\n  k = Suc m\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       k = Suc nat \\<Longrightarrow> (s |\\<^sub>s n) k = (s |\\<^sub>s n) 0", "hence \"?s k = ?sn m\""], ["proof (prove)\nusing this:\n  k = Suc m\n\ngoal (1 subgoal):\n 1. (s |\\<^sub>s n) k = (s |\\<^sub>s Suc n) m", "by (simp add: suffix_def)"], ["proof (state)\nthis:\n  (s |\\<^sub>s n) k = (s |\\<^sub>s Suc n) m\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       k = Suc nat \\<Longrightarrow> (s |\\<^sub>s n) k = (s |\\<^sub>s n) 0", "also"], ["proof (state)\nthis:\n  (s |\\<^sub>s n) k = (s |\\<^sub>s Suc n) m\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       k = Suc nat \\<Longrightarrow> (s |\\<^sub>s n) k = (s |\\<^sub>s n) 0", "from h1"], ["proof (chain)\npicking this:\n  emptyseq (s |\\<^sub>s Suc n)", "have \"... = ?sn 0\""], ["proof (prove)\nusing this:\n  emptyseq (s |\\<^sub>s Suc n)\n\ngoal (1 subgoal):\n 1. (s |\\<^sub>s Suc n) m = (s |\\<^sub>s Suc n) 0", "by (simp add: emptyseq_def)"], ["proof (state)\nthis:\n  (s |\\<^sub>s Suc n) m = (s |\\<^sub>s Suc n) 0\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       k = Suc nat \\<Longrightarrow> (s |\\<^sub>s n) k = (s |\\<^sub>s n) 0", "also"], ["proof (state)\nthis:\n  (s |\\<^sub>s Suc n) m = (s |\\<^sub>s Suc n) 0\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       k = Suc nat \\<Longrightarrow> (s |\\<^sub>s n) k = (s |\\<^sub>s n) 0", "from h2"], ["proof (chain)\npicking this:\n  stutstep s n", "have \"... = s n\""], ["proof (prove)\nusing this:\n  stutstep s n\n\ngoal (1 subgoal):\n 1. (s |\\<^sub>s Suc n) 0 = s n", "by (simp add: suffix_def stutstep_def)"], ["proof (state)\nthis:\n  (s |\\<^sub>s Suc n) 0 = s n\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       k = Suc nat \\<Longrightarrow> (s |\\<^sub>s n) k = (s |\\<^sub>s n) 0", "finally"], ["proof (chain)\npicking this:\n  (s |\\<^sub>s n) k = s n", "show ?thesis"], ["proof (prove)\nusing this:\n  (s |\\<^sub>s n) k = s n\n\ngoal (1 subgoal):\n 1. (s |\\<^sub>s n) k = (s |\\<^sub>s n) 0", "by (simp add: suffix_def)"], ["proof (state)\nthis:\n  (s |\\<^sub>s n) k = (s |\\<^sub>s n) 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (s |\\<^sub>s n) k = (s |\\<^sub>s n) 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stutstep_empty_suc:\n  assumes \"stutstep s n\"\n  shows \"emptyseq (s |\\<^sub>s Suc n) = emptyseq (s |\\<^sub>s n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emptyseq (s |\\<^sub>s Suc n) = emptyseq (s |\\<^sub>s n)", "using assms"], ["proof (prove)\nusing this:\n  stutstep s n\n\ngoal (1 subgoal):\n 1. emptyseq (s |\\<^sub>s Suc n) = emptyseq (s |\\<^sub>s n)", "by (auto elim: stutstep_notempty_notempty suc_empty)"], ["", "lemma stutstep_notempty_sucnextnat: \n  assumes h1: \"\\<not> emptyseq  (s |\\<^sub>s n)\" and h2: \"stutstep s n\" \n   shows \"(nextnat (s |\\<^sub>s n)) = Suc (nextnat (s |\\<^sub>s (Suc n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = Suc (nextnat (s |\\<^sub>s Suc n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = Suc (nextnat (s |\\<^sub>s Suc n))", "from h2"], ["proof (chain)\npicking this:\n  stutstep s n", "have g1: \"\\<not>(s (0+n) \\<noteq> s (Suc n))\" (is \"\\<not> ?P 0\")"], ["proof (prove)\nusing this:\n  stutstep s n\n\ngoal (1 subgoal):\n 1. \\<not> s (0 + n) \\<noteq> s (Suc n)", "by (auto simp add: stutstep_def)"], ["proof (state)\nthis:\n  \\<not> s (0 + n) \\<noteq> s (Suc n)\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = Suc (nextnat (s |\\<^sub>s Suc n))", "from h1"], ["proof (chain)\npicking this:\n  notemptyseq (s |\\<^sub>s n)", "obtain i where \"s (i+n) \\<noteq> s n\""], ["proof (prove)\nusing this:\n  notemptyseq (s |\\<^sub>s n)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        s (i + n) \\<noteq> s n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: emptyseq_def suffix_def)"], ["proof (state)\nthis:\n  s (i + n) \\<noteq> s n\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = Suc (nextnat (s |\\<^sub>s Suc n))", "with h2"], ["proof (chain)\npicking this:\n  stutstep s n\n  s (i + n) \\<noteq> s n", "have g2: \"s (i+n) \\<noteq> s (Suc n)\" (is \"?P i\")"], ["proof (prove)\nusing this:\n  stutstep s n\n  s (i + n) \\<noteq> s n\n\ngoal (1 subgoal):\n 1. s (i + n) \\<noteq> s (Suc n)", "by (simp add: stutstep_def)"], ["proof (state)\nthis:\n  s (i + n) \\<noteq> s (Suc n)\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = Suc (nextnat (s |\\<^sub>s Suc n))", "from g2 g1"], ["proof (chain)\npicking this:\n  s (i + n) \\<noteq> s (Suc n)\n  \\<not> s (0 + n) \\<noteq> s (Suc n)", "have \"(LEAST n. ?P n) = Suc (LEAST n. ?P (Suc n))\""], ["proof (prove)\nusing this:\n  s (i + n) \\<noteq> s (Suc n)\n  \\<not> s (0 + n) \\<noteq> s (Suc n)\n\ngoal (1 subgoal):\n 1. (LEAST na. s (na + n) \\<noteq> s (Suc n)) =\n    Suc (LEAST na. s (Suc na + n) \\<noteq> s (Suc n))", "by (rule Least_Suc)"], ["proof (state)\nthis:\n  (LEAST na. s (na + n) \\<noteq> s (Suc n)) =\n  Suc (LEAST na. s (Suc na + n) \\<noteq> s (Suc n))\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = Suc (nextnat (s |\\<^sub>s Suc n))", "from g2 g1"], ["proof (chain)\npicking this:\n  s (i + n) \\<noteq> s (Suc n)\n  \\<not> s (0 + n) \\<noteq> s (Suc n)", "have \"(LEAST i. s (i+n) \\<noteq> s (Suc n)) = Suc (LEAST i. s ((Suc i)+n) \\<noteq> s (Suc n))\""], ["proof (prove)\nusing this:\n  s (i + n) \\<noteq> s (Suc n)\n  \\<not> s (0 + n) \\<noteq> s (Suc n)\n\ngoal (1 subgoal):\n 1. (LEAST i. s (i + n) \\<noteq> s (Suc n)) =\n    Suc (LEAST i. s (Suc i + n) \\<noteq> s (Suc n))", "by (rule Least_Suc)"], ["proof (state)\nthis:\n  (LEAST i. s (i + n) \\<noteq> s (Suc n)) =\n  Suc (LEAST i. s (Suc i + n) \\<noteq> s (Suc n))\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = Suc (nextnat (s |\\<^sub>s Suc n))", "hence G1: \"(LEAST i. s (i+n) \\<noteq> s (Suc n)) = Suc (LEAST i. s (i+Suc n) \\<noteq> s (Suc n))\""], ["proof (prove)\nusing this:\n  (LEAST i. s (i + n) \\<noteq> s (Suc n)) =\n  Suc (LEAST i. s (Suc i + n) \\<noteq> s (Suc n))\n\ngoal (1 subgoal):\n 1. (LEAST i. s (i + n) \\<noteq> s (Suc n)) =\n    Suc (LEAST i. s (i + Suc n) \\<noteq> s (Suc n))", "by auto"], ["proof (state)\nthis:\n  (LEAST i. s (i + n) \\<noteq> s (Suc n)) =\n  Suc (LEAST i. s (i + Suc n) \\<noteq> s (Suc n))\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = Suc (nextnat (s |\\<^sub>s Suc n))", "from h1 h2"], ["proof (chain)\npicking this:\n  notemptyseq (s |\\<^sub>s n)\n  stutstep s n", "have \"\\<not> emptyseq  (s |\\<^sub>s Suc n)\""], ["proof (prove)\nusing this:\n  notemptyseq (s |\\<^sub>s n)\n  stutstep s n\n\ngoal (1 subgoal):\n 1. notemptyseq (s |\\<^sub>s Suc n)", "by (simp add: stutstep_empty_suc)"], ["proof (state)\nthis:\n  notemptyseq (s |\\<^sub>s Suc n)\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = Suc (nextnat (s |\\<^sub>s Suc n))", "hence \"nextnat (s |\\<^sub>s Suc n) = (LEAST i. (s |\\<^sub>s Suc n) i \\<noteq> (s |\\<^sub>s Suc n) 0)\""], ["proof (prove)\nusing this:\n  notemptyseq (s |\\<^sub>s Suc n)\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s Suc n) =\n    (LEAST i. (s |\\<^sub>s Suc n) i \\<noteq> (s |\\<^sub>s Suc n) 0)", "by (auto simp add: nextnat_def)"], ["proof (state)\nthis:\n  nextnat (s |\\<^sub>s Suc n) =\n  (LEAST i. (s |\\<^sub>s Suc n) i \\<noteq> (s |\\<^sub>s Suc n) 0)\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = Suc (nextnat (s |\\<^sub>s Suc n))", "hence g1: \"nextnat (s |\\<^sub>s Suc n) = (LEAST i. s (i+(Suc n)) \\<noteq> s (Suc n))\""], ["proof (prove)\nusing this:\n  nextnat (s |\\<^sub>s Suc n) =\n  (LEAST i. (s |\\<^sub>s Suc n) i \\<noteq> (s |\\<^sub>s Suc n) 0)\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s Suc n) =\n    (LEAST i. s (i + Suc n) \\<noteq> s (Suc n))", "by (simp add: suffix_def)"], ["proof (state)\nthis:\n  nextnat (s |\\<^sub>s Suc n) = (LEAST i. s (i + Suc n) \\<noteq> s (Suc n))\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = Suc (nextnat (s |\\<^sub>s Suc n))", "from h1"], ["proof (chain)\npicking this:\n  notemptyseq (s |\\<^sub>s n)", "have  \"nextnat (s |\\<^sub>s n) = (LEAST i. (s |\\<^sub>s n) i \\<noteq> (s |\\<^sub>s n) 0)\""], ["proof (prove)\nusing this:\n  notemptyseq (s |\\<^sub>s n)\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) =\n    (LEAST i. (s |\\<^sub>s n) i \\<noteq> (s |\\<^sub>s n) 0)", "by (auto simp add: nextnat_def)"], ["proof (state)\nthis:\n  nextnat (s |\\<^sub>s n) =\n  (LEAST i. (s |\\<^sub>s n) i \\<noteq> (s |\\<^sub>s n) 0)\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = Suc (nextnat (s |\\<^sub>s Suc n))", "hence g2: \"nextnat (s |\\<^sub>s n) = (LEAST i. s (i+n) \\<noteq> s n)\""], ["proof (prove)\nusing this:\n  nextnat (s |\\<^sub>s n) =\n  (LEAST i. (s |\\<^sub>s n) i \\<noteq> (s |\\<^sub>s n) 0)\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = (LEAST i. s (i + n) \\<noteq> s n)", "by (simp add: suffix_def)"], ["proof (state)\nthis:\n  nextnat (s |\\<^sub>s n) = (LEAST i. s (i + n) \\<noteq> s n)\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = Suc (nextnat (s |\\<^sub>s Suc n))", "with h2"], ["proof (chain)\npicking this:\n  stutstep s n\n  nextnat (s |\\<^sub>s n) = (LEAST i. s (i + n) \\<noteq> s n)", "have g2': \"nextnat (s |\\<^sub>s n) = (LEAST i. s (i+n) \\<noteq> s (Suc n))\""], ["proof (prove)\nusing this:\n  stutstep s n\n  nextnat (s |\\<^sub>s n) = (LEAST i. s (i + n) \\<noteq> s n)\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = (LEAST i. s (i + n) \\<noteq> s (Suc n))", "by (auto simp add: stutstep_def)"], ["proof (state)\nthis:\n  nextnat (s |\\<^sub>s n) = (LEAST i. s (i + n) \\<noteq> s (Suc n))\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = Suc (nextnat (s |\\<^sub>s Suc n))", "from G1 g1 g2'"], ["proof (chain)\npicking this:\n  (LEAST i. s (i + n) \\<noteq> s (Suc n)) =\n  Suc (LEAST i. s (i + Suc n) \\<noteq> s (Suc n))\n  nextnat (s |\\<^sub>s Suc n) = (LEAST i. s (i + Suc n) \\<noteq> s (Suc n))\n  nextnat (s |\\<^sub>s n) = (LEAST i. s (i + n) \\<noteq> s (Suc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  (LEAST i. s (i + n) \\<noteq> s (Suc n)) =\n  Suc (LEAST i. s (i + Suc n) \\<noteq> s (Suc n))\n  nextnat (s |\\<^sub>s Suc n) = (LEAST i. s (i + Suc n) \\<noteq> s (Suc n))\n  nextnat (s |\\<^sub>s n) = (LEAST i. s (i + n) \\<noteq> s (Suc n))\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = Suc (nextnat (s |\\<^sub>s Suc n))", "by auto"], ["proof (state)\nthis:\n  nextnat (s |\\<^sub>s n) = Suc (nextnat (s |\\<^sub>s Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nextnat_empty_neq: assumes H: \"\\<not> emptyseq s\" shows \"s (nextnat s) \\<noteq> s 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s (nextnat s) \\<noteq> s 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s (nextnat s) \\<noteq> s 0", "from H"], ["proof (chain)\npicking this:\n  notemptyseq s", "have a1: \"nextnat s =  (LEAST i. s i \\<noteq> s 0)\""], ["proof (prove)\nusing this:\n  notemptyseq s\n\ngoal (1 subgoal):\n 1. nextnat s = (LEAST i. s i \\<noteq> s 0)", "by (simp add: nextnat_def)"], ["proof (state)\nthis:\n  nextnat s = (LEAST i. s i \\<noteq> s 0)\n\ngoal (1 subgoal):\n 1. s (nextnat s) \\<noteq> s 0", "from H"], ["proof (chain)\npicking this:\n  notemptyseq s", "obtain i where \"s i \\<noteq> s 0\""], ["proof (prove)\nusing this:\n  notemptyseq s\n\ngoal (1 subgoal):\n 1. (\\<And>i. s i \\<noteq> s 0 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: emptyseq_def)"], ["proof (state)\nthis:\n  s i \\<noteq> s 0\n\ngoal (1 subgoal):\n 1. s (nextnat s) \\<noteq> s 0", "hence \"s (LEAST i. s i \\<noteq> s 0) \\<noteq> s 0\""], ["proof (prove)\nusing this:\n  s i \\<noteq> s 0\n\ngoal (1 subgoal):\n 1. s (LEAST i. s i \\<noteq> s 0) \\<noteq> s 0", "by (rule LeastI)"], ["proof (state)\nthis:\n  s (LEAST i. s i \\<noteq> s 0) \\<noteq> s 0\n\ngoal (1 subgoal):\n 1. s (nextnat s) \\<noteq> s 0", "with a1"], ["proof (chain)\npicking this:\n  nextnat s = (LEAST i. s i \\<noteq> s 0)\n  s (LEAST i. s i \\<noteq> s 0) \\<noteq> s 0", "show ?thesis"], ["proof (prove)\nusing this:\n  nextnat s = (LEAST i. s i \\<noteq> s 0)\n  s (LEAST i. s i \\<noteq> s 0) \\<noteq> s 0\n\ngoal (1 subgoal):\n 1. s (nextnat s) \\<noteq> s 0", "by auto"], ["proof (state)\nthis:\n  s (nextnat s) \\<noteq> s 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nextnat_empty_gzero: assumes H: \"\\<not> emptyseq s\" shows \"nextnat s > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < nextnat s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < nextnat s", "from H"], ["proof (chain)\npicking this:\n  notemptyseq s", "have a1: \"s (nextnat s) \\<noteq> s 0\""], ["proof (prove)\nusing this:\n  notemptyseq s\n\ngoal (1 subgoal):\n 1. s (nextnat s) \\<noteq> s 0", "by (rule nextnat_empty_neq)"], ["proof (state)\nthis:\n  s (nextnat s) \\<noteq> s 0\n\ngoal (1 subgoal):\n 1. 0 < nextnat s", "have \"nextnat s \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nextnat s \\<noteq> 0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. nextnat s = 0 \\<Longrightarrow> False", "assume \"nextnat s = 0\""], ["proof (state)\nthis:\n  nextnat s = 0\n\ngoal (1 subgoal):\n 1. nextnat s = 0 \\<Longrightarrow> False", "with a1"], ["proof (chain)\npicking this:\n  s (nextnat s) \\<noteq> s 0\n  nextnat s = 0", "show \"False\""], ["proof (prove)\nusing this:\n  s (nextnat s) \\<noteq> s 0\n  nextnat s = 0\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nextnat s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < nextnat s", "thus \"nextnat s > 0\""], ["proof (prove)\nusing this:\n  nextnat s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < nextnat s", "by simp"], ["proof (state)\nthis:\n  0 < nextnat s\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \"Properties of @{term nextsuffix}\""], ["", "lemma empty_nextsuffix: \n  assumes H: \"emptyseq s\" shows \"nextsuffix s = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nextsuffix s = s", "using H"], ["proof (prove)\nusing this:\n  emptyseq s\n\ngoal (1 subgoal):\n 1. nextsuffix s = s", "by (simp add: nextsuffix_def nextnat_def)"], ["", "lemma empty_nextsuffix_id: \n  assumes H: \"emptyseq s\" shows \"nextsuffix s = id s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nextsuffix s = id s", "using H"], ["proof (prove)\nusing this:\n  emptyseq s\n\ngoal (1 subgoal):\n 1. nextsuffix s = id s", "by (simp add: empty_nextsuffix)"], ["", "lemma notstutstep_nextsuffix1: \n  assumes H: \"\\<not> stutstep s n\" shows \"nextsuffix (s |\\<^sub>s n) = s |\\<^sub>s (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nextsuffix (s |\\<^sub>s n) = s |\\<^sub>s Suc n", "proof (unfold nextsuffix_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. s |\\<^sub>s n |\\<^sub>s nextnat (s |\\<^sub>s n) = s |\\<^sub>s Suc n", "show \"(s |\\<^sub>s n |\\<^sub>s (nextnat (s |\\<^sub>s n))) =  s |\\<^sub>s (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s |\\<^sub>s n |\\<^sub>s nextnat (s |\\<^sub>s n) = s |\\<^sub>s Suc n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s |\\<^sub>s n |\\<^sub>s nextnat (s |\\<^sub>s n) = s |\\<^sub>s Suc n", "from H"], ["proof (chain)\npicking this:\n  \\<not> stutstep s n", "have  \"nextnat (s |\\<^sub>s n) = 1\""], ["proof (prove)\nusing this:\n  \\<not> stutstep s n\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = 1", "by (rule notstutstep_nexnat1)"], ["proof (state)\nthis:\n  nextnat (s |\\<^sub>s n) = 1\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s n |\\<^sub>s nextnat (s |\\<^sub>s n) = s |\\<^sub>s Suc n", "hence \"(s |\\<^sub>s n |\\<^sub>s (nextnat (s |\\<^sub>s n))) = s |\\<^sub>s n |\\<^sub>s 1\""], ["proof (prove)\nusing this:\n  nextnat (s |\\<^sub>s n) = 1\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s n |\\<^sub>s nextnat (s |\\<^sub>s n) =\n    s |\\<^sub>s n |\\<^sub>s 1", "by auto"], ["proof (state)\nthis:\n  s |\\<^sub>s n |\\<^sub>s nextnat (s |\\<^sub>s n) =\n  s |\\<^sub>s n |\\<^sub>s 1\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s n |\\<^sub>s nextnat (s |\\<^sub>s n) = s |\\<^sub>s Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  s |\\<^sub>s n |\\<^sub>s nextnat (s |\\<^sub>s n) =\n  s |\\<^sub>s n |\\<^sub>s 1\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s n |\\<^sub>s nextnat (s |\\<^sub>s n) = s |\\<^sub>s Suc n", "by (simp add: suffix_def)"], ["proof (state)\nthis:\n  s |\\<^sub>s n |\\<^sub>s nextnat (s |\\<^sub>s n) = s |\\<^sub>s Suc n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s |\\<^sub>s n |\\<^sub>s nextnat (s |\\<^sub>s n) = s |\\<^sub>s Suc n\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \"Properties of @{term next}\""], ["", "lemma next_suc_suffix: \"next (Suc n) s = nextsuffix (next n s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next (Suc n) s = nextsuffix (next n s)", "by simp"], ["", "lemma next_suffix_com: \"nextsuffix (next n s) = (next n (nextsuffix s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nextsuffix (next n s) = next n (nextsuffix s)", "by (induct n, auto)"], ["", "lemma next_plus: \"next (m+n) s = next m (next n s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next (m + n) s = next m (next n s)", "by (induct m, auto)"], ["", "lemma next_empty: assumes H: \"emptyseq s\" shows \"next n s = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next n s = s", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. next 0 s = s\n 2. \\<And>n. next n s = s \\<Longrightarrow> next (Suc n) s = s", "from H"], ["proof (chain)\npicking this:\n  emptyseq s", "show \"next 0 s = s\""], ["proof (prove)\nusing this:\n  emptyseq s\n\ngoal (1 subgoal):\n 1. next 0 s = s", "by auto"], ["proof (state)\nthis:\n  next 0 s = s\n\ngoal (1 subgoal):\n 1. \\<And>n. next n s = s \\<Longrightarrow> next (Suc n) s = s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. next n s = s \\<Longrightarrow> next (Suc n) s = s", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. next n s = s \\<Longrightarrow> next (Suc n) s = s", "assume a1: \"next n s = s\""], ["proof (state)\nthis:\n  next n s = s\n\ngoal (1 subgoal):\n 1. \\<And>n. next n s = s \\<Longrightarrow> next (Suc n) s = s", "have \"next (Suc n) s = nextsuffix (next n s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next (Suc n) s = nextsuffix (next n s)", "by auto"], ["proof (state)\nthis:\n  next (Suc n) s = nextsuffix (next n s)\n\ngoal (1 subgoal):\n 1. \\<And>n. next n s = s \\<Longrightarrow> next (Suc n) s = s", "with a1"], ["proof (chain)\npicking this:\n  next n s = s\n  next (Suc n) s = nextsuffix (next n s)", "have \"next (Suc n) s = nextsuffix s\""], ["proof (prove)\nusing this:\n  next n s = s\n  next (Suc n) s = nextsuffix (next n s)\n\ngoal (1 subgoal):\n 1. next (Suc n) s = nextsuffix s", "by simp"], ["proof (state)\nthis:\n  next (Suc n) s = nextsuffix s\n\ngoal (1 subgoal):\n 1. \\<And>n. next n s = s \\<Longrightarrow> next (Suc n) s = s", "with H"], ["proof (chain)\npicking this:\n  emptyseq s\n  next (Suc n) s = nextsuffix s", "show \"next (Suc n) s = s\""], ["proof (prove)\nusing this:\n  emptyseq s\n  next (Suc n) s = nextsuffix s\n\ngoal (1 subgoal):\n 1. next (Suc n) s = s", "by (simp add: nextsuffix_def nextnat_def)"], ["proof (state)\nthis:\n  next (Suc n) s = s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma notempty_nextnotzero: \n  assumes H: \"\\<not>emptyseq s\" shows \"(next (Suc 0) s) 0 \\<noteq> s 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next (Suc 0) s 0 \\<noteq> s 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. next (Suc 0) s 0 \\<noteq> s 0", "from H"], ["proof (chain)\npicking this:\n  notemptyseq s", "have g1: \"s (nextnat s) \\<noteq> s 0\""], ["proof (prove)\nusing this:\n  notemptyseq s\n\ngoal (1 subgoal):\n 1. s (nextnat s) \\<noteq> s 0", "by (rule nextnat_empty_neq)"], ["proof (state)\nthis:\n  s (nextnat s) \\<noteq> s 0\n\ngoal (1 subgoal):\n 1. next (Suc 0) s 0 \\<noteq> s 0", "have \"next (Suc 0) s = nextsuffix s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next (Suc 0) s = nextsuffix s", "by auto"], ["proof (state)\nthis:\n  next (Suc 0) s = nextsuffix s\n\ngoal (1 subgoal):\n 1. next (Suc 0) s 0 \\<noteq> s 0", "hence \"(next (Suc 0) s) 0 =  s (nextnat s)\""], ["proof (prove)\nusing this:\n  next (Suc 0) s = nextsuffix s\n\ngoal (1 subgoal):\n 1. next (Suc 0) s 0 = s (nextnat s)", "by (simp add: nextsuffix_def suffix_def)"], ["proof (state)\nthis:\n  next (Suc 0) s 0 = s (nextnat s)\n\ngoal (1 subgoal):\n 1. next (Suc 0) s 0 \\<noteq> s 0", "with g1"], ["proof (chain)\npicking this:\n  s (nextnat s) \\<noteq> s 0\n  next (Suc 0) s 0 = s (nextnat s)", "show ?thesis"], ["proof (prove)\nusing this:\n  s (nextnat s) \\<noteq> s 0\n  next (Suc 0) s 0 = s (nextnat s)\n\ngoal (1 subgoal):\n 1. next (Suc 0) s 0 \\<noteq> s 0", "by simp"], ["proof (state)\nthis:\n  next (Suc 0) s 0 \\<noteq> s 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma next_ex_id: \"\\<exists> i. s i = (next m s) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i. s i = next m s 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i. s i = next m s 0", "have \"\\<exists> i. (s |\\<^sub>s i) = (next m s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i. s |\\<^sub>s i = next m s", "proof (induct m)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>i. s |\\<^sub>s i = next 0 s\n 2. \\<And>m.\n       \\<exists>i. s |\\<^sub>s i = next m s \\<Longrightarrow>\n       \\<exists>i. s |\\<^sub>s i = next (Suc m) s", "have \"s |\\<^sub>s 0 = next 0 s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s |\\<^sub>s 0 = next 0 s", "by simp"], ["proof (state)\nthis:\n  s |\\<^sub>s 0 = next 0 s\n\ngoal (2 subgoals):\n 1. \\<exists>i. s |\\<^sub>s i = next 0 s\n 2. \\<And>m.\n       \\<exists>i. s |\\<^sub>s i = next m s \\<Longrightarrow>\n       \\<exists>i. s |\\<^sub>s i = next (Suc m) s", "thus \"\\<exists> i. (s |\\<^sub>s i) = (next 0 s)\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s 0 = next 0 s\n\ngoal (1 subgoal):\n 1. \\<exists>i. s |\\<^sub>s i = next 0 s", ".."], ["proof (state)\nthis:\n  \\<exists>i. s |\\<^sub>s i = next 0 s\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>i. s |\\<^sub>s i = next m s \\<Longrightarrow>\n       \\<exists>i. s |\\<^sub>s i = next (Suc m) s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>i. s |\\<^sub>s i = next m s \\<Longrightarrow>\n       \\<exists>i. s |\\<^sub>s i = next (Suc m) s", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>i. s |\\<^sub>s i = next m s \\<Longrightarrow>\n       \\<exists>i. s |\\<^sub>s i = next (Suc m) s", "assume a1: \"\\<exists> i. (s |\\<^sub>s i) = (next m s)\""], ["proof (state)\nthis:\n  \\<exists>i. s |\\<^sub>s i = next m s\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>i. s |\\<^sub>s i = next m s \\<Longrightarrow>\n       \\<exists>i. s |\\<^sub>s i = next (Suc m) s", "then"], ["proof (chain)\npicking this:\n  \\<exists>i. s |\\<^sub>s i = next m s", "obtain i where a1': \"(s |\\<^sub>s i) = (next m s)\""], ["proof (prove)\nusing this:\n  \\<exists>i. s |\\<^sub>s i = next m s\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        s |\\<^sub>s i = next m s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  s |\\<^sub>s i = next m s\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>i. s |\\<^sub>s i = next m s \\<Longrightarrow>\n       \\<exists>i. s |\\<^sub>s i = next (Suc m) s", "have \"next (Suc m) s = nextsuffix (next m s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next (Suc m) s = nextsuffix (next m s)", "by auto"], ["proof (state)\nthis:\n  next (Suc m) s = nextsuffix (next m s)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>i. s |\\<^sub>s i = next m s \\<Longrightarrow>\n       \\<exists>i. s |\\<^sub>s i = next (Suc m) s", "hence \"next (Suc m) s = (next m s) |\\<^sub>s (nextnat (next m s))\""], ["proof (prove)\nusing this:\n  next (Suc m) s = nextsuffix (next m s)\n\ngoal (1 subgoal):\n 1. next (Suc m) s = next m s |\\<^sub>s nextnat (next m s)", "by (simp add: nextsuffix_def)"], ["proof (state)\nthis:\n  next (Suc m) s = next m s |\\<^sub>s nextnat (next m s)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>i. s |\\<^sub>s i = next m s \\<Longrightarrow>\n       \\<exists>i. s |\\<^sub>s i = next (Suc m) s", "hence \"\\<exists> i. next (Suc m) s = (next m s) |\\<^sub>s i\""], ["proof (prove)\nusing this:\n  next (Suc m) s = next m s |\\<^sub>s nextnat (next m s)\n\ngoal (1 subgoal):\n 1. \\<exists>i. next (Suc m) s = next m s |\\<^sub>s i", ".."], ["proof (state)\nthis:\n  \\<exists>i. next (Suc m) s = next m s |\\<^sub>s i\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>i. s |\\<^sub>s i = next m s \\<Longrightarrow>\n       \\<exists>i. s |\\<^sub>s i = next (Suc m) s", "then"], ["proof (chain)\npicking this:\n  \\<exists>i. next (Suc m) s = next m s |\\<^sub>s i", "obtain j where \"next (Suc m) s = (next m s) |\\<^sub>s j\""], ["proof (prove)\nusing this:\n  \\<exists>i. next (Suc m) s = next m s |\\<^sub>s i\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        next (Suc m) s = next m s |\\<^sub>s j \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  next (Suc m) s = next m s |\\<^sub>s j\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>i. s |\\<^sub>s i = next m s \\<Longrightarrow>\n       \\<exists>i. s |\\<^sub>s i = next (Suc m) s", "with a1'"], ["proof (chain)\npicking this:\n  s |\\<^sub>s i = next m s\n  next (Suc m) s = next m s |\\<^sub>s j", "have \"next (Suc m) s = (s |\\<^sub>s i) |\\<^sub>s j\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s i = next m s\n  next (Suc m) s = next m s |\\<^sub>s j\n\ngoal (1 subgoal):\n 1. next (Suc m) s = s |\\<^sub>s i |\\<^sub>s j", "by simp"], ["proof (state)\nthis:\n  next (Suc m) s = s |\\<^sub>s i |\\<^sub>s j\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>i. s |\\<^sub>s i = next m s \\<Longrightarrow>\n       \\<exists>i. s |\\<^sub>s i = next (Suc m) s", "hence \"next (Suc m) s = (s |\\<^sub>s (j+i))\""], ["proof (prove)\nusing this:\n  next (Suc m) s = s |\\<^sub>s i |\\<^sub>s j\n\ngoal (1 subgoal):\n 1. next (Suc m) s = s |\\<^sub>s j + i", "by (simp add: suffix_plus)"], ["proof (state)\nthis:\n  next (Suc m) s = s |\\<^sub>s j + i\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>i. s |\\<^sub>s i = next m s \\<Longrightarrow>\n       \\<exists>i. s |\\<^sub>s i = next (Suc m) s", "hence \"(s |\\<^sub>s (j+i)) = next (Suc m) s\""], ["proof (prove)\nusing this:\n  next (Suc m) s = s |\\<^sub>s j + i\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s j + i = next (Suc m) s", "by simp"], ["proof (state)\nthis:\n  s |\\<^sub>s j + i = next (Suc m) s\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>i. s |\\<^sub>s i = next m s \\<Longrightarrow>\n       \\<exists>i. s |\\<^sub>s i = next (Suc m) s", "thus \"\\<exists> i. (s |\\<^sub>s i) = (next (Suc m) s)\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s j + i = next (Suc m) s\n\ngoal (1 subgoal):\n 1. \\<exists>i. s |\\<^sub>s i = next (Suc m) s", ".."], ["proof (state)\nthis:\n  \\<exists>i. s |\\<^sub>s i = next (Suc m) s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i. s |\\<^sub>s i = next m s\n\ngoal (1 subgoal):\n 1. \\<exists>i. s i = next m s 0", "then"], ["proof (chain)\npicking this:\n  \\<exists>i. s |\\<^sub>s i = next m s", "obtain i where \"(s |\\<^sub>s i) = (next m s)\""], ["proof (prove)\nusing this:\n  \\<exists>i. s |\\<^sub>s i = next m s\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        s |\\<^sub>s i = next m s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  s |\\<^sub>s i = next m s\n\ngoal (1 subgoal):\n 1. \\<exists>i. s i = next m s 0", "hence \"(s |\\<^sub>s i) 0 = (next m s) 0\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s i = next m s\n\ngoal (1 subgoal):\n 1. (s |\\<^sub>s i) 0 = next m s 0", "by auto"], ["proof (state)\nthis:\n  (s |\\<^sub>s i) 0 = next m s 0\n\ngoal (1 subgoal):\n 1. \\<exists>i. s i = next m s 0", "hence \"s i = (next m s) 0\""], ["proof (prove)\nusing this:\n  (s |\\<^sub>s i) 0 = next m s 0\n\ngoal (1 subgoal):\n 1. s i = next m s 0", "by (auto simp add: suffix_def)"], ["proof (state)\nthis:\n  s i = next m s 0\n\ngoal (1 subgoal):\n 1. \\<exists>i. s i = next m s 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  s i = next m s 0\n\ngoal (1 subgoal):\n 1. \\<exists>i. s i = next m s 0", ".."], ["proof (state)\nthis:\n  \\<exists>i. s i = next m s 0\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \"Properties of @{term collapse}\""], ["", "lemma emptyseq_collapse_eq: assumes A1: \"emptyseq s\" shows \"\\<natural> s = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<natural> s = s", "proof (unfold collapse_def, rule ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. next n s 0 = s n", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. next n s 0 = s n", "from A1"], ["proof (chain)\npicking this:\n  emptyseq s", "have \"next n s = s\""], ["proof (prove)\nusing this:\n  emptyseq s\n\ngoal (1 subgoal):\n 1. next n s = s", "by (rule next_empty)"], ["proof (state)\nthis:\n  next n s = s\n\ngoal (1 subgoal):\n 1. \\<And>n. next n s 0 = s n", "moreover"], ["proof (state)\nthis:\n  next n s = s\n\ngoal (1 subgoal):\n 1. \\<And>n. next n s 0 = s n", "from A1"], ["proof (chain)\npicking this:\n  emptyseq s", "have \"s n = s 0\""], ["proof (prove)\nusing this:\n  emptyseq s\n\ngoal (1 subgoal):\n 1. s n = s 0", "by (simp add: emptyseq_def)"], ["proof (state)\nthis:\n  s n = s 0\n\ngoal (1 subgoal):\n 1. \\<And>n. next n s 0 = s n", "ultimately"], ["proof (chain)\npicking this:\n  next n s = s\n  s n = s 0", "show \"(next n s) 0 = s n\""], ["proof (prove)\nusing this:\n  next n s = s\n  s n = s 0\n\ngoal (1 subgoal):\n 1. next n s 0 = s n", "by simp"], ["proof (state)\nthis:\n  next n s 0 = s n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma empty_collapse_empty: \n  assumes H: \"emptyseq s\" shows \"emptyseq (\\<natural> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emptyseq (\\<natural> s)", "using H"], ["proof (prove)\nusing this:\n  emptyseq s\n\ngoal (1 subgoal):\n 1. emptyseq (\\<natural> s)", "by (simp add: emptyseq_collapse_eq)"], ["", "lemma collapse_empty_empty: \n  assumes H: \"emptyseq (\\<natural> s)\" shows \"emptyseq s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emptyseq s", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. notemptyseq s \\<Longrightarrow> False", "assume a1: \"\\<not>emptyseq s\""], ["proof (state)\nthis:\n  notemptyseq s\n\ngoal (1 subgoal):\n 1. notemptyseq s \\<Longrightarrow> False", "from H"], ["proof (chain)\npicking this:\n  emptyseq (\\<natural> s)", "have \"\\<forall> i. (next i s) 0 = s 0\""], ["proof (prove)\nusing this:\n  emptyseq (\\<natural> s)\n\ngoal (1 subgoal):\n 1. \\<forall>i. next i s 0 = s 0", "by (simp add: collapse_def emptyseq_def)"], ["proof (state)\nthis:\n  \\<forall>i. next i s 0 = s 0\n\ngoal (1 subgoal):\n 1. notemptyseq s \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<forall>i. next i s 0 = s 0\n\ngoal (1 subgoal):\n 1. notemptyseq s \\<Longrightarrow> False", "from a1"], ["proof (chain)\npicking this:\n  notemptyseq s", "have \"(next (Suc 0) s) 0 \\<noteq> s 0\""], ["proof (prove)\nusing this:\n  notemptyseq s\n\ngoal (1 subgoal):\n 1. next (Suc 0) s 0 \\<noteq> s 0", "by (rule notempty_nextnotzero)"], ["proof (state)\nthis:\n  next (Suc 0) s 0 \\<noteq> s 0\n\ngoal (1 subgoal):\n 1. notemptyseq s \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>i. next i s 0 = s 0\n  next (Suc 0) s 0 \\<noteq> s 0", "show \"False\""], ["proof (prove)\nusing this:\n  \\<forall>i. next i s 0 = s 0\n  next (Suc 0) s 0 \\<noteq> s 0\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma collapse_empty_iff_empty [simp]: \"emptyseq (\\<natural> s) = emptyseq s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emptyseq (\\<natural> s) = emptyseq s", "by (auto elim: empty_collapse_empty collapse_empty_empty)"], ["", "subsection \"Similarity of Sequences\""], ["", "text\\<open>\n  Since adding or removing stuttering steps does not change the validity \n  of a stuttering-invarant formula, equality is often too strong, \n  and the weaker equality \\emph{up to stuttering} is sufficient. \n  This is often called \\emph{similarity} ($\\approx$) \n  of sequences in the literature, and is required to\n  show that logical operators are stuttering invariant. This\n  is mechanised as:\n\\<close>"], ["", "definition seqsimilar :: \"('a seq) \\<Rightarrow> ('a seq) \\<Rightarrow> bool\" (infixl \"\\<approx>\" 50)\nwhere \"\\<sigma> \\<approx> \\<tau> \\<equiv> (\\<natural> \\<sigma>) = (\\<natural> \\<tau>)\""], ["", "subsubsection \"Properties of @{term seqsimilar}\""], ["", "lemma seqsim_refl [iff]: \"s \\<approx> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> s", "by (simp add: seqsimilar_def)"], ["", "lemma seqsim_sym: assumes H: \"s \\<approx> t\" shows \"t \\<approx> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<approx> s", "using H"], ["proof (prove)\nusing this:\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. t \\<approx> s", "by (simp add: seqsimilar_def)"], ["", "lemma seqeq_imp_sim: assumes H: \"s = t\" shows \"s \\<approx> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> t", "using H"], ["proof (prove)\nusing this:\n  s = t\n\ngoal (1 subgoal):\n 1. s \\<approx> t", "by simp"], ["", "lemma seqsim_trans [trans]: assumes h1: \"s \\<approx> t\" and h2: \"t \\<approx> z\" shows \"s \\<approx> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> z", "using assms"], ["proof (prove)\nusing this:\n  s \\<approx> t\n  t \\<approx> z\n\ngoal (1 subgoal):\n 1. s \\<approx> z", "by (simp add: seqsimilar_def)"], ["", "theorem sim_first: assumes H: \"s \\<approx> t\" shows \"first s = first t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. first s = first t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. first s = first t", "from H"], ["proof (chain)\npicking this:\n  s \\<approx> t", "have \"(\\<natural> s) 0 = (\\<natural> t) 0\""], ["proof (prove)\nusing this:\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. \\<natural> s 0 = \\<natural> t 0", "by (simp add: seqsimilar_def)"], ["proof (state)\nthis:\n  \\<natural> s 0 = \\<natural> t 0\n\ngoal (1 subgoal):\n 1. first s = first t", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<natural> s 0 = \\<natural> t 0\n\ngoal (1 subgoal):\n 1. first s = first t", "by (simp add: collapse_def first_def)"], ["proof (state)\nthis:\n  first s = first t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas sim_first2 = sim_first[unfolded first_def]"], ["", "lemma tail_sim_second: assumes H: \"tail s \\<approx> tail t\" shows \"second s = second t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. second s = second t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. second s = second t", "from H"], ["proof (chain)\npicking this:\n  tail s \\<approx> tail t", "have \"first (tail s) = first (tail t)\""], ["proof (prove)\nusing this:\n  tail s \\<approx> tail t\n\ngoal (1 subgoal):\n 1. first (tail s) = first (tail t)", "by (simp add: sim_first)"], ["proof (state)\nthis:\n  first (tail s) = first (tail t)\n\ngoal (1 subgoal):\n 1. second s = second t", "thus \"second s = second t\""], ["proof (prove)\nusing this:\n  first (tail s) = first (tail t)\n\ngoal (1 subgoal):\n 1. second s = second t", "by (simp add: first_tail_second)"], ["proof (state)\nthis:\n  second s = second t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma seqsimilarI:\n  assumes 1: \"first s = first t\" and 2: \"nextsuffix s \\<approx> nextsuffix t\"\n  shows \"s \\<approx> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> t", "unfolding seqsimilar_def collapse_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. next n s 0) = (\\<lambda>n. next n t 0)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. next n s 0 = next n t 0", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. next n s 0 = next n t 0", "show \"next n s 0 = next n t 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next n s 0 = next n t 0", "proof (cases n)"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> next n s 0 = next n t 0\n 2. \\<And>nat. n = Suc nat \\<Longrightarrow> next n s 0 = next n t 0", "assume \"n = 0\""], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> next n s 0 = next n t 0\n 2. \\<And>nat. n = Suc nat \\<Longrightarrow> next n s 0 = next n t 0", "with 1"], ["proof (chain)\npicking this:\n  first s = first t\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  first s = first t\n  n = 0\n\ngoal (1 subgoal):\n 1. next n s 0 = next n t 0", "by (simp add: first_def)"], ["proof (state)\nthis:\n  next n s 0 = next n t 0\n\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> next n s 0 = next n t 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> next n s 0 = next n t 0", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> next n s 0 = next n t 0", "assume m: \"n = Suc m\""], ["proof (state)\nthis:\n  n = Suc m\n\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> next n s 0 = next n t 0", "from 2"], ["proof (chain)\npicking this:\n  nextsuffix s \\<approx> nextsuffix t", "have \"next m (nextsuffix s) 0 =  next m (nextsuffix t) 0\""], ["proof (prove)\nusing this:\n  nextsuffix s \\<approx> nextsuffix t\n\ngoal (1 subgoal):\n 1. next m (nextsuffix s) 0 = next m (nextsuffix t) 0", "unfolding seqsimilar_def collapse_def"], ["proof (prove)\nusing this:\n  (\\<lambda>n. next n (nextsuffix s) 0) =\n  (\\<lambda>n. next n (nextsuffix t) 0)\n\ngoal (1 subgoal):\n 1. next m (nextsuffix s) 0 = next m (nextsuffix t) 0", "by (rule fun_cong)"], ["proof (state)\nthis:\n  next m (nextsuffix s) 0 = next m (nextsuffix t) 0\n\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> next n s 0 = next n t 0", "with m"], ["proof (chain)\npicking this:\n  n = Suc m\n  next m (nextsuffix s) 0 = next m (nextsuffix t) 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = Suc m\n  next m (nextsuffix s) 0 = next m (nextsuffix t) 0\n\ngoal (1 subgoal):\n 1. next n s 0 = next n t 0", "by (simp add: next_suffix_com)"], ["proof (state)\nthis:\n  next n s 0 = next n t 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  next n s 0 = next n t 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma seqsim_empty_empty: \n  assumes H1: \"s \\<approx> t\" and H2: \"emptyseq s\" shows \"emptyseq t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emptyseq t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. emptyseq t", "from H2"], ["proof (chain)\npicking this:\n  emptyseq s", "have \"emptyseq (\\<natural> s)\""], ["proof (prove)\nusing this:\n  emptyseq s\n\ngoal (1 subgoal):\n 1. emptyseq (\\<natural> s)", "by simp"], ["proof (state)\nthis:\n  emptyseq (\\<natural> s)\n\ngoal (1 subgoal):\n 1. emptyseq t", "with H1"], ["proof (chain)\npicking this:\n  s \\<approx> t\n  emptyseq (\\<natural> s)", "have \"emptyseq (\\<natural> t)\""], ["proof (prove)\nusing this:\n  s \\<approx> t\n  emptyseq (\\<natural> s)\n\ngoal (1 subgoal):\n 1. emptyseq (\\<natural> t)", "by (simp add: seqsimilar_def)"], ["proof (state)\nthis:\n  emptyseq (\\<natural> t)\n\ngoal (1 subgoal):\n 1. emptyseq t", "thus ?thesis"], ["proof (prove)\nusing this:\n  emptyseq (\\<natural> t)\n\ngoal (1 subgoal):\n 1. emptyseq t", "by simp"], ["proof (state)\nthis:\n  emptyseq t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma seqsim_empty_iff_empty:\n  assumes H: \"s \\<approx> t\" shows \"emptyseq s = emptyseq t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emptyseq s = emptyseq t", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. emptyseq s \\<Longrightarrow> emptyseq t\n 2. emptyseq t \\<Longrightarrow> emptyseq s", "assume \"emptyseq s\""], ["proof (state)\nthis:\n  emptyseq s\n\ngoal (2 subgoals):\n 1. emptyseq s \\<Longrightarrow> emptyseq t\n 2. emptyseq t \\<Longrightarrow> emptyseq s", "with H"], ["proof (chain)\npicking this:\n  s \\<approx> t\n  emptyseq s", "show \"emptyseq t\""], ["proof (prove)\nusing this:\n  s \\<approx> t\n  emptyseq s\n\ngoal (1 subgoal):\n 1. emptyseq t", "by (rule seqsim_empty_empty)"], ["proof (state)\nthis:\n  emptyseq t\n\ngoal (1 subgoal):\n 1. emptyseq t \\<Longrightarrow> emptyseq s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. emptyseq t \\<Longrightarrow> emptyseq s", "assume t: \"emptyseq t\""], ["proof (state)\nthis:\n  emptyseq t\n\ngoal (1 subgoal):\n 1. emptyseq t \\<Longrightarrow> emptyseq s", "from H"], ["proof (chain)\npicking this:\n  s \\<approx> t", "have \"t \\<approx> s\""], ["proof (prove)\nusing this:\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. t \\<approx> s", "by (rule seqsim_sym)"], ["proof (state)\nthis:\n  t \\<approx> s\n\ngoal (1 subgoal):\n 1. emptyseq t \\<Longrightarrow> emptyseq s", "from this t"], ["proof (chain)\npicking this:\n  t \\<approx> s\n  emptyseq t", "show \"emptyseq s\""], ["proof (prove)\nusing this:\n  t \\<approx> s\n  emptyseq t\n\ngoal (1 subgoal):\n 1. emptyseq s", "by (rule seqsim_empty_empty)"], ["proof (state)\nthis:\n  emptyseq s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma seq_empty_eq: \n  assumes H1: \"s 0 = t 0\" and H2: \"emptyseq s\" and H3: \"emptyseq t\"\n  shows \"s = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s = t", "proof (rule ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. s x = t x", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. s x = t x", "from assms"], ["proof (chain)\npicking this:\n  s 0 = t 0\n  emptyseq s\n  emptyseq t", "have \"t n = s n\""], ["proof (prove)\nusing this:\n  s 0 = t 0\n  emptyseq s\n  emptyseq t\n\ngoal (1 subgoal):\n 1. t n = s n", "by (auto simp: emptyseq_def)"], ["proof (state)\nthis:\n  t n = s n\n\ngoal (1 subgoal):\n 1. \\<And>x. s x = t x", "thus \"s n = t n\""], ["proof (prove)\nusing this:\n  t n = s n\n\ngoal (1 subgoal):\n 1. s n = t n", "by simp"], ["proof (state)\nthis:\n  s n = t n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma seqsim_notstutstep: \n  assumes H: \"\\<not> (stutstep s n)\" shows \"(s |\\<^sub>s (Suc n)) \\<approx> nextsuffix (s |\\<^sub>s n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s |\\<^sub>s Suc n \\<approx> nextsuffix (s |\\<^sub>s n)", "using H"], ["proof (prove)\nusing this:\n  \\<not> stutstep s n\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s Suc n \\<approx> nextsuffix (s |\\<^sub>s n)", "by (simp add: notstutstep_nextsuffix1)"], ["", "lemma stut_nextsuf_suc: \n  assumes H: \"stutstep s n\" shows \"nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s Suc n)", "proof (cases \"emptyseq (s |\\<^sub>s n)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. emptyseq (s |\\<^sub>s n) \\<Longrightarrow>\n    nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s Suc n)\n 2. notemptyseq (s |\\<^sub>s n) \\<Longrightarrow>\n    nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s Suc n)", "case True"], ["proof (state)\nthis:\n  emptyseq (s |\\<^sub>s n)\n\ngoal (2 subgoals):\n 1. emptyseq (s |\\<^sub>s n) \\<Longrightarrow>\n    nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s Suc n)\n 2. notemptyseq (s |\\<^sub>s n) \\<Longrightarrow>\n    nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s Suc n)", "hence g1: \"nextsuffix (s |\\<^sub>s n) = (s |\\<^sub>s n)\""], ["proof (prove)\nusing this:\n  emptyseq (s |\\<^sub>s n)\n\ngoal (1 subgoal):\n 1. nextsuffix (s |\\<^sub>s n) = s |\\<^sub>s n", "by (simp add: nextsuffix_def nextnat_def)"], ["proof (state)\nthis:\n  nextsuffix (s |\\<^sub>s n) = s |\\<^sub>s n\n\ngoal (2 subgoals):\n 1. emptyseq (s |\\<^sub>s n) \\<Longrightarrow>\n    nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s Suc n)\n 2. notemptyseq (s |\\<^sub>s n) \\<Longrightarrow>\n    nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s Suc n)", "from True"], ["proof (chain)\npicking this:\n  emptyseq (s |\\<^sub>s n)", "have g2: \"nextsuffix (s |\\<^sub>s Suc n) = (s |\\<^sub>s Suc n)\""], ["proof (prove)\nusing this:\n  emptyseq (s |\\<^sub>s n)\n\ngoal (1 subgoal):\n 1. nextsuffix (s |\\<^sub>s Suc n) = s |\\<^sub>s Suc n", "by (simp add: suc_empty nextsuffix_def nextnat_def)"], ["proof (state)\nthis:\n  nextsuffix (s |\\<^sub>s Suc n) = s |\\<^sub>s Suc n\n\ngoal (2 subgoals):\n 1. emptyseq (s |\\<^sub>s n) \\<Longrightarrow>\n    nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s Suc n)\n 2. notemptyseq (s |\\<^sub>s n) \\<Longrightarrow>\n    nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s Suc n)", "have \"(s |\\<^sub>s n) = (s |\\<^sub>s Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s |\\<^sub>s n = s |\\<^sub>s Suc n", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (s |\\<^sub>s n) x = (s |\\<^sub>s Suc n) x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (s |\\<^sub>s n) x = (s |\\<^sub>s Suc n) x", "from True"], ["proof (chain)\npicking this:\n  emptyseq (s |\\<^sub>s n)", "have \"s (x + n) = s (0 + n)\" \"s (Suc x + n) = s (0 + n)\""], ["proof (prove)\nusing this:\n  emptyseq (s |\\<^sub>s n)\n\ngoal (1 subgoal):\n 1. s (x + n) = s (0 + n) &&& s (Suc x + n) = s (0 + n)", "unfolding emptyseq_def suffix_def"], ["proof (prove)\nusing this:\n  \\<forall>i. s (i + n) = s (0 + n)\n\ngoal (1 subgoal):\n 1. s (x + n) = s (0 + n) &&& s (Suc x + n) = s (0 + n)", "by (blast+)"], ["proof (state)\nthis:\n  s (x + n) = s (0 + n)\n  s (Suc x + n) = s (0 + n)\n\ngoal (1 subgoal):\n 1. \\<And>x. (s |\\<^sub>s n) x = (s |\\<^sub>s Suc n) x", "thus \"(s |\\<^sub>s n) x = (s |\\<^sub>s Suc n) x\""], ["proof (prove)\nusing this:\n  s (x + n) = s (0 + n)\n  s (Suc x + n) = s (0 + n)\n\ngoal (1 subgoal):\n 1. (s |\\<^sub>s n) x = (s |\\<^sub>s Suc n) x", "by (simp add: suffix_def)"], ["proof (state)\nthis:\n  (s |\\<^sub>s n) x = (s |\\<^sub>s Suc n) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s |\\<^sub>s n = s |\\<^sub>s Suc n\n\ngoal (2 subgoals):\n 1. emptyseq (s |\\<^sub>s n) \\<Longrightarrow>\n    nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s Suc n)\n 2. notemptyseq (s |\\<^sub>s n) \\<Longrightarrow>\n    nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s Suc n)", "with g1 g2"], ["proof (chain)\npicking this:\n  nextsuffix (s |\\<^sub>s n) = s |\\<^sub>s n\n  nextsuffix (s |\\<^sub>s Suc n) = s |\\<^sub>s Suc n\n  s |\\<^sub>s n = s |\\<^sub>s Suc n", "show ?thesis"], ["proof (prove)\nusing this:\n  nextsuffix (s |\\<^sub>s n) = s |\\<^sub>s n\n  nextsuffix (s |\\<^sub>s Suc n) = s |\\<^sub>s Suc n\n  s |\\<^sub>s n = s |\\<^sub>s Suc n\n\ngoal (1 subgoal):\n 1. nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s Suc n)", "by auto"], ["proof (state)\nthis:\n  nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s Suc n)\n\ngoal (1 subgoal):\n 1. notemptyseq (s |\\<^sub>s n) \\<Longrightarrow>\n    nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s Suc n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. notemptyseq (s |\\<^sub>s n) \\<Longrightarrow>\n    nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s Suc n)", "case False"], ["proof (state)\nthis:\n  notemptyseq (s |\\<^sub>s n)\n\ngoal (1 subgoal):\n 1. notemptyseq (s |\\<^sub>s n) \\<Longrightarrow>\n    nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s Suc n)", "with H"], ["proof (chain)\npicking this:\n  stutstep s n\n  notemptyseq (s |\\<^sub>s n)", "have \"(nextnat (s |\\<^sub>s n)) = Suc (nextnat (s |\\<^sub>s Suc n))\""], ["proof (prove)\nusing this:\n  stutstep s n\n  notemptyseq (s |\\<^sub>s n)\n\ngoal (1 subgoal):\n 1. nextnat (s |\\<^sub>s n) = Suc (nextnat (s |\\<^sub>s Suc n))", "by (simp add: stutstep_notempty_sucnextnat)"], ["proof (state)\nthis:\n  nextnat (s |\\<^sub>s n) = Suc (nextnat (s |\\<^sub>s Suc n))\n\ngoal (1 subgoal):\n 1. notemptyseq (s |\\<^sub>s n) \\<Longrightarrow>\n    nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s Suc n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  nextnat (s |\\<^sub>s n) = Suc (nextnat (s |\\<^sub>s Suc n))\n\ngoal (1 subgoal):\n 1. nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s Suc n)", "by (simp add: nextsuffix_def suffix_plus)"], ["proof (state)\nthis:\n  nextsuffix (s |\\<^sub>s n) = nextsuffix (s |\\<^sub>s Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma seqsim_suffix_seqsim:\n  assumes H: \"s \\<approx> t\" shows \"nextsuffix s \\<approx> nextsuffix t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nextsuffix s \\<approx> nextsuffix t", "unfolding seqsimilar_def collapse_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. next n (nextsuffix s) 0) =\n    (\\<lambda>n. next n (nextsuffix t) 0)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. next n (nextsuffix s) 0 = next n (nextsuffix t) 0", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. next n (nextsuffix s) 0 = next n (nextsuffix t) 0", "from H"], ["proof (chain)\npicking this:\n  s \\<approx> t", "have \"(next (Suc n) s) 0 = (next (Suc n) t) 0\""], ["proof (prove)\nusing this:\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. next (Suc n) s 0 = next (Suc n) t 0", "unfolding seqsimilar_def collapse_def"], ["proof (prove)\nusing this:\n  (\\<lambda>n. next n s 0) = (\\<lambda>n. next n t 0)\n\ngoal (1 subgoal):\n 1. next (Suc n) s 0 = next (Suc n) t 0", "by (rule fun_cong)"], ["proof (state)\nthis:\n  next (Suc n) s 0 = next (Suc n) t 0\n\ngoal (1 subgoal):\n 1. \\<And>n. next n (nextsuffix s) 0 = next n (nextsuffix t) 0", "thus \"next n (nextsuffix s) 0 = next n (nextsuffix t) 0\""], ["proof (prove)\nusing this:\n  next (Suc n) s 0 = next (Suc n) t 0\n\ngoal (1 subgoal):\n 1. next n (nextsuffix s) 0 = next n (nextsuffix t) 0", "by (simp add: next_suffix_com)"], ["proof (state)\nthis:\n  next n (nextsuffix s) 0 = next n (nextsuffix t) 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma seqsim_stutstep:\n  assumes H: \"stutstep s n\" shows \"(s |\\<^sub>s (Suc n)) \\<approx> (s |\\<^sub>s n)\" (is \"?sn \\<approx> ?s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. s |\\<^sub>s Suc n \\<approx> s |\\<^sub>s n", "unfolding seqsimilar_def collapse_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>na. next na (s |\\<^sub>s Suc n) 0) =\n    (\\<lambda>na. next na (s |\\<^sub>s n) 0)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>na. next na (s |\\<^sub>s Suc n) 0 = next na (s |\\<^sub>s n) 0", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>na. next na (s |\\<^sub>s Suc n) 0 = next na (s |\\<^sub>s n) 0", "show \"next m (s |\\<^sub>s Suc n) 0 = next m (s |\\<^sub>s n) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next m (s |\\<^sub>s Suc n) 0 = next m (s |\\<^sub>s n) 0", "proof (cases m)"], ["proof (state)\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    next m (s |\\<^sub>s Suc n) 0 = next m (s |\\<^sub>s n) 0\n 2. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       next m (s |\\<^sub>s Suc n) 0 = next m (s |\\<^sub>s n) 0", "assume \"m=0\""], ["proof (state)\nthis:\n  m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    next m (s |\\<^sub>s Suc n) 0 = next m (s |\\<^sub>s n) 0\n 2. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       next m (s |\\<^sub>s Suc n) 0 = next m (s |\\<^sub>s n) 0", "with H"], ["proof (chain)\npicking this:\n  stutstep s n\n  m = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  stutstep s n\n  m = 0\n\ngoal (1 subgoal):\n 1. next m (s |\\<^sub>s Suc n) 0 = next m (s |\\<^sub>s n) 0", "by (simp add: suffix_def stutstep_def)"], ["proof (state)\nthis:\n  next m (s |\\<^sub>s Suc n) 0 = next m (s |\\<^sub>s n) 0\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       next m (s |\\<^sub>s Suc n) 0 = next m (s |\\<^sub>s n) 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       next m (s |\\<^sub>s Suc n) 0 = next m (s |\\<^sub>s n) 0", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       next m (s |\\<^sub>s Suc n) 0 = next m (s |\\<^sub>s n) 0", "assume m: \"m = Suc k\""], ["proof (state)\nthis:\n  m = Suc k\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       next m (s |\\<^sub>s Suc n) 0 = next m (s |\\<^sub>s n) 0", "with H"], ["proof (chain)\npicking this:\n  stutstep s n\n  m = Suc k", "have \"next m (s |\\<^sub>s Suc n) = next k (nextsuffix  (s |\\<^sub>s n))\""], ["proof (prove)\nusing this:\n  stutstep s n\n  m = Suc k\n\ngoal (1 subgoal):\n 1. next m (s |\\<^sub>s Suc n) = next k (nextsuffix (s |\\<^sub>s n))", "by (simp add: stut_nextsuf_suc next_suffix_com)"], ["proof (state)\nthis:\n  next m (s |\\<^sub>s Suc n) = next k (nextsuffix (s |\\<^sub>s n))\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       next m (s |\\<^sub>s Suc n) 0 = next m (s |\\<^sub>s n) 0", "moreover"], ["proof (state)\nthis:\n  next m (s |\\<^sub>s Suc n) = next k (nextsuffix (s |\\<^sub>s n))\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       next m (s |\\<^sub>s Suc n) 0 = next m (s |\\<^sub>s n) 0", "from m"], ["proof (chain)\npicking this:\n  m = Suc k", "have \"next m (s |\\<^sub>s n) = next k (nextsuffix  (s |\\<^sub>s n))\""], ["proof (prove)\nusing this:\n  m = Suc k\n\ngoal (1 subgoal):\n 1. next m (s |\\<^sub>s n) = next k (nextsuffix (s |\\<^sub>s n))", "by (simp add: next_suffix_com)"], ["proof (state)\nthis:\n  next m (s |\\<^sub>s n) = next k (nextsuffix (s |\\<^sub>s n))\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       next m (s |\\<^sub>s Suc n) 0 = next m (s |\\<^sub>s n) 0", "ultimately"], ["proof (chain)\npicking this:\n  next m (s |\\<^sub>s Suc n) = next k (nextsuffix (s |\\<^sub>s n))\n  next m (s |\\<^sub>s n) = next k (nextsuffix (s |\\<^sub>s n))", "show \"next m (s |\\<^sub>s Suc n) 0 = next m (s |\\<^sub>s n) 0\""], ["proof (prove)\nusing this:\n  next m (s |\\<^sub>s Suc n) = next k (nextsuffix (s |\\<^sub>s n))\n  next m (s |\\<^sub>s n) = next k (nextsuffix (s |\\<^sub>s n))\n\ngoal (1 subgoal):\n 1. next m (s |\\<^sub>s Suc n) 0 = next m (s |\\<^sub>s n) 0", "by simp"], ["proof (state)\nthis:\n  next m (s |\\<^sub>s Suc n) 0 = next m (s |\\<^sub>s n) 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  next m (s |\\<^sub>s Suc n) 0 = next m (s |\\<^sub>s n) 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma addfeqstut: \"stutstep ((first t) ## t) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutstep (first t ## t) 0", "by (simp add: first_def stutstep_def app_def suffix_def)"], ["", "lemma addfeqsim: \"((first t) ## t) \\<approx> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. first t ## t \\<approx> t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. first t ## t \\<approx> t", "have \"stutstep ((first t) ## t) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutstep (first t ## t) 0", "by (rule addfeqstut)"], ["proof (state)\nthis:\n  stutstep (first t ## t) 0\n\ngoal (1 subgoal):\n 1. first t ## t \\<approx> t", "hence \"(((first t) ## t) |\\<^sub>s (Suc 0)) \\<approx> (((first t) ## t) |\\<^sub>s 0)\""], ["proof (prove)\nusing this:\n  stutstep (first t ## t) 0\n\ngoal (1 subgoal):\n 1. first t ## t |\\<^sub>s Suc 0 \\<approx> first t ## t |\\<^sub>s 0", "by (rule seqsim_stutstep)"], ["proof (state)\nthis:\n  first t ## t |\\<^sub>s Suc 0 \\<approx> first t ## t |\\<^sub>s 0\n\ngoal (1 subgoal):\n 1. first t ## t \\<approx> t", "hence \"tail ((first t) ## t) \\<approx> ((first t) ## t)\""], ["proof (prove)\nusing this:\n  first t ## t |\\<^sub>s Suc 0 \\<approx> first t ## t |\\<^sub>s 0\n\ngoal (1 subgoal):\n 1. tail (first t ## t) \\<approx> first t ## t", "by (simp add: suffix_def tail_def)"], ["proof (state)\nthis:\n  tail (first t ## t) \\<approx> first t ## t\n\ngoal (1 subgoal):\n 1. first t ## t \\<approx> t", "hence \"t \\<approx> ((first t) ## t)\""], ["proof (prove)\nusing this:\n  tail (first t ## t) \\<approx> first t ## t\n\ngoal (1 subgoal):\n 1. t \\<approx> first t ## t", "by (simp add: tail_def app_def suffix_def)"], ["proof (state)\nthis:\n  t \\<approx> first t ## t\n\ngoal (1 subgoal):\n 1. first t ## t \\<approx> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  t \\<approx> first t ## t\n\ngoal (1 subgoal):\n 1. first t ## t \\<approx> t", "by (rule seqsim_sym)"], ["proof (state)\nthis:\n  first t ## t \\<approx> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma addfirststut:\n  assumes H: \"first s = second s\" shows \"s \\<approx> tail s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> tail s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<approx> tail s", "have g1: \"(first s) ## (tail s) = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. first s ## tail s = s", "by (rule seq_app_first_tail)"], ["proof (state)\nthis:\n  first s ## tail s = s\n\ngoal (1 subgoal):\n 1. s \\<approx> tail s", "from H"], ["proof (chain)\npicking this:\n  first s = second s", "have \"(first s) = first (tail s)\""], ["proof (prove)\nusing this:\n  first s = second s\n\ngoal (1 subgoal):\n 1. first s = first (tail s)", "by (simp add: first_def second_def tail_def suffix_def)"], ["proof (state)\nthis:\n  first s = first (tail s)\n\ngoal (1 subgoal):\n 1. s \\<approx> tail s", "hence \"(first s) ## (tail s) \\<approx> (tail s)\""], ["proof (prove)\nusing this:\n  first s = first (tail s)\n\ngoal (1 subgoal):\n 1. first s ## tail s \\<approx> tail s", "by (simp add: addfeqsim)"], ["proof (state)\nthis:\n  first s ## tail s \\<approx> tail s\n\ngoal (1 subgoal):\n 1. s \\<approx> tail s", "with g1"], ["proof (chain)\npicking this:\n  first s ## tail s = s\n  first s ## tail s \\<approx> tail s", "show ?thesis"], ["proof (prove)\nusing this:\n  first s ## tail s = s\n  first s ## tail s \\<approx> tail s\n\ngoal (1 subgoal):\n 1. s \\<approx> tail s", "by simp"], ["proof (state)\nthis:\n  s \\<approx> tail s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma app_seqsimilar:\n  assumes h1: \"s \\<approx> t\" shows \"(x ## s) \\<approx> (x ## t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ## s \\<approx> x ## t", "proof (cases \"stutstep (x ## s) 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t\n 2. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "case True"], ["proof (state)\nthis:\n  stutstep (x ## s) 0\n\ngoal (2 subgoals):\n 1. stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t\n 2. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "from h1"], ["proof (chain)\npicking this:\n  s \\<approx> t", "have \"first s = first t\""], ["proof (prove)\nusing this:\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. first s = first t", "by (rule sim_first)"], ["proof (state)\nthis:\n  first s = first t\n\ngoal (2 subgoals):\n 1. stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t\n 2. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "with True"], ["proof (chain)\npicking this:\n  stutstep (x ## s) 0\n  first s = first t", "have a2: \"stutstep (x ## t) 0\""], ["proof (prove)\nusing this:\n  stutstep (x ## s) 0\n  first s = first t\n\ngoal (1 subgoal):\n 1. stutstep (x ## t) 0", "by (simp add: stutstep_def first_def app_def)"], ["proof (state)\nthis:\n  stutstep (x ## t) 0\n\ngoal (2 subgoals):\n 1. stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t\n 2. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "from True"], ["proof (chain)\npicking this:\n  stutstep (x ## s) 0", "have \"((x ## s) |\\<^sub>s (Suc 0)) \\<approx> ((x ## s) |\\<^sub>s 0)\""], ["proof (prove)\nusing this:\n  stutstep (x ## s) 0\n\ngoal (1 subgoal):\n 1. x ## s |\\<^sub>s Suc 0 \\<approx> x ## s |\\<^sub>s 0", "by (rule seqsim_stutstep)"], ["proof (state)\nthis:\n  x ## s |\\<^sub>s Suc 0 \\<approx> x ## s |\\<^sub>s 0\n\ngoal (2 subgoals):\n 1. stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t\n 2. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "hence \"tail (x ## s) \\<approx> (x ## s)\""], ["proof (prove)\nusing this:\n  x ## s |\\<^sub>s Suc 0 \\<approx> x ## s |\\<^sub>s 0\n\ngoal (1 subgoal):\n 1. tail (x ## s) \\<approx> x ## s", "by (simp add: tail_def suffix_def)"], ["proof (state)\nthis:\n  tail (x ## s) \\<approx> x ## s\n\ngoal (2 subgoals):\n 1. stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t\n 2. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "hence g1: \"s \\<approx> (x ## s)\""], ["proof (prove)\nusing this:\n  tail (x ## s) \\<approx> x ## s\n\ngoal (1 subgoal):\n 1. s \\<approx> x ## s", "by (simp add: app_def tail_def suffix_def)"], ["proof (state)\nthis:\n  s \\<approx> x ## s\n\ngoal (2 subgoals):\n 1. stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t\n 2. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "from a2"], ["proof (chain)\npicking this:\n  stutstep (x ## t) 0", "have \"((x ## t) |\\<^sub>s (Suc 0)) \\<approx> ((x ## t) |\\<^sub>s 0)\""], ["proof (prove)\nusing this:\n  stutstep (x ## t) 0\n\ngoal (1 subgoal):\n 1. x ## t |\\<^sub>s Suc 0 \\<approx> x ## t |\\<^sub>s 0", "by (rule seqsim_stutstep)"], ["proof (state)\nthis:\n  x ## t |\\<^sub>s Suc 0 \\<approx> x ## t |\\<^sub>s 0\n\ngoal (2 subgoals):\n 1. stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t\n 2. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "hence \"tail (x ## t) \\<approx> (x ## t)\""], ["proof (prove)\nusing this:\n  x ## t |\\<^sub>s Suc 0 \\<approx> x ## t |\\<^sub>s 0\n\ngoal (1 subgoal):\n 1. tail (x ## t) \\<approx> x ## t", "by (simp add: tail_def suffix_def)"], ["proof (state)\nthis:\n  tail (x ## t) \\<approx> x ## t\n\ngoal (2 subgoals):\n 1. stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t\n 2. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "hence g2: \"t \\<approx> (x ## t)\""], ["proof (prove)\nusing this:\n  tail (x ## t) \\<approx> x ## t\n\ngoal (1 subgoal):\n 1. t \\<approx> x ## t", "by (simp add: app_def tail_def suffix_def)"], ["proof (state)\nthis:\n  t \\<approx> x ## t\n\ngoal (2 subgoals):\n 1. stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t\n 2. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "from h1 g2"], ["proof (chain)\npicking this:\n  s \\<approx> t\n  t \\<approx> x ## t", "have \"s \\<approx> (x ## t)\""], ["proof (prove)\nusing this:\n  s \\<approx> t\n  t \\<approx> x ## t\n\ngoal (1 subgoal):\n 1. s \\<approx> x ## t", "by (rule seqsim_trans)"], ["proof (state)\nthis:\n  s \\<approx> x ## t\n\ngoal (2 subgoals):\n 1. stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t\n 2. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "from this[THEN seqsim_sym] g1"], ["proof (chain)\npicking this:\n  x ## t \\<approx> s\n  s \\<approx> x ## s", "show \"(x ## s) \\<approx> (x ## t)\""], ["proof (prove)\nusing this:\n  x ## t \\<approx> s\n  s \\<approx> x ## s\n\ngoal (1 subgoal):\n 1. x ## s \\<approx> x ## t", "by (rule seqsim_sym[OF seqsim_trans])"], ["proof (state)\nthis:\n  x ## s \\<approx> x ## t\n\ngoal (1 subgoal):\n 1. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "case False"], ["proof (state)\nthis:\n  \\<not> stutstep (x ## s) 0\n\ngoal (1 subgoal):\n 1. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "from h1"], ["proof (chain)\npicking this:\n  s \\<approx> t", "have \"first s = first t\""], ["proof (prove)\nusing this:\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. first s = first t", "by (rule sim_first)"], ["proof (state)\nthis:\n  first s = first t\n\ngoal (1 subgoal):\n 1. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "with False"], ["proof (chain)\npicking this:\n  \\<not> stutstep (x ## s) 0\n  first s = first t", "have a2: \"\\<not> stutstep (x ## t) 0\""], ["proof (prove)\nusing this:\n  \\<not> stutstep (x ## s) 0\n  first s = first t\n\ngoal (1 subgoal):\n 1. \\<not> stutstep (x ## t) 0", "by (simp add: stutstep_def first_def app_def)"], ["proof (state)\nthis:\n  \\<not> stutstep (x ## t) 0\n\ngoal (1 subgoal):\n 1. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "from False"], ["proof (chain)\npicking this:\n  \\<not> stutstep (x ## s) 0", "have \"((x ## s) |\\<^sub>s (Suc 0)) \\<approx> nextsuffix ((x ## s) |\\<^sub>s 0)\""], ["proof (prove)\nusing this:\n  \\<not> stutstep (x ## s) 0\n\ngoal (1 subgoal):\n 1. x ## s |\\<^sub>s Suc 0 \\<approx> nextsuffix (x ## s |\\<^sub>s 0)", "by (rule seqsim_notstutstep)"], ["proof (state)\nthis:\n  x ## s |\\<^sub>s Suc 0 \\<approx> nextsuffix (x ## s |\\<^sub>s 0)\n\ngoal (1 subgoal):\n 1. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "hence \"(tail (x ## s)) \\<approx> nextsuffix (x ## s)\""], ["proof (prove)\nusing this:\n  x ## s |\\<^sub>s Suc 0 \\<approx> nextsuffix (x ## s |\\<^sub>s 0)\n\ngoal (1 subgoal):\n 1. tail (x ## s) \\<approx> nextsuffix (x ## s)", "by (simp add: tail_def)"], ["proof (state)\nthis:\n  tail (x ## s) \\<approx> nextsuffix (x ## s)\n\ngoal (1 subgoal):\n 1. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "hence g1: \"s \\<approx> nextsuffix (x ## s)\""], ["proof (prove)\nusing this:\n  tail (x ## s) \\<approx> nextsuffix (x ## s)\n\ngoal (1 subgoal):\n 1. s \\<approx> nextsuffix (x ## s)", "by (simp add: seq_app_tail)"], ["proof (state)\nthis:\n  s \\<approx> nextsuffix (x ## s)\n\ngoal (1 subgoal):\n 1. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "from a2"], ["proof (chain)\npicking this:\n  \\<not> stutstep (x ## t) 0", "have \"((x ## t) |\\<^sub>s (Suc 0)) \\<approx> nextsuffix ((x ## t) |\\<^sub>s 0)\""], ["proof (prove)\nusing this:\n  \\<not> stutstep (x ## t) 0\n\ngoal (1 subgoal):\n 1. x ## t |\\<^sub>s Suc 0 \\<approx> nextsuffix (x ## t |\\<^sub>s 0)", "by (rule seqsim_notstutstep)"], ["proof (state)\nthis:\n  x ## t |\\<^sub>s Suc 0 \\<approx> nextsuffix (x ## t |\\<^sub>s 0)\n\ngoal (1 subgoal):\n 1. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "hence \"(tail (x ## t)) \\<approx> nextsuffix (x ## t)\""], ["proof (prove)\nusing this:\n  x ## t |\\<^sub>s Suc 0 \\<approx> nextsuffix (x ## t |\\<^sub>s 0)\n\ngoal (1 subgoal):\n 1. tail (x ## t) \\<approx> nextsuffix (x ## t)", "by (simp add: tail_def)"], ["proof (state)\nthis:\n  tail (x ## t) \\<approx> nextsuffix (x ## t)\n\ngoal (1 subgoal):\n 1. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "hence g2: \"t \\<approx> nextsuffix (x ## t)\""], ["proof (prove)\nusing this:\n  tail (x ## t) \\<approx> nextsuffix (x ## t)\n\ngoal (1 subgoal):\n 1. t \\<approx> nextsuffix (x ## t)", "by (simp add: seq_app_tail)"], ["proof (state)\nthis:\n  t \\<approx> nextsuffix (x ## t)\n\ngoal (1 subgoal):\n 1. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "with h1"], ["proof (chain)\npicking this:\n  s \\<approx> t\n  t \\<approx> nextsuffix (x ## t)", "have \"s \\<approx> nextsuffix (x ## t)\""], ["proof (prove)\nusing this:\n  s \\<approx> t\n  t \\<approx> nextsuffix (x ## t)\n\ngoal (1 subgoal):\n 1. s \\<approx> nextsuffix (x ## t)", "by (rule seqsim_trans)"], ["proof (state)\nthis:\n  s \\<approx> nextsuffix (x ## t)\n\ngoal (1 subgoal):\n 1. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "from this[THEN seqsim_sym] g1"], ["proof (chain)\npicking this:\n  nextsuffix (x ## t) \\<approx> s\n  s \\<approx> nextsuffix (x ## s)", "have g3: \"nextsuffix (x ## s) \\<approx> nextsuffix (x ## t)\""], ["proof (prove)\nusing this:\n  nextsuffix (x ## t) \\<approx> s\n  s \\<approx> nextsuffix (x ## s)\n\ngoal (1 subgoal):\n 1. nextsuffix (x ## s) \\<approx> nextsuffix (x ## t)", "by (rule seqsim_sym[OF seqsim_trans])"], ["proof (state)\nthis:\n  nextsuffix (x ## s) \\<approx> nextsuffix (x ## t)\n\ngoal (1 subgoal):\n 1. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "have \"first (x ## s) = first (x ## t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. first (x ## s) = first (x ## t)", "by (simp add: first_def app_def)"], ["proof (state)\nthis:\n  first (x ## s) = first (x ## t)\n\ngoal (1 subgoal):\n 1. \\<not> stutstep (x ## s) 0 \\<Longrightarrow> x ## s \\<approx> x ## t", "from this g3"], ["proof (chain)\npicking this:\n  first (x ## s) = first (x ## t)\n  nextsuffix (x ## s) \\<approx> nextsuffix (x ## t)", "show ?thesis"], ["proof (prove)\nusing this:\n  first (x ## s) = first (x ## t)\n  nextsuffix (x ## s) \\<approx> nextsuffix (x ## t)\n\ngoal (1 subgoal):\n 1. x ## s \\<approx> x ## t", "by (rule seqsimilarI)"], ["proof (state)\nthis:\n  x ## s \\<approx> x ## t\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  If two sequences are similar then for any suffix of one of them there\n  exists a similar suffix of the other one. We will prove a stronger\n  result below.\n\\<close>"], ["", "lemma simstep_disj1: assumes H: \"s \\<approx> t\" shows \"\\<exists> m. ((s |\\<^sub>s n) \\<approx> (t |\\<^sub>s m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m. s |\\<^sub>s n \\<approx> t |\\<^sub>s m", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>m. s |\\<^sub>s 0 \\<approx> t |\\<^sub>s m\n 2. \\<And>n.\n       \\<exists>m. s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<Longrightarrow>\n       \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "from H"], ["proof (chain)\npicking this:\n  s \\<approx> t", "have \"((s |\\<^sub>s 0) \\<approx> (t |\\<^sub>s 0))\""], ["proof (prove)\nusing this:\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s 0 \\<approx> t |\\<^sub>s 0", "by auto"], ["proof (state)\nthis:\n  s |\\<^sub>s 0 \\<approx> t |\\<^sub>s 0\n\ngoal (2 subgoals):\n 1. \\<exists>m. s |\\<^sub>s 0 \\<approx> t |\\<^sub>s m\n 2. \\<And>n.\n       \\<exists>m. s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<Longrightarrow>\n       \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "thus \"\\<exists> m. ((s |\\<^sub>s 0) \\<approx> (t |\\<^sub>s m))\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s 0 \\<approx> t |\\<^sub>s 0\n\ngoal (1 subgoal):\n 1. \\<exists>m. s |\\<^sub>s 0 \\<approx> t |\\<^sub>s m", ".."], ["proof (state)\nthis:\n  \\<exists>m. s |\\<^sub>s 0 \\<approx> t |\\<^sub>s m\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<exists>m. s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<Longrightarrow>\n       \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<exists>m. s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<Longrightarrow>\n       \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<exists>m. s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<Longrightarrow>\n       \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "assume \"\\<exists> m. ((s |\\<^sub>s n) \\<approx> (t |\\<^sub>s m))\""], ["proof (state)\nthis:\n  \\<exists>m. s |\\<^sub>s n \\<approx> t |\\<^sub>s m\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<exists>m. s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<Longrightarrow>\n       \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "then"], ["proof (chain)\npicking this:\n  \\<exists>m. s |\\<^sub>s n \\<approx> t |\\<^sub>s m", "obtain m where a1': \"(s |\\<^sub>s n) \\<approx> (t |\\<^sub>s m)\""], ["proof (prove)\nusing this:\n  \\<exists>m. s |\\<^sub>s n \\<approx> t |\\<^sub>s m\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<exists>m. s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<Longrightarrow>\n       \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "show \"\\<exists> m. ((s |\\<^sub>s (Suc n)) \\<approx> (t |\\<^sub>s m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "proof (cases \"stutstep s n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. stutstep s n \\<Longrightarrow>\n    \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m\n 2. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "case True"], ["proof (state)\nthis:\n  stutstep s n\n\ngoal (2 subgoals):\n 1. stutstep s n \\<Longrightarrow>\n    \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m\n 2. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "hence \"(s |\\<^sub>s (Suc n)) \\<approx> (s |\\<^sub>s n)\""], ["proof (prove)\nusing this:\n  stutstep s n\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s Suc n \\<approx> s |\\<^sub>s n", "by (rule seqsim_stutstep)"], ["proof (state)\nthis:\n  s |\\<^sub>s Suc n \\<approx> s |\\<^sub>s n\n\ngoal (2 subgoals):\n 1. stutstep s n \\<Longrightarrow>\n    \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m\n 2. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "from this a1'"], ["proof (chain)\npicking this:\n  s |\\<^sub>s Suc n \\<approx> s |\\<^sub>s n\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m", "have \"((s |\\<^sub>s (Suc n)) \\<approx> (t |\\<^sub>s m))\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s Suc n \\<approx> s |\\<^sub>s n\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "by (rule seqsim_trans)"], ["proof (state)\nthis:\n  s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m\n\ngoal (2 subgoals):\n 1. stutstep s n \\<Longrightarrow>\n    \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m\n 2. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "thus ?thesis"], ["proof (prove)\nusing this:\n  s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m\n\ngoal (1 subgoal):\n 1. \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", ".."], ["proof (state)\nthis:\n  \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m\n\ngoal (1 subgoal):\n 1. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "case False"], ["proof (state)\nthis:\n  \\<not> stutstep s n\n\ngoal (1 subgoal):\n 1. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "hence \"(s |\\<^sub>s (Suc n)) \\<approx> nextsuffix (s |\\<^sub>s n)\""], ["proof (prove)\nusing this:\n  \\<not> stutstep s n\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s Suc n \\<approx> nextsuffix (s |\\<^sub>s n)", "by (rule seqsim_notstutstep)"], ["proof (state)\nthis:\n  s |\\<^sub>s Suc n \\<approx> nextsuffix (s |\\<^sub>s n)\n\ngoal (1 subgoal):\n 1. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "moreover"], ["proof (state)\nthis:\n  s |\\<^sub>s Suc n \\<approx> nextsuffix (s |\\<^sub>s n)\n\ngoal (1 subgoal):\n 1. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "from a1'"], ["proof (chain)\npicking this:\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m", "have \"nextsuffix (s |\\<^sub>s n) \\<approx> nextsuffix (t |\\<^sub>s m)\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m\n\ngoal (1 subgoal):\n 1. nextsuffix (s |\\<^sub>s n) \\<approx> nextsuffix (t |\\<^sub>s m)", "by (simp add: seqsim_suffix_seqsim)"], ["proof (state)\nthis:\n  nextsuffix (s |\\<^sub>s n) \\<approx> nextsuffix (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "ultimately"], ["proof (chain)\npicking this:\n  s |\\<^sub>s Suc n \\<approx> nextsuffix (s |\\<^sub>s n)\n  nextsuffix (s |\\<^sub>s n) \\<approx> nextsuffix (t |\\<^sub>s m)", "have \"(s |\\<^sub>s (Suc n)) \\<approx> nextsuffix (t |\\<^sub>s m)\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s Suc n \\<approx> nextsuffix (s |\\<^sub>s n)\n  nextsuffix (s |\\<^sub>s n) \\<approx> nextsuffix (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s Suc n \\<approx> nextsuffix (t |\\<^sub>s m)", "by (rule seqsim_trans)"], ["proof (state)\nthis:\n  s |\\<^sub>s Suc n \\<approx> nextsuffix (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "hence \"(s |\\<^sub>s (Suc n)) \\<approx> t |\\<^sub>s (m + (nextnat (t |\\<^sub>s m)))\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s Suc n \\<approx> nextsuffix (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m + nextnat (t |\\<^sub>s m)", "by (simp add: nextsuffix_def suffix_plus_com)"], ["proof (state)\nthis:\n  s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m + nextnat (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "thus \"\\<exists> m. (s |\\<^sub>s (Suc n)) \\<approx> t |\\<^sub>s m\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m + nextnat (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", ".."], ["proof (state)\nthis:\n  \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>m. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nextnat_le_seqsim: \n  assumes n: \"n < nextnat s\" shows \"s \\<approx> (s |\\<^sub>s n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> s |\\<^sub>s n", "proof (cases \"emptyseq s\")"], ["proof (state)\ngoal (2 subgoals):\n 1. emptyseq s \\<Longrightarrow> s \\<approx> s |\\<^sub>s n\n 2. notemptyseq s \\<Longrightarrow> s \\<approx> s |\\<^sub>s n", "case True   \\<comment> \\<open>case impossible\\<close>"], ["proof (state)\nthis:\n  emptyseq s\n\ngoal (2 subgoals):\n 1. emptyseq s \\<Longrightarrow> s \\<approx> s |\\<^sub>s n\n 2. notemptyseq s \\<Longrightarrow> s \\<approx> s |\\<^sub>s n", "with n"], ["proof (chain)\npicking this:\n  n < nextnat s\n  emptyseq s", "show ?thesis"], ["proof (prove)\nusing this:\n  n < nextnat s\n  emptyseq s\n\ngoal (1 subgoal):\n 1. s \\<approx> s |\\<^sub>s n", "by (simp add: nextnat_def)"], ["proof (state)\nthis:\n  s \\<approx> s |\\<^sub>s n\n\ngoal (1 subgoal):\n 1. notemptyseq s \\<Longrightarrow> s \\<approx> s |\\<^sub>s n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. notemptyseq s \\<Longrightarrow> s \\<approx> s |\\<^sub>s n", "case False"], ["proof (state)\nthis:\n  notemptyseq s\n\ngoal (1 subgoal):\n 1. notemptyseq s \\<Longrightarrow> s \\<approx> s |\\<^sub>s n", "from n"], ["proof (chain)\npicking this:\n  n < nextnat s", "show ?thesis"], ["proof (prove)\nusing this:\n  n < nextnat s\n\ngoal (1 subgoal):\n 1. s \\<approx> s |\\<^sub>s n", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < nextnat s \\<Longrightarrow> s \\<approx> s |\\<^sub>s 0\n 2. \\<And>n.\n       \\<lbrakk>n < nextnat s \\<Longrightarrow> s \\<approx> s |\\<^sub>s n;\n        Suc n < nextnat s\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s |\\<^sub>s Suc n", "show \"s \\<approx> (s |\\<^sub>s 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> s |\\<^sub>s 0", "by simp"], ["proof (state)\nthis:\n  s \\<approx> s |\\<^sub>s 0\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n < nextnat s \\<Longrightarrow> s \\<approx> s |\\<^sub>s n;\n        Suc n < nextnat s\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s |\\<^sub>s Suc n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n < nextnat s \\<Longrightarrow> s \\<approx> s |\\<^sub>s n;\n        Suc n < nextnat s\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s |\\<^sub>s Suc n", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n < nextnat s \\<Longrightarrow> s \\<approx> s |\\<^sub>s n;\n        Suc n < nextnat s\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s |\\<^sub>s Suc n", "assume a2: \"n < nextnat s \\<Longrightarrow> s \\<approx> (s |\\<^sub>s n)\" and a3: \"Suc n < nextnat s\""], ["proof (state)\nthis:\n  n < nextnat s \\<Longrightarrow> s \\<approx> s |\\<^sub>s n\n  Suc n < nextnat s\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n < nextnat s \\<Longrightarrow> s \\<approx> s |\\<^sub>s n;\n        Suc n < nextnat s\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s |\\<^sub>s Suc n", "from a3"], ["proof (chain)\npicking this:\n  Suc n < nextnat s", "have g1: \"s (Suc n) = s 0\""], ["proof (prove)\nusing this:\n  Suc n < nextnat s\n\ngoal (1 subgoal):\n 1. s (Suc n) = s 0", "by (rule nextnat_le_unch)"], ["proof (state)\nthis:\n  s (Suc n) = s 0\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n < nextnat s \\<Longrightarrow> s \\<approx> s |\\<^sub>s n;\n        Suc n < nextnat s\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s |\\<^sub>s Suc n", "from a3"], ["proof (chain)\npicking this:\n  Suc n < nextnat s", "have a3': \"n < nextnat s\""], ["proof (prove)\nusing this:\n  Suc n < nextnat s\n\ngoal (1 subgoal):\n 1. n < nextnat s", "by simp"], ["proof (state)\nthis:\n  n < nextnat s\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n < nextnat s \\<Longrightarrow> s \\<approx> s |\\<^sub>s n;\n        Suc n < nextnat s\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s |\\<^sub>s Suc n", "hence \"s n = s 0\""], ["proof (prove)\nusing this:\n  n < nextnat s\n\ngoal (1 subgoal):\n 1. s n = s 0", "by (rule nextnat_le_unch)"], ["proof (state)\nthis:\n  s n = s 0\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n < nextnat s \\<Longrightarrow> s \\<approx> s |\\<^sub>s n;\n        Suc n < nextnat s\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s |\\<^sub>s Suc n", "with g1"], ["proof (chain)\npicking this:\n  s (Suc n) = s 0\n  s n = s 0", "have \"stutstep s n\""], ["proof (prove)\nusing this:\n  s (Suc n) = s 0\n  s n = s 0\n\ngoal (1 subgoal):\n 1. stutstep s n", "by (simp add: stutstep_def)"], ["proof (state)\nthis:\n  stutstep s n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n < nextnat s \\<Longrightarrow> s \\<approx> s |\\<^sub>s n;\n        Suc n < nextnat s\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s |\\<^sub>s Suc n", "hence g2: \"(s |\\<^sub>s n) \\<approx> (s |\\<^sub>s (Suc n))\""], ["proof (prove)\nusing this:\n  stutstep s n\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s n \\<approx> s |\\<^sub>s Suc n", "by (rule seqsim_stutstep[THEN seqsim_sym])"], ["proof (state)\nthis:\n  s |\\<^sub>s n \\<approx> s |\\<^sub>s Suc n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n < nextnat s \\<Longrightarrow> s \\<approx> s |\\<^sub>s n;\n        Suc n < nextnat s\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s |\\<^sub>s Suc n", "with a3' a2"], ["proof (chain)\npicking this:\n  n < nextnat s\n  n < nextnat s \\<Longrightarrow> s \\<approx> s |\\<^sub>s n\n  s |\\<^sub>s n \\<approx> s |\\<^sub>s Suc n", "show \"s \\<approx> (s |\\<^sub>s (Suc n))\""], ["proof (prove)\nusing this:\n  n < nextnat s\n  n < nextnat s \\<Longrightarrow> s \\<approx> s |\\<^sub>s n\n  s |\\<^sub>s n \\<approx> s |\\<^sub>s Suc n\n\ngoal (1 subgoal):\n 1. s \\<approx> s |\\<^sub>s Suc n", "by (auto elim: seqsim_trans)"], ["proof (state)\nthis:\n  s \\<approx> s |\\<^sub>s Suc n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s \\<approx> s |\\<^sub>s n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma seqsim_prev_nextnat: \"s \\<approx> s |\\<^sub>s ((nextnat s) - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> s |\\<^sub>s nextnat s - 1", "proof (cases \"emptyseq s\")"], ["proof (state)\ngoal (2 subgoals):\n 1. emptyseq s \\<Longrightarrow> s \\<approx> s |\\<^sub>s nextnat s - 1\n 2. notemptyseq s \\<Longrightarrow> s \\<approx> s |\\<^sub>s nextnat s - 1", "case True"], ["proof (state)\nthis:\n  emptyseq s\n\ngoal (2 subgoals):\n 1. emptyseq s \\<Longrightarrow> s \\<approx> s |\\<^sub>s nextnat s - 1\n 2. notemptyseq s \\<Longrightarrow> s \\<approx> s |\\<^sub>s nextnat s - 1", "hence \"s |\\<^sub>s ((nextnat s)-(1::nat)) = s |\\<^sub>s 0\""], ["proof (prove)\nusing this:\n  emptyseq s\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s nextnat s - 1 = s |\\<^sub>s 0", "by (simp add: nextnat_def)"], ["proof (state)\nthis:\n  s |\\<^sub>s nextnat s - 1 = s |\\<^sub>s 0\n\ngoal (2 subgoals):\n 1. emptyseq s \\<Longrightarrow> s \\<approx> s |\\<^sub>s nextnat s - 1\n 2. notemptyseq s \\<Longrightarrow> s \\<approx> s |\\<^sub>s nextnat s - 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  s |\\<^sub>s nextnat s - 1 = s |\\<^sub>s 0\n\ngoal (1 subgoal):\n 1. s \\<approx> s |\\<^sub>s nextnat s - 1", "by simp"], ["proof (state)\nthis:\n  s \\<approx> s |\\<^sub>s nextnat s - 1\n\ngoal (1 subgoal):\n 1. notemptyseq s \\<Longrightarrow> s \\<approx> s |\\<^sub>s nextnat s - 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. notemptyseq s \\<Longrightarrow> s \\<approx> s |\\<^sub>s nextnat s - 1", "case False"], ["proof (state)\nthis:\n  notemptyseq s\n\ngoal (1 subgoal):\n 1. notemptyseq s \\<Longrightarrow> s \\<approx> s |\\<^sub>s nextnat s - 1", "hence \"nextnat s > 0\""], ["proof (prove)\nusing this:\n  notemptyseq s\n\ngoal (1 subgoal):\n 1. 0 < nextnat s", "by (rule nextnat_empty_gzero)"], ["proof (state)\nthis:\n  0 < nextnat s\n\ngoal (1 subgoal):\n 1. notemptyseq s \\<Longrightarrow> s \\<approx> s |\\<^sub>s nextnat s - 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 < nextnat s\n\ngoal (1 subgoal):\n 1. s \\<approx> s |\\<^sub>s nextnat s - 1", "by (simp add: nextnat_le_seqsim)"], ["proof (state)\nthis:\n  s \\<approx> s |\\<^sub>s nextnat s - 1\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Given a suffix \\<open>s |\\<^sub>s n\\<close> of some sequence \\<open>s\\<close> that is\n  similar to some suffix \\<open>t |\\<^sub>s m\\<close> of sequence \\<open>t\\<close>, there\n  exists some suffix \\<open>t |\\<^sub>s m'\\<close> of \\<open>t\\<close> such that\n  \\<open>s |\\<^sub>s n\\<close> and \\<open>t |\\<^sub>s m'\\<close> are similar and also\n  \\<open>s |\\<^sub>s (n+1)\\<close> is similar to either \\<open>t |\\<^sub>s m'\\<close> or to\n  \\<open>t |\\<^sub>s (m'+1)\\<close>.\n\\<close>"], ["", "lemma seqsim_suffix_suc:\n  assumes H: \"s |\\<^sub>s n \\<approx> t |\\<^sub>s m\"\n  shows \"\\<exists>m'. s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and> ((s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m') \\<or> (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')", "proof (cases \"stutstep s n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. stutstep s n \\<Longrightarrow>\n    \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')\n 2. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')", "case True"], ["proof (state)\nthis:\n  stutstep s n\n\ngoal (2 subgoals):\n 1. stutstep s n \\<Longrightarrow>\n    \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')\n 2. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')", "hence \"s |\\<^sub>s Suc n \\<approx> s |\\<^sub>s n\""], ["proof (prove)\nusing this:\n  stutstep s n\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s Suc n \\<approx> s |\\<^sub>s n", "by (rule seqsim_stutstep)"], ["proof (state)\nthis:\n  s |\\<^sub>s Suc n \\<approx> s |\\<^sub>s n\n\ngoal (2 subgoals):\n 1. stutstep s n \\<Longrightarrow>\n    \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')\n 2. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')", "from this H"], ["proof (chain)\npicking this:\n  s |\\<^sub>s Suc n \\<approx> s |\\<^sub>s n\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m", "have \"s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s Suc n \\<approx> s |\\<^sub>s n\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "by (rule seqsim_trans)"], ["proof (state)\nthis:\n  s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m\n\ngoal (2 subgoals):\n 1. stutstep s n \\<Longrightarrow>\n    \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')\n 2. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')", "with H"], ["proof (chain)\npicking this:\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m\n  s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m", "show ?thesis"], ["proof (prove)\nusing this:\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m\n  s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m\n\ngoal (1 subgoal):\n 1. \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')", "by blast"], ["proof (state)\nthis:\n  \\<exists>m'.\n     s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n     (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n      s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')\n\ngoal (1 subgoal):\n 1. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')", "case False"], ["proof (state)\nthis:\n  \\<not> stutstep s n\n\ngoal (1 subgoal):\n 1. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')", "hence \"\\<not> emptyseq (s |\\<^sub>s n)\""], ["proof (prove)\nusing this:\n  \\<not> stutstep s n\n\ngoal (1 subgoal):\n 1. notemptyseq (s |\\<^sub>s n)", "by (rule stutnempty)"], ["proof (state)\nthis:\n  notemptyseq (s |\\<^sub>s n)\n\ngoal (1 subgoal):\n 1. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')", "with H"], ["proof (chain)\npicking this:\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m\n  notemptyseq (s |\\<^sub>s n)", "have a2: \"\\<not> emptyseq (t |\\<^sub>s m)\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m\n  notemptyseq (s |\\<^sub>s n)\n\ngoal (1 subgoal):\n 1. notemptyseq (t |\\<^sub>s m)", "by (simp add: seqsim_empty_iff_empty)"], ["proof (state)\nthis:\n  notemptyseq (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')", "hence g4: \"nextsuffix (t |\\<^sub>s m) = (t |\\<^sub>s m) |\\<^sub>s Suc (nextnat (t |\\<^sub>s m) - 1)\""], ["proof (prove)\nusing this:\n  notemptyseq (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. nextsuffix (t |\\<^sub>s m) =\n    t |\\<^sub>s m |\\<^sub>s Suc (nextnat (t |\\<^sub>s m) - 1)", "by (simp add: nextnat_empty_gzero nextsuffix_def)"], ["proof (state)\nthis:\n  nextsuffix (t |\\<^sub>s m) =\n  t |\\<^sub>s m |\\<^sub>s Suc (nextnat (t |\\<^sub>s m) - 1)\n\ngoal (1 subgoal):\n 1. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')", "have g3: \"(t |\\<^sub>s m) \\<approx> (t |\\<^sub>s m) |\\<^sub>s (nextnat (t |\\<^sub>s m) - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t |\\<^sub>s m \\<approx>\n    t |\\<^sub>s m |\\<^sub>s nextnat (t |\\<^sub>s m) - 1", "by (rule seqsim_prev_nextnat)"], ["proof (state)\nthis:\n  t |\\<^sub>s m \\<approx>\n  t |\\<^sub>s m |\\<^sub>s nextnat (t |\\<^sub>s m) - 1\n\ngoal (1 subgoal):\n 1. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')", "with H"], ["proof (chain)\npicking this:\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m\n  t |\\<^sub>s m \\<approx>\n  t |\\<^sub>s m |\\<^sub>s nextnat (t |\\<^sub>s m) - 1", "have G1: \"s |\\<^sub>s n \\<approx> (t |\\<^sub>s m) |\\<^sub>s (nextnat (t |\\<^sub>s m) - 1)\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m\n  t |\\<^sub>s m \\<approx>\n  t |\\<^sub>s m |\\<^sub>s nextnat (t |\\<^sub>s m) - 1\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s n \\<approx>\n    t |\\<^sub>s m |\\<^sub>s nextnat (t |\\<^sub>s m) - 1", "by (rule seqsim_trans)"], ["proof (state)\nthis:\n  s |\\<^sub>s n \\<approx>\n  t |\\<^sub>s m |\\<^sub>s nextnat (t |\\<^sub>s m) - 1\n\ngoal (1 subgoal):\n 1. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')", "from False"], ["proof (chain)\npicking this:\n  \\<not> stutstep s n", "have G1': \"(s |\\<^sub>s Suc n) = nextsuffix (s |\\<^sub>s n)\""], ["proof (prove)\nusing this:\n  \\<not> stutstep s n\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s Suc n = nextsuffix (s |\\<^sub>s n)", "by (rule notstutstep_nextsuffix1[THEN sym])"], ["proof (state)\nthis:\n  s |\\<^sub>s Suc n = nextsuffix (s |\\<^sub>s n)\n\ngoal (1 subgoal):\n 1. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')", "from H"], ["proof (chain)\npicking this:\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m", "have \"nextsuffix (s |\\<^sub>s n) \\<approx> nextsuffix (t |\\<^sub>s m)\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s n \\<approx> t |\\<^sub>s m\n\ngoal (1 subgoal):\n 1. nextsuffix (s |\\<^sub>s n) \\<approx> nextsuffix (t |\\<^sub>s m)", "by (rule seqsim_suffix_seqsim)"], ["proof (state)\nthis:\n  nextsuffix (s |\\<^sub>s n) \\<approx> nextsuffix (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')", "with G1 G1' g4"], ["proof (chain)\npicking this:\n  s |\\<^sub>s n \\<approx>\n  t |\\<^sub>s m |\\<^sub>s nextnat (t |\\<^sub>s m) - 1\n  s |\\<^sub>s Suc n = nextsuffix (s |\\<^sub>s n)\n  nextsuffix (t |\\<^sub>s m) =\n  t |\\<^sub>s m |\\<^sub>s Suc (nextnat (t |\\<^sub>s m) - 1)\n  nextsuffix (s |\\<^sub>s n) \\<approx> nextsuffix (t |\\<^sub>s m)", "have \"s |\\<^sub>s n \\<approx> t |\\<^sub>s (m + (nextnat (t |\\<^sub>s m) - 1))\n      \\<and> s |\\<^sub>s (Suc n) \\<approx> t |\\<^sub>s Suc (m + (nextnat (t |\\<^sub>s m) - 1))\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s n \\<approx>\n  t |\\<^sub>s m |\\<^sub>s nextnat (t |\\<^sub>s m) - 1\n  s |\\<^sub>s Suc n = nextsuffix (s |\\<^sub>s n)\n  nextsuffix (t |\\<^sub>s m) =\n  t |\\<^sub>s m |\\<^sub>s Suc (nextnat (t |\\<^sub>s m) - 1)\n  nextsuffix (s |\\<^sub>s n) \\<approx> nextsuffix (t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s n \\<approx>\n    t |\\<^sub>s m + (nextnat (t |\\<^sub>s m) - 1) \\<and>\n    s |\\<^sub>s Suc n \\<approx>\n    t |\\<^sub>s Suc (m + (nextnat (t |\\<^sub>s m) - 1))", "by (simp add: suffix_plus_com)"], ["proof (state)\nthis:\n  s |\\<^sub>s n \\<approx>\n  t |\\<^sub>s m + (nextnat (t |\\<^sub>s m) - 1) \\<and>\n  s |\\<^sub>s Suc n \\<approx>\n  t |\\<^sub>s Suc (m + (nextnat (t |\\<^sub>s m) - 1))\n\ngoal (1 subgoal):\n 1. \\<not> stutstep s n \\<Longrightarrow>\n    \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')", "thus ?thesis"], ["proof (prove)\nusing this:\n  s |\\<^sub>s n \\<approx>\n  t |\\<^sub>s m + (nextnat (t |\\<^sub>s m) - 1) \\<and>\n  s |\\<^sub>s Suc n \\<approx>\n  t |\\<^sub>s Suc (m + (nextnat (t |\\<^sub>s m) - 1))\n\ngoal (1 subgoal):\n 1. \\<exists>m'.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')", "by blast"], ["proof (state)\nthis:\n  \\<exists>m'.\n     s |\\<^sub>s n \\<approx> t |\\<^sub>s m' \\<and>\n     (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m' \\<or>\n      s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m')\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The following main result about similar sequences shows that if\n  \\<open>s \\<approx> t\\<close> holds then for any suffix \\<open>s |\\<^sub>s n\\<close> of \\<open>s\\<close>\n  there exists a suffix \\<open>t |\\<^sub>s m\\<close> such that\n  \\begin{itemize}\n  \\item \\<open>s |\\<^sub>s n\\<close> and \\<open>t |\\<^sub>s m\\<close> are similar, and\n  \\item \\<open>s |\\<^sub>s (n+1)\\<close> is similar to either \\<open>t |\\<^sub>s (m+1)\\<close>\n    or \\<open>t |\\<^sub>s m\\<close>.\n  \\end{itemize}\n  The idea is to pick the largest \\<open>m\\<close> such that \\<open>s |\\<^sub>s n \\<approx> t |\\<^sub>s m\\<close>\n  (or some such \\<open>m\\<close> if \\<open>s |\\<^sub>s n\\<close> is empty).\n\\<close>"], ["", "theorem sim_step: \n  assumes H: \"s \\<approx> t\" \n  shows \"\\<exists> m. s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<and> \n              ((s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m) \\<or> (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m))\"\n    (is \"\\<exists>m. ?Sim n m\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m.\n       s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<and>\n       (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or>\n        s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m)", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>m.\n       s |\\<^sub>s 0 \\<approx> t |\\<^sub>s m \\<and>\n       (s |\\<^sub>s Suc 0 \\<approx> t |\\<^sub>s Suc m \\<or>\n        s |\\<^sub>s Suc 0 \\<approx> t |\\<^sub>s m)\n 2. \\<And>n.\n       \\<exists>m.\n          s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<and>\n          (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or>\n           s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m) \\<Longrightarrow>\n       \\<exists>m.\n          s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m \\<and>\n          (s |\\<^sub>s Suc (Suc n) \\<approx> t |\\<^sub>s Suc m \\<or>\n           s |\\<^sub>s Suc (Suc n) \\<approx> t |\\<^sub>s m)", "from H"], ["proof (chain)\npicking this:\n  s \\<approx> t", "have \"s |\\<^sub>s 0 \\<approx> t |\\<^sub>s 0\""], ["proof (prove)\nusing this:\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. s |\\<^sub>s 0 \\<approx> t |\\<^sub>s 0", "by simp"], ["proof (state)\nthis:\n  s |\\<^sub>s 0 \\<approx> t |\\<^sub>s 0\n\ngoal (2 subgoals):\n 1. \\<exists>m.\n       s |\\<^sub>s 0 \\<approx> t |\\<^sub>s m \\<and>\n       (s |\\<^sub>s Suc 0 \\<approx> t |\\<^sub>s Suc m \\<or>\n        s |\\<^sub>s Suc 0 \\<approx> t |\\<^sub>s m)\n 2. \\<And>n.\n       \\<exists>m.\n          s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<and>\n          (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or>\n           s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m) \\<Longrightarrow>\n       \\<exists>m.\n          s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m \\<and>\n          (s |\\<^sub>s Suc (Suc n) \\<approx> t |\\<^sub>s Suc m \\<or>\n           s |\\<^sub>s Suc (Suc n) \\<approx> t |\\<^sub>s m)", "thus \"\\<exists> m. ?Sim 0 m\""], ["proof (prove)\nusing this:\n  s |\\<^sub>s 0 \\<approx> t |\\<^sub>s 0\n\ngoal (1 subgoal):\n 1. \\<exists>m.\n       s |\\<^sub>s 0 \\<approx> t |\\<^sub>s m \\<and>\n       (s |\\<^sub>s Suc 0 \\<approx> t |\\<^sub>s Suc m \\<or>\n        s |\\<^sub>s Suc 0 \\<approx> t |\\<^sub>s m)", "by (rule seqsim_suffix_suc)"], ["proof (state)\nthis:\n  \\<exists>m.\n     s |\\<^sub>s 0 \\<approx> t |\\<^sub>s m \\<and>\n     (s |\\<^sub>s Suc 0 \\<approx> t |\\<^sub>s Suc m \\<or>\n      s |\\<^sub>s Suc 0 \\<approx> t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<exists>m.\n          s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<and>\n          (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or>\n           s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m) \\<Longrightarrow>\n       \\<exists>m.\n          s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m \\<and>\n          (s |\\<^sub>s Suc (Suc n) \\<approx> t |\\<^sub>s Suc m \\<or>\n           s |\\<^sub>s Suc (Suc n) \\<approx> t |\\<^sub>s m)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<exists>m.\n          s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<and>\n          (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or>\n           s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m) \\<Longrightarrow>\n       \\<exists>m.\n          s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m \\<and>\n          (s |\\<^sub>s Suc (Suc n) \\<approx> t |\\<^sub>s Suc m \\<or>\n           s |\\<^sub>s Suc (Suc n) \\<approx> t |\\<^sub>s m)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<exists>m.\n          s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<and>\n          (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or>\n           s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m) \\<Longrightarrow>\n       \\<exists>m.\n          s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m \\<and>\n          (s |\\<^sub>s Suc (Suc n) \\<approx> t |\\<^sub>s Suc m \\<or>\n           s |\\<^sub>s Suc (Suc n) \\<approx> t |\\<^sub>s m)", "assume \"\\<exists> m. ?Sim n m\""], ["proof (state)\nthis:\n  \\<exists>m.\n     s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<and>\n     (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or>\n      s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<exists>m.\n          s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<and>\n          (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or>\n           s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m) \\<Longrightarrow>\n       \\<exists>m.\n          s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m \\<and>\n          (s |\\<^sub>s Suc (Suc n) \\<approx> t |\\<^sub>s Suc m \\<or>\n           s |\\<^sub>s Suc (Suc n) \\<approx> t |\\<^sub>s m)", "hence \"\\<exists>k. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s k\""], ["proof (prove)\nusing this:\n  \\<exists>m.\n     s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<and>\n     (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or>\n      s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m)\n\ngoal (1 subgoal):\n 1. \\<exists>k. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s k", "by blast"], ["proof (state)\nthis:\n  \\<exists>k. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s k\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<exists>m.\n          s |\\<^sub>s n \\<approx> t |\\<^sub>s m \\<and>\n          (s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s Suc m \\<or>\n           s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m) \\<Longrightarrow>\n       \\<exists>m.\n          s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m \\<and>\n          (s |\\<^sub>s Suc (Suc n) \\<approx> t |\\<^sub>s Suc m \\<or>\n           s |\\<^sub>s Suc (Suc n) \\<approx> t |\\<^sub>s m)", "thus \"\\<exists> m. ?Sim (Suc n) m\""], ["proof (prove)\nusing this:\n  \\<exists>k. s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s k\n\ngoal (1 subgoal):\n 1. \\<exists>m.\n       s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m \\<and>\n       (s |\\<^sub>s Suc (Suc n) \\<approx> t |\\<^sub>s Suc m \\<or>\n        s |\\<^sub>s Suc (Suc n) \\<approx> t |\\<^sub>s m)", "by (blast dest: seqsim_suffix_suc)"], ["proof (state)\nthis:\n  \\<exists>m.\n     s |\\<^sub>s Suc n \\<approx> t |\\<^sub>s m \\<and>\n     (s |\\<^sub>s Suc (Suc n) \\<approx> t |\\<^sub>s Suc m \\<or>\n      s |\\<^sub>s Suc (Suc n) \\<approx> t |\\<^sub>s m)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}