{"file_name": "/home/qj213/afp-2021-10-22/thys/TLA/Inc.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/TLA", "problem_names": ["lemma (in Firstprogram) \"STUTINV phi\"", "lemma (in Firstprogram) enabled_m1: \"\\<turnstile> Enabled \\<langle>m1\\<rangle>_(x,y)\"", "lemma (in Firstprogram) enabled_m2: \"\\<turnstile> Enabled \\<langle>m2\\<rangle>_(x,y)\"", "lemmas  (in Secondprogram) Sact2_defs = n1_def n2_def alpha1_def beta1_def gamma1_def alpha2_def beta2_def gamma2_def", "lemma (in Secondprogram) psiI: \"\\<turnstile> psi \\<longrightarrow> \\<box>I\"", "theorem (in Secondprogram) step_simulation: \"\\<turnstile> psi \\<longrightarrow> init \\<and> \\<box>[m1 \\<or> m2]_(x,y)\"", "lemma  (in Secondprogram) n1_ch: \"|~ \\<langle>n1\\<rangle>_vars = n1\"", "lemma (in Secondprogram) enab_alpha1: \"\\<turnstile> $pc1 = #a \\<longrightarrow> # 0 < $sem \\<longrightarrow> Enabled alpha1\"", "lemma (in Secondprogram) enab_beta1: \"\\<turnstile> $pc1 = #b \\<longrightarrow> Enabled beta1\"", "lemma (in Secondprogram) enab_gamma1: \"\\<turnstile> $pc1 = #g \\<longrightarrow> Enabled gamma1\"", "lemma (in Secondprogram) enab_n1:\n  \"\\<turnstile> Enabled \\<langle>n1\\<rangle>_vars = ($pc1 = #a \\<longrightarrow> # 0 < $sem)\"", "lemma  (in Secondprogram) n2_ch: \"|~ \\<langle>n2\\<rangle>_vars = n2\"", "lemma (in Secondprogram) enab_alpha2: \"\\<turnstile> $pc2 = #a \\<longrightarrow> # 0 < $sem \\<longrightarrow> Enabled alpha2\"", "lemma (in Secondprogram) enab_beta2: \"\\<turnstile> $pc2 = #b \\<longrightarrow> Enabled beta2\"", "lemma (in Secondprogram) enab_gamma2: \"\\<turnstile> $pc2 = #g \\<longrightarrow> Enabled gamma2\"", "lemma (in Secondprogram) enab_n2:\n  \"\\<turnstile> Enabled \\<langle>n2\\<rangle>_vars = ($pc2 = #a \\<longrightarrow> # 0 < $sem)\"", "lemma (in Secondprogram) psi_fair_m1: \"\\<turnstile> psi \\<longrightarrow> SF(m1)_(x,y)\"", "lemma (in Secondprogram) psi_fair_m2: \"\\<turnstile> psi \\<longrightarrow> SF(m2)_(x,y)\"", "theorem (in Secondprogram) impl: \"\\<turnstile> psi \\<longrightarrow> phi\""], "translations": [["", "lemma (in Firstprogram) \"STUTINV phi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. STUTINV phi", "by (auto simp: phi_def init_def m1_def m2_def Live_def stutinvs nstutinvs livestutinv)"], ["", "lemma (in Firstprogram) enabled_m1: \"\\<turnstile> Enabled \\<langle>m1\\<rangle>_(x,y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> Enabled \\<langle>m1\\<rangle>_(x, y)", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w. (Enabled \\<langle>m1\\<rangle>_(x, y)) w", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w. (Enabled \\<langle>m1\\<rangle>_(x, y)) w", "show \"s \\<Turnstile> Enabled \\<langle>m1\\<rangle>_(x,y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Enabled \\<langle>m1\\<rangle>_(x, y)) s", "by (rule base_enabled[OF bvar]) (auto simp: m1_def tla_defs)"], ["proof (state)\nthis:\n  (Enabled \\<langle>m1\\<rangle>_(x, y)) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in Firstprogram) enabled_m2: \"\\<turnstile> Enabled \\<langle>m2\\<rangle>_(x,y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> Enabled \\<langle>m2\\<rangle>_(x, y)", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w. (Enabled \\<langle>m2\\<rangle>_(x, y)) w", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w. (Enabled \\<langle>m2\\<rangle>_(x, y)) w", "show \"s \\<Turnstile> Enabled \\<langle>m2\\<rangle>_(x,y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Enabled \\<langle>m2\\<rangle>_(x, y)) s", "by (rule base_enabled[OF bvar]) (auto simp: m2_def tla_defs)"], ["proof (state)\nthis:\n  (Enabled \\<langle>m2\\<rangle>_(x, y)) s\n\ngoal:\nNo subgoals!", "qed"], ["", "locale Secondprogram = Firstprogram +\n  fixes sem :: \"state \\<Rightarrow> nat\" \n  and pc1 :: \"state \\<Rightarrow> pcount\"\n  and pc2 :: \"state \\<Rightarrow> pcount\"\n  and vars\n  and initPsi :: \"temporal\"\n  and alpha1 :: \"temporal\"\n  and alpha2 :: \"temporal\"\n  and beta1 :: \"temporal\"\n  and beta2 :: \"temporal\"\n  and gamma1 :: \"temporal\"\n  and gamma2 :: \"temporal\"\n  and n1 :: \"temporal\"\n  and n2 :: \"temporal\"\n  and Live2 :: \"temporal\"\n  and psi :: \"temporal\"\n  and I :: \"temporal\"\n  defines \"vars \\<equiv> LIFT (x,y,sem,pc1,pc2)\" \n  and \"initPsi \\<equiv> TEMP $pc1 = # a \\<and> $pc2 = # a \\<and> $x = # 0 \\<and> $y = # 0 \\<and> $sem = # 1\"\n  and \"alpha1 \\<equiv> TEMP $pc1 =#a \\<and> # 0 < $sem \\<and> pc1$ = #b \\<and> sem$ = $sem - # 1 \\<and> Unchanged (x,y,pc2)\" \n  and \"alpha2 \\<equiv> TEMP $pc2 =#a \\<and> # 0 < $sem \\<and> pc2` = #b \\<and> sem$ = $sem - # 1 \\<and> Unchanged (x,y,pc1)\" \n  and \"beta1 \\<equiv> TEMP $pc1 =#b \\<and> pc1` = #g \\<and> x` = Suc<$x> \\<and> Unchanged (y,sem,pc2)\" \n  and \"beta2 \\<equiv> TEMP $pc2 =#b \\<and> pc2` = #g \\<and> y` = Suc<$y> \\<and> Unchanged (x,sem,pc1)\" \n  and \"gamma1 \\<equiv> TEMP $pc1 =#g \\<and> pc1` = #a \\<and> sem` = Suc<$sem> \\<and> Unchanged (x,y,pc2)\"\n  and \"gamma2 \\<equiv> TEMP $pc2 =#g \\<and> pc2` = #a \\<and> sem` = Suc<$sem> \\<and> Unchanged (x,y,pc1)\"\n  and \"n1 \\<equiv> TEMP (alpha1 \\<or> beta1 \\<or> gamma1)\"\n  and \"n2 \\<equiv> TEMP (alpha2 \\<or> beta2 \\<or> gamma2)\"\n  and \"Live2 \\<equiv> TEMP SF(n1)_vars \\<and> SF(n2)_vars\"\n  and \"psi \\<equiv> TEMP (initPsi \\<and> \\<box>[n1 \\<or> n2]_vars \\<and> Live2)\"\n  and \"I \\<equiv> TEMP ($sem = # 1 \\<and> $pc1 = #a \\<and> $pc2 = # a)\n               \\<or>   ($sem = # 0 \\<and> (($pc1 = #a \\<and> $pc2 \\<in> {#b , #g}) \n                                \\<or> ($pc2 = #a \\<and> $pc1 \\<in> {#b , #g})))\"\n  assumes bvar2: \"basevars vars\""], ["", "lemmas  (in Secondprogram) Sact2_defs = n1_def n2_def alpha1_def beta1_def gamma1_def alpha2_def beta2_def gamma2_def"], ["", "text \\<open>\n  Proving invariants is the basis of every effort of system verification.\n  We show that \\<open>I\\<close> is an inductive invariant of specification \\<open>psi\\<close>.\n\\<close>"], ["", "lemma (in Secondprogram) psiI: \"\\<turnstile> psi \\<longrightarrow> \\<box>I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> \\<box>I", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> \\<box>I", "have init: \"\\<turnstile> initPsi \\<longrightarrow> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> initPsi \\<longrightarrow> I", "by (auto simp: initPsi_def I_def)"], ["proof (state)\nthis:\n  \\<turnstile> initPsi \\<longrightarrow> I\n\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> \\<box>I", "have \"|~ I \\<and> Unchanged vars \\<longrightarrow> \\<circle>I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ I \\<and> Unchanged vars \\<longrightarrow> \\<circle>I", "by (auto simp: I_def vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ I \\<and> Unchanged vars \\<longrightarrow> \\<circle>I\n\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> \\<box>I", "moreover"], ["proof (state)\nthis:\n  |~ I \\<and> Unchanged vars \\<longrightarrow> \\<circle>I\n\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> \\<box>I", "have \"|~ I \\<and> n1 \\<longrightarrow> \\<circle>I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ I \\<and> n1 \\<longrightarrow> \\<circle>I", "by (auto simp: I_def Sact2_defs tla_defs)"], ["proof (state)\nthis:\n  |~ I \\<and> n1 \\<longrightarrow> \\<circle>I\n\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> \\<box>I", "moreover"], ["proof (state)\nthis:\n  |~ I \\<and> n1 \\<longrightarrow> \\<circle>I\n\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> \\<box>I", "have \"|~ I \\<and> n2 \\<longrightarrow> \\<circle>I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ I \\<and> n2 \\<longrightarrow> \\<circle>I", "by (auto simp: I_def Sact2_defs tla_defs)"], ["proof (state)\nthis:\n  |~ I \\<and> n2 \\<longrightarrow> \\<circle>I\n\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> \\<box>I", "ultimately"], ["proof (chain)\npicking this:\n  |~ I \\<and> Unchanged vars \\<longrightarrow> \\<circle>I\n  |~ I \\<and> n1 \\<longrightarrow> \\<circle>I\n  |~ I \\<and> n2 \\<longrightarrow> \\<circle>I", "have step: \"|~ I \\<and> [n1 \\<or> n2]_vars \\<longrightarrow> \\<circle>I\""], ["proof (prove)\nusing this:\n  |~ I \\<and> Unchanged vars \\<longrightarrow> \\<circle>I\n  |~ I \\<and> n1 \\<longrightarrow> \\<circle>I\n  |~ I \\<and> n2 \\<longrightarrow> \\<circle>I\n\ngoal (1 subgoal):\n 1. |~ I \\<and> _actrans (n1 \\<or> n2) vars \\<longrightarrow> \\<circle>I", "by (force simp: actrans_def)"], ["proof (state)\nthis:\n  |~ I \\<and> _actrans (n1 \\<or> n2) vars \\<longrightarrow> \\<circle>I\n\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> \\<box>I", "from init step"], ["proof (chain)\npicking this:\n  \\<turnstile> initPsi \\<longrightarrow> I\n  |~ I \\<and> _actrans (n1 \\<or> n2) vars \\<longrightarrow> \\<circle>I", "have goal: \"\\<turnstile> initPsi \\<and> \\<box>[n1 \\<or> n2]_vars \\<longrightarrow> \\<box>I\""], ["proof (prove)\nusing this:\n  \\<turnstile> initPsi \\<longrightarrow> I\n  |~ I \\<and> _actrans (n1 \\<or> n2) vars \\<longrightarrow> \\<circle>I\n\ngoal (1 subgoal):\n 1. \\<turnstile> initPsi \\<and> \\<box>[n1 \\<or> n2]_vars \\<longrightarrow>\n                 \\<box>I", "by (rule invmono)"], ["proof (state)\nthis:\n  \\<turnstile> initPsi \\<and> \\<box>[n1 \\<or> n2]_vars \\<longrightarrow>\n               \\<box>I\n\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> \\<box>I", "have \"\\<turnstile> initPsi \\<and> \\<box>[n1 \\<or> n2]_vars \\<and> Live2 ==> \\<turnstile> initPsi \\<and> \\<box>[n1 \\<or> n2]_vars\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> initPsi \\<and>\n                 \\<box>[n1 \\<or> n2]_vars \\<and> Live2 \\<Longrightarrow>\n    \\<turnstile> initPsi \\<and> \\<box>[n1 \\<or> n2]_vars", "by auto"], ["proof (state)\nthis:\n  \\<turnstile> initPsi \\<and>\n               \\<box>[n1 \\<or> n2]_vars \\<and> Live2 \\<Longrightarrow>\n  \\<turnstile> initPsi \\<and> \\<box>[n1 \\<or> n2]_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> \\<box>I", "with goal"], ["proof (chain)\npicking this:\n  \\<turnstile> initPsi \\<and> \\<box>[n1 \\<or> n2]_vars \\<longrightarrow>\n               \\<box>I\n  \\<turnstile> initPsi \\<and>\n               \\<box>[n1 \\<or> n2]_vars \\<and> Live2 \\<Longrightarrow>\n  \\<turnstile> initPsi \\<and> \\<box>[n1 \\<or> n2]_vars", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<turnstile> initPsi \\<and> \\<box>[n1 \\<or> n2]_vars \\<longrightarrow>\n               \\<box>I\n  \\<turnstile> initPsi \\<and>\n               \\<box>[n1 \\<or> n2]_vars \\<and> Live2 \\<Longrightarrow>\n  \\<turnstile> initPsi \\<and> \\<box>[n1 \\<or> n2]_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> \\<box>I", "unfolding psi_def"], ["proof (prove)\nusing this:\n  \\<turnstile> initPsi \\<and> \\<box>[n1 \\<or> n2]_vars \\<longrightarrow>\n               \\<box>I\n  \\<turnstile> initPsi \\<and>\n               \\<box>[n1 \\<or> n2]_vars \\<and> Live2 \\<Longrightarrow>\n  \\<turnstile> initPsi \\<and> \\<box>[n1 \\<or> n2]_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> initPsi \\<and>\n                 \\<box>[n1 \\<or> n2]_vars \\<and> Live2 \\<longrightarrow>\n                 \\<box>I", "by auto"], ["proof (state)\nthis:\n  \\<turnstile> psi \\<longrightarrow> \\<box>I\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Using this invariant we now prove step simulation, i.e. the safety part of\n  the refinement proof.\n\\<close>"], ["", "theorem (in Secondprogram) step_simulation: \"\\<turnstile> psi \\<longrightarrow> init \\<and> \\<box>[m1 \\<or> m2]_(x,y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow>\n                 init \\<and> \\<box>[m1 \\<or> m2]_(x, y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow>\n                 init \\<and> \\<box>[m1 \\<or> m2]_(x, y)", "have \"\\<turnstile> initPsi \\<and> \\<box>I \\<and> \\<box>[n1 \\<or> n2]_vars \\<longrightarrow> init \\<and> \\<box>[m1 \\<or> m2]_(x,y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> initPsi \\<and>\n                 \\<box>I \\<and> \\<box>[n1 \\<or> n2]_vars \\<longrightarrow>\n                 init \\<and> \\<box>[m1 \\<or> m2]_(x, y)", "proof (rule refinement1)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<turnstile> initPsi \\<longrightarrow> init\n 2. |~ I \\<and>\n       \\<circle>I \\<and> _actrans (n1 \\<or> n2) vars \\<longrightarrow>\n       _actrans (m1 \\<or> m2) (x, y)", "show \"\\<turnstile> initPsi \\<longrightarrow> init\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> initPsi \\<longrightarrow> init", "by (auto simp: initPsi_def init_def)"], ["proof (state)\nthis:\n  \\<turnstile> initPsi \\<longrightarrow> init\n\ngoal (1 subgoal):\n 1. |~ I \\<and>\n       \\<circle>I \\<and> _actrans (n1 \\<or> n2) vars \\<longrightarrow>\n       _actrans (m1 \\<or> m2) (x, y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. |~ I \\<and>\n       \\<circle>I \\<and> _actrans (n1 \\<or> n2) vars \\<longrightarrow>\n       _actrans (m1 \\<or> m2) (x, y)", "show \"|~ I \\<and> \\<circle>I \\<and> [n1 \\<or> n2]_vars \\<longrightarrow> [m1 \\<or> m2]_(x,y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ I \\<and>\n       \\<circle>I \\<and> _actrans (n1 \\<or> n2) vars \\<longrightarrow>\n       _actrans (m1 \\<or> m2) (x, y)", "by (auto simp: I_def m1_def m2_def vars_def Sact2_defs tla_defs)"], ["proof (state)\nthis:\n  |~ I \\<and>\n     \\<circle>I \\<and> _actrans (n1 \\<or> n2) vars \\<longrightarrow>\n     _actrans (m1 \\<or> m2) (x, y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> initPsi \\<and>\n               \\<box>I \\<and> \\<box>[n1 \\<or> n2]_vars \\<longrightarrow>\n               init \\<and> \\<box>[m1 \\<or> m2]_(x, y)\n\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow>\n                 init \\<and> \\<box>[m1 \\<or> m2]_(x, y)", "with psiI"], ["proof (chain)\npicking this:\n  \\<turnstile> psi \\<longrightarrow> \\<box>I\n  \\<turnstile> initPsi \\<and>\n               \\<box>I \\<and> \\<box>[n1 \\<or> n2]_vars \\<longrightarrow>\n               init \\<and> \\<box>[m1 \\<or> m2]_(x, y)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<turnstile> psi \\<longrightarrow> \\<box>I\n  \\<turnstile> initPsi \\<and>\n               \\<box>I \\<and> \\<box>[n1 \\<or> n2]_vars \\<longrightarrow>\n               init \\<and> \\<box>[m1 \\<or> m2]_(x, y)\n\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow>\n                 init \\<and> \\<box>[m1 \\<or> m2]_(x, y)", "unfolding psi_def"], ["proof (prove)\nusing this:\n  \\<turnstile> initPsi \\<and>\n               \\<box>[n1 \\<or> n2]_vars \\<and> Live2 \\<longrightarrow>\n               \\<box>I\n  \\<turnstile> initPsi \\<and>\n               \\<box>I \\<and> \\<box>[n1 \\<or> n2]_vars \\<longrightarrow>\n               init \\<and> \\<box>[m1 \\<or> m2]_(x, y)\n\ngoal (1 subgoal):\n 1. \\<turnstile> initPsi \\<and>\n                 \\<box>[n1 \\<or> n2]_vars \\<and> Live2 \\<longrightarrow>\n                 init \\<and> \\<box>[m1 \\<or> m2]_(x, y)", "by force"], ["proof (state)\nthis:\n  \\<turnstile> psi \\<longrightarrow> init \\<and> \\<box>[m1 \\<or> m2]_(x, y)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Liveness proofs require computing the enabledness conditions of actions.\n  The first lemma below shows that all steps are visible, i.e. they change\n  at least one variable.\n\\<close>"], ["", "lemma  (in Secondprogram) n1_ch: \"|~ \\<langle>n1\\<rangle>_vars = n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ \\<langle>n1\\<rangle>_vars = n1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. |~ \\<langle>n1\\<rangle>_vars = n1", "have \"|~ n1 \\<longrightarrow> \\<langle>n1\\<rangle>_vars\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ n1 \\<longrightarrow> \\<langle>n1\\<rangle>_vars", "by (auto simp: Sact2_defs tla_defs vars_def)"], ["proof (state)\nthis:\n  |~ n1 \\<longrightarrow> \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. |~ \\<langle>n1\\<rangle>_vars = n1", "thus ?thesis"], ["proof (prove)\nusing this:\n  |~ n1 \\<longrightarrow> \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. |~ \\<langle>n1\\<rangle>_vars = n1", "by (auto simp: angle_actrans_sem[int_rewrite])"], ["proof (state)\nthis:\n  |~ \\<langle>n1\\<rangle>_vars = n1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in Secondprogram) enab_alpha1: \"\\<turnstile> $pc1 = #a \\<longrightarrow> # 0 < $sem \\<longrightarrow> Enabled alpha1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc1 = #a \\<longrightarrow>\n                 #0 < $sem \\<longrightarrow> Enabled alpha1", "proof (clarsimp simp: tla_defs)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>pc1 (w 0) = a; 0 < sem (w 0)\\<rbrakk>\n       \\<Longrightarrow> (Enabled alpha1) w", "fix s :: \"state seq\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>pc1 (w 0) = a; 0 < sem (w 0)\\<rbrakk>\n       \\<Longrightarrow> (Enabled alpha1) w", "assume \"pc1 (s 0) = a\" and \"0 < sem (s 0)\""], ["proof (state)\nthis:\n  pc1 (s 0) = a\n  0 < sem (s 0)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>pc1 (w 0) = a; 0 < sem (w 0)\\<rbrakk>\n       \\<Longrightarrow> (Enabled alpha1) w", "thus \"s \\<Turnstile> Enabled alpha1\""], ["proof (prove)\nusing this:\n  pc1 (s 0) = a\n  0 < sem (s 0)\n\ngoal (1 subgoal):\n 1. (Enabled alpha1) s", "by (intro base_enabled[OF bvar2]) (auto simp: Sact2_defs tla_defs vars_def)"], ["proof (state)\nthis:\n  (Enabled alpha1) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in Secondprogram) enab_beta1: \"\\<turnstile> $pc1 = #b \\<longrightarrow> Enabled beta1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc1 = #b \\<longrightarrow> Enabled beta1", "proof (clarsimp simp: tla_defs)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w. pc1 (w 0) = b \\<Longrightarrow> (Enabled beta1) w", "fix s :: \"state seq\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w. pc1 (w 0) = b \\<Longrightarrow> (Enabled beta1) w", "assume \"pc1 (s 0) = b\""], ["proof (state)\nthis:\n  pc1 (s 0) = b\n\ngoal (1 subgoal):\n 1. \\<And>w. pc1 (w 0) = b \\<Longrightarrow> (Enabled beta1) w", "thus \"s \\<Turnstile> Enabled beta1\""], ["proof (prove)\nusing this:\n  pc1 (s 0) = b\n\ngoal (1 subgoal):\n 1. (Enabled beta1) s", "by (intro base_enabled[OF bvar2]) (auto simp: Sact2_defs tla_defs vars_def)"], ["proof (state)\nthis:\n  (Enabled beta1) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in Secondprogram) enab_gamma1: \"\\<turnstile> $pc1 = #g \\<longrightarrow> Enabled gamma1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc1 = #g \\<longrightarrow> Enabled gamma1", "proof (clarsimp simp: tla_defs)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w. pc1 (w 0) = g \\<Longrightarrow> (Enabled gamma1) w", "fix s :: \"state seq\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w. pc1 (w 0) = g \\<Longrightarrow> (Enabled gamma1) w", "assume \"pc1 (s 0) = g\""], ["proof (state)\nthis:\n  pc1 (s 0) = g\n\ngoal (1 subgoal):\n 1. \\<And>w. pc1 (w 0) = g \\<Longrightarrow> (Enabled gamma1) w", "thus \"s \\<Turnstile> Enabled gamma1\""], ["proof (prove)\nusing this:\n  pc1 (s 0) = g\n\ngoal (1 subgoal):\n 1. (Enabled gamma1) s", "by (intro base_enabled[OF bvar2]) (auto simp: Sact2_defs tla_defs vars_def)"], ["proof (state)\nthis:\n  (Enabled gamma1) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in Secondprogram) enab_n1:\n  \"\\<turnstile> Enabled \\<langle>n1\\<rangle>_vars = ($pc1 = #a \\<longrightarrow> # 0 < $sem)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> Enabled \\<langle>n1\\<rangle>_vars =\n                 ($pc1 = #a \\<longrightarrow> #0 < $sem)", "unfolding n1_ch[int_rewrite]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> Enabled n1 = ($pc1 = #a \\<longrightarrow> #0 < $sem)", "proof (rule int_iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<turnstile> Enabled n1 \\<longrightarrow>\n                 $pc1 = #a \\<longrightarrow> #0 < $sem\n 2. \\<turnstile> ($pc1 = #a \\<longrightarrow> #0 < $sem) \\<longrightarrow>\n                 Enabled n1", "show \"\\<turnstile> Enabled n1 \\<longrightarrow> $pc1 = #a \\<longrightarrow> # 0 < $sem\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> Enabled n1 \\<longrightarrow>\n                 $pc1 = #a \\<longrightarrow> #0 < $sem", "by (auto elim!: enabledE simp: Sact2_defs tla_defs)"], ["proof (state)\nthis:\n  \\<turnstile> Enabled n1 \\<longrightarrow>\n               $pc1 = #a \\<longrightarrow> #0 < $sem\n\ngoal (1 subgoal):\n 1. \\<turnstile> ($pc1 = #a \\<longrightarrow> #0 < $sem) \\<longrightarrow>\n                 Enabled n1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> ($pc1 = #a \\<longrightarrow> #0 < $sem) \\<longrightarrow>\n                 Enabled n1", "show \"\\<turnstile> ($pc1 = #a \\<longrightarrow> # 0 < $sem) \\<longrightarrow> Enabled n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> ($pc1 = #a \\<longrightarrow> #0 < $sem) \\<longrightarrow>\n                 Enabled n1", "proof (clarsimp simp: tla_defs)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       pc1 (w 0) = a \\<longrightarrow> 0 < sem (w 0) \\<Longrightarrow>\n       (Enabled n1) w", "fix s :: \"state seq\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       pc1 (w 0) = a \\<longrightarrow> 0 < sem (w 0) \\<Longrightarrow>\n       (Enabled n1) w", "assume \"pc1 (s 0) = a \\<longrightarrow> 0 < sem (s 0)\""], ["proof (state)\nthis:\n  pc1 (s 0) = a \\<longrightarrow> 0 < sem (s 0)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       pc1 (w 0) = a \\<longrightarrow> 0 < sem (w 0) \\<Longrightarrow>\n       (Enabled n1) w", "thus \"s \\<Turnstile> Enabled n1\""], ["proof (prove)\nusing this:\n  pc1 (s 0) = a \\<longrightarrow> 0 < sem (s 0)\n\ngoal (1 subgoal):\n 1. (Enabled n1) s", "using enab_alpha1[unlift_rule]\n            enab_beta1[unlift_rule]\n            enab_gamma1[unlift_rule]"], ["proof (prove)\nusing this:\n  pc1 (s 0) = a \\<longrightarrow> 0 < sem (s 0)\n  \\<lbrakk>($pc1) ?w = a; 0 < ($sem) ?w\\<rbrakk>\n  \\<Longrightarrow> (Enabled alpha1) ?w\n  ($pc1) ?w = b \\<Longrightarrow> (Enabled beta1) ?w\n  ($pc1) ?w = g \\<Longrightarrow> (Enabled gamma1) ?w\n\ngoal (1 subgoal):\n 1. (Enabled n1) s", "by (cases \"pc1 (s 0)\") (force simp: n1_def Enabled_disj[int_rewrite] tla_defs)+"], ["proof (state)\nthis:\n  (Enabled n1) s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> ($pc1 = #a \\<longrightarrow> #0 < $sem) \\<longrightarrow>\n               Enabled n1\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The analogous properties for the second process are obtained by copy and paste.\n\\<close>"], ["", "lemma  (in Secondprogram) n2_ch: \"|~ \\<langle>n2\\<rangle>_vars = n2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ \\<langle>n2\\<rangle>_vars = n2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. |~ \\<langle>n2\\<rangle>_vars = n2", "have \"|~ n2 \\<longrightarrow> \\<langle>n2\\<rangle>_vars\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ n2 \\<longrightarrow> \\<langle>n2\\<rangle>_vars", "by (auto simp: Sact2_defs tla_defs vars_def)"], ["proof (state)\nthis:\n  |~ n2 \\<longrightarrow> \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. |~ \\<langle>n2\\<rangle>_vars = n2", "thus ?thesis"], ["proof (prove)\nusing this:\n  |~ n2 \\<longrightarrow> \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. |~ \\<langle>n2\\<rangle>_vars = n2", "by (auto simp: angle_actrans_sem[int_rewrite])"], ["proof (state)\nthis:\n  |~ \\<langle>n2\\<rangle>_vars = n2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in Secondprogram) enab_alpha2: \"\\<turnstile> $pc2 = #a \\<longrightarrow> # 0 < $sem \\<longrightarrow> Enabled alpha2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc2 = #a \\<longrightarrow>\n                 #0 < $sem \\<longrightarrow> Enabled alpha2", "proof (clarsimp simp: tla_defs)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>pc2 (w 0) = a; 0 < sem (w 0)\\<rbrakk>\n       \\<Longrightarrow> (Enabled alpha2) w", "fix s :: \"state seq\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>pc2 (w 0) = a; 0 < sem (w 0)\\<rbrakk>\n       \\<Longrightarrow> (Enabled alpha2) w", "assume \"pc2 (s 0) = a\" and \"0 < sem (s 0)\""], ["proof (state)\nthis:\n  pc2 (s 0) = a\n  0 < sem (s 0)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>pc2 (w 0) = a; 0 < sem (w 0)\\<rbrakk>\n       \\<Longrightarrow> (Enabled alpha2) w", "thus \"s \\<Turnstile> Enabled alpha2\""], ["proof (prove)\nusing this:\n  pc2 (s 0) = a\n  0 < sem (s 0)\n\ngoal (1 subgoal):\n 1. (Enabled alpha2) s", "by (intro base_enabled[OF bvar2]) (auto simp: Sact2_defs tla_defs vars_def)"], ["proof (state)\nthis:\n  (Enabled alpha2) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in Secondprogram) enab_beta2: \"\\<turnstile> $pc2 = #b \\<longrightarrow> Enabled beta2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc2 = #b \\<longrightarrow> Enabled beta2", "proof (clarsimp simp: tla_defs)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w. pc2 (w 0) = b \\<Longrightarrow> (Enabled beta2) w", "fix s :: \"state seq\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w. pc2 (w 0) = b \\<Longrightarrow> (Enabled beta2) w", "assume \"pc2 (s 0) = b\""], ["proof (state)\nthis:\n  pc2 (s 0) = b\n\ngoal (1 subgoal):\n 1. \\<And>w. pc2 (w 0) = b \\<Longrightarrow> (Enabled beta2) w", "thus \"s \\<Turnstile> Enabled beta2\""], ["proof (prove)\nusing this:\n  pc2 (s 0) = b\n\ngoal (1 subgoal):\n 1. (Enabled beta2) s", "by (intro base_enabled[OF bvar2]) (auto simp: Sact2_defs tla_defs vars_def)"], ["proof (state)\nthis:\n  (Enabled beta2) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in Secondprogram) enab_gamma2: \"\\<turnstile> $pc2 = #g \\<longrightarrow> Enabled gamma2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc2 = #g \\<longrightarrow> Enabled gamma2", "proof (clarsimp simp: tla_defs)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w. pc2 (w 0) = g \\<Longrightarrow> (Enabled gamma2) w", "fix s :: \"state seq\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w. pc2 (w 0) = g \\<Longrightarrow> (Enabled gamma2) w", "assume \"pc2 (s 0) = g\""], ["proof (state)\nthis:\n  pc2 (s 0) = g\n\ngoal (1 subgoal):\n 1. \\<And>w. pc2 (w 0) = g \\<Longrightarrow> (Enabled gamma2) w", "thus \"s \\<Turnstile> Enabled gamma2\""], ["proof (prove)\nusing this:\n  pc2 (s 0) = g\n\ngoal (1 subgoal):\n 1. (Enabled gamma2) s", "by (intro base_enabled[OF bvar2]) (auto simp: Sact2_defs tla_defs vars_def)"], ["proof (state)\nthis:\n  (Enabled gamma2) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in Secondprogram) enab_n2:\n  \"\\<turnstile> Enabled \\<langle>n2\\<rangle>_vars = ($pc2 = #a \\<longrightarrow> # 0 < $sem)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> Enabled \\<langle>n2\\<rangle>_vars =\n                 ($pc2 = #a \\<longrightarrow> #0 < $sem)", "unfolding n2_ch[int_rewrite]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> Enabled n2 = ($pc2 = #a \\<longrightarrow> #0 < $sem)", "proof (rule int_iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<turnstile> Enabled n2 \\<longrightarrow>\n                 $pc2 = #a \\<longrightarrow> #0 < $sem\n 2. \\<turnstile> ($pc2 = #a \\<longrightarrow> #0 < $sem) \\<longrightarrow>\n                 Enabled n2", "show \"\\<turnstile> Enabled n2 \\<longrightarrow> $pc2 = #a \\<longrightarrow> # 0 < $sem\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> Enabled n2 \\<longrightarrow>\n                 $pc2 = #a \\<longrightarrow> #0 < $sem", "by (auto elim!: enabledE simp: Sact2_defs tla_defs)"], ["proof (state)\nthis:\n  \\<turnstile> Enabled n2 \\<longrightarrow>\n               $pc2 = #a \\<longrightarrow> #0 < $sem\n\ngoal (1 subgoal):\n 1. \\<turnstile> ($pc2 = #a \\<longrightarrow> #0 < $sem) \\<longrightarrow>\n                 Enabled n2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> ($pc2 = #a \\<longrightarrow> #0 < $sem) \\<longrightarrow>\n                 Enabled n2", "show \"\\<turnstile> ($pc2 = #a \\<longrightarrow> # 0 < $sem) \\<longrightarrow> Enabled n2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> ($pc2 = #a \\<longrightarrow> #0 < $sem) \\<longrightarrow>\n                 Enabled n2", "proof (clarsimp simp: tla_defs)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       pc2 (w 0) = a \\<longrightarrow> 0 < sem (w 0) \\<Longrightarrow>\n       (Enabled n2) w", "fix s :: \"state seq\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       pc2 (w 0) = a \\<longrightarrow> 0 < sem (w 0) \\<Longrightarrow>\n       (Enabled n2) w", "assume \"pc2 (s 0) = a \\<longrightarrow> 0 < sem (s 0)\""], ["proof (state)\nthis:\n  pc2 (s 0) = a \\<longrightarrow> 0 < sem (s 0)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       pc2 (w 0) = a \\<longrightarrow> 0 < sem (w 0) \\<Longrightarrow>\n       (Enabled n2) w", "thus \"s \\<Turnstile> Enabled n2\""], ["proof (prove)\nusing this:\n  pc2 (s 0) = a \\<longrightarrow> 0 < sem (s 0)\n\ngoal (1 subgoal):\n 1. (Enabled n2) s", "using enab_alpha2[unlift_rule]\n            enab_beta2[unlift_rule]\n            enab_gamma2[unlift_rule]"], ["proof (prove)\nusing this:\n  pc2 (s 0) = a \\<longrightarrow> 0 < sem (s 0)\n  \\<lbrakk>($pc2) ?w = a; 0 < ($sem) ?w\\<rbrakk>\n  \\<Longrightarrow> (Enabled alpha2) ?w\n  ($pc2) ?w = b \\<Longrightarrow> (Enabled beta2) ?w\n  ($pc2) ?w = g \\<Longrightarrow> (Enabled gamma2) ?w\n\ngoal (1 subgoal):\n 1. (Enabled n2) s", "by (cases \"pc2 (s 0)\") (force simp: n2_def Enabled_disj[int_rewrite] tla_defs)+"], ["proof (state)\nthis:\n  (Enabled n2) s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> ($pc2 = #a \\<longrightarrow> #0 < $sem) \\<longrightarrow>\n               Enabled n2\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  We use rule \\<open>SF2\\<close> to prove that \\<open>psi\\<close> implements strong fairness\n  for the abstract action \\<open>m1\\<close>. Since strong fairness implies weak fairness,\n  it follows that \\<open>psi\\<close> refines the liveness condition of \\<open>phi\\<close>.\n\\<close>"], ["", "lemma (in Secondprogram) psi_fair_m1: \"\\<turnstile> psi \\<longrightarrow> SF(m1)_(x,y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> SF(m1)_(x, y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> SF(m1)_(x, y)", "have \"\\<turnstile> \\<box>[n1 \\<or> n2]_vars \\<and> SF(n1)_vars \\<and> \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow> SF(m1)_(x,y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[n1 \\<or> n2]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 SF(m1)_(x, y)", "proof (rule SF2)"], ["proof (state)\ngoal (4 subgoals):\n 1. |~ \\<langle>(n1 \\<or> n2) \\<and> ?B\\<rangle>_vars \\<longrightarrow>\n       \\<langle>m1\\<rangle>_(x, y)\n 2. |~ ?P \\<and>\n       \\<circle>?P \\<and>\n       \\<langle>(n1 \\<or> n2) \\<and> n1\\<rangle>_vars \\<longrightarrow>\n       ?B\n 3. \\<turnstile> ?P \\<and>\n                 Enabled \\<langle>m1\\<rangle>_(x, y) \\<longrightarrow>\n                 Enabled \\<langle>n1\\<rangle>_vars\n 4. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> ?B]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m1\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>?P", "txt \\<open>\n      Rule \\<open>SF2\\<close> requires us to choose a helpful action (whose effect implies\n      \\<open>\\<langle>m1\\<rangle>_(x,y)\\<close>) and a persistent condition, which will eventually remain\n      true if the helpful action is never executed. In our case, the helpful action\n      is \\<open>beta1\\<close> and the persistent condition is \\<open>pc1 = b\\<close>.\n\\<close>"], ["proof (state)\ngoal (4 subgoals):\n 1. |~ \\<langle>(n1 \\<or> n2) \\<and> ?B\\<rangle>_vars \\<longrightarrow>\n       \\<langle>m1\\<rangle>_(x, y)\n 2. |~ ?P \\<and>\n       \\<circle>?P \\<and>\n       \\<langle>(n1 \\<or> n2) \\<and> n1\\<rangle>_vars \\<longrightarrow>\n       ?B\n 3. \\<turnstile> ?P \\<and>\n                 Enabled \\<langle>m1\\<rangle>_(x, y) \\<longrightarrow>\n                 Enabled \\<langle>n1\\<rangle>_vars\n 4. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> ?B]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m1\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>?P", "show \"|~ \\<langle>(n1 \\<or> n2) \\<and> beta1\\<rangle>_vars \\<longrightarrow> \\<langle>m1\\<rangle>_(x,y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ \\<langle>(n1 \\<or> n2) \\<and> beta1\\<rangle>_vars \\<longrightarrow>\n       \\<langle>m1\\<rangle>_(x, y)", "by (auto simp: beta1_def m1_def vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ \\<langle>(n1 \\<or> n2) \\<and> beta1\\<rangle>_vars \\<longrightarrow>\n     \\<langle>m1\\<rangle>_(x, y)\n\ngoal (3 subgoals):\n 1. |~ ?P \\<and>\n       \\<circle>?P \\<and>\n       \\<langle>(n1 \\<or> n2) \\<and> n1\\<rangle>_vars \\<longrightarrow>\n       beta1\n 2. \\<turnstile> ?P \\<and>\n                 Enabled \\<langle>m1\\<rangle>_(x, y) \\<longrightarrow>\n                 Enabled \\<langle>n1\\<rangle>_vars\n 3. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m1\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>?P", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. |~ ?P \\<and>\n       \\<circle>?P \\<and>\n       \\<langle>(n1 \\<or> n2) \\<and> n1\\<rangle>_vars \\<longrightarrow>\n       beta1\n 2. \\<turnstile> ?P \\<and>\n                 Enabled \\<langle>m1\\<rangle>_(x, y) \\<longrightarrow>\n                 Enabled \\<langle>n1\\<rangle>_vars\n 3. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m1\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>?P", "show \"|~ $pc1 = #b \\<and> \\<circle>($pc1 = #b) \\<and> \\<langle>(n1 \\<or> n2) \\<and> n1\\<rangle>_vars \\<longrightarrow> beta1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc1 = #b \\<and>\n       \\<circle>($pc1 = #b) \\<and>\n       \\<langle>(n1 \\<or> n2) \\<and> n1\\<rangle>_vars \\<longrightarrow>\n       beta1", "by (auto simp: n1_def alpha1_def beta1_def gamma1_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc1 = #b \\<and>\n     \\<circle>($pc1 = #b) \\<and>\n     \\<langle>(n1 \\<or> n2) \\<and> n1\\<rangle>_vars \\<longrightarrow>\n     beta1\n\ngoal (2 subgoals):\n 1. \\<turnstile> $pc1 = #b \\<and>\n                 Enabled \\<langle>m1\\<rangle>_(x, y) \\<longrightarrow>\n                 Enabled \\<langle>n1\\<rangle>_vars\n 2. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m1\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc1 = #b)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<turnstile> $pc1 = #b \\<and>\n                 Enabled \\<langle>m1\\<rangle>_(x, y) \\<longrightarrow>\n                 Enabled \\<langle>n1\\<rangle>_vars\n 2. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m1\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc1 = #b)", "show \"\\<turnstile> $pc1 = #b \\<and> Enabled \\<langle>m1\\<rangle>_(x, y) \\<longrightarrow> Enabled \\<langle>n1\\<rangle>_vars\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc1 = #b \\<and>\n                 Enabled \\<langle>m1\\<rangle>_(x, y) \\<longrightarrow>\n                 Enabled \\<langle>n1\\<rangle>_vars", "unfolding enab_n1[int_rewrite]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc1 = #b \\<and>\n                 Enabled \\<langle>m1\\<rangle>_(x, y) \\<longrightarrow>\n                 $pc1 = #a \\<longrightarrow> #0 < $sem", "by auto"], ["proof (state)\nthis:\n  \\<turnstile> $pc1 = #b \\<and>\n               Enabled \\<langle>m1\\<rangle>_(x, y) \\<longrightarrow>\n               Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m1\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc1 = #b)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m1\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc1 = #b)", "txt \\<open>\n      The difficult part of the proof is showing that the persistent condition\n      will eventually always be true if the helpful action is never executed.\n      We show that (1) whenever the condition becomes true it remains so and\n      (2) eventually the condition must be true.\n\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m1\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc1 = #b)", "show \"\\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars\n            \\<and> SF(n1)_vars \\<and> \\<box>(I \\<and> SF(n2)_vars) \\<and> \\<box>\\<diamond>Enabled \\<langle>m1\\<rangle>_(x, y)\n            \\<longrightarrow> \\<diamond>\\<box>($pc1 = #b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m1\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc1 = #b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m1\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc1 = #b)", "have \"\\<turnstile> \\<box>\\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<longrightarrow> \\<box>($pc1 = #b \\<longrightarrow> \\<box>($pc1 = #b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>\\<box>[(n1 \\<or> n2) \\<and>\n                              \\<not> beta1]_vars \\<longrightarrow>\n                 \\<box>($pc1 = #b \\<longrightarrow> \\<box>($pc1 = #b))", "proof (rule STL4)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and>\n                        \\<not> beta1]_vars \\<longrightarrow>\n                 $pc1 = #b \\<longrightarrow> \\<box>($pc1 = #b)", "have \"|~ $pc1 = #b \\<and> [(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<longrightarrow> \\<circle>($pc1 = #b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc1 = #b \\<and>\n       _actrans ((n1 \\<or> n2) \\<and> \\<not> beta1) vars \\<longrightarrow>\n       \\<circle>($pc1 = #b)", "by (auto simp: Sact2_defs vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc1 = #b \\<and>\n     _actrans ((n1 \\<or> n2) \\<and> \\<not> beta1) vars \\<longrightarrow>\n     \\<circle>($pc1 = #b)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and>\n                        \\<not> beta1]_vars \\<longrightarrow>\n                 $pc1 = #b \\<longrightarrow> \\<box>($pc1 = #b)", "from this[THEN INV1]"], ["proof (chain)\npicking this:\n  \\<turnstile> $pc1 = #b \\<and>\n               \\<box>[(n1 \\<or> n2) \\<and>\n                      \\<not> beta1]_vars \\<longrightarrow>\n               \\<box>($pc1 = #b)", "show \"\\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<longrightarrow> $pc1 = #b \\<longrightarrow> \\<box>($pc1 = #b)\""], ["proof (prove)\nusing this:\n  \\<turnstile> $pc1 = #b \\<and>\n               \\<box>[(n1 \\<or> n2) \\<and>\n                      \\<not> beta1]_vars \\<longrightarrow>\n               \\<box>($pc1 = #b)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and>\n                        \\<not> beta1]_vars \\<longrightarrow>\n                 $pc1 = #b \\<longrightarrow> \\<box>($pc1 = #b)", "by auto"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and>\n                      \\<not> beta1]_vars \\<longrightarrow>\n               $pc1 = #b \\<longrightarrow> \\<box>($pc1 = #b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>\\<box>[(n1 \\<or> n2) \\<and>\n                            \\<not> beta1]_vars \\<longrightarrow>\n               \\<box>($pc1 = #b \\<longrightarrow> \\<box>($pc1 = #b))\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m1\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc1 = #b)", "hence 1: \"\\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<longrightarrow> \\<diamond>($pc1 = #b) \\<longrightarrow> \\<diamond>\\<box>($pc1 = #b)\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>\\<box>[(n1 \\<or> n2) \\<and>\n                            \\<not> beta1]_vars \\<longrightarrow>\n               \\<box>($pc1 = #b \\<longrightarrow> \\<box>($pc1 = #b))\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and>\n                        \\<not> beta1]_vars \\<longrightarrow>\n                 \\<diamond>($pc1 = #b) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc1 = #b)", "by (force intro: E31[unlift_rule])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and>\n                      \\<not> beta1]_vars \\<longrightarrow>\n               \\<diamond>($pc1 = #b) \\<longrightarrow>\n               \\<diamond>\\<box>($pc1 = #b)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m1\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc1 = #b)", "have \"\\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and> SF(n1)_vars \\<and> \\<box>(I \\<and> SF(n2)_vars)\n              \\<longrightarrow> \\<diamond>($pc1 = #b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>($pc1 = #b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>($pc1 = #b)", "txt \\<open>\n          The plan of the proof is to show that from any state where \\<open>pc1 = g\\<close>\n          one eventually reaches \\<open>pc1 = a\\<close>, from where one eventually reaches\n          \\<open>pc1 = b\\<close>. The result follows by combining leadsto properties.\n\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>($pc1 = #b)", "let ?F = \"LIFT (\\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and> SF(n1)_vars \\<and> \\<box>(I \\<and> SF(n2)_vars))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>($pc1 = #b)", "txt \\<open>\n          Showing that \\<open>pc1 = g\\<close> leads to \\<open>pc1 = a\\<close> is a simple\n          application of rule \\<open>SF1\\<close> because the first process completely\n          controls this transition.\n\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>($pc1 = #b)", "have ga: \"\\<turnstile> ?F \\<longrightarrow> ($pc1 = #g \\<leadsto> $pc1 = #a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 $pc1 = #g \\<leadsto> $pc1 = #a", "proof (rule SF1)"], ["proof (state)\ngoal (4 subgoals):\n 1. |~ $pc1 = #g \\<and>\n       _actrans ((n1 \\<or> n2) \\<and> \\<not> beta1) vars \\<longrightarrow>\n       \\<circle>($pc1 = #g) \\<or> \\<circle>($pc1 = #a)\n 2. |~ $pc1 = #g \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and>\n                n1\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc1 = #a)\n 3. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n 4. |~ $pc1 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #g)", "show \"|~ $pc1 = #g \\<and> [(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<longrightarrow> \\<circle>($pc1 = #g) \\<or> \\<circle>($pc1 = #a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc1 = #g \\<and>\n       _actrans ((n1 \\<or> n2) \\<and> \\<not> beta1) vars \\<longrightarrow>\n       \\<circle>($pc1 = #g) \\<or> \\<circle>($pc1 = #a)", "by (auto simp: Sact2_defs vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc1 = #g \\<and>\n     _actrans ((n1 \\<or> n2) \\<and> \\<not> beta1) vars \\<longrightarrow>\n     \\<circle>($pc1 = #g) \\<or> \\<circle>($pc1 = #a)\n\ngoal (3 subgoals):\n 1. |~ $pc1 = #g \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and>\n                n1\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc1 = #a)\n 2. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n 3. |~ $pc1 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #g)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. |~ $pc1 = #g \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and>\n                n1\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc1 = #a)\n 2. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n 3. |~ $pc1 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #g)", "show \"|~ $pc1 = #g \\<and> \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and> n1\\<rangle>_vars \\<longrightarrow> \\<circle>($pc1 = #a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc1 = #g \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and>\n                n1\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc1 = #a)", "by (auto simp: Sact2_defs vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc1 = #g \\<and>\n     \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and>\n              n1\\<rangle>_vars \\<longrightarrow>\n     \\<circle>($pc1 = #a)\n\ngoal (2 subgoals):\n 1. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n 2. |~ $pc1 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #g)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n 2. |~ $pc1 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #g)", "show \"|~ $pc1 = #g \\<and> Unchanged vars \\<longrightarrow> \\<circle>($pc1 = #g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc1 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #g)", "by (auto simp: vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc1 = #g \\<and> Unchanged vars \\<longrightarrow> \\<circle>($pc1 = #g)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "have \"\\<turnstile> $pc1 = #g \\<longrightarrow> Enabled \\<langle>n1\\<rangle>_vars\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc1 = #g \\<longrightarrow>\n                 Enabled \\<langle>n1\\<rangle>_vars", "unfolding enab_n1[int_rewrite]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc1 = #g \\<longrightarrow>\n                 $pc1 = #a \\<longrightarrow> #0 < $sem", "by (auto simp: tla_defs)"], ["proof (state)\nthis:\n  \\<turnstile> $pc1 = #g \\<longrightarrow> Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "hence \"\\<turnstile> \\<box>($pc1 = #g) \\<longrightarrow> Enabled \\<langle>n1\\<rangle>_vars\""], ["proof (prove)\nusing this:\n  \\<turnstile> $pc1 = #g \\<longrightarrow> Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #g) \\<longrightarrow>\n                 Enabled \\<langle>n1\\<rangle>_vars", "by (rule lift_imp_trans[OF ax1])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>($pc1 = #g) \\<longrightarrow>\n               Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "hence \"\\<turnstile> \\<box>($pc1 = #g) \\<longrightarrow> \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>($pc1 = #g) \\<longrightarrow>\n               Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #g) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "by (rule lift_imp_trans[OF _ E3])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>($pc1 = #g) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "thus \"\\<turnstile> \\<box>($pc1 = #g) \\<and> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and> \\<box>(I \\<and> SF(n2)_vars)\n                  \\<longrightarrow> \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>($pc1 = #g) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "by auto"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>($pc1 = #g) \\<and>\n               \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               $pc1 = #g \\<leadsto> $pc1 = #a\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>($pc1 = #b)", "txt \\<open>\n          The proof that \\<open>pc1 = a\\<close> leads to \\<open>pc1 = b\\<close> follows\n          the same basic schema. However, showing that \\<open>n1\\<close> is eventually\n          enabled requires reasoning about the second process, which must liberate\n          the critical section.\n\\<close>"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               $pc1 = #g \\<leadsto> $pc1 = #a\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>($pc1 = #b)", "have ab: \"\\<turnstile> ?F \\<longrightarrow> ($pc1 = #a \\<leadsto> $pc1 = #b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 $pc1 = #a \\<leadsto> $pc1 = #b", "proof (rule SF1)"], ["proof (state)\ngoal (4 subgoals):\n 1. |~ $pc1 = #a \\<and>\n       _actrans ((n1 \\<or> n2) \\<and> \\<not> beta1) vars \\<longrightarrow>\n       \\<circle>($pc1 = #a) \\<or> \\<circle>($pc1 = #b)\n 2. |~ $pc1 = #a \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and>\n                n1\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc1 = #b)\n 3. \\<turnstile> \\<box>($pc1 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n 4. |~ $pc1 = #a \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #a)", "show \"|~ $pc1 = #a \\<and> [(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<longrightarrow> \\<circle>($pc1 = #a) \\<or> \\<circle>($pc1 = #b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc1 = #a \\<and>\n       _actrans ((n1 \\<or> n2) \\<and> \\<not> beta1) vars \\<longrightarrow>\n       \\<circle>($pc1 = #a) \\<or> \\<circle>($pc1 = #b)", "by (auto simp: Sact2_defs vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc1 = #a \\<and>\n     _actrans ((n1 \\<or> n2) \\<and> \\<not> beta1) vars \\<longrightarrow>\n     \\<circle>($pc1 = #a) \\<or> \\<circle>($pc1 = #b)\n\ngoal (3 subgoals):\n 1. |~ $pc1 = #a \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and>\n                n1\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc1 = #b)\n 2. \\<turnstile> \\<box>($pc1 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n 3. |~ $pc1 = #a \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #a)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. |~ $pc1 = #a \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and>\n                n1\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc1 = #b)\n 2. \\<turnstile> \\<box>($pc1 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n 3. |~ $pc1 = #a \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #a)", "show \"|~ $pc1 = #a \\<and> \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and> n1\\<rangle>_vars \\<longrightarrow> \\<circle>($pc1 = #b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc1 = #a \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and>\n                n1\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc1 = #b)", "by (auto simp: Sact2_defs vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc1 = #a \\<and>\n     \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and>\n              n1\\<rangle>_vars \\<longrightarrow>\n     \\<circle>($pc1 = #b)\n\ngoal (2 subgoals):\n 1. \\<turnstile> \\<box>($pc1 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n 2. |~ $pc1 = #a \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #a)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<turnstile> \\<box>($pc1 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n 2. |~ $pc1 = #a \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #a)", "show \"|~ $pc1 = #a \\<and> Unchanged vars \\<longrightarrow> \\<circle>($pc1 = #a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc1 = #a \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #a)", "by (auto simp: vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc1 = #a \\<and> Unchanged vars \\<longrightarrow> \\<circle>($pc1 = #a)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "txt \\<open>We establish a suitable leadsto-chain.\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "let ?G = \"LIFT \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and> SF(n2)_vars \\<and> \\<box>($pc1 = #a \\<and> I)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "have \"\\<turnstile> ?G \\<longrightarrow> \\<diamond>($pc2 = #a \\<and> $pc1 = #a \\<and> I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc2 = #a \\<and> $pc1 = #a \\<and> I)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc2 = #a \\<and> $pc1 = #a \\<and> I)", "txt \\<open>Rule \\<open>SF1\\<close> takes us from \\<open>pc2 = b\\<close> to \\<open>pc2 = g\\<close>.\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc2 = #a \\<and> $pc1 = #a \\<and> I)", "have bg2: \"\\<turnstile> ?G \\<longrightarrow> ($pc2 = #b \\<leadsto> $pc2 = #g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 $pc2 = #b \\<leadsto> $pc2 = #g", "proof (rule SF1)"], ["proof (state)\ngoal (4 subgoals):\n 1. |~ $pc2 = #b \\<and>\n       _actrans ((n1 \\<or> n2) \\<and> \\<not> beta1) vars \\<longrightarrow>\n       \\<circle>($pc2 = #b) \\<or> \\<circle>($pc2 = #g)\n 2. |~ $pc2 = #b \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and>\n                n2\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc2 = #g)\n 3. \\<turnstile> \\<box>($pc2 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n 4. |~ $pc2 = #b \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #b)", "show \"|~ $pc2 = #b \\<and> [(n1 \\<or> n2) \\<and> \\<not>beta1]_vars \\<longrightarrow> \\<circle>($pc2 = #b) \\<or> \\<circle>($pc2 = #g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc2 = #b \\<and>\n       _actrans ((n1 \\<or> n2) \\<and> \\<not> beta1) vars \\<longrightarrow>\n       \\<circle>($pc2 = #b) \\<or> \\<circle>($pc2 = #g)", "by (auto simp: Sact2_defs vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc2 = #b \\<and>\n     _actrans ((n1 \\<or> n2) \\<and> \\<not> beta1) vars \\<longrightarrow>\n     \\<circle>($pc2 = #b) \\<or> \\<circle>($pc2 = #g)\n\ngoal (3 subgoals):\n 1. |~ $pc2 = #b \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and>\n                n2\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc2 = #g)\n 2. \\<turnstile> \\<box>($pc2 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n 3. |~ $pc2 = #b \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #b)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. |~ $pc2 = #b \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and>\n                n2\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc2 = #g)\n 2. \\<turnstile> \\<box>($pc2 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n 3. |~ $pc2 = #b \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #b)", "show \"|~ $pc2 = #b \\<and> \\<langle>((n1 \\<or> n2) \\<and> \\<not>beta1) \\<and> n2\\<rangle>_vars \\<longrightarrow> \\<circle>($pc2 = #g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc2 = #b \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and>\n                n2\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc2 = #g)", "by (auto simp: Sact2_defs vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc2 = #b \\<and>\n     \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and>\n              n2\\<rangle>_vars \\<longrightarrow>\n     \\<circle>($pc2 = #g)\n\ngoal (2 subgoals):\n 1. \\<turnstile> \\<box>($pc2 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n 2. |~ $pc2 = #b \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #b)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<turnstile> \\<box>($pc2 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n 2. |~ $pc2 = #b \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #b)", "show \"|~ $pc2 = #b \\<and> Unchanged vars \\<longrightarrow> \\<circle>($pc2 = #b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc2 = #b \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #b)", "by (auto simp: vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc2 = #b \\<and> Unchanged vars \\<longrightarrow> \\<circle>($pc2 = #b)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "have \"\\<turnstile> $pc2 = #b \\<longrightarrow> Enabled \\<langle>n2\\<rangle>_vars\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc2 = #b \\<longrightarrow>\n                 Enabled \\<langle>n2\\<rangle>_vars", "unfolding enab_n2[int_rewrite]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc2 = #b \\<longrightarrow>\n                 $pc2 = #a \\<longrightarrow> #0 < $sem", "by (auto simp: tla_defs)"], ["proof (state)\nthis:\n  \\<turnstile> $pc2 = #b \\<longrightarrow> Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "hence \"\\<turnstile> \\<box>($pc2 = #b) \\<longrightarrow> Enabled \\<langle>n2\\<rangle>_vars\""], ["proof (prove)\nusing this:\n  \\<turnstile> $pc2 = #b \\<longrightarrow> Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #b) \\<longrightarrow>\n                 Enabled \\<langle>n2\\<rangle>_vars", "by (rule lift_imp_trans[OF ax1])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>($pc2 = #b) \\<longrightarrow>\n               Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "hence \"\\<turnstile> \\<box>($pc2 = #b) \\<longrightarrow> \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>($pc2 = #b) \\<longrightarrow>\n               Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #b) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "by (rule lift_imp_trans[OF _ E3])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>($pc2 = #b) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "thus \"\\<turnstile> \\<box>($pc2 = #b) \\<and> \\<box>[(n1 \\<or> n2) \\<and> \\<not>beta1]_vars \\<and> \\<box>($pc1 = #a \\<and> I)\n                      \\<longrightarrow> \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>($pc2 = #b) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "by auto"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>($pc2 = #b) \\<and>\n               \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               $pc2 = #b \\<leadsto> $pc2 = #g\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc2 = #a \\<and> $pc1 = #a \\<and> I)", "txt \\<open>Similarly, \\<open>pc2 = b\\<close> leads to \\<open>pc2 = g\\<close>.\\<close>"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               $pc2 = #b \\<leadsto> $pc2 = #g\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc2 = #a \\<and> $pc1 = #a \\<and> I)", "have ga2: \"\\<turnstile> ?G \\<longrightarrow> ($pc2 = #g \\<leadsto> $pc2 = #a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 $pc2 = #g \\<leadsto> $pc2 = #a", "proof (rule SF1)"], ["proof (state)\ngoal (4 subgoals):\n 1. |~ $pc2 = #g \\<and>\n       _actrans ((n1 \\<or> n2) \\<and> \\<not> beta1) vars \\<longrightarrow>\n       \\<circle>($pc2 = #g) \\<or> \\<circle>($pc2 = #a)\n 2. |~ $pc2 = #g \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and>\n                n2\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc2 = #a)\n 3. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n 4. |~ $pc2 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #g)", "show \"|~ $pc2 = #g \\<and> [(n1 \\<or> n2) \\<and> \\<not>beta1]_vars \\<longrightarrow> \\<circle>($pc2 = #g) \\<or> \\<circle>($pc2 = #a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc2 = #g \\<and>\n       _actrans ((n1 \\<or> n2) \\<and> \\<not> beta1) vars \\<longrightarrow>\n       \\<circle>($pc2 = #g) \\<or> \\<circle>($pc2 = #a)", "by (auto simp: Sact2_defs vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc2 = #g \\<and>\n     _actrans ((n1 \\<or> n2) \\<and> \\<not> beta1) vars \\<longrightarrow>\n     \\<circle>($pc2 = #g) \\<or> \\<circle>($pc2 = #a)\n\ngoal (3 subgoals):\n 1. |~ $pc2 = #g \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and>\n                n2\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc2 = #a)\n 2. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n 3. |~ $pc2 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #g)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. |~ $pc2 = #g \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and>\n                n2\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc2 = #a)\n 2. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n 3. |~ $pc2 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #g)", "show \"|~ $pc2 = #g \\<and> \\<langle>((n1 \\<or> n2) \\<and> \\<not>beta1) \\<and> n2\\<rangle>_vars \\<longrightarrow> \\<circle>($pc2 = #a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc2 = #g \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and>\n                n2\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc2 = #a)", "by (auto simp: n2_def alpha2_def beta2_def gamma2_def vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc2 = #g \\<and>\n     \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta1) \\<and>\n              n2\\<rangle>_vars \\<longrightarrow>\n     \\<circle>($pc2 = #a)\n\ngoal (2 subgoals):\n 1. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n 2. |~ $pc2 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #g)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n 2. |~ $pc2 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #g)", "show \"|~ $pc2 = #g \\<and> Unchanged vars \\<longrightarrow> \\<circle>($pc2 = #g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc2 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #g)", "by (auto simp: vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc2 = #g \\<and> Unchanged vars \\<longrightarrow> \\<circle>($pc2 = #g)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "have \"\\<turnstile> $pc2 = #g \\<longrightarrow> Enabled \\<langle>n2\\<rangle>_vars\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc2 = #g \\<longrightarrow>\n                 Enabled \\<langle>n2\\<rangle>_vars", "unfolding enab_n2[int_rewrite]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc2 = #g \\<longrightarrow>\n                 $pc2 = #a \\<longrightarrow> #0 < $sem", "by (auto simp: tla_defs)"], ["proof (state)\nthis:\n  \\<turnstile> $pc2 = #g \\<longrightarrow> Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "hence \"\\<turnstile> \\<box>($pc2 = #g) \\<longrightarrow> Enabled \\<langle>n2\\<rangle>_vars\""], ["proof (prove)\nusing this:\n  \\<turnstile> $pc2 = #g \\<longrightarrow> Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #g) \\<longrightarrow>\n                 Enabled \\<langle>n2\\<rangle>_vars", "by (rule lift_imp_trans[OF ax1])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>($pc2 = #g) \\<longrightarrow>\n               Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "hence \"\\<turnstile> \\<box>($pc2 = #g) \\<longrightarrow> \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>($pc2 = #g) \\<longrightarrow>\n               Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #g) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "by (rule lift_imp_trans[OF _ E3])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>($pc2 = #g) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "thus \"\\<turnstile> \\<box>($pc2 = #g) \\<and> \\<box>[(n1 \\<or> n2) \\<and> \\<not>beta1]_vars \\<and> \\<box>($pc1 = #a \\<and> I)\n                      \\<longrightarrow> \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>($pc2 = #g) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "by auto"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>($pc2 = #g) \\<and>\n               \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               $pc2 = #g \\<leadsto> $pc2 = #a\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc2 = #a \\<and> $pc1 = #a \\<and> I)", "with bg2"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               $pc2 = #b \\<leadsto> $pc2 = #g\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               $pc2 = #g \\<leadsto> $pc2 = #a", "have \"\\<turnstile> ?G \\<longrightarrow> ($pc2 = #b \\<leadsto> $pc2 = #a)\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               $pc2 = #b \\<leadsto> $pc2 = #g\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               $pc2 = #g \\<leadsto> $pc2 = #a\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 $pc2 = #b \\<leadsto> $pc2 = #a", "by (force elim: LT13[unlift_rule])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               $pc2 = #b \\<leadsto> $pc2 = #a\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc2 = #a \\<and> $pc1 = #a \\<and> I)", "with ga2"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               $pc2 = #g \\<leadsto> $pc2 = #a\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               $pc2 = #b \\<leadsto> $pc2 = #a", "have \"\\<turnstile> ?G \\<longrightarrow> ($pc2 = #a \\<or> $pc2 = #b \\<or> $pc2 = #g) \\<leadsto> ($pc2 = #a)\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               $pc2 = #g \\<leadsto> $pc2 = #a\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               $pc2 = #b \\<leadsto> $pc2 = #a\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 $pc2 = #a \\<or>\n                 $pc2 = #b \\<or> $pc2 = #g \\<leadsto> $pc2 = #a", "unfolding LT17[int_rewrite] LT1[int_rewrite]"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               $pc2 = #g \\<leadsto> $pc2 = #a\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               $pc2 = #b \\<leadsto> $pc2 = #a\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 #True \\<and>\n                 ($pc2 = #b \\<leadsto> $pc2 = #a) \\<and>\n                 ($pc2 = #g \\<leadsto> $pc2 = #a)", "by force"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               $pc2 = #a \\<or>\n               $pc2 = #b \\<or> $pc2 = #g \\<leadsto> $pc2 = #a\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc2 = #a \\<and> $pc1 = #a \\<and> I)", "moreover"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               $pc2 = #a \\<or>\n               $pc2 = #b \\<or> $pc2 = #g \\<leadsto> $pc2 = #a\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc2 = #a \\<and> $pc1 = #a \\<and> I)", "have \"\\<turnstile> $pc2 = #a \\<or> $pc2 = #b \\<or> $pc2 = #g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc2 = #a \\<or> $pc2 = #b \\<or> $pc2 = #g", "proof (clarsimp simp: tla_defs)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>pc2 (w 0) \\<noteq> a; pc2 (w 0) \\<noteq> g\\<rbrakk>\n       \\<Longrightarrow> pc2 (w 0) = b", "fix s :: \"state seq\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>pc2 (w 0) \\<noteq> a; pc2 (w 0) \\<noteq> g\\<rbrakk>\n       \\<Longrightarrow> pc2 (w 0) = b", "assume \"pc2 (s 0) \\<noteq> a\" and \"pc2 (s 0) \\<noteq> g\""], ["proof (state)\nthis:\n  pc2 (s 0) \\<noteq> a\n  pc2 (s 0) \\<noteq> g\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>pc2 (w 0) \\<noteq> a; pc2 (w 0) \\<noteq> g\\<rbrakk>\n       \\<Longrightarrow> pc2 (w 0) = b", "thus \"pc2 (s 0) = b\""], ["proof (prove)\nusing this:\n  pc2 (s 0) \\<noteq> a\n  pc2 (s 0) \\<noteq> g\n\ngoal (1 subgoal):\n 1. pc2 (s 0) = b", "by (cases \"pc2 (s 0)\") auto"], ["proof (state)\nthis:\n  pc2 (s 0) = b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> $pc2 = #a \\<or> $pc2 = #b \\<or> $pc2 = #g\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc2 = #a \\<and> $pc1 = #a \\<and> I)", "hence \"\\<turnstile> (($pc2 = #a \\<or> $pc2 = #b \\<or> $pc2 = #g) \\<leadsto> $pc2 = #a) \\<longrightarrow> \\<diamond>($pc2 = #a)\""], ["proof (prove)\nusing this:\n  \\<turnstile> $pc2 = #a \\<or> $pc2 = #b \\<or> $pc2 = #g\n\ngoal (1 subgoal):\n 1. \\<turnstile> ($pc2 = #a \\<or>\n                  $pc2 = #b \\<or>\n                  $pc2 = #g \\<leadsto> $pc2 = #a) \\<longrightarrow>\n                 \\<diamond>($pc2 = #a)", "by (rule fmp[OF _ LT4])"], ["proof (state)\nthis:\n  \\<turnstile> ($pc2 = #a \\<or>\n                $pc2 = #b \\<or>\n                $pc2 = #g \\<leadsto> $pc2 = #a) \\<longrightarrow>\n               \\<diamond>($pc2 = #a)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc2 = #a \\<and> $pc1 = #a \\<and> I)", "ultimately"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               $pc2 = #a \\<or>\n               $pc2 = #b \\<or> $pc2 = #g \\<leadsto> $pc2 = #a\n  \\<turnstile> ($pc2 = #a \\<or>\n                $pc2 = #b \\<or>\n                $pc2 = #g \\<leadsto> $pc2 = #a) \\<longrightarrow>\n               \\<diamond>($pc2 = #a)", "have \"\\<turnstile> ?G \\<longrightarrow> \\<diamond>($pc2 = #a)\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               $pc2 = #a \\<or>\n               $pc2 = #b \\<or> $pc2 = #g \\<leadsto> $pc2 = #a\n  \\<turnstile> ($pc2 = #a \\<or>\n                $pc2 = #b \\<or>\n                $pc2 = #g \\<leadsto> $pc2 = #a) \\<longrightarrow>\n               \\<diamond>($pc2 = #a)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc2 = #a)", "by force"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>($pc2 = #a)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc2 = #a \\<and> $pc1 = #a \\<and> I)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>($pc2 = #a)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc2 = #a \\<and> $pc1 = #a \\<and> I)", "by (auto intro!: SE3[unlift_rule])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>($pc2 = #a \\<and> $pc1 = #a \\<and> I)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>($pc2 = #a \\<and> $pc1 = #a \\<and> I)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "moreover"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>($pc2 = #a \\<and> $pc1 = #a \\<and> I)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "have \"\\<turnstile> \\<diamond>($pc2 = #a \\<and> $pc1 = #a \\<and> I) \\<longrightarrow> \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<diamond>($pc2 = #a \\<and>\n                            $pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "unfolding enab_n1[int_rewrite]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<diamond>($pc2 = #a \\<and>\n                            $pc1 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc1 = #a \\<longrightarrow> #0 < $sem)", "by (rule STL4_eve) (auto simp: I_def tla_defs)"], ["proof (state)\nthis:\n  \\<turnstile> \\<diamond>($pc2 = #a \\<and>\n                          $pc1 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "ultimately"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>($pc2 = #a \\<and> $pc1 = #a \\<and> I)\n  \\<turnstile> \\<diamond>($pc2 = #a \\<and>\n                          $pc1 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "show \"\\<turnstile> \\<box>($pc1 = #a) \\<and> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and> \\<box>(I \\<and> SF(n2)_vars)\n                  \\<longrightarrow> \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>($pc1 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>($pc2 = #a \\<and> $pc1 = #a \\<and> I)\n  \\<turnstile> \\<diamond>($pc2 = #a \\<and>\n                          $pc1 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "by (force simp: STL5[int_rewrite])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>($pc1 = #a) \\<and>\n               \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               $pc1 = #a \\<leadsto> $pc1 = #b\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>($pc1 = #b)", "from ga ab"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               $pc1 = #g \\<leadsto> $pc1 = #a\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               $pc1 = #a \\<leadsto> $pc1 = #b", "have \"\\<turnstile> ?F \\<longrightarrow> ($pc1 = #g \\<leadsto> $pc1 = #b)\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               $pc1 = #g \\<leadsto> $pc1 = #a\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               $pc1 = #a \\<leadsto> $pc1 = #b\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 $pc1 = #g \\<leadsto> $pc1 = #b", "by (force elim: LT13[unlift_rule])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               $pc1 = #g \\<leadsto> $pc1 = #b\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>($pc1 = #b)", "with ab"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               $pc1 = #a \\<leadsto> $pc1 = #b\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               $pc1 = #g \\<leadsto> $pc1 = #b", "have \"\\<turnstile> ?F \\<longrightarrow> (($pc1 = #a \\<or> $pc1 = #b \\<or> $pc1 = #g) \\<leadsto> $pc1 = #b)\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               $pc1 = #a \\<leadsto> $pc1 = #b\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               $pc1 = #g \\<leadsto> $pc1 = #b\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 $pc1 = #a \\<or>\n                 $pc1 = #b \\<or> $pc1 = #g \\<leadsto> $pc1 = #b", "unfolding LT17[int_rewrite] LT1[int_rewrite]"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               $pc1 = #a \\<leadsto> $pc1 = #b\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               $pc1 = #g \\<leadsto> $pc1 = #b\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 ($pc1 = #a \\<leadsto> $pc1 = #b) \\<and>\n                 #True \\<and> ($pc1 = #g \\<leadsto> $pc1 = #b)", "by force"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               $pc1 = #a \\<or>\n               $pc1 = #b \\<or> $pc1 = #g \\<leadsto> $pc1 = #b\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>($pc1 = #b)", "moreover"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               $pc1 = #a \\<or>\n               $pc1 = #b \\<or> $pc1 = #g \\<leadsto> $pc1 = #b\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>($pc1 = #b)", "have \"\\<turnstile> $pc1 = #a \\<or> $pc1 = #b \\<or> $pc1 = #g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc1 = #a \\<or> $pc1 = #b \\<or> $pc1 = #g", "proof (clarsimp simp: tla_defs)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>pc1 (w 0) \\<noteq> a; pc1 (w 0) \\<noteq> g\\<rbrakk>\n       \\<Longrightarrow> pc1 (w 0) = b", "fix s :: \"state seq\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>pc1 (w 0) \\<noteq> a; pc1 (w 0) \\<noteq> g\\<rbrakk>\n       \\<Longrightarrow> pc1 (w 0) = b", "assume \"pc1 (s 0) \\<noteq> a\" and \"pc1 (s 0) \\<noteq> g\""], ["proof (state)\nthis:\n  pc1 (s 0) \\<noteq> a\n  pc1 (s 0) \\<noteq> g\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>pc1 (w 0) \\<noteq> a; pc1 (w 0) \\<noteq> g\\<rbrakk>\n       \\<Longrightarrow> pc1 (w 0) = b", "thus \"pc1 (s 0) = b\""], ["proof (prove)\nusing this:\n  pc1 (s 0) \\<noteq> a\n  pc1 (s 0) \\<noteq> g\n\ngoal (1 subgoal):\n 1. pc1 (s 0) = b", "by (cases \"pc1 (s 0)\", auto)"], ["proof (state)\nthis:\n  pc1 (s 0) = b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> $pc1 = #a \\<or> $pc1 = #b \\<or> $pc1 = #g\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>($pc1 = #b)", "hence \"\\<turnstile> (($pc1 = #a \\<or> $pc1 = #b \\<or> $pc1 = #g) \\<leadsto> $pc1 = #b) \\<longrightarrow> \\<diamond>($pc1 = #b)\""], ["proof (prove)\nusing this:\n  \\<turnstile> $pc1 = #a \\<or> $pc1 = #b \\<or> $pc1 = #g\n\ngoal (1 subgoal):\n 1. \\<turnstile> ($pc1 = #a \\<or>\n                  $pc1 = #b \\<or>\n                  $pc1 = #g \\<leadsto> $pc1 = #b) \\<longrightarrow>\n                 \\<diamond>($pc1 = #b)", "by (rule fmp[OF _ LT4])"], ["proof (state)\nthis:\n  \\<turnstile> ($pc1 = #a \\<or>\n                $pc1 = #b \\<or>\n                $pc1 = #g \\<leadsto> $pc1 = #b) \\<longrightarrow>\n               \\<diamond>($pc1 = #b)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>($pc1 = #b)", "ultimately"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               $pc1 = #a \\<or>\n               $pc1 = #b \\<or> $pc1 = #g \\<leadsto> $pc1 = #b\n  \\<turnstile> ($pc1 = #a \\<or>\n                $pc1 = #b \\<or>\n                $pc1 = #g \\<leadsto> $pc1 = #b) \\<longrightarrow>\n               \\<diamond>($pc1 = #b)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               $pc1 = #a \\<or>\n               $pc1 = #b \\<or> $pc1 = #g \\<leadsto> $pc1 = #b\n  \\<turnstile> ($pc1 = #a \\<or>\n                $pc1 = #b \\<or>\n                $pc1 = #g \\<leadsto> $pc1 = #b) \\<longrightarrow>\n               \\<diamond>($pc1 = #b)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n                 \\<diamond>($pc1 = #b)", "by (rule lift_imp_trans)"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               \\<diamond>($pc1 = #b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               \\<diamond>($pc1 = #b)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m1\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc1 = #b)", "with 1"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and>\n                      \\<not> beta1]_vars \\<longrightarrow>\n               \\<diamond>($pc1 = #b) \\<longrightarrow>\n               \\<diamond>\\<box>($pc1 = #b)\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               \\<diamond>($pc1 = #b)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and>\n                      \\<not> beta1]_vars \\<longrightarrow>\n               \\<diamond>($pc1 = #b) \\<longrightarrow>\n               \\<diamond>\\<box>($pc1 = #b)\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               \\<diamond>($pc1 = #b)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>(I \\<and> SF(n2)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m1\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc1 = #b)", "by force"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<and>\n               \\<box>\\<diamond>Enabled \\<langle>m1\\<rangle>_(x,\n                       y) \\<longrightarrow>\n               \\<diamond>\\<box>($pc1 = #b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta1]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<and>\n               \\<box>\\<diamond>Enabled \\<langle>m1\\<rangle>_(x,\n                       y) \\<longrightarrow>\n               \\<diamond>\\<box>($pc1 = #b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[n1 \\<or> n2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               SF(m1)_(x, y)\n\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> SF(m1)_(x, y)", "with psiI"], ["proof (chain)\npicking this:\n  \\<turnstile> psi \\<longrightarrow> \\<box>I\n  \\<turnstile> \\<box>[n1 \\<or> n2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               SF(m1)_(x, y)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<turnstile> psi \\<longrightarrow> \\<box>I\n  \\<turnstile> \\<box>[n1 \\<or> n2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>(I \\<and> SF(n2)_vars) \\<longrightarrow>\n               SF(m1)_(x, y)\n\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> SF(m1)_(x, y)", "unfolding psi_def Live2_def STL5[int_rewrite]"], ["proof (prove)\nusing this:\n  \\<turnstile> initPsi \\<and>\n               \\<box>[n1 \\<or> n2]_vars \\<and>\n               SF(n1)_vars \\<and> SF(n2)_vars \\<longrightarrow>\n               \\<box>I\n  \\<turnstile> \\<box>[n1 \\<or> n2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>I \\<and> \\<box>SF(n2)_vars \\<longrightarrow>\n               SF(m1)_(x, y)\n\ngoal (1 subgoal):\n 1. \\<turnstile> initPsi \\<and>\n                 \\<box>[n1 \\<or> n2]_vars \\<and>\n                 SF(n1)_vars \\<and> SF(n2)_vars \\<longrightarrow>\n                 SF(m1)_(x, y)", "by force"], ["proof (state)\nthis:\n  \\<turnstile> psi \\<longrightarrow> SF(m1)_(x, y)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  In the same way we prove that \\<open>psi\\<close> implements strong fairness\n  for the abstract action \\<open>m1\\<close>. The proof is obtained by copy and paste\n  from the previous one.\n\\<close>"], ["", "lemma (in Secondprogram) psi_fair_m2: \"\\<turnstile> psi \\<longrightarrow> SF(m2)_(x,y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> SF(m2)_(x, y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> SF(m2)_(x, y)", "have \"\\<turnstile> \\<box>[n1 \\<or> n2]_vars \\<and> SF(n2)_vars \\<and> \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow> SF(m2)_(x,y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[n1 \\<or> n2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 SF(m2)_(x, y)", "proof (rule SF2)"], ["proof (state)\ngoal (4 subgoals):\n 1. |~ \\<langle>(n1 \\<or> n2) \\<and> ?B\\<rangle>_vars \\<longrightarrow>\n       \\<langle>m2\\<rangle>_(x, y)\n 2. |~ ?P \\<and>\n       \\<circle>?P \\<and>\n       \\<langle>(n1 \\<or> n2) \\<and> n2\\<rangle>_vars \\<longrightarrow>\n       ?B\n 3. \\<turnstile> ?P \\<and>\n                 Enabled \\<langle>m2\\<rangle>_(x, y) \\<longrightarrow>\n                 Enabled \\<langle>n2\\<rangle>_vars\n 4. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> ?B]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m2\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>?P", "txt \\<open>\n      Rule \\<open>SF2\\<close> requires us to choose a helpful action (whose effect implies\n      \\<open>\\<langle>m2\\<rangle>_(x,y)\\<close>) and a persistent condition, which will eventually remain\n      true if the helpful action is never executed. In our case, the helpful action\n      is \\<open>beta2\\<close> and the persistent condition is \\<open>pc2 = b\\<close>.\n\\<close>"], ["proof (state)\ngoal (4 subgoals):\n 1. |~ \\<langle>(n1 \\<or> n2) \\<and> ?B\\<rangle>_vars \\<longrightarrow>\n       \\<langle>m2\\<rangle>_(x, y)\n 2. |~ ?P \\<and>\n       \\<circle>?P \\<and>\n       \\<langle>(n1 \\<or> n2) \\<and> n2\\<rangle>_vars \\<longrightarrow>\n       ?B\n 3. \\<turnstile> ?P \\<and>\n                 Enabled \\<langle>m2\\<rangle>_(x, y) \\<longrightarrow>\n                 Enabled \\<langle>n2\\<rangle>_vars\n 4. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> ?B]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m2\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>?P", "show \"|~ \\<langle>(n1 \\<or> n2) \\<and> beta2\\<rangle>_vars \\<longrightarrow> \\<langle>m2\\<rangle>_(x,y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ \\<langle>(n1 \\<or> n2) \\<and> beta2\\<rangle>_vars \\<longrightarrow>\n       \\<langle>m2\\<rangle>_(x, y)", "by (auto simp: beta2_def m2_def vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ \\<langle>(n1 \\<or> n2) \\<and> beta2\\<rangle>_vars \\<longrightarrow>\n     \\<langle>m2\\<rangle>_(x, y)\n\ngoal (3 subgoals):\n 1. |~ ?P \\<and>\n       \\<circle>?P \\<and>\n       \\<langle>(n1 \\<or> n2) \\<and> n2\\<rangle>_vars \\<longrightarrow>\n       beta2\n 2. \\<turnstile> ?P \\<and>\n                 Enabled \\<langle>m2\\<rangle>_(x, y) \\<longrightarrow>\n                 Enabled \\<langle>n2\\<rangle>_vars\n 3. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m2\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>?P", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. |~ ?P \\<and>\n       \\<circle>?P \\<and>\n       \\<langle>(n1 \\<or> n2) \\<and> n2\\<rangle>_vars \\<longrightarrow>\n       beta2\n 2. \\<turnstile> ?P \\<and>\n                 Enabled \\<langle>m2\\<rangle>_(x, y) \\<longrightarrow>\n                 Enabled \\<langle>n2\\<rangle>_vars\n 3. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m2\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>?P", "show \"|~ $pc2 = #b \\<and> \\<circle>($pc2 = #b) \\<and> \\<langle>(n1 \\<or> n2) \\<and> n2\\<rangle>_vars \\<longrightarrow> beta2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc2 = #b \\<and>\n       \\<circle>($pc2 = #b) \\<and>\n       \\<langle>(n1 \\<or> n2) \\<and> n2\\<rangle>_vars \\<longrightarrow>\n       beta2", "by (auto simp: n2_def alpha2_def beta2_def gamma2_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc2 = #b \\<and>\n     \\<circle>($pc2 = #b) \\<and>\n     \\<langle>(n1 \\<or> n2) \\<and> n2\\<rangle>_vars \\<longrightarrow>\n     beta2\n\ngoal (2 subgoals):\n 1. \\<turnstile> $pc2 = #b \\<and>\n                 Enabled \\<langle>m2\\<rangle>_(x, y) \\<longrightarrow>\n                 Enabled \\<langle>n2\\<rangle>_vars\n 2. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m2\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc2 = #b)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<turnstile> $pc2 = #b \\<and>\n                 Enabled \\<langle>m2\\<rangle>_(x, y) \\<longrightarrow>\n                 Enabled \\<langle>n2\\<rangle>_vars\n 2. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m2\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc2 = #b)", "show \"\\<turnstile> $pc2 = #b \\<and> Enabled \\<langle>m2\\<rangle>_(x, y) \\<longrightarrow> Enabled \\<langle>n2\\<rangle>_vars\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc2 = #b \\<and>\n                 Enabled \\<langle>m2\\<rangle>_(x, y) \\<longrightarrow>\n                 Enabled \\<langle>n2\\<rangle>_vars", "unfolding enab_n2[int_rewrite]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc2 = #b \\<and>\n                 Enabled \\<langle>m2\\<rangle>_(x, y) \\<longrightarrow>\n                 $pc2 = #a \\<longrightarrow> #0 < $sem", "by auto"], ["proof (state)\nthis:\n  \\<turnstile> $pc2 = #b \\<and>\n               Enabled \\<langle>m2\\<rangle>_(x, y) \\<longrightarrow>\n               Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m2\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc2 = #b)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m2\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc2 = #b)", "txt \\<open>\n      The difficult part of the proof is showing that the persistent condition\n      will eventually always be true if the helpful action is never executed.\n      We show that (1) whenever the condition becomes true it remains so and\n      (2) eventually the condition must be true.\n\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m2\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc2 = #b)", "show \"\\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars\n            \\<and> SF(n2)_vars \\<and> \\<box>(I \\<and> SF(n1)_vars) \\<and> \\<box>\\<diamond>Enabled \\<langle>m2\\<rangle>_(x, y)\n            \\<longrightarrow> \\<diamond>\\<box>($pc2 = #b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m2\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc2 = #b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m2\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc2 = #b)", "have \"\\<turnstile> \\<box>\\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<longrightarrow> \\<box>($pc2 = #b \\<longrightarrow> \\<box>($pc2 = #b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>\\<box>[(n1 \\<or> n2) \\<and>\n                              \\<not> beta2]_vars \\<longrightarrow>\n                 \\<box>($pc2 = #b \\<longrightarrow> \\<box>($pc2 = #b))", "proof (rule STL4)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and>\n                        \\<not> beta2]_vars \\<longrightarrow>\n                 $pc2 = #b \\<longrightarrow> \\<box>($pc2 = #b)", "have \"|~ $pc2 = #b \\<and> [(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<longrightarrow> \\<circle>($pc2 = #b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc2 = #b \\<and>\n       _actrans ((n1 \\<or> n2) \\<and> \\<not> beta2) vars \\<longrightarrow>\n       \\<circle>($pc2 = #b)", "by (auto simp: Sact2_defs vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc2 = #b \\<and>\n     _actrans ((n1 \\<or> n2) \\<and> \\<not> beta2) vars \\<longrightarrow>\n     \\<circle>($pc2 = #b)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and>\n                        \\<not> beta2]_vars \\<longrightarrow>\n                 $pc2 = #b \\<longrightarrow> \\<box>($pc2 = #b)", "from this[THEN INV1]"], ["proof (chain)\npicking this:\n  \\<turnstile> $pc2 = #b \\<and>\n               \\<box>[(n1 \\<or> n2) \\<and>\n                      \\<not> beta2]_vars \\<longrightarrow>\n               \\<box>($pc2 = #b)", "show \"\\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<longrightarrow> $pc2 = #b \\<longrightarrow> \\<box>($pc2 = #b)\""], ["proof (prove)\nusing this:\n  \\<turnstile> $pc2 = #b \\<and>\n               \\<box>[(n1 \\<or> n2) \\<and>\n                      \\<not> beta2]_vars \\<longrightarrow>\n               \\<box>($pc2 = #b)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and>\n                        \\<not> beta2]_vars \\<longrightarrow>\n                 $pc2 = #b \\<longrightarrow> \\<box>($pc2 = #b)", "by auto"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and>\n                      \\<not> beta2]_vars \\<longrightarrow>\n               $pc2 = #b \\<longrightarrow> \\<box>($pc2 = #b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>\\<box>[(n1 \\<or> n2) \\<and>\n                            \\<not> beta2]_vars \\<longrightarrow>\n               \\<box>($pc2 = #b \\<longrightarrow> \\<box>($pc2 = #b))\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m2\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc2 = #b)", "hence 1: \"\\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<longrightarrow> \\<diamond>($pc2 = #b) \\<longrightarrow> \\<diamond>\\<box>($pc2 = #b)\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>\\<box>[(n1 \\<or> n2) \\<and>\n                            \\<not> beta2]_vars \\<longrightarrow>\n               \\<box>($pc2 = #b \\<longrightarrow> \\<box>($pc2 = #b))\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and>\n                        \\<not> beta2]_vars \\<longrightarrow>\n                 \\<diamond>($pc2 = #b) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc2 = #b)", "by (force intro: E31[unlift_rule])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and>\n                      \\<not> beta2]_vars \\<longrightarrow>\n               \\<diamond>($pc2 = #b) \\<longrightarrow>\n               \\<diamond>\\<box>($pc2 = #b)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m2\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc2 = #b)", "have \"\\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and> SF(n2)_vars \\<and> \\<box>(I \\<and> SF(n1)_vars)\n              \\<longrightarrow> \\<diamond>($pc2 = #b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>($pc2 = #b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>($pc2 = #b)", "txt \\<open>\n          The plan of the proof is to show that from any state where \\<open>pc2 = g\\<close>\n          one eventually reaches \\<open>pc2 = a\\<close>, from where one eventually reaches\n          \\<open>pc2 = b\\<close>. The result follows by combining leadsto properties.\n\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>($pc2 = #b)", "let ?F = \"LIFT (\\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and> SF(n2)_vars \\<and> \\<box>(I \\<and> SF(n1)_vars))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>($pc2 = #b)", "txt \\<open>\n          Showing that \\<open>pc2 = g\\<close> leads to \\<open>pc2 = a\\<close> is a simple\n          application of rule \\<open>SF1\\<close> because the second process completely\n          controls this transition.\n\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>($pc2 = #b)", "have ga: \"\\<turnstile> ?F \\<longrightarrow> ($pc2 = #g \\<leadsto> $pc2 = #a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 $pc2 = #g \\<leadsto> $pc2 = #a", "proof (rule SF1)"], ["proof (state)\ngoal (4 subgoals):\n 1. |~ $pc2 = #g \\<and>\n       _actrans ((n1 \\<or> n2) \\<and> \\<not> beta2) vars \\<longrightarrow>\n       \\<circle>($pc2 = #g) \\<or> \\<circle>($pc2 = #a)\n 2. |~ $pc2 = #g \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and>\n                n2\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc2 = #a)\n 3. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n 4. |~ $pc2 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #g)", "show \"|~ $pc2 = #g \\<and> [(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<longrightarrow> \\<circle>($pc2 = #g) \\<or> \\<circle>($pc2 = #a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc2 = #g \\<and>\n       _actrans ((n1 \\<or> n2) \\<and> \\<not> beta2) vars \\<longrightarrow>\n       \\<circle>($pc2 = #g) \\<or> \\<circle>($pc2 = #a)", "by (auto simp: Sact2_defs vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc2 = #g \\<and>\n     _actrans ((n1 \\<or> n2) \\<and> \\<not> beta2) vars \\<longrightarrow>\n     \\<circle>($pc2 = #g) \\<or> \\<circle>($pc2 = #a)\n\ngoal (3 subgoals):\n 1. |~ $pc2 = #g \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and>\n                n2\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc2 = #a)\n 2. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n 3. |~ $pc2 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #g)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. |~ $pc2 = #g \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and>\n                n2\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc2 = #a)\n 2. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n 3. |~ $pc2 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #g)", "show \"|~ $pc2 = #g \\<and> \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and> n2\\<rangle>_vars \\<longrightarrow> \\<circle>($pc2 = #a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc2 = #g \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and>\n                n2\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc2 = #a)", "by (auto simp: n2_def alpha2_def beta2_def gamma2_def vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc2 = #g \\<and>\n     \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and>\n              n2\\<rangle>_vars \\<longrightarrow>\n     \\<circle>($pc2 = #a)\n\ngoal (2 subgoals):\n 1. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n 2. |~ $pc2 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #g)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n 2. |~ $pc2 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #g)", "show \"|~ $pc2 = #g \\<and> Unchanged vars \\<longrightarrow> \\<circle>($pc2 = #g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc2 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #g)", "by (auto simp: vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc2 = #g \\<and> Unchanged vars \\<longrightarrow> \\<circle>($pc2 = #g)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "have \"\\<turnstile> $pc2 = #g \\<longrightarrow> Enabled \\<langle>n2\\<rangle>_vars\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc2 = #g \\<longrightarrow>\n                 Enabled \\<langle>n2\\<rangle>_vars", "unfolding enab_n2[int_rewrite]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc2 = #g \\<longrightarrow>\n                 $pc2 = #a \\<longrightarrow> #0 < $sem", "by (auto simp: tla_defs)"], ["proof (state)\nthis:\n  \\<turnstile> $pc2 = #g \\<longrightarrow> Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "hence \"\\<turnstile> \\<box>($pc2 = #g) \\<longrightarrow> Enabled \\<langle>n2\\<rangle>_vars\""], ["proof (prove)\nusing this:\n  \\<turnstile> $pc2 = #g \\<longrightarrow> Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #g) \\<longrightarrow>\n                 Enabled \\<langle>n2\\<rangle>_vars", "by (rule lift_imp_trans[OF ax1])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>($pc2 = #g) \\<longrightarrow>\n               Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "hence \"\\<turnstile> \\<box>($pc2 = #g) \\<longrightarrow> \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>($pc2 = #g) \\<longrightarrow>\n               Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #g) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "by (rule lift_imp_trans[OF _ E3])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>($pc2 = #g) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "thus \"\\<turnstile> \\<box>($pc2 = #g) \\<and> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and> \\<box>(I \\<and> SF(n1)_vars)\n                  \\<longrightarrow> \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>($pc2 = #g) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "by auto"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>($pc2 = #g) \\<and>\n               \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               $pc2 = #g \\<leadsto> $pc2 = #a\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>($pc2 = #b)", "txt \\<open>\n          The proof that \\<open>pc2 = a\\<close> leads to \\<open>pc2 = b\\<close> follows\n          the same basic schema. However, showing that \\<open>n2\\<close> is eventually\n          enabled requires reasoning about the second process, which must liberate\n          the critical section.\n\\<close>"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               $pc2 = #g \\<leadsto> $pc2 = #a\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>($pc2 = #b)", "have ab: \"\\<turnstile> ?F \\<longrightarrow> ($pc2 = #a \\<leadsto> $pc2 = #b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 $pc2 = #a \\<leadsto> $pc2 = #b", "proof (rule SF1)"], ["proof (state)\ngoal (4 subgoals):\n 1. |~ $pc2 = #a \\<and>\n       _actrans ((n1 \\<or> n2) \\<and> \\<not> beta2) vars \\<longrightarrow>\n       \\<circle>($pc2 = #a) \\<or> \\<circle>($pc2 = #b)\n 2. |~ $pc2 = #a \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and>\n                n2\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc2 = #b)\n 3. \\<turnstile> \\<box>($pc2 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n 4. |~ $pc2 = #a \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #a)", "show \"|~ $pc2 = #a \\<and> [(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<longrightarrow> \\<circle>($pc2 = #a) \\<or> \\<circle>($pc2 = #b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc2 = #a \\<and>\n       _actrans ((n1 \\<or> n2) \\<and> \\<not> beta2) vars \\<longrightarrow>\n       \\<circle>($pc2 = #a) \\<or> \\<circle>($pc2 = #b)", "by (auto simp: Sact2_defs vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc2 = #a \\<and>\n     _actrans ((n1 \\<or> n2) \\<and> \\<not> beta2) vars \\<longrightarrow>\n     \\<circle>($pc2 = #a) \\<or> \\<circle>($pc2 = #b)\n\ngoal (3 subgoals):\n 1. |~ $pc2 = #a \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and>\n                n2\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc2 = #b)\n 2. \\<turnstile> \\<box>($pc2 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n 3. |~ $pc2 = #a \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #a)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. |~ $pc2 = #a \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and>\n                n2\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc2 = #b)\n 2. \\<turnstile> \\<box>($pc2 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n 3. |~ $pc2 = #a \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #a)", "show \"|~ $pc2 = #a \\<and> \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and> n2\\<rangle>_vars \\<longrightarrow> \\<circle>($pc2 = #b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc2 = #a \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and>\n                n2\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc2 = #b)", "by (auto simp: n2_def alpha2_def beta2_def gamma2_def vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc2 = #a \\<and>\n     \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and>\n              n2\\<rangle>_vars \\<longrightarrow>\n     \\<circle>($pc2 = #b)\n\ngoal (2 subgoals):\n 1. \\<turnstile> \\<box>($pc2 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n 2. |~ $pc2 = #a \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #a)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<turnstile> \\<box>($pc2 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n 2. |~ $pc2 = #a \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #a)", "show \"|~ $pc2 = #a \\<and> Unchanged vars \\<longrightarrow> \\<circle>($pc2 = #a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc2 = #a \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc2 = #a)", "by (auto simp: vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc2 = #a \\<and> Unchanged vars \\<longrightarrow> \\<circle>($pc2 = #a)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "txt \\<open>We establish a suitable leadsto-chain.\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "let ?G = \"LIFT \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and> SF(n1)_vars \\<and> \\<box>($pc2 = #a \\<and> I)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "have \"\\<turnstile> ?G \\<longrightarrow> \\<diamond>($pc1 = #a \\<and> $pc2 = #a \\<and> I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc1 = #a \\<and> $pc2 = #a \\<and> I)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc1 = #a \\<and> $pc2 = #a \\<and> I)", "txt \\<open>Rule \\<open>SF1\\<close> takes us from \\<open>pc1 = b\\<close> to \\<open>pc1 = g\\<close>.\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc1 = #a \\<and> $pc2 = #a \\<and> I)", "have bg1: \"\\<turnstile> ?G \\<longrightarrow> ($pc1 = #b \\<leadsto> $pc1 = #g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 $pc1 = #b \\<leadsto> $pc1 = #g", "proof (rule SF1)"], ["proof (state)\ngoal (4 subgoals):\n 1. |~ $pc1 = #b \\<and>\n       _actrans ((n1 \\<or> n2) \\<and> \\<not> beta2) vars \\<longrightarrow>\n       \\<circle>($pc1 = #b) \\<or> \\<circle>($pc1 = #g)\n 2. |~ $pc1 = #b \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and>\n                n1\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc1 = #g)\n 3. \\<turnstile> \\<box>($pc1 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n 4. |~ $pc1 = #b \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #b)", "show \"|~ $pc1 = #b \\<and> [(n1 \\<or> n2) \\<and> \\<not>beta2]_vars \\<longrightarrow> \\<circle>($pc1 = #b) \\<or> \\<circle>($pc1 = #g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc1 = #b \\<and>\n       _actrans ((n1 \\<or> n2) \\<and> \\<not> beta2) vars \\<longrightarrow>\n       \\<circle>($pc1 = #b) \\<or> \\<circle>($pc1 = #g)", "by (auto simp: Sact2_defs vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc1 = #b \\<and>\n     _actrans ((n1 \\<or> n2) \\<and> \\<not> beta2) vars \\<longrightarrow>\n     \\<circle>($pc1 = #b) \\<or> \\<circle>($pc1 = #g)\n\ngoal (3 subgoals):\n 1. |~ $pc1 = #b \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and>\n                n1\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc1 = #g)\n 2. \\<turnstile> \\<box>($pc1 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n 3. |~ $pc1 = #b \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #b)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. |~ $pc1 = #b \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and>\n                n1\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc1 = #g)\n 2. \\<turnstile> \\<box>($pc1 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n 3. |~ $pc1 = #b \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #b)", "show \"|~ $pc1 = #b \\<and> \\<langle>((n1 \\<or> n2) \\<and> \\<not>beta2) \\<and> n1\\<rangle>_vars \\<longrightarrow> \\<circle>($pc1 = #g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc1 = #b \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and>\n                n1\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc1 = #g)", "by (auto simp: n1_def alpha1_def beta1_def gamma1_def vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc1 = #b \\<and>\n     \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and>\n              n1\\<rangle>_vars \\<longrightarrow>\n     \\<circle>($pc1 = #g)\n\ngoal (2 subgoals):\n 1. \\<turnstile> \\<box>($pc1 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n 2. |~ $pc1 = #b \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #b)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<turnstile> \\<box>($pc1 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n 2. |~ $pc1 = #b \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #b)", "show \"|~ $pc1 = #b \\<and> Unchanged vars \\<longrightarrow> \\<circle>($pc1 = #b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc1 = #b \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #b)", "by (auto simp: vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc1 = #b \\<and> Unchanged vars \\<longrightarrow> \\<circle>($pc1 = #b)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "have \"\\<turnstile> $pc1 = #b \\<longrightarrow> Enabled \\<langle>n1\\<rangle>_vars\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc1 = #b \\<longrightarrow>\n                 Enabled \\<langle>n1\\<rangle>_vars", "unfolding enab_n1[int_rewrite]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc1 = #b \\<longrightarrow>\n                 $pc1 = #a \\<longrightarrow> #0 < $sem", "by (auto simp: tla_defs)"], ["proof (state)\nthis:\n  \\<turnstile> $pc1 = #b \\<longrightarrow> Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "hence \"\\<turnstile> \\<box>($pc1 = #b) \\<longrightarrow> Enabled \\<langle>n1\\<rangle>_vars\""], ["proof (prove)\nusing this:\n  \\<turnstile> $pc1 = #b \\<longrightarrow> Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #b) \\<longrightarrow>\n                 Enabled \\<langle>n1\\<rangle>_vars", "by (rule lift_imp_trans[OF ax1])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>($pc1 = #b) \\<longrightarrow>\n               Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "hence \"\\<turnstile> \\<box>($pc1 = #b) \\<longrightarrow> \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>($pc1 = #b) \\<longrightarrow>\n               Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #b) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "by (rule lift_imp_trans[OF _ E3])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>($pc1 = #b) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "thus \"\\<turnstile> \\<box>($pc1 = #b) \\<and> \\<box>[(n1 \\<or> n2) \\<and> \\<not>beta2]_vars \\<and> \\<box>($pc2 = #a \\<and> I)\n                      \\<longrightarrow> \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>($pc1 = #b) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #b) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "by auto"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>($pc1 = #b) \\<and>\n               \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               $pc1 = #b \\<leadsto> $pc1 = #g\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc1 = #a \\<and> $pc2 = #a \\<and> I)", "txt \\<open>Similarly, \\<open>pc1 = b\\<close> leads to \\<open>pc1 = g\\<close>.\\<close>"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               $pc1 = #b \\<leadsto> $pc1 = #g\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc1 = #a \\<and> $pc2 = #a \\<and> I)", "have ga1: \"\\<turnstile> ?G \\<longrightarrow> ($pc1 = #g \\<leadsto> $pc1 = #a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 $pc1 = #g \\<leadsto> $pc1 = #a", "proof (rule SF1)"], ["proof (state)\ngoal (4 subgoals):\n 1. |~ $pc1 = #g \\<and>\n       _actrans ((n1 \\<or> n2) \\<and> \\<not> beta2) vars \\<longrightarrow>\n       \\<circle>($pc1 = #g) \\<or> \\<circle>($pc1 = #a)\n 2. |~ $pc1 = #g \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and>\n                n1\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc1 = #a)\n 3. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n 4. |~ $pc1 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #g)", "show \"|~ $pc1 = #g \\<and> [(n1 \\<or> n2) \\<and> \\<not>beta2]_vars \\<longrightarrow> \\<circle>($pc1 = #g) \\<or> \\<circle>($pc1 = #a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc1 = #g \\<and>\n       _actrans ((n1 \\<or> n2) \\<and> \\<not> beta2) vars \\<longrightarrow>\n       \\<circle>($pc1 = #g) \\<or> \\<circle>($pc1 = #a)", "by (auto simp: Sact2_defs vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc1 = #g \\<and>\n     _actrans ((n1 \\<or> n2) \\<and> \\<not> beta2) vars \\<longrightarrow>\n     \\<circle>($pc1 = #g) \\<or> \\<circle>($pc1 = #a)\n\ngoal (3 subgoals):\n 1. |~ $pc1 = #g \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and>\n                n1\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc1 = #a)\n 2. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n 3. |~ $pc1 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #g)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. |~ $pc1 = #g \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and>\n                n1\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc1 = #a)\n 2. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n 3. |~ $pc1 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #g)", "show \"|~ $pc1 = #g \\<and> \\<langle>((n1 \\<or> n2) \\<and> \\<not>beta2) \\<and> n1\\<rangle>_vars \\<longrightarrow> \\<circle>($pc1 = #a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc1 = #g \\<and>\n       \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and>\n                n1\\<rangle>_vars \\<longrightarrow>\n       \\<circle>($pc1 = #a)", "by (auto simp: n1_def alpha1_def beta1_def gamma1_def vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc1 = #g \\<and>\n     \\<langle>((n1 \\<or> n2) \\<and> \\<not> beta2) \\<and>\n              n1\\<rangle>_vars \\<longrightarrow>\n     \\<circle>($pc1 = #a)\n\ngoal (2 subgoals):\n 1. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n 2. |~ $pc1 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #g)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n 2. |~ $pc1 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #g)", "show \"|~ $pc1 = #g \\<and> Unchanged vars \\<longrightarrow> \\<circle>($pc1 = #g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |~ $pc1 = #g \\<and> Unchanged vars \\<longrightarrow>\n       \\<circle>($pc1 = #g)", "by (auto simp: vars_def tla_defs)"], ["proof (state)\nthis:\n  |~ $pc1 = #g \\<and> Unchanged vars \\<longrightarrow> \\<circle>($pc1 = #g)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "have \"\\<turnstile> $pc1 = #g \\<longrightarrow> Enabled \\<langle>n1\\<rangle>_vars\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc1 = #g \\<longrightarrow>\n                 Enabled \\<langle>n1\\<rangle>_vars", "unfolding enab_n1[int_rewrite]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc1 = #g \\<longrightarrow>\n                 $pc1 = #a \\<longrightarrow> #0 < $sem", "by (auto simp: tla_defs)"], ["proof (state)\nthis:\n  \\<turnstile> $pc1 = #g \\<longrightarrow> Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "hence \"\\<turnstile> \\<box>($pc1 = #g) \\<longrightarrow> Enabled \\<langle>n1\\<rangle>_vars\""], ["proof (prove)\nusing this:\n  \\<turnstile> $pc1 = #g \\<longrightarrow> Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #g) \\<longrightarrow>\n                 Enabled \\<langle>n1\\<rangle>_vars", "by (rule lift_imp_trans[OF ax1])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>($pc1 = #g) \\<longrightarrow>\n               Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "hence \"\\<turnstile> \\<box>($pc1 = #g) \\<longrightarrow> \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>($pc1 = #g) \\<longrightarrow>\n               Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #g) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "by (rule lift_imp_trans[OF _ E3])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>($pc1 = #g) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "thus \"\\<turnstile> \\<box>($pc1 = #g) \\<and> \\<box>[(n1 \\<or> n2) \\<and> \\<not>beta2]_vars \\<and> \\<box>($pc2 = #a \\<and> I)\n                      \\<longrightarrow> \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>($pc1 = #g) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc1 = #g) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n1\\<rangle>_vars", "by auto"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>($pc1 = #g) \\<and>\n               \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n1\\<rangle>_vars\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               $pc1 = #g \\<leadsto> $pc1 = #a\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc1 = #a \\<and> $pc2 = #a \\<and> I)", "with bg1"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               $pc1 = #b \\<leadsto> $pc1 = #g\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               $pc1 = #g \\<leadsto> $pc1 = #a", "have \"\\<turnstile> ?G \\<longrightarrow> ($pc1 = #b \\<leadsto> $pc1 = #a)\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               $pc1 = #b \\<leadsto> $pc1 = #g\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               $pc1 = #g \\<leadsto> $pc1 = #a\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 $pc1 = #b \\<leadsto> $pc1 = #a", "by (force elim: LT13[unlift_rule])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               $pc1 = #b \\<leadsto> $pc1 = #a\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc1 = #a \\<and> $pc2 = #a \\<and> I)", "with ga1"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               $pc1 = #g \\<leadsto> $pc1 = #a\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               $pc1 = #b \\<leadsto> $pc1 = #a", "have \"\\<turnstile> ?G \\<longrightarrow> ($pc1 = #a \\<or> $pc1 = #b \\<or> $pc1 = #g) \\<leadsto> ($pc1 = #a)\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               $pc1 = #g \\<leadsto> $pc1 = #a\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               $pc1 = #b \\<leadsto> $pc1 = #a\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 $pc1 = #a \\<or>\n                 $pc1 = #b \\<or> $pc1 = #g \\<leadsto> $pc1 = #a", "unfolding LT17[int_rewrite] LT1[int_rewrite]"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               $pc1 = #g \\<leadsto> $pc1 = #a\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               $pc1 = #b \\<leadsto> $pc1 = #a\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 #True \\<and>\n                 ($pc1 = #b \\<leadsto> $pc1 = #a) \\<and>\n                 ($pc1 = #g \\<leadsto> $pc1 = #a)", "by force"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               $pc1 = #a \\<or>\n               $pc1 = #b \\<or> $pc1 = #g \\<leadsto> $pc1 = #a\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc1 = #a \\<and> $pc2 = #a \\<and> I)", "moreover"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               $pc1 = #a \\<or>\n               $pc1 = #b \\<or> $pc1 = #g \\<leadsto> $pc1 = #a\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc1 = #a \\<and> $pc2 = #a \\<and> I)", "have \"\\<turnstile> $pc1 = #a \\<or> $pc1 = #b \\<or> $pc1 = #g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc1 = #a \\<or> $pc1 = #b \\<or> $pc1 = #g", "proof (clarsimp simp: tla_defs)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>pc1 (w 0) \\<noteq> a; pc1 (w 0) \\<noteq> g\\<rbrakk>\n       \\<Longrightarrow> pc1 (w 0) = b", "fix s :: \"state seq\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>pc1 (w 0) \\<noteq> a; pc1 (w 0) \\<noteq> g\\<rbrakk>\n       \\<Longrightarrow> pc1 (w 0) = b", "assume \"pc1 (s 0) \\<noteq> a\" and \"pc1 (s 0) \\<noteq> g\""], ["proof (state)\nthis:\n  pc1 (s 0) \\<noteq> a\n  pc1 (s 0) \\<noteq> g\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>pc1 (w 0) \\<noteq> a; pc1 (w 0) \\<noteq> g\\<rbrakk>\n       \\<Longrightarrow> pc1 (w 0) = b", "thus \"pc1 (s 0) = b\""], ["proof (prove)\nusing this:\n  pc1 (s 0) \\<noteq> a\n  pc1 (s 0) \\<noteq> g\n\ngoal (1 subgoal):\n 1. pc1 (s 0) = b", "by (cases \"pc1 (s 0)\") auto"], ["proof (state)\nthis:\n  pc1 (s 0) = b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> $pc1 = #a \\<or> $pc1 = #b \\<or> $pc1 = #g\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc1 = #a \\<and> $pc2 = #a \\<and> I)", "hence \"\\<turnstile> (($pc1 = #a \\<or> $pc1 = #b \\<or> $pc1 = #g) \\<leadsto> $pc1 = #a) \\<longrightarrow> \\<diamond>($pc1 = #a)\""], ["proof (prove)\nusing this:\n  \\<turnstile> $pc1 = #a \\<or> $pc1 = #b \\<or> $pc1 = #g\n\ngoal (1 subgoal):\n 1. \\<turnstile> ($pc1 = #a \\<or>\n                  $pc1 = #b \\<or>\n                  $pc1 = #g \\<leadsto> $pc1 = #a) \\<longrightarrow>\n                 \\<diamond>($pc1 = #a)", "by (rule fmp[OF _ LT4])"], ["proof (state)\nthis:\n  \\<turnstile> ($pc1 = #a \\<or>\n                $pc1 = #b \\<or>\n                $pc1 = #g \\<leadsto> $pc1 = #a) \\<longrightarrow>\n               \\<diamond>($pc1 = #a)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc1 = #a \\<and> $pc2 = #a \\<and> I)", "ultimately"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               $pc1 = #a \\<or>\n               $pc1 = #b \\<or> $pc1 = #g \\<leadsto> $pc1 = #a\n  \\<turnstile> ($pc1 = #a \\<or>\n                $pc1 = #b \\<or>\n                $pc1 = #g \\<leadsto> $pc1 = #a) \\<longrightarrow>\n               \\<diamond>($pc1 = #a)", "have \"\\<turnstile> ?G \\<longrightarrow> \\<diamond>($pc1 = #a)\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               $pc1 = #a \\<or>\n               $pc1 = #b \\<or> $pc1 = #g \\<leadsto> $pc1 = #a\n  \\<turnstile> ($pc1 = #a \\<or>\n                $pc1 = #b \\<or>\n                $pc1 = #g \\<leadsto> $pc1 = #a) \\<longrightarrow>\n               \\<diamond>($pc1 = #a)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc1 = #a)", "by force"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>($pc1 = #a)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc1 = #a \\<and> $pc2 = #a \\<and> I)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>($pc1 = #a)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n1)_vars \\<and>\n                 \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc1 = #a \\<and> $pc2 = #a \\<and> I)", "by (auto intro!: SE3[unlift_rule])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>($pc1 = #a \\<and> $pc2 = #a \\<and> I)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>($pc1 = #a \\<and> $pc2 = #a \\<and> I)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "moreover"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>($pc1 = #a \\<and> $pc2 = #a \\<and> I)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "have \"\\<turnstile> \\<diamond>($pc1 = #a \\<and> $pc2 = #a \\<and> I) \\<longrightarrow> \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<diamond>($pc1 = #a \\<and>\n                            $pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "unfolding enab_n2[int_rewrite]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<diamond>($pc1 = #a \\<and>\n                            $pc2 = #a \\<and> I) \\<longrightarrow>\n                 \\<diamond>($pc2 = #a \\<longrightarrow> #0 < $sem)", "by (rule STL4_eve) (auto simp: I_def tla_defs)"], ["proof (state)\nthis:\n  \\<turnstile> \\<diamond>($pc1 = #a \\<and>\n                          $pc2 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "ultimately"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>($pc1 = #a \\<and> $pc2 = #a \\<and> I)\n  \\<turnstile> \\<diamond>($pc1 = #a \\<and>\n                          $pc2 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "show \"\\<turnstile> \\<box>($pc2 = #a) \\<and> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and> \\<box>(I \\<and> SF(n1)_vars)\n                  \\<longrightarrow> \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n1)_vars \\<and>\n               \\<box>($pc2 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>($pc1 = #a \\<and> $pc2 = #a \\<and> I)\n  \\<turnstile> \\<diamond>($pc1 = #a \\<and>\n                          $pc2 = #a \\<and> I) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>($pc2 = #a) \\<and>\n                 \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>Enabled \\<langle>n2\\<rangle>_vars", "by (force simp: STL5[int_rewrite])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>($pc2 = #a) \\<and>\n               \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               \\<diamond>Enabled \\<langle>n2\\<rangle>_vars\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               $pc2 = #a \\<leadsto> $pc2 = #b\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>($pc2 = #b)", "from ga ab"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               $pc2 = #g \\<leadsto> $pc2 = #a\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               $pc2 = #a \\<leadsto> $pc2 = #b", "have \"\\<turnstile> ?F \\<longrightarrow> ($pc2 = #g \\<leadsto> $pc2 = #b)\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               $pc2 = #g \\<leadsto> $pc2 = #a\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               $pc2 = #a \\<leadsto> $pc2 = #b\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 $pc2 = #g \\<leadsto> $pc2 = #b", "by (force elim: LT13[unlift_rule])"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               $pc2 = #g \\<leadsto> $pc2 = #b\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>($pc2 = #b)", "with ab"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               $pc2 = #a \\<leadsto> $pc2 = #b\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               $pc2 = #g \\<leadsto> $pc2 = #b", "have \"\\<turnstile> ?F \\<longrightarrow> (($pc2 = #a \\<or> $pc2 = #b \\<or> $pc2 = #g) \\<leadsto> $pc2 = #b)\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               $pc2 = #a \\<leadsto> $pc2 = #b\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               $pc2 = #g \\<leadsto> $pc2 = #b\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 $pc2 = #a \\<or>\n                 $pc2 = #b \\<or> $pc2 = #g \\<leadsto> $pc2 = #b", "unfolding LT17[int_rewrite] LT1[int_rewrite]"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               $pc2 = #a \\<leadsto> $pc2 = #b\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               $pc2 = #g \\<leadsto> $pc2 = #b\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 ($pc2 = #a \\<leadsto> $pc2 = #b) \\<and>\n                 #True \\<and> ($pc2 = #g \\<leadsto> $pc2 = #b)", "by force"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               $pc2 = #a \\<or>\n               $pc2 = #b \\<or> $pc2 = #g \\<leadsto> $pc2 = #b\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>($pc2 = #b)", "moreover"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               $pc2 = #a \\<or>\n               $pc2 = #b \\<or> $pc2 = #g \\<leadsto> $pc2 = #b\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>($pc2 = #b)", "have \"\\<turnstile> $pc2 = #a \\<or> $pc2 = #b \\<or> $pc2 = #g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> $pc2 = #a \\<or> $pc2 = #b \\<or> $pc2 = #g", "proof (clarsimp simp: tla_defs)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>pc2 (w 0) \\<noteq> a; pc2 (w 0) \\<noteq> g\\<rbrakk>\n       \\<Longrightarrow> pc2 (w 0) = b", "fix s :: \"state seq\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>pc2 (w 0) \\<noteq> a; pc2 (w 0) \\<noteq> g\\<rbrakk>\n       \\<Longrightarrow> pc2 (w 0) = b", "assume \"pc2 (s 0) \\<noteq> a\" and \"pc2 (s 0) \\<noteq> g\""], ["proof (state)\nthis:\n  pc2 (s 0) \\<noteq> a\n  pc2 (s 0) \\<noteq> g\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>pc2 (w 0) \\<noteq> a; pc2 (w 0) \\<noteq> g\\<rbrakk>\n       \\<Longrightarrow> pc2 (w 0) = b", "thus \"pc2 (s 0) = b\""], ["proof (prove)\nusing this:\n  pc2 (s 0) \\<noteq> a\n  pc2 (s 0) \\<noteq> g\n\ngoal (1 subgoal):\n 1. pc2 (s 0) = b", "by (cases \"pc2 (s 0)\") auto"], ["proof (state)\nthis:\n  pc2 (s 0) = b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> $pc2 = #a \\<or> $pc2 = #b \\<or> $pc2 = #g\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>($pc2 = #b)", "hence \"\\<turnstile> (($pc2 = #a \\<or> $pc2 = #b \\<or> $pc2 = #g) \\<leadsto> $pc2 = #b) \\<longrightarrow> \\<diamond>($pc2 = #b)\""], ["proof (prove)\nusing this:\n  \\<turnstile> $pc2 = #a \\<or> $pc2 = #b \\<or> $pc2 = #g\n\ngoal (1 subgoal):\n 1. \\<turnstile> ($pc2 = #a \\<or>\n                  $pc2 = #b \\<or>\n                  $pc2 = #g \\<leadsto> $pc2 = #b) \\<longrightarrow>\n                 \\<diamond>($pc2 = #b)", "by (rule fmp[OF _ LT4])"], ["proof (state)\nthis:\n  \\<turnstile> ($pc2 = #a \\<or>\n                $pc2 = #b \\<or>\n                $pc2 = #g \\<leadsto> $pc2 = #b) \\<longrightarrow>\n               \\<diamond>($pc2 = #b)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>($pc2 = #b)", "ultimately"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               $pc2 = #a \\<or>\n               $pc2 = #b \\<or> $pc2 = #g \\<leadsto> $pc2 = #b\n  \\<turnstile> ($pc2 = #a \\<or>\n                $pc2 = #b \\<or>\n                $pc2 = #g \\<leadsto> $pc2 = #b) \\<longrightarrow>\n               \\<diamond>($pc2 = #b)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               $pc2 = #a \\<or>\n               $pc2 = #b \\<or> $pc2 = #g \\<leadsto> $pc2 = #b\n  \\<turnstile> ($pc2 = #a \\<or>\n                $pc2 = #b \\<or>\n                $pc2 = #g \\<leadsto> $pc2 = #b) \\<longrightarrow>\n               \\<diamond>($pc2 = #b)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n                 \\<diamond>($pc2 = #b)", "by (rule lift_imp_trans)"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               \\<diamond>($pc2 = #b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               \\<diamond>($pc2 = #b)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m2\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc2 = #b)", "with 1"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and>\n                      \\<not> beta2]_vars \\<longrightarrow>\n               \\<diamond>($pc2 = #b) \\<longrightarrow>\n               \\<diamond>\\<box>($pc2 = #b)\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               \\<diamond>($pc2 = #b)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and>\n                      \\<not> beta2]_vars \\<longrightarrow>\n               \\<diamond>($pc2 = #b) \\<longrightarrow>\n               \\<diamond>\\<box>($pc2 = #b)\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               \\<diamond>($pc2 = #b)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n                 SF(n2)_vars \\<and>\n                 \\<box>(I \\<and> SF(n1)_vars) \\<and>\n                 \\<box>\\<diamond>Enabled \\<langle>m2\\<rangle>_(x,\n                         y) \\<longrightarrow>\n                 \\<diamond>\\<box>($pc2 = #b)", "by force"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<and>\n               \\<box>\\<diamond>Enabled \\<langle>m2\\<rangle>_(x,\n                       y) \\<longrightarrow>\n               \\<diamond>\\<box>($pc2 = #b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[(n1 \\<or> n2) \\<and> \\<not> beta2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<and>\n               \\<box>\\<diamond>Enabled \\<langle>m2\\<rangle>_(x,\n                       y) \\<longrightarrow>\n               \\<diamond>\\<box>($pc2 = #b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile> \\<box>[n1 \\<or> n2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               SF(m2)_(x, y)\n\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> SF(m2)_(x, y)", "with psiI"], ["proof (chain)\npicking this:\n  \\<turnstile> psi \\<longrightarrow> \\<box>I\n  \\<turnstile> \\<box>[n1 \\<or> n2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               SF(m2)_(x, y)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<turnstile> psi \\<longrightarrow> \\<box>I\n  \\<turnstile> \\<box>[n1 \\<or> n2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>(I \\<and> SF(n1)_vars) \\<longrightarrow>\n               SF(m2)_(x, y)\n\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> SF(m2)_(x, y)", "unfolding psi_def Live2_def STL5[int_rewrite]"], ["proof (prove)\nusing this:\n  \\<turnstile> initPsi \\<and>\n               \\<box>[n1 \\<or> n2]_vars \\<and>\n               SF(n1)_vars \\<and> SF(n2)_vars \\<longrightarrow>\n               \\<box>I\n  \\<turnstile> \\<box>[n1 \\<or> n2]_vars \\<and>\n               SF(n2)_vars \\<and>\n               \\<box>I \\<and> \\<box>SF(n1)_vars \\<longrightarrow>\n               SF(m2)_(x, y)\n\ngoal (1 subgoal):\n 1. \\<turnstile> initPsi \\<and>\n                 \\<box>[n1 \\<or> n2]_vars \\<and>\n                 SF(n1)_vars \\<and> SF(n2)_vars \\<longrightarrow>\n                 SF(m2)_(x, y)", "by force"], ["proof (state)\nthis:\n  \\<turnstile> psi \\<longrightarrow> SF(m2)_(x, y)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  We can now prove the main theorem, which states that \\<open>psi\\<close>\n  implements \\<open>phi\\<close>.\n\\<close>"], ["", "theorem (in Secondprogram) impl: \"\\<turnstile> psi \\<longrightarrow> phi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow> phi", "unfolding phi_def Live_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> psi \\<longrightarrow>\n                 init \\<and>\n                 \\<box>[m1 \\<or> m2]_(x, y) \\<and>\n                 WF(m1)_(x, y) \\<and> WF(m2)_(x, y)", "by (auto dest: step_simulation[unlift_rule]\n                 lift_imp_trans[OF psi_fair_m1 SF_imp_WF, unlift_rule]\n                 lift_imp_trans[OF psi_fair_m2 SF_imp_WF, unlift_rule])"], ["", "end"]]}