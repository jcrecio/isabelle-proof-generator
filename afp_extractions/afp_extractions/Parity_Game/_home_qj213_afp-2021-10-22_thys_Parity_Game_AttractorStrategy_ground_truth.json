{"file_name": "/home/qj213/afp-2021-10-22/thys/Parity_Game/AttractorStrategy.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Parity_Game", "problem_names": ["lemma strategy_attracts_extends_VVp:\n  assumes \\<sigma>: \"strategy p \\<sigma>\" \"strategy_attracts p \\<sigma> S W\"\n    and v0: \"v0 \\<in> VV p\" \"v0 \\<in> directly_attracted p S\" \"v0 \\<notin> S\"\n  shows \"\\<exists>\\<sigma>. strategy p \\<sigma> \\<and> strategy_attracts_via p \\<sigma> v0 (insert v0 S) W\"", "lemma strategy_attracts_extends_VVpstar:\n  assumes \\<sigma>: \"strategy_attracts p \\<sigma> S W\"\n    and v0: \"v0 \\<notin> VV p\" \"v0 \\<in> directly_attracted p S\"\n  shows \"strategy_attracts_via p \\<sigma> v0 (insert v0 S) W\"", "lemma attractor_has_strategy_single:\n  assumes \"W \\<subseteq> V\"\n    and v0_def: \"v0 \\<in> attractor p W\" (is \"_ \\<in> ?A\")\n  shows \"\\<exists>\\<sigma>. strategy p \\<sigma> \\<and> strategy_attracts_via p \\<sigma> v0 ?A W\"", "theorem attractor_has_strategy:\n  assumes \"W \\<subseteq> V\"\n  shows \"\\<exists>\\<sigma>. strategy p \\<sigma> \\<and> strategy_attracts p \\<sigma> (attractor p W) W\""], "translations": [["", "lemma strategy_attracts_extends_VVp:\n  assumes \\<sigma>: \"strategy p \\<sigma>\" \"strategy_attracts p \\<sigma> S W\"\n    and v0: \"v0 \\<in> VV p\" \"v0 \\<in> directly_attracted p S\" \"v0 \\<notin> S\"\n  shows \"\\<exists>\\<sigma>. strategy p \\<sigma> \\<and> strategy_attracts_via p \\<sigma> v0 (insert v0 S) W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts_via p \\<sigma> v0 (insert v0 S) W", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts_via p \\<sigma> v0 (insert v0 S) W", "from v0(1,2)"], ["proof (chain)\npicking this:\n  v0 \\<in> VV p\n  v0 \\<in> directly_attracted p S", "obtain w where \"v0\\<rightarrow>w\" \"w \\<in> S\""], ["proof (prove)\nusing this:\n  v0 \\<in> VV p\n  v0 \\<in> directly_attracted p S\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>v0 \\<rightarrow> w; w \\<in> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using directly_attracted_def"], ["proof (prove)\nusing this:\n  v0 \\<in> VV p\n  v0 \\<in> directly_attracted p S\n  directly_attracted ?p ?S \\<equiv>\n  {v \\<in> V - ?S.\n   \\<not> deadend v \\<and>\n   (v \\<in> VV ?p \\<longrightarrow>\n    (\\<exists>w. v \\<rightarrow> w \\<and> w \\<in> ?S)) \\<and>\n   (v \\<in> VV ?p** \\<longrightarrow>\n    (\\<forall>w. v \\<rightarrow> w \\<longrightarrow> w \\<in> ?S))}\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>v0 \\<rightarrow> w; w \\<in> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v0 \\<rightarrow> w\n  w \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts_via p \\<sigma> v0 (insert v0 S) W", "from \\<open>w \\<in> S\\<close> \\<sigma>(2)"], ["proof (chain)\npicking this:\n  w \\<in> S\n  strategy_attracts p \\<sigma> S W", "have \"strategy_attracts_via p \\<sigma> w S W\""], ["proof (prove)\nusing this:\n  w \\<in> S\n  strategy_attracts p \\<sigma> S W\n\ngoal (1 subgoal):\n 1. strategy_attracts_via p \\<sigma> w S W", "unfolding strategy_attracts_def"], ["proof (prove)\nusing this:\n  w \\<in> S\n  \\<forall>v0\\<in>S. strategy_attracts_via p \\<sigma> v0 S W\n\ngoal (1 subgoal):\n 1. strategy_attracts_via p \\<sigma> w S W", "by blast"], ["proof (state)\nthis:\n  strategy_attracts_via p \\<sigma> w S W\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts_via p \\<sigma> v0 (insert v0 S) W", "let ?\\<sigma> = \"\\<sigma>(v0 := w)\" \\<comment> \\<open>Extend @{term \\<sigma>} to the new node.\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts_via p \\<sigma> v0 (insert v0 S) W", "have \"strategy p ?\\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strategy p (\\<sigma>(v0 := w))", "using \\<sigma>(1) \\<open>v0\\<rightarrow>w\\<close> valid_strategy_updates"], ["proof (prove)\nusing this:\n  strategy p \\<sigma>\n  v0 \\<rightarrow> w\n  \\<lbrakk>strategy ?p ?\\<sigma>; ?v0.0 \\<rightarrow> ?w0.0\\<rbrakk>\n  \\<Longrightarrow> strategy ?p (?\\<sigma>(?v0.0 := ?w0.0))\n\ngoal (1 subgoal):\n 1. strategy p (\\<sigma>(v0 := w))", "by blast"], ["proof (state)\nthis:\n  strategy p (\\<sigma>(v0 := w))\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts_via p \\<sigma> v0 (insert v0 S) W", "moreover"], ["proof (state)\nthis:\n  strategy p (\\<sigma>(v0 := w))\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts_via p \\<sigma> v0 (insert v0 S) W", "have \"strategy_attracts_via p ?\\<sigma> v0 (insert v0 S) W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strategy_attracts_via p (\\<sigma>(v0 := w)) v0 (insert v0 S) W", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p (\\<sigma>(v0 := w)) \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "fix P"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p (\\<sigma>(v0 := w)) \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "assume \"vmc_path G P v0 p ?\\<sigma>\""], ["proof (state)\nthis:\n  vmc_path G P v0 p (\\<sigma>(v0 := w))\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p (\\<sigma>(v0 := w)) \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "then"], ["proof (chain)\npicking this:\n  vmc_path G P v0 p (\\<sigma>(v0 := w))", "interpret vmc_path G P v0 p ?\\<sigma>"], ["proof (prove)\nusing this:\n  vmc_path G P v0 p (\\<sigma>(v0 := w))\n\ngoal (1 subgoal):\n 1. vmc_path G P v0 p (\\<sigma>(v0 := w))", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p (\\<sigma>(v0 := w)) \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "have \"\\<not>deadend v0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> deadend v0", "using \\<open>v0\\<rightarrow>w\\<close>"], ["proof (prove)\nusing this:\n  v0 \\<rightarrow> w\n\ngoal (1 subgoal):\n 1. \\<not> deadend v0", "by blast"], ["proof (state)\nthis:\n  \\<not> deadend v0\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p (\\<sigma>(v0 := w)) \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "then"], ["proof (chain)\npicking this:\n  \\<not> deadend v0", "interpret vmc_path_no_deadend G P v0 p ?\\<sigma>"], ["proof (prove)\nusing this:\n  \\<not> deadend v0\n\ngoal (1 subgoal):\n 1. vmc_path_no_deadend G P v0 p (\\<sigma>(v0 := w))", "by unfold_locales"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p (\\<sigma>(v0 := w)) \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "define P'' where [simp]: \"P'' = ltl P\""], ["proof (state)\nthis:\n  P'' = ltl P\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p (\\<sigma>(v0 := w)) \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "have \"lhd P'' = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lhd P'' = w", "using v0(1) v0_conforms w0_def"], ["proof (prove)\nusing this:\n  v0 \\<in> VV p\n  v0 \\<in> VV p \\<Longrightarrow> (\\<sigma>(v0 := w)) v0 = w0\n  w0 \\<equiv> lhd (ltl P)\n\ngoal (1 subgoal):\n 1. lhd P'' = w", "by auto"], ["proof (state)\nthis:\n  lhd P'' = w\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p (\\<sigma>(v0 := w)) \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "hence \"vmc_path G P'' w p ?\\<sigma>\""], ["proof (prove)\nusing this:\n  lhd P'' = w\n\ngoal (1 subgoal):\n 1. vmc_path G P'' w p (\\<sigma>(v0 := w))", "using vmc_path_ltl"], ["proof (prove)\nusing this:\n  lhd P'' = w\n  vmc_path G (ltl P) w0 p (\\<sigma>(v0 := w))\n\ngoal (1 subgoal):\n 1. vmc_path G P'' w p (\\<sigma>(v0 := w))", "by (simp add: w0_def)"], ["proof (state)\nthis:\n  vmc_path G P'' w p (\\<sigma>(v0 := w))\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p (\\<sigma>(v0 := w)) \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "have *: \"v0 \\<notin> S - W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v0 \\<notin> S - W", "using \\<open>v0 \\<notin> S\\<close>"], ["proof (prove)\nusing this:\n  v0 \\<notin> S\n\ngoal (1 subgoal):\n 1. v0 \\<notin> S - W", "by blast"], ["proof (state)\nthis:\n  v0 \\<notin> S - W\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p (\\<sigma>(v0 := w)) \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "have \"override_on (\\<sigma>(v0 := w)) \\<sigma> (S - W) = ?\\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. override_on (\\<sigma>(v0 := w)) \\<sigma> (S - W) = \\<sigma>(v0 := w)", "by (rule ext) (metis * fun_upd_def override_on_def)"], ["proof (state)\nthis:\n  override_on (\\<sigma>(v0 := w)) \\<sigma> (S - W) = \\<sigma>(v0 := w)\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p (\\<sigma>(v0 := w)) \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "hence \"strategy_attracts p ?\\<sigma> S W\""], ["proof (prove)\nusing this:\n  override_on (\\<sigma>(v0 := w)) \\<sigma> (S - W) = \\<sigma>(v0 := w)\n\ngoal (1 subgoal):\n 1. strategy_attracts p (\\<sigma>(v0 := w)) S W", "using strategy_attracts_irrelevant_override[OF \\<sigma>(2,1) \\<open>strategy p ?\\<sigma>\\<close>]"], ["proof (prove)\nusing this:\n  override_on (\\<sigma>(v0 := w)) \\<sigma> (S - W) = \\<sigma>(v0 := w)\n  strategy_attracts p (override_on (\\<sigma>(v0 := w)) \\<sigma> (S - W)) S W\n\ngoal (1 subgoal):\n 1. strategy_attracts p (\\<sigma>(v0 := w)) S W", "by simp"], ["proof (state)\nthis:\n  strategy_attracts p (\\<sigma>(v0 := w)) S W\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p (\\<sigma>(v0 := w)) \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "hence \"strategy_attracts_via p ?\\<sigma> w S W\""], ["proof (prove)\nusing this:\n  strategy_attracts p (\\<sigma>(v0 := w)) S W\n\ngoal (1 subgoal):\n 1. strategy_attracts_via p (\\<sigma>(v0 := w)) w S W", "unfolding strategy_attracts_def"], ["proof (prove)\nusing this:\n  \\<forall>v0a\\<in>S. strategy_attracts_via p (\\<sigma>(v0 := w)) v0a S W\n\ngoal (1 subgoal):\n 1. strategy_attracts_via p (\\<sigma>(v0 := w)) w S W", "using \\<open>w \\<in> S\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>v0a\\<in>S. strategy_attracts_via p (\\<sigma>(v0 := w)) v0a S W\n  w \\<in> S\n\ngoal (1 subgoal):\n 1. strategy_attracts_via p (\\<sigma>(v0 := w)) w S W", "by blast"], ["proof (state)\nthis:\n  strategy_attracts_via p (\\<sigma>(v0 := w)) w S W\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p (\\<sigma>(v0 := w)) \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "hence \"visits_via P'' S W\""], ["proof (prove)\nusing this:\n  strategy_attracts_via p (\\<sigma>(v0 := w)) w S W\n\ngoal (1 subgoal):\n 1. visits_via P'' S W", "unfolding strategy_attracts_via_def"], ["proof (prove)\nusing this:\n  \\<forall>P.\n     vmc_path G P w p (\\<sigma>(v0 := w)) \\<longrightarrow> visits_via P S W\n\ngoal (1 subgoal):\n 1. visits_via P'' S W", "using \\<open>vmc_path G P'' w p ?\\<sigma>\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>P.\n     vmc_path G P w p (\\<sigma>(v0 := w)) \\<longrightarrow> visits_via P S W\n  vmc_path G P'' w p (\\<sigma>(v0 := w))\n\ngoal (1 subgoal):\n 1. visits_via P'' S W", "by blast"], ["proof (state)\nthis:\n  visits_via P'' S W\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p (\\<sigma>(v0 := w)) \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "thus \"visits_via P (insert v0 S) W\""], ["proof (prove)\nusing this:\n  visits_via P'' S W\n\ngoal (1 subgoal):\n 1. visits_via P (insert v0 S) W", "using visits_via_LCons[of \"ltl P\" S W v0] P_LCons"], ["proof (prove)\nusing this:\n  visits_via P'' S W\n  visits_via (ltl P) S W \\<Longrightarrow>\n  visits_via (LCons v0 (ltl P)) (insert v0 S) W\n  P = LCons v0 (ltl P)\n\ngoal (1 subgoal):\n 1. visits_via P (insert v0 S) W", "by simp"], ["proof (state)\nthis:\n  visits_via P (insert v0 S) W\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  strategy_attracts_via p (\\<sigma>(v0 := w)) v0 (insert v0 S) W\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts_via p \\<sigma> v0 (insert v0 S) W", "ultimately"], ["proof (chain)\npicking this:\n  strategy p (\\<sigma>(v0 := w))\n  strategy_attracts_via p (\\<sigma>(v0 := w)) v0 (insert v0 S) W", "show ?thesis"], ["proof (prove)\nusing this:\n  strategy p (\\<sigma>(v0 := w))\n  strategy_attracts_via p (\\<sigma>(v0 := w)) v0 (insert v0 S) W\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts_via p \\<sigma> v0 (insert v0 S) W", "by blast"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and>\n     strategy_attracts_via p \\<sigma> v0 (insert v0 S) W\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strategy_attracts_extends_VVpstar:\n  assumes \\<sigma>: \"strategy_attracts p \\<sigma> S W\"\n    and v0: \"v0 \\<notin> VV p\" \"v0 \\<in> directly_attracted p S\"\n  shows \"strategy_attracts_via p \\<sigma> v0 (insert v0 S) W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strategy_attracts_via p \\<sigma> v0 (insert v0 S) W", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p \\<sigma> \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "fix P"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p \\<sigma> \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "assume \"vmc_path G P v0 p \\<sigma>\""], ["proof (state)\nthis:\n  vmc_path G P v0 p \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p \\<sigma> \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "then"], ["proof (chain)\npicking this:\n  vmc_path G P v0 p \\<sigma>", "interpret vmc_path G P v0 p \\<sigma>"], ["proof (prove)\nusing this:\n  vmc_path G P v0 p \\<sigma>\n\ngoal (1 subgoal):\n 1. vmc_path G P v0 p \\<sigma>", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p \\<sigma> \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "have \"\\<not>deadend v0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> deadend v0", "using v0(2) directly_attracted_contains_no_deadends"], ["proof (prove)\nusing this:\n  v0 \\<in> directly_attracted p S\n  ?v \\<in> directly_attracted ?p ?W \\<Longrightarrow> \\<not> deadend ?v\n\ngoal (1 subgoal):\n 1. \\<not> deadend v0", "by blast"], ["proof (state)\nthis:\n  \\<not> deadend v0\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p \\<sigma> \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "then"], ["proof (chain)\npicking this:\n  \\<not> deadend v0", "interpret vmc_path_no_deadend G P v0 p \\<sigma>"], ["proof (prove)\nusing this:\n  \\<not> deadend v0\n\ngoal (1 subgoal):\n 1. vmc_path_no_deadend G P v0 p \\<sigma>", "by unfold_locales"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p \\<sigma> \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "have \"visits_via (ltl P) S W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. visits_via (ltl P) S W", "using vmc_path.strategy_attractsE[OF vmc_path_ltl \\<sigma>] v0 directly_attracted_def"], ["proof (prove)\nusing this:\n  w0 \\<in> S \\<Longrightarrow> visits_via (ltl P) S W\n  v0 \\<notin> VV p\n  v0 \\<in> directly_attracted p S\n  directly_attracted ?p ?S \\<equiv>\n  {v \\<in> V - ?S.\n   \\<not> deadend v \\<and>\n   (v \\<in> VV ?p \\<longrightarrow>\n    (\\<exists>w. v \\<rightarrow> w \\<and> w \\<in> ?S)) \\<and>\n   (v \\<in> VV ?p** \\<longrightarrow>\n    (\\<forall>w. v \\<rightarrow> w \\<longrightarrow> w \\<in> ?S))}\n\ngoal (1 subgoal):\n 1. visits_via (ltl P) S W", "by simp"], ["proof (state)\nthis:\n  visits_via (ltl P) S W\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       vmc_path G P v0 p \\<sigma> \\<Longrightarrow>\n       visits_via P (insert v0 S) W", "thus \"visits_via P (insert v0 S) W\""], ["proof (prove)\nusing this:\n  visits_via (ltl P) S W\n\ngoal (1 subgoal):\n 1. visits_via P (insert v0 S) W", "using visits_via_LCons[of \"ltl P\" S W v0] P_LCons"], ["proof (prove)\nusing this:\n  visits_via (ltl P) S W\n  visits_via (ltl P) S W \\<Longrightarrow>\n  visits_via (LCons v0 (ltl P)) (insert v0 S) W\n  P = LCons v0 (ltl P)\n\ngoal (1 subgoal):\n 1. visits_via P (insert v0 S) W", "by simp"], ["proof (state)\nthis:\n  visits_via P (insert v0 S) W\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma attractor_has_strategy_single:\n  assumes \"W \\<subseteq> V\"\n    and v0_def: \"v0 \\<in> attractor p W\" (is \"_ \\<in> ?A\")\n  shows \"\\<exists>\\<sigma>. strategy p \\<sigma> \\<and> strategy_attracts_via p \\<sigma> v0 ?A W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts_via p \\<sigma> v0 (attractor p W) W", "using assms"], ["proof (prove)\nusing this:\n  W \\<subseteq> V\n  v0 \\<in> attractor p W\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts_via p \\<sigma> v0 (attractor p W) W", "proof (induct arbitrary: v0 rule: attractor_set_induction)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S v0.\n       \\<lbrakk>S \\<subseteq> V;\n        \\<And>v0.\n           v0 \\<in> S \\<Longrightarrow>\n           \\<exists>\\<sigma>.\n              strategy p \\<sigma> \\<and>\n              strategy_attracts_via p \\<sigma> v0 S W;\n        v0 \\<in> W \\<union> S \\<union> directly_attracted p S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0\n                             (W \\<union> S \\<union> directly_attracted p S)\n                             W\n 2. \\<And>M v0.\n       \\<lbrakk>\\<forall>S\\<in>M.\n                   S \\<subseteq> V \\<and>\n                   (\\<forall>x.\n                       x \\<in> S \\<longrightarrow>\n                       (\\<exists>\\<sigma>.\n                           strategy p \\<sigma> \\<and>\n                           strategy_attracts_via p \\<sigma> x S W));\n        v0 \\<in> \\<Union> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0 (\\<Union> M)\n                             W", "case (step S)"], ["proof (state)\nthis:\n  S \\<subseteq> V\n  ?v0.1 \\<in> S \\<Longrightarrow>\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and> strategy_attracts_via p \\<sigma> ?v0.1 S W\n  v0 \\<in> W \\<union> S \\<union> directly_attracted p S\n\ngoal (2 subgoals):\n 1. \\<And>S v0.\n       \\<lbrakk>S \\<subseteq> V;\n        \\<And>v0.\n           v0 \\<in> S \\<Longrightarrow>\n           \\<exists>\\<sigma>.\n              strategy p \\<sigma> \\<and>\n              strategy_attracts_via p \\<sigma> v0 S W;\n        v0 \\<in> W \\<union> S \\<union> directly_attracted p S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0\n                             (W \\<union> S \\<union> directly_attracted p S)\n                             W\n 2. \\<And>M v0.\n       \\<lbrakk>\\<forall>S\\<in>M.\n                   S \\<subseteq> V \\<and>\n                   (\\<forall>x.\n                       x \\<in> S \\<longrightarrow>\n                       (\\<exists>\\<sigma>.\n                           strategy p \\<sigma> \\<and>\n                           strategy_attracts_via p \\<sigma> x S W));\n        v0 \\<in> \\<Union> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0 (\\<Union> M)\n                             W", "have \"v0 \\<in> W \\<Longrightarrow> \\<exists>\\<sigma>. strategy p \\<sigma> \\<and> strategy_attracts_via p \\<sigma> v0 {} W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v0 \\<in> W \\<Longrightarrow>\n    \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and> strategy_attracts_via p \\<sigma> v0 {} W", "using strategy_attracts_via_trivial valid_arbitrary_strategy"], ["proof (prove)\nusing this:\n  ?v0.0 \\<in> ?W \\<Longrightarrow>\n  strategy_attracts_via ?p ?\\<sigma> ?v0.0 ?A ?W\n  strategy ?p \\<sigma>_arbitrary\n\ngoal (1 subgoal):\n 1. v0 \\<in> W \\<Longrightarrow>\n    \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and> strategy_attracts_via p \\<sigma> v0 {} W", "by blast"], ["proof (state)\nthis:\n  v0 \\<in> W \\<Longrightarrow>\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and> strategy_attracts_via p \\<sigma> v0 {} W\n\ngoal (2 subgoals):\n 1. \\<And>S v0.\n       \\<lbrakk>S \\<subseteq> V;\n        \\<And>v0.\n           v0 \\<in> S \\<Longrightarrow>\n           \\<exists>\\<sigma>.\n              strategy p \\<sigma> \\<and>\n              strategy_attracts_via p \\<sigma> v0 S W;\n        v0 \\<in> W \\<union> S \\<union> directly_attracted p S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0\n                             (W \\<union> S \\<union> directly_attracted p S)\n                             W\n 2. \\<And>M v0.\n       \\<lbrakk>\\<forall>S\\<in>M.\n                   S \\<subseteq> V \\<and>\n                   (\\<forall>x.\n                       x \\<in> S \\<longrightarrow>\n                       (\\<exists>\\<sigma>.\n                           strategy p \\<sigma> \\<and>\n                           strategy_attracts_via p \\<sigma> x S W));\n        v0 \\<in> \\<Union> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0 (\\<Union> M)\n                             W", "moreover"], ["proof (state)\nthis:\n  v0 \\<in> W \\<Longrightarrow>\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and> strategy_attracts_via p \\<sigma> v0 {} W\n\ngoal (2 subgoals):\n 1. \\<And>S v0.\n       \\<lbrakk>S \\<subseteq> V;\n        \\<And>v0.\n           v0 \\<in> S \\<Longrightarrow>\n           \\<exists>\\<sigma>.\n              strategy p \\<sigma> \\<and>\n              strategy_attracts_via p \\<sigma> v0 S W;\n        v0 \\<in> W \\<union> S \\<union> directly_attracted p S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0\n                             (W \\<union> S \\<union> directly_attracted p S)\n                             W\n 2. \\<And>M v0.\n       \\<lbrakk>\\<forall>S\\<in>M.\n                   S \\<subseteq> V \\<and>\n                   (\\<forall>x.\n                       x \\<in> S \\<longrightarrow>\n                       (\\<exists>\\<sigma>.\n                           strategy p \\<sigma> \\<and>\n                           strategy_attracts_via p \\<sigma> x S W));\n        v0 \\<in> \\<Union> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0 (\\<Union> M)\n                             W", "{"], ["proof (state)\nthis:\n  v0 \\<in> W \\<Longrightarrow>\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and> strategy_attracts_via p \\<sigma> v0 {} W\n\ngoal (2 subgoals):\n 1. \\<And>S v0.\n       \\<lbrakk>S \\<subseteq> V;\n        \\<And>v0.\n           v0 \\<in> S \\<Longrightarrow>\n           \\<exists>\\<sigma>.\n              strategy p \\<sigma> \\<and>\n              strategy_attracts_via p \\<sigma> v0 S W;\n        v0 \\<in> W \\<union> S \\<union> directly_attracted p S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0\n                             (W \\<union> S \\<union> directly_attracted p S)\n                             W\n 2. \\<And>M v0.\n       \\<lbrakk>\\<forall>S\\<in>M.\n                   S \\<subseteq> V \\<and>\n                   (\\<forall>x.\n                       x \\<in> S \\<longrightarrow>\n                       (\\<exists>\\<sigma>.\n                           strategy p \\<sigma> \\<and>\n                           strategy_attracts_via p \\<sigma> x S W));\n        v0 \\<in> \\<Union> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0 (\\<Union> M)\n                             W", "assume *: \"v0 \\<in> directly_attracted p S\" \"v0 \\<notin> S\""], ["proof (state)\nthis:\n  v0 \\<in> directly_attracted p S\n  v0 \\<notin> S\n\ngoal (2 subgoals):\n 1. \\<And>S v0.\n       \\<lbrakk>S \\<subseteq> V;\n        \\<And>v0.\n           v0 \\<in> S \\<Longrightarrow>\n           \\<exists>\\<sigma>.\n              strategy p \\<sigma> \\<and>\n              strategy_attracts_via p \\<sigma> v0 S W;\n        v0 \\<in> W \\<union> S \\<union> directly_attracted p S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0\n                             (W \\<union> S \\<union> directly_attracted p S)\n                             W\n 2. \\<And>M v0.\n       \\<lbrakk>\\<forall>S\\<in>M.\n                   S \\<subseteq> V \\<and>\n                   (\\<forall>x.\n                       x \\<in> S \\<longrightarrow>\n                       (\\<exists>\\<sigma>.\n                           strategy p \\<sigma> \\<and>\n                           strategy_attracts_via p \\<sigma> x S W));\n        v0 \\<in> \\<Union> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0 (\\<Union> M)\n                             W", "from assms(1) step.hyps(1) step.hyps(2)"], ["proof (chain)\npicking this:\n  W \\<subseteq> V\n  S \\<subseteq> V\n  ?v0.1 \\<in> S \\<Longrightarrow>\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and> strategy_attracts_via p \\<sigma> ?v0.1 S W", "have \"\\<exists>\\<sigma>. strategy p \\<sigma> \\<and> strategy_attracts p \\<sigma> S W\""], ["proof (prove)\nusing this:\n  W \\<subseteq> V\n  S \\<subseteq> V\n  ?v0.1 \\<in> S \\<Longrightarrow>\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and> strategy_attracts_via p \\<sigma> ?v0.1 S W\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and> strategy_attracts p \\<sigma> S W", "using merge_attractor_strategies"], ["proof (prove)\nusing this:\n  W \\<subseteq> V\n  S \\<subseteq> V\n  ?v0.1 \\<in> S \\<Longrightarrow>\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and> strategy_attracts_via p \\<sigma> ?v0.1 S W\n  \\<lbrakk>?S \\<subseteq> V;\n   \\<And>v.\n      v \\<in> ?S \\<Longrightarrow>\n      \\<exists>\\<sigma>.\n         strategy ?p \\<sigma> \\<and>\n         strategy_attracts_via ?p \\<sigma> v ?S ?W\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<sigma>.\n                       strategy ?p \\<sigma> \\<and>\n                       strategy_attracts ?p \\<sigma> ?S ?W\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and> strategy_attracts p \\<sigma> S W", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and> strategy_attracts p \\<sigma> S W\n\ngoal (2 subgoals):\n 1. \\<And>S v0.\n       \\<lbrakk>S \\<subseteq> V;\n        \\<And>v0.\n           v0 \\<in> S \\<Longrightarrow>\n           \\<exists>\\<sigma>.\n              strategy p \\<sigma> \\<and>\n              strategy_attracts_via p \\<sigma> v0 S W;\n        v0 \\<in> W \\<union> S \\<union> directly_attracted p S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0\n                             (W \\<union> S \\<union> directly_attracted p S)\n                             W\n 2. \\<And>M v0.\n       \\<lbrakk>\\<forall>S\\<in>M.\n                   S \\<subseteq> V \\<and>\n                   (\\<forall>x.\n                       x \\<in> S \\<longrightarrow>\n                       (\\<exists>\\<sigma>.\n                           strategy p \\<sigma> \\<and>\n                           strategy_attracts_via p \\<sigma> x S W));\n        v0 \\<in> \\<Union> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0 (\\<Union> M)\n                             W", "with *"], ["proof (chain)\npicking this:\n  v0 \\<in> directly_attracted p S\n  v0 \\<notin> S\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and> strategy_attracts p \\<sigma> S W", "have \"\\<exists>\\<sigma>. strategy p \\<sigma> \\<and> strategy_attracts_via p \\<sigma> v0 (insert v0 S) W\""], ["proof (prove)\nusing this:\n  v0 \\<in> directly_attracted p S\n  v0 \\<notin> S\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and> strategy_attracts p \\<sigma> S W\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts_via p \\<sigma> v0 (insert v0 S) W", "using strategy_attracts_extends_VVp strategy_attracts_extends_VVpstar"], ["proof (prove)\nusing this:\n  v0 \\<in> directly_attracted p S\n  v0 \\<notin> S\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and> strategy_attracts p \\<sigma> S W\n  \\<lbrakk>strategy ?p ?\\<sigma>; strategy_attracts ?p ?\\<sigma> ?S ?W;\n   ?v0.0 \\<in> VV ?p; ?v0.0 \\<in> directly_attracted ?p ?S;\n   ?v0.0 \\<notin> ?S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<sigma>.\n                       strategy ?p \\<sigma> \\<and>\n                       strategy_attracts_via ?p \\<sigma> ?v0.0\n                        (insert ?v0.0 ?S) ?W\n  \\<lbrakk>strategy_attracts ?p ?\\<sigma> ?S ?W; ?v0.0 \\<notin> VV ?p;\n   ?v0.0 \\<in> directly_attracted ?p ?S\\<rbrakk>\n  \\<Longrightarrow> strategy_attracts_via ?p ?\\<sigma> ?v0.0\n                     (insert ?v0.0 ?S) ?W\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts_via p \\<sigma> v0 (insert v0 S) W", "by blast"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and>\n     strategy_attracts_via p \\<sigma> v0 (insert v0 S) W\n\ngoal (2 subgoals):\n 1. \\<And>S v0.\n       \\<lbrakk>S \\<subseteq> V;\n        \\<And>v0.\n           v0 \\<in> S \\<Longrightarrow>\n           \\<exists>\\<sigma>.\n              strategy p \\<sigma> \\<and>\n              strategy_attracts_via p \\<sigma> v0 S W;\n        v0 \\<in> W \\<union> S \\<union> directly_attracted p S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0\n                             (W \\<union> S \\<union> directly_attracted p S)\n                             W\n 2. \\<And>M v0.\n       \\<lbrakk>\\<forall>S\\<in>M.\n                   S \\<subseteq> V \\<and>\n                   (\\<forall>x.\n                       x \\<in> S \\<longrightarrow>\n                       (\\<exists>\\<sigma>.\n                           strategy p \\<sigma> \\<and>\n                           strategy_attracts_via p \\<sigma> x S W));\n        v0 \\<in> \\<Union> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0 (\\<Union> M)\n                             W", "}"], ["proof (state)\nthis:\n  \\<lbrakk>v0 \\<in> directly_attracted p S; v0 \\<notin> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<sigma>.\n                       strategy p \\<sigma> \\<and>\n                       strategy_attracts_via p \\<sigma> v0 (insert v0 S) W\n\ngoal (2 subgoals):\n 1. \\<And>S v0.\n       \\<lbrakk>S \\<subseteq> V;\n        \\<And>v0.\n           v0 \\<in> S \\<Longrightarrow>\n           \\<exists>\\<sigma>.\n              strategy p \\<sigma> \\<and>\n              strategy_attracts_via p \\<sigma> v0 S W;\n        v0 \\<in> W \\<union> S \\<union> directly_attracted p S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0\n                             (W \\<union> S \\<union> directly_attracted p S)\n                             W\n 2. \\<And>M v0.\n       \\<lbrakk>\\<forall>S\\<in>M.\n                   S \\<subseteq> V \\<and>\n                   (\\<forall>x.\n                       x \\<in> S \\<longrightarrow>\n                       (\\<exists>\\<sigma>.\n                           strategy p \\<sigma> \\<and>\n                           strategy_attracts_via p \\<sigma> x S W));\n        v0 \\<in> \\<Union> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0 (\\<Union> M)\n                             W", "ultimately"], ["proof (chain)\npicking this:\n  v0 \\<in> W \\<Longrightarrow>\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and> strategy_attracts_via p \\<sigma> v0 {} W\n  \\<lbrakk>v0 \\<in> directly_attracted p S; v0 \\<notin> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<sigma>.\n                       strategy p \\<sigma> \\<and>\n                       strategy_attracts_via p \\<sigma> v0 (insert v0 S) W", "show ?case"], ["proof (prove)\nusing this:\n  v0 \\<in> W \\<Longrightarrow>\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and> strategy_attracts_via p \\<sigma> v0 {} W\n  \\<lbrakk>v0 \\<in> directly_attracted p S; v0 \\<notin> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<sigma>.\n                       strategy p \\<sigma> \\<and>\n                       strategy_attracts_via p \\<sigma> v0 (insert v0 S) W\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts_via p \\<sigma> v0\n        (W \\<union> S \\<union> directly_attracted p S) W", "using step.prems step.hyps(2)\n    attractor_strategy_on_extends[of p _ v0 \"insert v0 S\" W \"W \\<union> S \\<union> directly_attracted p S\"]\n    attractor_strategy_on_extends[of p _ v0 \"S\"           W \"W \\<union> S \\<union> directly_attracted p S\"]\n    attractor_strategy_on_extends[of p _ v0 \"{}\"          W \"W \\<union> S \\<union> directly_attracted p S\"]"], ["proof (prove)\nusing this:\n  v0 \\<in> W \\<Longrightarrow>\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and> strategy_attracts_via p \\<sigma> v0 {} W\n  \\<lbrakk>v0 \\<in> directly_attracted p S; v0 \\<notin> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<sigma>.\n                       strategy p \\<sigma> \\<and>\n                       strategy_attracts_via p \\<sigma> v0 (insert v0 S) W\n  v0 \\<in> W \\<union> S \\<union> directly_attracted p S\n  ?v0.1 \\<in> S \\<Longrightarrow>\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and> strategy_attracts_via p \\<sigma> ?v0.1 S W\n  \\<lbrakk>strategy_attracts_via p ?\\<sigma> v0 (insert v0 S) W;\n   insert v0 S\n   \\<subseteq> W \\<union> S \\<union> directly_attracted p S\\<rbrakk>\n  \\<Longrightarrow> strategy_attracts_via p ?\\<sigma> v0\n                     (W \\<union> S \\<union> directly_attracted p S) W\n  \\<lbrakk>strategy_attracts_via p ?\\<sigma> v0 S W;\n   S \\<subseteq> W \\<union> S \\<union> directly_attracted p S\\<rbrakk>\n  \\<Longrightarrow> strategy_attracts_via p ?\\<sigma> v0\n                     (W \\<union> S \\<union> directly_attracted p S) W\n  \\<lbrakk>strategy_attracts_via p ?\\<sigma> v0 {} W;\n   {} \\<subseteq> W \\<union> S \\<union> directly_attracted p S\\<rbrakk>\n  \\<Longrightarrow> strategy_attracts_via p ?\\<sigma> v0\n                     (W \\<union> S \\<union> directly_attracted p S) W\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts_via p \\<sigma> v0\n        (W \\<union> S \\<union> directly_attracted p S) W", "by blast"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and>\n     strategy_attracts_via p \\<sigma> v0\n      (W \\<union> S \\<union> directly_attracted p S) W\n\ngoal (1 subgoal):\n 1. \\<And>M v0.\n       \\<lbrakk>\\<forall>S\\<in>M.\n                   S \\<subseteq> V \\<and>\n                   (\\<forall>x.\n                       x \\<in> S \\<longrightarrow>\n                       (\\<exists>\\<sigma>.\n                           strategy p \\<sigma> \\<and>\n                           strategy_attracts_via p \\<sigma> x S W));\n        v0 \\<in> \\<Union> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0 (\\<Union> M)\n                             W", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M v0.\n       \\<lbrakk>\\<forall>S\\<in>M.\n                   S \\<subseteq> V \\<and>\n                   (\\<forall>x.\n                       x \\<in> S \\<longrightarrow>\n                       (\\<exists>\\<sigma>.\n                           strategy p \\<sigma> \\<and>\n                           strategy_attracts_via p \\<sigma> x S W));\n        v0 \\<in> \\<Union> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0 (\\<Union> M)\n                             W", "case (union M)"], ["proof (state)\nthis:\n  \\<forall>S\\<in>M.\n     S \\<subseteq> V \\<and>\n     (\\<forall>x.\n         x \\<in> S \\<longrightarrow>\n         (\\<exists>\\<sigma>.\n             strategy p \\<sigma> \\<and>\n             strategy_attracts_via p \\<sigma> x S W))\n  v0 \\<in> \\<Union> M\n\ngoal (1 subgoal):\n 1. \\<And>M v0.\n       \\<lbrakk>\\<forall>S\\<in>M.\n                   S \\<subseteq> V \\<and>\n                   (\\<forall>x.\n                       x \\<in> S \\<longrightarrow>\n                       (\\<exists>\\<sigma>.\n                           strategy p \\<sigma> \\<and>\n                           strategy_attracts_via p \\<sigma> x S W));\n        v0 \\<in> \\<Union> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0 (\\<Union> M)\n                             W", "hence \"\\<exists>S. S \\<in> M \\<and> v0 \\<in> S\""], ["proof (prove)\nusing this:\n  \\<forall>S\\<in>M.\n     S \\<subseteq> V \\<and>\n     (\\<forall>x.\n         x \\<in> S \\<longrightarrow>\n         (\\<exists>\\<sigma>.\n             strategy p \\<sigma> \\<and>\n             strategy_attracts_via p \\<sigma> x S W))\n  v0 \\<in> \\<Union> M\n\ngoal (1 subgoal):\n 1. \\<exists>S. S \\<in> M \\<and> v0 \\<in> S", "by blast"], ["proof (state)\nthis:\n  \\<exists>S. S \\<in> M \\<and> v0 \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>M v0.\n       \\<lbrakk>\\<forall>S\\<in>M.\n                   S \\<subseteq> V \\<and>\n                   (\\<forall>x.\n                       x \\<in> S \\<longrightarrow>\n                       (\\<exists>\\<sigma>.\n                           strategy p \\<sigma> \\<and>\n                           strategy_attracts_via p \\<sigma> x S W));\n        v0 \\<in> \\<Union> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            strategy p \\<sigma> \\<and>\n                            strategy_attracts_via p \\<sigma> v0 (\\<Union> M)\n                             W", "thus ?case"], ["proof (prove)\nusing this:\n  \\<exists>S. S \\<in> M \\<and> v0 \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts_via p \\<sigma> v0 (\\<Union> M) W", "by (meson Union_upper attractor_strategy_on_extends union.hyps)"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and>\n     strategy_attracts_via p \\<sigma> v0 (\\<Union> M) W\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Existence\\<close>"], ["", "text \\<open>Prove that every attractor set has an attractor strategy.\\<close>"], ["", "theorem attractor_has_strategy:\n  assumes \"W \\<subseteq> V\"\n  shows \"\\<exists>\\<sigma>. strategy p \\<sigma> \\<and> strategy_attracts p \\<sigma> (attractor p W) W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts p \\<sigma> (attractor p W) W", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts p \\<sigma> (attractor p W) W", "let ?A = \"attractor p W\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts p \\<sigma> (attractor p W) W", "have \"?A \\<subseteq> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. attractor p W \\<subseteq> V", "by (simp add: \\<open>W \\<subseteq> V\\<close> attractor_in_V)"], ["proof (state)\nthis:\n  attractor p W \\<subseteq> V\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts p \\<sigma> (attractor p W) W", "moreover"], ["proof (state)\nthis:\n  attractor p W \\<subseteq> V\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts p \\<sigma> (attractor p W) W", "have \"\\<And>v. v \\<in> ?A \\<Longrightarrow> \\<exists>\\<sigma>. strategy p \\<sigma> \\<and> strategy_attracts_via p \\<sigma> v ?A W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       v \\<in> attractor p W \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          strategy p \\<sigma> \\<and>\n          strategy_attracts_via p \\<sigma> v (attractor p W) W", "using \\<open>W \\<subseteq> V\\<close> attractor_has_strategy_single"], ["proof (prove)\nusing this:\n  W \\<subseteq> V\n  \\<lbrakk>?W \\<subseteq> V; ?v0.0 \\<in> attractor ?p ?W\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<sigma>.\n                       strategy ?p \\<sigma> \\<and>\n                       strategy_attracts_via ?p \\<sigma> ?v0.0\n                        (attractor ?p ?W) ?W\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       v \\<in> attractor p W \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          strategy p \\<sigma> \\<and>\n          strategy_attracts_via p \\<sigma> v (attractor p W) W", "by blast"], ["proof (state)\nthis:\n  ?v \\<in> attractor p W \\<Longrightarrow>\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and>\n     strategy_attracts_via p \\<sigma> ?v (attractor p W) W\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts p \\<sigma> (attractor p W) W", "ultimately"], ["proof (chain)\npicking this:\n  attractor p W \\<subseteq> V\n  ?v \\<in> attractor p W \\<Longrightarrow>\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and>\n     strategy_attracts_via p \\<sigma> ?v (attractor p W) W", "show ?thesis"], ["proof (prove)\nusing this:\n  attractor p W \\<subseteq> V\n  ?v \\<in> attractor p W \\<Longrightarrow>\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and>\n     strategy_attracts_via p \\<sigma> ?v (attractor p W) W\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts p \\<sigma> (attractor p W) W", "using merge_attractor_strategies \\<open>W \\<subseteq> V\\<close>"], ["proof (prove)\nusing this:\n  attractor p W \\<subseteq> V\n  ?v \\<in> attractor p W \\<Longrightarrow>\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and>\n     strategy_attracts_via p \\<sigma> ?v (attractor p W) W\n  \\<lbrakk>?S \\<subseteq> V;\n   \\<And>v.\n      v \\<in> ?S \\<Longrightarrow>\n      \\<exists>\\<sigma>.\n         strategy ?p \\<sigma> \\<and>\n         strategy_attracts_via ?p \\<sigma> v ?S ?W\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<sigma>.\n                       strategy ?p \\<sigma> \\<and>\n                       strategy_attracts ?p \\<sigma> ?S ?W\n  W \\<subseteq> V\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       strategy p \\<sigma> \\<and>\n       strategy_attracts p \\<sigma> (attractor p W) W", "by blast"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>.\n     strategy p \\<sigma> \\<and>\n     strategy_attracts p \\<sigma> (attractor p W) W\n\ngoal:\nNo subgoals!", "qed"], ["", "end \\<comment> \\<open>context ParityGame\\<close>"], ["", "end"]]}