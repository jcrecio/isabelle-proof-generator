{"file_name": "/home/qj213/afp-2021-10-22/thys/Parity_Game/Graph_TheoryCompatibility.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Parity_Game", "problem_names": ["lemma graph_conversion_bij: \"G = from_pre_digraph (to_pre_digraph G)\"", "lemma (in nomulti_digraph) graph_conversion_bij2: \"digraph_iso G (to_pre_digraph (from_pre_digraph G))\""], "translations": [["", "lemma graph_conversion_bij: \"G = from_pre_digraph (to_pre_digraph G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G = from_pre_digraph (to_pre_digraph G)", "unfolding to_pre_digraph_def from_pre_digraph_def arcs_ends_def arc_to_ends_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. G =\n    \\<lparr>Graph.verts =\n              pre_digraph.verts\n               \\<lparr>pre_digraph.verts = V\\<^bsub>G\\<^esub>,\n                  arcs = E\\<^bsub>G\\<^esub>, tail = fst, head = snd\\<rparr>,\n       arcs =\n         (\\<lambda>e.\n             (tail\n               \\<lparr>pre_digraph.verts = V\\<^bsub>G\\<^esub>,\n                  arcs = E\\<^bsub>G\\<^esub>, tail = fst, head = snd\\<rparr>\n               e,\n              head\n               \\<lparr>pre_digraph.verts = V\\<^bsub>G\\<^esub>,\n                  arcs = E\\<^bsub>G\\<^esub>, tail = fst, head = snd\\<rparr>\n               e)) `\n         pre_digraph.arcs\n          \\<lparr>pre_digraph.verts = V\\<^bsub>G\\<^esub>,\n             arcs = E\\<^bsub>G\\<^esub>, tail = fst,\n             head = snd\\<rparr>\\<rparr>", "by auto"], ["", "lemma (in nomulti_digraph) graph_conversion_bij2: \"digraph_iso G (to_pre_digraph (from_pre_digraph G))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. digraph_iso G (to_pre_digraph (from_pre_digraph G))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. digraph_iso G (to_pre_digraph (from_pre_digraph G))", "define iso \n    where \"iso = \\<lparr>\n      iso_verts = id :: 'a \\<Rightarrow> 'a,\n      iso_arcs = arc_to_ends G,\n      iso_head = snd,\n      iso_tail = fst\n    \\<rparr>\""], ["proof (state)\nthis:\n  iso =\n  \\<lparr>iso_verts = id, iso_arcs = arc_to_ends G, iso_head = snd,\n     iso_tail = fst\\<rparr>\n\ngoal (1 subgoal):\n 1. digraph_iso G (to_pre_digraph (from_pre_digraph G))", "have \"inj_on (iso_verts iso) (pre_digraph.verts G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (iso_verts iso) (pre_digraph.verts G)", "unfolding iso_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on\n     (iso_verts\n       \\<lparr>iso_verts = id, iso_arcs = arc_to_ends G, iso_head = snd,\n          iso_tail = fst\\<rparr>)\n     (pre_digraph.verts G)", "by auto"], ["proof (state)\nthis:\n  inj_on (iso_verts iso) (pre_digraph.verts G)\n\ngoal (1 subgoal):\n 1. digraph_iso G (to_pre_digraph (from_pre_digraph G))", "moreover"], ["proof (state)\nthis:\n  inj_on (iso_verts iso) (pre_digraph.verts G)\n\ngoal (1 subgoal):\n 1. digraph_iso G (to_pre_digraph (from_pre_digraph G))", "have \"inj_on (iso_arcs iso) (pre_digraph.arcs G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (iso_arcs iso) (pre_digraph.arcs G)", "unfolding iso_def arc_to_ends_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on\n     (iso_arcs\n       \\<lparr>iso_verts = id, iso_arcs = \\<lambda>e. (tail G e, head G e),\n          iso_head = snd, iso_tail = fst\\<rparr>)\n     (pre_digraph.arcs G)", "by (simp add: arc_to_ends_def inj_onI no_multi_arcs)"], ["proof (state)\nthis:\n  inj_on (iso_arcs iso) (pre_digraph.arcs G)\n\ngoal (1 subgoal):\n 1. digraph_iso G (to_pre_digraph (from_pre_digraph G))", "moreover"], ["proof (state)\nthis:\n  inj_on (iso_arcs iso) (pre_digraph.arcs G)\n\ngoal (1 subgoal):\n 1. digraph_iso G (to_pre_digraph (from_pre_digraph G))", "have \"\\<forall>a \\<in> pre_digraph.arcs G.\n    iso_verts iso (tail G a) = iso_tail iso (iso_arcs iso a)\n    \\<and> iso_verts iso (head G a) = iso_head iso (iso_arcs iso a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>pre_digraph.arcs G.\n       iso_verts iso (tail G a) = iso_tail iso (iso_arcs iso a) \\<and>\n       iso_verts iso (head G a) = iso_head iso (iso_arcs iso a)", "unfolding iso_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>pre_digraph.arcs G.\n       iso_verts\n        \\<lparr>iso_verts = id, iso_arcs = arc_to_ends G, iso_head = snd,\n           iso_tail = fst\\<rparr>\n        (tail G a) =\n       iso_tail\n        \\<lparr>iso_verts = id, iso_arcs = arc_to_ends G, iso_head = snd,\n           iso_tail = fst\\<rparr>\n        (iso_arcs\n          \\<lparr>iso_verts = id, iso_arcs = arc_to_ends G, iso_head = snd,\n             iso_tail = fst\\<rparr>\n          a) \\<and>\n       iso_verts\n        \\<lparr>iso_verts = id, iso_arcs = arc_to_ends G, iso_head = snd,\n           iso_tail = fst\\<rparr>\n        (head G a) =\n       iso_head\n        \\<lparr>iso_verts = id, iso_arcs = arc_to_ends G, iso_head = snd,\n           iso_tail = fst\\<rparr>\n        (iso_arcs\n          \\<lparr>iso_verts = id, iso_arcs = arc_to_ends G, iso_head = snd,\n             iso_tail = fst\\<rparr>\n          a)", "by (simp add: arc_to_ends_def)"], ["proof (state)\nthis:\n  \\<forall>a\\<in>pre_digraph.arcs G.\n     iso_verts iso (tail G a) = iso_tail iso (iso_arcs iso a) \\<and>\n     iso_verts iso (head G a) = iso_head iso (iso_arcs iso a)\n\ngoal (1 subgoal):\n 1. digraph_iso G (to_pre_digraph (from_pre_digraph G))", "ultimately"], ["proof (chain)\npicking this:\n  inj_on (iso_verts iso) (pre_digraph.verts G)\n  inj_on (iso_arcs iso) (pre_digraph.arcs G)\n  \\<forall>a\\<in>pre_digraph.arcs G.\n     iso_verts iso (tail G a) = iso_tail iso (iso_arcs iso a) \\<and>\n     iso_verts iso (head G a) = iso_head iso (iso_arcs iso a)", "have \"digraph_isomorphism iso\""], ["proof (prove)\nusing this:\n  inj_on (iso_verts iso) (pre_digraph.verts G)\n  inj_on (iso_arcs iso) (pre_digraph.arcs G)\n  \\<forall>a\\<in>pre_digraph.arcs G.\n     iso_verts iso (tail G a) = iso_tail iso (iso_arcs iso a) \\<and>\n     iso_verts iso (head G a) = iso_head iso (iso_arcs iso a)\n\ngoal (1 subgoal):\n 1. digraph_isomorphism iso", "unfolding digraph_isomorphism_def"], ["proof (prove)\nusing this:\n  inj_on (iso_verts iso) (pre_digraph.verts G)\n  inj_on (iso_arcs iso) (pre_digraph.arcs G)\n  \\<forall>a\\<in>pre_digraph.arcs G.\n     iso_verts iso (tail G a) = iso_tail iso (iso_arcs iso a) \\<and>\n     iso_verts iso (head G a) = iso_head iso (iso_arcs iso a)\n\ngoal (1 subgoal):\n 1. wf_digraph G \\<and>\n    inj_on (iso_verts iso) (pre_digraph.verts G) \\<and>\n    inj_on (iso_arcs iso) (pre_digraph.arcs G) \\<and>\n    (\\<forall>a\\<in>pre_digraph.arcs G.\n        iso_verts iso (tail G a) = iso_tail iso (iso_arcs iso a) \\<and>\n        iso_verts iso (head G a) = iso_head iso (iso_arcs iso a))", "using arc_to_ends_def wf_digraph_axioms"], ["proof (prove)\nusing this:\n  inj_on (iso_verts iso) (pre_digraph.verts G)\n  inj_on (iso_arcs iso) (pre_digraph.arcs G)\n  \\<forall>a\\<in>pre_digraph.arcs G.\n     iso_verts iso (tail G a) = iso_tail iso (iso_arcs iso a) \\<and>\n     iso_verts iso (head G a) = iso_head iso (iso_arcs iso a)\n  arc_to_ends ?G ?e \\<equiv> (tail ?G ?e, head ?G ?e)\n  wf_digraph G\n\ngoal (1 subgoal):\n 1. wf_digraph G \\<and>\n    inj_on (iso_verts iso) (pre_digraph.verts G) \\<and>\n    inj_on (iso_arcs iso) (pre_digraph.arcs G) \\<and>\n    (\\<forall>a\\<in>pre_digraph.arcs G.\n        iso_verts iso (tail G a) = iso_tail iso (iso_arcs iso a) \\<and>\n        iso_verts iso (head G a) = iso_head iso (iso_arcs iso a))", "by blast"], ["proof (state)\nthis:\n  digraph_isomorphism iso\n\ngoal (1 subgoal):\n 1. digraph_iso G (to_pre_digraph (from_pre_digraph G))", "moreover"], ["proof (state)\nthis:\n  digraph_isomorphism iso\n\ngoal (1 subgoal):\n 1. digraph_iso G (to_pre_digraph (from_pre_digraph G))", "have \"to_pre_digraph (from_pre_digraph G) = app_iso iso G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_pre_digraph (from_pre_digraph G) = app_iso iso G", "unfolding to_pre_digraph_def from_pre_digraph_def iso_def app_iso_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lparr>pre_digraph.verts =\n              V\\<^bsub>\\<lparr>Graph.verts = pre_digraph.verts G, arcs = arcs_ends G\\<rparr>\\<^esub>,\n       arcs =\n         E\\<^bsub>\\<lparr>Graph.verts = pre_digraph.verts G, arcs = arcs_ends G\\<rparr>\\<^esub>,\n       tail = fst, head = snd\\<rparr> =\n    \\<lparr>pre_digraph.verts =\n              iso_verts\n               \\<lparr>iso_verts = id, iso_arcs = arc_to_ends G,\n                  iso_head = snd, iso_tail = fst\\<rparr> `\n              pre_digraph.verts G,\n       arcs =\n         iso_arcs\n          \\<lparr>iso_verts = id, iso_arcs = arc_to_ends G, iso_head = snd,\n             iso_tail = fst\\<rparr> `\n         pre_digraph.arcs G,\n       tail =\n         iso_tail\n          \\<lparr>iso_verts = id, iso_arcs = arc_to_ends G, iso_head = snd,\n             iso_tail = fst\\<rparr>,\n       head =\n         iso_head\n          \\<lparr>iso_verts = id, iso_arcs = arc_to_ends G, iso_head = snd,\n             iso_tail = fst\\<rparr>\\<rparr>", "by (simp_all add: arcs_ends_def)"], ["proof (state)\nthis:\n  to_pre_digraph (from_pre_digraph G) = app_iso iso G\n\ngoal (1 subgoal):\n 1. digraph_iso G (to_pre_digraph (from_pre_digraph G))", "ultimately"], ["proof (chain)\npicking this:\n  digraph_isomorphism iso\n  to_pre_digraph (from_pre_digraph G) = app_iso iso G", "show ?thesis"], ["proof (prove)\nusing this:\n  digraph_isomorphism iso\n  to_pre_digraph (from_pre_digraph G) = app_iso iso G\n\ngoal (1 subgoal):\n 1. digraph_iso G (to_pre_digraph (from_pre_digraph G))", "unfolding digraph_iso_def"], ["proof (prove)\nusing this:\n  digraph_isomorphism iso\n  to_pre_digraph (from_pre_digraph G) = app_iso iso G\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       digraph_isomorphism f \\<and>\n       to_pre_digraph (from_pre_digraph G) = app_iso f G", "by blast"], ["proof (state)\nthis:\n  digraph_iso G (to_pre_digraph (from_pre_digraph G))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}