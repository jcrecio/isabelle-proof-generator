{"file_name": "/home/qj213/afp-2021-10-22/thys/Parity_Game/Attractor.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Parity_Game", "problem_names": ["lemma directly_attracted_disjoint     [simp]: \"directly_attracted p W \\<inter> W = {}\"\n  and directly_attracted_empty        [simp]: \"directly_attracted p {} = {}\"\n  and directly_attracted_V_empty      [simp]: \"directly_attracted p V = {}\"\n  and directly_attracted_bounded_by_V [simp]: \"directly_attracted p W \\<subseteq> V\"\n  and directly_attracted_contains_no_deadends [elim]: \"v \\<in> directly_attracted p W \\<Longrightarrow> \\<not>deadend v\"", "lemma attractor_step_empty: \"attractor_step p {} {} = {}\"\n  and attractor_step_bounded_by_V: \"\\<lbrakk> W \\<subseteq> V; S \\<subseteq> V \\<rbrakk> \\<Longrightarrow> attractor_step p W S \\<subseteq> V\"", "lemma attractor_step_mono: \"mono (attractor_step p W)\"", "lemma attractor_unfolding: \"attractor p W = attractor_step p W (attractor p W)\"", "lemma attractor_lowerbound: \"attractor_step p W S \\<subseteq> S \\<Longrightarrow> attractor p W \\<subseteq> S\"", "lemma attractor_set_non_empty: \"W \\<noteq> {} \\<Longrightarrow> attractor p W \\<noteq> {}\"\n  and attractor_set_base: \"W \\<subseteq> attractor p W\"", "lemma attractor_in_V: \"W \\<subseteq> V \\<Longrightarrow> attractor p W \\<subseteq> V\"", "lemma attractor_set_VVp:\n  assumes \"v \\<in> VV p\" \"v\\<rightarrow>w\" \"w \\<in> attractor p W\"\n  shows \"v \\<in> attractor p W\"", "lemma attractor_set_VVpstar:\n  assumes \"\\<not>deadend v\" \"\\<And>w. v\\<rightarrow>w \\<Longrightarrow> w \\<in> attractor p W\"\n  shows \"v \\<in> attractor p W\"", "lemma removing_attractor_induces_no_deadends:\n  assumes \"v \\<in> S - attractor p W\" \"v\\<rightarrow>w\" \"w \\<in> S\" \"\\<And>w. \\<lbrakk> v \\<in> VV p**; v\\<rightarrow>w \\<rbrakk> \\<Longrightarrow> w \\<in> S\"\n  shows \"\\<exists>w \\<in> S - attractor p W. v\\<rightarrow>w\"", "lemma subgame_without_deadends:\n  assumes V'_def: \"V' = V - attractor p (deadends p**) - attractor p** (deadends p****)\"\n    (is \"V' = V - ?A - ?B\")\n    and v: \"v \\<in> V\\<^bsub>subgame V'\\<^esub>\"\n  shows \"\\<not>Digraph.deadend (subgame V') v\"", "lemma mono_restriction_is_mono: \"mono f \\<Longrightarrow> mono (\\<lambda>S. f (S \\<inter> V))\"", "lemma attractor_set_induction [consumes 1, case_names step union]:\n  assumes \"W \\<subseteq> V\"\n    and step: \"\\<And>S. S \\<subseteq> V \\<Longrightarrow> P S \\<Longrightarrow> P (attractor_step p W S)\"\n    and union: \"\\<And>M. \\<forall>S \\<in> M. S \\<subseteq> V \\<and> P S \\<Longrightarrow> P (\\<Union>M)\"\n  shows \"P (attractor p W)\""], "translations": [["", "lemma directly_attracted_disjoint     [simp]: \"directly_attracted p W \\<inter> W = {}\"\n  and directly_attracted_empty        [simp]: \"directly_attracted p {} = {}\"\n  and directly_attracted_V_empty      [simp]: \"directly_attracted p V = {}\"\n  and directly_attracted_bounded_by_V [simp]: \"directly_attracted p W \\<subseteq> V\"\n  and directly_attracted_contains_no_deadends [elim]: \"v \\<in> directly_attracted p W \\<Longrightarrow> \\<not>deadend v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (directly_attracted p W \\<inter> W = {} &&&\n     directly_attracted p {} = {}) &&&\n    directly_attracted p V = {} &&&\n    directly_attracted p W \\<subseteq> V &&&\n    (v \\<in> directly_attracted p W \\<Longrightarrow> \\<not> deadend v)", "unfolding directly_attracted_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ({v \\<in> V - W.\n      \\<not> deadend v \\<and>\n      (v \\<in> VV p \\<longrightarrow>\n       (\\<exists>w. v \\<rightarrow> w \\<and> w \\<in> W)) \\<and>\n      (v \\<in> VV p** \\<longrightarrow>\n       (\\<forall>w.\n           v \\<rightarrow> w \\<longrightarrow> w \\<in> W))} \\<inter>\n     W =\n     {} &&&\n     {v \\<in> V - {}.\n      \\<not> deadend v \\<and>\n      (v \\<in> VV p \\<longrightarrow>\n       (\\<exists>w. v \\<rightarrow> w \\<and> w \\<in> {})) \\<and>\n      (v \\<in> VV p** \\<longrightarrow>\n       (\\<forall>w. v \\<rightarrow> w \\<longrightarrow> w \\<in> {}))} =\n     {}) &&&\n    {v \\<in> V - V.\n     \\<not> deadend v \\<and>\n     (v \\<in> VV p \\<longrightarrow>\n      (\\<exists>w. v \\<rightarrow> w \\<and> w \\<in> V)) \\<and>\n     (v \\<in> VV p** \\<longrightarrow>\n      (\\<forall>w. v \\<rightarrow> w \\<longrightarrow> w \\<in> V))} =\n    {} &&&\n    {v \\<in> V - W.\n     \\<not> deadend v \\<and>\n     (v \\<in> VV p \\<longrightarrow>\n      (\\<exists>w. v \\<rightarrow> w \\<and> w \\<in> W)) \\<and>\n     (v \\<in> VV p** \\<longrightarrow>\n      (\\<forall>w. v \\<rightarrow> w \\<longrightarrow> w \\<in> W))}\n    \\<subseteq> V &&&\n    (v \\<in> {v \\<in> V - W.\n              \\<not> deadend v \\<and>\n              (v \\<in> VV p \\<longrightarrow>\n               (\\<exists>w. v \\<rightarrow> w \\<and> w \\<in> W)) \\<and>\n              (v \\<in> VV p** \\<longrightarrow>\n               (\\<forall>w.\n                   v \\<rightarrow> w \\<longrightarrow>\n                   w \\<in> W))} \\<Longrightarrow>\n     \\<not> deadend v)", "by blast+"], ["", "subsection \\<open>\\<open>attractor_step\\<close>\\<close>"], ["", "lemma attractor_step_empty: \"attractor_step p {} {} = {}\"\n  and attractor_step_bounded_by_V: \"\\<lbrakk> W \\<subseteq> V; S \\<subseteq> V \\<rbrakk> \\<Longrightarrow> attractor_step p W S \\<subseteq> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<union> {} \\<union> directly_attracted p {} = {} &&&\n    (\\<lbrakk>W \\<subseteq> V; S \\<subseteq> V\\<rbrakk>\n     \\<Longrightarrow> W \\<union> S \\<union> directly_attracted p S\n                       \\<subseteq> V)", "by simp_all"], ["", "text \\<open>\n  The definition of @{const attractor} uses @{const lfp}.  For this to be well-defined, we\n  need show that \\<open>attractor_step\\<close> is monotone.\n\\<close>"], ["", "lemma attractor_step_mono: \"mono (attractor_step p W)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S)", "unfolding directly_attracted_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. mono\n     (\\<lambda>S.\n         W \\<union> S \\<union>\n         {v \\<in> V - S.\n          \\<not> deadend v \\<and>\n          (v \\<in> VV p \\<longrightarrow>\n           (\\<exists>w. v \\<rightarrow> w \\<and> w \\<in> S)) \\<and>\n          (v \\<in> VV p** \\<longrightarrow>\n           (\\<forall>w. v \\<rightarrow> w \\<longrightarrow> w \\<in> S))})", "by (rule monoI) auto"], ["", "subsection \\<open>Basic Properties of an Attractor\\<close>"], ["", "lemma attractor_unfolding: \"attractor p W = attractor_step p W (attractor p W)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. attractor p W =\n    W \\<union> attractor p W \\<union> directly_attracted p (attractor p W)", "unfolding attractor_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) =\n    W \\<union>\n    lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) \\<union>\n    directly_attracted p\n     (lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S))", "using attractor_step_mono lfp_unfold"], ["proof (prove)\nusing this:\n  mono (\\<lambda>S. ?W \\<union> S \\<union> directly_attracted ?p S)\n  mono ?f \\<Longrightarrow> lfp ?f = ?f (lfp ?f)\n\ngoal (1 subgoal):\n 1. lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) =\n    W \\<union>\n    lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) \\<union>\n    directly_attracted p\n     (lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S))", "by blast"], ["", "lemma attractor_lowerbound: \"attractor_step p W S \\<subseteq> S \\<Longrightarrow> attractor p W \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W \\<union> S \\<union> directly_attracted p S\n    \\<subseteq> S \\<Longrightarrow>\n    attractor p W \\<subseteq> S", "unfolding attractor_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. W \\<union> S \\<union> directly_attracted p S\n    \\<subseteq> S \\<Longrightarrow>\n    lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S)\n    \\<subseteq> S", "using attractor_step_mono"], ["proof (prove)\nusing this:\n  mono (\\<lambda>S. ?W \\<union> S \\<union> directly_attracted ?p S)\n\ngoal (1 subgoal):\n 1. W \\<union> S \\<union> directly_attracted p S\n    \\<subseteq> S \\<Longrightarrow>\n    lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S)\n    \\<subseteq> S", "by (simp add: lfp_lowerbound)"], ["", "lemma attractor_set_non_empty: \"W \\<noteq> {} \\<Longrightarrow> attractor p W \\<noteq> {}\"\n  and attractor_set_base: \"W \\<subseteq> attractor p W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (W \\<noteq> {} \\<Longrightarrow> attractor p W \\<noteq> {}) &&&\n    W \\<subseteq> attractor p W", "using attractor_unfolding"], ["proof (prove)\nusing this:\n  attractor ?p ?W =\n  ?W \\<union> attractor ?p ?W \\<union>\n  directly_attracted ?p (attractor ?p ?W)\n\ngoal (1 subgoal):\n 1. (W \\<noteq> {} \\<Longrightarrow> attractor p W \\<noteq> {}) &&&\n    W \\<subseteq> attractor p W", "by auto"], ["", "lemma attractor_in_V: \"W \\<subseteq> V \\<Longrightarrow> attractor p W \\<subseteq> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W \\<subseteq> V \\<Longrightarrow> attractor p W \\<subseteq> V", "using attractor_lowerbound attractor_step_bounded_by_V"], ["proof (prove)\nusing this:\n  ?W \\<union> ?S \\<union> directly_attracted ?p ?S\n  \\<subseteq> ?S \\<Longrightarrow>\n  attractor ?p ?W \\<subseteq> ?S\n  \\<lbrakk>?W \\<subseteq> V; ?S \\<subseteq> V\\<rbrakk>\n  \\<Longrightarrow> ?W \\<union> ?S \\<union> directly_attracted ?p ?S\n                    \\<subseteq> V\n\ngoal (1 subgoal):\n 1. W \\<subseteq> V \\<Longrightarrow> attractor p W \\<subseteq> V", "by auto"], ["", "subsection \\<open>Attractor Set Extensions\\<close>"], ["", "lemma attractor_set_VVp:\n  assumes \"v \\<in> VV p\" \"v\\<rightarrow>w\" \"w \\<in> attractor p W\"\n  shows \"v \\<in> attractor p W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> attractor p W", "apply (subst attractor_unfolding)"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> W \\<union> attractor p W \\<union>\n            directly_attracted p (attractor p W)", "unfolding directly_attracted_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> W \\<union> attractor p W \\<union>\n            {v \\<in> V - attractor p W.\n             \\<not> deadend v \\<and>\n             (v \\<in> VV p \\<longrightarrow>\n              (\\<exists>w.\n                  v \\<rightarrow> w \\<and> w \\<in> attractor p W)) \\<and>\n             (v \\<in> VV p** \\<longrightarrow>\n              (\\<forall>w.\n                  v \\<rightarrow> w \\<longrightarrow>\n                  w \\<in> attractor p W))}", "using assms"], ["proof (prove)\nusing this:\n  v \\<in> VV p\n  v \\<rightarrow> w\n  w \\<in> attractor p W\n\ngoal (1 subgoal):\n 1. v \\<in> W \\<union> attractor p W \\<union>\n            {v \\<in> V - attractor p W.\n             \\<not> deadend v \\<and>\n             (v \\<in> VV p \\<longrightarrow>\n              (\\<exists>w.\n                  v \\<rightarrow> w \\<and> w \\<in> attractor p W)) \\<and>\n             (v \\<in> VV p** \\<longrightarrow>\n              (\\<forall>w.\n                  v \\<rightarrow> w \\<longrightarrow>\n                  w \\<in> attractor p W))}", "by auto"], ["", "lemma attractor_set_VVpstar:\n  assumes \"\\<not>deadend v\" \"\\<And>w. v\\<rightarrow>w \\<Longrightarrow> w \\<in> attractor p W\"\n  shows \"v \\<in> attractor p W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> attractor p W", "apply (subst attractor_unfolding)"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> W \\<union> attractor p W \\<union>\n            directly_attracted p (attractor p W)", "unfolding directly_attracted_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> W \\<union> attractor p W \\<union>\n            {v \\<in> V - attractor p W.\n             \\<not> deadend v \\<and>\n             (v \\<in> VV p \\<longrightarrow>\n              (\\<exists>w.\n                  v \\<rightarrow> w \\<and> w \\<in> attractor p W)) \\<and>\n             (v \\<in> VV p** \\<longrightarrow>\n              (\\<forall>w.\n                  v \\<rightarrow> w \\<longrightarrow>\n                  w \\<in> attractor p W))}", "using assms"], ["proof (prove)\nusing this:\n  \\<not> deadend v\n  v \\<rightarrow> ?w \\<Longrightarrow> ?w \\<in> attractor p W\n\ngoal (1 subgoal):\n 1. v \\<in> W \\<union> attractor p W \\<union>\n            {v \\<in> V - attractor p W.\n             \\<not> deadend v \\<and>\n             (v \\<in> VV p \\<longrightarrow>\n              (\\<exists>w.\n                  v \\<rightarrow> w \\<and> w \\<in> attractor p W)) \\<and>\n             (v \\<in> VV p** \\<longrightarrow>\n              (\\<forall>w.\n                  v \\<rightarrow> w \\<longrightarrow>\n                  w \\<in> attractor p W))}", "by auto"], ["", "subsection \\<open>Removing an Attractor\\<close>"], ["", "lemma removing_attractor_induces_no_deadends:\n  assumes \"v \\<in> S - attractor p W\" \"v\\<rightarrow>w\" \"w \\<in> S\" \"\\<And>w. \\<lbrakk> v \\<in> VV p**; v\\<rightarrow>w \\<rbrakk> \\<Longrightarrow> w \\<in> S\"\n  shows \"\\<exists>w \\<in> S - attractor p W. v\\<rightarrow>w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>w\\<in>S - attractor p W. v \\<rightarrow> w", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>w\\<in>S - attractor p W. v \\<rightarrow> w", "have \"v \\<in> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> V", "using \\<open>v\\<rightarrow>w\\<close>"], ["proof (prove)\nusing this:\n  v \\<rightarrow> w\n\ngoal (1 subgoal):\n 1. v \\<in> V", "by blast"], ["proof (state)\nthis:\n  v \\<in> V\n\ngoal (1 subgoal):\n 1. \\<exists>w\\<in>S - attractor p W. v \\<rightarrow> w", "thus ?thesis"], ["proof (prove)\nusing this:\n  v \\<in> V\n\ngoal (1 subgoal):\n 1. \\<exists>w\\<in>S - attractor p W. v \\<rightarrow> w", "proof (cases rule: VV_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. v \\<in> VV ?p \\<Longrightarrow>\n    \\<exists>w\\<in>S - attractor p W. v \\<rightarrow> w\n 2. v \\<in> VV ?p** \\<Longrightarrow>\n    \\<exists>w\\<in>S - attractor p W. v \\<rightarrow> w", "assume \"v \\<in> VV p\""], ["proof (state)\nthis:\n  v \\<in> VV p\n\ngoal (2 subgoals):\n 1. v \\<in> VV ?p \\<Longrightarrow>\n    \\<exists>w\\<in>S - attractor p W. v \\<rightarrow> w\n 2. v \\<in> VV ?p** \\<Longrightarrow>\n    \\<exists>w\\<in>S - attractor p W. v \\<rightarrow> w", "thus ?thesis"], ["proof (prove)\nusing this:\n  v \\<in> VV p\n\ngoal (1 subgoal):\n 1. \\<exists>w\\<in>S - attractor p W. v \\<rightarrow> w", "using attractor_set_VVp assms"], ["proof (prove)\nusing this:\n  v \\<in> VV p\n  \\<lbrakk>?v \\<in> VV ?p; ?v \\<rightarrow> ?w;\n   ?w \\<in> attractor ?p ?W\\<rbrakk>\n  \\<Longrightarrow> ?v \\<in> attractor ?p ?W\n  v \\<in> S - attractor p W\n  v \\<rightarrow> w\n  w \\<in> S\n  \\<lbrakk>v \\<in> VV p**; v \\<rightarrow> ?w\\<rbrakk>\n  \\<Longrightarrow> ?w \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>w\\<in>S - attractor p W. v \\<rightarrow> w", "by blast"], ["proof (state)\nthis:\n  \\<exists>w\\<in>S - attractor p W. v \\<rightarrow> w\n\ngoal (1 subgoal):\n 1. v \\<in> VV p** \\<Longrightarrow>\n    \\<exists>w\\<in>S - attractor p W. v \\<rightarrow> w", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<in> VV p** \\<Longrightarrow>\n    \\<exists>w\\<in>S - attractor p W. v \\<rightarrow> w", "assume \"v \\<in> VV p**\""], ["proof (state)\nthis:\n  v \\<in> VV p**\n\ngoal (1 subgoal):\n 1. v \\<in> VV p** \\<Longrightarrow>\n    \\<exists>w\\<in>S - attractor p W. v \\<rightarrow> w", "thus ?thesis"], ["proof (prove)\nusing this:\n  v \\<in> VV p**\n\ngoal (1 subgoal):\n 1. \\<exists>w\\<in>S - attractor p W. v \\<rightarrow> w", "using attractor_set_VVpstar assms"], ["proof (prove)\nusing this:\n  v \\<in> VV p**\n  \\<lbrakk>\\<not> deadend ?v;\n   \\<And>w.\n      ?v \\<rightarrow> w \\<Longrightarrow> w \\<in> attractor ?p ?W\\<rbrakk>\n  \\<Longrightarrow> ?v \\<in> attractor ?p ?W\n  v \\<in> S - attractor p W\n  v \\<rightarrow> w\n  w \\<in> S\n  \\<lbrakk>v \\<in> VV p**; v \\<rightarrow> ?w\\<rbrakk>\n  \\<Longrightarrow> ?w \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>w\\<in>S - attractor p W. v \\<rightarrow> w", "by (metis Diff_iff edges_are_in_V(2))"], ["proof (state)\nthis:\n  \\<exists>w\\<in>S - attractor p W. v \\<rightarrow> w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>w\\<in>S - attractor p W. v \\<rightarrow> w\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Removing the attractor sets of deadends leaves a subgame without deadends.\\<close>"], ["", "lemma subgame_without_deadends:\n  assumes V'_def: \"V' = V - attractor p (deadends p**) - attractor p** (deadends p****)\"\n    (is \"V' = V - ?A - ?B\")\n    and v: \"v \\<in> V\\<^bsub>subgame V'\\<^esub>\"\n  shows \"\\<not>Digraph.deadend (subgame V') v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)", "assume \"deadend v\""], ["proof (state)\nthis:\n  deadend v\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)", "have v: \"v \\<in> V - ?A - ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> V - attractor p (deadends p**) - attractor p** (deadends p****)", "using v"], ["proof (prove)\nusing this:\n  v \\<in> V\\<^bsub>subgame V'\\<^esub>\n\ngoal (1 subgoal):\n 1. v \\<in> V - attractor p (deadends p**) - attractor p** (deadends p****)", "unfolding V'_def subgame_def"], ["proof (prove)\nusing this:\n  v \\<in> V\\<^bsub>G\\<lparr>verts := V \\<inter> (V - attractor p (deadends p**) - attractor p** (deadends p****)), arcs := Restr E (V - attractor p (deadends p**) - attractor p** (deadends p****)), player0 := V0 \\<inter> (V - attractor p (deadends p**) - attractor p** (deadends p****))\\<rparr>\\<^esub>\n\ngoal (1 subgoal):\n 1. v \\<in> V - attractor p (deadends p**) - attractor p** (deadends p****)", "by simp"], ["proof (state)\nthis:\n  v \\<in> V - attractor p (deadends p**) - attractor p** (deadends p****)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)", "{"], ["proof (state)\nthis:\n  v \\<in> V - attractor p (deadends p**) - attractor p** (deadends p****)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)", "fix p'"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)", "assume \"v \\<in> VV p'**\""], ["proof (state)\nthis:\n  v \\<in> VV p'**\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)", "hence \"v \\<in> attractor p' (deadends p'**)\""], ["proof (prove)\nusing this:\n  v \\<in> VV p'**\n\ngoal (1 subgoal):\n 1. v \\<in> attractor p' (deadends p'**)", "using \\<open>deadend v\\<close> attractor_set_base[of \"deadends p'**\" p']"], ["proof (prove)\nusing this:\n  v \\<in> VV p'**\n  deadend v\n  deadends p'** \\<subseteq> attractor p' (deadends p'**)\n\ngoal (1 subgoal):\n 1. v \\<in> attractor p' (deadends p'**)", "unfolding deadends_def"], ["proof (prove)\nusing this:\n  v \\<in> VV p'**\n  deadend v\n  {v \\<in> VV p'**. deadend v}\n  \\<subseteq> attractor p' {v \\<in> VV p'**. deadend v}\n\ngoal (1 subgoal):\n 1. v \\<in> attractor p' {v \\<in> VV p'**. deadend v}", "by blast"], ["proof (state)\nthis:\n  v \\<in> attractor p' (deadends p'**)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)", "hence False"], ["proof (prove)\nusing this:\n  v \\<in> attractor p' (deadends p'**)\n\ngoal (1 subgoal):\n 1. False", "using v"], ["proof (prove)\nusing this:\n  v \\<in> attractor p' (deadends p'**)\n  v \\<in> V - attractor p (deadends p**) - attractor p** (deadends p****)\n\ngoal (1 subgoal):\n 1. False", "by (cases p'; cases p) auto"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)", "}"], ["proof (state)\nthis:\n  v \\<in> VV ?p'2** \\<Longrightarrow> False\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)", "thus ?thesis"], ["proof (prove)\nusing this:\n  v \\<in> VV ?p'2** \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)", "using v"], ["proof (prove)\nusing this:\n  v \\<in> VV ?p'2** \\<Longrightarrow> False\n  v \\<in> V - attractor p (deadends p**) - attractor p** (deadends p****)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)", "by blast"], ["proof (state)\nthis:\n  \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                    v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)\n\ngoal (1 subgoal):\n 1. \\<not> deadend v \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> deadend v \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)", "assume \"\\<not>deadend v\""], ["proof (state)\nthis:\n  \\<not> deadend v\n\ngoal (1 subgoal):\n 1. \\<not> deadend v \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)", "have v: \"v \\<in> V - ?A - ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> V - attractor p (deadends p**) - attractor p** (deadends p****)", "using v"], ["proof (prove)\nusing this:\n  v \\<in> V\\<^bsub>subgame V'\\<^esub>\n\ngoal (1 subgoal):\n 1. v \\<in> V - attractor p (deadends p**) - attractor p** (deadends p****)", "unfolding V'_def subgame_def"], ["proof (prove)\nusing this:\n  v \\<in> V\\<^bsub>G\\<lparr>verts := V \\<inter> (V - attractor p (deadends p**) - attractor p** (deadends p****)), arcs := Restr E (V - attractor p (deadends p**) - attractor p** (deadends p****)), player0 := V0 \\<inter> (V - attractor p (deadends p**) - attractor p** (deadends p****))\\<rparr>\\<^esub>\n\ngoal (1 subgoal):\n 1. v \\<in> V - attractor p (deadends p**) - attractor p** (deadends p****)", "by simp"], ["proof (state)\nthis:\n  v \\<in> V - attractor p (deadends p**) - attractor p** (deadends p****)\n\ngoal (1 subgoal):\n 1. \\<not> deadend v \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)", "define G' where \"G' = subgame V'\""], ["proof (state)\nthis:\n  G' = subgame V'\n\ngoal (1 subgoal):\n 1. \\<not> deadend v \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)", "interpret G': ParityGame G'"], ["proof (prove)\ngoal (1 subgoal):\n 1. ParityGame G'", "unfolding G'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ParityGame (subgame V')", "using subgame_ParityGame"], ["proof (prove)\nusing this:\n  ParityGame (subgame ?V')\n\ngoal (1 subgoal):\n 1. ParityGame (subgame V')", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> deadend v \\<Longrightarrow>\n    \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                      v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n               v \\<rightarrow>\\<^bsub>subgame V'\\<^esub>\n               w) \\<Longrightarrow>\n    False", "assume \"Digraph.deadend (subgame V') v\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n             v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n               v \\<rightarrow>\\<^bsub>subgame V'\\<^esub>\n               w) \\<Longrightarrow>\n    False", "hence \"G'.deadend v\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n             v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)\n\ngoal (1 subgoal):\n 1. G'.deadend v", "unfolding G'_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n             v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n               v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)", "."], ["proof (state)\nthis:\n  G'.deadend v\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n               v \\<rightarrow>\\<^bsub>subgame V'\\<^esub>\n               w) \\<Longrightarrow>\n    False", "have all_in_attractor: \"\\<And>w. v\\<rightarrow>w \\<Longrightarrow> w \\<in> ?A \\<or> w \\<in> ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w.\n       v \\<rightarrow> w \\<Longrightarrow>\n       w \\<in> attractor p (deadends p**) \\<or>\n       w \\<in> attractor p** (deadends p****)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>v \\<rightarrow> w;\n        \\<not> (w \\<in> attractor p (deadends p**) \\<or>\n                w \\<in> attractor p** (deadends p****))\\<rbrakk>\n       \\<Longrightarrow> False", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>v \\<rightarrow> w;\n        \\<not> (w \\<in> attractor p (deadends p**) \\<or>\n                w \\<in> attractor p** (deadends p****))\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"v\\<rightarrow>w\" \"\\<not>(w \\<in> ?A \\<or> w \\<in> ?B)\""], ["proof (state)\nthis:\n  v \\<rightarrow> w\n  \\<not> (w \\<in> attractor p (deadends p**) \\<or>\n          w \\<in> attractor p** (deadends p****))\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>v \\<rightarrow> w;\n        \\<not> (w \\<in> attractor p (deadends p**) \\<or>\n                w \\<in> attractor p** (deadends p****))\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"w \\<in> V'\""], ["proof (prove)\nusing this:\n  v \\<rightarrow> w\n  \\<not> (w \\<in> attractor p (deadends p**) \\<or>\n          w \\<in> attractor p** (deadends p****))\n\ngoal (1 subgoal):\n 1. w \\<in> V'", "unfolding V'_def"], ["proof (prove)\nusing this:\n  v \\<rightarrow> w\n  \\<not> (w \\<in> attractor p (deadends p**) \\<or>\n          w \\<in> attractor p** (deadends p****))\n\ngoal (1 subgoal):\n 1. w \\<in> V - attractor p (deadends p**) - attractor p** (deadends p****)", "by blast"], ["proof (state)\nthis:\n  w \\<in> V'\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>v \\<rightarrow> w;\n        \\<not> (w \\<in> attractor p (deadends p**) \\<or>\n                w \\<in> attractor p** (deadends p****))\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"w \\<in> V\\<^bsub>G'\\<^esub>\""], ["proof (prove)\nusing this:\n  w \\<in> V'\n\ngoal (1 subgoal):\n 1. w \\<in> V\\<^bsub>G'\\<^esub>", "unfolding G'_def subgame_def"], ["proof (prove)\nusing this:\n  w \\<in> V'\n\ngoal (1 subgoal):\n 1. w \\<in> V\\<^bsub>G\\<lparr>verts := V \\<inter> V', arcs := Restr E V', player0 := V0 \\<inter> V'\\<rparr>\\<^esub>", "using \\<open>v\\<rightarrow>w\\<close>"], ["proof (prove)\nusing this:\n  w \\<in> V'\n  v \\<rightarrow> w\n\ngoal (1 subgoal):\n 1. w \\<in> V\\<^bsub>G\\<lparr>verts := V \\<inter> V', arcs := Restr E V', player0 := V0 \\<inter> V'\\<rparr>\\<^esub>", "by auto"], ["proof (state)\nthis:\n  w \\<in> V\\<^bsub>G'\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>v \\<rightarrow> w;\n        \\<not> (w \\<in> attractor p (deadends p**) \\<or>\n                w \\<in> attractor p** (deadends p****))\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"v \\<rightarrow>\\<^bsub>G'\\<^esub> w\""], ["proof (prove)\nusing this:\n  w \\<in> V\\<^bsub>G'\\<^esub>\n\ngoal (1 subgoal):\n 1. v \\<rightarrow>\\<^bsub>G'\\<^esub> w", "using \\<open>v\\<rightarrow>w\\<close> assms(2)"], ["proof (prove)\nusing this:\n  w \\<in> V\\<^bsub>G'\\<^esub>\n  v \\<rightarrow> w\n  v \\<in> V\\<^bsub>subgame V'\\<^esub>\n\ngoal (1 subgoal):\n 1. v \\<rightarrow>\\<^bsub>G'\\<^esub> w", "unfolding G'_def subgame_def"], ["proof (prove)\nusing this:\n  w \\<in> V\\<^bsub>G\\<lparr>verts := V \\<inter> V', arcs := Restr E V', player0 := V0 \\<inter> V'\\<rparr>\\<^esub>\n  v \\<rightarrow> w\n  v \\<in> V\\<^bsub>G\\<lparr>verts := V \\<inter> V', arcs := Restr E V', player0 := V0 \\<inter> V'\\<rparr>\\<^esub>\n\ngoal (1 subgoal):\n 1. v \\<rightarrow>\\<^bsub>G\\<lparr>verts := V \\<inter> V', arcs := Restr E V', player0 := V0 \\<inter> V'\\<rparr>\\<^esub>\n    w", "by auto"], ["proof (state)\nthis:\n  v \\<rightarrow>\\<^bsub>G'\\<^esub> w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>v \\<rightarrow> w;\n        \\<not> (w \\<in> attractor p (deadends p**) \\<or>\n                w \\<in> attractor p** (deadends p****))\\<rbrakk>\n       \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  v \\<rightarrow>\\<^bsub>G'\\<^esub> w\n\ngoal (1 subgoal):\n 1. False", "using \\<open>G'.deadend v\\<close>"], ["proof (prove)\nusing this:\n  v \\<rightarrow>\\<^bsub>G'\\<^esub> w\n  G'.deadend v\n\ngoal (1 subgoal):\n 1. False", "using \\<open>w \\<in> V\\<^bsub>G'\\<^esub>\\<close>"], ["proof (prove)\nusing this:\n  v \\<rightarrow>\\<^bsub>G'\\<^esub> w\n  G'.deadend v\n  w \\<in> V\\<^bsub>G'\\<^esub>\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v \\<rightarrow> ?w \\<Longrightarrow>\n  ?w \\<in> attractor p (deadends p**) \\<or>\n  ?w \\<in> attractor p** (deadends p****)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n               v \\<rightarrow>\\<^bsub>subgame V'\\<^esub>\n               w) \\<Longrightarrow>\n    False", "{"], ["proof (state)\nthis:\n  v \\<rightarrow> ?w \\<Longrightarrow>\n  ?w \\<in> attractor p (deadends p**) \\<or>\n  ?w \\<in> attractor p** (deadends p****)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n               v \\<rightarrow>\\<^bsub>subgame V'\\<^esub>\n               w) \\<Longrightarrow>\n    False", "fix p'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n               v \\<rightarrow>\\<^bsub>subgame V'\\<^esub>\n               w) \\<Longrightarrow>\n    False", "assume \"v \\<in> VV p'\""], ["proof (state)\nthis:\n  v \\<in> VV p'\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n               v \\<rightarrow>\\<^bsub>subgame V'\\<^esub>\n               w) \\<Longrightarrow>\n    False", "{"], ["proof (state)\nthis:\n  v \\<in> VV p'\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n               v \\<rightarrow>\\<^bsub>subgame V'\\<^esub>\n               w) \\<Longrightarrow>\n    False", "assume \"\\<exists>w. v\\<rightarrow>w \\<and> w \\<in> attractor p' (deadends p'**)\""], ["proof (state)\nthis:\n  \\<exists>w. v \\<rightarrow> w \\<and> w \\<in> attractor p' (deadends p'**)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n               v \\<rightarrow>\\<^bsub>subgame V'\\<^esub>\n               w) \\<Longrightarrow>\n    False", "hence \"v \\<in> attractor p' (deadends p'**)\""], ["proof (prove)\nusing this:\n  \\<exists>w. v \\<rightarrow> w \\<and> w \\<in> attractor p' (deadends p'**)\n\ngoal (1 subgoal):\n 1. v \\<in> attractor p' (deadends p'**)", "using \\<open>v \\<in> VV p'\\<close> attractor_set_VVp"], ["proof (prove)\nusing this:\n  \\<exists>w. v \\<rightarrow> w \\<and> w \\<in> attractor p' (deadends p'**)\n  v \\<in> VV p'\n  \\<lbrakk>?v \\<in> VV ?p; ?v \\<rightarrow> ?w;\n   ?w \\<in> attractor ?p ?W\\<rbrakk>\n  \\<Longrightarrow> ?v \\<in> attractor ?p ?W\n\ngoal (1 subgoal):\n 1. v \\<in> attractor p' (deadends p'**)", "by blast"], ["proof (state)\nthis:\n  v \\<in> attractor p' (deadends p'**)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n               v \\<rightarrow>\\<^bsub>subgame V'\\<^esub>\n               w) \\<Longrightarrow>\n    False", "hence False"], ["proof (prove)\nusing this:\n  v \\<in> attractor p' (deadends p'**)\n\ngoal (1 subgoal):\n 1. False", "using v"], ["proof (prove)\nusing this:\n  v \\<in> attractor p' (deadends p'**)\n  v \\<in> V - attractor p (deadends p**) - attractor p** (deadends p****)\n\ngoal (1 subgoal):\n 1. False", "by (cases p'; cases p) auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n               v \\<rightarrow>\\<^bsub>subgame V'\\<^esub>\n               w) \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  \\<exists>w.\n     v \\<rightarrow> w \\<and>\n     w \\<in> attractor p' (deadends p'**) \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n               v \\<rightarrow>\\<^bsub>subgame V'\\<^esub>\n               w) \\<Longrightarrow>\n    False", "hence \"\\<And>w. v\\<rightarrow>w \\<Longrightarrow> w \\<in> attractor p'** (deadends p'****)\""], ["proof (prove)\nusing this:\n  \\<exists>w.\n     v \\<rightarrow> w \\<and>\n     w \\<in> attractor p' (deadends p'**) \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       v \\<rightarrow> w \\<Longrightarrow>\n       w \\<in> attractor p'** (deadends p'****)", "using all_in_attractor"], ["proof (prove)\nusing this:\n  \\<exists>w.\n     v \\<rightarrow> w \\<and>\n     w \\<in> attractor p' (deadends p'**) \\<Longrightarrow>\n  False\n  v \\<rightarrow> ?w \\<Longrightarrow>\n  ?w \\<in> attractor p (deadends p**) \\<or>\n  ?w \\<in> attractor p** (deadends p****)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       v \\<rightarrow> w \\<Longrightarrow>\n       w \\<in> attractor p'** (deadends p'****)", "by (cases p'; cases p) auto"], ["proof (state)\nthis:\n  v \\<rightarrow> ?w \\<Longrightarrow>\n  ?w \\<in> attractor p'** (deadends p'****)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n               v \\<rightarrow>\\<^bsub>subgame V'\\<^esub>\n               w) \\<Longrightarrow>\n    False", "hence \"v \\<in> attractor p'** (deadends p'****)\""], ["proof (prove)\nusing this:\n  v \\<rightarrow> ?w \\<Longrightarrow>\n  ?w \\<in> attractor p'** (deadends p'****)\n\ngoal (1 subgoal):\n 1. v \\<in> attractor p'** (deadends p'****)", "using \\<open>\\<not>deadend v\\<close> \\<open>v \\<in> VV p'\\<close> attractor_set_VVpstar"], ["proof (prove)\nusing this:\n  v \\<rightarrow> ?w \\<Longrightarrow>\n  ?w \\<in> attractor p'** (deadends p'****)\n  \\<not> deadend v\n  v \\<in> VV p'\n  \\<lbrakk>\\<not> deadend ?v;\n   \\<And>w.\n      ?v \\<rightarrow> w \\<Longrightarrow> w \\<in> attractor ?p ?W\\<rbrakk>\n  \\<Longrightarrow> ?v \\<in> attractor ?p ?W\n\ngoal (1 subgoal):\n 1. v \\<in> attractor p'** (deadends p'****)", "by auto"], ["proof (state)\nthis:\n  v \\<in> attractor p'** (deadends p'****)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n               v \\<rightarrow>\\<^bsub>subgame V'\\<^esub>\n               w) \\<Longrightarrow>\n    False", "hence False"], ["proof (prove)\nusing this:\n  v \\<in> attractor p'** (deadends p'****)\n\ngoal (1 subgoal):\n 1. False", "using v"], ["proof (prove)\nusing this:\n  v \\<in> attractor p'** (deadends p'****)\n  v \\<in> V - attractor p (deadends p**) - attractor p** (deadends p****)\n\ngoal (1 subgoal):\n 1. False", "by (cases p'; cases p) auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n               v \\<rightarrow>\\<^bsub>subgame V'\\<^esub>\n               w) \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  v \\<in> VV ?p'2 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n               v \\<rightarrow>\\<^bsub>subgame V'\\<^esub>\n               w) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  v \\<in> VV ?p'2 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. False", "using v"], ["proof (prove)\nusing this:\n  v \\<in> VV ?p'2 \\<Longrightarrow> False\n  v \\<in> V - attractor p (deadends p**) - attractor p** (deadends p****)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> \\<not> (\\<exists>w\\<in>V\\<^bsub>subgame V'\\<^esub>.\n                    v \\<rightarrow>\\<^bsub>subgame V'\\<^esub> w)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Attractor Set Induction\\<close>"], ["", "lemma mono_restriction_is_mono: \"mono f \\<Longrightarrow> mono (\\<lambda>S. f (S \\<inter> V))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono f \\<Longrightarrow> mono (\\<lambda>S. f (S \\<inter> V))", "unfolding mono_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       x \\<subseteq> y \\<longrightarrow> f x \\<le> f y \\<Longrightarrow>\n    \\<forall>x y.\n       x \\<subseteq> y \\<longrightarrow>\n       f (x \\<inter> V) \\<le> f (y \\<inter> V)", "by (meson inf_mono monoD subset_refl)"], ["", "text \\<open>\n  Here we prove a powerful induction schema for @{term attractor}.  Being able to prove this is the\n  only reason why we do not use \\texttt{inductive\\_set} to define the attractor set.\n\n  See also \\url{https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2015-October/msg00123.html}\n\\<close>"], ["", "lemma attractor_set_induction [consumes 1, case_names step union]:\n  assumes \"W \\<subseteq> V\"\n    and step: \"\\<And>S. S \\<subseteq> V \\<Longrightarrow> P S \\<Longrightarrow> P (attractor_step p W S)\"\n    and union: \"\\<And>M. \\<forall>S \\<in> M. S \\<subseteq> V \\<and> P S \\<Longrightarrow> P (\\<Union>M)\"\n  shows \"P (attractor p W)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (attractor p W)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. P (attractor p W)", "let ?P = \"\\<lambda>S. P (S \\<inter> V)\""], ["proof (state)\ngoal (1 subgoal):\n 1. P (attractor p W)", "let ?f = \"\\<lambda>S. attractor_step p W (S \\<inter> V)\""], ["proof (state)\ngoal (1 subgoal):\n 1. P (attractor p W)", "let ?A = \"lfp ?f\""], ["proof (state)\ngoal (1 subgoal):\n 1. P (attractor p W)", "let ?B = \"lfp (attractor_step p W)\""], ["proof (state)\ngoal (1 subgoal):\n 1. P (attractor p W)", "have f_mono: \"mono ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono\n     (\\<lambda>S.\n         W \\<union> S \\<inter> V \\<union>\n         directly_attracted p (S \\<inter> V))", "using mono_restriction_is_mono[of \"attractor_step p W\"] attractor_step_mono"], ["proof (prove)\nusing this:\n  mono\n   (\\<lambda>S.\n       W \\<union> S \\<union> directly_attracted p S) \\<Longrightarrow>\n  mono\n   (\\<lambda>S.\n       W \\<union> S \\<inter> V \\<union> directly_attracted p (S \\<inter> V))\n  mono (\\<lambda>S. ?W \\<union> S \\<union> directly_attracted ?p S)\n\ngoal (1 subgoal):\n 1. mono\n     (\\<lambda>S.\n         W \\<union> S \\<inter> V \\<union>\n         directly_attracted p (S \\<inter> V))", "by simp"], ["proof (state)\nthis:\n  mono\n   (\\<lambda>S.\n       W \\<union> S \\<inter> V \\<union> directly_attracted p (S \\<inter> V))\n\ngoal (1 subgoal):\n 1. P (attractor p W)", "have P_A: \"?P ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (lfp (\\<lambda>S.\n               W \\<union> S \\<inter> V \\<union>\n               directly_attracted p (S \\<inter> V)) \\<inter>\n       V)", "proof (rule lfp_ordinal_induct_set)"], ["proof (state)\ngoal (3 subgoals):\n 1. mono\n     (\\<lambda>S.\n         W \\<union> S \\<inter> V \\<union>\n         directly_attracted p (S \\<inter> V))\n 2. \\<And>S.\n       P (S \\<inter> V) \\<Longrightarrow>\n       P ((W \\<union> S \\<inter> V \\<union>\n           directly_attracted p (S \\<inter> V)) \\<inter>\n          V)\n 3. \\<And>M.\n       \\<forall>S\\<in>M. P (S \\<inter> V) \\<Longrightarrow>\n       P (\\<Union> M \\<inter> V)", "show \"\\<And>S. ?P S \\<Longrightarrow> ?P (W \\<union> (S \\<inter> V) \\<union> directly_attracted p (S \\<inter> V))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>S.\n       P (S \\<inter> V) \\<Longrightarrow>\n       P ((W \\<union> S \\<inter> V \\<union>\n           directly_attracted p (S \\<inter> V)) \\<inter>\n          V)", "by (metis assms(1) attractor_step_bounded_by_V inf.absorb1 inf_le2 local.step)"], ["proof (state)\nthis:\n  P (?S \\<inter> V) \\<Longrightarrow>\n  P ((W \\<union> ?S \\<inter> V \\<union>\n      directly_attracted p (?S \\<inter> V)) \\<inter>\n     V)\n\ngoal (2 subgoals):\n 1. mono\n     (\\<lambda>S.\n         W \\<union> S \\<inter> V \\<union>\n         directly_attracted p (S \\<inter> V))\n 2. \\<And>M.\n       \\<forall>S\\<in>M. P (S \\<inter> V) \\<Longrightarrow>\n       P (\\<Union> M \\<inter> V)", "show \"\\<And>M. \\<forall>S \\<in> M. ?P S \\<Longrightarrow> ?P (\\<Union>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M.\n       \\<forall>S\\<in>M. P (S \\<inter> V) \\<Longrightarrow>\n       P (\\<Union> M \\<inter> V)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M.\n       \\<forall>S\\<in>M. P (S \\<inter> V) \\<Longrightarrow>\n       P (\\<Union> M \\<inter> V)", "fix M"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M.\n       \\<forall>S\\<in>M. P (S \\<inter> V) \\<Longrightarrow>\n       P (\\<Union> M \\<inter> V)", "let ?M = \"{S \\<inter> V | S. S \\<in> M}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M.\n       \\<forall>S\\<in>M. P (S \\<inter> V) \\<Longrightarrow>\n       P (\\<Union> M \\<inter> V)", "assume \"\\<forall>S\\<in>M. ?P S\""], ["proof (state)\nthis:\n  \\<forall>S\\<in>M. P (S \\<inter> V)\n\ngoal (1 subgoal):\n 1. \\<And>M.\n       \\<forall>S\\<in>M. P (S \\<inter> V) \\<Longrightarrow>\n       P (\\<Union> M \\<inter> V)", "hence \"\\<forall>S \\<in> ?M. S \\<subseteq> V \\<and> P S\""], ["proof (prove)\nusing this:\n  \\<forall>S\\<in>M. P (S \\<inter> V)\n\ngoal (1 subgoal):\n 1. \\<forall>S\\<in>{S \\<inter> V |S. S \\<in> M}. S \\<subseteq> V \\<and> P S", "by auto"], ["proof (state)\nthis:\n  \\<forall>S\\<in>{S \\<inter> V |S. S \\<in> M}. S \\<subseteq> V \\<and> P S\n\ngoal (1 subgoal):\n 1. \\<And>M.\n       \\<forall>S\\<in>M. P (S \\<inter> V) \\<Longrightarrow>\n       P (\\<Union> M \\<inter> V)", "hence *: \"P (\\<Union>?M)\""], ["proof (prove)\nusing this:\n  \\<forall>S\\<in>{S \\<inter> V |S. S \\<in> M}. S \\<subseteq> V \\<and> P S\n\ngoal (1 subgoal):\n 1. P (\\<Union> {S \\<inter> V |S. S \\<in> M})", "by (simp add: union)"], ["proof (state)\nthis:\n  P (\\<Union> {S \\<inter> V |S. S \\<in> M})\n\ngoal (1 subgoal):\n 1. \\<And>M.\n       \\<forall>S\\<in>M. P (S \\<inter> V) \\<Longrightarrow>\n       P (\\<Union> M \\<inter> V)", "have \"\\<Union>?M = (\\<Union>M) \\<inter> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> {S \\<inter> V |S. S \\<in> M} = \\<Union> M \\<inter> V", "by blast"], ["proof (state)\nthis:\n  \\<Union> {S \\<inter> V |S. S \\<in> M} = \\<Union> M \\<inter> V\n\ngoal (1 subgoal):\n 1. \\<And>M.\n       \\<forall>S\\<in>M. P (S \\<inter> V) \\<Longrightarrow>\n       P (\\<Union> M \\<inter> V)", "thus \"?P (\\<Union>M)\""], ["proof (prove)\nusing this:\n  \\<Union> {S \\<inter> V |S. S \\<in> M} = \\<Union> M \\<inter> V\n\ngoal (1 subgoal):\n 1. P (\\<Union> M \\<inter> V)", "using *"], ["proof (prove)\nusing this:\n  \\<Union> {S \\<inter> V |S. S \\<in> M} = \\<Union> M \\<inter> V\n  P (\\<Union> {S \\<inter> V |S. S \\<in> M})\n\ngoal (1 subgoal):\n 1. P (\\<Union> M \\<inter> V)", "by auto"], ["proof (state)\nthis:\n  P (\\<Union> M \\<inter> V)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>S\\<in>?M. P (S \\<inter> V) \\<Longrightarrow>\n  P (\\<Union> ?M \\<inter> V)\n\ngoal (1 subgoal):\n 1. mono\n     (\\<lambda>S.\n         W \\<union> S \\<inter> V \\<union>\n         directly_attracted p (S \\<inter> V))", "qed (insert f_mono)"], ["proof (state)\nthis:\n  P (lfp (\\<lambda>S.\n             W \\<union> S \\<inter> V \\<union>\n             directly_attracted p (S \\<inter> V)) \\<inter>\n     V)\n\ngoal (1 subgoal):\n 1. P (attractor p W)", "have *: \"W \\<union> (V \\<inter> V) \\<union> directly_attracted p (V \\<inter> V) \\<subseteq> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W \\<union> V \\<inter> V \\<union> directly_attracted p (V \\<inter> V)\n    \\<subseteq> V", "using \\<open>W \\<subseteq> V\\<close> attractor_step_bounded_by_V"], ["proof (prove)\nusing this:\n  W \\<subseteq> V\n  \\<lbrakk>?W \\<subseteq> V; ?S \\<subseteq> V\\<rbrakk>\n  \\<Longrightarrow> ?W \\<union> ?S \\<union> directly_attracted ?p ?S\n                    \\<subseteq> V\n\ngoal (1 subgoal):\n 1. W \\<union> V \\<inter> V \\<union> directly_attracted p (V \\<inter> V)\n    \\<subseteq> V", "by auto"], ["proof (state)\nthis:\n  W \\<union> V \\<inter> V \\<union> directly_attracted p (V \\<inter> V)\n  \\<subseteq> V\n\ngoal (1 subgoal):\n 1. P (attractor p W)", "have \"?A \\<subseteq> V\" \"?B \\<subseteq> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V))\n    \\<subseteq> V &&&\n    lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S)\n    \\<subseteq> V", "using *"], ["proof (prove)\nusing this:\n  W \\<union> V \\<inter> V \\<union> directly_attracted p (V \\<inter> V)\n  \\<subseteq> V\n\ngoal (1 subgoal):\n 1. lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V))\n    \\<subseteq> V &&&\n    lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S)\n    \\<subseteq> V", "by (simp_all add: lfp_lowerbound)"], ["proof (state)\nthis:\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V))\n  \\<subseteq> V\n  lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S)\n  \\<subseteq> V\n\ngoal (1 subgoal):\n 1. P (attractor p W)", "have \"?A = ?f ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V)) =\n    W \\<union>\n    lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V)) \\<inter>\n    V \\<union>\n    directly_attracted p\n     (lfp (\\<lambda>S.\n              W \\<union> S \\<inter> V \\<union>\n              directly_attracted p (S \\<inter> V)) \\<inter>\n      V)", "using f_mono lfp_unfold"], ["proof (prove)\nusing this:\n  mono\n   (\\<lambda>S.\n       W \\<union> S \\<inter> V \\<union> directly_attracted p (S \\<inter> V))\n  mono ?f \\<Longrightarrow> lfp ?f = ?f (lfp ?f)\n\ngoal (1 subgoal):\n 1. lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V)) =\n    W \\<union>\n    lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V)) \\<inter>\n    V \\<union>\n    directly_attracted p\n     (lfp (\\<lambda>S.\n              W \\<union> S \\<inter> V \\<union>\n              directly_attracted p (S \\<inter> V)) \\<inter>\n      V)", "by blast"], ["proof (state)\nthis:\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V)) =\n  W \\<union>\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V)) \\<inter>\n  V \\<union>\n  directly_attracted p\n   (lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V)) \\<inter>\n    V)\n\ngoal (1 subgoal):\n 1. P (attractor p W)", "hence \"?A = W \\<union> (?A \\<inter> V) \\<union> directly_attracted p (?A \\<inter> V)\""], ["proof (prove)\nusing this:\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V)) =\n  W \\<union>\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V)) \\<inter>\n  V \\<union>\n  directly_attracted p\n   (lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V)) \\<inter>\n    V)\n\ngoal (1 subgoal):\n 1. lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V)) =\n    W \\<union>\n    lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V)) \\<inter>\n    V \\<union>\n    directly_attracted p\n     (lfp (\\<lambda>S.\n              W \\<union> S \\<inter> V \\<union>\n              directly_attracted p (S \\<inter> V)) \\<inter>\n      V)", "using \\<open>?A \\<subseteq> V\\<close>"], ["proof (prove)\nusing this:\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V)) =\n  W \\<union>\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V)) \\<inter>\n  V \\<union>\n  directly_attracted p\n   (lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V)) \\<inter>\n    V)\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V))\n  \\<subseteq> V\n\ngoal (1 subgoal):\n 1. lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V)) =\n    W \\<union>\n    lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V)) \\<inter>\n    V \\<union>\n    directly_attracted p\n     (lfp (\\<lambda>S.\n              W \\<union> S \\<inter> V \\<union>\n              directly_attracted p (S \\<inter> V)) \\<inter>\n      V)", "by simp"], ["proof (state)\nthis:\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V)) =\n  W \\<union>\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V)) \\<inter>\n  V \\<union>\n  directly_attracted p\n   (lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V)) \\<inter>\n    V)\n\ngoal (1 subgoal):\n 1. P (attractor p W)", "hence *: \"attractor_step p W ?A \\<subseteq> ?A\""], ["proof (prove)\nusing this:\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V)) =\n  W \\<union>\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V)) \\<inter>\n  V \\<union>\n  directly_attracted p\n   (lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V)) \\<inter>\n    V)\n\ngoal (1 subgoal):\n 1. W \\<union>\n    lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V)) \\<union>\n    directly_attracted p\n     (lfp (\\<lambda>S.\n              W \\<union> S \\<inter> V \\<union>\n              directly_attracted p (S \\<inter> V)))\n    \\<subseteq> lfp (\\<lambda>S.\n                        W \\<union> S \\<inter> V \\<union>\n                        directly_attracted p (S \\<inter> V))", "using \\<open>?A \\<subseteq> V\\<close> inf.absorb1"], ["proof (prove)\nusing this:\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V)) =\n  W \\<union>\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V)) \\<inter>\n  V \\<union>\n  directly_attracted p\n   (lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V)) \\<inter>\n    V)\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V))\n  \\<subseteq> V\n  ?a \\<le> ?b \\<Longrightarrow> ?a \\<sqinter> ?b = ?a\n\ngoal (1 subgoal):\n 1. W \\<union>\n    lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V)) \\<union>\n    directly_attracted p\n     (lfp (\\<lambda>S.\n              W \\<union> S \\<inter> V \\<union>\n              directly_attracted p (S \\<inter> V)))\n    \\<subseteq> lfp (\\<lambda>S.\n                        W \\<union> S \\<inter> V \\<union>\n                        directly_attracted p (S \\<inter> V))", "by fastforce"], ["proof (state)\nthis:\n  W \\<union>\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V)) \\<union>\n  directly_attracted p\n   (lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V)))\n  \\<subseteq> lfp (\\<lambda>S.\n                      W \\<union> S \\<inter> V \\<union>\n                      directly_attracted p (S \\<inter> V))\n\ngoal (1 subgoal):\n 1. P (attractor p W)", "have \"?B = attractor_step p W ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) =\n    W \\<union>\n    lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) \\<union>\n    directly_attracted p\n     (lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S))", "using attractor_step_mono lfp_unfold"], ["proof (prove)\nusing this:\n  mono (\\<lambda>S. ?W \\<union> S \\<union> directly_attracted ?p S)\n  mono ?f \\<Longrightarrow> lfp ?f = ?f (lfp ?f)\n\ngoal (1 subgoal):\n 1. lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) =\n    W \\<union>\n    lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) \\<union>\n    directly_attracted p\n     (lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S))", "by blast"], ["proof (state)\nthis:\n  lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) =\n  W \\<union>\n  lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) \\<union>\n  directly_attracted p\n   (lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S))\n\ngoal (1 subgoal):\n 1. P (attractor p W)", "hence \"?f ?B \\<subseteq> ?B\""], ["proof (prove)\nusing this:\n  lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) =\n  W \\<union>\n  lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) \\<union>\n  directly_attracted p\n   (lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S))\n\ngoal (1 subgoal):\n 1. W \\<union>\n    lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) \\<inter>\n    V \\<union>\n    directly_attracted p\n     (lfp (\\<lambda>S.\n              W \\<union> S \\<union> directly_attracted p S) \\<inter>\n      V)\n    \\<subseteq> lfp (\\<lambda>S.\n                        W \\<union> S \\<union> directly_attracted p S)", "using \\<open>?B \\<subseteq> V\\<close>"], ["proof (prove)\nusing this:\n  lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) =\n  W \\<union>\n  lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) \\<union>\n  directly_attracted p\n   (lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S))\n  lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S)\n  \\<subseteq> V\n\ngoal (1 subgoal):\n 1. W \\<union>\n    lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) \\<inter>\n    V \\<union>\n    directly_attracted p\n     (lfp (\\<lambda>S.\n              W \\<union> S \\<union> directly_attracted p S) \\<inter>\n      V)\n    \\<subseteq> lfp (\\<lambda>S.\n                        W \\<union> S \\<union> directly_attracted p S)", "by (metis (no_types, lifting) equalityD2 le_iff_inf)"], ["proof (state)\nthis:\n  W \\<union>\n  lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) \\<inter>\n  V \\<union>\n  directly_attracted p\n   (lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) \\<inter>\n    V)\n  \\<subseteq> lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S)\n\ngoal (1 subgoal):\n 1. P (attractor p W)", "have \"?A = ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V)) =\n    lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V))\n    \\<subseteq> lfp (\\<lambda>S.\n                        W \\<union> S \\<union> directly_attracted p S)\n 2. lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S)\n    \\<subseteq> lfp (\\<lambda>S.\n                        W \\<union> S \\<inter> V \\<union>\n                        directly_attracted p (S \\<inter> V))", "show \"?A \\<subseteq> ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V))\n    \\<subseteq> lfp (\\<lambda>S.\n                        W \\<union> S \\<union> directly_attracted p S)", "using \\<open>?f ?B \\<subseteq> ?B\\<close>"], ["proof (prove)\nusing this:\n  W \\<union>\n  lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) \\<inter>\n  V \\<union>\n  directly_attracted p\n   (lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) \\<inter>\n    V)\n  \\<subseteq> lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S)\n\ngoal (1 subgoal):\n 1. lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V))\n    \\<subseteq> lfp (\\<lambda>S.\n                        W \\<union> S \\<union> directly_attracted p S)", "by (simp add: lfp_lowerbound)"], ["proof (state)\nthis:\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V))\n  \\<subseteq> lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S)\n\ngoal (1 subgoal):\n 1. lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S)\n    \\<subseteq> lfp (\\<lambda>S.\n                        W \\<union> S \\<inter> V \\<union>\n                        directly_attracted p (S \\<inter> V))", "show \"?B \\<subseteq> ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S)\n    \\<subseteq> lfp (\\<lambda>S.\n                        W \\<union> S \\<inter> V \\<union>\n                        directly_attracted p (S \\<inter> V))", "using *"], ["proof (prove)\nusing this:\n  W \\<union>\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V)) \\<union>\n  directly_attracted p\n   (lfp (\\<lambda>S.\n            W \\<union> S \\<inter> V \\<union>\n            directly_attracted p (S \\<inter> V)))\n  \\<subseteq> lfp (\\<lambda>S.\n                      W \\<union> S \\<inter> V \\<union>\n                      directly_attracted p (S \\<inter> V))\n\ngoal (1 subgoal):\n 1. lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S)\n    \\<subseteq> lfp (\\<lambda>S.\n                        W \\<union> S \\<inter> V \\<union>\n                        directly_attracted p (S \\<inter> V))", "by (simp add: lfp_lowerbound)"], ["proof (state)\nthis:\n  lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S)\n  \\<subseteq> lfp (\\<lambda>S.\n                      W \\<union> S \\<inter> V \\<union>\n                      directly_attracted p (S \\<inter> V))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V)) =\n  lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S)\n\ngoal (1 subgoal):\n 1. P (attractor p W)", "hence \"?P ?B\""], ["proof (prove)\nusing this:\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V)) =\n  lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S)\n\ngoal (1 subgoal):\n 1. P (lfp (\\<lambda>S.\n               W \\<union> S \\<union> directly_attracted p S) \\<inter>\n       V)", "using P_A"], ["proof (prove)\nusing this:\n  lfp (\\<lambda>S.\n          W \\<union> S \\<inter> V \\<union>\n          directly_attracted p (S \\<inter> V)) =\n  lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S)\n  P (lfp (\\<lambda>S.\n             W \\<union> S \\<inter> V \\<union>\n             directly_attracted p (S \\<inter> V)) \\<inter>\n     V)\n\ngoal (1 subgoal):\n 1. P (lfp (\\<lambda>S.\n               W \\<union> S \\<union> directly_attracted p S) \\<inter>\n       V)", "by (simp add: attractor_def)"], ["proof (state)\nthis:\n  P (lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) \\<inter>\n     V)\n\ngoal (1 subgoal):\n 1. P (attractor p W)", "thus ?thesis"], ["proof (prove)\nusing this:\n  P (lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) \\<inter>\n     V)\n\ngoal (1 subgoal):\n 1. P (attractor p W)", "using \\<open>?B \\<subseteq> V\\<close>"], ["proof (prove)\nusing this:\n  P (lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S) \\<inter>\n     V)\n  lfp (\\<lambda>S. W \\<union> S \\<union> directly_attracted p S)\n  \\<subseteq> V\n\ngoal (1 subgoal):\n 1. P (attractor p W)", "by (simp add: attractor_def le_iff_inf)"], ["proof (state)\nthis:\n  P (attractor p W)\n\ngoal:\nNo subgoals!", "qed"], ["", "end \\<comment> \\<open>context ParityGame\\<close>"], ["", "end"]]}