{"file_name": "/home/qj213/afp-2021-10-22/thys/Projective_Measurements/Projective_Measurements.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Projective_Measurements", "problem_names": ["lemma (in cpx_sq_mat) proj_measurement_inj:\n  assumes \"proj_measurement p M\"\n  shows \"inj_on (\\<lambda>i. meas_outcome_val (M i)) {..< p}\"", "lemma (in cpx_sq_mat) proj_measurement_carrier:\n  assumes \"proj_measurement p M\"\n  and \"i < p\"\n  shows \"meas_outcome_prj (M i) \\<in> fc_mats\"", "lemma (in cpx_sq_mat) proj_measurement_ortho:\n  assumes \"proj_measurement p M\"\nand \"i < p\"\nand \"j < p\"\nand \"i\\<noteq> j\"\nshows \"meas_outcome_prj (M i) * meas_outcome_prj (M j) = 0\\<^sub>m dimR dimR\"", "lemma (in cpx_sq_mat) proj_measurement_id:\n  assumes \"proj_measurement p M\"\n  shows \"sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..< p} = 1\\<^sub>m dimR\"", "lemma (in cpx_sq_mat) proj_measurement_square:\n  assumes \"proj_measurement p M\"\nand \"i < p\"\nshows \"meas_outcome_prj (M i) \\<in> fc_mats\"", "lemma (in cpx_sq_mat) proj_measurement_proj:\n  assumes \"proj_measurement p M\"\nand \"i < p\"\nshows \"projector (meas_outcome_prj (M i))\"", "lemma (in cpx_sq_mat) meas_outcome_prob_real:\nassumes \"R\\<in> fc_mats\"\n  and \"density_operator R\"\n  and \"proj_measurement n M\"\n  and \"i < n\"\nshows \"meas_outcome_prob R M i \\<in> \\<real>\"", "lemma (in cpx_sq_mat) meas_outcome_prob_pos:\n  assumes \"R\\<in> fc_mats\"\n  and \"density_operator R\"\n  and \"proj_measurement n M\"\n  and \"i < n\"\nshows \"0 \\<le> meas_outcome_prob R M i\"", "lemma (in cpx_sq_mat) meas_outcome_prob_sum:\n  assumes \"density_operator R\"\n  and \"R\\<in> fc_mats\"\n  and\" proj_measurement n M\"\nshows \"(\\<Sum> j \\<in> {..< n}. meas_outcome_prob R M j) = 1\"", "lemma max_mix_density_carrier:\n  shows \"max_mix_density n \\<in> carrier_mat n n\"", "lemma max_mix_is_density: \n  assumes \"0 < n\"\n  shows \"density_operator (max_mix_density n)\"", "lemma (in cpx_sq_mat) max_mix_density_square:\n  shows \"max_mix_density dimR \\<in> fc_mats\"", "lemma  density_collapse_carrier:\n  assumes \"0 < dim_row R\"\n  and \"P \\<in> carrier_mat n n\"\n  and \"R \\<in> carrier_mat n n\"\nshows \"(density_collapse R P) \\<in> carrier_mat n n\"", "lemma  density_collapse_operator:\n  assumes \"projector P\"\n  and \"density_operator R\"\n  and \"0 < dim_row R\"\n  and \"P \\<in> carrier_mat n n\"\n  and \"R \\<in> carrier_mat n n\"\nshows \"density_operator (density_collapse R P)\"", "lemma diag_elems_set_diag_mat:\n  shows \"diag_elems B = set (diag_mat B)\"", "lemma diag_elems_finite[simp]:\n  shows \"finite (diag_elems B)\"", "lemma diag_elems_mem[simp]:\n  assumes \"i < dim_row B\"\n  shows \"B $$(i,i) \\<in> diag_elems B\"", "lemma diag_elem_indices_elem:\n  assumes \"a \\<in> diag_elem_indices x B\"\n  shows \"a < dim_row B \\<and> B$$(a,a) = x\"", "lemma diag_elem_indices_itself:\n  assumes \"i < dim_row B\"\n  shows \"i \\<in> diag_elem_indices (B $$(i,i)) B\"", "lemma diag_elem_indices_finite:\n  shows \"finite (diag_elem_indices x B)\"", "lemma diag_idx_to_el_bij:\n  shows \"bij_betw (diag_idx_to_el B) {..< dist_el_card B} (diag_elems B)\"", "lemma diag_el_to_idx_bij:\n  shows \"bij_betw (diag_el_to_idx B) (diag_elems B) {..< dist_el_card B}\"", "lemma diag_idx_to_el_less_inj:\n  assumes \"i < dist_el_card B\"\nand \"j < dist_el_card B\"\n  and \"diag_idx_to_el B i = diag_idx_to_el B j\"\nshows \"i = j\"", "lemma diag_idx_to_el_less_surj:\n  assumes \"x\\<in> diag_elems B\"\nshows \"\\<exists>k \\<in> {..< dist_el_card B}. x = diag_idx_to_el B k\"", "lemma diag_idx_to_el_img:\n  assumes \"k < dist_el_card B\"\nshows \"diag_idx_to_el B k \\<in> diag_elems B\"", "lemma diag_elems_real:\n  fixes B::\"complex Matrix.mat\"\n  assumes \"\\<forall>i < dim_row B. B$$(i,i) \\<in> Reals\"\n  shows \"diag_elems B \\<subseteq> Reals\"", "lemma diag_elems_Re:\n  fixes B::\"complex Matrix.mat\"\n  assumes \"\\<forall>i < (dim_row B). B$$(i,i) \\<in> Reals\"\n  shows \"{Re x|x. x\\<in> diag_elems B} = diag_elems B\"", "lemma  diag_idx_to_el_real:\n  fixes B::\"complex Matrix.mat\"\n  assumes \"\\<forall>i < dim_row B. B$$(i,i) \\<in> Reals\"\nand \"i < dist_el_card B\"\nshows \"Re (diag_idx_to_el B i) = diag_idx_to_el B i\"", "lemma diag_elem_indices_empty:\n  assumes \"B \\<in> carrier_mat dimR dimC\"\n  and \"i < (dist_el_card B)\"\nand \"j < (dist_el_card B)\"\nand \"i\\<noteq> j\"\nshows \"diag_elem_indices (diag_idx_to_el B i) B \\<inter> \n  (diag_elem_indices (diag_idx_to_el B j) B) = {}\"", "lemma (in cpx_sq_mat) diag_elem_indices_disjoint:\n  assumes \"B\\<in> carrier_mat dimR dimC\"\n  shows \"disjoint_family_on (\\<lambda>n. diag_elem_indices (diag_idx_to_el B n) B) \n    {..<dist_el_card B}\"", "lemma diag_elem_indices_union:\n  assumes \"B\\<in> carrier_mat dimR dimC\"\n  shows \"(\\<Union> i \\<in> {..< dist_el_card B}. diag_elem_indices (diag_idx_to_el B i) B) = \n    {..< dimR}\"", "lemma (in cpx_sq_mat) project_vecs_dim:\n  assumes \"\\<forall>i \\<in> N. dim_vec (f i) = dimR\"\n  shows \"project_vecs f N \\<in> fc_mats\"", "lemma (in cpx_sq_mat) mk_meas_outcome_carrier:\n  assumes \"Complex_Matrix.unitary U\"\n  and \"U \\<in> fc_mats\"\n  and \"B\\<in> fc_mats\"\nshows \"meas_outcome_prj ((mk_meas_outcome B U) j) \\<in> fc_mats\"", "lemma (in cpx_sq_mat) mk_meas_outcome_sum_id:\n  assumes \"Complex_Matrix.unitary U\"\n  and \"U \\<in> fc_mats\"\n  and \"B\\<in> fc_mats\"\nshows \"sum_mat (\\<lambda>j. meas_outcome_prj ((mk_meas_outcome B U) j)) \n  {..<(dist_el_card B)} = 1\\<^sub>m dimR\"", "lemma (in cpx_sq_mat) make_meas_outcome_prj_ortho:\n  assumes \"Complex_Matrix.unitary U\"\n  and \"U \\<in> fc_mats\"\n  and \"B\\<in> fc_mats\"\n  and \"i < dist_el_card B\"\n  and \"j < dist_el_card B\"\n  and \"i \\<noteq> j\"\nshows \"meas_outcome_prj ((mk_meas_outcome B U) i) * \n  meas_outcome_prj ((mk_meas_outcome B U) j) = 0\\<^sub>m dimR dimR\"", "lemma (in cpx_sq_mat) make_meas_outcome_prjectors:\n  assumes \"Complex_Matrix.unitary U\"\n  and \"U \\<in> fc_mats\"\n  and \"B\\<in> fc_mats\"\n  and \"j < dist_el_card B\"\nshows \"projector (meas_outcome_prj ((mk_meas_outcome B U) j))\"", "lemma (in cpx_sq_mat) mk_meas_outcome_fst_inj:\n  assumes \"\\<forall>i < (dim_row B). B$$(i,i) \\<in> Reals\"\n  shows \"inj_on (\\<lambda>i. meas_outcome_val ((mk_meas_outcome B U) i)) {..<dist_el_card B}\"", "lemma (in cpx_sq_mat) mk_meas_outcome_fst_bij:\n  assumes \"\\<forall>i < (dim_row B). B$$(i,i) \\<in> Reals\"\n  shows \"bij_betw (\\<lambda>i. meas_outcome_val ((mk_meas_outcome B U) i)) {..< dist_el_card B} \n    {Re x|x. x\\<in> diag_elems B}\"", "lemma eigvals_poly_length:\n  assumes \"(M::complex Matrix.mat) \\<in> carrier_mat n n\"\n  shows \"char_poly M = (\\<Prod>a\\<leftarrow>(eigvals M). [:- a, 1:]) \\<and> length (eigvals M) = dim_row M\"", "lemma spectrum_finite:\n  shows \"finite (spectrum M)\"", "lemma spectrum_char_poly_root: \n  fixes A::\"complex Matrix.mat\"\n  assumes \"A\\<in> carrier_mat n n\"\nand \"k \\<in> spectrum A\"\nshows \"poly (char_poly A) k = 0\"", "lemma spectrum_eigenvalues:\n  fixes A::\"complex Matrix.mat\"\n  assumes \"A\\<in> carrier_mat n n\"\nand \"k\\<in> spectrum A\"\nshows \"eigenvalue A k\"", "lemma hermitian_decomp_sim: \n  assumes \"hermitian_decomp A B U\"\n  shows \"similar_mat_wit A B U (Complex_Matrix.adjoint U)\"", "lemma hermitian_decomp_diag_mat: \n  assumes \"hermitian_decomp A B U\"\n  shows \"diagonal_mat B\"", "lemma hermitian_decomp_eigenvalues: \n  assumes \"hermitian_decomp A B U\"\n  shows \"diag_mat B = (eigvals A)\"", "lemma hermitian_decomp_unitary: \n  assumes \"hermitian_decomp A B U\"\n  shows \"unitary U\"", "lemma hermitian_decomp_real_eigvals: \n  assumes \"hermitian_decomp A B U\"\n  shows \"\\<forall>i < dim_row B. B$$(i, i) \\<in> Reals\"", "lemma hermitian_decomp_dim_carrier: \n  assumes \"hermitian_decomp A B U\"\n  shows \"B \\<in> carrier_mat (dim_row A) (dim_col A)\"", "lemma similar_mat_wit_dim_row:\n  assumes \"similar_mat_wit A B Q R\"\n  shows \"dim_row B = dim_row A\"", "lemma (in cpx_sq_mat) hermitian_schur_decomp:\n  assumes \"hermitian A\"\n  and \"A\\<in> fc_mats\"\nobtains B U where \"hermitian_decomp A B U\"", "lemma (in cpx_sq_mat) hermitian_spectrum_real:\n  assumes \"A \\<in> fc_mats\"\n  and \"hermitian A\"\n  and \"a \\<in> spectrum A\"\nshows \"a \\<in> Reals\"", "lemma (in cpx_sq_mat) spectrum_ne:\n  assumes \"A\\<in> fc_mats\"\nand \"hermitian A\" \nshows \"spectrum A \\<noteq> {}\"", "lemma  unitary_hermitian_eigenvalues:\n  fixes U::\"complex Matrix.mat\"\n  assumes \"unitary U\"\n  and \"hermitian U\"\n  and \"U \\<in> carrier_mat n n\"\n  and \"0 < n\"\n  and \"k \\<in> spectrum U\"\nshows \"k \\<in> {-1, 1}\"", "lemma  unitary_hermitian_Re_spectrum:\n  fixes U::\"complex Matrix.mat\"\n  assumes \"unitary U\"\n  and \"hermitian U\"\n  and \"U \\<in> carrier_mat n n\"\n  and \"0 < n\"\n  shows \"{Re x|x. x\\<in> spectrum U} \\<subseteq> {-1,1}\"", "lemma (in cpx_sq_mat) make_pm_decomp:\n  shows \"make_pm A = (proj_meas_size (make_pm A), proj_meas_outcomes (make_pm A))\"", "lemma (in cpx_sq_mat) make_pm_proj_measurement:\n  assumes \"A \\<in> fc_mats\"\n  and \"hermitian A\"\n  and \"make_pm A = (n, M)\"\nshows \"proj_measurement n M\"", "lemma (in cpx_sq_mat) make_pm_proj_measurement':\n  assumes \"A\\<in> fc_mats\"\n  and \"hermitian A\"\nshows \"proj_measurement (proj_meas_size (make_pm A)) (proj_meas_outcomes (make_pm A))\"", "lemma (in cpx_sq_mat) make_pm_projectors:\n  assumes \"A\\<in> fc_mats\"\n  and \"hermitian A\"\nand \"i < proj_meas_size (make_pm A)\"\nshows \"projector (meas_outcome_prj (proj_meas_outcomes (make_pm A) i))\"", "lemma (in cpx_sq_mat) make_pm_square:\n  assumes \"A\\<in> fc_mats\"\n  and \"hermitian A\"\nand \"i < proj_meas_size (make_pm A)\"\nshows \"meas_outcome_prj (proj_meas_outcomes (make_pm A) i) \\<in> fc_mats\"", "lemma (in cpx_sq_mat) hermitian_schur_decomp':\n  assumes \"hermitian A\"\n  and \"A\\<in> fc_mats\"\nobtains B U where \"hermitian_decomp A B U \\<and> \n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\"", "lemma (in cpx_sq_mat) spectrum_meas_outcome_val_eq: \n  assumes \"hermitian A\" \n  and \"A \\<in> fc_mats\"\nand \"make_pm A = (p, M)\"\nshows \"spectrum A = (\\<lambda>i. meas_outcome_val (M i)) `{..< p}\"", "lemma (in cpx_sq_mat) spectrum_meas_outcome_val_eq': \n  assumes \"hermitian A\" \n  and \"A \\<in> fc_mats\"\nand \"make_pm A = (p, M)\"\nshows \"{Re x|x. x\\<in> spectrum A} = (\\<lambda>i. meas_outcome_val (M i)) `{..< p}\"", "lemma (in cpx_sq_mat) make_pm_eigenvalues:\n  assumes \"A\\<in> fc_mats\"\n  and \"hermitian A\"\nand \"i < proj_meas_size (make_pm A)\"\nshows \"meas_outcome_val (proj_meas_outcomes (make_pm A) i) \\<in> spectrum A\"", "lemma (in cpx_sq_mat) make_pm_spectrum:\n  assumes \"A\\<in> fc_mats\"\n  and \"hermitian A\"\n  and \"make_pm A = (p,M)\"\nshows \"(\\<lambda>i. meas_outcome_val (proj_meas_outcomes (make_pm A) i)) ` {..< p} = spectrum A\"", "lemma (in cpx_sq_mat) spectrum_size:\n  assumes \"hermitian A\"\n  and \"A\\<in> fc_mats\"\nand \"make_pm A = (p, M)\"\nshows \"p = card (spectrum A)\"", "lemma (in cpx_sq_mat) spectrum_size':\n  assumes \"hermitian A\"\nand \"A\\<in> fc_mats\"\nshows \"proj_meas_size (make_pm A) = card (spectrum A)\"", "lemma (in cpx_sq_mat) make_pm_projectors':\n  assumes \"hermitian A\"\n  and \"A \\<in> fc_mats\"\n  and \"a<card (spectrum A)\"\nshows \"projector (meas_outcome_prj (proj_meas_outcomes (make_pm A) a))\"", "lemma (in cpx_sq_mat) meas_outcome_prj_carrier:\n  assumes \"hermitian A\"\n  and \"A \\<in> fc_mats\"\n  and \"a<card (spectrum A)\"\nshows \"meas_outcome_prj (proj_meas_outcomes (make_pm A) a) \\<in> fc_mats\"", "lemma (in cpx_sq_mat) meas_outcome_prj_trace_real:\n  assumes \"hermitian A\"\n  and \"density_operator R\"\n  and \"R \\<in> fc_mats\"\n  and \"A\\<in> fc_mats\"\n  and \"a<card (spectrum A)\"\nshows \"Re (Complex_Matrix.trace (R * meas_outcome_prj (proj_meas_outcomes (make_pm A) a))) =\n  Complex_Matrix.trace (R * meas_outcome_prj (proj_meas_outcomes (make_pm A) a))\"", "lemma (in cpx_sq_mat) sum_over_spectrum:\n  assumes \"A\\<in> fc_mats\"\nand \"hermitian A\"\nand \"make_pm A = (p, M)\"\nshows \"(\\<Sum> y \\<in> spectrum A. f y) =  (\\<Sum> i < p. f (meas_outcome_val (M i)))\"", "lemma (in cpx_sq_mat) sum_over_spectrum':\n  assumes \"A\\<in> fc_mats\"\nand \"hermitian A\"\nand \"make_pm A = (p, M)\"\nshows \"(\\<Sum> y \\<in> {Re x|x. x \\<in> spectrum A}. f y) =  (\\<Sum> i < p. f (meas_outcome_val (M i)))\"", "lemma (in cpx_sq_mat) make_pm_sum:\n  assumes \"A \\<in> fc_mats\"\n  and \"hermitian A\"\n  and \"make_pm A = (p, M)\"\nshows \"sum_mat (\\<lambda>i.  (meas_outcome_val (M i)) \\<cdot>\\<^sub>m meas_outcome_prj (M i)) {..< p} = A\"", "lemma (in cpx_sq_mat) trace_hermitian_pos_real:\n  fixes f::\"'a \\<Rightarrow> real\"\n  assumes \"hermitian A\"\n  and \"Complex_Matrix.positive R\"\n  and \"A \\<in> fc_mats\"\n  and \"R \\<in> fc_mats\"\nshows \"Complex_Matrix.trace (R * A) = \n  Re (Complex_Matrix.trace (R * A))\"", "lemma (in cpx_sq_mat) hermitian_Re_spectrum:\n  assumes \"hermitian A\"\nand \"A\\<in> fc_mats\"\nand \"{Re x |x. x \\<in> spectrum A} = {a,b}\"\nshows \"spectrum A = {complex_of_real a, complex_of_real b}\"", "lemma (in cpx_sq_mat) spectrum_to_pm_idx_bij:\nassumes \"hermitian A\"\n  and \"A\\<in> fc_mats\"\nshows \"bij_betw (spectrum_to_pm_idx A) (spectrum A) {..< card (spectrum A)}\"", "lemma (in cpx_sq_mat) spectrum_to_pm_idx_lt_card:\nassumes \"A\\<in> fc_mats\"\n  and \"hermitian A\"\nand \"a\\<in> spectrum A\"\nshows \"spectrum_to_pm_idx A a < card (spectrum A)\"", "lemma (in cpx_sq_mat) spectrum_to_pm_idx_inj:\nassumes \"hermitian A\"\n  and \"A\\<in> fc_mats\"\nshows \"inj_on (spectrum_to_pm_idx A) (spectrum A)\"", "lemma (in cpx_sq_mat) spectrum_meas_outcome_val_inv:\nassumes \"A\\<in> fc_mats\"\n  and \"hermitian A\"\nand \"make_pm A = (p,M)\"\nand \"i < p\"\nshows \"spectrum_to_pm_idx A (meas_outcome_val (M i)) = i\"", "lemma (in cpx_sq_mat) meas_outcome_val_spectrum_inv:\n  assumes \"A\\<in> fc_mats\"\n  and \"hermitian A\"\nand \"x\\<in> spectrum A\"\nand \"make_pm A = (p,M)\"\nshows \"meas_outcome_val (M (spectrum_to_pm_idx A x)) = x\"", "lemma (in cpx_sq_mat) eigen_projector_carrier:\n  assumes \"A\\<in> fc_mats\"\n  and \"a\\<in> spectrum A\"\n  and \"hermitian A\"\nshows \"eigen_projector A a \\<in> fc_mats\"", "lemma (in cpx_sq_mat) make_pm_sum':\n  assumes \"A \\<in> fc_mats\"\n  and \"hermitian A\"\nshows \"sum_mat (\\<lambda>a.  a \\<cdot>\\<^sub>m (eigen_projector A a)) (spectrum A) = A\""], "translations": [["", "lemma (in cpx_sq_mat) proj_measurement_inj:\n  assumes \"proj_measurement p M\"\n  shows \"inj_on (\\<lambda>i. meas_outcome_val (M i)) {..< p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>i. meas_outcome_val (M i)) {..<p}", "using assms"], ["proof (prove)\nusing this:\n  proj_measurement p M\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>i. meas_outcome_val (M i)) {..<p}", "unfolding proj_measurement_def"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>i. meas_outcome_val (M i)) {..<p} \\<and>\n  (\\<forall>j<p.\n      meas_outcome_prj (M j) \\<in> fc_mats \\<and>\n      projector (meas_outcome_prj (M j))) \\<and>\n  (\\<forall>i<p.\n      \\<forall>j<p.\n         i \\<noteq> j \\<longrightarrow>\n         meas_outcome_prj (M i) * meas_outcome_prj (M j) =\n         0\\<^sub>m dimR dimR) \\<and>\n  local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<p} = 1\\<^sub>m dimR\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>i. meas_outcome_val (M i)) {..<p}", "by simp"], ["", "lemma (in cpx_sq_mat) proj_measurement_carrier:\n  assumes \"proj_measurement p M\"\n  and \"i < p\"\n  shows \"meas_outcome_prj (M i) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_prj (M i) \\<in> fc_mats", "using assms"], ["proof (prove)\nusing this:\n  proj_measurement p M\n  i < p\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (M i) \\<in> fc_mats", "unfolding proj_measurement_def"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>i. meas_outcome_val (M i)) {..<p} \\<and>\n  (\\<forall>j<p.\n      meas_outcome_prj (M j) \\<in> fc_mats \\<and>\n      projector (meas_outcome_prj (M j))) \\<and>\n  (\\<forall>i<p.\n      \\<forall>j<p.\n         i \\<noteq> j \\<longrightarrow>\n         meas_outcome_prj (M i) * meas_outcome_prj (M j) =\n         0\\<^sub>m dimR dimR) \\<and>\n  local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<p} = 1\\<^sub>m dimR\n  i < p\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (M i) \\<in> fc_mats", "by simp"], ["", "lemma (in cpx_sq_mat) proj_measurement_ortho:\n  assumes \"proj_measurement p M\"\nand \"i < p\"\nand \"j < p\"\nand \"i\\<noteq> j\"\nshows \"meas_outcome_prj (M i) * meas_outcome_prj (M j) = 0\\<^sub>m dimR dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_prj (M i) * meas_outcome_prj (M j) = 0\\<^sub>m dimR dimR", "using assms"], ["proof (prove)\nusing this:\n  proj_measurement p M\n  i < p\n  j < p\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (M i) * meas_outcome_prj (M j) = 0\\<^sub>m dimR dimR", "unfolding proj_measurement_def"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>i. meas_outcome_val (M i)) {..<p} \\<and>\n  (\\<forall>j<p.\n      meas_outcome_prj (M j) \\<in> fc_mats \\<and>\n      projector (meas_outcome_prj (M j))) \\<and>\n  (\\<forall>i<p.\n      \\<forall>j<p.\n         i \\<noteq> j \\<longrightarrow>\n         meas_outcome_prj (M i) * meas_outcome_prj (M j) =\n         0\\<^sub>m dimR dimR) \\<and>\n  local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<p} = 1\\<^sub>m dimR\n  i < p\n  j < p\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (M i) * meas_outcome_prj (M j) = 0\\<^sub>m dimR dimR", "by simp"], ["", "lemma (in cpx_sq_mat) proj_measurement_id:\n  assumes \"proj_measurement p M\"\n  shows \"sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..< p} = 1\\<^sub>m dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<p} =\n    1\\<^sub>m dimR", "using assms"], ["proof (prove)\nusing this:\n  proj_measurement p M\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<p} =\n    1\\<^sub>m dimR", "unfolding proj_measurement_def"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>i. meas_outcome_val (M i)) {..<p} \\<and>\n  (\\<forall>j<p.\n      meas_outcome_prj (M j) \\<in> fc_mats \\<and>\n      projector (meas_outcome_prj (M j))) \\<and>\n  (\\<forall>i<p.\n      \\<forall>j<p.\n         i \\<noteq> j \\<longrightarrow>\n         meas_outcome_prj (M i) * meas_outcome_prj (M j) =\n         0\\<^sub>m dimR dimR) \\<and>\n  local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<p} = 1\\<^sub>m dimR\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<p} =\n    1\\<^sub>m dimR", "by simp"], ["", "lemma (in cpx_sq_mat) proj_measurement_square:\n  assumes \"proj_measurement p M\"\nand \"i < p\"\nshows \"meas_outcome_prj (M i) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_prj (M i) \\<in> fc_mats", "using assms"], ["proof (prove)\nusing this:\n  proj_measurement p M\n  i < p\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (M i) \\<in> fc_mats", "unfolding proj_measurement_def"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>i. meas_outcome_val (M i)) {..<p} \\<and>\n  (\\<forall>j<p.\n      meas_outcome_prj (M j) \\<in> fc_mats \\<and>\n      projector (meas_outcome_prj (M j))) \\<and>\n  (\\<forall>i<p.\n      \\<forall>j<p.\n         i \\<noteq> j \\<longrightarrow>\n         meas_outcome_prj (M i) * meas_outcome_prj (M j) =\n         0\\<^sub>m dimR dimR) \\<and>\n  local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<p} = 1\\<^sub>m dimR\n  i < p\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (M i) \\<in> fc_mats", "by simp"], ["", "lemma (in cpx_sq_mat) proj_measurement_proj:\n  assumes \"proj_measurement p M\"\nand \"i < p\"\nshows \"projector (meas_outcome_prj (M i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (M i))", "using assms"], ["proof (prove)\nusing this:\n  proj_measurement p M\n  i < p\n\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (M i))", "unfolding proj_measurement_def"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>i. meas_outcome_val (M i)) {..<p} \\<and>\n  (\\<forall>j<p.\n      meas_outcome_prj (M j) \\<in> fc_mats \\<and>\n      projector (meas_outcome_prj (M j))) \\<and>\n  (\\<forall>i<p.\n      \\<forall>j<p.\n         i \\<noteq> j \\<longrightarrow>\n         meas_outcome_prj (M i) * meas_outcome_prj (M j) =\n         0\\<^sub>m dimR dimR) \\<and>\n  local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<p} = 1\\<^sub>m dimR\n  i < p\n\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (M i))", "by simp"], ["", "text \\<open>We define the probability of obtaining a measurement outcome: this is a positive number and\nthe sum over all the measurement outcomes is 1.\\<close>"], ["", "definition (in cpx_sq_mat) meas_outcome_prob :: \"complex Matrix.mat \\<Rightarrow> \n  (nat \\<Rightarrow> real \\<times> complex Matrix.mat) \\<Rightarrow> nat \\<Rightarrow> complex\" where\n\"meas_outcome_prob R M i = Complex_Matrix.trace (R* (meas_outcome_prj (M i)))\""], ["", "lemma (in cpx_sq_mat) meas_outcome_prob_real:\nassumes \"R\\<in> fc_mats\"\n  and \"density_operator R\"\n  and \"proj_measurement n M\"\n  and \"i < n\"\nshows \"meas_outcome_prob R M i \\<in> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_prob R M i \\<in> \\<real>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. meas_outcome_prob R M i \\<in> \\<real>", "have \"complex_of_real (Re (Complex_Matrix.trace (R * meas_outcome_prj (M i)))) = \n    Complex_Matrix.trace (R * meas_outcome_prj (M i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real\n     (Re (Complex_Matrix.trace (R * meas_outcome_prj (M i)))) =\n    Complex_Matrix.trace (R * meas_outcome_prj (M i))", "proof (rule trace_proj_pos_real)"], ["proof (state)\ngoal (4 subgoals):\n 1. projector (meas_outcome_prj (M i))\n 2. Complex_Matrix.positive R\n 3. meas_outcome_prj (M i) \\<in> carrier_mat ?n ?n\n 4. R \\<in> carrier_mat ?n ?n", "show \"R \\<in> carrier_mat dimR dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<in> carrier_mat dimR dimR", "using assms fc_mats_carrier dim_eq"], ["proof (prove)\nusing this:\n  R \\<in> fc_mats\n  density_operator R\n  proj_measurement n M\n  i < n\n  fc_mats = carrier_mat dimR dimC\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. R \\<in> carrier_mat dimR dimR", "by simp"], ["proof (state)\nthis:\n  R \\<in> carrier_mat dimR dimR\n\ngoal (3 subgoals):\n 1. projector (meas_outcome_prj (M i))\n 2. Complex_Matrix.positive R\n 3. meas_outcome_prj (M i) \\<in> carrier_mat dimR dimR", "show \"Complex_Matrix.positive R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.positive R", "using assms"], ["proof (prove)\nusing this:\n  R \\<in> fc_mats\n  density_operator R\n  proj_measurement n M\n  i < n\n\ngoal (1 subgoal):\n 1. Complex_Matrix.positive R", "unfolding density_operator_def"], ["proof (prove)\nusing this:\n  R \\<in> fc_mats\n  Complex_Matrix.positive R \\<and> Complex_Matrix.trace R = 1\n  proj_measurement n M\n  i < n\n\ngoal (1 subgoal):\n 1. Complex_Matrix.positive R", "by simp"], ["proof (state)\nthis:\n  Complex_Matrix.positive R\n\ngoal (2 subgoals):\n 1. projector (meas_outcome_prj (M i))\n 2. meas_outcome_prj (M i) \\<in> carrier_mat dimR dimR", "show \"projector (meas_outcome_prj (M i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (M i))", "using assms proj_measurement_proj"], ["proof (prove)\nusing this:\n  R \\<in> fc_mats\n  density_operator R\n  proj_measurement n M\n  i < n\n  \\<lbrakk>proj_measurement ?p ?M; ?i < ?p\\<rbrakk>\n  \\<Longrightarrow> projector (meas_outcome_prj (?M ?i))\n\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (M i))", "by simp"], ["proof (state)\nthis:\n  projector (meas_outcome_prj (M i))\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (M i) \\<in> carrier_mat dimR dimR", "show \"meas_outcome_prj (M i) \\<in> carrier_mat dimR dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_prj (M i) \\<in> carrier_mat dimR dimR", "using assms proj_measurement_carrier\n        fc_mats_carrier dim_eq"], ["proof (prove)\nusing this:\n  R \\<in> fc_mats\n  density_operator R\n  proj_measurement n M\n  i < n\n  \\<lbrakk>proj_measurement ?p ?M; ?i < ?p\\<rbrakk>\n  \\<Longrightarrow> meas_outcome_prj (?M ?i) \\<in> fc_mats\n  fc_mats = carrier_mat dimR dimC\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (M i) \\<in> carrier_mat dimR dimR", "by simp"], ["proof (state)\nthis:\n  meas_outcome_prj (M i) \\<in> carrier_mat dimR dimR\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  complex_of_real (Re (Complex_Matrix.trace (R * meas_outcome_prj (M i)))) =\n  Complex_Matrix.trace (R * meas_outcome_prj (M i))\n\ngoal (1 subgoal):\n 1. meas_outcome_prob R M i \\<in> \\<real>", "thus ?thesis"], ["proof (prove)\nusing this:\n  complex_of_real (Re (Complex_Matrix.trace (R * meas_outcome_prj (M i)))) =\n  Complex_Matrix.trace (R * meas_outcome_prj (M i))\n\ngoal (1 subgoal):\n 1. meas_outcome_prob R M i \\<in> \\<real>", "unfolding meas_outcome_prob_def"], ["proof (prove)\nusing this:\n  complex_of_real (Re (Complex_Matrix.trace (R * meas_outcome_prj (M i)))) =\n  Complex_Matrix.trace (R * meas_outcome_prj (M i))\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * meas_outcome_prj (M i)) \\<in> \\<real>", "by (metis Reals_of_real)"], ["proof (state)\nthis:\n  meas_outcome_prob R M i \\<in> \\<real>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) meas_outcome_prob_pos:\n  assumes \"R\\<in> fc_mats\"\n  and \"density_operator R\"\n  and \"proj_measurement n M\"\n  and \"i < n\"\nshows \"0 \\<le> meas_outcome_prob R M i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> meas_outcome_prob R M i", "unfolding meas_outcome_prob_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Complex_Matrix.trace (R * meas_outcome_prj (M i))", "proof (rule positive_proj_trace)"], ["proof (state)\ngoal (4 subgoals):\n 1. projector (meas_outcome_prj (M i))\n 2. Complex_Matrix.positive R\n 3. meas_outcome_prj (M i) \\<in> carrier_mat ?n ?n\n 4. R \\<in> carrier_mat ?n ?n", "show \"R \\<in> carrier_mat dimR dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<in> carrier_mat dimR dimR", "using assms fc_mats_carrier dim_eq"], ["proof (prove)\nusing this:\n  R \\<in> fc_mats\n  density_operator R\n  proj_measurement n M\n  i < n\n  fc_mats = carrier_mat dimR dimC\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. R \\<in> carrier_mat dimR dimR", "by simp"], ["proof (state)\nthis:\n  R \\<in> carrier_mat dimR dimR\n\ngoal (3 subgoals):\n 1. projector (meas_outcome_prj (M i))\n 2. Complex_Matrix.positive R\n 3. meas_outcome_prj (M i) \\<in> carrier_mat dimR dimR", "show \"Complex_Matrix.positive R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.positive R", "using assms"], ["proof (prove)\nusing this:\n  R \\<in> fc_mats\n  density_operator R\n  proj_measurement n M\n  i < n\n\ngoal (1 subgoal):\n 1. Complex_Matrix.positive R", "unfolding density_operator_def"], ["proof (prove)\nusing this:\n  R \\<in> fc_mats\n  Complex_Matrix.positive R \\<and> Complex_Matrix.trace R = 1\n  proj_measurement n M\n  i < n\n\ngoal (1 subgoal):\n 1. Complex_Matrix.positive R", "by simp"], ["proof (state)\nthis:\n  Complex_Matrix.positive R\n\ngoal (2 subgoals):\n 1. projector (meas_outcome_prj (M i))\n 2. meas_outcome_prj (M i) \\<in> carrier_mat dimR dimR", "show \"projector (meas_outcome_prj (M i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (M i))", "using assms proj_measurement_proj"], ["proof (prove)\nusing this:\n  R \\<in> fc_mats\n  density_operator R\n  proj_measurement n M\n  i < n\n  \\<lbrakk>proj_measurement ?p ?M; ?i < ?p\\<rbrakk>\n  \\<Longrightarrow> projector (meas_outcome_prj (?M ?i))\n\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (M i))", "by simp"], ["proof (state)\nthis:\n  projector (meas_outcome_prj (M i))\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (M i) \\<in> carrier_mat dimR dimR", "show \"meas_outcome_prj (M i) \\<in> carrier_mat dimR dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_prj (M i) \\<in> carrier_mat dimR dimR", "using assms proj_measurement_carrier\n      fc_mats_carrier dim_eq"], ["proof (prove)\nusing this:\n  R \\<in> fc_mats\n  density_operator R\n  proj_measurement n M\n  i < n\n  \\<lbrakk>proj_measurement ?p ?M; ?i < ?p\\<rbrakk>\n  \\<Longrightarrow> meas_outcome_prj (?M ?i) \\<in> fc_mats\n  fc_mats = carrier_mat dimR dimC\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (M i) \\<in> carrier_mat dimR dimR", "by simp"], ["proof (state)\nthis:\n  meas_outcome_prj (M i) \\<in> carrier_mat dimR dimR\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) meas_outcome_prob_sum:\n  assumes \"density_operator R\"\n  and \"R\\<in> fc_mats\"\n  and\" proj_measurement n M\"\nshows \"(\\<Sum> j \\<in> {..< n}. meas_outcome_prob R M j) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (meas_outcome_prob R M) {..<n} = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (meas_outcome_prob R M) {..<n} = 1", "have \"(\\<Sum> j \\<in> {..< n}. Complex_Matrix.trace (R* (meas_outcome_prj (M j)))) = \n    Complex_Matrix.trace (sum_mat (\\<lambda>j. R* (meas_outcome_prj (M j))) {..< n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j<n. Complex_Matrix.trace (R * meas_outcome_prj (M j))) =\n    Complex_Matrix.trace\n     (local.sum_mat (\\<lambda>j. R * meas_outcome_prj (M j)) {..<n})", "proof (rule trace_sum_mat[symmetric], auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < n \\<Longrightarrow> R * meas_outcome_prj (M j) \\<in> fc_mats", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < n \\<Longrightarrow> R * meas_outcome_prj (M j) \\<in> fc_mats", "assume \"j < n\""], ["proof (state)\nthis:\n  j < n\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < n \\<Longrightarrow> R * meas_outcome_prj (M j) \\<in> fc_mats", "thus \"R * meas_outcome_prj (M j) \\<in> fc_mats\""], ["proof (prove)\nusing this:\n  j < n\n\ngoal (1 subgoal):\n 1. R * meas_outcome_prj (M j) \\<in> fc_mats", "using cpx_sq_mat_mult assms"], ["proof (prove)\nusing this:\n  j < n\n  \\<lbrakk>?A \\<in> fc_mats; ?B \\<in> fc_mats\\<rbrakk>\n  \\<Longrightarrow> ?A * ?B \\<in> fc_mats\n  density_operator R\n  R \\<in> fc_mats\n  proj_measurement n M\n\ngoal (1 subgoal):\n 1. R * meas_outcome_prj (M j) \\<in> fc_mats", "unfolding proj_measurement_def"], ["proof (prove)\nusing this:\n  j < n\n  \\<lbrakk>?A \\<in> fc_mats; ?B \\<in> fc_mats\\<rbrakk>\n  \\<Longrightarrow> ?A * ?B \\<in> fc_mats\n  density_operator R\n  R \\<in> fc_mats\n  inj_on (\\<lambda>i. meas_outcome_val (M i)) {..<n} \\<and>\n  (\\<forall>j<n.\n      meas_outcome_prj (M j) \\<in> fc_mats \\<and>\n      projector (meas_outcome_prj (M j))) \\<and>\n  (\\<forall>i<n.\n      \\<forall>j<n.\n         i \\<noteq> j \\<longrightarrow>\n         meas_outcome_prj (M i) * meas_outcome_prj (M j) =\n         0\\<^sub>m dimR dimR) \\<and>\n  local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n} = 1\\<^sub>m dimR\n\ngoal (1 subgoal):\n 1. R * meas_outcome_prj (M j) \\<in> fc_mats", "by simp"], ["proof (state)\nthis:\n  R * meas_outcome_prj (M j) \\<in> fc_mats\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>j<n. Complex_Matrix.trace (R * meas_outcome_prj (M j))) =\n  Complex_Matrix.trace\n   (local.sum_mat (\\<lambda>j. R * meas_outcome_prj (M j)) {..<n})\n\ngoal (1 subgoal):\n 1. sum (meas_outcome_prob R M) {..<n} = 1", "also"], ["proof (state)\nthis:\n  (\\<Sum>j<n. Complex_Matrix.trace (R * meas_outcome_prj (M j))) =\n  Complex_Matrix.trace\n   (local.sum_mat (\\<lambda>j. R * meas_outcome_prj (M j)) {..<n})\n\ngoal (1 subgoal):\n 1. sum (meas_outcome_prob R M) {..<n} = 1", "have \"... = Complex_Matrix.trace (R * (sum_mat (\\<lambda>j. (meas_outcome_prj (M j))) {..< n}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.trace\n     (local.sum_mat (\\<lambda>j. R * meas_outcome_prj (M j)) {..<n}) =\n    Complex_Matrix.trace\n     (R * local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Complex_Matrix.trace\n     (local.sum_mat (\\<lambda>j. R * meas_outcome_prj (M j)) {..<n}) =\n    Complex_Matrix.trace\n     (R * local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n})", "have \"sum_mat (\\<lambda>j. R* (meas_outcome_prj (M j))) {..< n} = \n      R * (sum_mat (\\<lambda>j. (meas_outcome_prj (M j))) {..< n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>j. R * meas_outcome_prj (M j)) {..<n} =\n    R * local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n}", "proof (rule mult_sum_mat_distrib_left, (auto simp add: assms))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j. j < n \\<Longrightarrow> meas_outcome_prj (M j) \\<in> fc_mats", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j. j < n \\<Longrightarrow> meas_outcome_prj (M j) \\<in> fc_mats", "assume \"j < n\""], ["proof (state)\nthis:\n  j < n\n\ngoal (1 subgoal):\n 1. \\<And>j. j < n \\<Longrightarrow> meas_outcome_prj (M j) \\<in> fc_mats", "thus \"meas_outcome_prj (M j) \\<in> fc_mats\""], ["proof (prove)\nusing this:\n  j < n\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (M j) \\<in> fc_mats", "using assms"], ["proof (prove)\nusing this:\n  j < n\n  density_operator R\n  R \\<in> fc_mats\n  proj_measurement n M\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (M j) \\<in> fc_mats", "unfolding proj_measurement_def"], ["proof (prove)\nusing this:\n  j < n\n  density_operator R\n  R \\<in> fc_mats\n  inj_on (\\<lambda>i. meas_outcome_val (M i)) {..<n} \\<and>\n  (\\<forall>j<n.\n      meas_outcome_prj (M j) \\<in> fc_mats \\<and>\n      projector (meas_outcome_prj (M j))) \\<and>\n  (\\<forall>i<n.\n      \\<forall>j<n.\n         i \\<noteq> j \\<longrightarrow>\n         meas_outcome_prj (M i) * meas_outcome_prj (M j) =\n         0\\<^sub>m dimR dimR) \\<and>\n  local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n} = 1\\<^sub>m dimR\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (M j) \\<in> fc_mats", "by simp"], ["proof (state)\nthis:\n  meas_outcome_prj (M j) \\<in> fc_mats\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  local.sum_mat (\\<lambda>j. R * meas_outcome_prj (M j)) {..<n} =\n  R * local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n}\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace\n     (local.sum_mat (\\<lambda>j. R * meas_outcome_prj (M j)) {..<n}) =\n    Complex_Matrix.trace\n     (R * local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n})", "thus ?thesis"], ["proof (prove)\nusing this:\n  local.sum_mat (\\<lambda>j. R * meas_outcome_prj (M j)) {..<n} =\n  R * local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n}\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace\n     (local.sum_mat (\\<lambda>j. R * meas_outcome_prj (M j)) {..<n}) =\n    Complex_Matrix.trace\n     (R * local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n})", "by simp"], ["proof (state)\nthis:\n  Complex_Matrix.trace\n   (local.sum_mat (\\<lambda>j. R * meas_outcome_prj (M j)) {..<n}) =\n  Complex_Matrix.trace\n   (R * local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Complex_Matrix.trace\n   (local.sum_mat (\\<lambda>j. R * meas_outcome_prj (M j)) {..<n}) =\n  Complex_Matrix.trace\n   (R * local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n})\n\ngoal (1 subgoal):\n 1. sum (meas_outcome_prob R M) {..<n} = 1", "also"], ["proof (state)\nthis:\n  Complex_Matrix.trace\n   (local.sum_mat (\\<lambda>j. R * meas_outcome_prj (M j)) {..<n}) =\n  Complex_Matrix.trace\n   (R * local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n})\n\ngoal (1 subgoal):\n 1. sum (meas_outcome_prob R M) {..<n} = 1", "have \"... = Complex_Matrix.trace (R * 1\\<^sub>m dimR)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.trace\n     (R * local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n}) =\n    Complex_Matrix.trace (R * 1\\<^sub>m dimR)", "using assms"], ["proof (prove)\nusing this:\n  density_operator R\n  R \\<in> fc_mats\n  proj_measurement n M\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace\n     (R * local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n}) =\n    Complex_Matrix.trace (R * 1\\<^sub>m dimR)", "unfolding proj_measurement_def"], ["proof (prove)\nusing this:\n  density_operator R\n  R \\<in> fc_mats\n  inj_on (\\<lambda>i. meas_outcome_val (M i)) {..<n} \\<and>\n  (\\<forall>j<n.\n      meas_outcome_prj (M j) \\<in> fc_mats \\<and>\n      projector (meas_outcome_prj (M j))) \\<and>\n  (\\<forall>i<n.\n      \\<forall>j<n.\n         i \\<noteq> j \\<longrightarrow>\n         meas_outcome_prj (M i) * meas_outcome_prj (M j) =\n         0\\<^sub>m dimR dimR) \\<and>\n  local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n} = 1\\<^sub>m dimR\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace\n     (R * local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n}) =\n    Complex_Matrix.trace (R * 1\\<^sub>m dimR)", "by simp"], ["proof (state)\nthis:\n  Complex_Matrix.trace\n   (R * local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n}) =\n  Complex_Matrix.trace (R * 1\\<^sub>m dimR)\n\ngoal (1 subgoal):\n 1. sum (meas_outcome_prob R M) {..<n} = 1", "also"], ["proof (state)\nthis:\n  Complex_Matrix.trace\n   (R * local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n}) =\n  Complex_Matrix.trace (R * 1\\<^sub>m dimR)\n\ngoal (1 subgoal):\n 1. sum (meas_outcome_prob R M) {..<n} = 1", "have \"... = Complex_Matrix.trace R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * 1\\<^sub>m dimR) = Complex_Matrix.trace R", "using assms"], ["proof (prove)\nusing this:\n  density_operator R\n  R \\<in> fc_mats\n  proj_measurement n M\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * 1\\<^sub>m dimR) = Complex_Matrix.trace R", "by (simp add: fc_mats_carrier dim_eq)"], ["proof (state)\nthis:\n  Complex_Matrix.trace (R * 1\\<^sub>m dimR) = Complex_Matrix.trace R\n\ngoal (1 subgoal):\n 1. sum (meas_outcome_prob R M) {..<n} = 1", "also"], ["proof (state)\nthis:\n  Complex_Matrix.trace (R * 1\\<^sub>m dimR) = Complex_Matrix.trace R\n\ngoal (1 subgoal):\n 1. sum (meas_outcome_prob R M) {..<n} = 1", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.trace R = 1", "using assms"], ["proof (prove)\nusing this:\n  density_operator R\n  R \\<in> fc_mats\n  proj_measurement n M\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace R = 1", "unfolding density_operator_def"], ["proof (prove)\nusing this:\n  Complex_Matrix.positive R \\<and> Complex_Matrix.trace R = 1\n  R \\<in> fc_mats\n  proj_measurement n M\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace R = 1", "by simp"], ["proof (state)\nthis:\n  Complex_Matrix.trace R = 1\n\ngoal (1 subgoal):\n 1. sum (meas_outcome_prob R M) {..<n} = 1", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>j<n. Complex_Matrix.trace (R * meas_outcome_prj (M j))) = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>j<n. Complex_Matrix.trace (R * meas_outcome_prj (M j))) = 1\n\ngoal (1 subgoal):\n 1. sum (meas_outcome_prob R M) {..<n} = 1", "unfolding meas_outcome_prob_def"], ["proof (prove)\nusing this:\n  (\\<Sum>j<n. Complex_Matrix.trace (R * meas_outcome_prj (M j))) = 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>j<n. Complex_Matrix.trace (R * meas_outcome_prj (M j))) = 1", "."], ["proof (state)\nthis:\n  sum (meas_outcome_prob R M) {..<n} = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We introduce the maximally mixed density operator. Intuitively, this density operator \ncorresponds to a uniform distribution of the states of an orthonormal basis.\nThis operator will be used to define the density operator after a measurement for the measure \noutcome probabilities equal to zero.\\<close>"], ["", "definition max_mix_density :: \"nat \\<Rightarrow> complex Matrix.mat\" where\n\"max_mix_density n = ((1::real)/ n)  \\<cdot>\\<^sub>m (1\\<^sub>m n)\""], ["", "lemma max_mix_density_carrier:\n  shows \"max_mix_density n \\<in> carrier_mat n n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_mix_density n \\<in> carrier_mat n n", "unfolding max_mix_density_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n\n    \\<in> carrier_mat n n", "by simp"], ["", "lemma max_mix_is_density: \n  assumes \"0 < n\"\n  shows \"density_operator (max_mix_density n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. density_operator (max_mix_density n)", "unfolding density_operator_def max_mix_density_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.positive\n     (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n) \\<and>\n    Complex_Matrix.trace\n     (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n) =\n    1", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. Complex_Matrix.positive\n     (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n)\n 2. Complex_Matrix.trace\n     (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n) =\n    1", "have \"Complex_Matrix.trace (complex_of_real ((1::real)/n) \\<cdot>\\<^sub>m 1\\<^sub>m n) = \n    (complex_of_real ((1::real)/n)) *  (Complex_Matrix.trace ((1\\<^sub>m n)::complex Matrix.mat))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.trace\n     (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n) =\n    complex_of_real (1 / real n) * Complex_Matrix.trace (1\\<^sub>m n)", "using one_carrier_mat trace_smult[of \"(1\\<^sub>m n)::complex Matrix.mat\"]"], ["proof (prove)\nusing this:\n  1\\<^sub>m ?n \\<in> carrier_mat ?n ?n\n  1\\<^sub>m n \\<in> carrier_mat ?n ?n \\<Longrightarrow>\n  Complex_Matrix.trace (?c \\<cdot>\\<^sub>m 1\\<^sub>m n) =\n  ?c * Complex_Matrix.trace (1\\<^sub>m n)\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace\n     (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n) =\n    complex_of_real (1 / real n) * Complex_Matrix.trace (1\\<^sub>m n)", "by blast"], ["proof (state)\nthis:\n  Complex_Matrix.trace\n   (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n) =\n  complex_of_real (1 / real n) * Complex_Matrix.trace (1\\<^sub>m n)\n\ngoal (2 subgoals):\n 1. Complex_Matrix.positive\n     (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n)\n 2. Complex_Matrix.trace\n     (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n) =\n    1", "also"], ["proof (state)\nthis:\n  Complex_Matrix.trace\n   (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n) =\n  complex_of_real (1 / real n) * Complex_Matrix.trace (1\\<^sub>m n)\n\ngoal (2 subgoals):\n 1. Complex_Matrix.positive\n     (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n)\n 2. Complex_Matrix.trace\n     (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n) =\n    1", "have \"... = (complex_of_real ((1::real)/n))  * (real n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (1 / real n) * Complex_Matrix.trace (1\\<^sub>m n) =\n    complex_of_real (1 / real n) * complex_of_real (real n)", "using trace_1[of n]"], ["proof (prove)\nusing this:\n  Complex_Matrix.trace (1\\<^sub>m n) = of_nat n\n\ngoal (1 subgoal):\n 1. complex_of_real (1 / real n) * Complex_Matrix.trace (1\\<^sub>m n) =\n    complex_of_real (1 / real n) * complex_of_real (real n)", "by simp"], ["proof (state)\nthis:\n  complex_of_real (1 / real n) * Complex_Matrix.trace (1\\<^sub>m n) =\n  complex_of_real (1 / real n) * complex_of_real (real n)\n\ngoal (2 subgoals):\n 1. Complex_Matrix.positive\n     (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n)\n 2. Complex_Matrix.trace\n     (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n) =\n    1", "also"], ["proof (state)\nthis:\n  complex_of_real (1 / real n) * Complex_Matrix.trace (1\\<^sub>m n) =\n  complex_of_real (1 / real n) * complex_of_real (real n)\n\ngoal (2 subgoals):\n 1. Complex_Matrix.positive\n     (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n)\n 2. Complex_Matrix.trace\n     (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n) =\n    1", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (1 / real n) * complex_of_real (real n) = 1", "using assms"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. complex_of_real (1 / real n) * complex_of_real (real n) = 1", "by simp"], ["proof (state)\nthis:\n  complex_of_real (1 / real n) * complex_of_real (real n) = 1\n\ngoal (2 subgoals):\n 1. Complex_Matrix.positive\n     (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n)\n 2. Complex_Matrix.trace\n     (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n) =\n    1", "finally"], ["proof (chain)\npicking this:\n  Complex_Matrix.trace\n   (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n) =\n  1", "show \"Complex_Matrix.trace (complex_of_real ((1::real)/n) \\<cdot>\\<^sub>m 1\\<^sub>m n) =  1\""], ["proof (prove)\nusing this:\n  Complex_Matrix.trace\n   (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n) =\n  1\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace\n     (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n) =\n    1", "."], ["proof (state)\nthis:\n  Complex_Matrix.trace\n   (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n) =\n  1\n\ngoal (1 subgoal):\n 1. Complex_Matrix.positive\n     (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Complex_Matrix.positive\n     (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n)", "show \"Complex_Matrix.positive (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.positive\n     (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n)", "by (rule positive_smult, (auto simp add: positive_one))"], ["proof (state)\nthis:\n  Complex_Matrix.positive\n   (complex_of_real (1 / real n) \\<cdot>\\<^sub>m 1\\<^sub>m n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) max_mix_density_square:\n  shows \"max_mix_density dimR \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_mix_density dimR \\<in> fc_mats", "unfolding max_mix_density_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (1 / real dimR) \\<cdot>\\<^sub>m 1\\<^sub>m dimR\n    \\<in> fc_mats", "using fc_mats_carrier dim_eq"], ["proof (prove)\nusing this:\n  fc_mats = carrier_mat dimR dimC\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. complex_of_real (1 / real dimR) \\<cdot>\\<^sub>m 1\\<^sub>m dimR\n    \\<in> fc_mats", "by simp"], ["", "text \\<open>Given a measurement outcome, \\verb+density_collapse+ represents the resulting density \noperator. In practice only the measure outcomes with nonzero probabilities are of interest; we \n(arbitrarily) collapse the density operator for zero-probability outcomes to the maximally mixed \ndensity operator.\\<close>"], ["", "definition density_collapse ::\"complex Matrix.mat \\<Rightarrow> complex Matrix.mat \\<Rightarrow> complex Matrix.mat\" where\n\"density_collapse R P = (if ((Complex_Matrix.trace (R * P)) = 0) then (max_mix_density (dim_row R)) \n    else ((1::real)/ ((Complex_Matrix.trace (R * P)))) \\<cdot>\\<^sub>m (P * R * P))\""], ["", "lemma  density_collapse_carrier:\n  assumes \"0 < dim_row R\"\n  and \"P \\<in> carrier_mat n n\"\n  and \"R \\<in> carrier_mat n n\"\nshows \"(density_collapse R P) \\<in> carrier_mat n n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. density_collapse R P \\<in> carrier_mat n n", "proof (cases \"(Complex_Matrix.trace (R * P)) = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Complex_Matrix.trace (R * P) = 0 \\<Longrightarrow>\n    density_collapse R P \\<in> carrier_mat n n\n 2. Complex_Matrix.trace (R * P) \\<noteq> 0 \\<Longrightarrow>\n    density_collapse R P \\<in> carrier_mat n n", "case True"], ["proof (state)\nthis:\n  Complex_Matrix.trace (R * P) = 0\n\ngoal (2 subgoals):\n 1. Complex_Matrix.trace (R * P) = 0 \\<Longrightarrow>\n    density_collapse R P \\<in> carrier_mat n n\n 2. Complex_Matrix.trace (R * P) \\<noteq> 0 \\<Longrightarrow>\n    density_collapse R P \\<in> carrier_mat n n", "hence \"density_collapse R P = max_mix_density (dim_row R)\""], ["proof (prove)\nusing this:\n  Complex_Matrix.trace (R * P) = 0\n\ngoal (1 subgoal):\n 1. density_collapse R P = max_mix_density (dim_row R)", "unfolding density_collapse_def"], ["proof (prove)\nusing this:\n  Complex_Matrix.trace (R * P) = 0\n\ngoal (1 subgoal):\n 1. (if Complex_Matrix.trace (R * P) = 0 then max_mix_density (dim_row R)\n     else complex_of_real 1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m\n          (P * R * P)) =\n    max_mix_density (dim_row R)", "by simp"], ["proof (state)\nthis:\n  density_collapse R P = max_mix_density (dim_row R)\n\ngoal (2 subgoals):\n 1. Complex_Matrix.trace (R * P) = 0 \\<Longrightarrow>\n    density_collapse R P \\<in> carrier_mat n n\n 2. Complex_Matrix.trace (R * P) \\<noteq> 0 \\<Longrightarrow>\n    density_collapse R P \\<in> carrier_mat n n", "then"], ["proof (chain)\npicking this:\n  density_collapse R P = max_mix_density (dim_row R)", "show ?thesis"], ["proof (prove)\nusing this:\n  density_collapse R P = max_mix_density (dim_row R)\n\ngoal (1 subgoal):\n 1. density_collapse R P \\<in> carrier_mat n n", "using max_mix_is_density assms max_mix_density_carrier"], ["proof (prove)\nusing this:\n  density_collapse R P = max_mix_density (dim_row R)\n  0 < ?n \\<Longrightarrow> density_operator (max_mix_density ?n)\n  0 < dim_row R\n  P \\<in> carrier_mat n n\n  R \\<in> carrier_mat n n\n  max_mix_density ?n \\<in> carrier_mat ?n ?n\n\ngoal (1 subgoal):\n 1. density_collapse R P \\<in> carrier_mat n n", "by auto"], ["proof (state)\nthis:\n  density_collapse R P \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * P) \\<noteq> 0 \\<Longrightarrow>\n    density_collapse R P \\<in> carrier_mat n n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * P) \\<noteq> 0 \\<Longrightarrow>\n    density_collapse R P \\<in> carrier_mat n n", "case False"], ["proof (state)\nthis:\n  Complex_Matrix.trace (R * P) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * P) \\<noteq> 0 \\<Longrightarrow>\n    density_collapse R P \\<in> carrier_mat n n", "hence \"density_collapse R P = complex_of_real 1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m (P * R * P)\""], ["proof (prove)\nusing this:\n  Complex_Matrix.trace (R * P) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. density_collapse R P =\n    complex_of_real 1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m\n    (P * R * P)", "unfolding density_collapse_def"], ["proof (prove)\nusing this:\n  Complex_Matrix.trace (R * P) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (if Complex_Matrix.trace (R * P) = 0 then max_mix_density (dim_row R)\n     else complex_of_real 1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m\n          (P * R * P)) =\n    complex_of_real 1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m\n    (P * R * P)", "by simp"], ["proof (state)\nthis:\n  density_collapse R P =\n  complex_of_real 1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m\n  (P * R * P)\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * P) \\<noteq> 0 \\<Longrightarrow>\n    density_collapse R P \\<in> carrier_mat n n", "thus ?thesis"], ["proof (prove)\nusing this:\n  density_collapse R P =\n  complex_of_real 1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m\n  (P * R * P)\n\ngoal (1 subgoal):\n 1. density_collapse R P \\<in> carrier_mat n n", "using assms"], ["proof (prove)\nusing this:\n  density_collapse R P =\n  complex_of_real 1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m\n  (P * R * P)\n  0 < dim_row R\n  P \\<in> carrier_mat n n\n  R \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. density_collapse R P \\<in> carrier_mat n n", "by auto"], ["proof (state)\nthis:\n  density_collapse R P \\<in> carrier_mat n n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  density_collapse_operator:\n  assumes \"projector P\"\n  and \"density_operator R\"\n  and \"0 < dim_row R\"\n  and \"P \\<in> carrier_mat n n\"\n  and \"R \\<in> carrier_mat n n\"\nshows \"density_operator (density_collapse R P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. density_operator (density_collapse R P)", "proof (cases \"(Complex_Matrix.trace (R * P)) = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Complex_Matrix.trace (R * P) = 0 \\<Longrightarrow>\n    density_operator (density_collapse R P)\n 2. Complex_Matrix.trace (R * P) \\<noteq> 0 \\<Longrightarrow>\n    density_operator (density_collapse R P)", "case True"], ["proof (state)\nthis:\n  Complex_Matrix.trace (R * P) = 0\n\ngoal (2 subgoals):\n 1. Complex_Matrix.trace (R * P) = 0 \\<Longrightarrow>\n    density_operator (density_collapse R P)\n 2. Complex_Matrix.trace (R * P) \\<noteq> 0 \\<Longrightarrow>\n    density_operator (density_collapse R P)", "hence \"density_collapse R P = max_mix_density (dim_row R)\""], ["proof (prove)\nusing this:\n  Complex_Matrix.trace (R * P) = 0\n\ngoal (1 subgoal):\n 1. density_collapse R P = max_mix_density (dim_row R)", "unfolding density_collapse_def"], ["proof (prove)\nusing this:\n  Complex_Matrix.trace (R * P) = 0\n\ngoal (1 subgoal):\n 1. (if Complex_Matrix.trace (R * P) = 0 then max_mix_density (dim_row R)\n     else complex_of_real 1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m\n          (P * R * P)) =\n    max_mix_density (dim_row R)", "by simp"], ["proof (state)\nthis:\n  density_collapse R P = max_mix_density (dim_row R)\n\ngoal (2 subgoals):\n 1. Complex_Matrix.trace (R * P) = 0 \\<Longrightarrow>\n    density_operator (density_collapse R P)\n 2. Complex_Matrix.trace (R * P) \\<noteq> 0 \\<Longrightarrow>\n    density_operator (density_collapse R P)", "then"], ["proof (chain)\npicking this:\n  density_collapse R P = max_mix_density (dim_row R)", "show ?thesis"], ["proof (prove)\nusing this:\n  density_collapse R P = max_mix_density (dim_row R)\n\ngoal (1 subgoal):\n 1. density_operator (density_collapse R P)", "using max_mix_is_density assms"], ["proof (prove)\nusing this:\n  density_collapse R P = max_mix_density (dim_row R)\n  0 < ?n \\<Longrightarrow> density_operator (max_mix_density ?n)\n  projector P\n  density_operator R\n  0 < dim_row R\n  P \\<in> carrier_mat n n\n  R \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. density_operator (density_collapse R P)", "by simp"], ["proof (state)\nthis:\n  density_operator (density_collapse R P)\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * P) \\<noteq> 0 \\<Longrightarrow>\n    density_operator (density_collapse R P)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * P) \\<noteq> 0 \\<Longrightarrow>\n    density_operator (density_collapse R P)", "case False"], ["proof (state)\nthis:\n  Complex_Matrix.trace (R * P) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * P) \\<noteq> 0 \\<Longrightarrow>\n    density_operator (density_collapse R P)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. density_operator (density_collapse R P)", "unfolding density_operator_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.positive (density_collapse R P) \\<and>\n    Complex_Matrix.trace (density_collapse R P) = 1", "proof (intro conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. Complex_Matrix.positive (density_collapse R P)\n 2. Complex_Matrix.trace (density_collapse R P) = 1", "have \"Complex_Matrix.positive ((1 / (Complex_Matrix.trace (R * P))) \\<cdot>\\<^sub>m (P * R * P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.positive\n     (1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m (P * R * P))", "proof (rule positive_smult)"], ["proof (state)\ngoal (3 subgoals):\n 1. P * R * P \\<in> carrier_mat ?n ?n\n 2. Complex_Matrix.positive (P * R * P)\n 3. 0 \\<le> 1 / Complex_Matrix.trace (R * P)", "show \"P * R * P \\<in> carrier_mat n n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P * R * P \\<in> carrier_mat n n", "using assms"], ["proof (prove)\nusing this:\n  projector P\n  density_operator R\n  0 < dim_row R\n  P \\<in> carrier_mat n n\n  R \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. P * R * P \\<in> carrier_mat n n", "by simp"], ["proof (state)\nthis:\n  P * R * P \\<in> carrier_mat n n\n\ngoal (2 subgoals):\n 1. Complex_Matrix.positive (P * R * P)\n 2. 0 \\<le> 1 / Complex_Matrix.trace (R * P)", "have \"Complex_Matrix.positive R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.positive R", "using assms"], ["proof (prove)\nusing this:\n  projector P\n  density_operator R\n  0 < dim_row R\n  P \\<in> carrier_mat n n\n  R \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. Complex_Matrix.positive R", "unfolding density_operator_def"], ["proof (prove)\nusing this:\n  projector P\n  Complex_Matrix.positive R \\<and> Complex_Matrix.trace R = 1\n  0 < dim_row R\n  P \\<in> carrier_mat n n\n  R \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. Complex_Matrix.positive R", "by simp"], ["proof (state)\nthis:\n  Complex_Matrix.positive R\n\ngoal (2 subgoals):\n 1. Complex_Matrix.positive (P * R * P)\n 2. 0 \\<le> 1 / Complex_Matrix.trace (R * P)", "hence \"0 \\<le> (Complex_Matrix.trace (R * P))\""], ["proof (prove)\nusing this:\n  Complex_Matrix.positive R\n\ngoal (1 subgoal):\n 1. 0 \\<le> Complex_Matrix.trace (R * P)", "using  positive_proj_trace[of P R n] assms \n          False"], ["proof (prove)\nusing this:\n  Complex_Matrix.positive R\n  \\<lbrakk>projector P; Complex_Matrix.positive R; P \\<in> carrier_mat n n;\n   R \\<in> carrier_mat n n\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> Complex_Matrix.trace (R * P)\n  projector P\n  density_operator R\n  0 < dim_row R\n  P \\<in> carrier_mat n n\n  R \\<in> carrier_mat n n\n  Complex_Matrix.trace (R * P) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> Complex_Matrix.trace (R * P)", "by auto"], ["proof (state)\nthis:\n  0 \\<le> Complex_Matrix.trace (R * P)\n\ngoal (2 subgoals):\n 1. Complex_Matrix.positive (P * R * P)\n 2. 0 \\<le> 1 / Complex_Matrix.trace (R * P)", "hence \"0 \\<le> Re (Complex_Matrix.trace (R * P))\""], ["proof (prove)\nusing this:\n  0 \\<le> Complex_Matrix.trace (R * P)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (Complex_Matrix.trace (R * P))", "by simp"], ["proof (state)\nthis:\n  0 \\<le> Re (Complex_Matrix.trace (R * P))\n\ngoal (2 subgoals):\n 1. Complex_Matrix.positive (P * R * P)\n 2. 0 \\<le> 1 / Complex_Matrix.trace (R * P)", "hence \"0 \\<le> 1/(Re (Complex_Matrix.trace (R * P)))\""], ["proof (prove)\nusing this:\n  0 \\<le> Re (Complex_Matrix.trace (R * P))\n\ngoal (1 subgoal):\n 1. 0 \\<le> 1 / Re (Complex_Matrix.trace (R * P))", "by simp"], ["proof (state)\nthis:\n  0 \\<le> 1 / Re (Complex_Matrix.trace (R * P))\n\ngoal (2 subgoals):\n 1. Complex_Matrix.positive (P * R * P)\n 2. 0 \\<le> 1 / Complex_Matrix.trace (R * P)", "have \"Re (Complex_Matrix.trace (R * P)) = Complex_Matrix.trace (R * P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (Re (Complex_Matrix.trace (R * P))) =\n    Complex_Matrix.trace (R * P)", "using assms \\<open>Complex_Matrix.positive R\\<close> trace_proj_pos_real"], ["proof (prove)\nusing this:\n  projector P\n  density_operator R\n  0 < dim_row R\n  P \\<in> carrier_mat n n\n  R \\<in> carrier_mat n n\n  Complex_Matrix.positive R\n  \\<lbrakk>projector ?P; Complex_Matrix.positive ?R;\n   ?P \\<in> carrier_mat ?n ?n; ?R \\<in> carrier_mat ?n ?n\\<rbrakk>\n  \\<Longrightarrow> complex_of_real (Re (Complex_Matrix.trace (?R * ?P))) =\n                    Complex_Matrix.trace (?R * ?P)\n\ngoal (1 subgoal):\n 1. complex_of_real (Re (Complex_Matrix.trace (R * P))) =\n    Complex_Matrix.trace (R * P)", "by simp"], ["proof (state)\nthis:\n  complex_of_real (Re (Complex_Matrix.trace (R * P))) =\n  Complex_Matrix.trace (R * P)\n\ngoal (2 subgoals):\n 1. Complex_Matrix.positive (P * R * P)\n 2. 0 \\<le> 1 / Complex_Matrix.trace (R * P)", "hence inv: \"1/ (Complex_Matrix.trace (R * P)) = 1/(Re (Complex_Matrix.trace (R * P)))\""], ["proof (prove)\nusing this:\n  complex_of_real (Re (Complex_Matrix.trace (R * P))) =\n  Complex_Matrix.trace (R * P)\n\ngoal (1 subgoal):\n 1. 1 / Complex_Matrix.trace (R * P) =\n    complex_of_real (1 / Re (Complex_Matrix.trace (R * P)))", "by simp"], ["proof (state)\nthis:\n  1 / Complex_Matrix.trace (R * P) =\n  complex_of_real (1 / Re (Complex_Matrix.trace (R * P)))\n\ngoal (2 subgoals):\n 1. Complex_Matrix.positive (P * R * P)\n 2. 0 \\<le> 1 / Complex_Matrix.trace (R * P)", "thus \"0 \\<le> 1/ (Complex_Matrix.trace (R * P))\""], ["proof (prove)\nusing this:\n  1 / Complex_Matrix.trace (R * P) =\n  complex_of_real (1 / Re (Complex_Matrix.trace (R * P)))\n\ngoal (1 subgoal):\n 1. 0 \\<le> 1 / Complex_Matrix.trace (R * P)", "using \\<open>0 \\<le> 1/(Re (Complex_Matrix.trace (R * P)))\\<close>"], ["proof (prove)\nusing this:\n  1 / Complex_Matrix.trace (R * P) =\n  complex_of_real (1 / Re (Complex_Matrix.trace (R * P)))\n  0 \\<le> 1 / Re (Complex_Matrix.trace (R * P))\n\ngoal (1 subgoal):\n 1. 0 \\<le> 1 / Complex_Matrix.trace (R * P)", "by (simp add: inv)"], ["proof (state)\nthis:\n  0 \\<le> 1 / Complex_Matrix.trace (R * P)\n\ngoal (1 subgoal):\n 1. Complex_Matrix.positive (P * R * P)", "show \"Complex_Matrix.positive (P * R * P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.positive (P * R * P)", "using assms \n          positive_close_under_left_right_mult_adjoint[of P n R]"], ["proof (prove)\nusing this:\n  projector P\n  density_operator R\n  0 < dim_row R\n  P \\<in> carrier_mat n n\n  R \\<in> carrier_mat n n\n  \\<lbrakk>P \\<in> carrier_mat n n; R \\<in> carrier_mat n n;\n   Complex_Matrix.positive R\\<rbrakk>\n  \\<Longrightarrow> Complex_Matrix.positive\n                     (P * R * Complex_Matrix.adjoint P)\n\ngoal (1 subgoal):\n 1. Complex_Matrix.positive (P * R * P)", "by (simp add: \\<open>Complex_Matrix.positive R\\<close> hermitian_def projector_def)"], ["proof (state)\nthis:\n  Complex_Matrix.positive (P * R * P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Complex_Matrix.positive\n   (1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m (P * R * P))\n\ngoal (2 subgoals):\n 1. Complex_Matrix.positive (density_collapse R P)\n 2. Complex_Matrix.trace (density_collapse R P) = 1", "thus \"Complex_Matrix.positive (density_collapse R P)\""], ["proof (prove)\nusing this:\n  Complex_Matrix.positive\n   (1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m (P * R * P))\n\ngoal (1 subgoal):\n 1. Complex_Matrix.positive (density_collapse R P)", "using False"], ["proof (prove)\nusing this:\n  Complex_Matrix.positive\n   (1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m (P * R * P))\n  Complex_Matrix.trace (R * P) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Complex_Matrix.positive (density_collapse R P)", "unfolding density_collapse_def"], ["proof (prove)\nusing this:\n  Complex_Matrix.positive\n   (1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m (P * R * P))\n  Complex_Matrix.trace (R * P) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Complex_Matrix.positive\n     (if Complex_Matrix.trace (R * P) = 0 then max_mix_density (dim_row R)\n      else complex_of_real 1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m\n           (P * R * P))", "by simp"], ["proof (state)\nthis:\n  Complex_Matrix.positive (density_collapse R P)\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (density_collapse R P) = 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (density_collapse R P) = 1", "have \"Complex_Matrix.trace (density_collapse R P) = \n      Complex_Matrix.trace ((1/ (Complex_Matrix.trace (R * P))) \\<cdot>\\<^sub>m (P * R * P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (density_collapse R P) =\n    Complex_Matrix.trace\n     (1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m (P * R * P))", "using False"], ["proof (prove)\nusing this:\n  Complex_Matrix.trace (R * P) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (density_collapse R P) =\n    Complex_Matrix.trace\n     (1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m (P * R * P))", "unfolding density_collapse_def"], ["proof (prove)\nusing this:\n  Complex_Matrix.trace (R * P) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace\n     (if Complex_Matrix.trace (R * P) = 0 then max_mix_density (dim_row R)\n      else complex_of_real 1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m\n           (P * R * P)) =\n    Complex_Matrix.trace\n     (1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m (P * R * P))", "by simp"], ["proof (state)\nthis:\n  Complex_Matrix.trace (density_collapse R P) =\n  Complex_Matrix.trace\n   (1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m (P * R * P))\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (density_collapse R P) = 1", "also"], ["proof (state)\nthis:\n  Complex_Matrix.trace (density_collapse R P) =\n  Complex_Matrix.trace\n   (1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m (P * R * P))\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (density_collapse R P) = 1", "have \"... = 1/ (Complex_Matrix.trace (R * P)) * Complex_Matrix.trace (P * R * P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.trace\n     (1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m (P * R * P)) =\n    1 / Complex_Matrix.trace (R * P) * Complex_Matrix.trace (P * R * P)", "using trace_smult[of \"P * R * P\" n] assms"], ["proof (prove)\nusing this:\n  P * R * P \\<in> carrier_mat n n \\<Longrightarrow>\n  Complex_Matrix.trace (?c \\<cdot>\\<^sub>m (P * R * P)) =\n  ?c * Complex_Matrix.trace (P * R * P)\n  projector P\n  density_operator R\n  0 < dim_row R\n  P \\<in> carrier_mat n n\n  R \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace\n     (1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m (P * R * P)) =\n    1 / Complex_Matrix.trace (R * P) * Complex_Matrix.trace (P * R * P)", "by simp"], ["proof (state)\nthis:\n  Complex_Matrix.trace\n   (1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m (P * R * P)) =\n  1 / Complex_Matrix.trace (R * P) * Complex_Matrix.trace (P * R * P)\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (density_collapse R P) = 1", "also"], ["proof (state)\nthis:\n  Complex_Matrix.trace\n   (1 / Complex_Matrix.trace (R * P) \\<cdot>\\<^sub>m (P * R * P)) =\n  1 / Complex_Matrix.trace (R * P) * Complex_Matrix.trace (P * R * P)\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (density_collapse R P) = 1", "have \"... = 1/ (Complex_Matrix.trace (R * P)) * Complex_Matrix.trace (R * P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / Complex_Matrix.trace (R * P) * Complex_Matrix.trace (P * R * P) =\n    1 / Complex_Matrix.trace (R * P) * Complex_Matrix.trace (R * P)", "using projector_collapse_trace assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>projector ?P; ?P \\<in> carrier_mat ?n ?n;\n   ?R \\<in> carrier_mat ?n ?n\\<rbrakk>\n  \\<Longrightarrow> Complex_Matrix.trace (?P * ?R * ?P) =\n                    Complex_Matrix.trace (?R * ?P)\n  projector P\n  density_operator R\n  0 < dim_row R\n  P \\<in> carrier_mat n n\n  R \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. 1 / Complex_Matrix.trace (R * P) * Complex_Matrix.trace (P * R * P) =\n    1 / Complex_Matrix.trace (R * P) * Complex_Matrix.trace (R * P)", "by simp"], ["proof (state)\nthis:\n  1 / Complex_Matrix.trace (R * P) * Complex_Matrix.trace (P * R * P) =\n  1 / Complex_Matrix.trace (R * P) * Complex_Matrix.trace (R * P)\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (density_collapse R P) = 1", "also"], ["proof (state)\nthis:\n  1 / Complex_Matrix.trace (R * P) * Complex_Matrix.trace (P * R * P) =\n  1 / Complex_Matrix.trace (R * P) * Complex_Matrix.trace (R * P)\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (density_collapse R P) = 1", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / Complex_Matrix.trace (R * P) * Complex_Matrix.trace (R * P) = 1", "using False"], ["proof (prove)\nusing this:\n  Complex_Matrix.trace (R * P) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 / Complex_Matrix.trace (R * P) * Complex_Matrix.trace (R * P) = 1", "by simp"], ["proof (state)\nthis:\n  1 / Complex_Matrix.trace (R * P) * Complex_Matrix.trace (R * P) = 1\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (density_collapse R P) = 1", "finally"], ["proof (chain)\npicking this:\n  Complex_Matrix.trace (density_collapse R P) = 1", "show \"Complex_Matrix.trace (density_collapse R P) = 1\""], ["proof (prove)\nusing this:\n  Complex_Matrix.trace (density_collapse R P) = 1\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (density_collapse R P) = 1", "."], ["proof (state)\nthis:\n  Complex_Matrix.trace (density_collapse R P) = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  density_operator (density_collapse R P)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Measurements with observables\\<close>"], ["", "text \\<open>It is standard in quantum mechanics to represent projective measurements with so-called \n\\emph{observables}. These are Hermitian matrices which encode projective measurements as follows: \nthe eigenvalues of an observable represent the possible projective measurement outcomes, and the \nassociated projectors are the projectors onto the corresponding eigenspaces. The results in this \npart are based on the spectral theorem, which states that any Hermitian matrix admits an \northonormal basis consisting of eigenvectors of the matrix.\\<close>"], ["", "subsubsection \\<open>On the diagonal elements of a matrix\\<close>"], ["", "text \\<open>We begin by introducing definitions that will be used on the diagonalized version of a \nHermitian matrix.\\<close>"], ["", "definition diag_elems where\n\"diag_elems B = {B$$(i,i) |i. i < dim_row B}\""], ["", "text \\<open>Relationship between \\verb+diag_elems+ and the list \\verb+diag_mat+\\<close>"], ["", "lemma diag_elems_set_diag_mat:\n  shows \"diag_elems B = set (diag_mat B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diag_elems B = set (diag_mat B)", "unfolding diag_mat_def diag_elems_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {B $$ (i, i) |i. i < dim_row B} =\n    set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {B $$ (i, i) |i. i < dim_row B}\n    \\<subseteq> set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])\n 2. set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])\n    \\<subseteq> {B $$ (i, i) |i. i < dim_row B}", "show \"{B $$ (i, i) |i. i < dim_row B} \\<subseteq> set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {B $$ (i, i) |i. i < dim_row B}\n    \\<subseteq> set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {B $$ (i, i) |i. i < dim_row B} \\<Longrightarrow>\n       x \\<in> set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {B $$ (i, i) |i. i < dim_row B} \\<Longrightarrow>\n       x \\<in> set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])", "assume \"x \\<in> {B $$ (i, i) |i. i < dim_row B}\""], ["proof (state)\nthis:\n  x \\<in> {B $$ (i, i) |i. i < dim_row B}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {B $$ (i, i) |i. i < dim_row B} \\<Longrightarrow>\n       x \\<in> set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])", "hence \"\\<exists>i < dim_row B. x = B $$(i,i)\""], ["proof (prove)\nusing this:\n  x \\<in> {B $$ (i, i) |i. i < dim_row B}\n\ngoal (1 subgoal):\n 1. \\<exists>i<dim_row B. x = B $$ (i, i)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i<dim_row B. x = B $$ (i, i)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {B $$ (i, i) |i. i < dim_row B} \\<Longrightarrow>\n       x \\<in> set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])", "from this"], ["proof (chain)\npicking this:\n  \\<exists>i<dim_row B. x = B $$ (i, i)", "obtain i where \"i < dim_row B\" and \"x = B $$(i,i)\""], ["proof (prove)\nusing this:\n  \\<exists>i<dim_row B. x = B $$ (i, i)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < dim_row B; x = B $$ (i, i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i < dim_row B\n  x = B $$ (i, i)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {B $$ (i, i) |i. i < dim_row B} \\<Longrightarrow>\n       x \\<in> set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])", "thus \"x \\<in> set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])\""], ["proof (prove)\nusing this:\n  i < dim_row B\n  x = B $$ (i, i)\n\ngoal (1 subgoal):\n 1. x \\<in> set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])", "by auto"], ["proof (state)\nthis:\n  x \\<in> set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {B $$ (i, i) |i. i < dim_row B}\n  \\<subseteq> set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])\n\ngoal (1 subgoal):\n 1. set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])\n    \\<subseteq> {B $$ (i, i) |i. i < dim_row B}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])\n    \\<subseteq> {B $$ (i, i) |i. i < dim_row B}", "show \"set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B]) \\<subseteq> {B $$ (i, i) |i. i < dim_row B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])\n    \\<subseteq> {B $$ (i, i) |i. i < dim_row B}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (map (\\<lambda>i. B $$ (i, i))\n                     [0..<dim_row B]) \\<Longrightarrow>\n       x \\<in> {B $$ (i, i) |i. i < dim_row B}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (map (\\<lambda>i. B $$ (i, i))\n                     [0..<dim_row B]) \\<Longrightarrow>\n       x \\<in> {B $$ (i, i) |i. i < dim_row B}", "assume \"x \\<in> set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])\""], ["proof (state)\nthis:\n  x \\<in> set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (map (\\<lambda>i. B $$ (i, i))\n                     [0..<dim_row B]) \\<Longrightarrow>\n       x \\<in> {B $$ (i, i) |i. i < dim_row B}", "thus \"x \\<in> {B $$ (i, i) |i. i < dim_row B}\""], ["proof (prove)\nusing this:\n  x \\<in> set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])\n\ngoal (1 subgoal):\n 1. x \\<in> {B $$ (i, i) |i. i < dim_row B}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {B $$ (i, i) |i. i < dim_row B}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])\n  \\<subseteq> {B $$ (i, i) |i. i < dim_row B}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diag_elems_finite[simp]:\n  shows \"finite (diag_elems B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (diag_elems B)", "unfolding diag_elems_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {B $$ (i, i) |i. i < dim_row B}", "by simp"], ["", "lemma diag_elems_mem[simp]:\n  assumes \"i < dim_row B\"\n  shows \"B $$(i,i) \\<in> diag_elems B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B $$ (i, i) \\<in> diag_elems B", "using assms"], ["proof (prove)\nusing this:\n  i < dim_row B\n\ngoal (1 subgoal):\n 1. B $$ (i, i) \\<in> diag_elems B", "unfolding diag_elems_def"], ["proof (prove)\nusing this:\n  i < dim_row B\n\ngoal (1 subgoal):\n 1. B $$ (i, i) \\<in> {B $$ (i, i) |i. i < dim_row B}", "by auto"], ["", "text \\<open>When $x$ is a diagonal element of $B$,  \\verb+diag_elem_indices+ returns the set of diagonal\nindices of $B$ with value $x$.\\<close>"], ["", "definition diag_elem_indices where\n\"diag_elem_indices x B = {i|i. i < dim_row B \\<and> B $$ (i,i) = x}\""], ["", "lemma diag_elem_indices_elem:\n  assumes \"a \\<in> diag_elem_indices x B\"\n  shows \"a < dim_row B \\<and> B$$(a,a) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < dim_row B \\<and> B $$ (a, a) = x", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> diag_elem_indices x B\n\ngoal (1 subgoal):\n 1. a < dim_row B \\<and> B $$ (a, a) = x", "unfolding diag_elem_indices_def"], ["proof (prove)\nusing this:\n  a \\<in> {i |i. i < dim_row B \\<and> B $$ (i, i) = x}\n\ngoal (1 subgoal):\n 1. a < dim_row B \\<and> B $$ (a, a) = x", "by simp"], ["", "lemma diag_elem_indices_itself:\n  assumes \"i < dim_row B\"\n  shows \"i \\<in> diag_elem_indices (B $$(i,i)) B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> diag_elem_indices (B $$ (i, i)) B", "using assms"], ["proof (prove)\nusing this:\n  i < dim_row B\n\ngoal (1 subgoal):\n 1. i \\<in> diag_elem_indices (B $$ (i, i)) B", "unfolding diag_elem_indices_def"], ["proof (prove)\nusing this:\n  i < dim_row B\n\ngoal (1 subgoal):\n 1. i \\<in> {ia |ia. ia < dim_row B \\<and> B $$ (ia, ia) = B $$ (i, i)}", "by simp"], ["", "lemma diag_elem_indices_finite:\n  shows \"finite (diag_elem_indices x B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (diag_elem_indices x B)", "unfolding diag_elem_indices_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {i |i. i < dim_row B \\<and> B $$ (i, i) = x}", "by simp"], ["", "text \\<open>We can therefore partition the diagonal indices of a matrix $B$ depending on the value\nof the diagonal elements. If $B$ admits $p$ elements on its diagonal, then we define bijections \nbetween its set of diagonal elements and the initial segment $[0..p-1]$.\\<close>"], ["", "definition dist_el_card where \n\"dist_el_card B = card (diag_elems B)\""], ["", "definition diag_idx_to_el where\n\"diag_idx_to_el B = (SOME h. bij_betw h {..< dist_el_card B} (diag_elems B))\""], ["", "definition diag_el_to_idx where\n\"diag_el_to_idx B = inv_into {..< dist_el_card B} (diag_idx_to_el B)\""], ["", "lemma diag_idx_to_el_bij:\n  shows \"bij_betw (diag_idx_to_el B) {..< dist_el_card B} (diag_elems B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (diag_idx_to_el B) {..<dist_el_card B} (diag_elems B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. bij_betw (diag_idx_to_el B) {..<dist_el_card B} (diag_elems B)", "let ?V = \"SOME h. bij_betw h {..< dist_el_card B} (diag_elems B)\""], ["proof (state)\ngoal (1 subgoal):\n 1. bij_betw (diag_idx_to_el B) {..<dist_el_card B} (diag_elems B)", "have vprop: \"bij_betw ?V {..< dist_el_card B} (diag_elems B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (SOME h. bij_betw h {..<dist_el_card B} (diag_elems B))\n     {..<dist_el_card B} (diag_elems B)", "using \n      someI_ex[of \"\\<lambda>h. bij_betw h {..< dist_el_card B} (diag_elems B)\"]\n     diag_elems_finite"], ["proof (prove)\nusing this:\n  \\<exists>x.\n     bij_betw x {..<dist_el_card B} (diag_elems B) \\<Longrightarrow>\n  bij_betw (SOME x. bij_betw x {..<dist_el_card B} (diag_elems B))\n   {..<dist_el_card B} (diag_elems B)\n  finite (diag_elems ?B)\n\ngoal (1 subgoal):\n 1. bij_betw (SOME h. bij_betw h {..<dist_el_card B} (diag_elems B))\n     {..<dist_el_card B} (diag_elems B)", "unfolding dist_el_card_def"], ["proof (prove)\nusing this:\n  \\<exists>x.\n     bij_betw x {..<card (diag_elems B)} (diag_elems B) \\<Longrightarrow>\n  bij_betw (SOME x. bij_betw x {..<card (diag_elems B)} (diag_elems B))\n   {..<card (diag_elems B)} (diag_elems B)\n  finite (diag_elems ?B)\n\ngoal (1 subgoal):\n 1. bij_betw (SOME h. bij_betw h {..<card (diag_elems B)} (diag_elems B))\n     {..<card (diag_elems B)} (diag_elems B)", "using bij_betw_from_nat_into_finite"], ["proof (prove)\nusing this:\n  \\<exists>x.\n     bij_betw x {..<card (diag_elems B)} (diag_elems B) \\<Longrightarrow>\n  bij_betw (SOME x. bij_betw x {..<card (diag_elems B)} (diag_elems B))\n   {..<card (diag_elems B)} (diag_elems B)\n  finite (diag_elems ?B)\n  finite ?S \\<Longrightarrow> bij_betw (from_nat_into ?S) {..<card ?S} ?S\n\ngoal (1 subgoal):\n 1. bij_betw (SOME h. bij_betw h {..<card (diag_elems B)} (diag_elems B))\n     {..<card (diag_elems B)} (diag_elems B)", "by blast"], ["proof (state)\nthis:\n  bij_betw (SOME h. bij_betw h {..<dist_el_card B} (diag_elems B))\n   {..<dist_el_card B} (diag_elems B)\n\ngoal (1 subgoal):\n 1. bij_betw (diag_idx_to_el B) {..<dist_el_card B} (diag_elems B)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (diag_idx_to_el B) {..<dist_el_card B} (diag_elems B)", "by (simp add:diag_idx_to_el_def vprop)"], ["proof (state)\nthis:\n  bij_betw (diag_idx_to_el B) {..<dist_el_card B} (diag_elems B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diag_el_to_idx_bij:\n  shows \"bij_betw (diag_el_to_idx B) (diag_elems B) {..< dist_el_card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (diag_el_to_idx B) (diag_elems B) {..<dist_el_card B}", "unfolding diag_el_to_idx_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (inv_into {..<dist_el_card B} (diag_idx_to_el B))\n     (diag_elems B) {..<dist_el_card B}", "proof (rule bij_betw_inv_into_subset[of _ _ \"diag_elems B\"], (simp add: diag_idx_to_el_bij)+)"], ["proof (state)\ngoal (1 subgoal):\n 1. diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B", "show \"diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B", "by (simp add: diag_idx_to_el_bij bij_betw_imp_surj_on)"], ["proof (state)\nthis:\n  diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diag_idx_to_el_less_inj:\n  assumes \"i < dist_el_card B\"\nand \"j < dist_el_card B\"\n  and \"diag_idx_to_el B i = diag_idx_to_el B j\"\nshows \"i = j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i = j", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. i = j", "have \"i \\<in> {..< dist_el_card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> {..<dist_el_card B}", "using assms"], ["proof (prove)\nusing this:\n  i < dist_el_card B\n  j < dist_el_card B\n  diag_idx_to_el B i = diag_idx_to_el B j\n\ngoal (1 subgoal):\n 1. i \\<in> {..<dist_el_card B}", "by simp"], ["proof (state)\nthis:\n  i \\<in> {..<dist_el_card B}\n\ngoal (1 subgoal):\n 1. i = j", "moreover"], ["proof (state)\nthis:\n  i \\<in> {..<dist_el_card B}\n\ngoal (1 subgoal):\n 1. i = j", "have \"j\\<in> {..< dist_el_card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<in> {..<dist_el_card B}", "using assms"], ["proof (prove)\nusing this:\n  i < dist_el_card B\n  j < dist_el_card B\n  diag_idx_to_el B i = diag_idx_to_el B j\n\ngoal (1 subgoal):\n 1. j \\<in> {..<dist_el_card B}", "by simp"], ["proof (state)\nthis:\n  j \\<in> {..<dist_el_card B}\n\ngoal (1 subgoal):\n 1. i = j", "moreover"], ["proof (state)\nthis:\n  j \\<in> {..<dist_el_card B}\n\ngoal (1 subgoal):\n 1. i = j", "have \"inj_on (diag_idx_to_el B) {..<dist_el_card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (diag_idx_to_el B) {..<dist_el_card B}", "using diag_idx_to_el_bij[of B]"], ["proof (prove)\nusing this:\n  bij_betw (diag_idx_to_el B) {..<dist_el_card B} (diag_elems B)\n\ngoal (1 subgoal):\n 1. inj_on (diag_idx_to_el B) {..<dist_el_card B}", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  inj_on (diag_idx_to_el B) {..<dist_el_card B} \\<and>\n  diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B\n\ngoal (1 subgoal):\n 1. inj_on (diag_idx_to_el B) {..<dist_el_card B}", "by simp"], ["proof (state)\nthis:\n  inj_on (diag_idx_to_el B) {..<dist_el_card B}\n\ngoal (1 subgoal):\n 1. i = j", "ultimately"], ["proof (chain)\npicking this:\n  i \\<in> {..<dist_el_card B}\n  j \\<in> {..<dist_el_card B}\n  inj_on (diag_idx_to_el B) {..<dist_el_card B}", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<in> {..<dist_el_card B}\n  j \\<in> {..<dist_el_card B}\n  inj_on (diag_idx_to_el B) {..<dist_el_card B}\n\ngoal (1 subgoal):\n 1. i = j", "by (meson assms(3) inj_on_contraD)"], ["proof (state)\nthis:\n  i = j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diag_idx_to_el_less_surj:\n  assumes \"x\\<in> diag_elems B\"\nshows \"\\<exists>k \\<in> {..< dist_el_card B}. x = diag_idx_to_el B k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k\\<in>{..<dist_el_card B}. x = diag_idx_to_el B k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k\\<in>{..<dist_el_card B}. x = diag_idx_to_el B k", "have \"diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B", "using diag_idx_to_el_bij[of B]"], ["proof (prove)\nusing this:\n  bij_betw (diag_idx_to_el B) {..<dist_el_card B} (diag_elems B)\n\ngoal (1 subgoal):\n 1. diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  inj_on (diag_idx_to_el B) {..<dist_el_card B} \\<and>\n  diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B\n\ngoal (1 subgoal):\n 1. diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B", "by simp"], ["proof (state)\nthis:\n  diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<in>{..<dist_el_card B}. x = diag_idx_to_el B k", "thus ?thesis"], ["proof (prove)\nusing this:\n  diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<in>{..<dist_el_card B}. x = diag_idx_to_el B k", "using assms"], ["proof (prove)\nusing this:\n  diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B\n  x \\<in> diag_elems B\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<in>{..<dist_el_card B}. x = diag_idx_to_el B k", "by auto"], ["proof (state)\nthis:\n  \\<exists>k\\<in>{..<dist_el_card B}. x = diag_idx_to_el B k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diag_idx_to_el_img:\n  assumes \"k < dist_el_card B\"\nshows \"diag_idx_to_el B k \\<in> diag_elems B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diag_idx_to_el B k \\<in> diag_elems B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. diag_idx_to_el B k \\<in> diag_elems B", "have \"diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B", "using diag_idx_to_el_bij[of B]"], ["proof (prove)\nusing this:\n  bij_betw (diag_idx_to_el B) {..<dist_el_card B} (diag_elems B)\n\ngoal (1 subgoal):\n 1. diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  inj_on (diag_idx_to_el B) {..<dist_el_card B} \\<and>\n  diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B\n\ngoal (1 subgoal):\n 1. diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B", "by simp"], ["proof (state)\nthis:\n  diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B\n\ngoal (1 subgoal):\n 1. diag_idx_to_el B k \\<in> diag_elems B", "thus ?thesis"], ["proof (prove)\nusing this:\n  diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B\n\ngoal (1 subgoal):\n 1. diag_idx_to_el B k \\<in> diag_elems B", "using assms"], ["proof (prove)\nusing this:\n  diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B\n  k < dist_el_card B\n\ngoal (1 subgoal):\n 1. diag_idx_to_el B k \\<in> diag_elems B", "by auto"], ["proof (state)\nthis:\n  diag_idx_to_el B k \\<in> diag_elems B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diag_elems_real:\n  fixes B::\"complex Matrix.mat\"\n  assumes \"\\<forall>i < dim_row B. B$$(i,i) \\<in> Reals\"\n  shows \"diag_elems B \\<subseteq> Reals\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diag_elems B \\<subseteq> \\<real>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> diag_elems B \\<Longrightarrow> x \\<in> \\<real>", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> diag_elems B \\<Longrightarrow> x \\<in> \\<real>", "assume \"x\\<in> diag_elems B\""], ["proof (state)\nthis:\n  x \\<in> diag_elems B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> diag_elems B \\<Longrightarrow> x \\<in> \\<real>", "hence \"\\<exists>i < dim_row B. x = B $$(i,i)\""], ["proof (prove)\nusing this:\n  x \\<in> diag_elems B\n\ngoal (1 subgoal):\n 1. \\<exists>i<dim_row B. x = B $$ (i, i)", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> diag_elems B\n  \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. \\<exists>i<dim_row B. x = B $$ (i, i)", "unfolding diag_elems_def"], ["proof (prove)\nusing this:\n  x \\<in> {B $$ (i, i) |i. i < dim_row B}\n  \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. \\<exists>i<dim_row B. x = B $$ (i, i)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i<dim_row B. x = B $$ (i, i)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> diag_elems B \\<Longrightarrow> x \\<in> \\<real>", "from this"], ["proof (chain)\npicking this:\n  \\<exists>i<dim_row B. x = B $$ (i, i)", "obtain i where \"i < dim_row B\" \"x = B $$ (i,i)\""], ["proof (prove)\nusing this:\n  \\<exists>i<dim_row B. x = B $$ (i, i)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < dim_row B; x = B $$ (i, i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i < dim_row B\n  x = B $$ (i, i)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> diag_elems B \\<Longrightarrow> x \\<in> \\<real>", "thus \"x \\<in> Reals\""], ["proof (prove)\nusing this:\n  i < dim_row B\n  x = B $$ (i, i)\n\ngoal (1 subgoal):\n 1. x \\<in> \\<real>", "using assms"], ["proof (prove)\nusing this:\n  i < dim_row B\n  x = B $$ (i, i)\n  \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. x \\<in> \\<real>", "by simp"], ["proof (state)\nthis:\n  x \\<in> \\<real>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diag_elems_Re:\n  fixes B::\"complex Matrix.mat\"\n  assumes \"\\<forall>i < (dim_row B). B$$(i,i) \\<in> Reals\"\n  shows \"{Re x|x. x\\<in> diag_elems B} = diag_elems B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {complex_of_real (Re x) |x. x \\<in> diag_elems B} = diag_elems B", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {complex_of_real (Re x) |x. x \\<in> diag_elems B}\n    \\<subseteq> diag_elems B\n 2. diag_elems B\n    \\<subseteq> {complex_of_real (Re x) |x. x \\<in> diag_elems B}", "show \"{complex_of_real (Re x) |x. x \\<in> diag_elems B} \\<subseteq> diag_elems B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {complex_of_real (Re x) |x. x \\<in> diag_elems B}\n    \\<subseteq> diag_elems B", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {complex_of_real (Re x) |x.\n                x \\<in> diag_elems B} \\<Longrightarrow>\n       x \\<in> diag_elems B", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {complex_of_real (Re x) |x.\n                x \\<in> diag_elems B} \\<Longrightarrow>\n       x \\<in> diag_elems B", "assume \"x \\<in> {complex_of_real (Re x) |x. x \\<in> diag_elems B}\""], ["proof (state)\nthis:\n  x \\<in> {complex_of_real (Re x) |x. x \\<in> diag_elems B}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {complex_of_real (Re x) |x.\n                x \\<in> diag_elems B} \\<Longrightarrow>\n       x \\<in> diag_elems B", "hence \"\\<exists>y \\<in> diag_elems B. x = Re y\""], ["proof (prove)\nusing this:\n  x \\<in> {complex_of_real (Re x) |x. x \\<in> diag_elems B}\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>diag_elems B. x = complex_of_real (Re y)", "by auto"], ["proof (state)\nthis:\n  \\<exists>y\\<in>diag_elems B. x = complex_of_real (Re y)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {complex_of_real (Re x) |x.\n                x \\<in> diag_elems B} \\<Longrightarrow>\n       x \\<in> diag_elems B", "from this"], ["proof (chain)\npicking this:\n  \\<exists>y\\<in>diag_elems B. x = complex_of_real (Re y)", "obtain y where \"y\\<in> diag_elems B\" and \"x = Re y\""], ["proof (prove)\nusing this:\n  \\<exists>y\\<in>diag_elems B. x = complex_of_real (Re y)\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> diag_elems B; x = complex_of_real (Re y)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> diag_elems B\n  x = complex_of_real (Re y)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {complex_of_real (Re x) |x.\n                x \\<in> diag_elems B} \\<Longrightarrow>\n       x \\<in> diag_elems B", "hence \"y = x\""], ["proof (prove)\nusing this:\n  y \\<in> diag_elems B\n  x = complex_of_real (Re y)\n\ngoal (1 subgoal):\n 1. y = x", "using assms diag_elems_real[of B]"], ["proof (prove)\nusing this:\n  y \\<in> diag_elems B\n  x = complex_of_real (Re y)\n  \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>\n  \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real> \\<Longrightarrow>\n  diag_elems B \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. y = x", "by auto"], ["proof (state)\nthis:\n  y = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {complex_of_real (Re x) |x.\n                x \\<in> diag_elems B} \\<Longrightarrow>\n       x \\<in> diag_elems B", "thus \"x\\<in> diag_elems B\""], ["proof (prove)\nusing this:\n  y = x\n\ngoal (1 subgoal):\n 1. x \\<in> diag_elems B", "using \\<open>y\\<in> diag_elems B\\<close>"], ["proof (prove)\nusing this:\n  y = x\n  y \\<in> diag_elems B\n\ngoal (1 subgoal):\n 1. x \\<in> diag_elems B", "by simp"], ["proof (state)\nthis:\n  x \\<in> diag_elems B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {complex_of_real (Re x) |x. x \\<in> diag_elems B} \\<subseteq> diag_elems B\n\ngoal (1 subgoal):\n 1. diag_elems B\n    \\<subseteq> {complex_of_real (Re x) |x. x \\<in> diag_elems B}", "show \"diag_elems B \\<subseteq> {complex_of_real (Re x) |x. x \\<in> diag_elems B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diag_elems B\n    \\<subseteq> {complex_of_real (Re x) |x. x \\<in> diag_elems B}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> diag_elems B \\<Longrightarrow>\n       x \\<in> {complex_of_real (Re x) |x. x \\<in> diag_elems B}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> diag_elems B \\<Longrightarrow>\n       x \\<in> {complex_of_real (Re x) |x. x \\<in> diag_elems B}", "assume \"x \\<in> diag_elems B\""], ["proof (state)\nthis:\n  x \\<in> diag_elems B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> diag_elems B \\<Longrightarrow>\n       x \\<in> {complex_of_real (Re x) |x. x \\<in> diag_elems B}", "hence \"Re x = x\""], ["proof (prove)\nusing this:\n  x \\<in> diag_elems B\n\ngoal (1 subgoal):\n 1. complex_of_real (Re x) = x", "using assms diag_elems_real[of B]"], ["proof (prove)\nusing this:\n  x \\<in> diag_elems B\n  \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>\n  \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real> \\<Longrightarrow>\n  diag_elems B \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. complex_of_real (Re x) = x", "by auto"], ["proof (state)\nthis:\n  complex_of_real (Re x) = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> diag_elems B \\<Longrightarrow>\n       x \\<in> {complex_of_real (Re x) |x. x \\<in> diag_elems B}", "thus \"x\\<in> {complex_of_real (Re x) |x. x \\<in> diag_elems B}\""], ["proof (prove)\nusing this:\n  complex_of_real (Re x) = x\n\ngoal (1 subgoal):\n 1. x \\<in> {complex_of_real (Re x) |x. x \\<in> diag_elems B}", "using \\<open>x\\<in> diag_elems B\\<close>"], ["proof (prove)\nusing this:\n  complex_of_real (Re x) = x\n  x \\<in> diag_elems B\n\ngoal (1 subgoal):\n 1. x \\<in> {complex_of_real (Re x) |x. x \\<in> diag_elems B}", "by force"], ["proof (state)\nthis:\n  x \\<in> {complex_of_real (Re x) |x. x \\<in> diag_elems B}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  diag_elems B \\<subseteq> {complex_of_real (Re x) |x. x \\<in> diag_elems B}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  diag_idx_to_el_real:\n  fixes B::\"complex Matrix.mat\"\n  assumes \"\\<forall>i < dim_row B. B$$(i,i) \\<in> Reals\"\nand \"i < dist_el_card B\"\nshows \"Re (diag_idx_to_el B i) = diag_idx_to_el B i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (Re (diag_idx_to_el B i)) = diag_idx_to_el B i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. complex_of_real (Re (diag_idx_to_el B i)) = diag_idx_to_el B i", "have \"diag_idx_to_el B i \\<in> diag_elems B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diag_idx_to_el B i \\<in> diag_elems B", "using diag_idx_to_el_img[of i B] assms"], ["proof (prove)\nusing this:\n  i < dist_el_card B \\<Longrightarrow> diag_idx_to_el B i \\<in> diag_elems B\n  \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>\n  i < dist_el_card B\n\ngoal (1 subgoal):\n 1. diag_idx_to_el B i \\<in> diag_elems B", "by simp"], ["proof (state)\nthis:\n  diag_idx_to_el B i \\<in> diag_elems B\n\ngoal (1 subgoal):\n 1. complex_of_real (Re (diag_idx_to_el B i)) = diag_idx_to_el B i", "hence \"diag_idx_to_el B i \\<in> Reals\""], ["proof (prove)\nusing this:\n  diag_idx_to_el B i \\<in> diag_elems B\n\ngoal (1 subgoal):\n 1. diag_idx_to_el B i \\<in> \\<real>", "using diag_elems_real[of B] assms"], ["proof (prove)\nusing this:\n  diag_idx_to_el B i \\<in> diag_elems B\n  \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real> \\<Longrightarrow>\n  diag_elems B \\<subseteq> \\<real>\n  \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>\n  i < dist_el_card B\n\ngoal (1 subgoal):\n 1. diag_idx_to_el B i \\<in> \\<real>", "by auto"], ["proof (state)\nthis:\n  diag_idx_to_el B i \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. complex_of_real (Re (diag_idx_to_el B i)) = diag_idx_to_el B i", "thus ?thesis"], ["proof (prove)\nusing this:\n  diag_idx_to_el B i \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. complex_of_real (Re (diag_idx_to_el B i)) = diag_idx_to_el B i", "by simp"], ["proof (state)\nthis:\n  complex_of_real (Re (diag_idx_to_el B i)) = diag_idx_to_el B i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diag_elem_indices_empty:\n  assumes \"B \\<in> carrier_mat dimR dimC\"\n  and \"i < (dist_el_card B)\"\nand \"j < (dist_el_card B)\"\nand \"i\\<noteq> j\"\nshows \"diag_elem_indices (diag_idx_to_el B i) B \\<inter> \n  (diag_elem_indices (diag_idx_to_el B j) B) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n    diag_elem_indices (diag_idx_to_el B j) B =\n    {}", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n    diag_elem_indices (diag_idx_to_el B j) B \\<noteq>\n    {} \\<Longrightarrow>\n    False", "assume \"diag_elem_indices (diag_idx_to_el B i) B \\<inter> \n    diag_elem_indices (diag_idx_to_el B j) B \\<noteq> {}\""], ["proof (state)\nthis:\n  diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n  diag_elem_indices (diag_idx_to_el B j) B \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n    diag_elem_indices (diag_idx_to_el B j) B \\<noteq>\n    {} \\<Longrightarrow>\n    False", "hence \"\\<exists>x. x\\<in> diag_elem_indices (diag_idx_to_el B i) B \\<inter> \n    diag_elem_indices (diag_idx_to_el B j) B\""], ["proof (prove)\nusing this:\n  diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n  diag_elem_indices (diag_idx_to_el B j) B \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       x \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n               diag_elem_indices (diag_idx_to_el B j) B", "by auto"], ["proof (state)\nthis:\n  \\<exists>x.\n     x \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n             diag_elem_indices (diag_idx_to_el B j) B\n\ngoal (1 subgoal):\n 1. diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n    diag_elem_indices (diag_idx_to_el B j) B \\<noteq>\n    {} \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  \\<exists>x.\n     x \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n             diag_elem_indices (diag_idx_to_el B j) B", "obtain x where \n    xprop: \"x\\<in> diag_elem_indices (diag_idx_to_el B i) B \\<inter> \n    diag_elem_indices (diag_idx_to_el B j) B\""], ["proof (prove)\nusing this:\n  \\<exists>x.\n     x \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n             diag_elem_indices (diag_idx_to_el B j) B\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n                diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n          diag_elem_indices (diag_idx_to_el B j) B\n\ngoal (1 subgoal):\n 1. diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n    diag_elem_indices (diag_idx_to_el B j) B \\<noteq>\n    {} \\<Longrightarrow>\n    False", "hence \"B $$ (x,x) = (diag_idx_to_el B i)\""], ["proof (prove)\nusing this:\n  x \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n          diag_elem_indices (diag_idx_to_el B j) B\n\ngoal (1 subgoal):\n 1. B $$ (x, x) = diag_idx_to_el B i", "using diag_elem_indices_elem[of x \"diag_idx_to_el B i\"]"], ["proof (prove)\nusing this:\n  x \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n          diag_elem_indices (diag_idx_to_el B j) B\n  x \\<in> diag_elem_indices (diag_idx_to_el B i) ?B \\<Longrightarrow>\n  x < dim_row ?B \\<and> ?B $$ (x, x) = diag_idx_to_el B i\n\ngoal (1 subgoal):\n 1. B $$ (x, x) = diag_idx_to_el B i", "by simp"], ["proof (state)\nthis:\n  B $$ (x, x) = diag_idx_to_el B i\n\ngoal (1 subgoal):\n 1. diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n    diag_elem_indices (diag_idx_to_el B j) B \\<noteq>\n    {} \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  B $$ (x, x) = diag_idx_to_el B i\n\ngoal (1 subgoal):\n 1. diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n    diag_elem_indices (diag_idx_to_el B j) B \\<noteq>\n    {} \\<Longrightarrow>\n    False", "have \"B $$ (x,x) = (diag_idx_to_el B j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B $$ (x, x) = diag_idx_to_el B j", "using diag_elem_indices_elem[of x \"diag_idx_to_el B j\"] xprop"], ["proof (prove)\nusing this:\n  x \\<in> diag_elem_indices (diag_idx_to_el B j) ?B \\<Longrightarrow>\n  x < dim_row ?B \\<and> ?B $$ (x, x) = diag_idx_to_el B j\n  x \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n          diag_elem_indices (diag_idx_to_el B j) B\n\ngoal (1 subgoal):\n 1. B $$ (x, x) = diag_idx_to_el B j", "by simp"], ["proof (state)\nthis:\n  B $$ (x, x) = diag_idx_to_el B j\n\ngoal (1 subgoal):\n 1. diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n    diag_elem_indices (diag_idx_to_el B j) B \\<noteq>\n    {} \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  B $$ (x, x) = diag_idx_to_el B i\n  B $$ (x, x) = diag_idx_to_el B j", "have \"diag_idx_to_el B i = diag_idx_to_el B j\""], ["proof (prove)\nusing this:\n  B $$ (x, x) = diag_idx_to_el B i\n  B $$ (x, x) = diag_idx_to_el B j\n\ngoal (1 subgoal):\n 1. diag_idx_to_el B i = diag_idx_to_el B j", "by simp"], ["proof (state)\nthis:\n  diag_idx_to_el B i = diag_idx_to_el B j\n\ngoal (1 subgoal):\n 1. diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n    diag_elem_indices (diag_idx_to_el B j) B \\<noteq>\n    {} \\<Longrightarrow>\n    False", "hence \"i = j\""], ["proof (prove)\nusing this:\n  diag_idx_to_el B i = diag_idx_to_el B j\n\ngoal (1 subgoal):\n 1. i = j", "using diag_idx_to_el_less_inj assms"], ["proof (prove)\nusing this:\n  diag_idx_to_el B i = diag_idx_to_el B j\n  \\<lbrakk>?i < dist_el_card ?B; ?j < dist_el_card ?B;\n   diag_idx_to_el ?B ?i = diag_idx_to_el ?B ?j\\<rbrakk>\n  \\<Longrightarrow> ?i = ?j\n  B \\<in> carrier_mat dimR dimC\n  i < dist_el_card B\n  j < dist_el_card B\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. i = j", "by auto"], ["proof (state)\nthis:\n  i = j\n\ngoal (1 subgoal):\n 1. diag_elem_indices (diag_idx_to_el B i) B \\<inter>\n    diag_elem_indices (diag_idx_to_el B j) B \\<noteq>\n    {} \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  i = j\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  i = j\n  B \\<in> carrier_mat dimR dimC\n  i < dist_el_card B\n  j < dist_el_card B\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) diag_elem_indices_disjoint:\n  assumes \"B\\<in> carrier_mat dimR dimC\"\n  shows \"disjoint_family_on (\\<lambda>n. diag_elem_indices (diag_idx_to_el B n) B) \n    {..<dist_el_card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disjoint_family_on\n     (\\<lambda>n. diag_elem_indices (diag_idx_to_el B n) B)\n     {..<dist_el_card B}", "unfolding disjoint_family_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m\\<in>{..<dist_el_card B}.\n       \\<forall>n\\<in>{..<dist_el_card B}.\n          m \\<noteq> n \\<longrightarrow>\n          diag_elem_indices (diag_idx_to_el B m) B \\<inter>\n          diag_elem_indices (diag_idx_to_el B n) B =\n          {}", "proof (intro ballI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m n.\n       \\<lbrakk>m \\<in> {..<dist_el_card B}; n \\<in> {..<dist_el_card B};\n        m \\<noteq> n\\<rbrakk>\n       \\<Longrightarrow> diag_elem_indices (diag_idx_to_el B m) B \\<inter>\n                         diag_elem_indices (diag_idx_to_el B n) B =\n                         {}", "fix p m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m n.\n       \\<lbrakk>m \\<in> {..<dist_el_card B}; n \\<in> {..<dist_el_card B};\n        m \\<noteq> n\\<rbrakk>\n       \\<Longrightarrow> diag_elem_indices (diag_idx_to_el B m) B \\<inter>\n                         diag_elem_indices (diag_idx_to_el B n) B =\n                         {}", "assume \"m\\<in> {..< dist_el_card B}\" and \"p\\<in> {..< dist_el_card B}\" and \"m\\<noteq> p\""], ["proof (state)\nthis:\n  m \\<in> {..<dist_el_card B}\n  p \\<in> {..<dist_el_card B}\n  m \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       \\<lbrakk>m \\<in> {..<dist_el_card B}; n \\<in> {..<dist_el_card B};\n        m \\<noteq> n\\<rbrakk>\n       \\<Longrightarrow> diag_elem_indices (diag_idx_to_el B m) B \\<inter>\n                         diag_elem_indices (diag_idx_to_el B n) B =\n                         {}", "thus \"diag_elem_indices (diag_idx_to_el B m) B \\<inter> \n    diag_elem_indices (diag_idx_to_el B p) B = {}\""], ["proof (prove)\nusing this:\n  m \\<in> {..<dist_el_card B}\n  p \\<in> {..<dist_el_card B}\n  m \\<noteq> p\n\ngoal (1 subgoal):\n 1. diag_elem_indices (diag_idx_to_el B m) B \\<inter>\n    diag_elem_indices (diag_idx_to_el B p) B =\n    {}", "using diag_elem_indices_empty  assms fc_mats_carrier"], ["proof (prove)\nusing this:\n  m \\<in> {..<dist_el_card B}\n  p \\<in> {..<dist_el_card B}\n  m \\<noteq> p\n  \\<lbrakk>?B \\<in> carrier_mat ?dimR ?dimC; ?i < dist_el_card ?B;\n   ?j < dist_el_card ?B; ?i \\<noteq> ?j\\<rbrakk>\n  \\<Longrightarrow> diag_elem_indices (diag_idx_to_el ?B ?i) ?B \\<inter>\n                    diag_elem_indices (diag_idx_to_el ?B ?j) ?B =\n                    {}\n  B \\<in> carrier_mat dimR dimC\n  fc_mats = carrier_mat dimR dimC\n\ngoal (1 subgoal):\n 1. diag_elem_indices (diag_idx_to_el B m) B \\<inter>\n    diag_elem_indices (diag_idx_to_el B p) B =\n    {}", "by simp"], ["proof (state)\nthis:\n  diag_elem_indices (diag_idx_to_el B m) B \\<inter>\n  diag_elem_indices (diag_idx_to_el B p) B =\n  {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diag_elem_indices_union:\n  assumes \"B\\<in> carrier_mat dimR dimC\"\n  shows \"(\\<Union> i \\<in> {..< dist_el_card B}. diag_elem_indices (diag_idx_to_el B i) B) = \n    {..< dimR}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>i<dist_el_card B. diag_elem_indices (diag_idx_to_el B i) B) =\n    {..<dimR}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<Union>i<dist_el_card B. diag_elem_indices (diag_idx_to_el B i) B)\n    \\<subseteq> {..<dimR}\n 2. {..<dimR}\n    \\<subseteq> (\\<Union>i<dist_el_card B.\n                    diag_elem_indices (diag_idx_to_el B i) B)", "show \"(\\<Union>i<dist_el_card B. diag_elem_indices (diag_idx_to_el B i) B) \\<subseteq> {..<dimR}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>i<dist_el_card B. diag_elem_indices (diag_idx_to_el B i) B)\n    \\<subseteq> {..<dimR}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>i<dist_el_card B.\n                   diag_elem_indices (diag_idx_to_el B i)\n                    B) \\<Longrightarrow>\n       x \\<in> {..<dimR}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>i<dist_el_card B.\n                   diag_elem_indices (diag_idx_to_el B i)\n                    B) \\<Longrightarrow>\n       x \\<in> {..<dimR}", "assume \"x \\<in> (\\<Union>i<dist_el_card B. diag_elem_indices (diag_idx_to_el B i) B)\""], ["proof (state)\nthis:\n  x \\<in> (\\<Union>i<dist_el_card B.\n              diag_elem_indices (diag_idx_to_el B i) B)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>i<dist_el_card B.\n                   diag_elem_indices (diag_idx_to_el B i)\n                    B) \\<Longrightarrow>\n       x \\<in> {..<dimR}", "hence \"\\<exists>i < dist_el_card B. x\\<in> diag_elem_indices (diag_idx_to_el B i) B\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<Union>i<dist_el_card B.\n              diag_elem_indices (diag_idx_to_el B i) B)\n\ngoal (1 subgoal):\n 1. \\<exists>i<dist_el_card B.\n       x \\<in> diag_elem_indices (diag_idx_to_el B i) B", "by auto"], ["proof (state)\nthis:\n  \\<exists>i<dist_el_card B.\n     x \\<in> diag_elem_indices (diag_idx_to_el B i) B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>i<dist_el_card B.\n                   diag_elem_indices (diag_idx_to_el B i)\n                    B) \\<Longrightarrow>\n       x \\<in> {..<dimR}", "from this"], ["proof (chain)\npicking this:\n  \\<exists>i<dist_el_card B.\n     x \\<in> diag_elem_indices (diag_idx_to_el B i) B", "obtain i where \"i < dist_el_card B\" \n      \"x\\<in> diag_elem_indices (diag_idx_to_el B i) B\""], ["proof (prove)\nusing this:\n  \\<exists>i<dist_el_card B.\n     x \\<in> diag_elem_indices (diag_idx_to_el B i) B\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < dist_el_card B;\n         x \\<in> diag_elem_indices (diag_idx_to_el B i) B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i < dist_el_card B\n  x \\<in> diag_elem_indices (diag_idx_to_el B i) B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>i<dist_el_card B.\n                   diag_elem_indices (diag_idx_to_el B i)\n                    B) \\<Longrightarrow>\n       x \\<in> {..<dimR}", "hence \"x < dimR\""], ["proof (prove)\nusing this:\n  i < dist_el_card B\n  x \\<in> diag_elem_indices (diag_idx_to_el B i) B\n\ngoal (1 subgoal):\n 1. x < dimR", "using diag_elem_indices_elem[of x _ B] assms"], ["proof (prove)\nusing this:\n  i < dist_el_card B\n  x \\<in> diag_elem_indices (diag_idx_to_el B i) B\n  x \\<in> diag_elem_indices ?x B \\<Longrightarrow>\n  x < dim_row B \\<and> B $$ (x, x) = ?x\n  B \\<in> carrier_mat dimR dimC\n\ngoal (1 subgoal):\n 1. x < dimR", "by simp"], ["proof (state)\nthis:\n  x < dimR\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>i<dist_el_card B.\n                   diag_elem_indices (diag_idx_to_el B i)\n                    B) \\<Longrightarrow>\n       x \\<in> {..<dimR}", "thus \"x \\<in> {..< dimR}\""], ["proof (prove)\nusing this:\n  x < dimR\n\ngoal (1 subgoal):\n 1. x \\<in> {..<dimR}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {..<dimR}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Union>i<dist_el_card B. diag_elem_indices (diag_idx_to_el B i) B)\n  \\<subseteq> {..<dimR}\n\ngoal (1 subgoal):\n 1. {..<dimR}\n    \\<subseteq> (\\<Union>i<dist_el_card B.\n                    diag_elem_indices (diag_idx_to_el B i) B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {..<dimR}\n    \\<subseteq> (\\<Union>i<dist_el_card B.\n                    diag_elem_indices (diag_idx_to_el B i) B)", "show \"{..<dimR} \\<subseteq> (\\<Union>i<dist_el_card B. diag_elem_indices (diag_idx_to_el B i) B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..<dimR}\n    \\<subseteq> (\\<Union>i<dist_el_card B.\n                    diag_elem_indices (diag_idx_to_el B i) B)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {..<dimR} \\<Longrightarrow>\n       x \\<in> (\\<Union>i<dist_el_card B.\n                   diag_elem_indices (diag_idx_to_el B i) B)", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {..<dimR} \\<Longrightarrow>\n       x \\<in> (\\<Union>i<dist_el_card B.\n                   diag_elem_indices (diag_idx_to_el B i) B)", "assume \"j\\<in> {..< dimR}\""], ["proof (state)\nthis:\n  j \\<in> {..<dimR}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {..<dimR} \\<Longrightarrow>\n       x \\<in> (\\<Union>i<dist_el_card B.\n                   diag_elem_indices (diag_idx_to_el B i) B)", "hence \"j < dim_row B\""], ["proof (prove)\nusing this:\n  j \\<in> {..<dimR}\n\ngoal (1 subgoal):\n 1. j < dim_row B", "using assms"], ["proof (prove)\nusing this:\n  j \\<in> {..<dimR}\n  B \\<in> carrier_mat dimR dimC\n\ngoal (1 subgoal):\n 1. j < dim_row B", "by simp"], ["proof (state)\nthis:\n  j < dim_row B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {..<dimR} \\<Longrightarrow>\n       x \\<in> (\\<Union>i<dist_el_card B.\n                   diag_elem_indices (diag_idx_to_el B i) B)", "hence \"B$$(j,j) \\<in> diag_elems B\""], ["proof (prove)\nusing this:\n  j < dim_row B\n\ngoal (1 subgoal):\n 1. B $$ (j, j) \\<in> diag_elems B", "by simp"], ["proof (state)\nthis:\n  B $$ (j, j) \\<in> diag_elems B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {..<dimR} \\<Longrightarrow>\n       x \\<in> (\\<Union>i<dist_el_card B.\n                   diag_elem_indices (diag_idx_to_el B i) B)", "hence \"\\<exists>k \\<in> {..< dist_el_card B}. B$$(j,j) = diag_idx_to_el B k\""], ["proof (prove)\nusing this:\n  B $$ (j, j) \\<in> diag_elems B\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<in>{..<dist_el_card B}. B $$ (j, j) = diag_idx_to_el B k", "using diag_idx_to_el_less_surj[of \"B $$(j,j)\"]"], ["proof (prove)\nusing this:\n  B $$ (j, j) \\<in> diag_elems B\n  B $$ (j, j) \\<in> diag_elems ?B \\<Longrightarrow>\n  \\<exists>k\\<in>{..<dist_el_card ?B}. B $$ (j, j) = diag_idx_to_el ?B k\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<in>{..<dist_el_card B}. B $$ (j, j) = diag_idx_to_el B k", "by simp"], ["proof (state)\nthis:\n  \\<exists>k\\<in>{..<dist_el_card B}. B $$ (j, j) = diag_idx_to_el B k\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {..<dimR} \\<Longrightarrow>\n       x \\<in> (\\<Union>i<dist_el_card B.\n                   diag_elem_indices (diag_idx_to_el B i) B)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>k\\<in>{..<dist_el_card B}. B $$ (j, j) = diag_idx_to_el B k", "obtain k where kprop: \"k \\<in> {..< dist_el_card B}\" \n      \"B$$(j,j) = diag_idx_to_el B k\""], ["proof (prove)\nusing this:\n  \\<exists>k\\<in>{..<dist_el_card B}. B $$ (j, j) = diag_idx_to_el B k\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<in> {..<dist_el_card B};\n         B $$ (j, j) = diag_idx_to_el B k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k \\<in> {..<dist_el_card B}\n  B $$ (j, j) = diag_idx_to_el B k\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {..<dimR} \\<Longrightarrow>\n       x \\<in> (\\<Union>i<dist_el_card B.\n                   diag_elem_indices (diag_idx_to_el B i) B)", "hence \"j \\<in> diag_elem_indices (diag_idx_to_el B k) B\""], ["proof (prove)\nusing this:\n  k \\<in> {..<dist_el_card B}\n  B $$ (j, j) = diag_idx_to_el B k\n\ngoal (1 subgoal):\n 1. j \\<in> diag_elem_indices (diag_idx_to_el B k) B", "using \\<open>j < dim_row B\\<close> \n        diag_elem_indices_itself"], ["proof (prove)\nusing this:\n  k \\<in> {..<dist_el_card B}\n  B $$ (j, j) = diag_idx_to_el B k\n  j < dim_row B\n  ?i < dim_row ?B \\<Longrightarrow>\n  ?i \\<in> diag_elem_indices (?B $$ (?i, ?i)) ?B\n\ngoal (1 subgoal):\n 1. j \\<in> diag_elem_indices (diag_idx_to_el B k) B", "by fastforce"], ["proof (state)\nthis:\n  j \\<in> diag_elem_indices (diag_idx_to_el B k) B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {..<dimR} \\<Longrightarrow>\n       x \\<in> (\\<Union>i<dist_el_card B.\n                   diag_elem_indices (diag_idx_to_el B i) B)", "thus \"j \\<in> (\\<Union>i<dist_el_card B. diag_elem_indices (diag_idx_to_el B i) B)\""], ["proof (prove)\nusing this:\n  j \\<in> diag_elem_indices (diag_idx_to_el B k) B\n\ngoal (1 subgoal):\n 1. j \\<in> (\\<Union>i<dist_el_card B.\n                diag_elem_indices (diag_idx_to_el B i) B)", "using kprop"], ["proof (prove)\nusing this:\n  j \\<in> diag_elem_indices (diag_idx_to_el B k) B\n  k \\<in> {..<dist_el_card B}\n  B $$ (j, j) = diag_idx_to_el B k\n\ngoal (1 subgoal):\n 1. j \\<in> (\\<Union>i<dist_el_card B.\n                diag_elem_indices (diag_idx_to_el B i) B)", "by auto"], ["proof (state)\nthis:\n  j \\<in> (\\<Union>i<dist_el_card B.\n              diag_elem_indices (diag_idx_to_el B i) B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {..<dimR}\n  \\<subseteq> (\\<Union>i<dist_el_card B.\n                  diag_elem_indices (diag_idx_to_el B i) B)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Construction of measurement outcomes\\<close>"], ["", "text \\<open>The construction of a projective measurement for a hermitian matrix $A$ is based on the Schur\ndecomposition $A = U*B*U^\\dagger$, where $B$ is diagonal and $U$ is unitary. The columns of $U$ are\nnormalized and pairwise orthogonal; they are used to construct the projectors associated with\na measurement value\\<close>"], ["", "definition (in cpx_sq_mat) project_vecs where\n\"project_vecs (f::nat \\<Rightarrow> complex Matrix.vec) N = sum_mat (\\<lambda>i. rank_1_proj (f i)) N\""], ["", "lemma (in cpx_sq_mat) project_vecs_dim:\n  assumes \"\\<forall>i \\<in> N. dim_vec (f i) = dimR\"\n  shows \"project_vecs f N \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. project_vecs f N \\<in> fc_mats", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. project_vecs f N \\<in> fc_mats", "have \"project_vecs f N \\<in> carrier_mat dimR dimC\""], ["proof (prove)\ngoal (1 subgoal):\n 1. project_vecs f N \\<in> carrier_mat dimR dimC", "unfolding project_vecs_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>i. rank_1_proj (f i)) N\n    \\<in> carrier_mat dimR dimC", "proof (rule sum_mat_carrier)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> N \\<Longrightarrow> rank_1_proj (f i) \\<in> fc_mats", "show \"\\<And>i. i \\<in> N \\<Longrightarrow> rank_1_proj (f i) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> N \\<Longrightarrow> rank_1_proj (f i) \\<in> fc_mats", "using assms fc_mats_carrier rank_1_proj_dim\n      dim_eq rank_1_proj_carrier"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>N. dim_vec (f i) = dimR\n  fc_mats = carrier_mat dimR dimC\n  dim_row (rank_1_proj ?v) = dim_vec ?v\n  dimR = dimC\n  rank_1_proj ?v \\<in> carrier_mat (dim_vec ?v) (dim_vec ?v)\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> N \\<Longrightarrow> rank_1_proj (f i) \\<in> fc_mats", "by fastforce"], ["proof (state)\nthis:\n  ?i2 \\<in> N \\<Longrightarrow> rank_1_proj (f ?i2) \\<in> fc_mats\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  project_vecs f N \\<in> carrier_mat dimR dimC\n\ngoal (1 subgoal):\n 1. project_vecs f N \\<in> fc_mats", "thus ?thesis"], ["proof (prove)\nusing this:\n  project_vecs f N \\<in> carrier_mat dimR dimC\n\ngoal (1 subgoal):\n 1. project_vecs f N \\<in> fc_mats", "using fc_mats_carrier"], ["proof (prove)\nusing this:\n  project_vecs f N \\<in> carrier_mat dimR dimC\n  fc_mats = carrier_mat dimR dimC\n\ngoal (1 subgoal):\n 1. project_vecs f N \\<in> fc_mats", "by simp"], ["proof (state)\nthis:\n  project_vecs f N \\<in> fc_mats\n\ngoal:\nNo subgoals!", "qed"], ["", "definition (in cpx_sq_mat) mk_meas_outcome where\n\"mk_meas_outcome B U = (\\<lambda>i. (Re (diag_idx_to_el B i), \n  project_vecs (\\<lambda>i. zero_col U i) (diag_elem_indices (diag_idx_to_el B i) B)))\""], ["", "lemma (in cpx_sq_mat) mk_meas_outcome_carrier:\n  assumes \"Complex_Matrix.unitary U\"\n  and \"U \\<in> fc_mats\"\n  and \"B\\<in> fc_mats\"\nshows \"meas_outcome_prj ((mk_meas_outcome B U) j) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_prj (mk_meas_outcome B U j) \\<in> fc_mats", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. meas_outcome_prj (mk_meas_outcome B U j) \\<in> fc_mats", "have \"project_vecs (\\<lambda>i. zero_col U i) (diag_elem_indices (diag_idx_to_el B j) B) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. project_vecs (zero_col U) (diag_elem_indices (diag_idx_to_el B j) B)\n    \\<in> fc_mats", "using project_vecs_dim"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>?N. dim_vec (?f i) = dimR \\<Longrightarrow>\n  project_vecs ?f ?N \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. project_vecs (zero_col U) (diag_elem_indices (diag_idx_to_el B j) B)\n    \\<in> fc_mats", "by (simp add: assms(2) zero_col_dim)"], ["proof (state)\nthis:\n  project_vecs (zero_col U) (diag_elem_indices (diag_idx_to_el B j) B)\n  \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (mk_meas_outcome B U j) \\<in> fc_mats", "thus ?thesis"], ["proof (prove)\nusing this:\n  project_vecs (zero_col U) (diag_elem_indices (diag_idx_to_el B j) B)\n  \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (mk_meas_outcome B U j) \\<in> fc_mats", "unfolding mk_meas_outcome_def meas_outcome_prj_def"], ["proof (prove)\nusing this:\n  project_vecs (zero_col U) (diag_elem_indices (diag_idx_to_el B j) B)\n  \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. snd (Re (diag_idx_to_el B j),\n         project_vecs (zero_col U)\n          (diag_elem_indices (diag_idx_to_el B j) B))\n    \\<in> fc_mats", "by simp"], ["proof (state)\nthis:\n  meas_outcome_prj (mk_meas_outcome B U j) \\<in> fc_mats\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) mk_meas_outcome_sum_id:\n  assumes \"Complex_Matrix.unitary U\"\n  and \"U \\<in> fc_mats\"\n  and \"B\\<in> fc_mats\"\nshows \"sum_mat (\\<lambda>j. meas_outcome_prj ((mk_meas_outcome B U) j)) \n  {..<(dist_el_card B)} = 1\\<^sub>m dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>j. meas_outcome_prj (mk_meas_outcome B U j))\n     {..<dist_el_card B} =\n    1\\<^sub>m dimR", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>j. meas_outcome_prj (mk_meas_outcome B U j))\n     {..<dist_el_card B} =\n    1\\<^sub>m dimR", "have \"sum_mat (\\<lambda>j. meas_outcome_prj ((mk_meas_outcome B U) j)) {..<(dist_el_card B)} =\n    sum_mat (\\<lambda>j. project_vecs (\\<lambda>i. zero_col U i) (diag_elem_indices (diag_idx_to_el B j) B)) \n    {..<(dist_el_card B)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>j. meas_outcome_prj (mk_meas_outcome B U j))\n     {..<dist_el_card B} =\n    local.sum_mat\n     (\\<lambda>j.\n         project_vecs (zero_col U)\n          (diag_elem_indices (diag_idx_to_el B j) B))\n     {..<dist_el_card B}", "unfolding mk_meas_outcome_def meas_outcome_prj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>j.\n         snd (Re (diag_idx_to_el B j),\n              project_vecs (zero_col U)\n               (diag_elem_indices (diag_idx_to_el B j) B)))\n     {..<dist_el_card B} =\n    local.sum_mat\n     (\\<lambda>j.\n         project_vecs (zero_col U)\n          (diag_elem_indices (diag_idx_to_el B j) B))\n     {..<dist_el_card B}", "by simp"], ["proof (state)\nthis:\n  local.sum_mat (\\<lambda>j. meas_outcome_prj (mk_meas_outcome B U j))\n   {..<dist_el_card B} =\n  local.sum_mat\n   (\\<lambda>j.\n       project_vecs (zero_col U) (diag_elem_indices (diag_idx_to_el B j) B))\n   {..<dist_el_card B}\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>j. meas_outcome_prj (mk_meas_outcome B U j))\n     {..<dist_el_card B} =\n    1\\<^sub>m dimR", "also"], ["proof (state)\nthis:\n  local.sum_mat (\\<lambda>j. meas_outcome_prj (mk_meas_outcome B U j))\n   {..<dist_el_card B} =\n  local.sum_mat\n   (\\<lambda>j.\n       project_vecs (zero_col U) (diag_elem_indices (diag_idx_to_el B j) B))\n   {..<dist_el_card B}\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>j. meas_outcome_prj (mk_meas_outcome B U j))\n     {..<dist_el_card B} =\n    1\\<^sub>m dimR", "have \"... = sum_mat (\\<lambda>i. rank_1_proj (zero_col U i)) \n    (\\<Union>j<dist_el_card B. diag_elem_indices (diag_idx_to_el B j) B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>j.\n         project_vecs (zero_col U)\n          (diag_elem_indices (diag_idx_to_el B j) B))\n     {..<dist_el_card B} =\n    local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n     (\\<Union>j<dist_el_card B. diag_elem_indices (diag_idx_to_el B j) B)", "unfolding project_vecs_def sum_mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_with (+) (0\\<^sub>m dimR dimC)\n     (\\<lambda>j.\n         sum_with (+) (0\\<^sub>m dimR dimC)\n          (\\<lambda>i. rank_1_proj (zero_col U i))\n          (diag_elem_indices (diag_idx_to_el B j) B))\n     {..<dist_el_card B} =\n    sum_with (+) (0\\<^sub>m dimR dimC)\n     (\\<lambda>i. rank_1_proj (zero_col U i))\n     (\\<Union>j<dist_el_card B. diag_elem_indices (diag_idx_to_el B j) B)", "proof (rule disj_family_sum_with[symmetric])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>j. rank_1_proj (zero_col U j) \\<in> fc_mats\n 2. finite {..<dist_el_card B}\n 3. disjoint_family_on\n     (\\<lambda>n. diag_elem_indices (diag_idx_to_el B n) B)\n     {..<dist_el_card B}\n 4. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       finite (diag_elem_indices (diag_idx_to_el B i) B)", "show \"\\<forall>j. rank_1_proj (zero_col U j) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j. rank_1_proj (zero_col U j) \\<in> fc_mats", "using zero_col_dim fc_mats_carrier dim_eq"], ["proof (prove)\nusing this:\n  ?U \\<in> fc_mats \\<Longrightarrow> dim_vec (zero_col ?U ?i) = dimR\n  fc_mats = carrier_mat dimR dimC\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. \\<forall>j. rank_1_proj (zero_col U j) \\<in> fc_mats", "by (metis assms(2) rank_1_proj_carrier)"], ["proof (state)\nthis:\n  \\<forall>j. rank_1_proj (zero_col U j) \\<in> fc_mats\n\ngoal (3 subgoals):\n 1. finite {..<dist_el_card B}\n 2. disjoint_family_on\n     (\\<lambda>n. diag_elem_indices (diag_idx_to_el B n) B)\n     {..<dist_el_card B}\n 3. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       finite (diag_elem_indices (diag_idx_to_el B i) B)", "show \"finite {..<dist_el_card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {..<dist_el_card B}", "by simp"], ["proof (state)\nthis:\n  finite {..<dist_el_card B}\n\ngoal (2 subgoals):\n 1. disjoint_family_on\n     (\\<lambda>n. diag_elem_indices (diag_idx_to_el B n) B)\n     {..<dist_el_card B}\n 2. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       finite (diag_elem_indices (diag_idx_to_el B i) B)", "show \"\\<And>i. i \\<in> {..<dist_el_card B} \\<Longrightarrow> finite (diag_elem_indices (diag_idx_to_el B i) B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       finite (diag_elem_indices (diag_idx_to_el B i) B)", "using diag_elem_indices_finite"], ["proof (prove)\nusing this:\n  finite (diag_elem_indices ?x ?B)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       finite (diag_elem_indices (diag_idx_to_el B i) B)", "by simp"], ["proof (state)\nthis:\n  ?i2 \\<in> {..<dist_el_card B} \\<Longrightarrow>\n  finite (diag_elem_indices (diag_idx_to_el B ?i2) B)\n\ngoal (1 subgoal):\n 1. disjoint_family_on\n     (\\<lambda>n. diag_elem_indices (diag_idx_to_el B n) B)\n     {..<dist_el_card B}", "show \"disjoint_family_on (\\<lambda>n. diag_elem_indices (diag_idx_to_el B n) B) \n      {..<dist_el_card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disjoint_family_on\n     (\\<lambda>n. diag_elem_indices (diag_idx_to_el B n) B)\n     {..<dist_el_card B}", "unfolding disjoint_family_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m\\<in>{..<dist_el_card B}.\n       \\<forall>n\\<in>{..<dist_el_card B}.\n          m \\<noteq> n \\<longrightarrow>\n          diag_elem_indices (diag_idx_to_el B m) B \\<inter>\n          diag_elem_indices (diag_idx_to_el B n) B =\n          {}", "proof (intro ballI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m n.\n       \\<lbrakk>m \\<in> {..<dist_el_card B}; n \\<in> {..<dist_el_card B};\n        m \\<noteq> n\\<rbrakk>\n       \\<Longrightarrow> diag_elem_indices (diag_idx_to_el B m) B \\<inter>\n                         diag_elem_indices (diag_idx_to_el B n) B =\n                         {}", "fix p m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m n.\n       \\<lbrakk>m \\<in> {..<dist_el_card B}; n \\<in> {..<dist_el_card B};\n        m \\<noteq> n\\<rbrakk>\n       \\<Longrightarrow> diag_elem_indices (diag_idx_to_el B m) B \\<inter>\n                         diag_elem_indices (diag_idx_to_el B n) B =\n                         {}", "assume \"m\\<in> {..< dist_el_card B}\" and \"p\\<in> {..< dist_el_card B}\" and \"m\\<noteq> p\""], ["proof (state)\nthis:\n  m \\<in> {..<dist_el_card B}\n  p \\<in> {..<dist_el_card B}\n  m \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       \\<lbrakk>m \\<in> {..<dist_el_card B}; n \\<in> {..<dist_el_card B};\n        m \\<noteq> n\\<rbrakk>\n       \\<Longrightarrow> diag_elem_indices (diag_idx_to_el B m) B \\<inter>\n                         diag_elem_indices (diag_idx_to_el B n) B =\n                         {}", "thus \"diag_elem_indices (diag_idx_to_el B m) B \\<inter> \n        diag_elem_indices (diag_idx_to_el B p) B = {}\""], ["proof (prove)\nusing this:\n  m \\<in> {..<dist_el_card B}\n  p \\<in> {..<dist_el_card B}\n  m \\<noteq> p\n\ngoal (1 subgoal):\n 1. diag_elem_indices (diag_idx_to_el B m) B \\<inter>\n    diag_elem_indices (diag_idx_to_el B p) B =\n    {}", "using diag_elem_indices_empty  assms fc_mats_carrier"], ["proof (prove)\nusing this:\n  m \\<in> {..<dist_el_card B}\n  p \\<in> {..<dist_el_card B}\n  m \\<noteq> p\n  \\<lbrakk>?B \\<in> carrier_mat ?dimR ?dimC; ?i < dist_el_card ?B;\n   ?j < dist_el_card ?B; ?i \\<noteq> ?j\\<rbrakk>\n  \\<Longrightarrow> diag_elem_indices (diag_idx_to_el ?B ?i) ?B \\<inter>\n                    diag_elem_indices (diag_idx_to_el ?B ?j) ?B =\n                    {}\n  Complex_Matrix.unitary U\n  U \\<in> fc_mats\n  B \\<in> fc_mats\n  fc_mats = carrier_mat dimR dimC\n\ngoal (1 subgoal):\n 1. diag_elem_indices (diag_idx_to_el B m) B \\<inter>\n    diag_elem_indices (diag_idx_to_el B p) B =\n    {}", "by simp"], ["proof (state)\nthis:\n  diag_elem_indices (diag_idx_to_el B m) B \\<inter>\n  diag_elem_indices (diag_idx_to_el B p) B =\n  {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  disjoint_family_on (\\<lambda>n. diag_elem_indices (diag_idx_to_el B n) B)\n   {..<dist_el_card B}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  local.sum_mat\n   (\\<lambda>j.\n       project_vecs (zero_col U) (diag_elem_indices (diag_idx_to_el B j) B))\n   {..<dist_el_card B} =\n  local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n   (\\<Union>j<dist_el_card B. diag_elem_indices (diag_idx_to_el B j) B)\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>j. meas_outcome_prj (mk_meas_outcome B U j))\n     {..<dist_el_card B} =\n    1\\<^sub>m dimR", "also"], ["proof (state)\nthis:\n  local.sum_mat\n   (\\<lambda>j.\n       project_vecs (zero_col U) (diag_elem_indices (diag_idx_to_el B j) B))\n   {..<dist_el_card B} =\n  local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n   (\\<Union>j<dist_el_card B. diag_elem_indices (diag_idx_to_el B j) B)\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>j. meas_outcome_prj (mk_meas_outcome B U j))\n     {..<dist_el_card B} =\n    1\\<^sub>m dimR", "have \"... = sum_mat (\\<lambda>i. rank_1_proj (zero_col U i)) {..< dimR}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n     (\\<Union>j<dist_el_card B. diag_elem_indices (diag_idx_to_el B j) B) =\n    local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i)) {..<dimR}", "using diag_elem_indices_union[of B] assms fc_mats_carrier"], ["proof (prove)\nusing this:\n  B \\<in> carrier_mat ?dimR ?dimC \\<Longrightarrow>\n  (\\<Union>i<dist_el_card B. diag_elem_indices (diag_idx_to_el B i) B) =\n  {..<?dimR}\n  Complex_Matrix.unitary U\n  U \\<in> fc_mats\n  B \\<in> fc_mats\n  fc_mats = carrier_mat dimR dimC\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n     (\\<Union>j<dist_el_card B. diag_elem_indices (diag_idx_to_el B j) B) =\n    local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i)) {..<dimR}", "by simp"], ["proof (state)\nthis:\n  local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n   (\\<Union>j<dist_el_card B. diag_elem_indices (diag_idx_to_el B j) B) =\n  local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i)) {..<dimR}\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>j. meas_outcome_prj (mk_meas_outcome B U j))\n     {..<dist_el_card B} =\n    1\\<^sub>m dimR", "also"], ["proof (state)\nthis:\n  local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n   (\\<Union>j<dist_el_card B. diag_elem_indices (diag_idx_to_el B j) B) =\n  local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i)) {..<dimR}\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>j. meas_outcome_prj (mk_meas_outcome B U j))\n     {..<dist_el_card B} =\n    1\\<^sub>m dimR", "have \"... = sum_mat (\\<lambda>i. rank_1_proj (Matrix.col U i)) {..< dimR}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i)) {..<dimR} =\n    local.sum_mat (\\<lambda>i. rank_1_proj (Matrix.col U i)) {..<dimR}", "proof (rule sum_mat_cong, simp)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       rank_1_proj (zero_col U i) = rank_1_proj (Matrix.col U i)\n 2. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       rank_1_proj (zero_col U i) \\<in> fc_mats\n 3. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       rank_1_proj (Matrix.col U i) \\<in> fc_mats", "show \"\\<And>i. i \\<in> {..<dimR} \\<Longrightarrow> rank_1_proj (zero_col U i) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       rank_1_proj (zero_col U i) \\<in> fc_mats", "using dim_eq"], ["proof (prove)\nusing this:\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       rank_1_proj (zero_col U i) \\<in> fc_mats", "by (metis assms(2) local.fc_mats_carrier rank_1_proj_carrier zero_col_dim)"], ["proof (state)\nthis:\n  ?i2 \\<in> {..<dimR} \\<Longrightarrow>\n  rank_1_proj (zero_col U ?i2) \\<in> fc_mats\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       rank_1_proj (zero_col U i) = rank_1_proj (Matrix.col U i)\n 2. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       rank_1_proj (Matrix.col U i) \\<in> fc_mats", "thus \"\\<And>i. i \\<in> {..<dimR} \\<Longrightarrow> rank_1_proj (Matrix.col U i) \\<in> fc_mats\""], ["proof (prove)\nusing this:\n  ?i2 \\<in> {..<dimR} \\<Longrightarrow>\n  rank_1_proj (zero_col U ?i2) \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       rank_1_proj (Matrix.col U i) \\<in> fc_mats", "using dim_eq"], ["proof (prove)\nusing this:\n  ?i2 \\<in> {..<dimR} \\<Longrightarrow>\n  rank_1_proj (zero_col U ?i2) \\<in> fc_mats\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       rank_1_proj (Matrix.col U i) \\<in> fc_mats", "by (metis lessThan_iff zero_col_col)"], ["proof (state)\nthis:\n  ?i2 \\<in> {..<dimR} \\<Longrightarrow>\n  rank_1_proj (Matrix.col U ?i2) \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       rank_1_proj (zero_col U i) = rank_1_proj (Matrix.col U i)", "show \"\\<And>i. i \\<in> {..<dimR} \\<Longrightarrow> rank_1_proj (zero_col U i) = rank_1_proj (Matrix.col U i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       rank_1_proj (zero_col U i) = rank_1_proj (Matrix.col U i)", "by (simp add: zero_col_col)"], ["proof (state)\nthis:\n  ?i2 \\<in> {..<dimR} \\<Longrightarrow>\n  rank_1_proj (zero_col U ?i2) = rank_1_proj (Matrix.col U ?i2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i)) {..<dimR} =\n  local.sum_mat (\\<lambda>i. rank_1_proj (Matrix.col U i)) {..<dimR}\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>j. meas_outcome_prj (mk_meas_outcome B U j))\n     {..<dist_el_card B} =\n    1\\<^sub>m dimR", "also"], ["proof (state)\nthis:\n  local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i)) {..<dimR} =\n  local.sum_mat (\\<lambda>i. rank_1_proj (Matrix.col U i)) {..<dimR}\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>j. meas_outcome_prj (mk_meas_outcome B U j))\n     {..<dist_el_card B} =\n    1\\<^sub>m dimR", "have \"... = 1\\<^sub>m dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>i. rank_1_proj (Matrix.col U i)) {..<dimR} =\n    1\\<^sub>m dimR", "using sum_rank_1_proj_unitary assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<in> fc_mats; Complex_Matrix.unitary ?A\\<rbrakk>\n  \\<Longrightarrow> local.sum_mat\n                     (\\<lambda>i. rank_1_proj (Matrix.col ?A i)) {..<dimR} =\n                    1\\<^sub>m dimR\n  Complex_Matrix.unitary U\n  U \\<in> fc_mats\n  B \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>i. rank_1_proj (Matrix.col U i)) {..<dimR} =\n    1\\<^sub>m dimR", "by simp"], ["proof (state)\nthis:\n  local.sum_mat (\\<lambda>i. rank_1_proj (Matrix.col U i)) {..<dimR} =\n  1\\<^sub>m dimR\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>j. meas_outcome_prj (mk_meas_outcome B U j))\n     {..<dist_el_card B} =\n    1\\<^sub>m dimR", "finally"], ["proof (chain)\npicking this:\n  local.sum_mat (\\<lambda>j. meas_outcome_prj (mk_meas_outcome B U j))\n   {..<dist_el_card B} =\n  1\\<^sub>m dimR", "show ?thesis"], ["proof (prove)\nusing this:\n  local.sum_mat (\\<lambda>j. meas_outcome_prj (mk_meas_outcome B U j))\n   {..<dist_el_card B} =\n  1\\<^sub>m dimR\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>j. meas_outcome_prj (mk_meas_outcome B U j))\n     {..<dist_el_card B} =\n    1\\<^sub>m dimR", "."], ["proof (state)\nthis:\n  local.sum_mat (\\<lambda>j. meas_outcome_prj (mk_meas_outcome B U j))\n   {..<dist_el_card B} =\n  1\\<^sub>m dimR\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) make_meas_outcome_prj_ortho:\n  assumes \"Complex_Matrix.unitary U\"\n  and \"U \\<in> fc_mats\"\n  and \"B\\<in> fc_mats\"\n  and \"i < dist_el_card B\"\n  and \"j < dist_el_card B\"\n  and \"i \\<noteq> j\"\nshows \"meas_outcome_prj ((mk_meas_outcome B U) i) * \n  meas_outcome_prj ((mk_meas_outcome B U) j) = 0\\<^sub>m dimR dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_prj (mk_meas_outcome B U i) *\n    meas_outcome_prj (mk_meas_outcome B U j) =\n    0\\<^sub>m dimR dimR", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. meas_outcome_prj (mk_meas_outcome B U i) *\n    meas_outcome_prj (mk_meas_outcome B U j) =\n    0\\<^sub>m dimR dimR", "define Pi where \"Pi = sum_mat (\\<lambda>k. rank_1_proj (zero_col U k)) \n    (diag_elem_indices (diag_idx_to_el B i) B)\""], ["proof (state)\nthis:\n  Pi =\n  local.sum_mat (\\<lambda>k. rank_1_proj (zero_col U k))\n   (diag_elem_indices (diag_idx_to_el B i) B)\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (mk_meas_outcome B U i) *\n    meas_outcome_prj (mk_meas_outcome B U j) =\n    0\\<^sub>m dimR dimR", "have sneqi: \"meas_outcome_prj (mk_meas_outcome B U i) = Pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_prj (mk_meas_outcome B U i) = Pi", "unfolding mk_meas_outcome_def project_vecs_def Pi_def meas_outcome_prj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (Re (diag_idx_to_el B i),\n         local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n          (diag_elem_indices (diag_idx_to_el B i) B)) =\n    local.sum_mat (\\<lambda>k. rank_1_proj (zero_col U k))\n     (diag_elem_indices (diag_idx_to_el B i) B)", "by simp"], ["proof (state)\nthis:\n  meas_outcome_prj (mk_meas_outcome B U i) = Pi\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (mk_meas_outcome B U i) *\n    meas_outcome_prj (mk_meas_outcome B U j) =\n    0\\<^sub>m dimR dimR", "define Pj where \"Pj = sum_mat (\\<lambda>k. rank_1_proj (zero_col U k)) \n    (diag_elem_indices (diag_idx_to_el B j) B)\""], ["proof (state)\nthis:\n  Pj =\n  local.sum_mat (\\<lambda>k. rank_1_proj (zero_col U k))\n   (diag_elem_indices (diag_idx_to_el B j) B)\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (mk_meas_outcome B U i) *\n    meas_outcome_prj (mk_meas_outcome B U j) =\n    0\\<^sub>m dimR dimR", "have sneqj: \"meas_outcome_prj (mk_meas_outcome B U j) = Pj\""], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_prj (mk_meas_outcome B U j) = Pj", "unfolding mk_meas_outcome_def project_vecs_def Pj_def meas_outcome_prj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (Re (diag_idx_to_el B j),\n         local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n          (diag_elem_indices (diag_idx_to_el B j) B)) =\n    local.sum_mat (\\<lambda>k. rank_1_proj (zero_col U k))\n     (diag_elem_indices (diag_idx_to_el B j) B)", "by simp"], ["proof (state)\nthis:\n  meas_outcome_prj (mk_meas_outcome B U j) = Pj\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (mk_meas_outcome B U i) *\n    meas_outcome_prj (mk_meas_outcome B U j) =\n    0\\<^sub>m dimR dimR", "have \"Pi * Pj = 0\\<^sub>m dimR dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pi * Pj = 0\\<^sub>m dimR dimR", "unfolding Pi_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>k. rank_1_proj (zero_col U k))\n     (diag_elem_indices (diag_idx_to_el B i) B) *\n    Pj =\n    0\\<^sub>m dimR dimR", "proof (rule sum_mat_left_ortho_zero)"], ["proof (state)\ngoal (4 subgoals):\n 1. finite (diag_elem_indices (diag_idx_to_el B i) B)\n 2. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       rank_1_proj (zero_col U ia) \\<in> fc_mats\n 3. Pj \\<in> fc_mats\n 4. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       rank_1_proj (zero_col U ia) * Pj = 0\\<^sub>m dimR dimR", "show \"finite (diag_elem_indices (diag_idx_to_el B i) B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (diag_elem_indices (diag_idx_to_el B i) B)", "using diag_elem_indices_finite[of _ B]"], ["proof (prove)\nusing this:\n  finite (diag_elem_indices ?x B)\n\ngoal (1 subgoal):\n 1. finite (diag_elem_indices (diag_idx_to_el B i) B)", "by simp"], ["proof (state)\nthis:\n  finite (diag_elem_indices (diag_idx_to_el B i) B)\n\ngoal (3 subgoals):\n 1. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       rank_1_proj (zero_col U ia) \\<in> fc_mats\n 2. Pj \\<in> fc_mats\n 3. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       rank_1_proj (zero_col U ia) * Pj = 0\\<^sub>m dimR dimR", "show km: \"\\<And>k. k \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow> \n      rank_1_proj (zero_col U k) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       rank_1_proj (zero_col U k) \\<in> fc_mats", "using zero_col_dim assms fc_mats_carrier dim_eq"], ["proof (prove)\nusing this:\n  ?U \\<in> fc_mats \\<Longrightarrow> dim_vec (zero_col ?U ?i) = dimR\n  Complex_Matrix.unitary U\n  U \\<in> fc_mats\n  B \\<in> fc_mats\n  i < dist_el_card B\n  j < dist_el_card B\n  i \\<noteq> j\n  fc_mats = carrier_mat dimR dimC\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       rank_1_proj (zero_col U k) \\<in> fc_mats", "by (metis rank_1_proj_carrier)"], ["proof (state)\nthis:\n  ?k2 \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n  rank_1_proj (zero_col U ?k2) \\<in> fc_mats\n\ngoal (2 subgoals):\n 1. Pj \\<in> fc_mats\n 2. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       rank_1_proj (zero_col U ia) * Pj = 0\\<^sub>m dimR dimR", "show \"Pj \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pj \\<in> fc_mats", "using sneqj assms mk_meas_outcome_carrier"], ["proof (prove)\nusing this:\n  meas_outcome_prj (mk_meas_outcome B U j) = Pj\n  Complex_Matrix.unitary U\n  U \\<in> fc_mats\n  B \\<in> fc_mats\n  i < dist_el_card B\n  j < dist_el_card B\n  i \\<noteq> j\n  \\<lbrakk>Complex_Matrix.unitary ?U; ?U \\<in> fc_mats;\n   ?B \\<in> fc_mats\\<rbrakk>\n  \\<Longrightarrow> meas_outcome_prj (mk_meas_outcome ?B ?U ?j)\n                    \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. Pj \\<in> fc_mats", "by auto"], ["proof (state)\nthis:\n  Pj \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       rank_1_proj (zero_col U ia) * Pj = 0\\<^sub>m dimR dimR", "show \"\\<And>k. k \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow> \n      rank_1_proj (zero_col U k) * Pj = 0\\<^sub>m dimR dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       rank_1_proj (zero_col U k) * Pj = 0\\<^sub>m dimR dimR", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       rank_1_proj (zero_col U k) * Pj = 0\\<^sub>m dimR dimR", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       rank_1_proj (zero_col U k) * Pj = 0\\<^sub>m dimR dimR", "assume \"k \\<in> diag_elem_indices (diag_idx_to_el B i) B\""], ["proof (state)\nthis:\n  k \\<in> diag_elem_indices (diag_idx_to_el B i) B\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       rank_1_proj (zero_col U k) * Pj = 0\\<^sub>m dimR dimR", "show \"rank_1_proj (zero_col U k) * Pj = 0\\<^sub>m dimR dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_1_proj (zero_col U k) * Pj = 0\\<^sub>m dimR dimR", "unfolding Pj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_1_proj (zero_col U k) *\n    local.sum_mat (\\<lambda>k. rank_1_proj (zero_col U k))\n     (diag_elem_indices (diag_idx_to_el B j) B) =\n    0\\<^sub>m dimR dimR", "proof (rule sum_mat_right_ortho_zero)"], ["proof (state)\ngoal (4 subgoals):\n 1. finite (diag_elem_indices (diag_idx_to_el B j) B)\n 2. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) \\<in> fc_mats\n 3. rank_1_proj (zero_col U k) \\<in> fc_mats\n 4. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U k) * rank_1_proj (zero_col U i) =\n       0\\<^sub>m dimR dimR", "show \"finite (diag_elem_indices (diag_idx_to_el B j) B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (diag_elem_indices (diag_idx_to_el B j) B)", "using diag_elem_indices_finite[of _ B]"], ["proof (prove)\nusing this:\n  finite (diag_elem_indices ?x B)\n\ngoal (1 subgoal):\n 1. finite (diag_elem_indices (diag_idx_to_el B j) B)", "by simp"], ["proof (state)\nthis:\n  finite (diag_elem_indices (diag_idx_to_el B j) B)\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) \\<in> fc_mats\n 2. rank_1_proj (zero_col U k) \\<in> fc_mats\n 3. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U k) * rank_1_proj (zero_col U i) =\n       0\\<^sub>m dimR dimR", "show \"\\<And>i. i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow> \n          rank_1_proj (zero_col U i) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) \\<in> fc_mats", "using zero_col_dim assms fc_mats_carrier dim_eq"], ["proof (prove)\nusing this:\n  ?U \\<in> fc_mats \\<Longrightarrow> dim_vec (zero_col ?U ?i) = dimR\n  Complex_Matrix.unitary U\n  U \\<in> fc_mats\n  B \\<in> fc_mats\n  i < dist_el_card B\n  j < dist_el_card B\n  i \\<noteq> j\n  fc_mats = carrier_mat dimR dimC\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) \\<in> fc_mats", "by (metis rank_1_proj_carrier)"], ["proof (state)\nthis:\n  ?i2 \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n  rank_1_proj (zero_col U ?i2) \\<in> fc_mats\n\ngoal (2 subgoals):\n 1. rank_1_proj (zero_col U k) \\<in> fc_mats\n 2. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U k) * rank_1_proj (zero_col U i) =\n       0\\<^sub>m dimR dimR", "show \"rank_1_proj (zero_col U k) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_1_proj (zero_col U k) \\<in> fc_mats", "by (simp add: km \\<open>k \\<in> diag_elem_indices (diag_idx_to_el B i) B\\<close>)"], ["proof (state)\nthis:\n  rank_1_proj (zero_col U k) \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U k) * rank_1_proj (zero_col U i) =\n       0\\<^sub>m dimR dimR", "show \"\\<And>i. i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n         rank_1_proj (zero_col U k) * rank_1_proj (zero_col U i) = 0\\<^sub>m dimR dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U k) * rank_1_proj (zero_col U i) =\n       0\\<^sub>m dimR dimR", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U k) * rank_1_proj (zero_col U i) =\n       0\\<^sub>m dimR dimR", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U k) * rank_1_proj (zero_col U i) =\n       0\\<^sub>m dimR dimR", "assume \"m \\<in> diag_elem_indices (diag_idx_to_el B j) B\""], ["proof (state)\nthis:\n  m \\<in> diag_elem_indices (diag_idx_to_el B j) B\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U k) * rank_1_proj (zero_col U i) =\n       0\\<^sub>m dimR dimR", "hence \"m \\<noteq> k\""], ["proof (prove)\nusing this:\n  m \\<in> diag_elem_indices (diag_idx_to_el B j) B\n\ngoal (1 subgoal):\n 1. m \\<noteq> k", "using \\<open>k \\<in> diag_elem_indices (diag_idx_to_el B i) B\\<close> \n            diag_elem_indices_disjoint[of B] fc_mats_carrier assms"], ["proof (prove)\nusing this:\n  m \\<in> diag_elem_indices (diag_idx_to_el B j) B\n  k \\<in> diag_elem_indices (diag_idx_to_el B i) B\n  B \\<in> carrier_mat dimR dimC \\<Longrightarrow>\n  disjoint_family_on (\\<lambda>n. diag_elem_indices (diag_idx_to_el B n) B)\n   {..<dist_el_card B}\n  fc_mats = carrier_mat dimR dimC\n  Complex_Matrix.unitary U\n  U \\<in> fc_mats\n  B \\<in> fc_mats\n  i < dist_el_card B\n  j < dist_el_card B\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. m \\<noteq> k", "unfolding disjoint_family_on_def"], ["proof (prove)\nusing this:\n  m \\<in> diag_elem_indices (diag_idx_to_el B j) B\n  k \\<in> diag_elem_indices (diag_idx_to_el B i) B\n  B \\<in> carrier_mat dimR dimC \\<Longrightarrow>\n  \\<forall>m\\<in>{..<dist_el_card B}.\n     \\<forall>n\\<in>{..<dist_el_card B}.\n        m \\<noteq> n \\<longrightarrow>\n        diag_elem_indices (diag_idx_to_el B m) B \\<inter>\n        diag_elem_indices (diag_idx_to_el B n) B =\n        {}\n  fc_mats = carrier_mat dimR dimC\n  Complex_Matrix.unitary U\n  U \\<in> fc_mats\n  B \\<in> fc_mats\n  i < dist_el_card B\n  j < dist_el_card B\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. m \\<noteq> k", "by auto"], ["proof (state)\nthis:\n  m \\<noteq> k\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U k) * rank_1_proj (zero_col U i) =\n       0\\<^sub>m dimR dimR", "have \"\\<And>i. i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow> i < dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       i < dimR", "using diag_elem_indices_elem fc_mats_carrier assms dim_eq"], ["proof (prove)\nusing this:\n  ?a \\<in> diag_elem_indices ?x ?B \\<Longrightarrow>\n  ?a < dim_row ?B \\<and> ?B $$ (?a, ?a) = ?x\n  fc_mats = carrier_mat dimR dimC\n  Complex_Matrix.unitary U\n  U \\<in> fc_mats\n  B \\<in> fc_mats\n  i < dist_el_card B\n  j < dist_el_card B\n  i \\<noteq> j\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       i < dimR", "by (metis carrier_matD(1))"], ["proof (state)\nthis:\n  ?i2 \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n  ?i2 < dimR\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U k) * rank_1_proj (zero_col U i) =\n       0\\<^sub>m dimR dimR", "hence \"m < dimR\""], ["proof (prove)\nusing this:\n  ?i2 \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n  ?i2 < dimR\n\ngoal (1 subgoal):\n 1. m < dimR", "using \\<open>m \\<in> diag_elem_indices (diag_idx_to_el B j) B\\<close>"], ["proof (prove)\nusing this:\n  ?i2 \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n  ?i2 < dimR\n  m \\<in> diag_elem_indices (diag_idx_to_el B j) B\n\ngoal (1 subgoal):\n 1. m < dimR", "by simp"], ["proof (state)\nthis:\n  m < dimR\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U k) * rank_1_proj (zero_col U i) =\n       0\\<^sub>m dimR dimR", "have \"\\<And>k. k \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow> k < dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       k < dimR", "using diag_elem_indices_elem fc_mats_carrier assms dim_eq"], ["proof (prove)\nusing this:\n  ?a \\<in> diag_elem_indices ?x ?B \\<Longrightarrow>\n  ?a < dim_row ?B \\<and> ?B $$ (?a, ?a) = ?x\n  fc_mats = carrier_mat dimR dimC\n  Complex_Matrix.unitary U\n  U \\<in> fc_mats\n  B \\<in> fc_mats\n  i < dist_el_card B\n  j < dist_el_card B\n  i \\<noteq> j\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       k < dimR", "by (metis carrier_matD(1))"], ["proof (state)\nthis:\n  ?k2 \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n  ?k2 < dimR\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U k) * rank_1_proj (zero_col U i) =\n       0\\<^sub>m dimR dimR", "hence \"k < dimR\""], ["proof (prove)\nusing this:\n  ?k2 \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n  ?k2 < dimR\n\ngoal (1 subgoal):\n 1. k < dimR", "using \\<open>k \\<in> diag_elem_indices (diag_idx_to_el B i) B\\<close>"], ["proof (prove)\nusing this:\n  ?k2 \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n  ?k2 < dimR\n  k \\<in> diag_elem_indices (diag_idx_to_el B i) B\n\ngoal (1 subgoal):\n 1. k < dimR", "by simp"], ["proof (state)\nthis:\n  k < dimR\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U k) * rank_1_proj (zero_col U i) =\n       0\\<^sub>m dimR dimR", "show \"rank_1_proj (zero_col U k) * rank_1_proj (zero_col U m) = 0\\<^sub>m dimR dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_1_proj (zero_col U k) * rank_1_proj (zero_col U m) =\n    0\\<^sub>m dimR dimR", "using rank_1_proj_unitary_ne[of U k m] assms \\<open>m < dimR\\<close> \\<open>k < dimR\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>U \\<in> fc_mats; Complex_Matrix.unitary U; k < dimR; m < dimR;\n   k \\<noteq> m\\<rbrakk>\n  \\<Longrightarrow> rank_1_proj (Matrix.col U k) *\n                    rank_1_proj (Matrix.col U m) =\n                    0\\<^sub>m dimR dimR\n  Complex_Matrix.unitary U\n  U \\<in> fc_mats\n  B \\<in> fc_mats\n  i < dist_el_card B\n  j < dist_el_card B\n  i \\<noteq> j\n  m < dimR\n  k < dimR\n\ngoal (1 subgoal):\n 1. rank_1_proj (zero_col U k) * rank_1_proj (zero_col U m) =\n    0\\<^sub>m dimR dimR", "by (metis \\<open>m \\<noteq> k\\<close> zero_col_col)"], ["proof (state)\nthis:\n  rank_1_proj (zero_col U k) * rank_1_proj (zero_col U m) =\n  0\\<^sub>m dimR dimR\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i2 \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n  rank_1_proj (zero_col U k) * rank_1_proj (zero_col U ?i2) =\n  0\\<^sub>m dimR dimR\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank_1_proj (zero_col U k) * Pj = 0\\<^sub>m dimR dimR\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?k2 \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n  rank_1_proj (zero_col U ?k2) * Pj = 0\\<^sub>m dimR dimR\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Pi * Pj = 0\\<^sub>m dimR dimR\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (mk_meas_outcome B U i) *\n    meas_outcome_prj (mk_meas_outcome B U j) =\n    0\\<^sub>m dimR dimR", "thus ?thesis"], ["proof (prove)\nusing this:\n  Pi * Pj = 0\\<^sub>m dimR dimR\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (mk_meas_outcome B U i) *\n    meas_outcome_prj (mk_meas_outcome B U j) =\n    0\\<^sub>m dimR dimR", "using sneqi sneqj"], ["proof (prove)\nusing this:\n  Pi * Pj = 0\\<^sub>m dimR dimR\n  meas_outcome_prj (mk_meas_outcome B U i) = Pi\n  meas_outcome_prj (mk_meas_outcome B U j) = Pj\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (mk_meas_outcome B U i) *\n    meas_outcome_prj (mk_meas_outcome B U j) =\n    0\\<^sub>m dimR dimR", "by simp"], ["proof (state)\nthis:\n  meas_outcome_prj (mk_meas_outcome B U i) *\n  meas_outcome_prj (mk_meas_outcome B U j) =\n  0\\<^sub>m dimR dimR\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) make_meas_outcome_prjectors:\n  assumes \"Complex_Matrix.unitary U\"\n  and \"U \\<in> fc_mats\"\n  and \"B\\<in> fc_mats\"\n  and \"j < dist_el_card B\"\nshows \"projector (meas_outcome_prj ((mk_meas_outcome B U) j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (mk_meas_outcome B U j))", "unfolding projector_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitian (meas_outcome_prj (mk_meas_outcome B U j)) \\<and>\n    meas_outcome_prj (mk_meas_outcome B U j) *\n    meas_outcome_prj (mk_meas_outcome B U j) =\n    meas_outcome_prj (mk_meas_outcome B U j)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. hermitian (meas_outcome_prj (mk_meas_outcome B U j))\n 2. meas_outcome_prj (mk_meas_outcome B U j) *\n    meas_outcome_prj (mk_meas_outcome B U j) =\n    meas_outcome_prj (mk_meas_outcome B U j)", "define Pj where \"Pj = sum_mat (\\<lambda>i. rank_1_proj (zero_col U i)) \n  (diag_elem_indices (diag_idx_to_el B j) B)\""], ["proof (state)\nthis:\n  Pj =\n  local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n   (diag_elem_indices (diag_idx_to_el B j) B)\n\ngoal (2 subgoals):\n 1. hermitian (meas_outcome_prj (mk_meas_outcome B U j))\n 2. meas_outcome_prj (mk_meas_outcome B U j) *\n    meas_outcome_prj (mk_meas_outcome B U j) =\n    meas_outcome_prj (mk_meas_outcome B U j)", "have sneq: \"meas_outcome_prj (mk_meas_outcome B U j) = Pj\""], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_prj (mk_meas_outcome B U j) = Pj", "unfolding mk_meas_outcome_def project_vecs_def Pj_def meas_outcome_prj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (Re (diag_idx_to_el B j),\n         local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n          (diag_elem_indices (diag_idx_to_el B j) B)) =\n    local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n     (diag_elem_indices (diag_idx_to_el B j) B)", "by simp"], ["proof (state)\nthis:\n  meas_outcome_prj (mk_meas_outcome B U j) = Pj\n\ngoal (2 subgoals):\n 1. hermitian (meas_outcome_prj (mk_meas_outcome B U j))\n 2. meas_outcome_prj (mk_meas_outcome B U j) *\n    meas_outcome_prj (mk_meas_outcome B U j) =\n    meas_outcome_prj (mk_meas_outcome B U j)", "moreover"], ["proof (state)\nthis:\n  meas_outcome_prj (mk_meas_outcome B U j) = Pj\n\ngoal (2 subgoals):\n 1. hermitian (meas_outcome_prj (mk_meas_outcome B U j))\n 2. meas_outcome_prj (mk_meas_outcome B U j) *\n    meas_outcome_prj (mk_meas_outcome B U j) =\n    meas_outcome_prj (mk_meas_outcome B U j)", "have \"hermitian Pj\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitian Pj", "unfolding Pj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitian\n     (local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n       (diag_elem_indices (diag_idx_to_el B j) B))", "proof (rule sum_mat_hermitian)"], ["proof (state)\ngoal (3 subgoals):\n 1. finite (diag_elem_indices (diag_idx_to_el B j) B)\n 2. \\<forall>i\\<in>diag_elem_indices (diag_idx_to_el B j) B.\n       hermitian (rank_1_proj (zero_col U i))\n 3. \\<forall>i\\<in>diag_elem_indices (diag_idx_to_el B j) B.\n       rank_1_proj (zero_col U i) \\<in> fc_mats", "show \"finite (diag_elem_indices (diag_idx_to_el B j) B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (diag_elem_indices (diag_idx_to_el B j) B)", "using diag_elem_indices_finite[of _ B]"], ["proof (prove)\nusing this:\n  finite (diag_elem_indices ?x B)\n\ngoal (1 subgoal):\n 1. finite (diag_elem_indices (diag_idx_to_el B j) B)", "by simp"], ["proof (state)\nthis:\n  finite (diag_elem_indices (diag_idx_to_el B j) B)\n\ngoal (2 subgoals):\n 1. \\<forall>i\\<in>diag_elem_indices (diag_idx_to_el B j) B.\n       hermitian (rank_1_proj (zero_col U i))\n 2. \\<forall>i\\<in>diag_elem_indices (diag_idx_to_el B j) B.\n       rank_1_proj (zero_col U i) \\<in> fc_mats", "show \"\\<forall>i\\<in>diag_elem_indices (diag_idx_to_el B j) B. hermitian (rank_1_proj (zero_col U i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>diag_elem_indices (diag_idx_to_el B j) B.\n       hermitian (rank_1_proj (zero_col U i))", "using rank_1_proj_hermitian"], ["proof (prove)\nusing this:\n  hermitian (rank_1_proj ?v)\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>diag_elem_indices (diag_idx_to_el B j) B.\n       hermitian (rank_1_proj (zero_col U i))", "by simp"], ["proof (state)\nthis:\n  \\<forall>i\\<in>diag_elem_indices (diag_idx_to_el B j) B.\n     hermitian (rank_1_proj (zero_col U i))\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>diag_elem_indices (diag_idx_to_el B j) B.\n       rank_1_proj (zero_col U i) \\<in> fc_mats", "show \"\\<forall>i\\<in>diag_elem_indices (diag_idx_to_el B j) B. rank_1_proj (zero_col U i) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>diag_elem_indices (diag_idx_to_el B j) B.\n       rank_1_proj (zero_col U i) \\<in> fc_mats", "using zero_col_dim fc_mats_carrier dim_eq"], ["proof (prove)\nusing this:\n  ?U \\<in> fc_mats \\<Longrightarrow> dim_vec (zero_col ?U ?i) = dimR\n  fc_mats = carrier_mat dimR dimC\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>diag_elem_indices (diag_idx_to_el B j) B.\n       rank_1_proj (zero_col U i) \\<in> fc_mats", "by (metis assms(2) rank_1_proj_carrier)"], ["proof (state)\nthis:\n  \\<forall>i\\<in>diag_elem_indices (diag_idx_to_el B j) B.\n     rank_1_proj (zero_col U i) \\<in> fc_mats\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  hermitian Pj\n\ngoal (2 subgoals):\n 1. hermitian (meas_outcome_prj (mk_meas_outcome B U j))\n 2. meas_outcome_prj (mk_meas_outcome B U j) *\n    meas_outcome_prj (mk_meas_outcome B U j) =\n    meas_outcome_prj (mk_meas_outcome B U j)", "ultimately"], ["proof (chain)\npicking this:\n  meas_outcome_prj (mk_meas_outcome B U j) = Pj\n  hermitian Pj", "show \"hermitian (meas_outcome_prj (mk_meas_outcome B U j))\""], ["proof (prove)\nusing this:\n  meas_outcome_prj (mk_meas_outcome B U j) = Pj\n  hermitian Pj\n\ngoal (1 subgoal):\n 1. hermitian (meas_outcome_prj (mk_meas_outcome B U j))", "by simp"], ["proof (state)\nthis:\n  hermitian (meas_outcome_prj (mk_meas_outcome B U j))\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (mk_meas_outcome B U j) *\n    meas_outcome_prj (mk_meas_outcome B U j) =\n    meas_outcome_prj (mk_meas_outcome B U j)", "have \"Pj * Pj = Pj\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pj * Pj = Pj", "unfolding Pj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n     (diag_elem_indices (diag_idx_to_el B j) B) *\n    local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n     (diag_elem_indices (diag_idx_to_el B j) B) =\n    local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n     (diag_elem_indices (diag_idx_to_el B j) B)", "proof (rule sum_mat_ortho_square)"], ["proof (state)\ngoal (4 subgoals):\n 1. finite (diag_elem_indices (diag_idx_to_el B j) B)\n 2. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) * rank_1_proj (zero_col U i) =\n       rank_1_proj (zero_col U i)\n 3. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) \\<in> fc_mats\n 4. \\<And>i ja.\n       \\<lbrakk>i \\<in> diag_elem_indices (diag_idx_to_el B j) B;\n        ja \\<in> diag_elem_indices (diag_idx_to_el B j) B;\n        i \\<noteq> ja\\<rbrakk>\n       \\<Longrightarrow> rank_1_proj (zero_col U i) *\n                         rank_1_proj (zero_col U ja) =\n                         0\\<^sub>m dimR dimR", "show \"finite (diag_elem_indices (diag_idx_to_el B j) B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (diag_elem_indices (diag_idx_to_el B j) B)", "using diag_elem_indices_finite[of _ B]"], ["proof (prove)\nusing this:\n  finite (diag_elem_indices ?x B)\n\ngoal (1 subgoal):\n 1. finite (diag_elem_indices (diag_idx_to_el B j) B)", "by simp"], ["proof (state)\nthis:\n  finite (diag_elem_indices (diag_idx_to_el B j) B)\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) * rank_1_proj (zero_col U i) =\n       rank_1_proj (zero_col U i)\n 2. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) \\<in> fc_mats\n 3. \\<And>i ja.\n       \\<lbrakk>i \\<in> diag_elem_indices (diag_idx_to_el B j) B;\n        ja \\<in> diag_elem_indices (diag_idx_to_el B j) B;\n        i \\<noteq> ja\\<rbrakk>\n       \\<Longrightarrow> rank_1_proj (zero_col U i) *\n                         rank_1_proj (zero_col U ja) =\n                         0\\<^sub>m dimR dimR", "show \"\\<And>i. i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n         rank_1_proj (zero_col U i) * rank_1_proj (zero_col U i) = rank_1_proj (zero_col U i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) * rank_1_proj (zero_col U i) =\n       rank_1_proj (zero_col U i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) * rank_1_proj (zero_col U i) =\n       rank_1_proj (zero_col U i)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) * rank_1_proj (zero_col U i) =\n       rank_1_proj (zero_col U i)", "assume imem: \"i\\<in> diag_elem_indices (diag_idx_to_el B j) B\""], ["proof (state)\nthis:\n  i \\<in> diag_elem_indices (diag_idx_to_el B j) B\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) * rank_1_proj (zero_col U i) =\n       rank_1_proj (zero_col U i)", "hence \"i < dimR\""], ["proof (prove)\nusing this:\n  i \\<in> diag_elem_indices (diag_idx_to_el B j) B\n\ngoal (1 subgoal):\n 1. i < dimR", "using diag_elem_indices_elem fc_mats_carrier assms dim_eq"], ["proof (prove)\nusing this:\n  i \\<in> diag_elem_indices (diag_idx_to_el B j) B\n  ?a \\<in> diag_elem_indices ?x ?B \\<Longrightarrow>\n  ?a < dim_row ?B \\<and> ?B $$ (?a, ?a) = ?x\n  fc_mats = carrier_mat dimR dimC\n  Complex_Matrix.unitary U\n  U \\<in> fc_mats\n  B \\<in> fc_mats\n  j < dist_el_card B\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. i < dimR", "by (metis carrier_matD(1))"], ["proof (state)\nthis:\n  i < dimR\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) * rank_1_proj (zero_col U i) =\n       rank_1_proj (zero_col U i)", "hence \"zero_col U i = Matrix.col U i\""], ["proof (prove)\nusing this:\n  i < dimR\n\ngoal (1 subgoal):\n 1. zero_col U i = Matrix.col U i", "using zero_col_col[of i]"], ["proof (prove)\nusing this:\n  i < dimR\n  i < dimR \\<Longrightarrow> zero_col ?U i = Matrix.col ?U i\n\ngoal (1 subgoal):\n 1. zero_col U i = Matrix.col U i", "by simp"], ["proof (state)\nthis:\n  zero_col U i = Matrix.col U i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) * rank_1_proj (zero_col U i) =\n       rank_1_proj (zero_col U i)", "hence \"rank_1_proj (zero_col U i) = rank_1_proj (Matrix.col U i)\""], ["proof (prove)\nusing this:\n  zero_col U i = Matrix.col U i\n\ngoal (1 subgoal):\n 1. rank_1_proj (zero_col U i) = rank_1_proj (Matrix.col U i)", "by simp"], ["proof (state)\nthis:\n  rank_1_proj (zero_col U i) = rank_1_proj (Matrix.col U i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) * rank_1_proj (zero_col U i) =\n       rank_1_proj (zero_col U i)", "moreover"], ["proof (state)\nthis:\n  rank_1_proj (zero_col U i) = rank_1_proj (Matrix.col U i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) * rank_1_proj (zero_col U i) =\n       rank_1_proj (zero_col U i)", "have \"rank_1_proj (Matrix.col U i) * rank_1_proj (Matrix.col U i) = \n        rank_1_proj (Matrix.col U i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_1_proj (Matrix.col U i) * rank_1_proj (Matrix.col U i) =\n    rank_1_proj (Matrix.col U i)", "by (rule rank_1_proj_unitary_eq, (auto simp add: assms \\<open>i < dimR\\<close>))"], ["proof (state)\nthis:\n  rank_1_proj (Matrix.col U i) * rank_1_proj (Matrix.col U i) =\n  rank_1_proj (Matrix.col U i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) * rank_1_proj (zero_col U i) =\n       rank_1_proj (zero_col U i)", "ultimately"], ["proof (chain)\npicking this:\n  rank_1_proj (zero_col U i) = rank_1_proj (Matrix.col U i)\n  rank_1_proj (Matrix.col U i) * rank_1_proj (Matrix.col U i) =\n  rank_1_proj (Matrix.col U i)", "show \"rank_1_proj (zero_col U i) * rank_1_proj (zero_col U i) = \n        rank_1_proj (zero_col U i)\""], ["proof (prove)\nusing this:\n  rank_1_proj (zero_col U i) = rank_1_proj (Matrix.col U i)\n  rank_1_proj (Matrix.col U i) * rank_1_proj (Matrix.col U i) =\n  rank_1_proj (Matrix.col U i)\n\ngoal (1 subgoal):\n 1. rank_1_proj (zero_col U i) * rank_1_proj (zero_col U i) =\n    rank_1_proj (zero_col U i)", "by simp"], ["proof (state)\nthis:\n  rank_1_proj (zero_col U i) * rank_1_proj (zero_col U i) =\n  rank_1_proj (zero_col U i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i2 \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n  rank_1_proj (zero_col U ?i2) * rank_1_proj (zero_col U ?i2) =\n  rank_1_proj (zero_col U ?i2)\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) \\<in> fc_mats\n 2. \\<And>i ja.\n       \\<lbrakk>i \\<in> diag_elem_indices (diag_idx_to_el B j) B;\n        ja \\<in> diag_elem_indices (diag_idx_to_el B j) B;\n        i \\<noteq> ja\\<rbrakk>\n       \\<Longrightarrow> rank_1_proj (zero_col U i) *\n                         rank_1_proj (zero_col U ja) =\n                         0\\<^sub>m dimR dimR", "show \"\\<And>i. i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow> \n      rank_1_proj (zero_col U i) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) \\<in> fc_mats", "using zero_col_dim assms fc_mats_carrier dim_eq"], ["proof (prove)\nusing this:\n  ?U \\<in> fc_mats \\<Longrightarrow> dim_vec (zero_col ?U ?i) = dimR\n  Complex_Matrix.unitary U\n  U \\<in> fc_mats\n  B \\<in> fc_mats\n  j < dist_el_card B\n  fc_mats = carrier_mat dimR dimC\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) \\<in> fc_mats", "by (metis rank_1_proj_carrier)"], ["proof (state)\nthis:\n  ?i2 \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n  rank_1_proj (zero_col U ?i2) \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. \\<And>i ja.\n       \\<lbrakk>i \\<in> diag_elem_indices (diag_idx_to_el B j) B;\n        ja \\<in> diag_elem_indices (diag_idx_to_el B j) B;\n        i \\<noteq> ja\\<rbrakk>\n       \\<Longrightarrow> rank_1_proj (zero_col U i) *\n                         rank_1_proj (zero_col U ja) =\n                         0\\<^sub>m dimR dimR", "have \"\\<And>i. i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow> i < dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       i < dimR", "using diag_elem_indices_elem fc_mats_carrier assms dim_eq"], ["proof (prove)\nusing this:\n  ?a \\<in> diag_elem_indices ?x ?B \\<Longrightarrow>\n  ?a < dim_row ?B \\<and> ?B $$ (?a, ?a) = ?x\n  fc_mats = carrier_mat dimR dimC\n  Complex_Matrix.unitary U\n  U \\<in> fc_mats\n  B \\<in> fc_mats\n  j < dist_el_card B\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       i < dimR", "by (metis carrier_matD(1))"], ["proof (state)\nthis:\n  ?i2 \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n  ?i2 < dimR\n\ngoal (1 subgoal):\n 1. \\<And>i ja.\n       \\<lbrakk>i \\<in> diag_elem_indices (diag_idx_to_el B j) B;\n        ja \\<in> diag_elem_indices (diag_idx_to_el B j) B;\n        i \\<noteq> ja\\<rbrakk>\n       \\<Longrightarrow> rank_1_proj (zero_col U i) *\n                         rank_1_proj (zero_col U ja) =\n                         0\\<^sub>m dimR dimR", "thus \"\\<And>i ja.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       ja \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       i \\<noteq> ja \\<Longrightarrow> rank_1_proj (zero_col U i) * rank_1_proj (zero_col U ja) = 0\\<^sub>m dimR dimR\""], ["proof (prove)\nusing this:\n  ?i2 \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n  ?i2 < dimR\n\ngoal (1 subgoal):\n 1. \\<And>i ja.\n       \\<lbrakk>i \\<in> diag_elem_indices (diag_idx_to_el B j) B;\n        ja \\<in> diag_elem_indices (diag_idx_to_el B j) B;\n        i \\<noteq> ja\\<rbrakk>\n       \\<Longrightarrow> rank_1_proj (zero_col U i) *\n                         rank_1_proj (zero_col U ja) =\n                         0\\<^sub>m dimR dimR", "using rank_1_proj_unitary_ne"], ["proof (prove)\nusing this:\n  ?i2 \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n  ?i2 < dimR\n  \\<lbrakk>?A \\<in> fc_mats; Complex_Matrix.unitary ?A; ?j < dimR;\n   ?k < dimR; ?j \\<noteq> ?k\\<rbrakk>\n  \\<Longrightarrow> rank_1_proj (Matrix.col ?A ?j) *\n                    rank_1_proj (Matrix.col ?A ?k) =\n                    0\\<^sub>m dimR dimR\n\ngoal (1 subgoal):\n 1. \\<And>i ja.\n       \\<lbrakk>i \\<in> diag_elem_indices (diag_idx_to_el B j) B;\n        ja \\<in> diag_elem_indices (diag_idx_to_el B j) B;\n        i \\<noteq> ja\\<rbrakk>\n       \\<Longrightarrow> rank_1_proj (zero_col U i) *\n                         rank_1_proj (zero_col U ja) =\n                         0\\<^sub>m dimR dimR", "by (simp add: assms(1) assms(2) zero_col_col)"], ["proof (state)\nthis:\n  \\<lbrakk>?i2 \\<in> diag_elem_indices (diag_idx_to_el B j) B;\n   ?ja2 \\<in> diag_elem_indices (diag_idx_to_el B j) B;\n   ?i2 \\<noteq> ?ja2\\<rbrakk>\n  \\<Longrightarrow> rank_1_proj (zero_col U ?i2) *\n                    rank_1_proj (zero_col U ?ja2) =\n                    0\\<^sub>m dimR dimR\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Pj * Pj = Pj\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (mk_meas_outcome B U j) *\n    meas_outcome_prj (mk_meas_outcome B U j) =\n    meas_outcome_prj (mk_meas_outcome B U j)", "thus \"meas_outcome_prj (mk_meas_outcome B U j) * \n    meas_outcome_prj (mk_meas_outcome B U j) = \n    meas_outcome_prj (mk_meas_outcome B U j)\""], ["proof (prove)\nusing this:\n  Pj * Pj = Pj\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (mk_meas_outcome B U j) *\n    meas_outcome_prj (mk_meas_outcome B U j) =\n    meas_outcome_prj (mk_meas_outcome B U j)", "using sneq"], ["proof (prove)\nusing this:\n  Pj * Pj = Pj\n  meas_outcome_prj (mk_meas_outcome B U j) = Pj\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (mk_meas_outcome B U j) *\n    meas_outcome_prj (mk_meas_outcome B U j) =\n    meas_outcome_prj (mk_meas_outcome B U j)", "by simp"], ["proof (state)\nthis:\n  meas_outcome_prj (mk_meas_outcome B U j) *\n  meas_outcome_prj (mk_meas_outcome B U j) =\n  meas_outcome_prj (mk_meas_outcome B U j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) mk_meas_outcome_fst_inj:\n  assumes \"\\<forall>i < (dim_row B). B$$(i,i) \\<in> Reals\"\n  shows \"inj_on (\\<lambda>i. meas_outcome_val ((mk_meas_outcome B U) i)) {..<dist_el_card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>i. meas_outcome_val (mk_meas_outcome B U i))\n     {..<dist_el_card B}", "unfolding inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{..<dist_el_card B}.\n       \\<forall>y\\<in>{..<dist_el_card B}.\n          meas_outcome_val (mk_meas_outcome B U x) =\n          meas_outcome_val (mk_meas_outcome B U y) \\<longrightarrow>\n          x = y", "proof (intro ballI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {..<dist_el_card B}; y \\<in> {..<dist_el_card B};\n        meas_outcome_val (mk_meas_outcome B U x) =\n        meas_outcome_val (mk_meas_outcome B U y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {..<dist_el_card B}; y \\<in> {..<dist_el_card B};\n        meas_outcome_val (mk_meas_outcome B U x) =\n        meas_outcome_val (mk_meas_outcome B U y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume  \"x \\<in> {..<dist_el_card B}\" and \"y \\<in> {..<dist_el_card B}\" \n    and \"meas_outcome_val (mk_meas_outcome B U x) = \n    meas_outcome_val (mk_meas_outcome B U y)\""], ["proof (state)\nthis:\n  x \\<in> {..<dist_el_card B}\n  y \\<in> {..<dist_el_card B}\n  meas_outcome_val (mk_meas_outcome B U x) =\n  meas_outcome_val (mk_meas_outcome B U y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {..<dist_el_card B}; y \\<in> {..<dist_el_card B};\n        meas_outcome_val (mk_meas_outcome B U x) =\n        meas_outcome_val (mk_meas_outcome B U y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "note xy = this"], ["proof (state)\nthis:\n  x \\<in> {..<dist_el_card B}\n  y \\<in> {..<dist_el_card B}\n  meas_outcome_val (mk_meas_outcome B U x) =\n  meas_outcome_val (mk_meas_outcome B U y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {..<dist_el_card B}; y \\<in> {..<dist_el_card B};\n        meas_outcome_val (mk_meas_outcome B U x) =\n        meas_outcome_val (mk_meas_outcome B U y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"diag_idx_to_el B x = Re (diag_idx_to_el B x)\""], ["proof (prove)\nusing this:\n  x \\<in> {..<dist_el_card B}\n  y \\<in> {..<dist_el_card B}\n  meas_outcome_val (mk_meas_outcome B U x) =\n  meas_outcome_val (mk_meas_outcome B U y)\n\ngoal (1 subgoal):\n 1. diag_idx_to_el B x = complex_of_real (Re (diag_idx_to_el B x))", "using assms diag_idx_to_el_real"], ["proof (prove)\nusing this:\n  x \\<in> {..<dist_el_card B}\n  y \\<in> {..<dist_el_card B}\n  meas_outcome_val (mk_meas_outcome B U x) =\n  meas_outcome_val (mk_meas_outcome B U y)\n  \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>\n  \\<lbrakk>\\<forall>i<dim_row ?B. ?B $$ (i, i) \\<in> \\<real>;\n   ?i < dist_el_card ?B\\<rbrakk>\n  \\<Longrightarrow> complex_of_real (Re (diag_idx_to_el ?B ?i)) =\n                    diag_idx_to_el ?B ?i\n\ngoal (1 subgoal):\n 1. diag_idx_to_el B x = complex_of_real (Re (diag_idx_to_el B x))", "by simp"], ["proof (state)\nthis:\n  diag_idx_to_el B x = complex_of_real (Re (diag_idx_to_el B x))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {..<dist_el_card B}; y \\<in> {..<dist_el_card B};\n        meas_outcome_val (mk_meas_outcome B U x) =\n        meas_outcome_val (mk_meas_outcome B U y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "also"], ["proof (state)\nthis:\n  diag_idx_to_el B x = complex_of_real (Re (diag_idx_to_el B x))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {..<dist_el_card B}; y \\<in> {..<dist_el_card B};\n        meas_outcome_val (mk_meas_outcome B U x) =\n        meas_outcome_val (mk_meas_outcome B U y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"... = Re (diag_idx_to_el B y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (Re (diag_idx_to_el B x)) =\n    complex_of_real (Re (diag_idx_to_el B y))", "using xy"], ["proof (prove)\nusing this:\n  x \\<in> {..<dist_el_card B}\n  y \\<in> {..<dist_el_card B}\n  meas_outcome_val (mk_meas_outcome B U x) =\n  meas_outcome_val (mk_meas_outcome B U y)\n\ngoal (1 subgoal):\n 1. complex_of_real (Re (diag_idx_to_el B x)) =\n    complex_of_real (Re (diag_idx_to_el B y))", "unfolding mk_meas_outcome_def meas_outcome_val_def"], ["proof (prove)\nusing this:\n  x \\<in> {..<dist_el_card B}\n  y \\<in> {..<dist_el_card B}\n  fst (Re (diag_idx_to_el B x),\n       project_vecs (zero_col U)\n        (diag_elem_indices (diag_idx_to_el B x) B)) =\n  fst (Re (diag_idx_to_el B y),\n       project_vecs (zero_col U) (diag_elem_indices (diag_idx_to_el B y) B))\n\ngoal (1 subgoal):\n 1. complex_of_real (Re (diag_idx_to_el B x)) =\n    complex_of_real (Re (diag_idx_to_el B y))", "by simp"], ["proof (state)\nthis:\n  complex_of_real (Re (diag_idx_to_el B x)) =\n  complex_of_real (Re (diag_idx_to_el B y))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {..<dist_el_card B}; y \\<in> {..<dist_el_card B};\n        meas_outcome_val (mk_meas_outcome B U x) =\n        meas_outcome_val (mk_meas_outcome B U y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "also"], ["proof (state)\nthis:\n  complex_of_real (Re (diag_idx_to_el B x)) =\n  complex_of_real (Re (diag_idx_to_el B y))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {..<dist_el_card B}; y \\<in> {..<dist_el_card B};\n        meas_outcome_val (mk_meas_outcome B U x) =\n        meas_outcome_val (mk_meas_outcome B U y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"... = diag_idx_to_el B y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (Re (diag_idx_to_el B y)) = diag_idx_to_el B y", "using assms diag_idx_to_el_real xy"], ["proof (prove)\nusing this:\n  \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>\n  \\<lbrakk>\\<forall>i<dim_row ?B. ?B $$ (i, i) \\<in> \\<real>;\n   ?i < dist_el_card ?B\\<rbrakk>\n  \\<Longrightarrow> complex_of_real (Re (diag_idx_to_el ?B ?i)) =\n                    diag_idx_to_el ?B ?i\n  x \\<in> {..<dist_el_card B}\n  y \\<in> {..<dist_el_card B}\n  meas_outcome_val (mk_meas_outcome B U x) =\n  meas_outcome_val (mk_meas_outcome B U y)\n\ngoal (1 subgoal):\n 1. complex_of_real (Re (diag_idx_to_el B y)) = diag_idx_to_el B y", "by simp"], ["proof (state)\nthis:\n  complex_of_real (Re (diag_idx_to_el B y)) = diag_idx_to_el B y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {..<dist_el_card B}; y \\<in> {..<dist_el_card B};\n        meas_outcome_val (mk_meas_outcome B U x) =\n        meas_outcome_val (mk_meas_outcome B U y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "finally"], ["proof (chain)\npicking this:\n  diag_idx_to_el B x = diag_idx_to_el B y", "have \"diag_idx_to_el B x = diag_idx_to_el B y\""], ["proof (prove)\nusing this:\n  diag_idx_to_el B x = diag_idx_to_el B y\n\ngoal (1 subgoal):\n 1. diag_idx_to_el B x = diag_idx_to_el B y", "."], ["proof (state)\nthis:\n  diag_idx_to_el B x = diag_idx_to_el B y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {..<dist_el_card B}; y \\<in> {..<dist_el_card B};\n        meas_outcome_val (mk_meas_outcome B U x) =\n        meas_outcome_val (mk_meas_outcome B U y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "thus \"x = y \""], ["proof (prove)\nusing this:\n  diag_idx_to_el B x = diag_idx_to_el B y\n\ngoal (1 subgoal):\n 1. x = y", "using diag_idx_to_el_less_inj xy"], ["proof (prove)\nusing this:\n  diag_idx_to_el B x = diag_idx_to_el B y\n  \\<lbrakk>?i < dist_el_card ?B; ?j < dist_el_card ?B;\n   diag_idx_to_el ?B ?i = diag_idx_to_el ?B ?j\\<rbrakk>\n  \\<Longrightarrow> ?i = ?j\n  x \\<in> {..<dist_el_card B}\n  y \\<in> {..<dist_el_card B}\n  meas_outcome_val (mk_meas_outcome B U x) =\n  meas_outcome_val (mk_meas_outcome B U y)\n\ngoal (1 subgoal):\n 1. x = y", "by simp"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) mk_meas_outcome_fst_bij:\n  assumes \"\\<forall>i < (dim_row B). B$$(i,i) \\<in> Reals\"\n  shows \"bij_betw (\\<lambda>i. meas_outcome_val ((mk_meas_outcome B U) i)) {..< dist_el_card B} \n    {Re x|x. x\\<in> diag_elems B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>i. meas_outcome_val (mk_meas_outcome B U i))\n     {..<dist_el_card B} {Re x |x. x \\<in> diag_elems B}", "unfolding bij_betw_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>i. meas_outcome_val (mk_meas_outcome B U i))\n     {..<dist_el_card B} \\<and>\n    (\\<lambda>i. meas_outcome_val (mk_meas_outcome B U i)) `\n    {..<dist_el_card B} =\n    {Re x |x. x \\<in> diag_elems B}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. inj_on (\\<lambda>i. meas_outcome_val (mk_meas_outcome B U i))\n     {..<dist_el_card B}\n 2. (\\<lambda>i. meas_outcome_val (mk_meas_outcome B U i)) `\n    {..<dist_el_card B} =\n    {Re x |x. x \\<in> diag_elems B}", "have \"inj_on (\\<lambda>x. (meas_outcome_val (mk_meas_outcome B U x))) {..<dist_el_card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>x. meas_outcome_val (mk_meas_outcome B U x))\n     {..<dist_el_card B}", "using assms mk_meas_outcome_fst_inj"], ["proof (prove)\nusing this:\n  \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>\n  \\<forall>i<dim_row ?B. ?B $$ (i, i) \\<in> \\<real> \\<Longrightarrow>\n  inj_on (\\<lambda>i. meas_outcome_val (mk_meas_outcome ?B ?U i))\n   {..<dist_el_card ?B}\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>x. meas_outcome_val (mk_meas_outcome B U x))\n     {..<dist_el_card B}", "by simp"], ["proof (state)\nthis:\n  inj_on (\\<lambda>x. meas_outcome_val (mk_meas_outcome B U x))\n   {..<dist_el_card B}\n\ngoal (2 subgoals):\n 1. inj_on (\\<lambda>i. meas_outcome_val (mk_meas_outcome B U i))\n     {..<dist_el_card B}\n 2. (\\<lambda>i. meas_outcome_val (mk_meas_outcome B U i)) `\n    {..<dist_el_card B} =\n    {Re x |x. x \\<in> diag_elems B}", "moreover"], ["proof (state)\nthis:\n  inj_on (\\<lambda>x. meas_outcome_val (mk_meas_outcome B U x))\n   {..<dist_el_card B}\n\ngoal (2 subgoals):\n 1. inj_on (\\<lambda>i. meas_outcome_val (mk_meas_outcome B U i))\n     {..<dist_el_card B}\n 2. (\\<lambda>i. meas_outcome_val (mk_meas_outcome B U i)) `\n    {..<dist_el_card B} =\n    {Re x |x. x \\<in> diag_elems B}", "have  \"{Re x|x. x\\<in> diag_elems B} = diag_elems B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {complex_of_real (Re x) |x. x \\<in> diag_elems B} = diag_elems B", "using diag_elems_Re[of B] assms"], ["proof (prove)\nusing this:\n  \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real> \\<Longrightarrow>\n  {complex_of_real (Re x) |x. x \\<in> diag_elems B} = diag_elems B\n  \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. {complex_of_real (Re x) |x. x \\<in> diag_elems B} = diag_elems B", "by simp"], ["proof (state)\nthis:\n  {complex_of_real (Re x) |x. x \\<in> diag_elems B} = diag_elems B\n\ngoal (2 subgoals):\n 1. inj_on (\\<lambda>i. meas_outcome_val (mk_meas_outcome B U i))\n     {..<dist_el_card B}\n 2. (\\<lambda>i. meas_outcome_val (mk_meas_outcome B U i)) `\n    {..<dist_el_card B} =\n    {Re x |x. x \\<in> diag_elems B}", "ultimately"], ["proof (chain)\npicking this:\n  inj_on (\\<lambda>x. meas_outcome_val (mk_meas_outcome B U x))\n   {..<dist_el_card B}\n  {complex_of_real (Re x) |x. x \\<in> diag_elems B} = diag_elems B", "show \"inj_on (\\<lambda>x. meas_outcome_val (mk_meas_outcome B U x)) \n    {..<dist_el_card B}\""], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>x. meas_outcome_val (mk_meas_outcome B U x))\n   {..<dist_el_card B}\n  {complex_of_real (Re x) |x. x \\<in> diag_elems B} = diag_elems B\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>x. meas_outcome_val (mk_meas_outcome B U x))\n     {..<dist_el_card B}", "by simp"], ["proof (state)\nthis:\n  inj_on (\\<lambda>x. meas_outcome_val (mk_meas_outcome B U x))\n   {..<dist_el_card B}\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. meas_outcome_val (mk_meas_outcome B U i)) `\n    {..<dist_el_card B} =\n    {Re x |x. x \\<in> diag_elems B}", "show \"(\\<lambda>i. meas_outcome_val (mk_meas_outcome B U i)) ` {..<dist_el_card B} = \n    {Re x |x. x \\<in> diag_elems B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. meas_outcome_val (mk_meas_outcome B U i)) `\n    {..<dist_el_card B} =\n    {Re x |x. x \\<in> diag_elems B}", "unfolding meas_outcome_val_def mk_meas_outcome_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i.\n        fst (Re (diag_idx_to_el B i),\n             project_vecs (zero_col U)\n              (diag_elem_indices (diag_idx_to_el B i) B))) `\n    {..<dist_el_card B} =\n    {Re x |x. x \\<in> diag_elems B}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>i.\n        fst (Re (diag_idx_to_el B i),\n             project_vecs (zero_col U)\n              (diag_elem_indices (diag_idx_to_el B i) B))) `\n    {..<dist_el_card B}\n    \\<subseteq> {Re x |x. x \\<in> diag_elems B}\n 2. {Re x |x. x \\<in> diag_elems B}\n    \\<subseteq> (\\<lambda>i.\n                    fst (Re (diag_idx_to_el B i),\n                         project_vecs (zero_col U)\n                          (diag_elem_indices (diag_idx_to_el B i) B))) `\n                {..<dist_el_card B}", "show \"(\\<lambda>i. fst (Re (diag_idx_to_el B i), project_vecs (zero_col U) \n      (diag_elem_indices (diag_idx_to_el B i) B))) ` {..<dist_el_card B} \\<subseteq> \n      {Re x |x. x \\<in> diag_elems B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i.\n        fst (Re (diag_idx_to_el B i),\n             project_vecs (zero_col U)\n              (diag_elem_indices (diag_idx_to_el B i) B))) `\n    {..<dist_el_card B}\n    \\<subseteq> {Re x |x. x \\<in> diag_elems B}", "using diag_idx_to_el_bij[of B] bij_betw_apply"], ["proof (prove)\nusing this:\n  bij_betw (diag_idx_to_el B) {..<dist_el_card B} (diag_elems B)\n  \\<lbrakk>bij_betw ?f ?A ?B; ?a \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?f ?a \\<in> ?B\n\ngoal (1 subgoal):\n 1. (\\<lambda>i.\n        fst (Re (diag_idx_to_el B i),\n             project_vecs (zero_col U)\n              (diag_elem_indices (diag_idx_to_el B i) B))) `\n    {..<dist_el_card B}\n    \\<subseteq> {Re x |x. x \\<in> diag_elems B}", "by fastforce"], ["proof (state)\nthis:\n  (\\<lambda>i.\n      fst (Re (diag_idx_to_el B i),\n           project_vecs (zero_col U)\n            (diag_elem_indices (diag_idx_to_el B i) B))) `\n  {..<dist_el_card B}\n  \\<subseteq> {Re x |x. x \\<in> diag_elems B}\n\ngoal (1 subgoal):\n 1. {Re x |x. x \\<in> diag_elems B}\n    \\<subseteq> (\\<lambda>i.\n                    fst (Re (diag_idx_to_el B i),\n                         project_vecs (zero_col U)\n                          (diag_elem_indices (diag_idx_to_el B i) B))) `\n                {..<dist_el_card B}", "show \"{Re x |x. x \\<in> diag_elems B}\n    \\<subseteq> (\\<lambda>i. fst (Re (diag_idx_to_el B i), \n      project_vecs (zero_col U) (diag_elem_indices (diag_idx_to_el B i) B))) ` \n      {..<dist_el_card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {Re x |x. x \\<in> diag_elems B}\n    \\<subseteq> (\\<lambda>i.\n                    fst (Re (diag_idx_to_el B i),\n                         project_vecs (zero_col U)\n                          (diag_elem_indices (diag_idx_to_el B i) B))) `\n                {..<dist_el_card B}", "using diag_idx_to_el_less_surj"], ["proof (prove)\nusing this:\n  ?x \\<in> diag_elems ?B \\<Longrightarrow>\n  \\<exists>k\\<in>{..<dist_el_card ?B}. ?x = diag_idx_to_el ?B k\n\ngoal (1 subgoal):\n 1. {Re x |x. x \\<in> diag_elems B}\n    \\<subseteq> (\\<lambda>i.\n                    fst (Re (diag_idx_to_el B i),\n                         project_vecs (zero_col U)\n                          (diag_elem_indices (diag_idx_to_el B i) B))) `\n                {..<dist_el_card B}", "by fastforce"], ["proof (state)\nthis:\n  {Re x |x. x \\<in> diag_elems B}\n  \\<subseteq> (\\<lambda>i.\n                  fst (Re (diag_idx_to_el B i),\n                       project_vecs (zero_col U)\n                        (diag_elem_indices (diag_idx_to_el B i) B))) `\n              {..<dist_el_card B}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>i. meas_outcome_val (mk_meas_outcome B U i)) `\n  {..<dist_el_card B} =\n  {Re x |x. x \\<in> diag_elems B}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Projective measurement associated with an observable\\<close>"], ["", "definition eigvals where\n\"eigvals M = (SOME as. char_poly M = (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) \\<and> length as = dim_row M)\""], ["", "lemma eigvals_poly_length:\n  assumes \"(M::complex Matrix.mat) \\<in> carrier_mat n n\"\n  shows \"char_poly M = (\\<Prod>a\\<leftarrow>(eigvals M). [:- a, 1:]) \\<and> length (eigvals M) = dim_row M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. char_poly M = (\\<Prod>a\\<leftarrow>eigvals M. [:- a, 1:]) \\<and>\n    length (eigvals M) = dim_row M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. char_poly M = (\\<Prod>a\\<leftarrow>eigvals M. [:- a, 1:]) \\<and>\n    length (eigvals M) = dim_row M", "let ?V = \"SOME as. char_poly M = (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) \\<and> length as = dim_row M\""], ["proof (state)\ngoal (1 subgoal):\n 1. char_poly M = (\\<Prod>a\\<leftarrow>eigvals M. [:- a, 1:]) \\<and>\n    length (eigvals M) = dim_row M", "have vprop: \"char_poly M = (\\<Prod>a\\<leftarrow>?V. [:- a, 1:]) \\<and> length ?V = dim_row M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. char_poly M =\n    (\\<Prod>a\\<leftarrow>(SOME as.\n                             char_poly M =\n                             (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) \\<and>\n                             length as = dim_row M). [:- a, 1:]) \\<and>\n    length\n     (SOME as.\n         char_poly M = (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) \\<and>\n         length as = dim_row M) =\n    dim_row M", "using \n      someI_ex[of \"\\<lambda>as. char_poly M = (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) \\<and> length as = dim_row M\"]\n     complex_mat_char_poly_factorizable assms"], ["proof (prove)\nusing this:\n  \\<exists>x.\n     char_poly M = (\\<Prod>a\\<leftarrow>x. [:- a, 1:]) \\<and>\n     length x = dim_row M \\<Longrightarrow>\n  char_poly M =\n  (\\<Prod>a\\<leftarrow>(SOME x.\n                           char_poly M =\n                           (\\<Prod>a\\<leftarrow>x. [:- a, 1:]) \\<and>\n                           length x = dim_row M). [:- a, 1:]) \\<and>\n  length\n   (SOME x.\n       char_poly M = (\\<Prod>a\\<leftarrow>x. [:- a, 1:]) \\<and>\n       length x = dim_row M) =\n  dim_row M\n  ?A \\<in> carrier_mat ?n ?n \\<Longrightarrow>\n  \\<exists>as.\n     char_poly ?A = (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) \\<and>\n     length as = ?n\n  M \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. char_poly M =\n    (\\<Prod>a\\<leftarrow>(SOME as.\n                             char_poly M =\n                             (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) \\<and>\n                             length as = dim_row M). [:- a, 1:]) \\<and>\n    length\n     (SOME as.\n         char_poly M = (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) \\<and>\n         length as = dim_row M) =\n    dim_row M", "by blast"], ["proof (state)\nthis:\n  char_poly M =\n  (\\<Prod>a\\<leftarrow>(SOME as.\n                           char_poly M =\n                           (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) \\<and>\n                           length as = dim_row M). [:- a, 1:]) \\<and>\n  length\n   (SOME as.\n       char_poly M = (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) \\<and>\n       length as = dim_row M) =\n  dim_row M\n\ngoal (1 subgoal):\n 1. char_poly M = (\\<Prod>a\\<leftarrow>eigvals M. [:- a, 1:]) \\<and>\n    length (eigvals M) = dim_row M", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. char_poly M = (\\<Prod>a\\<leftarrow>eigvals M. [:- a, 1:]) \\<and>\n    length (eigvals M) = dim_row M", "by (metis (no_types) eigvals_def vprop)"], ["proof (state)\nthis:\n  char_poly M = (\\<Prod>a\\<leftarrow>eigvals M. [:- a, 1:]) \\<and>\n  length (eigvals M) = dim_row M\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We define the spectrum of a matrix $A$: this is its set of eigenvalues; its elements are\nroots of the characteristic polynomial of $A$.\\<close>"], ["", "definition spectrum where\n\"spectrum M = set (eigvals M)\""], ["", "lemma spectrum_finite:\n  shows \"finite (spectrum M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (spectrum M)", "unfolding spectrum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (set (eigvals M))", "by simp"], ["", "lemma spectrum_char_poly_root: \n  fixes A::\"complex Matrix.mat\"\n  assumes \"A\\<in> carrier_mat n n\"\nand \"k \\<in> spectrum A\"\nshows \"poly (char_poly A) k = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly (char_poly A) k = 0", "using eigvals_poly_length[of A n] assms"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n n \\<Longrightarrow>\n  char_poly A = (\\<Prod>a\\<leftarrow>eigvals A. [:- a, 1:]) \\<and>\n  length (eigvals A) = dim_row A\n  A \\<in> carrier_mat n n\n  k \\<in> spectrum A\n\ngoal (1 subgoal):\n 1. poly (char_poly A) k = 0", "unfolding spectrum_def  eigenvalue_root_char_poly"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n n \\<Longrightarrow>\n  char_poly A = (\\<Prod>a\\<leftarrow>eigvals A. [:- a, 1:]) \\<and>\n  length (eigvals A) = dim_row A\n  A \\<in> carrier_mat n n\n  k \\<in> set (eigvals A)\n\ngoal (1 subgoal):\n 1. poly (char_poly A) k = 0", "by (simp add: linear_poly_root)"], ["", "lemma spectrum_eigenvalues:\n  fixes A::\"complex Matrix.mat\"\n  assumes \"A\\<in> carrier_mat n n\"\nand \"k\\<in> spectrum A\"\nshows \"eigenvalue A k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eigenvalue A k", "using eigenvalue_root_char_poly[of A n k] \n    spectrum_char_poly_root[of A n k] assms"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n n \\<Longrightarrow>\n  eigenvalue A k = (poly (char_poly A) k = 0)\n  \\<lbrakk>A \\<in> carrier_mat n n; k \\<in> spectrum A\\<rbrakk>\n  \\<Longrightarrow> poly (char_poly A) k = 0\n  A \\<in> carrier_mat n n\n  k \\<in> spectrum A\n\ngoal (1 subgoal):\n 1. eigenvalue A k", "by simp"], ["", "text \\<open>The main result that is used to construct a projective measurement for a Hermitian matrix\nis that it is always possible to decompose it as $A = U*B*U^\\dagger$, where $B$ is diagonal and\nonly contains real elements, and $U$ is unitary.\\<close>"], ["", "definition hermitian_decomp where\n\"hermitian_decomp A B U \\<equiv> similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and> diagonal_mat B \\<and> \n    diag_mat B = (eigvals A) \\<and> unitary U \\<and> (\\<forall>i < dim_row B. B$$(i, i) \\<in> Reals)\""], ["", "lemma hermitian_decomp_sim: \n  assumes \"hermitian_decomp A B U\"\n  shows \"similar_mat_wit A B U (Complex_Matrix.adjoint U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. similar_mat_wit A B U (Complex_Matrix.adjoint U)", "using assms"], ["proof (prove)\nusing this:\n  hermitian_decomp A B U\n\ngoal (1 subgoal):\n 1. similar_mat_wit A B U (Complex_Matrix.adjoint U)", "unfolding hermitian_decomp_def"], ["proof (prove)\nusing this:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. similar_mat_wit A B U (Complex_Matrix.adjoint U)", "by simp"], ["", "lemma hermitian_decomp_diag_mat: \n  assumes \"hermitian_decomp A B U\"\n  shows \"diagonal_mat B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diagonal_mat B", "using assms"], ["proof (prove)\nusing this:\n  hermitian_decomp A B U\n\ngoal (1 subgoal):\n 1. diagonal_mat B", "unfolding hermitian_decomp_def"], ["proof (prove)\nusing this:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. diagonal_mat B", "by simp"], ["", "lemma hermitian_decomp_eigenvalues: \n  assumes \"hermitian_decomp A B U\"\n  shows \"diag_mat B = (eigvals A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diag_mat B = eigvals A", "using assms"], ["proof (prove)\nusing this:\n  hermitian_decomp A B U\n\ngoal (1 subgoal):\n 1. diag_mat B = eigvals A", "unfolding hermitian_decomp_def"], ["proof (prove)\nusing this:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. diag_mat B = eigvals A", "by simp"], ["", "lemma hermitian_decomp_unitary: \n  assumes \"hermitian_decomp A B U\"\n  shows \"unitary U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.unitary U", "using assms"], ["proof (prove)\nusing this:\n  hermitian_decomp A B U\n\ngoal (1 subgoal):\n 1. Complex_Matrix.unitary U", "unfolding hermitian_decomp_def"], ["proof (prove)\nusing this:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. Complex_Matrix.unitary U", "by simp"], ["", "lemma hermitian_decomp_real_eigvals: \n  assumes \"hermitian_decomp A B U\"\n  shows \"\\<forall>i < dim_row B. B$$(i, i) \\<in> Reals\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>", "using assms"], ["proof (prove)\nusing this:\n  hermitian_decomp A B U\n\ngoal (1 subgoal):\n 1. \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>", "unfolding hermitian_decomp_def"], ["proof (prove)\nusing this:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>", "by simp"], ["", "lemma hermitian_decomp_dim_carrier: \n  assumes \"hermitian_decomp A B U\"\n  shows \"B \\<in> carrier_mat (dim_row A) (dim_col A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> carrier_mat (dim_row A) (dim_col A)", "using assms"], ["proof (prove)\nusing this:\n  hermitian_decomp A B U\n\ngoal (1 subgoal):\n 1. B \\<in> carrier_mat (dim_row A) (dim_col A)", "unfolding hermitian_decomp_def similar_mat_wit_def"], ["proof (prove)\nusing this:\n  (let n = dim_row A\n   in {A, B, U, Complex_Matrix.adjoint U} \\<subseteq> carrier_mat n n \\<and>\n      U * Complex_Matrix.adjoint U = 1\\<^sub>m n \\<and>\n      Complex_Matrix.adjoint U * U = 1\\<^sub>m n \\<and>\n      A = U * B * Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. B \\<in> carrier_mat (dim_row A) (dim_col A)", "by (metis (full_types) index_mult_mat(3) index_one_mat(3) insert_subset)"], ["", "lemma similar_mat_wit_dim_row:\n  assumes \"similar_mat_wit A B Q R\"\n  shows \"dim_row B = dim_row A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row B = dim_row A", "using assms Let_def"], ["proof (prove)\nusing this:\n  similar_mat_wit A B Q R\n  Let ?s ?f \\<equiv> ?f ?s\n\ngoal (1 subgoal):\n 1. dim_row B = dim_row A", "unfolding  similar_mat_wit_def"], ["proof (prove)\nusing this:\n  let n = dim_row A\n  in {A, B, Q, R} \\<subseteq> carrier_mat n n \\<and>\n     Q * R = 1\\<^sub>m n \\<and> R * Q = 1\\<^sub>m n \\<and> A = Q * B * R\n  Let ?s ?f \\<equiv> ?f ?s\n\ngoal (1 subgoal):\n 1. dim_row B = dim_row A", "by (meson carrier_matD(1) insert_subset)"], ["", "lemma (in cpx_sq_mat) hermitian_schur_decomp:\n  assumes \"hermitian A\"\n  and \"A\\<in> fc_mats\"\nobtains B U where \"hermitian_decomp A B U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have es: \"char_poly A = (\\<Prod> (e :: complex) \\<leftarrow> (eigvals A). [:- e, 1:])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])", "using assms fc_mats_carrier eigvals_poly_length dim_eq"], ["proof (prove)\nusing this:\n  hermitian A\n  A \\<in> fc_mats\n  fc_mats = carrier_mat dimR dimC\n  ?M \\<in> carrier_mat ?n ?n \\<Longrightarrow>\n  char_poly ?M = (\\<Prod>a\\<leftarrow>eigvals ?M. [:- a, 1:]) \\<and>\n  length (eigvals ?M) = dim_row ?M\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])", "by auto"], ["proof (state)\nthis:\n  char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain B U Q where us: \"unitary_schur_decomposition A (eigvals A) = (B,U,Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B U Q.\n        unitary_schur_decomposition A (eigvals A) =\n        (B, U, Q) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"unitary_schur_decomposition A (eigvals A)\")"], ["proof (state)\nthis:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence pr: \"similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and> diagonal_mat B \\<and> \n      diag_mat B = (eigvals A) \\<and> unitary U \\<and> (\\<forall>i < dimR. B$$(i, i) \\<in> Reals)\""], ["proof (prove)\nusing this:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n    diagonal_mat B \\<and>\n    diag_mat B = eigvals A \\<and>\n    Complex_Matrix.unitary U \\<and>\n    (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)", "using hermitian_eigenvalue_real assms fc_mats_carrier es dim_eq"], ["proof (prove)\nusing this:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n  \\<lbrakk>?A \\<in> carrier_mat ?n ?n; hermitian ?A;\n   char_poly ?A = (\\<Prod>e\\<leftarrow>?es. [:- e, 1:]);\n   unitary_schur_decomposition ?A ?es = (?B, ?P, ?Q)\\<rbrakk>\n  \\<Longrightarrow> similar_mat_wit ?A ?B ?P\n                     (Complex_Matrix.adjoint ?P) \\<and>\n                    diagonal_mat ?B \\<and>\n                    diag_mat ?B = ?es \\<and>\n                    Complex_Matrix.unitary ?P \\<and>\n                    (\\<forall>i<?n. ?B $$ (i, i) \\<in> \\<real>)\n  hermitian A\n  A \\<in> fc_mats\n  fc_mats = carrier_mat dimR dimC\n  char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n    diagonal_mat B \\<and>\n    diag_mat B = eigvals A \\<and>\n    Complex_Matrix.unitary U \\<and>\n    (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)", "by auto"], ["proof (state)\nthis:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"dim_row B = dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row B = dimR", "using assms fc_mats_carrier dim_eq similar_mat_wit_dim_row[of A]  \n        pr"], ["proof (prove)\nusing this:\n  hermitian A\n  A \\<in> fc_mats\n  fc_mats = carrier_mat dimR dimC\n  dimR = dimC\n  similar_mat_wit A ?B ?Q ?R \\<Longrightarrow> dim_row ?B = dim_row A\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. dim_row B = dimR", "by auto"], ["proof (state)\nthis:\n  dim_row B = dimR\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n  dim_row B = dimR", "have \"hermitian_decomp A B U\""], ["proof (prove)\nusing this:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n  dim_row B = dimR\n\ngoal (1 subgoal):\n 1. hermitian_decomp A B U", "unfolding hermitian_decomp_def"], ["proof (prove)\nusing this:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n  dim_row B = dimR\n\ngoal (1 subgoal):\n 1. similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n    diagonal_mat B \\<and>\n    diag_mat B = eigvals A \\<and>\n    Complex_Matrix.unitary U \\<and>\n    (\\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>)", "by simp"], ["proof (state)\nthis:\n  hermitian_decomp A B U\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"\\<exists> B U. hermitian_decomp A B U\""], ["proof (prove)\nusing this:\n  hermitian_decomp A B U\n\ngoal (1 subgoal):\n 1. \\<exists>B U. hermitian_decomp A B U", "by auto"], ["proof (state)\nthis:\n  \\<exists>B U. hermitian_decomp A B U\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  \\<exists>B U. hermitian_decomp A B U\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>B U. hermitian_decomp A B U\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  \\<exists>B U. hermitian_decomp A B U\n  hermitian_decomp A ?B2 ?U2 \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) hermitian_spectrum_real:\n  assumes \"A \\<in> fc_mats\"\n  and \"hermitian A\"\n  and \"a \\<in> spectrum A\"\nshows \"a \\<in> Reals\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> \\<real>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> \\<real>", "obtain B U where bu: \"hermitian_decomp A B U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms hermitian_schur_decomp"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  a \\<in> spectrum A\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats;\n   \\<And>B U. hermitian_decomp ?A B U \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  hermitian_decomp A B U\n\ngoal (1 subgoal):\n 1. a \\<in> \\<real>", "hence dimB: \"B \\<in> carrier_mat dimR dimR\""], ["proof (prove)\nusing this:\n  hermitian_decomp A B U\n\ngoal (1 subgoal):\n 1. B \\<in> carrier_mat dimR dimR", "using assms fc_mats_carrier \n      dim_eq hermitian_decomp_dim_carrier[of A]"], ["proof (prove)\nusing this:\n  hermitian_decomp A B U\n  A \\<in> fc_mats\n  hermitian A\n  a \\<in> spectrum A\n  fc_mats = carrier_mat dimR dimC\n  dimR = dimC\n  hermitian_decomp A ?B ?U \\<Longrightarrow>\n  ?B \\<in> carrier_mat (dim_row A) (dim_col A)\n\ngoal (1 subgoal):\n 1. B \\<in> carrier_mat dimR dimR", "by simp"], ["proof (state)\nthis:\n  B \\<in> carrier_mat dimR dimR\n\ngoal (1 subgoal):\n 1. a \\<in> \\<real>", "hence  Bii: \"\\<And>i. i < dimR \\<Longrightarrow> B$$(i, i) \\<in> Reals\""], ["proof (prove)\nusing this:\n  B \\<in> carrier_mat dimR dimR\n\ngoal (1 subgoal):\n 1. \\<And>i. i < dimR \\<Longrightarrow> B $$ (i, i) \\<in> \\<real>", "using hermitian_decomp_real_eigvals[of A B U]\n      bu assms fc_mats_carrier"], ["proof (prove)\nusing this:\n  B \\<in> carrier_mat dimR dimR\n  hermitian_decomp A B U \\<Longrightarrow>\n  \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>\n  hermitian_decomp A B U\n  A \\<in> fc_mats\n  hermitian A\n  a \\<in> spectrum A\n  fc_mats = carrier_mat dimR dimC\n\ngoal (1 subgoal):\n 1. \\<And>i. i < dimR \\<Longrightarrow> B $$ (i, i) \\<in> \\<real>", "by simp"], ["proof (state)\nthis:\n  ?i2 < dimR \\<Longrightarrow> B $$ (?i2, ?i2) \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. a \\<in> \\<real>", "have  \"diag_mat B = (eigvals A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diag_mat B = eigvals A", "using bu hermitian_decomp_eigenvalues[of A B]"], ["proof (prove)\nusing this:\n  hermitian_decomp A B U\n  hermitian_decomp A B ?U \\<Longrightarrow> diag_mat B = eigvals A\n\ngoal (1 subgoal):\n 1. diag_mat B = eigvals A", "by simp"], ["proof (state)\nthis:\n  diag_mat B = eigvals A\n\ngoal (1 subgoal):\n 1. a \\<in> \\<real>", "hence \"a \\<in> set (diag_mat B)\""], ["proof (prove)\nusing this:\n  diag_mat B = eigvals A\n\ngoal (1 subgoal):\n 1. a \\<in> set (diag_mat B)", "using assms"], ["proof (prove)\nusing this:\n  diag_mat B = eigvals A\n  A \\<in> fc_mats\n  hermitian A\n  a \\<in> spectrum A\n\ngoal (1 subgoal):\n 1. a \\<in> set (diag_mat B)", "unfolding spectrum_def"], ["proof (prove)\nusing this:\n  diag_mat B = eigvals A\n  A \\<in> fc_mats\n  hermitian A\n  a \\<in> set (eigvals A)\n\ngoal (1 subgoal):\n 1. a \\<in> set (diag_mat B)", "by simp"], ["proof (state)\nthis:\n  a \\<in> set (diag_mat B)\n\ngoal (1 subgoal):\n 1. a \\<in> \\<real>", "hence \"\\<exists>i < length (diag_mat B). a = diag_mat B ! i\""], ["proof (prove)\nusing this:\n  a \\<in> set (diag_mat B)\n\ngoal (1 subgoal):\n 1. \\<exists>i<length (diag_mat B). a = diag_mat B ! i", "by (metis in_set_conv_nth)"], ["proof (state)\nthis:\n  \\<exists>i<length (diag_mat B). a = diag_mat B ! i\n\ngoal (1 subgoal):\n 1. a \\<in> \\<real>", "from this"], ["proof (chain)\npicking this:\n  \\<exists>i<length (diag_mat B). a = diag_mat B ! i", "obtain i where \"i < length (diag_mat B)\" and \"a = diag_mat B ! i\""], ["proof (prove)\nusing this:\n  \\<exists>i<length (diag_mat B). a = diag_mat B ! i\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < length (diag_mat B); a = diag_mat B ! i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i < length (diag_mat B)\n  a = diag_mat B ! i\n\ngoal (1 subgoal):\n 1. a \\<in> \\<real>", "hence \"a = B $$ (i,i)\""], ["proof (prove)\nusing this:\n  i < length (diag_mat B)\n  a = diag_mat B ! i\n\ngoal (1 subgoal):\n 1. a = B $$ (i, i)", "unfolding diag_mat_def"], ["proof (prove)\nusing this:\n  i < length (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])\n  a = map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B] ! i\n\ngoal (1 subgoal):\n 1. a = B $$ (i, i)", "by simp"], ["proof (state)\nthis:\n  a = B $$ (i, i)\n\ngoal (1 subgoal):\n 1. a \\<in> \\<real>", "moreover"], ["proof (state)\nthis:\n  a = B $$ (i, i)\n\ngoal (1 subgoal):\n 1. a \\<in> \\<real>", "have  \"i < dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < dimR", "using dimB \\<open>i < length (diag_mat B)\\<close>"], ["proof (prove)\nusing this:\n  B \\<in> carrier_mat dimR dimR\n  i < length (diag_mat B)\n\ngoal (1 subgoal):\n 1. i < dimR", "unfolding diag_mat_def"], ["proof (prove)\nusing this:\n  B \\<in> carrier_mat dimR dimR\n  i < length (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])\n\ngoal (1 subgoal):\n 1. i < dimR", "by simp"], ["proof (state)\nthis:\n  i < dimR\n\ngoal (1 subgoal):\n 1. a \\<in> \\<real>", "ultimately"], ["proof (chain)\npicking this:\n  a = B $$ (i, i)\n  i < dimR", "show ?thesis"], ["proof (prove)\nusing this:\n  a = B $$ (i, i)\n  i < dimR\n\ngoal (1 subgoal):\n 1. a \\<in> \\<real>", "using  Bii"], ["proof (prove)\nusing this:\n  a = B $$ (i, i)\n  i < dimR\n  ?i2 < dimR \\<Longrightarrow> B $$ (?i2, ?i2) \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. a \\<in> \\<real>", "by simp"], ["proof (state)\nthis:\n  a \\<in> \\<real>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) spectrum_ne:\n  assumes \"A\\<in> fc_mats\"\nand \"hermitian A\" \nshows \"spectrum A \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spectrum A \\<noteq> {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. spectrum A \\<noteq> {}", "obtain B U where bu: \"hermitian_decomp A B U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms hermitian_schur_decomp"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats;\n   \\<And>B U. hermitian_decomp ?A B U \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  hermitian_decomp A B U\n\ngoal (1 subgoal):\n 1. spectrum A \\<noteq> {}", "hence dimB: \"B \\<in> carrier_mat dimR dimR\""], ["proof (prove)\nusing this:\n  hermitian_decomp A B U\n\ngoal (1 subgoal):\n 1. B \\<in> carrier_mat dimR dimR", "using assms fc_mats_carrier \n      dim_eq hermitian_decomp_dim_carrier[of A]"], ["proof (prove)\nusing this:\n  hermitian_decomp A B U\n  A \\<in> fc_mats\n  hermitian A\n  fc_mats = carrier_mat dimR dimC\n  dimR = dimC\n  hermitian_decomp A ?B ?U \\<Longrightarrow>\n  ?B \\<in> carrier_mat (dim_row A) (dim_col A)\n\ngoal (1 subgoal):\n 1. B \\<in> carrier_mat dimR dimR", "by simp"], ["proof (state)\nthis:\n  B \\<in> carrier_mat dimR dimR\n\ngoal (1 subgoal):\n 1. spectrum A \\<noteq> {}", "have  \"diag_mat B = (eigvals A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diag_mat B = eigvals A", "using bu hermitian_decomp_eigenvalues[of A B]"], ["proof (prove)\nusing this:\n  hermitian_decomp A B U\n  hermitian_decomp A B ?U \\<Longrightarrow> diag_mat B = eigvals A\n\ngoal (1 subgoal):\n 1. diag_mat B = eigvals A", "by simp"], ["proof (state)\nthis:\n  diag_mat B = eigvals A\n\ngoal (1 subgoal):\n 1. spectrum A \\<noteq> {}", "have \"B$$(0,0) \\<in> set (diag_mat B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B $$ (0, 0) \\<in> set (diag_mat B)", "using dimB npos"], ["proof (prove)\nusing this:\n  B \\<in> carrier_mat dimR dimR\n  0 < dimR\n\ngoal (1 subgoal):\n 1. B $$ (0, 0) \\<in> set (diag_mat B)", "unfolding diag_mat_def"], ["proof (prove)\nusing this:\n  B \\<in> carrier_mat dimR dimR\n  0 < dimR\n\ngoal (1 subgoal):\n 1. B $$ (0, 0) \\<in> set (map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B])", "by simp"], ["proof (state)\nthis:\n  B $$ (0, 0) \\<in> set (diag_mat B)\n\ngoal (1 subgoal):\n 1. spectrum A \\<noteq> {}", "hence \"set (diag_mat B) \\<noteq> {}\""], ["proof (prove)\nusing this:\n  B $$ (0, 0) \\<in> set (diag_mat B)\n\ngoal (1 subgoal):\n 1. set (diag_mat B) \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  set (diag_mat B) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. spectrum A \\<noteq> {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  set (diag_mat B) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. spectrum A \\<noteq> {}", "unfolding spectrum_def"], ["proof (prove)\nusing this:\n  set (diag_mat B) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. set (eigvals A) \\<noteq> {}", "using \\<open>diag_mat B = eigvals A\\<close>"], ["proof (prove)\nusing this:\n  set (diag_mat B) \\<noteq> {}\n  diag_mat B = eigvals A\n\ngoal (1 subgoal):\n 1. set (eigvals A) \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  spectrum A \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  unitary_hermitian_eigenvalues:\n  fixes U::\"complex Matrix.mat\"\n  assumes \"unitary U\"\n  and \"hermitian U\"\n  and \"U \\<in> carrier_mat n n\"\n  and \"0 < n\"\n  and \"k \\<in> spectrum U\"\nshows \"k \\<in> {-1, 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<in> {- 1, 1}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<in> {- 1, 1}", "have \"cpx_sq_mat n n (carrier_mat n n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cpx_sq_mat n n (carrier_mat n n)", "by (unfold_locales, (simp add: assms)+)"], ["proof (state)\nthis:\n  cpx_sq_mat n n (carrier_mat n n)\n\ngoal (1 subgoal):\n 1. k \\<in> {- 1, 1}", "have \"eigenvalue U k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eigenvalue U k", "using spectrum_eigenvalues assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<in> carrier_mat ?n ?n; ?k \\<in> spectrum ?A\\<rbrakk>\n  \\<Longrightarrow> eigenvalue ?A ?k\n  Complex_Matrix.unitary U\n  hermitian U\n  U \\<in> carrier_mat n n\n  0 < n\n  k \\<in> spectrum U\n\ngoal (1 subgoal):\n 1. eigenvalue U k", "by simp"], ["proof (state)\nthis:\n  eigenvalue U k\n\ngoal (1 subgoal):\n 1. k \\<in> {- 1, 1}", "have \"k \\<in> Reals\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<in> \\<real>", "using assms \\<open>cpx_sq_mat n n (carrier_mat n n)\\<close> \n      cpx_sq_mat.hermitian_spectrum_real"], ["proof (prove)\nusing this:\n  Complex_Matrix.unitary U\n  hermitian U\n  U \\<in> carrier_mat n n\n  0 < n\n  k \\<in> spectrum U\n  cpx_sq_mat n n (carrier_mat n n)\n  \\<lbrakk>cpx_sq_mat ?dimR ?dimC ?fc_mats; ?A \\<in> ?fc_mats; hermitian ?A;\n   ?a \\<in> spectrum ?A\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. k \\<in> \\<real>", "by simp"], ["proof (state)\nthis:\n  k \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. k \\<in> {- 1, 1}", "hence \"conjugate k = k\""], ["proof (prove)\nusing this:\n  k \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. conjugate k = k", "by (simp add: Reals_cnj_iff)"], ["proof (state)\nthis:\n  conjugate k = k\n\ngoal (1 subgoal):\n 1. k \\<in> {- 1, 1}", "hence \"k\\<^sup>2 = 1\""], ["proof (prove)\nusing this:\n  conjugate k = k\n\ngoal (1 subgoal):\n 1. k\\<^sup>2 = 1", "using unitary_eigenvalues_norm_square[of U n k] assms"], ["proof (prove)\nusing this:\n  conjugate k = k\n  \\<lbrakk>Complex_Matrix.unitary U; U \\<in> carrier_mat n n;\n   eigenvalue U k\\<rbrakk>\n  \\<Longrightarrow> conjugate k * k = 1\n  Complex_Matrix.unitary U\n  hermitian U\n  U \\<in> carrier_mat n n\n  0 < n\n  k \\<in> spectrum U\n\ngoal (1 subgoal):\n 1. k\\<^sup>2 = 1", "by (simp add: \\<open>eigenvalue U k\\<close> power2_eq_square)"], ["proof (state)\nthis:\n  k\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. k \\<in> {- 1, 1}", "thus ?thesis"], ["proof (prove)\nusing this:\n  k\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. k \\<in> {- 1, 1}", "using power2_eq_1_iff"], ["proof (prove)\nusing this:\n  k\\<^sup>2 = 1\n  (?a\\<^sup>2 = (1::?'a)) = (?a = (1::?'a) \\<or> ?a = - (1::?'a))\n\ngoal (1 subgoal):\n 1. k \\<in> {- 1, 1}", "by auto"], ["proof (state)\nthis:\n  k \\<in> {- 1, 1}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  unitary_hermitian_Re_spectrum:\n  fixes U::\"complex Matrix.mat\"\n  assumes \"unitary U\"\n  and \"hermitian U\"\n  and \"U \\<in> carrier_mat n n\"\n  and \"0 < n\"\n  shows \"{Re x|x. x\\<in> spectrum U} \\<subseteq> {-1,1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {Re x |x. x \\<in> spectrum U} \\<subseteq> {- 1, 1}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {Re x |x. x \\<in> spectrum U} \\<Longrightarrow>\n       x \\<in> {- 1, 1}", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {Re x |x. x \\<in> spectrum U} \\<Longrightarrow>\n       x \\<in> {- 1, 1}", "assume \"y\\<in> {Re x|x. x\\<in> spectrum U}\""], ["proof (state)\nthis:\n  y \\<in> {Re x |x. x \\<in> spectrum U}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {Re x |x. x \\<in> spectrum U} \\<Longrightarrow>\n       x \\<in> {- 1, 1}", "hence \"\\<exists>x \\<in> spectrum U. y = Re x\""], ["proof (prove)\nusing this:\n  y \\<in> {Re x |x. x \\<in> spectrum U}\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>spectrum U. y = Re x", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<in>spectrum U. y = Re x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {Re x |x. x \\<in> spectrum U} \\<Longrightarrow>\n       x \\<in> {- 1, 1}", "from this"], ["proof (chain)\npicking this:\n  \\<exists>x\\<in>spectrum U. y = Re x", "obtain x where \"x\\<in> spectrum U\" and \"y = Re x\""], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>spectrum U. y = Re x\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> spectrum U; y = Re x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> spectrum U\n  y = Re x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {Re x |x. x \\<in> spectrum U} \\<Longrightarrow>\n       x \\<in> {- 1, 1}", "hence \"x\\<in> {-1,1}\""], ["proof (prove)\nusing this:\n  x \\<in> spectrum U\n  y = Re x\n\ngoal (1 subgoal):\n 1. x \\<in> {- 1, 1}", "using unitary_hermitian_eigenvalues assms"], ["proof (prove)\nusing this:\n  x \\<in> spectrum U\n  y = Re x\n  \\<lbrakk>Complex_Matrix.unitary ?U; hermitian ?U;\n   ?U \\<in> carrier_mat ?n ?n; 0 < ?n; ?k \\<in> spectrum ?U\\<rbrakk>\n  \\<Longrightarrow> ?k \\<in> {- 1, 1}\n  Complex_Matrix.unitary U\n  hermitian U\n  U \\<in> carrier_mat n n\n  0 < n\n\ngoal (1 subgoal):\n 1. x \\<in> {- 1, 1}", "by simp"], ["proof (state)\nthis:\n  x \\<in> {- 1, 1}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {Re x |x. x \\<in> spectrum U} \\<Longrightarrow>\n       x \\<in> {- 1, 1}", "thus \"y \\<in> {-1, 1}\""], ["proof (prove)\nusing this:\n  x \\<in> {- 1, 1}\n\ngoal (1 subgoal):\n 1. y \\<in> {- 1, 1}", "using \\<open>y = Re x\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> {- 1, 1}\n  y = Re x\n\ngoal (1 subgoal):\n 1. y \\<in> {- 1, 1}", "by auto"], ["proof (state)\nthis:\n  y \\<in> {- 1, 1}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The projective measurement associated with matrix $M$ is obtained from its Schur \ndecomposition, by considering the number of distinct elements on the resulting diagonal matrix\nand constructing the projectors associated with each of them.\\<close>"], ["", "type_synonym proj_meas_rep = \"nat \\<times> (nat \\<Rightarrow> measure_outcome)\""], ["", "definition proj_meas_size::\"proj_meas_rep \\<Rightarrow> nat\" where\n\"proj_meas_size P = fst P\""], ["", "definition proj_meas_outcomes::\"proj_meas_rep \\<Rightarrow> (nat \\<Rightarrow> measure_outcome)\" where\n\"proj_meas_outcomes P = snd P\""], ["", "definition (in cpx_sq_mat) make_pm::\"complex Matrix.mat \\<Rightarrow> proj_meas_rep\" where\n\"make_pm A = (let (B,U,_) = unitary_schur_decomposition A (eigvals A) in \n  (dist_el_card B, mk_meas_outcome B U))\""], ["", "lemma (in cpx_sq_mat) make_pm_decomp:\n  shows \"make_pm A = (proj_meas_size (make_pm A), proj_meas_outcomes (make_pm A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. make_pm A = (proj_meas_size (make_pm A), proj_meas_outcomes (make_pm A))", "unfolding proj_meas_size_def proj_meas_outcomes_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. make_pm A = (fst (make_pm A), snd (make_pm A))", "by simp"], ["", "lemma (in cpx_sq_mat) make_pm_proj_measurement:\n  assumes \"A \\<in> fc_mats\"\n  and \"hermitian A\"\n  and \"make_pm A = (n, M)\"\nshows \"proj_measurement n M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_measurement n M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. proj_measurement n M", "have es: \"char_poly A = (\\<Prod> (e :: complex) \\<leftarrow> (eigvals A). [:- e, 1:])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])", "using assms fc_mats_carrier eigvals_poly_length dim_eq"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (n, M)\n  fc_mats = carrier_mat dimR dimC\n  ?M \\<in> carrier_mat ?n ?n \\<Longrightarrow>\n  char_poly ?M = (\\<Prod>a\\<leftarrow>eigvals ?M. [:- a, 1:]) \\<and>\n  length (eigvals ?M) = dim_row ?M\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])", "by auto"], ["proof (state)\nthis:\n  char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])\n\ngoal (1 subgoal):\n 1. proj_measurement n M", "obtain B U Q where us: \"unitary_schur_decomposition A (eigvals A) = (B,U,Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B U Q.\n        unitary_schur_decomposition A (eigvals A) =\n        (B, U, Q) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"unitary_schur_decomposition A (eigvals A)\", auto)"], ["proof (state)\nthis:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. proj_measurement n M", "then"], ["proof (chain)\npicking this:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)", "have \"similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and> diagonal_mat B \\<and> \n    diag_mat B = (eigvals A) \\<and> unitary U \\<and> (\\<forall>i < dimR. B$$(i, i) \\<in> Reals)\""], ["proof (prove)\nusing this:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n    diagonal_mat B \\<and>\n    diag_mat B = eigvals A \\<and>\n    Complex_Matrix.unitary U \\<and>\n    (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)", "using hermitian_eigenvalue_real assms fc_mats_carrier es dim_eq"], ["proof (prove)\nusing this:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n  \\<lbrakk>?A \\<in> carrier_mat ?n ?n; hermitian ?A;\n   char_poly ?A = (\\<Prod>e\\<leftarrow>?es. [:- e, 1:]);\n   unitary_schur_decomposition ?A ?es = (?B, ?P, ?Q)\\<rbrakk>\n  \\<Longrightarrow> similar_mat_wit ?A ?B ?P\n                     (Complex_Matrix.adjoint ?P) \\<and>\n                    diagonal_mat ?B \\<and>\n                    diag_mat ?B = ?es \\<and>\n                    Complex_Matrix.unitary ?P \\<and>\n                    (\\<forall>i<?n. ?B $$ (i, i) \\<in> \\<real>)\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (n, M)\n  fc_mats = carrier_mat dimR dimC\n  char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n    diagonal_mat B \\<and>\n    diag_mat B = eigvals A \\<and>\n    Complex_Matrix.unitary U \\<and>\n    (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)", "by auto"], ["proof (state)\nthis:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. proj_measurement n M", "hence A: \"A = U * B * (Complex_Matrix.adjoint U)\" and dB: \"diagonal_mat B\"\n    and Bii: \"\\<And>i. i < dimR \\<Longrightarrow> B$$(i, i) \\<in> Reals\"\n    and dimB: \"B \\<in> carrier_mat dimR dimR\" and dimP: \"U \\<in> carrier_mat dimR dimR\" and \n    dimaP: \"Complex_Matrix.adjoint U \\<in> carrier_mat dimR dimR\" and unit: \"unitary U\""], ["proof (prove)\nusing this:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. (A = U * B * Complex_Matrix.adjoint U &&&\n     diagonal_mat B &&&\n     (\\<And>i. i < dimR \\<Longrightarrow> B $$ (i, i) \\<in> \\<real>)) &&&\n    (B \\<in> carrier_mat dimR dimR &&& U \\<in> carrier_mat dimR dimR) &&&\n    Complex_Matrix.adjoint U \\<in> carrier_mat dimR dimR &&&\n    Complex_Matrix.unitary U", "unfolding similar_mat_wit_def Let_def"], ["proof (prove)\nusing this:\n  ({A, B, U, Complex_Matrix.adjoint U}\n   \\<subseteq> carrier_mat (dim_row A) (dim_row A) \\<and>\n   U * Complex_Matrix.adjoint U = 1\\<^sub>m (dim_row A) \\<and>\n   Complex_Matrix.adjoint U * U = 1\\<^sub>m (dim_row A) \\<and>\n   A = U * B * Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. (A = U * B * Complex_Matrix.adjoint U &&&\n     diagonal_mat B &&&\n     (\\<And>i. i < dimR \\<Longrightarrow> B $$ (i, i) \\<in> \\<real>)) &&&\n    (B \\<in> carrier_mat dimR dimR &&& U \\<in> carrier_mat dimR dimR) &&&\n    Complex_Matrix.adjoint U \\<in> carrier_mat dimR dimR &&&\n    Complex_Matrix.unitary U", "using assms fc_mats_carrier"], ["proof (prove)\nusing this:\n  ({A, B, U, Complex_Matrix.adjoint U}\n   \\<subseteq> carrier_mat (dim_row A) (dim_row A) \\<and>\n   U * Complex_Matrix.adjoint U = 1\\<^sub>m (dim_row A) \\<and>\n   Complex_Matrix.adjoint U * U = 1\\<^sub>m (dim_row A) \\<and>\n   A = U * B * Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (n, M)\n  fc_mats = carrier_mat dimR dimC\n\ngoal (1 subgoal):\n 1. (A = U * B * Complex_Matrix.adjoint U &&&\n     diagonal_mat B &&&\n     (\\<And>i. i < dimR \\<Longrightarrow> B $$ (i, i) \\<in> \\<real>)) &&&\n    (B \\<in> carrier_mat dimR dimR &&& U \\<in> carrier_mat dimR dimR) &&&\n    Complex_Matrix.adjoint U \\<in> carrier_mat dimR dimR &&&\n    Complex_Matrix.unitary U", "by auto"], ["proof (state)\nthis:\n  A = U * B * Complex_Matrix.adjoint U\n  diagonal_mat B\n  ?i2 < dimR \\<Longrightarrow> B $$ (?i2, ?i2) \\<in> \\<real>\n  B \\<in> carrier_mat dimR dimR\n  U \\<in> carrier_mat dimR dimR\n  Complex_Matrix.adjoint U \\<in> carrier_mat dimR dimR\n  Complex_Matrix.unitary U\n\ngoal (1 subgoal):\n 1. proj_measurement n M", "hence mpeq: \"make_pm A = (dist_el_card B, mk_meas_outcome B U)\""], ["proof (prove)\nusing this:\n  A = U * B * Complex_Matrix.adjoint U\n  diagonal_mat B\n  ?i2 < dimR \\<Longrightarrow> B $$ (?i2, ?i2) \\<in> \\<real>\n  B \\<in> carrier_mat dimR dimR\n  U \\<in> carrier_mat dimR dimR\n  Complex_Matrix.adjoint U \\<in> carrier_mat dimR dimR\n  Complex_Matrix.unitary U\n\ngoal (1 subgoal):\n 1. make_pm A = (dist_el_card B, mk_meas_outcome B U)", "using us Let_def"], ["proof (prove)\nusing this:\n  A = U * B * Complex_Matrix.adjoint U\n  diagonal_mat B\n  ?i2 < dimR \\<Longrightarrow> B $$ (?i2, ?i2) \\<in> \\<real>\n  B \\<in> carrier_mat dimR dimR\n  U \\<in> carrier_mat dimR dimR\n  Complex_Matrix.adjoint U \\<in> carrier_mat dimR dimR\n  Complex_Matrix.unitary U\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n  Let ?s ?f \\<equiv> ?f ?s\n\ngoal (1 subgoal):\n 1. make_pm A = (dist_el_card B, mk_meas_outcome B U)", "unfolding make_pm_def"], ["proof (prove)\nusing this:\n  A = U * B * Complex_Matrix.adjoint U\n  diagonal_mat B\n  ?i2 < dimR \\<Longrightarrow> B $$ (?i2, ?i2) \\<in> \\<real>\n  B \\<in> carrier_mat dimR dimR\n  U \\<in> carrier_mat dimR dimR\n  Complex_Matrix.adjoint U \\<in> carrier_mat dimR dimR\n  Complex_Matrix.unitary U\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n  Let ?s ?f \\<equiv> ?f ?s\n\ngoal (1 subgoal):\n 1. (let (B, U, uu_) = unitary_schur_decomposition A (eigvals A)\n     in (dist_el_card B, mk_meas_outcome B U)) =\n    (dist_el_card B, mk_meas_outcome B U)", "by simp"], ["proof (state)\nthis:\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n\ngoal (1 subgoal):\n 1. proj_measurement n M", "hence \"n = dist_el_card B\""], ["proof (prove)\nusing this:\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n\ngoal (1 subgoal):\n 1. n = dist_el_card B", "using assms"], ["proof (prove)\nusing this:\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (n, M)\n\ngoal (1 subgoal):\n 1. n = dist_el_card B", "by simp"], ["proof (state)\nthis:\n  n = dist_el_card B\n\ngoal (1 subgoal):\n 1. proj_measurement n M", "have \"M = mk_meas_outcome B U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M = mk_meas_outcome B U", "using assms mpeq"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (n, M)\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n\ngoal (1 subgoal):\n 1. M = mk_meas_outcome B U", "by simp"], ["proof (state)\nthis:\n  M = mk_meas_outcome B U\n\ngoal (1 subgoal):\n 1. proj_measurement n M", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_measurement n M", "unfolding proj_measurement_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>i. meas_outcome_val (M i)) {..<n} \\<and>\n    (\\<forall>j<n.\n        meas_outcome_prj (M j) \\<in> fc_mats \\<and>\n        projector (meas_outcome_prj (M j))) \\<and>\n    (\\<forall>i<n.\n        \\<forall>j<n.\n           i \\<noteq> j \\<longrightarrow>\n           meas_outcome_prj (M i) * meas_outcome_prj (M j) =\n           0\\<^sub>m dimR dimR) \\<and>\n    local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n} =\n    1\\<^sub>m dimR", "proof (intro conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. inj_on (\\<lambda>i. meas_outcome_val (M i)) {..<n}\n 2. \\<forall>j<n.\n       meas_outcome_prj (M j) \\<in> fc_mats \\<and>\n       projector (meas_outcome_prj (M j))\n 3. \\<forall>i<n.\n       \\<forall>j<n.\n          i \\<noteq> j \\<longrightarrow>\n          meas_outcome_prj (M i) * meas_outcome_prj (M j) =\n          0\\<^sub>m dimR dimR\n 4. local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n} =\n    1\\<^sub>m dimR", "show \"inj_on (\\<lambda>i. meas_outcome_val (M i)) {..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>i. meas_outcome_val (M i)) {..<n}", "using mk_meas_outcome_fst_inj[of B U] \n        \\<open>n = dist_el_card B\\<close> \\<open>M = mk_meas_outcome B U\\<close> Bii fc_mats_carrier dimB"], ["proof (prove)\nusing this:\n  \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real> \\<Longrightarrow>\n  inj_on (\\<lambda>i. meas_outcome_val (mk_meas_outcome B U i))\n   {..<dist_el_card B}\n  n = dist_el_card B\n  M = mk_meas_outcome B U\n  ?i2 < dimR \\<Longrightarrow> B $$ (?i2, ?i2) \\<in> \\<real>\n  fc_mats = carrier_mat dimR dimC\n  B \\<in> carrier_mat dimR dimR\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>i. meas_outcome_val (M i)) {..<n}", "by auto"], ["proof (state)\nthis:\n  inj_on (\\<lambda>i. meas_outcome_val (M i)) {..<n}\n\ngoal (3 subgoals):\n 1. \\<forall>j<n.\n       meas_outcome_prj (M j) \\<in> fc_mats \\<and>\n       projector (meas_outcome_prj (M j))\n 2. \\<forall>i<n.\n       \\<forall>j<n.\n          i \\<noteq> j \\<longrightarrow>\n          meas_outcome_prj (M i) * meas_outcome_prj (M j) =\n          0\\<^sub>m dimR dimR\n 3. local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n} =\n    1\\<^sub>m dimR", "show \"\\<forall>j<n. meas_outcome_prj (M j) \\<in> fc_mats \\<and> projector (meas_outcome_prj (M j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j<n.\n       meas_outcome_prj (M j) \\<in> fc_mats \\<and>\n       projector (meas_outcome_prj (M j))", "proof (intro allI impI conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>j. j < n \\<Longrightarrow> meas_outcome_prj (M j) \\<in> fc_mats\n 2. \\<And>j. j < n \\<Longrightarrow> projector (meas_outcome_prj (M j))", "fix j"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>j. j < n \\<Longrightarrow> meas_outcome_prj (M j) \\<in> fc_mats\n 2. \\<And>j. j < n \\<Longrightarrow> projector (meas_outcome_prj (M j))", "assume \"j < n\""], ["proof (state)\nthis:\n  j < n\n\ngoal (2 subgoals):\n 1. \\<And>j. j < n \\<Longrightarrow> meas_outcome_prj (M j) \\<in> fc_mats\n 2. \\<And>j. j < n \\<Longrightarrow> projector (meas_outcome_prj (M j))", "show \"meas_outcome_prj (M j) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_prj (M j) \\<in> fc_mats", "using \\<open>M = mk_meas_outcome B U\\<close> assms \n          fc_mats_carrier \\<open>j < n\\<close> \\<open>n = dist_el_card B\\<close> dim_eq mk_meas_outcome_carrier \n          dimB dimP unit"], ["proof (prove)\nusing this:\n  M = mk_meas_outcome B U\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (n, M)\n  fc_mats = carrier_mat dimR dimC\n  j < n\n  n = dist_el_card B\n  dimR = dimC\n  \\<lbrakk>Complex_Matrix.unitary ?U; ?U \\<in> fc_mats;\n   ?B \\<in> fc_mats\\<rbrakk>\n  \\<Longrightarrow> meas_outcome_prj (mk_meas_outcome ?B ?U ?j)\n                    \\<in> fc_mats\n  B \\<in> carrier_mat dimR dimR\n  U \\<in> carrier_mat dimR dimR\n  Complex_Matrix.unitary U\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (M j) \\<in> fc_mats", "by blast"], ["proof (state)\nthis:\n  meas_outcome_prj (M j) \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. \\<And>j. j < n \\<Longrightarrow> projector (meas_outcome_prj (M j))", "show \"projector (meas_outcome_prj (M j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (M j))", "using make_meas_outcome_prjectors \n          \\<open>M = mk_meas_outcome B U\\<close>  \n          fc_mats_carrier \\<open>n = dist_el_card B\\<close> unit \\<open>j < n\\<close> dimB dimP dim_eq"], ["proof (prove)\nusing this:\n  \\<lbrakk>Complex_Matrix.unitary ?U; ?U \\<in> fc_mats; ?B \\<in> fc_mats;\n   ?j < dist_el_card ?B\\<rbrakk>\n  \\<Longrightarrow> projector (meas_outcome_prj (mk_meas_outcome ?B ?U ?j))\n  M = mk_meas_outcome B U\n  fc_mats = carrier_mat dimR dimC\n  n = dist_el_card B\n  Complex_Matrix.unitary U\n  j < n\n  B \\<in> carrier_mat dimR dimR\n  U \\<in> carrier_mat dimR dimR\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (M j))", "by blast"], ["proof (state)\nthis:\n  projector (meas_outcome_prj (M j))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>j<n.\n     meas_outcome_prj (M j) \\<in> fc_mats \\<and>\n     projector (meas_outcome_prj (M j))\n\ngoal (2 subgoals):\n 1. \\<forall>i<n.\n       \\<forall>j<n.\n          i \\<noteq> j \\<longrightarrow>\n          meas_outcome_prj (M i) * meas_outcome_prj (M j) =\n          0\\<^sub>m dimR dimR\n 2. local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n} =\n    1\\<^sub>m dimR", "show \"\\<forall>i<n. \\<forall>j<n. i \\<noteq> j \\<longrightarrow> meas_outcome_prj (M i) * meas_outcome_prj (M j) = \n      0\\<^sub>m dimR dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<n.\n       \\<forall>j<n.\n          i \\<noteq> j \\<longrightarrow>\n          meas_outcome_prj (M i) * meas_outcome_prj (M j) =\n          0\\<^sub>m dimR dimR", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < n; j < n; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> meas_outcome_prj (M i) * meas_outcome_prj (M j) =\n                         0\\<^sub>m dimR dimR", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < n; j < n; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> meas_outcome_prj (M i) * meas_outcome_prj (M j) =\n                         0\\<^sub>m dimR dimR", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < n; j < n; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> meas_outcome_prj (M i) * meas_outcome_prj (M j) =\n                         0\\<^sub>m dimR dimR", "assume \"i < n\" and \"j < n\" and \"i\\<noteq> j\""], ["proof (state)\nthis:\n  i < n\n  j < n\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < n; j < n; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> meas_outcome_prj (M i) * meas_outcome_prj (M j) =\n                         0\\<^sub>m dimR dimR", "thus \"meas_outcome_prj (M i) * meas_outcome_prj (M j) = 0\\<^sub>m dimR dimR\""], ["proof (prove)\nusing this:\n  i < n\n  j < n\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (M i) * meas_outcome_prj (M j) = 0\\<^sub>m dimR dimR", "using make_meas_outcome_prj_ortho[of U B i j] assms dimB dimP fc_mats_carrier dim_eq"], ["proof (prove)\nusing this:\n  i < n\n  j < n\n  i \\<noteq> j\n  \\<lbrakk>Complex_Matrix.unitary U; U \\<in> fc_mats; B \\<in> fc_mats;\n   i < dist_el_card B; j < dist_el_card B; i \\<noteq> j\\<rbrakk>\n  \\<Longrightarrow> meas_outcome_prj (mk_meas_outcome B U i) *\n                    meas_outcome_prj (mk_meas_outcome B U j) =\n                    0\\<^sub>m dimR dimR\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (n, M)\n  B \\<in> carrier_mat dimR dimR\n  U \\<in> carrier_mat dimR dimR\n  fc_mats = carrier_mat dimR dimC\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (M i) * meas_outcome_prj (M j) = 0\\<^sub>m dimR dimR", "by (simp add: \\<open>M = mk_meas_outcome B U\\<close> \\<open>n = dist_el_card B\\<close> unit)"], ["proof (state)\nthis:\n  meas_outcome_prj (M i) * meas_outcome_prj (M j) = 0\\<^sub>m dimR dimR\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i<n.\n     \\<forall>j<n.\n        i \\<noteq> j \\<longrightarrow>\n        meas_outcome_prj (M i) * meas_outcome_prj (M j) =\n        0\\<^sub>m dimR dimR\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n} =\n    1\\<^sub>m dimR", "show \"sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n} = 1\\<^sub>m dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n} =\n    1\\<^sub>m dimR", "using \n        mk_meas_outcome_sum_id \n        \\<open>M = mk_meas_outcome B U\\<close> fc_mats_carrier dim_eq \\<open>n = dist_el_card B\\<close> unit  dimB dimP"], ["proof (prove)\nusing this:\n  \\<lbrakk>Complex_Matrix.unitary ?U; ?U \\<in> fc_mats;\n   ?B \\<in> fc_mats\\<rbrakk>\n  \\<Longrightarrow> local.sum_mat\n                     (\\<lambda>j.\n                         meas_outcome_prj (mk_meas_outcome ?B ?U j))\n                     {..<dist_el_card ?B} =\n                    1\\<^sub>m dimR\n  M = mk_meas_outcome B U\n  fc_mats = carrier_mat dimR dimC\n  dimR = dimC\n  n = dist_el_card B\n  Complex_Matrix.unitary U\n  B \\<in> carrier_mat dimR dimR\n  U \\<in> carrier_mat dimR dimR\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n} =\n    1\\<^sub>m dimR", "by blast"], ["proof (state)\nthis:\n  local.sum_mat (\\<lambda>j. meas_outcome_prj (M j)) {..<n} = 1\\<^sub>m dimR\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  proj_measurement n M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) make_pm_proj_measurement':\n  assumes \"A\\<in> fc_mats\"\n  and \"hermitian A\"\nshows \"proj_measurement (proj_meas_size (make_pm A)) (proj_meas_outcomes (make_pm A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_measurement (proj_meas_size (make_pm A))\n     (proj_meas_outcomes (make_pm A))", "unfolding proj_meas_size_def proj_meas_outcomes_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_measurement (fst (make_pm A)) (snd (make_pm A))", "by (rule make_pm_proj_measurement[of A], (simp add: assms)+)"], ["", "lemma (in cpx_sq_mat) make_pm_projectors:\n  assumes \"A\\<in> fc_mats\"\n  and \"hermitian A\"\nand \"i < proj_meas_size (make_pm A)\"\nshows \"projector (meas_outcome_prj (proj_meas_outcomes (make_pm A) i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (proj_meas_outcomes (make_pm A) i))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (proj_meas_outcomes (make_pm A) i))", "have \"proj_measurement (proj_meas_size (make_pm A)) (proj_meas_outcomes (make_pm A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_measurement (proj_meas_size (make_pm A))\n     (proj_meas_outcomes (make_pm A))", "using assms make_pm_proj_measurement'"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  i < proj_meas_size (make_pm A)\n  \\<lbrakk>?A \\<in> fc_mats; hermitian ?A\\<rbrakk>\n  \\<Longrightarrow> proj_measurement (proj_meas_size (make_pm ?A))\n                     (proj_meas_outcomes (make_pm ?A))\n\ngoal (1 subgoal):\n 1. proj_measurement (proj_meas_size (make_pm A))\n     (proj_meas_outcomes (make_pm A))", "by simp"], ["proof (state)\nthis:\n  proj_measurement (proj_meas_size (make_pm A))\n   (proj_meas_outcomes (make_pm A))\n\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (proj_meas_outcomes (make_pm A) i))", "thus ?thesis"], ["proof (prove)\nusing this:\n  proj_measurement (proj_meas_size (make_pm A))\n   (proj_meas_outcomes (make_pm A))\n\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (proj_meas_outcomes (make_pm A) i))", "using proj_measurement_proj assms"], ["proof (prove)\nusing this:\n  proj_measurement (proj_meas_size (make_pm A))\n   (proj_meas_outcomes (make_pm A))\n  \\<lbrakk>proj_measurement ?p ?M; ?i < ?p\\<rbrakk>\n  \\<Longrightarrow> projector (meas_outcome_prj (?M ?i))\n  A \\<in> fc_mats\n  hermitian A\n  i < proj_meas_size (make_pm A)\n\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (proj_meas_outcomes (make_pm A) i))", "by simp"], ["proof (state)\nthis:\n  projector (meas_outcome_prj (proj_meas_outcomes (make_pm A) i))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) make_pm_square:\n  assumes \"A\\<in> fc_mats\"\n  and \"hermitian A\"\nand \"i < proj_meas_size (make_pm A)\"\nshows \"meas_outcome_prj (proj_meas_outcomes (make_pm A) i) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_prj (proj_meas_outcomes (make_pm A) i) \\<in> fc_mats", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. meas_outcome_prj (proj_meas_outcomes (make_pm A) i) \\<in> fc_mats", "have \"proj_measurement (proj_meas_size (make_pm A)) (proj_meas_outcomes (make_pm A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_measurement (proj_meas_size (make_pm A))\n     (proj_meas_outcomes (make_pm A))", "using assms make_pm_proj_measurement'"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  i < proj_meas_size (make_pm A)\n  \\<lbrakk>?A \\<in> fc_mats; hermitian ?A\\<rbrakk>\n  \\<Longrightarrow> proj_measurement (proj_meas_size (make_pm ?A))\n                     (proj_meas_outcomes (make_pm ?A))\n\ngoal (1 subgoal):\n 1. proj_measurement (proj_meas_size (make_pm A))\n     (proj_meas_outcomes (make_pm A))", "by simp"], ["proof (state)\nthis:\n  proj_measurement (proj_meas_size (make_pm A))\n   (proj_meas_outcomes (make_pm A))\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (proj_meas_outcomes (make_pm A) i) \\<in> fc_mats", "thus ?thesis"], ["proof (prove)\nusing this:\n  proj_measurement (proj_meas_size (make_pm A))\n   (proj_meas_outcomes (make_pm A))\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (proj_meas_outcomes (make_pm A) i) \\<in> fc_mats", "using proj_measurement_square assms"], ["proof (prove)\nusing this:\n  proj_measurement (proj_meas_size (make_pm A))\n   (proj_meas_outcomes (make_pm A))\n  \\<lbrakk>proj_measurement ?p ?M; ?i < ?p\\<rbrakk>\n  \\<Longrightarrow> meas_outcome_prj (?M ?i) \\<in> fc_mats\n  A \\<in> fc_mats\n  hermitian A\n  i < proj_meas_size (make_pm A)\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (proj_meas_outcomes (make_pm A) i) \\<in> fc_mats", "by simp"], ["proof (state)\nthis:\n  meas_outcome_prj (proj_meas_outcomes (make_pm A) i) \\<in> fc_mats\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Properties on the spectrum of a  Hermitian matrix\\<close>"], ["", "lemma (in cpx_sq_mat) hermitian_schur_decomp':\n  assumes \"hermitian A\"\n  and \"A\\<in> fc_mats\"\nobtains B U where \"hermitian_decomp A B U \\<and> \n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<and>\n        make_pm A = (dist_el_card B, mk_meas_outcome B U) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<and>\n        make_pm A = (dist_el_card B, mk_meas_outcome B U) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<and>\n        make_pm A = (dist_el_card B, mk_meas_outcome B U) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have es: \"char_poly A = (\\<Prod> (e :: complex) \\<leftarrow> (eigvals A). [:- e, 1:])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])", "using assms fc_mats_carrier eigvals_poly_length dim_eq"], ["proof (prove)\nusing this:\n  hermitian A\n  A \\<in> fc_mats\n  fc_mats = carrier_mat dimR dimC\n  ?M \\<in> carrier_mat ?n ?n \\<Longrightarrow>\n  char_poly ?M = (\\<Prod>a\\<leftarrow>eigvals ?M. [:- a, 1:]) \\<and>\n  length (eigvals ?M) = dim_row ?M\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])", "by auto"], ["proof (state)\nthis:\n  char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<and>\n        make_pm A = (dist_el_card B, mk_meas_outcome B U) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "obtain B U Q where us: \"unitary_schur_decomposition A (eigvals A) = (B,U,Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B U Q.\n        unitary_schur_decomposition A (eigvals A) =\n        (B, U, Q) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"unitary_schur_decomposition A (eigvals A)\")"], ["proof (state)\nthis:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<and>\n        make_pm A = (dist_el_card B, mk_meas_outcome B U) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "hence pr: \"similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and> diagonal_mat B \\<and> \n      diag_mat B = (eigvals A) \\<and> unitary U \\<and> (\\<forall>i < dimR. B$$(i, i) \\<in> Reals)\""], ["proof (prove)\nusing this:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n    diagonal_mat B \\<and>\n    diag_mat B = eigvals A \\<and>\n    Complex_Matrix.unitary U \\<and>\n    (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)", "using hermitian_eigenvalue_real assms fc_mats_carrier es dim_eq"], ["proof (prove)\nusing this:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n  \\<lbrakk>?A \\<in> carrier_mat ?n ?n; hermitian ?A;\n   char_poly ?A = (\\<Prod>e\\<leftarrow>?es. [:- e, 1:]);\n   unitary_schur_decomposition ?A ?es = (?B, ?P, ?Q)\\<rbrakk>\n  \\<Longrightarrow> similar_mat_wit ?A ?B ?P\n                     (Complex_Matrix.adjoint ?P) \\<and>\n                    diagonal_mat ?B \\<and>\n                    diag_mat ?B = ?es \\<and>\n                    Complex_Matrix.unitary ?P \\<and>\n                    (\\<forall>i<?n. ?B $$ (i, i) \\<in> \\<real>)\n  hermitian A\n  A \\<in> fc_mats\n  fc_mats = carrier_mat dimR dimC\n  char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n    diagonal_mat B \\<and>\n    diag_mat B = eigvals A \\<and>\n    Complex_Matrix.unitary U \\<and>\n    (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)", "by auto"], ["proof (state)\nthis:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<and>\n        make_pm A = (dist_el_card B, mk_meas_outcome B U) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<and>\n        make_pm A = (dist_el_card B, mk_meas_outcome B U) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"dim_row B = dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row B = dimR", "using assms fc_mats_carrier dim_eq similar_mat_wit_dim_row[of A]  \n        pr"], ["proof (prove)\nusing this:\n  hermitian A\n  A \\<in> fc_mats\n  fc_mats = carrier_mat dimR dimC\n  dimR = dimC\n  similar_mat_wit A ?B ?Q ?R \\<Longrightarrow> dim_row ?B = dim_row A\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. dim_row B = dimR", "by auto"], ["proof (state)\nthis:\n  dim_row B = dimR\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<and>\n        make_pm A = (dist_el_card B, mk_meas_outcome B U) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n  dim_row B = dimR", "have \"hermitian_decomp A B U\""], ["proof (prove)\nusing this:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n  dim_row B = dimR\n\ngoal (1 subgoal):\n 1. hermitian_decomp A B U", "unfolding hermitian_decomp_def"], ["proof (prove)\nusing this:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n  dim_row B = dimR\n\ngoal (1 subgoal):\n 1. similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n    diagonal_mat B \\<and>\n    diag_mat B = eigvals A \\<and>\n    Complex_Matrix.unitary U \\<and>\n    (\\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>)", "by simp"], ["proof (state)\nthis:\n  hermitian_decomp A B U\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<and>\n        make_pm A = (dist_el_card B, mk_meas_outcome B U) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  hermitian_decomp A B U\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<and>\n        make_pm A = (dist_el_card B, mk_meas_outcome B U) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have  \"make_pm A = (dist_el_card B, mk_meas_outcome B U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. make_pm A = (dist_el_card B, mk_meas_outcome B U)", "using us Let_def"], ["proof (prove)\nusing this:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n  Let ?s ?f \\<equiv> ?f ?s\n\ngoal (1 subgoal):\n 1. make_pm A = (dist_el_card B, mk_meas_outcome B U)", "unfolding make_pm_def hermitian_decomp_def"], ["proof (prove)\nusing this:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n  Let ?s ?f \\<equiv> ?f ?s\n\ngoal (1 subgoal):\n 1. (let (B, U, uu_) = unitary_schur_decomposition A (eigvals A)\n     in (dist_el_card B, mk_meas_outcome B U)) =\n    (dist_el_card B, mk_meas_outcome B U)", "by simp"], ["proof (state)\nthis:\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<and>\n        make_pm A = (dist_el_card B, mk_meas_outcome B U) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  hermitian_decomp A B U\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)", "have \"\\<exists> B U. hermitian_decomp A B U \\<and> \n      make_pm A = (dist_el_card B, mk_meas_outcome B U)\""], ["proof (prove)\nusing this:\n  hermitian_decomp A B U\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n\ngoal (1 subgoal):\n 1. \\<exists>B U.\n       hermitian_decomp A B U \\<and>\n       make_pm A = (dist_el_card B, mk_meas_outcome B U)", "by auto"], ["proof (state)\nthis:\n  \\<exists>B U.\n     hermitian_decomp A B U \\<and>\n     make_pm A = (dist_el_card B, mk_meas_outcome B U)\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<and>\n        make_pm A = (dist_el_card B, mk_meas_outcome B U) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  \\<exists>B U.\n     hermitian_decomp A B U \\<and>\n     make_pm A = (dist_el_card B, mk_meas_outcome B U)\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<and>\n        make_pm A = (dist_el_card B, mk_meas_outcome B U) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>B U.\n     hermitian_decomp A B U \\<and>\n     make_pm A = (dist_el_card B, mk_meas_outcome B U)\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  \\<exists>B U.\n     hermitian_decomp A B U \\<and>\n     make_pm A = (dist_el_card B, mk_meas_outcome B U)\n  hermitian_decomp A ?B2 ?U2 \\<and>\n  make_pm A = (dist_el_card ?B2, mk_meas_outcome ?B2 ?U2) \\<Longrightarrow>\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) spectrum_meas_outcome_val_eq: \n  assumes \"hermitian A\" \n  and \"A \\<in> fc_mats\"\nand \"make_pm A = (p, M)\"\nshows \"spectrum A = (\\<lambda>i. meas_outcome_val (M i)) `{..< p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "obtain B U where bu: \"hermitian_decomp A B U \\<and> \n    make_pm A = (dist_el_card B, mk_meas_outcome B U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<and>\n        make_pm A = (dist_el_card B, mk_meas_outcome B U) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms hermitian_schur_decomp'[OF assms(1)]"], ["proof (prove)\nusing this:\n  hermitian A\n  A \\<in> fc_mats\n  make_pm A = (p, M)\n  \\<lbrakk>A \\<in> fc_mats;\n   \\<And>B U.\n      hermitian_decomp A B U \\<and>\n      make_pm A = (dist_el_card B, mk_meas_outcome B U) \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<and>\n        make_pm A = (dist_el_card B, mk_meas_outcome B U) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  hermitian_decomp A B U \\<and>\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "hence \"p = dist_el_card B\""], ["proof (prove)\nusing this:\n  hermitian_decomp A B U \\<and>\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n\ngoal (1 subgoal):\n 1. p = dist_el_card B", "using assms"], ["proof (prove)\nusing this:\n  hermitian_decomp A B U \\<and>\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n  hermitian A\n  A \\<in> fc_mats\n  make_pm A = (p, M)\n\ngoal (1 subgoal):\n 1. p = dist_el_card B", "by simp"], ["proof (state)\nthis:\n  p = dist_el_card B\n\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "have dimB: \"B \\<in> carrier_mat dimR dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> carrier_mat dimR dimR", "using hermitian_decomp_dim_carrier[of A] dim_eq bu assms \n      fc_mats_carrier"], ["proof (prove)\nusing this:\n  hermitian_decomp A ?B ?U \\<Longrightarrow>\n  ?B \\<in> carrier_mat (dim_row A) (dim_col A)\n  dimR = dimC\n  hermitian_decomp A B U \\<and>\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n  hermitian A\n  A \\<in> fc_mats\n  make_pm A = (p, M)\n  fc_mats = carrier_mat dimR dimC\n\ngoal (1 subgoal):\n 1. B \\<in> carrier_mat dimR dimR", "by auto"], ["proof (state)\nthis:\n  B \\<in> carrier_mat dimR dimR\n\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "have Bvals: \"diag_mat B = eigvals A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diag_mat B = eigvals A", "using bu hermitian_decomp_eigenvalues[of A B U]"], ["proof (prove)\nusing this:\n  hermitian_decomp A B U \\<and>\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n  hermitian_decomp A B U \\<Longrightarrow> diag_mat B = eigvals A\n\ngoal (1 subgoal):\n 1. diag_mat B = eigvals A", "by simp"], ["proof (state)\nthis:\n  diag_mat B = eigvals A\n\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "have Bii: \"\\<And>i. i < dimR \\<Longrightarrow> B$$(i, i) \\<in> Reals\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. i < dimR \\<Longrightarrow> B $$ (i, i) \\<in> \\<real>", "using bu hermitian_decomp_real_eigvals[of A B U] \n      dimB"], ["proof (prove)\nusing this:\n  hermitian_decomp A B U \\<and>\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n  hermitian_decomp A B U \\<Longrightarrow>\n  \\<forall>i<dim_row B. B $$ (i, i) \\<in> \\<real>\n  B \\<in> carrier_mat dimR dimR\n\ngoal (1 subgoal):\n 1. \\<And>i. i < dimR \\<Longrightarrow> B $$ (i, i) \\<in> \\<real>", "by simp"], ["proof (state)\nthis:\n  ?i2 < dimR \\<Longrightarrow> B $$ (?i2, ?i2) \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "have \"diag_elems B = set (eigvals A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diag_elems B = set (eigvals A)", "using dimB Bvals diag_elems_set_diag_mat[of B]"], ["proof (prove)\nusing this:\n  B \\<in> carrier_mat dimR dimR\n  diag_mat B = eigvals A\n  diag_elems B = set (diag_mat B)\n\ngoal (1 subgoal):\n 1. diag_elems B = set (eigvals A)", "by simp"], ["proof (state)\nthis:\n  diag_elems B = set (eigvals A)\n\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "have \"M = mk_meas_outcome B U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M = mk_meas_outcome B U", "using assms bu"], ["proof (prove)\nusing this:\n  hermitian A\n  A \\<in> fc_mats\n  make_pm A = (p, M)\n  hermitian_decomp A B U \\<and>\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n\ngoal (1 subgoal):\n 1. M = mk_meas_outcome B U", "by simp"], ["proof (state)\nthis:\n  M = mk_meas_outcome B U\n\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "{"], ["proof (state)\nthis:\n  M = mk_meas_outcome B U\n\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "assume \"i < p\""], ["proof (state)\nthis:\n  i < p\n\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "have \"meas_outcome_val (M i) = Re (diag_idx_to_el B i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_val (M i) = Re (diag_idx_to_el B i)", "using \\<open>M = mk_meas_outcome B U\\<close>"], ["proof (prove)\nusing this:\n  M = mk_meas_outcome B U\n\ngoal (1 subgoal):\n 1. meas_outcome_val (M i) = Re (diag_idx_to_el B i)", "unfolding meas_outcome_val_def mk_meas_outcome_def"], ["proof (prove)\nusing this:\n  M =\n  (\\<lambda>i.\n      (Re (diag_idx_to_el B i),\n       project_vecs (zero_col U)\n        (diag_elem_indices (diag_idx_to_el B i) B)))\n\ngoal (1 subgoal):\n 1. fst (M i) = Re (diag_idx_to_el B i)", "by simp"], ["proof (state)\nthis:\n  meas_outcome_val (M i) = Re (diag_idx_to_el B i)\n\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "also"], ["proof (state)\nthis:\n  meas_outcome_val (M i) = Re (diag_idx_to_el B i)\n\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "have \"... = diag_idx_to_el B i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (Re (diag_idx_to_el B i)) = diag_idx_to_el B i", "using diag_idx_to_el_real dimB \\<open>i < p\\<close> \n        \\<open>p = dist_el_card B\\<close> Bii"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>i<dim_row ?B. ?B $$ (i, i) \\<in> \\<real>;\n   ?i < dist_el_card ?B\\<rbrakk>\n  \\<Longrightarrow> complex_of_real (Re (diag_idx_to_el ?B ?i)) =\n                    diag_idx_to_el ?B ?i\n  B \\<in> carrier_mat dimR dimR\n  i < p\n  p = dist_el_card B\n  ?i2 < dimR \\<Longrightarrow> B $$ (?i2, ?i2) \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. complex_of_real (Re (diag_idx_to_el B i)) = diag_idx_to_el B i", "by simp"], ["proof (state)\nthis:\n  complex_of_real (Re (diag_idx_to_el B i)) = diag_idx_to_el B i\n\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "finally"], ["proof (chain)\npicking this:\n  complex_of_real (meas_outcome_val (M i)) = diag_idx_to_el B i", "have \"meas_outcome_val (M i) = diag_idx_to_el B i\""], ["proof (prove)\nusing this:\n  complex_of_real (meas_outcome_val (M i)) = diag_idx_to_el B i\n\ngoal (1 subgoal):\n 1. complex_of_real (meas_outcome_val (M i)) = diag_idx_to_el B i", "."], ["proof (state)\nthis:\n  complex_of_real (meas_outcome_val (M i)) = diag_idx_to_el B i\n\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "}"], ["proof (state)\nthis:\n  ?i4 < p \\<Longrightarrow>\n  complex_of_real (meas_outcome_val (M ?i4)) = diag_idx_to_el B ?i4\n\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "note eq = this"], ["proof (state)\nthis:\n  ?i4 < p \\<Longrightarrow>\n  complex_of_real (meas_outcome_val (M ?i4)) = diag_idx_to_el B ?i4\n\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "have \"bij_betw (diag_idx_to_el B) {..<dist_el_card B} (diag_elems B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (diag_idx_to_el B) {..<dist_el_card B} (diag_elems B)", "using diag_idx_to_el_bij[of B]"], ["proof (prove)\nusing this:\n  bij_betw (diag_idx_to_el B) {..<dist_el_card B} (diag_elems B)\n\ngoal (1 subgoal):\n 1. bij_betw (diag_idx_to_el B) {..<dist_el_card B} (diag_elems B)", "by simp"], ["proof (state)\nthis:\n  bij_betw (diag_idx_to_el B) {..<dist_el_card B} (diag_elems B)\n\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "hence \"diag_idx_to_el B ` {..< p} = diag_elems B\""], ["proof (prove)\nusing this:\n  bij_betw (diag_idx_to_el B) {..<dist_el_card B} (diag_elems B)\n\ngoal (1 subgoal):\n 1. diag_idx_to_el B ` {..<p} = diag_elems B", "using \\<open>p = dist_el_card B\\<close>"], ["proof (prove)\nusing this:\n  bij_betw (diag_idx_to_el B) {..<dist_el_card B} (diag_elems B)\n  p = dist_el_card B\n\ngoal (1 subgoal):\n 1. diag_idx_to_el B ` {..<p} = diag_elems B", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  inj_on (diag_idx_to_el B) {..<dist_el_card B} \\<and>\n  diag_idx_to_el B ` {..<dist_el_card B} = diag_elems B\n  p = dist_el_card B\n\ngoal (1 subgoal):\n 1. diag_idx_to_el B ` {..<p} = diag_elems B", "by simp"], ["proof (state)\nthis:\n  diag_idx_to_el B ` {..<p} = diag_elems B\n\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "thus ?thesis"], ["proof (prove)\nusing this:\n  diag_idx_to_el B ` {..<p} = diag_elems B\n\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "using eq \\<open>diag_elems B = set (eigvals A)\\<close>"], ["proof (prove)\nusing this:\n  diag_idx_to_el B ` {..<p} = diag_elems B\n  ?i4 < p \\<Longrightarrow>\n  complex_of_real (meas_outcome_val (M ?i4)) = diag_idx_to_el B ?i4\n  diag_elems B = set (eigvals A)\n\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "unfolding spectrum_def"], ["proof (prove)\nusing this:\n  diag_idx_to_el B ` {..<p} = diag_elems B\n  ?i4 < p \\<Longrightarrow>\n  complex_of_real (meas_outcome_val (M ?i4)) = diag_idx_to_el B ?i4\n  diag_elems B = set (eigvals A)\n\ngoal (1 subgoal):\n 1. set (eigvals A) =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "by auto"], ["proof (state)\nthis:\n  spectrum A =\n  (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) spectrum_meas_outcome_val_eq': \n  assumes \"hermitian A\" \n  and \"A \\<in> fc_mats\"\nand \"make_pm A = (p, M)\"\nshows \"{Re x|x. x\\<in> spectrum A} = (\\<lambda>i. meas_outcome_val (M i)) `{..< p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {Re x |x. x \\<in> spectrum A} =\n    (\\<lambda>i. meas_outcome_val (M i)) ` {..<p}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {Re x |x. x \\<in> spectrum A}\n    \\<subseteq> (\\<lambda>i. meas_outcome_val (M i)) ` {..<p}\n 2. (\\<lambda>i. meas_outcome_val (M i)) ` {..<p}\n    \\<subseteq> {Re x |x. x \\<in> spectrum A}", "show \"{Re x |x. x \\<in> spectrum A} \\<subseteq> (\\<lambda>i. meas_outcome_val (M i)) ` {..<p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {Re x |x. x \\<in> spectrum A}\n    \\<subseteq> (\\<lambda>i. meas_outcome_val (M i)) ` {..<p}", "using spectrum_meas_outcome_val_eq assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats; make_pm ?A = (?p, ?M)\\<rbrakk>\n  \\<Longrightarrow> spectrum ?A =\n                    (\\<lambda>x.\n                        complex_of_real (meas_outcome_val (?M x))) `\n                    {..<?p}\n  hermitian A\n  A \\<in> fc_mats\n  make_pm A = (p, M)\n\ngoal (1 subgoal):\n 1. {Re x |x. x \\<in> spectrum A}\n    \\<subseteq> (\\<lambda>i. meas_outcome_val (M i)) ` {..<p}", "by force"], ["proof (state)\nthis:\n  {Re x |x. x \\<in> spectrum A}\n  \\<subseteq> (\\<lambda>i. meas_outcome_val (M i)) ` {..<p}\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. meas_outcome_val (M i)) ` {..<p}\n    \\<subseteq> {Re x |x. x \\<in> spectrum A}", "show \"(\\<lambda>i. meas_outcome_val (M i)) ` {..<p} \\<subseteq> {Re x |x. x \\<in> spectrum A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. meas_outcome_val (M i)) ` {..<p}\n    \\<subseteq> {Re x |x. x \\<in> spectrum A}", "using spectrum_meas_outcome_val_eq assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats; make_pm ?A = (?p, ?M)\\<rbrakk>\n  \\<Longrightarrow> spectrum ?A =\n                    (\\<lambda>x.\n                        complex_of_real (meas_outcome_val (?M x))) `\n                    {..<?p}\n  hermitian A\n  A \\<in> fc_mats\n  make_pm A = (p, M)\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. meas_outcome_val (M i)) ` {..<p}\n    \\<subseteq> {Re x |x. x \\<in> spectrum A}", "by force"], ["proof (state)\nthis:\n  (\\<lambda>i. meas_outcome_val (M i)) ` {..<p}\n  \\<subseteq> {Re x |x. x \\<in> spectrum A}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) make_pm_eigenvalues:\n  assumes \"A\\<in> fc_mats\"\n  and \"hermitian A\"\nand \"i < proj_meas_size (make_pm A)\"\nshows \"meas_outcome_val (proj_meas_outcomes (make_pm A) i) \\<in> spectrum A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (meas_outcome_val (proj_meas_outcomes (make_pm A) i))\n    \\<in> spectrum A", "using spectrum_meas_outcome_val_eq[of A] assms make_pm_decomp"], ["proof (prove)\nusing this:\n  \\<lbrakk>hermitian A; A \\<in> fc_mats; make_pm A = (?p, ?M)\\<rbrakk>\n  \\<Longrightarrow> spectrum A =\n                    (\\<lambda>x.\n                        complex_of_real (meas_outcome_val (?M x))) `\n                    {..<?p}\n  A \\<in> fc_mats\n  hermitian A\n  i < proj_meas_size (make_pm A)\n  make_pm ?A =\n  (proj_meas_size (make_pm ?A), proj_meas_outcomes (make_pm ?A))\n\ngoal (1 subgoal):\n 1. complex_of_real (meas_outcome_val (proj_meas_outcomes (make_pm A) i))\n    \\<in> spectrum A", "by auto"], ["", "lemma (in cpx_sq_mat) make_pm_spectrum:\n  assumes \"A\\<in> fc_mats\"\n  and \"hermitian A\"\n  and \"make_pm A = (p,M)\"\nshows \"(\\<lambda>i. meas_outcome_val (proj_meas_outcomes (make_pm A) i)) ` {..< p} = spectrum A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real\n         (meas_outcome_val (proj_meas_outcomes (make_pm A) x))) `\n    {..<p} =\n    spectrum A", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        complex_of_real\n         (meas_outcome_val (proj_meas_outcomes (make_pm A) x))) `\n    {..<p}\n    \\<subseteq> spectrum A\n 2. spectrum A\n    \\<subseteq> (\\<lambda>x.\n                    complex_of_real\n                     (meas_outcome_val\n                       (proj_meas_outcomes (make_pm A) x))) `\n                {..<p}", "show \"(\\<lambda>x. complex_of_real (meas_outcome_val (proj_meas_outcomes (make_pm A) x))) ` {..<p} \\<subseteq> \n    spectrum A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real\n         (meas_outcome_val (proj_meas_outcomes (make_pm A) x))) `\n    {..<p}\n    \\<subseteq> spectrum A", "using assms make_pm_eigenvalues make_pm_decomp"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  \\<lbrakk>?A \\<in> fc_mats; hermitian ?A;\n   ?i < proj_meas_size (make_pm ?A)\\<rbrakk>\n  \\<Longrightarrow> complex_of_real\n                     (meas_outcome_val (proj_meas_outcomes (make_pm ?A) ?i))\n                    \\<in> spectrum ?A\n  make_pm ?A =\n  (proj_meas_size (make_pm ?A), proj_meas_outcomes (make_pm ?A))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real\n         (meas_outcome_val (proj_meas_outcomes (make_pm A) x))) `\n    {..<p}\n    \\<subseteq> spectrum A", "by (metis (mono_tags, lifting) Pair_inject image_subsetI lessThan_iff)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      complex_of_real\n       (meas_outcome_val (proj_meas_outcomes (make_pm A) x))) `\n  {..<p}\n  \\<subseteq> spectrum A\n\ngoal (1 subgoal):\n 1. spectrum A\n    \\<subseteq> (\\<lambda>x.\n                    complex_of_real\n                     (meas_outcome_val\n                       (proj_meas_outcomes (make_pm A) x))) `\n                {..<p}", "show \"spectrum A \\<subseteq> \n    (\\<lambda>x. complex_of_real (meas_outcome_val (proj_meas_outcomes (make_pm A) x))) ` {..<p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spectrum A\n    \\<subseteq> (\\<lambda>x.\n                    complex_of_real\n                     (meas_outcome_val\n                       (proj_meas_outcomes (make_pm A) x))) `\n                {..<p}", "by (metis Pair_inject assms equalityE  make_pm_decomp spectrum_meas_outcome_val_eq)"], ["proof (state)\nthis:\n  spectrum A\n  \\<subseteq> (\\<lambda>x.\n                  complex_of_real\n                   (meas_outcome_val (proj_meas_outcomes (make_pm A) x))) `\n              {..<p}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) spectrum_size:\n  assumes \"hermitian A\"\n  and \"A\\<in> fc_mats\"\nand \"make_pm A = (p, M)\"\nshows \"p = card (spectrum A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = card (spectrum A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p = card (spectrum A)", "obtain B U where bu: \"hermitian_decomp A B U \\<and> \n    make_pm A = (dist_el_card B, mk_meas_outcome B U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<and>\n        make_pm A = (dist_el_card B, mk_meas_outcome B U) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms hermitian_schur_decomp'[OF assms(1)]"], ["proof (prove)\nusing this:\n  hermitian A\n  A \\<in> fc_mats\n  make_pm A = (p, M)\n  \\<lbrakk>A \\<in> fc_mats;\n   \\<And>B U.\n      hermitian_decomp A B U \\<and>\n      make_pm A = (dist_el_card B, mk_meas_outcome B U) \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>B U.\n        hermitian_decomp A B U \\<and>\n        make_pm A = (dist_el_card B, mk_meas_outcome B U) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  hermitian_decomp A B U \\<and>\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n\ngoal (1 subgoal):\n 1. p = card (spectrum A)", "hence \"p = dist_el_card B\""], ["proof (prove)\nusing this:\n  hermitian_decomp A B U \\<and>\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n\ngoal (1 subgoal):\n 1. p = dist_el_card B", "using assms"], ["proof (prove)\nusing this:\n  hermitian_decomp A B U \\<and>\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n  hermitian A\n  A \\<in> fc_mats\n  make_pm A = (p, M)\n\ngoal (1 subgoal):\n 1. p = dist_el_card B", "by simp"], ["proof (state)\nthis:\n  p = dist_el_card B\n\ngoal (1 subgoal):\n 1. p = card (spectrum A)", "have \"spectrum A = set (diag_mat B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spectrum A = set (diag_mat B)", "using bu hermitian_decomp_eigenvalues[of A B U]"], ["proof (prove)\nusing this:\n  hermitian_decomp A B U \\<and>\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n  hermitian_decomp A B U \\<Longrightarrow> diag_mat B = eigvals A\n\ngoal (1 subgoal):\n 1. spectrum A = set (diag_mat B)", "unfolding spectrum_def"], ["proof (prove)\nusing this:\n  hermitian_decomp A B U \\<and>\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n  hermitian_decomp A B U \\<Longrightarrow> diag_mat B = eigvals A\n\ngoal (1 subgoal):\n 1. set (eigvals A) = set (diag_mat B)", "by simp"], ["proof (state)\nthis:\n  spectrum A = set (diag_mat B)\n\ngoal (1 subgoal):\n 1. p = card (spectrum A)", "also"], ["proof (state)\nthis:\n  spectrum A = set (diag_mat B)\n\ngoal (1 subgoal):\n 1. p = card (spectrum A)", "have \"... = diag_elems B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (diag_mat B) = diag_elems B", "using diag_elems_set_diag_mat[of B]"], ["proof (prove)\nusing this:\n  diag_elems B = set (diag_mat B)\n\ngoal (1 subgoal):\n 1. set (diag_mat B) = diag_elems B", "by simp"], ["proof (state)\nthis:\n  set (diag_mat B) = diag_elems B\n\ngoal (1 subgoal):\n 1. p = card (spectrum A)", "finally"], ["proof (chain)\npicking this:\n  spectrum A = diag_elems B", "have \"spectrum A = diag_elems B\""], ["proof (prove)\nusing this:\n  spectrum A = diag_elems B\n\ngoal (1 subgoal):\n 1. spectrum A = diag_elems B", "."], ["proof (state)\nthis:\n  spectrum A = diag_elems B\n\ngoal (1 subgoal):\n 1. p = card (spectrum A)", "thus ?thesis"], ["proof (prove)\nusing this:\n  spectrum A = diag_elems B\n\ngoal (1 subgoal):\n 1. p = card (spectrum A)", "using \\<open>p = dist_el_card B\\<close>"], ["proof (prove)\nusing this:\n  spectrum A = diag_elems B\n  p = dist_el_card B\n\ngoal (1 subgoal):\n 1. p = card (spectrum A)", "unfolding dist_el_card_def"], ["proof (prove)\nusing this:\n  spectrum A = diag_elems B\n  p = card (diag_elems B)\n\ngoal (1 subgoal):\n 1. p = card (spectrum A)", "by simp"], ["proof (state)\nthis:\n  p = card (spectrum A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) spectrum_size':\n  assumes \"hermitian A\"\nand \"A\\<in> fc_mats\"\nshows \"proj_meas_size (make_pm A) = card (spectrum A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_meas_size (make_pm A) = card (spectrum A)", "using spectrum_size"], ["proof (prove)\nusing this:\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats; make_pm ?A = (?p, ?M)\\<rbrakk>\n  \\<Longrightarrow> ?p = card (spectrum ?A)\n\ngoal (1 subgoal):\n 1. proj_meas_size (make_pm A) = card (spectrum A)", "unfolding proj_meas_size_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats; make_pm ?A = (?p, ?M)\\<rbrakk>\n  \\<Longrightarrow> ?p = card (spectrum ?A)\n\ngoal (1 subgoal):\n 1. fst (make_pm A) = card (spectrum A)", "by (metis assms fst_conv surj_pair)"], ["", "lemma (in cpx_sq_mat) make_pm_projectors':\n  assumes \"hermitian A\"\n  and \"A \\<in> fc_mats\"\n  and \"a<card (spectrum A)\"\nshows \"projector (meas_outcome_prj (proj_meas_outcomes (make_pm A) a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (proj_meas_outcomes (make_pm A) a))", "by (rule make_pm_projectors, (simp add: assms spectrum_size')+)"], ["", "lemma (in cpx_sq_mat) meas_outcome_prj_carrier:\n  assumes \"hermitian A\"\n  and \"A \\<in> fc_mats\"\n  and \"a<card (spectrum A)\"\nshows \"meas_outcome_prj (proj_meas_outcomes (make_pm A) a) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_prj (proj_meas_outcomes (make_pm A) a) \\<in> fc_mats", "proof (rule proj_measurement_square)"], ["proof (state)\ngoal (2 subgoals):\n 1. proj_measurement ?p (proj_meas_outcomes (make_pm A))\n 2. a < ?p", "show \"proj_measurement (proj_meas_size (make_pm A)) (proj_meas_outcomes (make_pm A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_measurement (proj_meas_size (make_pm A))\n     (proj_meas_outcomes (make_pm A))", "using make_pm_proj_measurement' assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<in> fc_mats; hermitian ?A\\<rbrakk>\n  \\<Longrightarrow> proj_measurement (proj_meas_size (make_pm ?A))\n                     (proj_meas_outcomes (make_pm ?A))\n  hermitian A\n  A \\<in> fc_mats\n  a < card (spectrum A)\n\ngoal (1 subgoal):\n 1. proj_measurement (proj_meas_size (make_pm A))\n     (proj_meas_outcomes (make_pm A))", "by simp"], ["proof (state)\nthis:\n  proj_measurement (proj_meas_size (make_pm A))\n   (proj_meas_outcomes (make_pm A))\n\ngoal (1 subgoal):\n 1. a < proj_meas_size (make_pm A)", "show \"a < proj_meas_size (make_pm A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < proj_meas_size (make_pm A)", "using assms \n      spectrum_size[of _ \"proj_meas_size (make_pm A)\"] make_pm_decomp[of A]"], ["proof (prove)\nusing this:\n  hermitian A\n  A \\<in> fc_mats\n  a < card (spectrum A)\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats;\n   make_pm ?A = (proj_meas_size (make_pm A), ?M)\\<rbrakk>\n  \\<Longrightarrow> proj_meas_size (make_pm A) = card (spectrum ?A)\n  make_pm A = (proj_meas_size (make_pm A), proj_meas_outcomes (make_pm A))\n\ngoal (1 subgoal):\n 1. a < proj_meas_size (make_pm A)", "by simp"], ["proof (state)\nthis:\n  a < proj_meas_size (make_pm A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) meas_outcome_prj_trace_real:\n  assumes \"hermitian A\"\n  and \"density_operator R\"\n  and \"R \\<in> fc_mats\"\n  and \"A\\<in> fc_mats\"\n  and \"a<card (spectrum A)\"\nshows \"Re (Complex_Matrix.trace (R * meas_outcome_prj (proj_meas_outcomes (make_pm A) a))) =\n  Complex_Matrix.trace (R * meas_outcome_prj (proj_meas_outcomes (make_pm A) a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real\n     (Re (Complex_Matrix.trace\n           (R * meas_outcome_prj (proj_meas_outcomes (make_pm A) a)))) =\n    Complex_Matrix.trace\n     (R * meas_outcome_prj (proj_meas_outcomes (make_pm A) a))", "proof (rule trace_proj_pos_real)"], ["proof (state)\ngoal (4 subgoals):\n 1. projector (meas_outcome_prj (proj_meas_outcomes (make_pm A) a))\n 2. Complex_Matrix.positive R\n 3. meas_outcome_prj (proj_meas_outcomes (make_pm A) a)\n    \\<in> carrier_mat ?n ?n\n 4. R \\<in> carrier_mat ?n ?n", "show \"R \\<in> carrier_mat dimR dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<in> carrier_mat dimR dimR", "using fc_mats_carrier assms dim_eq"], ["proof (prove)\nusing this:\n  fc_mats = carrier_mat dimR dimC\n  hermitian A\n  density_operator R\n  R \\<in> fc_mats\n  A \\<in> fc_mats\n  a < card (spectrum A)\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. R \\<in> carrier_mat dimR dimR", "by simp"], ["proof (state)\nthis:\n  R \\<in> carrier_mat dimR dimR\n\ngoal (3 subgoals):\n 1. projector (meas_outcome_prj (proj_meas_outcomes (make_pm A) a))\n 2. Complex_Matrix.positive R\n 3. meas_outcome_prj (proj_meas_outcomes (make_pm A) a)\n    \\<in> carrier_mat dimR dimR", "show \"Complex_Matrix.positive R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.positive R", "using assms"], ["proof (prove)\nusing this:\n  hermitian A\n  density_operator R\n  R \\<in> fc_mats\n  A \\<in> fc_mats\n  a < card (spectrum A)\n\ngoal (1 subgoal):\n 1. Complex_Matrix.positive R", "unfolding density_operator_def"], ["proof (prove)\nusing this:\n  hermitian A\n  Complex_Matrix.positive R \\<and> Complex_Matrix.trace R = 1\n  R \\<in> fc_mats\n  A \\<in> fc_mats\n  a < card (spectrum A)\n\ngoal (1 subgoal):\n 1. Complex_Matrix.positive R", "by simp"], ["proof (state)\nthis:\n  Complex_Matrix.positive R\n\ngoal (2 subgoals):\n 1. projector (meas_outcome_prj (proj_meas_outcomes (make_pm A) a))\n 2. meas_outcome_prj (proj_meas_outcomes (make_pm A) a)\n    \\<in> carrier_mat dimR dimR", "show \"projector (meas_outcome_prj (proj_meas_outcomes (make_pm A) a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (proj_meas_outcomes (make_pm A) a))", "using assms \n      make_pm_projectors'"], ["proof (prove)\nusing this:\n  hermitian A\n  density_operator R\n  R \\<in> fc_mats\n  A \\<in> fc_mats\n  a < card (spectrum A)\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats; ?a < card (spectrum ?A)\\<rbrakk>\n  \\<Longrightarrow> projector\n                     (meas_outcome_prj (proj_meas_outcomes (make_pm ?A) ?a))\n\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (proj_meas_outcomes (make_pm A) a))", "by simp"], ["proof (state)\nthis:\n  projector (meas_outcome_prj (proj_meas_outcomes (make_pm A) a))\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (proj_meas_outcomes (make_pm A) a)\n    \\<in> carrier_mat dimR dimR", "show \"meas_outcome_prj (proj_meas_outcomes (make_pm A) a) \\<in> carrier_mat dimR dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_prj (proj_meas_outcomes (make_pm A) a)\n    \\<in> carrier_mat dimR dimR", "using meas_outcome_prj_carrier assms \n    dim_eq fc_mats_carrier"], ["proof (prove)\nusing this:\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats; ?a < card (spectrum ?A)\\<rbrakk>\n  \\<Longrightarrow> meas_outcome_prj (proj_meas_outcomes (make_pm ?A) ?a)\n                    \\<in> fc_mats\n  hermitian A\n  density_operator R\n  R \\<in> fc_mats\n  A \\<in> fc_mats\n  a < card (spectrum A)\n  dimR = dimC\n  fc_mats = carrier_mat dimR dimC\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (proj_meas_outcomes (make_pm A) a)\n    \\<in> carrier_mat dimR dimR", "by simp"], ["proof (state)\nthis:\n  meas_outcome_prj (proj_meas_outcomes (make_pm A) a)\n  \\<in> carrier_mat dimR dimR\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) sum_over_spectrum:\n  assumes \"A\\<in> fc_mats\"\nand \"hermitian A\"\nand \"make_pm A = (p, M)\"\nshows \"(\\<Sum> y \\<in> spectrum A. f y) =  (\\<Sum> i < p. f (meas_outcome_val (M i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f (spectrum A) =\n    (\\<Sum>i<p. f (complex_of_real (meas_outcome_val (M i))))", "proof (rule sum.reindex_cong)"], ["proof (state)\ngoal (3 subgoals):\n 1. inj_on ?l {..<p}\n 2. spectrum A = ?l ` {..<p}\n 3. \\<And>x.\n       x \\<in> {..<p} \\<Longrightarrow>\n       f (?l x) = f (complex_of_real (meas_outcome_val (M x)))", "show \"spectrum A =(\\<lambda>x. (meas_outcome_val (M x)))` {..< p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "using spectrum_meas_outcome_val_eq assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats; make_pm ?A = (?p, ?M)\\<rbrakk>\n  \\<Longrightarrow> spectrum ?A =\n                    (\\<lambda>x.\n                        complex_of_real (meas_outcome_val (?M x))) `\n                    {..<?p}\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n\ngoal (1 subgoal):\n 1. spectrum A =\n    (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}", "by simp"], ["proof (state)\nthis:\n  spectrum A =\n  (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) ` {..<p}\n\ngoal (2 subgoals):\n 1. inj_on (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) {..<p}\n 2. \\<And>x.\n       x \\<in> {..<p} \\<Longrightarrow>\n       f (complex_of_real (meas_outcome_val (M x))) =\n       f (complex_of_real (meas_outcome_val (M x)))", "show \"inj_on (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) {..<p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) {..<p}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) {..<p}", "have \"inj_on (\\<lambda>x. (meas_outcome_val (M x))) {..<p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>x. meas_outcome_val (M x)) {..<p}", "using make_pm_proj_measurement[of A p M] assms proj_measurement_inj"], ["proof (prove)\nusing this:\n  \\<lbrakk>A \\<in> fc_mats; hermitian A; make_pm A = (p, M)\\<rbrakk>\n  \\<Longrightarrow> proj_measurement p M\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  proj_measurement ?p ?M \\<Longrightarrow>\n  inj_on (\\<lambda>i. meas_outcome_val (?M i)) {..<?p}\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>x. meas_outcome_val (M x)) {..<p}", "by simp"], ["proof (state)\nthis:\n  inj_on (\\<lambda>x. meas_outcome_val (M x)) {..<p}\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) {..<p}", "thus ?thesis"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>x. meas_outcome_val (M x)) {..<p}\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) {..<p}", "by (simp add: inj_on_def)"], ["proof (state)\nthis:\n  inj_on (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) {..<p}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on (\\<lambda>x. complex_of_real (meas_outcome_val (M x))) {..<p}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {..<p} \\<Longrightarrow>\n       f (complex_of_real (meas_outcome_val (M x))) =\n       f (complex_of_real (meas_outcome_val (M x)))", "qed simp"], ["", "lemma (in cpx_sq_mat) sum_over_spectrum':\n  assumes \"A\\<in> fc_mats\"\nand \"hermitian A\"\nand \"make_pm A = (p, M)\"\nshows \"(\\<Sum> y \\<in> {Re x|x. x \\<in> spectrum A}. f y) =  (\\<Sum> i < p. f (meas_outcome_val (M i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {Re x |x. x \\<in> spectrum A} =\n    (\\<Sum>i<p. f (meas_outcome_val (M i)))", "proof (rule sum.reindex_cong)"], ["proof (state)\ngoal (3 subgoals):\n 1. inj_on ?l {..<p}\n 2. {Re x |x. x \\<in> spectrum A} = ?l ` {..<p}\n 3. \\<And>x.\n       x \\<in> {..<p} \\<Longrightarrow>\n       f (?l x) = f (meas_outcome_val (M x))", "show \"{Re x|x. x \\<in> spectrum A} =(\\<lambda>x. (meas_outcome_val (M x)))` {..< p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {Re x |x. x \\<in> spectrum A} =\n    (\\<lambda>x. meas_outcome_val (M x)) ` {..<p}", "using spectrum_meas_outcome_val_eq' assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats; make_pm ?A = (?p, ?M)\\<rbrakk>\n  \\<Longrightarrow> {Re x |x. x \\<in> spectrum ?A} =\n                    (\\<lambda>i. meas_outcome_val (?M i)) ` {..<?p}\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n\ngoal (1 subgoal):\n 1. {Re x |x. x \\<in> spectrum A} =\n    (\\<lambda>x. meas_outcome_val (M x)) ` {..<p}", "by simp"], ["proof (state)\nthis:\n  {Re x |x. x \\<in> spectrum A} =\n  (\\<lambda>x. meas_outcome_val (M x)) ` {..<p}\n\ngoal (2 subgoals):\n 1. inj_on (\\<lambda>x. meas_outcome_val (M x)) {..<p}\n 2. \\<And>x.\n       x \\<in> {..<p} \\<Longrightarrow>\n       f (meas_outcome_val (M x)) = f (meas_outcome_val (M x))", "show \"inj_on (\\<lambda>x. (meas_outcome_val (M x))) {..<p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>x. meas_outcome_val (M x)) {..<p}", "using make_pm_proj_measurement[of A p M]\n        assms proj_measurement_inj"], ["proof (prove)\nusing this:\n  \\<lbrakk>A \\<in> fc_mats; hermitian A; make_pm A = (p, M)\\<rbrakk>\n  \\<Longrightarrow> proj_measurement p M\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  proj_measurement ?p ?M \\<Longrightarrow>\n  inj_on (\\<lambda>i. meas_outcome_val (?M i)) {..<?p}\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>x. meas_outcome_val (M x)) {..<p}", "by simp"], ["proof (state)\nthis:\n  inj_on (\\<lambda>x. meas_outcome_val (M x)) {..<p}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {..<p} \\<Longrightarrow>\n       f (meas_outcome_val (M x)) = f (meas_outcome_val (M x))", "qed simp"], ["", "text \\<open>When a matrix $A$ is decomposed into a projective measurement $\\{(\\lambda_a, \\pi_a)\\}$, it \ncan be recovered by the formula $A = \\sum \\lambda_a \\pi_a$.\\<close>"], ["", "lemma (in cpx_sq_mat) make_pm_sum:\n  assumes \"A \\<in> fc_mats\"\n  and \"hermitian A\"\n  and \"make_pm A = (p, M)\"\nshows \"sum_mat (\\<lambda>i.  (meas_outcome_val (M i)) \\<cdot>\\<^sub>m meas_outcome_prj (M i)) {..< p} = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "have es: \"char_poly A = (\\<Prod> (e :: complex) \\<leftarrow> (eigvals A). [:- e, 1:])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])", "using assms fc_mats_carrier eigvals_poly_length dim_eq"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  fc_mats = carrier_mat dimR dimC\n  ?M \\<in> carrier_mat ?n ?n \\<Longrightarrow>\n  char_poly ?M = (\\<Prod>a\\<leftarrow>eigvals ?M. [:- a, 1:]) \\<and>\n  length (eigvals ?M) = dim_row ?M\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])", "by auto"], ["proof (state)\nthis:\n  char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "obtain B U Q where us: \"unitary_schur_decomposition A (eigvals A) = (B,U,Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B U Q.\n        unitary_schur_decomposition A (eigvals A) =\n        (B, U, Q) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"unitary_schur_decomposition A (eigvals A)\", auto)"], ["proof (state)\nthis:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "then"], ["proof (chain)\npicking this:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)", "have \"similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and> diagonal_mat B \\<and> \n    diag_mat B = (eigvals A) \n    \\<and> unitary U \\<and> (\\<forall>i < dimR. B$$(i, i) \\<in> Reals)\""], ["proof (prove)\nusing this:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n    diagonal_mat B \\<and>\n    diag_mat B = eigvals A \\<and>\n    Complex_Matrix.unitary U \\<and>\n    (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)", "using hermitian_eigenvalue_real assms fc_mats_carrier es dim_eq"], ["proof (prove)\nusing this:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n  \\<lbrakk>?A \\<in> carrier_mat ?n ?n; hermitian ?A;\n   char_poly ?A = (\\<Prod>e\\<leftarrow>?es. [:- e, 1:]);\n   unitary_schur_decomposition ?A ?es = (?B, ?P, ?Q)\\<rbrakk>\n  \\<Longrightarrow> similar_mat_wit ?A ?B ?P\n                     (Complex_Matrix.adjoint ?P) \\<and>\n                    diagonal_mat ?B \\<and>\n                    diag_mat ?B = ?es \\<and>\n                    Complex_Matrix.unitary ?P \\<and>\n                    (\\<forall>i<?n. ?B $$ (i, i) \\<in> \\<real>)\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  fc_mats = carrier_mat dimR dimC\n  char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n    diagonal_mat B \\<and>\n    diag_mat B = eigvals A \\<and>\n    Complex_Matrix.unitary U \\<and>\n    (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)", "by auto"], ["proof (state)\nthis:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "hence A: \"A = U * B * (Complex_Matrix.adjoint U)\" and dB: \"diagonal_mat B\"\n    and Bii: \"\\<And>i. i < dimR \\<Longrightarrow> B$$(i, i) \\<in> Reals\"\n    and dimB: \"B \\<in> carrier_mat dimR dimR\" and dimP: \"U \\<in> carrier_mat dimR dimR\" and \n    dimaP: \"Complex_Matrix.adjoint U \\<in> carrier_mat dimR dimR\" and unit: \"unitary U\""], ["proof (prove)\nusing this:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. (A = U * B * Complex_Matrix.adjoint U &&&\n     diagonal_mat B &&&\n     (\\<And>i. i < dimR \\<Longrightarrow> B $$ (i, i) \\<in> \\<real>)) &&&\n    (B \\<in> carrier_mat dimR dimR &&& U \\<in> carrier_mat dimR dimR) &&&\n    Complex_Matrix.adjoint U \\<in> carrier_mat dimR dimR &&&\n    Complex_Matrix.unitary U", "unfolding similar_mat_wit_def Let_def"], ["proof (prove)\nusing this:\n  ({A, B, U, Complex_Matrix.adjoint U}\n   \\<subseteq> carrier_mat (dim_row A) (dim_row A) \\<and>\n   U * Complex_Matrix.adjoint U = 1\\<^sub>m (dim_row A) \\<and>\n   Complex_Matrix.adjoint U * U = 1\\<^sub>m (dim_row A) \\<and>\n   A = U * B * Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. (A = U * B * Complex_Matrix.adjoint U &&&\n     diagonal_mat B &&&\n     (\\<And>i. i < dimR \\<Longrightarrow> B $$ (i, i) \\<in> \\<real>)) &&&\n    (B \\<in> carrier_mat dimR dimR &&& U \\<in> carrier_mat dimR dimR) &&&\n    Complex_Matrix.adjoint U \\<in> carrier_mat dimR dimR &&&\n    Complex_Matrix.unitary U", "using assms fc_mats_carrier"], ["proof (prove)\nusing this:\n  ({A, B, U, Complex_Matrix.adjoint U}\n   \\<subseteq> carrier_mat (dim_row A) (dim_row A) \\<and>\n   U * Complex_Matrix.adjoint U = 1\\<^sub>m (dim_row A) \\<and>\n   Complex_Matrix.adjoint U * U = 1\\<^sub>m (dim_row A) \\<and>\n   A = U * B * Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  fc_mats = carrier_mat dimR dimC\n\ngoal (1 subgoal):\n 1. (A = U * B * Complex_Matrix.adjoint U &&&\n     diagonal_mat B &&&\n     (\\<And>i. i < dimR \\<Longrightarrow> B $$ (i, i) \\<in> \\<real>)) &&&\n    (B \\<in> carrier_mat dimR dimR &&& U \\<in> carrier_mat dimR dimR) &&&\n    Complex_Matrix.adjoint U \\<in> carrier_mat dimR dimR &&&\n    Complex_Matrix.unitary U", "by auto"], ["proof (state)\nthis:\n  A = U * B * Complex_Matrix.adjoint U\n  diagonal_mat B\n  ?i2 < dimR \\<Longrightarrow> B $$ (?i2, ?i2) \\<in> \\<real>\n  B \\<in> carrier_mat dimR dimR\n  U \\<in> carrier_mat dimR dimR\n  Complex_Matrix.adjoint U \\<in> carrier_mat dimR dimR\n  Complex_Matrix.unitary U\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "hence mpeq: \"make_pm A = (dist_el_card B, mk_meas_outcome B U)\""], ["proof (prove)\nusing this:\n  A = U * B * Complex_Matrix.adjoint U\n  diagonal_mat B\n  ?i2 < dimR \\<Longrightarrow> B $$ (?i2, ?i2) \\<in> \\<real>\n  B \\<in> carrier_mat dimR dimR\n  U \\<in> carrier_mat dimR dimR\n  Complex_Matrix.adjoint U \\<in> carrier_mat dimR dimR\n  Complex_Matrix.unitary U\n\ngoal (1 subgoal):\n 1. make_pm A = (dist_el_card B, mk_meas_outcome B U)", "using us Let_def"], ["proof (prove)\nusing this:\n  A = U * B * Complex_Matrix.adjoint U\n  diagonal_mat B\n  ?i2 < dimR \\<Longrightarrow> B $$ (?i2, ?i2) \\<in> \\<real>\n  B \\<in> carrier_mat dimR dimR\n  U \\<in> carrier_mat dimR dimR\n  Complex_Matrix.adjoint U \\<in> carrier_mat dimR dimR\n  Complex_Matrix.unitary U\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n  Let ?s ?f \\<equiv> ?f ?s\n\ngoal (1 subgoal):\n 1. make_pm A = (dist_el_card B, mk_meas_outcome B U)", "unfolding make_pm_def"], ["proof (prove)\nusing this:\n  A = U * B * Complex_Matrix.adjoint U\n  diagonal_mat B\n  ?i2 < dimR \\<Longrightarrow> B $$ (?i2, ?i2) \\<in> \\<real>\n  B \\<in> carrier_mat dimR dimR\n  U \\<in> carrier_mat dimR dimR\n  Complex_Matrix.adjoint U \\<in> carrier_mat dimR dimR\n  Complex_Matrix.unitary U\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n  Let ?s ?f \\<equiv> ?f ?s\n\ngoal (1 subgoal):\n 1. (let (B, U, uu_) = unitary_schur_decomposition A (eigvals A)\n     in (dist_el_card B, mk_meas_outcome B U)) =\n    (dist_el_card B, mk_meas_outcome B U)", "by simp"], ["proof (state)\nthis:\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "hence \"p = dist_el_card B\""], ["proof (prove)\nusing this:\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n\ngoal (1 subgoal):\n 1. p = dist_el_card B", "using assms"], ["proof (prove)\nusing this:\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n\ngoal (1 subgoal):\n 1. p = dist_el_card B", "by simp"], ["proof (state)\nthis:\n  p = dist_el_card B\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "have \"M = mk_meas_outcome B U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M = mk_meas_outcome B U", "using assms mpeq"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  make_pm A = (dist_el_card B, mk_meas_outcome B U)\n\ngoal (1 subgoal):\n 1. M = mk_meas_outcome B U", "by simp"], ["proof (state)\nthis:\n  M = mk_meas_outcome B U\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "have \"sum_mat (\\<lambda>i. meas_outcome_val (M i) \\<cdot>\\<^sub>m meas_outcome_prj (M i)) {..< p} = \n    sum_mat (\\<lambda>j. Re (diag_idx_to_el B j)\\<cdot>\\<^sub>m project_vecs (\\<lambda>i. zero_col U i) \n    (diag_elem_indices (diag_idx_to_el B j) B)) {..<(dist_el_card B)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    local.sum_mat\n     (\\<lambda>j.\n         complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n         project_vecs (zero_col U)\n          (diag_elem_indices (diag_idx_to_el B j) B))\n     {..<dist_el_card B}", "using \\<open>p = dist_el_card B\\<close> \n    \\<open>M = mk_meas_outcome B U\\<close>"], ["proof (prove)\nusing this:\n  p = dist_el_card B\n  M = mk_meas_outcome B U\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    local.sum_mat\n     (\\<lambda>j.\n         complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n         project_vecs (zero_col U)\n          (diag_elem_indices (diag_idx_to_el B j) B))\n     {..<dist_el_card B}", "unfolding meas_outcome_val_def meas_outcome_prj_def \n      mk_meas_outcome_def"], ["proof (prove)\nusing this:\n  p = dist_el_card B\n  M =\n  (\\<lambda>i.\n      (Re (diag_idx_to_el B i),\n       project_vecs (zero_col U)\n        (diag_elem_indices (diag_idx_to_el B i) B)))\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i. complex_of_real (fst (M i)) \\<cdot>\\<^sub>m snd (M i))\n     {..<p} =\n    local.sum_mat\n     (\\<lambda>j.\n         complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n         project_vecs (zero_col U)\n          (diag_elem_indices (diag_idx_to_el B j) B))\n     {..<dist_el_card B}", "by simp"], ["proof (state)\nthis:\n  local.sum_mat\n   (\\<lambda>i.\n       complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n       meas_outcome_prj (M i))\n   {..<p} =\n  local.sum_mat\n   (\\<lambda>j.\n       complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n       project_vecs (zero_col U) (diag_elem_indices (diag_idx_to_el B j) B))\n   {..<dist_el_card B}\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "also"], ["proof (state)\nthis:\n  local.sum_mat\n   (\\<lambda>i.\n       complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n       meas_outcome_prj (M i))\n   {..<p} =\n  local.sum_mat\n   (\\<lambda>j.\n       complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n       project_vecs (zero_col U) (diag_elem_indices (diag_idx_to_el B j) B))\n   {..<dist_el_card B}\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "have \"... = sum_mat\n     (\\<lambda>j. sum_mat (\\<lambda>i. (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m rank_1_proj (zero_col U i)) \n    (diag_elem_indices (diag_idx_to_el B j) B)) {..<dist_el_card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>j.\n         complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n         project_vecs (zero_col U)\n          (diag_elem_indices (diag_idx_to_el B j) B))\n     {..<dist_el_card B} =\n    local.sum_mat\n     (\\<lambda>j.\n         local.sum_mat\n          (\\<lambda>i.\n              complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n              rank_1_proj (zero_col U i))\n          (diag_elem_indices (diag_idx_to_el B j) B))\n     {..<dist_el_card B}", "unfolding project_vecs_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>j.\n         complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n         local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n          (diag_elem_indices (diag_idx_to_el B j) B))\n     {..<dist_el_card B} =\n    local.sum_mat\n     (\\<lambda>j.\n         local.sum_mat\n          (\\<lambda>i.\n              complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n              rank_1_proj (zero_col U i))\n          (diag_elem_indices (diag_idx_to_el B j) B))\n     {..<dist_el_card B}", "proof (rule sum_mat_cong)"], ["proof (state)\ngoal (4 subgoals):\n 1. finite {..<dist_el_card B}\n 2. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n        (diag_elem_indices (diag_idx_to_el B i) B) =\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n 3. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n       \\<in> fc_mats\n 4. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n       \\<in> fc_mats", "show \"finite {..<dist_el_card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {..<dist_el_card B}", "by simp"], ["proof (state)\nthis:\n  finite {..<dist_el_card B}\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n        (diag_elem_indices (diag_idx_to_el B i) B) =\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n 2. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n       \\<in> fc_mats\n 3. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n       \\<in> fc_mats", "show \"\\<And>i. i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n         complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n         sum_mat (\\<lambda>i. rank_1_proj (zero_col U i)) (diag_elem_indices (diag_idx_to_el B i) B)\n         \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n       \\<in> fc_mats", "using assms fc_mats_carrier dimP project_vecs_def project_vecs_dim zero_col_dim \n        dim_eq"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  fc_mats = carrier_mat dimR dimC\n  U \\<in> carrier_mat dimR dimR\n  project_vecs ?f ?N = local.sum_mat (\\<lambda>i. rank_1_proj (?f i)) ?N\n  \\<forall>i\\<in>?N. dim_vec (?f i) = dimR \\<Longrightarrow>\n  project_vecs ?f ?N \\<in> fc_mats\n  ?U \\<in> fc_mats \\<Longrightarrow> dim_vec (zero_col ?U ?i) = dimR\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n       \\<in> fc_mats", "by auto"], ["proof (state)\nthis:\n  ?i2 \\<in> {..<dist_el_card B} \\<Longrightarrow>\n  complex_of_real (Re (diag_idx_to_el B ?i2)) \\<cdot>\\<^sub>m\n  local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n   (diag_elem_indices (diag_idx_to_el B ?i2) B)\n  \\<in> fc_mats\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n        (diag_elem_indices (diag_idx_to_el B i) B) =\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n 2. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n       \\<in> fc_mats", "show \"\\<And>i. i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n         sum_mat (\\<lambda>ia. complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n          (diag_elem_indices (diag_idx_to_el B i) B) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n       \\<in> fc_mats", "using assms fc_mats_carrier dimP \n      project_vecs_def project_vecs_dim zero_col_dim dim_eq"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  fc_mats = carrier_mat dimR dimC\n  U \\<in> carrier_mat dimR dimR\n  project_vecs ?f ?N = local.sum_mat (\\<lambda>i. rank_1_proj (?f i)) ?N\n  \\<forall>i\\<in>?N. dim_vec (?f i) = dimR \\<Longrightarrow>\n  project_vecs ?f ?N \\<in> fc_mats\n  ?U \\<in> fc_mats \\<Longrightarrow> dim_vec (zero_col ?U ?i) = dimR\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n       \\<in> fc_mats", "by (metis (no_types, lifting) rank_1_proj_carrier cpx_sq_mat_smult sum_mat_carrier)"], ["proof (state)\nthis:\n  ?i2 \\<in> {..<dist_el_card B} \\<Longrightarrow>\n  local.sum_mat\n   (\\<lambda>ia.\n       complex_of_real (Re (diag_idx_to_el B ?i2)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia))\n   (diag_elem_indices (diag_idx_to_el B ?i2) B)\n  \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n        (diag_elem_indices (diag_idx_to_el B i) B) =\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)", "show \"\\<And>j. j \\<in> {..<dist_el_card B} \\<Longrightarrow>\n          (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m  sum_mat (\\<lambda>i. rank_1_proj (zero_col U i)) \n        (diag_elem_indices (diag_idx_to_el B j) B) =\n         sum_mat (\\<lambda>i. complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m rank_1_proj (zero_col U i))\n          (diag_elem_indices (diag_idx_to_el B j) B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n       local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n        (diag_elem_indices (diag_idx_to_el B j) B) =\n       local.sum_mat\n        (\\<lambda>i.\n            complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U i))\n        (diag_elem_indices (diag_idx_to_el B j) B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n       local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n        (diag_elem_indices (diag_idx_to_el B j) B) =\n       local.sum_mat\n        (\\<lambda>i.\n            complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U i))\n        (diag_elem_indices (diag_idx_to_el B j) B)", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n       local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n        (diag_elem_indices (diag_idx_to_el B j) B) =\n       local.sum_mat\n        (\\<lambda>i.\n            complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U i))\n        (diag_elem_indices (diag_idx_to_el B j) B)", "assume \"j \\<in> {..<dist_el_card B}\""], ["proof (state)\nthis:\n  j \\<in> {..<dist_el_card B}\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n       local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n        (diag_elem_indices (diag_idx_to_el B j) B) =\n       local.sum_mat\n        (\\<lambda>i.\n            complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U i))\n        (diag_elem_indices (diag_idx_to_el B j) B)", "show \" (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m sum_mat (\\<lambda>i. rank_1_proj (zero_col U i)) \n         (diag_elem_indices (diag_idx_to_el B j) B) =\n        sum_mat (\\<lambda>i. (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m rank_1_proj (zero_col U i))\n          (diag_elem_indices (diag_idx_to_el B j) B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n    local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n     (diag_elem_indices (diag_idx_to_el B j) B) =\n    local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n         rank_1_proj (zero_col U i))\n     (diag_elem_indices (diag_idx_to_el B j) B)", "proof (rule smult_sum_mat)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (diag_elem_indices (diag_idx_to_el B j) B)\n 2. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) \\<in> fc_mats", "show \"finite (diag_elem_indices (diag_idx_to_el B j) B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (diag_elem_indices (diag_idx_to_el B j) B)", "using diag_elem_indices_finite[of _ B]"], ["proof (prove)\nusing this:\n  finite (diag_elem_indices ?x B)\n\ngoal (1 subgoal):\n 1. finite (diag_elem_indices (diag_idx_to_el B j) B)", "by simp"], ["proof (state)\nthis:\n  finite (diag_elem_indices (diag_idx_to_el B j) B)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) \\<in> fc_mats", "show \"\\<And>i. i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow> \n          rank_1_proj (zero_col U i) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) \\<in> fc_mats", "using dim_eq"], ["proof (prove)\nusing this:\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n       rank_1_proj (zero_col U i) \\<in> fc_mats", "by (metis dimP local.fc_mats_carrier rank_1_proj_carrier zero_col_dim)"], ["proof (state)\nthis:\n  ?i2 \\<in> diag_elem_indices (diag_idx_to_el B j) B \\<Longrightarrow>\n  rank_1_proj (zero_col U ?i2) \\<in> fc_mats\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n  local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n   (diag_elem_indices (diag_idx_to_el B j) B) =\n  local.sum_mat\n   (\\<lambda>i.\n       complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U i))\n   (diag_elem_indices (diag_idx_to_el B j) B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?j2 \\<in> {..<dist_el_card B} \\<Longrightarrow>\n  complex_of_real (Re (diag_idx_to_el B ?j2)) \\<cdot>\\<^sub>m\n  local.sum_mat (\\<lambda>i. rank_1_proj (zero_col U i))\n   (diag_elem_indices (diag_idx_to_el B ?j2) B) =\n  local.sum_mat\n   (\\<lambda>i.\n       complex_of_real (Re (diag_idx_to_el B ?j2)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U i))\n   (diag_elem_indices (diag_idx_to_el B ?j2) B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  local.sum_mat\n   (\\<lambda>j.\n       complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n       project_vecs (zero_col U) (diag_elem_indices (diag_idx_to_el B j) B))\n   {..<dist_el_card B} =\n  local.sum_mat\n   (\\<lambda>j.\n       local.sum_mat\n        (\\<lambda>i.\n            complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U i))\n        (diag_elem_indices (diag_idx_to_el B j) B))\n   {..<dist_el_card B}\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "also"], ["proof (state)\nthis:\n  local.sum_mat\n   (\\<lambda>j.\n       complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n       project_vecs (zero_col U) (diag_elem_indices (diag_idx_to_el B j) B))\n   {..<dist_el_card B} =\n  local.sum_mat\n   (\\<lambda>j.\n       local.sum_mat\n        (\\<lambda>i.\n            complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U i))\n        (diag_elem_indices (diag_idx_to_el B j) B))\n   {..<dist_el_card B}\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "have \"... = sum_mat\n     (\\<lambda>j. sum_mat (\\<lambda>ia. (diag_mat B ! ia) \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)) \n    (diag_elem_indices (diag_idx_to_el B j) B)) {..<dist_el_card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>j.\n         local.sum_mat\n          (\\<lambda>i.\n              complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n              rank_1_proj (zero_col U i))\n          (diag_elem_indices (diag_idx_to_el B j) B))\n     {..<dist_el_card B} =\n    local.sum_mat\n     (\\<lambda>j.\n         local.sum_mat\n          (\\<lambda>ia.\n              diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n          (diag_elem_indices (diag_idx_to_el B j) B))\n     {..<dist_el_card B}", "proof (rule sum_mat_cong)"], ["proof (state)\ngoal (4 subgoals):\n 1. finite {..<dist_el_card B}\n 2. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B) =\n       local.sum_mat\n        (\\<lambda>ia.\n            diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n 3. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n       \\<in> fc_mats\n 4. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n       \\<in> fc_mats", "show \"finite {..<dist_el_card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {..<dist_el_card B}", "by simp"], ["proof (state)\nthis:\n  finite {..<dist_el_card B}\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B) =\n       local.sum_mat\n        (\\<lambda>ia.\n            diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n 2. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n       \\<in> fc_mats\n 3. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n       \\<in> fc_mats", "show \"\\<And>i. i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n         sum_mat (\\<lambda>ia. complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n          (diag_elem_indices (diag_idx_to_el B i) B) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n       \\<in> fc_mats", "using assms fc_mats_carrier dimP \n      project_vecs_def project_vecs_dim zero_col_dim dim_eq"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  fc_mats = carrier_mat dimR dimC\n  U \\<in> carrier_mat dimR dimR\n  project_vecs ?f ?N = local.sum_mat (\\<lambda>i. rank_1_proj (?f i)) ?N\n  \\<forall>i\\<in>?N. dim_vec (?f i) = dimR \\<Longrightarrow>\n  project_vecs ?f ?N \\<in> fc_mats\n  ?U \\<in> fc_mats \\<Longrightarrow> dim_vec (zero_col ?U ?i) = dimR\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n       \\<in> fc_mats", "by (metis (no_types, lifting) rank_1_proj_carrier cpx_sq_mat_smult sum_mat_carrier)"], ["proof (state)\nthis:\n  ?i2 \\<in> {..<dist_el_card B} \\<Longrightarrow>\n  local.sum_mat\n   (\\<lambda>ia.\n       complex_of_real (Re (diag_idx_to_el B ?i2)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia))\n   (diag_elem_indices (diag_idx_to_el B ?i2) B)\n  \\<in> fc_mats\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B) =\n       local.sum_mat\n        (\\<lambda>ia.\n            diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n 2. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n       \\<in> fc_mats", "show \"\\<And>i. i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n         local.sum_mat (\\<lambda>ia.  (diag_mat B ! ia) \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n          (diag_elem_indices (diag_idx_to_el B i) B) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n       \\<in> fc_mats", "using assms fc_mats_carrier dimP \n      project_vecs_def project_vecs_dim zero_col_dim dim_eq"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  fc_mats = carrier_mat dimR dimC\n  U \\<in> carrier_mat dimR dimR\n  project_vecs ?f ?N = local.sum_mat (\\<lambda>i. rank_1_proj (?f i)) ?N\n  \\<forall>i\\<in>?N. dim_vec (?f i) = dimR \\<Longrightarrow>\n  project_vecs ?f ?N \\<in> fc_mats\n  ?U \\<in> fc_mats \\<Longrightarrow> dim_vec (zero_col ?U ?i) = dimR\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)\n       \\<in> fc_mats", "by (metis (no_types, lifting) rank_1_proj_carrier cpx_sq_mat_smult sum_mat_carrier)"], ["proof (state)\nthis:\n  ?i2 \\<in> {..<dist_el_card B} \\<Longrightarrow>\n  local.sum_mat\n   (\\<lambda>ia.\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n   (diag_elem_indices (diag_idx_to_el B ?i2) B)\n  \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B) =\n       local.sum_mat\n        (\\<lambda>ia.\n            diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)", "show \"\\<And>i. i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n         sum_mat (\\<lambda>ia. (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n          (diag_elem_indices (diag_idx_to_el B i) B) =\n         sum_mat (\\<lambda>ia. (diag_mat B ! ia) \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n          (diag_elem_indices (diag_idx_to_el B i) B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B) =\n       local.sum_mat\n        (\\<lambda>ia.\n            diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B) =\n       local.sum_mat\n        (\\<lambda>ia.\n            diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B) =\n       local.sum_mat\n        (\\<lambda>ia.\n            diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)", "assume \"i\\<in> {..< dist_el_card B}\""], ["proof (state)\nthis:\n  i \\<in> {..<dist_el_card B}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       local.sum_mat\n        (\\<lambda>ia.\n            complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B) =\n       local.sum_mat\n        (\\<lambda>ia.\n            diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B i) B)", "show \"sum_mat (\\<lambda>ia. (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n          (diag_elem_indices (diag_idx_to_el B i) B) =\n         sum_mat (\\<lambda>ia. (diag_mat B ! ia) \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n          (diag_elem_indices (diag_idx_to_el B i) B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>ia.\n         complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n         rank_1_proj (zero_col U ia))\n     (diag_elem_indices (diag_idx_to_el B i) B) =\n    local.sum_mat\n     (\\<lambda>ia.\n         diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n     (diag_elem_indices (diag_idx_to_el B i) B)", "proof (rule sum_mat_cong)"], ["proof (state)\ngoal (4 subgoals):\n 1. finite (diag_elem_indices (diag_idx_to_el B i) B)\n 2. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia) =\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)\n 3. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia)\n       \\<in> fc_mats\n 4. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)\n       \\<in> fc_mats", "show \"finite (diag_elem_indices (diag_idx_to_el B i) B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (diag_elem_indices (diag_idx_to_el B i) B)", "using diag_elem_indices_finite[of _ B]"], ["proof (prove)\nusing this:\n  finite (diag_elem_indices ?x B)\n\ngoal (1 subgoal):\n 1. finite (diag_elem_indices (diag_idx_to_el B i) B)", "by simp"], ["proof (state)\nthis:\n  finite (diag_elem_indices (diag_idx_to_el B i) B)\n\ngoal (3 subgoals):\n 1. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia) =\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)\n 2. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia)\n       \\<in> fc_mats\n 3. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)\n       \\<in> fc_mats", "show \"\\<And>ia. ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow> \n          (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia)\n       \\<in> fc_mats", "using assms fc_mats_carrier dimP project_vecs_def project_vecs_dim zero_col_dim dim_eq"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  fc_mats = carrier_mat dimR dimC\n  U \\<in> carrier_mat dimR dimR\n  project_vecs ?f ?N = local.sum_mat (\\<lambda>i. rank_1_proj (?f i)) ?N\n  \\<forall>i\\<in>?N. dim_vec (?f i) = dimR \\<Longrightarrow>\n  project_vecs ?f ?N \\<in> fc_mats\n  ?U \\<in> fc_mats \\<Longrightarrow> dim_vec (zero_col ?U ?i) = dimR\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia)\n       \\<in> fc_mats", "by (metis (no_types, lifting) rank_1_proj_carrier cpx_sq_mat_smult)"], ["proof (state)\nthis:\n  ?ia2 \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n  complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n  rank_1_proj (zero_col U ?ia2)\n  \\<in> fc_mats\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia) =\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)\n 2. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)\n       \\<in> fc_mats", "show \"\\<And>ia. ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow> \n          (diag_mat B !ia) \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)\n       \\<in> fc_mats", "using assms fc_mats_carrier dimP project_vecs_def project_vecs_dim zero_col_dim dim_eq"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  fc_mats = carrier_mat dimR dimC\n  U \\<in> carrier_mat dimR dimR\n  project_vecs ?f ?N = local.sum_mat (\\<lambda>i. rank_1_proj (?f i)) ?N\n  \\<forall>i\\<in>?N. dim_vec (?f i) = dimR \\<Longrightarrow>\n  project_vecs ?f ?N \\<in> fc_mats\n  ?U \\<in> fc_mats \\<Longrightarrow> dim_vec (zero_col ?U ?i) = dimR\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)\n       \\<in> fc_mats", "by (metis (no_types, lifting) rank_1_proj_carrier cpx_sq_mat_smult)"], ["proof (state)\nthis:\n  ?ia2 \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n  diag_mat B ! ?ia2 \\<cdot>\\<^sub>m rank_1_proj (zero_col U ?ia2)\n  \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia) =\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)", "show \"\\<And>ia. ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n          (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia) =\n          (diag_mat B ! ia) \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia) =\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia) =\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)", "fix ia"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia) =\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)", "assume ia: \"ia \\<in> diag_elem_indices (diag_idx_to_el B i) B\""], ["proof (state)\nthis:\n  ia \\<in> diag_elem_indices (diag_idx_to_el B i) B\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia) =\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)", "hence \"ia < dim_row B\""], ["proof (prove)\nusing this:\n  ia \\<in> diag_elem_indices (diag_idx_to_el B i) B\n\ngoal (1 subgoal):\n 1. ia < dim_row B", "using diag_elem_indices_elem[of ia _ B]"], ["proof (prove)\nusing this:\n  ia \\<in> diag_elem_indices (diag_idx_to_el B i) B\n  ia \\<in> diag_elem_indices ?x B \\<Longrightarrow>\n  ia < dim_row B \\<and> B $$ (ia, ia) = ?x\n\ngoal (1 subgoal):\n 1. ia < dim_row B", "by simp"], ["proof (state)\nthis:\n  ia < dim_row B\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia) =\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)", "have \"Re (diag_idx_to_el B i) = Re (B $$ (ia, ia))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (diag_idx_to_el B i) = Re (B $$ (ia, ia))", "using diag_elem_indices_elem[of ia _ B] ia"], ["proof (prove)\nusing this:\n  ia \\<in> diag_elem_indices ?x B \\<Longrightarrow>\n  ia < dim_row B \\<and> B $$ (ia, ia) = ?x\n  ia \\<in> diag_elem_indices (diag_idx_to_el B i) B\n\ngoal (1 subgoal):\n 1. Re (diag_idx_to_el B i) = Re (B $$ (ia, ia))", "by simp"], ["proof (state)\nthis:\n  Re (diag_idx_to_el B i) = Re (B $$ (ia, ia))\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia) =\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)", "also"], ["proof (state)\nthis:\n  Re (diag_idx_to_el B i) = Re (B $$ (ia, ia))\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia) =\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)", "have \"... = B $$ (ia, ia)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (Re (B $$ (ia, ia))) = B $$ (ia, ia)", "using Bii"], ["proof (prove)\nusing this:\n  ?i2 < dimR \\<Longrightarrow> B $$ (?i2, ?i2) \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. complex_of_real (Re (B $$ (ia, ia))) = B $$ (ia, ia)", "using \\<open>ia < dim_row B\\<close> dimB of_real_Re"], ["proof (prove)\nusing this:\n  ?i2 < dimR \\<Longrightarrow> B $$ (?i2, ?i2) \\<in> \\<real>\n  ia < dim_row B\n  B \\<in> carrier_mat dimR dimR\n  ?z \\<in> \\<real> \\<Longrightarrow> complex_of_real (Re ?z) = ?z\n\ngoal (1 subgoal):\n 1. complex_of_real (Re (B $$ (ia, ia))) = B $$ (ia, ia)", "by blast"], ["proof (state)\nthis:\n  complex_of_real (Re (B $$ (ia, ia))) = B $$ (ia, ia)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia) =\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)", "also"], ["proof (state)\nthis:\n  complex_of_real (Re (B $$ (ia, ia))) = B $$ (ia, ia)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia) =\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)", "have \"... = diag_mat B ! ia\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B $$ (ia, ia) = diag_mat B ! ia", "using \\<open>ia < dim_row B\\<close>"], ["proof (prove)\nusing this:\n  ia < dim_row B\n\ngoal (1 subgoal):\n 1. B $$ (ia, ia) = diag_mat B ! ia", "unfolding diag_mat_def"], ["proof (prove)\nusing this:\n  ia < dim_row B\n\ngoal (1 subgoal):\n 1. B $$ (ia, ia) = map (\\<lambda>i. B $$ (i, i)) [0..<dim_row B] ! ia", "by simp"], ["proof (state)\nthis:\n  B $$ (ia, ia) = diag_mat B ! ia\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia) =\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)", "finally"], ["proof (chain)\npicking this:\n  complex_of_real (Re (diag_idx_to_el B i)) = diag_mat B ! ia", "have \"Re (diag_idx_to_el B i) = diag_mat B ! ia\""], ["proof (prove)\nusing this:\n  complex_of_real (Re (diag_idx_to_el B i)) = diag_mat B ! ia\n\ngoal (1 subgoal):\n 1. complex_of_real (Re (diag_idx_to_el B i)) = diag_mat B ! ia", "."], ["proof (state)\nthis:\n  complex_of_real (Re (diag_idx_to_el B i)) = diag_mat B ! ia\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia) =\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)", "thus \"(Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia) =\n            (diag_mat B ! ia) \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)\""], ["proof (prove)\nusing this:\n  complex_of_real (Re (diag_idx_to_el B i)) = diag_mat B ! ia\n\ngoal (1 subgoal):\n 1. complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n    rank_1_proj (zero_col U ia) =\n    diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)", "by simp"], ["proof (state)\nthis:\n  complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n  rank_1_proj (zero_col U ia) =\n  diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?ia2 \\<in> diag_elem_indices (diag_idx_to_el B i) B \\<Longrightarrow>\n  complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n  rank_1_proj (zero_col U ?ia2) =\n  diag_mat B ! ?ia2 \\<cdot>\\<^sub>m rank_1_proj (zero_col U ?ia2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  local.sum_mat\n   (\\<lambda>ia.\n       complex_of_real (Re (diag_idx_to_el B i)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia))\n   (diag_elem_indices (diag_idx_to_el B i) B) =\n  local.sum_mat\n   (\\<lambda>ia.\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n   (diag_elem_indices (diag_idx_to_el B i) B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i2 \\<in> {..<dist_el_card B} \\<Longrightarrow>\n  local.sum_mat\n   (\\<lambda>ia.\n       complex_of_real (Re (diag_idx_to_el B ?i2)) \\<cdot>\\<^sub>m\n       rank_1_proj (zero_col U ia))\n   (diag_elem_indices (diag_idx_to_el B ?i2) B) =\n  local.sum_mat\n   (\\<lambda>ia.\n       diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n   (diag_elem_indices (diag_idx_to_el B ?i2) B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  local.sum_mat\n   (\\<lambda>j.\n       local.sum_mat\n        (\\<lambda>i.\n            complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U i))\n        (diag_elem_indices (diag_idx_to_el B j) B))\n   {..<dist_el_card B} =\n  local.sum_mat\n   (\\<lambda>j.\n       local.sum_mat\n        (\\<lambda>ia.\n            diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B j) B))\n   {..<dist_el_card B}\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "also"], ["proof (state)\nthis:\n  local.sum_mat\n   (\\<lambda>j.\n       local.sum_mat\n        (\\<lambda>i.\n            complex_of_real (Re (diag_idx_to_el B j)) \\<cdot>\\<^sub>m\n            rank_1_proj (zero_col U i))\n        (diag_elem_indices (diag_idx_to_el B j) B))\n   {..<dist_el_card B} =\n  local.sum_mat\n   (\\<lambda>j.\n       local.sum_mat\n        (\\<lambda>ia.\n            diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B j) B))\n   {..<dist_el_card B}\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "have \"... = sum_mat \n    (\\<lambda>i. (diag_mat B ! i) \\<cdot>\\<^sub>m rank_1_proj (zero_col U i)) \n    (\\<Union>j<dist_el_card B. diag_elem_indices (diag_idx_to_el B j) B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>j.\n         local.sum_mat\n          (\\<lambda>ia.\n              diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n          (diag_elem_indices (diag_idx_to_el B j) B))\n     {..<dist_el_card B} =\n    local.sum_mat\n     (\\<lambda>i. diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i))\n     (\\<Union>j<dist_el_card B. diag_elem_indices (diag_idx_to_el B j) B)", "unfolding project_vecs_def sum_mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_with (+) (0\\<^sub>m dimR dimC)\n     (\\<lambda>j.\n         sum_with (+) (0\\<^sub>m dimR dimC)\n          (\\<lambda>ia.\n              diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n          (diag_elem_indices (diag_idx_to_el B j) B))\n     {..<dist_el_card B} =\n    sum_with (+) (0\\<^sub>m dimR dimC)\n     (\\<lambda>i. diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i))\n     (\\<Union>j<dist_el_card B. diag_elem_indices (diag_idx_to_el B j) B)", "proof (rule disj_family_sum_with[symmetric])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>j.\n       diag_mat B ! j \\<cdot>\\<^sub>m rank_1_proj (zero_col U j)\n       \\<in> fc_mats\n 2. finite {..<dist_el_card B}\n 3. disjoint_family_on\n     (\\<lambda>n. diag_elem_indices (diag_idx_to_el B n) B)\n     {..<dist_el_card B}\n 4. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       finite (diag_elem_indices (diag_idx_to_el B i) B)", "show \"finite {..<dist_el_card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {..<dist_el_card B}", "by simp"], ["proof (state)\nthis:\n  finite {..<dist_el_card B}\n\ngoal (3 subgoals):\n 1. \\<forall>j.\n       diag_mat B ! j \\<cdot>\\<^sub>m rank_1_proj (zero_col U j)\n       \\<in> fc_mats\n 2. disjoint_family_on\n     (\\<lambda>n. diag_elem_indices (diag_idx_to_el B n) B)\n     {..<dist_el_card B}\n 3. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       finite (diag_elem_indices (diag_idx_to_el B i) B)", "show \"\\<forall>j. (diag_mat B ! j) \\<cdot>\\<^sub>m rank_1_proj (zero_col U j) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j.\n       diag_mat B ! j \\<cdot>\\<^sub>m rank_1_proj (zero_col U j)\n       \\<in> fc_mats", "using assms fc_mats_carrier dimP \n      project_vecs_def project_vecs_dim zero_col_dim dim_eq"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  fc_mats = carrier_mat dimR dimC\n  U \\<in> carrier_mat dimR dimR\n  project_vecs ?f ?N = local.sum_mat (\\<lambda>i. rank_1_proj (?f i)) ?N\n  \\<forall>i\\<in>?N. dim_vec (?f i) = dimR \\<Longrightarrow>\n  project_vecs ?f ?N \\<in> fc_mats\n  ?U \\<in> fc_mats \\<Longrightarrow> dim_vec (zero_col ?U ?i) = dimR\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       diag_mat B ! j \\<cdot>\\<^sub>m rank_1_proj (zero_col U j)\n       \\<in> fc_mats", "by (metis (no_types, lifting) rank_1_proj_carrier cpx_sq_mat_smult)"], ["proof (state)\nthis:\n  \\<forall>j.\n     diag_mat B ! j \\<cdot>\\<^sub>m rank_1_proj (zero_col U j) \\<in> fc_mats\n\ngoal (2 subgoals):\n 1. disjoint_family_on\n     (\\<lambda>n. diag_elem_indices (diag_idx_to_el B n) B)\n     {..<dist_el_card B}\n 2. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       finite (diag_elem_indices (diag_idx_to_el B i) B)", "show \"\\<And>i. i \\<in> {..<dist_el_card B} \\<Longrightarrow> finite (diag_elem_indices (diag_idx_to_el B i) B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dist_el_card B} \\<Longrightarrow>\n       finite (diag_elem_indices (diag_idx_to_el B i) B)", "by (simp add: diag_elem_indices_finite)"], ["proof (state)\nthis:\n  ?i2 \\<in> {..<dist_el_card B} \\<Longrightarrow>\n  finite (diag_elem_indices (diag_idx_to_el B ?i2) B)\n\ngoal (1 subgoal):\n 1. disjoint_family_on\n     (\\<lambda>n. diag_elem_indices (diag_idx_to_el B n) B)\n     {..<dist_el_card B}", "show \"disjoint_family_on (\\<lambda>n. diag_elem_indices (diag_idx_to_el B n) B) \n      {..<dist_el_card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disjoint_family_on\n     (\\<lambda>n. diag_elem_indices (diag_idx_to_el B n) B)\n     {..<dist_el_card B}", "using diag_elem_indices_disjoint[of B] dimB dim_eq"], ["proof (prove)\nusing this:\n  B \\<in> carrier_mat dimR dimC \\<Longrightarrow>\n  disjoint_family_on (\\<lambda>n. diag_elem_indices (diag_idx_to_el B n) B)\n   {..<dist_el_card B}\n  B \\<in> carrier_mat dimR dimR\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. disjoint_family_on\n     (\\<lambda>n. diag_elem_indices (diag_idx_to_el B n) B)\n     {..<dist_el_card B}", "by simp"], ["proof (state)\nthis:\n  disjoint_family_on (\\<lambda>n. diag_elem_indices (diag_idx_to_el B n) B)\n   {..<dist_el_card B}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  local.sum_mat\n   (\\<lambda>j.\n       local.sum_mat\n        (\\<lambda>ia.\n            diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B j) B))\n   {..<dist_el_card B} =\n  local.sum_mat\n   (\\<lambda>i. diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i))\n   (\\<Union>j<dist_el_card B. diag_elem_indices (diag_idx_to_el B j) B)\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "also"], ["proof (state)\nthis:\n  local.sum_mat\n   (\\<lambda>j.\n       local.sum_mat\n        (\\<lambda>ia.\n            diag_mat B ! ia \\<cdot>\\<^sub>m rank_1_proj (zero_col U ia))\n        (diag_elem_indices (diag_idx_to_el B j) B))\n   {..<dist_el_card B} =\n  local.sum_mat\n   (\\<lambda>i. diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i))\n   (\\<Union>j<dist_el_card B. diag_elem_indices (diag_idx_to_el B j) B)\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "have \"... = sum_mat (\\<lambda>i. (diag_mat B ! i) \\<cdot>\\<^sub>m rank_1_proj (zero_col U i)) {..< dimR}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i. diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i))\n     (\\<Union>j<dist_el_card B. diag_elem_indices (diag_idx_to_el B j) B) =\n    local.sum_mat\n     (\\<lambda>i. diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i))\n     {..<dimR}", "using diag_elem_indices_union[of B] dimB dim_eq"], ["proof (prove)\nusing this:\n  B \\<in> carrier_mat ?dimR ?dimC \\<Longrightarrow>\n  (\\<Union>i<dist_el_card B. diag_elem_indices (diag_idx_to_el B i) B) =\n  {..<?dimR}\n  B \\<in> carrier_mat dimR dimR\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i. diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i))\n     (\\<Union>j<dist_el_card B. diag_elem_indices (diag_idx_to_el B j) B) =\n    local.sum_mat\n     (\\<lambda>i. diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i))\n     {..<dimR}", "by simp"], ["proof (state)\nthis:\n  local.sum_mat\n   (\\<lambda>i. diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i))\n   (\\<Union>j<dist_el_card B. diag_elem_indices (diag_idx_to_el B j) B) =\n  local.sum_mat\n   (\\<lambda>i. diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i))\n   {..<dimR}\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "also"], ["proof (state)\nthis:\n  local.sum_mat\n   (\\<lambda>i. diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i))\n   (\\<Union>j<dist_el_card B. diag_elem_indices (diag_idx_to_el B j) B) =\n  local.sum_mat\n   (\\<lambda>i. diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i))\n   {..<dimR}\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "have \"... = sum_mat (\\<lambda>i. (diag_mat B ! i) \\<cdot>\\<^sub>mrank_1_proj (Matrix.col U i)) {..< dimR}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i. diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i))\n     {..<dimR} =\n    local.sum_mat\n     (\\<lambda>i.\n         diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (Matrix.col U i))\n     {..<dimR}", "proof (rule sum_mat_cong, simp)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i) =\n       diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (Matrix.col U i)\n 2. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i)\n       \\<in> fc_mats\n 3. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (Matrix.col U i)\n       \\<in> fc_mats", "show res: \"\\<And>i. i \\<in> {..<dimR} \\<Longrightarrow> (diag_mat B ! i) \\<cdot>\\<^sub>m rank_1_proj (zero_col U i) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i)\n       \\<in> fc_mats", "using assms fc_mats_carrier dimP project_vecs_def project_vecs_dim zero_col_dim dim_eq"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  fc_mats = carrier_mat dimR dimC\n  U \\<in> carrier_mat dimR dimR\n  project_vecs ?f ?N = local.sum_mat (\\<lambda>i. rank_1_proj (?f i)) ?N\n  \\<forall>i\\<in>?N. dim_vec (?f i) = dimR \\<Longrightarrow>\n  project_vecs ?f ?N \\<in> fc_mats\n  ?U \\<in> fc_mats \\<Longrightarrow> dim_vec (zero_col ?U ?i) = dimR\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i)\n       \\<in> fc_mats", "by (metis (no_types, lifting) rank_1_proj_carrier cpx_sq_mat_smult)"], ["proof (state)\nthis:\n  ?i2 \\<in> {..<dimR} \\<Longrightarrow>\n  diag_mat B ! ?i2 \\<cdot>\\<^sub>m rank_1_proj (zero_col U ?i2)\n  \\<in> fc_mats\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i) =\n       diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (Matrix.col U i)\n 2. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (Matrix.col U i)\n       \\<in> fc_mats", "show \"\\<And>i. i \\<in> {..<dimR} \\<Longrightarrow> (diag_mat B ! i) \\<cdot>\\<^sub>m rank_1_proj (Matrix.col U i) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (Matrix.col U i)\n       \\<in> fc_mats", "using assms fc_mats_carrier dimP project_vecs_def  project_vecs_dim zero_col_dim"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  fc_mats = carrier_mat dimR dimC\n  U \\<in> carrier_mat dimR dimR\n  project_vecs ?f ?N = local.sum_mat (\\<lambda>i. rank_1_proj (?f i)) ?N\n  \\<forall>i\\<in>?N. dim_vec (?f i) = dimR \\<Longrightarrow>\n  project_vecs ?f ?N \\<in> fc_mats\n  ?U \\<in> fc_mats \\<Longrightarrow> dim_vec (zero_col ?U ?i) = dimR\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (Matrix.col U i)\n       \\<in> fc_mats", "by (metis res lessThan_iff zero_col_col)"], ["proof (state)\nthis:\n  ?i2 \\<in> {..<dimR} \\<Longrightarrow>\n  diag_mat B ! ?i2 \\<cdot>\\<^sub>m rank_1_proj (Matrix.col U ?i2)\n  \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i) =\n       diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (Matrix.col U i)", "show \"\\<And>i. i \\<in> {..<dimR} \\<Longrightarrow> (diag_mat B ! i) \\<cdot>\\<^sub>m rank_1_proj (zero_col U i) = \n      (diag_mat B ! i) \\<cdot>\\<^sub>m rank_1_proj (Matrix.col U i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<dimR} \\<Longrightarrow>\n       diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i) =\n       diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (Matrix.col U i)", "by (simp add: zero_col_col)"], ["proof (state)\nthis:\n  ?i2 \\<in> {..<dimR} \\<Longrightarrow>\n  diag_mat B ! ?i2 \\<cdot>\\<^sub>m rank_1_proj (zero_col U ?i2) =\n  diag_mat B ! ?i2 \\<cdot>\\<^sub>m rank_1_proj (Matrix.col U ?i2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  local.sum_mat\n   (\\<lambda>i. diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i))\n   {..<dimR} =\n  local.sum_mat\n   (\\<lambda>i. diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (Matrix.col U i))\n   {..<dimR}\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "also"], ["proof (state)\nthis:\n  local.sum_mat\n   (\\<lambda>i. diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (zero_col U i))\n   {..<dimR} =\n  local.sum_mat\n   (\\<lambda>i. diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (Matrix.col U i))\n   {..<dimR}\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "have \"... = U * B * Complex_Matrix.adjoint U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (Matrix.col U i))\n     {..<dimR} =\n    U * B * Complex_Matrix.adjoint U", "proof (rule weighted_sum_rank_1_proj_unitary)"], ["proof (state)\ngoal (4 subgoals):\n 1. U \\<in> fc_mats\n 2. B \\<in> fc_mats\n 3. diagonal_mat B\n 4. Complex_Matrix.unitary U", "show \"diagonal_mat B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diagonal_mat B", "using dB"], ["proof (prove)\nusing this:\n  diagonal_mat B\n\ngoal (1 subgoal):\n 1. diagonal_mat B", "."], ["proof (state)\nthis:\n  diagonal_mat B\n\ngoal (3 subgoals):\n 1. U \\<in> fc_mats\n 2. B \\<in> fc_mats\n 3. Complex_Matrix.unitary U", "show \"Complex_Matrix.unitary U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.unitary U", "using unit"], ["proof (prove)\nusing this:\n  Complex_Matrix.unitary U\n\ngoal (1 subgoal):\n 1. Complex_Matrix.unitary U", "."], ["proof (state)\nthis:\n  Complex_Matrix.unitary U\n\ngoal (2 subgoals):\n 1. U \\<in> fc_mats\n 2. B \\<in> fc_mats", "show \"U \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U \\<in> fc_mats", "using fc_mats_carrier dim_eq dimP"], ["proof (prove)\nusing this:\n  fc_mats = carrier_mat dimR dimC\n  dimR = dimC\n  U \\<in> carrier_mat dimR dimR\n\ngoal (1 subgoal):\n 1. U \\<in> fc_mats", "by simp"], ["proof (state)\nthis:\n  U \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. B \\<in> fc_mats", "show \"B\\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> fc_mats", "using fc_mats_carrier dim_eq dimB"], ["proof (prove)\nusing this:\n  fc_mats = carrier_mat dimR dimC\n  dimR = dimC\n  B \\<in> carrier_mat dimR dimR\n\ngoal (1 subgoal):\n 1. B \\<in> fc_mats", "by simp"], ["proof (state)\nthis:\n  B \\<in> fc_mats\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  local.sum_mat\n   (\\<lambda>i. diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (Matrix.col U i))\n   {..<dimR} =\n  U * B * Complex_Matrix.adjoint U\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "also"], ["proof (state)\nthis:\n  local.sum_mat\n   (\\<lambda>i. diag_mat B ! i \\<cdot>\\<^sub>m rank_1_proj (Matrix.col U i))\n   {..<dimR} =\n  U * B * Complex_Matrix.adjoint U\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "have \"... = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U * B * Complex_Matrix.adjoint U = A", "using A"], ["proof (prove)\nusing this:\n  A = U * B * Complex_Matrix.adjoint U\n\ngoal (1 subgoal):\n 1. U * B * Complex_Matrix.adjoint U = A", "by simp"], ["proof (state)\nthis:\n  U * B * Complex_Matrix.adjoint U = A\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "finally"], ["proof (chain)\npicking this:\n  local.sum_mat\n   (\\<lambda>i.\n       complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n       meas_outcome_prj (M i))\n   {..<p} =\n  A", "show ?thesis"], ["proof (prove)\nusing this:\n  local.sum_mat\n   (\\<lambda>i.\n       complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n       meas_outcome_prj (M i))\n   {..<p} =\n  A\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "."], ["proof (state)\nthis:\n  local.sum_mat\n   (\\<lambda>i.\n       complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n       meas_outcome_prj (M i))\n   {..<p} =\n  A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) trace_hermitian_pos_real:\n  fixes f::\"'a \\<Rightarrow> real\"\n  assumes \"hermitian A\"\n  and \"Complex_Matrix.positive R\"\n  and \"A \\<in> fc_mats\"\n  and \"R \\<in> fc_mats\"\nshows \"Complex_Matrix.trace (R * A) = \n  Re (Complex_Matrix.trace (R * A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * A) =\n    complex_of_real (Re (Complex_Matrix.trace (R * A)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * A) =\n    complex_of_real (Re (Complex_Matrix.trace (R * A)))", "define prj_mems where \"prj_mems = make_pm A\""], ["proof (state)\nthis:\n  prj_mems = make_pm A\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * A) =\n    complex_of_real (Re (Complex_Matrix.trace (R * A)))", "define p where \"p = proj_meas_size prj_mems\""], ["proof (state)\nthis:\n  p = proj_meas_size prj_mems\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * A) =\n    complex_of_real (Re (Complex_Matrix.trace (R * A)))", "define meas where \"meas = proj_meas_outcomes prj_mems\""], ["proof (state)\nthis:\n  meas = proj_meas_outcomes prj_mems\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * A) =\n    complex_of_real (Re (Complex_Matrix.trace (R * A)))", "have tre: \"Complex_Matrix.trace (R * A) = \n    Complex_Matrix.trace (R * \n    sum_mat (\\<lambda>i. (meas_outcome_val (meas i)) \\<cdot>\\<^sub>m meas_outcome_prj (meas i)) {..< p})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * A) =\n    Complex_Matrix.trace\n     (R *\n      local.sum_mat\n       (\\<lambda>i.\n           complex_of_real (meas_outcome_val (meas i)) \\<cdot>\\<^sub>m\n           meas_outcome_prj (meas i))\n       {..<p})", "using make_pm_sum assms meas_def p_def proj_meas_size_def proj_meas_outcomes_def prj_mems_def \n      meas_outcome_val_def meas_outcome_prj_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<in> fc_mats; hermitian ?A; make_pm ?A = (?p, ?M)\\<rbrakk>\n  \\<Longrightarrow> local.sum_mat\n                     (\\<lambda>i.\n                         complex_of_real\n                          (meas_outcome_val (?M i)) \\<cdot>\\<^sub>m\n                         meas_outcome_prj (?M i))\n                     {..<?p} =\n                    ?A\n  hermitian A\n  Complex_Matrix.positive R\n  A \\<in> fc_mats\n  R \\<in> fc_mats\n  meas = proj_meas_outcomes prj_mems\n  p = proj_meas_size prj_mems\n  proj_meas_size ?P = fst ?P\n  proj_meas_outcomes ?P = snd ?P\n  prj_mems = make_pm A\n  meas_outcome_val ?Mi = fst ?Mi\n  meas_outcome_prj ?Mi = snd ?Mi\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * A) =\n    Complex_Matrix.trace\n     (R *\n      local.sum_mat\n       (\\<lambda>i.\n           complex_of_real (meas_outcome_val (meas i)) \\<cdot>\\<^sub>m\n           meas_outcome_prj (meas i))\n       {..<p})", "by auto"], ["proof (state)\nthis:\n  Complex_Matrix.trace (R * A) =\n  Complex_Matrix.trace\n   (R *\n    local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (meas i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (meas i))\n     {..<p})\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * A) =\n    complex_of_real (Re (Complex_Matrix.trace (R * A)))", "also"], ["proof (state)\nthis:\n  Complex_Matrix.trace (R * A) =\n  Complex_Matrix.trace\n   (R *\n    local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (meas i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (meas i))\n     {..<p})\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * A) =\n    complex_of_real (Re (Complex_Matrix.trace (R * A)))", "have \"... = Re (Complex_Matrix.trace (R * \n    sum_mat (\\<lambda>i. (meas_outcome_val (meas i)) \\<cdot>\\<^sub>m meas_outcome_prj (meas i)) {..< p}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex_Matrix.trace\n     (R *\n      local.sum_mat\n       (\\<lambda>i.\n           complex_of_real (meas_outcome_val (meas i)) \\<cdot>\\<^sub>m\n           meas_outcome_prj (meas i))\n       {..<p}) =\n    complex_of_real\n     (Re (Complex_Matrix.trace\n           (R *\n            local.sum_mat\n             (\\<lambda>i.\n                 complex_of_real (meas_outcome_val (meas i)) \\<cdot>\\<^sub>m\n                 meas_outcome_prj (meas i))\n             {..<p})))", "proof (rule trace_sum_mat_proj_pos_real, (auto simp add: assms))"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. i < p \\<Longrightarrow> projector (meas_outcome_prj (meas i))\n 2. \\<And>i. i < p \\<Longrightarrow> meas_outcome_prj (meas i) \\<in> fc_mats", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. i < p \\<Longrightarrow> projector (meas_outcome_prj (meas i))\n 2. \\<And>i. i < p \\<Longrightarrow> meas_outcome_prj (meas i) \\<in> fc_mats", "assume \"i < p\""], ["proof (state)\nthis:\n  i < p\n\ngoal (2 subgoals):\n 1. \\<And>i. i < p \\<Longrightarrow> projector (meas_outcome_prj (meas i))\n 2. \\<And>i. i < p \\<Longrightarrow> meas_outcome_prj (meas i) \\<in> fc_mats", "thus \"projector (meas_outcome_prj (meas i))\""], ["proof (prove)\nusing this:\n  i < p\n\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (meas i))", "using make_pm_projectors assms"], ["proof (prove)\nusing this:\n  i < p\n  \\<lbrakk>?A \\<in> fc_mats; hermitian ?A;\n   ?i < proj_meas_size (make_pm ?A)\\<rbrakk>\n  \\<Longrightarrow> projector\n                     (meas_outcome_prj (proj_meas_outcomes (make_pm ?A) ?i))\n  hermitian A\n  Complex_Matrix.positive R\n  A \\<in> fc_mats\n  R \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (meas i))", "unfolding p_def meas_def prj_mems_def"], ["proof (prove)\nusing this:\n  i < proj_meas_size (make_pm A)\n  \\<lbrakk>?A \\<in> fc_mats; hermitian ?A;\n   ?i < proj_meas_size (make_pm ?A)\\<rbrakk>\n  \\<Longrightarrow> projector\n                     (meas_outcome_prj (proj_meas_outcomes (make_pm ?A) ?i))\n  hermitian A\n  Complex_Matrix.positive R\n  A \\<in> fc_mats\n  R \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. projector (meas_outcome_prj (proj_meas_outcomes (make_pm A) i))", "by simp"], ["proof (state)\nthis:\n  projector (meas_outcome_prj (meas i))\n\ngoal (1 subgoal):\n 1. \\<And>i. i < p \\<Longrightarrow> meas_outcome_prj (meas i) \\<in> fc_mats", "show \"meas_outcome_prj (meas i) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_prj (meas i) \\<in> fc_mats", "using make_pm_square assms \\<open>i < p\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<in> fc_mats; hermitian ?A;\n   ?i < proj_meas_size (make_pm ?A)\\<rbrakk>\n  \\<Longrightarrow> meas_outcome_prj (proj_meas_outcomes (make_pm ?A) ?i)\n                    \\<in> fc_mats\n  hermitian A\n  Complex_Matrix.positive R\n  A \\<in> fc_mats\n  R \\<in> fc_mats\n  i < p\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (meas i) \\<in> fc_mats", "unfolding p_def meas_def prj_mems_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<in> fc_mats; hermitian ?A;\n   ?i < proj_meas_size (make_pm ?A)\\<rbrakk>\n  \\<Longrightarrow> meas_outcome_prj (proj_meas_outcomes (make_pm ?A) ?i)\n                    \\<in> fc_mats\n  hermitian A\n  Complex_Matrix.positive R\n  A \\<in> fc_mats\n  R \\<in> fc_mats\n  i < proj_meas_size (make_pm A)\n\ngoal (1 subgoal):\n 1. meas_outcome_prj (proj_meas_outcomes (make_pm A) i) \\<in> fc_mats", "by simp"], ["proof (state)\nthis:\n  meas_outcome_prj (meas i) \\<in> fc_mats\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Complex_Matrix.trace\n   (R *\n    local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (meas i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (meas i))\n     {..<p}) =\n  complex_of_real\n   (Re (Complex_Matrix.trace\n         (R *\n          local.sum_mat\n           (\\<lambda>i.\n               complex_of_real (meas_outcome_val (meas i)) \\<cdot>\\<^sub>m\n               meas_outcome_prj (meas i))\n           {..<p})))\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * A) =\n    complex_of_real (Re (Complex_Matrix.trace (R * A)))", "also"], ["proof (state)\nthis:\n  Complex_Matrix.trace\n   (R *\n    local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (meas i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (meas i))\n     {..<p}) =\n  complex_of_real\n   (Re (Complex_Matrix.trace\n         (R *\n          local.sum_mat\n           (\\<lambda>i.\n               complex_of_real (meas_outcome_val (meas i)) \\<cdot>\\<^sub>m\n               meas_outcome_prj (meas i))\n           {..<p})))\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * A) =\n    complex_of_real (Re (Complex_Matrix.trace (R * A)))", "have \"... = Re (Complex_Matrix.trace (R * A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real\n     (Re (Complex_Matrix.trace\n           (R *\n            local.sum_mat\n             (\\<lambda>i.\n                 complex_of_real (meas_outcome_val (meas i)) \\<cdot>\\<^sub>m\n                 meas_outcome_prj (meas i))\n             {..<p}))) =\n    complex_of_real (Re (Complex_Matrix.trace (R * A)))", "using tre"], ["proof (prove)\nusing this:\n  Complex_Matrix.trace (R * A) =\n  Complex_Matrix.trace\n   (R *\n    local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (meas i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (meas i))\n     {..<p})\n\ngoal (1 subgoal):\n 1. complex_of_real\n     (Re (Complex_Matrix.trace\n           (R *\n            local.sum_mat\n             (\\<lambda>i.\n                 complex_of_real (meas_outcome_val (meas i)) \\<cdot>\\<^sub>m\n                 meas_outcome_prj (meas i))\n             {..<p}))) =\n    complex_of_real (Re (Complex_Matrix.trace (R * A)))", "by simp"], ["proof (state)\nthis:\n  complex_of_real\n   (Re (Complex_Matrix.trace\n         (R *\n          local.sum_mat\n           (\\<lambda>i.\n               complex_of_real (meas_outcome_val (meas i)) \\<cdot>\\<^sub>m\n               meas_outcome_prj (meas i))\n           {..<p}))) =\n  complex_of_real (Re (Complex_Matrix.trace (R * A)))\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * A) =\n    complex_of_real (Re (Complex_Matrix.trace (R * A)))", "finally"], ["proof (chain)\npicking this:\n  Complex_Matrix.trace (R * A) =\n  complex_of_real (Re (Complex_Matrix.trace (R * A)))", "show ?thesis"], ["proof (prove)\nusing this:\n  Complex_Matrix.trace (R * A) =\n  complex_of_real (Re (Complex_Matrix.trace (R * A)))\n\ngoal (1 subgoal):\n 1. Complex_Matrix.trace (R * A) =\n    complex_of_real (Re (Complex_Matrix.trace (R * A)))", "."], ["proof (state)\nthis:\n  Complex_Matrix.trace (R * A) =\n  complex_of_real (Re (Complex_Matrix.trace (R * A)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) hermitian_Re_spectrum:\n  assumes \"hermitian A\"\nand \"A\\<in> fc_mats\"\nand \"{Re x |x. x \\<in> spectrum A} = {a,b}\"\nshows \"spectrum A = {complex_of_real a, complex_of_real b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spectrum A = {complex_of_real a, complex_of_real b}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. spectrum A \\<subseteq> {complex_of_real a, complex_of_real b}\n 2. {complex_of_real a, complex_of_real b} \\<subseteq> spectrum A", "have ar: \"\\<And>(a::complex). a \\<in> spectrum A \\<Longrightarrow> Re a = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> spectrum A \\<Longrightarrow> complex_of_real (Re a) = a", "using hermitian_spectrum_real assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<in> fc_mats; hermitian ?A; ?a \\<in> spectrum ?A\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> \\<real>\n  hermitian A\n  A \\<in> fc_mats\n  {Re x |x. x \\<in> spectrum A} = {a, b}\n\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> spectrum A \\<Longrightarrow> complex_of_real (Re a) = a", "by simp"], ["proof (state)\nthis:\n  ?a2 \\<in> spectrum A \\<Longrightarrow> complex_of_real (Re ?a2) = ?a2\n\ngoal (2 subgoals):\n 1. spectrum A \\<subseteq> {complex_of_real a, complex_of_real b}\n 2. {complex_of_real a, complex_of_real b} \\<subseteq> spectrum A", "show \"spectrum A \\<subseteq> {complex_of_real a, complex_of_real b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spectrum A \\<subseteq> {complex_of_real a, complex_of_real b}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> spectrum A \\<Longrightarrow>\n       x \\<in> {complex_of_real a, complex_of_real b}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> spectrum A \\<Longrightarrow>\n       x \\<in> {complex_of_real a, complex_of_real b}", "assume \"x\\<in> spectrum A\""], ["proof (state)\nthis:\n  x \\<in> spectrum A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> spectrum A \\<Longrightarrow>\n       x \\<in> {complex_of_real a, complex_of_real b}", "hence \"Re x = x\""], ["proof (prove)\nusing this:\n  x \\<in> spectrum A\n\ngoal (1 subgoal):\n 1. complex_of_real (Re x) = x", "using ar"], ["proof (prove)\nusing this:\n  x \\<in> spectrum A\n  ?a2 \\<in> spectrum A \\<Longrightarrow> complex_of_real (Re ?a2) = ?a2\n\ngoal (1 subgoal):\n 1. complex_of_real (Re x) = x", "by simp"], ["proof (state)\nthis:\n  complex_of_real (Re x) = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> spectrum A \\<Longrightarrow>\n       x \\<in> {complex_of_real a, complex_of_real b}", "have \"Re x \\<in> {a,b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re x \\<in> {a, b}", "using \\<open>x\\<in> spectrum A\\<close> assms"], ["proof (prove)\nusing this:\n  x \\<in> spectrum A\n  hermitian A\n  A \\<in> fc_mats\n  {Re x |x. x \\<in> spectrum A} = {a, b}\n\ngoal (1 subgoal):\n 1. Re x \\<in> {a, b}", "by blast"], ["proof (state)\nthis:\n  Re x \\<in> {a, b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> spectrum A \\<Longrightarrow>\n       x \\<in> {complex_of_real a, complex_of_real b}", "thus \"x \\<in> {complex_of_real a, complex_of_real b}\""], ["proof (prove)\nusing this:\n  Re x \\<in> {a, b}\n\ngoal (1 subgoal):\n 1. x \\<in> {complex_of_real a, complex_of_real b}", "using \\<open>Re x = x\\<close>"], ["proof (prove)\nusing this:\n  Re x \\<in> {a, b}\n  complex_of_real (Re x) = x\n\ngoal (1 subgoal):\n 1. x \\<in> {complex_of_real a, complex_of_real b}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {complex_of_real a, complex_of_real b}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  spectrum A \\<subseteq> {complex_of_real a, complex_of_real b}\n\ngoal (1 subgoal):\n 1. {complex_of_real a, complex_of_real b} \\<subseteq> spectrum A", "show \"{complex_of_real a, complex_of_real b} \\<subseteq> spectrum A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {complex_of_real a, complex_of_real b} \\<subseteq> spectrum A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {complex_of_real a, complex_of_real b} \\<Longrightarrow>\n       x \\<in> spectrum A", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {complex_of_real a, complex_of_real b} \\<Longrightarrow>\n       x \\<in> spectrum A", "assume \"x \\<in> {complex_of_real a, complex_of_real b}\""], ["proof (state)\nthis:\n  x \\<in> {complex_of_real a, complex_of_real b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {complex_of_real a, complex_of_real b} \\<Longrightarrow>\n       x \\<in> spectrum A", "hence \"x \\<in> {complex_of_real (Re x) |x. x \\<in> spectrum A}\""], ["proof (prove)\nusing this:\n  x \\<in> {complex_of_real a, complex_of_real b}\n\ngoal (1 subgoal):\n 1. x \\<in> {complex_of_real (Re x) |x. x \\<in> spectrum A}", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> {complex_of_real a, complex_of_real b}\n  hermitian A\n  A \\<in> fc_mats\n  {Re x |x. x \\<in> spectrum A} = {a, b}\n\ngoal (1 subgoal):\n 1. x \\<in> {complex_of_real (Re x) |x. x \\<in> spectrum A}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> {complex_of_real a, complex_of_real b}; hermitian A;\n     A \\<in> fc_mats; {Re x |x. x \\<in> spectrum A} = {a, b}\\<rbrakk>\n    \\<Longrightarrow> x \\<in> {complex_of_real (Re x) |x.\n                               x \\<in> spectrum A}", "have \"\\<And>r. r \\<notin> {a, b} \\<or> (\\<exists>c. r = Re c \\<and> c \\<in> spectrum A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<notin> {a, b} \\<or>\n       (\\<exists>c. r = Re c \\<and> c \\<in> spectrum A)", "using \\<open>{Re x |x. x \\<in> spectrum A} = {a, b}\\<close>"], ["proof (prove)\nusing this:\n  {Re x |x. x \\<in> spectrum A} = {a, b}\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<notin> {a, b} \\<or>\n       (\\<exists>c. r = Re c \\<and> c \\<in> spectrum A)", "by blast"], ["proof (state)\nthis:\n  ?r2 \\<notin> {a, b} \\<or>\n  (\\<exists>c. ?r2 = Re c \\<and> c \\<in> spectrum A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> {complex_of_real a, complex_of_real b}; hermitian A;\n     A \\<in> fc_mats; {Re x |x. x \\<in> spectrum A} = {a, b}\\<rbrakk>\n    \\<Longrightarrow> x \\<in> {complex_of_real (Re x) |x.\n                               x \\<in> spectrum A}", "then"], ["proof (chain)\npicking this:\n  ?r2 \\<notin> {a, b} \\<or>\n  (\\<exists>c. ?r2 = Re c \\<and> c \\<in> spectrum A)", "show ?thesis"], ["proof (prove)\nusing this:\n  ?r2 \\<notin> {a, b} \\<or>\n  (\\<exists>c. ?r2 = Re c \\<and> c \\<in> spectrum A)\n\ngoal (1 subgoal):\n 1. x \\<in> {complex_of_real (Re x) |x. x \\<in> spectrum A}", "using \\<open>x \\<in> {complex_of_real a, complex_of_real b}\\<close>"], ["proof (prove)\nusing this:\n  ?r2 \\<notin> {a, b} \\<or>\n  (\\<exists>c. ?r2 = Re c \\<and> c \\<in> spectrum A)\n  x \\<in> {complex_of_real a, complex_of_real b}\n\ngoal (1 subgoal):\n 1. x \\<in> {complex_of_real (Re x) |x. x \\<in> spectrum A}", "by blast"], ["proof (state)\nthis:\n  x \\<in> {complex_of_real (Re x) |x. x \\<in> spectrum A}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> {complex_of_real (Re x) |x. x \\<in> spectrum A}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {complex_of_real a, complex_of_real b} \\<Longrightarrow>\n       x \\<in> spectrum A", "thus \"x\\<in> spectrum A\""], ["proof (prove)\nusing this:\n  x \\<in> {complex_of_real (Re x) |x. x \\<in> spectrum A}\n\ngoal (1 subgoal):\n 1. x \\<in> spectrum A", "using ar"], ["proof (prove)\nusing this:\n  x \\<in> {complex_of_real (Re x) |x. x \\<in> spectrum A}\n  ?a2 \\<in> spectrum A \\<Longrightarrow> complex_of_real (Re ?a2) = ?a2\n\ngoal (1 subgoal):\n 1. x \\<in> spectrum A", "by auto"], ["proof (state)\nthis:\n  x \\<in> spectrum A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {complex_of_real a, complex_of_real b} \\<subseteq> spectrum A\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Similar properties for eigenvalues rather than spectrum indices\\<close>"], ["", "text \\<open>In this part we go the other way round: given an eigenvalue of $A$, \\verb+spectrum_to_pm_idx+ \npermits to retrieve its index in the associated projective measurement\\<close>"], ["", "definition (in cpx_sq_mat) spectrum_to_pm_idx\n  where \"spectrum_to_pm_idx A x = (let (B,U,_) = unitary_schur_decomposition A (eigvals A) in \n    diag_el_to_idx B x)\""], ["", "lemma (in cpx_sq_mat) spectrum_to_pm_idx_bij:\nassumes \"hermitian A\"\n  and \"A\\<in> fc_mats\"\nshows \"bij_betw (spectrum_to_pm_idx A) (spectrum A) {..< card (spectrum A)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (spectrum_to_pm_idx A) (spectrum A) {..<card (spectrum A)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. bij_betw (spectrum_to_pm_idx A) (spectrum A) {..<card (spectrum A)}", "define p where \"p = proj_meas_size (make_pm A)\""], ["proof (state)\nthis:\n  p = proj_meas_size (make_pm A)\n\ngoal (1 subgoal):\n 1. bij_betw (spectrum_to_pm_idx A) (spectrum A) {..<card (spectrum A)}", "define M where \"M = proj_meas_outcomes (make_pm A)\""], ["proof (state)\nthis:\n  M = proj_meas_outcomes (make_pm A)\n\ngoal (1 subgoal):\n 1. bij_betw (spectrum_to_pm_idx A) (spectrum A) {..<card (spectrum A)}", "have es: \"char_poly A = (\\<Prod> (e :: complex) \\<leftarrow> (eigvals A). [:- e, 1:])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])", "using assms fc_mats_carrier eigvals_poly_length dim_eq"], ["proof (prove)\nusing this:\n  hermitian A\n  A \\<in> fc_mats\n  fc_mats = carrier_mat dimR dimC\n  ?M \\<in> carrier_mat ?n ?n \\<Longrightarrow>\n  char_poly ?M = (\\<Prod>a\\<leftarrow>eigvals ?M. [:- a, 1:]) \\<and>\n  length (eigvals ?M) = dim_row ?M\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])", "by auto"], ["proof (state)\nthis:\n  char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])\n\ngoal (1 subgoal):\n 1. bij_betw (spectrum_to_pm_idx A) (spectrum A) {..<card (spectrum A)}", "obtain B U Q where us: \"unitary_schur_decomposition A (eigvals A) = (B,U,Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B U Q.\n        unitary_schur_decomposition A (eigvals A) =\n        (B, U, Q) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"unitary_schur_decomposition A (eigvals A)\")"], ["proof (state)\nthis:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. bij_betw (spectrum_to_pm_idx A) (spectrum A) {..<card (spectrum A)}", "hence pr: \"similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and> \n      diag_mat B = (eigvals A)\""], ["proof (prove)\nusing this:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n    diag_mat B = eigvals A", "using hermitian_eigenvalue_real assms fc_mats_carrier es dim_eq"], ["proof (prove)\nusing this:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n  \\<lbrakk>?A \\<in> carrier_mat ?n ?n; hermitian ?A;\n   char_poly ?A = (\\<Prod>e\\<leftarrow>?es. [:- e, 1:]);\n   unitary_schur_decomposition ?A ?es = (?B, ?P, ?Q)\\<rbrakk>\n  \\<Longrightarrow> similar_mat_wit ?A ?B ?P\n                     (Complex_Matrix.adjoint ?P) \\<and>\n                    diagonal_mat ?B \\<and>\n                    diag_mat ?B = ?es \\<and>\n                    Complex_Matrix.unitary ?P \\<and>\n                    (\\<forall>i<?n. ?B $$ (i, i) \\<in> \\<real>)\n  hermitian A\n  A \\<in> fc_mats\n  fc_mats = carrier_mat dimR dimC\n  char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n    diag_mat B = eigvals A", "by auto"], ["proof (state)\nthis:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diag_mat B = eigvals A\n\ngoal (1 subgoal):\n 1. bij_betw (spectrum_to_pm_idx A) (spectrum A) {..<card (spectrum A)}", "have \"(p,M) = make_pm A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, M) = make_pm A", "unfolding p_def M_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (proj_meas_size (make_pm A), proj_meas_outcomes (make_pm A)) = make_pm A", "using make_pm_decomp"], ["proof (prove)\nusing this:\n  make_pm ?A =\n  (proj_meas_size (make_pm ?A), proj_meas_outcomes (make_pm ?A))\n\ngoal (1 subgoal):\n 1. (proj_meas_size (make_pm A), proj_meas_outcomes (make_pm A)) = make_pm A", "by simp"], ["proof (state)\nthis:\n  (p, M) = make_pm A\n\ngoal (1 subgoal):\n 1. bij_betw (spectrum_to_pm_idx A) (spectrum A) {..<card (spectrum A)}", "hence \"p = dist_el_card B\""], ["proof (prove)\nusing this:\n  (p, M) = make_pm A\n\ngoal (1 subgoal):\n 1. p = dist_el_card B", "using assms us"], ["proof (prove)\nusing this:\n  (p, M) = make_pm A\n  hermitian A\n  A \\<in> fc_mats\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. p = dist_el_card B", "unfolding make_pm_def"], ["proof (prove)\nusing this:\n  (p, M) =\n  (let (B, U, uu_) = unitary_schur_decomposition A (eigvals A)\n   in (dist_el_card B, mk_meas_outcome B U))\n  hermitian A\n  A \\<in> fc_mats\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. p = dist_el_card B", "by simp"], ["proof (state)\nthis:\n  p = dist_el_card B\n\ngoal (1 subgoal):\n 1. bij_betw (spectrum_to_pm_idx A) (spectrum A) {..<card (spectrum A)}", "have dimB: \"B \\<in> carrier_mat dimR dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> carrier_mat dimR dimR", "using  dim_eq pr assms \n      fc_mats_carrier"], ["proof (prove)\nusing this:\n  dimR = dimC\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diag_mat B = eigvals A\n  hermitian A\n  A \\<in> fc_mats\n  fc_mats = carrier_mat dimR dimC\n\ngoal (1 subgoal):\n 1. B \\<in> carrier_mat dimR dimR", "unfolding similar_mat_wit_def"], ["proof (prove)\nusing this:\n  dimR = dimC\n  (let n = dim_row A\n   in {A, B, U, Complex_Matrix.adjoint U} \\<subseteq> carrier_mat n n \\<and>\n      U * Complex_Matrix.adjoint U = 1\\<^sub>m n \\<and>\n      Complex_Matrix.adjoint U * U = 1\\<^sub>m n \\<and>\n      A = U * B * Complex_Matrix.adjoint U) \\<and>\n  diag_mat B = eigvals A\n  hermitian A\n  A \\<in> fc_mats\n  fc_mats = carrier_mat dimR dimC\n\ngoal (1 subgoal):\n 1. B \\<in> carrier_mat dimR dimR", "by auto"], ["proof (state)\nthis:\n  B \\<in> carrier_mat dimR dimR\n\ngoal (1 subgoal):\n 1. bij_betw (spectrum_to_pm_idx A) (spectrum A) {..<card (spectrum A)}", "have Bvals: \"diag_mat B = eigvals A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diag_mat B = eigvals A", "using pr hermitian_decomp_eigenvalues[of A B U]"], ["proof (prove)\nusing this:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diag_mat B = eigvals A\n  hermitian_decomp A B U \\<Longrightarrow> diag_mat B = eigvals A\n\ngoal (1 subgoal):\n 1. diag_mat B = eigvals A", "by simp"], ["proof (state)\nthis:\n  diag_mat B = eigvals A\n\ngoal (1 subgoal):\n 1. bij_betw (spectrum_to_pm_idx A) (spectrum A) {..<card (spectrum A)}", "have \"diag_elems B = spectrum A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diag_elems B = spectrum A", "unfolding spectrum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. diag_elems B = set (eigvals A)", "using dimB Bvals \n      diag_elems_set_diag_mat[of B]"], ["proof (prove)\nusing this:\n  B \\<in> carrier_mat dimR dimR\n  diag_mat B = eigvals A\n  diag_elems B = set (diag_mat B)\n\ngoal (1 subgoal):\n 1. diag_elems B = set (eigvals A)", "by simp"], ["proof (state)\nthis:\n  diag_elems B = spectrum A\n\ngoal (1 subgoal):\n 1. bij_betw (spectrum_to_pm_idx A) (spectrum A) {..<card (spectrum A)}", "moreover"], ["proof (state)\nthis:\n  diag_elems B = spectrum A\n\ngoal (1 subgoal):\n 1. bij_betw (spectrum_to_pm_idx A) (spectrum A) {..<card (spectrum A)}", "have \"dist_el_card B = card (spectrum A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_el_card B = card (spectrum A)", "using spectrum_size[of A p M] assms \n      \\<open>(p,M) = make_pm A\\<close> \\<open>p = dist_el_card B\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>hermitian A; A \\<in> fc_mats; make_pm A = (p, M)\\<rbrakk>\n  \\<Longrightarrow> p = card (spectrum A)\n  hermitian A\n  A \\<in> fc_mats\n  (p, M) = make_pm A\n  p = dist_el_card B\n\ngoal (1 subgoal):\n 1. dist_el_card B = card (spectrum A)", "by simp"], ["proof (state)\nthis:\n  dist_el_card B = card (spectrum A)\n\ngoal (1 subgoal):\n 1. bij_betw (spectrum_to_pm_idx A) (spectrum A) {..<card (spectrum A)}", "ultimately"], ["proof (chain)\npicking this:\n  diag_elems B = spectrum A\n  dist_el_card B = card (spectrum A)", "show \"bij_betw (spectrum_to_pm_idx A) (spectrum A) {..< card (spectrum A)}\""], ["proof (prove)\nusing this:\n  diag_elems B = spectrum A\n  dist_el_card B = card (spectrum A)\n\ngoal (1 subgoal):\n 1. bij_betw (spectrum_to_pm_idx A) (spectrum A) {..<card (spectrum A)}", "using diag_el_to_idx_bij us"], ["proof (prove)\nusing this:\n  diag_elems B = spectrum A\n  dist_el_card B = card (spectrum A)\n  bij_betw (diag_el_to_idx ?B) (diag_elems ?B) {..<dist_el_card ?B}\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. bij_betw (spectrum_to_pm_idx A) (spectrum A) {..<card (spectrum A)}", "unfolding spectrum_to_pm_idx_def Let_def"], ["proof (prove)\nusing this:\n  diag_elems B = spectrum A\n  dist_el_card B = card (spectrum A)\n  bij_betw (diag_el_to_idx ?B) (diag_elems ?B) {..<dist_el_card ?B}\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. bij_betw\n     (\\<lambda>x.\n         case unitary_schur_decomposition A (eigvals A) of\n         (B, U, uu_) \\<Rightarrow> diag_el_to_idx B x)\n     (spectrum A) {..<card (spectrum A)}", "by (metis (mono_tags, lifting) bij_betw_cong case_prod_conv)"], ["proof (state)\nthis:\n  bij_betw (spectrum_to_pm_idx A) (spectrum A) {..<card (spectrum A)}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) spectrum_to_pm_idx_lt_card:\nassumes \"A\\<in> fc_mats\"\n  and \"hermitian A\"\nand \"a\\<in> spectrum A\"\nshows \"spectrum_to_pm_idx A a < card (spectrum A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A a < card (spectrum A)", "using spectrum_to_pm_idx_bij[of A] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>hermitian A; A \\<in> fc_mats\\<rbrakk>\n  \\<Longrightarrow> bij_betw (spectrum_to_pm_idx A) (spectrum A)\n                     {..<card (spectrum A)}\n  A \\<in> fc_mats\n  hermitian A\n  a \\<in> spectrum A\n\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A a < card (spectrum A)", "by (meson bij_betw_apply lessThan_iff)"], ["", "lemma (in cpx_sq_mat) spectrum_to_pm_idx_inj:\nassumes \"hermitian A\"\n  and \"A\\<in> fc_mats\"\nshows \"inj_on (spectrum_to_pm_idx A) (spectrum A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (spectrum_to_pm_idx A) (spectrum A)", "using assms spectrum_to_pm_idx_bij"], ["proof (prove)\nusing this:\n  hermitian A\n  A \\<in> fc_mats\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats\\<rbrakk>\n  \\<Longrightarrow> bij_betw (spectrum_to_pm_idx ?A) (spectrum ?A)\n                     {..<card (spectrum ?A)}\n\ngoal (1 subgoal):\n 1. inj_on (spectrum_to_pm_idx A) (spectrum A)", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  hermitian A\n  A \\<in> fc_mats\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats\\<rbrakk>\n  \\<Longrightarrow> inj_on (spectrum_to_pm_idx ?A) (spectrum ?A) \\<and>\n                    spectrum_to_pm_idx ?A ` spectrum ?A =\n                    {..<card (spectrum ?A)}\n\ngoal (1 subgoal):\n 1. inj_on (spectrum_to_pm_idx A) (spectrum A)", "by simp"], ["", "lemma (in cpx_sq_mat) spectrum_meas_outcome_val_inv:\nassumes \"A\\<in> fc_mats\"\n  and \"hermitian A\"\nand \"make_pm A = (p,M)\"\nand \"i < p\"\nshows \"spectrum_to_pm_idx A (meas_outcome_val (M i)) = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i", "have es: \"char_poly A = (\\<Prod> (e :: complex) \\<leftarrow> (eigvals A). [:- e, 1:])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])", "using assms fc_mats_carrier eigvals_poly_length dim_eq"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  i < p\n  fc_mats = carrier_mat dimR dimC\n  ?M \\<in> carrier_mat ?n ?n \\<Longrightarrow>\n  char_poly ?M = (\\<Prod>a\\<leftarrow>eigvals ?M. [:- a, 1:]) \\<and>\n  length (eigvals ?M) = dim_row ?M\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])", "by auto"], ["proof (state)\nthis:\n  char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])\n\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i", "obtain B U Q where us: \"unitary_schur_decomposition A (eigvals A) = (B,U,Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B U Q.\n        unitary_schur_decomposition A (eigvals A) =\n        (B, U, Q) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"unitary_schur_decomposition A (eigvals A)\")"], ["proof (state)\nthis:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i", "hence pr: \"similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and> \n    diag_mat B = (eigvals A) \\<and>  (\\<forall>i < dimR. B$$(i, i) \\<in> Reals)\""], ["proof (prove)\nusing this:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n    diag_mat B = eigvals A \\<and>\n    (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)", "using hermitian_eigenvalue_real assms fc_mats_carrier es dim_eq"], ["proof (prove)\nusing this:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n  \\<lbrakk>?A \\<in> carrier_mat ?n ?n; hermitian ?A;\n   char_poly ?A = (\\<Prod>e\\<leftarrow>?es. [:- e, 1:]);\n   unitary_schur_decomposition ?A ?es = (?B, ?P, ?Q)\\<rbrakk>\n  \\<Longrightarrow> similar_mat_wit ?A ?B ?P\n                     (Complex_Matrix.adjoint ?P) \\<and>\n                    diagonal_mat ?B \\<and>\n                    diag_mat ?B = ?es \\<and>\n                    Complex_Matrix.unitary ?P \\<and>\n                    (\\<forall>i<?n. ?B $$ (i, i) \\<in> \\<real>)\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  i < p\n  fc_mats = carrier_mat dimR dimC\n  char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n    diag_mat B = eigvals A \\<and>\n    (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)", "by auto"], ["proof (state)\nthis:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diag_mat B = eigvals A \\<and> (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i", "have \"dim_row B = dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row B = dimR", "using assms fc_mats_carrier dim_eq similar_mat_wit_dim_row[of A]  \n      pr"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  i < p\n  fc_mats = carrier_mat dimR dimC\n  dimR = dimC\n  similar_mat_wit A ?B ?Q ?R \\<Longrightarrow> dim_row ?B = dim_row A\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diag_mat B = eigvals A \\<and> (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. dim_row B = dimR", "by auto"], ["proof (state)\nthis:\n  dim_row B = dimR\n\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i", "hence \"(p,M) = (dist_el_card B, mk_meas_outcome B U)\""], ["proof (prove)\nusing this:\n  dim_row B = dimR\n\ngoal (1 subgoal):\n 1. (p, M) = (dist_el_card B, mk_meas_outcome B U)", "using assms us"], ["proof (prove)\nusing this:\n  dim_row B = dimR\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  i < p\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. (p, M) = (dist_el_card B, mk_meas_outcome B U)", "unfolding make_pm_def"], ["proof (prove)\nusing this:\n  dim_row B = dimR\n  A \\<in> fc_mats\n  hermitian A\n  (let (B, U, uu_) = unitary_schur_decomposition A (eigvals A)\n   in (dist_el_card B, mk_meas_outcome B U)) =\n  (p, M)\n  i < p\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. (p, M) = (dist_el_card B, mk_meas_outcome B U)", "by simp"], ["proof (state)\nthis:\n  (p, M) = (dist_el_card B, mk_meas_outcome B U)\n\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i", "hence \"M = mk_meas_outcome B U\""], ["proof (prove)\nusing this:\n  (p, M) = (dist_el_card B, mk_meas_outcome B U)\n\ngoal (1 subgoal):\n 1. M = mk_meas_outcome B U", "by simp"], ["proof (state)\nthis:\n  M = mk_meas_outcome B U\n\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i", "have \"meas_outcome_val (M i) = Re (diag_idx_to_el B i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_val (M i) = Re (diag_idx_to_el B i)", "using \\<open>M = mk_meas_outcome B U\\<close>"], ["proof (prove)\nusing this:\n  M = mk_meas_outcome B U\n\ngoal (1 subgoal):\n 1. meas_outcome_val (M i) = Re (diag_idx_to_el B i)", "unfolding mk_meas_outcome_def \n      meas_outcome_val_def"], ["proof (prove)\nusing this:\n  M =\n  (\\<lambda>i.\n      (Re (diag_idx_to_el B i),\n       project_vecs (zero_col U)\n        (diag_elem_indices (diag_idx_to_el B i) B)))\n\ngoal (1 subgoal):\n 1. fst (M i) = Re (diag_idx_to_el B i)", "by simp"], ["proof (state)\nthis:\n  meas_outcome_val (M i) = Re (diag_idx_to_el B i)\n\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i", "also"], ["proof (state)\nthis:\n  meas_outcome_val (M i) = Re (diag_idx_to_el B i)\n\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i", "have \"... = diag_idx_to_el B i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (Re (diag_idx_to_el B i)) = diag_idx_to_el B i", "using pr\n    \\<open>(p, M) = (dist_el_card B, mk_meas_outcome B U)\\<close> \\<open>dim_row B = dimR\\<close> assms \n    diag_idx_to_el_real"], ["proof (prove)\nusing this:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diag_mat B = eigvals A \\<and> (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n  (p, M) = (dist_el_card B, mk_meas_outcome B U)\n  dim_row B = dimR\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  i < p\n  \\<lbrakk>\\<forall>i<dim_row ?B. ?B $$ (i, i) \\<in> \\<real>;\n   ?i < dist_el_card ?B\\<rbrakk>\n  \\<Longrightarrow> complex_of_real (Re (diag_idx_to_el ?B ?i)) =\n                    diag_idx_to_el ?B ?i\n\ngoal (1 subgoal):\n 1. complex_of_real (Re (diag_idx_to_el B i)) = diag_idx_to_el B i", "by auto"], ["proof (state)\nthis:\n  complex_of_real (Re (diag_idx_to_el B i)) = diag_idx_to_el B i\n\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i", "finally"], ["proof (chain)\npicking this:\n  complex_of_real (meas_outcome_val (M i)) = diag_idx_to_el B i", "have \"meas_outcome_val (M i) = diag_idx_to_el B i\""], ["proof (prove)\nusing this:\n  complex_of_real (meas_outcome_val (M i)) = diag_idx_to_el B i\n\ngoal (1 subgoal):\n 1. complex_of_real (meas_outcome_val (M i)) = diag_idx_to_el B i", "."], ["proof (state)\nthis:\n  complex_of_real (meas_outcome_val (M i)) = diag_idx_to_el B i\n\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i", "hence \"spectrum_to_pm_idx A (meas_outcome_val (M i)) = \n    spectrum_to_pm_idx A (diag_idx_to_el B i)\""], ["proof (prove)\nusing this:\n  complex_of_real (meas_outcome_val (M i)) = diag_idx_to_el B i\n\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) =\n    spectrum_to_pm_idx A (diag_idx_to_el B i)", "by simp"], ["proof (state)\nthis:\n  spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) =\n  spectrum_to_pm_idx A (diag_idx_to_el B i)\n\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i", "also"], ["proof (state)\nthis:\n  spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) =\n  spectrum_to_pm_idx A (diag_idx_to_el B i)\n\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i", "have \"... = diag_el_to_idx B (diag_idx_to_el B i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (diag_idx_to_el B i) =\n    diag_el_to_idx B (diag_idx_to_el B i)", "unfolding spectrum_to_pm_idx_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (let (Ba, U, uu_) = unitary_schur_decomposition A (eigvals A)\n     in diag_el_to_idx Ba (diag_idx_to_el B i)) =\n    diag_el_to_idx B (diag_idx_to_el B i)", "using us"], ["proof (prove)\nusing this:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. (let (Ba, U, uu_) = unitary_schur_decomposition A (eigvals A)\n     in diag_el_to_idx Ba (diag_idx_to_el B i)) =\n    diag_el_to_idx B (diag_idx_to_el B i)", "by simp"], ["proof (state)\nthis:\n  spectrum_to_pm_idx A (diag_idx_to_el B i) =\n  diag_el_to_idx B (diag_idx_to_el B i)\n\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i", "also"], ["proof (state)\nthis:\n  spectrum_to_pm_idx A (diag_idx_to_el B i) =\n  diag_el_to_idx B (diag_idx_to_el B i)\n\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i", "have \"... = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diag_el_to_idx B (diag_idx_to_el B i) = i", "using assms"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  i < p\n\ngoal (1 subgoal):\n 1. diag_el_to_idx B (diag_idx_to_el B i) = i", "unfolding diag_el_to_idx_def"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  i < p\n\ngoal (1 subgoal):\n 1. inv_into {..<dist_el_card B} (diag_idx_to_el B) (diag_idx_to_el B i) = i", "using \\<open>(p, M) = (dist_el_card B, mk_meas_outcome B U)\\<close> bij_betw_inv_into_left \n      diag_idx_to_el_bij"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  make_pm A = (p, M)\n  i < p\n  (p, M) = (dist_el_card B, mk_meas_outcome B U)\n  \\<lbrakk>bij_betw ?f ?A ?A'; ?a \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> inv_into ?A ?f (?f ?a) = ?a\n  bij_betw (diag_idx_to_el ?B) {..<dist_el_card ?B} (diag_elems ?B)\n\ngoal (1 subgoal):\n 1. inv_into {..<dist_el_card B} (diag_idx_to_el B) (diag_idx_to_el B i) = i", "by fastforce"], ["proof (state)\nthis:\n  diag_el_to_idx B (diag_idx_to_el B i) = i\n\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i", "finally"], ["proof (chain)\npicking this:\n  spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i", "show ?thesis"], ["proof (prove)\nusing this:\n  spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i\n\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i", "."], ["proof (state)\nthis:\n  spectrum_to_pm_idx A (complex_of_real (meas_outcome_val (M i))) = i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cpx_sq_mat) meas_outcome_val_spectrum_inv:\n  assumes \"A\\<in> fc_mats\"\n  and \"hermitian A\"\nand \"x\\<in> spectrum A\"\nand \"make_pm A = (p,M)\"\nshows \"meas_outcome_val (M (spectrum_to_pm_idx A x)) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) = x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) = x", "have es: \"char_poly A = (\\<Prod> (e :: complex) \\<leftarrow> (eigvals A). [:- e, 1:])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])", "using assms fc_mats_carrier eigvals_poly_length dim_eq"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  complex_of_real x \\<in> spectrum A\n  make_pm A = (p, M)\n  fc_mats = carrier_mat dimR dimC\n  ?M \\<in> carrier_mat ?n ?n \\<Longrightarrow>\n  char_poly ?M = (\\<Prod>a\\<leftarrow>eigvals ?M. [:- a, 1:]) \\<and>\n  length (eigvals ?M) = dim_row ?M\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])", "by auto"], ["proof (state)\nthis:\n  char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])\n\ngoal (1 subgoal):\n 1. meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) = x", "obtain B U Q where us: \"unitary_schur_decomposition A (eigvals A) = (B,U,Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B U Q.\n        unitary_schur_decomposition A (eigvals A) =\n        (B, U, Q) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"unitary_schur_decomposition A (eigvals A)\")"], ["proof (state)\nthis:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) = x", "hence pr: \"similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and> diagonal_mat B \\<and> \n      diag_mat B = (eigvals A) \\<and> unitary U \\<and> (\\<forall>i < dimR. B$$(i, i) \\<in> Reals)\""], ["proof (prove)\nusing this:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n    diagonal_mat B \\<and>\n    diag_mat B = eigvals A \\<and>\n    Complex_Matrix.unitary U \\<and>\n    (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)", "using hermitian_eigenvalue_real assms fc_mats_carrier es dim_eq"], ["proof (prove)\nusing this:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n  \\<lbrakk>?A \\<in> carrier_mat ?n ?n; hermitian ?A;\n   char_poly ?A = (\\<Prod>e\\<leftarrow>?es. [:- e, 1:]);\n   unitary_schur_decomposition ?A ?es = (?B, ?P, ?Q)\\<rbrakk>\n  \\<Longrightarrow> similar_mat_wit ?A ?B ?P\n                     (Complex_Matrix.adjoint ?P) \\<and>\n                    diagonal_mat ?B \\<and>\n                    diag_mat ?B = ?es \\<and>\n                    Complex_Matrix.unitary ?P \\<and>\n                    (\\<forall>i<?n. ?B $$ (i, i) \\<in> \\<real>)\n  A \\<in> fc_mats\n  hermitian A\n  complex_of_real x \\<in> spectrum A\n  make_pm A = (p, M)\n  fc_mats = carrier_mat dimR dimC\n  char_poly A = (\\<Prod>e\\<leftarrow>eigvals A. [:- e, 1:])\n  dimR = dimC\n\ngoal (1 subgoal):\n 1. similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n    diagonal_mat B \\<and>\n    diag_mat B = eigvals A \\<and>\n    Complex_Matrix.unitary U \\<and>\n    (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)", "by auto"], ["proof (state)\nthis:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) = x", "have \"dim_row B = dimR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row B = dimR", "using assms fc_mats_carrier dim_eq similar_mat_wit_dim_row[of A]  \n        pr"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  complex_of_real x \\<in> spectrum A\n  make_pm A = (p, M)\n  fc_mats = carrier_mat dimR dimC\n  dimR = dimC\n  similar_mat_wit A ?B ?Q ?R \\<Longrightarrow> dim_row ?B = dim_row A\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. dim_row B = dimR", "by auto"], ["proof (state)\nthis:\n  dim_row B = dimR\n\ngoal (1 subgoal):\n 1. meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) = x", "hence \"(p,M) = (dist_el_card B, mk_meas_outcome B U)\""], ["proof (prove)\nusing this:\n  dim_row B = dimR\n\ngoal (1 subgoal):\n 1. (p, M) = (dist_el_card B, mk_meas_outcome B U)", "using assms us"], ["proof (prove)\nusing this:\n  dim_row B = dimR\n  A \\<in> fc_mats\n  hermitian A\n  complex_of_real x \\<in> spectrum A\n  make_pm A = (p, M)\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. (p, M) = (dist_el_card B, mk_meas_outcome B U)", "unfolding make_pm_def"], ["proof (prove)\nusing this:\n  dim_row B = dimR\n  A \\<in> fc_mats\n  hermitian A\n  complex_of_real x \\<in> spectrum A\n  (let (B, U, uu_) = unitary_schur_decomposition A (eigvals A)\n   in (dist_el_card B, mk_meas_outcome B U)) =\n  (p, M)\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. (p, M) = (dist_el_card B, mk_meas_outcome B U)", "by simp"], ["proof (state)\nthis:\n  (p, M) = (dist_el_card B, mk_meas_outcome B U)\n\ngoal (1 subgoal):\n 1. meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) = x", "hence \"M = mk_meas_outcome B U\""], ["proof (prove)\nusing this:\n  (p, M) = (dist_el_card B, mk_meas_outcome B U)\n\ngoal (1 subgoal):\n 1. M = mk_meas_outcome B U", "by simp"], ["proof (state)\nthis:\n  M = mk_meas_outcome B U\n\ngoal (1 subgoal):\n 1. meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) = x", "have  \"diag_mat B = (eigvals A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diag_mat B = eigvals A", "using pr"], ["proof (prove)\nusing this:\n  similar_mat_wit A B U (Complex_Matrix.adjoint U) \\<and>\n  diagonal_mat B \\<and>\n  diag_mat B = eigvals A \\<and>\n  Complex_Matrix.unitary U \\<and>\n  (\\<forall>i<dimR. B $$ (i, i) \\<in> \\<real>)\n\ngoal (1 subgoal):\n 1. diag_mat B = eigvals A", "by simp"], ["proof (state)\nthis:\n  diag_mat B = eigvals A\n\ngoal (1 subgoal):\n 1. meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) = x", "hence \"x \\<in> set (diag_mat B)\""], ["proof (prove)\nusing this:\n  diag_mat B = eigvals A\n\ngoal (1 subgoal):\n 1. complex_of_real x \\<in> set (diag_mat B)", "using \\<open>diag_mat B = eigvals A\\<close> assms"], ["proof (prove)\nusing this:\n  diag_mat B = eigvals A\n  diag_mat B = eigvals A\n  A \\<in> fc_mats\n  hermitian A\n  complex_of_real x \\<in> spectrum A\n  make_pm A = (p, M)\n\ngoal (1 subgoal):\n 1. complex_of_real x \\<in> set (diag_mat B)", "unfolding spectrum_def"], ["proof (prove)\nusing this:\n  diag_mat B = eigvals A\n  diag_mat B = eigvals A\n  A \\<in> fc_mats\n  hermitian A\n  complex_of_real x \\<in> set (eigvals A)\n  make_pm A = (p, M)\n\ngoal (1 subgoal):\n 1. complex_of_real x \\<in> set (diag_mat B)", "by simp"], ["proof (state)\nthis:\n  complex_of_real x \\<in> set (diag_mat B)\n\ngoal (1 subgoal):\n 1. meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) = x", "hence \"x \\<in> diag_elems B\""], ["proof (prove)\nusing this:\n  complex_of_real x \\<in> set (diag_mat B)\n\ngoal (1 subgoal):\n 1. complex_of_real x \\<in> diag_elems B", "using diag_elems_set_diag_mat[of B]"], ["proof (prove)\nusing this:\n  complex_of_real x \\<in> set (diag_mat B)\n  diag_elems B = set (diag_mat B)\n\ngoal (1 subgoal):\n 1. complex_of_real x \\<in> diag_elems B", "by simp"], ["proof (state)\nthis:\n  complex_of_real x \\<in> diag_elems B\n\ngoal (1 subgoal):\n 1. meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) = x", "hence \"diag_idx_to_el B (diag_el_to_idx B x) = x\""], ["proof (prove)\nusing this:\n  complex_of_real x \\<in> diag_elems B\n\ngoal (1 subgoal):\n 1. diag_idx_to_el B (diag_el_to_idx B (complex_of_real x)) =\n    complex_of_real x", "unfolding diag_el_to_idx_def"], ["proof (prove)\nusing this:\n  complex_of_real x \\<in> diag_elems B\n\ngoal (1 subgoal):\n 1. diag_idx_to_el B\n     (inv_into {..<dist_el_card B} (diag_idx_to_el B) (complex_of_real x)) =\n    complex_of_real x", "by (meson bij_betw_inv_into_right diag_idx_to_el_bij)"], ["proof (state)\nthis:\n  diag_idx_to_el B (diag_el_to_idx B (complex_of_real x)) =\n  complex_of_real x\n\ngoal (1 subgoal):\n 1. meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) = x", "moreover"], ["proof (state)\nthis:\n  diag_idx_to_el B (diag_el_to_idx B (complex_of_real x)) =\n  complex_of_real x\n\ngoal (1 subgoal):\n 1. meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) = x", "have \"spectrum_to_pm_idx A x = diag_el_to_idx B x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A (complex_of_real x) =\n    diag_el_to_idx B (complex_of_real x)", "unfolding spectrum_to_pm_idx_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (let (B, U, uu_) = unitary_schur_decomposition A (eigvals A)\n     in diag_el_to_idx B (complex_of_real x)) =\n    diag_el_to_idx B (complex_of_real x)", "using us"], ["proof (prove)\nusing this:\n  unitary_schur_decomposition A (eigvals A) = (B, U, Q)\n\ngoal (1 subgoal):\n 1. (let (B, U, uu_) = unitary_schur_decomposition A (eigvals A)\n     in diag_el_to_idx B (complex_of_real x)) =\n    diag_el_to_idx B (complex_of_real x)", "by simp"], ["proof (state)\nthis:\n  spectrum_to_pm_idx A (complex_of_real x) =\n  diag_el_to_idx B (complex_of_real x)\n\ngoal (1 subgoal):\n 1. meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) = x", "moreover"], ["proof (state)\nthis:\n  spectrum_to_pm_idx A (complex_of_real x) =\n  diag_el_to_idx B (complex_of_real x)\n\ngoal (1 subgoal):\n 1. meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) = x", "have \"meas_outcome_val (M (spectrum_to_pm_idx A x)) = \n    Re (diag_idx_to_el B (diag_el_to_idx B x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) =\n    Re (diag_idx_to_el B (diag_el_to_idx B (complex_of_real x)))", "using \\<open>M = mk_meas_outcome B U\\<close>"], ["proof (prove)\nusing this:\n  M = mk_meas_outcome B U\n\ngoal (1 subgoal):\n 1. meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) =\n    Re (diag_idx_to_el B (diag_el_to_idx B (complex_of_real x)))", "unfolding mk_meas_outcome_def meas_outcome_val_def"], ["proof (prove)\nusing this:\n  M =\n  (\\<lambda>i.\n      (Re (diag_idx_to_el B i),\n       project_vecs (zero_col U)\n        (diag_elem_indices (diag_idx_to_el B i) B)))\n\ngoal (1 subgoal):\n 1. fst (M (spectrum_to_pm_idx A (complex_of_real x))) =\n    Re (diag_idx_to_el B (diag_el_to_idx B (complex_of_real x)))", "by (simp add: calculation(2))"], ["proof (state)\nthis:\n  meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) =\n  Re (diag_idx_to_el B (diag_el_to_idx B (complex_of_real x)))\n\ngoal (1 subgoal):\n 1. meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) = x", "ultimately"], ["proof (chain)\npicking this:\n  diag_idx_to_el B (diag_el_to_idx B (complex_of_real x)) =\n  complex_of_real x\n  spectrum_to_pm_idx A (complex_of_real x) =\n  diag_el_to_idx B (complex_of_real x)\n  meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) =\n  Re (diag_idx_to_el B (diag_el_to_idx B (complex_of_real x)))", "show ?thesis"], ["proof (prove)\nusing this:\n  diag_idx_to_el B (diag_el_to_idx B (complex_of_real x)) =\n  complex_of_real x\n  spectrum_to_pm_idx A (complex_of_real x) =\n  diag_el_to_idx B (complex_of_real x)\n  meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) =\n  Re (diag_idx_to_el B (diag_el_to_idx B (complex_of_real x)))\n\ngoal (1 subgoal):\n 1. meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) = x", "by simp"], ["proof (state)\nthis:\n  meas_outcome_val (M (spectrum_to_pm_idx A (complex_of_real x))) = x\n\ngoal:\nNo subgoals!", "qed"], ["", "definition (in cpx_sq_mat) eigen_projector where\n\"eigen_projector A a = \n  meas_outcome_prj ((proj_meas_outcomes (make_pm A)) (spectrum_to_pm_idx A a))\""], ["", "lemma (in cpx_sq_mat) eigen_projector_carrier:\n  assumes \"A\\<in> fc_mats\"\n  and \"a\\<in> spectrum A\"\n  and \"hermitian A\"\nshows \"eigen_projector A a \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eigen_projector A a \\<in> fc_mats", "unfolding eigen_projector_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. meas_outcome_prj\n     (proj_meas_outcomes (make_pm A) (spectrum_to_pm_idx A a))\n    \\<in> fc_mats", "using meas_outcome_prj_carrier[of A \"spectrum_to_pm_idx A a\"] \n    spectrum_to_pm_idx_lt_card[of A a] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>hermitian A; A \\<in> fc_mats;\n   spectrum_to_pm_idx A a < card (spectrum A)\\<rbrakk>\n  \\<Longrightarrow> meas_outcome_prj\n                     (proj_meas_outcomes (make_pm A)\n                       (spectrum_to_pm_idx A a))\n                    \\<in> fc_mats\n  \\<lbrakk>A \\<in> fc_mats; hermitian A; a \\<in> spectrum A\\<rbrakk>\n  \\<Longrightarrow> spectrum_to_pm_idx A a < card (spectrum A)\n  A \\<in> fc_mats\n  a \\<in> spectrum A\n  hermitian A\n\ngoal (1 subgoal):\n 1. meas_outcome_prj\n     (proj_meas_outcomes (make_pm A) (spectrum_to_pm_idx A a))\n    \\<in> fc_mats", "by simp"], ["", "text \\<open>We obtain the following result, which is similar to \\verb+make_pm_sum+ but with a sum on \nthe elements of the spectrum of Hermitian matrix $A$, which is a more standard statement of the \nspectral decomposition theorem.\\<close>"], ["", "lemma (in cpx_sq_mat) make_pm_sum':\n  assumes \"A \\<in> fc_mats\"\n  and \"hermitian A\"\nshows \"sum_mat (\\<lambda>a.  a \\<cdot>\\<^sub>m (eigen_projector A a)) (spectrum A) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "define p where \"p = proj_meas_size (make_pm A)\""], ["proof (state)\nthis:\n  p = proj_meas_size (make_pm A)\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "define M where \"M = proj_meas_outcomes (make_pm A)\""], ["proof (state)\nthis:\n  M = proj_meas_outcomes (make_pm A)\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "have \"(p,M) = make_pm A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, M) = make_pm A", "unfolding p_def M_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (proj_meas_size (make_pm A), proj_meas_outcomes (make_pm A)) = make_pm A", "using make_pm_decomp"], ["proof (prove)\nusing this:\n  make_pm ?A =\n  (proj_meas_size (make_pm ?A), proj_meas_outcomes (make_pm ?A))\n\ngoal (1 subgoal):\n 1. (proj_meas_size (make_pm A), proj_meas_outcomes (make_pm A)) = make_pm A", "by simp"], ["proof (state)\nthis:\n  (p, M) = make_pm A\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "define g where \n    \"g = (\\<lambda>i. (if i < p \n      then complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m meas_outcome_prj (M i) \n      else (0\\<^sub>m dimR dimC)))\""], ["proof (state)\nthis:\n  g =\n  (\\<lambda>i.\n      if i < p\n      then complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n           meas_outcome_prj (M i)\n      else 0\\<^sub>m dimR dimC)\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "have g: \"\\<forall>x. g x \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. g x \\<in> fc_mats", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. g x \\<in> fc_mats", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. g x \\<in> fc_mats", "show \"g x \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g x \\<in> fc_mats", "proof (cases \"x < p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x < p \\<Longrightarrow> g x \\<in> fc_mats\n 2. \\<not> x < p \\<Longrightarrow> g x \\<in> fc_mats", "case True"], ["proof (state)\nthis:\n  x < p\n\ngoal (2 subgoals):\n 1. x < p \\<Longrightarrow> g x \\<in> fc_mats\n 2. \\<not> x < p \\<Longrightarrow> g x \\<in> fc_mats", "hence \"(meas_outcome_val (M x)) \\<cdot>\\<^sub>m meas_outcome_prj (M x) \\<in> fc_mats\""], ["proof (prove)\nusing this:\n  x < p\n\ngoal (1 subgoal):\n 1. complex_of_real (meas_outcome_val (M x)) \\<cdot>\\<^sub>m\n    meas_outcome_prj (M x)\n    \\<in> fc_mats", "using meas_outcome_prj_carrier\n        spectrum_size assms cpx_sq_mat_smult make_pm_proj_measurement proj_measurement_square \n        \\<open>(p,M) = make_pm A\\<close>"], ["proof (prove)\nusing this:\n  x < p\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats; ?a < card (spectrum ?A)\\<rbrakk>\n  \\<Longrightarrow> meas_outcome_prj (proj_meas_outcomes (make_pm ?A) ?a)\n                    \\<in> fc_mats\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats; make_pm ?A = (?p, ?M)\\<rbrakk>\n  \\<Longrightarrow> ?p = card (spectrum ?A)\n  A \\<in> fc_mats\n  hermitian A\n  ?A \\<in> fc_mats \\<Longrightarrow> ?x \\<cdot>\\<^sub>m ?A \\<in> fc_mats\n  \\<lbrakk>?A \\<in> fc_mats; hermitian ?A; make_pm ?A = (?n, ?M)\\<rbrakk>\n  \\<Longrightarrow> proj_measurement ?n ?M\n  \\<lbrakk>proj_measurement ?p ?M; ?i < ?p\\<rbrakk>\n  \\<Longrightarrow> meas_outcome_prj (?M ?i) \\<in> fc_mats\n  (p, M) = make_pm A\n\ngoal (1 subgoal):\n 1. complex_of_real (meas_outcome_val (M x)) \\<cdot>\\<^sub>m\n    meas_outcome_prj (M x)\n    \\<in> fc_mats", "by metis"], ["proof (state)\nthis:\n  complex_of_real (meas_outcome_val (M x)) \\<cdot>\\<^sub>m\n  meas_outcome_prj (M x)\n  \\<in> fc_mats\n\ngoal (2 subgoals):\n 1. x < p \\<Longrightarrow> g x \\<in> fc_mats\n 2. \\<not> x < p \\<Longrightarrow> g x \\<in> fc_mats", "then"], ["proof (chain)\npicking this:\n  complex_of_real (meas_outcome_val (M x)) \\<cdot>\\<^sub>m\n  meas_outcome_prj (M x)\n  \\<in> fc_mats", "show ?thesis"], ["proof (prove)\nusing this:\n  complex_of_real (meas_outcome_val (M x)) \\<cdot>\\<^sub>m\n  meas_outcome_prj (M x)\n  \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. g x \\<in> fc_mats", "unfolding g_def"], ["proof (prove)\nusing this:\n  complex_of_real (meas_outcome_val (M x)) \\<cdot>\\<^sub>m\n  meas_outcome_prj (M x)\n  \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. (if x < p\n     then complex_of_real (meas_outcome_val (M x)) \\<cdot>\\<^sub>m\n          meas_outcome_prj (M x)\n     else 0\\<^sub>m dimR dimC)\n    \\<in> fc_mats", "using True"], ["proof (prove)\nusing this:\n  complex_of_real (meas_outcome_val (M x)) \\<cdot>\\<^sub>m\n  meas_outcome_prj (M x)\n  \\<in> fc_mats\n  x < p\n\ngoal (1 subgoal):\n 1. (if x < p\n     then complex_of_real (meas_outcome_val (M x)) \\<cdot>\\<^sub>m\n          meas_outcome_prj (M x)\n     else 0\\<^sub>m dimR dimC)\n    \\<in> fc_mats", "by simp"], ["proof (state)\nthis:\n  g x \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. \\<not> x < p \\<Longrightarrow> g x \\<in> fc_mats", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x < p \\<Longrightarrow> g x \\<in> fc_mats", "case False"], ["proof (state)\nthis:\n  \\<not> x < p\n\ngoal (1 subgoal):\n 1. \\<not> x < p \\<Longrightarrow> g x \\<in> fc_mats", "then"], ["proof (chain)\npicking this:\n  \\<not> x < p", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> x < p\n\ngoal (1 subgoal):\n 1. g x \\<in> fc_mats", "unfolding g_def"], ["proof (prove)\nusing this:\n  \\<not> x < p\n\ngoal (1 subgoal):\n 1. (if x < p\n     then complex_of_real (meas_outcome_val (M x)) \\<cdot>\\<^sub>m\n          meas_outcome_prj (M x)\n     else 0\\<^sub>m dimR dimC)\n    \\<in> fc_mats", "using zero_mem"], ["proof (prove)\nusing this:\n  \\<not> x < p\n  0\\<^sub>m dimR dimC \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. (if x < p\n     then complex_of_real (meas_outcome_val (M x)) \\<cdot>\\<^sub>m\n          meas_outcome_prj (M x)\n     else 0\\<^sub>m dimR dimC)\n    \\<in> fc_mats", "by simp"], ["proof (state)\nthis:\n  g x \\<in> fc_mats\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g x \\<in> fc_mats\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x. g x \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "define h where \"h = (\\<lambda>a. (if a \\<in> (spectrum A) then a \\<cdot>\\<^sub>m eigen_projector A a else (0\\<^sub>m dimR dimC)))\""], ["proof (state)\nthis:\n  h =\n  (\\<lambda>a.\n      if a \\<in> spectrum A then a \\<cdot>\\<^sub>m eigen_projector A a\n      else 0\\<^sub>m dimR dimC)\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "have h: \"\\<forall>x. h x \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. h x \\<in> fc_mats", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. h x \\<in> fc_mats", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. h x \\<in> fc_mats", "show \"h x \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h x \\<in> fc_mats", "proof (cases \"x\\<in> spectrum A\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> spectrum A \\<Longrightarrow> h x \\<in> fc_mats\n 2. x \\<notin> spectrum A \\<Longrightarrow> h x \\<in> fc_mats", "case True"], ["proof (state)\nthis:\n  x \\<in> spectrum A\n\ngoal (2 subgoals):\n 1. x \\<in> spectrum A \\<Longrightarrow> h x \\<in> fc_mats\n 2. x \\<notin> spectrum A \\<Longrightarrow> h x \\<in> fc_mats", "then"], ["proof (chain)\npicking this:\n  x \\<in> spectrum A", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> spectrum A\n\ngoal (1 subgoal):\n 1. h x \\<in> fc_mats", "unfolding h_def"], ["proof (prove)\nusing this:\n  x \\<in> spectrum A\n\ngoal (1 subgoal):\n 1. (if x \\<in> spectrum A then x \\<cdot>\\<^sub>m eigen_projector A x\n     else 0\\<^sub>m dimR dimC)\n    \\<in> fc_mats", "using eigen_projector_carrier[of A x] assms True"], ["proof (prove)\nusing this:\n  x \\<in> spectrum A\n  \\<lbrakk>A \\<in> fc_mats; x \\<in> spectrum A; hermitian A\\<rbrakk>\n  \\<Longrightarrow> eigen_projector A x \\<in> fc_mats\n  A \\<in> fc_mats\n  hermitian A\n  x \\<in> spectrum A\n\ngoal (1 subgoal):\n 1. (if x \\<in> spectrum A then x \\<cdot>\\<^sub>m eigen_projector A x\n     else 0\\<^sub>m dimR dimC)\n    \\<in> fc_mats", "by (simp add: cpx_sq_mat_smult)"], ["proof (state)\nthis:\n  h x \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. x \\<notin> spectrum A \\<Longrightarrow> h x \\<in> fc_mats", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> spectrum A \\<Longrightarrow> h x \\<in> fc_mats", "case False"], ["proof (state)\nthis:\n  x \\<notin> spectrum A\n\ngoal (1 subgoal):\n 1. x \\<notin> spectrum A \\<Longrightarrow> h x \\<in> fc_mats", "then"], ["proof (chain)\npicking this:\n  x \\<notin> spectrum A", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<notin> spectrum A\n\ngoal (1 subgoal):\n 1. h x \\<in> fc_mats", "unfolding h_def"], ["proof (prove)\nusing this:\n  x \\<notin> spectrum A\n\ngoal (1 subgoal):\n 1. (if x \\<in> spectrum A then x \\<cdot>\\<^sub>m eigen_projector A x\n     else 0\\<^sub>m dimR dimC)\n    \\<in> fc_mats", "using zero_mem"], ["proof (prove)\nusing this:\n  x \\<notin> spectrum A\n  0\\<^sub>m dimR dimC \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. (if x \\<in> spectrum A then x \\<cdot>\\<^sub>m eigen_projector A x\n     else 0\\<^sub>m dimR dimC)\n    \\<in> fc_mats", "by simp"], ["proof (state)\nthis:\n  h x \\<in> fc_mats\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  h x \\<in> fc_mats\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x. h x \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "have \"inj_on (spectrum_to_pm_idx A) (spectrum A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (spectrum_to_pm_idx A) (spectrum A)", "using assms spectrum_to_pm_idx_inj"], ["proof (prove)\nusing this:\n  A \\<in> fc_mats\n  hermitian A\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats\\<rbrakk>\n  \\<Longrightarrow> inj_on (spectrum_to_pm_idx ?A) (spectrum ?A)\n\ngoal (1 subgoal):\n 1. inj_on (spectrum_to_pm_idx A) (spectrum A)", "by simp"], ["proof (state)\nthis:\n  inj_on (spectrum_to_pm_idx A) (spectrum A)\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "moreover"], ["proof (state)\nthis:\n  inj_on (spectrum_to_pm_idx A) (spectrum A)\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "have \"{..<p} = spectrum_to_pm_idx A ` spectrum A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..<p} = spectrum_to_pm_idx A ` spectrum A", "using \\<open>(p,M) = make_pm A\\<close>\n    spectrum_to_pm_idx_bij spectrum_size"], ["proof (prove)\nusing this:\n  (p, M) = make_pm A\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats\\<rbrakk>\n  \\<Longrightarrow> bij_betw (spectrum_to_pm_idx ?A) (spectrum ?A)\n                     {..<card (spectrum ?A)}\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats; make_pm ?A = (?p, ?M)\\<rbrakk>\n  \\<Longrightarrow> ?p = card (spectrum ?A)\n\ngoal (1 subgoal):\n 1. {..<p} = spectrum_to_pm_idx A ` spectrum A", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  (p, M) = make_pm A\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats\\<rbrakk>\n  \\<Longrightarrow> inj_on (spectrum_to_pm_idx ?A) (spectrum ?A) \\<and>\n                    spectrum_to_pm_idx ?A ` spectrum ?A =\n                    {..<card (spectrum ?A)}\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats; make_pm ?A = (?p, ?M)\\<rbrakk>\n  \\<Longrightarrow> ?p = card (spectrum ?A)\n\ngoal (1 subgoal):\n 1. {..<p} = spectrum_to_pm_idx A ` spectrum A", "by (metis assms(1) assms(2))"], ["proof (state)\nthis:\n  {..<p} = spectrum_to_pm_idx A ` spectrum A\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "moreover"], ["proof (state)\nthis:\n  {..<p} = spectrum_to_pm_idx A ` spectrum A\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "have \"\\<And>x. x \\<in> spectrum A \\<Longrightarrow> g (spectrum_to_pm_idx A x) = h x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> spectrum A \\<Longrightarrow> g (spectrum_to_pm_idx A x) = h x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> spectrum A \\<Longrightarrow> g (spectrum_to_pm_idx A x) = h x", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> spectrum A \\<Longrightarrow> g (spectrum_to_pm_idx A x) = h x", "assume \"a \\<in> spectrum A\""], ["proof (state)\nthis:\n  a \\<in> spectrum A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> spectrum A \\<Longrightarrow> g (spectrum_to_pm_idx A x) = h x", "hence \"Re a = a\""], ["proof (prove)\nusing this:\n  a \\<in> spectrum A\n\ngoal (1 subgoal):\n 1. complex_of_real (Re a) = a", "using hermitian_spectrum_real assms"], ["proof (prove)\nusing this:\n  a \\<in> spectrum A\n  \\<lbrakk>?A \\<in> fc_mats; hermitian ?A; ?a \\<in> spectrum ?A\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> \\<real>\n  A \\<in> fc_mats\n  hermitian A\n\ngoal (1 subgoal):\n 1. complex_of_real (Re a) = a", "by simp"], ["proof (state)\nthis:\n  complex_of_real (Re a) = a\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> spectrum A \\<Longrightarrow> g (spectrum_to_pm_idx A x) = h x", "have \"spectrum_to_pm_idx A a < p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A a < p", "using spectrum_to_pm_idx_lt_card[of A] spectrum_size assms \n      \\<open>a \\<in> spectrum A\\<close> \\<open>(p,M) = make_pm A\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>A \\<in> fc_mats; hermitian A; ?a \\<in> spectrum A\\<rbrakk>\n  \\<Longrightarrow> spectrum_to_pm_idx A ?a < card (spectrum A)\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats; make_pm ?A = (?p, ?M)\\<rbrakk>\n  \\<Longrightarrow> ?p = card (spectrum ?A)\n  A \\<in> fc_mats\n  hermitian A\n  a \\<in> spectrum A\n  (p, M) = make_pm A\n\ngoal (1 subgoal):\n 1. spectrum_to_pm_idx A a < p", "by metis"], ["proof (state)\nthis:\n  spectrum_to_pm_idx A a < p\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> spectrum A \\<Longrightarrow> g (spectrum_to_pm_idx A x) = h x", "have \"g (spectrum_to_pm_idx A a) = \n      (meas_outcome_val (M (spectrum_to_pm_idx A a))) \\<cdot>\\<^sub>m \n      meas_outcome_prj (M (spectrum_to_pm_idx A a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (spectrum_to_pm_idx A a) =\n    complex_of_real\n     (meas_outcome_val (M (spectrum_to_pm_idx A a))) \\<cdot>\\<^sub>m\n    meas_outcome_prj (M (spectrum_to_pm_idx A a))", "using \\<open>spectrum_to_pm_idx A a < p\\<close>"], ["proof (prove)\nusing this:\n  spectrum_to_pm_idx A a < p\n\ngoal (1 subgoal):\n 1. g (spectrum_to_pm_idx A a) =\n    complex_of_real\n     (meas_outcome_val (M (spectrum_to_pm_idx A a))) \\<cdot>\\<^sub>m\n    meas_outcome_prj (M (spectrum_to_pm_idx A a))", "unfolding g_def"], ["proof (prove)\nusing this:\n  spectrum_to_pm_idx A a < p\n\ngoal (1 subgoal):\n 1. (if spectrum_to_pm_idx A a < p\n     then complex_of_real\n           (meas_outcome_val (M (spectrum_to_pm_idx A a))) \\<cdot>\\<^sub>m\n          meas_outcome_prj (M (spectrum_to_pm_idx A a))\n     else 0\\<^sub>m dimR dimC) =\n    complex_of_real\n     (meas_outcome_val (M (spectrum_to_pm_idx A a))) \\<cdot>\\<^sub>m\n    meas_outcome_prj (M (spectrum_to_pm_idx A a))", "by simp"], ["proof (state)\nthis:\n  g (spectrum_to_pm_idx A a) =\n  complex_of_real\n   (meas_outcome_val (M (spectrum_to_pm_idx A a))) \\<cdot>\\<^sub>m\n  meas_outcome_prj (M (spectrum_to_pm_idx A a))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> spectrum A \\<Longrightarrow> g (spectrum_to_pm_idx A x) = h x", "also"], ["proof (state)\nthis:\n  g (spectrum_to_pm_idx A a) =\n  complex_of_real\n   (meas_outcome_val (M (spectrum_to_pm_idx A a))) \\<cdot>\\<^sub>m\n  meas_outcome_prj (M (spectrum_to_pm_idx A a))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> spectrum A \\<Longrightarrow> g (spectrum_to_pm_idx A x) = h x", "have \"... = a \\<cdot>\\<^sub>m meas_outcome_prj (M (spectrum_to_pm_idx A a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real\n     (meas_outcome_val (M (spectrum_to_pm_idx A a))) \\<cdot>\\<^sub>m\n    meas_outcome_prj (M (spectrum_to_pm_idx A a)) =\n    a \\<cdot>\\<^sub>m meas_outcome_prj (M (spectrum_to_pm_idx A a))", "using meas_outcome_val_spectrum_inv[of A \"Re a\"] \\<open>Re a = a\\<close> assms \\<open>a \\<in> spectrum A\\<close> \n        \\<open>(p,M) = make_pm A\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>A \\<in> fc_mats; hermitian A;\n   complex_of_real (Re a) \\<in> spectrum A; make_pm A = (?p, ?M)\\<rbrakk>\n  \\<Longrightarrow> meas_outcome_val\n                     (?M (spectrum_to_pm_idx A (complex_of_real (Re a)))) =\n                    Re a\n  complex_of_real (Re a) = a\n  A \\<in> fc_mats\n  hermitian A\n  a \\<in> spectrum A\n  (p, M) = make_pm A\n\ngoal (1 subgoal):\n 1. complex_of_real\n     (meas_outcome_val (M (spectrum_to_pm_idx A a))) \\<cdot>\\<^sub>m\n    meas_outcome_prj (M (spectrum_to_pm_idx A a)) =\n    a \\<cdot>\\<^sub>m meas_outcome_prj (M (spectrum_to_pm_idx A a))", "by metis"], ["proof (state)\nthis:\n  complex_of_real\n   (meas_outcome_val (M (spectrum_to_pm_idx A a))) \\<cdot>\\<^sub>m\n  meas_outcome_prj (M (spectrum_to_pm_idx A a)) =\n  a \\<cdot>\\<^sub>m meas_outcome_prj (M (spectrum_to_pm_idx A a))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> spectrum A \\<Longrightarrow> g (spectrum_to_pm_idx A x) = h x", "also"], ["proof (state)\nthis:\n  complex_of_real\n   (meas_outcome_val (M (spectrum_to_pm_idx A a))) \\<cdot>\\<^sub>m\n  meas_outcome_prj (M (spectrum_to_pm_idx A a)) =\n  a \\<cdot>\\<^sub>m meas_outcome_prj (M (spectrum_to_pm_idx A a))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> spectrum A \\<Longrightarrow> g (spectrum_to_pm_idx A x) = h x", "have \"... = h a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<cdot>\\<^sub>m meas_outcome_prj (M (spectrum_to_pm_idx A a)) = h a", "using \\<open>a \\<in> spectrum A\\<close>"], ["proof (prove)\nusing this:\n  a \\<in> spectrum A\n\ngoal (1 subgoal):\n 1. a \\<cdot>\\<^sub>m meas_outcome_prj (M (spectrum_to_pm_idx A a)) = h a", "unfolding eigen_projector_def M_def h_def"], ["proof (prove)\nusing this:\n  a \\<in> spectrum A\n\ngoal (1 subgoal):\n 1. a \\<cdot>\\<^sub>m\n    meas_outcome_prj\n     (proj_meas_outcomes (make_pm A) (spectrum_to_pm_idx A a)) =\n    (if a \\<in> spectrum A\n     then a \\<cdot>\\<^sub>m\n          meas_outcome_prj\n           (proj_meas_outcomes (make_pm A) (spectrum_to_pm_idx A a))\n     else 0\\<^sub>m dimR dimC)", "by simp"], ["proof (state)\nthis:\n  a \\<cdot>\\<^sub>m meas_outcome_prj (M (spectrum_to_pm_idx A a)) = h a\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> spectrum A \\<Longrightarrow> g (spectrum_to_pm_idx A x) = h x", "finally"], ["proof (chain)\npicking this:\n  g (spectrum_to_pm_idx A a) = h a", "show \"g (spectrum_to_pm_idx A a) = h a\""], ["proof (prove)\nusing this:\n  g (spectrum_to_pm_idx A a) = h a\n\ngoal (1 subgoal):\n 1. g (spectrum_to_pm_idx A a) = h a", "."], ["proof (state)\nthis:\n  g (spectrum_to_pm_idx A a) = h a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x2 \\<in> spectrum A \\<Longrightarrow>\n  g (spectrum_to_pm_idx A ?x2) = h ?x2\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "ultimately"], ["proof (chain)\npicking this:\n  inj_on (spectrum_to_pm_idx A) (spectrum A)\n  {..<p} = spectrum_to_pm_idx A ` spectrum A\n  ?x2 \\<in> spectrum A \\<Longrightarrow>\n  g (spectrum_to_pm_idx A ?x2) = h ?x2", "have \"sum_mat h (spectrum A) = \n    sum_mat g (spectrum_to_pm_idx A ` spectrum A)\""], ["proof (prove)\nusing this:\n  inj_on (spectrum_to_pm_idx A) (spectrum A)\n  {..<p} = spectrum_to_pm_idx A ` spectrum A\n  ?x2 \\<in> spectrum A \\<Longrightarrow>\n  g (spectrum_to_pm_idx A ?x2) = h ?x2\n\ngoal (1 subgoal):\n 1. local.sum_mat h (spectrum A) =\n    local.sum_mat g (spectrum_to_pm_idx A ` spectrum A)", "unfolding sum_mat_def"], ["proof (prove)\nusing this:\n  inj_on (spectrum_to_pm_idx A) (spectrum A)\n  {..<p} = spectrum_to_pm_idx A ` spectrum A\n  ?x2 \\<in> spectrum A \\<Longrightarrow>\n  g (spectrum_to_pm_idx A ?x2) = h ?x2\n\ngoal (1 subgoal):\n 1. sum_with (+) (0\\<^sub>m dimR dimC) h (spectrum A) =\n    sum_with (+) (0\\<^sub>m dimR dimC) g (spectrum_to_pm_idx A ` spectrum A)", "using   sum_with_reindex_cong[symmetric, of g h \"spectrum_to_pm_idx A\" \"spectrum A\" \"{..< p}\"] \n      g h"], ["proof (prove)\nusing this:\n  inj_on (spectrum_to_pm_idx A) (spectrum A)\n  {..<p} = spectrum_to_pm_idx A ` spectrum A\n  ?x2 \\<in> spectrum A \\<Longrightarrow>\n  g (spectrum_to_pm_idx A ?x2) = h ?x2\n  \\<lbrakk>\\<forall>x. g x \\<in> fc_mats; \\<forall>x. h x \\<in> fc_mats;\n   inj_on (spectrum_to_pm_idx A) (spectrum A);\n   {..<p} = spectrum_to_pm_idx A ` spectrum A;\n   \\<And>x.\n      x \\<in> spectrum A \\<Longrightarrow>\n      g (spectrum_to_pm_idx A x) = h x\\<rbrakk>\n  \\<Longrightarrow> sum_with (+) (0\\<^sub>m dimR dimC) h (spectrum A) =\n                    sum_with (+) (0\\<^sub>m dimR dimC) g\n                     (spectrum_to_pm_idx A ` spectrum A)\n  \\<forall>x. g x \\<in> fc_mats\n  \\<forall>x. h x \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. sum_with (+) (0\\<^sub>m dimR dimC) h (spectrum A) =\n    sum_with (+) (0\\<^sub>m dimR dimC) g (spectrum_to_pm_idx A ` spectrum A)", "by simp"], ["proof (state)\nthis:\n  local.sum_mat h (spectrum A) =\n  local.sum_mat g (spectrum_to_pm_idx A ` spectrum A)\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "also"], ["proof (state)\nthis:\n  local.sum_mat h (spectrum A) =\n  local.sum_mat g (spectrum_to_pm_idx A ` spectrum A)\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "have \"... = sum_mat g {..< p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat g (spectrum_to_pm_idx A ` spectrum A) =\n    local.sum_mat g {..<p}", "using \\<open>{..<p} = spectrum_to_pm_idx A ` spectrum A\\<close>"], ["proof (prove)\nusing this:\n  {..<p} = spectrum_to_pm_idx A ` spectrum A\n\ngoal (1 subgoal):\n 1. local.sum_mat g (spectrum_to_pm_idx A ` spectrum A) =\n    local.sum_mat g {..<p}", "by simp"], ["proof (state)\nthis:\n  local.sum_mat g (spectrum_to_pm_idx A ` spectrum A) =\n  local.sum_mat g {..<p}\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "also"], ["proof (state)\nthis:\n  local.sum_mat g (spectrum_to_pm_idx A ` spectrum A) =\n  local.sum_mat g {..<p}\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "have \"... = sum_mat (\\<lambda>i. (meas_outcome_val (M i)) \\<cdot>\\<^sub>m meas_outcome_prj (M i)) {..<p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat g {..<p} =\n    local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p}", "proof (rule sum_mat_cong, simp)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<in> {..<p} \\<Longrightarrow>\n       g i =\n       complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n       meas_outcome_prj (M i)\n 2. \\<And>i. i \\<in> {..<p} \\<Longrightarrow> g i \\<in> fc_mats\n 3. \\<And>i.\n       i \\<in> {..<p} \\<Longrightarrow>\n       complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n       meas_outcome_prj (M i)\n       \\<in> fc_mats", "fix i"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<in> {..<p} \\<Longrightarrow>\n       g i =\n       complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n       meas_outcome_prj (M i)\n 2. \\<And>i. i \\<in> {..<p} \\<Longrightarrow> g i \\<in> fc_mats\n 3. \\<And>i.\n       i \\<in> {..<p} \\<Longrightarrow>\n       complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n       meas_outcome_prj (M i)\n       \\<in> fc_mats", "assume \"i \\<in> {..< p}\""], ["proof (state)\nthis:\n  i \\<in> {..<p}\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<in> {..<p} \\<Longrightarrow>\n       g i =\n       complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n       meas_outcome_prj (M i)\n 2. \\<And>i. i \\<in> {..<p} \\<Longrightarrow> g i \\<in> fc_mats\n 3. \\<And>i.\n       i \\<in> {..<p} \\<Longrightarrow>\n       complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n       meas_outcome_prj (M i)\n       \\<in> fc_mats", "hence \"i < p\""], ["proof (prove)\nusing this:\n  i \\<in> {..<p}\n\ngoal (1 subgoal):\n 1. i < p", "by simp"], ["proof (state)\nthis:\n  i < p\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<in> {..<p} \\<Longrightarrow>\n       g i =\n       complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n       meas_outcome_prj (M i)\n 2. \\<And>i. i \\<in> {..<p} \\<Longrightarrow> g i \\<in> fc_mats\n 3. \\<And>i.\n       i \\<in> {..<p} \\<Longrightarrow>\n       complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n       meas_outcome_prj (M i)\n       \\<in> fc_mats", "show \"g i \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g i \\<in> fc_mats", "using g"], ["proof (prove)\nusing this:\n  \\<forall>x. g x \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. g i \\<in> fc_mats", "by simp"], ["proof (state)\nthis:\n  g i \\<in> fc_mats\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       i \\<in> {..<p} \\<Longrightarrow>\n       g i =\n       complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n       meas_outcome_prj (M i)\n 2. \\<And>i.\n       i \\<in> {..<p} \\<Longrightarrow>\n       complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n       meas_outcome_prj (M i)\n       \\<in> fc_mats", "show \"g i = (meas_outcome_val (M i)) \\<cdot>\\<^sub>m meas_outcome_prj (M i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g i =\n    complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n    meas_outcome_prj (M i)", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i < p\n     then complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n          meas_outcome_prj (M i)\n     else 0\\<^sub>m dimR dimC) =\n    complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n    meas_outcome_prj (M i)", "using \\<open>i < p\\<close>"], ["proof (prove)\nusing this:\n  i < p\n\ngoal (1 subgoal):\n 1. (if i < p\n     then complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n          meas_outcome_prj (M i)\n     else 0\\<^sub>m dimR dimC) =\n    complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n    meas_outcome_prj (M i)", "by simp"], ["proof (state)\nthis:\n  g i =\n  complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n  meas_outcome_prj (M i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<p} \\<Longrightarrow>\n       complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n       meas_outcome_prj (M i)\n       \\<in> fc_mats", "show \"(meas_outcome_val (M i)) \\<cdot>\\<^sub>m meas_outcome_prj (M i) \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n    meas_outcome_prj (M i)\n    \\<in> fc_mats", "using meas_outcome_prj_carrier spectrum_size assms cpx_sq_mat_smult \n        make_pm_proj_measurement proj_measurement_square \\<open>i < p\\<close> \\<open>(p,M) = make_pm A\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats; ?a < card (spectrum ?A)\\<rbrakk>\n  \\<Longrightarrow> meas_outcome_prj (proj_meas_outcomes (make_pm ?A) ?a)\n                    \\<in> fc_mats\n  \\<lbrakk>hermitian ?A; ?A \\<in> fc_mats; make_pm ?A = (?p, ?M)\\<rbrakk>\n  \\<Longrightarrow> ?p = card (spectrum ?A)\n  A \\<in> fc_mats\n  hermitian A\n  ?A \\<in> fc_mats \\<Longrightarrow> ?x \\<cdot>\\<^sub>m ?A \\<in> fc_mats\n  \\<lbrakk>?A \\<in> fc_mats; hermitian ?A; make_pm ?A = (?n, ?M)\\<rbrakk>\n  \\<Longrightarrow> proj_measurement ?n ?M\n  \\<lbrakk>proj_measurement ?p ?M; ?i < ?p\\<rbrakk>\n  \\<Longrightarrow> meas_outcome_prj (?M ?i) \\<in> fc_mats\n  i < p\n  (p, M) = make_pm A\n\ngoal (1 subgoal):\n 1. complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n    meas_outcome_prj (M i)\n    \\<in> fc_mats", "by metis"], ["proof (state)\nthis:\n  complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n  meas_outcome_prj (M i)\n  \\<in> fc_mats\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  local.sum_mat g {..<p} =\n  local.sum_mat\n   (\\<lambda>i.\n       complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n       meas_outcome_prj (M i))\n   {..<p}\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "also"], ["proof (state)\nthis:\n  local.sum_mat g {..<p} =\n  local.sum_mat\n   (\\<lambda>i.\n       complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n       meas_outcome_prj (M i))\n   {..<p}\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "have \"... = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "using make_pm_sum assms \\<open>(p,M) = make_pm A\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<in> fc_mats; hermitian ?A; make_pm ?A = (?p, ?M)\\<rbrakk>\n  \\<Longrightarrow> local.sum_mat\n                     (\\<lambda>i.\n                         complex_of_real\n                          (meas_outcome_val (?M i)) \\<cdot>\\<^sub>m\n                         meas_outcome_prj (?M i))\n                     {..<?p} =\n                    ?A\n  A \\<in> fc_mats\n  hermitian A\n  (p, M) = make_pm A\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "unfolding g_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<in> fc_mats; hermitian ?A; make_pm ?A = (?p, ?M)\\<rbrakk>\n  \\<Longrightarrow> local.sum_mat\n                     (\\<lambda>i.\n                         complex_of_real\n                          (meas_outcome_val (?M i)) \\<cdot>\\<^sub>m\n                         meas_outcome_prj (?M i))\n                     {..<?p} =\n                    ?A\n  A \\<in> fc_mats\n  hermitian A\n  (p, M) = make_pm A\n\ngoal (1 subgoal):\n 1. local.sum_mat\n     (\\<lambda>i.\n         complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n         meas_outcome_prj (M i))\n     {..<p} =\n    A", "by simp"], ["proof (state)\nthis:\n  local.sum_mat\n   (\\<lambda>i.\n       complex_of_real (meas_outcome_val (M i)) \\<cdot>\\<^sub>m\n       meas_outcome_prj (M i))\n   {..<p} =\n  A\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "finally"], ["proof (chain)\npicking this:\n  local.sum_mat h (spectrum A) = A", "have \"sum_mat h (spectrum A) = A\""], ["proof (prove)\nusing this:\n  local.sum_mat h (spectrum A) = A\n\ngoal (1 subgoal):\n 1. local.sum_mat h (spectrum A) = A", "."], ["proof (state)\nthis:\n  local.sum_mat h (spectrum A) = A\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "moreover"], ["proof (state)\nthis:\n  local.sum_mat h (spectrum A) = A\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "have \"sum_mat h (spectrum A) = sum_mat (\\<lambda>a.  a \\<cdot>\\<^sub>m (eigen_projector A a)) (spectrum A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sum_mat h (spectrum A) =\n    local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A)", "proof (rule sum_mat_cong)"], ["proof (state)\ngoal (4 subgoals):\n 1. finite (spectrum A)\n 2. \\<And>i.\n       i \\<in> spectrum A \\<Longrightarrow>\n       h i = i \\<cdot>\\<^sub>m eigen_projector A i\n 3. \\<And>i. i \\<in> spectrum A \\<Longrightarrow> h i \\<in> fc_mats\n 4. \\<And>i.\n       i \\<in> spectrum A \\<Longrightarrow>\n       i \\<cdot>\\<^sub>m eigen_projector A i \\<in> fc_mats", "show \"finite (spectrum A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (spectrum A)", "using spectrum_finite[of A]"], ["proof (prove)\nusing this:\n  finite (spectrum A)\n\ngoal (1 subgoal):\n 1. finite (spectrum A)", "by simp"], ["proof (state)\nthis:\n  finite (spectrum A)\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<in> spectrum A \\<Longrightarrow>\n       h i = i \\<cdot>\\<^sub>m eigen_projector A i\n 2. \\<And>i. i \\<in> spectrum A \\<Longrightarrow> h i \\<in> fc_mats\n 3. \\<And>i.\n       i \\<in> spectrum A \\<Longrightarrow>\n       i \\<cdot>\\<^sub>m eigen_projector A i \\<in> fc_mats", "fix i"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<in> spectrum A \\<Longrightarrow>\n       h i = i \\<cdot>\\<^sub>m eigen_projector A i\n 2. \\<And>i. i \\<in> spectrum A \\<Longrightarrow> h i \\<in> fc_mats\n 3. \\<And>i.\n       i \\<in> spectrum A \\<Longrightarrow>\n       i \\<cdot>\\<^sub>m eigen_projector A i \\<in> fc_mats", "assume \"i\\<in> spectrum A\""], ["proof (state)\nthis:\n  i \\<in> spectrum A\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<in> spectrum A \\<Longrightarrow>\n       h i = i \\<cdot>\\<^sub>m eigen_projector A i\n 2. \\<And>i. i \\<in> spectrum A \\<Longrightarrow> h i \\<in> fc_mats\n 3. \\<And>i.\n       i \\<in> spectrum A \\<Longrightarrow>\n       i \\<cdot>\\<^sub>m eigen_projector A i \\<in> fc_mats", "thus \"h i = i \\<cdot>\\<^sub>m eigen_projector A i\""], ["proof (prove)\nusing this:\n  i \\<in> spectrum A\n\ngoal (1 subgoal):\n 1. h i = i \\<cdot>\\<^sub>m eigen_projector A i", "unfolding h_def"], ["proof (prove)\nusing this:\n  i \\<in> spectrum A\n\ngoal (1 subgoal):\n 1. (if i \\<in> spectrum A then i \\<cdot>\\<^sub>m eigen_projector A i\n     else 0\\<^sub>m dimR dimC) =\n    i \\<cdot>\\<^sub>m eigen_projector A i", "by simp"], ["proof (state)\nthis:\n  h i = i \\<cdot>\\<^sub>m eigen_projector A i\n\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> spectrum A \\<Longrightarrow> h i \\<in> fc_mats\n 2. \\<And>i.\n       i \\<in> spectrum A \\<Longrightarrow>\n       i \\<cdot>\\<^sub>m eigen_projector A i \\<in> fc_mats", "show \"h i \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h i \\<in> fc_mats", "using h"], ["proof (prove)\nusing this:\n  \\<forall>x. h x \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. h i \\<in> fc_mats", "by simp"], ["proof (state)\nthis:\n  h i \\<in> fc_mats\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> spectrum A \\<Longrightarrow>\n       i \\<cdot>\\<^sub>m eigen_projector A i \\<in> fc_mats", "show \"i \\<cdot>\\<^sub>m eigen_projector A i \\<in> fc_mats\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^sub>m eigen_projector A i \\<in> fc_mats", "using eigen_projector_carrier[of A i] assms \n        \\<open>i\\<in> spectrum A\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>A \\<in> fc_mats; i \\<in> spectrum A; hermitian A\\<rbrakk>\n  \\<Longrightarrow> eigen_projector A i \\<in> fc_mats\n  A \\<in> fc_mats\n  hermitian A\n  i \\<in> spectrum A\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^sub>m eigen_projector A i \\<in> fc_mats", "by (metis \\<open>h i = i \\<cdot>\\<^sub>m eigen_projector A i\\<close> h)"], ["proof (state)\nthis:\n  i \\<cdot>\\<^sub>m eigen_projector A i \\<in> fc_mats\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  local.sum_mat h (spectrum A) =\n  local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n   (spectrum A)\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "ultimately"], ["proof (chain)\npicking this:\n  local.sum_mat h (spectrum A) = A\n  local.sum_mat h (spectrum A) =\n  local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n   (spectrum A)", "show ?thesis"], ["proof (prove)\nusing this:\n  local.sum_mat h (spectrum A) = A\n  local.sum_mat h (spectrum A) =\n  local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n   (spectrum A)\n\ngoal (1 subgoal):\n 1. local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n     (spectrum A) =\n    A", "by simp"], ["proof (state)\nthis:\n  local.sum_mat (\\<lambda>a. a \\<cdot>\\<^sub>m eigen_projector A a)\n   (spectrum A) =\n  A\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}