{"file_name": "/home/qj213/afp-2021-10-22/thys/Probabilistic_Noninterference/Resumption_Based.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Probabilistic_Noninterference", "problem_names": ["lemma int_emp[simp]:\nassumes \"i > 0\"\nshows \"{..<i} \\<noteq> {}\"", "lemma inj_on_inv_into[simp]:\nassumes \"inj_on F P\"\nshows \"inv_into P F ` (F ` P) = P\"", "lemma inj_on_inv_into2[simp]:\n\"inj_on (inv_into P F) (F ` P)\"", "lemma refl_gfp:\nassumes 1: \"mono Retr\" and 2: \"\\<And> theta. refl theta \\<Longrightarrow> refl (Retr theta)\"\nshows \"refl (gfp Retr)\"", "lemma sym_gfp:\nassumes 1: \"mono Retr\" and 2: \"\\<And> theta. sym theta \\<Longrightarrow> sym (Retr theta)\"\nshows \"sym (gfp Retr)\"", "lemma trancl_trans[simp]:\nassumes \"trans R\"\nshows \"P ^+ \\<subseteq> R \\<longleftrightarrow> P \\<subseteq> R\"", "lemma trans_gfp:\nassumes 1: \"mono Retr\" and 2: \"\\<And> theta. trans theta \\<Longrightarrow> trans (Retr theta)\"\nshows \"trans (gfp Retr)\"", "lemma O_subset_trans:\nassumes \"r O r \\<subseteq> r\"\nshows \"trans r\"", "lemma trancl_imp_trans:\nassumes \"r ^+ \\<subseteq> r\"\nshows \"trans r\"", "lemma sym_trans_gfp:\nassumes 1: \"mono Retr\" and 2: \"\\<And> theta. sym theta \\<and> trans theta \\<Longrightarrow> sym (Retr theta) \\<and> trans (Retr theta)\"\nshows \"sym (gfp Retr) \\<and> trans (gfp Retr)\"", "lemma part_emp[simp]:\n\"part J (insert {} P) = part J P\"", "lemma finite_part[simp]:\nassumes \"finite I\" and \"part I P\"\nshows \"finite P\"", "lemma part_sum:\n  assumes P: \"part {..<n::nat} P\"\n  shows \"(\\<Sum>i<n. f i) = (\\<Sum>p\\<in>P. \\<Sum>i\\<in>p. f i)\"", "lemma part_Un[simp]:\nassumes \"part I1 P1\" and \"part I2 P2\" and \"I1 Int I2 = {}\"\nshows \"part (I1 Un I2) (P1 Un P2)\"", "lemma part_Un_singl[simp]:\nassumes \"part K P\" and \"\\<And> I. I \\<in> P \\<Longrightarrow> I0 Int I = {}\"\nshows \"part (I0 Un K) ({I0} Un P)\"", "lemma part_Un_singl2:\nassumes \"K01 = I0 Un K1\"\nand \"part K1 P\" and \"\\<And> I. I \\<in> P \\<Longrightarrow> I0 Int I = {}\"\nshows \"part K01 ({I0} Un P)\"", "lemma part_UN:\nassumes \"\\<And> n. n \\<in> N \\<Longrightarrow> part (I n) (P n)\"\nand \"\\<And> n1 n2. {n1,n2} \\<subseteq> N \\<and> n1 \\<noteq> n2 \\<Longrightarrow> I n1 \\<inter> I n2 = {}\"\nshows \"part (UN n : N. I n) (UN n : N. P n)\"", "lemma incl_gen[simp]:\n\"I \\<subseteq> gen P I\"", "lemma gen_incl_Un:\n\"gen P I \\<subseteq> I \\<union> (Union P)\"", "lemma gen_incl:\nassumes \"I \\<in> P\"\nshows \"gen P I \\<subseteq> Union P\"", "lemma finite_gen:\nassumes \"finite P\" and \"\\<And> J. J \\<in> P \\<Longrightarrow> finite J\" and \"finite I\"\nshows \"finite (gen P I)\"", "lemma subset_gen[simp]:\nassumes \"J \\<in> P\" and \"gen P I \\<inter> J \\<noteq> {}\"\nshows \"J \\<subseteq> gen P I\"", "lemma gen_subset_gen[simp]:\nassumes \"J \\<in> P\" and \"gen P I \\<inter> J \\<noteq> {}\"\nshows \"gen P J \\<subseteq> gen P I\"", "lemma gen_mono[simp]:\nassumes \"I \\<subseteq> J\"\nshows \"gen P I \\<subseteq> gen P J\"", "lemma gen_idem[simp]:\n\"gen P (gen P I) = gen P I\"", "lemma gen_nchotomy:\nassumes \"J \\<in> P\"\nshows \"J \\<subseteq> gen P I \\<or> gen P I \\<inter> J = {}\"", "lemma gen_Union:\nassumes \"I \\<in> P\"\nshows \"gen P I = Union {J \\<in> P . J \\<subseteq> gen P I}\"", "lemma subset_gen2:\nassumes *: \"{I,J} \\<subseteq> P\" and **: \"gen P I \\<inter> gen P J \\<noteq> {}\"\nshows \"I \\<subseteq> gen P J\"", "lemma gen_subset_gen2[simp]:\nassumes \"{I,J} \\<subseteq> P\" and \"gen P I \\<inter> gen P J \\<noteq> {}\"\nshows \"gen P I \\<subseteq> gen P J\"", "lemma gen_eq_gen:\nassumes \"{I,J} \\<subseteq> P\" and \"gen P I \\<inter> gen P J \\<noteq> {}\"\nshows \"gen P I = gen P J\"", "lemma gen_empty[simp]:\n\"gen P {} = {}\"", "lemma gen_empty2[simp]:\n\"gen {} I = I\"", "lemma emp_gen[simp]:\nassumes \"gen P I = {}\"\nshows \"I = {}\"", "lemma partGen_ex:\nassumes \"I \\<in> P\"\nshows \"\\<exists> J \\<in> partGen P. I \\<subseteq> J\"", "lemma ex_partGen:\nassumes \"J \\<in> partGen P\" and j: \"j \\<in> J\"\nshows \"\\<exists> I \\<in> P. j \\<in> I\"", "lemma Union_partGen: \"\\<Union> (partGen P) = \\<Union> P\"", "lemma Int_partGen:\nassumes *: \"{I,J} \\<subseteq> partGen P\" and **: \"I \\<inter> J \\<noteq> {}\"\nshows \"I = J\"", "lemma part_partGen:\n\"part (Union P) (partGen P)\"", "lemma finite_partGen[simp]:\nassumes \"finite P\"\nshows \"finite (partGen P)\"", "lemma emp_partGen[simp]:\nassumes \"{} \\<notin> P\"\nshows \"{} \\<notin> partGen P\"", "lemma finer_partGen:\n\"finer P (partGen P)\"", "lemma finer_nchotomy:\nassumes P: \"part I0 P\" and Q: \"part I0 Q\" and PQ: \"finer P Q\"\nand I: \"I \\<in> P\" and II: \"II \\<in> Q\"\nshows \"I \\<subseteq> II \\<or> (I \\<inter> II = {})\"", "lemma finer_ex:\nassumes P: \"part I0 P\" and Q: \"part I0 Q\" and PQ: \"finer P Q\"\nand I: \"I \\<in> P\"\nshows \"\\<exists> II. II \\<in> Q \\<and> I \\<subseteq> II\"", "lemma partJoin_commute:\n\"partJoin P Q = partJoin Q P\"", "lemma Union_partJoin_L:\n\"Union P \\<subseteq> Union (partJoin P Q)\"", "lemma Union_partJoin_R:\n\"Union Q \\<subseteq> Union (partJoin P Q)\"", "lemma part_partJoin[simp]:\nassumes \"part I P\" and \"part I Q\"\nshows \"part I (partJoin P Q)\"", "lemma finer_partJoin_L[simp]:\nassumes *: \"part I P\" and **: \"part I Q\"\nshows \"finer P (partJoin P Q)\"", "lemma finer_partJoin_R[simp]:\nassumes *: \"part I P\" and **: \"part I Q\"\nshows \"finer Q (partJoin P Q)\"", "lemma finer_emp[simp]:\nassumes \"finer {} Q\"\nshows \"Q \\<subseteq> { {} }\"", "lemma part_emp_R[simp]:\n\"part I {} \\<longleftrightarrow> I = {}\"", "lemma part_emp_L[simp]:\n\"part {} P \\<Longrightarrow> P \\<subseteq> { {} }\"", "lemma finite_partJoin[simp]:\nassumes \"finite P\" and \"finite Q\"\nshows \"finite (partJoin P Q)\"", "lemma emp_partJoin[simp]:\nassumes \"{} \\<notin> P\" and \"{} \\<notin> Q\"\nshows \"{} \\<notin> partJoin P Q\"", "lemma partCompat_Un[simp]:\n\"partCompat (P Un Q) theta f \\<longleftrightarrow>\n partCompat P theta f \\<and> partCompat Q theta f\"", "lemma partCompat_gen_aux:\nassumes theta: \"sym theta\" \"trans theta\"\nand fP: \"partCompat P theta f\" and I: \"I \\<in> P\"\nand i: \"i \\<in> I\" and j: \"j \\<in> gen P I\" and ij: \"i \\<noteq> j\"\nshows \"(f i, f j) \\<in> theta\"", "lemma partCompat_gen:\nassumes theta: \"sym theta\" \"trans theta\"\nand fP: \"partCompat P theta f\" and I: \"I \\<in> P\"\nshows \"compat (gen P I) theta f\"", "lemma partCompat_partGen:\nassumes \"sym theta\" and \"trans theta\"\nand \"partCompat P theta f\"\nshows \"partCompat (partGen P) theta f\"", "lemma partCompat_partJoin[simp]:\nassumes \"sym theta\" and \"trans theta\"\nand \"partCompat P theta f\" and \"partCompat Q theta f\"\nshows \"partCompat (partJoin P Q) theta f\"", "lemma inj_on_lift:\nassumes P: \"part I0 P\" and Q: \"part I0 Q\" and PQ: \"finer P Q\"\nand F: \"inj_on F P\" and FP: \"part J0 (F ` P)\" and emp: \"{} \\<notin> F ` P\"\nshows \"inj_on (lift P F) Q\"", "lemma part_lift:\nassumes P: \"part I0 P\" and Q: \"part I0 Q\" and PQ: \"finer P Q\"\nand F: \"inj_on F P\" and FP: \"part J0 (F ` P)\" and emp: \"{} \\<notin> P\" \"{} \\<notin> F ` P\"\nshows \"part J0 (lift P F ` Q)\"", "lemma finer_lift:\nassumes \"finer P Q\"\nshows \"finer (F ` P) (lift P F ` Q)\"", "lemma refl_indis: \"refl indis\"\nand trans_indis: \"trans indis\"\nand sym_indis: \"sym indis\"", "lemma indis_refl[intro]: \"s \\<approx> s\"", "lemma indis_trans[trans]: \"\\<lbrakk>s \\<approx> s'; s' \\<approx> s''\\<rbrakk> \\<Longrightarrow> s \\<approx> s''\"", "lemma indis_sym[sym]: \"s \\<approx> s' \\<Longrightarrow> s' \\<approx> s\"", "lemma discrL_intro[intro]:\nassumes \"\\<And> c. c \\<in> set cl \\<Longrightarrow> discr c\"\nshows \"discrL cl\"", "lemma discrL_discr[simp]:\nassumes \"discrL cl\" and \"c \\<in> set cl\"\nshows \"discr c\"", "lemma discrL_update[simp]:\nassumes cl: \"discrL cl\" and c': \"discr c'\"\nshows \"discrL (cl[n := c'])\"", "lemma discr_coind[consumes 1, case_names Hyp, induct pred: discr]:\nassumes *: \"phi c\" and\n**: \"\\<And> c s i. \\<lbrakk> phi c ; i < brn c\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> eff c s i \\<and> (phi (cont c s i) \\<or> discr (cont c s i))\"\nshows \"discr c\"", "lemma discr_raw_coind[consumes 1, case_names Hyp]:\nassumes *: \"phi c\" and\n**: \"\\<And> c s i. \\<lbrakk>i < brn c; phi c\\<rbrakk> \\<Longrightarrow> s \\<approx> eff c s i \\<and> phi (cont c s i)\"\nshows \"discr c\"", "lemma discr_cont[simp]:\nassumes *: \"discr c\" and **: \"i < brn c\"\nshows \"discr (cont c s i)\"", "lemma discr_eff_indis[simp]:\nassumes *: \"discr c\" and **: \"i < brn c\"\nshows \"s \\<approx> eff c s i\"", "lemma sisoL_intro[intro]:\nassumes \"\\<And> c. c \\<in> set cl \\<Longrightarrow> siso c\"\nshows \"sisoL cl\"", "lemma sisoL_siso[simp]:\nassumes \"sisoL cl\" and \"c \\<in> set cl\"\nshows \"siso c\"", "lemma sisoL_update[simp]:\nassumes cl: \"sisoL cl\" and c': \"siso c'\"\nshows \"sisoL (cl[n := c'])\"", "lemma siso_coind[consumes 1, case_names Obs Cont, induct pred: siso]:\nassumes *: \"phi c\" and\n**: \"\\<And> c s t i. \\<lbrakk>i < brn c; phi c; s \\<approx> t\\<rbrakk> \\<Longrightarrow>\n                 eff c s i \\<approx> eff c t i \\<and> wt c s i = wt c t i \\<and> cont c s i = cont c t i\" and\n***: \"\\<And> c s i. \\<lbrakk>i < brn c; phi c\\<rbrakk> \\<Longrightarrow> phi (cont c s i) \\<or> siso (cont c s i)\"\nshows \"siso c\"", "lemma siso_raw_coind[consumes 1, case_names Obs Cont]:\nassumes *: \"phi c\" and\n***: \"\\<And> c s t i. \\<lbrakk>i < brn c; phi c; s \\<approx> t\\<rbrakk> \\<Longrightarrow>\n                  eff c s i \\<approx> eff c t i \\<and> wt c s i = wt c t i \\<and> cont c s i = cont c t i\" and\n**: \"\\<And> c s i. \\<lbrakk>i < brn c; phi c\\<rbrakk> \\<Longrightarrow> phi (cont c s i)\"\nshows \"siso c\"", "lemma siso_cont[simp]:\nassumes *: \"siso c\" and **: \"i < brn c\"\nshows \"siso (cont c s i)\"", "lemma siso_cont_indis[simp]:\nassumes *: \"siso c\" and **: \"s \\<approx> t\" \"i < brn c\"\nshows \"eff c s i \\<approx> eff c t i \\<and> wt c s i = wt c t i \\<and> cont c s i = cont c t i\"", "lemmas m_defs = mC_C_def mC_ZOC_def", "lemmas m_defsAll =\nmC_C_def mC_C_part_def mC_C_wt_def mC_C_eff_cont_def\nmC_ZOC_def mC_ZOC_part_def mC_ZOC_wt_def mC_ZOC_eff_cont0_def mC_ZOC_eff_cont_def", "lemmas match_defs =\nmatchC_C_def matchC_LC_def", "lemma mC_C_mono:\nassumes \"mC_C theta c d s t P F\" and \"theta \\<subseteq> theta'\"\nshows \"mC_C theta' c d s t P F\"", "lemma matchC_C_mono:\nassumes \"matchC_C theta c d\" and \"theta \\<subseteq> theta'\"\nshows \"matchC_C theta' c d\"", "lemma mC_ZOC_mono:\nassumes \"mC_ZOC theta c d s t I0 P F\" and \"theta \\<subseteq> theta'\"\nshows \"mC_ZOC theta' c d s t I0 P F\"", "lemma matchC_LC_mono:\nassumes \"matchC_LC theta c d\" and \"theta \\<subseteq> theta'\"\nshows \"matchC_LC theta' c d\"", "lemma Int_not_in_eq_emp:\n\"P \\<inter> {I. I \\<notin> P} = {}\"", "lemma mC_C_mC_ZOC:\nassumes \"mC_C theta c d s t P F\"\nshows \"mC_ZOC theta c d s t {} (P Un { {} }) (%I. if I \\<in> P then F I else {})\"\n(is \"mC_ZOC theta c d s t ?I0 ?Q ?G\")", "lemma matchC_C_matchC_LC:\nassumes \"matchC_C theta c d\"\nshows \"matchC_LC theta c d\"", "lemmas Retr_defs =\nSretr_def\nZOretr_def", "lemma mono_Retr:\n\"mono Sretr\"\n\"mono ZOretr\"", "lemma Retr_incl:\n\"Sretr theta \\<subseteq> ZOretr theta\"", "lemmas bis_defs = Sbis_def ZObis_def", "lemma bis_incl:\n\"Sbis \\<le> ZObis\"", "lemma bis_imp[simp]:\n\"\\<And> c1 c2. c1 \\<approx>s c2 \\<Longrightarrow> c1 \\<approx>01 c2\"", "lemma Sbis_prefix:\n\"Sbis \\<le> Sretr Sbis\"", "lemma Sbis_fix:\n\"Sretr Sbis = Sbis\"", "lemma Sbis_mC_C:\nassumes \"c \\<approx>s d\" and \"s \\<approx> t\"\nshows \"\\<exists>P F. mC_C Sbis c d s t P F\"", "lemma Sbis_coind:\nassumes \"theta \\<le> Sretr (theta Un Sbis)\"\nshows \"theta \\<le> Sbis\"", "lemma Sbis_raw_coind:\nassumes \"theta \\<le> Sretr theta\"\nshows \"theta \\<le> Sbis\"", "lemma mC_C_sym:\nassumes \"mC_C theta c d s t P F\"\nshows \"mC_C (theta ^-1) d c t s (F ` P) (inv_into P F)\"", "lemma matchC_C_sym:\nassumes \"matchC_C theta c d\"\nshows \"matchC_C (theta ^-1) d c\"", "lemma Sretr_sym:\nassumes \"sym theta\"\nshows \"sym (Sretr theta)\"", "lemma sym_Sbis: \"sym Sbis\"", "lemma Sbis_sym: \"c \\<approx>s d \\<Longrightarrow> d \\<approx>s c\"", "lemma mC_C_trans:\nassumes *: \"mC_C theta1 c d s t P F\" and **: \"mC_C theta2 d e t u (F ` P) G\"\nshows \"mC_C (theta1 O theta2) c e s u P (G o F)\"", "lemma mC_C_finer:\nassumes *: \"mC_C theta c d s t P F\"\nand theta: \"trans theta\"\nand Q: \"finer P Q\" \"finite Q\" \"{} \\<notin> Q\" \"part {..<brn c} Q\"\nand c: \"partCompat Q indis (eff c s)\" \"partCompat Q theta (cont c s)\"\nshows \"mC_C theta c d s t Q (lift P F)\"", "lemma mC_C_partCompat_eff:\nassumes *: \"mC_C theta c d s t P F\"\nshows \"partCompat P indis (eff c s)\"", "lemma mC_C_partCompat_cont:\nassumes *: \"mC_C theta c d s t P F\"\nand theta: \"sym theta\" \"trans theta\"\nshows \"partCompat P theta (cont c s)\"", "lemma matchC_C_sym_trans:\nassumes *: \"matchC_C theta c1 c\" and **: \"matchC_C theta c c2\"\nand theta: \"sym theta\" \"trans theta\"\nshows \"matchC_C theta c1 c2\"", "lemma Sretr_sym_trans:\nassumes \"sym theta \\<and> trans theta\"\nshows \"trans (Sretr theta)\"", "lemma trans_Sbis: \"trans Sbis\"", "lemma Sbis_trans: \"\\<lbrakk>c \\<approx>s d; d \\<approx>s e\\<rbrakk> \\<Longrightarrow> c \\<approx>s e\"", "lemma ZObis_prefix:\n\"ZObis \\<le> ZOretr ZObis\"", "lemma ZObis_fix:\n\"ZOretr ZObis = ZObis\"", "lemma ZObis_mC_ZOC:\nassumes \"c \\<approx>01 d\" and \"s \\<approx> t\"\nshows \"\\<exists>I0  P F. mC_ZOC ZObis c d s t I0 P F\"", "lemma ZObis_coind:\nassumes \"theta \\<le> ZOretr (theta Un ZObis)\"\nshows \"theta \\<le> ZObis\"", "lemma ZObis_raw_coind:\nassumes \"theta \\<le> ZOretr theta\"\nshows \"theta \\<le> ZObis\"", "lemma mC_ZOC_sym:\nassumes theta: \"sym theta\" and *: \"mC_ZOC theta c d s t I0 P F\"\nshows \"mC_ZOC theta d c t s (F I0) (F ` P) (inv_into P F)\"", "lemma matchC_LC_sym:\nassumes *: \"sym theta\" and \"matchC_LC theta c d\"\nshows \"matchC_LC theta d c\"", "lemma ZOretr_sym:\nassumes \"sym theta\"\nshows \"sym (ZOretr theta)\"", "lemma sym_ZObis: \"sym ZObis\"", "lemma ZObis_sym: \"c \\<approx>01 d \\<Longrightarrow> d \\<approx>01 c\"", "lemma SbisL_intro[intro]:\nassumes \"length cl = length dl\" and\n\"\\<And> n. \\<lbrakk>n < length cl; n < length dl\\<rbrakk> \\<Longrightarrow> cl ! n \\<approx>s dl ! n\"\nshows \"SbisL cl dl\"", "lemma SbisL_length[simp]:\nassumes \"SbisL cl dl\"\nshows \"length cl = length dl\"", "lemma SbisL_Sbis[simp]:\nassumes \"SbisL cl dl\" and \"n < length cl \\<or> n < length dl\"\nshows \"cl ! n \\<approx>s dl ! n\"", "lemma SbisL_update[simp]:\nassumes cldl: \"SbisL cl dl\" and c'd': \"c' \\<approx>s d'\"\nshows \"SbisL (cl [n := c']) (dl [n := d'])\" (is \"SbisL ?cl' ?dl'\")", "lemma SbisL_update_L[simp]:\nassumes \"SbisL cl dl\" and \"c' \\<approx>s dl!n\"\nshows \"SbisL (cl[n := c']) dl\"", "lemma SbisL_update_R[simp]:\nassumes \"SbisL cl dl\" and \"cl!n \\<approx>s d'\"\nshows \"SbisL cl (dl[n := d'])\"", "lemma ZObisL_intro[intro]:\nassumes \"length cl = length dl\" and\n\"\\<And> n. \\<lbrakk>n < length cl; n < length dl\\<rbrakk> \\<Longrightarrow> cl ! n \\<approx>01 dl ! n\"\nshows \"ZObisL cl dl\"", "lemma ZObisL_length[simp]:\nassumes \"ZObisL cl dl\"\nshows \"length cl = length dl\"", "lemma ZObisL_ZObis[simp]:\nassumes \"ZObisL cl dl\" and \"n < length cl \\<or> n < length dl\"\nshows \"cl ! n \\<approx>01 dl ! n\"", "lemma ZObisL_update[simp]:\nassumes cldl: \"ZObisL cl dl\" and c'd': \"c' \\<approx>01 d'\"\nshows \"ZObisL (cl [n := c']) (dl [n := d'])\" (is \"ZObisL ?cl' ?dl'\")", "lemma ZObisL_update_L[simp]:\nassumes \"ZObisL cl dl\" and \"c' \\<approx>01 dl!n\"\nshows \"ZObisL (cl[n := c']) dl\"", "lemma ZObisL_update_R[simp]:\nassumes \"ZObisL cl dl\" and \"cl!n \\<approx>01 d'\"\nshows \"ZObisL cl (dl[n := d'])\"", "lemma discrCf_coind[consumes 1, case_names Hyp, induct pred: discr]:\nassumes *: \"phi cf\" and\n**: \"\\<And> cf i.\n       \\<lbrakk>i < brn (fst cf); phi cf\\<rbrakk> \\<Longrightarrow>\n        snd cf \\<approx> snd (cont_eff cf i) \\<and> (phi (cont_eff cf i) \\<or> discrCf (cont_eff cf i))\"\nshows \"discrCf cf\"", "lemma discrCf_raw_coind[consumes 1, case_names Hyp]:\nassumes *: \"phi cf\" and\n**: \"\\<And> cf i. \\<lbrakk>i < brn (fst cf); phi cf\\<rbrakk> \\<Longrightarrow>\n              snd cf \\<approx> snd (cont_eff cf i) \\<and> phi (cont_eff cf i)\"\nshows \"discrCf cf\"", "lemma discrCf_cont[simp]:\nassumes *: \"discrCf cf\" and **: \"i < brn (fst cf)\"\nshows \"discrCf (cont_eff cf i)\"", "lemma discrCf_eff_indis[simp]:\nassumes *: \"discrCf cf\" and **: \"i < brn (fst cf)\"\nshows \"snd cf \\<approx> snd (cont_eff cf i)\"", "lemma discr_discrCf:\nassumes \"discr c\"\nshows \"discrCf (c, s)\"", "lemma ZObis_pres_discrCfL:\nassumes \"fst cf \\<approx>01 fst df\" and \"snd cf \\<approx> snd df\" and \"discrCf df\"\nshows \"discrCf cf\""], "translations": [["", "lemma int_emp[simp]:\nassumes \"i > 0\"\nshows \"{..<i} \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..<i} \\<noteq> {}", "by (metis assms emptyE lessThan_iff)"], ["", "lemma inj_on_inv_into[simp]:\nassumes \"inj_on F P\"\nshows \"inv_into P F ` (F ` P) = P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_into P F ` F ` P = P", "using assms"], ["proof (prove)\nusing this:\n  inj_on F P\n\ngoal (1 subgoal):\n 1. inv_into P F ` F ` P = P", "by auto"], ["", "lemma inj_on_inv_into2[simp]:\n\"inj_on (inv_into P F) (F ` P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (inv_into P F) (F ` P)", "by (metis Hilbert_Choice.inj_on_inv_into subset_refl)"], ["", "lemma refl_gfp:\nassumes 1: \"mono Retr\" and 2: \"\\<And> theta. refl theta \\<Longrightarrow> refl (Retr theta)\"\nshows \"refl (gfp Retr)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl (gfp Retr)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. refl (gfp Retr)", "define bis where \"bis = gfp Retr\""], ["proof (state)\nthis:\n  bis = gfp Retr\n\ngoal (1 subgoal):\n 1. refl (gfp Retr)", "define th where \"th = Id Un bis\""], ["proof (state)\nthis:\n  th = Id \\<union> bis\n\ngoal (1 subgoal):\n 1. refl (gfp Retr)", "have \"bis \\<subseteq> Retr bis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bis \\<subseteq> Retr bis", "using 1"], ["proof (prove)\nusing this:\n  mono Retr\n\ngoal (1 subgoal):\n 1. bis \\<subseteq> Retr bis", "unfolding bis_def"], ["proof (prove)\nusing this:\n  mono Retr\n\ngoal (1 subgoal):\n 1. gfp Retr \\<subseteq> Retr (gfp Retr)", "by (metis gfp_unfold subset_refl)"], ["proof (state)\nthis:\n  bis \\<subseteq> Retr bis\n\ngoal (1 subgoal):\n 1. refl (gfp Retr)", "also"], ["proof (state)\nthis:\n  bis \\<subseteq> Retr bis\n\ngoal (1 subgoal):\n 1. refl (gfp Retr)", "have \"... \\<subseteq> Retr th\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Retr bis \\<subseteq> Retr th", "using 1"], ["proof (prove)\nusing this:\n  mono Retr\n\ngoal (1 subgoal):\n 1. Retr bis \\<subseteq> Retr th", "unfolding mono_def th_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<subseteq> y \\<longrightarrow> Retr x \\<subseteq> Retr y\n\ngoal (1 subgoal):\n 1. Retr bis \\<subseteq> Retr (Id \\<union> bis)", "by auto"], ["proof (state)\nthis:\n  Retr bis \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. refl (gfp Retr)", "finally"], ["proof (chain)\npicking this:\n  bis \\<subseteq> Retr th", "have \"bis \\<subseteq> Retr th\""], ["proof (prove)\nusing this:\n  bis \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. bis \\<subseteq> Retr th", "."], ["proof (state)\nthis:\n  bis \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. refl (gfp Retr)", "moreover"], ["proof (state)\nthis:\n  bis \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. refl (gfp Retr)", "{"], ["proof (state)\nthis:\n  bis \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. refl (gfp Retr)", "have \"refl th\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl th", "unfolding th_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. refl (Id \\<union> bis)", "by (metis Un_commute refl_reflcl)"], ["proof (state)\nthis:\n  refl th\n\ngoal (1 subgoal):\n 1. refl (gfp Retr)", "hence \"refl (Retr th)\""], ["proof (prove)\nusing this:\n  refl th\n\ngoal (1 subgoal):\n 1. refl (Retr th)", "using 2"], ["proof (prove)\nusing this:\n  refl th\n  refl ?theta \\<Longrightarrow> refl (Retr ?theta)\n\ngoal (1 subgoal):\n 1. refl (Retr th)", "by simp"], ["proof (state)\nthis:\n  refl (Retr th)\n\ngoal (1 subgoal):\n 1. refl (gfp Retr)", "}"], ["proof (state)\nthis:\n  refl (Retr th)\n\ngoal (1 subgoal):\n 1. refl (gfp Retr)", "ultimately"], ["proof (chain)\npicking this:\n  bis \\<subseteq> Retr th\n  refl (Retr th)", "have \"Id \\<subseteq> Retr th\""], ["proof (prove)\nusing this:\n  bis \\<subseteq> Retr th\n  refl (Retr th)\n\ngoal (1 subgoal):\n 1. Id \\<subseteq> Retr th", "unfolding th_def refl_on_def"], ["proof (prove)\nusing this:\n  bis \\<subseteq> Retr (Id \\<union> bis)\n  Retr (Id \\<union> bis) \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. (x, x) \\<in> Retr (Id \\<union> bis))\n\ngoal (1 subgoal):\n 1. Id \\<subseteq> Retr (Id \\<union> bis)", "by auto"], ["proof (state)\nthis:\n  Id \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. refl (gfp Retr)", "hence \"Id \\<subseteq> bis\""], ["proof (prove)\nusing this:\n  Id \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. Id \\<subseteq> bis", "using 1 coinduct"], ["proof (prove)\nusing this:\n  Id \\<subseteq> Retr th\n  mono Retr\n  \\<lbrakk>mono ?f; ?X \\<le> ?f (?X \\<squnion> gfp ?f)\\<rbrakk>\n  \\<Longrightarrow> ?X \\<le> gfp ?f\n\ngoal (1 subgoal):\n 1. Id \\<subseteq> bis", "unfolding th_def bis_def"], ["proof (prove)\nusing this:\n  Id \\<subseteq> Retr (Id \\<union> gfp Retr)\n  mono Retr\n  \\<lbrakk>mono ?f; ?X \\<le> ?f (?X \\<squnion> gfp ?f)\\<rbrakk>\n  \\<Longrightarrow> ?X \\<le> gfp ?f\n\ngoal (1 subgoal):\n 1. Id \\<subseteq> gfp Retr", "by blast"], ["proof (state)\nthis:\n  Id \\<subseteq> bis\n\ngoal (1 subgoal):\n 1. refl (gfp Retr)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Id \\<subseteq> bis\n\ngoal (1 subgoal):\n 1. refl (gfp Retr)", "unfolding bis_def refl_on_def"], ["proof (prove)\nusing this:\n  Id \\<subseteq> gfp Retr\n\ngoal (1 subgoal):\n 1. gfp Retr \\<subseteq> UNIV \\<times> UNIV \\<and>\n    (\\<forall>x\\<in>UNIV. (x, x) \\<in> gfp Retr)", "by auto"], ["proof (state)\nthis:\n  refl (gfp Retr)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sym_gfp:\nassumes 1: \"mono Retr\" and 2: \"\\<And> theta. sym theta \\<Longrightarrow> sym (Retr theta)\"\nshows \"sym (gfp Retr)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (gfp Retr)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sym (gfp Retr)", "define bis where \"bis = gfp Retr\""], ["proof (state)\nthis:\n  bis = gfp Retr\n\ngoal (1 subgoal):\n 1. sym (gfp Retr)", "define th where \"th = bis ^-1 Un bis\""], ["proof (state)\nthis:\n  th = bis\\<inverse> \\<union> bis\n\ngoal (1 subgoal):\n 1. sym (gfp Retr)", "have \"bis \\<subseteq> Retr bis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bis \\<subseteq> Retr bis", "using 1"], ["proof (prove)\nusing this:\n  mono Retr\n\ngoal (1 subgoal):\n 1. bis \\<subseteq> Retr bis", "unfolding bis_def"], ["proof (prove)\nusing this:\n  mono Retr\n\ngoal (1 subgoal):\n 1. gfp Retr \\<subseteq> Retr (gfp Retr)", "by (metis gfp_unfold subset_refl)"], ["proof (state)\nthis:\n  bis \\<subseteq> Retr bis\n\ngoal (1 subgoal):\n 1. sym (gfp Retr)", "also"], ["proof (state)\nthis:\n  bis \\<subseteq> Retr bis\n\ngoal (1 subgoal):\n 1. sym (gfp Retr)", "have \"... \\<subseteq> Retr th\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Retr bis \\<subseteq> Retr th", "using 1"], ["proof (prove)\nusing this:\n  mono Retr\n\ngoal (1 subgoal):\n 1. Retr bis \\<subseteq> Retr th", "unfolding mono_def th_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<subseteq> y \\<longrightarrow> Retr x \\<subseteq> Retr y\n\ngoal (1 subgoal):\n 1. Retr bis \\<subseteq> Retr (bis\\<inverse> \\<union> bis)", "by auto"], ["proof (state)\nthis:\n  Retr bis \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. sym (gfp Retr)", "finally"], ["proof (chain)\npicking this:\n  bis \\<subseteq> Retr th", "have \"bis \\<subseteq> Retr th\""], ["proof (prove)\nusing this:\n  bis \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. bis \\<subseteq> Retr th", "."], ["proof (state)\nthis:\n  bis \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. sym (gfp Retr)", "moreover"], ["proof (state)\nthis:\n  bis \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. sym (gfp Retr)", "{"], ["proof (state)\nthis:\n  bis \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. sym (gfp Retr)", "have \"sym th\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym th", "unfolding th_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (bis\\<inverse> \\<union> bis)", "by (metis Un_commute sym_Un_converse)"], ["proof (state)\nthis:\n  sym th\n\ngoal (1 subgoal):\n 1. sym (gfp Retr)", "hence \"sym (Retr th)\""], ["proof (prove)\nusing this:\n  sym th\n\ngoal (1 subgoal):\n 1. sym (Retr th)", "using 2"], ["proof (prove)\nusing this:\n  sym th\n  sym ?theta \\<Longrightarrow> sym (Retr ?theta)\n\ngoal (1 subgoal):\n 1. sym (Retr th)", "by simp"], ["proof (state)\nthis:\n  sym (Retr th)\n\ngoal (1 subgoal):\n 1. sym (gfp Retr)", "}"], ["proof (state)\nthis:\n  sym (Retr th)\n\ngoal (1 subgoal):\n 1. sym (gfp Retr)", "ultimately"], ["proof (chain)\npicking this:\n  bis \\<subseteq> Retr th\n  sym (Retr th)", "have \"bis ^-1 \\<subseteq> Retr th\""], ["proof (prove)\nusing this:\n  bis \\<subseteq> Retr th\n  sym (Retr th)\n\ngoal (1 subgoal):\n 1. bis\\<inverse> \\<subseteq> Retr th", "by (metis Un_absorb2 Un_commute Un_upper1 converse_Un sym_conv_converse_eq)"], ["proof (state)\nthis:\n  bis\\<inverse> \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. sym (gfp Retr)", "hence \"bis ^-1 \\<subseteq> bis\""], ["proof (prove)\nusing this:\n  bis\\<inverse> \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. bis\\<inverse> \\<subseteq> bis", "using 1 coinduct[of Retr \"bis ^-1\"]"], ["proof (prove)\nusing this:\n  bis\\<inverse> \\<subseteq> Retr th\n  mono Retr\n  \\<lbrakk>mono Retr;\n   bis\\<inverse> \\<subseteq> Retr (bis\\<inverse> \\<union> gfp Retr)\\<rbrakk>\n  \\<Longrightarrow> bis\\<inverse> \\<subseteq> gfp Retr\n\ngoal (1 subgoal):\n 1. bis\\<inverse> \\<subseteq> bis", "unfolding th_def bis_def"], ["proof (prove)\nusing this:\n  (gfp Retr)\\<inverse>\n  \\<subseteq> Retr ((gfp Retr)\\<inverse> \\<union> gfp Retr)\n  mono Retr\n  \\<lbrakk>mono Retr;\n   (gfp Retr)\\<inverse>\n   \\<subseteq> Retr ((gfp Retr)\\<inverse> \\<union> gfp Retr)\\<rbrakk>\n  \\<Longrightarrow> (gfp Retr)\\<inverse> \\<subseteq> gfp Retr\n\ngoal (1 subgoal):\n 1. (gfp Retr)\\<inverse> \\<subseteq> gfp Retr", "by blast"], ["proof (state)\nthis:\n  bis\\<inverse> \\<subseteq> bis\n\ngoal (1 subgoal):\n 1. sym (gfp Retr)", "thus ?thesis"], ["proof (prove)\nusing this:\n  bis\\<inverse> \\<subseteq> bis\n\ngoal (1 subgoal):\n 1. sym (gfp Retr)", "unfolding bis_def sym_def"], ["proof (prove)\nusing this:\n  (gfp Retr)\\<inverse> \\<subseteq> gfp Retr\n\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       (x, y) \\<in> gfp Retr \\<longrightarrow> (y, x) \\<in> gfp Retr", "by blast"], ["proof (state)\nthis:\n  sym (gfp Retr)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma trancl_trans[simp]:\nassumes \"trans R\"\nshows \"P ^+ \\<subseteq> R \\<longleftrightarrow> P \\<subseteq> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P\\<^sup>+ \\<subseteq> R) = (P \\<subseteq> R)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (P\\<^sup>+ \\<subseteq> R) = (P \\<subseteq> R)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (P\\<^sup>+ \\<subseteq> R) = (P \\<subseteq> R)", "assume \"P \\<subseteq> R\""], ["proof (state)\nthis:\n  P \\<subseteq> R\n\ngoal (1 subgoal):\n 1. (P\\<^sup>+ \\<subseteq> R) = (P \\<subseteq> R)", "hence \"P ^+ \\<subseteq> R ^+\""], ["proof (prove)\nusing this:\n  P \\<subseteq> R\n\ngoal (1 subgoal):\n 1. P\\<^sup>+ \\<subseteq> R\\<^sup>+", "using trancl_mono"], ["proof (prove)\nusing this:\n  P \\<subseteq> R\n  \\<lbrakk>?p \\<in> ?r\\<^sup>+; ?r \\<subseteq> ?s\\<rbrakk>\n  \\<Longrightarrow> ?p \\<in> ?s\\<^sup>+\n\ngoal (1 subgoal):\n 1. P\\<^sup>+ \\<subseteq> R\\<^sup>+", "by auto"], ["proof (state)\nthis:\n  P\\<^sup>+ \\<subseteq> R\\<^sup>+\n\ngoal (1 subgoal):\n 1. (P\\<^sup>+ \\<subseteq> R) = (P \\<subseteq> R)", "also"], ["proof (state)\nthis:\n  P\\<^sup>+ \\<subseteq> R\\<^sup>+\n\ngoal (1 subgoal):\n 1. (P\\<^sup>+ \\<subseteq> R) = (P \\<subseteq> R)", "have \"R ^+ = R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R\\<^sup>+ = R", "using assms trans_trancl"], ["proof (prove)\nusing this:\n  trans R\n  trans (?r\\<^sup>+)\n\ngoal (1 subgoal):\n 1. R\\<^sup>+ = R", "by auto"], ["proof (state)\nthis:\n  R\\<^sup>+ = R\n\ngoal (1 subgoal):\n 1. (P\\<^sup>+ \\<subseteq> R) = (P \\<subseteq> R)", "finally"], ["proof (chain)\npicking this:\n  P\\<^sup>+ \\<subseteq> R", "have \"P ^+ \\<subseteq> R\""], ["proof (prove)\nusing this:\n  P\\<^sup>+ \\<subseteq> R\n\ngoal (1 subgoal):\n 1. P\\<^sup>+ \\<subseteq> R", "."], ["proof (state)\nthis:\n  P\\<^sup>+ \\<subseteq> R\n\ngoal (1 subgoal):\n 1. (P\\<^sup>+ \\<subseteq> R) = (P \\<subseteq> R)", "}"], ["proof (state)\nthis:\n  P \\<subseteq> R \\<Longrightarrow> P\\<^sup>+ \\<subseteq> R\n\ngoal (1 subgoal):\n 1. (P\\<^sup>+ \\<subseteq> R) = (P \\<subseteq> R)", "thus ?thesis"], ["proof (prove)\nusing this:\n  P \\<subseteq> R \\<Longrightarrow> P\\<^sup>+ \\<subseteq> R\n\ngoal (1 subgoal):\n 1. (P\\<^sup>+ \\<subseteq> R) = (P \\<subseteq> R)", "by auto"], ["proof (state)\nthis:\n  (P\\<^sup>+ \\<subseteq> R) = (P \\<subseteq> R)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma trans_gfp:\nassumes 1: \"mono Retr\" and 2: \"\\<And> theta. trans theta \\<Longrightarrow> trans (Retr theta)\"\nshows \"trans (gfp Retr)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans (gfp Retr)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. trans (gfp Retr)", "define bis where \"bis = gfp Retr\""], ["proof (state)\nthis:\n  bis = gfp Retr\n\ngoal (1 subgoal):\n 1. trans (gfp Retr)", "define th where \"th = bis ^+\""], ["proof (state)\nthis:\n  th = bis\\<^sup>+\n\ngoal (1 subgoal):\n 1. trans (gfp Retr)", "have \"bis \\<subseteq> Retr bis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bis \\<subseteq> Retr bis", "using 1"], ["proof (prove)\nusing this:\n  mono Retr\n\ngoal (1 subgoal):\n 1. bis \\<subseteq> Retr bis", "unfolding bis_def"], ["proof (prove)\nusing this:\n  mono Retr\n\ngoal (1 subgoal):\n 1. gfp Retr \\<subseteq> Retr (gfp Retr)", "by (metis gfp_unfold subset_refl)"], ["proof (state)\nthis:\n  bis \\<subseteq> Retr bis\n\ngoal (1 subgoal):\n 1. trans (gfp Retr)", "also"], ["proof (state)\nthis:\n  bis \\<subseteq> Retr bis\n\ngoal (1 subgoal):\n 1. trans (gfp Retr)", "have \"... \\<subseteq> Retr th\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Retr bis \\<subseteq> Retr th", "using 1"], ["proof (prove)\nusing this:\n  mono Retr\n\ngoal (1 subgoal):\n 1. Retr bis \\<subseteq> Retr th", "unfolding mono_def th_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<subseteq> y \\<longrightarrow> Retr x \\<subseteq> Retr y\n\ngoal (1 subgoal):\n 1. Retr bis \\<subseteq> Retr (bis\\<^sup>+)", "by (metis trancl_trans order_refl trans_trancl)"], ["proof (state)\nthis:\n  Retr bis \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. trans (gfp Retr)", "finally"], ["proof (chain)\npicking this:\n  bis \\<subseteq> Retr th", "have \"bis \\<subseteq> Retr th\""], ["proof (prove)\nusing this:\n  bis \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. bis \\<subseteq> Retr th", "."], ["proof (state)\nthis:\n  bis \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. trans (gfp Retr)", "moreover"], ["proof (state)\nthis:\n  bis \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. trans (gfp Retr)", "{"], ["proof (state)\nthis:\n  bis \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. trans (gfp Retr)", "have \"trans th\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans th", "unfolding th_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. trans (bis\\<^sup>+)", "by (metis th_def trans_trancl)"], ["proof (state)\nthis:\n  trans th\n\ngoal (1 subgoal):\n 1. trans (gfp Retr)", "hence \"trans (Retr th)\""], ["proof (prove)\nusing this:\n  trans th\n\ngoal (1 subgoal):\n 1. trans (Retr th)", "using 2"], ["proof (prove)\nusing this:\n  trans th\n  trans ?theta \\<Longrightarrow> trans (Retr ?theta)\n\ngoal (1 subgoal):\n 1. trans (Retr th)", "by simp"], ["proof (state)\nthis:\n  trans (Retr th)\n\ngoal (1 subgoal):\n 1. trans (gfp Retr)", "}"], ["proof (state)\nthis:\n  trans (Retr th)\n\ngoal (1 subgoal):\n 1. trans (gfp Retr)", "ultimately"], ["proof (chain)\npicking this:\n  bis \\<subseteq> Retr th\n  trans (Retr th)", "have \"bis ^+ \\<subseteq> Retr th\""], ["proof (prove)\nusing this:\n  bis \\<subseteq> Retr th\n  trans (Retr th)\n\ngoal (1 subgoal):\n 1. bis\\<^sup>+ \\<subseteq> Retr th", "by simp"], ["proof (state)\nthis:\n  bis\\<^sup>+ \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. trans (gfp Retr)", "hence \"bis ^+ \\<subseteq> bis\""], ["proof (prove)\nusing this:\n  bis\\<^sup>+ \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. bis\\<^sup>+ \\<subseteq> bis", "using 1 coinduct"], ["proof (prove)\nusing this:\n  bis\\<^sup>+ \\<subseteq> Retr th\n  mono Retr\n  \\<lbrakk>mono ?f; ?X \\<le> ?f (?X \\<squnion> gfp ?f)\\<rbrakk>\n  \\<Longrightarrow> ?X \\<le> gfp ?f\n\ngoal (1 subgoal):\n 1. bis\\<^sup>+ \\<subseteq> bis", "unfolding th_def bis_def"], ["proof (prove)\nusing this:\n  (gfp Retr)\\<^sup>+ \\<subseteq> Retr ((gfp Retr)\\<^sup>+)\n  mono Retr\n  \\<lbrakk>mono ?f; ?X \\<le> ?f (?X \\<squnion> gfp ?f)\\<rbrakk>\n  \\<Longrightarrow> ?X \\<le> gfp ?f\n\ngoal (1 subgoal):\n 1. (gfp Retr)\\<^sup>+ \\<subseteq> gfp Retr", "by (metis bis_def gfp_upperbound th_def)"], ["proof (state)\nthis:\n  bis\\<^sup>+ \\<subseteq> bis\n\ngoal (1 subgoal):\n 1. trans (gfp Retr)", "thus ?thesis"], ["proof (prove)\nusing this:\n  bis\\<^sup>+ \\<subseteq> bis\n\ngoal (1 subgoal):\n 1. trans (gfp Retr)", "unfolding bis_def trans_def"], ["proof (prove)\nusing this:\n  (gfp Retr)\\<^sup>+ \\<subseteq> gfp Retr\n\ngoal (1 subgoal):\n 1. \\<forall>x y z.\n       (x, y) \\<in> gfp Retr \\<longrightarrow>\n       (y, z) \\<in> gfp Retr \\<longrightarrow> (x, z) \\<in> gfp Retr", "by auto"], ["proof (state)\nthis:\n  trans (gfp Retr)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma O_subset_trans:\nassumes \"r O r \\<subseteq> r\"\nshows \"trans r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans r", "using assms"], ["proof (prove)\nusing this:\n  r O r \\<subseteq> r\n\ngoal (1 subgoal):\n 1. trans r", "unfolding trans_def"], ["proof (prove)\nusing this:\n  r O r \\<subseteq> r\n\ngoal (1 subgoal):\n 1. \\<forall>x y z.\n       (x, y) \\<in> r \\<longrightarrow>\n       (y, z) \\<in> r \\<longrightarrow> (x, z) \\<in> r", "by blast"], ["", "lemma trancl_imp_trans:\nassumes \"r ^+ \\<subseteq> r\"\nshows \"trans r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans r", "by (metis Int_absorb1 Int_commute trancl_trans assms subset_refl trans_trancl)"], ["", "lemma sym_trans_gfp:\nassumes 1: \"mono Retr\" and 2: \"\\<And> theta. sym theta \\<and> trans theta \\<Longrightarrow> sym (Retr theta) \\<and> trans (Retr theta)\"\nshows \"sym (gfp Retr) \\<and> trans (gfp Retr)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "define bis where \"bis = gfp Retr\""], ["proof (state)\nthis:\n  bis = gfp Retr\n\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "define th where \"th = (bis Un bis ^-1) ^+\""], ["proof (state)\nthis:\n  th = (bis \\<union> bis\\<inverse>)\\<^sup>+\n\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "have \"bis \\<subseteq> Retr bis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bis \\<subseteq> Retr bis", "using 1"], ["proof (prove)\nusing this:\n  mono Retr\n\ngoal (1 subgoal):\n 1. bis \\<subseteq> Retr bis", "unfolding bis_def"], ["proof (prove)\nusing this:\n  mono Retr\n\ngoal (1 subgoal):\n 1. gfp Retr \\<subseteq> Retr (gfp Retr)", "by (metis gfp_unfold subset_refl)"], ["proof (state)\nthis:\n  bis \\<subseteq> Retr bis\n\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "also"], ["proof (state)\nthis:\n  bis \\<subseteq> Retr bis\n\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "have \"... \\<subseteq> Retr th\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Retr bis \\<subseteq> Retr th", "using 1"], ["proof (prove)\nusing this:\n  mono Retr\n\ngoal (1 subgoal):\n 1. Retr bis \\<subseteq> Retr th", "unfolding mono_def th_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<subseteq> y \\<longrightarrow> Retr x \\<subseteq> Retr y\n\ngoal (1 subgoal):\n 1. Retr bis \\<subseteq> Retr ((bis \\<union> bis\\<inverse>)\\<^sup>+)", "by (metis inf_sup_absorb le_iff_inf sup_aci(2) trancl_unfold)"], ["proof (state)\nthis:\n  Retr bis \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "finally"], ["proof (chain)\npicking this:\n  bis \\<subseteq> Retr th", "have \"bis \\<subseteq> Retr th\""], ["proof (prove)\nusing this:\n  bis \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. bis \\<subseteq> Retr th", "."], ["proof (state)\nthis:\n  bis \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "hence \"(bis Un bis ^-1) ^+ \\<subseteq> ((Retr th) Un (Retr th) ^-1) ^+\""], ["proof (prove)\nusing this:\n  bis \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. (bis \\<union> bis\\<inverse>)\\<^sup>+\n    \\<subseteq> (Retr th \\<union> (Retr th)\\<inverse>)\\<^sup>+", "by auto"], ["proof (state)\nthis:\n  (bis \\<union> bis\\<inverse>)\\<^sup>+\n  \\<subseteq> (Retr th \\<union> (Retr th)\\<inverse>)\\<^sup>+\n\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "moreover"], ["proof (state)\nthis:\n  (bis \\<union> bis\\<inverse>)\\<^sup>+\n  \\<subseteq> (Retr th \\<union> (Retr th)\\<inverse>)\\<^sup>+\n\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "{"], ["proof (state)\nthis:\n  (bis \\<union> bis\\<inverse>)\\<^sup>+\n  \\<subseteq> (Retr th \\<union> (Retr th)\\<inverse>)\\<^sup>+\n\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "have \"sym th\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym th", "unfolding th_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sym ((bis \\<union> bis\\<inverse>)\\<^sup>+)", "by (metis sym_Un_converse sym_trancl)"], ["proof (state)\nthis:\n  sym th\n\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "moreover"], ["proof (state)\nthis:\n  sym th\n\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "have \"trans th\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans th", "unfolding th_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. trans ((bis \\<union> bis\\<inverse>)\\<^sup>+)", "by (metis th_def trans_trancl)"], ["proof (state)\nthis:\n  trans th\n\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "ultimately"], ["proof (chain)\npicking this:\n  sym th\n  trans th", "have \"sym (Retr th) \\<and> trans (Retr th)\""], ["proof (prove)\nusing this:\n  sym th\n  trans th\n\ngoal (1 subgoal):\n 1. sym (Retr th) \\<and> trans (Retr th)", "using 2"], ["proof (prove)\nusing this:\n  sym th\n  trans th\n  sym ?theta \\<and> trans ?theta \\<Longrightarrow>\n  sym (Retr ?theta) \\<and> trans (Retr ?theta)\n\ngoal (1 subgoal):\n 1. sym (Retr th) \\<and> trans (Retr th)", "by simp"], ["proof (state)\nthis:\n  sym (Retr th) \\<and> trans (Retr th)\n\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "hence \"((Retr th) Un (Retr th) ^-1) ^+ \\<subseteq> Retr th\""], ["proof (prove)\nusing this:\n  sym (Retr th) \\<and> trans (Retr th)\n\ngoal (1 subgoal):\n 1. (Retr th \\<union> (Retr th)\\<inverse>)\\<^sup>+ \\<subseteq> Retr th", "by (metis Un_absorb subset_refl sym_conv_converse_eq trancl_id)"], ["proof (state)\nthis:\n  (Retr th \\<union> (Retr th)\\<inverse>)\\<^sup>+ \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "}"], ["proof (state)\nthis:\n  (Retr th \\<union> (Retr th)\\<inverse>)\\<^sup>+ \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "ultimately"], ["proof (chain)\npicking this:\n  (bis \\<union> bis\\<inverse>)\\<^sup>+\n  \\<subseteq> (Retr th \\<union> (Retr th)\\<inverse>)\\<^sup>+\n  (Retr th \\<union> (Retr th)\\<inverse>)\\<^sup>+ \\<subseteq> Retr th", "have \"(bis Un bis ^-1) ^+ \\<subseteq> Retr th\""], ["proof (prove)\nusing this:\n  (bis \\<union> bis\\<inverse>)\\<^sup>+\n  \\<subseteq> (Retr th \\<union> (Retr th)\\<inverse>)\\<^sup>+\n  (Retr th \\<union> (Retr th)\\<inverse>)\\<^sup>+ \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. (bis \\<union> bis\\<inverse>)\\<^sup>+ \\<subseteq> Retr th", "by blast"], ["proof (state)\nthis:\n  (bis \\<union> bis\\<inverse>)\\<^sup>+ \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "hence \"(bis Un bis ^-1) ^+ \\<subseteq> bis\""], ["proof (prove)\nusing this:\n  (bis \\<union> bis\\<inverse>)\\<^sup>+ \\<subseteq> Retr th\n\ngoal (1 subgoal):\n 1. (bis \\<union> bis\\<inverse>)\\<^sup>+ \\<subseteq> bis", "using 1 coinduct"], ["proof (prove)\nusing this:\n  (bis \\<union> bis\\<inverse>)\\<^sup>+ \\<subseteq> Retr th\n  mono Retr\n  \\<lbrakk>mono ?f; ?X \\<le> ?f (?X \\<squnion> gfp ?f)\\<rbrakk>\n  \\<Longrightarrow> ?X \\<le> gfp ?f\n\ngoal (1 subgoal):\n 1. (bis \\<union> bis\\<inverse>)\\<^sup>+ \\<subseteq> bis", "unfolding th_def bis_def"], ["proof (prove)\nusing this:\n  (gfp Retr \\<union> (gfp Retr)\\<inverse>)\\<^sup>+\n  \\<subseteq> Retr ((gfp Retr \\<union> (gfp Retr)\\<inverse>)\\<^sup>+)\n  mono Retr\n  \\<lbrakk>mono ?f; ?X \\<le> ?f (?X \\<squnion> gfp ?f)\\<rbrakk>\n  \\<Longrightarrow> ?X \\<le> gfp ?f\n\ngoal (1 subgoal):\n 1. (gfp Retr \\<union> (gfp Retr)\\<inverse>)\\<^sup>+ \\<subseteq> gfp Retr", "by (metis bis_def gfp_upperbound th_def)"], ["proof (state)\nthis:\n  (bis \\<union> bis\\<inverse>)\\<^sup>+ \\<subseteq> bis\n\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "hence \"bis ^-1 \\<subseteq> bis\" and \"bis ^+ \\<subseteq> bis\""], ["proof (prove)\nusing this:\n  (bis \\<union> bis\\<inverse>)\\<^sup>+ \\<subseteq> bis\n\ngoal (1 subgoal):\n 1. bis\\<inverse> \\<subseteq> bis &&& bis\\<^sup>+ \\<subseteq> bis", "apply(metis equalityI gfp_upperbound le_supI1 subset_refl sym_Un_converse sym_conv_converse_eq th_def trancl_id trancl_imp_trans)"], ["proof (prove)\ngoal (1 subgoal):\n 1. bis\\<^sup>+ \\<subseteq> bis", "by (metis Un_absorb \\<open>(bis \\<union> bis\\<inverse>)\\<^sup>+ \\<subseteq> bis\\<close> less_supI1 psubset_eq sym_Un_converse sym_conv_converse_eq sym_trancl trancl_id trancl_imp_trans)"], ["proof (state)\nthis:\n  bis\\<inverse> \\<subseteq> bis\n  bis\\<^sup>+ \\<subseteq> bis\n\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "thus ?thesis"], ["proof (prove)\nusing this:\n  bis\\<inverse> \\<subseteq> bis\n  bis\\<^sup>+ \\<subseteq> bis\n\ngoal (1 subgoal):\n 1. sym (gfp Retr) \\<and> trans (gfp Retr)", "unfolding bis_def sym_def"], ["proof (prove)\nusing this:\n  (gfp Retr)\\<inverse> \\<subseteq> gfp Retr\n  (gfp Retr)\\<^sup>+ \\<subseteq> gfp Retr\n\ngoal (1 subgoal):\n 1. (\\<forall>x y.\n        (x, y) \\<in> gfp Retr \\<longrightarrow>\n        (y, x) \\<in> gfp Retr) \\<and>\n    trans (gfp Retr)", "using trancl_imp_trans"], ["proof (prove)\nusing this:\n  (gfp Retr)\\<inverse> \\<subseteq> gfp Retr\n  (gfp Retr)\\<^sup>+ \\<subseteq> gfp Retr\n  ?r\\<^sup>+ \\<subseteq> ?r \\<Longrightarrow> trans ?r\n\ngoal (1 subgoal):\n 1. (\\<forall>x y.\n        (x, y) \\<in> gfp Retr \\<longrightarrow>\n        (y, x) \\<in> gfp Retr) \\<and>\n    trans (gfp Retr)", "by auto"], ["proof (state)\nthis:\n  sym (gfp Retr) \\<and> trans (gfp Retr)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Infrastructure for partitions\\<close>"], ["", "(* Being a partition *)"], ["", "definition part where\n\"part J P \\<equiv>\n Union P = J \\<and>\n (\\<forall> J1 J2. J1 \\<in> P \\<and> J2 \\<in> P \\<and> J1 \\<noteq> J2 \\<longrightarrow> J1 \\<inter> J2 = {})\""], ["", "(* gen P I is the set generated from I using intersections with sets of P  *)"], ["", "inductive_set gen\nfor P :: \"'a set set\" and I :: \"'a set\" where\n incl[simp]: \"i \\<in> I \\<Longrightarrow> i \\<in> gen P I\"\n|ext[simp]: \"\\<lbrakk>J \\<in> P; j0 \\<in> J; j0 \\<in> gen P I; j \\<in> J\\<rbrakk> \\<Longrightarrow> j \\<in> gen P I\""], ["", "(* Partition generated by a set *)"], ["", "definition partGen where\n\"partGen P \\<equiv> {gen P I | I . I \\<in> P}\""], ["", "(* finer P Q means: as a partition, P is finer than Q;\n   regarding P and Q as equivalence relations, we have Q included in P *)"], ["", "definition finer where\n\"finer P Q \\<equiv>\n (\\<forall> J \\<in> Q. J = Union {I \\<in> P . I \\<subseteq> J}) \\<and>\n (P \\<noteq> {} \\<longrightarrow> Q \\<noteq> {})\""], ["", "(* The join of two partitions; in terms of equivalence relations,\n   this is the smallest equivalence containing both *)"], ["", "definition partJoin where\n\"partJoin P Q \\<equiv> partGen (P \\<union> Q)\""], ["", "(* Compatibility of a function f w.r.t. a set I versus a relation theta *)"], ["", "definition compat where\n\"compat I theta f \\<equiv> \\<forall> i j. {i, j} \\<subseteq> I \\<and> i \\<noteq> j \\<longrightarrow> (f i, f j) \\<in> theta\""], ["", "(* Compatibility of a function f w.r.t. a partition P versus a relation theta;\nif P is regarded as an equivalence class, we have the standard notion of compatibility *)"], ["", "definition partCompat where\n\"partCompat P theta f \\<equiv>\n \\<forall> I \\<in> P. compat I theta f\""], ["", "(* Lifting a function F on a partition P to elements II of a potentially coarser partition *)"], ["", "definition lift where\n\"lift P F II \\<equiv> Union {F I | I . I \\<in> P \\<and> I \\<subseteq> II}\""], ["", "text\\<open>part:\\<close>"], ["", "lemma part_emp[simp]:\n\"part J (insert {} P) = part J P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part J (insert {} P) = part J P", "unfolding part_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union> (insert {} P) = J \\<and>\n     (\\<forall>J1 J2.\n         J1 \\<in> insert {} P \\<and>\n         J2 \\<in> insert {} P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n         J1 \\<inter> J2 = {})) =\n    (\\<Union> P = J \\<and>\n     (\\<forall>J1 J2.\n         J1 \\<in> P \\<and>\n         J2 \\<in> P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n         J1 \\<inter> J2 = {}))", "by auto"], ["", "lemma finite_part[simp]:\nassumes \"finite I\" and \"part I P\"\nshows \"finite P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite P", "using assms finite_UnionD"], ["proof (prove)\nusing this:\n  finite I\n  part I P\n  finite (\\<Union> ?A) \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite P", "unfolding part_def"], ["proof (prove)\nusing this:\n  finite I\n  \\<Union> P = I \\<and>\n  (\\<forall>J1 J2.\n      J1 \\<in> P \\<and> J2 \\<in> P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n      J1 \\<inter> J2 = {})\n  finite (\\<Union> ?A) \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite P", "by auto"], ["", "lemma part_sum:\n  assumes P: \"part {..<n::nat} P\"\n  shows \"(\\<Sum>i<n. f i) = (\\<Sum>p\\<in>P. \\<Sum>i\\<in>p. f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {..<n} = sum (sum f) P", "proof (subst sum.Union_disjoint [symmetric, simplified])"], ["proof (state)\ngoal (3 subgoals):\n 1. Ball P finite\n 2. \\<forall>A\\<in>P.\n       \\<forall>B\\<in>P. A \\<noteq> B \\<longrightarrow> A \\<inter> B = {}\n 3. sum f {..<n} = sum f (\\<Union> P)", "show \"\\<forall>p\\<in>P. finite p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>P. finite p", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p. p \\<in> P \\<Longrightarrow> finite p", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p. p \\<in> P \\<Longrightarrow> finite p", "assume \"p \\<in> P\""], ["proof (state)\nthis:\n  p \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>p. p \\<in> P \\<Longrightarrow> finite p", "with P"], ["proof (chain)\npicking this:\n  part {..<n} P\n  p \\<in> P", "have \"p \\<subseteq> {0..<n}\""], ["proof (prove)\nusing this:\n  part {..<n} P\n  p \\<in> P\n\ngoal (1 subgoal):\n 1. p \\<subseteq> {0..<n}", "by (auto simp: part_def)"], ["proof (state)\nthis:\n  p \\<subseteq> {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>p. p \\<in> P \\<Longrightarrow> finite p", "then"], ["proof (chain)\npicking this:\n  p \\<subseteq> {0..<n}", "show \"finite p\""], ["proof (prove)\nusing this:\n  p \\<subseteq> {0..<n}\n\ngoal (1 subgoal):\n 1. finite p", "by (rule finite_subset) simp"], ["proof (state)\nthis:\n  finite p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>p\\<in>P. finite p\n\ngoal (2 subgoals):\n 1. \\<forall>A\\<in>P.\n       \\<forall>B\\<in>P. A \\<noteq> B \\<longrightarrow> A \\<inter> B = {}\n 2. sum f {..<n} = sum f (\\<Union> P)", "show \"\\<forall>A\\<in>P. \\<forall>B\\<in>P. A \\<noteq> B \\<longrightarrow> A \\<inter> B = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>A\\<in>P.\n       \\<forall>B\\<in>P. A \\<noteq> B \\<longrightarrow> A \\<inter> B = {}", "using P"], ["proof (prove)\nusing this:\n  part {..<n} P\n\ngoal (1 subgoal):\n 1. \\<forall>A\\<in>P.\n       \\<forall>B\\<in>P. A \\<noteq> B \\<longrightarrow> A \\<inter> B = {}", "by (auto simp: part_def)"], ["proof (state)\nthis:\n  \\<forall>A\\<in>P.\n     \\<forall>B\\<in>P. A \\<noteq> B \\<longrightarrow> A \\<inter> B = {}\n\ngoal (1 subgoal):\n 1. sum f {..<n} = sum f (\\<Union> P)", "show \"sum f {..<n} = sum f (\\<Union>P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {..<n} = sum f (\\<Union> P)", "using P"], ["proof (prove)\nusing this:\n  part {..<n} P\n\ngoal (1 subgoal):\n 1. sum f {..<n} = sum f (\\<Union> P)", "by (auto simp: part_def atLeast0LessThan)"], ["proof (state)\nthis:\n  sum f {..<n} = sum f (\\<Union> P)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma part_Un[simp]:\nassumes \"part I1 P1\" and \"part I2 P2\" and \"I1 Int I2 = {}\"\nshows \"part (I1 Un I2) (P1 Un P2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part (I1 \\<union> I2) (P1 \\<union> P2)", "using assms"], ["proof (prove)\nusing this:\n  part I1 P1\n  part I2 P2\n  I1 \\<inter> I2 = {}\n\ngoal (1 subgoal):\n 1. part (I1 \\<union> I2) (P1 \\<union> P2)", "unfolding part_def"], ["proof (prove)\nusing this:\n  \\<Union> P1 = I1 \\<and>\n  (\\<forall>J1 J2.\n      J1 \\<in> P1 \\<and> J2 \\<in> P1 \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n      J1 \\<inter> J2 = {})\n  \\<Union> P2 = I2 \\<and>\n  (\\<forall>J1 J2.\n      J1 \\<in> P2 \\<and> J2 \\<in> P2 \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n      J1 \\<inter> J2 = {})\n  I1 \\<inter> I2 = {}\n\ngoal (1 subgoal):\n 1. \\<Union> (P1 \\<union> P2) = I1 \\<union> I2 \\<and>\n    (\\<forall>J1 J2.\n        J1 \\<in> P1 \\<union> P2 \\<and>\n        J2 \\<in> P1 \\<union> P2 \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n        J1 \\<inter> J2 = {})", "by (metis Union_Un_distrib Union_disjoint inf_aci(1) mem_simps(3))"], ["", "lemma part_Un_singl[simp]:\nassumes \"part K P\" and \"\\<And> I. I \\<in> P \\<Longrightarrow> I0 Int I = {}\"\nshows \"part (I0 Un K) ({I0} Un P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part (I0 \\<union> K) ({I0} \\<union> P)", "using assms"], ["proof (prove)\nusing this:\n  part K P\n  ?I \\<in> P \\<Longrightarrow> I0 \\<inter> ?I = {}\n\ngoal (1 subgoal):\n 1. part (I0 \\<union> K) ({I0} \\<union> P)", "unfolding part_def"], ["proof (prove)\nusing this:\n  \\<Union> P = K \\<and>\n  (\\<forall>J1 J2.\n      J1 \\<in> P \\<and> J2 \\<in> P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n      J1 \\<inter> J2 = {})\n  ?I \\<in> P \\<Longrightarrow> I0 \\<inter> ?I = {}\n\ngoal (1 subgoal):\n 1. \\<Union> ({I0} \\<union> P) = I0 \\<union> K \\<and>\n    (\\<forall>J1 J2.\n        J1 \\<in> {I0} \\<union> P \\<and>\n        J2 \\<in> {I0} \\<union> P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n        J1 \\<inter> J2 = {})", "by (metis complete_lattice_class.Sup_insert Int_commute insert_iff insert_is_Un)"], ["", "lemma part_Un_singl2:\nassumes \"K01 = I0 Un K1\"\nand \"part K1 P\" and \"\\<And> I. I \\<in> P \\<Longrightarrow> I0 Int I = {}\"\nshows \"part K01 ({I0} Un P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part K01 ({I0} \\<union> P)", "using assms part_Un_singl"], ["proof (prove)\nusing this:\n  K01 = I0 \\<union> K1\n  part K1 P\n  ?I \\<in> P \\<Longrightarrow> I0 \\<inter> ?I = {}\n  \\<lbrakk>part ?K ?P;\n   \\<And>I. I \\<in> ?P \\<Longrightarrow> ?I0.0 \\<inter> I = {}\\<rbrakk>\n  \\<Longrightarrow> part (?I0.0 \\<union> ?K) ({?I0.0} \\<union> ?P)\n\ngoal (1 subgoal):\n 1. part K01 ({I0} \\<union> P)", "by blast"], ["", "lemma part_UN:\nassumes \"\\<And> n. n \\<in> N \\<Longrightarrow> part (I n) (P n)\"\nand \"\\<And> n1 n2. {n1,n2} \\<subseteq> N \\<and> n1 \\<noteq> n2 \\<Longrightarrow> I n1 \\<inter> I n2 = {}\"\nshows \"part (UN n : N. I n) (UN n : N. P n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part (\\<Union> (I ` N)) (\\<Union> (P ` N))", "using assms"], ["proof (prove)\nusing this:\n  ?n \\<in> N \\<Longrightarrow> part (I ?n) (P ?n)\n  {?n1.0, ?n2.0} \\<subseteq> N \\<and> ?n1.0 \\<noteq> ?n2.0 \\<Longrightarrow>\n  I ?n1.0 \\<inter> I ?n2.0 = {}\n\ngoal (1 subgoal):\n 1. part (\\<Union> (I ` N)) (\\<Union> (P ` N))", "unfolding part_def"], ["proof (prove)\nusing this:\n  ?n \\<in> N \\<Longrightarrow>\n  \\<Union> (P ?n) = I ?n \\<and>\n  (\\<forall>J1 J2.\n      J1 \\<in> P ?n \\<and>\n      J2 \\<in> P ?n \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n      J1 \\<inter> J2 = {})\n  {?n1.0, ?n2.0} \\<subseteq> N \\<and> ?n1.0 \\<noteq> ?n2.0 \\<Longrightarrow>\n  I ?n1.0 \\<inter> I ?n2.0 = {}\n\ngoal (1 subgoal):\n 1. \\<Union> (\\<Union> (P ` N)) = \\<Union> (I ` N) \\<and>\n    (\\<forall>J1 J2.\n        J1 \\<in> \\<Union> (P ` N) \\<and>\n        J2 \\<in> \\<Union> (P ` N) \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n        J1 \\<inter> J2 = {})", "apply auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>\\<And>n.\n                   n \\<in> N \\<Longrightarrow>\n                   \\<Union> (P n) = I n \\<and>\n                   (\\<forall>J1 J2.\n                       J1 \\<in> P n \\<and>\n                       J2 \\<in> P n \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n                       J1 \\<inter> J2 = {});\n        \\<And>n1 n2.\n           n1 \\<in> N \\<and>\n           n2 \\<in> N \\<and> n1 \\<noteq> n2 \\<Longrightarrow>\n           I n1 \\<inter> I n2 = {};\n        xa \\<in> N; x \\<in> I xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>N. \\<exists>xa\\<in>P y. x \\<in> xa\n 2. \\<And>J1 J2 x xa xb xc.\n       \\<lbrakk>\\<And>n.\n                   n \\<in> N \\<Longrightarrow>\n                   \\<Union> (P n) = I n \\<and>\n                   (\\<forall>J1 J2.\n                       J1 \\<in> P n \\<and>\n                       J2 \\<in> P n \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n                       J1 \\<inter> J2 = {});\n        \\<And>n1 n2.\n           n1 \\<in> N \\<and>\n           n2 \\<in> N \\<and> n1 \\<noteq> n2 \\<Longrightarrow>\n           I n1 \\<inter> I n2 = {};\n        x \\<in> N; J1 \\<in> P x; xa \\<in> N; J2 \\<in> P xa; xb \\<in> J1;\n        xb \\<notin> J2; xc \\<in> J1; xc \\<in> J2\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>J1 J2 x xa xb xc.\n       \\<lbrakk>\\<And>n.\n                   n \\<in> N \\<Longrightarrow>\n                   \\<Union> (P n) = I n \\<and>\n                   (\\<forall>J1 J2.\n                       J1 \\<in> P n \\<and>\n                       J2 \\<in> P n \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n                       J1 \\<inter> J2 = {});\n        \\<And>n1 n2.\n           n1 \\<in> N \\<and>\n           n2 \\<in> N \\<and> n1 \\<noteq> n2 \\<Longrightarrow>\n           I n1 \\<inter> I n2 = {};\n        x \\<in> N; J1 \\<in> P x; xa \\<in> N; J2 \\<in> P xa; xb \\<in> J2;\n        xb \\<notin> J1; xc \\<in> J1; xc \\<in> J2\\<rbrakk>\n       \\<Longrightarrow> False", "apply (metis UnionE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>J1 J2 x xa xb xc.\n       \\<lbrakk>\\<And>n.\n                   n \\<in> N \\<Longrightarrow>\n                   \\<Union> (P n) = I n \\<and>\n                   (\\<forall>J1 J2.\n                       J1 \\<in> P n \\<and>\n                       J2 \\<in> P n \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n                       J1 \\<inter> J2 = {});\n        \\<And>n1 n2.\n           n1 \\<in> N \\<and>\n           n2 \\<in> N \\<and> n1 \\<noteq> n2 \\<Longrightarrow>\n           I n1 \\<inter> I n2 = {};\n        x \\<in> N; J1 \\<in> P x; xa \\<in> N; J2 \\<in> P xa; xb \\<in> J1;\n        xb \\<notin> J2; xc \\<in> J1; xc \\<in> J2\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>J1 J2 x xa xb xc.\n       \\<lbrakk>\\<And>n.\n                   n \\<in> N \\<Longrightarrow>\n                   \\<Union> (P n) = I n \\<and>\n                   (\\<forall>J1 J2.\n                       J1 \\<in> P n \\<and>\n                       J2 \\<in> P n \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n                       J1 \\<inter> J2 = {});\n        \\<And>n1 n2.\n           n1 \\<in> N \\<and>\n           n2 \\<in> N \\<and> n1 \\<noteq> n2 \\<Longrightarrow>\n           I n1 \\<inter> I n2 = {};\n        x \\<in> N; J1 \\<in> P x; xa \\<in> N; J2 \\<in> P xa; xb \\<in> J2;\n        xb \\<notin> J1; xc \\<in> J1; xc \\<in> J2\\<rbrakk>\n       \\<Longrightarrow> False", "apply (metis Union_upper disjoint_iff_not_equal insert_absorb insert_subset)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>J1 J2 x xa xb xc.\n       \\<lbrakk>\\<And>n.\n                   n \\<in> N \\<Longrightarrow>\n                   \\<Union> (P n) = I n \\<and>\n                   (\\<forall>J1 J2.\n                       J1 \\<in> P n \\<and>\n                       J2 \\<in> P n \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n                       J1 \\<inter> J2 = {});\n        \\<And>n1 n2.\n           n1 \\<in> N \\<and>\n           n2 \\<in> N \\<and> n1 \\<noteq> n2 \\<Longrightarrow>\n           I n1 \\<inter> I n2 = {};\n        x \\<in> N; J1 \\<in> P x; xa \\<in> N; J2 \\<in> P xa; xb \\<in> J2;\n        xb \\<notin> J1; xc \\<in> J1; xc \\<in> J2\\<rbrakk>\n       \\<Longrightarrow> False", "by (metis UnionI disjoint_iff_not_equal)"], ["", "text\\<open>gen:\\<close>"], ["", "lemma incl_gen[simp]:\n\"I \\<subseteq> gen P I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<subseteq> gen P I", "by auto"], ["", "lemma gen_incl_Un:\n\"gen P I \\<subseteq> I \\<union> (Union P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gen P I \\<subseteq> I \\<union> \\<Union> P", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> gen P I \\<Longrightarrow> x \\<in> I \\<union> \\<Union> P", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> gen P I \\<Longrightarrow> x \\<in> I \\<union> \\<Union> P", "assume \"j \\<in> gen P I\""], ["proof (state)\nthis:\n  j \\<in> gen P I\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> gen P I \\<Longrightarrow> x \\<in> I \\<union> \\<Union> P", "thus \"j \\<in> I \\<union> \\<Union>P\""], ["proof (prove)\nusing this:\n  j \\<in> gen P I\n\ngoal (1 subgoal):\n 1. j \\<in> I \\<union> \\<Union> P", "apply induct"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> i \\<in> I \\<union> \\<Union> P\n 2. \\<And>J j0 j.\n       \\<lbrakk>J \\<in> P; j0 \\<in> J; j0 \\<in> gen P I;\n        j0 \\<in> I \\<union> \\<Union> P; j \\<in> J\\<rbrakk>\n       \\<Longrightarrow> j \\<in> I \\<union> \\<Union> P", "by blast+"], ["proof (state)\nthis:\n  j \\<in> I \\<union> \\<Union> P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gen_incl:\nassumes \"I \\<in> P\"\nshows \"gen P I \\<subseteq> Union P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gen P I \\<subseteq> \\<Union> P", "using assms gen_incl_Un[of P I]"], ["proof (prove)\nusing this:\n  I \\<in> P\n  gen P I \\<subseteq> I \\<union> \\<Union> P\n\ngoal (1 subgoal):\n 1. gen P I \\<subseteq> \\<Union> P", "by blast"], ["", "lemma finite_gen:\nassumes \"finite P\" and \"\\<And> J. J \\<in> P \\<Longrightarrow> finite J\" and \"finite I\"\nshows \"finite (gen P I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (gen P I)", "by (metis assms finite_Union gen_incl_Un infinite_Un infinite_super)"], ["", "lemma subset_gen[simp]:\nassumes \"J \\<in> P\" and \"gen P I \\<inter> J \\<noteq> {}\"\nshows \"J \\<subseteq> gen P I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. J \\<subseteq> gen P I", "using assms gen.ext[of J P _ I]"], ["proof (prove)\nusing this:\n  J \\<in> P\n  gen P I \\<inter> J \\<noteq> {}\n  \\<lbrakk>J \\<in> P; ?j0.0 \\<in> J; ?j0.0 \\<in> gen P I;\n   ?j \\<in> J\\<rbrakk>\n  \\<Longrightarrow> ?j \\<in> gen P I\n\ngoal (1 subgoal):\n 1. J \\<subseteq> gen P I", "by blast"], ["", "lemma gen_subset_gen[simp]:\nassumes \"J \\<in> P\" and \"gen P I \\<inter> J \\<noteq> {}\"\nshows \"gen P J \\<subseteq> gen P I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gen P J \\<subseteq> gen P I", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. gen P J \\<subseteq> gen P I", "have J: \"J \\<subseteq> gen P I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. J \\<subseteq> gen P I", "using assms"], ["proof (prove)\nusing this:\n  J \\<in> P\n  gen P I \\<inter> J \\<noteq> {}\n\ngoal (1 subgoal):\n 1. J \\<subseteq> gen P I", "by auto"], ["proof (state)\nthis:\n  J \\<subseteq> gen P I\n\ngoal (1 subgoal):\n 1. gen P J \\<subseteq> gen P I", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. gen P J \\<subseteq> gen P I", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> gen P J \\<Longrightarrow> x \\<in> gen P I", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> gen P J \\<Longrightarrow> x \\<in> gen P I", "assume \"i \\<in> gen P J\""], ["proof (state)\nthis:\n  i \\<in> gen P J\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> gen P J \\<Longrightarrow> x \\<in> gen P I", "thus \"i \\<in> gen P I\""], ["proof (prove)\nusing this:\n  i \\<in> gen P J\n\ngoal (1 subgoal):\n 1. i \\<in> gen P I", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> J \\<Longrightarrow> i \\<in> gen P I\n 2. \\<And>Ja j0 j.\n       \\<lbrakk>Ja \\<in> P; j0 \\<in> Ja; j0 \\<in> gen P J; j0 \\<in> gen P I;\n        j \\<in> Ja\\<rbrakk>\n       \\<Longrightarrow> j \\<in> gen P I", "case (ext J' j0 j)"], ["proof (state)\nthis:\n  J' \\<in> P\n  j0 \\<in> J'\n  j0 \\<in> gen P J\n  j0 \\<in> gen P I\n  j \\<in> J'\n\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> J \\<Longrightarrow> i \\<in> gen P I\n 2. \\<And>Ja j0 j.\n       \\<lbrakk>Ja \\<in> P; j0 \\<in> Ja; j0 \\<in> gen P J; j0 \\<in> gen P I;\n        j \\<in> Ja\\<rbrakk>\n       \\<Longrightarrow> j \\<in> gen P I", "thus ?case"], ["proof (prove)\nusing this:\n  J' \\<in> P\n  j0 \\<in> J'\n  j0 \\<in> gen P J\n  j0 \\<in> gen P I\n  j \\<in> J'\n\ngoal (1 subgoal):\n 1. j \\<in> gen P I", "using gen.ext[of J' P j0 I j]"], ["proof (prove)\nusing this:\n  J' \\<in> P\n  j0 \\<in> J'\n  j0 \\<in> gen P J\n  j0 \\<in> gen P I\n  j \\<in> J'\n  \\<lbrakk>J' \\<in> P; j0 \\<in> J'; j0 \\<in> gen P I; j \\<in> J'\\<rbrakk>\n  \\<Longrightarrow> j \\<in> gen P I\n\ngoal (1 subgoal):\n 1. j \\<in> gen P I", "by blast"], ["proof (state)\nthis:\n  j \\<in> gen P I\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> J \\<Longrightarrow> i \\<in> gen P I", "qed (insert J, auto)"], ["proof (state)\nthis:\n  i \\<in> gen P I\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  gen P J \\<subseteq> gen P I\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gen_mono[simp]:\nassumes \"I \\<subseteq> J\"\nshows \"gen P I \\<subseteq> gen P J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gen P I \\<subseteq> gen P J", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> gen P I \\<Longrightarrow> x \\<in> gen P J", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> gen P I \\<Longrightarrow> x \\<in> gen P J", "assume \"i \\<in> gen P I\""], ["proof (state)\nthis:\n  i \\<in> gen P I\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> gen P I \\<Longrightarrow> x \\<in> gen P J", "thus \"i \\<in> gen P J\""], ["proof (prove)\nusing this:\n  i \\<in> gen P I\n\ngoal (1 subgoal):\n 1. i \\<in> gen P J", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> i \\<in> gen P J\n 2. \\<And>Ja j0 j.\n       \\<lbrakk>Ja \\<in> P; j0 \\<in> Ja; j0 \\<in> gen P I; j0 \\<in> gen P J;\n        j \\<in> Ja\\<rbrakk>\n       \\<Longrightarrow> j \\<in> gen P J", "case (ext I' j0 j)"], ["proof (state)\nthis:\n  I' \\<in> P\n  j0 \\<in> I'\n  j0 \\<in> gen P I\n  j0 \\<in> gen P J\n  j \\<in> I'\n\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> i \\<in> gen P J\n 2. \\<And>Ja j0 j.\n       \\<lbrakk>Ja \\<in> P; j0 \\<in> Ja; j0 \\<in> gen P I; j0 \\<in> gen P J;\n        j \\<in> Ja\\<rbrakk>\n       \\<Longrightarrow> j \\<in> gen P J", "thus ?case"], ["proof (prove)\nusing this:\n  I' \\<in> P\n  j0 \\<in> I'\n  j0 \\<in> gen P I\n  j0 \\<in> gen P J\n  j \\<in> I'\n\ngoal (1 subgoal):\n 1. j \\<in> gen P J", "using gen.ext[of I' P j0 J j]"], ["proof (prove)\nusing this:\n  I' \\<in> P\n  j0 \\<in> I'\n  j0 \\<in> gen P I\n  j0 \\<in> gen P J\n  j \\<in> I'\n  \\<lbrakk>I' \\<in> P; j0 \\<in> I'; j0 \\<in> gen P J; j \\<in> I'\\<rbrakk>\n  \\<Longrightarrow> j \\<in> gen P J\n\ngoal (1 subgoal):\n 1. j \\<in> gen P J", "by blast"], ["proof (state)\nthis:\n  j \\<in> gen P J\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> i \\<in> gen P J", "qed (insert assms, auto)"], ["proof (state)\nthis:\n  i \\<in> gen P J\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gen_idem[simp]:\n\"gen P (gen P I) = gen P I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gen P (gen P I) = gen P I", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. gen P (gen P I) = gen P I", "define J where \"J = gen P I\""], ["proof (state)\nthis:\n  J = gen P I\n\ngoal (1 subgoal):\n 1. gen P (gen P I) = gen P I", "have \"I \\<subseteq> J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<subseteq> J", "unfolding J_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<subseteq> gen P I", "by auto"], ["proof (state)\nthis:\n  I \\<subseteq> J\n\ngoal (1 subgoal):\n 1. gen P (gen P I) = gen P I", "hence \"gen P I \\<subseteq> gen P J\""], ["proof (prove)\nusing this:\n  I \\<subseteq> J\n\ngoal (1 subgoal):\n 1. gen P I \\<subseteq> gen P J", "by simp"], ["proof (state)\nthis:\n  gen P I \\<subseteq> gen P J\n\ngoal (1 subgoal):\n 1. gen P (gen P I) = gen P I", "moreover"], ["proof (state)\nthis:\n  gen P I \\<subseteq> gen P J\n\ngoal (1 subgoal):\n 1. gen P (gen P I) = gen P I", "have \"gen P J \\<subseteq> gen P I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gen P J \\<subseteq> gen P I", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> gen P J \\<Longrightarrow> x \\<in> gen P I", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> gen P J \\<Longrightarrow> x \\<in> gen P I", "assume \"i \\<in> gen P J\""], ["proof (state)\nthis:\n  i \\<in> gen P J\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> gen P J \\<Longrightarrow> x \\<in> gen P I", "thus \"i \\<in> gen P I\""], ["proof (prove)\nusing this:\n  i \\<in> gen P J\n\ngoal (1 subgoal):\n 1. i \\<in> gen P I", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> J \\<Longrightarrow> i \\<in> gen P I\n 2. \\<And>Ja j0 j.\n       \\<lbrakk>Ja \\<in> P; j0 \\<in> Ja; j0 \\<in> gen P J; j0 \\<in> gen P I;\n        j \\<in> Ja\\<rbrakk>\n       \\<Longrightarrow> j \\<in> gen P I", "case (ext J' j0 j)"], ["proof (state)\nthis:\n  J' \\<in> P\n  j0 \\<in> J'\n  j0 \\<in> gen P J\n  j0 \\<in> gen P I\n  j \\<in> J'\n\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> J \\<Longrightarrow> i \\<in> gen P I\n 2. \\<And>Ja j0 j.\n       \\<lbrakk>Ja \\<in> P; j0 \\<in> Ja; j0 \\<in> gen P J; j0 \\<in> gen P I;\n        j \\<in> Ja\\<rbrakk>\n       \\<Longrightarrow> j \\<in> gen P I", "thus ?case"], ["proof (prove)\nusing this:\n  J' \\<in> P\n  j0 \\<in> J'\n  j0 \\<in> gen P J\n  j0 \\<in> gen P I\n  j \\<in> J'\n\ngoal (1 subgoal):\n 1. j \\<in> gen P I", "using gen.ext[of J' P j0 I j]"], ["proof (prove)\nusing this:\n  J' \\<in> P\n  j0 \\<in> J'\n  j0 \\<in> gen P J\n  j0 \\<in> gen P I\n  j \\<in> J'\n  \\<lbrakk>J' \\<in> P; j0 \\<in> J'; j0 \\<in> gen P I; j \\<in> J'\\<rbrakk>\n  \\<Longrightarrow> j \\<in> gen P I\n\ngoal (1 subgoal):\n 1. j \\<in> gen P I", "by blast"], ["proof (state)\nthis:\n  j \\<in> gen P I\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> J \\<Longrightarrow> i \\<in> gen P I", "qed (unfold J_def, auto)"], ["proof (state)\nthis:\n  i \\<in> gen P I\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  gen P J \\<subseteq> gen P I\n\ngoal (1 subgoal):\n 1. gen P (gen P I) = gen P I", "ultimately"], ["proof (chain)\npicking this:\n  gen P I \\<subseteq> gen P J\n  gen P J \\<subseteq> gen P I", "show ?thesis"], ["proof (prove)\nusing this:\n  gen P I \\<subseteq> gen P J\n  gen P J \\<subseteq> gen P I\n\ngoal (1 subgoal):\n 1. gen P (gen P I) = gen P I", "unfolding J_def"], ["proof (prove)\nusing this:\n  gen P I \\<subseteq> gen P (gen P I)\n  gen P (gen P I) \\<subseteq> gen P I\n\ngoal (1 subgoal):\n 1. gen P (gen P I) = gen P I", "by auto"], ["proof (state)\nthis:\n  gen P (gen P I) = gen P I\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gen_nchotomy:\nassumes \"J \\<in> P\"\nshows \"J \\<subseteq> gen P I \\<or> gen P I \\<inter> J = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. J \\<subseteq> gen P I \\<or> gen P I \\<inter> J = {}", "using assms subset_gen[of J P I]"], ["proof (prove)\nusing this:\n  J \\<in> P\n  \\<lbrakk>J \\<in> P; gen P I \\<inter> J \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> J \\<subseteq> gen P I\n\ngoal (1 subgoal):\n 1. J \\<subseteq> gen P I \\<or> gen P I \\<inter> J = {}", "by blast"], ["", "lemma gen_Union:\nassumes \"I \\<in> P\"\nshows \"gen P I = Union {J \\<in> P . J \\<subseteq> gen P I}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gen P I = \\<Union> {J \\<in> P. J \\<subseteq> gen P I}", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> gen P I \\<Longrightarrow>\n       x \\<in> \\<Union> {J \\<in> P. J \\<subseteq> gen P I}\n 2. \\<And>x X.\n       \\<lbrakk>x \\<in> X; X \\<in> P; X \\<subseteq> gen P I\\<rbrakk>\n       \\<Longrightarrow> x \\<in> gen P I", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> gen P I \\<Longrightarrow>\n       x \\<in> \\<Union> {J \\<in> P. J \\<subseteq> gen P I}\n 2. \\<And>x X.\n       \\<lbrakk>x \\<in> X; X \\<in> P; X \\<subseteq> gen P I\\<rbrakk>\n       \\<Longrightarrow> x \\<in> gen P I", "assume i: \"i \\<in> gen P I\""], ["proof (state)\nthis:\n  i \\<in> gen P I\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> gen P I \\<Longrightarrow>\n       x \\<in> \\<Union> {J \\<in> P. J \\<subseteq> gen P I}\n 2. \\<And>x X.\n       \\<lbrakk>x \\<in> X; X \\<in> P; X \\<subseteq> gen P I\\<rbrakk>\n       \\<Longrightarrow> x \\<in> gen P I", "then"], ["proof (chain)\npicking this:\n  i \\<in> gen P I", "obtain J where J: \"J \\<in> P\"  \"i \\<in> J\""], ["proof (prove)\nusing this:\n  i \\<in> gen P I\n\ngoal (1 subgoal):\n 1. (\\<And>J.\n        \\<lbrakk>J \\<in> P; i \\<in> J\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms gen_incl"], ["proof (prove)\nusing this:\n  i \\<in> gen P I\n  I \\<in> P\n  ?I \\<in> ?P \\<Longrightarrow> gen ?P ?I \\<subseteq> \\<Union> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>J.\n        \\<lbrakk>J \\<in> P; i \\<in> J\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  J \\<in> P\n  i \\<in> J\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> gen P I \\<Longrightarrow>\n       x \\<in> \\<Union> {J \\<in> P. J \\<subseteq> gen P I}\n 2. \\<And>x X.\n       \\<lbrakk>x \\<in> X; X \\<in> P; X \\<subseteq> gen P I\\<rbrakk>\n       \\<Longrightarrow> x \\<in> gen P I", "hence \"J \\<subseteq> gen P I\""], ["proof (prove)\nusing this:\n  J \\<in> P\n  i \\<in> J\n\ngoal (1 subgoal):\n 1. J \\<subseteq> gen P I", "using assms i gen_nchotomy"], ["proof (prove)\nusing this:\n  J \\<in> P\n  i \\<in> J\n  I \\<in> P\n  i \\<in> gen P I\n  ?J \\<in> ?P \\<Longrightarrow>\n  ?J \\<subseteq> gen ?P ?I \\<or> gen ?P ?I \\<inter> ?J = {}\n\ngoal (1 subgoal):\n 1. J \\<subseteq> gen P I", "by auto"], ["proof (state)\nthis:\n  J \\<subseteq> gen P I\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> gen P I \\<Longrightarrow>\n       x \\<in> \\<Union> {J \\<in> P. J \\<subseteq> gen P I}\n 2. \\<And>x X.\n       \\<lbrakk>x \\<in> X; X \\<in> P; X \\<subseteq> gen P I\\<rbrakk>\n       \\<Longrightarrow> x \\<in> gen P I", "thus \"i \\<in> \\<Union>{J \\<in> P. J \\<subseteq> gen P I}\""], ["proof (prove)\nusing this:\n  J \\<subseteq> gen P I\n\ngoal (1 subgoal):\n 1. i \\<in> \\<Union> {J \\<in> P. J \\<subseteq> gen P I}", "using J"], ["proof (prove)\nusing this:\n  J \\<subseteq> gen P I\n  J \\<in> P\n  i \\<in> J\n\ngoal (1 subgoal):\n 1. i \\<in> \\<Union> {J \\<in> P. J \\<subseteq> gen P I}", "by auto"], ["proof (state)\nthis:\n  i \\<in> \\<Union> {J \\<in> P. J \\<subseteq> gen P I}\n\ngoal (1 subgoal):\n 1. \\<And>x X.\n       \\<lbrakk>x \\<in> X; X \\<in> P; X \\<subseteq> gen P I\\<rbrakk>\n       \\<Longrightarrow> x \\<in> gen P I", "qed auto"], ["", "lemma subset_gen2:\nassumes *: \"{I,J} \\<subseteq> P\" and **: \"gen P I \\<inter> gen P J \\<noteq> {}\"\nshows \"I \\<subseteq> gen P J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<subseteq> gen P J", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. I \\<subseteq> gen P J", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. I \\<subseteq> gen P J", "fix i0 i"], ["proof (state)\ngoal (1 subgoal):\n 1. I \\<subseteq> gen P J", "assume i0: \"i0 \\<in> I \\<and> i0 \\<notin> gen P J\""], ["proof (state)\nthis:\n  i0 \\<in> I \\<and> i0 \\<notin> gen P J\n\ngoal (1 subgoal):\n 1. I \\<subseteq> gen P J", "assume \"i \\<in> gen P I\""], ["proof (state)\nthis:\n  i \\<in> gen P I\n\ngoal (1 subgoal):\n 1. I \\<subseteq> gen P J", "hence \"i \\<notin> gen P J\""], ["proof (prove)\nusing this:\n  i \\<in> gen P I\n\ngoal (1 subgoal):\n 1. i \\<notin> gen P J", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> i \\<notin> gen P J\n 2. \\<And>Ja j0 j.\n       \\<lbrakk>Ja \\<in> P; j0 \\<in> Ja; j0 \\<in> gen P I;\n        j0 \\<notin> gen P J; j \\<in> Ja\\<rbrakk>\n       \\<Longrightarrow> j \\<notin> gen P J", "case (incl i)"], ["proof (state)\nthis:\n  i \\<in> I\n\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> i \\<notin> gen P J\n 2. \\<And>Ja j0 j.\n       \\<lbrakk>Ja \\<in> P; j0 \\<in> Ja; j0 \\<in> gen P I;\n        j0 \\<notin> gen P J; j \\<in> Ja\\<rbrakk>\n       \\<Longrightarrow> j \\<notin> gen P J", "thus ?case"], ["proof (prove)\nusing this:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. i \\<notin> gen P J", "using i0 gen_nchotomy[of I P J] *"], ["proof (prove)\nusing this:\n  i \\<in> I\n  i0 \\<in> I \\<and> i0 \\<notin> gen P J\n  I \\<in> P \\<Longrightarrow>\n  I \\<subseteq> gen P J \\<or> gen P J \\<inter> I = {}\n  {I, J} \\<subseteq> P\n\ngoal (1 subgoal):\n 1. i \\<notin> gen P J", "by blast"], ["proof (state)\nthis:\n  i \\<notin> gen P J\n\ngoal (1 subgoal):\n 1. \\<And>Ja j0 j.\n       \\<lbrakk>Ja \\<in> P; j0 \\<in> Ja; j0 \\<in> gen P I;\n        j0 \\<notin> gen P J; j \\<in> Ja\\<rbrakk>\n       \\<Longrightarrow> j \\<notin> gen P J", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ja j0 j.\n       \\<lbrakk>Ja \\<in> P; j0 \\<in> Ja; j0 \\<in> gen P I;\n        j0 \\<notin> gen P J; j \\<in> Ja\\<rbrakk>\n       \\<Longrightarrow> j \\<notin> gen P J", "case (ext I' j0 j)"], ["proof (state)\nthis:\n  I' \\<in> P\n  j0 \\<in> I'\n  j0 \\<in> gen P I\n  j0 \\<notin> gen P J\n  j \\<in> I'\n\ngoal (1 subgoal):\n 1. \\<And>Ja j0 j.\n       \\<lbrakk>Ja \\<in> P; j0 \\<in> Ja; j0 \\<in> gen P I;\n        j0 \\<notin> gen P J; j \\<in> Ja\\<rbrakk>\n       \\<Longrightarrow> j \\<notin> gen P J", "thus ?case"], ["proof (prove)\nusing this:\n  I' \\<in> P\n  j0 \\<in> I'\n  j0 \\<in> gen P I\n  j0 \\<notin> gen P J\n  j \\<in> I'\n\ngoal (1 subgoal):\n 1. j \\<notin> gen P J", "using gen.ext[of I' P j0 J j] gen_nchotomy[of I' P J]"], ["proof (prove)\nusing this:\n  I' \\<in> P\n  j0 \\<in> I'\n  j0 \\<in> gen P I\n  j0 \\<notin> gen P J\n  j \\<in> I'\n  \\<lbrakk>I' \\<in> P; j0 \\<in> I'; j0 \\<in> gen P J; j \\<in> I'\\<rbrakk>\n  \\<Longrightarrow> j \\<in> gen P J\n  I' \\<in> P \\<Longrightarrow>\n  I' \\<subseteq> gen P J \\<or> gen P J \\<inter> I' = {}\n\ngoal (1 subgoal):\n 1. j \\<notin> gen P J", "by blast"], ["proof (state)\nthis:\n  j \\<notin> gen P J\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  i \\<notin> gen P J\n\ngoal (1 subgoal):\n 1. I \\<subseteq> gen P J", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?i0.2 \\<in> I \\<and> ?i0.2 \\<notin> gen P J;\n   ?i2 \\<in> gen P I\\<rbrakk>\n  \\<Longrightarrow> ?i2 \\<notin> gen P J\n\ngoal (1 subgoal):\n 1. I \\<subseteq> gen P J", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i0.2 \\<in> I \\<and> ?i0.2 \\<notin> gen P J;\n   ?i2 \\<in> gen P I\\<rbrakk>\n  \\<Longrightarrow> ?i2 \\<notin> gen P J\n\ngoal (1 subgoal):\n 1. I \\<subseteq> gen P J", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i0.2 \\<in> I \\<and> ?i0.2 \\<notin> gen P J;\n   ?i2 \\<in> gen P I\\<rbrakk>\n  \\<Longrightarrow> ?i2 \\<notin> gen P J\n  {I, J} \\<subseteq> P\n  gen P I \\<inter> gen P J \\<noteq> {}\n\ngoal (1 subgoal):\n 1. I \\<subseteq> gen P J", "by auto"], ["proof (state)\nthis:\n  I \\<subseteq> gen P J\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gen_subset_gen2[simp]:\nassumes \"{I,J} \\<subseteq> P\" and \"gen P I \\<inter> gen P J \\<noteq> {}\"\nshows \"gen P I \\<subseteq> gen P J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gen P I \\<subseteq> gen P J", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> gen P I \\<Longrightarrow> x \\<in> gen P J", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> gen P I \\<Longrightarrow> x \\<in> gen P J", "assume \"i \\<in> gen P I\""], ["proof (state)\nthis:\n  i \\<in> gen P I\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> gen P I \\<Longrightarrow> x \\<in> gen P J", "thus \"i \\<in> gen P J\""], ["proof (prove)\nusing this:\n  i \\<in> gen P I\n\ngoal (1 subgoal):\n 1. i \\<in> gen P J", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> i \\<in> gen P J\n 2. \\<And>Ja j0 j.\n       \\<lbrakk>Ja \\<in> P; j0 \\<in> Ja; j0 \\<in> gen P I; j0 \\<in> gen P J;\n        j \\<in> Ja\\<rbrakk>\n       \\<Longrightarrow> j \\<in> gen P J", "case (incl i)"], ["proof (state)\nthis:\n  i \\<in> I\n\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> i \\<in> gen P J\n 2. \\<And>Ja j0 j.\n       \\<lbrakk>Ja \\<in> P; j0 \\<in> Ja; j0 \\<in> gen P I; j0 \\<in> gen P J;\n        j \\<in> Ja\\<rbrakk>\n       \\<Longrightarrow> j \\<in> gen P J", "thus ?case"], ["proof (prove)\nusing this:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. i \\<in> gen P J", "using assms subset_gen2"], ["proof (prove)\nusing this:\n  i \\<in> I\n  {I, J} \\<subseteq> P\n  gen P I \\<inter> gen P J \\<noteq> {}\n  \\<lbrakk>{?I, ?J} \\<subseteq> ?P;\n   gen ?P ?I \\<inter> gen ?P ?J \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> ?I \\<subseteq> gen ?P ?J\n\ngoal (1 subgoal):\n 1. i \\<in> gen P J", "by auto"], ["proof (state)\nthis:\n  i \\<in> gen P J\n\ngoal (1 subgoal):\n 1. \\<And>Ja j0 j.\n       \\<lbrakk>Ja \\<in> P; j0 \\<in> Ja; j0 \\<in> gen P I; j0 \\<in> gen P J;\n        j \\<in> Ja\\<rbrakk>\n       \\<Longrightarrow> j \\<in> gen P J", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ja j0 j.\n       \\<lbrakk>Ja \\<in> P; j0 \\<in> Ja; j0 \\<in> gen P I; j0 \\<in> gen P J;\n        j \\<in> Ja\\<rbrakk>\n       \\<Longrightarrow> j \\<in> gen P J", "case (ext I' j0 j)"], ["proof (state)\nthis:\n  I' \\<in> P\n  j0 \\<in> I'\n  j0 \\<in> gen P I\n  j0 \\<in> gen P J\n  j \\<in> I'\n\ngoal (1 subgoal):\n 1. \\<And>Ja j0 j.\n       \\<lbrakk>Ja \\<in> P; j0 \\<in> Ja; j0 \\<in> gen P I; j0 \\<in> gen P J;\n        j \\<in> Ja\\<rbrakk>\n       \\<Longrightarrow> j \\<in> gen P J", "thus ?case"], ["proof (prove)\nusing this:\n  I' \\<in> P\n  j0 \\<in> I'\n  j0 \\<in> gen P I\n  j0 \\<in> gen P J\n  j \\<in> I'\n\ngoal (1 subgoal):\n 1. j \\<in> gen P J", "using gen.ext[of I' P j0 J j]"], ["proof (prove)\nusing this:\n  I' \\<in> P\n  j0 \\<in> I'\n  j0 \\<in> gen P I\n  j0 \\<in> gen P J\n  j \\<in> I'\n  \\<lbrakk>I' \\<in> P; j0 \\<in> I'; j0 \\<in> gen P J; j \\<in> I'\\<rbrakk>\n  \\<Longrightarrow> j \\<in> gen P J\n\ngoal (1 subgoal):\n 1. j \\<in> gen P J", "by blast"], ["proof (state)\nthis:\n  j \\<in> gen P J\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  i \\<in> gen P J\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gen_eq_gen:\nassumes \"{I,J} \\<subseteq> P\" and \"gen P I \\<inter> gen P J \\<noteq> {}\"\nshows \"gen P I = gen P J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gen P I = gen P J", "using assms gen_subset_gen2[of I J P] gen_subset_gen2[of J I P]"], ["proof (prove)\nusing this:\n  {I, J} \\<subseteq> P\n  gen P I \\<inter> gen P J \\<noteq> {}\n  \\<lbrakk>{I, J} \\<subseteq> P;\n   gen P I \\<inter> gen P J \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> gen P I \\<subseteq> gen P J\n  \\<lbrakk>{J, I} \\<subseteq> P;\n   gen P J \\<inter> gen P I \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> gen P J \\<subseteq> gen P I\n\ngoal (1 subgoal):\n 1. gen P I = gen P J", "by blast"], ["", "lemma gen_empty[simp]:\n\"gen P {} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gen P {} = {}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. gen P {} = {}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. gen P {} = {}", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. gen P {} = {}", "assume \"j \\<in> gen P {}\""], ["proof (state)\nthis:\n  j \\<in> gen P {}\n\ngoal (1 subgoal):\n 1. gen P {} = {}", "hence False"], ["proof (prove)\nusing this:\n  j \\<in> gen P {}\n\ngoal (1 subgoal):\n 1. False", "apply induct"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> {} \\<Longrightarrow> False\n 2. \\<And>J j0 j.\n       \\<lbrakk>J \\<in> P; j0 \\<in> J; j0 \\<in> gen P {}; False;\n        j \\<in> J\\<rbrakk>\n       \\<Longrightarrow> False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. gen P {} = {}", "}"], ["proof (state)\nthis:\n  ?j2 \\<in> gen P {} \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. gen P {} = {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?j2 \\<in> gen P {} \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. gen P {} = {}", "by auto"], ["proof (state)\nthis:\n  gen P {} = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gen_empty2[simp]:\n\"gen {} I = I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gen {} I = I", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. gen {} I = I", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. gen {} I = I", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. gen {} I = I", "assume \"j \\<in> gen {} I\""], ["proof (state)\nthis:\n  j \\<in> gen {} I\n\ngoal (1 subgoal):\n 1. gen {} I = I", "hence \"j \\<in> I\""], ["proof (prove)\nusing this:\n  j \\<in> gen {} I\n\ngoal (1 subgoal):\n 1. j \\<in> I", "apply induct"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> i \\<in> I\n 2. \\<And>J j0 j.\n       \\<lbrakk>J \\<in> {}; j0 \\<in> J; j0 \\<in> gen {} I; j0 \\<in> I;\n        j \\<in> J\\<rbrakk>\n       \\<Longrightarrow> j \\<in> I", "by auto"], ["proof (state)\nthis:\n  j \\<in> I\n\ngoal (1 subgoal):\n 1. gen {} I = I", "}"], ["proof (state)\nthis:\n  ?j2 \\<in> gen {} I \\<Longrightarrow> ?j2 \\<in> I\n\ngoal (1 subgoal):\n 1. gen {} I = I", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?j2 \\<in> gen {} I \\<Longrightarrow> ?j2 \\<in> I\n\ngoal (1 subgoal):\n 1. gen {} I = I", "by auto"], ["proof (state)\nthis:\n  gen {} I = I\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma emp_gen[simp]:\nassumes \"gen P I = {}\"\nshows \"I = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I = {}", "by (metis all_not_in_conv assms gen.incl)"], ["", "text\\<open>partGen:\\<close>"], ["", "lemma partGen_ex:\nassumes \"I \\<in> P\"\nshows \"\\<exists> J \\<in> partGen P. I \\<subseteq> J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>J\\<in>partGen P. I \\<subseteq> J", "using assms"], ["proof (prove)\nusing this:\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. \\<exists>J\\<in>partGen P. I \\<subseteq> J", "unfolding partGen_def"], ["proof (prove)\nusing this:\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. \\<exists>J\\<in>{gen P I |I. I \\<in> P}. I \\<subseteq> J", "apply(intro bexI[of _ \"gen P I\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. I \\<in> P \\<Longrightarrow> I \\<subseteq> gen P I\n 2. I \\<in> P \\<Longrightarrow> gen P I \\<in> {gen P I |I. I \\<in> P}", "by auto"], ["", "lemma ex_partGen:\nassumes \"J \\<in> partGen P\" and j: \"j \\<in> J\"\nshows \"\\<exists> I \\<in> P. j \\<in> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>I\\<in>P. j \\<in> I", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>I\\<in>P. j \\<in> I", "obtain I0 where I0: \"I0 \\<in> P\" and J: \"J = gen P I0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>I0.\n        \\<lbrakk>I0 \\<in> P; J = gen P I0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  J \\<in> partGen P\n  j \\<in> J\n\ngoal (1 subgoal):\n 1. (\\<And>I0.\n        \\<lbrakk>I0 \\<in> P; J = gen P I0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding partGen_def"], ["proof (prove)\nusing this:\n  J \\<in> {gen P I |I. I \\<in> P}\n  j \\<in> J\n\ngoal (1 subgoal):\n 1. (\\<And>I0.\n        \\<lbrakk>I0 \\<in> P; J = gen P I0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  I0 \\<in> P\n  J = gen P I0\n\ngoal (1 subgoal):\n 1. \\<exists>I\\<in>P. j \\<in> I", "thus ?thesis"], ["proof (prove)\nusing this:\n  I0 \\<in> P\n  J = gen P I0\n\ngoal (1 subgoal):\n 1. \\<exists>I\\<in>P. j \\<in> I", "using j gen_incl[of I0 P]"], ["proof (prove)\nusing this:\n  I0 \\<in> P\n  J = gen P I0\n  j \\<in> J\n  I0 \\<in> P \\<Longrightarrow> gen P I0 \\<subseteq> \\<Union> P\n\ngoal (1 subgoal):\n 1. \\<exists>I\\<in>P. j \\<in> I", "by auto"], ["proof (state)\nthis:\n  \\<exists>I\\<in>P. j \\<in> I\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Union_partGen: \"\\<Union> (partGen P) = \\<Union> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (partGen P) = \\<Union> P", "using ex_partGen[of _ P] partGen_ex[of _ P]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?J \\<in> partGen P; ?j \\<in> ?J\\<rbrakk>\n  \\<Longrightarrow> \\<exists>I\\<in>P. ?j \\<in> I\n  ?I \\<in> P \\<Longrightarrow> \\<exists>J\\<in>partGen P. ?I \\<subseteq> J\n\ngoal (1 subgoal):\n 1. \\<Union> (partGen P) = \\<Union> P", "by fastforce"], ["", "lemma Int_partGen:\nassumes *: \"{I,J} \\<subseteq> partGen P\" and **: \"I \\<inter> J \\<noteq> {}\"\nshows \"I = J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I = J", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. I = J", "obtain I0 where I0: \"I0 \\<in> P\" and I: \"I = gen P I0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>I0.\n        \\<lbrakk>I0 \\<in> P; I = gen P I0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  {I, J} \\<subseteq> partGen P\n  I \\<inter> J \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>I0.\n        \\<lbrakk>I0 \\<in> P; I = gen P I0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding partGen_def"], ["proof (prove)\nusing this:\n  {I, J} \\<subseteq> {gen P I |I. I \\<in> P}\n  I \\<inter> J \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>I0.\n        \\<lbrakk>I0 \\<in> P; I = gen P I0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  I0 \\<in> P\n  I = gen P I0\n\ngoal (1 subgoal):\n 1. I = J", "obtain J0 where J0: \"J0 \\<in> P\" and J: \"J = gen P J0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>J0.\n        \\<lbrakk>J0 \\<in> P; J = gen P J0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  {I, J} \\<subseteq> partGen P\n  I \\<inter> J \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>J0.\n        \\<lbrakk>J0 \\<in> P; J = gen P J0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding partGen_def"], ["proof (prove)\nusing this:\n  {I, J} \\<subseteq> {gen P I |I. I \\<in> P}\n  I \\<inter> J \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>J0.\n        \\<lbrakk>J0 \\<in> P; J = gen P J0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  J0 \\<in> P\n  J = gen P J0\n\ngoal (1 subgoal):\n 1. I = J", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. I = J", "using gen_eq_gen[of I0 J0 P] I0 J0 **"], ["proof (prove)\nusing this:\n  \\<lbrakk>{I0, J0} \\<subseteq> P;\n   gen P I0 \\<inter> gen P J0 \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> gen P I0 = gen P J0\n  I0 \\<in> P\n  J0 \\<in> P\n  I \\<inter> J \\<noteq> {}\n\ngoal (1 subgoal):\n 1. I = J", "unfolding I J"], ["proof (prove)\nusing this:\n  \\<lbrakk>{I0, J0} \\<subseteq> P;\n   gen P I0 \\<inter> gen P J0 \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> gen P I0 = gen P J0\n  I0 \\<in> P\n  J0 \\<in> P\n  gen P I0 \\<inter> gen P J0 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. gen P I0 = gen P J0", "by blast"], ["proof (state)\nthis:\n  I = J\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma part_partGen:\n\"part (Union P) (partGen P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part (\\<Union> P) (partGen P)", "unfolding part_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (partGen P) = \\<Union> P \\<and>\n    (\\<forall>J1 J2.\n        J1 \\<in> partGen P \\<and>\n        J2 \\<in> partGen P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n        J1 \\<inter> J2 = {})", "apply(intro conjI allI impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Union> (partGen P) = \\<Union> P\n 2. \\<And>J1 J2.\n       J1 \\<in> partGen P \\<and>\n       J2 \\<in> partGen P \\<and> J1 \\<noteq> J2 \\<Longrightarrow>\n       J1 \\<inter> J2 = {}", "apply (metis Union_partGen)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>J1 J2.\n       J1 \\<in> partGen P \\<and>\n       J2 \\<in> partGen P \\<and> J1 \\<noteq> J2 \\<Longrightarrow>\n       J1 \\<inter> J2 = {}", "using Int_partGen"], ["proof (prove)\nusing this:\n  \\<lbrakk>{?I, ?J} \\<subseteq> partGen ?P;\n   ?I \\<inter> ?J \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> ?I = ?J\n\ngoal (1 subgoal):\n 1. \\<And>J1 J2.\n       J1 \\<in> partGen P \\<and>\n       J2 \\<in> partGen P \\<and> J1 \\<noteq> J2 \\<Longrightarrow>\n       J1 \\<inter> J2 = {}", "by blast"], ["", "lemma finite_partGen[simp]:\nassumes \"finite P\"\nshows \"finite (partGen P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (partGen P)", "using assms"], ["proof (prove)\nusing this:\n  finite P\n\ngoal (1 subgoal):\n 1. finite (partGen P)", "unfolding partGen_def"], ["proof (prove)\nusing this:\n  finite P\n\ngoal (1 subgoal):\n 1. finite {gen P I |I. I \\<in> P}", "by auto"], ["", "lemma emp_partGen[simp]:\nassumes \"{} \\<notin> P\"\nshows \"{} \\<notin> partGen P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<notin> partGen P", "using assms"], ["proof (prove)\nusing this:\n  {} \\<notin> P\n\ngoal (1 subgoal):\n 1. {} \\<notin> partGen P", "unfolding partGen_def"], ["proof (prove)\nusing this:\n  {} \\<notin> P\n\ngoal (1 subgoal):\n 1. {} \\<notin> {gen P I |I. I \\<in> P}", "using emp_gen[of P]"], ["proof (prove)\nusing this:\n  {} \\<notin> P\n  gen P ?I = {} \\<Longrightarrow> ?I = {}\n\ngoal (1 subgoal):\n 1. {} \\<notin> {gen P I |I. I \\<in> P}", "by blast"], ["", "text\\<open>finer:\\<close>"], ["", "lemma finer_partGen:\n\"finer P (partGen P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finer P (partGen P)", "unfolding finer_def partGen_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>J\\<in>{gen P I |I. I \\<in> P}.\n        J = \\<Union> {I \\<in> P. I \\<subseteq> J}) \\<and>\n    (P \\<noteq> {} \\<longrightarrow> {gen P I |I. I \\<in> P} \\<noteq> {})", "using gen_Union"], ["proof (prove)\nusing this:\n  ?I \\<in> ?P \\<Longrightarrow>\n  gen ?P ?I = \\<Union> {J \\<in> ?P. J \\<subseteq> gen ?P ?I}\n\ngoal (1 subgoal):\n 1. (\\<forall>J\\<in>{gen P I |I. I \\<in> P}.\n        J = \\<Union> {I \\<in> P. I \\<subseteq> J}) \\<and>\n    (P \\<noteq> {} \\<longrightarrow> {gen P I |I. I \\<in> P} \\<noteq> {})", "by auto"], ["", "lemma finer_nchotomy:\nassumes P: \"part I0 P\" and Q: \"part I0 Q\" and PQ: \"finer P Q\"\nand I: \"I \\<in> P\" and II: \"II \\<in> Q\"\nshows \"I \\<subseteq> II \\<or> (I \\<inter> II = {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<subseteq> II \\<or> I \\<inter> II = {}", "proof(cases \"I \\<inter> II = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. I \\<inter> II = {} \\<Longrightarrow>\n    I \\<subseteq> II \\<or> I \\<inter> II = {}\n 2. I \\<inter> II \\<noteq> {} \\<Longrightarrow>\n    I \\<subseteq> II \\<or> I \\<inter> II = {}", "case False"], ["proof (state)\nthis:\n  I \\<inter> II \\<noteq> {}\n\ngoal (2 subgoals):\n 1. I \\<inter> II = {} \\<Longrightarrow>\n    I \\<subseteq> II \\<or> I \\<inter> II = {}\n 2. I \\<inter> II \\<noteq> {} \\<Longrightarrow>\n    I \\<subseteq> II \\<or> I \\<inter> II = {}", "then"], ["proof (chain)\npicking this:\n  I \\<inter> II \\<noteq> {}", "obtain i where i: \"i \\<in> I \\<and> i \\<in> II\""], ["proof (prove)\nusing this:\n  I \\<inter> II \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        i \\<in> I \\<and> i \\<in> II \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i \\<in> I \\<and> i \\<in> II\n\ngoal (2 subgoals):\n 1. I \\<inter> II = {} \\<Longrightarrow>\n    I \\<subseteq> II \\<or> I \\<inter> II = {}\n 2. I \\<inter> II \\<noteq> {} \\<Longrightarrow>\n    I \\<subseteq> II \\<or> I \\<inter> II = {}", "then"], ["proof (chain)\npicking this:\n  i \\<in> I \\<and> i \\<in> II", "obtain I' where \"i \\<in> I'\" and I': \"I' \\<in> P \\<and> I' \\<subseteq> II\""], ["proof (prove)\nusing this:\n  i \\<in> I \\<and> i \\<in> II\n\ngoal (1 subgoal):\n 1. (\\<And>I'.\n        \\<lbrakk>i \\<in> I'; I' \\<in> P \\<and> I' \\<subseteq> II\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using PQ II"], ["proof (prove)\nusing this:\n  i \\<in> I \\<and> i \\<in> II\n  finer P Q\n  II \\<in> Q\n\ngoal (1 subgoal):\n 1. (\\<And>I'.\n        \\<lbrakk>i \\<in> I'; I' \\<in> P \\<and> I' \\<subseteq> II\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding finer_def"], ["proof (prove)\nusing this:\n  i \\<in> I \\<and> i \\<in> II\n  (\\<forall>J\\<in>Q. J = \\<Union> {I \\<in> P. I \\<subseteq> J}) \\<and>\n  (P \\<noteq> {} \\<longrightarrow> Q \\<noteq> {})\n  II \\<in> Q\n\ngoal (1 subgoal):\n 1. (\\<And>I'.\n        \\<lbrakk>i \\<in> I'; I' \\<in> P \\<and> I' \\<subseteq> II\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i \\<in> I'\n  I' \\<in> P \\<and> I' \\<subseteq> II\n\ngoal (2 subgoals):\n 1. I \\<inter> II = {} \\<Longrightarrow>\n    I \\<subseteq> II \\<or> I \\<inter> II = {}\n 2. I \\<inter> II \\<noteq> {} \\<Longrightarrow>\n    I \\<subseteq> II \\<or> I \\<inter> II = {}", "hence \"I Int I' \\<noteq> {}\""], ["proof (prove)\nusing this:\n  i \\<in> I'\n  I' \\<in> P \\<and> I' \\<subseteq> II\n\ngoal (1 subgoal):\n 1. I \\<inter> I' \\<noteq> {}", "using i"], ["proof (prove)\nusing this:\n  i \\<in> I'\n  I' \\<in> P \\<and> I' \\<subseteq> II\n  i \\<in> I \\<and> i \\<in> II\n\ngoal (1 subgoal):\n 1. I \\<inter> I' \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  I \\<inter> I' \\<noteq> {}\n\ngoal (2 subgoals):\n 1. I \\<inter> II = {} \\<Longrightarrow>\n    I \\<subseteq> II \\<or> I \\<inter> II = {}\n 2. I \\<inter> II \\<noteq> {} \\<Longrightarrow>\n    I \\<subseteq> II \\<or> I \\<inter> II = {}", "hence \"I = I'\""], ["proof (prove)\nusing this:\n  I \\<inter> I' \\<noteq> {}\n\ngoal (1 subgoal):\n 1. I = I'", "using I I' P"], ["proof (prove)\nusing this:\n  I \\<inter> I' \\<noteq> {}\n  I \\<in> P\n  I' \\<in> P \\<and> I' \\<subseteq> II\n  part I0 P\n\ngoal (1 subgoal):\n 1. I = I'", "unfolding part_def"], ["proof (prove)\nusing this:\n  I \\<inter> I' \\<noteq> {}\n  I \\<in> P\n  I' \\<in> P \\<and> I' \\<subseteq> II\n  \\<Union> P = I0 \\<and>\n  (\\<forall>J1 J2.\n      J1 \\<in> P \\<and> J2 \\<in> P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n      J1 \\<inter> J2 = {})\n\ngoal (1 subgoal):\n 1. I = I'", "by auto"], ["proof (state)\nthis:\n  I = I'\n\ngoal (2 subgoals):\n 1. I \\<inter> II = {} \\<Longrightarrow>\n    I \\<subseteq> II \\<or> I \\<inter> II = {}\n 2. I \\<inter> II \\<noteq> {} \\<Longrightarrow>\n    I \\<subseteq> II \\<or> I \\<inter> II = {}", "hence \"I \\<subseteq> II\""], ["proof (prove)\nusing this:\n  I = I'\n\ngoal (1 subgoal):\n 1. I \\<subseteq> II", "using I'"], ["proof (prove)\nusing this:\n  I = I'\n  I' \\<in> P \\<and> I' \\<subseteq> II\n\ngoal (1 subgoal):\n 1. I \\<subseteq> II", "by simp"], ["proof (state)\nthis:\n  I \\<subseteq> II\n\ngoal (2 subgoals):\n 1. I \\<inter> II = {} \\<Longrightarrow>\n    I \\<subseteq> II \\<or> I \\<inter> II = {}\n 2. I \\<inter> II \\<noteq> {} \\<Longrightarrow>\n    I \\<subseteq> II \\<or> I \\<inter> II = {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  I \\<subseteq> II\n\ngoal (1 subgoal):\n 1. I \\<subseteq> II \\<or> I \\<inter> II = {}", "by auto"], ["proof (state)\nthis:\n  I \\<subseteq> II \\<or> I \\<inter> II = {}\n\ngoal (1 subgoal):\n 1. I \\<inter> II = {} \\<Longrightarrow>\n    I \\<subseteq> II \\<or> I \\<inter> II = {}", "qed auto"], ["", "lemma finer_ex:\nassumes P: \"part I0 P\" and Q: \"part I0 Q\" and PQ: \"finer P Q\"\nand I: \"I \\<in> P\"\nshows \"\\<exists> II. II \\<in> Q \\<and> I \\<subseteq> II\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II", "proof(cases \"I = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. I = {} \\<Longrightarrow> \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II\n 2. I \\<noteq> {} \\<Longrightarrow>\n    \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II", "case True"], ["proof (state)\nthis:\n  I = {}\n\ngoal (2 subgoals):\n 1. I = {} \\<Longrightarrow> \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II\n 2. I \\<noteq> {} \\<Longrightarrow>\n    \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II", "have \"Q \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<noteq> {}", "using I PQ"], ["proof (prove)\nusing this:\n  I \\<in> P\n  finer P Q\n\ngoal (1 subgoal):\n 1. Q \\<noteq> {}", "unfolding finer_def"], ["proof (prove)\nusing this:\n  I \\<in> P\n  (\\<forall>J\\<in>Q. J = \\<Union> {I \\<in> P. I \\<subseteq> J}) \\<and>\n  (P \\<noteq> {} \\<longrightarrow> Q \\<noteq> {})\n\ngoal (1 subgoal):\n 1. Q \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  Q \\<noteq> {}\n\ngoal (2 subgoals):\n 1. I = {} \\<Longrightarrow> \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II\n 2. I \\<noteq> {} \\<Longrightarrow>\n    \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II", "then"], ["proof (chain)\npicking this:\n  Q \\<noteq> {}", "obtain JJ where \"JJ \\<in> Q\""], ["proof (prove)\nusing this:\n  Q \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>JJ. JJ \\<in> Q \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  JJ \\<in> Q\n\ngoal (2 subgoals):\n 1. I = {} \\<Longrightarrow> \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II\n 2. I \\<noteq> {} \\<Longrightarrow>\n    \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II", "with True"], ["proof (chain)\npicking this:\n  I = {}\n  JJ \\<in> Q", "show ?thesis"], ["proof (prove)\nusing this:\n  I = {}\n  JJ \\<in> Q\n\ngoal (1 subgoal):\n 1. \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II", "by blast"], ["proof (state)\nthis:\n  \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II", "case False"], ["proof (state)\nthis:\n  I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II", "then"], ["proof (chain)\npicking this:\n  I \\<noteq> {}", "obtain i where i: \"i \\<in> I\""], ["proof (prove)\nusing this:\n  I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>i. i \\<in> I \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II", "hence \"i \\<in> I0\""], ["proof (prove)\nusing this:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. i \\<in> I0", "using I P"], ["proof (prove)\nusing this:\n  i \\<in> I\n  I \\<in> P\n  part I0 P\n\ngoal (1 subgoal):\n 1. i \\<in> I0", "unfolding part_def"], ["proof (prove)\nusing this:\n  i \\<in> I\n  I \\<in> P\n  \\<Union> P = I0 \\<and>\n  (\\<forall>J1 J2.\n      J1 \\<in> P \\<and> J2 \\<in> P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n      J1 \\<inter> J2 = {})\n\ngoal (1 subgoal):\n 1. i \\<in> I0", "by auto"], ["proof (state)\nthis:\n  i \\<in> I0\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II", "then"], ["proof (chain)\npicking this:\n  i \\<in> I0", "obtain II where II: \"II \\<in> Q\" and \"i \\<in> II\""], ["proof (prove)\nusing this:\n  i \\<in> I0\n\ngoal (1 subgoal):\n 1. (\\<And>II.\n        \\<lbrakk>II \\<in> Q; i \\<in> II\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Q"], ["proof (prove)\nusing this:\n  i \\<in> I0\n  part I0 Q\n\ngoal (1 subgoal):\n 1. (\\<And>II.\n        \\<lbrakk>II \\<in> Q; i \\<in> II\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding part_def"], ["proof (prove)\nusing this:\n  i \\<in> I0\n  \\<Union> Q = I0 \\<and>\n  (\\<forall>J1 J2.\n      J1 \\<in> Q \\<and> J2 \\<in> Q \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n      J1 \\<inter> J2 = {})\n\ngoal (1 subgoal):\n 1. (\\<And>II.\n        \\<lbrakk>II \\<in> Q; i \\<in> II\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  II \\<in> Q\n  i \\<in> II\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II", "hence \"I Int II \\<noteq> {}\""], ["proof (prove)\nusing this:\n  II \\<in> Q\n  i \\<in> II\n\ngoal (1 subgoal):\n 1. I \\<inter> II \\<noteq> {}", "using i"], ["proof (prove)\nusing this:\n  II \\<in> Q\n  i \\<in> II\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. I \\<inter> II \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  I \\<inter> II \\<noteq> {}\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II", "thus ?thesis"], ["proof (prove)\nusing this:\n  I \\<inter> II \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II", "using assms I II finer_nchotomy[of I0 P Q I II]"], ["proof (prove)\nusing this:\n  I \\<inter> II \\<noteq> {}\n  part I0 P\n  part I0 Q\n  finer P Q\n  I \\<in> P\n  I \\<in> P\n  II \\<in> Q\n  \\<lbrakk>part I0 P; part I0 Q; finer P Q; I \\<in> P; II \\<in> Q\\<rbrakk>\n  \\<Longrightarrow> I \\<subseteq> II \\<or> I \\<inter> II = {}\n\ngoal (1 subgoal):\n 1. \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II", "by auto"], ["proof (state)\nthis:\n  \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>partJoin:\\<close>"], ["", "lemma partJoin_commute:\n\"partJoin P Q = partJoin Q P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partJoin P Q = partJoin Q P", "unfolding partJoin_def partGen_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {gen (P \\<union> Q) I |I. I \\<in> P \\<union> Q} =\n    {gen (Q \\<union> P) I |I. I \\<in> Q \\<union> P}", "using Un_commute"], ["proof (prove)\nusing this:\n  ?A \\<union> ?B = ?B \\<union> ?A\n\ngoal (1 subgoal):\n 1. {gen (P \\<union> Q) I |I. I \\<in> P \\<union> Q} =\n    {gen (Q \\<union> P) I |I. I \\<in> Q \\<union> P}", "by metis"], ["", "lemma Union_partJoin_L:\n\"Union P \\<subseteq> Union (partJoin P Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> P \\<subseteq> \\<Union> (partJoin P Q)", "unfolding partJoin_def partGen_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> P\n    \\<subseteq> \\<Union> {gen (P \\<union> Q) I |I. I \\<in> P \\<union> Q}", "by auto"], ["", "lemma Union_partJoin_R:\n\"Union Q \\<subseteq> Union (partJoin P Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> Q \\<subseteq> \\<Union> (partJoin P Q)", "unfolding partJoin_def partGen_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> Q\n    \\<subseteq> \\<Union> {gen (P \\<union> Q) I |I. I \\<in> P \\<union> Q}", "by auto"], ["", "lemma part_partJoin[simp]:\nassumes \"part I P\" and \"part I Q\"\nshows \"part I (partJoin P Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part I (partJoin P Q)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. part I (partJoin P Q)", "have 1: \"Union (P Un Q) = I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (P \\<union> Q) = I", "using assms"], ["proof (prove)\nusing this:\n  part I P\n  part I Q\n\ngoal (1 subgoal):\n 1. \\<Union> (P \\<union> Q) = I", "unfolding part_def"], ["proof (prove)\nusing this:\n  \\<Union> P = I \\<and>\n  (\\<forall>J1 J2.\n      J1 \\<in> P \\<and> J2 \\<in> P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n      J1 \\<inter> J2 = {})\n  \\<Union> Q = I \\<and>\n  (\\<forall>J1 J2.\n      J1 \\<in> Q \\<and> J2 \\<in> Q \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n      J1 \\<inter> J2 = {})\n\ngoal (1 subgoal):\n 1. \\<Union> (P \\<union> Q) = I", "by auto"], ["proof (state)\nthis:\n  \\<Union> (P \\<union> Q) = I\n\ngoal (1 subgoal):\n 1. part I (partJoin P Q)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. part I (partJoin P Q)", "using part_partGen[of \"P Un Q\"]"], ["proof (prove)\nusing this:\n  part (\\<Union> (P \\<union> Q)) (partGen (P \\<union> Q))\n\ngoal (1 subgoal):\n 1. part I (partJoin P Q)", "unfolding 1 partJoin_def"], ["proof (prove)\nusing this:\n  part I (partGen (P \\<union> Q))\n\ngoal (1 subgoal):\n 1. part I (partGen (P \\<union> Q))", "by auto"], ["proof (state)\nthis:\n  part I (partJoin P Q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finer_partJoin_L[simp]:\nassumes *: \"part I P\" and **: \"part I Q\"\nshows \"finer P (partJoin P Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finer P (partJoin P Q)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. finer P (partJoin P Q)", "have 1: \"part I (partJoin P Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part I (partJoin P Q)", "using assms"], ["proof (prove)\nusing this:\n  part I P\n  part I Q\n\ngoal (1 subgoal):\n 1. part I (partJoin P Q)", "by simp"], ["proof (state)\nthis:\n  part I (partJoin P Q)\n\ngoal (1 subgoal):\n 1. finer P (partJoin P Q)", "{"], ["proof (state)\nthis:\n  part I (partJoin P Q)\n\ngoal (1 subgoal):\n 1. finer P (partJoin P Q)", "fix J j"], ["proof (state)\ngoal (1 subgoal):\n 1. finer P (partJoin P Q)", "assume J: \"J \\<in> partJoin P Q\" and j: \"j \\<in> J\""], ["proof (state)\nthis:\n  J \\<in> partJoin P Q\n  j \\<in> J\n\ngoal (1 subgoal):\n 1. finer P (partJoin P Q)", "hence \"J \\<subseteq> I\""], ["proof (prove)\nusing this:\n  J \\<in> partJoin P Q\n  j \\<in> J\n\ngoal (1 subgoal):\n 1. J \\<subseteq> I", "using 1"], ["proof (prove)\nusing this:\n  J \\<in> partJoin P Q\n  j \\<in> J\n  part I (partJoin P Q)\n\ngoal (1 subgoal):\n 1. J \\<subseteq> I", "by (metis Union_upper part_def)"], ["proof (state)\nthis:\n  J \\<subseteq> I\n\ngoal (1 subgoal):\n 1. finer P (partJoin P Q)", "with j"], ["proof (chain)\npicking this:\n  j \\<in> J\n  J \\<subseteq> I", "have \"j \\<in> I\""], ["proof (prove)\nusing this:\n  j \\<in> J\n  J \\<subseteq> I\n\ngoal (1 subgoal):\n 1. j \\<in> I", "by auto"], ["proof (state)\nthis:\n  j \\<in> I\n\ngoal (1 subgoal):\n 1. finer P (partJoin P Q)", "then"], ["proof (chain)\npicking this:\n  j \\<in> I", "obtain J' where jJ': \"j \\<in> J'\" and J': \"J' \\<in> P\""], ["proof (prove)\nusing this:\n  j \\<in> I\n\ngoal (1 subgoal):\n 1. (\\<And>J'.\n        \\<lbrakk>j \\<in> J'; J' \\<in> P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using *"], ["proof (prove)\nusing this:\n  j \\<in> I\n  part I P\n\ngoal (1 subgoal):\n 1. (\\<And>J'.\n        \\<lbrakk>j \\<in> J'; J' \\<in> P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding part_def"], ["proof (prove)\nusing this:\n  j \\<in> I\n  \\<Union> P = I \\<and>\n  (\\<forall>J1 J2.\n      J1 \\<in> P \\<and> J2 \\<in> P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n      J1 \\<inter> J2 = {})\n\ngoal (1 subgoal):\n 1. (\\<And>J'.\n        \\<lbrakk>j \\<in> J'; J' \\<in> P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  j \\<in> J'\n  J' \\<in> P\n\ngoal (1 subgoal):\n 1. finer P (partJoin P Q)", "hence \"J \\<inter> J' \\<noteq> {}\""], ["proof (prove)\nusing this:\n  j \\<in> J'\n  J' \\<in> P\n\ngoal (1 subgoal):\n 1. J \\<inter> J' \\<noteq> {}", "using j"], ["proof (prove)\nusing this:\n  j \\<in> J'\n  J' \\<in> P\n  j \\<in> J\n\ngoal (1 subgoal):\n 1. J \\<inter> J' \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  J \\<inter> J' \\<noteq> {}\n\ngoal (1 subgoal):\n 1. finer P (partJoin P Q)", "moreover"], ["proof (state)\nthis:\n  J \\<inter> J' \\<noteq> {}\n\ngoal (1 subgoal):\n 1. finer P (partJoin P Q)", "obtain J0 where \"J = gen (P Un Q) J0\"\n   and \"J0 \\<in> P Un Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>J0.\n        \\<lbrakk>J = gen (P \\<union> Q) J0; J0 \\<in> P \\<union> Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using J"], ["proof (prove)\nusing this:\n  J \\<in> partJoin P Q\n\ngoal (1 subgoal):\n 1. (\\<And>J0.\n        \\<lbrakk>J = gen (P \\<union> Q) J0; J0 \\<in> P \\<union> Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding partJoin_def partGen_def"], ["proof (prove)\nusing this:\n  J \\<in> {gen (P \\<union> Q) I |I. I \\<in> P \\<union> Q}\n\ngoal (1 subgoal):\n 1. (\\<And>J0.\n        \\<lbrakk>J = gen (P \\<union> Q) J0; J0 \\<in> P \\<union> Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  J = gen (P \\<union> Q) J0\n  J0 \\<in> P \\<union> Q\n\ngoal (1 subgoal):\n 1. finer P (partJoin P Q)", "ultimately"], ["proof (chain)\npicking this:\n  J \\<inter> J' \\<noteq> {}\n  J = gen (P \\<union> Q) J0\n  J0 \\<in> P \\<union> Q", "have \"J' \\<subseteq> J\""], ["proof (prove)\nusing this:\n  J \\<inter> J' \\<noteq> {}\n  J = gen (P \\<union> Q) J0\n  J0 \\<in> P \\<union> Q\n\ngoal (1 subgoal):\n 1. J' \\<subseteq> J", "using J' gen_nchotomy[of J' \"P Un Q\" J0]"], ["proof (prove)\nusing this:\n  J \\<inter> J' \\<noteq> {}\n  J = gen (P \\<union> Q) J0\n  J0 \\<in> P \\<union> Q\n  J' \\<in> P\n  J' \\<in> P \\<union> Q \\<Longrightarrow>\n  J' \\<subseteq> gen (P \\<union> Q) J0 \\<or>\n  gen (P \\<union> Q) J0 \\<inter> J' = {}\n\ngoal (1 subgoal):\n 1. J' \\<subseteq> J", "by blast"], ["proof (state)\nthis:\n  J' \\<subseteq> J\n\ngoal (1 subgoal):\n 1. finer P (partJoin P Q)", "hence \"j \\<in> \\<Union>{J' \\<in> P. J' \\<subseteq> J}\""], ["proof (prove)\nusing this:\n  J' \\<subseteq> J\n\ngoal (1 subgoal):\n 1. j \\<in> \\<Union> {J' \\<in> P. J' \\<subseteq> J}", "using J' jJ'"], ["proof (prove)\nusing this:\n  J' \\<subseteq> J\n  J' \\<in> P\n  j \\<in> J'\n\ngoal (1 subgoal):\n 1. j \\<in> \\<Union> {J' \\<in> P. J' \\<subseteq> J}", "by blast"], ["proof (state)\nthis:\n  j \\<in> \\<Union> {J' \\<in> P. J' \\<subseteq> J}\n\ngoal (1 subgoal):\n 1. finer P (partJoin P Q)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?J2 \\<in> partJoin P Q; ?j2 \\<in> ?J2\\<rbrakk>\n  \\<Longrightarrow> ?j2 \\<in> \\<Union> {J' \\<in> P. J' \\<subseteq> ?J2}\n\ngoal (1 subgoal):\n 1. finer P (partJoin P Q)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?J2 \\<in> partJoin P Q; ?j2 \\<in> ?J2\\<rbrakk>\n  \\<Longrightarrow> ?j2 \\<in> \\<Union> {J' \\<in> P. J' \\<subseteq> ?J2}\n\ngoal (1 subgoal):\n 1. finer P (partJoin P Q)", "unfolding finer_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?J2 \\<in> partJoin P Q; ?j2 \\<in> ?J2\\<rbrakk>\n  \\<Longrightarrow> ?j2 \\<in> \\<Union> {J' \\<in> P. J' \\<subseteq> ?J2}\n\ngoal (1 subgoal):\n 1. (\\<forall>J\\<in>partJoin P Q.\n        J = \\<Union> {I \\<in> P. I \\<subseteq> J}) \\<and>\n    (P \\<noteq> {} \\<longrightarrow> partJoin P Q \\<noteq> {})", "unfolding partJoin_def partGen_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?J2 \\<in> {gen (P \\<union> Q) I |I. I \\<in> P \\<union> Q};\n   ?j2 \\<in> ?J2\\<rbrakk>\n  \\<Longrightarrow> ?j2 \\<in> \\<Union> {J' \\<in> P. J' \\<subseteq> ?J2}\n\ngoal (1 subgoal):\n 1. (\\<forall>J\\<in>{gen (P \\<union> Q) I |I. I \\<in> P \\<union> Q}.\n        J = \\<Union> {I \\<in> P. I \\<subseteq> J}) \\<and>\n    (P \\<noteq> {} \\<longrightarrow>\n     {gen (P \\<union> Q) I |I. I \\<in> P \\<union> Q} \\<noteq> {})", "by blast"], ["proof (state)\nthis:\n  finer P (partJoin P Q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finer_partJoin_R[simp]:\nassumes *: \"part I P\" and **: \"part I Q\"\nshows \"finer Q (partJoin P Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finer Q (partJoin P Q)", "using assms finer_partJoin_L[of I Q P] partJoin_commute[of P Q]"], ["proof (prove)\nusing this:\n  part I P\n  part I Q\n  \\<lbrakk>part I Q; part I P\\<rbrakk>\n  \\<Longrightarrow> finer Q (partJoin Q P)\n  partJoin P Q = partJoin Q P\n\ngoal (1 subgoal):\n 1. finer Q (partJoin P Q)", "by auto"], ["", "lemma finer_emp[simp]:\nassumes \"finer {} Q\"\nshows \"Q \\<subseteq> { {} }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<subseteq> {{}}", "using assms"], ["proof (prove)\nusing this:\n  finer {} Q\n\ngoal (1 subgoal):\n 1. Q \\<subseteq> {{}}", "unfolding finer_def"], ["proof (prove)\nusing this:\n  (\\<forall>J\\<in>Q. J = \\<Union> {I \\<in> {}. I \\<subseteq> J}) \\<and>\n  ({} \\<noteq> {} \\<longrightarrow> Q \\<noteq> {})\n\ngoal (1 subgoal):\n 1. Q \\<subseteq> {{}}", "by auto"], ["", "text\\<open>compat:\\<close>"], ["", "lemma part_emp_R[simp]:\n\"part I {} \\<longleftrightarrow> I = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part I {} = (I = {})", "unfolding part_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union> {} = I \\<and>\n     (\\<forall>J1 J2.\n         J1 \\<in> {} \\<and>\n         J2 \\<in> {} \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n         J1 \\<inter> J2 = {})) =\n    (I = {})", "by auto"], ["", "lemma part_emp_L[simp]:\n\"part {} P \\<Longrightarrow> P \\<subseteq> { {} }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part {} P \\<Longrightarrow> P \\<subseteq> {{}}", "unfolding part_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> P = {} \\<and>\n    (\\<forall>J1 J2.\n        J1 \\<in> P \\<and> J2 \\<in> P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n        J1 \\<inter> J2 = {}) \\<Longrightarrow>\n    P \\<subseteq> {{}}", "by auto"], ["", "lemma finite_partJoin[simp]:\nassumes \"finite P\" and \"finite Q\"\nshows \"finite (partJoin P Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (partJoin P Q)", "using assms"], ["proof (prove)\nusing this:\n  finite P\n  finite Q\n\ngoal (1 subgoal):\n 1. finite (partJoin P Q)", "unfolding partJoin_def"], ["proof (prove)\nusing this:\n  finite P\n  finite Q\n\ngoal (1 subgoal):\n 1. finite (partGen (P \\<union> Q))", "by auto"], ["", "lemma emp_partJoin[simp]:\nassumes \"{} \\<notin> P\" and \"{} \\<notin> Q\"\nshows \"{} \\<notin> partJoin P Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<notin> partJoin P Q", "using assms"], ["proof (prove)\nusing this:\n  {} \\<notin> P\n  {} \\<notin> Q\n\ngoal (1 subgoal):\n 1. {} \\<notin> partJoin P Q", "unfolding partJoin_def"], ["proof (prove)\nusing this:\n  {} \\<notin> P\n  {} \\<notin> Q\n\ngoal (1 subgoal):\n 1. {} \\<notin> partGen (P \\<union> Q)", "by auto"], ["", "text\\<open>partCompat:\\<close>"], ["", "lemma partCompat_Un[simp]:\n\"partCompat (P Un Q) theta f \\<longleftrightarrow>\n partCompat P theta f \\<and> partCompat Q theta f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partCompat (P \\<union> Q) theta f =\n    (partCompat P theta f \\<and> partCompat Q theta f)", "unfolding partCompat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>I\\<in>P \\<union> Q. Resumption_Based.compat I theta f) =\n    ((\\<forall>I\\<in>P. Resumption_Based.compat I theta f) \\<and>\n     (\\<forall>I\\<in>Q. Resumption_Based.compat I theta f))", "by auto"], ["", "lemma partCompat_gen_aux:\nassumes theta: \"sym theta\" \"trans theta\"\nand fP: \"partCompat P theta f\" and I: \"I \\<in> P\"\nand i: \"i \\<in> I\" and j: \"j \\<in> gen P I\" and ij: \"i \\<noteq> j\"\nshows \"(f i, f j) \\<in> theta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "using j ij"], ["proof (prove)\nusing this:\n  j \\<in> gen P I\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>ia \\<in> I; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (f i, f ia) \\<in> theta\n 2. \\<And>J j0 j.\n       \\<lbrakk>J \\<in> P; j0 \\<in> J; j0 \\<in> gen P I;\n        i \\<noteq> j0 \\<Longrightarrow> (f i, f j0) \\<in> theta; j \\<in> J;\n        i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> (f i, f j) \\<in> theta", "case (incl j)"], ["proof (state)\nthis:\n  j \\<in> I\n  i \\<noteq> j\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>ia \\<in> I; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (f i, f ia) \\<in> theta\n 2. \\<And>J j0 j.\n       \\<lbrakk>J \\<in> P; j0 \\<in> J; j0 \\<in> gen P I;\n        i \\<noteq> j0 \\<Longrightarrow> (f i, f j0) \\<in> theta; j \\<in> J;\n        i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> (f i, f j) \\<in> theta", "thus ?case"], ["proof (prove)\nusing this:\n  j \\<in> I\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "using fP I i"], ["proof (prove)\nusing this:\n  j \\<in> I\n  i \\<noteq> j\n  partCompat P theta f\n  I \\<in> P\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "unfolding partCompat_def compat_def"], ["proof (prove)\nusing this:\n  j \\<in> I\n  i \\<noteq> j\n  \\<forall>I\\<in>P.\n     \\<forall>i j.\n        {i, j} \\<subseteq> I \\<and> i \\<noteq> j \\<longrightarrow>\n        (f i, f j) \\<in> theta\n  I \\<in> P\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "by blast"], ["proof (state)\nthis:\n  (f i, f j) \\<in> theta\n\ngoal (1 subgoal):\n 1. \\<And>J j0 j.\n       \\<lbrakk>J \\<in> P; j0 \\<in> J; j0 \\<in> gen P I;\n        i \\<noteq> j0 \\<Longrightarrow> (f i, f j0) \\<in> theta; j \\<in> J;\n        i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> (f i, f j) \\<in> theta", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>J j0 j.\n       \\<lbrakk>J \\<in> P; j0 \\<in> J; j0 \\<in> gen P I;\n        i \\<noteq> j0 \\<Longrightarrow> (f i, f j0) \\<in> theta; j \\<in> J;\n        i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> (f i, f j) \\<in> theta", "case (ext J j0 j)"], ["proof (state)\nthis:\n  J \\<in> P\n  j0 \\<in> J\n  j0 \\<in> gen P I\n  i \\<noteq> j0 \\<Longrightarrow> (f i, f j0) \\<in> theta\n  j \\<in> J\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. \\<And>J j0 j.\n       \\<lbrakk>J \\<in> P; j0 \\<in> J; j0 \\<in> gen P I;\n        i \\<noteq> j0 \\<Longrightarrow> (f i, f j0) \\<in> theta; j \\<in> J;\n        i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> (f i, f j) \\<in> theta", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "proof(cases \"i = j0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i = j0 \\<Longrightarrow> (f i, f j) \\<in> theta\n 2. i \\<noteq> j0 \\<Longrightarrow> (f i, f j) \\<in> theta", "case False"], ["proof (state)\nthis:\n  i \\<noteq> j0\n\ngoal (2 subgoals):\n 1. i = j0 \\<Longrightarrow> (f i, f j) \\<in> theta\n 2. i \\<noteq> j0 \\<Longrightarrow> (f i, f j) \\<in> theta", "note case_i = False"], ["proof (state)\nthis:\n  i \\<noteq> j0\n\ngoal (2 subgoals):\n 1. i = j0 \\<Longrightarrow> (f i, f j) \\<in> theta\n 2. i \\<noteq> j0 \\<Longrightarrow> (f i, f j) \\<in> theta", "hence 1: \"(f i, f j0) \\<in> theta\""], ["proof (prove)\nusing this:\n  i \\<noteq> j0\n\ngoal (1 subgoal):\n 1. (f i, f j0) \\<in> theta", "using ext"], ["proof (prove)\nusing this:\n  i \\<noteq> j0\n  J \\<in> P\n  j0 \\<in> J\n  j0 \\<in> gen P I\n  i \\<noteq> j0 \\<Longrightarrow> (f i, f j0) \\<in> theta\n  j \\<in> J\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. (f i, f j0) \\<in> theta", "by blast"], ["proof (state)\nthis:\n  (f i, f j0) \\<in> theta\n\ngoal (2 subgoals):\n 1. i = j0 \\<Longrightarrow> (f i, f j) \\<in> theta\n 2. i \\<noteq> j0 \\<Longrightarrow> (f i, f j) \\<in> theta", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "proof(cases \"j = j0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j = j0 \\<Longrightarrow> (f i, f j) \\<in> theta\n 2. j \\<noteq> j0 \\<Longrightarrow> (f i, f j) \\<in> theta", "case True"], ["proof (state)\nthis:\n  j = j0\n\ngoal (2 subgoals):\n 1. j = j0 \\<Longrightarrow> (f i, f j) \\<in> theta\n 2. j \\<noteq> j0 \\<Longrightarrow> (f i, f j) \\<in> theta", "thus ?thesis"], ["proof (prove)\nusing this:\n  j = j0\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "using case_i 1"], ["proof (prove)\nusing this:\n  j = j0\n  i \\<noteq> j0\n  (f i, f j0) \\<in> theta\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "by simp"], ["proof (state)\nthis:\n  (f i, f j) \\<in> theta\n\ngoal (1 subgoal):\n 1. j \\<noteq> j0 \\<Longrightarrow> (f i, f j) \\<in> theta", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<noteq> j0 \\<Longrightarrow> (f i, f j) \\<in> theta", "case False"], ["proof (state)\nthis:\n  j \\<noteq> j0\n\ngoal (1 subgoal):\n 1. j \\<noteq> j0 \\<Longrightarrow> (f i, f j) \\<in> theta", "hence \"(f j, f j0) \\<in> theta\""], ["proof (prove)\nusing this:\n  j \\<noteq> j0\n\ngoal (1 subgoal):\n 1. (f j, f j0) \\<in> theta", "using \\<open>j0 \\<in> J\\<close> \\<open>j \\<in> J\\<close> \\<open>J \\<in> P\\<close>"], ["proof (prove)\nusing this:\n  j \\<noteq> j0\n  j0 \\<in> J\n  j \\<in> J\n  J \\<in> P\n\ngoal (1 subgoal):\n 1. (f j, f j0) \\<in> theta", "using fP"], ["proof (prove)\nusing this:\n  j \\<noteq> j0\n  j0 \\<in> J\n  j \\<in> J\n  J \\<in> P\n  partCompat P theta f\n\ngoal (1 subgoal):\n 1. (f j, f j0) \\<in> theta", "unfolding partCompat_def compat_def"], ["proof (prove)\nusing this:\n  j \\<noteq> j0\n  j0 \\<in> J\n  j \\<in> J\n  J \\<in> P\n  \\<forall>I\\<in>P.\n     \\<forall>i j.\n        {i, j} \\<subseteq> I \\<and> i \\<noteq> j \\<longrightarrow>\n        (f i, f j) \\<in> theta\n\ngoal (1 subgoal):\n 1. (f j, f j0) \\<in> theta", "by auto"], ["proof (state)\nthis:\n  (f j, f j0) \\<in> theta\n\ngoal (1 subgoal):\n 1. j \\<noteq> j0 \\<Longrightarrow> (f i, f j) \\<in> theta", "hence \"(f j0, f j) \\<in> theta\""], ["proof (prove)\nusing this:\n  (f j, f j0) \\<in> theta\n\ngoal (1 subgoal):\n 1. (f j0, f j) \\<in> theta", "using theta"], ["proof (prove)\nusing this:\n  (f j, f j0) \\<in> theta\n  sym theta\n  trans theta\n\ngoal (1 subgoal):\n 1. (f j0, f j) \\<in> theta", "unfolding sym_def"], ["proof (prove)\nusing this:\n  (f j, f j0) \\<in> theta\n  \\<forall>x y. (x, y) \\<in> theta \\<longrightarrow> (y, x) \\<in> theta\n  trans theta\n\ngoal (1 subgoal):\n 1. (f j0, f j) \\<in> theta", "by simp"], ["proof (state)\nthis:\n  (f j0, f j) \\<in> theta\n\ngoal (1 subgoal):\n 1. j \\<noteq> j0 \\<Longrightarrow> (f i, f j) \\<in> theta", "thus ?thesis"], ["proof (prove)\nusing this:\n  (f j0, f j) \\<in> theta\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "using 1 theta"], ["proof (prove)\nusing this:\n  (f j0, f j) \\<in> theta\n  (f i, f j0) \\<in> theta\n  sym theta\n  trans theta\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (f j0, f j) \\<in> theta\n  (f i, f j0) \\<in> theta\n  sym theta\n  \\<forall>x y z.\n     (x, y) \\<in> theta \\<longrightarrow>\n     (y, z) \\<in> theta \\<longrightarrow> (x, z) \\<in> theta\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "by blast"], ["proof (state)\nthis:\n  (f i, f j) \\<in> theta\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (f i, f j) \\<in> theta\n\ngoal (1 subgoal):\n 1. i = j0 \\<Longrightarrow> (f i, f j) \\<in> theta", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i = j0 \\<Longrightarrow> (f i, f j) \\<in> theta", "case True"], ["proof (state)\nthis:\n  i = j0\n\ngoal (1 subgoal):\n 1. i = j0 \\<Longrightarrow> (f i, f j) \\<in> theta", "note case_i = True"], ["proof (state)\nthis:\n  i = j0\n\ngoal (1 subgoal):\n 1. i = j0 \\<Longrightarrow> (f i, f j) \\<in> theta", "hence \"j0 \\<noteq> j\""], ["proof (prove)\nusing this:\n  i = j0\n\ngoal (1 subgoal):\n 1. j0 \\<noteq> j", "using \\<open>i \\<noteq> j\\<close>"], ["proof (prove)\nusing this:\n  i = j0\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. j0 \\<noteq> j", "by auto"], ["proof (state)\nthis:\n  j0 \\<noteq> j\n\ngoal (1 subgoal):\n 1. i = j0 \\<Longrightarrow> (f i, f j) \\<in> theta", "hence \"(f j0, f j) \\<in> theta\""], ["proof (prove)\nusing this:\n  j0 \\<noteq> j\n\ngoal (1 subgoal):\n 1. (f j0, f j) \\<in> theta", "using \\<open>j0 \\<in> J\\<close> \\<open>j \\<in> J\\<close> \\<open>J \\<in> P\\<close>"], ["proof (prove)\nusing this:\n  j0 \\<noteq> j\n  j0 \\<in> J\n  j \\<in> J\n  J \\<in> P\n\ngoal (1 subgoal):\n 1. (f j0, f j) \\<in> theta", "using fP"], ["proof (prove)\nusing this:\n  j0 \\<noteq> j\n  j0 \\<in> J\n  j \\<in> J\n  J \\<in> P\n  partCompat P theta f\n\ngoal (1 subgoal):\n 1. (f j0, f j) \\<in> theta", "unfolding partCompat_def compat_def"], ["proof (prove)\nusing this:\n  j0 \\<noteq> j\n  j0 \\<in> J\n  j \\<in> J\n  J \\<in> P\n  \\<forall>I\\<in>P.\n     \\<forall>i j.\n        {i, j} \\<subseteq> I \\<and> i \\<noteq> j \\<longrightarrow>\n        (f i, f j) \\<in> theta\n\ngoal (1 subgoal):\n 1. (f j0, f j) \\<in> theta", "by auto"], ["proof (state)\nthis:\n  (f j0, f j) \\<in> theta\n\ngoal (1 subgoal):\n 1. i = j0 \\<Longrightarrow> (f i, f j) \\<in> theta", "thus ?thesis"], ["proof (prove)\nusing this:\n  (f j0, f j) \\<in> theta\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "unfolding case_i"], ["proof (prove)\nusing this:\n  (f j0, f j) \\<in> theta\n\ngoal (1 subgoal):\n 1. (f j0, f j) \\<in> theta", "."], ["proof (state)\nthis:\n  (f i, f j) \\<in> theta\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (f i, f j) \\<in> theta\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partCompat_gen:\nassumes theta: \"sym theta\" \"trans theta\"\nand fP: \"partCompat P theta f\" and I: \"I \\<in> P\"\nshows \"compat (gen P I) theta f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Resumption_Based.compat (gen P I) theta f", "unfolding compat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       {i, j} \\<subseteq> gen P I \\<and> i \\<noteq> j \\<longrightarrow>\n       (f i, f j) \\<in> theta", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>{i, j} \\<subseteq> gen P I; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> (f i, f j) \\<in> theta", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>{i, j} \\<subseteq> gen P I; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> (f i, f j) \\<in> theta", "assume ij: \"{i, j} \\<subseteq> gen P I\"  \"i \\<noteq> j\""], ["proof (state)\nthis:\n  {i, j} \\<subseteq> gen P I\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>{i, j} \\<subseteq> gen P I; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> (f i, f j) \\<in> theta", "show \"(f i, f j) \\<in> theta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "proof(cases \"i \\<in> I\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<in> I \\<Longrightarrow> (f i, f j) \\<in> theta\n 2. i \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "case True"], ["proof (state)\nthis:\n  i \\<in> I\n\ngoal (2 subgoals):\n 1. i \\<in> I \\<Longrightarrow> (f i, f j) \\<in> theta\n 2. i \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "note i = True"], ["proof (state)\nthis:\n  i \\<in> I\n\ngoal (2 subgoals):\n 1. i \\<in> I \\<Longrightarrow> (f i, f j) \\<in> theta\n 2. i \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "proof(cases \"j \\<in> I\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j \\<in> I \\<Longrightarrow> (f i, f j) \\<in> theta\n 2. j \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "case True"], ["proof (state)\nthis:\n  j \\<in> I\n\ngoal (2 subgoals):\n 1. j \\<in> I \\<Longrightarrow> (f i, f j) \\<in> theta\n 2. j \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "thus ?thesis"], ["proof (prove)\nusing this:\n  j \\<in> I\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "using i ij I fP"], ["proof (prove)\nusing this:\n  j \\<in> I\n  i \\<in> I\n  {i, j} \\<subseteq> gen P I\n  i \\<noteq> j\n  I \\<in> P\n  partCompat P theta f\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "unfolding partCompat_def compat_def"], ["proof (prove)\nusing this:\n  j \\<in> I\n  i \\<in> I\n  {i, j} \\<subseteq> gen P I\n  i \\<noteq> j\n  I \\<in> P\n  \\<forall>I\\<in>P.\n     \\<forall>i j.\n        {i, j} \\<subseteq> I \\<and> i \\<noteq> j \\<longrightarrow>\n        (f i, f j) \\<in> theta\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "by blast"], ["proof (state)\nthis:\n  (f i, f j) \\<in> theta\n\ngoal (1 subgoal):\n 1. j \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "case False"], ["proof (state)\nthis:\n  j \\<notin> I\n\ngoal (1 subgoal):\n 1. j \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "hence \"i \\<noteq> j\""], ["proof (prove)\nusing this:\n  j \\<notin> I\n\ngoal (1 subgoal):\n 1. i \\<noteq> j", "using i"], ["proof (prove)\nusing this:\n  j \\<notin> I\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. i \\<noteq> j", "by auto"], ["proof (state)\nthis:\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. j \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "thus ?thesis"], ["proof (prove)\nusing this:\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "using assms partCompat_gen_aux i ij"], ["proof (prove)\nusing this:\n  i \\<noteq> j\n  sym theta\n  trans theta\n  partCompat P theta f\n  I \\<in> P\n  \\<lbrakk>sym ?theta; trans ?theta; partCompat ?P ?theta ?f; ?I \\<in> ?P;\n   ?i \\<in> ?I; ?j \\<in> gen ?P ?I; ?i \\<noteq> ?j\\<rbrakk>\n  \\<Longrightarrow> (?f ?i, ?f ?j) \\<in> ?theta\n  i \\<in> I\n  {i, j} \\<subseteq> gen P I\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "by auto"], ["proof (state)\nthis:\n  (f i, f j) \\<in> theta\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (f i, f j) \\<in> theta\n\ngoal (1 subgoal):\n 1. i \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "case False"], ["proof (state)\nthis:\n  i \\<notin> I\n\ngoal (1 subgoal):\n 1. i \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "note i = False"], ["proof (state)\nthis:\n  i \\<notin> I\n\ngoal (1 subgoal):\n 1. i \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "proof(cases \"j \\<in> I\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j \\<in> I \\<Longrightarrow> (f i, f j) \\<in> theta\n 2. j \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "case True"], ["proof (state)\nthis:\n  j \\<in> I\n\ngoal (2 subgoals):\n 1. j \\<in> I \\<Longrightarrow> (f i, f j) \\<in> theta\n 2. j \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "hence \"j \\<noteq> i\""], ["proof (prove)\nusing this:\n  j \\<in> I\n\ngoal (1 subgoal):\n 1. j \\<noteq> i", "using i"], ["proof (prove)\nusing this:\n  j \\<in> I\n  i \\<notin> I\n\ngoal (1 subgoal):\n 1. j \\<noteq> i", "by auto"], ["proof (state)\nthis:\n  j \\<noteq> i\n\ngoal (2 subgoals):\n 1. j \\<in> I \\<Longrightarrow> (f i, f j) \\<in> theta\n 2. j \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "hence \"(f j, f i) \\<in> theta\""], ["proof (prove)\nusing this:\n  j \\<noteq> i\n\ngoal (1 subgoal):\n 1. (f j, f i) \\<in> theta", "using assms partCompat_gen_aux[of theta P f I j i] True ij"], ["proof (prove)\nusing this:\n  j \\<noteq> i\n  sym theta\n  trans theta\n  partCompat P theta f\n  I \\<in> P\n  \\<lbrakk>sym theta; trans theta; partCompat P theta f; I \\<in> P;\n   j \\<in> I; i \\<in> gen P I; j \\<noteq> i\\<rbrakk>\n  \\<Longrightarrow> (f j, f i) \\<in> theta\n  j \\<in> I\n  {i, j} \\<subseteq> gen P I\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. (f j, f i) \\<in> theta", "by auto"], ["proof (state)\nthis:\n  (f j, f i) \\<in> theta\n\ngoal (2 subgoals):\n 1. j \\<in> I \\<Longrightarrow> (f i, f j) \\<in> theta\n 2. j \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "thus ?thesis"], ["proof (prove)\nusing this:\n  (f j, f i) \\<in> theta\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "using theta"], ["proof (prove)\nusing this:\n  (f j, f i) \\<in> theta\n  sym theta\n  trans theta\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "unfolding sym_def"], ["proof (prove)\nusing this:\n  (f j, f i) \\<in> theta\n  \\<forall>x y. (x, y) \\<in> theta \\<longrightarrow> (y, x) \\<in> theta\n  trans theta\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "by auto"], ["proof (state)\nthis:\n  (f i, f j) \\<in> theta\n\ngoal (1 subgoal):\n 1. j \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "case False"], ["proof (state)\nthis:\n  j \\<notin> I\n\ngoal (1 subgoal):\n 1. j \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "note j = False"], ["proof (state)\nthis:\n  j \\<notin> I\n\ngoal (1 subgoal):\n 1. j \\<notin> I \\<Longrightarrow> (f i, f j) \\<in> theta", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "proof(cases \"I = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. I = {} \\<Longrightarrow> (f i, f j) \\<in> theta\n 2. I \\<noteq> {} \\<Longrightarrow> (f i, f j) \\<in> theta", "case True"], ["proof (state)\nthis:\n  I = {}\n\ngoal (2 subgoals):\n 1. I = {} \\<Longrightarrow> (f i, f j) \\<in> theta\n 2. I \\<noteq> {} \\<Longrightarrow> (f i, f j) \\<in> theta", "hence False"], ["proof (prove)\nusing this:\n  I = {}\n\ngoal (1 subgoal):\n 1. False", "using ij"], ["proof (prove)\nusing this:\n  I = {}\n  {i, j} \\<subseteq> gen P I\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. I = {} \\<Longrightarrow> (f i, f j) \\<in> theta\n 2. I \\<noteq> {} \\<Longrightarrow> (f i, f j) \\<in> theta", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "by simp"], ["proof (state)\nthis:\n  (f i, f j) \\<in> theta\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow> (f i, f j) \\<in> theta", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow> (f i, f j) \\<in> theta", "case False"], ["proof (state)\nthis:\n  I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow> (f i, f j) \\<in> theta", "then"], ["proof (chain)\npicking this:\n  I \\<noteq> {}", "obtain i0 where i0: \"i0 \\<in> I\""], ["proof (prove)\nusing this:\n  I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>i0. i0 \\<in> I \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  i0 \\<in> I\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow> (f i, f j) \\<in> theta", "hence i0_not: \"i0 \\<notin> {i,j}\""], ["proof (prove)\nusing this:\n  i0 \\<in> I\n\ngoal (1 subgoal):\n 1. i0 \\<notin> {i, j}", "using i j"], ["proof (prove)\nusing this:\n  i0 \\<in> I\n  i \\<notin> I\n  j \\<notin> I\n\ngoal (1 subgoal):\n 1. i0 \\<notin> {i, j}", "by auto"], ["proof (state)\nthis:\n  i0 \\<notin> {i, j}\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow> (f i, f j) \\<in> theta", "have \"(f i0, f i) \\<in> theta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f i0, f i) \\<in> theta", "using assms i0 i0_not ij partCompat_gen_aux[of theta P f I i0 i]"], ["proof (prove)\nusing this:\n  sym theta\n  trans theta\n  partCompat P theta f\n  I \\<in> P\n  i0 \\<in> I\n  i0 \\<notin> {i, j}\n  {i, j} \\<subseteq> gen P I\n  i \\<noteq> j\n  \\<lbrakk>sym theta; trans theta; partCompat P theta f; I \\<in> P;\n   i0 \\<in> I; i \\<in> gen P I; i0 \\<noteq> i\\<rbrakk>\n  \\<Longrightarrow> (f i0, f i) \\<in> theta\n\ngoal (1 subgoal):\n 1. (f i0, f i) \\<in> theta", "by blast"], ["proof (state)\nthis:\n  (f i0, f i) \\<in> theta\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow> (f i, f j) \\<in> theta", "hence \"(f i, f i0) \\<in> theta\""], ["proof (prove)\nusing this:\n  (f i0, f i) \\<in> theta\n\ngoal (1 subgoal):\n 1. (f i, f i0) \\<in> theta", "using theta"], ["proof (prove)\nusing this:\n  (f i0, f i) \\<in> theta\n  sym theta\n  trans theta\n\ngoal (1 subgoal):\n 1. (f i, f i0) \\<in> theta", "unfolding sym_def"], ["proof (prove)\nusing this:\n  (f i0, f i) \\<in> theta\n  \\<forall>x y. (x, y) \\<in> theta \\<longrightarrow> (y, x) \\<in> theta\n  trans theta\n\ngoal (1 subgoal):\n 1. (f i, f i0) \\<in> theta", "by auto"], ["proof (state)\nthis:\n  (f i, f i0) \\<in> theta\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow> (f i, f j) \\<in> theta", "moreover"], ["proof (state)\nthis:\n  (f i, f i0) \\<in> theta\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow> (f i, f j) \\<in> theta", "have \"(f i0, f j) \\<in> theta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f i0, f j) \\<in> theta", "using assms i0 i0_not ij partCompat_gen_aux[of theta P f I i0 j]"], ["proof (prove)\nusing this:\n  sym theta\n  trans theta\n  partCompat P theta f\n  I \\<in> P\n  i0 \\<in> I\n  i0 \\<notin> {i, j}\n  {i, j} \\<subseteq> gen P I\n  i \\<noteq> j\n  \\<lbrakk>sym theta; trans theta; partCompat P theta f; I \\<in> P;\n   i0 \\<in> I; j \\<in> gen P I; i0 \\<noteq> j\\<rbrakk>\n  \\<Longrightarrow> (f i0, f j) \\<in> theta\n\ngoal (1 subgoal):\n 1. (f i0, f j) \\<in> theta", "by blast"], ["proof (state)\nthis:\n  (f i0, f j) \\<in> theta\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow> (f i, f j) \\<in> theta", "ultimately"], ["proof (chain)\npicking this:\n  (f i, f i0) \\<in> theta\n  (f i0, f j) \\<in> theta", "show ?thesis"], ["proof (prove)\nusing this:\n  (f i, f i0) \\<in> theta\n  (f i0, f j) \\<in> theta\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "using theta"], ["proof (prove)\nusing this:\n  (f i, f i0) \\<in> theta\n  (f i0, f j) \\<in> theta\n  sym theta\n  trans theta\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (f i, f i0) \\<in> theta\n  (f i0, f j) \\<in> theta\n  sym theta\n  \\<forall>x y z.\n     (x, y) \\<in> theta \\<longrightarrow>\n     (y, z) \\<in> theta \\<longrightarrow> (x, z) \\<in> theta\n\ngoal (1 subgoal):\n 1. (f i, f j) \\<in> theta", "by blast"], ["proof (state)\nthis:\n  (f i, f j) \\<in> theta\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (f i, f j) \\<in> theta\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (f i, f j) \\<in> theta\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (f i, f j) \\<in> theta\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partCompat_partGen:\nassumes \"sym theta\" and \"trans theta\"\nand \"partCompat P theta f\"\nshows \"partCompat (partGen P) theta f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partCompat (partGen P) theta f", "unfolding partCompat_def partGen_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>I\\<in>{gen P I |I. I \\<in> P}.\n       Resumption_Based.compat I theta f", "using assms partCompat_gen[of theta P f]"], ["proof (prove)\nusing this:\n  sym theta\n  trans theta\n  partCompat P theta f\n  \\<lbrakk>sym theta; trans theta; partCompat P theta f; ?I \\<in> P\\<rbrakk>\n  \\<Longrightarrow> Resumption_Based.compat (gen P ?I) theta f\n\ngoal (1 subgoal):\n 1. \\<forall>I\\<in>{gen P I |I. I \\<in> P}.\n       Resumption_Based.compat I theta f", "by auto"], ["", "lemma partCompat_partJoin[simp]:\nassumes \"sym theta\" and \"trans theta\"\nand \"partCompat P theta f\" and \"partCompat Q theta f\"\nshows \"partCompat (partJoin P Q) theta f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partCompat (partJoin P Q) theta f", "by (metis assms partCompat_Un partCompat_partGen partJoin_def)"], ["", "text\\<open>lift:\\<close>"], ["", "lemma inj_on_lift:\nassumes P: \"part I0 P\" and Q: \"part I0 Q\" and PQ: \"finer P Q\"\nand F: \"inj_on F P\" and FP: \"part J0 (F ` P)\" and emp: \"{} \\<notin> F ` P\"\nshows \"inj_on (lift P F) Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (lift P F) Q", "unfolding inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>Q.\n       \\<forall>y\\<in>Q. lift P F x = lift P F y \\<longrightarrow> x = y", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix II II'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume II: \"II \\<in> Q\" and II': \"II' \\<in> Q\" and eq: \"lift P F II = lift P F II'\""], ["proof (state)\nthis:\n  II \\<in> Q\n  II' \\<in> Q\n  lift P F II = lift P F II'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "have 1: \"II = Union {I \\<in> P . I \\<subseteq> II}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. II = \\<Union> {I \\<in> P. I \\<subseteq> II}", "using PQ II"], ["proof (prove)\nusing this:\n  finer P Q\n  II \\<in> Q\n\ngoal (1 subgoal):\n 1. II = \\<Union> {I \\<in> P. I \\<subseteq> II}", "unfolding finer_def"], ["proof (prove)\nusing this:\n  (\\<forall>J\\<in>Q. J = \\<Union> {I \\<in> P. I \\<subseteq> J}) \\<and>\n  (P \\<noteq> {} \\<longrightarrow> Q \\<noteq> {})\n  II \\<in> Q\n\ngoal (1 subgoal):\n 1. II = \\<Union> {I \\<in> P. I \\<subseteq> II}", "by auto"], ["proof (state)\nthis:\n  II = \\<Union> {I \\<in> P. I \\<subseteq> II}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "have 2: \"II' = Union {I \\<in> P . I \\<subseteq> II'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. II' = \\<Union> {I \\<in> P. I \\<subseteq> II'}", "using PQ II'"], ["proof (prove)\nusing this:\n  finer P Q\n  II' \\<in> Q\n\ngoal (1 subgoal):\n 1. II' = \\<Union> {I \\<in> P. I \\<subseteq> II'}", "unfolding finer_def"], ["proof (prove)\nusing this:\n  (\\<forall>J\\<in>Q. J = \\<Union> {I \\<in> P. I \\<subseteq> J}) \\<and>\n  (P \\<noteq> {} \\<longrightarrow> Q \\<noteq> {})\n  II' \\<in> Q\n\ngoal (1 subgoal):\n 1. II' = \\<Union> {I \\<in> P. I \\<subseteq> II'}", "by auto"], ["proof (state)\nthis:\n  II' = \\<Union> {I \\<in> P. I \\<subseteq> II'}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "{"], ["proof (state)\nthis:\n  II' = \\<Union> {I \\<in> P. I \\<subseteq> II'}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix I"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume I: \"I \\<in> P\"  \"I \\<subseteq> II\""], ["proof (state)\nthis:\n  I \\<in> P\n  I \\<subseteq> II\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"F I \\<subseteq> lift P F II\""], ["proof (prove)\nusing this:\n  I \\<in> P\n  I \\<subseteq> II\n\ngoal (1 subgoal):\n 1. F I \\<subseteq> lift P F II", "unfolding lift_def[abs_def]"], ["proof (prove)\nusing this:\n  I \\<in> P\n  I \\<subseteq> II\n\ngoal (1 subgoal):\n 1. F I \\<subseteq> \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II}", "by blast"], ["proof (state)\nthis:\n  F I \\<subseteq> lift P F II\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence 3: \"F I \\<subseteq> lift P F II'\""], ["proof (prove)\nusing this:\n  F I \\<subseteq> lift P F II\n\ngoal (1 subgoal):\n 1. F I \\<subseteq> lift P F II'", "unfolding eq"], ["proof (prove)\nusing this:\n  F I \\<subseteq> lift P F II'\n\ngoal (1 subgoal):\n 1. F I \\<subseteq> lift P F II'", "."], ["proof (state)\nthis:\n  F I \\<subseteq> lift P F II'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"F I \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F I \\<noteq> {}", "using emp I FP"], ["proof (prove)\nusing this:\n  {} \\<notin> F ` P\n  I \\<in> P\n  I \\<subseteq> II\n  part J0 (F ` P)\n\ngoal (1 subgoal):\n 1. F I \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  F I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  F I \\<noteq> {}", "obtain j where j: \"j \\<in> F I\""], ["proof (prove)\nusing this:\n  F I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>j. j \\<in> F I \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  j \\<in> F I\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "with 3"], ["proof (chain)\npicking this:\n  F I \\<subseteq> lift P F II'\n  j \\<in> F I", "obtain I' where I': \"I' \\<in> P \\<and> I' \\<subseteq> II'\" and \"j \\<in> F I'\""], ["proof (prove)\nusing this:\n  F I \\<subseteq> lift P F II'\n  j \\<in> F I\n\ngoal (1 subgoal):\n 1. (\\<And>I'.\n        \\<lbrakk>I' \\<in> P \\<and> I' \\<subseteq> II'; j \\<in> F I'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding lift_def [abs_def]"], ["proof (prove)\nusing this:\n  F I \\<subseteq> \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II'}\n  j \\<in> F I\n\ngoal (1 subgoal):\n 1. (\\<And>I'.\n        \\<lbrakk>I' \\<in> P \\<and> I' \\<subseteq> II'; j \\<in> F I'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  I' \\<in> P \\<and> I' \\<subseteq> II'\n  j \\<in> F I'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"F I Int F I' \\<noteq> {}\""], ["proof (prove)\nusing this:\n  I' \\<in> P \\<and> I' \\<subseteq> II'\n  j \\<in> F I'\n\ngoal (1 subgoal):\n 1. F I \\<inter> F I' \\<noteq> {}", "using j"], ["proof (prove)\nusing this:\n  I' \\<in> P \\<and> I' \\<subseteq> II'\n  j \\<in> F I'\n  j \\<in> F I\n\ngoal (1 subgoal):\n 1. F I \\<inter> F I' \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  F I \\<inter> F I' \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"F I = F I'\""], ["proof (prove)\nusing this:\n  F I \\<inter> F I' \\<noteq> {}\n\ngoal (1 subgoal):\n 1. F I = F I'", "using FP I I'"], ["proof (prove)\nusing this:\n  F I \\<inter> F I' \\<noteq> {}\n  part J0 (F ` P)\n  I \\<in> P\n  I \\<subseteq> II\n  I' \\<in> P \\<and> I' \\<subseteq> II'\n\ngoal (1 subgoal):\n 1. F I = F I'", "unfolding part_def"], ["proof (prove)\nusing this:\n  F I \\<inter> F I' \\<noteq> {}\n  \\<Union> (F ` P) = J0 \\<and>\n  (\\<forall>J1 J2.\n      J1 \\<in> F ` P \\<and>\n      J2 \\<in> F ` P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n      J1 \\<inter> J2 = {})\n  I \\<in> P\n  I \\<subseteq> II\n  I' \\<in> P \\<and> I' \\<subseteq> II'\n\ngoal (1 subgoal):\n 1. F I = F I'", "by auto"], ["proof (state)\nthis:\n  F I = F I'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"I = I'\""], ["proof (prove)\nusing this:\n  F I = F I'\n\ngoal (1 subgoal):\n 1. I = I'", "using F I I'"], ["proof (prove)\nusing this:\n  F I = F I'\n  inj_on F P\n  I \\<in> P\n  I \\<subseteq> II\n  I' \\<in> P \\<and> I' \\<subseteq> II'\n\ngoal (1 subgoal):\n 1. I = I'", "unfolding inj_on_def"], ["proof (prove)\nusing this:\n  F I = F I'\n  \\<forall>x\\<in>P. \\<forall>y\\<in>P. F x = F y \\<longrightarrow> x = y\n  I \\<in> P\n  I \\<subseteq> II\n  I' \\<in> P \\<and> I' \\<subseteq> II'\n\ngoal (1 subgoal):\n 1. I = I'", "by auto"], ["proof (state)\nthis:\n  I = I'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"I \\<subseteq> II'\""], ["proof (prove)\nusing this:\n  I = I'\n\ngoal (1 subgoal):\n 1. I \\<subseteq> II'", "using I'"], ["proof (prove)\nusing this:\n  I = I'\n  I' \\<in> P \\<and> I' \\<subseteq> II'\n\ngoal (1 subgoal):\n 1. I \\<subseteq> II'", "by auto"], ["proof (state)\nthis:\n  I \\<subseteq> II'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?I2 \\<in> P; ?I2 \\<subseteq> II\\<rbrakk>\n  \\<Longrightarrow> ?I2 \\<subseteq> II'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence a: \"II \\<subseteq> II'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?I2 \\<in> P; ?I2 \\<subseteq> II\\<rbrakk>\n  \\<Longrightarrow> ?I2 \\<subseteq> II'\n\ngoal (1 subgoal):\n 1. II \\<subseteq> II'", "using 1 2"], ["proof (prove)\nusing this:\n  \\<lbrakk>?I2 \\<in> P; ?I2 \\<subseteq> II\\<rbrakk>\n  \\<Longrightarrow> ?I2 \\<subseteq> II'\n  II = \\<Union> {I \\<in> P. I \\<subseteq> II}\n  II' = \\<Union> {I \\<in> P. I \\<subseteq> II'}\n\ngoal (1 subgoal):\n 1. II \\<subseteq> II'", "by blast"], ["proof (state)\nthis:\n  II \\<subseteq> II'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "(*  *)"], ["proof (state)\nthis:\n  II \\<subseteq> II'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "{"], ["proof (state)\nthis:\n  II \\<subseteq> II'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix I"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume I: \"I \\<in> P\"  \"I \\<subseteq> II'\""], ["proof (state)\nthis:\n  I \\<in> P\n  I \\<subseteq> II'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"F I \\<subseteq> lift P F II'\""], ["proof (prove)\nusing this:\n  I \\<in> P\n  I \\<subseteq> II'\n\ngoal (1 subgoal):\n 1. F I \\<subseteq> lift P F II'", "unfolding lift_def [abs_def]"], ["proof (prove)\nusing this:\n  I \\<in> P\n  I \\<subseteq> II'\n\ngoal (1 subgoal):\n 1. F I \\<subseteq> \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II'}", "by blast"], ["proof (state)\nthis:\n  F I \\<subseteq> lift P F II'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence 3: \"F I \\<subseteq> lift P F II\""], ["proof (prove)\nusing this:\n  F I \\<subseteq> lift P F II'\n\ngoal (1 subgoal):\n 1. F I \\<subseteq> lift P F II", "unfolding eq"], ["proof (prove)\nusing this:\n  F I \\<subseteq> lift P F II'\n\ngoal (1 subgoal):\n 1. F I \\<subseteq> lift P F II'", "."], ["proof (state)\nthis:\n  F I \\<subseteq> lift P F II\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"F I \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F I \\<noteq> {}", "using emp I FP"], ["proof (prove)\nusing this:\n  {} \\<notin> F ` P\n  I \\<in> P\n  I \\<subseteq> II'\n  part J0 (F ` P)\n\ngoal (1 subgoal):\n 1. F I \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  F I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  F I \\<noteq> {}", "obtain j where j: \"j \\<in> F I\""], ["proof (prove)\nusing this:\n  F I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>j. j \\<in> F I \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  j \\<in> F I\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "with 3"], ["proof (chain)\npicking this:\n  F I \\<subseteq> lift P F II\n  j \\<in> F I", "obtain I' where I': \"I' \\<in> P \\<and> I' \\<subseteq> II\" and \"j \\<in> F I'\""], ["proof (prove)\nusing this:\n  F I \\<subseteq> lift P F II\n  j \\<in> F I\n\ngoal (1 subgoal):\n 1. (\\<And>I'.\n        \\<lbrakk>I' \\<in> P \\<and> I' \\<subseteq> II; j \\<in> F I'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding lift_def [abs_def]"], ["proof (prove)\nusing this:\n  F I \\<subseteq> \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II}\n  j \\<in> F I\n\ngoal (1 subgoal):\n 1. (\\<And>I'.\n        \\<lbrakk>I' \\<in> P \\<and> I' \\<subseteq> II; j \\<in> F I'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  I' \\<in> P \\<and> I' \\<subseteq> II\n  j \\<in> F I'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"F I Int F I' \\<noteq> {}\""], ["proof (prove)\nusing this:\n  I' \\<in> P \\<and> I' \\<subseteq> II\n  j \\<in> F I'\n\ngoal (1 subgoal):\n 1. F I \\<inter> F I' \\<noteq> {}", "using j"], ["proof (prove)\nusing this:\n  I' \\<in> P \\<and> I' \\<subseteq> II\n  j \\<in> F I'\n  j \\<in> F I\n\ngoal (1 subgoal):\n 1. F I \\<inter> F I' \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  F I \\<inter> F I' \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"F I = F I'\""], ["proof (prove)\nusing this:\n  F I \\<inter> F I' \\<noteq> {}\n\ngoal (1 subgoal):\n 1. F I = F I'", "using FP I I'"], ["proof (prove)\nusing this:\n  F I \\<inter> F I' \\<noteq> {}\n  part J0 (F ` P)\n  I \\<in> P\n  I \\<subseteq> II'\n  I' \\<in> P \\<and> I' \\<subseteq> II\n\ngoal (1 subgoal):\n 1. F I = F I'", "unfolding part_def"], ["proof (prove)\nusing this:\n  F I \\<inter> F I' \\<noteq> {}\n  \\<Union> (F ` P) = J0 \\<and>\n  (\\<forall>J1 J2.\n      J1 \\<in> F ` P \\<and>\n      J2 \\<in> F ` P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n      J1 \\<inter> J2 = {})\n  I \\<in> P\n  I \\<subseteq> II'\n  I' \\<in> P \\<and> I' \\<subseteq> II\n\ngoal (1 subgoal):\n 1. F I = F I'", "by auto"], ["proof (state)\nthis:\n  F I = F I'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"I = I'\""], ["proof (prove)\nusing this:\n  F I = F I'\n\ngoal (1 subgoal):\n 1. I = I'", "using F I I'"], ["proof (prove)\nusing this:\n  F I = F I'\n  inj_on F P\n  I \\<in> P\n  I \\<subseteq> II'\n  I' \\<in> P \\<and> I' \\<subseteq> II\n\ngoal (1 subgoal):\n 1. I = I'", "unfolding inj_on_def"], ["proof (prove)\nusing this:\n  F I = F I'\n  \\<forall>x\\<in>P. \\<forall>y\\<in>P. F x = F y \\<longrightarrow> x = y\n  I \\<in> P\n  I \\<subseteq> II'\n  I' \\<in> P \\<and> I' \\<subseteq> II\n\ngoal (1 subgoal):\n 1. I = I'", "by auto"], ["proof (state)\nthis:\n  I = I'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"I \\<subseteq> II\""], ["proof (prove)\nusing this:\n  I = I'\n\ngoal (1 subgoal):\n 1. I \\<subseteq> II", "using I'"], ["proof (prove)\nusing this:\n  I = I'\n  I' \\<in> P \\<and> I' \\<subseteq> II\n\ngoal (1 subgoal):\n 1. I \\<subseteq> II", "by auto"], ["proof (state)\nthis:\n  I \\<subseteq> II\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?I2 \\<in> P; ?I2 \\<subseteq> II'\\<rbrakk>\n  \\<Longrightarrow> ?I2 \\<subseteq> II\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"II' \\<subseteq> II\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?I2 \\<in> P; ?I2 \\<subseteq> II'\\<rbrakk>\n  \\<Longrightarrow> ?I2 \\<subseteq> II\n\ngoal (1 subgoal):\n 1. II' \\<subseteq> II", "using 1 2"], ["proof (prove)\nusing this:\n  \\<lbrakk>?I2 \\<in> P; ?I2 \\<subseteq> II'\\<rbrakk>\n  \\<Longrightarrow> ?I2 \\<subseteq> II\n  II = \\<Union> {I \\<in> P. I \\<subseteq> II}\n  II' = \\<Union> {I \\<in> P. I \\<subseteq> II'}\n\ngoal (1 subgoal):\n 1. II' \\<subseteq> II", "by blast"], ["proof (state)\nthis:\n  II' \\<subseteq> II\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Q; y \\<in> Q; lift P F x = lift P F y\\<rbrakk>\n       \\<Longrightarrow> x = y", "with a"], ["proof (chain)\npicking this:\n  II \\<subseteq> II'\n  II' \\<subseteq> II", "show \"II = II'\""], ["proof (prove)\nusing this:\n  II \\<subseteq> II'\n  II' \\<subseteq> II\n\ngoal (1 subgoal):\n 1. II = II'", "by auto"], ["proof (state)\nthis:\n  II = II'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma part_lift:\nassumes P: \"part I0 P\" and Q: \"part I0 Q\" and PQ: \"finer P Q\"\nand F: \"inj_on F P\" and FP: \"part J0 (F ` P)\" and emp: \"{} \\<notin> P\" \"{} \\<notin> F ` P\"\nshows \"part J0 (lift P F ` Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part J0 (lift P F ` Q)", "unfolding part_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (lift P F ` Q) = J0 \\<and>\n    (\\<forall>J1 J2.\n        J1 \\<in> lift P F ` Q \\<and>\n        J2 \\<in> lift P F ` Q \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n        J1 \\<inter> J2 = {})", "proof (intro conjI allI impI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Union> (lift P F ` Q) = J0\n 2. \\<And>J1 J2.\n       J1 \\<in> lift P F ` Q \\<and>\n       J2 \\<in> lift P F ` Q \\<and> J1 \\<noteq> J2 \\<Longrightarrow>\n       J1 \\<inter> J2 = {}", "show \"\\<Union>(lift P F ` Q) = J0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (lift P F ` Q) = J0", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> Q; x \\<in> lift P F xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> J0\n 2. \\<And>x. x \\<in> J0 \\<Longrightarrow> x \\<in> \\<Union> (lift P F ` Q)", "fix j II"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> Q; x \\<in> lift P F xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> J0\n 2. \\<And>x. x \\<in> J0 \\<Longrightarrow> x \\<in> \\<Union> (lift P F ` Q)", "assume \"j \\<in> lift P F II\" and II: \"II \\<in> Q\""], ["proof (state)\nthis:\n  j \\<in> lift P F II\n  II \\<in> Q\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> Q; x \\<in> lift P F xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> J0\n 2. \\<And>x. x \\<in> J0 \\<Longrightarrow> x \\<in> \\<Union> (lift P F ` Q)", "then"], ["proof (chain)\npicking this:\n  j \\<in> lift P F II\n  II \\<in> Q", "obtain I where \"j \\<in> F I\" and \"I \\<in> P\" and \"I \\<subseteq> II\""], ["proof (prove)\nusing this:\n  j \\<in> lift P F II\n  II \\<in> Q\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>j \\<in> F I; I \\<in> P; I \\<subseteq> II\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding lift_def"], ["proof (prove)\nusing this:\n  j \\<in> \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II}\n  II \\<in> Q\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>j \\<in> F I; I \\<in> P; I \\<subseteq> II\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  j \\<in> F I\n  I \\<in> P\n  I \\<subseteq> II\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> Q; x \\<in> lift P F xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> J0\n 2. \\<And>x. x \\<in> J0 \\<Longrightarrow> x \\<in> \\<Union> (lift P F ` Q)", "thus \"j \\<in> J0\""], ["proof (prove)\nusing this:\n  j \\<in> F I\n  I \\<in> P\n  I \\<subseteq> II\n\ngoal (1 subgoal):\n 1. j \\<in> J0", "using FP"], ["proof (prove)\nusing this:\n  j \\<in> F I\n  I \\<in> P\n  I \\<subseteq> II\n  part J0 (F ` P)\n\ngoal (1 subgoal):\n 1. j \\<in> J0", "unfolding part_def"], ["proof (prove)\nusing this:\n  j \\<in> F I\n  I \\<in> P\n  I \\<subseteq> II\n  \\<Union> (F ` P) = J0 \\<and>\n  (\\<forall>J1 J2.\n      J1 \\<in> F ` P \\<and>\n      J2 \\<in> F ` P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n      J1 \\<inter> J2 = {})\n\ngoal (1 subgoal):\n 1. j \\<in> J0", "by auto"], ["proof (state)\nthis:\n  j \\<in> J0\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> J0 \\<Longrightarrow> x \\<in> \\<Union> (lift P F ` Q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> J0 \\<Longrightarrow> x \\<in> \\<Union> (lift P F ` Q)", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> J0 \\<Longrightarrow> x \\<in> \\<Union> (lift P F ` Q)", "assume \"j \\<in> J0\""], ["proof (state)\nthis:\n  j \\<in> J0\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> J0 \\<Longrightarrow> x \\<in> \\<Union> (lift P F ` Q)", "then"], ["proof (chain)\npicking this:\n  j \\<in> J0", "obtain J where J: \"J \\<in> F ` P\" and j: \"j \\<in> J\""], ["proof (prove)\nusing this:\n  j \\<in> J0\n\ngoal (1 subgoal):\n 1. (\\<And>J.\n        \\<lbrakk>J \\<in> F ` P; j \\<in> J\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using FP"], ["proof (prove)\nusing this:\n  j \\<in> J0\n  part J0 (F ` P)\n\ngoal (1 subgoal):\n 1. (\\<And>J.\n        \\<lbrakk>J \\<in> F ` P; j \\<in> J\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding part_def"], ["proof (prove)\nusing this:\n  j \\<in> J0\n  \\<Union> (F ` P) = J0 \\<and>\n  (\\<forall>J1 J2.\n      J1 \\<in> F ` P \\<and>\n      J2 \\<in> F ` P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n      J1 \\<inter> J2 = {})\n\ngoal (1 subgoal):\n 1. (\\<And>J.\n        \\<lbrakk>J \\<in> F ` P; j \\<in> J\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  J \\<in> F ` P\n  j \\<in> J\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> J0 \\<Longrightarrow> x \\<in> \\<Union> (lift P F ` Q)", "define I where \"I = inv_into P F J\""], ["proof (state)\nthis:\n  I = inv_into P F J\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> J0 \\<Longrightarrow> x \\<in> \\<Union> (lift P F ` Q)", "have j: \"j \\<in> F I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<in> F I", "unfolding I_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<in> F (inv_into P F J)", "using j J F"], ["proof (prove)\nusing this:\n  j \\<in> J\n  J \\<in> F ` P\n  inj_on F P\n\ngoal (1 subgoal):\n 1. j \\<in> F (inv_into P F J)", "by auto"], ["proof (state)\nthis:\n  j \\<in> F I\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> J0 \\<Longrightarrow> x \\<in> \\<Union> (lift P F ` Q)", "have I: \"I \\<in> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<in> P", "unfolding I_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_into P F J \\<in> P", "using F J"], ["proof (prove)\nusing this:\n  inj_on F P\n  J \\<in> F ` P\n\ngoal (1 subgoal):\n 1. inv_into P F J \\<in> P", "by auto"], ["proof (state)\nthis:\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> J0 \\<Longrightarrow> x \\<in> \\<Union> (lift P F ` Q)", "obtain II where \"I \\<subseteq> II\" and \"II \\<in> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>II.\n        \\<lbrakk>I \\<subseteq> II; II \\<in> Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using P Q PQ I finer_ex[of I0 P Q I]"], ["proof (prove)\nusing this:\n  part I0 P\n  part I0 Q\n  finer P Q\n  I \\<in> P\n  \\<lbrakk>part I0 P; part I0 Q; finer P Q; I \\<in> P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>II. II \\<in> Q \\<and> I \\<subseteq> II\n\ngoal (1 subgoal):\n 1. (\\<And>II.\n        \\<lbrakk>I \\<subseteq> II; II \\<in> Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  I \\<subseteq> II\n  II \\<in> Q\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> J0 \\<Longrightarrow> x \\<in> \\<Union> (lift P F ` Q)", "thus \"j \\<in> \\<Union> (lift P F ` Q)\""], ["proof (prove)\nusing this:\n  I \\<subseteq> II\n  II \\<in> Q\n\ngoal (1 subgoal):\n 1. j \\<in> \\<Union> (lift P F ` Q)", "unfolding lift_def [abs_def]"], ["proof (prove)\nusing this:\n  I \\<subseteq> II\n  II \\<in> Q\n\ngoal (1 subgoal):\n 1. j \\<in> (\\<Union>II\\<in>Q.\n                \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II})", "using j I"], ["proof (prove)\nusing this:\n  I \\<subseteq> II\n  II \\<in> Q\n  j \\<in> F I\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. j \\<in> (\\<Union>II\\<in>Q.\n                \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II})", "by auto"], ["proof (state)\nthis:\n  j \\<in> \\<Union> (lift P F ` Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Union> (lift P F ` Q) = J0\n\ngoal (1 subgoal):\n 1. \\<And>J1 J2.\n       J1 \\<in> lift P F ` Q \\<and>\n       J2 \\<in> lift P F ` Q \\<and> J1 \\<noteq> J2 \\<Longrightarrow>\n       J1 \\<inter> J2 = {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>J1 J2.\n       J1 \\<in> lift P F ` Q \\<and>\n       J2 \\<in> lift P F ` Q \\<and> J1 \\<noteq> J2 \\<Longrightarrow>\n       J1 \\<inter> J2 = {}", "fix JJ1 JJ2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>J1 J2.\n       J1 \\<in> lift P F ` Q \\<and>\n       J2 \\<in> lift P F ` Q \\<and> J1 \\<noteq> J2 \\<Longrightarrow>\n       J1 \\<inter> J2 = {}", "assume JJ12: \"JJ1 \\<in> lift P F ` Q \\<and> JJ2 \\<in> lift P F ` Q \\<and> JJ1 \\<noteq> JJ2\""], ["proof (state)\nthis:\n  JJ1 \\<in> lift P F ` Q \\<and>\n  JJ2 \\<in> lift P F ` Q \\<and> JJ1 \\<noteq> JJ2\n\ngoal (1 subgoal):\n 1. \\<And>J1 J2.\n       J1 \\<in> lift P F ` Q \\<and>\n       J2 \\<in> lift P F ` Q \\<and> J1 \\<noteq> J2 \\<Longrightarrow>\n       J1 \\<inter> J2 = {}", "then"], ["proof (chain)\npicking this:\n  JJ1 \\<in> lift P F ` Q \\<and>\n  JJ2 \\<in> lift P F ` Q \\<and> JJ1 \\<noteq> JJ2", "obtain II1 II2 where II12: \"{II1,II2} \\<subseteq> Q\" and JJ1: \"JJ1 = lift P F II1\"\n  and JJ2: \"JJ2 = lift P F II2\""], ["proof (prove)\nusing this:\n  JJ1 \\<in> lift P F ` Q \\<and>\n  JJ2 \\<in> lift P F ` Q \\<and> JJ1 \\<noteq> JJ2\n\ngoal (1 subgoal):\n 1. (\\<And>II1 II2.\n        \\<lbrakk>{II1, II2} \\<subseteq> Q; JJ1 = lift P F II1;\n         JJ2 = lift P F II2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  {II1, II2} \\<subseteq> Q\n  JJ1 = lift P F II1\n  JJ2 = lift P F II2\n\ngoal (1 subgoal):\n 1. \\<And>J1 J2.\n       J1 \\<in> lift P F ` Q \\<and>\n       J2 \\<in> lift P F ` Q \\<and> J1 \\<noteq> J2 \\<Longrightarrow>\n       J1 \\<inter> J2 = {}", "have \"II1 \\<noteq> II2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. II1 \\<noteq> II2", "using JJ12"], ["proof (prove)\nusing this:\n  JJ1 \\<in> lift P F ` Q \\<and>\n  JJ2 \\<in> lift P F ` Q \\<and> JJ1 \\<noteq> JJ2\n\ngoal (1 subgoal):\n 1. II1 \\<noteq> II2", "unfolding JJ1 JJ2"], ["proof (prove)\nusing this:\n  lift P F II1 \\<in> lift P F ` Q \\<and>\n  lift P F II2 \\<in> lift P F ` Q \\<and> lift P F II1 \\<noteq> lift P F II2\n\ngoal (1 subgoal):\n 1. II1 \\<noteq> II2", "using II12 assms"], ["proof (prove)\nusing this:\n  lift P F II1 \\<in> lift P F ` Q \\<and>\n  lift P F II2 \\<in> lift P F ` Q \\<and> lift P F II1 \\<noteq> lift P F II2\n  {II1, II2} \\<subseteq> Q\n  part I0 P\n  part I0 Q\n  finer P Q\n  inj_on F P\n  part J0 (F ` P)\n  {} \\<notin> P\n  {} \\<notin> F ` P\n\ngoal (1 subgoal):\n 1. II1 \\<noteq> II2", "using inj_on_lift[of I0 P Q F]"], ["proof (prove)\nusing this:\n  lift P F II1 \\<in> lift P F ` Q \\<and>\n  lift P F II2 \\<in> lift P F ` Q \\<and> lift P F II1 \\<noteq> lift P F II2\n  {II1, II2} \\<subseteq> Q\n  part I0 P\n  part I0 Q\n  finer P Q\n  inj_on F P\n  part J0 (F ` P)\n  {} \\<notin> P\n  {} \\<notin> F ` P\n  \\<lbrakk>part I0 P; part I0 Q; finer P Q; inj_on F P; part ?J0.0 (F ` P);\n   {} \\<notin> F ` P\\<rbrakk>\n  \\<Longrightarrow> inj_on (lift P F) Q\n\ngoal (1 subgoal):\n 1. II1 \\<noteq> II2", "by auto"], ["proof (state)\nthis:\n  II1 \\<noteq> II2\n\ngoal (1 subgoal):\n 1. \\<And>J1 J2.\n       J1 \\<in> lift P F ` Q \\<and>\n       J2 \\<in> lift P F ` Q \\<and> J1 \\<noteq> J2 \\<Longrightarrow>\n       J1 \\<inter> J2 = {}", "hence 4: \"II1 Int II2 = {}\""], ["proof (prove)\nusing this:\n  II1 \\<noteq> II2\n\ngoal (1 subgoal):\n 1. II1 \\<inter> II2 = {}", "using II12 Q"], ["proof (prove)\nusing this:\n  II1 \\<noteq> II2\n  {II1, II2} \\<subseteq> Q\n  part I0 Q\n\ngoal (1 subgoal):\n 1. II1 \\<inter> II2 = {}", "unfolding part_def"], ["proof (prove)\nusing this:\n  II1 \\<noteq> II2\n  {II1, II2} \\<subseteq> Q\n  \\<Union> Q = I0 \\<and>\n  (\\<forall>J1 J2.\n      J1 \\<in> Q \\<and> J2 \\<in> Q \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n      J1 \\<inter> J2 = {})\n\ngoal (1 subgoal):\n 1. II1 \\<inter> II2 = {}", "by auto"], ["proof (state)\nthis:\n  II1 \\<inter> II2 = {}\n\ngoal (1 subgoal):\n 1. \\<And>J1 J2.\n       J1 \\<in> lift P F ` Q \\<and>\n       J2 \\<in> lift P F ` Q \\<and> J1 \\<noteq> J2 \\<Longrightarrow>\n       J1 \\<inter> J2 = {}", "show \"JJ1 \\<inter> JJ2 = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. JJ1 \\<inter> JJ2 = {}", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. JJ1 \\<inter> JJ2 \\<noteq> {} \\<Longrightarrow> False", "assume \"JJ1 \\<inter> JJ2 \\<noteq> {}\""], ["proof (state)\nthis:\n  JJ1 \\<inter> JJ2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. JJ1 \\<inter> JJ2 \\<noteq> {} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  JJ1 \\<inter> JJ2 \\<noteq> {}", "obtain j where j: \"j \\<in> JJ1\" \"j \\<in> JJ2\""], ["proof (prove)\nusing this:\n  JJ1 \\<inter> JJ2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>j \\<in> JJ1; j \\<in> JJ2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  j \\<in> JJ1\n  j \\<in> JJ2\n\ngoal (1 subgoal):\n 1. JJ1 \\<inter> JJ2 \\<noteq> {} \\<Longrightarrow> False", "from j"], ["proof (chain)\npicking this:\n  j \\<in> JJ1\n  j \\<in> JJ2", "obtain I1 where \"j \\<in> F I1\" and I1: \"I1 \\<in> P\" \"I1 \\<subseteq> II1\""], ["proof (prove)\nusing this:\n  j \\<in> JJ1\n  j \\<in> JJ2\n\ngoal (1 subgoal):\n 1. (\\<And>I1.\n        \\<lbrakk>j \\<in> F I1; I1 \\<in> P; I1 \\<subseteq> II1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding JJ1 lift_def [abs_def]"], ["proof (prove)\nusing this:\n  j \\<in> \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II1}\n  j \\<in> JJ2\n\ngoal (1 subgoal):\n 1. (\\<And>I1.\n        \\<lbrakk>j \\<in> F I1; I1 \\<in> P; I1 \\<subseteq> II1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  j \\<in> F I1\n  I1 \\<in> P\n  I1 \\<subseteq> II1\n\ngoal (1 subgoal):\n 1. JJ1 \\<inter> JJ2 \\<noteq> {} \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  j \\<in> F I1\n  I1 \\<in> P\n  I1 \\<subseteq> II1\n\ngoal (1 subgoal):\n 1. JJ1 \\<inter> JJ2 \\<noteq> {} \\<Longrightarrow> False", "from j"], ["proof (chain)\npicking this:\n  j \\<in> JJ1\n  j \\<in> JJ2", "obtain I2 where \"j \\<in> F I2\" and I2: \"I2 \\<in> P\" \"I2 \\<subseteq> II2\""], ["proof (prove)\nusing this:\n  j \\<in> JJ1\n  j \\<in> JJ2\n\ngoal (1 subgoal):\n 1. (\\<And>I2.\n        \\<lbrakk>j \\<in> F I2; I2 \\<in> P; I2 \\<subseteq> II2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding JJ2 lift_def [abs_def]"], ["proof (prove)\nusing this:\n  j \\<in> JJ1\n  j \\<in> \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II2}\n\ngoal (1 subgoal):\n 1. (\\<And>I2.\n        \\<lbrakk>j \\<in> F I2; I2 \\<in> P; I2 \\<subseteq> II2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  j \\<in> F I2\n  I2 \\<in> P\n  I2 \\<subseteq> II2\n\ngoal (1 subgoal):\n 1. JJ1 \\<inter> JJ2 \\<noteq> {} \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  j \\<in> F I1\n  I1 \\<in> P\n  I1 \\<subseteq> II1\n  j \\<in> F I2\n  I2 \\<in> P\n  I2 \\<subseteq> II2", "have \"F I1 Int F I2 \\<noteq> {}\""], ["proof (prove)\nusing this:\n  j \\<in> F I1\n  I1 \\<in> P\n  I1 \\<subseteq> II1\n  j \\<in> F I2\n  I2 \\<in> P\n  I2 \\<subseteq> II2\n\ngoal (1 subgoal):\n 1. F I1 \\<inter> F I2 \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  F I1 \\<inter> F I2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. JJ1 \\<inter> JJ2 \\<noteq> {} \\<Longrightarrow> False", "hence \"F I1 = F I2\""], ["proof (prove)\nusing this:\n  F I1 \\<inter> F I2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. F I1 = F I2", "using I1 I2 FP"], ["proof (prove)\nusing this:\n  F I1 \\<inter> F I2 \\<noteq> {}\n  I1 \\<in> P\n  I1 \\<subseteq> II1\n  I2 \\<in> P\n  I2 \\<subseteq> II2\n  part J0 (F ` P)\n\ngoal (1 subgoal):\n 1. F I1 = F I2", "unfolding part_def"], ["proof (prove)\nusing this:\n  F I1 \\<inter> F I2 \\<noteq> {}\n  I1 \\<in> P\n  I1 \\<subseteq> II1\n  I2 \\<in> P\n  I2 \\<subseteq> II2\n  \\<Union> (F ` P) = J0 \\<and>\n  (\\<forall>J1 J2.\n      J1 \\<in> F ` P \\<and>\n      J2 \\<in> F ` P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n      J1 \\<inter> J2 = {})\n\ngoal (1 subgoal):\n 1. F I1 = F I2", "by blast"], ["proof (state)\nthis:\n  F I1 = F I2\n\ngoal (1 subgoal):\n 1. JJ1 \\<inter> JJ2 \\<noteq> {} \\<Longrightarrow> False", "hence \"I1 = I2\""], ["proof (prove)\nusing this:\n  F I1 = F I2\n\ngoal (1 subgoal):\n 1. I1 = I2", "using I1 I2 F"], ["proof (prove)\nusing this:\n  F I1 = F I2\n  I1 \\<in> P\n  I1 \\<subseteq> II1\n  I2 \\<in> P\n  I2 \\<subseteq> II2\n  inj_on F P\n\ngoal (1 subgoal):\n 1. I1 = I2", "unfolding inj_on_def"], ["proof (prove)\nusing this:\n  F I1 = F I2\n  I1 \\<in> P\n  I1 \\<subseteq> II1\n  I2 \\<in> P\n  I2 \\<subseteq> II2\n  \\<forall>x\\<in>P. \\<forall>y\\<in>P. F x = F y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. I1 = I2", "by auto"], ["proof (state)\nthis:\n  I1 = I2\n\ngoal (1 subgoal):\n 1. JJ1 \\<inter> JJ2 \\<noteq> {} \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  I1 = I2\n\ngoal (1 subgoal):\n 1. JJ1 \\<inter> JJ2 \\<noteq> {} \\<Longrightarrow> False", "have \"I1 \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I1 \\<noteq> {}", "using I1 emp"], ["proof (prove)\nusing this:\n  I1 \\<in> P\n  I1 \\<subseteq> II1\n  {} \\<notin> P\n  {} \\<notin> F ` P\n\ngoal (1 subgoal):\n 1. I1 \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  I1 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. JJ1 \\<inter> JJ2 \\<noteq> {} \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  I1 = I2\n  I1 \\<noteq> {}", "have \"II1 Int II2 \\<noteq> {}\""], ["proof (prove)\nusing this:\n  I1 = I2\n  I1 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. II1 \\<inter> II2 \\<noteq> {}", "using I1 I2"], ["proof (prove)\nusing this:\n  I1 = I2\n  I1 \\<noteq> {}\n  I1 \\<in> P\n  I1 \\<subseteq> II1\n  I2 \\<in> P\n  I2 \\<subseteq> II2\n\ngoal (1 subgoal):\n 1. II1 \\<inter> II2 \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  II1 \\<inter> II2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. JJ1 \\<inter> JJ2 \\<noteq> {} \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  II1 \\<inter> II2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. False", "using 4"], ["proof (prove)\nusing this:\n  II1 \\<inter> II2 \\<noteq> {}\n  II1 \\<inter> II2 = {}\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  JJ1 \\<inter> JJ2 = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finer_lift:\nassumes \"finer P Q\"\nshows \"finer (F ` P) (lift P F ` Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finer (F ` P) (lift P F ` Q)", "unfolding finer_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>J\\<in>lift P F ` Q.\n        J = \\<Union> {I \\<in> F ` P. I \\<subseteq> J}) \\<and>\n    (F ` P \\<noteq> {} \\<longrightarrow> lift P F ` Q \\<noteq> {})", "proof (intro conjI ballI impI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>J.\n       J \\<in> lift P F ` Q \\<Longrightarrow>\n       J = \\<Union> {I \\<in> F ` P. I \\<subseteq> J}\n 2. F ` P \\<noteq> {} \\<Longrightarrow> lift P F ` Q \\<noteq> {}", "fix JJ"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>J.\n       J \\<in> lift P F ` Q \\<Longrightarrow>\n       J = \\<Union> {I \\<in> F ` P. I \\<subseteq> J}\n 2. F ` P \\<noteq> {} \\<Longrightarrow> lift P F ` Q \\<noteq> {}", "assume JJ: \"JJ \\<in> lift P F ` Q\""], ["proof (state)\nthis:\n  JJ \\<in> lift P F ` Q\n\ngoal (2 subgoals):\n 1. \\<And>J.\n       J \\<in> lift P F ` Q \\<Longrightarrow>\n       J = \\<Union> {I \\<in> F ` P. I \\<subseteq> J}\n 2. F ` P \\<noteq> {} \\<Longrightarrow> lift P F ` Q \\<noteq> {}", "show \"JJ = \\<Union> {J \\<in> F ` P. J \\<subseteq> JJ}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. JJ = \\<Union> {J \\<in> F ` P. J \\<subseteq> JJ}", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> JJ \\<Longrightarrow>\n       x \\<in> \\<Union> {J \\<in> F ` P. J \\<subseteq> JJ}\n 2. \\<And>x X xa.\n       \\<lbrakk>x \\<in> F xa; F xa \\<subseteq> JJ; xa \\<in> P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> JJ", "fix j"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> JJ \\<Longrightarrow>\n       x \\<in> \\<Union> {J \\<in> F ` P. J \\<subseteq> JJ}\n 2. \\<And>x X xa.\n       \\<lbrakk>x \\<in> F xa; F xa \\<subseteq> JJ; xa \\<in> P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> JJ", "assume j: \"j \\<in> JJ\""], ["proof (state)\nthis:\n  j \\<in> JJ\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> JJ \\<Longrightarrow>\n       x \\<in> \\<Union> {J \\<in> F ` P. J \\<subseteq> JJ}\n 2. \\<And>x X xa.\n       \\<lbrakk>x \\<in> F xa; F xa \\<subseteq> JJ; xa \\<in> P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> JJ", "obtain II where II: \"II \\<in> Q\" and JJ: \"JJ = lift P F II\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>II.\n        \\<lbrakk>II \\<in> Q; JJ = lift P F II\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using JJ"], ["proof (prove)\nusing this:\n  JJ \\<in> lift P F ` Q\n\ngoal (1 subgoal):\n 1. (\\<And>II.\n        \\<lbrakk>II \\<in> Q; JJ = lift P F II\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  II \\<in> Q\n  JJ = lift P F II\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> JJ \\<Longrightarrow>\n       x \\<in> \\<Union> {J \\<in> F ` P. J \\<subseteq> JJ}\n 2. \\<And>x X xa.\n       \\<lbrakk>x \\<in> F xa; F xa \\<subseteq> JJ; xa \\<in> P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> JJ", "then"], ["proof (chain)\npicking this:\n  II \\<in> Q\n  JJ = lift P F II", "obtain I where j: \"j \\<in> F I\" and I: \"I \\<in> P \\<and> I \\<subseteq> II\" and \"F I \\<subseteq> JJ\""], ["proof (prove)\nusing this:\n  II \\<in> Q\n  JJ = lift P F II\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>j \\<in> F I; I \\<in> P \\<and> I \\<subseteq> II;\n         F I \\<subseteq> JJ\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using j"], ["proof (prove)\nusing this:\n  II \\<in> Q\n  JJ = lift P F II\n  j \\<in> JJ\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>j \\<in> F I; I \\<in> P \\<and> I \\<subseteq> II;\n         F I \\<subseteq> JJ\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding lift_def [abs_def]"], ["proof (prove)\nusing this:\n  II \\<in> Q\n  JJ = \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II}\n  j \\<in> JJ\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>j \\<in> F I; I \\<in> P \\<and> I \\<subseteq> II;\n         F I \\<subseteq> JJ\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  j \\<in> F I\n  I \\<in> P \\<and> I \\<subseteq> II\n  F I \\<subseteq> JJ\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> JJ \\<Longrightarrow>\n       x \\<in> \\<Union> {J \\<in> F ` P. J \\<subseteq> JJ}\n 2. \\<And>x X xa.\n       \\<lbrakk>x \\<in> F xa; F xa \\<subseteq> JJ; xa \\<in> P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> JJ", "thus \"j \\<in> \\<Union>{J \\<in> F ` P. J \\<subseteq> JJ}\""], ["proof (prove)\nusing this:\n  j \\<in> F I\n  I \\<in> P \\<and> I \\<subseteq> II\n  F I \\<subseteq> JJ\n\ngoal (1 subgoal):\n 1. j \\<in> \\<Union> {J \\<in> F ` P. J \\<subseteq> JJ}", "using I j"], ["proof (prove)\nusing this:\n  j \\<in> F I\n  I \\<in> P \\<and> I \\<subseteq> II\n  F I \\<subseteq> JJ\n  I \\<in> P \\<and> I \\<subseteq> II\n  j \\<in> F I\n\ngoal (1 subgoal):\n 1. j \\<in> \\<Union> {J \\<in> F ` P. J \\<subseteq> JJ}", "by auto"], ["proof (state)\nthis:\n  j \\<in> \\<Union> {J \\<in> F ` P. J \\<subseteq> JJ}\n\ngoal (1 subgoal):\n 1. \\<And>x X xa.\n       \\<lbrakk>x \\<in> F xa; F xa \\<subseteq> JJ; xa \\<in> P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> JJ", "qed auto"], ["proof (state)\nthis:\n  JJ = \\<Union> {J \\<in> F ` P. J \\<subseteq> JJ}\n\ngoal (1 subgoal):\n 1. F ` P \\<noteq> {} \\<Longrightarrow> lift P F ` Q \\<noteq> {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. F ` P \\<noteq> {} \\<Longrightarrow> lift P F ` Q \\<noteq> {}", "assume \"F ` P \\<noteq> {}\""], ["proof (state)\nthis:\n  F ` P \\<noteq> {}\n\ngoal (1 subgoal):\n 1. F ` P \\<noteq> {} \\<Longrightarrow> lift P F ` Q \\<noteq> {}", "thus \"lift P F ` Q \\<noteq> {}\""], ["proof (prove)\nusing this:\n  F ` P \\<noteq> {}\n\ngoal (1 subgoal):\n 1. lift P F ` Q \\<noteq> {}", "using assms"], ["proof (prove)\nusing this:\n  F ` P \\<noteq> {}\n  finer P Q\n\ngoal (1 subgoal):\n 1. lift P F ` Q \\<noteq> {}", "unfolding lift_def [abs_def] finer_def"], ["proof (prove)\nusing this:\n  F ` P \\<noteq> {}\n  (\\<forall>J\\<in>Q. J = \\<Union> {I \\<in> P. I \\<subseteq> J}) \\<and>\n  (P \\<noteq> {} \\<longrightarrow> Q \\<noteq> {})\n\ngoal (1 subgoal):\n 1. (\\<lambda>II. \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II}) `\n    Q \\<noteq>\n    {}", "by simp"], ["proof (state)\nthis:\n  lift P F ` Q \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Basic setting for bisimilarity\\<close>"], ["", "locale PL_Indis =\n  PL aval tval cval\n  for aval :: \"'atom \\<Rightarrow> 'state \\<Rightarrow> 'state\" and\n      tval :: \"'test \\<Rightarrow> 'state \\<Rightarrow> bool\" and\n      cval :: \"'choice \\<Rightarrow> 'state \\<Rightarrow> real\" +\n  fixes\n    indis :: \"'state rel\"\n  assumes\n    equiv_indis: \"equiv UNIV indis\""], ["", "(*******************************************)"], ["", "context PL_Indis\nbegin"], ["", "abbreviation indisAbbrev (infix \"\\<approx>\" 50)\nwhere \"s1 \\<approx> s2 \\<equiv> (s1, s2) \\<in> indis\""], ["", "lemma refl_indis: \"refl indis\"\nand trans_indis: \"trans indis\"\nand sym_indis: \"sym indis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl indis &&& trans indis &&& sym indis", "using equiv_indis"], ["proof (prove)\nusing this:\n  equiv UNIV indis\n\ngoal (1 subgoal):\n 1. refl indis &&& trans indis &&& sym indis", "unfolding equiv_def"], ["proof (prove)\nusing this:\n  refl indis \\<and> sym indis \\<and> trans indis\n\ngoal (1 subgoal):\n 1. refl indis &&& trans indis &&& sym indis", "by auto"], ["", "lemma indis_refl[intro]: \"s \\<approx> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> s", "using refl_indis"], ["proof (prove)\nusing this:\n  refl indis\n\ngoal (1 subgoal):\n 1. s \\<approx> s", "unfolding refl_on_def"], ["proof (prove)\nusing this:\n  indis \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. x \\<approx> x)\n\ngoal (1 subgoal):\n 1. s \\<approx> s", "by simp"], ["", "lemma indis_trans[trans]: \"\\<lbrakk>s \\<approx> s'; s' \\<approx> s''\\<rbrakk> \\<Longrightarrow> s \\<approx> s''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<approx> s'; s' \\<approx> s''\\<rbrakk>\n    \\<Longrightarrow> s \\<approx> s''", "using trans_indis"], ["proof (prove)\nusing this:\n  trans indis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<approx> s'; s' \\<approx> s''\\<rbrakk>\n    \\<Longrightarrow> s \\<approx> s''", "unfolding trans_def"], ["proof (prove)\nusing this:\n  \\<forall>x y z.\n     x \\<approx> y \\<longrightarrow>\n     y \\<approx> z \\<longrightarrow> x \\<approx> z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<approx> s'; s' \\<approx> s''\\<rbrakk>\n    \\<Longrightarrow> s \\<approx> s''", "by blast"], ["", "lemma indis_sym[sym]: \"s \\<approx> s' \\<Longrightarrow> s' \\<approx> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> s' \\<Longrightarrow> s' \\<approx> s", "using sym_indis"], ["proof (prove)\nusing this:\n  sym indis\n\ngoal (1 subgoal):\n 1. s \\<approx> s' \\<Longrightarrow> s' \\<approx> s", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<approx> y \\<longrightarrow> y \\<approx> x\n\ngoal (1 subgoal):\n 1. s \\<approx> s' \\<Longrightarrow> s' \\<approx> s", "by blast"], ["", "subsection\\<open>Discreetness\\<close>"], ["", "coinductive discr where\nintro:\n\"(\\<And> s i. i < brn c \\<longrightarrow> s \\<approx> eff c s i \\<and> discr (cont c s i))\n \\<Longrightarrow> discr c\""], ["", "definition discrL where\n\"discrL cl \\<equiv> \\<forall> c \\<in> set cl. discr c\""], ["", "lemma discrL_intro[intro]:\nassumes \"\\<And> c. c \\<in> set cl \\<Longrightarrow> discr c\"\nshows \"discrL cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discrL cl", "using assms"], ["proof (prove)\nusing this:\n  ?c \\<in> set cl \\<Longrightarrow> discr ?c\n\ngoal (1 subgoal):\n 1. discrL cl", "unfolding discrL_def"], ["proof (prove)\nusing this:\n  ?c \\<in> set cl \\<Longrightarrow> discr ?c\n\ngoal (1 subgoal):\n 1. Ball (set cl) discr", "by auto"], ["", "lemma discrL_discr[simp]:\nassumes \"discrL cl\" and \"c \\<in> set cl\"\nshows \"discr c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discr c", "using assms"], ["proof (prove)\nusing this:\n  discrL cl\n  c \\<in> set cl\n\ngoal (1 subgoal):\n 1. discr c", "unfolding discrL_def"], ["proof (prove)\nusing this:\n  Ball (set cl) discr\n  c \\<in> set cl\n\ngoal (1 subgoal):\n 1. discr c", "by simp"], ["", "lemma discrL_update[simp]:\nassumes cl: \"discrL cl\" and c': \"discr c'\"\nshows \"discrL (cl[n := c'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discrL (cl[n := c'])", "proof(cases \"n < length cl\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n < length cl \\<Longrightarrow> discrL (cl[n := c'])\n 2. \\<not> n < length cl \\<Longrightarrow> discrL (cl[n := c'])", "case True"], ["proof (state)\nthis:\n  n < length cl\n\ngoal (2 subgoals):\n 1. n < length cl \\<Longrightarrow> discrL (cl[n := c'])\n 2. \\<not> n < length cl \\<Longrightarrow> discrL (cl[n := c'])", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. discrL (cl[n := c'])", "unfolding discrL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ball (set (cl[n := c'])) discr", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> set (cl[n := c']) \\<Longrightarrow> discr c", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> set (cl[n := c']) \\<Longrightarrow> discr c", "assume \"c \\<in> set (cl[n := c'])\""], ["proof (state)\nthis:\n  c \\<in> set (cl[n := c'])\n\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> set (cl[n := c']) \\<Longrightarrow> discr c", "hence \"c \\<in> insert c' (set cl)\""], ["proof (prove)\nusing this:\n  c \\<in> set (cl[n := c'])\n\ngoal (1 subgoal):\n 1. c \\<in> insert c' (set cl)", "using set_update_subset_insert"], ["proof (prove)\nusing this:\n  c \\<in> set (cl[n := c'])\n  set (?xs[?i := ?x]) \\<subseteq> insert ?x (set ?xs)\n\ngoal (1 subgoal):\n 1. c \\<in> insert c' (set cl)", "by fastforce"], ["proof (state)\nthis:\n  c \\<in> insert c' (set cl)\n\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> set (cl[n := c']) \\<Longrightarrow> discr c", "thus \"discr c\""], ["proof (prove)\nusing this:\n  c \\<in> insert c' (set cl)\n\ngoal (1 subgoal):\n 1. discr c", "using assms"], ["proof (prove)\nusing this:\n  c \\<in> insert c' (set cl)\n  discrL cl\n  discr c'\n\ngoal (1 subgoal):\n 1. discr c", "by (cases \"c = c'\") auto"], ["proof (state)\nthis:\n  discr c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  discrL (cl[n := c'])\n\ngoal (1 subgoal):\n 1. \\<not> n < length cl \\<Longrightarrow> discrL (cl[n := c'])", "qed (insert cl, auto)"], ["", "text\\<open>Coinduction for discreetness:\\<close>"], ["", "lemma discr_coind[consumes 1, case_names Hyp, induct pred: discr]:\nassumes *: \"phi c\" and\n**: \"\\<And> c s i. \\<lbrakk> phi c ; i < brn c\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> eff c s i \\<and> (phi (cont c s i) \\<or> discr (cont c s i))\"\nshows \"discr c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discr c", "using *"], ["proof (prove)\nusing this:\n  phi c\n\ngoal (1 subgoal):\n 1. discr c", "apply(induct rule: discr.coinduct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       phi x \\<Longrightarrow>\n       \\<exists>c.\n          x = c \\<and>\n          (\\<forall>x xa.\n              xa < brn c \\<longrightarrow>\n              x \\<approx> eff c x xa \\<and>\n              (phi (local.cont c x xa) \\<or> discr (local.cont c x xa)))", "using **"], ["proof (prove)\nusing this:\n  \\<lbrakk>phi ?c; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> ?s \\<approx> eff ?c ?s ?i \\<and>\n                    (phi (local.cont ?c ?s ?i) \\<or>\n                     discr (local.cont ?c ?s ?i))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       phi x \\<Longrightarrow>\n       \\<exists>c.\n          x = c \\<and>\n          (\\<forall>x xa.\n              xa < brn c \\<longrightarrow>\n              x \\<approx> eff c x xa \\<and>\n              (phi (local.cont c x xa) \\<or> discr (local.cont c x xa)))", "by auto"], ["", "lemma discr_raw_coind[consumes 1, case_names Hyp]:\nassumes *: \"phi c\" and\n**: \"\\<And> c s i. \\<lbrakk>i < brn c; phi c\\<rbrakk> \\<Longrightarrow> s \\<approx> eff c s i \\<and> phi (cont c s i)\"\nshows \"discr c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discr c", "using *"], ["proof (prove)\nusing this:\n  phi c\n\ngoal (1 subgoal):\n 1. discr c", "apply(induct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c s i.\n       \\<lbrakk>phi c; i < brn c\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> eff c s i \\<and>\n                         (phi (local.cont c s i) \\<or>\n                          discr (local.cont c s i))", "using **"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i < brn ?c; phi ?c\\<rbrakk>\n  \\<Longrightarrow> ?s \\<approx> eff ?c ?s ?i \\<and>\n                    phi (local.cont ?c ?s ?i)\n\ngoal (1 subgoal):\n 1. \\<And>c s i.\n       \\<lbrakk>phi c; i < brn c\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> eff c s i \\<and>\n                         (phi (local.cont c s i) \\<or>\n                          discr (local.cont c s i))", "by blast"], ["", "text\\<open>Discreetness versus transition:\\<close>"], ["", "lemma discr_cont[simp]:\nassumes *: \"discr c\" and **: \"i < brn c\"\nshows \"discr (cont c s i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discr (local.cont c s i)", "using *"], ["proof (prove)\nusing this:\n  discr c\n\ngoal (1 subgoal):\n 1. discr (local.cont c s i)", "apply(cases rule: discr.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s i.\n        i < brn c \\<longrightarrow>\n        s \\<approx> eff c s i \\<and>\n        discr (local.cont c s i)) \\<Longrightarrow>\n    discr (local.cont c s i)", "using **"], ["proof (prove)\nusing this:\n  i < brn c\n\ngoal (1 subgoal):\n 1. (\\<And>s i.\n        i < brn c \\<longrightarrow>\n        s \\<approx> eff c s i \\<and>\n        discr (local.cont c s i)) \\<Longrightarrow>\n    discr (local.cont c s i)", "by blast"], ["", "lemma discr_eff_indis[simp]:\nassumes *: \"discr c\" and **: \"i < brn c\"\nshows \"s \\<approx> eff c s i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> eff c s i", "using *"], ["proof (prove)\nusing this:\n  discr c\n\ngoal (1 subgoal):\n 1. s \\<approx> eff c s i", "apply(cases rule: discr.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s i.\n        i < brn c \\<longrightarrow>\n        s \\<approx> eff c s i \\<and>\n        discr (local.cont c s i)) \\<Longrightarrow>\n    s \\<approx> eff c s i", "using **"], ["proof (prove)\nusing this:\n  i < brn c\n\ngoal (1 subgoal):\n 1. (\\<And>s i.\n        i < brn c \\<longrightarrow>\n        s \\<approx> eff c s i \\<and>\n        discr (local.cont c s i)) \\<Longrightarrow>\n    s \\<approx> eff c s i", "by blast"], ["", "subsection\\<open>Self-isomorphism\\<close>"], ["", "coinductive siso where\nintro:\n\"\\<lbrakk>\\<And> s i. i < brn c \\<Longrightarrow> siso (cont c s i);\n  \\<And> s t i.\n     i < brn c \\<and> s \\<approx> t \\<Longrightarrow>\n     eff c s i \\<approx> eff c t i \\<and> wt c s i = wt c t i \\<and> cont c s i = cont c t i\\<rbrakk>\n  \\<Longrightarrow> siso c\""], ["", "definition sisoL where\n\"sisoL cl \\<equiv> \\<forall> c \\<in> set cl. siso c\""], ["", "lemma sisoL_intro[intro]:\nassumes \"\\<And> c. c \\<in> set cl \\<Longrightarrow> siso c\"\nshows \"sisoL cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sisoL cl", "using assms"], ["proof (prove)\nusing this:\n  ?c \\<in> set cl \\<Longrightarrow> siso ?c\n\ngoal (1 subgoal):\n 1. sisoL cl", "unfolding sisoL_def"], ["proof (prove)\nusing this:\n  ?c \\<in> set cl \\<Longrightarrow> siso ?c\n\ngoal (1 subgoal):\n 1. Ball (set cl) siso", "by auto"], ["", "lemma sisoL_siso[simp]:\nassumes \"sisoL cl\" and \"c \\<in> set cl\"\nshows \"siso c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. siso c", "using assms"], ["proof (prove)\nusing this:\n  sisoL cl\n  c \\<in> set cl\n\ngoal (1 subgoal):\n 1. siso c", "unfolding sisoL_def"], ["proof (prove)\nusing this:\n  Ball (set cl) siso\n  c \\<in> set cl\n\ngoal (1 subgoal):\n 1. siso c", "by simp"], ["", "lemma sisoL_update[simp]:\nassumes cl: \"sisoL cl\" and c': \"siso c'\"\nshows \"sisoL (cl[n := c'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sisoL (cl[n := c'])", "proof(cases \"n < length cl\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n < length cl \\<Longrightarrow> sisoL (cl[n := c'])\n 2. \\<not> n < length cl \\<Longrightarrow> sisoL (cl[n := c'])", "case True"], ["proof (state)\nthis:\n  n < length cl\n\ngoal (2 subgoals):\n 1. n < length cl \\<Longrightarrow> sisoL (cl[n := c'])\n 2. \\<not> n < length cl \\<Longrightarrow> sisoL (cl[n := c'])", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sisoL (cl[n := c'])", "unfolding sisoL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ball (set (cl[n := c'])) siso", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> set (cl[n := c']) \\<Longrightarrow> siso c", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> set (cl[n := c']) \\<Longrightarrow> siso c", "assume \"c \\<in> set (cl[n := c'])\""], ["proof (state)\nthis:\n  c \\<in> set (cl[n := c'])\n\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> set (cl[n := c']) \\<Longrightarrow> siso c", "hence \"c \\<in> insert c' (set cl)\""], ["proof (prove)\nusing this:\n  c \\<in> set (cl[n := c'])\n\ngoal (1 subgoal):\n 1. c \\<in> insert c' (set cl)", "using set_update_subset_insert"], ["proof (prove)\nusing this:\n  c \\<in> set (cl[n := c'])\n  set (?xs[?i := ?x]) \\<subseteq> insert ?x (set ?xs)\n\ngoal (1 subgoal):\n 1. c \\<in> insert c' (set cl)", "by fastforce"], ["proof (state)\nthis:\n  c \\<in> insert c' (set cl)\n\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> set (cl[n := c']) \\<Longrightarrow> siso c", "thus \"siso c\""], ["proof (prove)\nusing this:\n  c \\<in> insert c' (set cl)\n\ngoal (1 subgoal):\n 1. siso c", "using assms"], ["proof (prove)\nusing this:\n  c \\<in> insert c' (set cl)\n  sisoL cl\n  siso c'\n\ngoal (1 subgoal):\n 1. siso c", "by (cases \"c = c'\") auto"], ["proof (state)\nthis:\n  siso c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sisoL (cl[n := c'])\n\ngoal (1 subgoal):\n 1. \\<not> n < length cl \\<Longrightarrow> sisoL (cl[n := c'])", "qed (insert cl, auto)"], ["", "text\\<open>Coinduction for self-isomorphism:\\<close>"], ["", "lemma siso_coind[consumes 1, case_names Obs Cont, induct pred: siso]:\nassumes *: \"phi c\" and\n**: \"\\<And> c s t i. \\<lbrakk>i < brn c; phi c; s \\<approx> t\\<rbrakk> \\<Longrightarrow>\n                 eff c s i \\<approx> eff c t i \\<and> wt c s i = wt c t i \\<and> cont c s i = cont c t i\" and\n***: \"\\<And> c s i. \\<lbrakk>i < brn c; phi c\\<rbrakk> \\<Longrightarrow> phi (cont c s i) \\<or> siso (cont c s i)\"\nshows \"siso c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. siso c", "using *"], ["proof (prove)\nusing this:\n  phi c\n\ngoal (1 subgoal):\n 1. siso c", "apply(induct rule: siso.coinduct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       phi x \\<Longrightarrow>\n       \\<exists>c.\n          x = c \\<and>\n          (\\<forall>x xa.\n              xa < brn c \\<longrightarrow>\n              phi (local.cont c x xa) \\<or> siso (local.cont c x xa)) \\<and>\n          (\\<forall>x xa xb.\n              xb < brn c \\<and> x \\<approx> xa \\<longrightarrow>\n              eff c x xb \\<approx> eff c xa xb \\<and>\n              wt c x xb = wt c xa xb \\<and>\n              local.cont c x xb = local.cont c xa xb)", "using ** ***"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i < brn ?c; phi ?c; ?s \\<approx> ?t\\<rbrakk>\n  \\<Longrightarrow> eff ?c ?s ?i \\<approx> eff ?c ?t ?i \\<and>\n                    wt ?c ?s ?i = wt ?c ?t ?i \\<and>\n                    local.cont ?c ?s ?i = local.cont ?c ?t ?i\n  \\<lbrakk>?i < brn ?c; phi ?c\\<rbrakk>\n  \\<Longrightarrow> phi (local.cont ?c ?s ?i) \\<or>\n                    siso (local.cont ?c ?s ?i)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       phi x \\<Longrightarrow>\n       \\<exists>c.\n          x = c \\<and>\n          (\\<forall>x xa.\n              xa < brn c \\<longrightarrow>\n              phi (local.cont c x xa) \\<or> siso (local.cont c x xa)) \\<and>\n          (\\<forall>x xa xb.\n              xb < brn c \\<and> x \\<approx> xa \\<longrightarrow>\n              eff c x xb \\<approx> eff c xa xb \\<and>\n              wt c x xb = wt c xa xb \\<and>\n              local.cont c x xb = local.cont c xa xb)", "by auto"], ["", "lemma siso_raw_coind[consumes 1, case_names Obs Cont]:\nassumes *: \"phi c\" and\n***: \"\\<And> c s t i. \\<lbrakk>i < brn c; phi c; s \\<approx> t\\<rbrakk> \\<Longrightarrow>\n                  eff c s i \\<approx> eff c t i \\<and> wt c s i = wt c t i \\<and> cont c s i = cont c t i\" and\n**: \"\\<And> c s i. \\<lbrakk>i < brn c; phi c\\<rbrakk> \\<Longrightarrow> phi (cont c s i)\"\nshows \"siso c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. siso c", "using *"], ["proof (prove)\nusing this:\n  phi c\n\ngoal (1 subgoal):\n 1. siso c", "apply induct"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>c s t i.\n       \\<lbrakk>i < brn c; phi c; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff c t i \\<and>\n                         wt c s i = wt c t i \\<and>\n                         local.cont c s i = local.cont c t i\n 2. \\<And>c s i.\n       \\<lbrakk>i < brn c; phi c\\<rbrakk>\n       \\<Longrightarrow> phi (local.cont c s i) \\<or>\n                         siso (local.cont c s i)", "using ** ***"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i < brn ?c; phi ?c\\<rbrakk>\n  \\<Longrightarrow> phi (local.cont ?c ?s ?i)\n  \\<lbrakk>?i < brn ?c; phi ?c; ?s \\<approx> ?t\\<rbrakk>\n  \\<Longrightarrow> eff ?c ?s ?i \\<approx> eff ?c ?t ?i \\<and>\n                    wt ?c ?s ?i = wt ?c ?t ?i \\<and>\n                    local.cont ?c ?s ?i = local.cont ?c ?t ?i\n\ngoal (2 subgoals):\n 1. \\<And>c s t i.\n       \\<lbrakk>i < brn c; phi c; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff c t i \\<and>\n                         wt c s i = wt c t i \\<and>\n                         local.cont c s i = local.cont c t i\n 2. \\<And>c s i.\n       \\<lbrakk>i < brn c; phi c\\<rbrakk>\n       \\<Longrightarrow> phi (local.cont c s i) \\<or>\n                         siso (local.cont c s i)", "by blast+"], ["", "text\\<open>Self-Isomorphism versus transition:\\<close>"], ["", "lemma siso_cont[simp]:\nassumes *: \"siso c\" and **: \"i < brn c\"\nshows \"siso (cont c s i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. siso (local.cont c s i)", "using *"], ["proof (prove)\nusing this:\n  siso c\n\ngoal (1 subgoal):\n 1. siso (local.cont c s i)", "apply(cases rule: siso.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>s i. i < brn c \\<Longrightarrow> siso (local.cont c s i);\n     \\<And>s t i.\n        i < brn c \\<and> s \\<approx> t \\<Longrightarrow>\n        eff c s i \\<approx> eff c t i \\<and>\n        wt c s i = wt c t i \\<and>\n        local.cont c s i = local.cont c t i\\<rbrakk>\n    \\<Longrightarrow> siso (local.cont c s i)", "using **"], ["proof (prove)\nusing this:\n  i < brn c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>s i. i < brn c \\<Longrightarrow> siso (local.cont c s i);\n     \\<And>s t i.\n        i < brn c \\<and> s \\<approx> t \\<Longrightarrow>\n        eff c s i \\<approx> eff c t i \\<and>\n        wt c s i = wt c t i \\<and>\n        local.cont c s i = local.cont c t i\\<rbrakk>\n    \\<Longrightarrow> siso (local.cont c s i)", "by blast"], ["", "lemma siso_cont_indis[simp]:\nassumes *: \"siso c\" and **: \"s \\<approx> t\" \"i < brn c\"\nshows \"eff c s i \\<approx> eff c t i \\<and> wt c s i = wt c t i \\<and> cont c s i = cont c t i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff c t i \\<and>\n    wt c s i = wt c t i \\<and> local.cont c s i = local.cont c t i", "using *"], ["proof (prove)\nusing this:\n  siso c\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff c t i \\<and>\n    wt c s i = wt c t i \\<and> local.cont c s i = local.cont c t i", "apply(cases rule: siso.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>s i. i < brn c \\<Longrightarrow> siso (local.cont c s i);\n     \\<And>s t i.\n        i < brn c \\<and> s \\<approx> t \\<Longrightarrow>\n        eff c s i \\<approx> eff c t i \\<and>\n        wt c s i = wt c t i \\<and>\n        local.cont c s i = local.cont c t i\\<rbrakk>\n    \\<Longrightarrow> eff c s i \\<approx> eff c t i \\<and>\n                      wt c s i = wt c t i \\<and>\n                      local.cont c s i = local.cont c t i", "using **"], ["proof (prove)\nusing this:\n  s \\<approx> t\n  i < brn c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>s i. i < brn c \\<Longrightarrow> siso (local.cont c s i);\n     \\<And>s t i.\n        i < brn c \\<and> s \\<approx> t \\<Longrightarrow>\n        eff c s i \\<approx> eff c t i \\<and>\n        wt c s i = wt c t i \\<and>\n        local.cont c s i = local.cont c t i\\<rbrakk>\n    \\<Longrightarrow> eff c s i \\<approx> eff c t i \\<and>\n                      wt c s i = wt c t i \\<and>\n                      local.cont c s i = local.cont c t i", "by blast"], ["", "subsection\\<open>Notions of bisimilarity\\<close>"], ["", "text\\<open>Matchers\\<close>"], ["", "(* The notations are essentially the ones from the paper, except that,\n   instead the paper's \"Q\" (which is redundant), we write \"F P\".\n   Also, for the proper management of the proof, we have some intermediate\n   predicates that compose the matchers.\n*)"], ["", "definition mC_C_part where\n\"mC_C_part c d P F \\<equiv>\n {} \\<notin> P \\<and> {} \\<notin> F ` P \\<and>\n part {..< brn c} P \\<and> part {..< brn d} (F ` P)\""], ["", "definition mC_C_wt where\n\"mC_C_wt c d s t P F \\<equiv> \\<forall> I \\<in> P. sum (wt c s) I = sum (wt d t) (F I)\""], ["", "definition mC_C_eff_cont where\n\"mC_C_eff_cont theta c d s t P F \\<equiv>\n \\<forall> I i j.\n   I \\<in> P \\<and> i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n   eff c s i \\<approx> eff d t j \\<and> (cont c s i, cont d t j) \\<in> theta\""], ["", "definition mC_C where\n\"mC_C theta c d s t P F \\<equiv>\n mC_C_part c d P F \\<and> inj_on F P \\<and> mC_C_wt c d s t P F \\<and> mC_C_eff_cont theta c d s t P F\""], ["", "definition matchC_C where\n\"matchC_C theta c d \\<equiv> \\<forall> s t. s \\<approx> t \\<longrightarrow> (\\<exists> P F. mC_C theta c d s t P F)\""], ["", "(*  *)"], ["", "definition mC_ZOC_part where\n\"mC_ZOC_part c d s t I0 P F \\<equiv>\n {} \\<notin> P - {I0} \\<and> {} \\<notin> F ` (P - {I0}) \\<and> I0 \\<in> P \\<and>\n part {..< brn c} P \\<and> part {..< brn d} (F ` P)\""], ["", "definition mC_ZOC_wt where\n\"mC_ZOC_wt c d s t I0 P F \\<equiv>\n sum (wt c s) I0 < 1 \\<and> sum (wt d t) (F I0) < 1 \\<longrightarrow>\n (\\<forall> I \\<in> P - {I0}.\n    sum (wt c s) I / (1 - sum (wt c s) I0) =\n    sum (wt d t) (F I) / (1 - sum (wt d t) (F I0)))\""], ["", "(* Note: In case either sum is 1, the above condition\n   holds vacously. *)"], ["", "definition mC_ZOC_eff_cont0 where\n\"mC_ZOC_eff_cont0 theta c d s t I0 F \\<equiv>\n (\\<forall> i \\<in> I0. s \\<approx> eff c s i \\<and> (cont c s i, d) \\<in> theta) \\<and>\n (\\<forall> j \\<in> F I0. t \\<approx> eff d t j \\<and> (c, cont d t j) \\<in> theta)\""], ["", "definition mC_ZOC_eff_cont where\n\"mC_ZOC_eff_cont theta c d s t I0 P F \\<equiv>\n \\<forall> I i j.\n   I \\<in> P - {I0} \\<and> i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n   eff c s i \\<approx> eff d t j \\<and>\n   (cont c s i, cont d t j) \\<in> theta\""], ["", "definition mC_ZOC where\n\"mC_ZOC theta c d s t I0 P F \\<equiv>\n mC_ZOC_part c d s t I0 P F \\<and>\n inj_on F P \\<and>\n mC_ZOC_wt c d s t I0 P F \\<and>\n mC_ZOC_eff_cont0 theta c d s t I0 F \\<and>\n mC_ZOC_eff_cont theta c d s t I0 P F\""], ["", "definition matchC_LC where\n\"matchC_LC theta c d \\<equiv>\n \\<forall> s t. s \\<approx> t \\<longrightarrow> (\\<exists> I0 P F. mC_ZOC theta c d s t I0 P F)\""], ["", "lemmas m_defs = mC_C_def mC_ZOC_def"], ["", "lemmas m_defsAll =\nmC_C_def mC_C_part_def mC_C_wt_def mC_C_eff_cont_def\nmC_ZOC_def mC_ZOC_part_def mC_ZOC_wt_def mC_ZOC_eff_cont0_def mC_ZOC_eff_cont_def"], ["", "lemmas match_defs =\nmatchC_C_def matchC_LC_def"], ["", "lemma mC_C_mono:\nassumes \"mC_C theta c d s t P F\" and \"theta \\<subseteq> theta'\"\nshows \"mC_C theta' c d s t P F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_C theta' c d s t P F", "using assms"], ["proof (prove)\nusing this:\n  mC_C theta c d s t P F\n  theta \\<subseteq> theta'\n\ngoal (1 subgoal):\n 1. mC_C theta' c d s t P F", "unfolding m_defsAll"], ["proof (prove)\nusing this:\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  (\\<forall>I\\<in>P. sum (wt c s) I = sum (wt d t) (F I)) \\<and>\n  (\\<forall>I i j.\n      I \\<in> P \\<and> i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n      eff c s i \\<approx> eff d t j \\<and>\n      (local.cont c s i, local.cont d t j) \\<in> theta)\n  theta \\<subseteq> theta'\n\ngoal (1 subgoal):\n 1. ({} \\<notin> P \\<and>\n     {} \\<notin> F ` P \\<and>\n     part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n    inj_on F P \\<and>\n    (\\<forall>I\\<in>P. sum (wt c s) I = sum (wt d t) (F I)) \\<and>\n    (\\<forall>I i j.\n        I \\<in> P \\<and> i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n        eff c s i \\<approx> eff d t j \\<and>\n        (local.cont c s i, local.cont d t j) \\<in> theta')", "by fastforce+"], ["", "lemma matchC_C_mono:\nassumes \"matchC_C theta c d\" and \"theta \\<subseteq> theta'\"\nshows \"matchC_C theta' c d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchC_C theta' c d", "using assms mC_C_mono"], ["proof (prove)\nusing this:\n  matchC_C theta c d\n  theta \\<subseteq> theta'\n  \\<lbrakk>mC_C ?theta ?c ?d ?s ?t ?P ?F;\n   ?theta \\<subseteq> ?theta'\\<rbrakk>\n  \\<Longrightarrow> mC_C ?theta' ?c ?d ?s ?t ?P ?F\n\ngoal (1 subgoal):\n 1. matchC_C theta' c d", "unfolding matchC_C_def"], ["proof (prove)\nusing this:\n  \\<forall>s t.\n     s \\<approx> t \\<longrightarrow> (\\<exists>P F. mC_C theta c d s t P F)\n  theta \\<subseteq> theta'\n  \\<lbrakk>mC_C ?theta ?c ?d ?s ?t ?P ?F;\n   ?theta \\<subseteq> ?theta'\\<rbrakk>\n  \\<Longrightarrow> mC_C ?theta' ?c ?d ?s ?t ?P ?F\n\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       s \\<approx> t \\<longrightarrow>\n       (\\<exists>P F. mC_C theta' c d s t P F)", "by blast"], ["", "lemma mC_ZOC_mono:\nassumes \"mC_ZOC theta c d s t I0 P F\" and \"theta \\<subseteq> theta'\"\nshows \"mC_ZOC theta' c d s t I0 P F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_ZOC theta' c d s t I0 P F", "using assms"], ["proof (prove)\nusing this:\n  mC_ZOC theta c d s t I0 P F\n  theta \\<subseteq> theta'\n\ngoal (1 subgoal):\n 1. mC_ZOC theta' c d s t I0 P F", "unfolding m_defsAll subset_eq"], ["proof (prove)\nusing this:\n  ({} \\<notin> P - {I0} \\<and>\n   {} \\<notin> F ` (P - {I0}) \\<and>\n   I0 \\<in> P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  (sum (wt c s) I0 < 1 \\<and> sum (wt d t) (F I0) < 1 \\<longrightarrow>\n   (\\<forall>I\\<in>P - {I0}.\n       sum (wt c s) I / (1 - sum (wt c s) I0) =\n       sum (wt d t) (F I) / (1 - sum (wt d t) (F I0)))) \\<and>\n  ((\\<forall>i\\<in>I0.\n       s \\<approx> eff c s i \\<and>\n       (local.cont c s i, d) \\<in> theta) \\<and>\n   (\\<forall>j\\<in>F I0.\n       t \\<approx> eff d t j \\<and>\n       (c, local.cont d t j) \\<in> theta)) \\<and>\n  (\\<forall>I i j.\n      I \\<in> P - {I0} \\<and> i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n      eff c s i \\<approx> eff d t j \\<and>\n      (local.cont c s i, local.cont d t j) \\<in> theta)\n  \\<forall>x\\<in>theta. x \\<in> theta'\n\ngoal (1 subgoal):\n 1. ({} \\<notin> P - {I0} \\<and>\n     {} \\<notin> F ` (P - {I0}) \\<and>\n     I0 \\<in> P \\<and>\n     part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n    inj_on F P \\<and>\n    (sum (wt c s) I0 < 1 \\<and> sum (wt d t) (F I0) < 1 \\<longrightarrow>\n     (\\<forall>I\\<in>P - {I0}.\n         sum (wt c s) I / (1 - sum (wt c s) I0) =\n         sum (wt d t) (F I) / (1 - sum (wt d t) (F I0)))) \\<and>\n    ((\\<forall>i\\<in>I0.\n         s \\<approx> eff c s i \\<and>\n         (local.cont c s i, d) \\<in> theta') \\<and>\n     (\\<forall>j\\<in>F I0.\n         t \\<approx> eff d t j \\<and>\n         (c, local.cont d t j) \\<in> theta')) \\<and>\n    (\\<forall>I i j.\n        I \\<in> P - {I0} \\<and>\n        i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n        eff c s i \\<approx> eff d t j \\<and>\n        (local.cont c s i, local.cont d t j) \\<in> theta')", "by auto"], ["", "lemma matchC_LC_mono:\nassumes \"matchC_LC theta c d\" and \"theta \\<subseteq> theta'\"\nshows \"matchC_LC theta' c d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchC_LC theta' c d", "using assms mC_ZOC_mono"], ["proof (prove)\nusing this:\n  matchC_LC theta c d\n  theta \\<subseteq> theta'\n  \\<lbrakk>mC_ZOC ?theta ?c ?d ?s ?t ?I0.0 ?P ?F;\n   ?theta \\<subseteq> ?theta'\\<rbrakk>\n  \\<Longrightarrow> mC_ZOC ?theta' ?c ?d ?s ?t ?I0.0 ?P ?F\n\ngoal (1 subgoal):\n 1. matchC_LC theta' c d", "unfolding matchC_LC_def"], ["proof (prove)\nusing this:\n  \\<forall>s t.\n     s \\<approx> t \\<longrightarrow>\n     (\\<exists>I0 P F. mC_ZOC theta c d s t I0 P F)\n  theta \\<subseteq> theta'\n  \\<lbrakk>mC_ZOC ?theta ?c ?d ?s ?t ?I0.0 ?P ?F;\n   ?theta \\<subseteq> ?theta'\\<rbrakk>\n  \\<Longrightarrow> mC_ZOC ?theta' ?c ?d ?s ?t ?I0.0 ?P ?F\n\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       s \\<approx> t \\<longrightarrow>\n       (\\<exists>I0 P F. mC_ZOC theta' c d s t I0 P F)", "by metis"], ["", "lemma Int_not_in_eq_emp:\n\"P \\<inter> {I. I \\<notin> P} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<inter> {I. I \\<notin> P} = {}", "by blast"], ["", "lemma mC_C_mC_ZOC:\nassumes \"mC_C theta c d s t P F\"\nshows \"mC_ZOC theta c d s t {} (P Un { {} }) (%I. if I \\<in> P then F I else {})\"\n(is \"mC_ZOC theta c d s t ?I0 ?Q ?G\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_ZOC theta c d s t {} (P \\<union> {{}})\n     (\\<lambda>I. if I \\<in> P then F I else {})", "unfolding mC_ZOC_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_ZOC_part c d s t {} (P \\<union> {{}})\n     (\\<lambda>I. if I \\<in> P then F I else {}) \\<and>\n    inj_on (\\<lambda>I. if I \\<in> P then F I else {})\n     (P \\<union> {{}}) \\<and>\n    mC_ZOC_wt c d s t {} (P \\<union> {{}})\n     (\\<lambda>I. if I \\<in> P then F I else {}) \\<and>\n    mC_ZOC_eff_cont0 theta c d s t {}\n     (\\<lambda>I. if I \\<in> P then F I else {}) \\<and>\n    mC_ZOC_eff_cont theta c d s t {} (P \\<union> {{}})\n     (\\<lambda>I. if I \\<in> P then F I else {})", "proof(intro conjI)"], ["proof (state)\ngoal (5 subgoals):\n 1. mC_ZOC_part c d s t {} (P \\<union> {{}})\n     (\\<lambda>I. if I \\<in> P then F I else {})\n 2. inj_on (\\<lambda>I. if I \\<in> P then F I else {}) (P \\<union> {{}})\n 3. mC_ZOC_wt c d s t {} (P \\<union> {{}})\n     (\\<lambda>I. if I \\<in> P then F I else {})\n 4. mC_ZOC_eff_cont0 theta c d s t {}\n     (\\<lambda>I. if I \\<in> P then F I else {})\n 5. mC_ZOC_eff_cont theta c d s t {} (P \\<union> {{}})\n     (\\<lambda>I. if I \\<in> P then F I else {})", "show \"mC_ZOC_part c d s t ?I0 ?Q ?G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_ZOC_part c d s t {} (P \\<union> {{}})\n     (\\<lambda>I. if I \\<in> P then F I else {})", "unfolding mC_ZOC_part_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<notin> P \\<union> {{}} - {{}} \\<and>\n    {} \\<notin> (\\<lambda>I. if I \\<in> P then F I else {}) `\n                (P \\<union> {{}} - {{}}) \\<and>\n    {} \\<in> P \\<union> {{}} \\<and>\n    part {..<brn c} (P \\<union> {{}}) \\<and>\n    part {..<brn d}\n     ((\\<lambda>I. if I \\<in> P then F I else {}) ` (P \\<union> {{}}))", "using assms"], ["proof (prove)\nusing this:\n  mC_C theta c d s t P F\n\ngoal (1 subgoal):\n 1. {} \\<notin> P \\<union> {{}} - {{}} \\<and>\n    {} \\<notin> (\\<lambda>I. if I \\<in> P then F I else {}) `\n                (P \\<union> {{}} - {{}}) \\<and>\n    {} \\<in> P \\<union> {{}} \\<and>\n    part {..<brn c} (P \\<union> {{}}) \\<and>\n    part {..<brn d}\n     ((\\<lambda>I. if I \\<in> P then F I else {}) ` (P \\<union> {{}}))", "unfolding mC_C_def mC_C_part_def"], ["proof (prove)\nusing this:\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  mC_C_wt c d s t P F \\<and> mC_C_eff_cont theta c d s t P F\n\ngoal (1 subgoal):\n 1. {} \\<notin> P \\<union> {{}} - {{}} \\<and>\n    {} \\<notin> (\\<lambda>I. if I \\<in> P then F I else {}) `\n                (P \\<union> {{}} - {{}}) \\<and>\n    {} \\<in> P \\<union> {{}} \\<and>\n    part {..<brn c} (P \\<union> {{}}) \\<and>\n    part {..<brn d}\n     ((\\<lambda>I. if I \\<in> P then F I else {}) ` (P \\<union> {{}}))", "by (auto simp add: Int_not_in_eq_emp)"], ["proof (state)\nthis:\n  mC_ZOC_part c d s t {} (P \\<union> {{}})\n   (\\<lambda>I. if I \\<in> P then F I else {})\n\ngoal (4 subgoals):\n 1. inj_on (\\<lambda>I. if I \\<in> P then F I else {}) (P \\<union> {{}})\n 2. mC_ZOC_wt c d s t {} (P \\<union> {{}})\n     (\\<lambda>I. if I \\<in> P then F I else {})\n 3. mC_ZOC_eff_cont0 theta c d s t {}\n     (\\<lambda>I. if I \\<in> P then F I else {})\n 4. mC_ZOC_eff_cont theta c d s t {} (P \\<union> {{}})\n     (\\<lambda>I. if I \\<in> P then F I else {})", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. inj_on (\\<lambda>I. if I \\<in> P then F I else {}) (P \\<union> {{}})\n 2. mC_ZOC_wt c d s t {} (P \\<union> {{}})\n     (\\<lambda>I. if I \\<in> P then F I else {})\n 3. mC_ZOC_eff_cont0 theta c d s t {}\n     (\\<lambda>I. if I \\<in> P then F I else {})\n 4. mC_ZOC_eff_cont theta c d s t {} (P \\<union> {{}})\n     (\\<lambda>I. if I \\<in> P then F I else {})", "show \"inj_on ?G ?Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>I. if I \\<in> P then F I else {}) (P \\<union> {{}})", "unfolding inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>P \\<union> {{}}.\n       \\<forall>y\\<in>P \\<union> {{}}.\n          (if x \\<in> P then F x else {}) =\n          (if y \\<in> P then F y else {}) \\<longrightarrow>\n          x = y", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> P \\<union> {{}}; y \\<in> P \\<union> {{}};\n        (if x \\<in> P then F x else {}) =\n        (if y \\<in> P then F y else {})\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix I1 I2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> P \\<union> {{}}; y \\<in> P \\<union> {{}};\n        (if x \\<in> P then F x else {}) =\n        (if y \\<in> P then F y else {})\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume I12: \"I1 \\<in> ?Q\" \"I2 \\<in> ?Q\"\n    and G: \"?G I1 = ?G I2\""], ["proof (state)\nthis:\n  I1 \\<in> P \\<union> {{}}\n  I2 \\<in> P \\<union> {{}}\n  (if I1 \\<in> P then F I1 else {}) = (if I2 \\<in> P then F I2 else {})\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> P \\<union> {{}}; y \\<in> P \\<union> {{}};\n        (if x \\<in> P then F x else {}) =\n        (if y \\<in> P then F y else {})\\<rbrakk>\n       \\<Longrightarrow> x = y", "show \"I1 = I2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I1 = I2", "proof(cases \"I1 \\<in> P\")"], ["proof (state)\ngoal (2 subgoals):\n 1. I1 \\<in> P \\<Longrightarrow> I1 = I2\n 2. I1 \\<notin> P \\<Longrightarrow> I1 = I2", "case True"], ["proof (state)\nthis:\n  I1 \\<in> P\n\ngoal (2 subgoals):\n 1. I1 \\<in> P \\<Longrightarrow> I1 = I2\n 2. I1 \\<notin> P \\<Longrightarrow> I1 = I2", "hence I2: \"I2 \\<in> P\""], ["proof (prove)\nusing this:\n  I1 \\<in> P\n\ngoal (1 subgoal):\n 1. I2 \\<in> P", "apply(rule_tac ccontr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I1 \\<in> P; I2 \\<notin> P\\<rbrakk> \\<Longrightarrow> False", "using G assms"], ["proof (prove)\nusing this:\n  (if I1 \\<in> P then F I1 else {}) = (if I2 \\<in> P then F I2 else {})\n  mC_C theta c d s t P F\n\ngoal (1 subgoal):\n 1. \\<lbrakk>I1 \\<in> P; I2 \\<notin> P\\<rbrakk> \\<Longrightarrow> False", "unfolding mC_C_def mC_C_part_def"], ["proof (prove)\nusing this:\n  (if I1 \\<in> P then F I1 else {}) = (if I2 \\<in> P then F I2 else {})\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  mC_C_wt c d s t P F \\<and> mC_C_eff_cont theta c d s t P F\n\ngoal (1 subgoal):\n 1. \\<lbrakk>I1 \\<in> P; I2 \\<notin> P\\<rbrakk> \\<Longrightarrow> False", "by auto"], ["proof (state)\nthis:\n  I2 \\<in> P\n\ngoal (2 subgoals):\n 1. I1 \\<in> P \\<Longrightarrow> I1 = I2\n 2. I1 \\<notin> P \\<Longrightarrow> I1 = I2", "with True G"], ["proof (chain)\npicking this:\n  I1 \\<in> P\n  (if I1 \\<in> P then F I1 else {}) = (if I2 \\<in> P then F I2 else {})\n  I2 \\<in> P", "have \"F I1 = F I2\""], ["proof (prove)\nusing this:\n  I1 \\<in> P\n  (if I1 \\<in> P then F I1 else {}) = (if I2 \\<in> P then F I2 else {})\n  I2 \\<in> P\n\ngoal (1 subgoal):\n 1. F I1 = F I2", "by simp"], ["proof (state)\nthis:\n  F I1 = F I2\n\ngoal (2 subgoals):\n 1. I1 \\<in> P \\<Longrightarrow> I1 = I2\n 2. I1 \\<notin> P \\<Longrightarrow> I1 = I2", "thus ?thesis"], ["proof (prove)\nusing this:\n  F I1 = F I2\n\ngoal (1 subgoal):\n 1. I1 = I2", "using True I2 I12 assms"], ["proof (prove)\nusing this:\n  F I1 = F I2\n  I1 \\<in> P\n  I2 \\<in> P\n  I1 \\<in> P \\<union> {{}}\n  I2 \\<in> P \\<union> {{}}\n  mC_C theta c d s t P F\n\ngoal (1 subgoal):\n 1. I1 = I2", "unfolding mC_C_def inj_on_def"], ["proof (prove)\nusing this:\n  F I1 = F I2\n  I1 \\<in> P\n  I2 \\<in> P\n  I1 \\<in> P \\<union> {{}}\n  I2 \\<in> P \\<union> {{}}\n  mC_C_part c d P F \\<and>\n  (\\<forall>x\\<in>P.\n      \\<forall>y\\<in>P. F x = F y \\<longrightarrow> x = y) \\<and>\n  mC_C_wt c d s t P F \\<and> mC_C_eff_cont theta c d s t P F\n\ngoal (1 subgoal):\n 1. I1 = I2", "by blast"], ["proof (state)\nthis:\n  I1 = I2\n\ngoal (1 subgoal):\n 1. I1 \\<notin> P \\<Longrightarrow> I1 = I2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. I1 \\<notin> P \\<Longrightarrow> I1 = I2", "case False"], ["proof (state)\nthis:\n  I1 \\<notin> P\n\ngoal (1 subgoal):\n 1. I1 \\<notin> P \\<Longrightarrow> I1 = I2", "note case1 = False"], ["proof (state)\nthis:\n  I1 \\<notin> P\n\ngoal (1 subgoal):\n 1. I1 \\<notin> P \\<Longrightarrow> I1 = I2", "hence I1: \"I1 = {}\""], ["proof (prove)\nusing this:\n  I1 \\<notin> P\n\ngoal (1 subgoal):\n 1. I1 = {}", "using I12"], ["proof (prove)\nusing this:\n  I1 \\<notin> P\n  I1 \\<in> P \\<union> {{}}\n  I2 \\<in> P \\<union> {{}}\n\ngoal (1 subgoal):\n 1. I1 = {}", "by blast"], ["proof (state)\nthis:\n  I1 = {}\n\ngoal (1 subgoal):\n 1. I1 \\<notin> P \\<Longrightarrow> I1 = I2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. I1 = I2", "proof(cases \"I2 \\<in> P\")"], ["proof (state)\ngoal (2 subgoals):\n 1. I2 \\<in> P \\<Longrightarrow> I1 = I2\n 2. I2 \\<notin> P \\<Longrightarrow> I1 = I2", "case False"], ["proof (state)\nthis:\n  I2 \\<notin> P\n\ngoal (2 subgoals):\n 1. I2 \\<in> P \\<Longrightarrow> I1 = I2\n 2. I2 \\<notin> P \\<Longrightarrow> I1 = I2", "hence \"I2 = {}\""], ["proof (prove)\nusing this:\n  I2 \\<notin> P\n\ngoal (1 subgoal):\n 1. I2 = {}", "using I12"], ["proof (prove)\nusing this:\n  I2 \\<notin> P\n  I1 \\<in> P \\<union> {{}}\n  I2 \\<in> P \\<union> {{}}\n\ngoal (1 subgoal):\n 1. I2 = {}", "by blast"], ["proof (state)\nthis:\n  I2 = {}\n\ngoal (2 subgoals):\n 1. I2 \\<in> P \\<Longrightarrow> I1 = I2\n 2. I2 \\<notin> P \\<Longrightarrow> I1 = I2", "thus ?thesis"], ["proof (prove)\nusing this:\n  I2 = {}\n\ngoal (1 subgoal):\n 1. I1 = I2", "using I1"], ["proof (prove)\nusing this:\n  I2 = {}\n  I1 = {}\n\ngoal (1 subgoal):\n 1. I1 = I2", "by blast"], ["proof (state)\nthis:\n  I1 = I2\n\ngoal (1 subgoal):\n 1. I2 \\<in> P \\<Longrightarrow> I1 = I2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. I2 \\<in> P \\<Longrightarrow> I1 = I2", "case True"], ["proof (state)\nthis:\n  I2 \\<in> P\n\ngoal (1 subgoal):\n 1. I2 \\<in> P \\<Longrightarrow> I1 = I2", "hence \"I1 \\<in> P\""], ["proof (prove)\nusing this:\n  I2 \\<in> P\n\ngoal (1 subgoal):\n 1. I1 \\<in> P", "apply(rule_tac ccontr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I2 \\<in> P; I1 \\<notin> P\\<rbrakk> \\<Longrightarrow> False", "using G assms"], ["proof (prove)\nusing this:\n  (if I1 \\<in> P then F I1 else {}) = (if I2 \\<in> P then F I2 else {})\n  mC_C theta c d s t P F\n\ngoal (1 subgoal):\n 1. \\<lbrakk>I2 \\<in> P; I1 \\<notin> P\\<rbrakk> \\<Longrightarrow> False", "unfolding mC_C_def mC_C_part_def"], ["proof (prove)\nusing this:\n  (if I1 \\<in> P then F I1 else {}) = (if I2 \\<in> P then F I2 else {})\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  mC_C_wt c d s t P F \\<and> mC_C_eff_cont theta c d s t P F\n\ngoal (1 subgoal):\n 1. \\<lbrakk>I2 \\<in> P; I1 \\<notin> P\\<rbrakk> \\<Longrightarrow> False", "by auto"], ["proof (state)\nthis:\n  I1 \\<in> P\n\ngoal (1 subgoal):\n 1. I2 \\<in> P \\<Longrightarrow> I1 = I2", "thus ?thesis"], ["proof (prove)\nusing this:\n  I1 \\<in> P\n\ngoal (1 subgoal):\n 1. I1 = I2", "using case1"], ["proof (prove)\nusing this:\n  I1 \\<in> P\n  I1 \\<notin> P\n\ngoal (1 subgoal):\n 1. I1 = I2", "by simp"], ["proof (state)\nthis:\n  I1 = I2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  I1 = I2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  I1 = I2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on (\\<lambda>I. if I \\<in> P then F I else {}) (P \\<union> {{}})\n\ngoal (3 subgoals):\n 1. mC_ZOC_wt c d s t {} (P \\<union> {{}})\n     (\\<lambda>I. if I \\<in> P then F I else {})\n 2. mC_ZOC_eff_cont0 theta c d s t {}\n     (\\<lambda>I. if I \\<in> P then F I else {})\n 3. mC_ZOC_eff_cont theta c d s t {} (P \\<union> {{}})\n     (\\<lambda>I. if I \\<in> P then F I else {})", "qed(insert assms, unfold m_defsAll, fastforce+)"], ["", "lemma matchC_C_matchC_LC:\nassumes \"matchC_C theta c d\"\nshows \"matchC_LC theta c d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchC_LC theta c d", "using assms mC_C_mC_ZOC"], ["proof (prove)\nusing this:\n  matchC_C theta c d\n  mC_C ?theta ?c ?d ?s ?t ?P ?F \\<Longrightarrow>\n  mC_ZOC ?theta ?c ?d ?s ?t {} (?P \\<union> {{}})\n   (\\<lambda>I. if I \\<in> ?P then ?F I else {})\n\ngoal (1 subgoal):\n 1. matchC_LC theta c d", "unfolding match_defs"], ["proof (prove)\nusing this:\n  \\<forall>s t.\n     s \\<approx> t \\<longrightarrow> (\\<exists>P F. mC_C theta c d s t P F)\n  mC_C ?theta ?c ?d ?s ?t ?P ?F \\<Longrightarrow>\n  mC_ZOC ?theta ?c ?d ?s ?t {} (?P \\<union> {{}})\n   (\\<lambda>I. if I \\<in> ?P then ?F I else {})\n\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       s \\<approx> t \\<longrightarrow>\n       (\\<exists>I0 P F. mC_ZOC theta c d s t I0 P F)", "by blast"], ["", "text\\<open>Retracts:\\<close>"], ["", "(* Strong retract: *)"], ["", "definition Sretr where\n\"Sretr theta \\<equiv>\n {(c, d). matchC_C theta c d}\""], ["", "(* Zero-One retract: *)"], ["", "definition ZOretr where\n\"ZOretr theta \\<equiv>\n {(c,d). matchC_LC theta c d}\""], ["", "lemmas Retr_defs =\nSretr_def\nZOretr_def"], ["", "lemma mono_Retr:\n\"mono Sretr\"\n\"mono ZOretr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono Sretr &&& mono ZOretr", "unfolding mono_def Retr_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       x \\<subseteq> y \\<longrightarrow>\n       {(c, d). matchC_C x c d} \\<subseteq> {(c, d). matchC_C y c d} &&&\n    \\<forall>x y.\n       x \\<subseteq> y \\<longrightarrow>\n       {(c, d). matchC_LC x c d} \\<subseteq> {(c, d). matchC_LC y c d}", "by (auto simp add: matchC_C_mono matchC_LC_mono)"], ["", "lemma Retr_incl:\n\"Sretr theta \\<subseteq> ZOretr theta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sretr theta \\<subseteq> ZOretr theta", "unfolding Retr_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(c, d). matchC_C theta c d} \\<subseteq> {(c, d). matchC_LC theta c d}", "using matchC_C_matchC_LC"], ["proof (prove)\nusing this:\n  matchC_C ?theta ?c ?d \\<Longrightarrow> matchC_LC ?theta ?c ?d\n\ngoal (1 subgoal):\n 1. {(c, d). matchC_C theta c d} \\<subseteq> {(c, d). matchC_LC theta c d}", "by blast+"], ["", "text\\<open>The associated bisimilarity relations:\\<close>"], ["", "definition Sbis where \"Sbis \\<equiv> gfp Sretr\""], ["", "definition ZObis where \"ZObis \\<equiv> gfp ZOretr\""], ["", "abbreviation Sbis_abbrev (infix \"\\<approx>s\" 55) where \"c \\<approx>s d \\<equiv> (c, d) : Sbis\""], ["", "abbreviation ZObis_abbrev (infix \"\\<approx>01\" 55) where \"c \\<approx>01 d \\<equiv> (c, d) : ZObis\""], ["", "lemmas bis_defs = Sbis_def ZObis_def"], ["", "(* Inclusions between bisimilarities: *)"], ["", "lemma bis_incl:\n\"Sbis \\<le> ZObis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sbis \\<subseteq> ZObis", "unfolding bis_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. gfp Sretr \\<subseteq> gfp ZOretr", "using Retr_incl gfp_mono"], ["proof (prove)\nusing this:\n  Sretr ?theta \\<subseteq> ZOretr ?theta\n  (\\<And>Z. ?f Z \\<le> ?g Z) \\<Longrightarrow> gfp ?f \\<le> gfp ?g\n\ngoal (1 subgoal):\n 1. gfp Sretr \\<subseteq> gfp ZOretr", "by blast+"], ["", "lemma bis_imp[simp]:\n\"\\<And> c1 c2. c1 \\<approx>s c2 \\<Longrightarrow> c1 \\<approx>01 c2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c1 c2. c1 \\<approx>s c2 \\<Longrightarrow> c1 \\<approx>01 c2", "using bis_incl"], ["proof (prove)\nusing this:\n  Sbis \\<subseteq> ZObis\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2. c1 \\<approx>s c2 \\<Longrightarrow> c1 \\<approx>01 c2", "unfolding bis_defs"], ["proof (prove)\nusing this:\n  gfp Sretr \\<subseteq> gfp ZOretr\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       (c1, c2) \\<in> gfp Sretr \\<Longrightarrow> (c1, c2) \\<in> gfp ZOretr", "by auto"], ["", "(*  Sbis: *)"], ["", "lemma Sbis_prefix:\n\"Sbis \\<le> Sretr Sbis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sbis \\<subseteq> Sretr Sbis", "unfolding Sbis_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. gfp Sretr \\<subseteq> Sretr (gfp Sretr)", "using def_gfp_unfold mono_Retr(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<equiv> gfp ?f; mono ?f\\<rbrakk> \\<Longrightarrow> ?A = ?f ?A\n  mono Sretr\n\ngoal (1 subgoal):\n 1. gfp Sretr \\<subseteq> Sretr (gfp Sretr)", "by blast"], ["", "lemma Sbis_fix:\n\"Sretr Sbis = Sbis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sretr Sbis = Sbis", "unfolding Sbis_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Sretr (gfp Sretr) = gfp Sretr", "by (metis def_gfp_unfold mono_Retr(1))"], ["", "lemma Sbis_mC_C:\nassumes \"c \\<approx>s d\" and \"s \\<approx> t\"\nshows \"\\<exists>P F. mC_C Sbis c d s t P F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P F. mC_C Sbis c d s t P F", "using assms Sbis_prefix"], ["proof (prove)\nusing this:\n  c \\<approx>s d\n  s \\<approx> t\n  Sbis \\<subseteq> Sretr Sbis\n\ngoal (1 subgoal):\n 1. \\<exists>P F. mC_C Sbis c d s t P F", "unfolding Sretr_def matchC_C_def"], ["proof (prove)\nusing this:\n  c \\<approx>s d\n  s \\<approx> t\n  Sbis\n  \\<subseteq> {(c, d).\n               \\<forall>s t.\n                  s \\<approx> t \\<longrightarrow>\n                  (\\<exists>P F. mC_C Sbis c d s t P F)}\n\ngoal (1 subgoal):\n 1. \\<exists>P F. mC_C Sbis c d s t P F", "by auto"], ["", "lemma Sbis_coind:\nassumes \"theta \\<le> Sretr (theta Un Sbis)\"\nshows \"theta \\<le> Sbis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> Sbis", "using assms"], ["proof (prove)\nusing this:\n  theta \\<subseteq> Sretr (theta \\<union> Sbis)\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> Sbis", "unfolding Sbis_def"], ["proof (prove)\nusing this:\n  theta \\<subseteq> Sretr (theta \\<union> gfp Sretr)\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> gfp Sretr", "by (metis Sbis_def assms def_coinduct mono_Retr(1))"], ["", "lemma Sbis_raw_coind:\nassumes \"theta \\<le> Sretr theta\"\nshows \"theta \\<le> Sbis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> Sbis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. theta \\<subseteq> Sbis", "have \"Sretr theta \\<subseteq> Sretr (theta Un Sbis)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sretr theta \\<subseteq> Sretr (theta \\<union> Sbis)", "by (metis Un_upper1 monoD mono_Retr(1))"], ["proof (state)\nthis:\n  Sretr theta \\<subseteq> Sretr (theta \\<union> Sbis)\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> Sbis", "hence \"theta \\<subseteq> Sretr (theta Un Sbis)\""], ["proof (prove)\nusing this:\n  Sretr theta \\<subseteq> Sretr (theta \\<union> Sbis)\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> Sretr (theta \\<union> Sbis)", "using assms"], ["proof (prove)\nusing this:\n  Sretr theta \\<subseteq> Sretr (theta \\<union> Sbis)\n  theta \\<subseteq> Sretr theta\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> Sretr (theta \\<union> Sbis)", "by blast"], ["proof (state)\nthis:\n  theta \\<subseteq> Sretr (theta \\<union> Sbis)\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> Sbis", "thus ?thesis"], ["proof (prove)\nusing this:\n  theta \\<subseteq> Sretr (theta \\<union> Sbis)\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> Sbis", "using Sbis_coind"], ["proof (prove)\nusing this:\n  theta \\<subseteq> Sretr (theta \\<union> Sbis)\n  ?theta \\<subseteq> Sretr (?theta \\<union> Sbis) \\<Longrightarrow>\n  ?theta \\<subseteq> Sbis\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> Sbis", "by blast"], ["proof (state)\nthis:\n  theta \\<subseteq> Sbis\n\ngoal:\nNo subgoals!", "qed"], ["", "(* Symmetry *)"], ["", "lemma mC_C_sym:\nassumes \"mC_C theta c d s t P F\"\nshows \"mC_C (theta ^-1) d c t s (F ` P) (inv_into P F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_C (theta\\<inverse>) d c t s (F ` P) (inv_into P F)", "unfolding mC_C_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_C_part d c (F ` P) (inv_into P F) \\<and>\n    inj_on (inv_into P F) (F ` P) \\<and>\n    mC_C_wt d c t s (F ` P) (inv_into P F) \\<and>\n    mC_C_eff_cont (theta\\<inverse>) d c t s (F ` P) (inv_into P F)", "proof (intro conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. mC_C_part d c (F ` P) (inv_into P F)\n 2. inj_on (inv_into P F) (F ` P)\n 3. mC_C_wt d c t s (F ` P) (inv_into P F)\n 4. mC_C_eff_cont (theta\\<inverse>) d c t s (F ` P) (inv_into P F)", "show \"mC_C_eff_cont (theta\\<inverse>) d c t s (F ` P) (inv_into P F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_C_eff_cont (theta\\<inverse>) d c t s (F ` P) (inv_into P F)", "unfolding mC_C_eff_cont_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>I i j.\n       I \\<in> F ` P \\<and>\n       i \\<in> I \\<and> j \\<in> inv_into P F I \\<longrightarrow>\n       eff d t i \\<approx> eff c s j \\<and>\n       (local.cont d t i, local.cont c s j) \\<in> theta\\<inverse>", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I i j x.\n       \\<lbrakk>x \\<in> P; i \\<in> F x; j \\<in> inv_into P F (F x)\\<rbrakk>\n       \\<Longrightarrow> eff d t i \\<approx> eff c s j \\<and>\n                         (local.cont d t i, local.cont c s j)\n                         \\<in> theta\\<inverse>", "fix i j I"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I i j x.\n       \\<lbrakk>x \\<in> P; i \\<in> F x; j \\<in> inv_into P F (F x)\\<rbrakk>\n       \\<Longrightarrow> eff d t i \\<approx> eff c s j \\<and>\n                         (local.cont d t i, local.cont c s j)\n                         \\<in> theta\\<inverse>", "assume I: \"I \\<in> P\" and j: \"j \\<in> F I\" and \"i \\<in> inv_into P F (F I)\""], ["proof (state)\nthis:\n  I \\<in> P\n  j \\<in> F I\n  i \\<in> inv_into P F (F I)\n\ngoal (1 subgoal):\n 1. \\<And>I i j x.\n       \\<lbrakk>x \\<in> P; i \\<in> F x; j \\<in> inv_into P F (F x)\\<rbrakk>\n       \\<Longrightarrow> eff d t i \\<approx> eff c s j \\<and>\n                         (local.cont d t i, local.cont c s j)\n                         \\<in> theta\\<inverse>", "hence \"i \\<in> I\""], ["proof (prove)\nusing this:\n  I \\<in> P\n  j \\<in> F I\n  i \\<in> inv_into P F (F I)\n\ngoal (1 subgoal):\n 1. i \\<in> I", "using assms"], ["proof (prove)\nusing this:\n  I \\<in> P\n  j \\<in> F I\n  i \\<in> inv_into P F (F I)\n  mC_C theta c d s t P F\n\ngoal (1 subgoal):\n 1. i \\<in> I", "unfolding mC_C_def"], ["proof (prove)\nusing this:\n  I \\<in> P\n  j \\<in> F I\n  i \\<in> inv_into P F (F I)\n  mC_C_part c d P F \\<and>\n  inj_on F P \\<and>\n  mC_C_wt c d s t P F \\<and> mC_C_eff_cont theta c d s t P F\n\ngoal (1 subgoal):\n 1. i \\<in> I", "by auto"], ["proof (state)\nthis:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>I i j x.\n       \\<lbrakk>x \\<in> P; i \\<in> F x; j \\<in> inv_into P F (F x)\\<rbrakk>\n       \\<Longrightarrow> eff d t i \\<approx> eff c s j \\<and>\n                         (local.cont d t i, local.cont c s j)\n                         \\<in> theta\\<inverse>", "hence \"eff c s i \\<approx> eff d t j \\<and> (cont c s i, cont d t j) \\<in> theta\""], ["proof (prove)\nusing this:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "using assms I j"], ["proof (prove)\nusing this:\n  i \\<in> I\n  mC_C theta c d s t P F\n  I \\<in> P\n  j \\<in> F I\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "unfolding mC_C_def mC_C_eff_cont_def"], ["proof (prove)\nusing this:\n  i \\<in> I\n  mC_C_part c d P F \\<and>\n  inj_on F P \\<and>\n  mC_C_wt c d s t P F \\<and>\n  (\\<forall>I i j.\n      I \\<in> P \\<and> i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n      eff c s i \\<approx> eff d t j \\<and>\n      (local.cont c s i, local.cont d t j) \\<in> theta)\n  I \\<in> P\n  j \\<in> F I\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "by auto"], ["proof (state)\nthis:\n  eff c s i \\<approx> eff d t j \\<and>\n  (local.cont c s i, local.cont d t j) \\<in> theta\n\ngoal (1 subgoal):\n 1. \\<And>I i j x.\n       \\<lbrakk>x \\<in> P; i \\<in> F x; j \\<in> inv_into P F (F x)\\<rbrakk>\n       \\<Longrightarrow> eff d t i \\<approx> eff c s j \\<and>\n                         (local.cont d t i, local.cont c s j)\n                         \\<in> theta\\<inverse>", "thus \"eff d t j \\<approx> eff c s i \\<and> (cont d t j, cont c s i) \\<in> theta\\<inverse>\""], ["proof (prove)\nusing this:\n  eff c s i \\<approx> eff d t j \\<and>\n  (local.cont c s i, local.cont d t j) \\<in> theta\n\ngoal (1 subgoal):\n 1. eff d t j \\<approx> eff c s i \\<and>\n    (local.cont d t j, local.cont c s i) \\<in> theta\\<inverse>", "by (metis converseI indis_sym)"], ["proof (state)\nthis:\n  eff d t j \\<approx> eff c s i \\<and>\n  (local.cont d t j, local.cont c s i) \\<in> theta\\<inverse>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mC_C_eff_cont (theta\\<inverse>) d c t s (F ` P) (inv_into P F)\n\ngoal (3 subgoals):\n 1. mC_C_part d c (F ` P) (inv_into P F)\n 2. inj_on (inv_into P F) (F ` P)\n 3. mC_C_wt d c t s (F ` P) (inv_into P F)", "qed(insert assms, unfold m_defsAll, auto)"], ["", "lemma matchC_C_sym:\nassumes \"matchC_C theta c d\"\nshows \"matchC_C (theta ^-1) d c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchC_C (theta\\<inverse>) d c", "unfolding matchC_C_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       s \\<approx> t \\<longrightarrow>\n       (\\<exists>P F. mC_C (theta\\<inverse>) d c s t P F)", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C (theta\\<inverse>) d c s t P F", "fix t s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C (theta\\<inverse>) d c s t P F", "assume \"t \\<approx> s\""], ["proof (state)\nthis:\n  t \\<approx> s\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C (theta\\<inverse>) d c s t P F", "hence \"s \\<approx> t\""], ["proof (prove)\nusing this:\n  t \\<approx> s\n\ngoal (1 subgoal):\n 1. s \\<approx> t", "by (metis indis_sym)"], ["proof (state)\nthis:\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C (theta\\<inverse>) d c s t P F", "then"], ["proof (chain)\npicking this:\n  s \\<approx> t", "obtain P F where \"mC_C theta c d s t P F\""], ["proof (prove)\nusing this:\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. (\\<And>P F.\n        mC_C theta c d s t P F \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  s \\<approx> t\n  matchC_C theta c d\n\ngoal (1 subgoal):\n 1. (\\<And>P F.\n        mC_C theta c d s t P F \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding matchC_C_def"], ["proof (prove)\nusing this:\n  s \\<approx> t\n  \\<forall>s t.\n     s \\<approx> t \\<longrightarrow> (\\<exists>P F. mC_C theta c d s t P F)\n\ngoal (1 subgoal):\n 1. (\\<And>P F.\n        mC_C theta c d s t P F \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  mC_C theta c d s t P F\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C (theta\\<inverse>) d c s t P F", "hence \"mC_C (theta\\<inverse>) d c t s (F ` P) (inv_into P F)\""], ["proof (prove)\nusing this:\n  mC_C theta c d s t P F\n\ngoal (1 subgoal):\n 1. mC_C (theta\\<inverse>) d c t s (F ` P) (inv_into P F)", "using mC_C_sym"], ["proof (prove)\nusing this:\n  mC_C theta c d s t P F\n  mC_C ?theta ?c ?d ?s ?t ?P ?F \\<Longrightarrow>\n  mC_C (?theta\\<inverse>) ?d ?c ?t ?s (?F ` ?P) (inv_into ?P ?F)\n\ngoal (1 subgoal):\n 1. mC_C (theta\\<inverse>) d c t s (F ` P) (inv_into P F)", "by auto"], ["proof (state)\nthis:\n  mC_C (theta\\<inverse>) d c t s (F ` P) (inv_into P F)\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C (theta\\<inverse>) d c s t P F", "thus \"\\<exists>Q G. mC_C (theta\\<inverse>) d c t s Q G\""], ["proof (prove)\nusing this:\n  mC_C (theta\\<inverse>) d c t s (F ` P) (inv_into P F)\n\ngoal (1 subgoal):\n 1. \\<exists>Q G. mC_C (theta\\<inverse>) d c t s Q G", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q G. mC_C (theta\\<inverse>) d c t s Q G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Sretr_sym:\nassumes \"sym theta\"\nshows \"sym (Sretr theta)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (Sretr theta)", "unfolding sym_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       (x, y) \\<in> Sretr theta \\<longrightarrow> (y, x) \\<in> Sretr theta", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y) \\<in> Sretr theta \\<Longrightarrow> (y, x) \\<in> Sretr theta", "fix c d"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y) \\<in> Sretr theta \\<Longrightarrow> (y, x) \\<in> Sretr theta", "assume \"(c, d) \\<in> Sretr theta\""], ["proof (state)\nthis:\n  (c, d) \\<in> Sretr theta\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y) \\<in> Sretr theta \\<Longrightarrow> (y, x) \\<in> Sretr theta", "hence \"(d, c) \\<in> Sretr (theta ^-1)\""], ["proof (prove)\nusing this:\n  (c, d) \\<in> Sretr theta\n\ngoal (1 subgoal):\n 1. (d, c) \\<in> Sretr (theta\\<inverse>)", "unfolding Sretr_def"], ["proof (prove)\nusing this:\n  (c, d) \\<in> {(c, d). matchC_C theta c d}\n\ngoal (1 subgoal):\n 1. (d, c) \\<in> {(c, d). matchC_C (theta\\<inverse>) c d}", "using matchC_C_sym"], ["proof (prove)\nusing this:\n  (c, d) \\<in> {(c, d). matchC_C theta c d}\n  matchC_C ?theta ?c ?d \\<Longrightarrow> matchC_C (?theta\\<inverse>) ?d ?c\n\ngoal (1 subgoal):\n 1. (d, c) \\<in> {(c, d). matchC_C (theta\\<inverse>) c d}", "by simp"], ["proof (state)\nthis:\n  (d, c) \\<in> Sretr (theta\\<inverse>)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y) \\<in> Sretr theta \\<Longrightarrow> (y, x) \\<in> Sretr theta", "thus \"(d, c) \\<in> Sretr theta\""], ["proof (prove)\nusing this:\n  (d, c) \\<in> Sretr (theta\\<inverse>)\n\ngoal (1 subgoal):\n 1. (d, c) \\<in> Sretr theta", "using assms"], ["proof (prove)\nusing this:\n  (d, c) \\<in> Sretr (theta\\<inverse>)\n  sym theta\n\ngoal (1 subgoal):\n 1. (d, c) \\<in> Sretr theta", "by (metis sym_conv_converse_eq)"], ["proof (state)\nthis:\n  (d, c) \\<in> Sretr theta\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sym_Sbis: \"sym Sbis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym Sbis", "by (metis Sbis_def Sretr_sym mono_Retr(1) sym_gfp)"], ["", "lemma Sbis_sym: \"c \\<approx>s d \\<Longrightarrow> d \\<approx>s c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<approx>s d \\<Longrightarrow> d \\<approx>s c", "using sym_Sbis"], ["proof (prove)\nusing this:\n  sym Sbis\n\ngoal (1 subgoal):\n 1. c \\<approx>s d \\<Longrightarrow> d \\<approx>s c", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<approx>s y \\<longrightarrow> y \\<approx>s x\n\ngoal (1 subgoal):\n 1. c \\<approx>s d \\<Longrightarrow> d \\<approx>s c", "by blast"], ["", "(* Transitivity: *)"], ["", "lemma mC_C_trans:\nassumes *: \"mC_C theta1 c d s t P F\" and **: \"mC_C theta2 d e t u (F ` P) G\"\nshows \"mC_C (theta1 O theta2) c e s u P (G o F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_C (theta1 O theta2) c e s u P (G \\<circ> F)", "unfolding mC_C_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_C_part c e P (G \\<circ> F) \\<and>\n    inj_on (G \\<circ> F) P \\<and>\n    mC_C_wt c e s u P (G \\<circ> F) \\<and>\n    mC_C_eff_cont (theta1 O theta2) c e s u P (G \\<circ> F)", "proof (intro conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. mC_C_part c e P (G \\<circ> F)\n 2. inj_on (G \\<circ> F) P\n 3. mC_C_wt c e s u P (G \\<circ> F)\n 4. mC_C_eff_cont (theta1 O theta2) c e s u P (G \\<circ> F)", "show \"mC_C_part c e P (G \\<circ> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_C_part c e P (G \\<circ> F)", "using assms"], ["proof (prove)\nusing this:\n  mC_C theta1 c d s t P F\n  mC_C theta2 d e t u (F ` P) G\n\ngoal (1 subgoal):\n 1. mC_C_part c e P (G \\<circ> F)", "unfolding mC_C_def mC_C_part_def"], ["proof (prove)\nusing this:\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  mC_C_wt c d s t P F \\<and> mC_C_eff_cont theta1 c d s t P F\n  ({} \\<notin> F ` P \\<and>\n   {} \\<notin> G ` F ` P \\<and>\n   part {..<brn d} (F ` P) \\<and> part {..<brn e} (G ` F ` P)) \\<and>\n  inj_on G (F ` P) \\<and>\n  mC_C_wt d e t u (F ` P) G \\<and> mC_C_eff_cont theta2 d e t u (F ` P) G\n\ngoal (1 subgoal):\n 1. {} \\<notin> P \\<and>\n    {} \\<notin> (G \\<circ> F) ` P \\<and>\n    part {..<brn c} P \\<and> part {..<brn e} ((G \\<circ> F) ` P)", "by (auto simp add: image_comp)"], ["proof (state)\nthis:\n  mC_C_part c e P (G \\<circ> F)\n\ngoal (3 subgoals):\n 1. inj_on (G \\<circ> F) P\n 2. mC_C_wt c e s u P (G \\<circ> F)\n 3. mC_C_eff_cont (theta1 O theta2) c e s u P (G \\<circ> F)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. inj_on (G \\<circ> F) P\n 2. mC_C_wt c e s u P (G \\<circ> F)\n 3. mC_C_eff_cont (theta1 O theta2) c e s u P (G \\<circ> F)", "show \"inj_on (G \\<circ> F) P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (G \\<circ> F) P", "using assms"], ["proof (prove)\nusing this:\n  mC_C theta1 c d s t P F\n  mC_C theta2 d e t u (F ` P) G\n\ngoal (1 subgoal):\n 1. inj_on (G \\<circ> F) P", "unfolding mC_C_def"], ["proof (prove)\nusing this:\n  mC_C_part c d P F \\<and>\n  inj_on F P \\<and>\n  mC_C_wt c d s t P F \\<and> mC_C_eff_cont theta1 c d s t P F\n  mC_C_part d e (F ` P) G \\<and>\n  inj_on G (F ` P) \\<and>\n  mC_C_wt d e t u (F ` P) G \\<and> mC_C_eff_cont theta2 d e t u (F ` P) G\n\ngoal (1 subgoal):\n 1. inj_on (G \\<circ> F) P", "by (auto simp add: comp_inj_on)"], ["proof (state)\nthis:\n  inj_on (G \\<circ> F) P\n\ngoal (2 subgoals):\n 1. mC_C_wt c e s u P (G \\<circ> F)\n 2. mC_C_eff_cont (theta1 O theta2) c e s u P (G \\<circ> F)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. mC_C_wt c e s u P (G \\<circ> F)\n 2. mC_C_eff_cont (theta1 O theta2) c e s u P (G \\<circ> F)", "show \"mC_C_eff_cont (theta1 O theta2) c e s u P (G \\<circ> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_C_eff_cont (theta1 O theta2) c e s u P (G \\<circ> F)", "unfolding mC_C_eff_cont_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>I i j.\n       I \\<in> P \\<and>\n       i \\<in> I \\<and> j \\<in> (G \\<circ> F) I \\<longrightarrow>\n       eff c s i \\<approx> eff e u j \\<and>\n       (local.cont c s i, local.cont e u j) \\<in> theta1 O theta2", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; i \\<in> I; j \\<in> (G \\<circ> F) I\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff e u j \\<and>\n                         (local.cont c s i, local.cont e u j)\n                         \\<in> theta1 O theta2", "fix I i k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; i \\<in> I; j \\<in> (G \\<circ> F) I\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff e u j \\<and>\n                         (local.cont c s i, local.cont e u j)\n                         \\<in> theta1 O theta2", "assume I: \"I \\<in> P\" and i: \"i \\<in> I\" and k: \"k \\<in> (G \\<circ> F) I\""], ["proof (state)\nthis:\n  I \\<in> P\n  i \\<in> I\n  k \\<in> (G \\<circ> F) I\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; i \\<in> I; j \\<in> (G \\<circ> F) I\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff e u j \\<and>\n                         (local.cont c s i, local.cont e u j)\n                         \\<in> theta1 O theta2", "have \"F I \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F I \\<noteq> {}", "using * I"], ["proof (prove)\nusing this:\n  mC_C theta1 c d s t P F\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. F I \\<noteq> {}", "unfolding mC_C_def mC_C_part_def"], ["proof (prove)\nusing this:\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  mC_C_wt c d s t P F \\<and> mC_C_eff_cont theta1 c d s t P F\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. F I \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  F I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; i \\<in> I; j \\<in> (G \\<circ> F) I\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff e u j \\<and>\n                         (local.cont c s i, local.cont e u j)\n                         \\<in> theta1 O theta2", "then"], ["proof (chain)\npicking this:\n  F I \\<noteq> {}", "obtain j where j: \"j \\<in> F I\""], ["proof (prove)\nusing this:\n  F I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>j. j \\<in> F I \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  j \\<in> F I\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; i \\<in> I; j \\<in> (G \\<circ> F) I\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff e u j \\<and>\n                         (local.cont c s i, local.cont e u j)\n                         \\<in> theta1 O theta2", "have \"eff c s i \\<approx> eff d t j \\<and> (cont c s i, cont d t j) \\<in> theta1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta1", "using I i j *"], ["proof (prove)\nusing this:\n  I \\<in> P\n  i \\<in> I\n  j \\<in> F I\n  mC_C theta1 c d s t P F\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta1", "unfolding mC_C_def mC_C_eff_cont_def"], ["proof (prove)\nusing this:\n  I \\<in> P\n  i \\<in> I\n  j \\<in> F I\n  mC_C_part c d P F \\<and>\n  inj_on F P \\<and>\n  mC_C_wt c d s t P F \\<and>\n  (\\<forall>I i j.\n      I \\<in> P \\<and> i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n      eff c s i \\<approx> eff d t j \\<and>\n      (local.cont c s i, local.cont d t j) \\<in> theta1)\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta1", "by auto"], ["proof (state)\nthis:\n  eff c s i \\<approx> eff d t j \\<and>\n  (local.cont c s i, local.cont d t j) \\<in> theta1\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; i \\<in> I; j \\<in> (G \\<circ> F) I\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff e u j \\<and>\n                         (local.cont c s i, local.cont e u j)\n                         \\<in> theta1 O theta2", "moreover"], ["proof (state)\nthis:\n  eff c s i \\<approx> eff d t j \\<and>\n  (local.cont c s i, local.cont d t j) \\<in> theta1\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; i \\<in> I; j \\<in> (G \\<circ> F) I\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff e u j \\<and>\n                         (local.cont c s i, local.cont e u j)\n                         \\<in> theta1 O theta2", "have \"eff d t j \\<approx> eff e u k \\<and> (cont d t j, cont e u k) \\<in> theta2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eff d t j \\<approx> eff e u k \\<and>\n    (local.cont d t j, local.cont e u k) \\<in> theta2", "using I j k **"], ["proof (prove)\nusing this:\n  I \\<in> P\n  j \\<in> F I\n  k \\<in> (G \\<circ> F) I\n  mC_C theta2 d e t u (F ` P) G\n\ngoal (1 subgoal):\n 1. eff d t j \\<approx> eff e u k \\<and>\n    (local.cont d t j, local.cont e u k) \\<in> theta2", "unfolding mC_C_def mC_C_eff_cont_def"], ["proof (prove)\nusing this:\n  I \\<in> P\n  j \\<in> F I\n  k \\<in> (G \\<circ> F) I\n  mC_C_part d e (F ` P) G \\<and>\n  inj_on G (F ` P) \\<and>\n  mC_C_wt d e t u (F ` P) G \\<and>\n  (\\<forall>I i j.\n      I \\<in> F ` P \\<and> i \\<in> I \\<and> j \\<in> G I \\<longrightarrow>\n      eff d t i \\<approx> eff e u j \\<and>\n      (local.cont d t i, local.cont e u j) \\<in> theta2)\n\ngoal (1 subgoal):\n 1. eff d t j \\<approx> eff e u k \\<and>\n    (local.cont d t j, local.cont e u k) \\<in> theta2", "by auto"], ["proof (state)\nthis:\n  eff d t j \\<approx> eff e u k \\<and>\n  (local.cont d t j, local.cont e u k) \\<in> theta2\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; i \\<in> I; j \\<in> (G \\<circ> F) I\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff e u j \\<and>\n                         (local.cont c s i, local.cont e u j)\n                         \\<in> theta1 O theta2", "ultimately"], ["proof (chain)\npicking this:\n  eff c s i \\<approx> eff d t j \\<and>\n  (local.cont c s i, local.cont d t j) \\<in> theta1\n  eff d t j \\<approx> eff e u k \\<and>\n  (local.cont d t j, local.cont e u k) \\<in> theta2", "show \"eff c s i \\<approx> eff e u k \\<and> (cont c s i, cont e u k) \\<in> theta1 O theta2\""], ["proof (prove)\nusing this:\n  eff c s i \\<approx> eff d t j \\<and>\n  (local.cont c s i, local.cont d t j) \\<in> theta1\n  eff d t j \\<approx> eff e u k \\<and>\n  (local.cont d t j, local.cont e u k) \\<in> theta2\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff e u k \\<and>\n    (local.cont c s i, local.cont e u k) \\<in> theta1 O theta2", "using indis_trans"], ["proof (prove)\nusing this:\n  eff c s i \\<approx> eff d t j \\<and>\n  (local.cont c s i, local.cont d t j) \\<in> theta1\n  eff d t j \\<approx> eff e u k \\<and>\n  (local.cont d t j, local.cont e u k) \\<in> theta2\n  \\<lbrakk>?s \\<approx> ?s'; ?s' \\<approx> ?s''\\<rbrakk>\n  \\<Longrightarrow> ?s \\<approx> ?s''\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff e u k \\<and>\n    (local.cont c s i, local.cont e u k) \\<in> theta1 O theta2", "by blast"], ["proof (state)\nthis:\n  eff c s i \\<approx> eff e u k \\<and>\n  (local.cont c s i, local.cont e u k) \\<in> theta1 O theta2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mC_C_eff_cont (theta1 O theta2) c e s u P (G \\<circ> F)\n\ngoal (1 subgoal):\n 1. mC_C_wt c e s u P (G \\<circ> F)", "qed(insert assms, unfold m_defsAll, auto)"], ["", "lemma mC_C_finer:\nassumes *: \"mC_C theta c d s t P F\"\nand theta: \"trans theta\"\nand Q: \"finer P Q\" \"finite Q\" \"{} \\<notin> Q\" \"part {..<brn c} Q\"\nand c: \"partCompat Q indis (eff c s)\" \"partCompat Q theta (cont c s)\"\nshows \"mC_C theta c d s t Q (lift P F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_C theta c d s t Q (lift P F)", "unfolding mC_C_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_C_part c d Q (lift P F) \\<and>\n    inj_on (lift P F) Q \\<and>\n    mC_C_wt c d s t Q (lift P F) \\<and>\n    mC_C_eff_cont theta c d s t Q (lift P F)", "proof (intro conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. mC_C_part c d Q (lift P F)\n 2. inj_on (lift P F) Q\n 3. mC_C_wt c d s t Q (lift P F)\n 4. mC_C_eff_cont theta c d s t Q (lift P F)", "show \"mC_C_part c d Q (lift P F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_C_part c d Q (lift P F)", "unfolding mC_C_part_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<notin> Q \\<and>\n    {} \\<notin> lift P F ` Q \\<and>\n    part {..<brn c} Q \\<and> part {..<brn d} (lift P F ` Q)", "proof(intro conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. {} \\<notin> Q\n 2. {} \\<notin> lift P F ` Q\n 3. part {..<brn c} Q\n 4. part {..<brn d} (lift P F ` Q)", "show \"{} \\<notin> lift P F ` Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<notin> lift P F ` Q", "unfolding lift_def [abs_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<notin> (\\<lambda>II.\n                    \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II}) `\n                Q", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>II.\n       \\<lbrakk>{} = \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II};\n        II \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> False", "fix II"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>II.\n       \\<lbrakk>{} = \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II};\n        II \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> False", "assume 1: \"{} = \\<Union>{F I |I. I \\<in> P \\<and> I \\<subseteq> II}\" and II: \"II \\<in> Q\""], ["proof (state)\nthis:\n  {} = \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II}\n  II \\<in> Q\n\ngoal (1 subgoal):\n 1. \\<And>II.\n       \\<lbrakk>{} = \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II};\n        II \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"II \\<noteq> {}\""], ["proof (prove)\nusing this:\n  {} = \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II}\n  II \\<in> Q\n\ngoal (1 subgoal):\n 1. II \\<noteq> {}", "using Q"], ["proof (prove)\nusing this:\n  {} = \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II}\n  II \\<in> Q\n  finer P Q\n  finite Q\n  {} \\<notin> Q\n  part {..<brn c} Q\n\ngoal (1 subgoal):\n 1. II \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  II \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>II.\n       \\<lbrakk>{} = \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II};\n        II \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  II \\<noteq> {}", "obtain I where I: \"I \\<in> P\" and \"I \\<subseteq> II\""], ["proof (prove)\nusing this:\n  II \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>I \\<in> P; I \\<subseteq> II\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Q II"], ["proof (prove)\nusing this:\n  II \\<noteq> {}\n  finer P Q\n  finite Q\n  {} \\<notin> Q\n  part {..<brn c} Q\n  II \\<in> Q\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>I \\<in> P; I \\<subseteq> II\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding finer_def"], ["proof (prove)\nusing this:\n  II \\<noteq> {}\n  (\\<forall>J\\<in>Q. J = \\<Union> {I \\<in> P. I \\<subseteq> J}) \\<and>\n  (P \\<noteq> {} \\<longrightarrow> Q \\<noteq> {})\n  finite Q\n  {} \\<notin> Q\n  part {..<brn c} Q\n  II \\<in> Q\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>I \\<in> P; I \\<subseteq> II\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  I \\<in> P\n  I \\<subseteq> II\n\ngoal (1 subgoal):\n 1. \\<And>II.\n       \\<lbrakk>{} = \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II};\n        II \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"F I = {}\""], ["proof (prove)\nusing this:\n  I \\<in> P\n  I \\<subseteq> II\n\ngoal (1 subgoal):\n 1. F I = {}", "using 1"], ["proof (prove)\nusing this:\n  I \\<in> P\n  I \\<subseteq> II\n  {} = \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II}\n\ngoal (1 subgoal):\n 1. F I = {}", "by auto"], ["proof (state)\nthis:\n  F I = {}\n\ngoal (1 subgoal):\n 1. \\<And>II.\n       \\<lbrakk>{} = \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II};\n        II \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  F I = {}\n\ngoal (1 subgoal):\n 1. False", "using * I"], ["proof (prove)\nusing this:\n  F I = {}\n  mC_C theta c d s t P F\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. False", "unfolding mC_C_def mC_C_part_def"], ["proof (prove)\nusing this:\n  F I = {}\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  mC_C_wt c d s t P F \\<and> mC_C_eff_cont theta c d s t P F\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {} \\<notin> lift P F ` Q\n\ngoal (3 subgoals):\n 1. {} \\<notin> Q\n 2. part {..<brn c} Q\n 3. part {..<brn d} (lift P F ` Q)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. {} \\<notin> Q\n 2. part {..<brn c} Q\n 3. part {..<brn d} (lift P F ` Q)", "show \"part {..<brn d} (lift P F ` Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part {..<brn d} (lift P F ` Q)", "using Q * part_lift[of \"{..<brn c}\" P Q F \"{..<brn d}\"]"], ["proof (prove)\nusing this:\n  finer P Q\n  finite Q\n  {} \\<notin> Q\n  part {..<brn c} Q\n  mC_C theta c d s t P F\n  \\<lbrakk>part {..<brn c} P; part {..<brn c} Q; finer P Q; inj_on F P;\n   part {..<brn d} (F ` P); {} \\<notin> P; {} \\<notin> F ` P\\<rbrakk>\n  \\<Longrightarrow> part {..<brn d} (lift P F ` Q)\n\ngoal (1 subgoal):\n 1. part {..<brn d} (lift P F ` Q)", "unfolding mC_C_def mC_C_part_def"], ["proof (prove)\nusing this:\n  finer P Q\n  finite Q\n  {} \\<notin> Q\n  part {..<brn c} Q\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  mC_C_wt c d s t P F \\<and> mC_C_eff_cont theta c d s t P F\n  \\<lbrakk>part {..<brn c} P; part {..<brn c} Q; finer P Q; inj_on F P;\n   part {..<brn d} (F ` P); {} \\<notin> P; {} \\<notin> F ` P\\<rbrakk>\n  \\<Longrightarrow> part {..<brn d} (lift P F ` Q)\n\ngoal (1 subgoal):\n 1. part {..<brn d} (lift P F ` Q)", "by auto"], ["proof (state)\nthis:\n  part {..<brn d} (lift P F ` Q)\n\ngoal (2 subgoals):\n 1. {} \\<notin> Q\n 2. part {..<brn c} Q", "qed (insert Q, auto)"], ["proof (state)\nthis:\n  mC_C_part c d Q (lift P F)\n\ngoal (3 subgoals):\n 1. inj_on (lift P F) Q\n 2. mC_C_wt c d s t Q (lift P F)\n 3. mC_C_eff_cont theta c d s t Q (lift P F)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. inj_on (lift P F) Q\n 2. mC_C_wt c d s t Q (lift P F)\n 3. mC_C_eff_cont theta c d s t Q (lift P F)", "show \"inj_on (lift P F) Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (lift P F) Q", "using Q * inj_on_lift[of \"{..<brn c}\" P Q F \"{..<brn d}\"]"], ["proof (prove)\nusing this:\n  finer P Q\n  finite Q\n  {} \\<notin> Q\n  part {..<brn c} Q\n  mC_C theta c d s t P F\n  \\<lbrakk>part {..<brn c} P; part {..<brn c} Q; finer P Q; inj_on F P;\n   part {..<brn d} (F ` P); {} \\<notin> F ` P\\<rbrakk>\n  \\<Longrightarrow> inj_on (lift P F) Q\n\ngoal (1 subgoal):\n 1. inj_on (lift P F) Q", "unfolding mC_C_def mC_C_part_def"], ["proof (prove)\nusing this:\n  finer P Q\n  finite Q\n  {} \\<notin> Q\n  part {..<brn c} Q\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  mC_C_wt c d s t P F \\<and> mC_C_eff_cont theta c d s t P F\n  \\<lbrakk>part {..<brn c} P; part {..<brn c} Q; finer P Q; inj_on F P;\n   part {..<brn d} (F ` P); {} \\<notin> F ` P\\<rbrakk>\n  \\<Longrightarrow> inj_on (lift P F) Q\n\ngoal (1 subgoal):\n 1. inj_on (lift P F) Q", "by auto"], ["proof (state)\nthis:\n  inj_on (lift P F) Q\n\ngoal (2 subgoals):\n 1. mC_C_wt c d s t Q (lift P F)\n 2. mC_C_eff_cont theta c d s t Q (lift P F)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. mC_C_wt c d s t Q (lift P F)\n 2. mC_C_eff_cont theta c d s t Q (lift P F)", "show \"mC_C_wt c d s t Q (lift P F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_C_wt c d s t Q (lift P F)", "unfolding mC_C_wt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>I\\<in>Q. sum (wt c s) I = sum (wt d t) (lift P F I)", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I.\n       I \\<in> Q \\<Longrightarrow>\n       sum (wt c s) I = sum (wt d t) (lift P F I)", "fix II"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I.\n       I \\<in> Q \\<Longrightarrow>\n       sum (wt c s) I = sum (wt d t) (lift P F I)", "assume II: \"II \\<in> Q\""], ["proof (state)\nthis:\n  II \\<in> Q\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       I \\<in> Q \\<Longrightarrow>\n       sum (wt c s) I = sum (wt d t) (lift P F I)", "define S where \"S = {I \\<in> P . I \\<subseteq> II}\""], ["proof (state)\nthis:\n  S = {I \\<in> P. I \\<subseteq> II}\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       I \\<in> Q \\<Longrightarrow>\n       sum (wt c s) I = sum (wt d t) (lift P F I)", "have II: \"II = (UN I : S . id I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. II = \\<Union> (id ` S)", "using II Q"], ["proof (prove)\nusing this:\n  II \\<in> Q\n  finer P Q\n  finite Q\n  {} \\<notin> Q\n  part {..<brn c} Q\n\ngoal (1 subgoal):\n 1. II = \\<Union> (id ` S)", "unfolding finer_def S_def"], ["proof (prove)\nusing this:\n  II \\<in> Q\n  (\\<forall>J\\<in>Q. J = \\<Union> {I \\<in> P. I \\<subseteq> J}) \\<and>\n  (P \\<noteq> {} \\<longrightarrow> Q \\<noteq> {})\n  finite Q\n  {} \\<notin> Q\n  part {..<brn c} Q\n\ngoal (1 subgoal):\n 1. II = \\<Union> (id ` {I \\<in> P. I \\<subseteq> II})", "by auto"], ["proof (state)\nthis:\n  II = \\<Union> (id ` S)\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       I \\<in> Q \\<Longrightarrow>\n       sum (wt c s) I = sum (wt d t) (lift P F I)", "have S: \"\\<And> I J. \\<lbrakk>I : S; J : S; I \\<noteq> J\\<rbrakk> \\<Longrightarrow> id I Int id J = {}\" \"finite S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>I J.\n        \\<lbrakk>I \\<in> S; J \\<in> S; I \\<noteq> J\\<rbrakk>\n        \\<Longrightarrow> id I \\<inter> id J = {}) &&&\n    finite S", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>I J.\n        \\<lbrakk>I \\<in> {I \\<in> P. I \\<subseteq> II};\n         J \\<in> {I \\<in> P. I \\<subseteq> II}; I \\<noteq> J\\<rbrakk>\n        \\<Longrightarrow> id I \\<inter> id J = {}) &&&\n    finite {I \\<in> P. I \\<subseteq> II}", "using * finite_part[of \"{..<brn c}\" P]"], ["proof (prove)\nusing this:\n  mC_C theta c d s t P F\n  \\<lbrakk>finite {..<brn c}; part {..<brn c} P\\<rbrakk>\n  \\<Longrightarrow> finite P\n\ngoal (1 subgoal):\n 1. (\\<And>I J.\n        \\<lbrakk>I \\<in> {I \\<in> P. I \\<subseteq> II};\n         J \\<in> {I \\<in> P. I \\<subseteq> II}; I \\<noteq> J\\<rbrakk>\n        \\<Longrightarrow> id I \\<inter> id J = {}) &&&\n    finite {I \\<in> P. I \\<subseteq> II}", "unfolding mC_C_def mC_C_part_def part_def"], ["proof (prove)\nusing this:\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   (\\<Union> P = {..<brn c} \\<and>\n    (\\<forall>J1 J2.\n        J1 \\<in> P \\<and> J2 \\<in> P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n        J1 \\<inter> J2 = {})) \\<and>\n   \\<Union> (F ` P) = {..<brn d} \\<and>\n   (\\<forall>J1 J2.\n       J1 \\<in> F ` P \\<and>\n       J2 \\<in> F ` P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n       J1 \\<inter> J2 = {})) \\<and>\n  inj_on F P \\<and>\n  mC_C_wt c d s t P F \\<and> mC_C_eff_cont theta c d s t P F\n  \\<lbrakk>finite {..<brn c};\n   \\<Union> P = {..<brn c} \\<and>\n   (\\<forall>J1 J2.\n       J1 \\<in> P \\<and> J2 \\<in> P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n       J1 \\<inter> J2 = {})\\<rbrakk>\n  \\<Longrightarrow> finite P\n\ngoal (1 subgoal):\n 1. (\\<And>I J.\n        \\<lbrakk>I \\<in> {I \\<in> P. I \\<subseteq> II};\n         J \\<in> {I \\<in> P. I \\<subseteq> II}; I \\<noteq> J\\<rbrakk>\n        \\<Longrightarrow> id I \\<inter> id J = {}) &&&\n    finite {I \\<in> P. I \\<subseteq> II}", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?I1 \\<in> S; ?J1 \\<in> S; ?I1 \\<noteq> ?J1\\<rbrakk>\n  \\<Longrightarrow> id ?I1 \\<inter> id ?J1 = {}\n  finite S\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       I \\<in> Q \\<Longrightarrow>\n       sum (wt c s) I = sum (wt d t) (lift P F I)", "have SS: \"\\<forall>I\\<in>S. finite I\" \"\\<forall>i\\<in>S. finite (F i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>I\\<in>S. finite I &&& \\<forall>i\\<in>S. finite (F i)", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>I\\<in>{I \\<in> P. I \\<subseteq> II}. finite I &&&\n    \\<forall>i\\<in>{I \\<in> P. I \\<subseteq> II}. finite (F i)", "using *"], ["proof (prove)\nusing this:\n  mC_C theta c d s t P F\n\ngoal (1 subgoal):\n 1. \\<forall>I\\<in>{I \\<in> P. I \\<subseteq> II}. finite I &&&\n    \\<forall>i\\<in>{I \\<in> P. I \\<subseteq> II}. finite (F i)", "unfolding mC_C_def mC_C_part_def part_def"], ["proof (prove)\nusing this:\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   (\\<Union> P = {..<brn c} \\<and>\n    (\\<forall>J1 J2.\n        J1 \\<in> P \\<and> J2 \\<in> P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n        J1 \\<inter> J2 = {})) \\<and>\n   \\<Union> (F ` P) = {..<brn d} \\<and>\n   (\\<forall>J1 J2.\n       J1 \\<in> F ` P \\<and>\n       J2 \\<in> F ` P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n       J1 \\<inter> J2 = {})) \\<and>\n  inj_on F P \\<and>\n  mC_C_wt c d s t P F \\<and> mC_C_eff_cont theta c d s t P F\n\ngoal (1 subgoal):\n 1. \\<forall>I\\<in>{I \\<in> P. I \\<subseteq> II}. finite I &&&\n    \\<forall>i\\<in>{I \\<in> P. I \\<subseteq> II}. finite (F i)", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. {} \\<notin> P \\<and>\n    {} \\<notin> F ` P \\<and>\n    \\<Union> P = {..<brn c} \\<and>\n    (\\<forall>J1 J2.\n        J1 \\<in> P \\<and> J2 \\<in> P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n        J1 \\<inter> J2 = {}) \\<and>\n    \\<Union> (F ` P) = {..<brn d} \\<and>\n    (\\<forall>J1 J2.\n        J1 \\<in> F ` P \\<and>\n        J2 \\<in> F ` P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n        J1 \\<inter> J2 = {}) \\<and>\n    inj_on F P \\<and>\n    mC_C_wt c d s t P F \\<and>\n    mC_C_eff_cont theta c d s t P F \\<Longrightarrow>\n    \\<forall>x. x \\<in> P \\<and> x \\<subseteq> II \\<longrightarrow> finite x\n 2. {} \\<notin> P \\<and>\n    {} \\<notin> F ` P \\<and>\n    \\<Union> P = {..<brn c} \\<and>\n    (\\<forall>J1 J2.\n        J1 \\<in> P \\<and> J2 \\<in> P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n        J1 \\<inter> J2 = {}) \\<and>\n    \\<Union> (F ` P) = {..<brn d} \\<and>\n    (\\<forall>J1 J2.\n        J1 \\<in> F ` P \\<and>\n        J2 \\<in> F ` P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n        J1 \\<inter> J2 = {}) \\<and>\n    inj_on F P \\<and>\n    mC_C_wt c d s t P F \\<and>\n    mC_C_eff_cont theta c d s t P F \\<Longrightarrow>\n    \\<forall>i.\n       i \\<in> P \\<and> i \\<subseteq> II \\<longrightarrow> finite (F i)", "apply (metis complete_lattice_class.Sup_upper finite_lessThan finite_subset)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<notin> P \\<and>\n    {} \\<notin> F ` P \\<and>\n    \\<Union> P = {..<brn c} \\<and>\n    (\\<forall>J1 J2.\n        J1 \\<in> P \\<and> J2 \\<in> P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n        J1 \\<inter> J2 = {}) \\<and>\n    \\<Union> (F ` P) = {..<brn d} \\<and>\n    (\\<forall>J1 J2.\n        J1 \\<in> F ` P \\<and>\n        J2 \\<in> F ` P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n        J1 \\<inter> J2 = {}) \\<and>\n    inj_on F P \\<and>\n    mC_C_wt c d s t P F \\<and>\n    mC_C_eff_cont theta c d s t P F \\<Longrightarrow>\n    \\<forall>i.\n       i \\<in> P \\<and> i \\<subseteq> II \\<longrightarrow> finite (F i)", "by (metis finite_UN finite_UnionD finite_lessThan)"], ["proof (state)\nthis:\n  \\<forall>I\\<in>S. finite I\n  \\<forall>i\\<in>S. finite (F i)\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       I \\<in> Q \\<Longrightarrow>\n       sum (wt c s) I = sum (wt d t) (lift P F I)", "have SSS: \"\\<forall>i\\<in>S. \\<forall>j\\<in>S. i \\<noteq> j \\<longrightarrow> F i \\<inter> F j = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>S.\n       \\<forall>j\\<in>S.\n          i \\<noteq> j \\<longrightarrow> F i \\<inter> F j = {}", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i \\<in> S; j \\<in> S; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> F i \\<inter> F j = {}", "fix I J"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i \\<in> S; j \\<in> S; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> F i \\<inter> F j = {}", "assume \"I \\<in> S\" and \"J \\<in> S\" and diff: \"I \\<noteq> J\""], ["proof (state)\nthis:\n  I \\<in> S\n  J \\<in> S\n  I \\<noteq> J\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i \\<in> S; j \\<in> S; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> F i \\<inter> F j = {}", "hence IJ: \"{I,J} \\<subseteq> P\""], ["proof (prove)\nusing this:\n  I \\<in> S\n  J \\<in> S\n  I \\<noteq> J\n\ngoal (1 subgoal):\n 1. {I, J} \\<subseteq> P", "unfolding S_def"], ["proof (prove)\nusing this:\n  I \\<in> {I \\<in> P. I \\<subseteq> II}\n  J \\<in> {I \\<in> P. I \\<subseteq> II}\n  I \\<noteq> J\n\ngoal (1 subgoal):\n 1. {I, J} \\<subseteq> P", "by simp"], ["proof (state)\nthis:\n  {I, J} \\<subseteq> P\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i \\<in> S; j \\<in> S; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> F i \\<inter> F j = {}", "hence \"F I \\<noteq> F J\""], ["proof (prove)\nusing this:\n  {I, J} \\<subseteq> P\n\ngoal (1 subgoal):\n 1. F I \\<noteq> F J", "using * diff"], ["proof (prove)\nusing this:\n  {I, J} \\<subseteq> P\n  mC_C theta c d s t P F\n  I \\<noteq> J\n\ngoal (1 subgoal):\n 1. F I \\<noteq> F J", "unfolding mC_C_def inj_on_def"], ["proof (prove)\nusing this:\n  {I, J} \\<subseteq> P\n  mC_C_part c d P F \\<and>\n  (\\<forall>x\\<in>P.\n      \\<forall>y\\<in>P. F x = F y \\<longrightarrow> x = y) \\<and>\n  mC_C_wt c d s t P F \\<and> mC_C_eff_cont theta c d s t P F\n  I \\<noteq> J\n\ngoal (1 subgoal):\n 1. F I \\<noteq> F J", "by auto"], ["proof (state)\nthis:\n  F I \\<noteq> F J\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i \\<in> S; j \\<in> S; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> F i \\<inter> F j = {}", "thus \"F I \\<inter> F J = {}\""], ["proof (prove)\nusing this:\n  F I \\<noteq> F J\n\ngoal (1 subgoal):\n 1. F I \\<inter> F J = {}", "using * IJ"], ["proof (prove)\nusing this:\n  F I \\<noteq> F J\n  mC_C theta c d s t P F\n  {I, J} \\<subseteq> P\n\ngoal (1 subgoal):\n 1. F I \\<inter> F J = {}", "unfolding mC_C_def mC_C_part_def part_def"], ["proof (prove)\nusing this:\n  F I \\<noteq> F J\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   (\\<Union> P = {..<brn c} \\<and>\n    (\\<forall>J1 J2.\n        J1 \\<in> P \\<and> J2 \\<in> P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n        J1 \\<inter> J2 = {})) \\<and>\n   \\<Union> (F ` P) = {..<brn d} \\<and>\n   (\\<forall>J1 J2.\n       J1 \\<in> F ` P \\<and>\n       J2 \\<in> F ` P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n       J1 \\<inter> J2 = {})) \\<and>\n  inj_on F P \\<and>\n  mC_C_wt c d s t P F \\<and> mC_C_eff_cont theta c d s t P F\n  {I, J} \\<subseteq> P\n\ngoal (1 subgoal):\n 1. F I \\<inter> F J = {}", "by auto"], ["proof (state)\nthis:\n  F I \\<inter> F J = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i\\<in>S.\n     \\<forall>j\\<in>S. i \\<noteq> j \\<longrightarrow> F i \\<inter> F j = {}\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       I \\<in> Q \\<Longrightarrow>\n       sum (wt c s) I = sum (wt d t) (lift P F I)", "have \"sum (wt c s) II = sum (sum (wt c s)) S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt c s) II = sum (sum (wt c s)) S", "unfolding II"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt c s) (\\<Union> (id ` S)) = sum (sum (wt c s)) S", "using S SS sum.UNION_disjoint[of S id \"wt c s\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?I1 \\<in> S; ?J1 \\<in> S; ?I1 \\<noteq> ?J1\\<rbrakk>\n  \\<Longrightarrow> id ?I1 \\<inter> id ?J1 = {}\n  finite S\n  \\<forall>I\\<in>S. finite I\n  \\<forall>i\\<in>S. finite (F i)\n  \\<lbrakk>finite S; \\<forall>i\\<in>S. finite (id i);\n   \\<forall>i\\<in>S.\n      \\<forall>j\\<in>S.\n         i \\<noteq> j \\<longrightarrow> id i \\<inter> id j = {}\\<rbrakk>\n  \\<Longrightarrow> sum (wt c s) (\\<Union> (id ` S)) =\n                    (\\<Sum>x\\<in>S. sum (wt c s) (id x))\n\ngoal (1 subgoal):\n 1. sum (wt c s) (\\<Union> (id ` S)) = sum (sum (wt c s)) S", "by simp"], ["proof (state)\nthis:\n  sum (wt c s) II = sum (sum (wt c s)) S\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       I \\<in> Q \\<Longrightarrow>\n       sum (wt c s) I = sum (wt d t) (lift P F I)", "also"], ["proof (state)\nthis:\n  sum (wt c s) II = sum (sum (wt c s)) S\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       I \\<in> Q \\<Longrightarrow>\n       sum (wt c s) I = sum (wt d t) (lift P F I)", "have \"... = sum (% I. sum (wt d t) (F I)) S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (sum (wt c s)) S = (\\<Sum>I\\<in>S. sum (wt d t) (F I))", "apply(rule sum.cong)"], ["proof (prove)\ngoal (2 subgoals):\n 1. S = S\n 2. \\<And>x. x \\<in> S \\<Longrightarrow> sum (wt c s) x = sum (wt d t) (F x)", "using S"], ["proof (prove)\nusing this:\n  \\<lbrakk>?I1 \\<in> S; ?J1 \\<in> S; ?I1 \\<noteq> ?J1\\<rbrakk>\n  \\<Longrightarrow> id ?I1 \\<inter> id ?J1 = {}\n  finite S\n\ngoal (2 subgoals):\n 1. S = S\n 2. \\<And>x. x \\<in> S \\<Longrightarrow> sum (wt c s) x = sum (wt d t) (F x)", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> sum (wt c s) x = sum (wt d t) (F x)", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {I \\<in> P. I \\<subseteq> II} \\<Longrightarrow>\n       sum (wt c s) x = sum (wt d t) (F x)", "using *"], ["proof (prove)\nusing this:\n  mC_C theta c d s t P F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {I \\<in> P. I \\<subseteq> II} \\<Longrightarrow>\n       sum (wt c s) x = sum (wt d t) (F x)", "unfolding mC_C_def mC_C_part_def mC_C_wt_def"], ["proof (prove)\nusing this:\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  (\\<forall>I\\<in>P. sum (wt c s) I = sum (wt d t) (F I)) \\<and>\n  mC_C_eff_cont theta c d s t P F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {I \\<in> P. I \\<subseteq> II} \\<Longrightarrow>\n       sum (wt c s) x = sum (wt d t) (F x)", "by auto"], ["proof (state)\nthis:\n  sum (sum (wt c s)) S = (\\<Sum>I\\<in>S. sum (wt d t) (F I))\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       I \\<in> Q \\<Longrightarrow>\n       sum (wt c s) I = sum (wt d t) (lift P F I)", "also"], ["proof (state)\nthis:\n  sum (sum (wt c s)) S = (\\<Sum>I\\<in>S. sum (wt d t) (F I))\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       I \\<in> Q \\<Longrightarrow>\n       sum (wt c s) I = sum (wt d t) (lift P F I)", "have \"... = sum (wt d t) (UN I : S . F I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>I\\<in>S. sum (wt d t) (F I)) = sum (wt d t) (\\<Union> (F ` S))", "unfolding lift_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>I\\<in>S. sum (wt d t) (F I)) = sum (wt d t) (\\<Union> (F ` S))", "using S sum.UNION_disjoint[of S F \"wt d t\"] S SS SSS"], ["proof (prove)\nusing this:\n  \\<lbrakk>?I1 \\<in> S; ?J1 \\<in> S; ?I1 \\<noteq> ?J1\\<rbrakk>\n  \\<Longrightarrow> id ?I1 \\<inter> id ?J1 = {}\n  finite S\n  \\<lbrakk>finite S; \\<forall>i\\<in>S. finite (F i);\n   \\<forall>i\\<in>S.\n      \\<forall>j\\<in>S.\n         i \\<noteq> j \\<longrightarrow> F i \\<inter> F j = {}\\<rbrakk>\n  \\<Longrightarrow> sum (wt d t) (\\<Union> (F ` S)) =\n                    (\\<Sum>x\\<in>S. sum (wt d t) (F x))\n  \\<lbrakk>?I1 \\<in> S; ?J1 \\<in> S; ?I1 \\<noteq> ?J1\\<rbrakk>\n  \\<Longrightarrow> id ?I1 \\<inter> id ?J1 = {}\n  finite S\n  \\<forall>I\\<in>S. finite I\n  \\<forall>i\\<in>S. finite (F i)\n  \\<forall>i\\<in>S.\n     \\<forall>j\\<in>S. i \\<noteq> j \\<longrightarrow> F i \\<inter> F j = {}\n\ngoal (1 subgoal):\n 1. (\\<Sum>I\\<in>S. sum (wt d t) (F I)) = sum (wt d t) (\\<Union> (F ` S))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>I\\<in>S. sum (wt d t) (F I)) = sum (wt d t) (\\<Union> (F ` S))\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       I \\<in> Q \\<Longrightarrow>\n       sum (wt c s) I = sum (wt d t) (lift P F I)", "also"], ["proof (state)\nthis:\n  (\\<Sum>I\\<in>S. sum (wt d t) (F I)) = sum (wt d t) (\\<Union> (F ` S))\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       I \\<in> Q \\<Longrightarrow>\n       sum (wt c s) I = sum (wt d t) (lift P F I)", "have \"(UN I : S . F I) = lift P F II\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (F ` S) = lift P F II", "unfolding lift_def S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (F ` {I \\<in> P. I \\<subseteq> II}) =\n    \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II}", "by auto"], ["proof (state)\nthis:\n  \\<Union> (F ` S) = lift P F II\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       I \\<in> Q \\<Longrightarrow>\n       sum (wt c s) I = sum (wt d t) (lift P F I)", "finally"], ["proof (chain)\npicking this:\n  sum (wt c s) II = sum (wt d t) (lift P F II)", "show \"sum (wt c s) II = sum (wt d t) (lift P F II)\""], ["proof (prove)\nusing this:\n  sum (wt c s) II = sum (wt d t) (lift P F II)\n\ngoal (1 subgoal):\n 1. sum (wt c s) II = sum (wt d t) (lift P F II)", "."], ["proof (state)\nthis:\n  sum (wt c s) II = sum (wt d t) (lift P F II)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mC_C_wt c d s t Q (lift P F)\n\ngoal (1 subgoal):\n 1. mC_C_eff_cont theta c d s t Q (lift P F)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. mC_C_eff_cont theta c d s t Q (lift P F)", "show \"mC_C_eff_cont theta c d s t Q (lift P F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_C_eff_cont theta c d s t Q (lift P F)", "unfolding mC_C_eff_cont_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>I i j.\n       I \\<in> Q \\<and>\n       i \\<in> I \\<and> j \\<in> lift P F I \\<longrightarrow>\n       eff c s i \\<approx> eff d t j \\<and>\n       (local.cont c s i, local.cont d t j) \\<in> theta", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> Q; i \\<in> I; j \\<in> lift P F I\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff d t j \\<and>\n                         (local.cont c s i, local.cont d t j) \\<in> theta", "fix II i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> Q; i \\<in> I; j \\<in> lift P F I\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff d t j \\<and>\n                         (local.cont c s i, local.cont d t j) \\<in> theta", "assume II: \"II \\<in> Q\" and i: \"i \\<in> II\" and \"j \\<in> lift P F II\""], ["proof (state)\nthis:\n  II \\<in> Q\n  i \\<in> II\n  j \\<in> lift P F II\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> Q; i \\<in> I; j \\<in> lift P F I\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff d t j \\<and>\n                         (local.cont c s i, local.cont d t j) \\<in> theta", "then"], ["proof (chain)\npicking this:\n  II \\<in> Q\n  i \\<in> II\n  j \\<in> lift P F II", "obtain I where j: \"j \\<in> F I\" and I: \"I \\<in> P \\<and> I \\<subseteq> II\""], ["proof (prove)\nusing this:\n  II \\<in> Q\n  i \\<in> II\n  j \\<in> lift P F II\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>j \\<in> F I; I \\<in> P \\<and> I \\<subseteq> II\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding lift_def"], ["proof (prove)\nusing this:\n  II \\<in> Q\n  i \\<in> II\n  j \\<in> \\<Union> {F I |I. I \\<in> P \\<and> I \\<subseteq> II}\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>j \\<in> F I; I \\<in> P \\<and> I \\<subseteq> II\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  j \\<in> F I\n  I \\<in> P \\<and> I \\<subseteq> II\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> Q; i \\<in> I; j \\<in> lift P F I\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff d t j \\<and>\n                         (local.cont c s i, local.cont d t j) \\<in> theta", "hence \"I \\<noteq> {}\""], ["proof (prove)\nusing this:\n  j \\<in> F I\n  I \\<in> P \\<and> I \\<subseteq> II\n\ngoal (1 subgoal):\n 1. I \\<noteq> {}", "using *"], ["proof (prove)\nusing this:\n  j \\<in> F I\n  I \\<in> P \\<and> I \\<subseteq> II\n  mC_C theta c d s t P F\n\ngoal (1 subgoal):\n 1. I \\<noteq> {}", "unfolding mC_C_def mC_C_part_def"], ["proof (prove)\nusing this:\n  j \\<in> F I\n  I \\<in> P \\<and> I \\<subseteq> II\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  mC_C_wt c d s t P F \\<and> mC_C_eff_cont theta c d s t P F\n\ngoal (1 subgoal):\n 1. I \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> Q; i \\<in> I; j \\<in> lift P F I\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff d t j \\<and>\n                         (local.cont c s i, local.cont d t j) \\<in> theta", "then"], ["proof (chain)\npicking this:\n  I \\<noteq> {}", "obtain i' where i': \"i' \\<in> I\""], ["proof (prove)\nusing this:\n  I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>i'. i' \\<in> I \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  i' \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> Q; i \\<in> I; j \\<in> lift P F I\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff d t j \\<and>\n                         (local.cont c s i, local.cont d t j) \\<in> theta", "hence 1: \"eff c s i' \\<approx> eff d t j \\<and> (cont c s i', cont d t j) \\<in> theta\""], ["proof (prove)\nusing this:\n  i' \\<in> I\n\ngoal (1 subgoal):\n 1. eff c s i' \\<approx> eff d t j \\<and>\n    (local.cont c s i', local.cont d t j) \\<in> theta", "using * j I"], ["proof (prove)\nusing this:\n  i' \\<in> I\n  mC_C theta c d s t P F\n  j \\<in> F I\n  I \\<in> P \\<and> I \\<subseteq> II\n\ngoal (1 subgoal):\n 1. eff c s i' \\<approx> eff d t j \\<and>\n    (local.cont c s i', local.cont d t j) \\<in> theta", "unfolding mC_C_def mC_C_eff_cont_def"], ["proof (prove)\nusing this:\n  i' \\<in> I\n  mC_C_part c d P F \\<and>\n  inj_on F P \\<and>\n  mC_C_wt c d s t P F \\<and>\n  (\\<forall>I i j.\n      I \\<in> P \\<and> i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n      eff c s i \\<approx> eff d t j \\<and>\n      (local.cont c s i, local.cont d t j) \\<in> theta)\n  j \\<in> F I\n  I \\<in> P \\<and> I \\<subseteq> II\n\ngoal (1 subgoal):\n 1. eff c s i' \\<approx> eff d t j \\<and>\n    (local.cont c s i', local.cont d t j) \\<in> theta", "by auto"], ["proof (state)\nthis:\n  eff c s i' \\<approx> eff d t j \\<and>\n  (local.cont c s i', local.cont d t j) \\<in> theta\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> Q; i \\<in> I; j \\<in> lift P F I\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff d t j \\<and>\n                         (local.cont c s i, local.cont d t j) \\<in> theta", "show \"eff c s i \\<approx> eff d t j \\<and> (cont c s i, cont d t j) \\<in> theta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "proof(cases \"i' = i\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i' = i \\<Longrightarrow>\n    eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta\n 2. i' \\<noteq> i \\<Longrightarrow>\n    eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "case True"], ["proof (state)\nthis:\n  i' = i\n\ngoal (2 subgoals):\n 1. i' = i \\<Longrightarrow>\n    eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta\n 2. i' \\<noteq> i \\<Longrightarrow>\n    eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "using 1"], ["proof (prove)\nusing this:\n  eff c s i' \\<approx> eff d t j \\<and>\n  (local.cont c s i', local.cont d t j) \\<in> theta\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "unfolding True"], ["proof (prove)\nusing this:\n  eff c s i \\<approx> eff d t j \\<and>\n  (local.cont c s i, local.cont d t j) \\<in> theta\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "."], ["proof (state)\nthis:\n  eff c s i \\<approx> eff d t j \\<and>\n  (local.cont c s i, local.cont d t j) \\<in> theta\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow>\n    eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow>\n    eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "case False"], ["proof (state)\nthis:\n  i' \\<noteq> i\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow>\n    eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "moreover"], ["proof (state)\nthis:\n  i' \\<noteq> i\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow>\n    eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "have \"i' \\<in> II\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i' \\<in> II", "using I i'"], ["proof (prove)\nusing this:\n  I \\<in> P \\<and> I \\<subseteq> II\n  i' \\<in> I\n\ngoal (1 subgoal):\n 1. i' \\<in> II", "by auto"], ["proof (state)\nthis:\n  i' \\<in> II\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow>\n    eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "ultimately"], ["proof (chain)\npicking this:\n  i' \\<noteq> i\n  i' \\<in> II", "have \"eff c s i \\<approx> eff c s i' \\<and> (cont c s i, cont c s i') \\<in> theta\""], ["proof (prove)\nusing this:\n  i' \\<noteq> i\n  i' \\<in> II\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff c s i' \\<and>\n    (local.cont c s i, local.cont c s i') \\<in> theta", "using i II c"], ["proof (prove)\nusing this:\n  i' \\<noteq> i\n  i' \\<in> II\n  i \\<in> II\n  II \\<in> Q\n  partCompat Q indis (eff c s)\n  partCompat Q theta (local.cont c s)\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff c s i' \\<and>\n    (local.cont c s i, local.cont c s i') \\<in> theta", "unfolding partCompat_def compat_def"], ["proof (prove)\nusing this:\n  i' \\<noteq> i\n  i' \\<in> II\n  i \\<in> II\n  II \\<in> Q\n  \\<forall>I\\<in>Q.\n     \\<forall>i j.\n        {i, j} \\<subseteq> I \\<and> i \\<noteq> j \\<longrightarrow>\n        eff c s i \\<approx> eff c s j\n  \\<forall>I\\<in>Q.\n     \\<forall>i j.\n        {i, j} \\<subseteq> I \\<and> i \\<noteq> j \\<longrightarrow>\n        (local.cont c s i, local.cont c s j) \\<in> theta\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff c s i' \\<and>\n    (local.cont c s i, local.cont c s i') \\<in> theta", "by auto"], ["proof (state)\nthis:\n  eff c s i \\<approx> eff c s i' \\<and>\n  (local.cont c s i, local.cont c s i') \\<in> theta\n\ngoal (1 subgoal):\n 1. i' \\<noteq> i \\<Longrightarrow>\n    eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "thus ?thesis"], ["proof (prove)\nusing this:\n  eff c s i \\<approx> eff c s i' \\<and>\n  (local.cont c s i, local.cont c s i') \\<in> theta\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "using 1 indis_trans theta"], ["proof (prove)\nusing this:\n  eff c s i \\<approx> eff c s i' \\<and>\n  (local.cont c s i, local.cont c s i') \\<in> theta\n  eff c s i' \\<approx> eff d t j \\<and>\n  (local.cont c s i', local.cont d t j) \\<in> theta\n  \\<lbrakk>?s \\<approx> ?s'; ?s' \\<approx> ?s''\\<rbrakk>\n  \\<Longrightarrow> ?s \\<approx> ?s''\n  trans theta\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "unfolding trans_def"], ["proof (prove)\nusing this:\n  eff c s i \\<approx> eff c s i' \\<and>\n  (local.cont c s i, local.cont c s i') \\<in> theta\n  eff c s i' \\<approx> eff d t j \\<and>\n  (local.cont c s i', local.cont d t j) \\<in> theta\n  \\<lbrakk>?s \\<approx> ?s'; ?s' \\<approx> ?s''\\<rbrakk>\n  \\<Longrightarrow> ?s \\<approx> ?s''\n  \\<forall>x y z.\n     (x, y) \\<in> theta \\<longrightarrow>\n     (y, z) \\<in> theta \\<longrightarrow> (x, z) \\<in> theta\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "by blast"], ["proof (state)\nthis:\n  eff c s i \\<approx> eff d t j \\<and>\n  (local.cont c s i, local.cont d t j) \\<in> theta\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  eff c s i \\<approx> eff d t j \\<and>\n  (local.cont c s i, local.cont d t j) \\<in> theta\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mC_C_eff_cont theta c d s t Q (lift P F)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mC_C_partCompat_eff:\nassumes *: \"mC_C theta c d s t P F\"\nshows \"partCompat P indis (eff c s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partCompat P indis (eff c s)", "unfolding partCompat_def compat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>I\\<in>P.\n       \\<forall>i j.\n          {i, j} \\<subseteq> I \\<and> i \\<noteq> j \\<longrightarrow>\n          eff c s i \\<approx> eff c s j", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; {i, j} \\<subseteq> I; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff c s j", "fix I i i'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; {i, j} \\<subseteq> I; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff c s j", "assume I: \"I \\<in> P\" and ii': \"{i, i'} \\<subseteq> I\" \"i \\<noteq> i'\""], ["proof (state)\nthis:\n  I \\<in> P\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; {i, j} \\<subseteq> I; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff c s j", "hence \"F I \\<noteq> {}\""], ["proof (prove)\nusing this:\n  I \\<in> P\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n\ngoal (1 subgoal):\n 1. F I \\<noteq> {}", "using *"], ["proof (prove)\nusing this:\n  I \\<in> P\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n  mC_C theta c d s t P F\n\ngoal (1 subgoal):\n 1. F I \\<noteq> {}", "unfolding m_defsAll"], ["proof (prove)\nusing this:\n  I \\<in> P\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  (\\<forall>I\\<in>P. sum (wt c s) I = sum (wt d t) (F I)) \\<and>\n  (\\<forall>I i j.\n      I \\<in> P \\<and> i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n      eff c s i \\<approx> eff d t j \\<and>\n      (local.cont c s i, local.cont d t j) \\<in> theta)\n\ngoal (1 subgoal):\n 1. F I \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  F I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; {i, j} \\<subseteq> I; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff c s j", "then"], ["proof (chain)\npicking this:\n  F I \\<noteq> {}", "obtain j where j: \"j \\<in> F I\""], ["proof (prove)\nusing this:\n  F I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>j. j \\<in> F I \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  j \\<in> F I\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; {i, j} \\<subseteq> I; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff c s j", "from ii' j I"], ["proof (chain)\npicking this:\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n  j \\<in> F I\n  I \\<in> P", "have 1: \"eff c s i \\<approx> eff d t j\""], ["proof (prove)\nusing this:\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n  j \\<in> F I\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff d t j", "using *"], ["proof (prove)\nusing this:\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n  j \\<in> F I\n  I \\<in> P\n  mC_C theta c d s t P F\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff d t j", "unfolding m_defsAll"], ["proof (prove)\nusing this:\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n  j \\<in> F I\n  I \\<in> P\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  (\\<forall>I\\<in>P. sum (wt c s) I = sum (wt d t) (F I)) \\<and>\n  (\\<forall>I i j.\n      I \\<in> P \\<and> i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n      eff c s i \\<approx> eff d t j \\<and>\n      (local.cont c s i, local.cont d t j) \\<in> theta)\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff d t j", "by blast"], ["proof (state)\nthis:\n  eff c s i \\<approx> eff d t j\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; {i, j} \\<subseteq> I; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff c s j", "from ii' j I"], ["proof (chain)\npicking this:\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n  j \\<in> F I\n  I \\<in> P", "have 2: \"eff c s i' \\<approx> eff d t j\""], ["proof (prove)\nusing this:\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n  j \\<in> F I\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. eff c s i' \\<approx> eff d t j", "using *"], ["proof (prove)\nusing this:\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n  j \\<in> F I\n  I \\<in> P\n  mC_C theta c d s t P F\n\ngoal (1 subgoal):\n 1. eff c s i' \\<approx> eff d t j", "unfolding m_defsAll"], ["proof (prove)\nusing this:\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n  j \\<in> F I\n  I \\<in> P\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  (\\<forall>I\\<in>P. sum (wt c s) I = sum (wt d t) (F I)) \\<and>\n  (\\<forall>I i j.\n      I \\<in> P \\<and> i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n      eff c s i \\<approx> eff d t j \\<and>\n      (local.cont c s i, local.cont d t j) \\<in> theta)\n\ngoal (1 subgoal):\n 1. eff c s i' \\<approx> eff d t j", "by blast"], ["proof (state)\nthis:\n  eff c s i' \\<approx> eff d t j\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; {i, j} \\<subseteq> I; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> eff c s i \\<approx> eff c s j", "from 1 2"], ["proof (chain)\npicking this:\n  eff c s i \\<approx> eff d t j\n  eff c s i' \\<approx> eff d t j", "show \"eff c s i \\<approx> eff c s i'\""], ["proof (prove)\nusing this:\n  eff c s i \\<approx> eff d t j\n  eff c s i' \\<approx> eff d t j\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff c s i'", "using indis_trans indis_sym"], ["proof (prove)\nusing this:\n  eff c s i \\<approx> eff d t j\n  eff c s i' \\<approx> eff d t j\n  \\<lbrakk>?s \\<approx> ?s'; ?s' \\<approx> ?s''\\<rbrakk>\n  \\<Longrightarrow> ?s \\<approx> ?s''\n  ?s \\<approx> ?s' \\<Longrightarrow> ?s' \\<approx> ?s\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff c s i'", "by blast"], ["proof (state)\nthis:\n  eff c s i \\<approx> eff c s i'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mC_C_partCompat_cont:\nassumes *: \"mC_C theta c d s t P F\"\nand theta: \"sym theta\" \"trans theta\"\nshows \"partCompat P theta (cont c s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partCompat P theta (local.cont c s)", "unfolding partCompat_def compat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>I\\<in>P.\n       \\<forall>i j.\n          {i, j} \\<subseteq> I \\<and> i \\<noteq> j \\<longrightarrow>\n          (local.cont c s i, local.cont c s j) \\<in> theta", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; {i, j} \\<subseteq> I; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> (local.cont c s i, local.cont c s j) \\<in> theta", "fix I i i'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; {i, j} \\<subseteq> I; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> (local.cont c s i, local.cont c s j) \\<in> theta", "assume I: \"I \\<in> P\" and ii': \"{i, i'} \\<subseteq> I\" \"i \\<noteq> i'\""], ["proof (state)\nthis:\n  I \\<in> P\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; {i, j} \\<subseteq> I; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> (local.cont c s i, local.cont c s j) \\<in> theta", "hence \"F I \\<noteq> {}\""], ["proof (prove)\nusing this:\n  I \\<in> P\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n\ngoal (1 subgoal):\n 1. F I \\<noteq> {}", "using *"], ["proof (prove)\nusing this:\n  I \\<in> P\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n  mC_C theta c d s t P F\n\ngoal (1 subgoal):\n 1. F I \\<noteq> {}", "unfolding m_defsAll"], ["proof (prove)\nusing this:\n  I \\<in> P\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  (\\<forall>I\\<in>P. sum (wt c s) I = sum (wt d t) (F I)) \\<and>\n  (\\<forall>I i j.\n      I \\<in> P \\<and> i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n      eff c s i \\<approx> eff d t j \\<and>\n      (local.cont c s i, local.cont d t j) \\<in> theta)\n\ngoal (1 subgoal):\n 1. F I \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  F I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; {i, j} \\<subseteq> I; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> (local.cont c s i, local.cont c s j) \\<in> theta", "then"], ["proof (chain)\npicking this:\n  F I \\<noteq> {}", "obtain j where j: \"j \\<in> F I\""], ["proof (prove)\nusing this:\n  F I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>j. j \\<in> F I \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  j \\<in> F I\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; {i, j} \\<subseteq> I; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> (local.cont c s i, local.cont c s j) \\<in> theta", "from ii' j I"], ["proof (chain)\npicking this:\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n  j \\<in> F I\n  I \\<in> P", "have 1: \"(cont c s i, cont d t j) \\<in> theta\""], ["proof (prove)\nusing this:\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n  j \\<in> F I\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. (local.cont c s i, local.cont d t j) \\<in> theta", "using *"], ["proof (prove)\nusing this:\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n  j \\<in> F I\n  I \\<in> P\n  mC_C theta c d s t P F\n\ngoal (1 subgoal):\n 1. (local.cont c s i, local.cont d t j) \\<in> theta", "unfolding m_defsAll"], ["proof (prove)\nusing this:\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n  j \\<in> F I\n  I \\<in> P\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  (\\<forall>I\\<in>P. sum (wt c s) I = sum (wt d t) (F I)) \\<and>\n  (\\<forall>I i j.\n      I \\<in> P \\<and> i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n      eff c s i \\<approx> eff d t j \\<and>\n      (local.cont c s i, local.cont d t j) \\<in> theta)\n\ngoal (1 subgoal):\n 1. (local.cont c s i, local.cont d t j) \\<in> theta", "by blast"], ["proof (state)\nthis:\n  (local.cont c s i, local.cont d t j) \\<in> theta\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; {i, j} \\<subseteq> I; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> (local.cont c s i, local.cont c s j) \\<in> theta", "from ii' j I"], ["proof (chain)\npicking this:\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n  j \\<in> F I\n  I \\<in> P", "have 2: \"(cont c s i', cont d t j) \\<in> theta\""], ["proof (prove)\nusing this:\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n  j \\<in> F I\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. (local.cont c s i', local.cont d t j) \\<in> theta", "using *"], ["proof (prove)\nusing this:\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n  j \\<in> F I\n  I \\<in> P\n  mC_C theta c d s t P F\n\ngoal (1 subgoal):\n 1. (local.cont c s i', local.cont d t j) \\<in> theta", "unfolding m_defsAll"], ["proof (prove)\nusing this:\n  {i, i'} \\<subseteq> I\n  i \\<noteq> i'\n  j \\<in> F I\n  I \\<in> P\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  (\\<forall>I\\<in>P. sum (wt c s) I = sum (wt d t) (F I)) \\<and>\n  (\\<forall>I i j.\n      I \\<in> P \\<and> i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n      eff c s i \\<approx> eff d t j \\<and>\n      (local.cont c s i, local.cont d t j) \\<in> theta)\n\ngoal (1 subgoal):\n 1. (local.cont c s i', local.cont d t j) \\<in> theta", "by blast"], ["proof (state)\nthis:\n  (local.cont c s i', local.cont d t j) \\<in> theta\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> P; {i, j} \\<subseteq> I; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> (local.cont c s i, local.cont c s j) \\<in> theta", "from 1 2"], ["proof (chain)\npicking this:\n  (local.cont c s i, local.cont d t j) \\<in> theta\n  (local.cont c s i', local.cont d t j) \\<in> theta", "show \"(cont c s i, cont c s i')  \\<in> theta\""], ["proof (prove)\nusing this:\n  (local.cont c s i, local.cont d t j) \\<in> theta\n  (local.cont c s i', local.cont d t j) \\<in> theta\n\ngoal (1 subgoal):\n 1. (local.cont c s i, local.cont c s i') \\<in> theta", "using theta"], ["proof (prove)\nusing this:\n  (local.cont c s i, local.cont d t j) \\<in> theta\n  (local.cont c s i', local.cont d t j) \\<in> theta\n  sym theta\n  trans theta\n\ngoal (1 subgoal):\n 1. (local.cont c s i, local.cont c s i') \\<in> theta", "unfolding trans_def sym_def"], ["proof (prove)\nusing this:\n  (local.cont c s i, local.cont d t j) \\<in> theta\n  (local.cont c s i', local.cont d t j) \\<in> theta\n  \\<forall>x y. (x, y) \\<in> theta \\<longrightarrow> (y, x) \\<in> theta\n  \\<forall>x y z.\n     (x, y) \\<in> theta \\<longrightarrow>\n     (y, z) \\<in> theta \\<longrightarrow> (x, z) \\<in> theta\n\ngoal (1 subgoal):\n 1. (local.cont c s i, local.cont c s i') \\<in> theta", "by blast"], ["proof (state)\nthis:\n  (local.cont c s i, local.cont c s i') \\<in> theta\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma matchC_C_sym_trans:\nassumes *: \"matchC_C theta c1 c\" and **: \"matchC_C theta c c2\"\nand theta: \"sym theta\" \"trans theta\"\nshows \"matchC_C theta c1 c2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchC_C theta c1 c2", "unfolding matchC_C_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       s \\<approx> t \\<longrightarrow>\n       (\\<exists>P F. mC_C theta c1 c2 s t P F)", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "fix s1 s2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "assume s1s2: \"s1 \\<approx> s2\""], ["proof (state)\nthis:\n  s1 \\<approx> s2\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "define s where \"s = s1\""], ["proof (state)\nthis:\n  s = s1\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "have s: \"s \\<approx> s1 \\<and> s \\<approx> s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> s1 \\<and> s \\<approx> s2", "unfolding s_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. s1 \\<approx> s1 \\<and> s1 \\<approx> s2", "using s1s2"], ["proof (prove)\nusing this:\n  s1 \\<approx> s2\n\ngoal (1 subgoal):\n 1. s1 \\<approx> s1 \\<and> s1 \\<approx> s2", "by auto"], ["proof (state)\nthis:\n  s \\<approx> s1 \\<and> s \\<approx> s2\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "have th: \"theta ^-1 = theta\" \"theta O theta \\<subseteq> theta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta\\<inverse> = theta &&& theta O theta \\<subseteq> theta", "using theta"], ["proof (prove)\nusing this:\n  sym theta\n  trans theta\n\ngoal (1 subgoal):\n 1. theta\\<inverse> = theta &&& theta O theta \\<subseteq> theta", "by (metis sym_conv_converse_eq trans_O_subset)+"], ["proof (state)\nthis:\n  theta\\<inverse> = theta\n  theta O theta \\<subseteq> theta\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "hence *: \"matchC_C theta c c1\""], ["proof (prove)\nusing this:\n  theta\\<inverse> = theta\n  theta O theta \\<subseteq> theta\n\ngoal (1 subgoal):\n 1. matchC_C theta c c1", "by (metis * matchC_C_sym)"], ["proof (state)\nthis:\n  matchC_C theta c c1\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "from s *"], ["proof (chain)\npicking this:\n  s \\<approx> s1 \\<and> s \\<approx> s2\n  matchC_C theta c c1", "obtain P1 F1 where m1: \"mC_C theta c c1 s s1 P1 F1\""], ["proof (prove)\nusing this:\n  s \\<approx> s1 \\<and> s \\<approx> s2\n  matchC_C theta c c1\n\ngoal (1 subgoal):\n 1. (\\<And>P1 F1.\n        mC_C theta c c1 s s1 P1 F1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding matchC_C_def"], ["proof (prove)\nusing this:\n  s \\<approx> s1 \\<and> s \\<approx> s2\n  \\<forall>s t.\n     s \\<approx> t \\<longrightarrow> (\\<exists>P F. mC_C theta c c1 s t P F)\n\ngoal (1 subgoal):\n 1. (\\<And>P1 F1.\n        mC_C theta c c1 s s1 P1 F1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  mC_C theta c c1 s s1 P1 F1\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "from s **"], ["proof (chain)\npicking this:\n  s \\<approx> s1 \\<and> s \\<approx> s2\n  matchC_C theta c c2", "obtain P2 F2 where m2: \"mC_C theta c c2 s s2 P2 F2\""], ["proof (prove)\nusing this:\n  s \\<approx> s1 \\<and> s \\<approx> s2\n  matchC_C theta c c2\n\ngoal (1 subgoal):\n 1. (\\<And>P2 F2.\n        mC_C theta c c2 s s2 P2 F2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding matchC_C_def"], ["proof (prove)\nusing this:\n  s \\<approx> s1 \\<and> s \\<approx> s2\n  \\<forall>s t.\n     s \\<approx> t \\<longrightarrow> (\\<exists>P F. mC_C theta c c2 s t P F)\n\ngoal (1 subgoal):\n 1. (\\<And>P2 F2.\n        mC_C theta c c2 s s2 P2 F2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  mC_C theta c c2 s s2 P2 F2\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "define P where \"P = partJoin P1 P2\""], ["proof (state)\nthis:\n  P = partJoin P1 P2\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "(*  *)"], ["proof (state)\nthis:\n  P = partJoin P1 P2\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "have P:\n  \"finer P1 P \\<and> finer P2 P \\<and>\n   finite P \\<and> {} \\<notin> P \\<and> part {..< brn c} P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finer P1 P \\<and>\n    finer P2 P \\<and> finite P \\<and> {} \\<notin> P \\<and> part {..<brn c} P", "using m1 m2 finer_partJoin_L finite_partJoin emp_partJoin part_partJoin finite_part[of \"{..< brn c}\" P]"], ["proof (prove)\nusing this:\n  mC_C theta c c1 s s1 P1 F1\n  mC_C theta c c2 s s2 P2 F2\n  \\<lbrakk>part ?I ?P; part ?I ?Q\\<rbrakk>\n  \\<Longrightarrow> finer ?P (partJoin ?P ?Q)\n  \\<lbrakk>finite ?P; finite ?Q\\<rbrakk>\n  \\<Longrightarrow> finite (partJoin ?P ?Q)\n  \\<lbrakk>{} \\<notin> ?P; {} \\<notin> ?Q\\<rbrakk>\n  \\<Longrightarrow> {} \\<notin> partJoin ?P ?Q\n  \\<lbrakk>part ?I ?P; part ?I ?Q\\<rbrakk>\n  \\<Longrightarrow> part ?I (partJoin ?P ?Q)\n  \\<lbrakk>finite {..<brn c}; part {..<brn c} P\\<rbrakk>\n  \\<Longrightarrow> finite P\n\ngoal (1 subgoal):\n 1. finer P1 P \\<and>\n    finer P2 P \\<and> finite P \\<and> {} \\<notin> P \\<and> part {..<brn c} P", "unfolding P_def mC_C_def mC_C_part_def"], ["proof (prove)\nusing this:\n  ({} \\<notin> P1 \\<and>\n   {} \\<notin> F1 ` P1 \\<and>\n   part {..<brn c} P1 \\<and> part {..<brn c1} (F1 ` P1)) \\<and>\n  inj_on F1 P1 \\<and>\n  mC_C_wt c c1 s s1 P1 F1 \\<and> mC_C_eff_cont theta c c1 s s1 P1 F1\n  ({} \\<notin> P2 \\<and>\n   {} \\<notin> F2 ` P2 \\<and>\n   part {..<brn c} P2 \\<and> part {..<brn c2} (F2 ` P2)) \\<and>\n  inj_on F2 P2 \\<and>\n  mC_C_wt c c2 s s2 P2 F2 \\<and> mC_C_eff_cont theta c c2 s s2 P2 F2\n  \\<lbrakk>part ?I ?P; part ?I ?Q\\<rbrakk>\n  \\<Longrightarrow> finer ?P (partJoin ?P ?Q)\n  \\<lbrakk>finite ?P; finite ?Q\\<rbrakk>\n  \\<Longrightarrow> finite (partJoin ?P ?Q)\n  \\<lbrakk>{} \\<notin> ?P; {} \\<notin> ?Q\\<rbrakk>\n  \\<Longrightarrow> {} \\<notin> partJoin ?P ?Q\n  \\<lbrakk>part ?I ?P; part ?I ?Q\\<rbrakk>\n  \\<Longrightarrow> part ?I (partJoin ?P ?Q)\n  \\<lbrakk>finite {..<brn c}; part {..<brn c} (partJoin P1 P2)\\<rbrakk>\n  \\<Longrightarrow> finite (partJoin P1 P2)\n\ngoal (1 subgoal):\n 1. finer P1 (partJoin P1 P2) \\<and>\n    finer P2 (partJoin P1 P2) \\<and>\n    finite (partJoin P1 P2) \\<and>\n    {} \\<notin> partJoin P1 P2 \\<and> part {..<brn c} (partJoin P1 P2)", "by force"], ["proof (state)\nthis:\n  finer P1 P \\<and>\n  finer P2 P \\<and> finite P \\<and> {} \\<notin> P \\<and> part {..<brn c} P\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "(*  *)"], ["proof (state)\nthis:\n  finer P1 P \\<and>\n  finer P2 P \\<and> finite P \\<and> {} \\<notin> P \\<and> part {..<brn c} P\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "have \"mC_C theta c c1 s s1 P (lift P1 F1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_C theta c c1 s s1 P (lift P1 F1)", "proof(rule mC_C_finer)"], ["proof (state)\ngoal (8 subgoals):\n 1. mC_C theta c c1 s s1 P1 F1\n 2. trans theta\n 3. finer P1 P\n 4. finite P\n 5. {} \\<notin> P\n 6. part {..<brn c} P\n 7. partCompat P indis (eff c s)\n 8. partCompat P theta (local.cont c s)", "show \"partCompat P indis (eff c s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partCompat P indis (eff c s)", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. partCompat (partJoin P1 P2) indis (eff c s)", "apply(rule partCompat_partJoin)"], ["proof (prove)\ngoal (4 subgoals):\n 1. sym indis\n 2. trans indis\n 3. partCompat P1 indis (eff c s)\n 4. partCompat P2 indis (eff c s)", "using m1 m2 sym_indis trans_indis mC_C_partCompat_eff"], ["proof (prove)\nusing this:\n  mC_C theta c c1 s s1 P1 F1\n  mC_C theta c c2 s s2 P2 F2\n  sym indis\n  trans indis\n  mC_C ?theta ?c ?d ?s ?t ?P ?F \\<Longrightarrow>\n  partCompat ?P indis (eff ?c ?s)\n\ngoal (4 subgoals):\n 1. sym indis\n 2. trans indis\n 3. partCompat P1 indis (eff c s)\n 4. partCompat P2 indis (eff c s)", "by auto"], ["proof (state)\nthis:\n  partCompat P indis (eff c s)\n\ngoal (7 subgoals):\n 1. mC_C theta c c1 s s1 P1 F1\n 2. trans theta\n 3. finer P1 P\n 4. finite P\n 5. {} \\<notin> P\n 6. part {..<brn c} P\n 7. partCompat P theta (local.cont c s)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. mC_C theta c c1 s s1 P1 F1\n 2. trans theta\n 3. finer P1 P\n 4. finite P\n 5. {} \\<notin> P\n 6. part {..<brn c} P\n 7. partCompat P theta (local.cont c s)", "show \"partCompat P theta (cont c s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partCompat P theta (local.cont c s)", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. partCompat (partJoin P1 P2) theta (local.cont c s)", "apply(rule partCompat_partJoin)"], ["proof (prove)\ngoal (4 subgoals):\n 1. sym theta\n 2. trans theta\n 3. partCompat P1 theta (local.cont c s)\n 4. partCompat P2 theta (local.cont c s)", "using m1 m2 theta mC_C_partCompat_cont"], ["proof (prove)\nusing this:\n  mC_C theta c c1 s s1 P1 F1\n  mC_C theta c c2 s s2 P2 F2\n  sym theta\n  trans theta\n  \\<lbrakk>mC_C ?theta ?c ?d ?s ?t ?P ?F; sym ?theta; trans ?theta\\<rbrakk>\n  \\<Longrightarrow> partCompat ?P ?theta (local.cont ?c ?s)\n\ngoal (4 subgoals):\n 1. sym theta\n 2. trans theta\n 3. partCompat P1 theta (local.cont c s)\n 4. partCompat P2 theta (local.cont c s)", "by auto"], ["proof (state)\nthis:\n  partCompat P theta (local.cont c s)\n\ngoal (6 subgoals):\n 1. mC_C theta c c1 s s1 P1 F1\n 2. trans theta\n 3. finer P1 P\n 4. finite P\n 5. {} \\<notin> P\n 6. part {..<brn c} P", "qed(insert P m1 theta, auto)"], ["proof (state)\nthis:\n  mC_C theta c c1 s s1 P (lift P1 F1)\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "hence A: \"mC_C theta c1 c s1 s (lift P1 F1 ` P) (inv_into P (lift P1 F1))\""], ["proof (prove)\nusing this:\n  mC_C theta c c1 s s1 P (lift P1 F1)\n\ngoal (1 subgoal):\n 1. mC_C theta c1 c s1 s (lift P1 F1 ` P) (inv_into P (lift P1 F1))", "using mC_C_sym[of theta c c1 s s1 P \"lift P1 F1\"]"], ["proof (prove)\nusing this:\n  mC_C theta c c1 s s1 P (lift P1 F1)\n  mC_C theta c c1 s s1 P (lift P1 F1) \\<Longrightarrow>\n  mC_C (theta\\<inverse>) c1 c s1 s (lift P1 F1 ` P)\n   (inv_into P (lift P1 F1))\n\ngoal (1 subgoal):\n 1. mC_C theta c1 c s1 s (lift P1 F1 ` P) (inv_into P (lift P1 F1))", "unfolding th"], ["proof (prove)\nusing this:\n  mC_C theta c c1 s s1 P (lift P1 F1)\n  mC_C theta c c1 s s1 P (lift P1 F1) \\<Longrightarrow>\n  mC_C theta c1 c s1 s (lift P1 F1 ` P) (inv_into P (lift P1 F1))\n\ngoal (1 subgoal):\n 1. mC_C theta c1 c s1 s (lift P1 F1 ` P) (inv_into P (lift P1 F1))", "by blast"], ["proof (state)\nthis:\n  mC_C theta c1 c s1 s (lift P1 F1 ` P) (inv_into P (lift P1 F1))\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "(*  *)"], ["proof (state)\nthis:\n  mC_C theta c1 c s1 s (lift P1 F1 ` P) (inv_into P (lift P1 F1))\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "have B: \"mC_C theta c c2 s s2 P (lift P2 F2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_C theta c c2 s s2 P (lift P2 F2)", "proof(rule mC_C_finer)"], ["proof (state)\ngoal (8 subgoals):\n 1. mC_C theta c c2 s s2 P2 F2\n 2. trans theta\n 3. finer P2 P\n 4. finite P\n 5. {} \\<notin> P\n 6. part {..<brn c} P\n 7. partCompat P indis (eff c s)\n 8. partCompat P theta (local.cont c s)", "show \"partCompat P indis (eff c s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partCompat P indis (eff c s)", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. partCompat (partJoin P1 P2) indis (eff c s)", "apply(rule partCompat_partJoin)"], ["proof (prove)\ngoal (4 subgoals):\n 1. sym indis\n 2. trans indis\n 3. partCompat P1 indis (eff c s)\n 4. partCompat P2 indis (eff c s)", "using m1 m2 sym_indis trans_indis mC_C_partCompat_eff"], ["proof (prove)\nusing this:\n  mC_C theta c c1 s s1 P1 F1\n  mC_C theta c c2 s s2 P2 F2\n  sym indis\n  trans indis\n  mC_C ?theta ?c ?d ?s ?t ?P ?F \\<Longrightarrow>\n  partCompat ?P indis (eff ?c ?s)\n\ngoal (4 subgoals):\n 1. sym indis\n 2. trans indis\n 3. partCompat P1 indis (eff c s)\n 4. partCompat P2 indis (eff c s)", "by auto"], ["proof (state)\nthis:\n  partCompat P indis (eff c s)\n\ngoal (7 subgoals):\n 1. mC_C theta c c2 s s2 P2 F2\n 2. trans theta\n 3. finer P2 P\n 4. finite P\n 5. {} \\<notin> P\n 6. part {..<brn c} P\n 7. partCompat P theta (local.cont c s)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. mC_C theta c c2 s s2 P2 F2\n 2. trans theta\n 3. finer P2 P\n 4. finite P\n 5. {} \\<notin> P\n 6. part {..<brn c} P\n 7. partCompat P theta (local.cont c s)", "show \"partCompat P theta (cont c s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partCompat P theta (local.cont c s)", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. partCompat (partJoin P1 P2) theta (local.cont c s)", "apply(rule partCompat_partJoin)"], ["proof (prove)\ngoal (4 subgoals):\n 1. sym theta\n 2. trans theta\n 3. partCompat P1 theta (local.cont c s)\n 4. partCompat P2 theta (local.cont c s)", "using m1 m2 theta mC_C_partCompat_cont"], ["proof (prove)\nusing this:\n  mC_C theta c c1 s s1 P1 F1\n  mC_C theta c c2 s s2 P2 F2\n  sym theta\n  trans theta\n  \\<lbrakk>mC_C ?theta ?c ?d ?s ?t ?P ?F; sym ?theta; trans ?theta\\<rbrakk>\n  \\<Longrightarrow> partCompat ?P ?theta (local.cont ?c ?s)\n\ngoal (4 subgoals):\n 1. sym theta\n 2. trans theta\n 3. partCompat P1 theta (local.cont c s)\n 4. partCompat P2 theta (local.cont c s)", "by auto"], ["proof (state)\nthis:\n  partCompat P theta (local.cont c s)\n\ngoal (6 subgoals):\n 1. mC_C theta c c2 s s2 P2 F2\n 2. trans theta\n 3. finer P2 P\n 4. finite P\n 5. {} \\<notin> P\n 6. part {..<brn c} P", "qed(insert P m2 theta, auto)"], ["proof (state)\nthis:\n  mC_C theta c c2 s s2 P (lift P2 F2)\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "(*  *)"], ["proof (state)\nthis:\n  mC_C theta c c2 s s2 P (lift P2 F2)\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "have \"inj_on (lift P1 F1) P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (lift P1 F1) P", "apply(rule inj_on_lift)"], ["proof (prove)\ngoal (6 subgoals):\n 1. part ?I0.0 P1\n 2. part ?I0.0 P\n 3. finer P1 P\n 4. inj_on F1 P1\n 5. part ?J0.0 (F1 ` P1)\n 6. {} \\<notin> F1 ` P1", "using m1 m2 P"], ["proof (prove)\nusing this:\n  mC_C theta c c1 s s1 P1 F1\n  mC_C theta c c2 s s2 P2 F2\n  finer P1 P \\<and>\n  finer P2 P \\<and> finite P \\<and> {} \\<notin> P \\<and> part {..<brn c} P\n\ngoal (6 subgoals):\n 1. part ?I0.0 P1\n 2. part ?I0.0 P\n 3. finer P1 P\n 4. inj_on F1 P1\n 5. part ?J0.0 (F1 ` P1)\n 6. {} \\<notin> F1 ` P1", "unfolding m_defsAll"], ["proof (prove)\nusing this:\n  ({} \\<notin> P1 \\<and>\n   {} \\<notin> F1 ` P1 \\<and>\n   part {..<brn c} P1 \\<and> part {..<brn c1} (F1 ` P1)) \\<and>\n  inj_on F1 P1 \\<and>\n  (\\<forall>I\\<in>P1. sum (wt c s) I = sum (wt c1 s1) (F1 I)) \\<and>\n  (\\<forall>I i j.\n      I \\<in> P1 \\<and> i \\<in> I \\<and> j \\<in> F1 I \\<longrightarrow>\n      eff c s i \\<approx> eff c1 s1 j \\<and>\n      (local.cont c s i, local.cont c1 s1 j) \\<in> theta)\n  ({} \\<notin> P2 \\<and>\n   {} \\<notin> F2 ` P2 \\<and>\n   part {..<brn c} P2 \\<and> part {..<brn c2} (F2 ` P2)) \\<and>\n  inj_on F2 P2 \\<and>\n  (\\<forall>I\\<in>P2. sum (wt c s) I = sum (wt c2 s2) (F2 I)) \\<and>\n  (\\<forall>I i j.\n      I \\<in> P2 \\<and> i \\<in> I \\<and> j \\<in> F2 I \\<longrightarrow>\n      eff c s i \\<approx> eff c2 s2 j \\<and>\n      (local.cont c s i, local.cont c2 s2 j) \\<in> theta)\n  finer P1 P \\<and>\n  finer P2 P \\<and> finite P \\<and> {} \\<notin> P \\<and> part {..<brn c} P\n\ngoal (6 subgoals):\n 1. part ?I0.0 P1\n 2. part ?I0.0 P\n 3. finer P1 P\n 4. inj_on F1 P1\n 5. part ?J0.0 (F1 ` P1)\n 6. {} \\<notin> F1 ` P1", "by auto"], ["proof (state)\nthis:\n  inj_on (lift P1 F1) P\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "hence \"inv_into P (lift P1 F1) ` lift P1 F1 ` P = P\""], ["proof (prove)\nusing this:\n  inj_on (lift P1 F1) P\n\ngoal (1 subgoal):\n 1. inv_into P (lift P1 F1) ` lift P1 F1 ` P = P", "by (metis inj_on_inv_into)"], ["proof (state)\nthis:\n  inv_into P (lift P1 F1) ` lift P1 F1 ` P = P\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "hence \"mC_C (theta O theta) c1 c2 s1 s2 (lift P1 F1 ` P) (lift P2 F2 o (inv_into P (lift P1 F1)))\""], ["proof (prove)\nusing this:\n  inv_into P (lift P1 F1) ` lift P1 F1 ` P = P\n\ngoal (1 subgoal):\n 1. mC_C (theta O theta) c1 c2 s1 s2 (lift P1 F1 ` P)\n     (lift P2 F2 \\<circ> inv_into P (lift P1 F1))", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_into P (lift P1 F1) ` lift P1 F1 ` P = P \\<Longrightarrow>\n    mC_C (theta O theta) c1 c2 s1 s2 (lift P1 F1 ` P)\n     (lift P2 F2 \\<circ> inv_into P (lift P1 F1))", "apply(rule mC_C_trans[of theta c1 c s1 s _ _ theta c2 s2])"], ["proof (prove)\ngoal (2 subgoals):\n 1. inv_into P (lift P1 F1) ` lift P1 F1 ` P = P \\<Longrightarrow>\n    mC_C theta c1 c s1 s (lift P1 F1 ` P) (inv_into P (lift P1 F1))\n 2. inv_into P (lift P1 F1) ` lift P1 F1 ` P = P \\<Longrightarrow>\n    mC_C theta c c2 s s2 (inv_into P (lift P1 F1) ` lift P1 F1 ` P)\n     (lift P2 F2)", "using A B"], ["proof (prove)\nusing this:\n  mC_C theta c1 c s1 s (lift P1 F1 ` P) (inv_into P (lift P1 F1))\n  mC_C theta c c2 s s2 P (lift P2 F2)\n\ngoal (2 subgoals):\n 1. inv_into P (lift P1 F1) ` lift P1 F1 ` P = P \\<Longrightarrow>\n    mC_C theta c1 c s1 s (lift P1 F1 ` P) (inv_into P (lift P1 F1))\n 2. inv_into P (lift P1 F1) ` lift P1 F1 ` P = P \\<Longrightarrow>\n    mC_C theta c c2 s s2 (inv_into P (lift P1 F1) ` lift P1 F1 ` P)\n     (lift P2 F2)", "by auto"], ["proof (state)\nthis:\n  mC_C (theta O theta) c1 c2 s1 s2 (lift P1 F1 ` P)\n   (lift P2 F2 \\<circ> inv_into P (lift P1 F1))\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "hence \"mC_C theta c1 c2 s1 s2 (lift P1 F1 ` P) (lift P2 F2 o (inv_into P (lift P1 F1)))\""], ["proof (prove)\nusing this:\n  mC_C (theta O theta) c1 c2 s1 s2 (lift P1 F1 ` P)\n   (lift P2 F2 \\<circ> inv_into P (lift P1 F1))\n\ngoal (1 subgoal):\n 1. mC_C theta c1 c2 s1 s2 (lift P1 F1 ` P)\n     (lift P2 F2 \\<circ> inv_into P (lift P1 F1))", "using th mC_C_mono"], ["proof (prove)\nusing this:\n  mC_C (theta O theta) c1 c2 s1 s2 (lift P1 F1 ` P)\n   (lift P2 F2 \\<circ> inv_into P (lift P1 F1))\n  theta\\<inverse> = theta\n  theta O theta \\<subseteq> theta\n  \\<lbrakk>mC_C ?theta ?c ?d ?s ?t ?P ?F;\n   ?theta \\<subseteq> ?theta'\\<rbrakk>\n  \\<Longrightarrow> mC_C ?theta' ?c ?d ?s ?t ?P ?F\n\ngoal (1 subgoal):\n 1. mC_C theta c1 c2 s1 s2 (lift P1 F1 ` P)\n     (lift P2 F2 \\<circ> inv_into P (lift P1 F1))", "by blast"], ["proof (state)\nthis:\n  mC_C theta c1 c2 s1 s2 (lift P1 F1 ` P)\n   (lift P2 F2 \\<circ> inv_into P (lift P1 F1))\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>P F. mC_C theta c1 c2 s t P F", "thus \"\\<exists>R H. mC_C theta c1 c2 s1 s2 R H\""], ["proof (prove)\nusing this:\n  mC_C theta c1 c2 s1 s2 (lift P1 F1 ` P)\n   (lift P2 F2 \\<circ> inv_into P (lift P1 F1))\n\ngoal (1 subgoal):\n 1. \\<exists>R H. mC_C theta c1 c2 s1 s2 R H", "by blast"], ["proof (state)\nthis:\n  \\<exists>R H. mC_C theta c1 c2 s1 s2 R H\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Sretr_sym_trans:\nassumes \"sym theta \\<and> trans theta\"\nshows \"trans (Sretr theta)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans (Sretr theta)", "unfolding trans_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y z.\n       (x, y) \\<in> Sretr theta \\<longrightarrow>\n       (y, z) \\<in> Sretr theta \\<longrightarrow> (x, z) \\<in> Sretr theta", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> Sretr theta; (y, z) \\<in> Sretr theta\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> Sretr theta", "fix c d e"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> Sretr theta; (y, z) \\<in> Sretr theta\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> Sretr theta", "assume \"(c, d) \\<in> Sretr theta\" and \"(d, e) \\<in> Sretr theta\""], ["proof (state)\nthis:\n  (c, d) \\<in> Sretr theta\n  (d, e) \\<in> Sretr theta\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> Sretr theta; (y, z) \\<in> Sretr theta\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> Sretr theta", "thus \"(c, e) \\<in> Sretr theta\""], ["proof (prove)\nusing this:\n  (c, d) \\<in> Sretr theta\n  (d, e) \\<in> Sretr theta\n\ngoal (1 subgoal):\n 1. (c, e) \\<in> Sretr theta", "unfolding Sretr_def"], ["proof (prove)\nusing this:\n  (c, d) \\<in> {(c, d). matchC_C theta c d}\n  (d, e) \\<in> {(c, d). matchC_C theta c d}\n\ngoal (1 subgoal):\n 1. (c, e) \\<in> {(c, d). matchC_C theta c d}", "using assms matchC_C_sym_trans"], ["proof (prove)\nusing this:\n  (c, d) \\<in> {(c, d). matchC_C theta c d}\n  (d, e) \\<in> {(c, d). matchC_C theta c d}\n  sym theta \\<and> trans theta\n  \\<lbrakk>matchC_C ?theta ?c1.0 ?c; matchC_C ?theta ?c ?c2.0; sym ?theta;\n   trans ?theta\\<rbrakk>\n  \\<Longrightarrow> matchC_C ?theta ?c1.0 ?c2.0\n\ngoal (1 subgoal):\n 1. (c, e) \\<in> {(c, d). matchC_C theta c d}", "by blast"], ["proof (state)\nthis:\n  (c, e) \\<in> Sretr theta\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma trans_Sbis: \"trans Sbis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans Sbis", "by (metis Sbis_def Sretr_sym Sretr_sym_trans mono_Retr sym_trans_gfp)"], ["", "lemma Sbis_trans: \"\\<lbrakk>c \\<approx>s d; d \\<approx>s e\\<rbrakk> \\<Longrightarrow> c \\<approx>s e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c \\<approx>s d; d \\<approx>s e\\<rbrakk>\n    \\<Longrightarrow> c \\<approx>s e", "using trans_Sbis"], ["proof (prove)\nusing this:\n  trans Sbis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c \\<approx>s d; d \\<approx>s e\\<rbrakk>\n    \\<Longrightarrow> c \\<approx>s e", "unfolding trans_def"], ["proof (prove)\nusing this:\n  \\<forall>x y z.\n     x \\<approx>s y \\<longrightarrow>\n     y \\<approx>s z \\<longrightarrow> x \\<approx>s z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c \\<approx>s d; d \\<approx>s e\\<rbrakk>\n    \\<Longrightarrow> c \\<approx>s e", "by blast"], ["", "(* ZObis: *)"], ["", "lemma ZObis_prefix:\n\"ZObis \\<le> ZOretr ZObis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZObis \\<subseteq> ZOretr ZObis", "unfolding ZObis_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. gfp ZOretr \\<subseteq> ZOretr (gfp ZOretr)", "using def_gfp_unfold mono_Retr(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<equiv> gfp ?f; mono ?f\\<rbrakk> \\<Longrightarrow> ?A = ?f ?A\n  mono ZOretr\n\ngoal (1 subgoal):\n 1. gfp ZOretr \\<subseteq> ZOretr (gfp ZOretr)", "by blast"], ["", "lemma ZObis_fix:\n\"ZOretr ZObis = ZObis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZOretr ZObis = ZObis", "unfolding ZObis_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ZOretr (gfp ZOretr) = gfp ZOretr", "by (metis def_gfp_unfold mono_Retr(2))"], ["", "lemma ZObis_mC_ZOC:\nassumes \"c \\<approx>01 d\" and \"s \\<approx> t\"\nshows \"\\<exists>I0  P F. mC_ZOC ZObis c d s t I0 P F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>I0 P F. mC_ZOC ZObis c d s t I0 P F", "using assms ZObis_prefix"], ["proof (prove)\nusing this:\n  c \\<approx>01 d\n  s \\<approx> t\n  ZObis \\<subseteq> ZOretr ZObis\n\ngoal (1 subgoal):\n 1. \\<exists>I0 P F. mC_ZOC ZObis c d s t I0 P F", "unfolding ZOretr_def matchC_LC_def"], ["proof (prove)\nusing this:\n  c \\<approx>01 d\n  s \\<approx> t\n  ZObis\n  \\<subseteq> {(c, d).\n               \\<forall>s t.\n                  s \\<approx> t \\<longrightarrow>\n                  (\\<exists>I0 P F. mC_ZOC ZObis c d s t I0 P F)}\n\ngoal (1 subgoal):\n 1. \\<exists>I0 P F. mC_ZOC ZObis c d s t I0 P F", "by blast"], ["", "lemma ZObis_coind:\nassumes \"theta \\<le> ZOretr (theta Un ZObis)\"\nshows \"theta \\<le> ZObis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObis", "using assms"], ["proof (prove)\nusing this:\n  theta \\<subseteq> ZOretr (theta \\<union> ZObis)\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObis", "unfolding ZObis_def"], ["proof (prove)\nusing this:\n  theta \\<subseteq> ZOretr (theta \\<union> gfp ZOretr)\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> gfp ZOretr", "by (metis ZObis_def assms def_coinduct mono_Retr(2))"], ["", "lemma ZObis_raw_coind:\nassumes \"theta \\<le> ZOretr theta\"\nshows \"theta \\<le> ZObis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObis", "have \"ZOretr theta \\<subseteq> ZOretr (theta Un ZObis)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZOretr theta \\<subseteq> ZOretr (theta \\<union> ZObis)", "by (metis Un_upper1 monoD mono_Retr)"], ["proof (state)\nthis:\n  ZOretr theta \\<subseteq> ZOretr (theta \\<union> ZObis)\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObis", "hence \"theta \\<subseteq> ZOretr (theta Un ZObis)\""], ["proof (prove)\nusing this:\n  ZOretr theta \\<subseteq> ZOretr (theta \\<union> ZObis)\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZOretr (theta \\<union> ZObis)", "using assms"], ["proof (prove)\nusing this:\n  ZOretr theta \\<subseteq> ZOretr (theta \\<union> ZObis)\n  theta \\<subseteq> ZOretr theta\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZOretr (theta \\<union> ZObis)", "by blast"], ["proof (state)\nthis:\n  theta \\<subseteq> ZOretr (theta \\<union> ZObis)\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObis", "thus ?thesis"], ["proof (prove)\nusing this:\n  theta \\<subseteq> ZOretr (theta \\<union> ZObis)\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObis", "using ZObis_coind"], ["proof (prove)\nusing this:\n  theta \\<subseteq> ZOretr (theta \\<union> ZObis)\n  ?theta \\<subseteq> ZOretr (?theta \\<union> ZObis) \\<Longrightarrow>\n  ?theta \\<subseteq> ZObis\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObis", "by blast"], ["proof (state)\nthis:\n  theta \\<subseteq> ZObis\n\ngoal:\nNo subgoals!", "qed"], ["", "(* Symmetry *)"], ["", "lemma mC_ZOC_sym:\nassumes theta: \"sym theta\" and *: \"mC_ZOC theta c d s t I0 P F\"\nshows \"mC_ZOC theta d c t s (F I0) (F ` P) (inv_into P F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_ZOC theta d c t s (F I0) (F ` P) (inv_into P F)", "unfolding mC_ZOC_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_ZOC_part d c t s (F I0) (F ` P) (inv_into P F) \\<and>\n    inj_on (inv_into P F) (F ` P) \\<and>\n    mC_ZOC_wt d c t s (F I0) (F ` P) (inv_into P F) \\<and>\n    mC_ZOC_eff_cont0 theta d c t s (F I0) (inv_into P F) \\<and>\n    mC_ZOC_eff_cont theta d c t s (F I0) (F ` P) (inv_into P F)", "proof (intro conjI)"], ["proof (state)\ngoal (5 subgoals):\n 1. mC_ZOC_part d c t s (F I0) (F ` P) (inv_into P F)\n 2. inj_on (inv_into P F) (F ` P)\n 3. mC_ZOC_wt d c t s (F I0) (F ` P) (inv_into P F)\n 4. mC_ZOC_eff_cont0 theta d c t s (F I0) (inv_into P F)\n 5. mC_ZOC_eff_cont theta d c t s (F I0) (F ` P) (inv_into P F)", "show \"mC_ZOC_part d c t s (F I0) (F ` P) (inv_into P F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_ZOC_part d c t s (F I0) (F ` P) (inv_into P F)", "unfolding mC_ZOC_part_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<notin> F ` P - {F I0} \\<and>\n    {} \\<notin> inv_into P F ` (F ` P - {F I0}) \\<and>\n    F I0 \\<in> F ` P \\<and>\n    part {..<brn d} (F ` P) \\<and> part {..<brn c} (inv_into P F ` F ` P)", "proof(intro conjI)"], ["proof (state)\ngoal (5 subgoals):\n 1. {} \\<notin> F ` P - {F I0}\n 2. {} \\<notin> inv_into P F ` (F ` P - {F I0})\n 3. F I0 \\<in> F ` P\n 4. part {..<brn d} (F ` P)\n 5. part {..<brn c} (inv_into P F ` F ` P)", "have 0: \"inj_on F P\" \"I0 \\<in> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on F P &&& I0 \\<in> P", "using *"], ["proof (prove)\nusing this:\n  mC_ZOC theta c d s t I0 P F\n\ngoal (1 subgoal):\n 1. inj_on F P &&& I0 \\<in> P", "unfolding mC_ZOC_def mC_ZOC_part_def"], ["proof (prove)\nusing this:\n  ({} \\<notin> P - {I0} \\<and>\n   {} \\<notin> F ` (P - {I0}) \\<and>\n   I0 \\<in> P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  mC_ZOC_wt c d s t I0 P F \\<and>\n  mC_ZOC_eff_cont0 theta c d s t I0 F \\<and>\n  mC_ZOC_eff_cont theta c d s t I0 P F\n\ngoal (1 subgoal):\n 1. inj_on F P &&& I0 \\<in> P", "by blast+"], ["proof (state)\nthis:\n  inj_on F P\n  I0 \\<in> P\n\ngoal (5 subgoals):\n 1. {} \\<notin> F ` P - {F I0}\n 2. {} \\<notin> inv_into P F ` (F ` P - {F I0})\n 3. F I0 \\<in> F ` P\n 4. part {..<brn d} (F ` P)\n 5. part {..<brn c} (inv_into P F ` F ` P)", "have \"inv_into P F ` (F ` P - {F I0}) = inv_into P F ` (F ` (P - {I0}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_into P F ` (F ` P - {F I0}) = inv_into P F ` F ` (P - {I0})", "using 0 inj_on_image_set_diff[of F P P \"{I0}\", OF _ Set.Diff_subset]"], ["proof (prove)\nusing this:\n  inj_on F P\n  I0 \\<in> P\n  \\<lbrakk>inj_on F P; {I0} \\<subseteq> P\\<rbrakk>\n  \\<Longrightarrow> F ` (P - {I0}) = F ` P - F ` {I0}\n\ngoal (1 subgoal):\n 1. inv_into P F ` (F ` P - {F I0}) = inv_into P F ` F ` (P - {I0})", "by simp"], ["proof (state)\nthis:\n  inv_into P F ` (F ` P - {F I0}) = inv_into P F ` F ` (P - {I0})\n\ngoal (5 subgoals):\n 1. {} \\<notin> F ` P - {F I0}\n 2. {} \\<notin> inv_into P F ` (F ` P - {F I0})\n 3. F I0 \\<in> F ` P\n 4. part {..<brn d} (F ` P)\n 5. part {..<brn c} (inv_into P F ` F ` P)", "also"], ["proof (state)\nthis:\n  inv_into P F ` (F ` P - {F I0}) = inv_into P F ` F ` (P - {I0})\n\ngoal (5 subgoals):\n 1. {} \\<notin> F ` P - {F I0}\n 2. {} \\<notin> inv_into P F ` (F ` P - {F I0})\n 3. F I0 \\<in> F ` P\n 4. part {..<brn d} (F ` P)\n 5. part {..<brn c} (inv_into P F ` F ` P)", "have \"... = P - {I0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_into P F ` F ` (P - {I0}) = P - {I0}", "using 0"], ["proof (prove)\nusing this:\n  inj_on F P\n  I0 \\<in> P\n\ngoal (1 subgoal):\n 1. inv_into P F ` F ` (P - {I0}) = P - {I0}", "by (metis Diff_subset inv_into_image_cancel)"], ["proof (state)\nthis:\n  inv_into P F ` F ` (P - {I0}) = P - {I0}\n\ngoal (5 subgoals):\n 1. {} \\<notin> F ` P - {F I0}\n 2. {} \\<notin> inv_into P F ` (F ` P - {F I0})\n 3. F I0 \\<in> F ` P\n 4. part {..<brn d} (F ` P)\n 5. part {..<brn c} (inv_into P F ` F ` P)", "finally"], ["proof (chain)\npicking this:\n  inv_into P F ` (F ` P - {F I0}) = P - {I0}", "have \"inv_into P F ` (F ` P - {F I0}) = P - {I0}\""], ["proof (prove)\nusing this:\n  inv_into P F ` (F ` P - {F I0}) = P - {I0}\n\ngoal (1 subgoal):\n 1. inv_into P F ` (F ` P - {F I0}) = P - {I0}", "."], ["proof (state)\nthis:\n  inv_into P F ` (F ` P - {F I0}) = P - {I0}\n\ngoal (5 subgoals):\n 1. {} \\<notin> F ` P - {F I0}\n 2. {} \\<notin> inv_into P F ` (F ` P - {F I0})\n 3. F I0 \\<in> F ` P\n 4. part {..<brn d} (F ` P)\n 5. part {..<brn c} (inv_into P F ` F ` P)", "thus \"{} \\<notin> inv_into P F ` (F ` P - {F I0})\""], ["proof (prove)\nusing this:\n  inv_into P F ` (F ` P - {F I0}) = P - {I0}\n\ngoal (1 subgoal):\n 1. {} \\<notin> inv_into P F ` (F ` P - {F I0})", "using *"], ["proof (prove)\nusing this:\n  inv_into P F ` (F ` P - {F I0}) = P - {I0}\n  mC_ZOC theta c d s t I0 P F\n\ngoal (1 subgoal):\n 1. {} \\<notin> inv_into P F ` (F ` P - {F I0})", "unfolding mC_ZOC_def mC_ZOC_part_def"], ["proof (prove)\nusing this:\n  inv_into P F ` (F ` P - {F I0}) = P - {I0}\n  ({} \\<notin> P - {I0} \\<and>\n   {} \\<notin> F ` (P - {I0}) \\<and>\n   I0 \\<in> P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  mC_ZOC_wt c d s t I0 P F \\<and>\n  mC_ZOC_eff_cont0 theta c d s t I0 F \\<and>\n  mC_ZOC_eff_cont theta c d s t I0 P F\n\ngoal (1 subgoal):\n 1. {} \\<notin> inv_into P F ` (F ` P - {F I0})", "by simp"], ["proof (state)\nthis:\n  {} \\<notin> inv_into P F ` (F ` P - {F I0})\n\ngoal (4 subgoals):\n 1. {} \\<notin> F ` P - {F I0}\n 2. F I0 \\<in> F ` P\n 3. part {..<brn d} (F ` P)\n 4. part {..<brn c} (inv_into P F ` F ` P)", "(*  *)"], ["proof (state)\nthis:\n  {} \\<notin> inv_into P F ` (F ` P - {F I0})\n\ngoal (4 subgoals):\n 1. {} \\<notin> F ` P - {F I0}\n 2. F I0 \\<in> F ` P\n 3. part {..<brn d} (F ` P)\n 4. part {..<brn c} (inv_into P F ` F ` P)", "have \"part {..<brn c} P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part {..<brn c} P", "using *"], ["proof (prove)\nusing this:\n  mC_ZOC theta c d s t I0 P F\n\ngoal (1 subgoal):\n 1. part {..<brn c} P", "unfolding mC_ZOC_def mC_ZOC_part_def"], ["proof (prove)\nusing this:\n  ({} \\<notin> P - {I0} \\<and>\n   {} \\<notin> F ` (P - {I0}) \\<and>\n   I0 \\<in> P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  mC_ZOC_wt c d s t I0 P F \\<and>\n  mC_ZOC_eff_cont0 theta c d s t I0 F \\<and>\n  mC_ZOC_eff_cont theta c d s t I0 P F\n\ngoal (1 subgoal):\n 1. part {..<brn c} P", "by blast"], ["proof (state)\nthis:\n  part {..<brn c} P\n\ngoal (4 subgoals):\n 1. {} \\<notin> F ` P - {F I0}\n 2. F I0 \\<in> F ` P\n 3. part {..<brn d} (F ` P)\n 4. part {..<brn c} (inv_into P F ` F ` P)", "thus \"part {..<brn c} (inv_into P F ` F ` P)\""], ["proof (prove)\nusing this:\n  part {..<brn c} P\n\ngoal (1 subgoal):\n 1. part {..<brn c} (inv_into P F ` F ` P)", "using 0"], ["proof (prove)\nusing this:\n  part {..<brn c} P\n  inj_on F P\n  I0 \\<in> P\n\ngoal (1 subgoal):\n 1. part {..<brn c} (inv_into P F ` F ` P)", "by auto"], ["proof (state)\nthis:\n  part {..<brn c} (inv_into P F ` F ` P)\n\ngoal (3 subgoals):\n 1. {} \\<notin> F ` P - {F I0}\n 2. F I0 \\<in> F ` P\n 3. part {..<brn d} (F ` P)", "qed(insert *, unfold mC_ZOC_def mC_ZOC_part_def, blast+)"], ["proof (state)\nthis:\n  mC_ZOC_part d c t s (F I0) (F ` P) (inv_into P F)\n\ngoal (4 subgoals):\n 1. inj_on (inv_into P F) (F ` P)\n 2. mC_ZOC_wt d c t s (F I0) (F ` P) (inv_into P F)\n 3. mC_ZOC_eff_cont0 theta d c t s (F I0) (inv_into P F)\n 4. mC_ZOC_eff_cont theta d c t s (F I0) (F ` P) (inv_into P F)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. inj_on (inv_into P F) (F ` P)\n 2. mC_ZOC_wt d c t s (F I0) (F ` P) (inv_into P F)\n 3. mC_ZOC_eff_cont0 theta d c t s (F I0) (inv_into P F)\n 4. mC_ZOC_eff_cont theta d c t s (F I0) (F ` P) (inv_into P F)", "have 0: \"inj_on F P\" \"I0 \\<in> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on F P &&& I0 \\<in> P", "using *"], ["proof (prove)\nusing this:\n  mC_ZOC theta c d s t I0 P F\n\ngoal (1 subgoal):\n 1. inj_on F P &&& I0 \\<in> P", "unfolding mC_ZOC_def mC_ZOC_part_def"], ["proof (prove)\nusing this:\n  ({} \\<notin> P - {I0} \\<and>\n   {} \\<notin> F ` (P - {I0}) \\<and>\n   I0 \\<in> P \\<and>\n   part {..<brn c} P \\<and> part {..<brn d} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  mC_ZOC_wt c d s t I0 P F \\<and>\n  mC_ZOC_eff_cont0 theta c d s t I0 F \\<and>\n  mC_ZOC_eff_cont theta c d s t I0 P F\n\ngoal (1 subgoal):\n 1. inj_on F P &&& I0 \\<in> P", "by blast+"], ["proof (state)\nthis:\n  inj_on F P\n  I0 \\<in> P\n\ngoal (4 subgoals):\n 1. inj_on (inv_into P F) (F ` P)\n 2. mC_ZOC_wt d c t s (F I0) (F ` P) (inv_into P F)\n 3. mC_ZOC_eff_cont0 theta d c t s (F I0) (inv_into P F)\n 4. mC_ZOC_eff_cont theta d c t s (F I0) (F ` P) (inv_into P F)", "show \"mC_ZOC_wt d c t s (F I0) (F ` P) (inv_into P F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_ZOC_wt d c t s (F I0) (F ` P) (inv_into P F)", "unfolding mC_ZOC_wt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt d t) (F I0) < 1 \\<and>\n    sum (wt c s) (inv_into P F (F I0)) < 1 \\<longrightarrow>\n    (\\<forall>I\\<in>F ` P - {F I0}.\n        sum (wt d t) I / (1 - sum (wt d t) (F I0)) =\n        sum (wt c s) (inv_into P F I) /\n        (1 - sum (wt c s) (inv_into P F (F I0))))", "proof(intro conjI ballI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I.\n       \\<lbrakk>sum (wt d t) (F I0) < 1 \\<and>\n                sum (wt c s) (inv_into P F (F I0)) < 1;\n        I \\<in> F ` P - {F I0}\\<rbrakk>\n       \\<Longrightarrow> sum (wt d t) I / (1 - sum (wt d t) (F I0)) =\n                         sum (wt c s) (inv_into P F I) /\n                         (1 - sum (wt c s) (inv_into P F (F I0)))", "fix J"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I.\n       \\<lbrakk>sum (wt d t) (F I0) < 1 \\<and>\n                sum (wt c s) (inv_into P F (F I0)) < 1;\n        I \\<in> F ` P - {F I0}\\<rbrakk>\n       \\<Longrightarrow> sum (wt d t) I / (1 - sum (wt d t) (F I0)) =\n                         sum (wt c s) (inv_into P F I) /\n                         (1 - sum (wt c s) (inv_into P F (F I0)))", "assume \"J \\<in> F ` P - {F I0}\" and le_1: \"sum (wt d t) (F I0) < 1 \\<and> sum (wt c s) (inv_into P F (F I0)) < 1\""], ["proof (state)\nthis:\n  J \\<in> F ` P - {F I0}\n  sum (wt d t) (F I0) < 1 \\<and> sum (wt c s) (inv_into P F (F I0)) < 1\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       \\<lbrakk>sum (wt d t) (F I0) < 1 \\<and>\n                sum (wt c s) (inv_into P F (F I0)) < 1;\n        I \\<in> F ` P - {F I0}\\<rbrakk>\n       \\<Longrightarrow> sum (wt d t) I / (1 - sum (wt d t) (F I0)) =\n                         sum (wt c s) (inv_into P F I) /\n                         (1 - sum (wt c s) (inv_into P F (F I0)))", "then"], ["proof (chain)\npicking this:\n  J \\<in> F ` P - {F I0}\n  sum (wt d t) (F I0) < 1 \\<and> sum (wt c s) (inv_into P F (F I0)) < 1", "obtain I where I: \"I \\<in> P - {I0}\" and J: \"J = F I\""], ["proof (prove)\nusing this:\n  J \\<in> F ` P - {F I0}\n  sum (wt d t) (F I0) < 1 \\<and> sum (wt c s) (inv_into P F (F I0)) < 1\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>I \\<in> P - {I0}; J = F I\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis image_iff member_remove remove_def)"], ["proof (state)\nthis:\n  I \\<in> P - {I0}\n  J = F I\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       \\<lbrakk>sum (wt d t) (F I0) < 1 \\<and>\n                sum (wt c s) (inv_into P F (F I0)) < 1;\n        I \\<in> F ` P - {F I0}\\<rbrakk>\n       \\<Longrightarrow> sum (wt d t) I / (1 - sum (wt d t) (F I0)) =\n                         sum (wt c s) (inv_into P F I) /\n                         (1 - sum (wt c s) (inv_into P F (F I0)))", "have 2: \"inv_into P F J = I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_into P F J = I", "unfolding J"], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_into P F (F I) = I", "using 0 I"], ["proof (prove)\nusing this:\n  inj_on F P\n  I0 \\<in> P\n  I \\<in> P - {I0}\n\ngoal (1 subgoal):\n 1. inv_into P F (F I) = I", "by simp"], ["proof (state)\nthis:\n  inv_into P F J = I\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       \\<lbrakk>sum (wt d t) (F I0) < 1 \\<and>\n                sum (wt c s) (inv_into P F (F I0)) < 1;\n        I \\<in> F ` P - {F I0}\\<rbrakk>\n       \\<Longrightarrow> sum (wt d t) I / (1 - sum (wt d t) (F I0)) =\n                         sum (wt c s) (inv_into P F I) /\n                         (1 - sum (wt c s) (inv_into P F (F I0)))", "have 3: \"inv_into P F (F I0) = I0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_into P F (F I0) = I0", "using 0"], ["proof (prove)\nusing this:\n  inj_on F P\n  I0 \\<in> P\n\ngoal (1 subgoal):\n 1. inv_into P F (F I0) = I0", "by simp"], ["proof (state)\nthis:\n  inv_into P F (F I0) = I0\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       \\<lbrakk>sum (wt d t) (F I0) < 1 \\<and>\n                sum (wt c s) (inv_into P F (F I0)) < 1;\n        I \\<in> F ` P - {F I0}\\<rbrakk>\n       \\<Longrightarrow> sum (wt d t) I / (1 - sum (wt d t) (F I0)) =\n                         sum (wt c s) (inv_into P F I) /\n                         (1 - sum (wt c s) (inv_into P F (F I0)))", "show\n    \"sum (wt d t) J / (1 - sum (wt d t) (F I0)) =\n     sum (wt c s) (inv_into P F J) / (1 - sum (wt c s) (inv_into P F (F I0)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt d t) J / (1 - sum (wt d t) (F I0)) =\n    sum (wt c s) (inv_into P F J) / (1 - sum (wt c s) (inv_into P F (F I0)))", "unfolding 2 3"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt d t) J / (1 - sum (wt d t) (F I0)) =\n    sum (wt c s) I / (1 - sum (wt c s) I0)", "unfolding J"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt d t) (F I) / (1 - sum (wt d t) (F I0)) =\n    sum (wt c s) I / (1 - sum (wt c s) I0)", "using * I le_1"], ["proof (prove)\nusing this:\n  mC_ZOC theta c d s t I0 P F\n  I \\<in> P - {I0}\n  sum (wt d t) (F I0) < 1 \\<and> sum (wt c s) (inv_into P F (F I0)) < 1\n\ngoal (1 subgoal):\n 1. sum (wt d t) (F I) / (1 - sum (wt d t) (F I0)) =\n    sum (wt c s) I / (1 - sum (wt c s) I0)", "unfolding mC_ZOC_def mC_ZOC_wt_def"], ["proof (prove)\nusing this:\n  mC_ZOC_part c d s t I0 P F \\<and>\n  inj_on F P \\<and>\n  (sum (wt c s) I0 < 1 \\<and> sum (wt d t) (F I0) < 1 \\<longrightarrow>\n   (\\<forall>I\\<in>P - {I0}.\n       sum (wt c s) I / (1 - sum (wt c s) I0) =\n       sum (wt d t) (F I) / (1 - sum (wt d t) (F I0)))) \\<and>\n  mC_ZOC_eff_cont0 theta c d s t I0 F \\<and>\n  mC_ZOC_eff_cont theta c d s t I0 P F\n  I \\<in> P - {I0}\n  sum (wt d t) (F I0) < 1 \\<and> sum (wt c s) (inv_into P F (F I0)) < 1\n\ngoal (1 subgoal):\n 1. sum (wt d t) (F I) / (1 - sum (wt d t) (F I0)) =\n    sum (wt c s) I / (1 - sum (wt c s) I0)", "by (metis 3 J)"], ["proof (state)\nthis:\n  sum (wt d t) J / (1 - sum (wt d t) (F I0)) =\n  sum (wt c s) (inv_into P F J) / (1 - sum (wt c s) (inv_into P F (F I0)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mC_ZOC_wt d c t s (F I0) (F ` P) (inv_into P F)\n\ngoal (3 subgoals):\n 1. inj_on (inv_into P F) (F ` P)\n 2. mC_ZOC_eff_cont0 theta d c t s (F I0) (inv_into P F)\n 3. mC_ZOC_eff_cont theta d c t s (F I0) (F ` P) (inv_into P F)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. inj_on (inv_into P F) (F ` P)\n 2. mC_ZOC_eff_cont0 theta d c t s (F I0) (inv_into P F)\n 3. mC_ZOC_eff_cont theta d c t s (F I0) (F ` P) (inv_into P F)", "show \"mC_ZOC_eff_cont theta d c t s (F I0) (F ` P) (inv_into P F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mC_ZOC_eff_cont theta d c t s (F I0) (F ` P) (inv_into P F)", "unfolding mC_ZOC_eff_cont_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>I i j.\n       I \\<in> F ` P - {F I0} \\<and>\n       i \\<in> I \\<and> j \\<in> inv_into P F I \\<longrightarrow>\n       eff d t i \\<approx> eff c s j \\<and>\n       (local.cont d t i, local.cont c s j) \\<in> theta", "proof(intro allI impI, elim conjE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> F ` P - {F I0}; i \\<in> I;\n        j \\<in> inv_into P F I\\<rbrakk>\n       \\<Longrightarrow> eff d t i \\<approx> eff c s j \\<and>\n                         (local.cont d t i, local.cont c s j) \\<in> theta", "fix i j J"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> F ` P - {F I0}; i \\<in> I;\n        j \\<in> inv_into P F I\\<rbrakk>\n       \\<Longrightarrow> eff d t i \\<approx> eff c s j \\<and>\n                         (local.cont d t i, local.cont c s j) \\<in> theta", "assume \"J \\<in> F ` P - {F I0}\" and j: \"j \\<in> J\" and i: \"i \\<in> inv_into P F J\""], ["proof (state)\nthis:\n  J \\<in> F ` P - {F I0}\n  j \\<in> J\n  i \\<in> inv_into P F J\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> F ` P - {F I0}; i \\<in> I;\n        j \\<in> inv_into P F I\\<rbrakk>\n       \\<Longrightarrow> eff d t i \\<approx> eff c s j \\<and>\n                         (local.cont d t i, local.cont c s j) \\<in> theta", "then"], ["proof (chain)\npicking this:\n  J \\<in> F ` P - {F I0}\n  j \\<in> J\n  i \\<in> inv_into P F J", "obtain I where J: \"J = F I\" and I: \"I \\<in> P - {I0}\""], ["proof (prove)\nusing this:\n  J \\<in> F ` P - {F I0}\n  j \\<in> J\n  i \\<in> inv_into P F J\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>J = F I; I \\<in> P - {I0}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis image_iff member_remove remove_def)"], ["proof (state)\nthis:\n  J = F I\n  I \\<in> P - {I0}\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> F ` P - {F I0}; i \\<in> I;\n        j \\<in> inv_into P F I\\<rbrakk>\n       \\<Longrightarrow> eff d t i \\<approx> eff c s j \\<and>\n                         (local.cont d t i, local.cont c s j) \\<in> theta", "hence \"i \\<in> I\""], ["proof (prove)\nusing this:\n  J = F I\n  I \\<in> P - {I0}\n\ngoal (1 subgoal):\n 1. i \\<in> I", "using assms i"], ["proof (prove)\nusing this:\n  J = F I\n  I \\<in> P - {I0}\n  sym theta\n  mC_ZOC theta c d s t I0 P F\n  i \\<in> inv_into P F J\n\ngoal (1 subgoal):\n 1. i \\<in> I", "unfolding mC_ZOC_def"], ["proof (prove)\nusing this:\n  J = F I\n  I \\<in> P - {I0}\n  sym theta\n  mC_ZOC_part c d s t I0 P F \\<and>\n  inj_on F P \\<and>\n  mC_ZOC_wt c d s t I0 P F \\<and>\n  mC_ZOC_eff_cont0 theta c d s t I0 F \\<and>\n  mC_ZOC_eff_cont theta c d s t I0 P F\n  i \\<in> inv_into P F J\n\ngoal (1 subgoal):\n 1. i \\<in> I", "by auto"], ["proof (state)\nthis:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> F ` P - {F I0}; i \\<in> I;\n        j \\<in> inv_into P F I\\<rbrakk>\n       \\<Longrightarrow> eff d t i \\<approx> eff c s j \\<and>\n                         (local.cont d t i, local.cont c s j) \\<in> theta", "hence \"eff c s i \\<approx> eff d t j \\<and> (cont c s i, cont d t j) \\<in> theta\""], ["proof (prove)\nusing this:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "using assms I j"], ["proof (prove)\nusing this:\n  i \\<in> I\n  sym theta\n  mC_ZOC theta c d s t I0 P F\n  I \\<in> P - {I0}\n  j \\<in> J\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "unfolding mC_ZOC_def mC_ZOC_eff_cont_def J"], ["proof (prove)\nusing this:\n  i \\<in> I\n  sym theta\n  mC_ZOC_part c d s t I0 P F \\<and>\n  inj_on F P \\<and>\n  mC_ZOC_wt c d s t I0 P F \\<and>\n  mC_ZOC_eff_cont0 theta c d s t I0 F \\<and>\n  (\\<forall>I i j.\n      I \\<in> P - {I0} \\<and> i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n      eff c s i \\<approx> eff d t j \\<and>\n      (local.cont c s i, local.cont d t j) \\<in> theta)\n  I \\<in> P - {I0}\n  j \\<in> F I\n\ngoal (1 subgoal):\n 1. eff c s i \\<approx> eff d t j \\<and>\n    (local.cont c s i, local.cont d t j) \\<in> theta", "by auto"], ["proof (state)\nthis:\n  eff c s i \\<approx> eff d t j \\<and>\n  (local.cont c s i, local.cont d t j) \\<in> theta\n\ngoal (1 subgoal):\n 1. \\<And>I i j.\n       \\<lbrakk>I \\<in> F ` P - {F I0}; i \\<in> I;\n        j \\<in> inv_into P F I\\<rbrakk>\n       \\<Longrightarrow> eff d t i \\<approx> eff c s j \\<and>\n                         (local.cont d t i, local.cont c s j) \\<in> theta", "thus \"eff d t j \\<approx> eff c s i \\<and> (cont d t j, cont c s i) \\<in> theta\""], ["proof (prove)\nusing this:\n  eff c s i \\<approx> eff d t j \\<and>\n  (local.cont c s i, local.cont d t j) \\<in> theta\n\ngoal (1 subgoal):\n 1. eff d t j \\<approx> eff c s i \\<and>\n    (local.cont d t j, local.cont c s i) \\<in> theta", "by (metis assms indis_sym sym_def)"], ["proof (state)\nthis:\n  eff d t j \\<approx> eff c s i \\<and>\n  (local.cont d t j, local.cont c s i) \\<in> theta\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mC_ZOC_eff_cont theta d c t s (F I0) (F ` P) (inv_into P F)\n\ngoal (2 subgoals):\n 1. inj_on (inv_into P F) (F ` P)\n 2. mC_ZOC_eff_cont0 theta d c t s (F I0) (inv_into P F)", "qed(insert assms, unfold sym_def m_defsAll, auto)"], ["", "lemma matchC_LC_sym:\nassumes *: \"sym theta\" and \"matchC_LC theta c d\"\nshows \"matchC_LC theta d c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchC_LC theta d c", "unfolding matchC_LC_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       s \\<approx> t \\<longrightarrow>\n       (\\<exists>I0 P F. mC_ZOC theta d c s t I0 P F)", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>I0 P F. mC_ZOC theta d c s t I0 P F", "fix t s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>I0 P F. mC_ZOC theta d c s t I0 P F", "assume \"t \\<approx> s\""], ["proof (state)\nthis:\n  t \\<approx> s\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>I0 P F. mC_ZOC theta d c s t I0 P F", "hence \"s \\<approx> t\""], ["proof (prove)\nusing this:\n  t \\<approx> s\n\ngoal (1 subgoal):\n 1. s \\<approx> t", "by (metis indis_sym)"], ["proof (state)\nthis:\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>I0 P F. mC_ZOC theta d c s t I0 P F", "then"], ["proof (chain)\npicking this:\n  s \\<approx> t", "obtain I0 P F where \"mC_ZOC theta c d s t I0 P F\""], ["proof (prove)\nusing this:\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. (\\<And>I0 P F.\n        mC_ZOC theta c d s t I0 P F \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  s \\<approx> t\n  sym theta\n  matchC_LC theta c d\n\ngoal (1 subgoal):\n 1. (\\<And>I0 P F.\n        mC_ZOC theta c d s t I0 P F \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding matchC_LC_def"], ["proof (prove)\nusing this:\n  s \\<approx> t\n  sym theta\n  \\<forall>s t.\n     s \\<approx> t \\<longrightarrow>\n     (\\<exists>I0 P F. mC_ZOC theta c d s t I0 P F)\n\ngoal (1 subgoal):\n 1. (\\<And>I0 P F.\n        mC_ZOC theta c d s t I0 P F \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  mC_ZOC theta c d s t I0 P F\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>I0 P F. mC_ZOC theta d c s t I0 P F", "hence \"mC_ZOC theta d c t s (F I0) (F ` P) (inv_into P F)\""], ["proof (prove)\nusing this:\n  mC_ZOC theta c d s t I0 P F\n\ngoal (1 subgoal):\n 1. mC_ZOC theta d c t s (F I0) (F ` P) (inv_into P F)", "using mC_ZOC_sym *"], ["proof (prove)\nusing this:\n  mC_ZOC theta c d s t I0 P F\n  \\<lbrakk>sym ?theta; mC_ZOC ?theta ?c ?d ?s ?t ?I0.0 ?P ?F\\<rbrakk>\n  \\<Longrightarrow> mC_ZOC ?theta ?d ?c ?t ?s (?F ?I0.0) (?F ` ?P)\n                     (inv_into ?P ?F)\n  sym theta\n\ngoal (1 subgoal):\n 1. mC_ZOC theta d c t s (F I0) (F ` P) (inv_into P F)", "by auto"], ["proof (state)\nthis:\n  mC_ZOC theta d c t s (F I0) (F ` P) (inv_into P F)\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       s \\<approx> t \\<Longrightarrow>\n       \\<exists>I0 P F. mC_ZOC theta d c s t I0 P F", "thus \"\\<exists>I0 Q G. mC_ZOC theta d c t s I0 Q G\""], ["proof (prove)\nusing this:\n  mC_ZOC theta d c t s (F I0) (F ` P) (inv_into P F)\n\ngoal (1 subgoal):\n 1. \\<exists>I0 Q G. mC_ZOC theta d c t s I0 Q G", "by blast"], ["proof (state)\nthis:\n  \\<exists>I0 Q G. mC_ZOC theta d c t s I0 Q G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ZOretr_sym:\nassumes \"sym theta\"\nshows \"sym (ZOretr theta)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (ZOretr theta)", "unfolding sym_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       (x, y) \\<in> ZOretr theta \\<longrightarrow> (y, x) \\<in> ZOretr theta", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y) \\<in> ZOretr theta \\<Longrightarrow> (y, x) \\<in> ZOretr theta", "fix c d"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y) \\<in> ZOretr theta \\<Longrightarrow> (y, x) \\<in> ZOretr theta", "assume \"(c, d) \\<in> ZOretr theta\""], ["proof (state)\nthis:\n  (c, d) \\<in> ZOretr theta\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y) \\<in> ZOretr theta \\<Longrightarrow> (y, x) \\<in> ZOretr theta", "hence \"(d, c) \\<in> ZOretr theta\""], ["proof (prove)\nusing this:\n  (c, d) \\<in> ZOretr theta\n\ngoal (1 subgoal):\n 1. (d, c) \\<in> ZOretr theta", "unfolding ZOretr_def"], ["proof (prove)\nusing this:\n  (c, d) \\<in> {(c, d). matchC_LC theta c d}\n\ngoal (1 subgoal):\n 1. (d, c) \\<in> {(c, d). matchC_LC theta c d}", "using assms matchC_LC_sym"], ["proof (prove)\nusing this:\n  (c, d) \\<in> {(c, d). matchC_LC theta c d}\n  sym theta\n  \\<lbrakk>sym ?theta; matchC_LC ?theta ?c ?d\\<rbrakk>\n  \\<Longrightarrow> matchC_LC ?theta ?d ?c\n\ngoal (1 subgoal):\n 1. (d, c) \\<in> {(c, d). matchC_LC theta c d}", "by simp"], ["proof (state)\nthis:\n  (d, c) \\<in> ZOretr theta\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y) \\<in> ZOretr theta \\<Longrightarrow> (y, x) \\<in> ZOretr theta", "thus \"(d, c) \\<in> ZOretr theta\""], ["proof (prove)\nusing this:\n  (d, c) \\<in> ZOretr theta\n\ngoal (1 subgoal):\n 1. (d, c) \\<in> ZOretr theta", "using assms"], ["proof (prove)\nusing this:\n  (d, c) \\<in> ZOretr theta\n  sym theta\n\ngoal (1 subgoal):\n 1. (d, c) \\<in> ZOretr theta", "by (metis sym_conv_converse_eq)"], ["proof (state)\nthis:\n  (d, c) \\<in> ZOretr theta\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sym_ZObis: \"sym ZObis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym ZObis", "by (metis ZObis_def ZOretr_sym mono_Retr sym_gfp)"], ["", "lemma ZObis_sym: \"c \\<approx>01 d \\<Longrightarrow> d \\<approx>01 c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<approx>01 d \\<Longrightarrow> d \\<approx>01 c", "using sym_ZObis"], ["proof (prove)\nusing this:\n  sym ZObis\n\ngoal (1 subgoal):\n 1. c \\<approx>01 d \\<Longrightarrow> d \\<approx>01 c", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<approx>01 y \\<longrightarrow> y \\<approx>01 x\n\ngoal (1 subgoal):\n 1. c \\<approx>01 d \\<Longrightarrow> d \\<approx>01 c", "by blast"], ["", "subsection \\<open>List versions of the bisimilarities\\<close>"], ["", "(* For Sbis: *)"], ["", "definition SbisL where\n\"SbisL cl dl \\<equiv>\n length cl = length dl \\<and> (\\<forall> n < length cl. cl ! n \\<approx>s dl ! n)\""], ["", "lemma SbisL_intro[intro]:\nassumes \"length cl = length dl\" and\n\"\\<And> n. \\<lbrakk>n < length cl; n < length dl\\<rbrakk> \\<Longrightarrow> cl ! n \\<approx>s dl ! n\"\nshows \"SbisL cl dl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SbisL cl dl", "using assms"], ["proof (prove)\nusing this:\n  length cl = length dl\n  \\<lbrakk>?n1 < length cl; ?n1 < length dl\\<rbrakk>\n  \\<Longrightarrow> cl ! ?n1 \\<approx>s dl ! ?n1\n\ngoal (1 subgoal):\n 1. SbisL cl dl", "unfolding SbisL_def"], ["proof (prove)\nusing this:\n  length cl = length dl\n  \\<lbrakk>?n1 < length cl; ?n1 < length dl\\<rbrakk>\n  \\<Longrightarrow> cl ! ?n1 \\<approx>s dl ! ?n1\n\ngoal (1 subgoal):\n 1. length cl = length dl \\<and>\n    (\\<forall>n<length cl. cl ! n \\<approx>s dl ! n)", "by auto"], ["", "lemma SbisL_length[simp]:\nassumes \"SbisL cl dl\"\nshows \"length cl = length dl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length cl = length dl", "using assms"], ["proof (prove)\nusing this:\n  SbisL cl dl\n\ngoal (1 subgoal):\n 1. length cl = length dl", "unfolding SbisL_def"], ["proof (prove)\nusing this:\n  length cl = length dl \\<and>\n  (\\<forall>n<length cl. cl ! n \\<approx>s dl ! n)\n\ngoal (1 subgoal):\n 1. length cl = length dl", "by simp"], ["", "lemma SbisL_Sbis[simp]:\nassumes \"SbisL cl dl\" and \"n < length cl \\<or> n < length dl\"\nshows \"cl ! n \\<approx>s dl ! n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cl ! n \\<approx>s dl ! n", "using assms"], ["proof (prove)\nusing this:\n  SbisL cl dl\n  n < length cl \\<or> n < length dl\n\ngoal (1 subgoal):\n 1. cl ! n \\<approx>s dl ! n", "unfolding SbisL_def"], ["proof (prove)\nusing this:\n  length cl = length dl \\<and>\n  (\\<forall>n<length cl. cl ! n \\<approx>s dl ! n)\n  n < length cl \\<or> n < length dl\n\ngoal (1 subgoal):\n 1. cl ! n \\<approx>s dl ! n", "by simp"], ["", "lemma SbisL_update[simp]:\nassumes cldl: \"SbisL cl dl\" and c'd': \"c' \\<approx>s d'\"\nshows \"SbisL (cl [n := c']) (dl [n := d'])\" (is \"SbisL ?cl' ?dl'\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. SbisL (cl[n := c']) (dl[n := d'])", "proof(cases \"n < length cl\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n < length cl \\<Longrightarrow> SbisL (cl[n := c']) (dl[n := d'])\n 2. \\<not> n < length cl \\<Longrightarrow> SbisL (cl[n := c']) (dl[n := d'])", "case True"], ["proof (state)\nthis:\n  n < length cl\n\ngoal (2 subgoals):\n 1. n < length cl \\<Longrightarrow> SbisL (cl[n := c']) (dl[n := d'])\n 2. \\<not> n < length cl \\<Longrightarrow> SbisL (cl[n := c']) (dl[n := d'])", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. SbisL (cl[n := c']) (dl[n := d'])", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. length (cl[n := c']) = length (dl[n := d'])\n 2. \\<And>na.\n       \\<lbrakk>na < length (cl[n := c']);\n        na < length (dl[n := d'])\\<rbrakk>\n       \\<Longrightarrow> cl[n := c'] ! na \\<approx>s dl[n := d'] ! na", "fix m"], ["proof (state)\ngoal (2 subgoals):\n 1. length (cl[n := c']) = length (dl[n := d'])\n 2. \\<And>na.\n       \\<lbrakk>na < length (cl[n := c']);\n        na < length (dl[n := d'])\\<rbrakk>\n       \\<Longrightarrow> cl[n := c'] ! na \\<approx>s dl[n := d'] ! na", "assume m: \"m < length ?cl'\" \"m < length ?dl'\""], ["proof (state)\nthis:\n  m < length (cl[n := c'])\n  m < length (dl[n := d'])\n\ngoal (2 subgoals):\n 1. length (cl[n := c']) = length (dl[n := d'])\n 2. \\<And>na.\n       \\<lbrakk>na < length (cl[n := c']);\n        na < length (dl[n := d'])\\<rbrakk>\n       \\<Longrightarrow> cl[n := c'] ! na \\<approx>s dl[n := d'] ! na", "thus \"?cl' ! m \\<approx>s ?dl' ! m\""], ["proof (prove)\nusing this:\n  m < length (cl[n := c'])\n  m < length (dl[n := d'])\n\ngoal (1 subgoal):\n 1. cl[n := c'] ! m \\<approx>s dl[n := d'] ! m", "using assms"], ["proof (prove)\nusing this:\n  m < length (cl[n := c'])\n  m < length (dl[n := d'])\n  SbisL cl dl\n  c' \\<approx>s d'\n\ngoal (1 subgoal):\n 1. cl[n := c'] ! m \\<approx>s dl[n := d'] ! m", "by (cases \"m = n\") auto"], ["proof (state)\nthis:\n  cl[n := c'] ! m \\<approx>s dl[n := d'] ! m\n\ngoal (1 subgoal):\n 1. length (cl[n := c']) = length (dl[n := d'])", "qed (insert cldl, simp)"], ["proof (state)\nthis:\n  SbisL (cl[n := c']) (dl[n := d'])\n\ngoal (1 subgoal):\n 1. \\<not> n < length cl \\<Longrightarrow> SbisL (cl[n := c']) (dl[n := d'])", "qed (insert cldl, simp)"], ["", "lemma SbisL_update_L[simp]:\nassumes \"SbisL cl dl\" and \"c' \\<approx>s dl!n\"\nshows \"SbisL (cl[n := c']) dl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SbisL (cl[n := c']) dl", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. SbisL (cl[n := c']) dl", "let ?d' = \"dl!n\""], ["proof (state)\ngoal (1 subgoal):\n 1. SbisL (cl[n := c']) dl", "have \"SbisL (cl[n := c']) (dl[n := ?d'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SbisL (cl[n := c']) (dl[n := dl ! n])", "apply(rule SbisL_update)"], ["proof (prove)\ngoal (2 subgoals):\n 1. SbisL cl dl\n 2. c' \\<approx>s dl ! n", "using assms"], ["proof (prove)\nusing this:\n  SbisL cl dl\n  c' \\<approx>s dl ! n\n\ngoal (2 subgoals):\n 1. SbisL cl dl\n 2. c' \\<approx>s dl ! n", "by auto"], ["proof (state)\nthis:\n  SbisL (cl[n := c']) (dl[n := dl ! n])\n\ngoal (1 subgoal):\n 1. SbisL (cl[n := c']) dl", "thus ?thesis"], ["proof (prove)\nusing this:\n  SbisL (cl[n := c']) (dl[n := dl ! n])\n\ngoal (1 subgoal):\n 1. SbisL (cl[n := c']) dl", "by simp"], ["proof (state)\nthis:\n  SbisL (cl[n := c']) dl\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SbisL_update_R[simp]:\nassumes \"SbisL cl dl\" and \"cl!n \\<approx>s d'\"\nshows \"SbisL cl (dl[n := d'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SbisL cl (dl[n := d'])", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. SbisL cl (dl[n := d'])", "let ?c' = \"cl!n\""], ["proof (state)\ngoal (1 subgoal):\n 1. SbisL cl (dl[n := d'])", "have \"SbisL (cl[n := ?c']) (dl[n := d'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SbisL (cl[n := cl ! n]) (dl[n := d'])", "apply(rule SbisL_update)"], ["proof (prove)\ngoal (2 subgoals):\n 1. SbisL cl dl\n 2. cl ! n \\<approx>s d'", "using assms"], ["proof (prove)\nusing this:\n  SbisL cl dl\n  cl ! n \\<approx>s d'\n\ngoal (2 subgoals):\n 1. SbisL cl dl\n 2. cl ! n \\<approx>s d'", "by auto"], ["proof (state)\nthis:\n  SbisL (cl[n := cl ! n]) (dl[n := d'])\n\ngoal (1 subgoal):\n 1. SbisL cl (dl[n := d'])", "thus ?thesis"], ["proof (prove)\nusing this:\n  SbisL (cl[n := cl ! n]) (dl[n := d'])\n\ngoal (1 subgoal):\n 1. SbisL cl (dl[n := d'])", "by simp"], ["proof (state)\nthis:\n  SbisL cl (dl[n := d'])\n\ngoal:\nNo subgoals!", "qed"], ["", "(* For ZObis: *)"], ["", "definition ZObisL where\n\"ZObisL cl dl \\<equiv>\n length cl = length dl \\<and> (\\<forall> n < length cl. cl ! n \\<approx>01 dl ! n)\""], ["", "lemma ZObisL_intro[intro]:\nassumes \"length cl = length dl\" and\n\"\\<And> n. \\<lbrakk>n < length cl; n < length dl\\<rbrakk> \\<Longrightarrow> cl ! n \\<approx>01 dl ! n\"\nshows \"ZObisL cl dl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZObisL cl dl", "using assms"], ["proof (prove)\nusing this:\n  length cl = length dl\n  \\<lbrakk>?n1 < length cl; ?n1 < length dl\\<rbrakk>\n  \\<Longrightarrow> cl ! ?n1 \\<approx>01 dl ! ?n1\n\ngoal (1 subgoal):\n 1. ZObisL cl dl", "unfolding ZObisL_def"], ["proof (prove)\nusing this:\n  length cl = length dl\n  \\<lbrakk>?n1 < length cl; ?n1 < length dl\\<rbrakk>\n  \\<Longrightarrow> cl ! ?n1 \\<approx>01 dl ! ?n1\n\ngoal (1 subgoal):\n 1. length cl = length dl \\<and>\n    (\\<forall>n<length cl. cl ! n \\<approx>01 dl ! n)", "by auto"], ["", "lemma ZObisL_length[simp]:\nassumes \"ZObisL cl dl\"\nshows \"length cl = length dl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length cl = length dl", "using assms"], ["proof (prove)\nusing this:\n  ZObisL cl dl\n\ngoal (1 subgoal):\n 1. length cl = length dl", "unfolding ZObisL_def"], ["proof (prove)\nusing this:\n  length cl = length dl \\<and>\n  (\\<forall>n<length cl. cl ! n \\<approx>01 dl ! n)\n\ngoal (1 subgoal):\n 1. length cl = length dl", "by simp"], ["", "lemma ZObisL_ZObis[simp]:\nassumes \"ZObisL cl dl\" and \"n < length cl \\<or> n < length dl\"\nshows \"cl ! n \\<approx>01 dl ! n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cl ! n \\<approx>01 dl ! n", "using assms"], ["proof (prove)\nusing this:\n  ZObisL cl dl\n  n < length cl \\<or> n < length dl\n\ngoal (1 subgoal):\n 1. cl ! n \\<approx>01 dl ! n", "unfolding ZObisL_def"], ["proof (prove)\nusing this:\n  length cl = length dl \\<and>\n  (\\<forall>n<length cl. cl ! n \\<approx>01 dl ! n)\n  n < length cl \\<or> n < length dl\n\ngoal (1 subgoal):\n 1. cl ! n \\<approx>01 dl ! n", "by simp"], ["", "lemma ZObisL_update[simp]:\nassumes cldl: \"ZObisL cl dl\" and c'd': \"c' \\<approx>01 d'\"\nshows \"ZObisL (cl [n := c']) (dl [n := d'])\" (is \"ZObisL ?cl' ?dl'\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ZObisL (cl[n := c']) (dl[n := d'])", "proof(cases \"n < length cl\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n < length cl \\<Longrightarrow> ZObisL (cl[n := c']) (dl[n := d'])\n 2. \\<not> n < length cl \\<Longrightarrow>\n    ZObisL (cl[n := c']) (dl[n := d'])", "case True"], ["proof (state)\nthis:\n  n < length cl\n\ngoal (2 subgoals):\n 1. n < length cl \\<Longrightarrow> ZObisL (cl[n := c']) (dl[n := d'])\n 2. \\<not> n < length cl \\<Longrightarrow>\n    ZObisL (cl[n := c']) (dl[n := d'])", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ZObisL (cl[n := c']) (dl[n := d'])", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. length (cl[n := c']) = length (dl[n := d'])\n 2. \\<And>na.\n       \\<lbrakk>na < length (cl[n := c']);\n        na < length (dl[n := d'])\\<rbrakk>\n       \\<Longrightarrow> cl[n := c'] ! na \\<approx>01 dl[n := d'] ! na", "fix m"], ["proof (state)\ngoal (2 subgoals):\n 1. length (cl[n := c']) = length (dl[n := d'])\n 2. \\<And>na.\n       \\<lbrakk>na < length (cl[n := c']);\n        na < length (dl[n := d'])\\<rbrakk>\n       \\<Longrightarrow> cl[n := c'] ! na \\<approx>01 dl[n := d'] ! na", "assume m: \"m < length ?cl'\" \"m < length ?dl'\""], ["proof (state)\nthis:\n  m < length (cl[n := c'])\n  m < length (dl[n := d'])\n\ngoal (2 subgoals):\n 1. length (cl[n := c']) = length (dl[n := d'])\n 2. \\<And>na.\n       \\<lbrakk>na < length (cl[n := c']);\n        na < length (dl[n := d'])\\<rbrakk>\n       \\<Longrightarrow> cl[n := c'] ! na \\<approx>01 dl[n := d'] ! na", "thus \"?cl' ! m \\<approx>01 ?dl' ! m\""], ["proof (prove)\nusing this:\n  m < length (cl[n := c'])\n  m < length (dl[n := d'])\n\ngoal (1 subgoal):\n 1. cl[n := c'] ! m \\<approx>01 dl[n := d'] ! m", "using assms"], ["proof (prove)\nusing this:\n  m < length (cl[n := c'])\n  m < length (dl[n := d'])\n  ZObisL cl dl\n  c' \\<approx>01 d'\n\ngoal (1 subgoal):\n 1. cl[n := c'] ! m \\<approx>01 dl[n := d'] ! m", "by (cases \"m = n\") auto"], ["proof (state)\nthis:\n  cl[n := c'] ! m \\<approx>01 dl[n := d'] ! m\n\ngoal (1 subgoal):\n 1. length (cl[n := c']) = length (dl[n := d'])", "qed (insert cldl, simp)"], ["proof (state)\nthis:\n  ZObisL (cl[n := c']) (dl[n := d'])\n\ngoal (1 subgoal):\n 1. \\<not> n < length cl \\<Longrightarrow>\n    ZObisL (cl[n := c']) (dl[n := d'])", "qed (insert cldl, simp)"], ["", "lemma ZObisL_update_L[simp]:\nassumes \"ZObisL cl dl\" and \"c' \\<approx>01 dl!n\"\nshows \"ZObisL (cl[n := c']) dl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZObisL (cl[n := c']) dl", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ZObisL (cl[n := c']) dl", "let ?d' = \"dl!n\""], ["proof (state)\ngoal (1 subgoal):\n 1. ZObisL (cl[n := c']) dl", "have \"ZObisL (cl[n := c']) (dl[n := ?d'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZObisL (cl[n := c']) (dl[n := dl ! n])", "apply(rule ZObisL_update)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ZObisL cl dl\n 2. c' \\<approx>01 dl ! n", "using assms"], ["proof (prove)\nusing this:\n  ZObisL cl dl\n  c' \\<approx>01 dl ! n\n\ngoal (2 subgoals):\n 1. ZObisL cl dl\n 2. c' \\<approx>01 dl ! n", "by auto"], ["proof (state)\nthis:\n  ZObisL (cl[n := c']) (dl[n := dl ! n])\n\ngoal (1 subgoal):\n 1. ZObisL (cl[n := c']) dl", "thus ?thesis"], ["proof (prove)\nusing this:\n  ZObisL (cl[n := c']) (dl[n := dl ! n])\n\ngoal (1 subgoal):\n 1. ZObisL (cl[n := c']) dl", "by simp"], ["proof (state)\nthis:\n  ZObisL (cl[n := c']) dl\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ZObisL_update_R[simp]:\nassumes \"ZObisL cl dl\" and \"cl!n \\<approx>01 d'\"\nshows \"ZObisL cl (dl[n := d'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZObisL cl (dl[n := d'])", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ZObisL cl (dl[n := d'])", "let ?c' = \"cl!n\""], ["proof (state)\ngoal (1 subgoal):\n 1. ZObisL cl (dl[n := d'])", "have \"ZObisL (cl[n := ?c']) (dl[n := d'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZObisL (cl[n := cl ! n]) (dl[n := d'])", "apply(rule ZObisL_update)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ZObisL cl dl\n 2. cl ! n \\<approx>01 d'", "using assms"], ["proof (prove)\nusing this:\n  ZObisL cl dl\n  cl ! n \\<approx>01 d'\n\ngoal (2 subgoals):\n 1. ZObisL cl dl\n 2. cl ! n \\<approx>01 d'", "by auto"], ["proof (state)\nthis:\n  ZObisL (cl[n := cl ! n]) (dl[n := d'])\n\ngoal (1 subgoal):\n 1. ZObisL cl (dl[n := d'])", "thus ?thesis"], ["proof (prove)\nusing this:\n  ZObisL (cl[n := cl ! n]) (dl[n := d'])\n\ngoal (1 subgoal):\n 1. ZObisL cl (dl[n := d'])", "by simp"], ["proof (state)\nthis:\n  ZObisL cl (dl[n := d'])\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Discreetness for configurations\\<close>"], ["", "coinductive discrCf where\nintro:\n\"(\\<And> i. i < brn (fst cf) \\<longrightarrow>\n       snd cf \\<approx> snd (cont_eff cf i) \\<and> discrCf (cont_eff cf i))\n \\<Longrightarrow> discrCf cf\""], ["", "text\\<open>Coinduction for discrness:\\<close>"], ["", "lemma discrCf_coind[consumes 1, case_names Hyp, induct pred: discr]:\nassumes *: \"phi cf\" and\n**: \"\\<And> cf i.\n       \\<lbrakk>i < brn (fst cf); phi cf\\<rbrakk> \\<Longrightarrow>\n        snd cf \\<approx> snd (cont_eff cf i) \\<and> (phi (cont_eff cf i) \\<or> discrCf (cont_eff cf i))\"\nshows \"discrCf cf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discrCf cf", "using *"], ["proof (prove)\nusing this:\n  phi cf\n\ngoal (1 subgoal):\n 1. discrCf cf", "apply(induct rule: discrCf.coinduct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       phi x \\<Longrightarrow>\n       \\<exists>cf.\n          x = cf \\<and>\n          (\\<forall>x<brn (fst cf).\n              snd cf \\<approx> snd (cont_eff cf x) \\<and>\n              (phi (cont_eff cf x) \\<or> discrCf (cont_eff cf x)))", "using **"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i1 < brn (fst ?cf1); phi ?cf1\\<rbrakk>\n  \\<Longrightarrow> snd ?cf1 \\<approx> snd (cont_eff ?cf1 ?i1) \\<and>\n                    (phi (cont_eff ?cf1 ?i1) \\<or>\n                     discrCf (cont_eff ?cf1 ?i1))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       phi x \\<Longrightarrow>\n       \\<exists>cf.\n          x = cf \\<and>\n          (\\<forall>x<brn (fst cf).\n              snd cf \\<approx> snd (cont_eff cf x) \\<and>\n              (phi (cont_eff cf x) \\<or> discrCf (cont_eff cf x)))", "by auto"], ["", "lemma discrCf_raw_coind[consumes 1, case_names Hyp]:\nassumes *: \"phi cf\" and\n**: \"\\<And> cf i. \\<lbrakk>i < brn (fst cf); phi cf\\<rbrakk> \\<Longrightarrow>\n              snd cf \\<approx> snd (cont_eff cf i) \\<and> phi (cont_eff cf i)\"\nshows \"discrCf cf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discrCf cf", "using *"], ["proof (prove)\nusing this:\n  phi cf\n\ngoal (1 subgoal):\n 1. discrCf cf", "apply(induct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>cf i.\n       \\<lbrakk>i < brn (fst cf); phi cf\\<rbrakk>\n       \\<Longrightarrow> snd cf \\<approx> snd (cont_eff cf i) \\<and>\n                         (phi (cont_eff cf i) \\<or> discrCf (cont_eff cf i))", "using **"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i1 < brn (fst ?cf1); phi ?cf1\\<rbrakk>\n  \\<Longrightarrow> snd ?cf1 \\<approx> snd (cont_eff ?cf1 ?i1) \\<and>\n                    phi (cont_eff ?cf1 ?i1)\n\ngoal (1 subgoal):\n 1. \\<And>cf i.\n       \\<lbrakk>i < brn (fst cf); phi cf\\<rbrakk>\n       \\<Longrightarrow> snd cf \\<approx> snd (cont_eff cf i) \\<and>\n                         (phi (cont_eff cf i) \\<or> discrCf (cont_eff cf i))", "by blast"], ["", "text\\<open>Discreetness versus transition:\\<close>"], ["", "lemma discrCf_cont[simp]:\nassumes *: \"discrCf cf\" and **: \"i < brn (fst cf)\"\nshows \"discrCf (cont_eff cf i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discrCf (cont_eff cf i)", "using *"], ["proof (prove)\nusing this:\n  discrCf cf\n\ngoal (1 subgoal):\n 1. discrCf (cont_eff cf i)", "apply(cases rule: discrCf.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        i < brn (fst cf) \\<longrightarrow>\n        snd cf \\<approx> snd (cont_eff cf i) \\<and>\n        discrCf (cont_eff cf i)) \\<Longrightarrow>\n    discrCf (cont_eff cf i)", "using **"], ["proof (prove)\nusing this:\n  i < brn (fst cf)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        i < brn (fst cf) \\<longrightarrow>\n        snd cf \\<approx> snd (cont_eff cf i) \\<and>\n        discrCf (cont_eff cf i)) \\<Longrightarrow>\n    discrCf (cont_eff cf i)", "by blast"], ["", "lemma discrCf_eff_indis[simp]:\nassumes *: \"discrCf cf\" and **: \"i < brn (fst cf)\"\nshows \"snd cf \\<approx> snd (cont_eff cf i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd cf \\<approx> snd (cont_eff cf i)", "using *"], ["proof (prove)\nusing this:\n  discrCf cf\n\ngoal (1 subgoal):\n 1. snd cf \\<approx> snd (cont_eff cf i)", "apply(cases rule: discrCf.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        i < brn (fst cf) \\<longrightarrow>\n        snd cf \\<approx> snd (cont_eff cf i) \\<and>\n        discrCf (cont_eff cf i)) \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i)", "using **"], ["proof (prove)\nusing this:\n  i < brn (fst cf)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        i < brn (fst cf) \\<longrightarrow>\n        snd cf \\<approx> snd (cont_eff cf i) \\<and>\n        discrCf (cont_eff cf i)) \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i)", "by blast"], ["", "lemma discr_discrCf:\nassumes \"discr c\"\nshows \"discrCf (c, s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discrCf (c, s)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. discrCf (c, s)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. discrCf (c, s)", "fix cf :: \"('test, 'atom, 'choice) cmd \\<times> 'state\""], ["proof (state)\ngoal (1 subgoal):\n 1. discrCf (c, s)", "assume \"discr (fst cf)\""], ["proof (state)\nthis:\n  discr (fst cf)\n\ngoal (1 subgoal):\n 1. discrCf (c, s)", "hence \"discrCf cf\""], ["proof (prove)\nusing this:\n  discr (fst cf)\n\ngoal (1 subgoal):\n 1. discrCf cf", "apply (induct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>cf i.\n       \\<lbrakk>i < brn (fst cf); discr (fst cf)\\<rbrakk>\n       \\<Longrightarrow> snd cf \\<approx> snd (cont_eff cf i) \\<and>\n                         (discr (fst (cont_eff cf i)) \\<or>\n                          discrCf (cont_eff cf i))", "using discr_eff_indis discr_cont"], ["proof (prove)\nusing this:\n  \\<lbrakk>discr ?c; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> ?s \\<approx> eff ?c ?s ?i\n  \\<lbrakk>discr ?c; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> discr (local.cont ?c ?s ?i)\n\ngoal (1 subgoal):\n 1. \\<And>cf i.\n       \\<lbrakk>i < brn (fst cf); discr (fst cf)\\<rbrakk>\n       \\<Longrightarrow> snd cf \\<approx> snd (cont_eff cf i) \\<and>\n                         (discr (fst (cont_eff cf i)) \\<or>\n                          discrCf (cont_eff cf i))", "unfolding eff_def cont_def cont_eff_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>discr ?c; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> ?s \\<approx> snd (snd (wt_cont_eff ?c ?s ?i))\n  \\<lbrakk>discr ?c; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> discr (fst (snd (wt_cont_eff ?c ?s ?i)))\n\ngoal (1 subgoal):\n 1. \\<And>cf i.\n       \\<lbrakk>i < brn (fst cf); discr (fst cf)\\<rbrakk>\n       \\<Longrightarrow> snd cf \\<approx>\n                         snd (snd (wt_cont_eff (fst cf) (snd cf) i)) \\<and>\n                         (discr\n                           (fst (snd (wt_cont_eff (fst cf) (snd cf)\n i))) \\<or>\n                          discrCf (snd (wt_cont_eff (fst cf) (snd cf) i)))", "by auto"], ["proof (state)\nthis:\n  discrCf cf\n\ngoal (1 subgoal):\n 1. discrCf (c, s)", "}"], ["proof (state)\nthis:\n  discr (fst ?cf3) \\<Longrightarrow> discrCf ?cf3\n\ngoal (1 subgoal):\n 1. discrCf (c, s)", "thus ?thesis"], ["proof (prove)\nusing this:\n  discr (fst ?cf3) \\<Longrightarrow> discrCf ?cf3\n\ngoal (1 subgoal):\n 1. discrCf (c, s)", "using assms"], ["proof (prove)\nusing this:\n  discr (fst ?cf3) \\<Longrightarrow> discrCf ?cf3\n  discr c\n\ngoal (1 subgoal):\n 1. discrCf (c, s)", "by auto"], ["proof (state)\nthis:\n  discrCf (c, s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ZObis_pres_discrCfL:\nassumes \"fst cf \\<approx>01 fst df\" and \"snd cf \\<approx> snd df\" and \"discrCf df\"\nshows \"discrCf cf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discrCf cf", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. discrCf cf", "have \"\\<exists> df. fst cf \\<approx>01 fst df \\<and> snd cf \\<approx> snd df \\<and> discrCf df\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>df.\n       fst cf \\<approx>01 fst df \\<and>\n       snd cf \\<approx> snd df \\<and> discrCf df", "using assms"], ["proof (prove)\nusing this:\n  fst cf \\<approx>01 fst df\n  snd cf \\<approx> snd df\n  discrCf df\n\ngoal (1 subgoal):\n 1. \\<exists>df.\n       fst cf \\<approx>01 fst df \\<and>\n       snd cf \\<approx> snd df \\<and> discrCf df", "by blast"], ["proof (state)\nthis:\n  \\<exists>df.\n     fst cf \\<approx>01 fst df \\<and>\n     snd cf \\<approx> snd df \\<and> discrCf df\n\ngoal (1 subgoal):\n 1. discrCf cf", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>df.\n     fst cf \\<approx>01 fst df \\<and>\n     snd cf \\<approx> snd df \\<and> discrCf df\n\ngoal (1 subgoal):\n 1. discrCf cf", "proof (induct rule: discrCf_raw_coind)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>cf i.\n       \\<lbrakk>i < brn (fst cf);\n        \\<exists>df.\n           fst cf \\<approx>01 fst df \\<and>\n           snd cf \\<approx> snd df \\<and> discrCf df\\<rbrakk>\n       \\<Longrightarrow> snd cf \\<approx> snd (cont_eff cf i) \\<and>\n                         (\\<exists>df.\n                             fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n                             snd (cont_eff cf i) \\<approx> snd df \\<and>\n                             discrCf df)", "case (Hyp cf i)"], ["proof (state)\nthis:\n  i < brn (fst cf)\n  \\<exists>df.\n     fst cf \\<approx>01 fst df \\<and>\n     snd cf \\<approx> snd df \\<and> discrCf df\n\ngoal (1 subgoal):\n 1. \\<And>cf i.\n       \\<lbrakk>i < brn (fst cf);\n        \\<exists>df.\n           fst cf \\<approx>01 fst df \\<and>\n           snd cf \\<approx> snd df \\<and> discrCf df\\<rbrakk>\n       \\<Longrightarrow> snd cf \\<approx> snd (cont_eff cf i) \\<and>\n                         (\\<exists>df.\n                             fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n                             snd (cont_eff cf i) \\<approx> snd df \\<and>\n                             discrCf df)", "then"], ["proof (chain)\npicking this:\n  i < brn (fst cf)\n  \\<exists>df.\n     fst cf \\<approx>01 fst df \\<and>\n     snd cf \\<approx> snd df \\<and> discrCf df", "obtain df where i: \"i < brn (fst cf)\" and\n    df: \"discrCf df\" and cf_df: \"fst cf \\<approx>01 fst df\" \"snd cf \\<approx> snd df\""], ["proof (prove)\nusing this:\n  i < brn (fst cf)\n  \\<exists>df.\n     fst cf \\<approx>01 fst df \\<and>\n     snd cf \\<approx> snd df \\<and> discrCf df\n\ngoal (1 subgoal):\n 1. (\\<And>df.\n        \\<lbrakk>i < brn (fst cf); discrCf df; fst cf \\<approx>01 fst df;\n         snd cf \\<approx> snd df\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i < brn (fst cf)\n  discrCf df\n  fst cf \\<approx>01 fst df\n  snd cf \\<approx> snd df\n\ngoal (1 subgoal):\n 1. \\<And>cf i.\n       \\<lbrakk>i < brn (fst cf);\n        \\<exists>df.\n           fst cf \\<approx>01 fst df \\<and>\n           snd cf \\<approx> snd df \\<and> discrCf df\\<rbrakk>\n       \\<Longrightarrow> snd cf \\<approx> snd (cont_eff cf i) \\<and>\n                         (\\<exists>df.\n                             fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n                             snd (cont_eff cf i) \\<approx> snd df \\<and>\n                             discrCf df)", "then"], ["proof (chain)\npicking this:\n  i < brn (fst cf)\n  discrCf df\n  fst cf \\<approx>01 fst df\n  snd cf \\<approx> snd df", "obtain I0 P F where\n    match: \"mC_ZOC ZObis (fst cf) (fst df) (snd cf) (snd df) I0 P F\""], ["proof (prove)\nusing this:\n  i < brn (fst cf)\n  discrCf df\n  fst cf \\<approx>01 fst df\n  snd cf \\<approx> snd df\n\ngoal (1 subgoal):\n 1. (\\<And>I0 P F.\n        mC_ZOC ZObis (fst cf) (fst df) (snd cf) (snd df) I0 P\n         F \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using ZObis_mC_ZOC"], ["proof (prove)\nusing this:\n  i < brn (fst cf)\n  discrCf df\n  fst cf \\<approx>01 fst df\n  snd cf \\<approx> snd df\n  \\<lbrakk>?c \\<approx>01 ?d; ?s \\<approx> ?t\\<rbrakk>\n  \\<Longrightarrow> \\<exists>I0 P F. mC_ZOC ZObis ?c ?d ?s ?t I0 P F\n\ngoal (1 subgoal):\n 1. (\\<And>I0 P F.\n        mC_ZOC ZObis (fst cf) (fst df) (snd cf) (snd df) I0 P\n         F \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  mC_ZOC ZObis (fst cf) (fst df) (snd cf) (snd df) I0 P F\n\ngoal (1 subgoal):\n 1. \\<And>cf i.\n       \\<lbrakk>i < brn (fst cf);\n        \\<exists>df.\n           fst cf \\<approx>01 fst df \\<and>\n           snd cf \\<approx> snd df \\<and> discrCf df\\<rbrakk>\n       \\<Longrightarrow> snd cf \\<approx> snd (cont_eff cf i) \\<and>\n                         (\\<exists>df.\n                             fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n                             snd (cont_eff cf i) \\<approx> snd df \\<and>\n                             discrCf df)", "hence \"\\<Union>P = {..<brn (fst cf)}\""], ["proof (prove)\nusing this:\n  mC_ZOC ZObis (fst cf) (fst df) (snd cf) (snd df) I0 P F\n\ngoal (1 subgoal):\n 1. \\<Union> P = {..<brn (fst cf)}", "using i"], ["proof (prove)\nusing this:\n  mC_ZOC ZObis (fst cf) (fst df) (snd cf) (snd df) I0 P F\n  i < brn (fst cf)\n\ngoal (1 subgoal):\n 1. \\<Union> P = {..<brn (fst cf)}", "unfolding mC_ZOC_def mC_ZOC_part_def part_def"], ["proof (prove)\nusing this:\n  ({} \\<notin> P - {I0} \\<and>\n   {} \\<notin> F ` (P - {I0}) \\<and>\n   I0 \\<in> P \\<and>\n   (\\<Union> P = {..<brn (fst cf)} \\<and>\n    (\\<forall>J1 J2.\n        J1 \\<in> P \\<and> J2 \\<in> P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n        J1 \\<inter> J2 = {})) \\<and>\n   \\<Union> (F ` P) = {..<brn (fst df)} \\<and>\n   (\\<forall>J1 J2.\n       J1 \\<in> F ` P \\<and>\n       J2 \\<in> F ` P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n       J1 \\<inter> J2 = {})) \\<and>\n  inj_on F P \\<and>\n  mC_ZOC_wt (fst cf) (fst df) (snd cf) (snd df) I0 P F \\<and>\n  mC_ZOC_eff_cont0 ZObis (fst cf) (fst df) (snd cf) (snd df) I0 F \\<and>\n  mC_ZOC_eff_cont ZObis (fst cf) (fst df) (snd cf) (snd df) I0 P F\n  i < brn (fst cf)\n\ngoal (1 subgoal):\n 1. \\<Union> P = {..<brn (fst cf)}", "by simp"], ["proof (state)\nthis:\n  \\<Union> P = {..<brn (fst cf)}\n\ngoal (1 subgoal):\n 1. \\<And>cf i.\n       \\<lbrakk>i < brn (fst cf);\n        \\<exists>df.\n           fst cf \\<approx>01 fst df \\<and>\n           snd cf \\<approx> snd df \\<and> discrCf df\\<rbrakk>\n       \\<Longrightarrow> snd cf \\<approx> snd (cont_eff cf i) \\<and>\n                         (\\<exists>df.\n                             fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n                             snd (cont_eff cf i) \\<approx> snd df \\<and>\n                             discrCf df)", "then"], ["proof (chain)\npicking this:\n  \\<Union> P = {..<brn (fst cf)}", "obtain I where I: \"I \\<in> P\" and i: \"i \\<in> I\""], ["proof (prove)\nusing this:\n  \\<Union> P = {..<brn (fst cf)}\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>I \\<in> P; i \\<in> I\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using i"], ["proof (prove)\nusing this:\n  \\<Union> P = {..<brn (fst cf)}\n  i < brn (fst cf)\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>I \\<in> P; i \\<in> I\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  I \\<in> P\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>cf i.\n       \\<lbrakk>i < brn (fst cf);\n        \\<exists>df.\n           fst cf \\<approx>01 fst df \\<and>\n           snd cf \\<approx> snd df \\<and> discrCf df\\<rbrakk>\n       \\<Longrightarrow> snd cf \\<approx> snd (cont_eff cf i) \\<and>\n                         (\\<exists>df.\n                             fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n                             snd (cont_eff cf i) \\<approx> snd df \\<and>\n                             discrCf df)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)", "proof(cases \"I = I0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. I = I0 \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)\n 2. I \\<noteq> I0 \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)", "case False"], ["proof (state)\nthis:\n  I \\<noteq> I0\n\ngoal (2 subgoals):\n 1. I = I0 \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)\n 2. I \\<noteq> I0 \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)", "then"], ["proof (chain)\npicking this:\n  I \\<noteq> I0", "obtain j where j: \"j \\<in> F I\""], ["proof (prove)\nusing this:\n  I \\<noteq> I0\n\ngoal (1 subgoal):\n 1. (\\<And>j. j \\<in> F I \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using match I False"], ["proof (prove)\nusing this:\n  I \\<noteq> I0\n  mC_ZOC ZObis (fst cf) (fst df) (snd cf) (snd df) I0 P F\n  I \\<in> P\n  I \\<noteq> I0\n\ngoal (1 subgoal):\n 1. (\\<And>j. j \\<in> F I \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "unfolding m_defsAll"], ["proof (prove)\nusing this:\n  I \\<noteq> I0\n  ({} \\<notin> P - {I0} \\<and>\n   {} \\<notin> F ` (P - {I0}) \\<and>\n   I0 \\<in> P \\<and>\n   part {..<brn (fst cf)} P \\<and> part {..<brn (fst df)} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  (sum (wt (fst cf) (snd cf)) I0 < 1 \\<and>\n   sum (wt (fst df) (snd df)) (F I0) < 1 \\<longrightarrow>\n   (\\<forall>I\\<in>P - {I0}.\n       sum (wt (fst cf) (snd cf)) I / (1 - sum (wt (fst cf) (snd cf)) I0) =\n       sum (wt (fst df) (snd df)) (F I) /\n       (1 - sum (wt (fst df) (snd df)) (F I0)))) \\<and>\n  ((\\<forall>i\\<in>I0.\n       snd cf \\<approx> eff (fst cf) (snd cf) i \\<and>\n       local.cont (fst cf) (snd cf) i \\<approx>01 fst df) \\<and>\n   (\\<forall>j\\<in>F I0.\n       snd df \\<approx> eff (fst df) (snd df) j \\<and>\n       fst cf \\<approx>01 local.cont (fst df) (snd df) j)) \\<and>\n  (\\<forall>I i j.\n      I \\<in> P - {I0} \\<and> i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n      eff (fst cf) (snd cf) i \\<approx> eff (fst df) (snd df) j \\<and>\n      local.cont (fst cf) (snd cf) i \\<approx>01\n      local.cont (fst df) (snd df) j)\n  I \\<in> P\n  I \\<noteq> I0\n\ngoal (1 subgoal):\n 1. (\\<And>j. j \\<in> F I \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  j \\<in> F I\n\ngoal (2 subgoals):\n 1. I = I0 \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)\n 2. I \\<noteq> I0 \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)", "hence \"j < brn (fst df)\""], ["proof (prove)\nusing this:\n  j \\<in> F I\n\ngoal (1 subgoal):\n 1. j < brn (fst df)", "using I match"], ["proof (prove)\nusing this:\n  j \\<in> F I\n  I \\<in> P\n  mC_ZOC ZObis (fst cf) (fst df) (snd cf) (snd df) I0 P F\n\ngoal (1 subgoal):\n 1. j < brn (fst df)", "unfolding mC_ZOC_def mC_ZOC_part_def part_def"], ["proof (prove)\nusing this:\n  j \\<in> F I\n  I \\<in> P\n  ({} \\<notin> P - {I0} \\<and>\n   {} \\<notin> F ` (P - {I0}) \\<and>\n   I0 \\<in> P \\<and>\n   (\\<Union> P = {..<brn (fst cf)} \\<and>\n    (\\<forall>J1 J2.\n        J1 \\<in> P \\<and> J2 \\<in> P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n        J1 \\<inter> J2 = {})) \\<and>\n   \\<Union> (F ` P) = {..<brn (fst df)} \\<and>\n   (\\<forall>J1 J2.\n       J1 \\<in> F ` P \\<and>\n       J2 \\<in> F ` P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n       J1 \\<inter> J2 = {})) \\<and>\n  inj_on F P \\<and>\n  mC_ZOC_wt (fst cf) (fst df) (snd cf) (snd df) I0 P F \\<and>\n  mC_ZOC_eff_cont0 ZObis (fst cf) (fst df) (snd cf) (snd df) I0 F \\<and>\n  mC_ZOC_eff_cont ZObis (fst cf) (fst df) (snd cf) (snd df) I0 P F\n\ngoal (1 subgoal):\n 1. j < brn (fst df)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>j \\<in> F I; I \\<in> P;\n     ({} \\<in> P \\<longrightarrow> {} = I0) \\<and>\n     {} \\<notin> F ` (P - {I0}) \\<and>\n     I0 \\<in> P \\<and>\n     \\<Union> P = {..<brn (fst cf)} \\<and>\n     (\\<forall>J1 J2.\n         J1 \\<in> P \\<and>\n         J2 \\<in> P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n         J1 \\<inter> J2 = {}) \\<and>\n     \\<Union> (F ` P) = {..<brn (fst df)} \\<and>\n     (\\<forall>J1 J2.\n         J1 \\<in> F ` P \\<and>\n         J2 \\<in> F ` P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n         J1 \\<inter> J2 = {}) \\<and>\n     inj_on F P \\<and>\n     mC_ZOC_wt (fst cf) (fst df) (snd cf) (snd df) I0 P F \\<and>\n     mC_ZOC_eff_cont0 ZObis (fst cf) (fst df) (snd cf) (snd df) I0 F \\<and>\n     mC_ZOC_eff_cont ZObis (fst cf) (fst df) (snd cf) (snd df) I0 P\n      F\\<rbrakk>\n    \\<Longrightarrow> j < brn (fst df)", "by blast"], ["proof (state)\nthis:\n  j < brn (fst df)\n\ngoal (2 subgoals):\n 1. I = I0 \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)\n 2. I \\<noteq> I0 \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)", "hence md: \"discrCf (cont_eff df j)\" and s: \"snd df \\<approx> snd (cont_eff df j)\""], ["proof (prove)\nusing this:\n  j < brn (fst df)\n\ngoal (1 subgoal):\n 1. discrCf (cont_eff df j) &&& snd df \\<approx> snd (cont_eff df j)", "using df discrCf_cont[of df j] discrCf_eff_indis[of df j]"], ["proof (prove)\nusing this:\n  j < brn (fst df)\n  discrCf df\n  \\<lbrakk>discrCf df; j < brn (fst df)\\<rbrakk>\n  \\<Longrightarrow> discrCf (cont_eff df j)\n  \\<lbrakk>discrCf df; j < brn (fst df)\\<rbrakk>\n  \\<Longrightarrow> snd df \\<approx> snd (cont_eff df j)\n\ngoal (1 subgoal):\n 1. discrCf (cont_eff df j) &&& snd df \\<approx> snd (cont_eff df j)", "by auto"], ["proof (state)\nthis:\n  discrCf (cont_eff df j)\n  snd df \\<approx> snd (cont_eff df j)\n\ngoal (2 subgoals):\n 1. I = I0 \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)\n 2. I \\<noteq> I0 \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)", "have 0: \"snd (cont_eff cf i) \\<approx> snd (cont_eff df j)\" and\n      md2: \"fst (cont_eff cf i) \\<approx>01 fst (cont_eff df j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (cont_eff cf i) \\<approx> snd (cont_eff df j) &&&\n    fst (cont_eff cf i) \\<approx>01 fst (cont_eff df j)", "using I i j match False"], ["proof (prove)\nusing this:\n  I \\<in> P\n  i \\<in> I\n  j \\<in> F I\n  mC_ZOC ZObis (fst cf) (fst df) (snd cf) (snd df) I0 P F\n  I \\<noteq> I0\n\ngoal (1 subgoal):\n 1. snd (cont_eff cf i) \\<approx> snd (cont_eff df j) &&&\n    fst (cont_eff cf i) \\<approx>01 fst (cont_eff df j)", "unfolding mC_ZOC_def mC_ZOC_eff_cont_def"], ["proof (prove)\nusing this:\n  I \\<in> P\n  i \\<in> I\n  j \\<in> F I\n  mC_ZOC_part (fst cf) (fst df) (snd cf) (snd df) I0 P F \\<and>\n  inj_on F P \\<and>\n  mC_ZOC_wt (fst cf) (fst df) (snd cf) (snd df) I0 P F \\<and>\n  mC_ZOC_eff_cont0 ZObis (fst cf) (fst df) (snd cf) (snd df) I0 F \\<and>\n  (\\<forall>I i j.\n      I \\<in> P - {I0} \\<and> i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n      eff (fst cf) (snd cf) i \\<approx> eff (fst df) (snd df) j \\<and>\n      local.cont (fst cf) (snd cf) i \\<approx>01\n      local.cont (fst df) (snd df) j)\n  I \\<noteq> I0\n\ngoal (1 subgoal):\n 1. snd (cont_eff cf i) \\<approx> snd (cont_eff df j) &&&\n    fst (cont_eff cf i) \\<approx>01 fst (cont_eff df j)", "unfolding eff_def cont_def cont_eff_def"], ["proof (prove)\nusing this:\n  I \\<in> P\n  i \\<in> I\n  j \\<in> F I\n  mC_ZOC_part (fst cf) (fst df) (snd cf) (snd df) I0 P F \\<and>\n  inj_on F P \\<and>\n  mC_ZOC_wt (fst cf) (fst df) (snd cf) (snd df) I0 P F \\<and>\n  mC_ZOC_eff_cont0 ZObis (fst cf) (fst df) (snd cf) (snd df) I0 F \\<and>\n  (\\<forall>I i j.\n      I \\<in> P - {I0} \\<and> i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n      snd (snd (wt_cont_eff (fst cf) (snd cf) i)) \\<approx>\n      snd (snd (wt_cont_eff (fst df) (snd df) j)) \\<and>\n      fst (snd (wt_cont_eff (fst cf) (snd cf) i)) \\<approx>01\n      fst (snd (wt_cont_eff (fst df) (snd df) j)))\n  I \\<noteq> I0\n\ngoal (1 subgoal):\n 1. snd (snd (wt_cont_eff (fst cf) (snd cf) i)) \\<approx>\n    snd (snd (wt_cont_eff (fst df) (snd df) j)) &&&\n    fst (snd (wt_cont_eff (fst cf) (snd cf) i)) \\<approx>01\n    fst (snd (wt_cont_eff (fst df) (snd df) j))", "by auto"], ["proof (state)\nthis:\n  snd (cont_eff cf i) \\<approx> snd (cont_eff df j)\n  fst (cont_eff cf i) \\<approx>01 fst (cont_eff df j)\n\ngoal (2 subgoals):\n 1. I = I0 \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)\n 2. I \\<noteq> I0 \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)", "hence \"snd cf \\<approx> snd (cont_eff cf i)\""], ["proof (prove)\nusing this:\n  snd (cont_eff cf i) \\<approx> snd (cont_eff df j)\n  fst (cont_eff cf i) \\<approx>01 fst (cont_eff df j)\n\ngoal (1 subgoal):\n 1. snd cf \\<approx> snd (cont_eff cf i)", "using s indis_sym indis_trans cf_df"], ["proof (prove)\nusing this:\n  snd (cont_eff cf i) \\<approx> snd (cont_eff df j)\n  fst (cont_eff cf i) \\<approx>01 fst (cont_eff df j)\n  snd df \\<approx> snd (cont_eff df j)\n  ?s \\<approx> ?s' \\<Longrightarrow> ?s' \\<approx> ?s\n  \\<lbrakk>?s \\<approx> ?s'; ?s' \\<approx> ?s''\\<rbrakk>\n  \\<Longrightarrow> ?s \\<approx> ?s''\n  fst cf \\<approx>01 fst df\n  snd cf \\<approx> snd df\n\ngoal (1 subgoal):\n 1. snd cf \\<approx> snd (cont_eff cf i)", "by blast"], ["proof (state)\nthis:\n  snd cf \\<approx> snd (cont_eff cf i)\n\ngoal (2 subgoals):\n 1. I = I0 \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)\n 2. I \\<noteq> I0 \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)", "thus ?thesis"], ["proof (prove)\nusing this:\n  snd cf \\<approx> snd (cont_eff cf i)\n\ngoal (1 subgoal):\n 1. snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)", "using md md2 0"], ["proof (prove)\nusing this:\n  snd cf \\<approx> snd (cont_eff cf i)\n  discrCf (cont_eff df j)\n  fst (cont_eff cf i) \\<approx>01 fst (cont_eff df j)\n  snd (cont_eff cf i) \\<approx> snd (cont_eff df j)\n\ngoal (1 subgoal):\n 1. snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)", "by blast"], ["proof (state)\nthis:\n  snd cf \\<approx> snd (cont_eff cf i) \\<and>\n  (\\<exists>df.\n      fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n      snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)\n\ngoal (1 subgoal):\n 1. I = I0 \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. I = I0 \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)", "case True"], ["proof (state)\nthis:\n  I = I0\n\ngoal (1 subgoal):\n 1. I = I0 \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)", "hence \"snd cf \\<approx> snd (cont_eff cf i) \\<and> fst (cont_eff cf i) \\<approx>01 fst df\""], ["proof (prove)\nusing this:\n  I = I0\n\ngoal (1 subgoal):\n 1. snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    fst (cont_eff cf i) \\<approx>01 fst df", "using match i ZObis_sym"], ["proof (prove)\nusing this:\n  I = I0\n  mC_ZOC ZObis (fst cf) (fst df) (snd cf) (snd df) I0 P F\n  i \\<in> I\n  ?c \\<approx>01 ?d \\<Longrightarrow> ?d \\<approx>01 ?c\n\ngoal (1 subgoal):\n 1. snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    fst (cont_eff cf i) \\<approx>01 fst df", "unfolding mC_ZOC_def mC_ZOC_eff_cont0_def"], ["proof (prove)\nusing this:\n  I = I0\n  mC_ZOC_part (fst cf) (fst df) (snd cf) (snd df) I0 P F \\<and>\n  inj_on F P \\<and>\n  mC_ZOC_wt (fst cf) (fst df) (snd cf) (snd df) I0 P F \\<and>\n  ((\\<forall>i\\<in>I0.\n       snd cf \\<approx> eff (fst cf) (snd cf) i \\<and>\n       local.cont (fst cf) (snd cf) i \\<approx>01 fst df) \\<and>\n   (\\<forall>j\\<in>F I0.\n       snd df \\<approx> eff (fst df) (snd df) j \\<and>\n       fst cf \\<approx>01 local.cont (fst df) (snd df) j)) \\<and>\n  mC_ZOC_eff_cont ZObis (fst cf) (fst df) (snd cf) (snd df) I0 P F\n  i \\<in> I\n  ?c \\<approx>01 ?d \\<Longrightarrow> ?d \\<approx>01 ?c\n\ngoal (1 subgoal):\n 1. snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    fst (cont_eff cf i) \\<approx>01 fst df", "unfolding cont_eff_def cont_def eff_def"], ["proof (prove)\nusing this:\n  I = I0\n  mC_ZOC_part (fst cf) (fst df) (snd cf) (snd df) I0 P F \\<and>\n  inj_on F P \\<and>\n  mC_ZOC_wt (fst cf) (fst df) (snd cf) (snd df) I0 P F \\<and>\n  ((\\<forall>i\\<in>I0.\n       snd cf \\<approx> snd (snd (wt_cont_eff (fst cf) (snd cf) i)) \\<and>\n       fst (snd (wt_cont_eff (fst cf) (snd cf) i)) \\<approx>01\n       fst df) \\<and>\n   (\\<forall>j\\<in>F I0.\n       snd df \\<approx> snd (snd (wt_cont_eff (fst df) (snd df) j)) \\<and>\n       fst cf \\<approx>01\n       fst (snd (wt_cont_eff (fst df) (snd df) j)))) \\<and>\n  mC_ZOC_eff_cont ZObis (fst cf) (fst df) (snd cf) (snd df) I0 P F\n  i \\<in> I\n  ?c \\<approx>01 ?d \\<Longrightarrow> ?d \\<approx>01 ?c\n\ngoal (1 subgoal):\n 1. snd cf \\<approx> snd (snd (wt_cont_eff (fst cf) (snd cf) i)) \\<and>\n    fst (snd (wt_cont_eff (fst cf) (snd cf) i)) \\<approx>01 fst df", "by blast"], ["proof (state)\nthis:\n  snd cf \\<approx> snd (cont_eff cf i) \\<and>\n  fst (cont_eff cf i) \\<approx>01 fst df\n\ngoal (1 subgoal):\n 1. I = I0 \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)", "moreover"], ["proof (state)\nthis:\n  snd cf \\<approx> snd (cont_eff cf i) \\<and>\n  fst (cont_eff cf i) \\<approx>01 fst df\n\ngoal (1 subgoal):\n 1. I = I0 \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)", "have \"snd (cont_eff cf i) \\<approx> snd df\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (cont_eff cf i) \\<approx> snd df", "using match i indis_sym indis_trans cf_df"], ["proof (prove)\nusing this:\n  mC_ZOC ZObis (fst cf) (fst df) (snd cf) (snd df) I0 P F\n  i \\<in> I\n  ?s \\<approx> ?s' \\<Longrightarrow> ?s' \\<approx> ?s\n  \\<lbrakk>?s \\<approx> ?s'; ?s' \\<approx> ?s''\\<rbrakk>\n  \\<Longrightarrow> ?s \\<approx> ?s''\n  fst cf \\<approx>01 fst df\n  snd cf \\<approx> snd df\n\ngoal (1 subgoal):\n 1. snd (cont_eff cf i) \\<approx> snd df", "unfolding mC_ZOC_def mC_ZOC_eff_cont0_def"], ["proof (prove)\nusing this:\n  mC_ZOC_part (fst cf) (fst df) (snd cf) (snd df) I0 P F \\<and>\n  inj_on F P \\<and>\n  mC_ZOC_wt (fst cf) (fst df) (snd cf) (snd df) I0 P F \\<and>\n  ((\\<forall>i\\<in>I0.\n       snd cf \\<approx> eff (fst cf) (snd cf) i \\<and>\n       local.cont (fst cf) (snd cf) i \\<approx>01 fst df) \\<and>\n   (\\<forall>j\\<in>F I0.\n       snd df \\<approx> eff (fst df) (snd df) j \\<and>\n       fst cf \\<approx>01 local.cont (fst df) (snd df) j)) \\<and>\n  mC_ZOC_eff_cont ZObis (fst cf) (fst df) (snd cf) (snd df) I0 P F\n  i \\<in> I\n  ?s \\<approx> ?s' \\<Longrightarrow> ?s' \\<approx> ?s\n  \\<lbrakk>?s \\<approx> ?s'; ?s' \\<approx> ?s''\\<rbrakk>\n  \\<Longrightarrow> ?s \\<approx> ?s''\n  fst cf \\<approx>01 fst df\n  snd cf \\<approx> snd df\n\ngoal (1 subgoal):\n 1. snd (cont_eff cf i) \\<approx> snd df", "unfolding cont_eff_def cont_def eff_def True"], ["proof (prove)\nusing this:\n  mC_ZOC_part (fst cf) (fst df) (snd cf) (snd df) I0 P F \\<and>\n  inj_on F P \\<and>\n  mC_ZOC_wt (fst cf) (fst df) (snd cf) (snd df) I0 P F \\<and>\n  ((\\<forall>i\\<in>I0.\n       snd cf \\<approx> snd (snd (wt_cont_eff (fst cf) (snd cf) i)) \\<and>\n       fst (snd (wt_cont_eff (fst cf) (snd cf) i)) \\<approx>01\n       fst df) \\<and>\n   (\\<forall>j\\<in>F I0.\n       snd df \\<approx> snd (snd (wt_cont_eff (fst df) (snd df) j)) \\<and>\n       fst cf \\<approx>01\n       fst (snd (wt_cont_eff (fst df) (snd df) j)))) \\<and>\n  mC_ZOC_eff_cont ZObis (fst cf) (fst df) (snd cf) (snd df) I0 P F\n  i \\<in> I0\n  ?s \\<approx> ?s' \\<Longrightarrow> ?s' \\<approx> ?s\n  \\<lbrakk>?s \\<approx> ?s'; ?s' \\<approx> ?s''\\<rbrakk>\n  \\<Longrightarrow> ?s \\<approx> ?s''\n  fst cf \\<approx>01 fst df\n  snd cf \\<approx> snd df\n\ngoal (1 subgoal):\n 1. snd (snd (wt_cont_eff (fst cf) (snd cf) i)) \\<approx> snd df", "by blast"], ["proof (state)\nthis:\n  snd (cont_eff cf i) \\<approx> snd df\n\ngoal (1 subgoal):\n 1. I = I0 \\<Longrightarrow>\n    snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)", "ultimately"], ["proof (chain)\npicking this:\n  snd cf \\<approx> snd (cont_eff cf i) \\<and>\n  fst (cont_eff cf i) \\<approx>01 fst df\n  snd (cont_eff cf i) \\<approx> snd df", "show ?thesis"], ["proof (prove)\nusing this:\n  snd cf \\<approx> snd (cont_eff cf i) \\<and>\n  fst (cont_eff cf i) \\<approx>01 fst df\n  snd (cont_eff cf i) \\<approx> snd df\n\ngoal (1 subgoal):\n 1. snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)", "using df cf_df"], ["proof (prove)\nusing this:\n  snd cf \\<approx> snd (cont_eff cf i) \\<and>\n  fst (cont_eff cf i) \\<approx>01 fst df\n  snd (cont_eff cf i) \\<approx> snd df\n  discrCf df\n  fst cf \\<approx>01 fst df\n  snd cf \\<approx> snd df\n\ngoal (1 subgoal):\n 1. snd cf \\<approx> snd (cont_eff cf i) \\<and>\n    (\\<exists>df.\n        fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n        snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)", "by blast"], ["proof (state)\nthis:\n  snd cf \\<approx> snd (cont_eff cf i) \\<and>\n  (\\<exists>df.\n      fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n      snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  snd cf \\<approx> snd (cont_eff cf i) \\<and>\n  (\\<exists>df.\n      fst (cont_eff cf i) \\<approx>01 fst df \\<and>\n      snd (cont_eff cf i) \\<approx> snd df \\<and> discrCf df)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  discrCf cf\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary ZObis_pres_discrCfR:\nassumes \"discrCf cf\" and \"fst cf \\<approx>01 fst df\" and \"snd cf \\<approx> snd df\"\nshows \"discrCf df\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discrCf df", "using assms ZObis_pres_discrCfL ZObis_sym indis_sym"], ["proof (prove)\nusing this:\n  discrCf cf\n  fst cf \\<approx>01 fst df\n  snd cf \\<approx> snd df\n  \\<lbrakk>fst ?cf \\<approx>01 fst ?df; snd ?cf \\<approx> snd ?df;\n   discrCf ?df\\<rbrakk>\n  \\<Longrightarrow> discrCf ?cf\n  ?c \\<approx>01 ?d \\<Longrightarrow> ?d \\<approx>01 ?c\n  ?s \\<approx> ?s' \\<Longrightarrow> ?s' \\<approx> ?s\n\ngoal (1 subgoal):\n 1. discrCf df", "by blast"], ["", "end"], ["", "(* context PL_Indis *)\n(*******************************************)"], ["", "end"]]}