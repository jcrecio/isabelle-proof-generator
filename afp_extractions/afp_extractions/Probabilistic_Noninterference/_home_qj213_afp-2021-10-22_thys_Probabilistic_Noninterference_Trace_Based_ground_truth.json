{"file_name": "/home/qj213/afp-2021-10-22/thys/Probabilistic_Noninterference/Trace_Based.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Probabilistic_Noninterference", "problem_names": ["lemma dist_sum:\n  fixes f :: \"'a \\<Rightarrow> real\" and g :: \"'a \\<Rightarrow> real\"\n  assumes \"\\<And>i. i \\<in> I \\<Longrightarrow> dist (f i) (g i) \\<le> e i\"\n  shows \"dist (\\<Sum>i\\<in>I. f i) (\\<Sum>i\\<in>I. g i) \\<le> (\\<Sum>i\\<in>I. e i)\"", "lemma dist_mult[simp]: \"dist (x * y) (x * z) = \\<bar>x\\<bar> * dist y z\"", "lemma dist_divide[simp]: \"dist (y / r) (z / r) = dist y z / \\<bar>r\\<bar>\"", "lemma dist_weighted_sum:\n  fixes f :: \"'a \\<Rightarrow> real\" and g :: \"'b \\<Rightarrow> real\"\n  assumes eps: \"\\<And>i j. i \\<in> I \\<Longrightarrow> j \\<in> J \\<Longrightarrow> w i \\<noteq> 0 \\<Longrightarrow> v j \\<noteq> 0 \\<Longrightarrow> dist (f i) (g j) \\<le> d i + e j\"\n    and pos: \"\\<And>i. i\\<in>I \\<Longrightarrow> 0 \\<le> w i\" \"\\<And>j. j\\<in>J \\<Longrightarrow> 0 \\<le> v j\"\n    and sum: \"(\\<Sum>i\\<in>I. w i) = 1\" \"(\\<Sum>j\\<in>J. v j) = 1\"\n  shows \"dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j) \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)\"", "lemma field_abs_le_zero_epsilon:\n  fixes x :: \"'a::{linordered_field}\"\n  assumes epsilon: \"\\<And>e. 0 < e \\<Longrightarrow> \\<bar>x\\<bar> \\<le> e\"\n  shows \"\\<bar>x\\<bar> = 0\"", "lemma nat_nat_induct[case_names less]:\n  fixes P :: \"nat \\<Rightarrow> nat \\<Rightarrow> bool\"\n  assumes less: \"\\<And>n m. (\\<And>j k. j + k < n + m \\<Longrightarrow> P j k) \\<Longrightarrow> P n m\"\n  shows \"P n m\"", "lemma part_insert:\n  assumes \"part A P\" assumes \"X \\<inter> A = {}\"\n  shows \"part (A \\<union> X) (insert X P)\"", "lemma part_insert_subset:\n  assumes X: \"part (A - X) P\" \"X \\<subseteq> A\"\n  shows \"part A (insert X P)\"", "lemma part_is_subset:\n  \"part S P \\<Longrightarrow> p \\<in> P \\<Longrightarrow> p \\<subseteq> S\"", "lemma dist_nonneg_bounded:\n  fixes l u x y :: real\n  assumes \"l \\<le> x\" \"x \\<le> u\" \"l \\<le> y\" \"y \\<le> u\"\n  shows \"dist x y \\<le> u - l\"", "lemma integrable_count_space_finite_support:\n  fixes f :: \"'a \\<Rightarrow> 'b::{banach,second_countable_topology}\"\n  shows \"finite {x\\<in>X. f x \\<noteq> 0} \\<Longrightarrow> integrable (count_space X) f\"", "lemma lebesgue_integral_point_measure:\n  fixes g :: \"_ \\<Rightarrow> real\"\n  assumes f: \"finite {a\\<in>A. 0 < f a \\<and> g a \\<noteq> 0}\"\n  shows \"integral\\<^sup>L (point_measure A f) g = (\\<Sum>a|a\\<in>A \\<and> 0 < f a \\<and> g a \\<noteq> 0. f a * g a)\"", "lemma (in finite_measure) finite_measure_dist:\n  assumes AE: \"AE x in M. x \\<notin> C \\<longrightarrow> (x \\<in> A \\<longleftrightarrow> x \\<in> B)\"\n  assumes sets: \"A \\<in> sets M\" \"B \\<in> sets M\" \"C \\<in> sets M\"\n  shows \"dist (measure M A) (measure M B) \\<le> measure M C\"", "lemma (in prob_space) prob_dist:\n  assumes AE: \"AE x in M. \\<not> C x \\<longrightarrow> (A x \\<longleftrightarrow> B x)\"\n  assumes sets: \"Measurable.pred M A\" \"Measurable.pred M B\" \"Measurable.pred M C\"\n  shows \"dist \\<P>(x in M. A x) \\<P>(x in M. B x) \\<le> \\<P>(x in M. C x)\"", "lemma Least_eq_0_iff: \"(\\<exists>i::nat. P i) \\<Longrightarrow> (LEAST i. P i) = 0 \\<longleftrightarrow> P 0\"", "lemma case_nat_comp_Suc[simp]: \"case_nat x f \\<circ> Suc = f\"", "lemma sum_eq_0_iff:\n  fixes f :: \"_ \\<Rightarrow> 'a :: {comm_monoid_add,ordered_ab_group_add}\"\n  shows \"finite A \\<Longrightarrow> (\\<And>i. i \\<in> A \\<Longrightarrow> 0 \\<le> f i) \\<Longrightarrow> (\\<Sum>i\\<in>A. f i) = 0 \\<longleftrightarrow> (\\<forall>i\\<in>A. f i = 0)\"", "lemma sum_less_0_iff:\n  fixes f :: \"_ \\<Rightarrow> 'a :: {comm_monoid_add,ordered_ab_group_add}\"\n  shows \"finite A \\<Longrightarrow> (\\<And>i. i \\<in> A \\<Longrightarrow> 0 \\<le> f i) \\<Longrightarrow> 0 < (\\<Sum>i\\<in>A. f i) \\<longleftrightarrow> (\\<exists>i\\<in>A. 0 < f i)\"", "lemma set_pmf_map: \"set_pmf (map_pmf f M) = f ` set_pmf M\"", "lemma set_pmf_wt:\n  \"set_pmf (wt_pmf cf) = (if proper (fst cf) then {i. i < brn (fst cf) \\<and> 0 < wt (fst cf) (snd cf) i} else {0})\"", "lemma G_eq:\n  \"G cf = (if proper (fst cf) then {cont_eff cf i | i. i < brn (fst cf) \\<and> 0 < wt (fst cf) (snd cf) i } else {cf})\"", "lemma discrCf_G: \"discrCf cf \\<Longrightarrow> cf' \\<in> G cf \\<Longrightarrow> discrCf cf'\"", "lemma measurable_discrCf[measurable]: \"Measurable.pred (count_space UNIV) discrCf\"", "lemma measurable_indis[measurable]: \"Measurable.pred (count_space UNIV) (\\<lambda>x. snd x \\<approx> c)\"", "lemma integral_trans:\n  \"proper (fst cf) \\<Longrightarrow>\n    (\\<integral>x. f x \\<partial>trans cf) = (\\<Sum>i<brn (fst cf). wt (fst cf) (snd cf) i * f (cont_eff cf i))\"", "lemma qsend_eq_0_iff: \"qsend cfT = 0 \\<longleftrightarrow> discrCf (shd cfT)\"", "lemma qsend_eq_0[simp]: \"discrCf cf \\<Longrightarrow> qsend (cf ## \\<omega>) = 0\"", "lemma alw_discrCf: \"enabled cf \\<omega> \\<Longrightarrow> discrCf cf \\<Longrightarrow> alw (holds discrCf) \\<omega>\"", "lemma alw_discrCf_indis':\n  \"enabled cf \\<omega> \\<Longrightarrow> discrCf cf \\<Longrightarrow> snd cf \\<approx> t \\<Longrightarrow> alw (holds (\\<lambda>cf'. snd cf' \\<approx> t)) \\<omega>\"", "lemma alw_discrCf_indis:\n  \"enabled cf \\<omega> \\<Longrightarrow> discrCf cf \\<Longrightarrow> alw (holds (\\<lambda>cf'. snd cf' \\<approx> snd cf)) (cf ## \\<omega>)\"", "lemma enabled_sdrop: \"enabled cf \\<omega> \\<Longrightarrow> enabled ((cf ## \\<omega>) !! n) (sdrop n \\<omega>)\"", "lemma sfirst_eq_eSuc: \"sfirst P \\<omega> = eSuc n \\<longleftrightarrow> (\\<not> P \\<omega>) \\<and> sfirst P (stl \\<omega>) = n\"", "lemma qsend_snth: \"qsend \\<omega> = enat n \\<Longrightarrow> discrCf (\\<omega> !! n)\"", "lemma indis_iff: \"a \\<approx> d \\<Longrightarrow> b \\<approx> d \\<Longrightarrow> a \\<approx> c \\<longleftrightarrow> b \\<approx> c\"", "lemma enabled_qsend_indis:\n  assumes \"enabled cf \\<omega>\" \"qsend (cf ## \\<omega>) \\<le> n\" \"qsend (cf ## \\<omega>) \\<le> m\"\n  shows \"snd ((cf ## \\<omega>) !! n) \\<approx> t \\<longleftrightarrow> snd ((cf ## \\<omega>) !! m) \\<approx> t\"", "lemma enabled_imp_UNTIL_alw_discrCf:\n  \"enabled (shd \\<omega>) (stl \\<omega>) \\<Longrightarrow> (not (holds discrCf) until (alw (holds discrCf))) \\<omega>\"", "lemma less_qsend_iff_not_discrCf:\n  \"enabled cf bT \\<Longrightarrow> n < qsend (cf ## bT) \\<longleftrightarrow> \\<not> discrCf ((cf ## bT) !! n)\"", "lemma qstermCf_E:\n  \"qstermCf cf \\<Longrightarrow> cf' \\<in> G cf \\<Longrightarrow> qstermCf cf'\"", "lemma dist_Ps_upper_bound:\n  fixes cf1 cf2 :: \"('test, 'atom, 'choice) cmd \\<times> 'state\" and s :: \"'state\" and S\n  defines \"S cf bT \\<equiv> \\<exists>n. qsend (cf ## bT) = n \\<and> eff_at cf bT n \\<approx> s\"\n  defines \"Ps cf \\<equiv> \\<P>(bT in T.T cf. S cf bT)\"\n  defines \"N cf n bT \\<equiv> \\<not> discrCf ((cf ## bT) !! n)\"\n  defines \"Pn cf n \\<equiv> \\<P>(bT in T.T cf. N cf n bT)\"\n  assumes bisim: \"proper (fst cf1)\" \"proper (fst cf2)\" \"fst cf1 \\<approx>01 fst cf2\" \"snd cf1 \\<approx> snd cf2\"\n  shows \"dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\"", "lemma AE_T_max_qsend_time:\n  fixes cf and e :: real assumes AE: \"AE bT in T.T cf. qsend (cf ## bT) < \\<infinity>\" \"0 < e\"\n  shows \"\\<exists>N. \\<P>(bT in T.T cf. \\<not> discrCf ((cf ## bT) !! N)) < e\"", "lemma Ps_eq:\n  fixes cf1 cf2 s and S\n  defines \"S cf bT \\<equiv> \\<exists>n. qsend (cf ## bT) = n \\<and> eff_at cf bT n \\<approx> s\"\n  defines \"Ps cf \\<equiv> \\<P>(bT in T.T cf. S cf bT)\"\n  assumes qsterm1: \"AE bT in T.T cf1. qsend (cf1 ## bT) < \\<infinity>\"\n  assumes qsterm2: \"AE bT in T.T cf2. qsend (cf2 ## bT) < \\<infinity>\"\n  and bisim: \"proper (fst cf1)\" \"proper (fst cf2)\" \"fst cf1 \\<approx>01 fst cf2\" \"snd cf1 \\<approx> snd cf2\"\n  shows \"Ps cf1 = Ps cf2\"", "lemma siso_trace:\n  assumes \"siso c\" \"s \\<approx> t\" \"enabled (c, t) cfT\"\n  shows \"siso (cont_at (c, s) cfT n)\"\n    and \"cont_at (c, s) cfT n = cont_at (c, t) cfT n\"\n    and \"eff_at (c, s) cfT n \\<approx> eff_at (c, t) cfT n\"", "lemma Sbis_trace:\n  assumes \"proper (fst cf1)\" \"proper (fst cf2)\" \"fst cf1 \\<approx>s fst cf2\" \"snd cf1 \\<approx> snd cf2\"\n  shows \"\\<P>(cfT in T.T cf1. eff_at cf1 cfT n \\<approx> s') = \\<P>(cfT in T.T cf2. eff_at cf2 cfT n \\<approx> s')\"\n    (is \"?P cf1 n = ?P cf2 n\")", "theorem ZObis_eSec: \"\\<lbrakk>proper c; c \\<approx>01 c; aeT c\\<rbrakk> \\<Longrightarrow> eSec c\"", "theorem Sbis_amSec: \"\\<lbrakk>proper c; c \\<approx>s c\\<rbrakk> \\<Longrightarrow> amSec c\"", "theorem amSec_eSec:\n  assumes [simp]: \"proper c\" and \"aeT c\" \"amSec c\" shows \"eSec c\""], "translations": [["", "lemma dist_sum:\n  fixes f :: \"'a \\<Rightarrow> real\" and g :: \"'a \\<Rightarrow> real\"\n  assumes \"\\<And>i. i \\<in> I \\<Longrightarrow> dist (f i) (g i) \\<le> e i\"\n  shows \"dist (\\<Sum>i\\<in>I. f i) (\\<Sum>i\\<in>I. g i) \\<le> (\\<Sum>i\\<in>I. e i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (sum f I) (sum g I) \\<le> sum e I", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> dist (sum f I) (sum g I) \\<le> sum e I\n 2. \\<not> ?P \\<Longrightarrow> dist (sum f I) (sum g I) \\<le> sum e I", "assume \"finite I\""], ["proof (state)\nthis:\n  finite I\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> dist (sum f I) (sum g I) \\<le> sum e I\n 2. \\<not> ?P \\<Longrightarrow> dist (sum f I) (sum g I) \\<le> sum e I", "from this assms"], ["proof (chain)\npicking this:\n  finite I\n  ?i \\<in> I \\<Longrightarrow> dist (f ?i) (g ?i) \\<le> e ?i", "show ?thesis"], ["proof (prove)\nusing this:\n  finite I\n  ?i \\<in> I \\<Longrightarrow> dist (f ?i) (g ?i) \\<le> e ?i\n\ngoal (1 subgoal):\n 1. dist (sum f I) (sum g I) \\<le> sum e I", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>i.\n        i \\<in> {} \\<Longrightarrow>\n        dist (f i) (g i) \\<le> e i) \\<Longrightarrow>\n    dist (sum f {}) (sum g {}) \\<le> sum e {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>i.\n            i \\<in> F \\<Longrightarrow>\n            dist (f i) (g i) \\<le> e i) \\<Longrightarrow>\n        dist (sum f F) (sum g F) \\<le> sum e F;\n        \\<And>i.\n           i \\<in> insert x F \\<Longrightarrow>\n           dist (f i) (g i) \\<le> e i\\<rbrakk>\n       \\<Longrightarrow> dist (sum f (insert x F)) (sum g (insert x F))\n                         \\<le> sum e (insert x F)", "case (insert i I)"], ["proof (state)\nthis:\n  finite I\n  i \\<notin> I\n  (\\<And>i.\n      i \\<in> I \\<Longrightarrow>\n      dist (f i) (g i) \\<le> e i) \\<Longrightarrow>\n  dist (sum f I) (sum g I) \\<le> sum e I\n  ?i \\<in> insert i I \\<Longrightarrow> dist (f ?i) (g ?i) \\<le> e ?i\n\ngoal (2 subgoals):\n 1. (\\<And>i.\n        i \\<in> {} \\<Longrightarrow>\n        dist (f i) (g i) \\<le> e i) \\<Longrightarrow>\n    dist (sum f {}) (sum g {}) \\<le> sum e {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>i.\n            i \\<in> F \\<Longrightarrow>\n            dist (f i) (g i) \\<le> e i) \\<Longrightarrow>\n        dist (sum f F) (sum g F) \\<le> sum e F;\n        \\<And>i.\n           i \\<in> insert x F \\<Longrightarrow>\n           dist (f i) (g i) \\<le> e i\\<rbrakk>\n       \\<Longrightarrow> dist (sum f (insert x F)) (sum g (insert x F))\n                         \\<le> sum e (insert x F)", "then"], ["proof (chain)\npicking this:\n  finite I\n  i \\<notin> I\n  (\\<And>i.\n      i \\<in> I \\<Longrightarrow>\n      dist (f i) (g i) \\<le> e i) \\<Longrightarrow>\n  dist (sum f I) (sum g I) \\<le> sum e I\n  ?i \\<in> insert i I \\<Longrightarrow> dist (f ?i) (g ?i) \\<le> e ?i", "have \"dist (\\<Sum>i\\<in>insert i I. f i) (\\<Sum>i\\<in>insert i I. g i) \\<le> dist (f i) (g i) + dist (\\<Sum>i\\<in>I. f i) (\\<Sum>i\\<in>I. g i)\""], ["proof (prove)\nusing this:\n  finite I\n  i \\<notin> I\n  (\\<And>i.\n      i \\<in> I \\<Longrightarrow>\n      dist (f i) (g i) \\<le> e i) \\<Longrightarrow>\n  dist (sum f I) (sum g I) \\<le> sum e I\n  ?i \\<in> insert i I \\<Longrightarrow> dist (f ?i) (g ?i) \\<le> e ?i\n\ngoal (1 subgoal):\n 1. dist (sum f (insert i I)) (sum g (insert i I))\n    \\<le> dist (f i) (g i) + dist (sum f I) (sum g I)", "by (simp add: dist_triangle_add)"], ["proof (state)\nthis:\n  dist (sum f (insert i I)) (sum g (insert i I))\n  \\<le> dist (f i) (g i) + dist (sum f I) (sum g I)\n\ngoal (2 subgoals):\n 1. (\\<And>i.\n        i \\<in> {} \\<Longrightarrow>\n        dist (f i) (g i) \\<le> e i) \\<Longrightarrow>\n    dist (sum f {}) (sum g {}) \\<le> sum e {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>i.\n            i \\<in> F \\<Longrightarrow>\n            dist (f i) (g i) \\<le> e i) \\<Longrightarrow>\n        dist (sum f F) (sum g F) \\<le> sum e F;\n        \\<And>i.\n           i \\<in> insert x F \\<Longrightarrow>\n           dist (f i) (g i) \\<le> e i\\<rbrakk>\n       \\<Longrightarrow> dist (sum f (insert x F)) (sum g (insert x F))\n                         \\<le> sum e (insert x F)", "also"], ["proof (state)\nthis:\n  dist (sum f (insert i I)) (sum g (insert i I))\n  \\<le> dist (f i) (g i) + dist (sum f I) (sum g I)\n\ngoal (2 subgoals):\n 1. (\\<And>i.\n        i \\<in> {} \\<Longrightarrow>\n        dist (f i) (g i) \\<le> e i) \\<Longrightarrow>\n    dist (sum f {}) (sum g {}) \\<le> sum e {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>i.\n            i \\<in> F \\<Longrightarrow>\n            dist (f i) (g i) \\<le> e i) \\<Longrightarrow>\n        dist (sum f F) (sum g F) \\<le> sum e F;\n        \\<And>i.\n           i \\<in> insert x F \\<Longrightarrow>\n           dist (f i) (g i) \\<le> e i\\<rbrakk>\n       \\<Longrightarrow> dist (sum f (insert x F)) (sum g (insert x F))\n                         \\<le> sum e (insert x F)", "have \"\\<dots> \\<le> e i + (\\<Sum>i\\<in>I. e i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f i) (g i) + dist (sum f I) (sum g I) \\<le> e i + sum e I", "using insert"], ["proof (prove)\nusing this:\n  finite I\n  i \\<notin> I\n  (\\<And>i.\n      i \\<in> I \\<Longrightarrow>\n      dist (f i) (g i) \\<le> e i) \\<Longrightarrow>\n  dist (sum f I) (sum g I) \\<le> sum e I\n  ?i \\<in> insert i I \\<Longrightarrow> dist (f ?i) (g ?i) \\<le> e ?i\n\ngoal (1 subgoal):\n 1. dist (f i) (g i) + dist (sum f I) (sum g I) \\<le> e i + sum e I", "by (intro add_mono) auto"], ["proof (state)\nthis:\n  dist (f i) (g i) + dist (sum f I) (sum g I) \\<le> e i + sum e I\n\ngoal (2 subgoals):\n 1. (\\<And>i.\n        i \\<in> {} \\<Longrightarrow>\n        dist (f i) (g i) \\<le> e i) \\<Longrightarrow>\n    dist (sum f {}) (sum g {}) \\<le> sum e {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>i.\n            i \\<in> F \\<Longrightarrow>\n            dist (f i) (g i) \\<le> e i) \\<Longrightarrow>\n        dist (sum f F) (sum g F) \\<le> sum e F;\n        \\<And>i.\n           i \\<in> insert x F \\<Longrightarrow>\n           dist (f i) (g i) \\<le> e i\\<rbrakk>\n       \\<Longrightarrow> dist (sum f (insert x F)) (sum g (insert x F))\n                         \\<le> sum e (insert x F)", "finally"], ["proof (chain)\npicking this:\n  dist (sum f (insert i I)) (sum g (insert i I)) \\<le> e i + sum e I", "show ?case"], ["proof (prove)\nusing this:\n  dist (sum f (insert i I)) (sum g (insert i I)) \\<le> e i + sum e I\n\ngoal (1 subgoal):\n 1. dist (sum f (insert i I)) (sum g (insert i I)) \\<le> sum e (insert i I)", "using insert"], ["proof (prove)\nusing this:\n  dist (sum f (insert i I)) (sum g (insert i I)) \\<le> e i + sum e I\n  finite I\n  i \\<notin> I\n  (\\<And>i.\n      i \\<in> I \\<Longrightarrow>\n      dist (f i) (g i) \\<le> e i) \\<Longrightarrow>\n  dist (sum f I) (sum g I) \\<le> sum e I\n  ?i \\<in> insert i I \\<Longrightarrow> dist (f ?i) (g ?i) \\<le> e ?i\n\ngoal (1 subgoal):\n 1. dist (sum f (insert i I)) (sum g (insert i I)) \\<le> sum e (insert i I)", "by simp"], ["proof (state)\nthis:\n  dist (sum f (insert i I)) (sum g (insert i I)) \\<le> sum e (insert i I)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        i \\<in> {} \\<Longrightarrow>\n        dist (f i) (g i) \\<le> e i) \\<Longrightarrow>\n    dist (sum f {}) (sum g {}) \\<le> sum e {}", "qed simp"], ["proof (state)\nthis:\n  dist (sum f I) (sum g I) \\<le> sum e I\n\ngoal (1 subgoal):\n 1. infinite I \\<Longrightarrow> dist (sum f I) (sum g I) \\<le> sum e I", "qed simp"], ["", "lemma dist_mult[simp]: \"dist (x * y) (x * z) = \\<bar>x\\<bar> * dist y z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (x * y) (x * z) = \\<bar>x\\<bar> * dist y z", "unfolding dist_real_def abs_mult[symmetric] right_diff_distrib"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>x * y - x * z\\<bar> = \\<bar>x * y - x * z\\<bar>", ".."], ["", "lemma dist_divide[simp]: \"dist (y / r) (z / r) = dist y z / \\<bar>r\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (y / r) (z / r) = dist y z / \\<bar>r\\<bar>", "unfolding dist_real_def abs_divide[symmetric] diff_divide_distrib"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>y / r - z / r\\<bar> = \\<bar>y / r - z / r\\<bar>", ".."], ["", "lemma dist_weighted_sum:\n  fixes f :: \"'a \\<Rightarrow> real\" and g :: \"'b \\<Rightarrow> real\"\n  assumes eps: \"\\<And>i j. i \\<in> I \\<Longrightarrow> j \\<in> J \\<Longrightarrow> w i \\<noteq> 0 \\<Longrightarrow> v j \\<noteq> 0 \\<Longrightarrow> dist (f i) (g j) \\<le> d i + e j\"\n    and pos: \"\\<And>i. i\\<in>I \\<Longrightarrow> 0 \\<le> w i\" \"\\<And>j. j\\<in>J \\<Longrightarrow> 0 \\<le> v j\"\n    and sum: \"(\\<Sum>i\\<in>I. w i) = 1\" \"(\\<Sum>j\\<in>J. v j) = 1\"\n  shows \"dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j) \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "let \"?W h\" = \"(\\<Sum>(i,j)\\<in>I\\<times>J. (w i * v j) * h (i,j))\""], ["proof (state)\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "fix g :: \"'b \\<Rightarrow> real\""], ["proof (state)\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "have \"(\\<Sum>j\\<in>J. v j * g j) = (\\<Sum>i\\<in>I. w i) * (\\<Sum>j\\<in>J. v j * g j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j\\<in>J. v j * g j) = sum w I * (\\<Sum>j\\<in>J. v j * g j)", "using sum"], ["proof (prove)\nusing this:\n  sum w I = 1\n  sum v J = 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>j\\<in>J. v j * g j) = sum w I * (\\<Sum>j\\<in>J. v j * g j)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>j\\<in>J. v j * g j) = sum w I * (\\<Sum>j\\<in>J. v j * g j)\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "also"], ["proof (state)\nthis:\n  (\\<Sum>j\\<in>J. v j * g j) = sum w I * (\\<Sum>j\\<in>J. v j * g j)\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "have \"\\<dots> = ?W (g\\<circ>snd)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum w I * (\\<Sum>j\\<in>J. v j * g j) =\n    (\\<Sum>a\\<in>I \\<times> J.\n       case a of (i, j) \\<Rightarrow> w i * v j * (g \\<circ> snd) (i, j))", "by (simp add: ac_simps sum_product sum.cartesian_product)"], ["proof (state)\nthis:\n  sum w I * (\\<Sum>j\\<in>J. v j * g j) =\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of (i, j) \\<Rightarrow> w i * v j * (g \\<circ> snd) (i, j))\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>j\\<in>J. v j * g j) =\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of (i, j) \\<Rightarrow> w i * v j * (g \\<circ> snd) (i, j))", "have \"(\\<Sum>j\\<in>J. v j * g j) = ?W (g\\<circ>snd)\""], ["proof (prove)\nusing this:\n  (\\<Sum>j\\<in>J. v j * g j) =\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of (i, j) \\<Rightarrow> w i * v j * (g \\<circ> snd) (i, j))\n\ngoal (1 subgoal):\n 1. (\\<Sum>j\\<in>J. v j * g j) =\n    (\\<Sum>a\\<in>I \\<times> J.\n       case a of (i, j) \\<Rightarrow> w i * v j * (g \\<circ> snd) (i, j))", "."], ["proof (state)\nthis:\n  (\\<Sum>j\\<in>J. v j * g j) =\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of (i, j) \\<Rightarrow> w i * v j * (g \\<circ> snd) (i, j))\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "}"], ["proof (state)\nthis:\n  (\\<Sum>j\\<in>J. v j * ?ga2 j) =\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of (i, j) \\<Rightarrow> w i * v j * (?ga2 \\<circ> snd) (i, j))\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>j\\<in>J. v j * ?ga2 j) =\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of (i, j) \\<Rightarrow> w i * v j * (?ga2 \\<circ> snd) (i, j))\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "{"], ["proof (state)\nthis:\n  (\\<Sum>j\\<in>J. v j * ?ga2 j) =\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of (i, j) \\<Rightarrow> w i * v j * (?ga2 \\<circ> snd) (i, j))\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "fix f :: \"'a \\<Rightarrow> real\""], ["proof (state)\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "have \"(\\<Sum>i\\<in>I. w i * f i) = (\\<Sum>i\\<in>I. w i * f i) * (\\<Sum>j\\<in>J. v j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I. w i * f i) = (\\<Sum>i\\<in>I. w i * f i) * sum v J", "using sum"], ["proof (prove)\nusing this:\n  sum w I = 1\n  sum v J = 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I. w i * f i) = (\\<Sum>i\\<in>I. w i * f i) * sum v J", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>I. w i * f i) = (\\<Sum>i\\<in>I. w i * f i) * sum v J\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>I. w i * f i) = (\\<Sum>i\\<in>I. w i * f i) * sum v J\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "have \"\\<dots> = ?W (f\\<circ>fst)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I. w i * f i) * sum v J =\n    (\\<Sum>a\\<in>I \\<times> J.\n       case a of (i, j) \\<Rightarrow> w i * v j * (f \\<circ> fst) (i, j))", "unfolding sum_product sum.cartesian_product"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(i, j)\\<in>I \\<times> J. w i * f i * v j) =\n    (\\<Sum>a\\<in>I \\<times> J.\n       case a of (i, j) \\<Rightarrow> w i * v j * (f \\<circ> fst) (i, j))", "by (simp add: ac_simps)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>I. w i * f i) * sum v J =\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of (i, j) \\<Rightarrow> w i * v j * (f \\<circ> fst) (i, j))\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>i\\<in>I. w i * f i) =\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of (i, j) \\<Rightarrow> w i * v j * (f \\<circ> fst) (i, j))", "have \"(\\<Sum>i\\<in>I. w i * f i) = ?W (f\\<circ>fst)\""], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>I. w i * f i) =\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of (i, j) \\<Rightarrow> w i * v j * (f \\<circ> fst) (i, j))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I. w i * f i) =\n    (\\<Sum>a\\<in>I \\<times> J.\n       case a of (i, j) \\<Rightarrow> w i * v j * (f \\<circ> fst) (i, j))", "."], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>I. w i * f i) =\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of (i, j) \\<Rightarrow> w i * v j * (f \\<circ> fst) (i, j))\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "}"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>I. w i * ?fa2 i) =\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of (i, j) \\<Rightarrow> w i * v j * (?fa2 \\<circ> fst) (i, j))\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>I. w i * ?fa2 i) =\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of (i, j) \\<Rightarrow> w i * v j * (?fa2 \\<circ> fst) (i, j))\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "{"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>I. w i * ?fa2 i) =\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of (i, j) \\<Rightarrow> w i * v j * (?fa2 \\<circ> fst) (i, j))\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "have \"dist (?W (f\\<circ>fst)) (?W (g\\<circ>snd)) \\<le> ?W (\\<lambda>(i,j). d i + e j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist\n     (\\<Sum>a\\<in>I \\<times> J.\n        case a of (i, j) \\<Rightarrow> w i * v j * (f \\<circ> fst) (i, j))\n     (\\<Sum>a\\<in>I \\<times> J.\n        case a of (i, j) \\<Rightarrow> w i * v j * (g \\<circ> snd) (i, j))\n    \\<le> (\\<Sum>a\\<in>I \\<times> J.\n             case a of\n             (i, j) \\<Rightarrow>\n               w i * v j * (case (i, j) of (i, j) \\<Rightarrow> d i + e j))", "using eps pos"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<in> I; ?j \\<in> J; w ?i \\<noteq> 0; v ?j \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> dist (f ?i) (g ?j) \\<le> d ?i + e ?j\n  ?i \\<in> I \\<Longrightarrow> 0 \\<le> w ?i\n  ?j \\<in> J \\<Longrightarrow> 0 \\<le> v ?j\n\ngoal (1 subgoal):\n 1. dist\n     (\\<Sum>a\\<in>I \\<times> J.\n        case a of (i, j) \\<Rightarrow> w i * v j * (f \\<circ> fst) (i, j))\n     (\\<Sum>a\\<in>I \\<times> J.\n        case a of (i, j) \\<Rightarrow> w i * v j * (g \\<circ> snd) (i, j))\n    \\<le> (\\<Sum>a\\<in>I \\<times> J.\n             case a of\n             (i, j) \\<Rightarrow>\n               w i * v j * (case (i, j) of (i, j) \\<Rightarrow> d i + e j))", "by (intro dist_sum)\n         (auto simp: mult_le_cancel_left zero_less_mult_iff mult_le_0_iff not_le[symmetric])"], ["proof (state)\nthis:\n  dist\n   (\\<Sum>a\\<in>I \\<times> J.\n      case a of (i, j) \\<Rightarrow> w i * v j * (f \\<circ> fst) (i, j))\n   (\\<Sum>a\\<in>I \\<times> J.\n      case a of (i, j) \\<Rightarrow> w i * v j * (g \\<circ> snd) (i, j))\n  \\<le> (\\<Sum>a\\<in>I \\<times> J.\n           case a of\n           (i, j) \\<Rightarrow>\n             w i * v j * (case (i, j) of (i, j) \\<Rightarrow> d i + e j))\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "also"], ["proof (state)\nthis:\n  dist\n   (\\<Sum>a\\<in>I \\<times> J.\n      case a of (i, j) \\<Rightarrow> w i * v j * (f \\<circ> fst) (i, j))\n   (\\<Sum>a\\<in>I \\<times> J.\n      case a of (i, j) \\<Rightarrow> w i * v j * (g \\<circ> snd) (i, j))\n  \\<le> (\\<Sum>a\\<in>I \\<times> J.\n           case a of\n           (i, j) \\<Rightarrow>\n             w i * v j * (case (i, j) of (i, j) \\<Rightarrow> d i + e j))\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "have \"\\<dots> = ?W (d \\<circ> fst) + ?W (e \\<circ> snd)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>I \\<times> J.\n       case a of\n       (i, j) \\<Rightarrow>\n         w i * v j * (case (i, j) of (i, j) \\<Rightarrow> d i + e j)) =\n    (\\<Sum>a\\<in>I \\<times> J.\n       case a of (i, j) \\<Rightarrow> w i * v j * (d \\<circ> fst) (i, j)) +\n    (\\<Sum>a\\<in>I \\<times> J.\n       case a of (i, j) \\<Rightarrow> w i * v j * (e \\<circ> snd) (i, j))", "by (auto simp add: sum.distrib[symmetric] field_simps intro!: sum.cong)"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of\n     (i, j) \\<Rightarrow>\n       w i * v j * (case (i, j) of (i, j) \\<Rightarrow> d i + e j)) =\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of (i, j) \\<Rightarrow> w i * v j * (d \\<circ> fst) (i, j)) +\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of (i, j) \\<Rightarrow> w i * v j * (e \\<circ> snd) (i, j))\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "finally"], ["proof (chain)\npicking this:\n  dist\n   (\\<Sum>a\\<in>I \\<times> J.\n      case a of (i, j) \\<Rightarrow> w i * v j * (f \\<circ> fst) (i, j))\n   (\\<Sum>a\\<in>I \\<times> J.\n      case a of (i, j) \\<Rightarrow> w i * v j * (g \\<circ> snd) (i, j))\n  \\<le> (\\<Sum>a\\<in>I \\<times> J.\n           case a of\n           (i, j) \\<Rightarrow> w i * v j * (d \\<circ> fst) (i, j)) +\n        (\\<Sum>a\\<in>I \\<times> J.\n           case a of\n           (i, j) \\<Rightarrow> w i * v j * (e \\<circ> snd) (i, j))", "have \"dist (?W (f\\<circ>fst)) (?W (g\\<circ>snd)) \\<le> ?W (d \\<circ> fst) + ?W (e \\<circ> snd)\""], ["proof (prove)\nusing this:\n  dist\n   (\\<Sum>a\\<in>I \\<times> J.\n      case a of (i, j) \\<Rightarrow> w i * v j * (f \\<circ> fst) (i, j))\n   (\\<Sum>a\\<in>I \\<times> J.\n      case a of (i, j) \\<Rightarrow> w i * v j * (g \\<circ> snd) (i, j))\n  \\<le> (\\<Sum>a\\<in>I \\<times> J.\n           case a of\n           (i, j) \\<Rightarrow> w i * v j * (d \\<circ> fst) (i, j)) +\n        (\\<Sum>a\\<in>I \\<times> J.\n           case a of\n           (i, j) \\<Rightarrow> w i * v j * (e \\<circ> snd) (i, j))\n\ngoal (1 subgoal):\n 1. dist\n     (\\<Sum>a\\<in>I \\<times> J.\n        case a of (i, j) \\<Rightarrow> w i * v j * (f \\<circ> fst) (i, j))\n     (\\<Sum>a\\<in>I \\<times> J.\n        case a of (i, j) \\<Rightarrow> w i * v j * (g \\<circ> snd) (i, j))\n    \\<le> (\\<Sum>a\\<in>I \\<times> J.\n             case a of\n             (i, j) \\<Rightarrow> w i * v j * (d \\<circ> fst) (i, j)) +\n          (\\<Sum>a\\<in>I \\<times> J.\n             case a of\n             (i, j) \\<Rightarrow> w i * v j * (e \\<circ> snd) (i, j))", "by simp"], ["proof (state)\nthis:\n  dist\n   (\\<Sum>a\\<in>I \\<times> J.\n      case a of (i, j) \\<Rightarrow> w i * v j * (f \\<circ> fst) (i, j))\n   (\\<Sum>a\\<in>I \\<times> J.\n      case a of (i, j) \\<Rightarrow> w i * v j * (g \\<circ> snd) (i, j))\n  \\<le> (\\<Sum>a\\<in>I \\<times> J.\n           case a of\n           (i, j) \\<Rightarrow> w i * v j * (d \\<circ> fst) (i, j)) +\n        (\\<Sum>a\\<in>I \\<times> J.\n           case a of\n           (i, j) \\<Rightarrow> w i * v j * (e \\<circ> snd) (i, j))\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "}"], ["proof (state)\nthis:\n  dist\n   (\\<Sum>a\\<in>I \\<times> J.\n      case a of (i, j) \\<Rightarrow> w i * v j * (f \\<circ> fst) (i, j))\n   (\\<Sum>a\\<in>I \\<times> J.\n      case a of (i, j) \\<Rightarrow> w i * v j * (g \\<circ> snd) (i, j))\n  \\<le> (\\<Sum>a\\<in>I \\<times> J.\n           case a of\n           (i, j) \\<Rightarrow> w i * v j * (d \\<circ> fst) (i, j)) +\n        (\\<Sum>a\\<in>I \\<times> J.\n           case a of\n           (i, j) \\<Rightarrow> w i * v j * (e \\<circ> snd) (i, j))\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>j\\<in>J. v j * ?ga2 j) =\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of (i, j) \\<Rightarrow> w i * v j * (?ga2 \\<circ> snd) (i, j))\n  (\\<Sum>i\\<in>I. w i * ?fa2 i) =\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of (i, j) \\<Rightarrow> w i * v j * (?fa2 \\<circ> fst) (i, j))\n  dist\n   (\\<Sum>a\\<in>I \\<times> J.\n      case a of (i, j) \\<Rightarrow> w i * v j * (f \\<circ> fst) (i, j))\n   (\\<Sum>a\\<in>I \\<times> J.\n      case a of (i, j) \\<Rightarrow> w i * v j * (g \\<circ> snd) (i, j))\n  \\<le> (\\<Sum>a\\<in>I \\<times> J.\n           case a of\n           (i, j) \\<Rightarrow> w i * v j * (d \\<circ> fst) (i, j)) +\n        (\\<Sum>a\\<in>I \\<times> J.\n           case a of\n           (i, j) \\<Rightarrow> w i * v j * (e \\<circ> snd) (i, j))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>j\\<in>J. v j * ?ga2 j) =\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of (i, j) \\<Rightarrow> w i * v j * (?ga2 \\<circ> snd) (i, j))\n  (\\<Sum>i\\<in>I. w i * ?fa2 i) =\n  (\\<Sum>a\\<in>I \\<times> J.\n     case a of (i, j) \\<Rightarrow> w i * v j * (?fa2 \\<circ> fst) (i, j))\n  dist\n   (\\<Sum>a\\<in>I \\<times> J.\n      case a of (i, j) \\<Rightarrow> w i * v j * (f \\<circ> fst) (i, j))\n   (\\<Sum>a\\<in>I \\<times> J.\n      case a of (i, j) \\<Rightarrow> w i * v j * (g \\<circ> snd) (i, j))\n  \\<le> (\\<Sum>a\\<in>I \\<times> J.\n           case a of\n           (i, j) \\<Rightarrow> w i * v j * (d \\<circ> fst) (i, j)) +\n        (\\<Sum>a\\<in>I \\<times> J.\n           case a of\n           (i, j) \\<Rightarrow> w i * v j * (e \\<circ> snd) (i, j))\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n    \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)", "by simp"], ["proof (state)\nthis:\n  dist (\\<Sum>i\\<in>I. w i * f i) (\\<Sum>j\\<in>J. v j * g j)\n  \\<le> (\\<Sum>i\\<in>I. w i * d i) + (\\<Sum>j\\<in>J. v j * e j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma field_abs_le_zero_epsilon:\n  fixes x :: \"'a::{linordered_field}\"\n  assumes epsilon: \"\\<And>e. 0 < e \\<Longrightarrow> \\<bar>x\\<bar> \\<le> e\"\n  shows \"\\<bar>x\\<bar> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>x\\<bar> = (0::'a)", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<bar>x\\<bar> \\<le> (0::'a)\n 2. (0::'a) \\<le> \\<bar>x\\<bar>", "show \"\\<bar>x\\<bar> \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>x\\<bar> \\<le> (0::'a)", "proof (rule field_le_epsilon)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e. (0::'a) < e \\<Longrightarrow> \\<bar>x\\<bar> \\<le> (0::'a) + e", "fix e :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e. (0::'a) < e \\<Longrightarrow> \\<bar>x\\<bar> \\<le> (0::'a) + e", "assume \"0 < e\""], ["proof (state)\nthis:\n  (0::'a) < e\n\ngoal (1 subgoal):\n 1. \\<And>e. (0::'a) < e \\<Longrightarrow> \\<bar>x\\<bar> \\<le> (0::'a) + e", "then"], ["proof (chain)\npicking this:\n  (0::'a) < e", "show \"\\<bar>x\\<bar> \\<le> 0 + e\""], ["proof (prove)\nusing this:\n  (0::'a) < e\n\ngoal (1 subgoal):\n 1. \\<bar>x\\<bar> \\<le> (0::'a) + e", "by simp fact"], ["proof (state)\nthis:\n  \\<bar>x\\<bar> \\<le> (0::'a) + e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<bar>x\\<bar> \\<le> (0::'a)\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> \\<bar>x\\<bar>", "qed simp"], ["", "lemma nat_nat_induct[case_names less]:\n  fixes P :: \"nat \\<Rightarrow> nat \\<Rightarrow> bool\"\n  assumes less: \"\\<And>n m. (\\<And>j k. j + k < n + m \\<Longrightarrow> P j k) \\<Longrightarrow> P n m\"\n  shows \"P n m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P n m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P n m", "define N where \"N \\<equiv> n + m\""], ["proof (state)\nthis:\n  N \\<equiv> n + m\n\ngoal (1 subgoal):\n 1. P n m", "then"], ["proof (chain)\npicking this:\n  N \\<equiv> n + m", "show ?thesis"], ["proof (prove)\nusing this:\n  N \\<equiv> n + m\n\ngoal (1 subgoal):\n 1. P n m", "proof (induct N arbitrary: n m rule: nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<forall>ma<n + m.\n          \\<forall>x xa.\n             ma = x + xa \\<longrightarrow> P x xa \\<Longrightarrow>\n       P n m", "case 1"], ["proof (state)\nthis:\n  \\<forall>m<n + m. \\<forall>x xa. m = x + xa \\<longrightarrow> P x xa\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<forall>ma<n + m.\n          \\<forall>x xa.\n             ma = x + xa \\<longrightarrow> P x xa \\<Longrightarrow>\n       P n m", "show \"P n m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P n m", "apply (rule less)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j k. j + k < n + m \\<Longrightarrow> P j k", "apply (rule 1[rule_format])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>j k. j + k < n + m \\<Longrightarrow> ?m2 j k < n + m\n 2. \\<And>j k. j + k < n + m \\<Longrightarrow> ?m2 j k = j + k", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  P n m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P n m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma part_insert:\n  assumes \"part A P\" assumes \"X \\<inter> A = {}\"\n  shows \"part (A \\<union> X) (insert X P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part (A \\<union> X) (insert X P)", "using assms"], ["proof (prove)\nusing this:\n  part A P\n  X \\<inter> A = {}\n\ngoal (1 subgoal):\n 1. part (A \\<union> X) (insert X P)", "by (auto simp: part_def)"], ["", "lemma part_insert_subset:\n  assumes X: \"part (A - X) P\" \"X \\<subseteq> A\"\n  shows \"part A (insert X P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part A (insert X P)", "using X part_insert[of \"A - X\" P X]"], ["proof (prove)\nusing this:\n  part (A - X) P\n  X \\<subseteq> A\n  \\<lbrakk>part (A - X) P; X \\<inter> (A - X) = {}\\<rbrakk>\n  \\<Longrightarrow> part (A - X \\<union> X) (insert X P)\n\ngoal (1 subgoal):\n 1. part A (insert X P)", "by (simp add: Un_absorb2)"], ["", "lemma part_is_subset:\n  \"part S P \\<Longrightarrow> p \\<in> P \\<Longrightarrow> p \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>part S P; p \\<in> P\\<rbrakk> \\<Longrightarrow> p \\<subseteq> S", "unfolding part_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Union> P = S \\<and>\n             (\\<forall>J1 J2.\n                 J1 \\<in> P \\<and>\n                 J2 \\<in> P \\<and> J1 \\<noteq> J2 \\<longrightarrow>\n                 J1 \\<inter> J2 = {});\n     p \\<in> P\\<rbrakk>\n    \\<Longrightarrow> p \\<subseteq> S", "by (metis Union_upper)"], ["", "lemma dist_nonneg_bounded:\n  fixes l u x y :: real\n  assumes \"l \\<le> x\" \"x \\<le> u\" \"l \\<le> y\" \"y \\<le> u\"\n  shows \"dist x y \\<le> u - l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x y \\<le> u - l", "using assms"], ["proof (prove)\nusing this:\n  l \\<le> x\n  x \\<le> u\n  l \\<le> y\n  y \\<le> u\n\ngoal (1 subgoal):\n 1. dist x y \\<le> u - l", "unfolding dist_real_def"], ["proof (prove)\nusing this:\n  l \\<le> x\n  x \\<le> u\n  l \\<le> y\n  y \\<le> u\n\ngoal (1 subgoal):\n 1. \\<bar>x - y\\<bar> \\<le> u - l", "by arith"], ["", "lemma integrable_count_space_finite_support:\n  fixes f :: \"'a \\<Rightarrow> 'b::{banach,second_countable_topology}\"\n  shows \"finite {x\\<in>X. f x \\<noteq> 0} \\<Longrightarrow> integrable (count_space X) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {x \\<in> X. f x \\<noteq> (0::'b)} \\<Longrightarrow>\n    integrable (count_space X) f", "by (auto simp: nn_integral_count_space integrable_iff_bounded)"], ["", "lemma lebesgue_integral_point_measure:\n  fixes g :: \"_ \\<Rightarrow> real\"\n  assumes f: \"finite {a\\<in>A. 0 < f a \\<and> g a \\<noteq> 0}\"\n  shows \"integral\\<^sup>L (point_measure A f) g = (\\<Sum>a|a\\<in>A \\<and> 0 < f a \\<and> g a \\<noteq> 0. f a * g a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>L (point_measure A (\\<lambda>x. ennreal (f x))) g =\n    (\\<Sum>a | a \\<in> A \\<and> 0 < f a \\<and> g a \\<noteq> 0. f a * g a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. integral\\<^sup>L (point_measure A (\\<lambda>x. ennreal (f x))) g =\n    (\\<Sum>a | a \\<in> A \\<and> 0 < f a \\<and> g a \\<noteq> 0. f a * g a)", "have eq: \"{a \\<in> A. max 0 (f a) \\<noteq> 0 \\<and> g a \\<noteq> 0} = {a\\<in>A. 0 < f a \\<and> g a \\<noteq> 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a \\<in> A. max 0 (f a) \\<noteq> 0 \\<and> g a \\<noteq> 0} =\n    {a \\<in> A. 0 < f a \\<and> g a \\<noteq> 0}", "by auto"], ["proof (state)\nthis:\n  {a \\<in> A. max 0 (f a) \\<noteq> 0 \\<and> g a \\<noteq> 0} =\n  {a \\<in> A. 0 < f a \\<and> g a \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L (point_measure A (\\<lambda>x. ennreal (f x))) g =\n    (\\<Sum>a | a \\<in> A \\<and> 0 < f a \\<and> g a \\<noteq> 0. f a * g a)", "have *: \"ennreal (f x) = ennreal (max 0 (f x))\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (f x) = ennreal (max 0 (f x))", "by (cases \"0 \\<le> f x\") (auto simp: max.absorb1 ennreal_neg)"], ["proof (state)\nthis:\n  ennreal (f ?x) = ennreal (max 0 (f ?x))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L (point_measure A (\\<lambda>x. ennreal (f x))) g =\n    (\\<Sum>a | a \\<in> A \\<and> 0 < f a \\<and> g a \\<noteq> 0. f a * g a)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>L (point_measure A (\\<lambda>x. ennreal (f x))) g =\n    (\\<Sum>a | a \\<in> A \\<and> 0 < f a \\<and> g a \\<noteq> 0. f a * g a)", "unfolding point_measure_def *"], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>L\n     (density (count_space A) (\\<lambda>x. ennreal (max 0 (f x)))) g =\n    (\\<Sum>a | a \\<in> A \\<and> 0 < f a \\<and> g a \\<noteq> 0. f a * g a)", "using f"], ["proof (prove)\nusing this:\n  finite {a \\<in> A. 0 < f a \\<and> g a \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L\n     (density (count_space A) (\\<lambda>x. ennreal (max 0 (f x)))) g =\n    (\\<Sum>a | a \\<in> A \\<and> 0 < f a \\<and> g a \\<noteq> 0. f a * g a)", "apply (subst integral_real_density)"], ["proof (prove)\ngoal (4 subgoals):\n 1. finite {a \\<in> A. 0 < f a \\<and> g a \\<noteq> 0} \\<Longrightarrow>\n    (\\<lambda>x. max 0 (f x)) \\<in> borel_measurable (count_space A)\n 2. finite {a \\<in> A. 0 < f a \\<and> g a \\<noteq> 0} \\<Longrightarrow>\n    AE x in count_space A. 0 \\<le> max 0 (f x)\n 3. finite {a \\<in> A. 0 < f a \\<and> g a \\<noteq> 0} \\<Longrightarrow>\n    g \\<in> borel_measurable (count_space A)\n 4. finite {a \\<in> A. 0 < f a \\<and> g a \\<noteq> 0} \\<Longrightarrow>\n    LINT x|count_space A. max 0 (f x) * g x =\n    (\\<Sum>a | a \\<in> A \\<and> 0 < f a \\<and> g a \\<noteq> 0. f a * g a)", "apply (auto simp add: integral_real_density lebesgue_integral_count_space_finite_support eq\n      intro!: sum.cong)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  integral\\<^sup>L (point_measure A (\\<lambda>x. ennreal (f x))) g =\n  (\\<Sum>a | a \\<in> A \\<and> 0 < f a \\<and> g a \\<noteq> 0. f a * g a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in finite_measure) finite_measure_dist:\n  assumes AE: \"AE x in M. x \\<notin> C \\<longrightarrow> (x \\<in> A \\<longleftrightarrow> x \\<in> B)\"\n  assumes sets: \"A \\<in> sets M\" \"B \\<in> sets M\" \"C \\<in> sets M\"\n  shows \"dist (measure M A) (measure M B) \\<le> measure M C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (Sigma_Algebra.measure M A) (Sigma_Algebra.measure M B)\n    \\<le> Sigma_Algebra.measure M C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (Sigma_Algebra.measure M A) (Sigma_Algebra.measure M B)\n    \\<le> Sigma_Algebra.measure M C", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (Sigma_Algebra.measure M A) (Sigma_Algebra.measure M B)\n    \\<le> Sigma_Algebra.measure M C", "have \"measure M A \\<le> measure M (B \\<union> C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A \\<le> Sigma_Algebra.measure M (B \\<union> C)", "using AE sets"], ["proof (prove)\nusing this:\n  AE x in M. x \\<notin> C \\<longrightarrow> (x \\<in> A) = (x \\<in> B)\n  A \\<in> sets M\n  B \\<in> sets M\n  C \\<in> sets M\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A \\<le> Sigma_Algebra.measure M (B \\<union> C)", "by (auto intro: finite_measure_mono_AE)"], ["proof (state)\nthis:\n  Sigma_Algebra.measure M A \\<le> Sigma_Algebra.measure M (B \\<union> C)\n\ngoal (1 subgoal):\n 1. dist (Sigma_Algebra.measure M A) (Sigma_Algebra.measure M B)\n    \\<le> Sigma_Algebra.measure M C", "also"], ["proof (state)\nthis:\n  Sigma_Algebra.measure M A \\<le> Sigma_Algebra.measure M (B \\<union> C)\n\ngoal (1 subgoal):\n 1. dist (Sigma_Algebra.measure M A) (Sigma_Algebra.measure M B)\n    \\<le> Sigma_Algebra.measure M C", "have \"\\<dots> \\<le> measure M B + measure M C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M (B \\<union> C)\n    \\<le> Sigma_Algebra.measure M B + Sigma_Algebra.measure M C", "using sets"], ["proof (prove)\nusing this:\n  A \\<in> sets M\n  B \\<in> sets M\n  C \\<in> sets M\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M (B \\<union> C)\n    \\<le> Sigma_Algebra.measure M B + Sigma_Algebra.measure M C", "by (auto intro: finite_measure_subadditive)"], ["proof (state)\nthis:\n  Sigma_Algebra.measure M (B \\<union> C)\n  \\<le> Sigma_Algebra.measure M B + Sigma_Algebra.measure M C\n\ngoal (1 subgoal):\n 1. dist (Sigma_Algebra.measure M A) (Sigma_Algebra.measure M B)\n    \\<le> Sigma_Algebra.measure M C", "finally"], ["proof (chain)\npicking this:\n  Sigma_Algebra.measure M A\n  \\<le> Sigma_Algebra.measure M B + Sigma_Algebra.measure M C", "have A: \"measure M A \\<le> measure M B + measure M C\""], ["proof (prove)\nusing this:\n  Sigma_Algebra.measure M A\n  \\<le> Sigma_Algebra.measure M B + Sigma_Algebra.measure M C\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A\n    \\<le> Sigma_Algebra.measure M B + Sigma_Algebra.measure M C", "."], ["proof (state)\nthis:\n  Sigma_Algebra.measure M A\n  \\<le> Sigma_Algebra.measure M B + Sigma_Algebra.measure M C\n\ngoal (1 subgoal):\n 1. dist (Sigma_Algebra.measure M A) (Sigma_Algebra.measure M B)\n    \\<le> Sigma_Algebra.measure M C", "}"], ["proof (state)\nthis:\n  Sigma_Algebra.measure M A\n  \\<le> Sigma_Algebra.measure M B + Sigma_Algebra.measure M C\n\ngoal (1 subgoal):\n 1. dist (Sigma_Algebra.measure M A) (Sigma_Algebra.measure M B)\n    \\<le> Sigma_Algebra.measure M C", "moreover"], ["proof (state)\nthis:\n  Sigma_Algebra.measure M A\n  \\<le> Sigma_Algebra.measure M B + Sigma_Algebra.measure M C\n\ngoal (1 subgoal):\n 1. dist (Sigma_Algebra.measure M A) (Sigma_Algebra.measure M B)\n    \\<le> Sigma_Algebra.measure M C", "{"], ["proof (state)\nthis:\n  Sigma_Algebra.measure M A\n  \\<le> Sigma_Algebra.measure M B + Sigma_Algebra.measure M C\n\ngoal (1 subgoal):\n 1. dist (Sigma_Algebra.measure M A) (Sigma_Algebra.measure M B)\n    \\<le> Sigma_Algebra.measure M C", "have \"measure M B \\<le> measure M (A \\<union> C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M B \\<le> Sigma_Algebra.measure M (A \\<union> C)", "using AE sets"], ["proof (prove)\nusing this:\n  AE x in M. x \\<notin> C \\<longrightarrow> (x \\<in> A) = (x \\<in> B)\n  A \\<in> sets M\n  B \\<in> sets M\n  C \\<in> sets M\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M B \\<le> Sigma_Algebra.measure M (A \\<union> C)", "by (auto intro: finite_measure_mono_AE)"], ["proof (state)\nthis:\n  Sigma_Algebra.measure M B \\<le> Sigma_Algebra.measure M (A \\<union> C)\n\ngoal (1 subgoal):\n 1. dist (Sigma_Algebra.measure M A) (Sigma_Algebra.measure M B)\n    \\<le> Sigma_Algebra.measure M C", "also"], ["proof (state)\nthis:\n  Sigma_Algebra.measure M B \\<le> Sigma_Algebra.measure M (A \\<union> C)\n\ngoal (1 subgoal):\n 1. dist (Sigma_Algebra.measure M A) (Sigma_Algebra.measure M B)\n    \\<le> Sigma_Algebra.measure M C", "have \"\\<dots> \\<le> measure M A + measure M C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M (A \\<union> C)\n    \\<le> Sigma_Algebra.measure M A + Sigma_Algebra.measure M C", "using sets"], ["proof (prove)\nusing this:\n  A \\<in> sets M\n  B \\<in> sets M\n  C \\<in> sets M\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M (A \\<union> C)\n    \\<le> Sigma_Algebra.measure M A + Sigma_Algebra.measure M C", "by (auto intro: finite_measure_subadditive)"], ["proof (state)\nthis:\n  Sigma_Algebra.measure M (A \\<union> C)\n  \\<le> Sigma_Algebra.measure M A + Sigma_Algebra.measure M C\n\ngoal (1 subgoal):\n 1. dist (Sigma_Algebra.measure M A) (Sigma_Algebra.measure M B)\n    \\<le> Sigma_Algebra.measure M C", "finally"], ["proof (chain)\npicking this:\n  Sigma_Algebra.measure M B\n  \\<le> Sigma_Algebra.measure M A + Sigma_Algebra.measure M C", "have B: \"measure M B \\<le> measure M A + measure M C\""], ["proof (prove)\nusing this:\n  Sigma_Algebra.measure M B\n  \\<le> Sigma_Algebra.measure M A + Sigma_Algebra.measure M C\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M B\n    \\<le> Sigma_Algebra.measure M A + Sigma_Algebra.measure M C", "."], ["proof (state)\nthis:\n  Sigma_Algebra.measure M B\n  \\<le> Sigma_Algebra.measure M A + Sigma_Algebra.measure M C\n\ngoal (1 subgoal):\n 1. dist (Sigma_Algebra.measure M A) (Sigma_Algebra.measure M B)\n    \\<le> Sigma_Algebra.measure M C", "}"], ["proof (state)\nthis:\n  Sigma_Algebra.measure M B\n  \\<le> Sigma_Algebra.measure M A + Sigma_Algebra.measure M C\n\ngoal (1 subgoal):\n 1. dist (Sigma_Algebra.measure M A) (Sigma_Algebra.measure M B)\n    \\<le> Sigma_Algebra.measure M C", "ultimately"], ["proof (chain)\npicking this:\n  Sigma_Algebra.measure M A\n  \\<le> Sigma_Algebra.measure M B + Sigma_Algebra.measure M C\n  Sigma_Algebra.measure M B\n  \\<le> Sigma_Algebra.measure M A + Sigma_Algebra.measure M C", "show ?thesis"], ["proof (prove)\nusing this:\n  Sigma_Algebra.measure M A\n  \\<le> Sigma_Algebra.measure M B + Sigma_Algebra.measure M C\n  Sigma_Algebra.measure M B\n  \\<le> Sigma_Algebra.measure M A + Sigma_Algebra.measure M C\n\ngoal (1 subgoal):\n 1. dist (Sigma_Algebra.measure M A) (Sigma_Algebra.measure M B)\n    \\<le> Sigma_Algebra.measure M C", "by (simp add: dist_real_def)"], ["proof (state)\nthis:\n  dist (Sigma_Algebra.measure M A) (Sigma_Algebra.measure M B)\n  \\<le> Sigma_Algebra.measure M C\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in prob_space) prob_dist:\n  assumes AE: \"AE x in M. \\<not> C x \\<longrightarrow> (A x \\<longleftrightarrow> B x)\"\n  assumes sets: \"Measurable.pred M A\" \"Measurable.pred M B\" \"Measurable.pred M C\"\n  shows \"dist \\<P>(x in M. A x) \\<P>(x in M. B x) \\<le> \\<P>(x in M. C x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (prob {x \\<in> space M. A x}) (prob {x \\<in> space M. B x})\n    \\<le> prob {x \\<in> space M. C x}", "using assms"], ["proof (prove)\nusing this:\n  AE x in M. \\<not> C x \\<longrightarrow> A x = B x\n  random_variable (count_space UNIV) A\n  random_variable (count_space UNIV) B\n  random_variable (count_space UNIV) C\n\ngoal (1 subgoal):\n 1. dist (prob {x \\<in> space M. A x}) (prob {x \\<in> space M. B x})\n    \\<le> prob {x \\<in> space M. C x}", "by (intro finite_measure_dist) auto"], ["", "lemma Least_eq_0_iff: \"(\\<exists>i::nat. P i) \\<Longrightarrow> (LEAST i. P i) = 0 \\<longleftrightarrow> P 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i. P i \\<Longrightarrow> ((LEAST i. P i) = 0) = P 0", "by (metis LeastI_ex neq0_conv not_less_Least)"], ["", "lemma case_nat_comp_Suc[simp]: \"case_nat x f \\<circ> Suc = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. case_nat x f \\<circ> Suc = f", "by auto"], ["", "lemma sum_eq_0_iff:\n  fixes f :: \"_ \\<Rightarrow> 'a :: {comm_monoid_add,ordered_ab_group_add}\"\n  shows \"finite A \\<Longrightarrow> (\\<And>i. i \\<in> A \\<Longrightarrow> 0 \\<le> f i) \\<Longrightarrow> (\\<Sum>i\\<in>A. f i) = 0 \\<longleftrightarrow> (\\<forall>i\\<in>A. f i = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A;\n     \\<And>i. i \\<in> A \\<Longrightarrow> (0::'a) \\<le> f i\\<rbrakk>\n    \\<Longrightarrow> (sum f A = (0::'a)) =\n                      (\\<forall>i\\<in>A. f i = (0::'a))", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite A;\n     \\<And>i. i \\<in> A \\<Longrightarrow> (0::'a) \\<le> f i;\n     sum f A = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<in>A. f i = (0::'a)\n 2. \\<lbrakk>finite A;\n     \\<And>i. i \\<in> A \\<Longrightarrow> (0::'a) \\<le> f i;\n     \\<forall>i\\<in>A. f i = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> sum f A = (0::'a)", "apply (blast intro: sum_nonneg_0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A;\n     \\<And>i. i \\<in> A \\<Longrightarrow> (0::'a) \\<le> f i;\n     \\<forall>i\\<in>A. f i = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> sum f A = (0::'a)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma sum_less_0_iff:\n  fixes f :: \"_ \\<Rightarrow> 'a :: {comm_monoid_add,ordered_ab_group_add}\"\n  shows \"finite A \\<Longrightarrow> (\\<And>i. i \\<in> A \\<Longrightarrow> 0 \\<le> f i) \\<Longrightarrow> 0 < (\\<Sum>i\\<in>A. f i) \\<longleftrightarrow> (\\<exists>i\\<in>A. 0 < f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A;\n     \\<And>i. i \\<in> A \\<Longrightarrow> (0::'a) \\<le> f i\\<rbrakk>\n    \\<Longrightarrow> ((0::'a) < sum f A) =\n                      (\\<exists>i\\<in>A. (0::'a) < f i)", "using sum_nonneg[of A f] sum_eq_0_iff[of A f]"], ["proof (prove)\nusing this:\n  (\\<And>x. x \\<in> A \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n  (0::'a) \\<le> sum f A\n  \\<lbrakk>finite A;\n   \\<And>i. i \\<in> A \\<Longrightarrow> (0::'a) \\<le> f i\\<rbrakk>\n  \\<Longrightarrow> (sum f A = (0::'a)) = (\\<forall>i\\<in>A. f i = (0::'a))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A;\n     \\<And>i. i \\<in> A \\<Longrightarrow> (0::'a) \\<le> f i\\<rbrakk>\n    \\<Longrightarrow> ((0::'a) < sum f A) =\n                      (\\<exists>i\\<in>A. (0::'a) < f i)", "by (simp add: less_le)"], ["", "context PL_Indis\nbegin"], ["", "declare emp_gen[simp del]"], ["", "interpretation pmf_as_function"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lift_definition wt_pmf :: \"('test, 'atom, 'choice) cmd \\<times> 'state \\<Rightarrow> nat pmf\" is\n  \"\\<lambda>(c, s) i. if proper c then if i < brn c then wt c s i else 0 else if i = 0 then 1 else 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod.\n       (\\<forall>x.\n           0 \\<le> (case prod of\n                    (c, s) \\<Rightarrow>\n                      \\<lambda>i.\n                         if proper c then if i < brn c then wt c s i else 0\n                         else if i = 0 then 1 else 0)\n                    x) \\<and>\n       \\<integral>\\<^sup>+ x. ennreal\n                               ((case prod of\n                                 (c, s) \\<Rightarrow>\n                                   \\<lambda>i.\nif proper c then if i < brn c then wt c s i else 0\nelse if i = 0 then 1 else 0)\n                                 x)\n                          \\<partial>count_space UNIV =\n       1", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>prod.\n       \\<forall>x.\n          0 \\<le> (case prod of\n                   (c, s) \\<Rightarrow>\n                     \\<lambda>i.\n                        if proper c then if i < brn c then wt c s i else 0\n                        else if i = 0 then 1 else 0)\n                   x\n 2. \\<And>prod.\n       \\<integral>\\<^sup>+ x. ennreal\n                               ((case prod of\n                                 (c, s) \\<Rightarrow>\n                                   \\<lambda>i.\nif proper c then if i < brn c then wt c s i else 0\nelse if i = 0 then 1 else 0)\n                                 x)\n                          \\<partial>count_space UNIV =\n       1", "let ?f = \"\\<lambda>(c, s) i. if proper c then if i < brn c then wt c s i else 0 else if i = 0 then 1 else 0\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>prod.\n       \\<forall>x.\n          0 \\<le> (case prod of\n                   (c, s) \\<Rightarrow>\n                     \\<lambda>i.\n                        if proper c then if i < brn c then wt c s i else 0\n                        else if i = 0 then 1 else 0)\n                   x\n 2. \\<And>prod.\n       \\<integral>\\<^sup>+ x. ennreal\n                               ((case prod of\n                                 (c, s) \\<Rightarrow>\n                                   \\<lambda>i.\nif proper c then if i < brn c then wt c s i else 0\nelse if i = 0 then 1 else 0)\n                                 x)\n                          \\<partial>count_space UNIV =\n       1", "fix cf"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>prod.\n       \\<forall>x.\n          0 \\<le> (case prod of\n                   (c, s) \\<Rightarrow>\n                     \\<lambda>i.\n                        if proper c then if i < brn c then wt c s i else 0\n                        else if i = 0 then 1 else 0)\n                   x\n 2. \\<And>prod.\n       \\<integral>\\<^sup>+ x. ennreal\n                               ((case prod of\n                                 (c, s) \\<Rightarrow>\n                                   \\<lambda>i.\nif proper c then if i < brn c then wt c s i else 0\nelse if i = 0 then 1 else 0)\n                                 x)\n                          \\<partial>count_space UNIV =\n       1", "show \"\\<forall>i. 0 \\<le> ?f cf i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       0 \\<le> (case cf of\n                (c, s) \\<Rightarrow>\n                  \\<lambda>i.\n                     if proper c then if i < brn c then wt c s i else 0\n                     else if i = 0 then 1 else 0)\n                i", "by (auto split: prod.split)"], ["proof (state)\nthis:\n  \\<forall>i.\n     0 \\<le> (case cf of\n              (c, s) \\<Rightarrow>\n                \\<lambda>i.\n                   if proper c then if i < brn c then wt c s i else 0\n                   else if i = 0 then 1 else 0)\n              i\n\ngoal (1 subgoal):\n 1. \\<And>prod.\n       \\<integral>\\<^sup>+ x. ennreal\n                               ((case prod of\n                                 (c, s) \\<Rightarrow>\n                                   \\<lambda>i.\nif proper c then if i < brn c then wt c s i else 0\nelse if i = 0 then 1 else 0)\n                                 x)\n                          \\<partial>count_space UNIV =\n       1", "show \"(\\<integral>\\<^sup>+i. ?f cf i \\<partial>count_space UNIV) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal\n                            ((case cf of\n                              (c, s) \\<Rightarrow>\n                                \\<lambda>i.\n                                   if proper c\n                                   then if i < brn c then wt c s i else 0\n                                   else if i = 0 then 1 else 0)\n                              x)\n                       \\<partial>count_space UNIV =\n    1", "by (subst nn_integral_count_space'[where A=\"if proper (fst cf) then {..<brn (fst cf)} else {0}\" for n])\n       (auto split: prod.split)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal\n                          ((case cf of\n                            (c, s) \\<Rightarrow>\n                              \\<lambda>i.\n                                 if proper c\n                                 then if i < brn c then wt c s i else 0\n                                 else if i = 0 then 1 else 0)\n                            x)\n                     \\<partial>count_space UNIV =\n  1\n\ngoal:\nNo subgoals!", "qed"], ["", "definition trans :: \"('test, 'atom, 'choice) cmd \\<times> 'state \\<Rightarrow> (('test, 'atom, 'choice) cmd \\<times> 'state) pmf\" where\n  \"trans cf = map_pmf (\\<lambda>i. if proper (fst cf) then cont_eff cf i else cf) (wt_pmf cf)\""], ["", "sublocale T?: MC_syntax trans"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "abbreviation \"G cf \\<equiv> set_pmf (trans cf)\""], ["", "lemma set_pmf_map: \"set_pmf (map_pmf f M) = f ` set_pmf M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_pmf (map_pmf f M) = f ` set_pmf M", "using pmf_set_map[of f]"], ["proof (prove)\nusing this:\n  set_pmf \\<circ> map_pmf f = (`) f \\<circ> set_pmf\n\ngoal (1 subgoal):\n 1. set_pmf (map_pmf f M) = f ` set_pmf M", "by (simp add: comp_def fun_eq_iff)"], ["", "lemma set_pmf_wt:\n  \"set_pmf (wt_pmf cf) = (if proper (fst cf) then {i. i < brn (fst cf) \\<and> 0 < wt (fst cf) (snd cf) i} else {0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_pmf (wt_pmf cf) =\n    (if proper (fst cf)\n     then {i. i < brn (fst cf) \\<and> 0 < wt (fst cf) (snd cf) i} else {0})", "by (auto simp: set_eq_iff set_pmf_iff wt_pmf.rep_eq split: prod.split) (metis less_le wt_ge_0)"], ["", "lemma G_eq:\n  \"G cf = (if proper (fst cf) then {cont_eff cf i | i. i < brn (fst cf) \\<and> 0 < wt (fst cf) (snd cf) i } else {cf})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G cf =\n    (if proper (fst cf)\n     then {cont_eff cf i |i.\n           i < brn (fst cf) \\<and> 0 < wt (fst cf) (snd cf) i}\n     else {cf})", "by (auto simp add: trans_def set_pmf_map set_pmf_wt)"], ["", "lemma discrCf_G: \"discrCf cf \\<Longrightarrow> cf' \\<in> G cf \\<Longrightarrow> discrCf cf'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>discrCf cf; cf' \\<in> G cf\\<rbrakk>\n    \\<Longrightarrow> discrCf cf'", "using discrCf_cont[of cf]"], ["proof (prove)\nusing this:\n  \\<lbrakk>discrCf cf; ?i < brn (fst cf)\\<rbrakk>\n  \\<Longrightarrow> discrCf (cont_eff cf ?i)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>discrCf cf; cf' \\<in> G cf\\<rbrakk>\n    \\<Longrightarrow> discrCf cf'", "by (auto simp: G_eq split: if_split_asm)"], ["", "lemma measurable_discrCf[measurable]: \"Measurable.pred (count_space UNIV) discrCf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Measurable.pred (count_space UNIV) discrCf", "by auto"], ["", "lemma measurable_indis[measurable]: \"Measurable.pred (count_space UNIV) (\\<lambda>x. snd x \\<approx> c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Measurable.pred (count_space UNIV) (\\<lambda>x. snd x \\<approx> c)", "by auto"], ["", "lemma integral_trans:\n  \"proper (fst cf) \\<Longrightarrow>\n    (\\<integral>x. f x \\<partial>trans cf) = (\\<Sum>i<brn (fst cf). wt (fst cf) (snd cf) i * f (cont_eff cf i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper (fst cf) \\<Longrightarrow>\n    measure_pmf.expectation (local.trans cf) f =\n    (\\<Sum>i<brn (fst cf). wt (fst cf) (snd cf) i * f (cont_eff cf i))", "unfolding trans_def map_pmf_rep_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. proper (fst cf) \\<Longrightarrow>\n    integral\\<^sup>L\n     (distr (measure_pmf (wt_pmf cf)) (count_space UNIV)\n       (\\<lambda>i. if proper (fst cf) then cont_eff cf i else cf))\n     f =\n    (\\<Sum>i<brn (fst cf). wt (fst cf) (snd cf) i * f (cont_eff cf i))", "apply (simp add: integral_distr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. proper (fst cf) \\<Longrightarrow>\n    measure_pmf.expectation (wt_pmf cf) (\\<lambda>x. f (cont_eff cf x)) =\n    (\\<Sum>i<brn (fst cf). wt (fst cf) (snd cf) i * f (cont_eff cf i))", "apply (subst integral_measure_pmf[of \"{..< brn (fst cf)}\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. proper (fst cf) \\<Longrightarrow> finite {..<brn (fst cf)}\n 2. \\<And>a.\n       \\<lbrakk>proper (fst cf); a \\<in> set_pmf (wt_pmf cf);\n        f (cont_eff cf a) \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {..<brn (fst cf)}\n 3. proper (fst cf) \\<Longrightarrow>\n    (\\<Sum>a<brn (fst cf). pmf (wt_pmf cf) a *\\<^sub>R f (cont_eff cf a)) =\n    (\\<Sum>i<brn (fst cf). wt (fst cf) (snd cf) i * f (cont_eff cf i))", "apply (auto simp: set_pmf_wt mult_ac wt_pmf.rep_eq split: prod.split)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \"Quasi strong termination traces\""], ["", "abbreviation \"qsend \\<equiv> sfirst (holds discrCf)\""], ["", "lemma qsend_eq_0_iff: \"qsend cfT = 0 \\<longleftrightarrow> discrCf (shd cfT)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (qsend cfT = 0) = discrCf (shd cfT)", "by (simp add: sfirst.simps[of _ cfT])"], ["", "lemma qsend_eq_0[simp]: \"discrCf cf \\<Longrightarrow> qsend (cf ## \\<omega>) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discrCf cf \\<Longrightarrow> qsend (cf ## \\<omega>) = 0", "by (simp add: qsend_eq_0_iff)"], ["", "lemma alw_discrCf: \"enabled cf \\<omega> \\<Longrightarrow> discrCf cf \\<Longrightarrow> alw (holds discrCf) \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>enabled cf \\<omega>; discrCf cf\\<rbrakk>\n    \\<Longrightarrow> alw (holds discrCf) \\<omega>", "by (coinduction arbitrary: cf \\<omega>)\n     (auto simp add: HLD_iff elim: enabled.cases intro: discrCf_G simp del: split_paired_Ex)"], ["", "lemma alw_discrCf_indis':\n  \"enabled cf \\<omega> \\<Longrightarrow> discrCf cf \\<Longrightarrow> snd cf \\<approx> t \\<Longrightarrow> alw (holds (\\<lambda>cf'. snd cf' \\<approx> t)) \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>enabled cf \\<omega>; discrCf cf; snd cf \\<approx> t\\<rbrakk>\n    \\<Longrightarrow> alw (holds (\\<lambda>cf'. snd cf' \\<approx> t))\n                       \\<omega>", "proof (coinduction arbitrary: cf \\<omega>)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>cf \\<omega>.\n       \\<lbrakk>enabled cf \\<omega>; discrCf cf; snd cf \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs.\n                            \\<omega> = xs \\<and>\n                            holds (\\<lambda>cf'. snd cf' \\<approx> t)\n                             xs \\<and>\n                            ((\\<exists>cf \\<omega>.\n                                 stl xs = \\<omega> \\<and>\n                                 enabled cf \\<omega> \\<and>\n                                 discrCf cf \\<and> snd cf \\<approx> t) \\<or>\n                             alw (holds (\\<lambda>cf'. snd cf' \\<approx> t))\n                              (stl xs))", "case alw"], ["proof (state)\nthis:\n  enabled cf \\<omega>\n  discrCf cf\n  snd cf \\<approx> t\n\ngoal (1 subgoal):\n 1. \\<And>cf \\<omega>.\n       \\<lbrakk>enabled cf \\<omega>; discrCf cf; snd cf \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs.\n                            \\<omega> = xs \\<and>\n                            holds (\\<lambda>cf'. snd cf' \\<approx> t)\n                             xs \\<and>\n                            ((\\<exists>cf \\<omega>.\n                                 stl xs = \\<omega> \\<and>\n                                 enabled cf \\<omega> \\<and>\n                                 discrCf cf \\<and> snd cf \\<approx> t) \\<or>\n                             alw (holds (\\<lambda>cf'. snd cf' \\<approx> t))\n                              (stl xs))", "with discrCf_eff_indis[of cf]"], ["proof (chain)\npicking this:\n  \\<lbrakk>discrCf cf; ?i < brn (fst cf)\\<rbrakk>\n  \\<Longrightarrow> snd cf \\<approx> snd (cont_eff cf ?i)\n  enabled cf \\<omega>\n  discrCf cf\n  snd cf \\<approx> t", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>discrCf cf; ?i < brn (fst cf)\\<rbrakk>\n  \\<Longrightarrow> snd cf \\<approx> snd (cont_eff cf ?i)\n  enabled cf \\<omega>\n  discrCf cf\n  snd cf \\<approx> t\n\ngoal (1 subgoal):\n 1. \\<exists>xs.\n       \\<omega> = xs \\<and>\n       holds (\\<lambda>cf'. snd cf' \\<approx> t) xs \\<and>\n       ((\\<exists>cf \\<omega>.\n            stl xs = \\<omega> \\<and>\n            enabled cf \\<omega> \\<and>\n            discrCf cf \\<and> snd cf \\<approx> t) \\<or>\n        alw (holds (\\<lambda>cf'. snd cf' \\<approx> t)) (stl xs))", "by (auto simp add: HLD_iff enabled.simps[of _ \\<omega>] G_eq\n             simp del: split_paired_Ex discrCf_eff_indis\n             intro!: exI[of _ \"shd \\<omega>\"]\n             split: if_split_asm)\n       (blast intro: indis_trans indis_sym)+"], ["proof (state)\nthis:\n  \\<exists>xs.\n     \\<omega> = xs \\<and>\n     holds (\\<lambda>cf'. snd cf' \\<approx> t) xs \\<and>\n     ((\\<exists>cf \\<omega>.\n          stl xs = \\<omega> \\<and>\n          enabled cf \\<omega> \\<and>\n          discrCf cf \\<and> snd cf \\<approx> t) \\<or>\n      alw (holds (\\<lambda>cf'. snd cf' \\<approx> t)) (stl xs))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma alw_discrCf_indis:\n  \"enabled cf \\<omega> \\<Longrightarrow> discrCf cf \\<Longrightarrow> alw (holds (\\<lambda>cf'. snd cf' \\<approx> snd cf)) (cf ## \\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>enabled cf \\<omega>; discrCf cf\\<rbrakk>\n    \\<Longrightarrow> alw (holds (\\<lambda>cf'. snd cf' \\<approx> snd cf))\n                       (cf ## \\<omega>)", "using alw_discrCf_indis'[of cf \\<omega>, OF _ _ indis_refl]"], ["proof (prove)\nusing this:\n  \\<lbrakk>enabled cf \\<omega>; discrCf cf\\<rbrakk>\n  \\<Longrightarrow> alw (holds (\\<lambda>cf'. snd cf' \\<approx> snd cf))\n                     \\<omega>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>enabled cf \\<omega>; discrCf cf\\<rbrakk>\n    \\<Longrightarrow> alw (holds (\\<lambda>cf'. snd cf' \\<approx> snd cf))\n                       (cf ## \\<omega>)", "by (simp add: alw.simps[of _ \"cf ## \\<omega>\"] indis_refl)"], ["", "lemma enabled_sdrop: \"enabled cf \\<omega> \\<Longrightarrow> enabled ((cf ## \\<omega>) !! n) (sdrop n \\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enabled cf \\<omega> \\<Longrightarrow>\n    enabled ((cf ## \\<omega>) !! n) (sdrop n \\<omega>)", "proof (induction n arbitrary: cf \\<omega>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>cf \\<omega>.\n       enabled cf \\<omega> \\<Longrightarrow>\n       enabled ((cf ## \\<omega>) !! 0) (sdrop 0 \\<omega>)\n 2. \\<And>n cf \\<omega>.\n       \\<lbrakk>\\<And>cf \\<omega>.\n                   enabled cf \\<omega> \\<Longrightarrow>\n                   enabled ((cf ## \\<omega>) !! n) (sdrop n \\<omega>);\n        enabled cf \\<omega>\\<rbrakk>\n       \\<Longrightarrow> enabled ((cf ## \\<omega>) !! Suc n)\n                          (sdrop (Suc n) \\<omega>)", "case (Suc n)"], ["proof (state)\nthis:\n  enabled ?cf1 ?\\<omega>1 \\<Longrightarrow>\n  enabled ((?cf1 ## ?\\<omega>1) !! n) (sdrop n ?\\<omega>1)\n  enabled cf \\<omega>\n\ngoal (2 subgoals):\n 1. \\<And>cf \\<omega>.\n       enabled cf \\<omega> \\<Longrightarrow>\n       enabled ((cf ## \\<omega>) !! 0) (sdrop 0 \\<omega>)\n 2. \\<And>n cf \\<omega>.\n       \\<lbrakk>\\<And>cf \\<omega>.\n                   enabled cf \\<omega> \\<Longrightarrow>\n                   enabled ((cf ## \\<omega>) !! n) (sdrop n \\<omega>);\n        enabled cf \\<omega>\\<rbrakk>\n       \\<Longrightarrow> enabled ((cf ## \\<omega>) !! Suc n)\n                          (sdrop (Suc n) \\<omega>)", "from Suc.IH[of \"shd \\<omega>\" \"stl \\<omega>\"] Suc.prems"], ["proof (chain)\npicking this:\n  enabled (shd \\<omega>) (stl \\<omega>) \\<Longrightarrow>\n  enabled ((shd \\<omega> ## stl \\<omega>) !! n) (sdrop n (stl \\<omega>))\n  enabled cf \\<omega>", "show ?case"], ["proof (prove)\nusing this:\n  enabled (shd \\<omega>) (stl \\<omega>) \\<Longrightarrow>\n  enabled ((shd \\<omega> ## stl \\<omega>) !! n) (sdrop n (stl \\<omega>))\n  enabled cf \\<omega>\n\ngoal (1 subgoal):\n 1. enabled ((cf ## \\<omega>) !! Suc n) (sdrop (Suc n) \\<omega>)", "unfolding enabled.simps[of cf]"], ["proof (prove)\nusing this:\n  enabled (shd \\<omega>) (stl \\<omega>) \\<Longrightarrow>\n  enabled ((shd \\<omega> ## stl \\<omega>) !! n) (sdrop n (stl \\<omega>))\n  \\<exists>\\<omega> s.\n     cf = s \\<and>\n     \\<omega> = \\<omega> \\<and>\n     enabled (shd \\<omega>) (stl \\<omega>) \\<and> shd \\<omega> \\<in> G s\n\ngoal (1 subgoal):\n 1. enabled ((cf ## \\<omega>) !! Suc n) (sdrop (Suc n) \\<omega>)", "by simp"], ["proof (state)\nthis:\n  enabled ((cf ## \\<omega>) !! Suc n) (sdrop (Suc n) \\<omega>)\n\ngoal (1 subgoal):\n 1. \\<And>cf \\<omega>.\n       enabled cf \\<omega> \\<Longrightarrow>\n       enabled ((cf ## \\<omega>) !! 0) (sdrop 0 \\<omega>)", "qed simp"], ["", "lemma sfirst_eq_eSuc: \"sfirst P \\<omega> = eSuc n \\<longleftrightarrow> (\\<not> P \\<omega>) \\<and> sfirst P (stl \\<omega>) = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sfirst P \\<omega> = eSuc n) =\n    (\\<not> P \\<omega> \\<and> sfirst P (stl \\<omega>) = n)", "by (subst sfirst.simps) auto"], ["", "lemma qsend_snth: \"qsend \\<omega> = enat n \\<Longrightarrow> discrCf (\\<omega> !! n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qsend \\<omega> = enat n \\<Longrightarrow> discrCf (\\<omega> !! n)", "by (induction n arbitrary: \\<omega>)\n     (simp_all add: eSuc_enat[symmetric] enat_0 sfirst_eq_0 sfirst_eq_eSuc)"], ["", "lemma indis_iff: \"a \\<approx> d \\<Longrightarrow> b \\<approx> d \\<Longrightarrow> a \\<approx> c \\<longleftrightarrow> b \\<approx> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<approx> d; b \\<approx> d\\<rbrakk>\n    \\<Longrightarrow> (a \\<approx> c) = (b \\<approx> c)", "by (metis indis_trans indis_sym indis_refl)"], ["", "lemma enabled_qsend_indis:\n  assumes \"enabled cf \\<omega>\" \"qsend (cf ## \\<omega>) \\<le> n\" \"qsend (cf ## \\<omega>) \\<le> m\"\n  shows \"snd ((cf ## \\<omega>) !! n) \\<approx> t \\<longleftrightarrow> snd ((cf ## \\<omega>) !! m) \\<approx> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (snd ((cf ## \\<omega>) !! n) \\<approx> t) =\n    (snd ((cf ## \\<omega>) !! m) \\<approx> t)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (snd ((cf ## \\<omega>) !! n) \\<approx> t) =\n    (snd ((cf ## \\<omega>) !! m) \\<approx> t)", "from assms"], ["proof (chain)\npicking this:\n  enabled cf \\<omega>\n  qsend (cf ## \\<omega>) \\<le> enat n\n  qsend (cf ## \\<omega>) \\<le> enat m", "obtain N :: nat where N: \"qsend (cf ## \\<omega>) = N\""], ["proof (prove)\nusing this:\n  enabled cf \\<omega>\n  qsend (cf ## \\<omega>) \\<le> enat n\n  qsend (cf ## \\<omega>) \\<le> enat m\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        qsend (cf ## \\<omega>) = enat N \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"qsend (cf ## \\<omega>)\") auto"], ["proof (state)\nthis:\n  qsend (cf ## \\<omega>) = enat N\n\ngoal (1 subgoal):\n 1. (snd ((cf ## \\<omega>) !! n) \\<approx> t) =\n    (snd ((cf ## \\<omega>) !! m) \\<approx> t)", "note discr_N = qsend_snth[OF this] and sd = enabled_sdrop[OF assms(1), of N]"], ["proof (state)\nthis:\n  discrCf ((cf ## \\<omega>) !! N)\n  enabled ((cf ## \\<omega>) !! N) (sdrop N \\<omega>)\n\ngoal (1 subgoal):\n 1. (snd ((cf ## \\<omega>) !! n) \\<approx> t) =\n    (snd ((cf ## \\<omega>) !! m) \\<approx> t)", "have \"\\<And>\\<omega>. \\<omega> !! N ## sdrop N (stl \\<omega>) = sdrop N \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<omega>.\n       \\<omega> !! N ## sdrop N (stl \\<omega>) = sdrop N \\<omega>", "by (induct N) auto"], ["proof (state)\nthis:\n  ?\\<omega>1 !! N ## sdrop N (stl ?\\<omega>1) = sdrop N ?\\<omega>1\n\ngoal (1 subgoal):\n 1. (snd ((cf ## \\<omega>) !! n) \\<approx> t) =\n    (snd ((cf ## \\<omega>) !! m) \\<approx> t)", "from this[of \"cf ## \\<omega>\"]"], ["proof (chain)\npicking this:\n  (cf ## \\<omega>) !! N ## sdrop N (stl (cf ## \\<omega>)) =\n  sdrop N (cf ## \\<omega>)", "have eq: \"(cf ## \\<omega>) !! N ## sdrop N \\<omega> = sdrop N (cf ## \\<omega>)\""], ["proof (prove)\nusing this:\n  (cf ## \\<omega>) !! N ## sdrop N (stl (cf ## \\<omega>)) =\n  sdrop N (cf ## \\<omega>)\n\ngoal (1 subgoal):\n 1. (cf ## \\<omega>) !! N ## sdrop N \\<omega> = sdrop N (cf ## \\<omega>)", "by simp"], ["proof (state)\nthis:\n  (cf ## \\<omega>) !! N ## sdrop N \\<omega> = sdrop N (cf ## \\<omega>)\n\ngoal (1 subgoal):\n 1. (snd ((cf ## \\<omega>) !! n) \\<approx> t) =\n    (snd ((cf ## \\<omega>) !! m) \\<approx> t)", "from discr_N alw_discrCf_indis[OF sd _] assms(2,3)"], ["proof (chain)\npicking this:\n  discrCf ((cf ## \\<omega>) !! N)\n  discrCf ((cf ## \\<omega>) !! N) \\<Longrightarrow>\n  alw (holds (\\<lambda>cf'. snd cf' \\<approx> snd ((cf ## \\<omega>) !! N)))\n   ((cf ## \\<omega>) !! N ## sdrop N \\<omega>)\n  qsend (cf ## \\<omega>) \\<le> enat n\n  qsend (cf ## \\<omega>) \\<le> enat m", "show ?thesis"], ["proof (prove)\nusing this:\n  discrCf ((cf ## \\<omega>) !! N)\n  discrCf ((cf ## \\<omega>) !! N) \\<Longrightarrow>\n  alw (holds (\\<lambda>cf'. snd cf' \\<approx> snd ((cf ## \\<omega>) !! N)))\n   ((cf ## \\<omega>) !! N ## sdrop N \\<omega>)\n  qsend (cf ## \\<omega>) \\<le> enat n\n  qsend (cf ## \\<omega>) \\<le> enat m\n\ngoal (1 subgoal):\n 1. (snd ((cf ## \\<omega>) !! n) \\<approx> t) =\n    (snd ((cf ## \\<omega>) !! m) \\<approx> t)", "by (simp add: N alw_iff_sdrop le_iff_add[where 'a=nat] eq)\n       (metis indis_iff)"], ["proof (state)\nthis:\n  (snd ((cf ## \\<omega>) !! n) \\<approx> t) =\n  (snd ((cf ## \\<omega>) !! m) \\<approx> t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma enabled_imp_UNTIL_alw_discrCf:\n  \"enabled (shd \\<omega>) (stl \\<omega>) \\<Longrightarrow> (not (holds discrCf) until (alw (holds discrCf))) \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enabled (shd \\<omega>) (stl \\<omega>) \\<Longrightarrow>\n    ((\\<lambda>xs. \\<not> holds discrCf xs) until alw (holds discrCf))\n     \\<omega>", "proof (coinduction arbitrary: \\<omega>)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<omega>.\n       enabled (shd \\<omega>) (stl \\<omega>) \\<Longrightarrow>\n       (\\<exists>xs. \\<omega> = xs \\<and> alw (holds discrCf) xs) \\<or>\n       (\\<exists>xs.\n           \\<omega> = xs \\<and>\n           \\<not> holds discrCf xs \\<and>\n           ((\\<exists>\\<omega>.\n                stl xs = \\<omega> \\<and>\n                enabled (shd \\<omega>) (stl \\<omega>)) \\<or>\n            ((\\<lambda>xs. \\<not> holds discrCf xs) until\n             alw (holds discrCf))\n             (stl xs)))", "case UNTIL"], ["proof (state)\nthis:\n  enabled (shd \\<omega>) (stl \\<omega>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<omega>.\n       enabled (shd \\<omega>) (stl \\<omega>) \\<Longrightarrow>\n       (\\<exists>xs. \\<omega> = xs \\<and> alw (holds discrCf) xs) \\<or>\n       (\\<exists>xs.\n           \\<omega> = xs \\<and>\n           \\<not> holds discrCf xs \\<and>\n           ((\\<exists>\\<omega>.\n                stl xs = \\<omega> \\<and>\n                enabled (shd \\<omega>) (stl \\<omega>)) \\<or>\n            ((\\<lambda>xs. \\<not> holds discrCf xs) until\n             alw (holds discrCf))\n             (stl xs)))", "then"], ["proof (chain)\npicking this:\n  enabled (shd \\<omega>) (stl \\<omega>)", "show ?case"], ["proof (prove)\nusing this:\n  enabled (shd \\<omega>) (stl \\<omega>)\n\ngoal (1 subgoal):\n 1. (\\<exists>xs. \\<omega> = xs \\<and> alw (holds discrCf) xs) \\<or>\n    (\\<exists>xs.\n        \\<omega> = xs \\<and>\n        \\<not> holds discrCf xs \\<and>\n        ((\\<exists>\\<omega>.\n             stl xs = \\<omega> \\<and>\n             enabled (shd \\<omega>) (stl \\<omega>)) \\<or>\n         ((\\<lambda>xs. \\<not> holds discrCf xs) until alw (holds discrCf))\n          (stl xs)))", "using alw_discrCf[of \"shd \\<omega>\" \"stl \\<omega>\"]"], ["proof (prove)\nusing this:\n  enabled (shd \\<omega>) (stl \\<omega>)\n  \\<lbrakk>enabled (shd \\<omega>) (stl \\<omega>);\n   discrCf (shd \\<omega>)\\<rbrakk>\n  \\<Longrightarrow> alw (holds discrCf) (stl \\<omega>)\n\ngoal (1 subgoal):\n 1. (\\<exists>xs. \\<omega> = xs \\<and> alw (holds discrCf) xs) \\<or>\n    (\\<exists>xs.\n        \\<omega> = xs \\<and>\n        \\<not> holds discrCf xs \\<and>\n        ((\\<exists>\\<omega>.\n             stl xs = \\<omega> \\<and>\n             enabled (shd \\<omega>) (stl \\<omega>)) \\<or>\n         ((\\<lambda>xs. \\<not> holds discrCf xs) until alw (holds discrCf))\n          (stl xs)))", "by (cases \"discrCf (shd \\<omega>)\")\n       (simp_all add: enabled.simps[of \"shd \\<omega>\"] alw.simps[of _ \\<omega>])"], ["proof (state)\nthis:\n  (\\<exists>xs. \\<omega> = xs \\<and> alw (holds discrCf) xs) \\<or>\n  (\\<exists>xs.\n      \\<omega> = xs \\<and>\n      \\<not> holds discrCf xs \\<and>\n      ((\\<exists>\\<omega>.\n           stl xs = \\<omega> \\<and>\n           enabled (shd \\<omega>) (stl \\<omega>)) \\<or>\n       ((\\<lambda>xs. \\<not> holds discrCf xs) until alw (holds discrCf))\n        (stl xs)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma less_qsend_iff_not_discrCf:\n  \"enabled cf bT \\<Longrightarrow> n < qsend (cf ## bT) \\<longleftrightarrow> \\<not> discrCf ((cf ## bT) !! n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enabled cf bT \\<Longrightarrow>\n    (enat n < qsend (cf ## bT)) = (\\<not> discrCf ((cf ## bT) !! n))", "using enabled_imp_UNTIL_alw_discrCf[THEN less_sfirst_iff, of \"cf ## bT\"]"], ["proof (prove)\nusing this:\n  enabled (shd (cf ## bT)) (stl (cf ## bT)) \\<Longrightarrow>\n  (enat ?n < qsend (cf ## bT)) =\n  (\\<not> holds discrCf (sdrop ?n (cf ## bT)))\n\ngoal (1 subgoal):\n 1. enabled cf bT \\<Longrightarrow>\n    (enat n < qsend (cf ## bT)) = (\\<not> discrCf ((cf ## bT) !! n))", "by (simp add: holds.simps[abs_def])"], ["", "subsection \"Terminating configurations\""], ["", "definition \"qstermCf cf \\<longleftrightarrow> (\\<forall>cfT. enabled cf cfT \\<longrightarrow> qsend (cf ## cfT) < \\<infinity>)\""], ["", "lemma qstermCf_E:\n  \"qstermCf cf \\<Longrightarrow> cf' \\<in> G cf \\<Longrightarrow> qstermCf cf'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>qstermCf cf; cf' \\<in> G cf\\<rbrakk>\n    \\<Longrightarrow> qstermCf cf'", "apply (auto simp: qstermCf_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>cfT.\n       \\<lbrakk>\\<forall>cfT.\n                   enabled cf cfT \\<longrightarrow>\n                   (\\<exists>i. qsend (cf ## cfT) = enat i);\n        cf' \\<in> G cf; enabled cf' cfT\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. qsend (cf' ## cfT) = enat i", "apply (erule_tac x=\"cf' ## cfT\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>cfT.\n       \\<lbrakk>cf' \\<in> G cf; enabled cf' cfT;\n        enabled cf (cf' ## cfT) \\<longrightarrow>\n        (\\<exists>i. qsend (cf ## cf' ## cfT) = enat i)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. qsend (cf' ## cfT) = enat i", "apply (auto simp: sfirst_Stream intro: enat_0 discrCf_G split: if_split_asm intro: enabled.intros)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "abbreviation \"eff_at cf bT n \\<equiv> snd ((cf ## bT) !! n)\""], ["", "abbreviation \"cont_at cf bT n \\<equiv> fst ((cf ## bT) !! n)\""], ["", "definition \"amSec c \\<longleftrightarrow> (\\<forall>s1 s2 n t. s1 \\<approx> s2 \\<longrightarrow>\n  \\<P>(bT in T.T (c, s1). eff_at (c, s1) bT n \\<approx> t) =\n  \\<P>(bT in T.T (c, s2). eff_at (c, s2) bT n \\<approx> t))\""], ["", "definition \"eSec c \\<longleftrightarrow> (\\<forall>s1 s2 t. s1 \\<approx> s2 \\<longrightarrow>\n  \\<P>(bT in T.T (c, s1). \\<exists>n. qsend ((c, s1) ## bT) = n \\<and> eff_at (c, s1) bT n \\<approx> t) =\n  \\<P>(bT in T.T (c, s2). \\<exists>n. qsend ((c, s2) ## bT) = n \\<and> eff_at (c, s2) bT n \\<approx> t))\""], ["", "definition \"aeT c \\<longleftrightarrow> (\\<forall>s. AE bT in T.T (c,s). qsend ((c,s) ## bT) < \\<infinity>)\""], ["", "lemma dist_Ps_upper_bound:\n  fixes cf1 cf2 :: \"('test, 'atom, 'choice) cmd \\<times> 'state\" and s :: \"'state\" and S\n  defines \"S cf bT \\<equiv> \\<exists>n. qsend (cf ## bT) = n \\<and> eff_at cf bT n \\<approx> s\"\n  defines \"Ps cf \\<equiv> \\<P>(bT in T.T cf. S cf bT)\"\n  defines \"N cf n bT \\<equiv> \\<not> discrCf ((cf ## bT) !! n)\"\n  defines \"Pn cf n \\<equiv> \\<P>(bT in T.T cf. N cf n bT)\"\n  assumes bisim: \"proper (fst cf1)\" \"proper (fst cf2)\" \"fst cf1 \\<approx>01 fst cf2\" \"snd cf1 \\<approx> snd cf2\"\n  shows \"dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "using bisim"], ["proof (prove)\nusing this:\n  proper (fst cf1)\n  proper (fst cf2)\n  fst cf1 \\<approx>01 fst cf2\n  snd cf1 \\<approx> snd cf2\n\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "proof (induct n m arbitrary: cf1 cf2 rule: nat_nat_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "case (less n m)"], ["proof (state)\nthis:\n  \\<lbrakk>?j1 + ?k1 < n + m; proper (fst ?cf1.1); proper (fst ?cf2.1);\n   fst ?cf1.1 \\<approx>01 fst ?cf2.1;\n   snd ?cf1.1 \\<approx> snd ?cf2.1\\<rbrakk>\n  \\<Longrightarrow> dist (Ps ?cf1.1) (Ps ?cf2.1)\n                    \\<le> Pn ?cf1.1 ?j1 + Pn ?cf2.1 ?k1\n  proper (fst cf1)\n  proper (fst cf2)\n  fst cf1 \\<approx>01 fst cf2\n  snd cf1 \\<approx> snd cf2\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "note \\<open>proper (fst cf1)\\<close>[simp, intro]"], ["proof (state)\nthis:\n  proper (fst cf1)\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "note \\<open>proper (fst cf2)\\<close>[simp, intro]"], ["proof (state)\nthis:\n  proper (fst cf2)\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "define W where \"W c = sum (wt (fst c) (snd c))\" for c"], ["proof (state)\nthis:\n  W ?c = sum (wt (fst ?c) (snd ?c))\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "from ZObis_mC_ZOC[OF \\<open>fst cf1 \\<approx>01 fst cf2\\<close> \\<open>snd cf1 \\<approx> snd cf2\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>I0 P F.\n     mC_ZOC ZObis (fst cf1) (fst cf2) (snd cf1) (snd cf2) I0 P F", "obtain I0 P F where mC: \"mC_ZOC ZObis (fst cf1) (fst cf2) (snd cf1) (snd cf2) I0 P F\""], ["proof (prove)\nusing this:\n  \\<exists>I0 P F.\n     mC_ZOC ZObis (fst cf1) (fst cf2) (snd cf1) (snd cf2) I0 P F\n\ngoal (1 subgoal):\n 1. (\\<And>I0 P F.\n        mC_ZOC ZObis (fst cf1) (fst cf2) (snd cf1) (snd cf2) I0 P\n         F \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  mC_ZOC ZObis (fst cf1) (fst cf2) (snd cf1) (snd cf2) I0 P F\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "then"], ["proof (chain)\npicking this:\n  mC_ZOC ZObis (fst cf1) (fst cf2) (snd cf1) (snd cf2) I0 P F", "have P: \"{} \\<notin> P - {I0}\" \"part {..<brn (fst cf1)} P\" and \"I0 \\<in> P\"\n    and FP: \"{} \\<notin> F`(P-{I0})\" \"part {..<brn (fst cf2)} (F`P)\" \"inj_on F P\"\n    and eff: \"\\<And>q i j. q\\<in>P \\<Longrightarrow> q\\<noteq>I0 \\<Longrightarrow> i\\<in>q \\<Longrightarrow> j\\<in>F q \\<Longrightarrow> eff (fst cf1) (snd cf1) i \\<approx> eff (fst cf2) (snd cf2) j\"\n    and cont: \"\\<And>q i j. q\\<in>P \\<Longrightarrow> q\\<noteq>I0 \\<Longrightarrow> i\\<in>q \\<Longrightarrow> j\\<in>F q \\<Longrightarrow> cont (fst cf1) (snd cf1) i \\<approx>01 cont (fst cf2) (snd cf2) j\"\n    and wt:\n      \"\\<And>I. I \\<in> P - {I0} \\<Longrightarrow> W cf1 I0 < 1 \\<Longrightarrow> W cf2 (F I0) < 1 \\<Longrightarrow>\n      W cf1 I / (1 - W cf1 I0) = W cf2 (F I) / (1 - W cf2 (F I0))\"\n    and I0:\n      \"\\<And>i. i \\<in> I0 \\<Longrightarrow> snd cf1 \\<approx> eff (fst cf1) (snd cf1) i\"\n      \"\\<And>i. i \\<in> I0 \\<Longrightarrow> cont (fst cf1) (snd cf1) i \\<approx>01 fst cf2\"\n    and FI0:\n      \"\\<And>i. i \\<in> F I0 \\<Longrightarrow> snd cf2 \\<approx> eff (fst cf2) (snd cf2) i\"\n      \"\\<And>i. i \\<in> F I0 \\<Longrightarrow> fst cf1 \\<approx>01 cont (fst cf2) (snd cf2) i\""], ["proof (prove)\nusing this:\n  mC_ZOC ZObis (fst cf1) (fst cf2) (snd cf1) (snd cf2) I0 P F\n\ngoal (1 subgoal):\n 1. ((({} \\<notin> P - {I0} &&& part {..<brn (fst cf1)} P) &&&\n      I0 \\<in> P) &&&\n     ({} \\<notin> F ` (P - {I0}) &&&\n      part {..<brn (fst cf2)} (F ` P) &&& inj_on F P) &&&\n     (\\<And>q i j.\n         \\<lbrakk>q \\<in> P; q \\<noteq> I0; i \\<in> q; j \\<in> F q\\<rbrakk>\n         \\<Longrightarrow> eff (fst cf1) (snd cf1) i \\<approx>\n                           eff (fst cf2) (snd cf2) j)) &&&\n    ((\\<And>q i j.\n         \\<lbrakk>q \\<in> P; q \\<noteq> I0; i \\<in> q; j \\<in> F q\\<rbrakk>\n         \\<Longrightarrow> local.cont (fst cf1) (snd cf1) i \\<approx>01\n                           local.cont (fst cf2) (snd cf2) j) &&&\n     (\\<And>I.\n         \\<lbrakk>I \\<in> P - {I0}; W cf1 I0 < 1; W cf2 (F I0) < 1\\<rbrakk>\n         \\<Longrightarrow> W cf1 I / (1 - W cf1 I0) =\n                           W cf2 (F I) / (1 - W cf2 (F I0)))) &&&\n    ((\\<And>i.\n         i \\<in> I0 \\<Longrightarrow>\n         snd cf1 \\<approx> eff (fst cf1) (snd cf1) i) &&&\n     (\\<And>i.\n         i \\<in> I0 \\<Longrightarrow>\n         local.cont (fst cf1) (snd cf1) i \\<approx>01 fst cf2)) &&&\n    (\\<And>i.\n        i \\<in> F I0 \\<Longrightarrow>\n        snd cf2 \\<approx> eff (fst cf2) (snd cf2) i) &&&\n    (\\<And>i.\n        i \\<in> F I0 \\<Longrightarrow>\n        fst cf1 \\<approx>01 local.cont (fst cf2) (snd cf2) i)", "unfolding mC_ZOC_def mC_ZOC_part_def mC_ZOC_eff_cont_def mC_ZOC_eff_cont0_def mC_ZOC_wt_def W_def"], ["proof (prove)\nusing this:\n  ({} \\<notin> P - {I0} \\<and>\n   {} \\<notin> F ` (P - {I0}) \\<and>\n   I0 \\<in> P \\<and>\n   part {..<brn (fst cf1)} P \\<and> part {..<brn (fst cf2)} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  (sum (wt (fst cf1) (snd cf1)) I0 < 1 \\<and>\n   sum (wt (fst cf2) (snd cf2)) (F I0) < 1 \\<longrightarrow>\n   (\\<forall>I\\<in>P - {I0}.\n       sum (wt (fst cf1) (snd cf1)) I /\n       (1 - sum (wt (fst cf1) (snd cf1)) I0) =\n       sum (wt (fst cf2) (snd cf2)) (F I) /\n       (1 - sum (wt (fst cf2) (snd cf2)) (F I0)))) \\<and>\n  ((\\<forall>i\\<in>I0.\n       snd cf1 \\<approx> eff (fst cf1) (snd cf1) i \\<and>\n       local.cont (fst cf1) (snd cf1) i \\<approx>01 fst cf2) \\<and>\n   (\\<forall>j\\<in>F I0.\n       snd cf2 \\<approx> eff (fst cf2) (snd cf2) j \\<and>\n       fst cf1 \\<approx>01 local.cont (fst cf2) (snd cf2) j)) \\<and>\n  (\\<forall>I i j.\n      I \\<in> P - {I0} \\<and> i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n      eff (fst cf1) (snd cf1) i \\<approx> eff (fst cf2) (snd cf2) j \\<and>\n      local.cont (fst cf1) (snd cf1) i \\<approx>01\n      local.cont (fst cf2) (snd cf2) j)\n\ngoal (1 subgoal):\n 1. ((({} \\<notin> P - {I0} &&& part {..<brn (fst cf1)} P) &&&\n      I0 \\<in> P) &&&\n     ({} \\<notin> F ` (P - {I0}) &&&\n      part {..<brn (fst cf2)} (F ` P) &&& inj_on F P) &&&\n     (\\<And>q i j.\n         \\<lbrakk>q \\<in> P; q \\<noteq> I0; i \\<in> q; j \\<in> F q\\<rbrakk>\n         \\<Longrightarrow> eff (fst cf1) (snd cf1) i \\<approx>\n                           eff (fst cf2) (snd cf2) j)) &&&\n    ((\\<And>q i j.\n         \\<lbrakk>q \\<in> P; q \\<noteq> I0; i \\<in> q; j \\<in> F q\\<rbrakk>\n         \\<Longrightarrow> local.cont (fst cf1) (snd cf1) i \\<approx>01\n                           local.cont (fst cf2) (snd cf2) j) &&&\n     (\\<And>I.\n         \\<lbrakk>I \\<in> P - {I0}; sum (wt (fst cf1) (snd cf1)) I0 < 1;\n          sum (wt (fst cf2) (snd cf2)) (F I0) < 1\\<rbrakk>\n         \\<Longrightarrow> sum (wt (fst cf1) (snd cf1)) I /\n                           (1 - sum (wt (fst cf1) (snd cf1)) I0) =\n                           sum (wt (fst cf2) (snd cf2)) (F I) /\n                           (1 - sum (wt (fst cf2) (snd cf2)) (F I0)))) &&&\n    ((\\<And>i.\n         i \\<in> I0 \\<Longrightarrow>\n         snd cf1 \\<approx> eff (fst cf1) (snd cf1) i) &&&\n     (\\<And>i.\n         i \\<in> I0 \\<Longrightarrow>\n         local.cont (fst cf1) (snd cf1) i \\<approx>01 fst cf2)) &&&\n    (\\<And>i.\n        i \\<in> F I0 \\<Longrightarrow>\n        snd cf2 \\<approx> eff (fst cf2) (snd cf2) i) &&&\n    (\\<And>i.\n        i \\<in> F I0 \\<Longrightarrow>\n        fst cf1 \\<approx>01 local.cont (fst cf2) (snd cf2) i)", "by simp_all"], ["proof (state)\nthis:\n  {} \\<notin> P - {I0}\n  part {..<brn (fst cf1)} P\n  I0 \\<in> P\n  {} \\<notin> F ` (P - {I0})\n  part {..<brn (fst cf2)} (F ` P)\n  inj_on F P\n  \\<lbrakk>?q1 \\<in> P; ?q1 \\<noteq> I0; ?i1 \\<in> ?q1;\n   ?j1 \\<in> F ?q1\\<rbrakk>\n  \\<Longrightarrow> eff (fst cf1) (snd cf1) ?i1 \\<approx>\n                    eff (fst cf2) (snd cf2) ?j1\n  \\<lbrakk>?q1 \\<in> P; ?q1 \\<noteq> I0; ?i1 \\<in> ?q1;\n   ?j1 \\<in> F ?q1\\<rbrakk>\n  \\<Longrightarrow> local.cont (fst cf1) (snd cf1) ?i1 \\<approx>01\n                    local.cont (fst cf2) (snd cf2) ?j1\n  \\<lbrakk>?I1 \\<in> P - {I0}; W cf1 I0 < 1; W cf2 (F I0) < 1\\<rbrakk>\n  \\<Longrightarrow> W cf1 ?I1 / (1 - W cf1 I0) =\n                    W cf2 (F ?I1) / (1 - W cf2 (F I0))\n  ?i1 \\<in> I0 \\<Longrightarrow>\n  snd cf1 \\<approx> eff (fst cf1) (snd cf1) ?i1\n  ?i1 \\<in> I0 \\<Longrightarrow>\n  local.cont (fst cf1) (snd cf1) ?i1 \\<approx>01 fst cf2\n  ?i1 \\<in> F I0 \\<Longrightarrow>\n  snd cf2 \\<approx> eff (fst cf2) (snd cf2) ?i1\n  ?i1 \\<in> F I0 \\<Longrightarrow>\n  fst cf1 \\<approx>01 local.cont (fst cf2) (snd cf2) ?i1\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have \"finite P\" \"inj_on F (P - {I0})\" and FP': \"finite (F`P)\" \"F I0 \\<in> F`P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (finite P &&& inj_on F (P - {I0})) &&&\n    finite (F ` P) &&& F I0 \\<in> F ` P", "using finite_part[OF _ P(2)] finite_part[OF _ FP(2)] \\<open>I0 \\<in> P\\<close> \\<open>inj_on F P\\<close>"], ["proof (prove)\nusing this:\n  finite {..<brn (fst cf1)} \\<Longrightarrow> finite P\n  finite {..<brn (fst cf2)} \\<Longrightarrow> finite (F ` P)\n  I0 \\<in> P\n  inj_on F P\n\ngoal (1 subgoal):\n 1. (finite P &&& inj_on F (P - {I0})) &&&\n    finite (F ` P) &&& F I0 \\<in> F ` P", "by (auto intro: inj_on_diff)"], ["proof (state)\nthis:\n  finite P\n  inj_on F (P - {I0})\n  finite (F ` P)\n  F I0 \\<in> F ` P\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "{"], ["proof (state)\nthis:\n  finite P\n  inj_on F (P - {I0})\n  finite (F ` P)\n  F I0 \\<in> F ` P\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "fix I i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "assume \"I \\<in> P\" \"i \\<in> I\""], ["proof (state)\nthis:\n  I \\<in> P\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "with P"], ["proof (chain)\npicking this:\n  {} \\<notin> P - {I0}\n  part {..<brn (fst cf1)} P\n  I \\<in> P\n  i \\<in> I", "have \"0 \\<le> wt (fst cf1) (snd cf1) i\""], ["proof (prove)\nusing this:\n  {} \\<notin> P - {I0}\n  part {..<brn (fst cf1)} P\n  I \\<in> P\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. 0 \\<le> wt (fst cf1) (snd cf1) i", "by (auto dest: part_is_subset intro!: wt_ge_0)"], ["proof (state)\nthis:\n  0 \\<le> wt (fst cf1) (snd cf1) i\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?I3 \\<in> P; ?i3 \\<in> ?I3\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> wt (fst cf1) (snd cf1) ?i3\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "note wt1_nneg[intro] = this"], ["proof (state)\nthis:\n  \\<lbrakk>?I3 \\<in> P; ?i3 \\<in> ?I3\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> wt (fst cf1) (snd cf1) ?i3\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?I3 \\<in> P; ?i3 \\<in> ?I3\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> wt (fst cf1) (snd cf1) ?i3\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "fix I i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "assume \"I \\<in> P\" \"i \\<in> F I\""], ["proof (state)\nthis:\n  I \\<in> P\n  i \\<in> F I\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "with FP"], ["proof (chain)\npicking this:\n  {} \\<notin> F ` (P - {I0})\n  part {..<brn (fst cf2)} (F ` P)\n  inj_on F P\n  I \\<in> P\n  i \\<in> F I", "have \"0 \\<le> wt (fst cf2) (snd cf2) i\""], ["proof (prove)\nusing this:\n  {} \\<notin> F ` (P - {I0})\n  part {..<brn (fst cf2)} (F ` P)\n  inj_on F P\n  I \\<in> P\n  i \\<in> F I\n\ngoal (1 subgoal):\n 1. 0 \\<le> wt (fst cf2) (snd cf2) i", "by (auto dest: part_is_subset intro!: wt_ge_0)"], ["proof (state)\nthis:\n  0 \\<le> wt (fst cf2) (snd cf2) i\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?I3 \\<in> P; ?i3 \\<in> F ?I3\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> wt (fst cf2) (snd cf2) ?i3\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "note wt2_nneg[intro] = this"], ["proof (state)\nthis:\n  \\<lbrakk>?I3 \\<in> P; ?i3 \\<in> F ?I3\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> wt (fst cf2) (snd cf2) ?i3\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?I3 \\<in> P; ?i3 \\<in> F ?I3\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> wt (fst cf2) (snd cf2) ?i3\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "fix I"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "assume \"I \\<in> P\""], ["proof (state)\nthis:\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "then"], ["proof (chain)\npicking this:\n  I \\<in> P", "have \"0 \\<le> W cf1 I\""], ["proof (prove)\nusing this:\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. 0 \\<le> W cf1 I", "unfolding W_def"], ["proof (prove)\nusing this:\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. 0 \\<le> sum (wt (fst cf1) (snd cf1)) I", "by (auto intro!: sum_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> W cf1 I\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "}"], ["proof (state)\nthis:\n  ?I3 \\<in> P \\<Longrightarrow> 0 \\<le> W cf1 ?I3\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "note W1_nneg[intro] = this"], ["proof (state)\nthis:\n  ?I3 \\<in> P \\<Longrightarrow> 0 \\<le> W cf1 ?I3\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "{"], ["proof (state)\nthis:\n  ?I3 \\<in> P \\<Longrightarrow> 0 \\<le> W cf1 ?I3\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "fix I"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "assume \"I \\<in> P\""], ["proof (state)\nthis:\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "then"], ["proof (chain)\npicking this:\n  I \\<in> P", "have \"0 \\<le> W cf2 (F I)\""], ["proof (prove)\nusing this:\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. 0 \\<le> W cf2 (F I)", "unfolding W_def"], ["proof (prove)\nusing this:\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. 0 \\<le> sum (wt (fst cf2) (snd cf2)) (F I)", "by (auto intro!: sum_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> W cf2 (F I)\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "}"], ["proof (state)\nthis:\n  ?I3 \\<in> P \\<Longrightarrow> 0 \\<le> W cf2 (F ?I3)\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "note W2_nneg[intro] = this"], ["proof (state)\nthis:\n  ?I3 \\<in> P \\<Longrightarrow> 0 \\<le> W cf2 (F ?I3)\n\ngoal (1 subgoal):\n 1. \\<And>n m cf1 cf2.\n       \\<lbrakk>\\<And>j k cf1 cf2.\n                   \\<lbrakk>j + k < n + m; proper (fst cf1);\n                    proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> dist (Ps cf1) (Ps cf2)\n                                     \\<le> Pn cf1 j + Pn cf2 k;\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>01 fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. \\<not> ?P \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. \\<not> ?P \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "fix n cf1 cf2"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    dist (Ps cf1a__) (Ps cf2a__) \\<le> Pn cf1a__ na__ + Pn cf2a__ m\n 2. \\<not> ?P \\<Longrightarrow>\n    dist (Ps cf1a__) (Ps cf2a__) \\<le> Pn cf1a__ na__ + Pn cf2a__ m", "assume *: \"fst cf1 \\<approx>01 fst cf2\" \"snd cf1 \\<approx> snd cf2\""], ["proof (state)\nthis:\n  fst cf1 \\<approx>01 fst cf2\n  snd cf1 \\<approx> snd cf2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    dist (Ps cf1a__) (Ps cf2a__) \\<le> Pn cf1a__ na__ + Pn cf2a__ m\n 2. \\<not> ?P \\<Longrightarrow>\n    dist (Ps cf1a__) (Ps cf2a__) \\<le> Pn cf1a__ na__ + Pn cf2a__ m", "have \"dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0\n 2. \\<not> ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0", "assume cf1: \"discrCf cf1\""], ["proof (state)\nthis:\n  discrCf cf1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0\n 2. \\<not> ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0", "moreover"], ["proof (state)\nthis:\n  discrCf cf1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0\n 2. \\<not> ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0", "note cf2 = ZObis_pres_discrCfR[OF cf1 *]"], ["proof (state)\nthis:\n  discrCf cf2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0\n 2. \\<not> ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0", "from cf1 cf2"], ["proof (chain)\npicking this:\n  discrCf cf1\n  discrCf cf2", "have \"S cf1 = (\\<lambda>bT. snd cf1 \\<approx> s)\" \"S cf2 = (\\<lambda>bT. snd cf2 \\<approx> s)\""], ["proof (prove)\nusing this:\n  discrCf cf1\n  discrCf cf2\n\ngoal (1 subgoal):\n 1. S cf1 = (\\<lambda>bT. snd cf1 \\<approx> s) &&&\n    S cf2 = (\\<lambda>bT. snd cf2 \\<approx> s)", "unfolding S_def[abs_def]"], ["proof (prove)\nusing this:\n  discrCf cf1\n  discrCf cf2\n\ngoal (1 subgoal):\n 1. (\\<lambda>bT.\n        \\<exists>n.\n           qsend (cf1 ## bT) = enat n \\<and>\n           snd ((cf1 ## bT) !! n) \\<approx> s) =\n    (\\<lambda>bT. snd cf1 \\<approx> s) &&&\n    (\\<lambda>bT.\n        \\<exists>n.\n           qsend (cf2 ## bT) = enat n \\<and>\n           snd ((cf2 ## bT) !! n) \\<approx> s) =\n    (\\<lambda>bT. snd cf2 \\<approx> s)", "by (auto simp: enat_0[symmetric])"], ["proof (state)\nthis:\n  S cf1 = (\\<lambda>bT. snd cf1 \\<approx> s)\n  S cf2 = (\\<lambda>bT. snd cf2 \\<approx> s)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0\n 2. \\<not> ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0", "moreover"], ["proof (state)\nthis:\n  S cf1 = (\\<lambda>bT. snd cf1 \\<approx> s)\n  S cf2 = (\\<lambda>bT. snd cf2 \\<approx> s)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0\n 2. \\<not> ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0", "from \\<open>snd cf1 \\<approx> snd cf2\\<close>"], ["proof (chain)\npicking this:\n  snd cf1 \\<approx> snd cf2", "have \"snd cf1 \\<approx> s \\<longleftrightarrow> snd cf2 \\<approx> s\""], ["proof (prove)\nusing this:\n  snd cf1 \\<approx> snd cf2\n\ngoal (1 subgoal):\n 1. (snd cf1 \\<approx> s) = (snd cf2 \\<approx> s)", "by (blast intro: indis_sym indis_trans)"], ["proof (state)\nthis:\n  (snd cf1 \\<approx> s) = (snd cf2 \\<approx> s)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0\n 2. \\<not> ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0", "ultimately"], ["proof (chain)\npicking this:\n  discrCf cf1\n  S cf1 = (\\<lambda>bT. snd cf1 \\<approx> s)\n  S cf2 = (\\<lambda>bT. snd cf2 \\<approx> s)\n  (snd cf1 \\<approx> s) = (snd cf2 \\<approx> s)", "show ?thesis"], ["proof (prove)\nusing this:\n  discrCf cf1\n  S cf1 = (\\<lambda>bT. snd cf1 \\<approx> s)\n  S cf2 = (\\<lambda>bT. snd cf2 \\<approx> s)\n  (snd cf1 \\<approx> s) = (snd cf2 \\<approx> s)\n\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0", "using T.prob_space"], ["proof (prove)\nusing this:\n  discrCf cf1\n  S cf1 = (\\<lambda>bT. snd cf1 \\<approx> s)\n  S cf2 = (\\<lambda>bT. snd cf2 \\<approx> s)\n  (snd cf1 \\<approx> s) = (snd cf2 \\<approx> s)\n  T.prob ?s (space (T ?s)) = 1\n\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0", "by (cases \"snd cf2 \\<approx> s\") (simp_all add: Ps_def Pn_def measure_nonneg)"], ["proof (state)\nthis:\n  dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0\n\ngoal (1 subgoal):\n 1. \\<not> discrCf cf1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> discrCf cf1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0", "assume cf1: \"\\<not> discrCf cf1\""], ["proof (state)\nthis:\n  \\<not> discrCf cf1\n\ngoal (1 subgoal):\n 1. \\<not> discrCf cf1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0", "then"], ["proof (chain)\npicking this:\n  \\<not> discrCf cf1", "have \"Pn cf1 0 = 1\""], ["proof (prove)\nusing this:\n  \\<not> discrCf cf1\n\ngoal (1 subgoal):\n 1. Pn cf1 0 = 1", "using T.prob_space"], ["proof (prove)\nusing this:\n  \\<not> discrCf cf1\n  T.prob ?s (space (T ?s)) = 1\n\ngoal (1 subgoal):\n 1. Pn cf1 0 = 1", "by (simp add: Pn_def N_def)"], ["proof (state)\nthis:\n  Pn cf1 0 = 1\n\ngoal (1 subgoal):\n 1. \\<not> discrCf cf1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0", "moreover"], ["proof (state)\nthis:\n  Pn cf1 0 = 1\n\ngoal (1 subgoal):\n 1. \\<not> discrCf cf1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0", "have \"dist (Ps cf1) (Ps cf2) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2) \\<le> 1", "using dist_nonneg_bounded[where u=1 and l=0 and x=\"Ps cf1\" and y=\"Ps cf2\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> Ps cf1; Ps cf1 \\<le> 1; 0 \\<le> Ps cf2;\n   Ps cf2 \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> 1 - 0\n\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2) \\<le> 1", "by (auto simp add: dist_real_def Ps_def measure_nonneg split: abs_split)"], ["proof (state)\nthis:\n  dist (Ps cf1) (Ps cf2) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<not> discrCf cf1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0", "ultimately"], ["proof (chain)\npicking this:\n  Pn cf1 0 = 1\n  dist (Ps cf1) (Ps cf2) \\<le> 1", "show ?thesis"], ["proof (prove)\nusing this:\n  Pn cf1 0 = 1\n  dist (Ps cf1) (Ps cf2) \\<le> 1\n\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0", "by simp"], ["proof (state)\nthis:\n  dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    dist (Ps cf1a__) (Ps cf2a__) \\<le> Pn cf1a__ na__ + Pn cf2a__ m\n 2. \\<not> ?P \\<Longrightarrow>\n    dist (Ps cf1a__) (Ps cf2a__) \\<le> Pn cf1a__ na__ + Pn cf2a__ m", "}"], ["proof (state)\nthis:\n  \\<lbrakk>fst ?cf1b3 \\<approx>01 fst ?cf2b3;\n   snd ?cf1b3 \\<approx> snd ?cf2b3\\<rbrakk>\n  \\<Longrightarrow> dist (Ps ?cf1b3) (Ps ?cf2b3) \\<le> Pn ?cf1b3 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. \\<not> ?P \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "note base_case = this"], ["proof (state)\nthis:\n  \\<lbrakk>fst ?cf1b3 \\<approx>01 fst ?cf2b3;\n   snd ?cf1b3 \\<approx> snd ?cf2b3\\<rbrakk>\n  \\<Longrightarrow> dist (Ps ?cf1b3) (Ps ?cf2b3) \\<le> Pn ?cf1b3 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. \\<not> ?P \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "assume \"n = 0 \\<or> m = 0\""], ["proof (state)\nthis:\n  n = 0 \\<or> m = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. \\<not> ?P \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "then"], ["proof (chain)\npicking this:\n  n = 0 \\<or> m = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0 \\<or> m = 0\n\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. m = 0 \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "assume \"n = 0\""], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. m = 0 \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "moreover"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. m = 0 \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "with T.prob_space \\<open>fst cf1 \\<approx>01 fst cf2\\<close> \\<open>snd cf1 \\<approx> snd cf2\\<close>"], ["proof (chain)\npicking this:\n  T.prob ?s (space (T ?s)) = 1\n  fst cf1 \\<approx>01 fst cf2\n  snd cf1 \\<approx> snd cf2\n  n = 0", "have \"dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0\""], ["proof (prove)\nusing this:\n  T.prob ?s (space (T ?s)) = 1\n  fst cf1 \\<approx>01 fst cf2\n  snd cf1 \\<approx> snd cf2\n  n = 0\n\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0", "by (intro base_case) (auto simp: Ps_def Pn_def)"], ["proof (state)\nthis:\n  dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. m = 0 \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "moreover"], ["proof (state)\nthis:\n  dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. m = 0 \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have \"0 \\<le> Pn cf2 m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Pn cf2 m", "by (simp add: Pn_def measure_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> Pn cf2 m\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. m = 0 \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "ultimately"], ["proof (chain)\npicking this:\n  n = 0\n  dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0\n  0 \\<le> Pn cf2 m", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n  dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 0\n  0 \\<le> Pn cf2 m\n\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "by simp"], ["proof (state)\nthis:\n  dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n\ngoal (1 subgoal):\n 1. m = 0 \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. m = 0 \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "assume \"m = 0\""], ["proof (state)\nthis:\n  m = 0\n\ngoal (1 subgoal):\n 1. m = 0 \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "moreover"], ["proof (state)\nthis:\n  m = 0\n\ngoal (1 subgoal):\n 1. m = 0 \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "with T.prob_space \\<open>fst cf1 \\<approx>01 fst cf2\\<close> \\<open>snd cf1 \\<approx> snd cf2\\<close>"], ["proof (chain)\npicking this:\n  T.prob ?s (space (T ?s)) = 1\n  fst cf1 \\<approx>01 fst cf2\n  snd cf1 \\<approx> snd cf2\n  m = 0", "have \"dist (Ps cf2) (Ps cf1) \\<le> Pn cf2 0\""], ["proof (prove)\nusing this:\n  T.prob ?s (space (T ?s)) = 1\n  fst cf1 \\<approx>01 fst cf2\n  snd cf1 \\<approx> snd cf2\n  m = 0\n\ngoal (1 subgoal):\n 1. dist (Ps cf2) (Ps cf1) \\<le> Pn cf2 0", "by (intro base_case) (auto simp: Ps_def Pn_def intro: indis_sym ZObis_sym)"], ["proof (state)\nthis:\n  dist (Ps cf2) (Ps cf1) \\<le> Pn cf2 0\n\ngoal (1 subgoal):\n 1. m = 0 \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "moreover"], ["proof (state)\nthis:\n  dist (Ps cf2) (Ps cf1) \\<le> Pn cf2 0\n\ngoal (1 subgoal):\n 1. m = 0 \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have \"0 \\<le> Pn cf1 n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Pn cf1 n", "by (simp add: Pn_def measure_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> Pn cf1 n\n\ngoal (1 subgoal):\n 1. m = 0 \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "ultimately"], ["proof (chain)\npicking this:\n  m = 0\n  dist (Ps cf2) (Ps cf1) \\<le> Pn cf2 0\n  0 \\<le> Pn cf1 n", "show ?thesis"], ["proof (prove)\nusing this:\n  m = 0\n  dist (Ps cf2) (Ps cf1) \\<le> Pn cf2 0\n  0 \\<le> Pn cf1 n\n\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "by (simp add: dist_commute)"], ["proof (state)\nthis:\n  dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "assume \"\\<not> (n = 0 \\<or> m = 0)\""], ["proof (state)\nthis:\n  \\<not> (n = 0 \\<or> m = 0)\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "then"], ["proof (chain)\npicking this:\n  \\<not> (n = 0 \\<or> m = 0)", "have \"n \\<noteq> 0\" \"m \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<not> (n = 0 \\<or> m = 0)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 &&& m \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  n \\<noteq> 0\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "then"], ["proof (chain)\npicking this:\n  n \\<noteq> 0\n  m \\<noteq> 0", "obtain n' m' where nm: \"n = Suc n'\" \"m = Suc m'\""], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>n' m'.\n        \\<lbrakk>n = Suc n'; m = Suc m'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis nat.exhaust)"], ["proof (state)\nthis:\n  n = Suc n'\n  m = Suc m'\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "define ps pn\n      where \"ps cf I = (\\<Sum>b\\<in>I. wt (fst cf) (snd cf) b / W cf I * Ps (cont_eff cf b))\"\n        and \"pn cf I n = (\\<Sum>b\\<in>I. wt (fst cf) (snd cf) b / W cf I * Pn (cont_eff cf b) n)\"\n      for cf I n"], ["proof (state)\nthis:\n  ps ?cf ?I =\n  (\\<Sum>b\\<in>?I.\n     wt (fst ?cf) (snd ?cf) b / W ?cf ?I * Ps (cont_eff ?cf b))\n  pn ?cf ?I ?n =\n  (\\<Sum>b\\<in>?I.\n     wt (fst ?cf) (snd ?cf) b / W ?cf ?I * Pn (cont_eff ?cf b) ?n)\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "{"], ["proof (state)\nthis:\n  ps ?cf ?I =\n  (\\<Sum>b\\<in>?I.\n     wt (fst ?cf) (snd ?cf) b / W ?cf ?I * Ps (cont_eff ?cf b))\n  pn ?cf ?I ?n =\n  (\\<Sum>b\\<in>?I.\n     wt (fst ?cf) (snd ?cf) b / W ?cf ?I * Pn (cont_eff ?cf b) ?n)\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "fix I"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "assume \"I \\<in> P\" \"I \\<noteq> I0\" and W: \"W cf1 I \\<noteq> 0\" \"W cf2 (F I) \\<noteq> 0\""], ["proof (state)\nthis:\n  I \\<in> P\n  I \\<noteq> I0\n  W cf1 I \\<noteq> 0\n  W cf2 (F I) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "then"], ["proof (chain)\npicking this:\n  I \\<in> P\n  I \\<noteq> I0\n  W cf1 I \\<noteq> 0\n  W cf2 (F I) \\<noteq> 0", "have \"dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'\""], ["proof (prove)\nusing this:\n  I \\<in> P\n  I \\<noteq> I0\n  W cf1 I \\<noteq> 0\n  W cf2 (F I) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'", "unfolding ps_def pn_def"], ["proof (prove)\nusing this:\n  I \\<in> P\n  I \\<noteq> I0\n  W cf1 I \\<noteq> 0\n  W cf2 (F I) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. dist\n     (\\<Sum>b\\<in>I.\n        wt (fst cf1) (snd cf1) b / W cf1 I * Ps (cont_eff cf1 b))\n     (\\<Sum>b\\<in>F I.\n        wt (fst cf2) (snd cf2) b / W cf2 (F I) * Ps (cont_eff cf2 b))\n    \\<le> (\\<Sum>b\\<in>I.\n             wt (fst cf1) (snd cf1) b / W cf1 I * Pn (cont_eff cf1 b) n') +\n          (\\<Sum>b\\<in>F I.\n             wt (fst cf2) (snd cf2) b / W cf2 (F I) *\n             Pn (cont_eff cf2 b) m')", "proof (intro dist_weighted_sum)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>b ba.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> I; ba \\<in> F I;\n        wt (fst cf1) (snd cf1) b / W cf1 I \\<noteq> 0;\n        wt (fst cf2) (snd cf2) ba / W cf2 (F I) \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> dist (Ps (cont_eff cf1 b)) (Ps (cont_eff cf2 ba))\n                         \\<le> Pn (cont_eff cf1 b) n' +\n                               Pn (cont_eff cf2 ba) m'\n 2. \\<And>b.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> I\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf1) (snd cf1) b / W cf1 I\n 3. \\<And>b.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> F I\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf2) (snd cf2) b / W cf2 (F I)\n 4. \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n     W cf2 (F I) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>b\\<in>I. wt (fst cf1) (snd cf1) b / W cf1 I) =\n                      1\n 5. \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n     W cf2 (F I) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>b\\<in>F I.\n                         wt (fst cf2) (snd cf2) b / W cf2 (F I)) =\n                      1", "fix i j"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>b ba.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> I; ba \\<in> F I;\n        wt (fst cf1) (snd cf1) b / W cf1 I \\<noteq> 0;\n        wt (fst cf2) (snd cf2) ba / W cf2 (F I) \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> dist (Ps (cont_eff cf1 b)) (Ps (cont_eff cf2 ba))\n                         \\<le> Pn (cont_eff cf1 b) n' +\n                               Pn (cont_eff cf2 ba) m'\n 2. \\<And>b.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> I\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf1) (snd cf1) b / W cf1 I\n 3. \\<And>b.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> F I\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf2) (snd cf2) b / W cf2 (F I)\n 4. \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n     W cf2 (F I) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>b\\<in>I. wt (fst cf1) (snd cf1) b / W cf1 I) =\n                      1\n 5. \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n     W cf2 (F I) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>b\\<in>F I.\n                         wt (fst cf2) (snd cf2) b / W cf2 (F I)) =\n                      1", "assume ij: \"i \\<in> I\" \"j \\<in> F I\""], ["proof (state)\nthis:\n  i \\<in> I\n  j \\<in> F I\n\ngoal (5 subgoals):\n 1. \\<And>b ba.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> I; ba \\<in> F I;\n        wt (fst cf1) (snd cf1) b / W cf1 I \\<noteq> 0;\n        wt (fst cf2) (snd cf2) ba / W cf2 (F I) \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> dist (Ps (cont_eff cf1 b)) (Ps (cont_eff cf2 ba))\n                         \\<le> Pn (cont_eff cf1 b) n' +\n                               Pn (cont_eff cf2 ba) m'\n 2. \\<And>b.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> I\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf1) (snd cf1) b / W cf1 I\n 3. \\<And>b.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> F I\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf2) (snd cf2) b / W cf2 (F I)\n 4. \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n     W cf2 (F I) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>b\\<in>I. wt (fst cf1) (snd cf1) b / W cf1 I) =\n                      1\n 5. \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n     W cf2 (F I) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>b\\<in>F I.\n                         wt (fst cf2) (snd cf2) b / W cf2 (F I)) =\n                      1", "assume \"wt (fst cf1) (snd cf1) i / W cf1 I \\<noteq> 0\"\n          and \"wt (fst cf2) (snd cf2) j / W cf2 (F I) \\<noteq> 0\""], ["proof (state)\nthis:\n  wt (fst cf1) (snd cf1) i / W cf1 I \\<noteq> 0\n  wt (fst cf2) (snd cf2) j / W cf2 (F I) \\<noteq> 0\n\ngoal (5 subgoals):\n 1. \\<And>b ba.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> I; ba \\<in> F I;\n        wt (fst cf1) (snd cf1) b / W cf1 I \\<noteq> 0;\n        wt (fst cf2) (snd cf2) ba / W cf2 (F I) \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> dist (Ps (cont_eff cf1 b)) (Ps (cont_eff cf2 ba))\n                         \\<le> Pn (cont_eff cf1 b) n' +\n                               Pn (cont_eff cf2 ba) m'\n 2. \\<And>b.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> I\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf1) (snd cf1) b / W cf1 I\n 3. \\<And>b.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> F I\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf2) (snd cf2) b / W cf2 (F I)\n 4. \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n     W cf2 (F I) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>b\\<in>I. wt (fst cf1) (snd cf1) b / W cf1 I) =\n                      1\n 5. \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n     W cf2 (F I) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>b\\<in>F I.\n                         wt (fst cf2) (snd cf2) b / W cf2 (F I)) =\n                      1", "from \\<open>I \\<in> P\\<close> ij P(2) FP(2)"], ["proof (chain)\npicking this:\n  I \\<in> P\n  i \\<in> I\n  j \\<in> F I\n  part {..<brn (fst cf1)} P\n  part {..<brn (fst cf2)} (F ` P)", "have br: \"i < brn (fst cf1)\" \"j < brn (fst cf2)\""], ["proof (prove)\nusing this:\n  I \\<in> P\n  i \\<in> I\n  j \\<in> F I\n  part {..<brn (fst cf1)} P\n  part {..<brn (fst cf2)} (F ` P)\n\ngoal (1 subgoal):\n 1. i < brn (fst cf1) &&& j < brn (fst cf2)", "by (auto dest: part_is_subset)"], ["proof (state)\nthis:\n  i < brn (fst cf1)\n  j < brn (fst cf2)\n\ngoal (5 subgoals):\n 1. \\<And>b ba.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> I; ba \\<in> F I;\n        wt (fst cf1) (snd cf1) b / W cf1 I \\<noteq> 0;\n        wt (fst cf2) (snd cf2) ba / W cf2 (F I) \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> dist (Ps (cont_eff cf1 b)) (Ps (cont_eff cf2 ba))\n                         \\<le> Pn (cont_eff cf1 b) n' +\n                               Pn (cont_eff cf2 ba) m'\n 2. \\<And>b.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> I\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf1) (snd cf1) b / W cf1 I\n 3. \\<And>b.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> F I\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf2) (snd cf2) b / W cf2 (F I)\n 4. \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n     W cf2 (F I) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>b\\<in>I. wt (fst cf1) (snd cf1) b / W cf1 I) =\n                      1\n 5. \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n     W cf2 (F I) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>b\\<in>F I.\n                         wt (fst cf2) (snd cf2) b / W cf2 (F I)) =\n                      1", "show \"dist (Ps (cont_eff cf1 i)) (Ps (cont_eff cf2 j)) \\<le>\n          Pn (cont_eff cf1 i) n' + Pn (cont_eff cf2 j) m'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (Ps (cont_eff cf1 i)) (Ps (cont_eff cf2 j))\n    \\<le> Pn (cont_eff cf1 i) n' + Pn (cont_eff cf2 j) m'", "proof (rule less.hyps)"], ["proof (state)\ngoal (5 subgoals):\n 1. n' + m' < n + m\n 2. proper (fst (cont_eff cf1 i))\n 3. proper (fst (cont_eff cf2 j))\n 4. fst (cont_eff cf1 i) \\<approx>01 fst (cont_eff cf2 j)\n 5. snd (cont_eff cf1 i) \\<approx> snd (cont_eff cf2 j)", "show \"n' + m' < n + m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n' + m' < n + m", "using nm"], ["proof (prove)\nusing this:\n  n = Suc n'\n  m = Suc m'\n\ngoal (1 subgoal):\n 1. n' + m' < n + m", "by simp"], ["proof (state)\nthis:\n  n' + m' < n + m\n\ngoal (4 subgoals):\n 1. proper (fst (cont_eff cf1 i))\n 2. proper (fst (cont_eff cf2 j))\n 3. fst (cont_eff cf1 i) \\<approx>01 fst (cont_eff cf2 j)\n 4. snd (cont_eff cf1 i) \\<approx> snd (cont_eff cf2 j)", "show \"proper (fst (cont_eff cf1 i))\" \"proper (fst (cont_eff cf2 j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper (fst (cont_eff cf1 i)) &&& proper (fst (cont_eff cf2 j))", "using br less.prems"], ["proof (prove)\nusing this:\n  i < brn (fst cf1)\n  j < brn (fst cf2)\n  proper (fst cf1)\n  proper (fst cf2)\n  fst cf1 \\<approx>01 fst cf2\n  snd cf1 \\<approx> snd cf2\n\ngoal (1 subgoal):\n 1. proper (fst (cont_eff cf1 i)) &&& proper (fst (cont_eff cf2 j))", "by (auto simp: cont_eff)"], ["proof (state)\nthis:\n  proper (fst (cont_eff cf1 i))\n  proper (fst (cont_eff cf2 j))\n\ngoal (2 subgoals):\n 1. fst (cont_eff cf1 i) \\<approx>01 fst (cont_eff cf2 j)\n 2. snd (cont_eff cf1 i) \\<approx> snd (cont_eff cf2 j)", "show \"fst (cont_eff cf1 i) \\<approx>01 fst (cont_eff cf2 j)\"\n            \"snd (cont_eff cf1 i) \\<approx> snd (cont_eff cf2 j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (cont_eff cf1 i) \\<approx>01 fst (cont_eff cf2 j) &&&\n    snd (cont_eff cf1 i) \\<approx> snd (cont_eff cf2 j)", "using cont[OF \\<open>I \\<in> P\\<close> \\<open>I \\<noteq> I0\\<close> ij] eff[OF \\<open>I \\<in> P\\<close> \\<open>I \\<noteq> I0\\<close> ij]"], ["proof (prove)\nusing this:\n  local.cont (fst cf1) (snd cf1) i \\<approx>01\n  local.cont (fst cf2) (snd cf2) j\n  eff (fst cf1) (snd cf1) i \\<approx> eff (fst cf2) (snd cf2) j\n\ngoal (1 subgoal):\n 1. fst (cont_eff cf1 i) \\<approx>01 fst (cont_eff cf2 j) &&&\n    snd (cont_eff cf1 i) \\<approx> snd (cont_eff cf2 j)", "by (auto simp: cont_eff)"], ["proof (state)\nthis:\n  fst (cont_eff cf1 i) \\<approx>01 fst (cont_eff cf2 j)\n  snd (cont_eff cf1 i) \\<approx> snd (cont_eff cf2 j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist (Ps (cont_eff cf1 i)) (Ps (cont_eff cf2 j))\n  \\<le> Pn (cont_eff cf1 i) n' + Pn (cont_eff cf2 j) m'\n\ngoal (4 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> I\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf1) (snd cf1) b / W cf1 I\n 2. \\<And>b.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> F I\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf2) (snd cf2) b / W cf2 (F I)\n 3. \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n     W cf2 (F I) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>b\\<in>I. wt (fst cf1) (snd cf1) b / W cf1 I) =\n                      1\n 4. \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n     W cf2 (F I) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>b\\<in>F I.\n                         wt (fst cf2) (snd cf2) b / W cf2 (F I)) =\n                      1", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> I\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf1) (snd cf1) b / W cf1 I\n 2. \\<And>b.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> F I\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf2) (snd cf2) b / W cf2 (F I)\n 3. \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n     W cf2 (F I) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>b\\<in>I. wt (fst cf1) (snd cf1) b / W cf1 I) =\n                      1\n 4. \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n     W cf2 (F I) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>b\\<in>F I.\n                         wt (fst cf2) (snd cf2) b / W cf2 (F I)) =\n                      1", "show \"(\\<Sum>b\\<in>F I. wt (fst cf2) (snd cf2) b / W cf2 (F I)) = 1\"\n          \"(\\<Sum>b\\<in>I. wt (fst cf1) (snd cf1) b / W cf1 I) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>b\\<in>F I. wt (fst cf2) (snd cf2) b / W cf2 (F I)) = 1 &&&\n    (\\<Sum>b\\<in>I. wt (fst cf1) (snd cf1) b / W cf1 I) = 1", "using W"], ["proof (prove)\nusing this:\n  W cf1 I \\<noteq> 0\n  W cf2 (F I) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<Sum>b\\<in>F I. wt (fst cf2) (snd cf2) b / W cf2 (F I)) = 1 &&&\n    (\\<Sum>b\\<in>I. wt (fst cf1) (snd cf1) b / W cf1 I) = 1", "by (auto simp: sum_divide_distrib[symmetric] sum_nonneg W_def)"], ["proof (state)\nthis:\n  (\\<Sum>b\\<in>F I. wt (fst cf2) (snd cf2) b / W cf2 (F I)) = 1\n  (\\<Sum>b\\<in>I. wt (fst cf1) (snd cf1) b / W cf1 I) = 1\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> I\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf1) (snd cf1) b / W cf1 I\n 2. \\<And>b.\n       \\<lbrakk>I \\<in> P; I \\<noteq> I0; W cf1 I \\<noteq> 0;\n        W cf2 (F I) \\<noteq> 0; b \\<in> F I\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf2) (snd cf2) b / W cf2 (F I)", "qed auto"], ["proof (state)\nthis:\n  dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?I3 \\<in> P; ?I3 \\<noteq> I0; W cf1 ?I3 \\<noteq> 0;\n   W cf2 (F ?I3) \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> dist (ps cf1 ?I3) (ps cf2 (F ?I3))\n                    \\<le> pn cf1 ?I3 n' + pn cf2 (F ?I3) m'\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "note dist_n'_m' = this"], ["proof (state)\nthis:\n  \\<lbrakk>?I3 \\<in> P; ?I3 \\<noteq> I0; W cf1 ?I3 \\<noteq> 0;\n   W cf2 (F ?I3) \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> dist (ps cf1 ?I3) (ps cf2 (F ?I3))\n                    \\<le> pn cf1 ?I3 n' + pn cf2 (F ?I3) m'\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?I3 \\<in> P; ?I3 \\<noteq> I0; W cf1 ?I3 \\<noteq> 0;\n   W cf2 (F ?I3) \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> dist (ps cf1 ?I3) (ps cf2 (F ?I3))\n                    \\<le> pn cf1 ?I3 n' + pn cf2 (F ?I3) m'\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "fix I"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "assume \"I \\<in> P\" \"I \\<noteq> I0\" and W: \"W cf1 I = 0 \\<longleftrightarrow> W cf2 (F I) = 0\""], ["proof (state)\nthis:\n  I \\<in> P\n  I \\<noteq> I0\n  (W cf1 I = 0) = (W cf2 (F I) = 0)\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have \"dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'\n 2. \\<not> ?P \\<Longrightarrow>\n    dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'", "assume \"W cf2 (F I) = 0\""], ["proof (state)\nthis:\n  W cf2 (F I) = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'\n 2. \\<not> ?P \\<Longrightarrow>\n    dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'", "then"], ["proof (chain)\npicking this:\n  W cf2 (F I) = 0", "have \"W cf2 (F I) = 0\" \"W cf1 I = 0\""], ["proof (prove)\nusing this:\n  W cf2 (F I) = 0\n\ngoal (1 subgoal):\n 1. W cf2 (F I) = 0 &&& W cf1 I = 0", "by (auto simp: W)"], ["proof (state)\nthis:\n  W cf2 (F I) = 0\n  W cf1 I = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'\n 2. \\<not> ?P \\<Longrightarrow>\n    dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'", "then"], ["proof (chain)\npicking this:\n  W cf2 (F I) = 0\n  W cf1 I = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  W cf2 (F I) = 0\n  W cf1 I = 0\n\ngoal (1 subgoal):\n 1. dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'", "by (simp add: ps_def pn_def)"], ["proof (state)\nthis:\n  dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'\n\ngoal (1 subgoal):\n 1. W cf2 (F I) \\<noteq> 0 \\<Longrightarrow>\n    dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. W cf2 (F I) \\<noteq> 0 \\<Longrightarrow>\n    dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'", "assume \"W cf2 (F I) \\<noteq> 0\""], ["proof (state)\nthis:\n  W cf2 (F I) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. W cf2 (F I) \\<noteq> 0 \\<Longrightarrow>\n    dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'", "then"], ["proof (chain)\npicking this:\n  W cf2 (F I) \\<noteq> 0", "have \"W cf1 I \\<noteq> 0\" \"W cf2 (F I) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  W cf2 (F I) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. W cf1 I \\<noteq> 0 &&& W cf2 (F I) \\<noteq> 0", "by (auto simp: W)"], ["proof (state)\nthis:\n  W cf1 I \\<noteq> 0\n  W cf2 (F I) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. W cf2 (F I) \\<noteq> 0 \\<Longrightarrow>\n    dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'", "from dist_n'_m'[OF \\<open>I \\<in> P\\<close> \\<open>I \\<noteq> I0\\<close> this]"], ["proof (chain)\npicking this:\n  dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'", "show ?thesis"], ["proof (prove)\nusing this:\n  dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'\n\ngoal (1 subgoal):\n 1. dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'", "."], ["proof (state)\nthis:\n  dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?I3 \\<in> P; ?I3 \\<noteq> I0;\n   (W cf1 ?I3 = 0) = (W cf2 (F ?I3) = 0)\\<rbrakk>\n  \\<Longrightarrow> dist (ps cf1 ?I3) (ps cf2 (F ?I3))\n                    \\<le> pn cf1 ?I3 n' + pn cf2 (F ?I3) m'\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "note dist_n'_m'_W_iff = this"], ["proof (state)\nthis:\n  \\<lbrakk>?I3 \\<in> P; ?I3 \\<noteq> I0;\n   (W cf1 ?I3 = 0) = (W cf2 (F ?I3) = 0)\\<rbrakk>\n  \\<Longrightarrow> dist (ps cf1 ?I3) (ps cf2 (F ?I3))\n                    \\<le> pn cf1 ?I3 n' + pn cf2 (F ?I3) m'\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?I3 \\<in> P; ?I3 \\<noteq> I0;\n   (W cf1 ?I3 = 0) = (W cf2 (F ?I3) = 0)\\<rbrakk>\n  \\<Longrightarrow> dist (ps cf1 ?I3) (ps cf2 (F ?I3))\n                    \\<le> pn cf1 ?I3 n' + pn cf2 (F ?I3) m'\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "fix I j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "assume W: \"W cf2 (F I0) \\<noteq> 0\""], ["proof (state)\nthis:\n  W cf2 (F I0) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "from \\<open>I0 \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  I0 \\<in> P", "have \"dist (\\<Sum>i\\<in>{()}. 1 * Ps cf1) (ps cf2 (F I0)) \\<le> (\\<Sum>i\\<in>{()}. 1 * Pn cf1 n) + pn cf2 (F I0) m'\""], ["proof (prove)\nusing this:\n  I0 \\<in> P\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>{()}. 1 * Ps cf1) (ps cf2 (F I0))\n    \\<le> (\\<Sum>i\\<in>{()}. 1 * Pn cf1 n) + pn cf2 (F I0) m'", "unfolding ps_def pn_def"], ["proof (prove)\nusing this:\n  I0 \\<in> P\n\ngoal (1 subgoal):\n 1. dist (\\<Sum>i\\<in>{()}. 1 * Ps cf1)\n     (\\<Sum>b\\<in>F I0.\n        wt (fst cf2) (snd cf2) b / W cf2 (F I0) * Ps (cont_eff cf2 b))\n    \\<le> (\\<Sum>i\\<in>{()}. 1 * Pn cf1 n) +\n          (\\<Sum>b\\<in>F I0.\n             wt (fst cf2) (snd cf2) b / W cf2 (F I0) *\n             Pn (cont_eff cf2 b) m')", "proof (intro dist_weighted_sum)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>i b.\n       \\<lbrakk>I0 \\<in> P; i \\<in> {()}; b \\<in> F I0; 1 \\<noteq> 0;\n        wt (fst cf2) (snd cf2) b / W cf2 (F I0) \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps (cont_eff cf2 b))\n                         \\<le> Pn cf1 n + Pn (cont_eff cf2 b) m'\n 2. \\<And>i.\n       \\<lbrakk>I0 \\<in> P; i \\<in> {()}\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> 1\n 3. \\<And>b.\n       \\<lbrakk>I0 \\<in> P; b \\<in> F I0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf2) (snd cf2) b / W cf2 (F I0)\n 4. I0 \\<in> P \\<Longrightarrow> (\\<Sum>i\\<in>{()}. 1) = 1\n 5. I0 \\<in> P \\<Longrightarrow>\n    (\\<Sum>b\\<in>F I0. wt (fst cf2) (snd cf2) b / W cf2 (F I0)) = 1", "fix j"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>i b.\n       \\<lbrakk>I0 \\<in> P; i \\<in> {()}; b \\<in> F I0; 1 \\<noteq> 0;\n        wt (fst cf2) (snd cf2) b / W cf2 (F I0) \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps (cont_eff cf2 b))\n                         \\<le> Pn cf1 n + Pn (cont_eff cf2 b) m'\n 2. \\<And>i.\n       \\<lbrakk>I0 \\<in> P; i \\<in> {()}\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> 1\n 3. \\<And>b.\n       \\<lbrakk>I0 \\<in> P; b \\<in> F I0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf2) (snd cf2) b / W cf2 (F I0)\n 4. I0 \\<in> P \\<Longrightarrow> (\\<Sum>i\\<in>{()}. 1) = 1\n 5. I0 \\<in> P \\<Longrightarrow>\n    (\\<Sum>b\\<in>F I0. wt (fst cf2) (snd cf2) b / W cf2 (F I0)) = 1", "assume \"j \\<in> F I0\""], ["proof (state)\nthis:\n  j \\<in> F I0\n\ngoal (5 subgoals):\n 1. \\<And>i b.\n       \\<lbrakk>I0 \\<in> P; i \\<in> {()}; b \\<in> F I0; 1 \\<noteq> 0;\n        wt (fst cf2) (snd cf2) b / W cf2 (F I0) \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps (cont_eff cf2 b))\n                         \\<le> Pn cf1 n + Pn (cont_eff cf2 b) m'\n 2. \\<And>i.\n       \\<lbrakk>I0 \\<in> P; i \\<in> {()}\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> 1\n 3. \\<And>b.\n       \\<lbrakk>I0 \\<in> P; b \\<in> F I0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf2) (snd cf2) b / W cf2 (F I0)\n 4. I0 \\<in> P \\<Longrightarrow> (\\<Sum>i\\<in>{()}. 1) = 1\n 5. I0 \\<in> P \\<Longrightarrow>\n    (\\<Sum>b\\<in>F I0. wt (fst cf2) (snd cf2) b / W cf2 (F I0)) = 1", "with FP(2) \\<open>I0 \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  part {..<brn (fst cf2)} (F ` P)\n  I0 \\<in> P\n  j \\<in> F I0", "have br: \"j < brn (fst cf2)\""], ["proof (prove)\nusing this:\n  part {..<brn (fst cf2)} (F ` P)\n  I0 \\<in> P\n  j \\<in> F I0\n\ngoal (1 subgoal):\n 1. j < brn (fst cf2)", "by (auto dest: part_is_subset)"], ["proof (state)\nthis:\n  j < brn (fst cf2)\n\ngoal (5 subgoals):\n 1. \\<And>i b.\n       \\<lbrakk>I0 \\<in> P; i \\<in> {()}; b \\<in> F I0; 1 \\<noteq> 0;\n        wt (fst cf2) (snd cf2) b / W cf2 (F I0) \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> dist (Ps cf1) (Ps (cont_eff cf2 b))\n                         \\<le> Pn cf1 n + Pn (cont_eff cf2 b) m'\n 2. \\<And>i.\n       \\<lbrakk>I0 \\<in> P; i \\<in> {()}\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> 1\n 3. \\<And>b.\n       \\<lbrakk>I0 \\<in> P; b \\<in> F I0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf2) (snd cf2) b / W cf2 (F I0)\n 4. I0 \\<in> P \\<Longrightarrow> (\\<Sum>i\\<in>{()}. 1) = 1\n 5. I0 \\<in> P \\<Longrightarrow>\n    (\\<Sum>b\\<in>F I0. wt (fst cf2) (snd cf2) b / W cf2 (F I0)) = 1", "show \"dist (Ps cf1) (Ps (cont_eff cf2 j)) \\<le> Pn cf1 n + Pn (cont_eff cf2 j) m'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps (cont_eff cf2 j))\n    \\<le> Pn cf1 n + Pn (cont_eff cf2 j) m'", "proof (rule less.hyps)"], ["proof (state)\ngoal (5 subgoals):\n 1. n + m' < n + m\n 2. proper (fst cf1)\n 3. proper (fst (cont_eff cf2 j))\n 4. fst cf1 \\<approx>01 fst (cont_eff cf2 j)\n 5. snd cf1 \\<approx> snd (cont_eff cf2 j)", "show \"n + m' < n + m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n + m' < n + m", "using nm"], ["proof (prove)\nusing this:\n  n = Suc n'\n  m = Suc m'\n\ngoal (1 subgoal):\n 1. n + m' < n + m", "by simp"], ["proof (state)\nthis:\n  n + m' < n + m\n\ngoal (4 subgoals):\n 1. proper (fst cf1)\n 2. proper (fst (cont_eff cf2 j))\n 3. fst cf1 \\<approx>01 fst (cont_eff cf2 j)\n 4. snd cf1 \\<approx> snd (cont_eff cf2 j)", "show \"proper (fst cf1)\" \"proper (fst (cont_eff cf2 j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper (fst cf1) &&& proper (fst (cont_eff cf2 j))", "using br"], ["proof (prove)\nusing this:\n  j < brn (fst cf2)\n\ngoal (1 subgoal):\n 1. proper (fst cf1) &&& proper (fst (cont_eff cf2 j))", "by (auto simp: cont_eff)"], ["proof (state)\nthis:\n  proper (fst cf1)\n  proper (fst (cont_eff cf2 j))\n\ngoal (2 subgoals):\n 1. fst cf1 \\<approx>01 fst (cont_eff cf2 j)\n 2. snd cf1 \\<approx> snd (cont_eff cf2 j)", "show \"fst cf1 \\<approx>01 fst (cont_eff cf2 j)\"\n            \"snd cf1 \\<approx> snd (cont_eff cf2 j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst cf1 \\<approx>01 fst (cont_eff cf2 j) &&&\n    snd cf1 \\<approx> snd (cont_eff cf2 j)", "using FI0[OF \\<open>j \\<in> F I0\\<close>] \\<open>snd cf1 \\<approx> snd cf2\\<close>"], ["proof (prove)\nusing this:\n  snd cf2 \\<approx> eff (fst cf2) (snd cf2) j\n  fst cf1 \\<approx>01 local.cont (fst cf2) (snd cf2) j\n  snd cf1 \\<approx> snd cf2\n\ngoal (1 subgoal):\n 1. fst cf1 \\<approx>01 fst (cont_eff cf2 j) &&&\n    snd cf1 \\<approx> snd (cont_eff cf2 j)", "by (auto simp: cont_eff intro: indis_trans)"], ["proof (state)\nthis:\n  fst cf1 \\<approx>01 fst (cont_eff cf2 j)\n  snd cf1 \\<approx> snd (cont_eff cf2 j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist (Ps cf1) (Ps (cont_eff cf2 j))\n  \\<le> Pn cf1 n + Pn (cont_eff cf2 j) m'\n\ngoal (4 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>I0 \\<in> P; i \\<in> {()}\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> 1\n 2. \\<And>b.\n       \\<lbrakk>I0 \\<in> P; b \\<in> F I0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf2) (snd cf2) b / W cf2 (F I0)\n 3. I0 \\<in> P \\<Longrightarrow> (\\<Sum>i\\<in>{()}. 1) = 1\n 4. I0 \\<in> P \\<Longrightarrow>\n    (\\<Sum>b\\<in>F I0. wt (fst cf2) (snd cf2) b / W cf2 (F I0)) = 1", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>I0 \\<in> P; i \\<in> {()}\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> 1\n 2. \\<And>b.\n       \\<lbrakk>I0 \\<in> P; b \\<in> F I0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf2) (snd cf2) b / W cf2 (F I0)\n 3. I0 \\<in> P \\<Longrightarrow> (\\<Sum>i\\<in>{()}. 1) = 1\n 4. I0 \\<in> P \\<Longrightarrow>\n    (\\<Sum>b\\<in>F I0. wt (fst cf2) (snd cf2) b / W cf2 (F I0)) = 1", "show \"(\\<Sum>b\\<in>F I0. wt (fst cf2) (snd cf2) b / W cf2 (F I0)) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>b\\<in>F I0. wt (fst cf2) (snd cf2) b / W cf2 (F I0)) = 1", "using W \\<open>I0 \\<in> P\\<close>"], ["proof (prove)\nusing this:\n  W cf2 (F I0) \\<noteq> 0\n  I0 \\<in> P\n\ngoal (1 subgoal):\n 1. (\\<Sum>b\\<in>F I0. wt (fst cf2) (snd cf2) b / W cf2 (F I0)) = 1", "by (auto simp: sum_divide_distrib[symmetric] sum_nonneg W_def)"], ["proof (state)\nthis:\n  (\\<Sum>b\\<in>F I0. wt (fst cf2) (snd cf2) b / W cf2 (F I0)) = 1\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>I0 \\<in> P; i \\<in> {()}\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> 1\n 2. \\<And>b.\n       \\<lbrakk>I0 \\<in> P; b \\<in> F I0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf2) (snd cf2) b / W cf2 (F I0)\n 3. I0 \\<in> P \\<Longrightarrow> (\\<Sum>i\\<in>{()}. 1) = 1", "qed auto"], ["proof (state)\nthis:\n  dist (\\<Sum>i\\<in>{()}. 1 * Ps cf1) (ps cf2 (F I0))\n  \\<le> (\\<Sum>i\\<in>{()}. 1 * Pn cf1 n) + pn cf2 (F I0) m'\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "then"], ["proof (chain)\npicking this:\n  dist (\\<Sum>i\\<in>{()}. 1 * Ps cf1) (ps cf2 (F I0))\n  \\<le> (\\<Sum>i\\<in>{()}. 1 * Pn cf1 n) + pn cf2 (F I0) m'", "have \"dist (Ps cf1) (ps cf2 (F I0)) \\<le> Pn cf1 n + pn cf2 (F I0) m'\""], ["proof (prove)\nusing this:\n  dist (\\<Sum>i\\<in>{()}. 1 * Ps cf1) (ps cf2 (F I0))\n  \\<le> (\\<Sum>i\\<in>{()}. 1 * Pn cf1 n) + pn cf2 (F I0) m'\n\ngoal (1 subgoal):\n 1. dist (Ps cf1) (ps cf2 (F I0)) \\<le> Pn cf1 n + pn cf2 (F I0) m'", "by simp"], ["proof (state)\nthis:\n  dist (Ps cf1) (ps cf2 (F I0)) \\<le> Pn cf1 n + pn cf2 (F I0) m'\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "}"], ["proof (state)\nthis:\n  W cf2 (F I0) \\<noteq> 0 \\<Longrightarrow>\n  dist (Ps cf1) (ps cf2 (F I0)) \\<le> Pn cf1 n + pn cf2 (F I0) m'\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "note dist_n_m' = this"], ["proof (state)\nthis:\n  W cf2 (F I0) \\<noteq> 0 \\<Longrightarrow>\n  dist (Ps cf1) (ps cf2 (F I0)) \\<le> Pn cf1 n + pn cf2 (F I0) m'\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "{"], ["proof (state)\nthis:\n  W cf2 (F I0) \\<noteq> 0 \\<Longrightarrow>\n  dist (Ps cf1) (ps cf2 (F I0)) \\<le> Pn cf1 n + pn cf2 (F I0) m'\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "fix I j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "assume W: \"W cf1 I0 \\<noteq> 0\""], ["proof (state)\nthis:\n  W cf1 I0 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "from \\<open>I0 \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  I0 \\<in> P", "have \"dist (ps cf1 I0) (\\<Sum>i\\<in>{()}. 1 * Ps cf2) \\<le> pn cf1 I0 n' + (\\<Sum>i\\<in>{()}. 1 * Pn cf2 m)\""], ["proof (prove)\nusing this:\n  I0 \\<in> P\n\ngoal (1 subgoal):\n 1. dist (ps cf1 I0) (\\<Sum>i\\<in>{()}. 1 * Ps cf2)\n    \\<le> pn cf1 I0 n' + (\\<Sum>i\\<in>{()}. 1 * Pn cf2 m)", "unfolding ps_def pn_def"], ["proof (prove)\nusing this:\n  I0 \\<in> P\n\ngoal (1 subgoal):\n 1. dist\n     (\\<Sum>b\\<in>I0.\n        wt (fst cf1) (snd cf1) b / W cf1 I0 * Ps (cont_eff cf1 b))\n     (\\<Sum>i\\<in>{()}. 1 * Ps cf2)\n    \\<le> (\\<Sum>b\\<in>I0.\n             wt (fst cf1) (snd cf1) b / W cf1 I0 * Pn (cont_eff cf1 b) n') +\n          (\\<Sum>i\\<in>{()}. 1 * Pn cf2 m)", "proof (intro dist_weighted_sum)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>b i.\n       \\<lbrakk>I0 \\<in> P; b \\<in> I0; i \\<in> {()};\n        wt (fst cf1) (snd cf1) b / W cf1 I0 \\<noteq> 0;\n        1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> dist (Ps (cont_eff cf1 b)) (Ps cf2)\n                         \\<le> Pn (cont_eff cf1 b) n' + Pn cf2 m\n 2. \\<And>b.\n       \\<lbrakk>I0 \\<in> P; b \\<in> I0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf1) (snd cf1) b / W cf1 I0\n 3. \\<And>i.\n       \\<lbrakk>I0 \\<in> P; i \\<in> {()}\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> 1\n 4. I0 \\<in> P \\<Longrightarrow>\n    (\\<Sum>b\\<in>I0. wt (fst cf1) (snd cf1) b / W cf1 I0) = 1\n 5. I0 \\<in> P \\<Longrightarrow> (\\<Sum>i\\<in>{()}. 1) = 1", "fix i"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>b i.\n       \\<lbrakk>I0 \\<in> P; b \\<in> I0; i \\<in> {()};\n        wt (fst cf1) (snd cf1) b / W cf1 I0 \\<noteq> 0;\n        1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> dist (Ps (cont_eff cf1 b)) (Ps cf2)\n                         \\<le> Pn (cont_eff cf1 b) n' + Pn cf2 m\n 2. \\<And>b.\n       \\<lbrakk>I0 \\<in> P; b \\<in> I0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf1) (snd cf1) b / W cf1 I0\n 3. \\<And>i.\n       \\<lbrakk>I0 \\<in> P; i \\<in> {()}\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> 1\n 4. I0 \\<in> P \\<Longrightarrow>\n    (\\<Sum>b\\<in>I0. wt (fst cf1) (snd cf1) b / W cf1 I0) = 1\n 5. I0 \\<in> P \\<Longrightarrow> (\\<Sum>i\\<in>{()}. 1) = 1", "assume \"i \\<in> I0\""], ["proof (state)\nthis:\n  i \\<in> I0\n\ngoal (5 subgoals):\n 1. \\<And>b i.\n       \\<lbrakk>I0 \\<in> P; b \\<in> I0; i \\<in> {()};\n        wt (fst cf1) (snd cf1) b / W cf1 I0 \\<noteq> 0;\n        1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> dist (Ps (cont_eff cf1 b)) (Ps cf2)\n                         \\<le> Pn (cont_eff cf1 b) n' + Pn cf2 m\n 2. \\<And>b.\n       \\<lbrakk>I0 \\<in> P; b \\<in> I0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf1) (snd cf1) b / W cf1 I0\n 3. \\<And>i.\n       \\<lbrakk>I0 \\<in> P; i \\<in> {()}\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> 1\n 4. I0 \\<in> P \\<Longrightarrow>\n    (\\<Sum>b\\<in>I0. wt (fst cf1) (snd cf1) b / W cf1 I0) = 1\n 5. I0 \\<in> P \\<Longrightarrow> (\\<Sum>i\\<in>{()}. 1) = 1", "with P(2) \\<open>I0 \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  part {..<brn (fst cf1)} P\n  I0 \\<in> P\n  i \\<in> I0", "have br: \"i < brn (fst cf1)\""], ["proof (prove)\nusing this:\n  part {..<brn (fst cf1)} P\n  I0 \\<in> P\n  i \\<in> I0\n\ngoal (1 subgoal):\n 1. i < brn (fst cf1)", "by (auto dest: part_is_subset)"], ["proof (state)\nthis:\n  i < brn (fst cf1)\n\ngoal (5 subgoals):\n 1. \\<And>b i.\n       \\<lbrakk>I0 \\<in> P; b \\<in> I0; i \\<in> {()};\n        wt (fst cf1) (snd cf1) b / W cf1 I0 \\<noteq> 0;\n        1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> dist (Ps (cont_eff cf1 b)) (Ps cf2)\n                         \\<le> Pn (cont_eff cf1 b) n' + Pn cf2 m\n 2. \\<And>b.\n       \\<lbrakk>I0 \\<in> P; b \\<in> I0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf1) (snd cf1) b / W cf1 I0\n 3. \\<And>i.\n       \\<lbrakk>I0 \\<in> P; i \\<in> {()}\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> 1\n 4. I0 \\<in> P \\<Longrightarrow>\n    (\\<Sum>b\\<in>I0. wt (fst cf1) (snd cf1) b / W cf1 I0) = 1\n 5. I0 \\<in> P \\<Longrightarrow> (\\<Sum>i\\<in>{()}. 1) = 1", "show \"dist (Ps (cont_eff cf1 i)) (Ps cf2) \\<le> Pn (cont_eff cf1 i) n' + Pn cf2 m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (Ps (cont_eff cf1 i)) (Ps cf2)\n    \\<le> Pn (cont_eff cf1 i) n' + Pn cf2 m", "proof (rule less.hyps)"], ["proof (state)\ngoal (5 subgoals):\n 1. n' + m < n + m\n 2. proper (fst (cont_eff cf1 i))\n 3. proper (fst cf2)\n 4. fst (cont_eff cf1 i) \\<approx>01 fst cf2\n 5. snd (cont_eff cf1 i) \\<approx> snd cf2", "show \"n' + m < n + m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n' + m < n + m", "using nm"], ["proof (prove)\nusing this:\n  n = Suc n'\n  m = Suc m'\n\ngoal (1 subgoal):\n 1. n' + m < n + m", "by simp"], ["proof (state)\nthis:\n  n' + m < n + m\n\ngoal (4 subgoals):\n 1. proper (fst (cont_eff cf1 i))\n 2. proper (fst cf2)\n 3. fst (cont_eff cf1 i) \\<approx>01 fst cf2\n 4. snd (cont_eff cf1 i) \\<approx> snd cf2", "show \"proper (fst (cont_eff cf1 i))\" \"proper (fst cf2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper (fst (cont_eff cf1 i)) &&& proper (fst cf2)", "using br less.prems"], ["proof (prove)\nusing this:\n  i < brn (fst cf1)\n  proper (fst cf1)\n  proper (fst cf2)\n  fst cf1 \\<approx>01 fst cf2\n  snd cf1 \\<approx> snd cf2\n\ngoal (1 subgoal):\n 1. proper (fst (cont_eff cf1 i)) &&& proper (fst cf2)", "by (auto simp: cont_eff)"], ["proof (state)\nthis:\n  proper (fst (cont_eff cf1 i))\n  proper (fst cf2)\n\ngoal (2 subgoals):\n 1. fst (cont_eff cf1 i) \\<approx>01 fst cf2\n 2. snd (cont_eff cf1 i) \\<approx> snd cf2", "show \"fst (cont_eff cf1 i) \\<approx>01 fst cf2\"\n            \"snd (cont_eff cf1 i) \\<approx> snd cf2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (cont_eff cf1 i) \\<approx>01 fst cf2 &&&\n    snd (cont_eff cf1 i) \\<approx> snd cf2", "using I0[OF \\<open>i \\<in> I0\\<close>] \\<open>snd cf1 \\<approx> snd cf2\\<close>"], ["proof (prove)\nusing this:\n  snd cf1 \\<approx> eff (fst cf1) (snd cf1) i\n  local.cont (fst cf1) (snd cf1) i \\<approx>01 fst cf2\n  snd cf1 \\<approx> snd cf2\n\ngoal (1 subgoal):\n 1. fst (cont_eff cf1 i) \\<approx>01 fst cf2 &&&\n    snd (cont_eff cf1 i) \\<approx> snd cf2", "by (auto simp: cont_eff intro: indis_trans indis_sym)"], ["proof (state)\nthis:\n  fst (cont_eff cf1 i) \\<approx>01 fst cf2\n  snd (cont_eff cf1 i) \\<approx> snd cf2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist (Ps (cont_eff cf1 i)) (Ps cf2)\n  \\<le> Pn (cont_eff cf1 i) n' + Pn cf2 m\n\ngoal (4 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>I0 \\<in> P; b \\<in> I0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf1) (snd cf1) b / W cf1 I0\n 2. \\<And>i.\n       \\<lbrakk>I0 \\<in> P; i \\<in> {()}\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> 1\n 3. I0 \\<in> P \\<Longrightarrow>\n    (\\<Sum>b\\<in>I0. wt (fst cf1) (snd cf1) b / W cf1 I0) = 1\n 4. I0 \\<in> P \\<Longrightarrow> (\\<Sum>i\\<in>{()}. 1) = 1", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>I0 \\<in> P; b \\<in> I0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf1) (snd cf1) b / W cf1 I0\n 2. \\<And>i.\n       \\<lbrakk>I0 \\<in> P; i \\<in> {()}\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> 1\n 3. I0 \\<in> P \\<Longrightarrow>\n    (\\<Sum>b\\<in>I0. wt (fst cf1) (snd cf1) b / W cf1 I0) = 1\n 4. I0 \\<in> P \\<Longrightarrow> (\\<Sum>i\\<in>{()}. 1) = 1", "show \"(\\<Sum>b\\<in>I0. wt (fst cf1) (snd cf1) b / W cf1 I0) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>b\\<in>I0. wt (fst cf1) (snd cf1) b / W cf1 I0) = 1", "using W \\<open>I0 \\<in> P\\<close>"], ["proof (prove)\nusing this:\n  W cf1 I0 \\<noteq> 0\n  I0 \\<in> P\n\ngoal (1 subgoal):\n 1. (\\<Sum>b\\<in>I0. wt (fst cf1) (snd cf1) b / W cf1 I0) = 1", "by (auto simp: sum_divide_distrib[symmetric] sum_nonneg W_def)"], ["proof (state)\nthis:\n  (\\<Sum>b\\<in>I0. wt (fst cf1) (snd cf1) b / W cf1 I0) = 1\n\ngoal (3 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>I0 \\<in> P; b \\<in> I0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (fst cf1) (snd cf1) b / W cf1 I0\n 2. \\<And>i.\n       \\<lbrakk>I0 \\<in> P; i \\<in> {()}\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> 1\n 3. I0 \\<in> P \\<Longrightarrow> (\\<Sum>i\\<in>{()}. 1) = 1", "qed auto"], ["proof (state)\nthis:\n  dist (ps cf1 I0) (\\<Sum>i\\<in>{()}. 1 * Ps cf2)\n  \\<le> pn cf1 I0 n' + (\\<Sum>i\\<in>{()}. 1 * Pn cf2 m)\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "then"], ["proof (chain)\npicking this:\n  dist (ps cf1 I0) (\\<Sum>i\\<in>{()}. 1 * Ps cf2)\n  \\<le> pn cf1 I0 n' + (\\<Sum>i\\<in>{()}. 1 * Pn cf2 m)", "have \"dist (ps cf1 I0) (Ps cf2) \\<le> pn cf1 I0 n' + Pn cf2 m\""], ["proof (prove)\nusing this:\n  dist (ps cf1 I0) (\\<Sum>i\\<in>{()}. 1 * Ps cf2)\n  \\<le> pn cf1 I0 n' + (\\<Sum>i\\<in>{()}. 1 * Pn cf2 m)\n\ngoal (1 subgoal):\n 1. dist (ps cf1 I0) (Ps cf2) \\<le> pn cf1 I0 n' + Pn cf2 m", "by simp"], ["proof (state)\nthis:\n  dist (ps cf1 I0) (Ps cf2) \\<le> pn cf1 I0 n' + Pn cf2 m\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "}"], ["proof (state)\nthis:\n  W cf1 I0 \\<noteq> 0 \\<Longrightarrow>\n  dist (ps cf1 I0) (Ps cf2) \\<le> pn cf1 I0 n' + Pn cf2 m\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "note dist_n'_m = this"], ["proof (state)\nthis:\n  W cf1 I0 \\<noteq> 0 \\<Longrightarrow>\n  dist (ps cf1 I0) (Ps cf2) \\<le> pn cf1 I0 n' + Pn cf2 m\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have S_measurable[measurable]: \"\\<And>cf. Measurable.pred T.S (S cf)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>cf. Measurable.pred (stream_space (count_space UNIV)) (S cf)", "unfolding S_def[abs_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>cf.\n       Measurable.pred (stream_space (count_space UNIV))\n        (\\<lambda>bT.\n            \\<exists>n.\n               qsend (cf ## bT) = enat n \\<and>\n               snd ((cf ## bT) !! n) \\<approx> s)", "by measurable"], ["proof (state)\nthis:\n  Measurable.pred (stream_space (count_space UNIV)) (S ?cf1)\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "{"], ["proof (state)\nthis:\n  Measurable.pred (stream_space (count_space UNIV)) (S ?cf1)\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "fix cf' cf"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "assume cf[simp]: \"proper (fst cf)\" and cf': \"cf' \\<in> G cf\""], ["proof (state)\nthis:\n  proper (fst cf)\n  cf' \\<in> G cf\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "let ?S = \"\\<lambda>bT n. qsend bT = enat n \\<and> snd (bT !! n) \\<approx> s\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "fix bT n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "assume *: \"?S (cf ## cf' ## bT) n\""], ["proof (state)\nthis:\n  qsend (cf ## cf' ## bT) = enat n \\<and>\n  snd ((cf ## cf' ## bT) !! n) \\<approx> s\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "have \"S cf' bT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S cf' bT", "proof (cases n)"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> S cf' bT\n 2. \\<And>nat. n = Suc nat \\<Longrightarrow> S cf' bT", "case 0"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> S cf' bT\n 2. \\<And>nat. n = Suc nat \\<Longrightarrow> S cf' bT", "with * cf'"], ["proof (chain)\npicking this:\n  qsend (cf ## cf' ## bT) = enat n \\<and>\n  snd ((cf ## cf' ## bT) !! n) \\<approx> s\n  cf' \\<in> G cf\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  qsend (cf ## cf' ## bT) = enat n \\<and>\n  snd ((cf ## cf' ## bT) !! n) \\<approx> s\n  cf' \\<in> G cf\n  n = 0\n\ngoal (1 subgoal):\n 1. S cf' bT", "by (auto simp: S_def enat_0 sfirst_Stream G_eq split: if_split_asm intro!: exI[of _ 0])\n               (blast intro: indis_trans indis_sym discrCf_eff_indis)"], ["proof (state)\nthis:\n  S cf' bT\n\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> S cf' bT", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> S cf' bT", "case (Suc n)"], ["proof (state)\nthis:\n  nb__ = Suc n\n\ngoal (1 subgoal):\n 1. \\<And>nat. nb__ = Suc nat \\<Longrightarrow> S cf' bT", "with * cf'"], ["proof (chain)\npicking this:\n  qsend (cf ## cf' ## bT) = enat nb__ \\<and>\n  snd ((cf ## cf' ## bT) !! nb__) \\<approx> s\n  cf' \\<in> G cf\n  nb__ = Suc n", "show \"S cf' bT\""], ["proof (prove)\nusing this:\n  qsend (cf ## cf' ## bT) = enat nb__ \\<and>\n  snd ((cf ## cf' ## bT) !! nb__) \\<approx> s\n  cf' \\<in> G cf\n  nb__ = Suc n\n\ngoal (1 subgoal):\n 1. S cf' bT", "by (auto simp: eSuc_enat[symmetric] sfirst_Stream S_def split: if_split_asm)"], ["proof (state)\nthis:\n  S cf' bT\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  S cf' bT\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "}"], ["proof (state)\nthis:\n  qsend (cf ## cf' ## ?bT3) = enat ?nb3 \\<and>\n  snd ((cf ## cf' ## ?bT3) !! ?nb3) \\<approx> s \\<Longrightarrow>\n  S cf' ?bT3\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "moreover"], ["proof (state)\nthis:\n  qsend (cf ## cf' ## ?bT3) = enat ?nb3 \\<and>\n  snd ((cf ## cf' ## ?bT3) !! ?nb3) \\<approx> s \\<Longrightarrow>\n  S cf' ?bT3\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "{"], ["proof (state)\nthis:\n  qsend (cf ## cf' ## ?bT3) = enat ?nb3 \\<and>\n  snd ((cf ## cf' ## ?bT3) !! ?nb3) \\<approx> s \\<Longrightarrow>\n  S cf' ?bT3\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "fix bT n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "assume \"?S (cf' ## bT) n\""], ["proof (state)\nthis:\n  qsend (cf' ## bT) = enat n \\<and> snd ((cf' ## bT) !! n) \\<approx> s\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "with cf'"], ["proof (chain)\npicking this:\n  cf' \\<in> G cf\n  qsend (cf' ## bT) = enat n \\<and> snd ((cf' ## bT) !! n) \\<approx> s", "have \"?S (cf ## cf' ## bT) (if discrCf cf then 0 else Suc n)\""], ["proof (prove)\nusing this:\n  cf' \\<in> G cf\n  qsend (cf' ## bT) = enat n \\<and> snd ((cf' ## bT) !! n) \\<approx> s\n\ngoal (1 subgoal):\n 1. qsend (cf ## cf' ## bT) = enat (if discrCf cf then 0 else Suc n) \\<and>\n    snd ((cf ## cf' ## bT) !! (if discrCf cf then 0 else Suc n)) \\<approx> s", "by (auto simp: eSuc_enat[symmetric] enat_0[symmetric] sfirst_Stream G_eq split: if_split_asm)\n             (blast intro: indis_trans indis_sym discrCf_eff_indis)"], ["proof (state)\nthis:\n  qsend (cf ## cf' ## bT) = enat (if discrCf cf then 0 else Suc n) \\<and>\n  snd ((cf ## cf' ## bT) !! (if discrCf cf then 0 else Suc n)) \\<approx> s\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "then"], ["proof (chain)\npicking this:\n  qsend (cf ## cf' ## bT) = enat (if discrCf cf then 0 else Suc n) \\<and>\n  snd ((cf ## cf' ## bT) !! (if discrCf cf then 0 else Suc n)) \\<approx> s", "have \"S cf (cf' ## bT)\""], ["proof (prove)\nusing this:\n  qsend (cf ## cf' ## bT) = enat (if discrCf cf then 0 else Suc n) \\<and>\n  snd ((cf ## cf' ## bT) !! (if discrCf cf then 0 else Suc n)) \\<approx> s\n\ngoal (1 subgoal):\n 1. S cf (cf' ## bT)", "by (auto simp: S_def)"], ["proof (state)\nthis:\n  S cf (cf' ## bT)\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "}"], ["proof (state)\nthis:\n  qsend (cf' ## ?bT3) = enat ?nb3 \\<and>\n  snd ((cf' ## ?bT3) !! ?nb3) \\<approx> s \\<Longrightarrow>\n  S cf (cf' ## ?bT3)\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "ultimately"], ["proof (chain)\npicking this:\n  qsend (cf ## cf' ## ?bT3) = enat ?nb3 \\<and>\n  snd ((cf ## cf' ## ?bT3) !! ?nb3) \\<approx> s \\<Longrightarrow>\n  S cf' ?bT3\n  qsend (cf' ## ?bT3) = enat ?nb3 \\<and>\n  snd ((cf' ## ?bT3) !! ?nb3) \\<approx> s \\<Longrightarrow>\n  S cf (cf' ## ?bT3)", "have \"AE bT in T.T cf'. S cf (cf' ## bT) = S cf' bT\""], ["proof (prove)\nusing this:\n  qsend (cf ## cf' ## ?bT3) = enat ?nb3 \\<and>\n  snd ((cf ## cf' ## ?bT3) !! ?nb3) \\<approx> s \\<Longrightarrow>\n  S cf' ?bT3\n  qsend (cf' ## ?bT3) = enat ?nb3 \\<and>\n  snd ((cf' ## ?bT3) !! ?nb3) \\<approx> s \\<Longrightarrow>\n  S cf (cf' ## ?bT3)\n\ngoal (1 subgoal):\n 1. AE bT in T cf'. S cf (cf' ## bT) = S cf' bT", "by (auto simp: S_def)"], ["proof (state)\nthis:\n  AE bT in T cf'. S cf (cf' ## bT) = S cf' bT\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "}"], ["proof (state)\nthis:\n  \\<lbrakk>proper (fst ?cf3); ?cf'3 \\<in> G ?cf3\\<rbrakk>\n  \\<Longrightarrow> AE bT in T ?cf'3. S ?cf3 (?cf'3 ## bT) = S ?cf'3 bT\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "note S_sets = this"], ["proof (state)\nthis:\n  \\<lbrakk>proper (fst ?cf3); ?cf'3 \\<in> G ?cf3\\<rbrakk>\n  \\<Longrightarrow> AE bT in T ?cf'3. S ?cf3 (?cf'3 ## bT) = S ?cf'3 bT\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "{"], ["proof (state)\nthis:\n  \\<lbrakk>proper (fst ?cf3); ?cf'3 \\<in> G ?cf3\\<rbrakk>\n  \\<Longrightarrow> AE bT in T ?cf'3. S ?cf3 (?cf'3 ## bT) = S ?cf'3 bT\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "fix cf :: \"('test, 'atom, 'choice) cmd \\<times> 'state\" and P I0 S n st"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "assume cf[simp]: \"proper (fst cf)\" and P: \"part {..<brn (fst cf)} P\" and \"finite P\" \"I0 \\<in> P\""], ["proof (state)\nthis:\n  proper (fst cf)\n  part {..<brn (fst cf)} P\n  finite P\n  I0 \\<in> P\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "{"], ["proof (state)\nthis:\n  proper (fst cf)\n  part {..<brn (fst cf)} P\n  finite P\n  I0 \\<in> P\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "fix I i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "assume \"I \\<in> P\" \"i \\<in> I\""], ["proof (state)\nthis:\n  I \\<in> P\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "with P"], ["proof (chain)\npicking this:\n  part {..<brn (fst cf)} P\n  I \\<in> P\n  i \\<in> I", "have \"0 \\<le> wt (fst cf) (snd cf) i\""], ["proof (prove)\nusing this:\n  part {..<brn (fst cf)} P\n  I \\<in> P\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. 0 \\<le> wt (fst cf) (snd cf) i", "by (auto dest: part_is_subset intro!: wt_ge_0)"], ["proof (state)\nthis:\n  0 \\<le> wt (fst cf) (snd cf) i\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?I3 \\<in> P; ?i3 \\<in> ?I3\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> wt (fst cf) (snd cf) ?i3\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "note wt_nneg[simp] = this"], ["proof (state)\nthis:\n  \\<lbrakk>?I3 \\<in> P; ?i3 \\<in> ?I3\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> wt (fst cf) (snd cf) ?i3\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "assume S_measurable[measurable]: \"\\<And>cf n. Measurable.pred T.S (\\<lambda>bT. S cf n bT)\"\n        and S_next: \"\\<And>cf cf' n. proper (fst cf) \\<Longrightarrow> cf' \\<in> G cf \\<Longrightarrow>\n          AE bT in T.T cf'. S cf (Suc n) (cf' ## bT) = S cf' n bT\""], ["proof (state)\nthis:\n  Measurable.pred (stream_space (count_space UNIV)) (S ?cf1 ?n1)\n  \\<lbrakk>proper (fst ?cf1); ?cf'1 \\<in> G ?cf1\\<rbrakk>\n  \\<Longrightarrow> AE bT in T ?cf'1. S ?cf1 (Suc ?n1) (?cf'1 ## bT) =\nS ?cf'1 ?n1 bT\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "have finite_I: \"\\<And>I. I \\<in> P \\<Longrightarrow> finite I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>I. I \\<in> P \\<Longrightarrow> finite I", "using finite_subset[OF part_is_subset[OF P]]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<in> P; finite {..<brn (fst cf)}\\<rbrakk>\n  \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. \\<And>I. I \\<in> P \\<Longrightarrow> finite I", "by blast"], ["proof (state)\nthis:\n  ?I1 \\<in> P \\<Longrightarrow> finite ?I1\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "let ?P = \"\\<lambda>I. \\<Sum>i\\<in>I. wt (fst cf) (snd cf) i * \\<P>(bT in T.T (cont_eff cf i). S (cont_eff cf i) n bT)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "let ?P' = \"\\<lambda>I. W cf I * (\\<Sum>i\\<in>I. wt (fst cf) (snd cf) i / W cf I * \\<P>(bT in T.T (cont_eff cf i). S (cont_eff cf i) n bT))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "have \"\\<P>(bT in T.T cf. S cf (Suc n) bT) = (\\<integral>cf'. \\<P>(bT in T.T cf'. S cf' n bT) \\<partial>trans cf)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T.prob cf {bT \\<in> space (T cf). S cf (Suc n) bT} =\n    measure_pmf.expectation (local.trans cf)\n     (\\<lambda>cf'. T.prob cf' {bT \\<in> space (T cf'). S cf' n bT})", "apply (subst T.prob_T[OF S_measurable])"], ["proof (prove)\ngoal (1 subgoal):\n 1. measure_pmf.expectation (local.trans cf)\n     (\\<lambda>t.\n         T.prob t\n          {\\<omega> \\<in> space (T t). S cf (Suc n) (t ## \\<omega>)}) =\n    measure_pmf.expectation (local.trans cf)\n     (\\<lambda>cf'. T.prob cf' {bT \\<in> space (T cf'). S cf' n bT})", "apply (intro integral_cong_AE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. measure_pmf.random_variable (local.trans cf) borel\n     (\\<lambda>t.\n         T.prob t\n          {\\<omega> \\<in> space (T t). S cf (Suc n) (t ## \\<omega>)})\n 2. measure_pmf.random_variable (local.trans cf) borel\n     (\\<lambda>cf'. T.prob cf' {bT \\<in> space (T cf'). S cf' n bT})\n 3. AE x in measure_pmf\n             (local.trans\n               cf). T.prob x\n                     {\\<omega> \\<in> space (T x).\n                      S cf (Suc n) (x ## \\<omega>)} =\n                    T.prob x {bT \\<in> space (T x). S x n bT}", "apply (auto simp: AE_measure_pmf_iff intro!: T.prob_eq_AE S_next simp del: space_T)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> G cf \\<Longrightarrow>\n       {\\<omega> \\<in> space (T (a, b)). S cf (Suc n) ((a, b) ## \\<omega>)}\n       \\<in> sets (stream_space (count_space UNIV))\n 2. \\<And>a b.\n       (a, b) \\<in> G cf \\<Longrightarrow>\n       {\\<omega> \\<in> space (T (a, b)). S (a, b) n \\<omega>}\n       \\<in> sets (stream_space (count_space UNIV))", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  T.prob cf {bT \\<in> space (T cf). S cf (Suc n) bT} =\n  measure_pmf.expectation (local.trans cf)\n   (\\<lambda>cf'. T.prob cf' {bT \\<in> space (T cf'). S cf' n bT})\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "also"], ["proof (state)\nthis:\n  T.prob cf {bT \\<in> space (T cf). S cf (Suc n) bT} =\n  measure_pmf.expectation (local.trans cf)\n   (\\<lambda>cf'. T.prob cf' {bT \\<in> space (T cf'). S cf' n bT})\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "have \"\\<dots> = (\\<Sum>I\\<in>P. ?P I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. measure_pmf.expectation (local.trans cf)\n     (\\<lambda>cf'. T.prob cf' {bT \\<in> space (T cf'). S cf' n bT}) =\n    sum (sum (\\<lambda>i.\n                 wt (fst cf) (snd cf) i *\n                 T.prob (cont_eff cf i)\n                  {bT \\<in> space (T (cont_eff cf i)).\n                   S (cont_eff cf i) n bT}))\n     P", "unfolding integral_trans[OF cf]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<brn (fst cf).\n        wt (fst cf) (snd cf) i *\n        T.prob (cont_eff cf i)\n         {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT}) =\n    sum (sum (\\<lambda>i.\n                 wt (fst cf) (snd cf) i *\n                 T.prob (cont_eff cf i)\n                  {bT \\<in> space (T (cont_eff cf i)).\n                   S (cont_eff cf i) n bT}))\n     P", "by (simp add: part_sum[OF P])"], ["proof (state)\nthis:\n  measure_pmf.expectation (local.trans cf)\n   (\\<lambda>cf'. T.prob cf' {bT \\<in> space (T cf'). S cf' n bT}) =\n  sum (sum (\\<lambda>i.\n               wt (fst cf) (snd cf) i *\n               T.prob (cont_eff cf i)\n                {bT \\<in> space (T (cont_eff cf i)).\n                 S (cont_eff cf i) n bT}))\n   P\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "also"], ["proof (state)\nthis:\n  measure_pmf.expectation (local.trans cf)\n   (\\<lambda>cf'. T.prob cf' {bT \\<in> space (T cf'). S cf' n bT}) =\n  sum (sum (\\<lambda>i.\n               wt (fst cf) (snd cf) i *\n               T.prob (cont_eff cf i)\n                {bT \\<in> space (T (cont_eff cf i)).\n                 S (cont_eff cf i) n bT}))\n   P\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "have \"\\<dots> = (\\<Sum>I\\<in>P. ?P' I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (sum (\\<lambda>i.\n                 wt (fst cf) (snd cf) i *\n                 T.prob (cont_eff cf i)\n                  {bT \\<in> space (T (cont_eff cf i)).\n                   S (cont_eff cf i) n bT}))\n     P =\n    (\\<Sum>I\\<in>P.\n       W cf I *\n       (\\<Sum>i\\<in>I.\n          wt (fst cf) (snd cf) i / W cf I *\n          T.prob (cont_eff cf i)\n           {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT}))", "using finite_I"], ["proof (prove)\nusing this:\n  ?I1 \\<in> P \\<Longrightarrow> finite ?I1\n\ngoal (1 subgoal):\n 1. sum (sum (\\<lambda>i.\n                 wt (fst cf) (snd cf) i *\n                 T.prob (cont_eff cf i)\n                  {bT \\<in> space (T (cont_eff cf i)).\n                   S (cont_eff cf i) n bT}))\n     P =\n    (\\<Sum>I\\<in>P.\n       W cf I *\n       (\\<Sum>i\\<in>I.\n          wt (fst cf) (snd cf) i / W cf I *\n          T.prob (cont_eff cf i)\n           {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT}))", "by (auto intro!: sum.cong simp add: sum_distrib_left sum_nonneg_eq_0_iff W_def)"], ["proof (state)\nthis:\n  sum (sum (\\<lambda>i.\n               wt (fst cf) (snd cf) i *\n               T.prob (cont_eff cf i)\n                {bT \\<in> space (T (cont_eff cf i)).\n                 S (cont_eff cf i) n bT}))\n   P =\n  (\\<Sum>I\\<in>P.\n     W cf I *\n     (\\<Sum>i\\<in>I.\n        wt (fst cf) (snd cf) i / W cf I *\n        T.prob (cont_eff cf i)\n         {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT}))\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "also"], ["proof (state)\nthis:\n  sum (sum (\\<lambda>i.\n               wt (fst cf) (snd cf) i *\n               T.prob (cont_eff cf i)\n                {bT \\<in> space (T (cont_eff cf i)).\n                 S (cont_eff cf i) n bT}))\n   P =\n  (\\<Sum>I\\<in>P.\n     W cf I *\n     (\\<Sum>i\\<in>I.\n        wt (fst cf) (snd cf) i / W cf I *\n        T.prob (cont_eff cf i)\n         {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT}))\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "have \"\\<dots> = ?P' I0 + (\\<Sum>I\\<in>P-{I0}. ?P' I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>I\\<in>P.\n       W cf I *\n       (\\<Sum>i\\<in>I.\n          wt (fst cf) (snd cf) i / W cf I *\n          T.prob (cont_eff cf i)\n           {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT})) =\n    W cf I0 *\n    (\\<Sum>i\\<in>I0.\n       wt (fst cf) (snd cf) i / W cf I0 *\n       T.prob (cont_eff cf i)\n        {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT}) +\n    (\\<Sum>I\\<in>P - {I0}.\n       W cf I *\n       (\\<Sum>i\\<in>I.\n          wt (fst cf) (snd cf) i / W cf I *\n          T.prob (cont_eff cf i)\n           {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT}))", "unfolding sum.remove[OF \\<open>finite P\\<close> \\<open>I0 \\<in> P\\<close>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. W cf I0 *\n    (\\<Sum>i\\<in>I0.\n       wt (fst cf) (snd cf) i / W cf I0 *\n       T.prob (cont_eff cf i)\n        {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT}) +\n    (\\<Sum>I\\<in>P - {I0}.\n       W cf I *\n       (\\<Sum>i\\<in>I.\n          wt (fst cf) (snd cf) i / W cf I *\n          T.prob (cont_eff cf i)\n           {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT})) =\n    W cf I0 *\n    (\\<Sum>i\\<in>I0.\n       wt (fst cf) (snd cf) i / W cf I0 *\n       T.prob (cont_eff cf i)\n        {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT}) +\n    (\\<Sum>I\\<in>P - {I0}.\n       W cf I *\n       (\\<Sum>i\\<in>I.\n          wt (fst cf) (snd cf) i / W cf I *\n          T.prob (cont_eff cf i)\n           {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT}))", ".."], ["proof (state)\nthis:\n  (\\<Sum>I\\<in>P.\n     W cf I *\n     (\\<Sum>i\\<in>I.\n        wt (fst cf) (snd cf) i / W cf I *\n        T.prob (cont_eff cf i)\n         {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT})) =\n  W cf I0 *\n  (\\<Sum>i\\<in>I0.\n     wt (fst cf) (snd cf) i / W cf I0 *\n     T.prob (cont_eff cf i)\n      {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT}) +\n  (\\<Sum>I\\<in>P - {I0}.\n     W cf I *\n     (\\<Sum>i\\<in>I.\n        wt (fst cf) (snd cf) i / W cf I *\n        T.prob (cont_eff cf i)\n         {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT}))\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "finally"], ["proof (chain)\npicking this:\n  T.prob cf {bT \\<in> space (T cf). S cf (Suc n) bT} =\n  W cf I0 *\n  (\\<Sum>i\\<in>I0.\n     wt (fst cf) (snd cf) i / W cf I0 *\n     T.prob (cont_eff cf i)\n      {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT}) +\n  (\\<Sum>I\\<in>P - {I0}.\n     W cf I *\n     (\\<Sum>i\\<in>I.\n        wt (fst cf) (snd cf) i / W cf I *\n        T.prob (cont_eff cf i)\n         {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT}))", "have \"\\<P>(bT in T.T cf. S cf (Suc n) bT) = \\<dots>\""], ["proof (prove)\nusing this:\n  T.prob cf {bT \\<in> space (T cf). S cf (Suc n) bT} =\n  W cf I0 *\n  (\\<Sum>i\\<in>I0.\n     wt (fst cf) (snd cf) i / W cf I0 *\n     T.prob (cont_eff cf i)\n      {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT}) +\n  (\\<Sum>I\\<in>P - {I0}.\n     W cf I *\n     (\\<Sum>i\\<in>I.\n        wt (fst cf) (snd cf) i / W cf I *\n        T.prob (cont_eff cf i)\n         {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT}))\n\ngoal (1 subgoal):\n 1. T.prob cf {bT \\<in> space (T cf). S cf (Suc n) bT} =\n    W cf I0 *\n    (\\<Sum>i\\<in>I0.\n       wt (fst cf) (snd cf) i / W cf I0 *\n       T.prob (cont_eff cf i)\n        {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT}) +\n    (\\<Sum>I\\<in>P - {I0}.\n       W cf I *\n       (\\<Sum>i\\<in>I.\n          wt (fst cf) (snd cf) i / W cf I *\n          T.prob (cont_eff cf i)\n           {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT}))", "."], ["proof (state)\nthis:\n  T.prob cf {bT \\<in> space (T cf). S cf (Suc n) bT} =\n  W cf I0 *\n  (\\<Sum>i\\<in>I0.\n     wt (fst cf) (snd cf) i / W cf I0 *\n     T.prob (cont_eff cf i)\n      {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT}) +\n  (\\<Sum>I\\<in>P - {I0}.\n     W cf I *\n     (\\<Sum>i\\<in>I.\n        wt (fst cf) (snd cf) i / W cf I *\n        T.prob (cont_eff cf i)\n         {bT \\<in> space (T (cont_eff cf i)). S (cont_eff cf i) n bT}))\n\ngoal (1 subgoal):\n 1. \\<not> (na__ = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 na__ + Pn cf2 m", "}"], ["proof (state)\nthis:\n  \\<lbrakk>proper (fst ?cf3); part {..<brn (fst ?cf3)} ?Pa3; finite ?Pa3;\n   ?I0a3 \\<in> ?Pa3;\n   \\<And>cf n.\n      Measurable.pred (stream_space (count_space UNIV)) (?Sa3 cf n);\n   \\<And>cf cf' n.\n      \\<lbrakk>proper (fst cf); cf' \\<in> G cf\\<rbrakk>\n      \\<Longrightarrow> AE bT in T cf'. ?Sa3 cf (Suc n) (cf' ## bT) =\n  ?Sa3 cf' n bT\\<rbrakk>\n  \\<Longrightarrow> T.prob ?cf3\n                     {bT \\<in> space (T ?cf3). ?Sa3 ?cf3 (Suc ?nb3) bT} =\n                    W ?cf3 ?I0a3 *\n                    (\\<Sum>i\\<in>?I0a3.\n                       wt (fst ?cf3) (snd ?cf3) i / W ?cf3 ?I0a3 *\n                       T.prob (cont_eff ?cf3 i)\n                        {bT \\<in> space (T (cont_eff ?cf3 i)).\n                         ?Sa3 (cont_eff ?cf3 i) ?nb3 bT}) +\n                    (\\<Sum>I\\<in>?Pa3 - {?I0a3}.\n                       W ?cf3 I *\n                       (\\<Sum>i\\<in>I.\n                          wt (fst ?cf3) (snd ?cf3) i / W ?cf3 I *\n                          T.prob (cont_eff ?cf3 i)\n                           {bT \\<in> space (T (cont_eff ?cf3 i)).\n                            ?Sa3 (cont_eff ?cf3 i) ?nb3 bT}))\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "note P_split = this"], ["proof (state)\nthis:\n  \\<lbrakk>proper (fst ?cf3); part {..<brn (fst ?cf3)} ?Pa3; finite ?Pa3;\n   ?I0a3 \\<in> ?Pa3;\n   \\<And>cf n.\n      Measurable.pred (stream_space (count_space UNIV)) (?Sa3 cf n);\n   \\<And>cf cf' n.\n      \\<lbrakk>proper (fst cf); cf' \\<in> G cf\\<rbrakk>\n      \\<Longrightarrow> AE bT in T cf'. ?Sa3 cf (Suc n) (cf' ## bT) =\n  ?Sa3 cf' n bT\\<rbrakk>\n  \\<Longrightarrow> T.prob ?cf3\n                     {bT \\<in> space (T ?cf3). ?Sa3 ?cf3 (Suc ?nb3) bT} =\n                    W ?cf3 ?I0a3 *\n                    (\\<Sum>i\\<in>?I0a3.\n                       wt (fst ?cf3) (snd ?cf3) i / W ?cf3 ?I0a3 *\n                       T.prob (cont_eff ?cf3 i)\n                        {bT \\<in> space (T (cont_eff ?cf3 i)).\n                         ?Sa3 (cont_eff ?cf3 i) ?nb3 bT}) +\n                    (\\<Sum>I\\<in>?Pa3 - {?I0a3}.\n                       W ?cf3 I *\n                       (\\<Sum>i\\<in>I.\n                          wt (fst ?cf3) (snd ?cf3) i / W ?cf3 I *\n                          T.prob (cont_eff ?cf3 i)\n                           {bT \\<in> space (T (cont_eff ?cf3 i)).\n                            ?Sa3 (cont_eff ?cf3 i) ?nb3 bT}))\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have Ps1: \"Ps cf1 = W cf1 I0 * ps cf1 I0 + (\\<Sum>I\\<in>P-{I0}. W cf1 I * ps cf1 I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ps cf1 =\n    W cf1 I0 * ps cf1 I0 + (\\<Sum>I\\<in>P - {I0}. W cf1 I * ps cf1 I)", "unfolding Ps_def ps_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. T.prob cf1 {bT \\<in> space (T cf1). S cf1 bT} =\n    W cf1 I0 *\n    (\\<Sum>b\\<in>I0.\n       wt (fst cf1) (snd cf1) b / W cf1 I0 *\n       T.prob (cont_eff cf1 b)\n        {bT \\<in> space (T (cont_eff cf1 b)). S (cont_eff cf1 b) bT}) +\n    (\\<Sum>I\\<in>P - {I0}.\n       W cf1 I *\n       (\\<Sum>b\\<in>I.\n          wt (fst cf1) (snd cf1) b / W cf1 I *\n          T.prob (cont_eff cf1 b)\n           {bT \\<in> space (T (cont_eff cf1 b)). S (cont_eff cf1 b) bT}))", "using P(2) \\<open>finite P\\<close> \\<open>I0 \\<in> P\\<close>"], ["proof (prove)\nusing this:\n  part {..<brn (fst cf1)} P\n  finite P\n  I0 \\<in> P\n\ngoal (1 subgoal):\n 1. T.prob cf1 {bT \\<in> space (T cf1). S cf1 bT} =\n    W cf1 I0 *\n    (\\<Sum>b\\<in>I0.\n       wt (fst cf1) (snd cf1) b / W cf1 I0 *\n       T.prob (cont_eff cf1 b)\n        {bT \\<in> space (T (cont_eff cf1 b)). S (cont_eff cf1 b) bT}) +\n    (\\<Sum>I\\<in>P - {I0}.\n       W cf1 I *\n       (\\<Sum>b\\<in>I.\n          wt (fst cf1) (snd cf1) b / W cf1 I *\n          T.prob (cont_eff cf1 b)\n           {bT \\<in> space (T (cont_eff cf1 b)). S (cont_eff cf1 b) bT}))", "by (intro P_split S_sets) simp_all"], ["proof (state)\nthis:\n  Ps cf1 = W cf1 I0 * ps cf1 I0 + (\\<Sum>I\\<in>P - {I0}. W cf1 I * ps cf1 I)\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have \"Ps cf2 = W cf2 (F I0) * ps cf2 (F I0) + (\\<Sum>I\\<in>F`P-{F I0}. W cf2 I * ps cf2 I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ps cf2 =\n    W cf2 (F I0) * ps cf2 (F I0) +\n    (\\<Sum>I\\<in>F ` P - {F I0}. W cf2 I * ps cf2 I)", "unfolding Ps_def ps_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. T.prob cf2 {bT \\<in> space (T cf2). S cf2 bT} =\n    W cf2 (F I0) *\n    (\\<Sum>b\\<in>F I0.\n       wt (fst cf2) (snd cf2) b / W cf2 (F I0) *\n       T.prob (cont_eff cf2 b)\n        {bT \\<in> space (T (cont_eff cf2 b)). S (cont_eff cf2 b) bT}) +\n    (\\<Sum>I\\<in>F ` P - {F I0}.\n       W cf2 I *\n       (\\<Sum>b\\<in>I.\n          wt (fst cf2) (snd cf2) b / W cf2 I *\n          T.prob (cont_eff cf2 b)\n           {bT \\<in> space (T (cont_eff cf2 b)). S (cont_eff cf2 b) bT}))", "using FP(2) \\<open>finite P\\<close> \\<open>I0 \\<in> P\\<close>"], ["proof (prove)\nusing this:\n  part {..<brn (fst cf2)} (F ` P)\n  finite P\n  I0 \\<in> P\n\ngoal (1 subgoal):\n 1. T.prob cf2 {bT \\<in> space (T cf2). S cf2 bT} =\n    W cf2 (F I0) *\n    (\\<Sum>b\\<in>F I0.\n       wt (fst cf2) (snd cf2) b / W cf2 (F I0) *\n       T.prob (cont_eff cf2 b)\n        {bT \\<in> space (T (cont_eff cf2 b)). S (cont_eff cf2 b) bT}) +\n    (\\<Sum>I\\<in>F ` P - {F I0}.\n       W cf2 I *\n       (\\<Sum>b\\<in>I.\n          wt (fst cf2) (snd cf2) b / W cf2 I *\n          T.prob (cont_eff cf2 b)\n           {bT \\<in> space (T (cont_eff cf2 b)). S (cont_eff cf2 b) bT}))", "by (intro P_split S_sets) simp_all"], ["proof (state)\nthis:\n  Ps cf2 =\n  W cf2 (F I0) * ps cf2 (F I0) +\n  (\\<Sum>I\\<in>F ` P - {F I0}. W cf2 I * ps cf2 I)\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "moreover"], ["proof (state)\nthis:\n  Ps cf2 =\n  W cf2 (F I0) * ps cf2 (F I0) +\n  (\\<Sum>I\\<in>F ` P - {F I0}. W cf2 I * ps cf2 I)\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have F_diff: \"F ` P - {F I0} = F ` (P - {I0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ` P - {F I0} = F ` (P - {I0})", "by (auto simp: \\<open>inj_on F P\\<close>[THEN inj_on_eq_iff] \\<open>I0 \\<in> P\\<close>)"], ["proof (state)\nthis:\n  F ` P - {F I0} = F ` (P - {I0})\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "ultimately"], ["proof (chain)\npicking this:\n  Ps cf2 =\n  W cf2 (F I0) * ps cf2 (F I0) +\n  (\\<Sum>I\\<in>F ` P - {F I0}. W cf2 I * ps cf2 I)\n  F ` P - {F I0} = F ` (P - {I0})", "have Ps2: \"Ps cf2 = W cf2 (F I0) * ps cf2 (F I0) + (\\<Sum>I\\<in>P-{I0}. W cf2 (F I) * ps cf2 (F I))\""], ["proof (prove)\nusing this:\n  Ps cf2 =\n  W cf2 (F I0) * ps cf2 (F I0) +\n  (\\<Sum>I\\<in>F ` P - {F I0}. W cf2 I * ps cf2 I)\n  F ` P - {F I0} = F ` (P - {I0})\n\ngoal (1 subgoal):\n 1. Ps cf2 =\n    W cf2 (F I0) * ps cf2 (F I0) +\n    (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * ps cf2 (F I))", "by (simp add: sum.reindex \\<open>inj_on F (P-{I0})\\<close>)"], ["proof (state)\nthis:\n  Ps cf2 =\n  W cf2 (F I0) * ps cf2 (F I0) +\n  (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * ps cf2 (F I))\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have Pn1: \"Pn cf1 n = W cf1 I0 * pn cf1 I0 n' + (\\<Sum>I\\<in>P-{I0}. W cf1 I * pn cf1 I n')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pn cf1 n =\n    W cf1 I0 * pn cf1 I0 n' + (\\<Sum>I\\<in>P - {I0}. W cf1 I * pn cf1 I n')", "unfolding Pn_def pn_def nm"], ["proof (prove)\ngoal (1 subgoal):\n 1. T.prob cf1 {bT \\<in> space (T cf1). N cf1 (Suc n') bT} =\n    W cf1 I0 *\n    (\\<Sum>b\\<in>I0.\n       wt (fst cf1) (snd cf1) b / W cf1 I0 *\n       T.prob (cont_eff cf1 b)\n        {bT \\<in> space (T (cont_eff cf1 b)). N (cont_eff cf1 b) n' bT}) +\n    (\\<Sum>I\\<in>P - {I0}.\n       W cf1 I *\n       (\\<Sum>b\\<in>I.\n          wt (fst cf1) (snd cf1) b / W cf1 I *\n          T.prob (cont_eff cf1 b)\n           {bT \\<in> space (T (cont_eff cf1 b)). N (cont_eff cf1 b) n' bT}))", "using P(2) \\<open>finite P\\<close> \\<open>I0 \\<in> P\\<close>"], ["proof (prove)\nusing this:\n  part {..<brn (fst cf1)} P\n  finite P\n  I0 \\<in> P\n\ngoal (1 subgoal):\n 1. T.prob cf1 {bT \\<in> space (T cf1). N cf1 (Suc n') bT} =\n    W cf1 I0 *\n    (\\<Sum>b\\<in>I0.\n       wt (fst cf1) (snd cf1) b / W cf1 I0 *\n       T.prob (cont_eff cf1 b)\n        {bT \\<in> space (T (cont_eff cf1 b)). N (cont_eff cf1 b) n' bT}) +\n    (\\<Sum>I\\<in>P - {I0}.\n       W cf1 I *\n       (\\<Sum>b\\<in>I.\n          wt (fst cf1) (snd cf1) b / W cf1 I *\n          T.prob (cont_eff cf1 b)\n           {bT \\<in> space (T (cont_eff cf1 b)). N (cont_eff cf1 b) n' bT}))", "by (intro P_split) (simp_all add: N_def)"], ["proof (state)\nthis:\n  Pn cf1 n =\n  W cf1 I0 * pn cf1 I0 n' + (\\<Sum>I\\<in>P - {I0}. W cf1 I * pn cf1 I n')\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have \"Pn cf2 m = W cf2 (F I0) * pn cf2 (F I0) m' + (\\<Sum>I\\<in>F`P-{F I0}. W cf2 I * pn cf2 I m')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pn cf2 m =\n    W cf2 (F I0) * pn cf2 (F I0) m' +\n    (\\<Sum>I\\<in>F ` P - {F I0}. W cf2 I * pn cf2 I m')", "unfolding Pn_def pn_def nm"], ["proof (prove)\ngoal (1 subgoal):\n 1. T.prob cf2 {bT \\<in> space (T cf2). N cf2 (Suc m') bT} =\n    W cf2 (F I0) *\n    (\\<Sum>b\\<in>F I0.\n       wt (fst cf2) (snd cf2) b / W cf2 (F I0) *\n       T.prob (cont_eff cf2 b)\n        {bT \\<in> space (T (cont_eff cf2 b)). N (cont_eff cf2 b) m' bT}) +\n    (\\<Sum>I\\<in>F ` P - {F I0}.\n       W cf2 I *\n       (\\<Sum>b\\<in>I.\n          wt (fst cf2) (snd cf2) b / W cf2 I *\n          T.prob (cont_eff cf2 b)\n           {bT \\<in> space (T (cont_eff cf2 b)). N (cont_eff cf2 b) m' bT}))", "using FP(2) \\<open>finite P\\<close> \\<open>I0 \\<in> P\\<close>"], ["proof (prove)\nusing this:\n  part {..<brn (fst cf2)} (F ` P)\n  finite P\n  I0 \\<in> P\n\ngoal (1 subgoal):\n 1. T.prob cf2 {bT \\<in> space (T cf2). N cf2 (Suc m') bT} =\n    W cf2 (F I0) *\n    (\\<Sum>b\\<in>F I0.\n       wt (fst cf2) (snd cf2) b / W cf2 (F I0) *\n       T.prob (cont_eff cf2 b)\n        {bT \\<in> space (T (cont_eff cf2 b)). N (cont_eff cf2 b) m' bT}) +\n    (\\<Sum>I\\<in>F ` P - {F I0}.\n       W cf2 I *\n       (\\<Sum>b\\<in>I.\n          wt (fst cf2) (snd cf2) b / W cf2 I *\n          T.prob (cont_eff cf2 b)\n           {bT \\<in> space (T (cont_eff cf2 b)). N (cont_eff cf2 b) m' bT}))", "by (intro P_split) (simp_all add: N_def)"], ["proof (state)\nthis:\n  Pn cf2 m =\n  W cf2 (F I0) * pn cf2 (F I0) m' +\n  (\\<Sum>I\\<in>F ` P - {F I0}. W cf2 I * pn cf2 I m')\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "with F_diff"], ["proof (chain)\npicking this:\n  F ` P - {F I0} = F ` (P - {I0})\n  Pn cf2 m =\n  W cf2 (F I0) * pn cf2 (F I0) m' +\n  (\\<Sum>I\\<in>F ` P - {F I0}. W cf2 I * pn cf2 I m')", "have Pn2: \"Pn cf2 m = W cf2 (F I0) * pn cf2 (F I0) m' + (\\<Sum>I\\<in>P-{I0}. W cf2 (F I) * pn cf2 (F I) m')\""], ["proof (prove)\nusing this:\n  F ` P - {F I0} = F ` (P - {I0})\n  Pn cf2 m =\n  W cf2 (F I0) * pn cf2 (F I0) m' +\n  (\\<Sum>I\\<in>F ` P - {F I0}. W cf2 I * pn cf2 I m')\n\ngoal (1 subgoal):\n 1. Pn cf2 m =\n    W cf2 (F I0) * pn cf2 (F I0) m' +\n    (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * pn cf2 (F I) m')", "by (simp add: sum.reindex \\<open>inj_on F (P-{I0})\\<close>)"], ["proof (state)\nthis:\n  Pn cf2 m =\n  W cf2 (F I0) * pn cf2 (F I0) m' +\n  (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * pn cf2 (F I) m')\n\ngoal (1 subgoal):\n 1. \\<not> (n = 0 \\<or> m = 0) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. \\<not> ?P \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "assume \"W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1\""], ["proof (state)\nthis:\n  W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. \\<not> ?P \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "then"], ["proof (chain)\npicking this:\n  W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1\n\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. W cf1 I0 = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "assume *: \"W cf1 I0 = 1\""], ["proof (state)\nthis:\n  W cf1 I0 = 1\n\ngoal (2 subgoals):\n 1. W cf1 I0 = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "then"], ["proof (chain)\npicking this:\n  W cf1 I0 = 1", "have \"W cf1 I0 = W cf1 {..<brn (fst cf1)}\""], ["proof (prove)\nusing this:\n  W cf1 I0 = 1\n\ngoal (1 subgoal):\n 1. W cf1 I0 = W cf1 {..<brn (fst cf1)}", "by (simp add: W_def)"], ["proof (state)\nthis:\n  W cf1 I0 = W cf1 {..<brn (fst cf1)}\n\ngoal (2 subgoals):\n 1. W cf1 I0 = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "also"], ["proof (state)\nthis:\n  W cf1 I0 = W cf1 {..<brn (fst cf1)}\n\ngoal (2 subgoals):\n 1. W cf1 I0 = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have \"\\<dots> = W cf1 I0 + (\\<Sum>I\\<in>P - {I0}. W cf1 I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W cf1 {..<brn (fst cf1)} = W cf1 I0 + sum (W cf1) (P - {I0})", "unfolding \\<open>part {..<brn (fst cf1)} P\\<close>[THEN part_sum] W_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (sum (wt (fst cf1) (snd cf1))) P =\n    sum (wt (fst cf1) (snd cf1)) I0 +\n    sum (sum (wt (fst cf1) (snd cf1))) (P - {I0})", "unfolding sum.remove[OF \\<open>finite P\\<close> \\<open>I0 \\<in> P\\<close>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (fst cf1) (snd cf1)) I0 +\n    sum (sum (wt (fst cf1) (snd cf1))) (P - {I0}) =\n    sum (wt (fst cf1) (snd cf1)) I0 +\n    sum (sum (wt (fst cf1) (snd cf1))) (P - {I0})", ".."], ["proof (state)\nthis:\n  W cf1 {..<brn (fst cf1)} = W cf1 I0 + sum (W cf1) (P - {I0})\n\ngoal (2 subgoals):\n 1. W cf1 I0 = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "finally"], ["proof (chain)\npicking this:\n  W cf1 I0 = W cf1 I0 + sum (W cf1) (P - {I0})", "have \"(\\<Sum>I\\<in>P - {I0}. W cf1 I) = 0\""], ["proof (prove)\nusing this:\n  W cf1 I0 = W cf1 I0 + sum (W cf1) (P - {I0})\n\ngoal (1 subgoal):\n 1. sum (W cf1) (P - {I0}) = 0", "by simp"], ["proof (state)\nthis:\n  sum (W cf1) (P - {I0}) = 0\n\ngoal (2 subgoals):\n 1. W cf1 I0 = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "then"], ["proof (chain)\npicking this:\n  sum (W cf1) (P - {I0}) = 0", "have \"\\<forall>I\\<in>P - {I0}. W cf1 I = 0\""], ["proof (prove)\nusing this:\n  sum (W cf1) (P - {I0}) = 0\n\ngoal (1 subgoal):\n 1. \\<forall>I\\<in>P - {I0}. W cf1 I = 0", "using \\<open>finite P\\<close>"], ["proof (prove)\nusing this:\n  sum (W cf1) (P - {I0}) = 0\n  finite P\n\ngoal (1 subgoal):\n 1. \\<forall>I\\<in>P - {I0}. W cf1 I = 0", "by (subst (asm) sum_nonneg_eq_0_iff) auto"], ["proof (state)\nthis:\n  \\<forall>I\\<in>P - {I0}. W cf1 I = 0\n\ngoal (2 subgoals):\n 1. W cf1 I0 = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "then"], ["proof (chain)\npicking this:\n  \\<forall>I\\<in>P - {I0}. W cf1 I = 0", "have \"Ps cf1 = ps cf1 I0\" \"Pn cf1 n = pn cf1 I0 n'\""], ["proof (prove)\nusing this:\n  \\<forall>I\\<in>P - {I0}. W cf1 I = 0\n\ngoal (1 subgoal):\n 1. Ps cf1 = ps cf1 I0 &&& Pn cf1 n = pn cf1 I0 n'", "unfolding Ps1 Pn1 *"], ["proof (prove)\nusing this:\n  \\<forall>I\\<in>P - {I0}. W cf1 I = 0\n\ngoal (1 subgoal):\n 1. 1 * ps cf1 I0 + (\\<Sum>I\\<in>P - {I0}. W cf1 I * ps cf1 I) =\n    ps cf1 I0 &&&\n    1 * pn cf1 I0 n' + (\\<Sum>I\\<in>P - {I0}. W cf1 I * pn cf1 I n') =\n    pn cf1 I0 n'", "by simp_all"], ["proof (state)\nthis:\n  Ps cf1 = ps cf1 I0\n  Pn cf1 n = pn cf1 I0 n'\n\ngoal (2 subgoals):\n 1. W cf1 I0 = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "moreover"], ["proof (state)\nthis:\n  Ps cf1 = ps cf1 I0\n  Pn cf1 n = pn cf1 I0 n'\n\ngoal (2 subgoals):\n 1. W cf1 I0 = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "note dist_n'_m *"], ["proof (state)\nthis:\n  W cf1 I0 \\<noteq> 0 \\<Longrightarrow>\n  dist (ps cf1 I0) (Ps cf2) \\<le> pn cf1 I0 n' + Pn cf2 m\n  W cf1 I0 = 1\n\ngoal (2 subgoals):\n 1. W cf1 I0 = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n 2. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "ultimately"], ["proof (chain)\npicking this:\n  Ps cf1 = ps cf1 I0\n  Pn cf1 n = pn cf1 I0 n'\n  W cf1 I0 \\<noteq> 0 \\<Longrightarrow>\n  dist (ps cf1 I0) (Ps cf2) \\<le> pn cf1 I0 n' + Pn cf2 m\n  W cf1 I0 = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  Ps cf1 = ps cf1 I0\n  Pn cf1 n = pn cf1 I0 n'\n  W cf1 I0 \\<noteq> 0 \\<Longrightarrow>\n  dist (ps cf1 I0) (Ps cf2) \\<le> pn cf1 I0 n' + Pn cf2 m\n  W cf1 I0 = 1\n\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "by simp"], ["proof (state)\nthis:\n  dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n\ngoal (1 subgoal):\n 1. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "assume *: \"W cf2 (F I0) = 1\""], ["proof (state)\nthis:\n  W cf2 (F I0) = 1\n\ngoal (1 subgoal):\n 1. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "then"], ["proof (chain)\npicking this:\n  W cf2 (F I0) = 1", "have \"W cf2 (F I0) = W cf2 {..<brn (fst cf2)}\""], ["proof (prove)\nusing this:\n  W cf2 (F I0) = 1\n\ngoal (1 subgoal):\n 1. W cf2 (F I0) = W cf2 {..<brn (fst cf2)}", "by (simp add: W_def)"], ["proof (state)\nthis:\n  W cf2 (F I0) = W cf2 {..<brn (fst cf2)}\n\ngoal (1 subgoal):\n 1. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "also"], ["proof (state)\nthis:\n  W cf2 (F I0) = W cf2 {..<brn (fst cf2)}\n\ngoal (1 subgoal):\n 1. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have \"\\<dots> = W cf2 (F I0) + (\\<Sum>I\\<in>F ` P - {F I0}. W cf2 I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W cf2 {..<brn (fst cf2)} = W cf2 (F I0) + sum (W cf2) (F ` P - {F I0})", "unfolding FP(2)[THEN part_sum] W_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (sum (wt (fst cf2) (snd cf2))) (F ` P) =\n    sum (wt (fst cf2) (snd cf2)) (F I0) +\n    sum (sum (wt (fst cf2) (snd cf2))) (F ` P - {F I0})", "unfolding sum.remove[OF FP']"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (fst cf2) (snd cf2)) (F I0) +\n    sum (sum (wt (fst cf2) (snd cf2))) (F ` P - {F I0}) =\n    sum (wt (fst cf2) (snd cf2)) (F I0) +\n    sum (sum (wt (fst cf2) (snd cf2))) (F ` P - {F I0})", ".."], ["proof (state)\nthis:\n  W cf2 {..<brn (fst cf2)} = W cf2 (F I0) + sum (W cf2) (F ` P - {F I0})\n\ngoal (1 subgoal):\n 1. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "finally"], ["proof (chain)\npicking this:\n  W cf2 (F I0) = W cf2 (F I0) + sum (W cf2) (F ` P - {F I0})", "have \"(\\<Sum>I\\<in>F`P - {F I0}. W cf2 I) = 0\""], ["proof (prove)\nusing this:\n  W cf2 (F I0) = W cf2 (F I0) + sum (W cf2) (F ` P - {F I0})\n\ngoal (1 subgoal):\n 1. sum (W cf2) (F ` P - {F I0}) = 0", "by simp"], ["proof (state)\nthis:\n  sum (W cf2) (F ` P - {F I0}) = 0\n\ngoal (1 subgoal):\n 1. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "then"], ["proof (chain)\npicking this:\n  sum (W cf2) (F ` P - {F I0}) = 0", "have \"\\<forall>I\\<in>F`P - {F I0}. W cf2 I = 0\""], ["proof (prove)\nusing this:\n  sum (W cf2) (F ` P - {F I0}) = 0\n\ngoal (1 subgoal):\n 1. \\<forall>I\\<in>F ` P - {F I0}. W cf2 I = 0", "using \\<open>finite P\\<close>"], ["proof (prove)\nusing this:\n  sum (W cf2) (F ` P - {F I0}) = 0\n  finite P\n\ngoal (1 subgoal):\n 1. \\<forall>I\\<in>F ` P - {F I0}. W cf2 I = 0", "by (subst (asm) sum_nonneg_eq_0_iff) auto"], ["proof (state)\nthis:\n  \\<forall>I\\<in>F ` P - {F I0}. W cf2 I = 0\n\ngoal (1 subgoal):\n 1. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "then"], ["proof (chain)\npicking this:\n  \\<forall>I\\<in>F ` P - {F I0}. W cf2 I = 0", "have \"Ps cf2 = ps cf2 (F I0)\" \"Pn cf2 m = pn cf2 (F I0) m'\""], ["proof (prove)\nusing this:\n  \\<forall>I\\<in>F ` P - {F I0}. W cf2 I = 0\n\ngoal (1 subgoal):\n 1. Ps cf2 = ps cf2 (F I0) &&& Pn cf2 m = pn cf2 (F I0) m'", "unfolding Ps2 Pn2 *"], ["proof (prove)\nusing this:\n  \\<forall>I\\<in>F ` P - {F I0}. W cf2 I = 0\n\ngoal (1 subgoal):\n 1. 1 * ps cf2 (F I0) + (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * ps cf2 (F I)) =\n    ps cf2 (F I0) &&&\n    1 * pn cf2 (F I0) m' +\n    (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * pn cf2 (F I) m') =\n    pn cf2 (F I0) m'", "by (simp_all add: F_diff)"], ["proof (state)\nthis:\n  Ps cf2 = ps cf2 (F I0)\n  Pn cf2 m = pn cf2 (F I0) m'\n\ngoal (1 subgoal):\n 1. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "moreover"], ["proof (state)\nthis:\n  Ps cf2 = ps cf2 (F I0)\n  Pn cf2 m = pn cf2 (F I0) m'\n\ngoal (1 subgoal):\n 1. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "note dist_n_m' *"], ["proof (state)\nthis:\n  W cf2 (F I0) \\<noteq> 0 \\<Longrightarrow>\n  dist (Ps cf1) (ps cf2 (F I0)) \\<le> Pn cf1 n + pn cf2 (F I0) m'\n  W cf2 (F I0) = 1\n\ngoal (1 subgoal):\n 1. W cf2 (F I0) = 1 \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "ultimately"], ["proof (chain)\npicking this:\n  Ps cf2 = ps cf2 (F I0)\n  Pn cf2 m = pn cf2 (F I0) m'\n  W cf2 (F I0) \\<noteq> 0 \\<Longrightarrow>\n  dist (Ps cf1) (ps cf2 (F I0)) \\<le> Pn cf1 n + pn cf2 (F I0) m'\n  W cf2 (F I0) = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  Ps cf2 = ps cf2 (F I0)\n  Pn cf2 m = pn cf2 (F I0) m'\n  W cf2 (F I0) \\<noteq> 0 \\<Longrightarrow>\n  dist (Ps cf1) (ps cf2 (F I0)) \\<le> Pn cf1 n + pn cf2 (F I0) m'\n  W cf2 (F I0) = 1\n\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "by simp"], ["proof (state)\nthis:\n  dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "assume W_neq1: \"\\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1)\""], ["proof (state)\nthis:\n  \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1)\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "moreover"], ["proof (state)\nthis:\n  \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1)\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "{"], ["proof (state)\nthis:\n  \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1)\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "fix cf :: \"('test, 'atom, 'choice) cmd \\<times> 'state\" and I P"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "assume \"proper (fst cf)\" \"part {..<brn (fst (cf))} P\" \"I \\<in> P\""], ["proof (state)\nthis:\n  proper (fst cf)\n  part {..<brn (fst cf)} P\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "then"], ["proof (chain)\npicking this:\n  proper (fst cf)\n  part {..<brn (fst cf)} P\n  I \\<in> P", "have \"W cf I \\<le> W cf {..<brn (fst (cf))}\""], ["proof (prove)\nusing this:\n  proper (fst cf)\n  part {..<brn (fst cf)} P\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. W cf I \\<le> W cf {..<brn (fst cf)}", "unfolding W_def"], ["proof (prove)\nusing this:\n  proper (fst cf)\n  part {..<brn (fst cf)} P\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. sum (wt (fst cf) (snd cf)) I\n    \\<le> sum (wt (fst cf) (snd cf)) {..<brn (fst cf)}", "by (intro sum_mono2 part_is_subset) auto"], ["proof (state)\nthis:\n  W cf I \\<le> W cf {..<brn (fst cf)}\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "then"], ["proof (chain)\npicking this:\n  W cf I \\<le> W cf {..<brn (fst cf)}", "have \"W cf I \\<le> 1\""], ["proof (prove)\nusing this:\n  W cf I \\<le> W cf {..<brn (fst cf)}\n\ngoal (1 subgoal):\n 1. W cf I \\<le> 1", "using \\<open>proper (fst cf)\\<close>"], ["proof (prove)\nusing this:\n  W cf I \\<le> W cf {..<brn (fst cf)}\n  proper (fst cf)\n\ngoal (1 subgoal):\n 1. W cf I \\<le> 1", "by (simp add: W_def)"], ["proof (state)\nthis:\n  W cf I \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "}"], ["proof (state)\nthis:\n  \\<lbrakk>proper (fst ?cf3); part {..<brn (fst ?cf3)} ?Pa3;\n   ?I3 \\<in> ?Pa3\\<rbrakk>\n  \\<Longrightarrow> W ?cf3 ?I3 \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1)\n  \\<lbrakk>proper (fst ?cf3); part {..<brn (fst ?cf3)} ?Pa3;\n   ?I3 \\<in> ?Pa3\\<rbrakk>\n  \\<Longrightarrow> W ?cf3 ?I3 \\<le> 1", "have wt_less1: \"W cf1 I0 < 1\" \"W cf2 (F I0) < 1\""], ["proof (prove)\nusing this:\n  \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1)\n  \\<lbrakk>proper (fst ?cf3); part {..<brn (fst ?cf3)} ?Pa3;\n   ?I3 \\<in> ?Pa3\\<rbrakk>\n  \\<Longrightarrow> W ?cf3 ?I3 \\<le> 1\n\ngoal (1 subgoal):\n 1. W cf1 I0 < 1 &&& W cf2 (F I0) < 1", "using FP(2) FP'(2) P(2) \\<open>I0 \\<in> P\\<close>"], ["proof (prove)\nusing this:\n  \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1)\n  \\<lbrakk>proper (fst ?cf3); part {..<brn (fst ?cf3)} ?Pa3;\n   ?I3 \\<in> ?Pa3\\<rbrakk>\n  \\<Longrightarrow> W ?cf3 ?I3 \\<le> 1\n  part {..<brn (fst cf2)} (F ` P)\n  F I0 \\<in> F ` P\n  part {..<brn (fst cf1)} P\n  I0 \\<in> P\n\ngoal (1 subgoal):\n 1. W cf1 I0 < 1 &&& W cf2 (F I0) < 1", "unfolding le_less"], ["proof (prove)\nusing this:\n  \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1)\n  \\<lbrakk>proper (fst ?cf3); part {..<brn (fst ?cf3)} ?Pa3;\n   ?I3 \\<in> ?Pa3\\<rbrakk>\n  \\<Longrightarrow> W ?cf3 ?I3 < 1 \\<or> W ?cf3 ?I3 = 1\n  part {..<brn (fst cf2)} (F ` P)\n  F I0 \\<in> F ` P\n  part {..<brn (fst cf1)} P\n  I0 \\<in> P\n\ngoal (1 subgoal):\n 1. W cf1 I0 < 1 &&& W cf2 (F I0) < 1", "by blast+"], ["proof (state)\nthis:\n  W cf1 I0 < 1\n  W cf2 (F I0) < 1\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "{"], ["proof (state)\nthis:\n  W cf1 I0 < 1\n  W cf2 (F I0) < 1\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "fix I"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "assume *: \"I \\<in> P - {I0}\""], ["proof (state)\nthis:\n  I \\<in> P - {I0}\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have \"W cf1 I = 0 \\<longleftrightarrow> W cf2 (F I) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (W cf1 I = 0) = (W cf2 (F I) = 0)", "using wt[OF * wt_less1] wt_less1"], ["proof (prove)\nusing this:\n  W cf1 I / (1 - W cf1 I0) = W cf2 (F I) / (1 - W cf2 (F I0))\n  W cf1 I0 < 1\n  W cf2 (F I0) < 1\n\ngoal (1 subgoal):\n 1. (W cf1 I = 0) = (W cf2 (F I) = 0)", "by auto"], ["proof (state)\nthis:\n  (W cf1 I = 0) = (W cf2 (F I) = 0)\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "with *"], ["proof (chain)\npicking this:\n  I \\<in> P - {I0}\n  (W cf1 I = 0) = (W cf2 (F I) = 0)", "have \"dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'\""], ["proof (prove)\nusing this:\n  I \\<in> P - {I0}\n  (W cf1 I = 0) = (W cf2 (F I) = 0)\n\ngoal (1 subgoal):\n 1. dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'", "by (intro dist_n'_m'_W_iff) auto"], ["proof (state)\nthis:\n  dist (ps cf1 I) (ps cf2 (F I)) \\<le> pn cf1 I n' + pn cf2 (F I) m'\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "}"], ["proof (state)\nthis:\n  ?I3 \\<in> P - {I0} \\<Longrightarrow>\n  dist (ps cf1 ?I3) (ps cf2 (F ?I3)) \\<le> pn cf1 ?I3 n' + pn cf2 (F ?I3) m'\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "note dist_eps = this"], ["proof (state)\nthis:\n  ?I3 \\<in> P - {I0} \\<Longrightarrow>\n  dist (ps cf1 ?I3) (ps cf2 (F ?I3)) \\<le> pn cf1 ?I3 n' + pn cf2 (F ?I3) m'\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "{"], ["proof (state)\nthis:\n  ?I3 \\<in> P - {I0} \\<Longrightarrow>\n  dist (ps cf1 ?I3) (ps cf2 (F ?I3)) \\<le> pn cf1 ?I3 n' + pn cf2 (F ?I3) m'\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "fix a b c d :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have \"dist a b = dist ((a - c) + c) ((b - d) + d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist a b = dist (a - c + c) (b - d + d)", "by simp"], ["proof (state)\nthis:\n  dist a b = dist (a - c + c) (b - d + d)\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "also"], ["proof (state)\nthis:\n  dist a b = dist (a - c + c) (b - d + d)\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have \"\\<dots> \\<le> dist (a - c) (b - d) + dist c d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (a - c + c) (b - d + d) \\<le> dist (a - c) (b - d) + dist c d", "using dist_triangle_add"], ["proof (prove)\nusing this:\n  dist (?x + ?y) (?x' + ?y') \\<le> dist ?x ?x' + dist ?y ?y'\n\ngoal (1 subgoal):\n 1. dist (a - c + c) (b - d + d) \\<le> dist (a - c) (b - d) + dist c d", "."], ["proof (state)\nthis:\n  dist (a - c + c) (b - d + d) \\<le> dist (a - c) (b - d) + dist c d\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "finally"], ["proof (chain)\npicking this:\n  dist a b \\<le> dist (a - c) (b - d) + dist c d", "have \"dist a b \\<le> dist (a - c) (b - d) + dist c d\""], ["proof (prove)\nusing this:\n  dist a b \\<le> dist (a - c) (b - d) + dist c d\n\ngoal (1 subgoal):\n 1. dist a b \\<le> dist (a - c) (b - d) + dist c d", "."], ["proof (state)\nthis:\n  dist a b \\<le> dist (a - c) (b - d) + dist c d\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "}"], ["proof (state)\nthis:\n  dist ?a3 ?b3 \\<le> dist (?a3 - ?c3) (?b3 - ?d3) + dist ?c3 ?d3\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "note dist_triangle_diff = this"], ["proof (state)\nthis:\n  dist ?a3 ?b3 \\<le> dist (?a3 - ?c3) (?b3 - ?d3) + dist ?c3 ?d3\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have dist_diff_diff: \"\\<And>a b c d::real. dist (a - b) (c - d) \\<le> dist a b + dist c d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c d. dist (a - b) (c - d) \\<le> dist a b + dist c d", "unfolding dist_real_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c d.\n       \\<bar>a - b - (c - d)\\<bar>\n       \\<le> \\<bar>a - b\\<bar> + \\<bar>c - d\\<bar>", "by auto"], ["proof (state)\nthis:\n  dist (?a1 - ?b1) (?c1 - ?d1) \\<le> dist ?a1 ?b1 + dist ?c1 ?d1\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "let ?v0 = \"W cf1 I0\" and ?w0 = \"W cf2 (F I0)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "let ?v1 = \"1 - ?v0\" and ?w1 = \"1 - ?w0\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "let ?wQ = \"(Ps cf2 - ?w0 * ps cf2 (F I0)) / ?w1\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "let ?wP = \"(Ps cf1 - ?v0 * ps cf1 I0) / ?v1\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "let ?D = \"(?w0 * ?v1 * Ps cf1 + ?w1 * ?v0 * ps cf1 I0)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "let ?E = \"(?v0 * ?w1 * Ps cf2 + ?v1 * ?w0 * ps cf2 (F I0))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have w0v0_less1: \"?w0 * ?v0 < 1 * 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W cf2 (F I0) * W cf1 I0 < 1 * 1", "using wt_less1 \\<open>I0 \\<in> P\\<close>"], ["proof (prove)\nusing this:\n  W cf1 I0 < 1\n  W cf2 (F I0) < 1\n  I0 \\<in> P\n\ngoal (1 subgoal):\n 1. W cf2 (F I0) * W cf1 I0 < 1 * 1", "by (intro mult_strict_mono) auto"], ["proof (state)\nthis:\n  W cf2 (F I0) * W cf1 I0 < 1 * 1\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "then"], ["proof (chain)\npicking this:\n  W cf2 (F I0) * W cf1 I0 < 1 * 1", "have neg_w0v0_nonneg: \"0 \\<le> 1 - ?w0 * ?v0\""], ["proof (prove)\nusing this:\n  W cf2 (F I0) * W cf1 I0 < 1 * 1\n\ngoal (1 subgoal):\n 1. 0 \\<le> 1 - W cf2 (F I0) * W cf1 I0", "by simp"], ["proof (state)\nthis:\n  0 \\<le> 1 - W cf2 (F I0) * W cf1 I0\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "let ?e1 = \"(\\<Sum>I\\<in>P-{I0}. W cf1 I / ?v1 * pn cf1 I n') +\n            (\\<Sum>I\\<in>P-{I0}. W cf2 (F I) / ?w1 * pn cf2 (F I) m')\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have \"dist ((1 - ?w0 * ?v0) * Ps cf1) ((1 - ?w0 * ?v0) * Ps cf2) \\<le>\n        dist ((1 - ?w0 * ?v0) * Ps cf1 - ?D) ((1 - ?w0 * ?v0) * Ps cf2 - ?E) + dist ?D ?E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1)\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2)\n    \\<le> dist\n           ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n            (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n             (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n           ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n            (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n             (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))) +\n          dist\n           (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n            (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n           (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n            (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))", "by (rule dist_triangle_diff)"], ["proof (state)\nthis:\n  dist ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1)\n   ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2)\n  \\<le> dist\n         ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n          (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n           (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n         ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n          (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n           (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))) +\n        dist\n         (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n          (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n         (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n          (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "also"], ["proof (state)\nthis:\n  dist ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1)\n   ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2)\n  \\<le> dist\n         ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n          (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n           (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n         ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n          (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n           (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))) +\n        dist\n         (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n          (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n         (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n          (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have \"\\<dots> \\<le> ?v1 * ?w1 * ?e1 + (?v1 * ?w0 * (Pn cf1 n + pn cf2 (F I0) m') + ?w1 * ?v0 * (pn cf1 I0 n' + Pn cf2 m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))) +\n    dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m')) +\n          ((1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n           (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m))", "proof (rule add_mono)"], ["proof (state)\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "have \"?wP = (\\<Sum>I\\<in>P-{I0}. W cf1 I * ps cf1 I) / ?v1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0) =\n    (\\<Sum>I\\<in>P - {I0}. W cf1 I * ps cf1 I) / (1 - W cf1 I0)", "unfolding Ps1"], ["proof (prove)\ngoal (1 subgoal):\n 1. (W cf1 I0 * ps cf1 I0 + (\\<Sum>I\\<in>P - {I0}. W cf1 I * ps cf1 I) -\n     W cf1 I0 * ps cf1 I0) /\n    (1 - W cf1 I0) =\n    (\\<Sum>I\\<in>P - {I0}. W cf1 I * ps cf1 I) / (1 - W cf1 I0)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I * ps cf1 I) / (1 - W cf1 I0)\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "also"], ["proof (state)\nthis:\n  (Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I * ps cf1 I) / (1 - W cf1 I0)\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "have \"\\<dots> = (\\<Sum>I\\<in>P-{I0}. W cf1 I / ?v1 * ps cf1 I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>I\\<in>P - {I0}. W cf1 I * ps cf1 I) / (1 - W cf1 I0) =\n    (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf1 I)", "by (subst sum_divide_distrib) simp"], ["proof (state)\nthis:\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I * ps cf1 I) / (1 - W cf1 I0) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf1 I)\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "finally"], ["proof (chain)\npicking this:\n  (Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf1 I)", "have \"?wP = (\\<Sum>I\\<in>P-{I0}. W cf1 I / ?v1 * ps cf1 I)\""], ["proof (prove)\nusing this:\n  (Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf1 I)\n\ngoal (1 subgoal):\n 1. (Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0) =\n    (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf1 I)", "."], ["proof (state)\nthis:\n  (Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf1 I)\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "}"], ["proof (state)\nthis:\n  (Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf1 I)\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "moreover"], ["proof (state)\nthis:\n  (Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf1 I)\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "{"], ["proof (state)\nthis:\n  (Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf1 I)\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "have \"?wQ = (\\<Sum>I\\<in>P-{I0}. W cf2 (F I) * ps cf2 (F I)) / ?w1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)) =\n    (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * ps cf2 (F I)) / (1 - W cf2 (F I0))", "using Ps2"], ["proof (prove)\nusing this:\n  Ps cf2 =\n  W cf2 (F I0) * ps cf2 (F I0) +\n  (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * ps cf2 (F I))\n\ngoal (1 subgoal):\n 1. (Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)) =\n    (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * ps cf2 (F I)) / (1 - W cf2 (F I0))", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)) =\n  (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * ps cf2 (F I)) / (1 - W cf2 (F I0))\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "also"], ["proof (state)\nthis:\n  (Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)) =\n  (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * ps cf2 (F I)) / (1 - W cf2 (F I0))\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "have \"\\<dots> = (\\<Sum>I\\<in>P-{I0}. W cf2 (F I) / ?w1 * ps cf2 (F I))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * ps cf2 (F I)) /\n    (1 - W cf2 (F I0)) =\n    (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) / (1 - W cf2 (F I0)) * ps cf2 (F I))", "by (subst sum_divide_distrib) simp"], ["proof (state)\nthis:\n  (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * ps cf2 (F I)) / (1 - W cf2 (F I0)) =\n  (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) / (1 - W cf2 (F I0)) * ps cf2 (F I))\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "also"], ["proof (state)\nthis:\n  (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * ps cf2 (F I)) / (1 - W cf2 (F I0)) =\n  (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) / (1 - W cf2 (F I0)) * ps cf2 (F I))\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "have \"\\<dots> = (\\<Sum>I\\<in>P-{I0}. W cf1 I / ?v1 * ps cf2 (F I))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>I\\<in>P - {I0}.\n       W cf2 (F I) / (1 - W cf2 (F I0)) * ps cf2 (F I)) =\n    (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf2 (F I))", "using wt[OF _ wt_less1]"], ["proof (prove)\nusing this:\n  ?I1 \\<in> P - {I0} \\<Longrightarrow>\n  W cf1 ?I1 / (1 - W cf1 I0) = W cf2 (F ?I1) / (1 - W cf2 (F I0))\n\ngoal (1 subgoal):\n 1. (\\<Sum>I\\<in>P - {I0}.\n       W cf2 (F I) / (1 - W cf2 (F I0)) * ps cf2 (F I)) =\n    (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf2 (F I))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) / (1 - W cf2 (F I0)) * ps cf2 (F I)) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf2 (F I))\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "finally"], ["proof (chain)\npicking this:\n  (Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf2 (F I))", "have \"?wQ = (\\<Sum>I\\<in>P-{I0}. W cf1 I / ?v1 * ps cf2 (F I))\""], ["proof (prove)\nusing this:\n  (Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf2 (F I))\n\ngoal (1 subgoal):\n 1. (Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)) =\n    (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf2 (F I))", "."], ["proof (state)\nthis:\n  (Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf2 (F I))\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "}"], ["proof (state)\nthis:\n  (Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf2 (F I))\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "ultimately"], ["proof (chain)\npicking this:\n  (Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf1 I)\n  (Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf2 (F I))", "have \"dist ?wP ?wQ \\<le> (\\<Sum>I\\<in>P-{I0}. W cf1 I / ?v1 * (pn cf1 I n' + pn cf2 (F I) m'))\""], ["proof (prove)\nusing this:\n  (Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf1 I)\n  (Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf2 (F I))\n\ngoal (1 subgoal):\n 1. dist ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0))\n     ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)))\n    \\<le> (\\<Sum>I\\<in>P - {I0}.\n             W cf1 I / (1 - W cf1 I0) * (pn cf1 I n' + pn cf2 (F I) m'))", "using wt_less1 dist_eps"], ["proof (prove)\nusing this:\n  (Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf1 I)\n  (Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * ps cf2 (F I))\n  W cf1 I0 < 1\n  W cf2 (F I0) < 1\n  ?I3 \\<in> P - {I0} \\<Longrightarrow>\n  dist (ps cf1 ?I3) (ps cf2 (F ?I3)) \\<le> pn cf1 ?I3 n' + pn cf2 (F ?I3) m'\n\ngoal (1 subgoal):\n 1. dist ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0))\n     ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)))\n    \\<le> (\\<Sum>I\\<in>P - {I0}.\n             W cf1 I / (1 - W cf1 I0) * (pn cf1 I n' + pn cf2 (F I) m'))", "by (simp, intro dist_sum)\n             (simp add: sum_nonneg divide_le_cancel mult_le_cancel_left not_le[symmetric] W1_nneg)"], ["proof (state)\nthis:\n  dist ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0))\n   ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)))\n  \\<le> (\\<Sum>I\\<in>P - {I0}.\n           W cf1 I / (1 - W cf1 I0) * (pn cf1 I n' + pn cf2 (F I) m'))\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "also"], ["proof (state)\nthis:\n  dist ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0))\n   ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)))\n  \\<le> (\\<Sum>I\\<in>P - {I0}.\n           W cf1 I / (1 - W cf1 I0) * (pn cf1 I n' + pn cf2 (F I) m'))\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "have \"\\<dots> = ?e1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>I\\<in>P - {I0}.\n       W cf1 I / (1 - W cf1 I0) * (pn cf1 I n' + pn cf2 (F I) m')) =\n    (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n    (\\<Sum>I\\<in>P - {I0}.\n       W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m')", "unfolding sum.distrib[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>I\\<in>P - {I0}.\n       W cf1 I / (1 - W cf1 I0) * (pn cf1 I n' + pn cf2 (F I) m')) =\n    (\\<Sum>x\\<in>P - {I0}.\n       W cf1 x / (1 - W cf1 I0) * pn cf1 x n' +\n       W cf2 (F x) / (1 - W cf2 (F I0)) * pn cf2 (F x) m')", "using  wt[OF _ wt_less1]"], ["proof (prove)\nusing this:\n  ?I1 \\<in> P - {I0} \\<Longrightarrow>\n  W cf1 ?I1 / (1 - W cf1 I0) = W cf2 (F ?I1) / (1 - W cf2 (F I0))\n\ngoal (1 subgoal):\n 1. (\\<Sum>I\\<in>P - {I0}.\n       W cf1 I / (1 - W cf1 I0) * (pn cf1 I n' + pn cf2 (F I) m')) =\n    (\\<Sum>x\\<in>P - {I0}.\n       W cf1 x / (1 - W cf1 I0) * pn cf1 x n' +\n       W cf2 (F x) / (1 - W cf2 (F I0)) * pn cf2 (F x) m')", "by (simp add: field_simps add_divide_distrib)"], ["proof (state)\nthis:\n  (\\<Sum>I\\<in>P - {I0}.\n     W cf1 I / (1 - W cf1 I0) * (pn cf1 I n' + pn cf2 (F I) m')) =\n  (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n  (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m')\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "finally"], ["proof (chain)\npicking this:\n  dist ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0))\n   ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)))\n  \\<le> (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n        (\\<Sum>I\\<in>P - {I0}.\n           W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m')", "have \"dist (?v1 * ?w1 * ?wP) (?v1 * ?w1 * ?wQ) \\<le> ?v1 * ?w1 * ?e1\""], ["proof (prove)\nusing this:\n  dist ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0))\n   ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)))\n  \\<le> (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n        (\\<Sum>I\\<in>P - {I0}.\n           W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m')\n\ngoal (1 subgoal):\n 1. dist\n     ((1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n      ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0)))\n     ((1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n      ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0))))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))", "using wt_less1"], ["proof (prove)\nusing this:\n  dist ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0))\n   ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)))\n  \\<le> (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n        (\\<Sum>I\\<in>P - {I0}.\n           W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m')\n  W cf1 I0 < 1\n  W cf2 (F I0) < 1\n\ngoal (1 subgoal):\n 1. dist\n     ((1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n      ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0)))\n     ((1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n      ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0))))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))", "unfolding dist_mult"], ["proof (prove)\nusing this:\n  dist ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0))\n   ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)))\n  \\<le> (\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n        (\\<Sum>I\\<in>P - {I0}.\n           W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m')\n  W cf1 I0 < 1\n  W cf2 (F I0) < 1\n\ngoal (1 subgoal):\n 1. \\<bar>(1 - W cf1 I0) * (1 - W cf2 (F I0))\\<bar> *\n    dist ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0))\n     ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))", "by simp"], ["proof (state)\nthis:\n  dist\n   ((1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n    ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0)))\n   ((1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n    ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0))))\n  \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n        ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n         (\\<Sum>I\\<in>P - {I0}.\n            W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "also"], ["proof (state)\nthis:\n  dist\n   ((1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n    ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0)))\n   ((1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n    ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0))))\n  \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n        ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n         (\\<Sum>I\\<in>P - {I0}.\n            W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "{"], ["proof (state)\nthis:\n  dist\n   ((1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n    ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0)))\n   ((1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n    ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0))))\n  \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n        ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n         (\\<Sum>I\\<in>P - {I0}.\n            W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "have \"?v1 * ?w1 * ?wP = ?w1 * (?v0 * Ps cf1 + ?v1 * Ps cf1) - ?w1 * ?v0 * ps cf1 I0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n    ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0)) =\n    (1 - W cf2 (F I0)) * (W cf1 I0 * Ps cf1 + (1 - W cf1 I0) * Ps cf1) -\n    (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0", "using wt_less1"], ["proof (prove)\nusing this:\n  W cf1 I0 < 1\n  W cf2 (F I0) < 1\n\ngoal (1 subgoal):\n 1. (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n    ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0)) =\n    (1 - W cf2 (F I0)) * (W cf1 I0 * Ps cf1 + (1 - W cf1 I0) * Ps cf1) -\n    (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0", "unfolding divide_eq_eq"], ["proof (prove)\nusing this:\n  W cf1 I0 < 1\n  W cf2 (F I0) < 1\n\ngoal (1 subgoal):\n 1. (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n    ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0)) =\n    (1 - W cf2 (F I0)) * (W cf1 I0 * Ps cf1 + (1 - W cf1 I0) * Ps cf1) -\n    (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n  ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0)) =\n  (1 - W cf2 (F I0)) * (W cf1 I0 * Ps cf1 + (1 - W cf1 I0) * Ps cf1) -\n  (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "also"], ["proof (state)\nthis:\n  (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n  ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0)) =\n  (1 - W cf2 (F I0)) * (W cf1 I0 * Ps cf1 + (1 - W cf1 I0) * Ps cf1) -\n  (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "have \"\\<dots> = (1 - ?w0 * ?v0) * Ps cf1 - ?D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - W cf2 (F I0)) * (W cf1 I0 * Ps cf1 + (1 - W cf1 I0) * Ps cf1) -\n    (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0 =\n    (1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n    (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n     (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (1 - W cf2 (F I0)) * (W cf1 I0 * Ps cf1 + (1 - W cf1 I0) * Ps cf1) -\n  (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0 =\n  (1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n  (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n   (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "finally"], ["proof (chain)\npicking this:\n  (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n  ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0)) =\n  (1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n  (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n   (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)", "have \"?v1 * ?w1 * ?wP = (1 - ?w0 * ?v0) * Ps cf1 - ?D\""], ["proof (prove)\nusing this:\n  (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n  ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0)) =\n  (1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n  (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n   (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n\ngoal (1 subgoal):\n 1. (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n    ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0)) =\n    (1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n    (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n     (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)", "."], ["proof (state)\nthis:\n  (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n  ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0)) =\n  (1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n  (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n   (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "}"], ["proof (state)\nthis:\n  (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n  ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0)) =\n  (1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n  (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n   (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "also"], ["proof (state)\nthis:\n  (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n  ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0)) =\n  (1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n  (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n   (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "{"], ["proof (state)\nthis:\n  (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n  ((Ps cf1 - W cf1 I0 * ps cf1 I0) / (1 - W cf1 I0)) =\n  (1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n  (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n   (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "have \"?v1 * ?w1 * ?wQ = ?v1 * (?w0 * Ps cf2 + ?w1 * Ps cf2) - ?v1 * ?w0 * (ps cf2 (F I0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n    ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0))) =\n    (1 - W cf1 I0) * (W cf2 (F I0) * Ps cf2 + (1 - W cf2 (F I0)) * Ps cf2) -\n    (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)", "using wt_less1"], ["proof (prove)\nusing this:\n  W cf1 I0 < 1\n  W cf2 (F I0) < 1\n\ngoal (1 subgoal):\n 1. (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n    ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0))) =\n    (1 - W cf1 I0) * (W cf2 (F I0) * Ps cf2 + (1 - W cf2 (F I0)) * Ps cf2) -\n    (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)", "unfolding divide_eq_eq"], ["proof (prove)\nusing this:\n  W cf1 I0 < 1\n  W cf2 (F I0) < 1\n\ngoal (1 subgoal):\n 1. (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n    ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0))) =\n    (1 - W cf1 I0) * (W cf2 (F I0) * Ps cf2 + (1 - W cf2 (F I0)) * Ps cf2) -\n    (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n  ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0))) =\n  (1 - W cf1 I0) * (W cf2 (F I0) * Ps cf2 + (1 - W cf2 (F I0)) * Ps cf2) -\n  (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "also"], ["proof (state)\nthis:\n  (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n  ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0))) =\n  (1 - W cf1 I0) * (W cf2 (F I0) * Ps cf2 + (1 - W cf2 (F I0)) * Ps cf2) -\n  (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "have \"\\<dots> = (1 - ?w0 * ?v0) * Ps cf2 - ?E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - W cf1 I0) * (W cf2 (F I0) * Ps cf2 + (1 - W cf2 (F I0)) * Ps cf2) -\n    (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0) =\n    (1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n    (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n     (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (1 - W cf1 I0) * (W cf2 (F I0) * Ps cf2 + (1 - W cf2 (F I0)) * Ps cf2) -\n  (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0) =\n  (1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n  (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n   (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "finally"], ["proof (chain)\npicking this:\n  (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n  ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0))) =\n  (1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n  (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n   (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))", "have \"?v1 * ?w1 * ?wQ = (1 - ?w0 * ?v0) * Ps cf2 - ?E\""], ["proof (prove)\nusing this:\n  (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n  ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0))) =\n  (1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n  (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n   (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n\ngoal (1 subgoal):\n 1. (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n    ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0))) =\n    (1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n    (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n     (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))", "."], ["proof (state)\nthis:\n  (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n  ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0))) =\n  (1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n  (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n   (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "}"], ["proof (state)\nthis:\n  (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n  ((Ps cf2 - W cf2 (F I0) * ps cf2 (F I0)) / (1 - W cf2 (F I0))) =\n  (1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n  (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n   (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n\ngoal (2 subgoals):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n 2. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "finally"], ["proof (chain)\npicking this:\n  dist\n   ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n    (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n     (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n   ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n    (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n     (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n  \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n        ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n         (\\<Sum>I\\<in>P - {I0}.\n            W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))", "show \"dist ((1 - ?w0 * ?v0) * Ps cf1 - ?D) ((1 - ?w0 * ?v0) * Ps cf2 - ?E) \\<le> ?v1 * ?w1 * ?e1\""], ["proof (prove)\nusing this:\n  dist\n   ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n    (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n     (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n   ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n    (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n     (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n  \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n        ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n         (\\<Sum>I\\<in>P - {I0}.\n            W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n\ngoal (1 subgoal):\n 1. dist\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n      (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n       (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n     ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n      (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n       (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n    \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n          ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n           (\\<Sum>I\\<in>P - {I0}.\n              W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))", "."], ["proof (state)\nthis:\n  dist\n   ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n    (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n     (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n   ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n    (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n     (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)))\n  \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n        ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n         (\\<Sum>I\\<in>P - {I0}.\n            W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m'))\n\ngoal (1 subgoal):\n 1. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "have \"dist ?D ?E = dist\n          (?v1 * ?w0 * Ps cf1 - ?v1 * ?w0 * ps cf2 (F I0))\n          (?w1 * ?v0 * Ps cf2 - ?w1 * ?v0 * ps cf1 I0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)) =\n    dist\n     ((1 - W cf1 I0) * W cf2 (F I0) * Ps cf1 -\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n     ((1 - W cf2 (F I0)) * W cf1 I0 * Ps cf2 -\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)", "unfolding dist_real_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n          (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0 -\n          (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n           (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\\<bar> =\n    \\<bar>(1 - W cf1 I0) * W cf2 (F I0) * Ps cf1 -\n          (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0) -\n          ((1 - W cf2 (F I0)) * W cf1 I0 * Ps cf2 -\n           (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\\<bar>", "by (simp add: ac_simps)"], ["proof (state)\nthis:\n  dist\n   (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n    (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n   (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n    (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)) =\n  dist\n   ((1 - W cf1 I0) * W cf2 (F I0) * Ps cf1 -\n    (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n   ((1 - W cf2 (F I0)) * W cf1 I0 * Ps cf2 -\n    (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n\ngoal (1 subgoal):\n 1. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "also"], ["proof (state)\nthis:\n  dist\n   (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n    (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n   (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n    (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)) =\n  dist\n   ((1 - W cf1 I0) * W cf2 (F I0) * Ps cf1 -\n    (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n   ((1 - W cf2 (F I0)) * W cf1 I0 * Ps cf2 -\n    (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n\ngoal (1 subgoal):\n 1. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "have \"\\<dots> \\<le> dist (?v1 * ?w0 * Ps cf1) (?v1 * ?w0 * ps cf2 (F I0)) +\n          dist (?w1 * ?v0 * Ps cf2) (?w1 * ?v0 * ps cf1 I0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist\n     ((1 - W cf1 I0) * W cf2 (F I0) * Ps cf1 -\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n     ((1 - W cf2 (F I0)) * W cf1 I0 * Ps cf2 -\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n    \\<le> dist ((1 - W cf1 I0) * W cf2 (F I0) * Ps cf1)\n           ((1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)) +\n          dist ((1 - W cf2 (F I0)) * W cf1 I0 * Ps cf2)\n           ((1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)", "using dist_diff_diff"], ["proof (prove)\nusing this:\n  dist (?a1 - ?b1) (?c1 - ?d1) \\<le> dist ?a1 ?b1 + dist ?c1 ?d1\n\ngoal (1 subgoal):\n 1. dist\n     ((1 - W cf1 I0) * W cf2 (F I0) * Ps cf1 -\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n     ((1 - W cf2 (F I0)) * W cf1 I0 * Ps cf2 -\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n    \\<le> dist ((1 - W cf1 I0) * W cf2 (F I0) * Ps cf1)\n           ((1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)) +\n          dist ((1 - W cf2 (F I0)) * W cf1 I0 * Ps cf2)\n           ((1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)", "."], ["proof (state)\nthis:\n  dist\n   ((1 - W cf1 I0) * W cf2 (F I0) * Ps cf1 -\n    (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n   ((1 - W cf2 (F I0)) * W cf1 I0 * Ps cf2 -\n    (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n  \\<le> dist ((1 - W cf1 I0) * W cf2 (F I0) * Ps cf1)\n         ((1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)) +\n        dist ((1 - W cf2 (F I0)) * W cf1 I0 * Ps cf2)\n         ((1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n\ngoal (1 subgoal):\n 1. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "also"], ["proof (state)\nthis:\n  dist\n   ((1 - W cf1 I0) * W cf2 (F I0) * Ps cf1 -\n    (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n   ((1 - W cf2 (F I0)) * W cf1 I0 * Ps cf2 -\n    (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n  \\<le> dist ((1 - W cf1 I0) * W cf2 (F I0) * Ps cf1)\n         ((1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)) +\n        dist ((1 - W cf2 (F I0)) * W cf1 I0 * Ps cf2)\n         ((1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n\ngoal (1 subgoal):\n 1. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "have \"\\<dots> \\<le> ?v1 * ?w0 * (Pn cf1 n + pn cf2 (F I0) m') + ?w1 * ?v0 * (pn cf1 I0 n' + Pn cf2 m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist ((1 - W cf1 I0) * W cf2 (F I0) * Ps cf1)\n     ((1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)) +\n    dist ((1 - W cf2 (F I0)) * W cf1 I0 * Ps cf2)\n     ((1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "proof (rule add_mono)"], ["proof (state)\ngoal (2 subgoals):\n 1. dist ((1 - W cf1 I0) * W cf2 (F I0) * Ps cf1)\n     ((1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m')\n 2. dist ((1 - W cf2 (F I0)) * W cf1 I0 * Ps cf2)\n     ((1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n    \\<le> (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "show \"dist (?v1 * ?w0 * Ps cf1) (?v1 * ?w0 * ps cf2 (F I0)) \\<le> ?v1 * ?w0 * (Pn cf1 n + pn cf2 (F I0) m')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist ((1 - W cf1 I0) * W cf2 (F I0) * Ps cf1)\n     ((1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m')", "using wt_less1 dist_n_m' \\<open>I0 \\<in> P\\<close>"], ["proof (prove)\nusing this:\n  W cf1 I0 < 1\n  W cf2 (F I0) < 1\n  W cf2 (F I0) \\<noteq> 0 \\<Longrightarrow>\n  dist (Ps cf1) (ps cf2 (F I0)) \\<le> Pn cf1 n + pn cf2 (F I0) m'\n  I0 \\<in> P\n\ngoal (1 subgoal):\n 1. dist ((1 - W cf1 I0) * W cf2 (F I0) * Ps cf1)\n     ((1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m')", "by (simp add: sum_nonneg mult_le_cancel_left not_le[symmetric] mult_le_0_iff W2_nneg)"], ["proof (state)\nthis:\n  dist ((1 - W cf1 I0) * W cf2 (F I0) * Ps cf1)\n   ((1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n  \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m')\n\ngoal (1 subgoal):\n 1. dist ((1 - W cf2 (F I0)) * W cf1 I0 * Ps cf2)\n     ((1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n    \\<le> (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "show \"dist (?w1 * ?v0 * Ps cf2) (?w1 * ?v0 * ps cf1 I0) \\<le> ?w1 * ?v0 * (pn cf1 I0 n' + Pn cf2 m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist ((1 - W cf2 (F I0)) * W cf1 I0 * Ps cf2)\n     ((1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n    \\<le> (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "using wt_less1 dist_n'_m \\<open>I0 \\<in> P\\<close>"], ["proof (prove)\nusing this:\n  W cf1 I0 < 1\n  W cf2 (F I0) < 1\n  W cf1 I0 \\<noteq> 0 \\<Longrightarrow>\n  dist (ps cf1 I0) (Ps cf2) \\<le> pn cf1 I0 n' + Pn cf2 m\n  I0 \\<in> P\n\ngoal (1 subgoal):\n 1. dist ((1 - W cf2 (F I0)) * W cf1 I0 * Ps cf2)\n     ((1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n    \\<le> (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "by (subst dist_commute)\n               (simp add: sum_nonneg mult_le_cancel_left not_le[symmetric] mult_le_0_iff W1_nneg)"], ["proof (state)\nthis:\n  dist ((1 - W cf2 (F I0)) * W cf1 I0 * Ps cf2)\n   ((1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n  \\<le> (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist ((1 - W cf1 I0) * W cf2 (F I0) * Ps cf1)\n   ((1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0)) +\n  dist ((1 - W cf2 (F I0)) * W cf1 I0 * Ps cf2)\n   ((1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n  \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n        (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)\n\ngoal (1 subgoal):\n 1. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "finally"], ["proof (chain)\npicking this:\n  dist\n   (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n    (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n   (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n    (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n  \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n        (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "show \"dist ?D ?E \\<le> ?v1 * ?w0 * (Pn cf1 n + pn cf2 (F I0) m') + ?w1 * ?v0 * (pn cf1 I0 n' + Pn cf2 m)\""], ["proof (prove)\nusing this:\n  dist\n   (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n    (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n   (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n    (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n  \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n        (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)\n\ngoal (1 subgoal):\n 1. dist\n     (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n      (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n     (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n      (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n    \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n          (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "."], ["proof (state)\nthis:\n  dist\n   (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n    (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n   (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n    (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n  \\<le> (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n        (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist\n   ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n    (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n     (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n   ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n    (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n     (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))) +\n  dist\n   (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n    (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n   (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n    (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n  \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n        ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n         (\\<Sum>I\\<in>P - {I0}.\n            W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m')) +\n        ((1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n         (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m))\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "also"], ["proof (state)\nthis:\n  dist\n   ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1 -\n    (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n     (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0))\n   ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2 -\n    (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n     (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))) +\n  dist\n   (W cf2 (F I0) * (1 - W cf1 I0) * Ps cf1 +\n    (1 - W cf2 (F I0)) * W cf1 I0 * ps cf1 I0)\n   (W cf1 I0 * (1 - W cf2 (F I0)) * Ps cf2 +\n    (1 - W cf1 I0) * W cf2 (F I0) * ps cf2 (F I0))\n  \\<le> (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n        ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n         (\\<Sum>I\\<in>P - {I0}.\n            W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m')) +\n        ((1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n         (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m))\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have \"\\<dots> = ?w1 * (\\<Sum>I\\<in>P-{I0}. W cf1 I * pn cf1 I n') + ?v1 * (\\<Sum>I\\<in>P-{I0}. W cf2 (F I) * pn cf2 (F I) m') +\n        ?v1 * ?w0 * (Pn cf1 n + pn cf2 (F I0) m') + ?w1 * ?v0 * (pn cf1 I0 n' + Pn cf2 m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n    ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n     (\\<Sum>I\\<in>P - {I0}.\n        W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m')) +\n    ((1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n     (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)) =\n    (1 - W cf2 (F I0)) * (\\<Sum>I\\<in>P - {I0}. W cf1 I * pn cf1 I n') +\n    (1 - W cf1 I0) * (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * pn cf2 (F I) m') +\n    (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n    (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "using W_neq1"], ["proof (prove)\nusing this:\n  \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1)\n\ngoal (1 subgoal):\n 1. (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n    ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n     (\\<Sum>I\\<in>P - {I0}.\n        W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m')) +\n    ((1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n     (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)) =\n    (1 - W cf2 (F I0)) * (\\<Sum>I\\<in>P - {I0}. W cf1 I * pn cf1 I n') +\n    (1 - W cf1 I0) * (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * pn cf2 (F I) m') +\n    (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n    (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)", "by (simp add: sum_divide_distrib[symmetric] add_divide_eq_iff divide_add_eq_iff)"], ["proof (state)\nthis:\n  (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n  ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n   (\\<Sum>I\\<in>P - {I0}.\n      W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m')) +\n  ((1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n   (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)) =\n  (1 - W cf2 (F I0)) * (\\<Sum>I\\<in>P - {I0}. W cf1 I * pn cf1 I n') +\n  (1 - W cf1 I0) * (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * pn cf2 (F I) m') +\n  (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n  (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "also"], ["proof (state)\nthis:\n  (1 - W cf1 I0) * (1 - W cf2 (F I0)) *\n  ((\\<Sum>I\\<in>P - {I0}. W cf1 I / (1 - W cf1 I0) * pn cf1 I n') +\n   (\\<Sum>I\\<in>P - {I0}.\n      W cf2 (F I) / (1 - W cf2 (F I0)) * pn cf2 (F I) m')) +\n  ((1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n   (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)) =\n  (1 - W cf2 (F I0)) * (\\<Sum>I\\<in>P - {I0}. W cf1 I * pn cf1 I n') +\n  (1 - W cf1 I0) * (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * pn cf2 (F I) m') +\n  (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n  (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m)\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "have \"\\<dots> = (1 - ?w0 * ?v0) * (Pn cf1 n + Pn cf2 m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - W cf2 (F I0)) * (\\<Sum>I\\<in>P - {I0}. W cf1 I * pn cf1 I n') +\n    (1 - W cf1 I0) * (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * pn cf2 (F I) m') +\n    (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n    (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m) =\n    (1 - W cf2 (F I0) * W cf1 I0) * (Pn cf1 n + Pn cf2 m)", "unfolding Pn1 Pn2"], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - W cf2 (F I0)) * (\\<Sum>I\\<in>P - {I0}. W cf1 I * pn cf1 I n') +\n    (1 - W cf1 I0) * (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * pn cf2 (F I) m') +\n    (1 - W cf1 I0) * W cf2 (F I0) *\n    (W cf1 I0 * pn cf1 I0 n' +\n     (\\<Sum>I\\<in>P - {I0}. W cf1 I * pn cf1 I n') +\n     pn cf2 (F I0) m') +\n    (1 - W cf2 (F I0)) * W cf1 I0 *\n    (pn cf1 I0 n' +\n     (W cf2 (F I0) * pn cf2 (F I0) m' +\n      (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * pn cf2 (F I) m'))) =\n    (1 - W cf2 (F I0) * W cf1 I0) *\n    (W cf1 I0 * pn cf1 I0 n' +\n     (\\<Sum>I\\<in>P - {I0}. W cf1 I * pn cf1 I n') +\n     (W cf2 (F I0) * pn cf2 (F I0) m' +\n      (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * pn cf2 (F I) m')))", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (1 - W cf2 (F I0)) * (\\<Sum>I\\<in>P - {I0}. W cf1 I * pn cf1 I n') +\n  (1 - W cf1 I0) * (\\<Sum>I\\<in>P - {I0}. W cf2 (F I) * pn cf2 (F I) m') +\n  (1 - W cf1 I0) * W cf2 (F I0) * (Pn cf1 n + pn cf2 (F I0) m') +\n  (1 - W cf2 (F I0)) * W cf1 I0 * (pn cf1 I0 n' + Pn cf2 m) =\n  (1 - W cf2 (F I0) * W cf1 I0) * (Pn cf1 n + Pn cf2 m)\n\ngoal (1 subgoal):\n 1. \\<not> (W cf1 I0 = 1 \\<or> W cf2 (F I0) = 1) \\<Longrightarrow>\n    dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "finally"], ["proof (chain)\npicking this:\n  dist ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1)\n   ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2)\n  \\<le> (1 - W cf2 (F I0) * W cf1 I0) * (Pn cf1 n + Pn cf2 m)", "show \"dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\""], ["proof (prove)\nusing this:\n  dist ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1)\n   ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2)\n  \\<le> (1 - W cf2 (F I0) * W cf1 I0) * (Pn cf1 n + Pn cf2 m)\n\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "using neg_w0v0_nonneg w0v0_less1"], ["proof (prove)\nusing this:\n  dist ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf1)\n   ((1 - W cf2 (F I0) * W cf1 I0) * Ps cf2)\n  \\<le> (1 - W cf2 (F I0) * W cf1 I0) * (Pn cf1 n + Pn cf2 m)\n  0 \\<le> 1 - W cf2 (F I0) * W cf1 I0\n  W cf2 (F I0) * W cf1 I0 < 1 * 1\n\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m", "by (simp add: mult_le_cancel_left)"], ["proof (state)\nthis:\n  dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist (Ps cf1) (Ps cf2) \\<le> Pn cf1 n + Pn cf2 m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma AE_T_max_qsend_time:\n  fixes cf and e :: real assumes AE: \"AE bT in T.T cf. qsend (cf ## bT) < \\<infinity>\" \"0 < e\"\n  shows \"\\<exists>N. \\<P>(bT in T.T cf. \\<not> discrCf ((cf ## bT) !! N)) < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>N.\n       T.prob cf {bT \\<in> space (T cf). \\<not> discrCf ((cf ## bT) !! N)}\n       < e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>N.\n       T.prob cf {bT \\<in> space (T cf). \\<not> discrCf ((cf ## bT) !! N)}\n       < e", "from AE_T_max_sfirst[OF _ AE]"], ["proof (chain)\npicking this:\n  Measurable.pred (stream_space (count_space UNIV))\n   (holds discrCf) \\<Longrightarrow>\n  \\<exists>x.\n     T.prob cf\n      {\\<omega> \\<in> space (T cf). enat x < qsend (cf ## \\<omega>)}\n     < e", "obtain N :: nat\n    where \"\\<P>(bT in T.T cf. N < qsend (cf ## bT)) < e\""], ["proof (prove)\nusing this:\n  Measurable.pred (stream_space (count_space UNIV))\n   (holds discrCf) \\<Longrightarrow>\n  \\<exists>x.\n     T.prob cf\n      {\\<omega> \\<in> space (T cf). enat x < qsend (cf ## \\<omega>)}\n     < e\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        T.prob cf {bT \\<in> space (T cf). enat N < qsend (cf ## bT)}\n        < e \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  T.prob cf {bT \\<in> space (T cf). enat N < qsend (cf ## bT)} < e\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       T.prob cf {bT \\<in> space (T cf). \\<not> discrCf ((cf ## bT) !! N)}\n       < e", "also"], ["proof (state)\nthis:\n  T.prob cf {bT \\<in> space (T cf). enat N < qsend (cf ## bT)} < e\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       T.prob cf {bT \\<in> space (T cf). \\<not> discrCf ((cf ## bT) !! N)}\n       < e", "have \"\\<P>(bT in T.T cf. N < qsend (cf ## bT)) = \\<P>(bT in T.T cf. \\<not> discrCf ((cf ## bT) !! N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T.prob cf {bT \\<in> space (T cf). enat N < qsend (cf ## bT)} =\n    T.prob cf {bT \\<in> space (T cf). \\<not> discrCf ((cf ## bT) !! N)}", "using less_qsend_iff_not_discrCf[of cf] AE_T_enabled[of cf]"], ["proof (prove)\nusing this:\n  enabled cf ?bT \\<Longrightarrow>\n  (enat ?n < qsend (cf ## ?bT)) = (\\<not> discrCf ((cf ## ?bT) !! ?n))\n  almost_everywhere (T cf) (enabled cf)\n\ngoal (1 subgoal):\n 1. T.prob cf {bT \\<in> space (T cf). enat N < qsend (cf ## bT)} =\n    T.prob cf {bT \\<in> space (T cf). \\<not> discrCf ((cf ## bT) !! N)}", "by (intro T.prob_eq_AE) auto"], ["proof (state)\nthis:\n  T.prob cf {bT \\<in> space (T cf). enat N < qsend (cf ## bT)} =\n  T.prob cf {bT \\<in> space (T cf). \\<not> discrCf ((cf ## bT) !! N)}\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       T.prob cf {bT \\<in> space (T cf). \\<not> discrCf ((cf ## bT) !! N)}\n       < e", "finally"], ["proof (chain)\npicking this:\n  T.prob cf {bT \\<in> space (T cf). \\<not> discrCf ((cf ## bT) !! N)} < e", "show ?thesis"], ["proof (prove)\nusing this:\n  T.prob cf {bT \\<in> space (T cf). \\<not> discrCf ((cf ## bT) !! N)} < e\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       T.prob cf {bT \\<in> space (T cf). \\<not> discrCf ((cf ## bT) !! N)}\n       < e", ".."], ["proof (state)\nthis:\n  \\<exists>N.\n     T.prob cf {bT \\<in> space (T cf). \\<not> discrCf ((cf ## bT) !! N)} < e\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Ps_eq:\n  fixes cf1 cf2 s and S\n  defines \"S cf bT \\<equiv> \\<exists>n. qsend (cf ## bT) = n \\<and> eff_at cf bT n \\<approx> s\"\n  defines \"Ps cf \\<equiv> \\<P>(bT in T.T cf. S cf bT)\"\n  assumes qsterm1: \"AE bT in T.T cf1. qsend (cf1 ## bT) < \\<infinity>\"\n  assumes qsterm2: \"AE bT in T.T cf2. qsend (cf2 ## bT) < \\<infinity>\"\n  and bisim: \"proper (fst cf1)\" \"proper (fst cf2)\" \"fst cf1 \\<approx>01 fst cf2\" \"snd cf1 \\<approx> snd cf2\"\n  shows \"Ps cf1 = Ps cf2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ps cf1 = Ps cf2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Ps cf1 = Ps cf2", "let ?nT = \"\\<lambda>cf n bT. \\<not> discrCf ((cf ## bT) !! n)\""], ["proof (state)\ngoal (1 subgoal):\n 1. Ps cf1 = Ps cf2", "let ?PnT = \"\\<lambda>cf n. \\<P>(bT in T.T cf. ?nT cf n bT)\""], ["proof (state)\ngoal (1 subgoal):\n 1. Ps cf1 = Ps cf2", "have \"dist (Ps cf1) (Ps cf2) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2) = 0", "unfolding dist_real_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>Ps cf1 - Ps cf2\\<bar> = 0", "proof (rule field_abs_le_zero_epsilon)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e. 0 < e \\<Longrightarrow> \\<bar>Ps cf1 - Ps cf2\\<bar> \\<le> e", "fix e ::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e. 0 < e \\<Longrightarrow> \\<bar>Ps cf1 - Ps cf2\\<bar> \\<le> e", "assume \"0 < e\""], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>e. 0 < e \\<Longrightarrow> \\<bar>Ps cf1 - Ps cf2\\<bar> \\<le> e", "then"], ["proof (chain)\npicking this:\n  0 < e", "have \"0 < e / 2\""], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. 0 < e / 2", "by auto"], ["proof (state)\nthis:\n  0 < e / 2\n\ngoal (1 subgoal):\n 1. \\<And>e. 0 < e \\<Longrightarrow> \\<bar>Ps cf1 - Ps cf2\\<bar> \\<le> e", "from AE_T_max_qsend_time[OF qsterm1 this] AE_T_max_qsend_time[OF qsterm2 this]"], ["proof (chain)\npicking this:\n  \\<exists>N.\n     T.prob cf1 {bT \\<in> space (T cf1). \\<not> discrCf ((cf1 ## bT) !! N)}\n     < e / 2\n  \\<exists>N.\n     T.prob cf2 {bT \\<in> space (T cf2). \\<not> discrCf ((cf2 ## bT) !! N)}\n     < e / 2", "obtain n m where \"?PnT cf1 n < e / 2\" \"?PnT cf2 m < e / 2\""], ["proof (prove)\nusing this:\n  \\<exists>N.\n     T.prob cf1 {bT \\<in> space (T cf1). \\<not> discrCf ((cf1 ## bT) !! N)}\n     < e / 2\n  \\<exists>N.\n     T.prob cf2 {bT \\<in> space (T cf2). \\<not> discrCf ((cf2 ## bT) !! N)}\n     < e / 2\n\ngoal (1 subgoal):\n 1. (\\<And>n m.\n        \\<lbrakk>T.prob cf1\n                  {bT \\<in> space (T cf1).\n                   \\<not> discrCf ((cf1 ## bT) !! n)}\n                 < e / 2;\n         T.prob cf2\n          {bT \\<in> space (T cf2). \\<not> discrCf ((cf2 ## bT) !! m)}\n         < e / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  T.prob cf1 {bT \\<in> space (T cf1). \\<not> discrCf ((cf1 ## bT) !! n)}\n  < e / 2\n  T.prob cf2 {bT \\<in> space (T cf2). \\<not> discrCf ((cf2 ## bT) !! m)}\n  < e / 2\n\ngoal (1 subgoal):\n 1. \\<And>e. 0 < e \\<Longrightarrow> \\<bar>Ps cf1 - Ps cf2\\<bar> \\<le> e", "moreover"], ["proof (state)\nthis:\n  T.prob cf1 {bT \\<in> space (T cf1). \\<not> discrCf ((cf1 ## bT) !! n)}\n  < e / 2\n  T.prob cf2 {bT \\<in> space (T cf2). \\<not> discrCf ((cf2 ## bT) !! m)}\n  < e / 2\n\ngoal (1 subgoal):\n 1. \\<And>e. 0 < e \\<Longrightarrow> \\<bar>Ps cf1 - Ps cf2\\<bar> \\<le> e", "have \"dist (Ps cf1) (Ps cf2) \\<le> ?PnT cf1 n + ?PnT cf2 m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (Ps cf1) (Ps cf2)\n    \\<le> T.prob cf1\n           {bT \\<in> space (T cf1). \\<not> discrCf ((cf1 ## bT) !! n)} +\n          T.prob cf2\n           {bT \\<in> space (T cf2). \\<not> discrCf ((cf2 ## bT) !! m)}", "unfolding Ps_def S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist\n     (T.prob cf1\n       {bT \\<in> space (T cf1).\n        \\<exists>n.\n           qsend (cf1 ## bT) = enat n \\<and>\n           snd ((cf1 ## bT) !! n) \\<approx> s})\n     (T.prob cf2\n       {bT \\<in> space (T cf2).\n        \\<exists>n.\n           qsend (cf2 ## bT) = enat n \\<and>\n           snd ((cf2 ## bT) !! n) \\<approx> s})\n    \\<le> T.prob cf1\n           {bT \\<in> space (T cf1). \\<not> discrCf ((cf1 ## bT) !! n)} +\n          T.prob cf2\n           {bT \\<in> space (T cf2). \\<not> discrCf ((cf2 ## bT) !! m)}", "using bisim"], ["proof (prove)\nusing this:\n  proper (fst cf1)\n  proper (fst cf2)\n  fst cf1 \\<approx>01 fst cf2\n  snd cf1 \\<approx> snd cf2\n\ngoal (1 subgoal):\n 1. dist\n     (T.prob cf1\n       {bT \\<in> space (T cf1).\n        \\<exists>n.\n           qsend (cf1 ## bT) = enat n \\<and>\n           snd ((cf1 ## bT) !! n) \\<approx> s})\n     (T.prob cf2\n       {bT \\<in> space (T cf2).\n        \\<exists>n.\n           qsend (cf2 ## bT) = enat n \\<and>\n           snd ((cf2 ## bT) !! n) \\<approx> s})\n    \\<le> T.prob cf1\n           {bT \\<in> space (T cf1). \\<not> discrCf ((cf1 ## bT) !! n)} +\n          T.prob cf2\n           {bT \\<in> space (T cf2). \\<not> discrCf ((cf2 ## bT) !! m)}", "by (rule dist_Ps_upper_bound)"], ["proof (state)\nthis:\n  dist (Ps cf1) (Ps cf2)\n  \\<le> T.prob cf1\n         {bT \\<in> space (T cf1). \\<not> discrCf ((cf1 ## bT) !! n)} +\n        T.prob cf2\n         {bT \\<in> space (T cf2). \\<not> discrCf ((cf2 ## bT) !! m)}\n\ngoal (1 subgoal):\n 1. \\<And>e. 0 < e \\<Longrightarrow> \\<bar>Ps cf1 - Ps cf2\\<bar> \\<le> e", "ultimately"], ["proof (chain)\npicking this:\n  T.prob cf1 {bT \\<in> space (T cf1). \\<not> discrCf ((cf1 ## bT) !! n)}\n  < e / 2\n  T.prob cf2 {bT \\<in> space (T cf2). \\<not> discrCf ((cf2 ## bT) !! m)}\n  < e / 2\n  dist (Ps cf1) (Ps cf2)\n  \\<le> T.prob cf1\n         {bT \\<in> space (T cf1). \\<not> discrCf ((cf1 ## bT) !! n)} +\n        T.prob cf2\n         {bT \\<in> space (T cf2). \\<not> discrCf ((cf2 ## bT) !! m)}", "show \"\\<bar>Ps cf1 - Ps cf2\\<bar> \\<le> e\""], ["proof (prove)\nusing this:\n  T.prob cf1 {bT \\<in> space (T cf1). \\<not> discrCf ((cf1 ## bT) !! n)}\n  < e / 2\n  T.prob cf2 {bT \\<in> space (T cf2). \\<not> discrCf ((cf2 ## bT) !! m)}\n  < e / 2\n  dist (Ps cf1) (Ps cf2)\n  \\<le> T.prob cf1\n         {bT \\<in> space (T cf1). \\<not> discrCf ((cf1 ## bT) !! n)} +\n        T.prob cf2\n         {bT \\<in> space (T cf2). \\<not> discrCf ((cf2 ## bT) !! m)}\n\ngoal (1 subgoal):\n 1. \\<bar>Ps cf1 - Ps cf2\\<bar> \\<le> e", "unfolding dist_real_def"], ["proof (prove)\nusing this:\n  T.prob cf1 {bT \\<in> space (T cf1). \\<not> discrCf ((cf1 ## bT) !! n)}\n  < e / 2\n  T.prob cf2 {bT \\<in> space (T cf2). \\<not> discrCf ((cf2 ## bT) !! m)}\n  < e / 2\n  \\<bar>Ps cf1 - Ps cf2\\<bar>\n  \\<le> T.prob cf1\n         {bT \\<in> space (T cf1). \\<not> discrCf ((cf1 ## bT) !! n)} +\n        T.prob cf2\n         {bT \\<in> space (T cf2). \\<not> discrCf ((cf2 ## bT) !! m)}\n\ngoal (1 subgoal):\n 1. \\<bar>Ps cf1 - Ps cf2\\<bar> \\<le> e", "by auto"], ["proof (state)\nthis:\n  \\<bar>Ps cf1 - Ps cf2\\<bar> \\<le> e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist (Ps cf1) (Ps cf2) = 0\n\ngoal (1 subgoal):\n 1. Ps cf1 = Ps cf2", "then"], ["proof (chain)\npicking this:\n  dist (Ps cf1) (Ps cf2) = 0", "show \"Ps cf1 = Ps cf2\""], ["proof (prove)\nusing this:\n  dist (Ps cf1) (Ps cf2) = 0\n\ngoal (1 subgoal):\n 1. Ps cf1 = Ps cf2", "by auto"], ["proof (state)\nthis:\n  Ps cf1 = Ps cf2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma siso_trace:\n  assumes \"siso c\" \"s \\<approx> t\" \"enabled (c, t) cfT\"\n  shows \"siso (cont_at (c, s) cfT n)\"\n    and \"cont_at (c, s) cfT n = cont_at (c, t) cfT n\"\n    and \"eff_at (c, s) cfT n \\<approx> eff_at (c, t) cfT n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. siso (fst (((c, s) ## cfT) !! n)) &&&\n    fst (((c, s) ## cfT) !! n) = fst (((c, t) ## cfT) !! n) &&&\n    snd (((c, s) ## cfT) !! n) \\<approx> snd (((c, t) ## cfT) !! n)", "using assms"], ["proof (prove)\nusing this:\n  siso c\n  s \\<approx> t\n  enabled (c, t) cfT\n\ngoal (1 subgoal):\n 1. siso (fst (((c, s) ## cfT) !! n)) &&&\n    fst (((c, s) ## cfT) !! n) = fst (((c, t) ## cfT) !! n) &&&\n    snd (((c, s) ## cfT) !! n) \\<approx> snd (((c, t) ## cfT) !! n)", "proof (induction n arbitrary: c s t cfT)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>c s t cfT.\n       \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> siso (fst (((c, s) ## cfT) !! 0))\n 2. \\<And>c s t cfT.\n       \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> fst (((c, s) ## cfT) !! 0) =\n                         fst (((c, t) ## cfT) !! 0)\n 3. \\<And>c s t cfT.\n       \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> snd (((c, s) ## cfT) !! 0) \\<approx>\n                         snd (((c, t) ## cfT) !! 0)\n 4. \\<And>n c s t cfT.\n       \\<lbrakk>\\<And>c s t cfT.\n                   \\<lbrakk>siso c; s \\<approx> t;\n                    enabled (c, t) cfT\\<rbrakk>\n                   \\<Longrightarrow> siso (fst (((c, s) ## cfT) !! n));\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> fst (((c, s) ## cfT) !! n) =\n                             fst (((c, t) ## cfT) !! n);\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> snd (((c, s) ## cfT) !! n) \\<approx>\n                             snd (((c, t) ## cfT) !! n);\n        siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> siso (fst (((c, s) ## cfT) !! Suc n))\n 5. \\<And>n c s t cfT.\n       \\<lbrakk>\\<And>c s t cfT.\n                   \\<lbrakk>siso c; s \\<approx> t;\n                    enabled (c, t) cfT\\<rbrakk>\n                   \\<Longrightarrow> siso (fst (((c, s) ## cfT) !! n));\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> fst (((c, s) ## cfT) !! n) =\n                             fst (((c, t) ## cfT) !! n);\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> snd (((c, s) ## cfT) !! n) \\<approx>\n                             snd (((c, t) ## cfT) !! n);\n        siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> fst (((c, s) ## cfT) !! Suc n) =\n                         fst (((c, t) ## cfT) !! Suc n)\n 6. \\<And>n c s t cfT.\n       \\<lbrakk>\\<And>c s t cfT.\n                   \\<lbrakk>siso c; s \\<approx> t;\n                    enabled (c, t) cfT\\<rbrakk>\n                   \\<Longrightarrow> siso (fst (((c, s) ## cfT) !! n));\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> fst (((c, s) ## cfT) !! n) =\n                             fst (((c, t) ## cfT) !! n);\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> snd (((c, s) ## cfT) !! n) \\<approx>\n                             snd (((c, t) ## cfT) !! n);\n        siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> snd (((c, s) ## cfT) !! Suc n) \\<approx>\n                         snd (((c, t) ## cfT) !! Suc n)", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>siso ?c1; ?s1 \\<approx> ?t1; enabled (?c1, ?t1) ?cfT1\\<rbrakk>\n  \\<Longrightarrow> siso (fst (((?c1, ?s1) ## ?cfT1) !! n))\n  \\<lbrakk>siso ?c1; ?s1 \\<approx> ?t1; enabled (?c1, ?t1) ?cfT1\\<rbrakk>\n  \\<Longrightarrow> fst (((?c1, ?s1) ## ?cfT1) !! n) =\n                    fst (((?c1, ?t1) ## ?cfT1) !! n)\n  \\<lbrakk>siso ?c1; ?s1 \\<approx> ?t1; enabled (?c1, ?t1) ?cfT1\\<rbrakk>\n  \\<Longrightarrow> snd (((?c1, ?s1) ## ?cfT1) !! n) \\<approx>\n                    snd (((?c1, ?t1) ## ?cfT1) !! n)\n\ngoal (6 subgoals):\n 1. \\<And>c s t cfT.\n       \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> siso (fst (((c, s) ## cfT) !! 0))\n 2. \\<And>c s t cfT.\n       \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> fst (((c, s) ## cfT) !! 0) =\n                         fst (((c, t) ## cfT) !! 0)\n 3. \\<And>c s t cfT.\n       \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> snd (((c, s) ## cfT) !! 0) \\<approx>\n                         snd (((c, t) ## cfT) !! 0)\n 4. \\<And>n c s t cfT.\n       \\<lbrakk>\\<And>c s t cfT.\n                   \\<lbrakk>siso c; s \\<approx> t;\n                    enabled (c, t) cfT\\<rbrakk>\n                   \\<Longrightarrow> siso (fst (((c, s) ## cfT) !! n));\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> fst (((c, s) ## cfT) !! n) =\n                             fst (((c, t) ## cfT) !! n);\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> snd (((c, s) ## cfT) !! n) \\<approx>\n                             snd (((c, t) ## cfT) !! n);\n        siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> siso (fst (((c, s) ## cfT) !! Suc n))\n 5. \\<And>n c s t cfT.\n       \\<lbrakk>\\<And>c s t cfT.\n                   \\<lbrakk>siso c; s \\<approx> t;\n                    enabled (c, t) cfT\\<rbrakk>\n                   \\<Longrightarrow> siso (fst (((c, s) ## cfT) !! n));\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> fst (((c, s) ## cfT) !! n) =\n                             fst (((c, t) ## cfT) !! n);\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> snd (((c, s) ## cfT) !! n) \\<approx>\n                             snd (((c, t) ## cfT) !! n);\n        siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> fst (((c, s) ## cfT) !! Suc n) =\n                         fst (((c, t) ## cfT) !! Suc n)\n 6. \\<And>n c s t cfT.\n       \\<lbrakk>\\<And>c s t cfT.\n                   \\<lbrakk>siso c; s \\<approx> t;\n                    enabled (c, t) cfT\\<rbrakk>\n                   \\<Longrightarrow> siso (fst (((c, s) ## cfT) !! n));\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> fst (((c, s) ## cfT) !! n) =\n                             fst (((c, t) ## cfT) !! n);\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> snd (((c, s) ## cfT) !! n) \\<approx>\n                             snd (((c, t) ## cfT) !! n);\n        siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> snd (((c, s) ## cfT) !! Suc n) \\<approx>\n                         snd (((c, t) ## cfT) !! Suc n)", "case 1"], ["proof (state)\nthis:\n  siso c\n  s \\<approx> t\n  enabled (c, t) cfT\n\ngoal (6 subgoals):\n 1. \\<And>c s t cfT.\n       \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> siso (fst (((c, s) ## cfT) !! 0))\n 2. \\<And>c s t cfT.\n       \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> fst (((c, s) ## cfT) !! 0) =\n                         fst (((c, t) ## cfT) !! 0)\n 3. \\<And>c s t cfT.\n       \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> snd (((c, s) ## cfT) !! 0) \\<approx>\n                         snd (((c, t) ## cfT) !! 0)\n 4. \\<And>n c s t cfT.\n       \\<lbrakk>\\<And>c s t cfT.\n                   \\<lbrakk>siso c; s \\<approx> t;\n                    enabled (c, t) cfT\\<rbrakk>\n                   \\<Longrightarrow> siso (fst (((c, s) ## cfT) !! n));\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> fst (((c, s) ## cfT) !! n) =\n                             fst (((c, t) ## cfT) !! n);\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> snd (((c, s) ## cfT) !! n) \\<approx>\n                             snd (((c, t) ## cfT) !! n);\n        siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> siso (fst (((c, s) ## cfT) !! Suc n))\n 5. \\<And>n c s t cfT.\n       \\<lbrakk>\\<And>c s t cfT.\n                   \\<lbrakk>siso c; s \\<approx> t;\n                    enabled (c, t) cfT\\<rbrakk>\n                   \\<Longrightarrow> siso (fst (((c, s) ## cfT) !! n));\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> fst (((c, s) ## cfT) !! n) =\n                             fst (((c, t) ## cfT) !! n);\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> snd (((c, s) ## cfT) !! n) \\<approx>\n                             snd (((c, t) ## cfT) !! n);\n        siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> fst (((c, s) ## cfT) !! Suc n) =\n                         fst (((c, t) ## cfT) !! Suc n)\n 6. \\<And>n c s t cfT.\n       \\<lbrakk>\\<And>c s t cfT.\n                   \\<lbrakk>siso c; s \\<approx> t;\n                    enabled (c, t) cfT\\<rbrakk>\n                   \\<Longrightarrow> siso (fst (((c, s) ## cfT) !! n));\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> fst (((c, s) ## cfT) !! n) =\n                             fst (((c, t) ## cfT) !! n);\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> snd (((c, s) ## cfT) !! n) \\<approx>\n                             snd (((c, t) ## cfT) !! n);\n        siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> snd (((c, s) ## cfT) !! Suc n) \\<approx>\n                         snd (((c, t) ## cfT) !! Suc n)", "with Suc(1)[of \"fst (shd cfT)\" \"snd (shd cfT)\" \"snd (shd cfT)\" \"stl cfT\"]"], ["proof (chain)\npicking this:\n  \\<lbrakk>siso (fst (shd cfT)); snd (shd cfT) \\<approx> snd (shd cfT);\n   enabled (fst (shd cfT), snd (shd cfT)) (stl cfT)\\<rbrakk>\n  \\<Longrightarrow> siso\n                     (fst (((fst (shd cfT), snd (shd cfT)) ## stl cfT) !!\n                           n))\n  siso c\n  s \\<approx> t\n  enabled (c, t) cfT", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>siso (fst (shd cfT)); snd (shd cfT) \\<approx> snd (shd cfT);\n   enabled (fst (shd cfT), snd (shd cfT)) (stl cfT)\\<rbrakk>\n  \\<Longrightarrow> siso\n                     (fst (((fst (shd cfT), snd (shd cfT)) ## stl cfT) !!\n                           n))\n  siso c\n  s \\<approx> t\n  enabled (c, t) cfT\n\ngoal (1 subgoal):\n 1. siso (fst (((c, s) ## cfT) !! Suc n))", "by (auto simp add: enabled.simps[of _ cfT] G_eq cont_eff indis_refl split: if_split_asm)"], ["proof (state)\nthis:\n  siso (fst (((c, s) ## cfT) !! Suc n))\n\ngoal (5 subgoals):\n 1. \\<And>c s t cfT.\n       \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> siso (fst (((c, s) ## cfT) !! 0))\n 2. \\<And>c s t cfT.\n       \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> fst (((c, s) ## cfT) !! 0) =\n                         fst (((c, t) ## cfT) !! 0)\n 3. \\<And>c s t cfT.\n       \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> snd (((c, s) ## cfT) !! 0) \\<approx>\n                         snd (((c, t) ## cfT) !! 0)\n 4. \\<And>n c s t cfT.\n       \\<lbrakk>\\<And>c s t cfT.\n                   \\<lbrakk>siso c; s \\<approx> t;\n                    enabled (c, t) cfT\\<rbrakk>\n                   \\<Longrightarrow> siso (fst (((c, s) ## cfT) !! n));\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> fst (((c, s) ## cfT) !! n) =\n                             fst (((c, t) ## cfT) !! n);\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> snd (((c, s) ## cfT) !! n) \\<approx>\n                             snd (((c, t) ## cfT) !! n);\n        siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> fst (((c, s) ## cfT) !! Suc n) =\n                         fst (((c, t) ## cfT) !! Suc n)\n 5. \\<And>n c s t cfT.\n       \\<lbrakk>\\<And>c s t cfT.\n                   \\<lbrakk>siso c; s \\<approx> t;\n                    enabled (c, t) cfT\\<rbrakk>\n                   \\<Longrightarrow> siso (fst (((c, s) ## cfT) !! n));\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> fst (((c, s) ## cfT) !! n) =\n                             fst (((c, t) ## cfT) !! n);\n        \\<And>c s t cfT.\n           \\<lbrakk>siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n           \\<Longrightarrow> snd (((c, s) ## cfT) !! n) \\<approx>\n                             snd (((c, t) ## cfT) !! n);\n        siso c; s \\<approx> t; enabled (c, t) cfT\\<rbrakk>\n       \\<Longrightarrow> snd (((c, s) ## cfT) !! Suc n) \\<approx>\n                         snd (((c, t) ## cfT) !! Suc n)", "qed auto"], ["", "lemma Sbis_trace:\n  assumes \"proper (fst cf1)\" \"proper (fst cf2)\" \"fst cf1 \\<approx>s fst cf2\" \"snd cf1 \\<approx> snd cf2\"\n  shows \"\\<P>(cfT in T.T cf1. eff_at cf1 cfT n \\<approx> s') = \\<P>(cfT in T.T cf2. eff_at cf2 cfT n \\<approx> s')\"\n    (is \"?P cf1 n = ?P cf2 n\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n    T.prob cf2\n     {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'}", "using assms"], ["proof (prove)\nusing this:\n  proper (fst cf1)\n  proper (fst cf2)\n  fst cf1 \\<approx>s fst cf2\n  snd cf1 \\<approx> snd cf2\n\ngoal (1 subgoal):\n 1. T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n    T.prob cf2\n     {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'}", "proof (induct n arbitrary: cf1 cf2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>cf1 cf2.\n       \\<lbrakk>proper (fst cf1); proper (fst cf2);\n        fst cf1 \\<approx>s fst cf2; snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! 0) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! 0) \\<approx> s'}\n 2. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "case 0"], ["proof (state)\nthis:\n  proper (fst cf1)\n  proper (fst cf2)\n  fst cf1 \\<approx>s fst cf2\n  snd cf1 \\<approx> snd cf2\n\ngoal (2 subgoals):\n 1. \\<And>cf1 cf2.\n       \\<lbrakk>proper (fst cf1); proper (fst cf2);\n        fst cf1 \\<approx>s fst cf2; snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! 0) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! 0) \\<approx> s'}\n 2. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! 0) \\<approx> s'} =\n    T.prob cf2\n     {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! 0) \\<approx> s'}", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! 0) \\<approx> s'} =\n    T.prob cf2\n     {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! 0) \\<approx> s'}\n 2. \\<not> ?P \\<Longrightarrow>\n    T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! 0) \\<approx> s'} =\n    T.prob cf2\n     {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! 0) \\<approx> s'}", "assume \"snd cf1 \\<approx> s'\""], ["proof (state)\nthis:\n  snd cf1 \\<approx> s'\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! 0) \\<approx> s'} =\n    T.prob cf2\n     {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! 0) \\<approx> s'}\n 2. \\<not> ?P \\<Longrightarrow>\n    T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! 0) \\<approx> s'} =\n    T.prob cf2\n     {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! 0) \\<approx> s'}", "with \\<open>snd cf1 \\<approx> snd cf2\\<close> \\<open>fst cf1 \\<approx>s fst cf2\\<close>"], ["proof (chain)\npicking this:\n  snd cf1 \\<approx> snd cf2\n  fst cf1 \\<approx>s fst cf2\n  snd cf1 \\<approx> s'", "have \"snd cf1 \\<approx> s'\" \"snd cf2 \\<approx> s'\""], ["proof (prove)\nusing this:\n  snd cf1 \\<approx> snd cf2\n  fst cf1 \\<approx>s fst cf2\n  snd cf1 \\<approx> s'\n\ngoal (1 subgoal):\n 1. snd cf1 \\<approx> s' &&& snd cf2 \\<approx> s'", "by (metis indis_trans indis_sym)+"], ["proof (state)\nthis:\n  snd cf1 \\<approx> s'\n  snd cf2 \\<approx> s'\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! 0) \\<approx> s'} =\n    T.prob cf2\n     {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! 0) \\<approx> s'}\n 2. \\<not> ?P \\<Longrightarrow>\n    T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! 0) \\<approx> s'} =\n    T.prob cf2\n     {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! 0) \\<approx> s'}", "then"], ["proof (chain)\npicking this:\n  snd cf1 \\<approx> s'\n  snd cf2 \\<approx> s'", "show ?case"], ["proof (prove)\nusing this:\n  snd cf1 \\<approx> s'\n  snd cf2 \\<approx> s'\n\ngoal (1 subgoal):\n 1. T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! 0) \\<approx> s'} =\n    T.prob cf2\n     {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! 0) \\<approx> s'}", "using T.prob_space"], ["proof (prove)\nusing this:\n  snd cf1 \\<approx> s'\n  snd cf2 \\<approx> s'\n  T.prob ?s (space (T ?s)) = 1\n\ngoal (1 subgoal):\n 1. T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! 0) \\<approx> s'} =\n    T.prob cf2\n     {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! 0) \\<approx> s'}", "by simp"], ["proof (state)\nthis:\n  T.prob cf1\n   {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! 0) \\<approx> s'} =\n  T.prob cf2 {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! 0) \\<approx> s'}\n\ngoal (1 subgoal):\n 1. (snd cf1, s') \\<notin> indis \\<Longrightarrow>\n    T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! 0) \\<approx> s'} =\n    T.prob cf2\n     {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! 0) \\<approx> s'}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (snd cf1, s') \\<notin> indis \\<Longrightarrow>\n    T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! 0) \\<approx> s'} =\n    T.prob cf2\n     {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! 0) \\<approx> s'}", "assume \"\\<not> snd cf1 \\<approx> s'\""], ["proof (state)\nthis:\n  (snd cf1, s') \\<notin> indis\n\ngoal (1 subgoal):\n 1. (snd cf1, s') \\<notin> indis \\<Longrightarrow>\n    T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! 0) \\<approx> s'} =\n    T.prob cf2\n     {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! 0) \\<approx> s'}", "with \\<open>snd cf1 \\<approx> snd cf2\\<close> \\<open>fst cf1 \\<approx>s fst cf2\\<close>"], ["proof (chain)\npicking this:\n  snd cf1 \\<approx> snd cf2\n  fst cf1 \\<approx>s fst cf2\n  (snd cf1, s') \\<notin> indis", "have \"\\<not> snd cf1 \\<approx> s' \\<and> \\<not> snd cf2 \\<approx> s'\""], ["proof (prove)\nusing this:\n  snd cf1 \\<approx> snd cf2\n  fst cf1 \\<approx>s fst cf2\n  (snd cf1, s') \\<notin> indis\n\ngoal (1 subgoal):\n 1. (snd cf1, s') \\<notin> indis \\<and> (snd cf2, s') \\<notin> indis", "by (metis indis_trans indis_sym)"], ["proof (state)\nthis:\n  (snd cf1, s') \\<notin> indis \\<and> (snd cf2, s') \\<notin> indis\n\ngoal (1 subgoal):\n 1. (snd cf1, s') \\<notin> indis \\<Longrightarrow>\n    T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! 0) \\<approx> s'} =\n    T.prob cf2\n     {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! 0) \\<approx> s'}", "then"], ["proof (chain)\npicking this:\n  (snd cf1, s') \\<notin> indis \\<and> (snd cf2, s') \\<notin> indis", "show ?case"], ["proof (prove)\nusing this:\n  (snd cf1, s') \\<notin> indis \\<and> (snd cf2, s') \\<notin> indis\n\ngoal (1 subgoal):\n 1. T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! 0) \\<approx> s'} =\n    T.prob cf2\n     {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! 0) \\<approx> s'}", "by auto"], ["proof (state)\nthis:\n  T.prob cf1\n   {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! 0) \\<approx> s'} =\n  T.prob cf2 {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! 0) \\<approx> s'}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  T.prob cf1\n   {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! 0) \\<approx> s'} =\n  T.prob cf2 {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! 0) \\<approx> s'}\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>proper (fst ?cf1.1); proper (fst ?cf2.1);\n   fst ?cf1.1 \\<approx>s fst ?cf2.1;\n   snd ?cf1.1 \\<approx> snd ?cf2.1\\<rbrakk>\n  \\<Longrightarrow> T.prob ?cf1.1\n                     {cfT \\<in> space (T ?cf1.1).\n                      snd ((?cf1.1 ## cfT) !! n) \\<approx> s'} =\n                    T.prob ?cf2.1\n                     {cfT \\<in> space (T ?cf2.1).\n                      snd ((?cf2.1 ## cfT) !! n) \\<approx> s'}\n  proper (fst cf1)\n  proper (fst cf2)\n  fst cf1 \\<approx>s fst cf2\n  snd cf1 \\<approx> snd cf2\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "note \\<open>proper (fst cf1)\\<close>[simp] \\<open>proper (fst cf2)\\<close>[simp]"], ["proof (state)\nthis:\n  proper (fst cf1)\n  proper (fst cf2)\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "from Sbis_mC_C \\<open>fst cf1 \\<approx>s fst cf2\\<close> \\<open>snd cf1 \\<approx> snd cf2\\<close>"], ["proof (chain)\npicking this:\n  \\<lbrakk>?c \\<approx>s ?d; ?s \\<approx> ?t\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P F. mC_C Sbis ?c ?d ?s ?t P F\n  fst cf1 \\<approx>s fst cf2\n  snd cf1 \\<approx> snd cf2", "obtain P F where mP: \"mC_C Sbis (fst cf1) (fst cf2) (snd cf1) (snd cf2) P F\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?c \\<approx>s ?d; ?s \\<approx> ?t\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P F. mC_C Sbis ?c ?d ?s ?t P F\n  fst cf1 \\<approx>s fst cf2\n  snd cf1 \\<approx> snd cf2\n\ngoal (1 subgoal):\n 1. (\\<And>P F.\n        mC_C Sbis (fst cf1) (fst cf2) (snd cf1) (snd cf2) P\n         F \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  mC_C Sbis (fst cf1) (fst cf2) (snd cf1) (snd cf2) P F\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "then"], ["proof (chain)\npicking this:\n  mC_C Sbis (fst cf1) (fst cf2) (snd cf1) (snd cf2) P F", "have\n    P: \"part {..<brn (fst cf1)} P\" \"{} \\<notin> P\" and\n    FP: \"part {..<brn (fst cf2)} (F`P)\" \"{} \\<notin> F ` P\" \"inj_on F P\" and\n    W: \"\\<And>I. I \\<in> P \\<Longrightarrow> sum (wt (fst cf1) (snd cf1)) I = sum (wt (fst cf2) (snd cf2)) (F I)\" and\n    eff: \"\\<And>I i j. I \\<in> P \\<Longrightarrow> i \\<in> I \\<Longrightarrow> j \\<in> F I \\<Longrightarrow>\n      eff (fst cf1) (snd cf1) i \\<approx> eff (fst cf2) (snd cf2) j\" and\n    cont: \"\\<And>I i j. I \\<in> P \\<Longrightarrow> i \\<in> I \\<Longrightarrow> j \\<in> F I \\<Longrightarrow>\n      cont (fst cf1) (snd cf1) i \\<approx>s cont (fst cf2) (snd cf2) j\""], ["proof (prove)\nusing this:\n  mC_C Sbis (fst cf1) (fst cf2) (snd cf1) (snd cf2) P F\n\ngoal (1 subgoal):\n 1. ((part {..<brn (fst cf1)} P &&& {} \\<notin> P) &&&\n     part {..<brn (fst cf2)} (F ` P) &&&\n     {} \\<notin> F ` P &&& inj_on F P) &&&\n    (\\<And>I.\n        I \\<in> P \\<Longrightarrow>\n        sum (wt (fst cf1) (snd cf1)) I =\n        sum (wt (fst cf2) (snd cf2)) (F I)) &&&\n    (\\<And>I i j.\n        \\<lbrakk>I \\<in> P; i \\<in> I; j \\<in> F I\\<rbrakk>\n        \\<Longrightarrow> eff (fst cf1) (snd cf1) i \\<approx>\n                          eff (fst cf2) (snd cf2) j) &&&\n    (\\<And>I i j.\n        \\<lbrakk>I \\<in> P; i \\<in> I; j \\<in> F I\\<rbrakk>\n        \\<Longrightarrow> local.cont (fst cf1) (snd cf1) i \\<approx>s\n                          local.cont (fst cf2) (snd cf2) j)", "unfolding mC_C_def mC_C_eff_cont_def mC_C_part_def mC_C_wt_def"], ["proof (prove)\nusing this:\n  ({} \\<notin> P \\<and>\n   {} \\<notin> F ` P \\<and>\n   part {..<brn (fst cf1)} P \\<and> part {..<brn (fst cf2)} (F ` P)) \\<and>\n  inj_on F P \\<and>\n  (\\<forall>I\\<in>P.\n      sum (wt (fst cf1) (snd cf1)) I =\n      sum (wt (fst cf2) (snd cf2)) (F I)) \\<and>\n  (\\<forall>I i j.\n      I \\<in> P \\<and> i \\<in> I \\<and> j \\<in> F I \\<longrightarrow>\n      eff (fst cf1) (snd cf1) i \\<approx> eff (fst cf2) (snd cf2) j \\<and>\n      local.cont (fst cf1) (snd cf1) i \\<approx>s\n      local.cont (fst cf2) (snd cf2) j)\n\ngoal (1 subgoal):\n 1. ((part {..<brn (fst cf1)} P &&& {} \\<notin> P) &&&\n     part {..<brn (fst cf2)} (F ` P) &&&\n     {} \\<notin> F ` P &&& inj_on F P) &&&\n    (\\<And>I.\n        I \\<in> P \\<Longrightarrow>\n        sum (wt (fst cf1) (snd cf1)) I =\n        sum (wt (fst cf2) (snd cf2)) (F I)) &&&\n    (\\<And>I i j.\n        \\<lbrakk>I \\<in> P; i \\<in> I; j \\<in> F I\\<rbrakk>\n        \\<Longrightarrow> eff (fst cf1) (snd cf1) i \\<approx>\n                          eff (fst cf2) (snd cf2) j) &&&\n    (\\<And>I i j.\n        \\<lbrakk>I \\<in> P; i \\<in> I; j \\<in> F I\\<rbrakk>\n        \\<Longrightarrow> local.cont (fst cf1) (snd cf1) i \\<approx>s\n                          local.cont (fst cf2) (snd cf2) j)", "by metis+"], ["proof (state)\nthis:\n  part {..<brn (fst cf1)} P\n  {} \\<notin> P\n  part {..<brn (fst cf2)} (F ` P)\n  {} \\<notin> F ` P\n  inj_on F P\n  ?I1 \\<in> P \\<Longrightarrow>\n  sum (wt (fst cf1) (snd cf1)) ?I1 = sum (wt (fst cf2) (snd cf2)) (F ?I1)\n  \\<lbrakk>?I1 \\<in> P; ?i1 \\<in> ?I1; ?j1 \\<in> F ?I1\\<rbrakk>\n  \\<Longrightarrow> eff (fst cf1) (snd cf1) ?i1 \\<approx>\n                    eff (fst cf2) (snd cf2) ?j1\n  \\<lbrakk>?I1 \\<in> P; ?i1 \\<in> ?I1; ?j1 \\<in> F ?I1\\<rbrakk>\n  \\<Longrightarrow> local.cont (fst cf1) (snd cf1) ?i1 \\<approx>s\n                    local.cont (fst cf2) (snd cf2) ?j1\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "{"], ["proof (state)\nthis:\n  part {..<brn (fst cf1)} P\n  {} \\<notin> P\n  part {..<brn (fst cf2)} (F ` P)\n  {} \\<notin> F ` P\n  inj_on F P\n  ?I1 \\<in> P \\<Longrightarrow>\n  sum (wt (fst cf1) (snd cf1)) ?I1 = sum (wt (fst cf2) (snd cf2)) (F ?I1)\n  \\<lbrakk>?I1 \\<in> P; ?i1 \\<in> ?I1; ?j1 \\<in> F ?I1\\<rbrakk>\n  \\<Longrightarrow> eff (fst cf1) (snd cf1) ?i1 \\<approx>\n                    eff (fst cf2) (snd cf2) ?j1\n  \\<lbrakk>?I1 \\<in> P; ?i1 \\<in> ?I1; ?j1 \\<in> F ?I1\\<rbrakk>\n  \\<Longrightarrow> local.cont (fst cf1) (snd cf1) ?i1 \\<approx>s\n                    local.cont (fst cf2) (snd cf2) ?j1\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "fix cf1 :: \"('test, 'atom, 'choice) cmd \\<times> 'state\" and P"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "assume cf[simp]: \"proper (fst cf1)\" and P: \"part {..<brn (fst cf1)} P\""], ["proof (state)\nthis:\n  proper (fst cf1)\n  part {..<brn (fst cf1)} P\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "have \"?P cf1 (Suc n) = (\\<integral>cf'. ?P cf' n \\<partial>trans cf1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n    measure_pmf.expectation (local.trans cf1)\n     (\\<lambda>cf'.\n         T.prob cf'\n          {cfT \\<in> space (T cf'). snd ((cf' ## cfT) !! n) \\<approx> s'})", "by (subst T.prob_T) auto"], ["proof (state)\nthis:\n  T.prob cf1\n   {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n  measure_pmf.expectation (local.trans cf1)\n   (\\<lambda>cf'.\n       T.prob cf'\n        {cfT \\<in> space (T cf'). snd ((cf' ## cfT) !! n) \\<approx> s'})\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "also"], ["proof (state)\nthis:\n  T.prob cf1\n   {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n  measure_pmf.expectation (local.trans cf1)\n   (\\<lambda>cf'.\n       T.prob cf'\n        {cfT \\<in> space (T cf'). snd ((cf' ## cfT) !! n) \\<approx> s'})\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "have \"\\<dots> = (\\<Sum>b<brn (fst cf1). wt (fst cf1) (snd cf1) b * ?P (cont_eff cf1 b) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. measure_pmf.expectation (local.trans cf1)\n     (\\<lambda>cf'.\n         T.prob cf'\n          {cfT \\<in> space (T cf'). snd ((cf' ## cfT) !! n) \\<approx> s'}) =\n    (\\<Sum>b<brn (fst cf1).\n        wt (fst cf1) (snd cf1) b *\n        T.prob (cont_eff cf1 b)\n         {cfT \\<in> space (T (cont_eff cf1 b)).\n          snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'})", "unfolding integral_trans[OF cf]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<brn (fst cf1).\n        wt (fst cf1) (snd cf1) i *\n        T.prob (cont_eff cf1 i)\n         {cfT \\<in> space (T (cont_eff cf1 i)).\n          snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'}) =\n    (\\<Sum>b<brn (fst cf1).\n        wt (fst cf1) (snd cf1) b *\n        T.prob (cont_eff cf1 b)\n         {cfT \\<in> space (T (cont_eff cf1 b)).\n          snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'})", ".."], ["proof (state)\nthis:\n  measure_pmf.expectation (local.trans cf1)\n   (\\<lambda>cf'.\n       T.prob cf'\n        {cfT \\<in> space (T cf'). snd ((cf' ## cfT) !! n) \\<approx> s'}) =\n  (\\<Sum>b<brn (fst cf1).\n      wt (fst cf1) (snd cf1) b *\n      T.prob (cont_eff cf1 b)\n       {cfT \\<in> space (T (cont_eff cf1 b)).\n        snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'})\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "also"], ["proof (state)\nthis:\n  measure_pmf.expectation (local.trans cf1)\n   (\\<lambda>cf'.\n       T.prob cf'\n        {cfT \\<in> space (T cf'). snd ((cf' ## cfT) !! n) \\<approx> s'}) =\n  (\\<Sum>b<brn (fst cf1).\n      wt (fst cf1) (snd cf1) b *\n      T.prob (cont_eff cf1 b)\n       {cfT \\<in> space (T (cont_eff cf1 b)).\n        snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'})\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "have \"\\<dots> = (\\<Sum>I\\<in>P. \\<Sum>b\\<in>I. wt (fst cf1) (snd cf1) b * ?P (cont_eff cf1 b) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>b<brn (fst cf1).\n        wt (fst cf1) (snd cf1) b *\n        T.prob (cont_eff cf1 b)\n         {cfT \\<in> space (T (cont_eff cf1 b)).\n          snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}) =\n    sum (sum (\\<lambda>b.\n                 wt (fst cf1) (snd cf1) b *\n                 T.prob (cont_eff cf1 b)\n                  {cfT \\<in> space (T (cont_eff cf1 b)).\n                   snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}))\n     P", "unfolding part_sum[OF P]"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (sum (\\<lambda>b.\n                 wt (fst cf1) (snd cf1) b *\n                 T.prob (cont_eff cf1 b)\n                  {cfT \\<in> space (T (cont_eff cf1 b)).\n                   snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}))\n     P =\n    sum (sum (\\<lambda>b.\n                 wt (fst cf1) (snd cf1) b *\n                 T.prob (cont_eff cf1 b)\n                  {cfT \\<in> space (T (cont_eff cf1 b)).\n                   snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}))\n     P", ".."], ["proof (state)\nthis:\n  (\\<Sum>b<brn (fst cf1).\n      wt (fst cf1) (snd cf1) b *\n      T.prob (cont_eff cf1 b)\n       {cfT \\<in> space (T (cont_eff cf1 b)).\n        snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}) =\n  sum (sum (\\<lambda>b.\n               wt (fst cf1) (snd cf1) b *\n               T.prob (cont_eff cf1 b)\n                {cfT \\<in> space (T (cont_eff cf1 b)).\n                 snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}))\n   P\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "finally"], ["proof (chain)\npicking this:\n  T.prob cf1\n   {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n  sum (sum (\\<lambda>b.\n               wt (fst cf1) (snd cf1) b *\n               T.prob (cont_eff cf1 b)\n                {cfT \\<in> space (T (cont_eff cf1 b)).\n                 snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}))\n   P", "have \"?P cf1 (Suc n) = \\<dots>\""], ["proof (prove)\nusing this:\n  T.prob cf1\n   {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n  sum (sum (\\<lambda>b.\n               wt (fst cf1) (snd cf1) b *\n               T.prob (cont_eff cf1 b)\n                {cfT \\<in> space (T (cont_eff cf1 b)).\n                 snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}))\n   P\n\ngoal (1 subgoal):\n 1. T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n    sum (sum (\\<lambda>b.\n                 wt (fst cf1) (snd cf1) b *\n                 T.prob (cont_eff cf1 b)\n                  {cfT \\<in> space (T (cont_eff cf1 b)).\n                   snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}))\n     P", "."], ["proof (state)\nthis:\n  T.prob cf1\n   {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n  sum (sum (\\<lambda>b.\n               wt (fst cf1) (snd cf1) b *\n               T.prob (cont_eff cf1 b)\n                {cfT \\<in> space (T (cont_eff cf1 b)).\n                 snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}))\n   P\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "}"], ["proof (state)\nthis:\n  \\<lbrakk>proper (fst ?cf1b3); part {..<brn (fst ?cf1b3)} ?Pa3\\<rbrakk>\n  \\<Longrightarrow> T.prob ?cf1b3\n                     {cfT \\<in> space (T ?cf1b3).\n                      snd ((?cf1b3 ## cfT) !! Suc n) \\<approx> s'} =\n                    sum (sum (\\<lambda>b.\n                                 wt (fst ?cf1b3) (snd ?cf1b3) b *\n                                 T.prob (cont_eff ?cf1b3 b)\n                                  {cfT \\<in> space (T (cont_eff ?cf1b3 b)).\n                                   snd ((cont_eff ?cf1b3 b ## cfT) !!\n  n) \\<approx>\n                                   s'}))\n                     ?Pa3\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "note split = this"], ["proof (state)\nthis:\n  \\<lbrakk>proper (fst ?cf1b3); part {..<brn (fst ?cf1b3)} ?Pa3\\<rbrakk>\n  \\<Longrightarrow> T.prob ?cf1b3\n                     {cfT \\<in> space (T ?cf1b3).\n                      snd ((?cf1b3 ## cfT) !! Suc n) \\<approx> s'} =\n                    sum (sum (\\<lambda>b.\n                                 wt (fst ?cf1b3) (snd ?cf1b3) b *\n                                 T.prob (cont_eff ?cf1b3 b)\n                                  {cfT \\<in> space (T (cont_eff ?cf1b3 b)).\n                                   snd ((cont_eff ?cf1b3 b ## cfT) !!\n  n) \\<approx>\n                                   s'}))\n                     ?Pa3\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "{"], ["proof (state)\nthis:\n  \\<lbrakk>proper (fst ?cf1b3); part {..<brn (fst ?cf1b3)} ?Pa3\\<rbrakk>\n  \\<Longrightarrow> T.prob ?cf1b3\n                     {cfT \\<in> space (T ?cf1b3).\n                      snd ((?cf1b3 ## cfT) !! Suc n) \\<approx> s'} =\n                    sum (sum (\\<lambda>b.\n                                 wt (fst ?cf1b3) (snd ?cf1b3) b *\n                                 T.prob (cont_eff ?cf1b3 b)\n                                  {cfT \\<in> space (T (cont_eff ?cf1b3 b)).\n                                   snd ((cont_eff ?cf1b3 b ## cfT) !!\n  n) \\<approx>\n                                   s'}))\n                     ?Pa3\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "fix I i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "assume \"I \\<in> P\" \"i \\<in> I\""], ["proof (state)\nthis:\n  I \\<in> P\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "with \\<open>proper (fst cf1)\\<close>"], ["proof (chain)\npicking this:\n  proper (fst cf1)\n  I \\<in> P\n  i \\<in> I", "have \"i < brn (fst cf1)\""], ["proof (prove)\nusing this:\n  proper (fst cf1)\n  I \\<in> P\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. i < brn (fst cf1)", "using part_is_subset[OF P(1) \\<open>I \\<in> P\\<close>]"], ["proof (prove)\nusing this:\n  proper (fst cf1)\n  I \\<in> P\n  i \\<in> I\n  I \\<subseteq> {..<brn (fst cf1)}\n\ngoal (1 subgoal):\n 1. i < brn (fst cf1)", "by auto"], ["proof (state)\nthis:\n  i < brn (fst cf1)\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?I3 \\<in> P; ?i3 \\<in> ?I3\\<rbrakk>\n  \\<Longrightarrow> ?i3 < brn (fst cf1)\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "note brn_cf[simp] = this"], ["proof (state)\nthis:\n  \\<lbrakk>?I3 \\<in> P; ?i3 \\<in> ?I3\\<rbrakk>\n  \\<Longrightarrow> ?i3 < brn (fst cf1)\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?I3 \\<in> P; ?i3 \\<in> ?I3\\<rbrakk>\n  \\<Longrightarrow> ?i3 < brn (fst cf1)\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "fix I i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "assume \"I \\<in> P\" \"i \\<in> F I\""], ["proof (state)\nthis:\n  I \\<in> P\n  i \\<in> F I\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "with \\<open>proper (fst cf2)\\<close>"], ["proof (chain)\npicking this:\n  proper (fst cf2)\n  I \\<in> P\n  i \\<in> F I", "have \"i < brn (fst cf2)\""], ["proof (prove)\nusing this:\n  proper (fst cf2)\n  I \\<in> P\n  i \\<in> F I\n\ngoal (1 subgoal):\n 1. i < brn (fst cf2)", "using part_is_subset[OF FP(1), of \"F I\"]"], ["proof (prove)\nusing this:\n  proper (fst cf2)\n  I \\<in> P\n  i \\<in> F I\n  F I \\<in> F ` P \\<Longrightarrow> F I \\<subseteq> {..<brn (fst cf2)}\n\ngoal (1 subgoal):\n 1. i < brn (fst cf2)", "by auto"], ["proof (state)\nthis:\n  i < brn (fst cf2)\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?I3 \\<in> P; ?i3 \\<in> F ?I3\\<rbrakk>\n  \\<Longrightarrow> ?i3 < brn (fst cf2)\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "note brn_cf2[simp] = this"], ["proof (state)\nthis:\n  \\<lbrakk>?I3 \\<in> P; ?i3 \\<in> F ?I3\\<rbrakk>\n  \\<Longrightarrow> ?i3 < brn (fst cf2)\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?I3 \\<in> P; ?i3 \\<in> F ?I3\\<rbrakk>\n  \\<Longrightarrow> ?i3 < brn (fst cf2)\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "fix I"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "assume \"I \\<in> P\""], ["proof (state)\nthis:\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "with \\<open>{} \\<notin> P\\<close>"], ["proof (chain)\npicking this:\n  {} \\<notin> P\n  I \\<in> P", "obtain i where \"i \\<in> I\""], ["proof (prove)\nusing this:\n  {} \\<notin> P\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. (\\<And>i. i \\<in> I \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (metis all_not_in_conv)"], ["proof (state)\nthis:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "from \\<open>I \\<in> P\\<close> FP"], ["proof (chain)\npicking this:\n  I \\<in> P\n  part {..<brn (fst cf2)} (F ` P)\n  {} \\<notin> F ` P\n  inj_on F P", "have \"F I \\<noteq> {}\" \"F I \\<subseteq> {..<brn (fst cf2)}\""], ["proof (prove)\nusing this:\n  I \\<in> P\n  part {..<brn (fst cf2)} (F ` P)\n  {} \\<notin> F ` P\n  inj_on F P\n\ngoal (1 subgoal):\n 1. F I \\<noteq> {} &&& F I \\<subseteq> {..<brn (fst cf2)}", "by (auto simp: part_is_subset)"], ["proof (state)\nthis:\n  F I \\<noteq> {}\n  F I \\<subseteq> {..<brn (fst cf2)}\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "then"], ["proof (chain)\npicking this:\n  F I \\<noteq> {}\n  F I \\<subseteq> {..<brn (fst cf2)}", "obtain j where \"j < brn (fst cf2)\" \"j \\<in> F I\""], ["proof (prove)\nusing this:\n  F I \\<noteq> {}\n  F I \\<subseteq> {..<brn (fst cf2)}\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>j < brn (fst cf2); j \\<in> F I\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  j < brn (fst cf2)\n  j \\<in> F I\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "{"], ["proof (state)\nthis:\n  j < brn (fst cf2)\n  j \\<in> F I\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "assume \"b \\<in> F I\""], ["proof (state)\nthis:\n  b \\<in> F I\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "then"], ["proof (chain)\npicking this:\n  b \\<in> F I", "have \"?P (cont_eff cf1 i) n = ?P (cont_eff cf2 b) n\""], ["proof (prove)\nusing this:\n  b \\<in> F I\n\ngoal (1 subgoal):\n 1. T.prob (cont_eff cf1 i)\n     {cfT \\<in> space (T (cont_eff cf1 i)).\n      snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'} =\n    T.prob (cont_eff cf2 b)\n     {cfT \\<in> space (T (cont_eff cf2 b)).\n      snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'}", "using \\<open>I \\<in> P\\<close> \\<open>i \\<in> I\\<close> cont eff"], ["proof (prove)\nusing this:\n  b \\<in> F I\n  I \\<in> P\n  i \\<in> I\n  \\<lbrakk>?I1 \\<in> P; ?i1 \\<in> ?I1; ?j1 \\<in> F ?I1\\<rbrakk>\n  \\<Longrightarrow> local.cont (fst cf1) (snd cf1) ?i1 \\<approx>s\n                    local.cont (fst cf2) (snd cf2) ?j1\n  \\<lbrakk>?I1 \\<in> P; ?i1 \\<in> ?I1; ?j1 \\<in> F ?I1\\<rbrakk>\n  \\<Longrightarrow> eff (fst cf1) (snd cf1) ?i1 \\<approx>\n                    eff (fst cf2) (snd cf2) ?j1\n\ngoal (1 subgoal):\n 1. T.prob (cont_eff cf1 i)\n     {cfT \\<in> space (T (cont_eff cf1 i)).\n      snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'} =\n    T.prob (cont_eff cf2 b)\n     {cfT \\<in> space (T (cont_eff cf2 b)).\n      snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'}", "by (intro Suc) (auto simp add: cont_eff)"], ["proof (state)\nthis:\n  T.prob (cont_eff cf1 i)\n   {cfT \\<in> space (T (cont_eff cf1 i)).\n    snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'} =\n  T.prob (cont_eff cf2 b)\n   {cfT \\<in> space (T (cont_eff cf2 b)).\n    snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'}\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "}"], ["proof (state)\nthis:\n  ?b3 \\<in> F I \\<Longrightarrow>\n  T.prob (cont_eff cf1 i)\n   {cfT \\<in> space (T (cont_eff cf1 i)).\n    snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'} =\n  T.prob (cont_eff cf2 ?b3)\n   {cfT \\<in> space (T (cont_eff cf2 ?b3)).\n    snd ((cont_eff cf2 ?b3 ## cfT) !! n) \\<approx> s'}\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "note cont_d_const = this[symmetric]"], ["proof (state)\nthis:\n  ?b \\<in> F I \\<Longrightarrow>\n  T.prob (cont_eff cf2 ?b)\n   {cfT \\<in> space (T (cont_eff cf2 ?b)).\n    snd ((cont_eff cf2 ?b ## cfT) !! n) \\<approx> s'} =\n  T.prob (cont_eff cf1 i)\n   {cfT \\<in> space (T (cont_eff cf1 i)).\n    snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'}\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "{"], ["proof (state)\nthis:\n  ?b \\<in> F I \\<Longrightarrow>\n  T.prob (cont_eff cf2 ?b)\n   {cfT \\<in> space (T (cont_eff cf2 ?b)).\n    snd ((cont_eff cf2 ?b ## cfT) !! n) \\<approx> s'} =\n  T.prob (cont_eff cf1 i)\n   {cfT \\<in> space (T (cont_eff cf1 i)).\n    snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'}\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "assume \"a \\<in> I\""], ["proof (state)\nthis:\n  a \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "with \\<open>I \\<in> P\\<close> \\<open>i \\<in> I\\<close> \\<open>j \\<in> F I\\<close> cont eff"], ["proof (chain)\npicking this:\n  I \\<in> P\n  i \\<in> I\n  j \\<in> F I\n  \\<lbrakk>?I1 \\<in> P; ?i1 \\<in> ?I1; ?j1 \\<in> F ?I1\\<rbrakk>\n  \\<Longrightarrow> local.cont (fst cf1) (snd cf1) ?i1 \\<approx>s\n                    local.cont (fst cf2) (snd cf2) ?j1\n  \\<lbrakk>?I1 \\<in> P; ?i1 \\<in> ?I1; ?j1 \\<in> F ?I1\\<rbrakk>\n  \\<Longrightarrow> eff (fst cf1) (snd cf1) ?i1 \\<approx>\n                    eff (fst cf2) (snd cf2) ?j1\n  a \\<in> I", "have \"?P (cont_eff cf1 i) n = ?P (cont_eff cf2 j) n \\<and>\n        ?P (cont_eff cf1 a) n = ?P (cont_eff cf2 j) n\""], ["proof (prove)\nusing this:\n  I \\<in> P\n  i \\<in> I\n  j \\<in> F I\n  \\<lbrakk>?I1 \\<in> P; ?i1 \\<in> ?I1; ?j1 \\<in> F ?I1\\<rbrakk>\n  \\<Longrightarrow> local.cont (fst cf1) (snd cf1) ?i1 \\<approx>s\n                    local.cont (fst cf2) (snd cf2) ?j1\n  \\<lbrakk>?I1 \\<in> P; ?i1 \\<in> ?I1; ?j1 \\<in> F ?I1\\<rbrakk>\n  \\<Longrightarrow> eff (fst cf1) (snd cf1) ?i1 \\<approx>\n                    eff (fst cf2) (snd cf2) ?j1\n  a \\<in> I\n\ngoal (1 subgoal):\n 1. T.prob (cont_eff cf1 i)\n     {cfT \\<in> space (T (cont_eff cf1 i)).\n      snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'} =\n    T.prob (cont_eff cf2 j)\n     {cfT \\<in> space (T (cont_eff cf2 j)).\n      snd ((cont_eff cf2 j ## cfT) !! n) \\<approx> s'} \\<and>\n    T.prob (cont_eff cf1 a)\n     {cfT \\<in> space (T (cont_eff cf1 a)).\n      snd ((cont_eff cf1 a ## cfT) !! n) \\<approx> s'} =\n    T.prob (cont_eff cf2 j)\n     {cfT \\<in> space (T (cont_eff cf2 j)).\n      snd ((cont_eff cf2 j ## cfT) !! n) \\<approx> s'}", "by (intro conjI Suc) (auto simp add: cont_eff)"], ["proof (state)\nthis:\n  T.prob (cont_eff cf1 i)\n   {cfT \\<in> space (T (cont_eff cf1 i)).\n    snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'} =\n  T.prob (cont_eff cf2 j)\n   {cfT \\<in> space (T (cont_eff cf2 j)).\n    snd ((cont_eff cf2 j ## cfT) !! n) \\<approx> s'} \\<and>\n  T.prob (cont_eff cf1 a)\n   {cfT \\<in> space (T (cont_eff cf1 a)).\n    snd ((cont_eff cf1 a ## cfT) !! n) \\<approx> s'} =\n  T.prob (cont_eff cf2 j)\n   {cfT \\<in> space (T (cont_eff cf2 j)).\n    snd ((cont_eff cf2 j ## cfT) !! n) \\<approx> s'}\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "then"], ["proof (chain)\npicking this:\n  T.prob (cont_eff cf1 i)\n   {cfT \\<in> space (T (cont_eff cf1 i)).\n    snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'} =\n  T.prob (cont_eff cf2 j)\n   {cfT \\<in> space (T (cont_eff cf2 j)).\n    snd ((cont_eff cf2 j ## cfT) !! n) \\<approx> s'} \\<and>\n  T.prob (cont_eff cf1 a)\n   {cfT \\<in> space (T (cont_eff cf1 a)).\n    snd ((cont_eff cf1 a ## cfT) !! n) \\<approx> s'} =\n  T.prob (cont_eff cf2 j)\n   {cfT \\<in> space (T (cont_eff cf2 j)).\n    snd ((cont_eff cf2 j ## cfT) !! n) \\<approx> s'}", "have \"?P (cont_eff cf1 a) n = ?P (cont_eff cf1 i) n\""], ["proof (prove)\nusing this:\n  T.prob (cont_eff cf1 i)\n   {cfT \\<in> space (T (cont_eff cf1 i)).\n    snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'} =\n  T.prob (cont_eff cf2 j)\n   {cfT \\<in> space (T (cont_eff cf2 j)).\n    snd ((cont_eff cf2 j ## cfT) !! n) \\<approx> s'} \\<and>\n  T.prob (cont_eff cf1 a)\n   {cfT \\<in> space (T (cont_eff cf1 a)).\n    snd ((cont_eff cf1 a ## cfT) !! n) \\<approx> s'} =\n  T.prob (cont_eff cf2 j)\n   {cfT \\<in> space (T (cont_eff cf2 j)).\n    snd ((cont_eff cf2 j ## cfT) !! n) \\<approx> s'}\n\ngoal (1 subgoal):\n 1. T.prob (cont_eff cf1 a)\n     {cfT \\<in> space (T (cont_eff cf1 a)).\n      snd ((cont_eff cf1 a ## cfT) !! n) \\<approx> s'} =\n    T.prob (cont_eff cf1 i)\n     {cfT \\<in> space (T (cont_eff cf1 i)).\n      snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'}", "by simp"], ["proof (state)\nthis:\n  T.prob (cont_eff cf1 a)\n   {cfT \\<in> space (T (cont_eff cf1 a)).\n    snd ((cont_eff cf1 a ## cfT) !! n) \\<approx> s'} =\n  T.prob (cont_eff cf1 i)\n   {cfT \\<in> space (T (cont_eff cf1 i)).\n    snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'}\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "}"], ["proof (state)\nthis:\n  ?a3 \\<in> I \\<Longrightarrow>\n  T.prob (cont_eff cf1 ?a3)\n   {cfT \\<in> space (T (cont_eff cf1 ?a3)).\n    snd ((cont_eff cf1 ?a3 ## cfT) !! n) \\<approx> s'} =\n  T.prob (cont_eff cf1 i)\n   {cfT \\<in> space (T (cont_eff cf1 i)).\n    snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'}\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "then"], ["proof (chain)\npicking this:\n  ?a3 \\<in> I \\<Longrightarrow>\n  T.prob (cont_eff cf1 ?a3)\n   {cfT \\<in> space (T (cont_eff cf1 ?a3)).\n    snd ((cont_eff cf1 ?a3 ## cfT) !! n) \\<approx> s'} =\n  T.prob (cont_eff cf1 i)\n   {cfT \\<in> space (T (cont_eff cf1 i)).\n    snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'}", "have \"(\\<Sum>b\\<in>I. wt (fst cf1) (snd cf1) b * ?P (cont_eff cf1 b) n) =\n        (\\<Sum>b\\<in>I. wt (fst cf1) (snd cf1) b) * ?P (cont_eff cf1 i) n\""], ["proof (prove)\nusing this:\n  ?a3 \\<in> I \\<Longrightarrow>\n  T.prob (cont_eff cf1 ?a3)\n   {cfT \\<in> space (T (cont_eff cf1 ?a3)).\n    snd ((cont_eff cf1 ?a3 ## cfT) !! n) \\<approx> s'} =\n  T.prob (cont_eff cf1 i)\n   {cfT \\<in> space (T (cont_eff cf1 i)).\n    snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'}\n\ngoal (1 subgoal):\n 1. (\\<Sum>b\\<in>I.\n       wt (fst cf1) (snd cf1) b *\n       T.prob (cont_eff cf1 b)\n        {cfT \\<in> space (T (cont_eff cf1 b)).\n         snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}) =\n    sum (wt (fst cf1) (snd cf1)) I *\n    T.prob (cont_eff cf1 i)\n     {cfT \\<in> space (T (cont_eff cf1 i)).\n      snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'}", "by (simp add: sum_distrib_right)"], ["proof (state)\nthis:\n  (\\<Sum>b\\<in>I.\n     wt (fst cf1) (snd cf1) b *\n     T.prob (cont_eff cf1 b)\n      {cfT \\<in> space (T (cont_eff cf1 b)).\n       snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}) =\n  sum (wt (fst cf1) (snd cf1)) I *\n  T.prob (cont_eff cf1 i)\n   {cfT \\<in> space (T (cont_eff cf1 i)).\n    snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'}\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "also"], ["proof (state)\nthis:\n  (\\<Sum>b\\<in>I.\n     wt (fst cf1) (snd cf1) b *\n     T.prob (cont_eff cf1 b)\n      {cfT \\<in> space (T (cont_eff cf1 b)).\n       snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}) =\n  sum (wt (fst cf1) (snd cf1)) I *\n  T.prob (cont_eff cf1 i)\n   {cfT \\<in> space (T (cont_eff cf1 i)).\n    snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'}\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "have \"\\<dots> = (\\<Sum>b\\<in>F I. wt (fst cf2) (snd cf2) b) * ?P (cont_eff cf1 i) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (fst cf1) (snd cf1)) I *\n    T.prob (cont_eff cf1 i)\n     {cfT \\<in> space (T (cont_eff cf1 i)).\n      snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'} =\n    sum (wt (fst cf2) (snd cf2)) (F I) *\n    T.prob (cont_eff cf1 i)\n     {cfT \\<in> space (T (cont_eff cf1 i)).\n      snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'}", "using W \\<open>I \\<in> P\\<close>"], ["proof (prove)\nusing this:\n  ?I1 \\<in> P \\<Longrightarrow>\n  sum (wt (fst cf1) (snd cf1)) ?I1 = sum (wt (fst cf2) (snd cf2)) (F ?I1)\n  I \\<in> P\n\ngoal (1 subgoal):\n 1. sum (wt (fst cf1) (snd cf1)) I *\n    T.prob (cont_eff cf1 i)\n     {cfT \\<in> space (T (cont_eff cf1 i)).\n      snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'} =\n    sum (wt (fst cf2) (snd cf2)) (F I) *\n    T.prob (cont_eff cf1 i)\n     {cfT \\<in> space (T (cont_eff cf1 i)).\n      snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'}", "by auto"], ["proof (state)\nthis:\n  sum (wt (fst cf1) (snd cf1)) I *\n  T.prob (cont_eff cf1 i)\n   {cfT \\<in> space (T (cont_eff cf1 i)).\n    snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'} =\n  sum (wt (fst cf2) (snd cf2)) (F I) *\n  T.prob (cont_eff cf1 i)\n   {cfT \\<in> space (T (cont_eff cf1 i)).\n    snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'}\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "also"], ["proof (state)\nthis:\n  sum (wt (fst cf1) (snd cf1)) I *\n  T.prob (cont_eff cf1 i)\n   {cfT \\<in> space (T (cont_eff cf1 i)).\n    snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'} =\n  sum (wt (fst cf2) (snd cf2)) (F I) *\n  T.prob (cont_eff cf1 i)\n   {cfT \\<in> space (T (cont_eff cf1 i)).\n    snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'}\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "have \"\\<dots> = (\\<Sum>b\\<in>F I. wt (fst cf2) (snd cf2) b * ?P (cont_eff cf2 b) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (fst cf2) (snd cf2)) (F I) *\n    T.prob (cont_eff cf1 i)\n     {cfT \\<in> space (T (cont_eff cf1 i)).\n      snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'} =\n    (\\<Sum>b\\<in>F I.\n       wt (fst cf2) (snd cf2) b *\n       T.prob (cont_eff cf2 b)\n        {cfT \\<in> space (T (cont_eff cf2 b)).\n         snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'})", "using cont_d_const"], ["proof (prove)\nusing this:\n  ?b \\<in> F I \\<Longrightarrow>\n  T.prob (cont_eff cf2 ?b)\n   {cfT \\<in> space (T (cont_eff cf2 ?b)).\n    snd ((cont_eff cf2 ?b ## cfT) !! n) \\<approx> s'} =\n  T.prob (cont_eff cf1 i)\n   {cfT \\<in> space (T (cont_eff cf1 i)).\n    snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'}\n\ngoal (1 subgoal):\n 1. sum (wt (fst cf2) (snd cf2)) (F I) *\n    T.prob (cont_eff cf1 i)\n     {cfT \\<in> space (T (cont_eff cf1 i)).\n      snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'} =\n    (\\<Sum>b\\<in>F I.\n       wt (fst cf2) (snd cf2) b *\n       T.prob (cont_eff cf2 b)\n        {cfT \\<in> space (T (cont_eff cf2 b)).\n         snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'})", "by (auto simp add: sum_distrib_right)"], ["proof (state)\nthis:\n  sum (wt (fst cf2) (snd cf2)) (F I) *\n  T.prob (cont_eff cf1 i)\n   {cfT \\<in> space (T (cont_eff cf1 i)).\n    snd ((cont_eff cf1 i ## cfT) !! n) \\<approx> s'} =\n  (\\<Sum>b\\<in>F I.\n     wt (fst cf2) (snd cf2) b *\n     T.prob (cont_eff cf2 b)\n      {cfT \\<in> space (T (cont_eff cf2 b)).\n       snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'})\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>b\\<in>I.\n     wt (fst cf1) (snd cf1) b *\n     T.prob (cont_eff cf1 b)\n      {cfT \\<in> space (T (cont_eff cf1 b)).\n       snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}) =\n  (\\<Sum>b\\<in>F I.\n     wt (fst cf2) (snd cf2) b *\n     T.prob (cont_eff cf2 b)\n      {cfT \\<in> space (T (cont_eff cf2 b)).\n       snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'})", "have \"(\\<Sum>b\\<in>I. wt (fst cf1) (snd cf1) b * ?P (cont_eff cf1 b) n) = \\<dots>\""], ["proof (prove)\nusing this:\n  (\\<Sum>b\\<in>I.\n     wt (fst cf1) (snd cf1) b *\n     T.prob (cont_eff cf1 b)\n      {cfT \\<in> space (T (cont_eff cf1 b)).\n       snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}) =\n  (\\<Sum>b\\<in>F I.\n     wt (fst cf2) (snd cf2) b *\n     T.prob (cont_eff cf2 b)\n      {cfT \\<in> space (T (cont_eff cf2 b)).\n       snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'})\n\ngoal (1 subgoal):\n 1. (\\<Sum>b\\<in>I.\n       wt (fst cf1) (snd cf1) b *\n       T.prob (cont_eff cf1 b)\n        {cfT \\<in> space (T (cont_eff cf1 b)).\n         snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}) =\n    (\\<Sum>b\\<in>F I.\n       wt (fst cf2) (snd cf2) b *\n       T.prob (cont_eff cf2 b)\n        {cfT \\<in> space (T (cont_eff cf2 b)).\n         snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'})", "."], ["proof (state)\nthis:\n  (\\<Sum>b\\<in>I.\n     wt (fst cf1) (snd cf1) b *\n     T.prob (cont_eff cf1 b)\n      {cfT \\<in> space (T (cont_eff cf1 b)).\n       snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}) =\n  (\\<Sum>b\\<in>F I.\n     wt (fst cf2) (snd cf2) b *\n     T.prob (cont_eff cf2 b)\n      {cfT \\<in> space (T (cont_eff cf2 b)).\n       snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'})\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "}"], ["proof (state)\nthis:\n  ?I3 \\<in> P \\<Longrightarrow>\n  (\\<Sum>b\\<in>?I3.\n     wt (fst cf1) (snd cf1) b *\n     T.prob (cont_eff cf1 b)\n      {cfT \\<in> space (T (cont_eff cf1 b)).\n       snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}) =\n  (\\<Sum>b\\<in>F ?I3.\n     wt (fst cf2) (snd cf2) b *\n     T.prob (cont_eff cf2 b)\n      {cfT \\<in> space (T (cont_eff cf2 b)).\n       snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'})\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "note sum_eq = this"], ["proof (state)\nthis:\n  ?I3 \\<in> P \\<Longrightarrow>\n  (\\<Sum>b\\<in>?I3.\n     wt (fst cf1) (snd cf1) b *\n     T.prob (cont_eff cf1 b)\n      {cfT \\<in> space (T (cont_eff cf1 b)).\n       snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}) =\n  (\\<Sum>b\\<in>F ?I3.\n     wt (fst cf2) (snd cf2) b *\n     T.prob (cont_eff cf2 b)\n      {cfT \\<in> space (T (cont_eff cf2 b)).\n       snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'})\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "have \"?P cf1 (Suc n) = (\\<Sum>I\\<in>P. \\<Sum>b\\<in>I. wt (fst cf1) (snd cf1) b * ?P (cont_eff cf1 b) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n    sum (sum (\\<lambda>b.\n                 wt (fst cf1) (snd cf1) b *\n                 T.prob (cont_eff cf1 b)\n                  {cfT \\<in> space (T (cont_eff cf1 b)).\n                   snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}))\n     P", "using \\<open>proper (fst cf1)\\<close> P(1)"], ["proof (prove)\nusing this:\n  proper (fst cf1)\n  part {..<brn (fst cf1)} P\n\ngoal (1 subgoal):\n 1. T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n    sum (sum (\\<lambda>b.\n                 wt (fst cf1) (snd cf1) b *\n                 T.prob (cont_eff cf1 b)\n                  {cfT \\<in> space (T (cont_eff cf1 b)).\n                   snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}))\n     P", "by (rule split)"], ["proof (state)\nthis:\n  T.prob cf1\n   {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n  sum (sum (\\<lambda>b.\n               wt (fst cf1) (snd cf1) b *\n               T.prob (cont_eff cf1 b)\n                {cfT \\<in> space (T (cont_eff cf1 b)).\n                 snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}))\n   P\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "also"], ["proof (state)\nthis:\n  T.prob cf1\n   {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n  sum (sum (\\<lambda>b.\n               wt (fst cf1) (snd cf1) b *\n               T.prob (cont_eff cf1 b)\n                {cfT \\<in> space (T (cont_eff cf1 b)).\n                 snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}))\n   P\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "have \"\\<dots> = (\\<Sum>I\\<in>P. \\<Sum>b\\<in>F I. wt (fst cf2) (snd cf2) b * ?P (cont_eff cf2 b) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (sum (\\<lambda>b.\n                 wt (fst cf1) (snd cf1) b *\n                 T.prob (cont_eff cf1 b)\n                  {cfT \\<in> space (T (cont_eff cf1 b)).\n                   snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}))\n     P =\n    (\\<Sum>I\\<in>P.\n       \\<Sum>b\\<in>F I.\n         wt (fst cf2) (snd cf2) b *\n         T.prob (cont_eff cf2 b)\n          {cfT \\<in> space (T (cont_eff cf2 b)).\n           snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'})", "using sum_eq"], ["proof (prove)\nusing this:\n  ?I3 \\<in> P \\<Longrightarrow>\n  (\\<Sum>b\\<in>?I3.\n     wt (fst cf1) (snd cf1) b *\n     T.prob (cont_eff cf1 b)\n      {cfT \\<in> space (T (cont_eff cf1 b)).\n       snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}) =\n  (\\<Sum>b\\<in>F ?I3.\n     wt (fst cf2) (snd cf2) b *\n     T.prob (cont_eff cf2 b)\n      {cfT \\<in> space (T (cont_eff cf2 b)).\n       snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'})\n\ngoal (1 subgoal):\n 1. sum (sum (\\<lambda>b.\n                 wt (fst cf1) (snd cf1) b *\n                 T.prob (cont_eff cf1 b)\n                  {cfT \\<in> space (T (cont_eff cf1 b)).\n                   snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}))\n     P =\n    (\\<Sum>I\\<in>P.\n       \\<Sum>b\\<in>F I.\n         wt (fst cf2) (snd cf2) b *\n         T.prob (cont_eff cf2 b)\n          {cfT \\<in> space (T (cont_eff cf2 b)).\n           snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'})", "by simp"], ["proof (state)\nthis:\n  sum (sum (\\<lambda>b.\n               wt (fst cf1) (snd cf1) b *\n               T.prob (cont_eff cf1 b)\n                {cfT \\<in> space (T (cont_eff cf1 b)).\n                 snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}))\n   P =\n  (\\<Sum>I\\<in>P.\n     \\<Sum>b\\<in>F I.\n       wt (fst cf2) (snd cf2) b *\n       T.prob (cont_eff cf2 b)\n        {cfT \\<in> space (T (cont_eff cf2 b)).\n         snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'})\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "also"], ["proof (state)\nthis:\n  sum (sum (\\<lambda>b.\n               wt (fst cf1) (snd cf1) b *\n               T.prob (cont_eff cf1 b)\n                {cfT \\<in> space (T (cont_eff cf1 b)).\n                 snd ((cont_eff cf1 b ## cfT) !! n) \\<approx> s'}))\n   P =\n  (\\<Sum>I\\<in>P.\n     \\<Sum>b\\<in>F I.\n       wt (fst cf2) (snd cf2) b *\n       T.prob (cont_eff cf2 b)\n        {cfT \\<in> space (T (cont_eff cf2 b)).\n         snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'})\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "have \"\\<dots> = (\\<Sum>I\\<in>F`P. \\<Sum>b\\<in>I. wt (fst cf2) (snd cf2) b * ?P (cont_eff cf2 b) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>I\\<in>P.\n       \\<Sum>b\\<in>F I.\n         wt (fst cf2) (snd cf2) b *\n         T.prob (cont_eff cf2 b)\n          {cfT \\<in> space (T (cont_eff cf2 b)).\n           snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'}) =\n    sum (sum (\\<lambda>b.\n                 wt (fst cf2) (snd cf2) b *\n                 T.prob (cont_eff cf2 b)\n                  {cfT \\<in> space (T (cont_eff cf2 b)).\n                   snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'}))\n     (F ` P)", "using \\<open>inj_on F P\\<close>"], ["proof (prove)\nusing this:\n  inj_on F P\n\ngoal (1 subgoal):\n 1. (\\<Sum>I\\<in>P.\n       \\<Sum>b\\<in>F I.\n         wt (fst cf2) (snd cf2) b *\n         T.prob (cont_eff cf2 b)\n          {cfT \\<in> space (T (cont_eff cf2 b)).\n           snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'}) =\n    sum (sum (\\<lambda>b.\n                 wt (fst cf2) (snd cf2) b *\n                 T.prob (cont_eff cf2 b)\n                  {cfT \\<in> space (T (cont_eff cf2 b)).\n                   snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'}))\n     (F ` P)", "by (simp add: sum.reindex)"], ["proof (state)\nthis:\n  (\\<Sum>I\\<in>P.\n     \\<Sum>b\\<in>F I.\n       wt (fst cf2) (snd cf2) b *\n       T.prob (cont_eff cf2 b)\n        {cfT \\<in> space (T (cont_eff cf2 b)).\n         snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'}) =\n  sum (sum (\\<lambda>b.\n               wt (fst cf2) (snd cf2) b *\n               T.prob (cont_eff cf2 b)\n                {cfT \\<in> space (T (cont_eff cf2 b)).\n                 snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'}))\n   (F ` P)\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "also"], ["proof (state)\nthis:\n  (\\<Sum>I\\<in>P.\n     \\<Sum>b\\<in>F I.\n       wt (fst cf2) (snd cf2) b *\n       T.prob (cont_eff cf2 b)\n        {cfT \\<in> space (T (cont_eff cf2 b)).\n         snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'}) =\n  sum (sum (\\<lambda>b.\n               wt (fst cf2) (snd cf2) b *\n               T.prob (cont_eff cf2 b)\n                {cfT \\<in> space (T (cont_eff cf2 b)).\n                 snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'}))\n   (F ` P)\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "have \"\\<dots> = ?P cf2 (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (sum (\\<lambda>b.\n                 wt (fst cf2) (snd cf2) b *\n                 T.prob (cont_eff cf2 b)\n                  {cfT \\<in> space (T (cont_eff cf2 b)).\n                   snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'}))\n     (F ` P) =\n    T.prob cf2\n     {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "using \\<open>proper (fst cf2)\\<close> FP(1)"], ["proof (prove)\nusing this:\n  proper (fst cf2)\n  part {..<brn (fst cf2)} (F ` P)\n\ngoal (1 subgoal):\n 1. sum (sum (\\<lambda>b.\n                 wt (fst cf2) (snd cf2) b *\n                 T.prob (cont_eff cf2 b)\n                  {cfT \\<in> space (T (cont_eff cf2 b)).\n                   snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'}))\n     (F ` P) =\n    T.prob cf2\n     {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "by (rule split[symmetric])"], ["proof (state)\nthis:\n  sum (sum (\\<lambda>b.\n               wt (fst cf2) (snd cf2) b *\n               T.prob (cont_eff cf2 b)\n                {cfT \\<in> space (T (cont_eff cf2 b)).\n                 snd ((cont_eff cf2 b ## cfT) !! n) \\<approx> s'}))\n   (F ` P) =\n  T.prob cf2\n   {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}\n\ngoal (1 subgoal):\n 1. \\<And>n cf1 cf2.\n       \\<lbrakk>\\<And>cf1 cf2.\n                   \\<lbrakk>proper (fst cf1); proper (fst cf2);\n                    fst cf1 \\<approx>s fst cf2;\n                    snd cf1 \\<approx> snd cf2\\<rbrakk>\n                   \\<Longrightarrow> T.prob cf1\n{cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! n) \\<approx> s'} =\n                                     T.prob cf2\n{cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! n) \\<approx> s'};\n        proper (fst cf1); proper (fst cf2); fst cf1 \\<approx>s fst cf2;\n        snd cf1 \\<approx> snd cf2\\<rbrakk>\n       \\<Longrightarrow> T.prob cf1\n                          {cfT \\<in> space (T cf1).\n                           snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n                         T.prob cf2\n                          {cfT \\<in> space (T cf2).\n                           snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "finally"], ["proof (chain)\npicking this:\n  T.prob cf1\n   {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n  T.prob cf2\n   {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "show ?case"], ["proof (prove)\nusing this:\n  T.prob cf1\n   {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n  T.prob cf2\n   {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}\n\ngoal (1 subgoal):\n 1. T.prob cf1\n     {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n    T.prob cf2\n     {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}", "."], ["proof (state)\nthis:\n  T.prob cf1\n   {cfT \\<in> space (T cf1). snd ((cf1 ## cfT) !! Suc n) \\<approx> s'} =\n  T.prob cf2\n   {cfT \\<in> space (T cf2). snd ((cf2 ## cfT) !! Suc n) \\<approx> s'}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Final Theorems\\<close>"], ["", "theorem ZObis_eSec: \"\\<lbrakk>proper c; c \\<approx>01 c; aeT c\\<rbrakk> \\<Longrightarrow> eSec c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>proper c; c \\<approx>01 c; aeT c\\<rbrakk>\n    \\<Longrightarrow> eSec c", "by (auto simp: aeT_def eSec_def intro!: Ps_eq[simplified])"], ["", "theorem Sbis_amSec: \"\\<lbrakk>proper c; c \\<approx>s c\\<rbrakk> \\<Longrightarrow> amSec c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>proper c; c \\<approx>s c\\<rbrakk> \\<Longrightarrow> amSec c", "by (auto simp: amSec_def intro!: Sbis_trace[simplified])"], ["", "theorem amSec_eSec:\n  assumes [simp]: \"proper c\" and \"aeT c\" \"amSec c\" shows \"eSec c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eSec c", "proof (unfold eSec_def, intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s1 s2 t.\n       s1 \\<approx> s2 \\<Longrightarrow>\n       T.prob (c, s1)\n        {bT \\<in> space (T (c, s1)).\n         \\<exists>n.\n            qsend ((c, s1) ## bT) = enat n \\<and>\n            snd (((c, s1) ## bT) !! n) \\<approx> t} =\n       T.prob (c, s2)\n        {bT \\<in> space (T (c, s2)).\n         \\<exists>n.\n            qsend ((c, s2) ## bT) = enat n \\<and>\n            snd (((c, s2) ## bT) !! n) \\<approx> t}", "fix s1 s2 t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s1 s2 t.\n       s1 \\<approx> s2 \\<Longrightarrow>\n       T.prob (c, s1)\n        {bT \\<in> space (T (c, s1)).\n         \\<exists>n.\n            qsend ((c, s1) ## bT) = enat n \\<and>\n            snd (((c, s1) ## bT) !! n) \\<approx> t} =\n       T.prob (c, s2)\n        {bT \\<in> space (T (c, s2)).\n         \\<exists>n.\n            qsend ((c, s2) ## bT) = enat n \\<and>\n            snd (((c, s2) ## bT) !! n) \\<approx> t}", "assume \"s1 \\<approx> s2\""], ["proof (state)\nthis:\n  s1 \\<approx> s2\n\ngoal (1 subgoal):\n 1. \\<And>s1 s2 t.\n       s1 \\<approx> s2 \\<Longrightarrow>\n       T.prob (c, s1)\n        {bT \\<in> space (T (c, s1)).\n         \\<exists>n.\n            qsend ((c, s1) ## bT) = enat n \\<and>\n            snd (((c, s1) ## bT) !! n) \\<approx> t} =\n       T.prob (c, s2)\n        {bT \\<in> space (T (c, s2)).\n         \\<exists>n.\n            qsend ((c, s2) ## bT) = enat n \\<and>\n            snd (((c, s2) ## bT) !! n) \\<approx> t}", "let ?T = \"\\<lambda>s bT. \\<exists>n. qsend ((c, s) ## bT) = n \\<and> eff_at (c,s) bT n \\<approx> t\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s1 s2 t.\n       s1 \\<approx> s2 \\<Longrightarrow>\n       T.prob (c, s1)\n        {bT \\<in> space (T (c, s1)).\n         \\<exists>n.\n            qsend ((c, s1) ## bT) = enat n \\<and>\n            snd (((c, s1) ## bT) !! n) \\<approx> t} =\n       T.prob (c, s2)\n        {bT \\<in> space (T (c, s2)).\n         \\<exists>n.\n            qsend ((c, s2) ## bT) = enat n \\<and>\n            snd (((c, s2) ## bT) !! n) \\<approx> t}", "let ?P = \"\\<lambda>s. \\<P>(bT in T.T (c, s). ?T s bT)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s1 s2 t.\n       s1 \\<approx> s2 \\<Longrightarrow>\n       T.prob (c, s1)\n        {bT \\<in> space (T (c, s1)).\n         \\<exists>n.\n            qsend ((c, s1) ## bT) = enat n \\<and>\n            snd (((c, s1) ## bT) !! n) \\<approx> t} =\n       T.prob (c, s2)\n        {bT \\<in> space (T (c, s2)).\n         \\<exists>n.\n            qsend ((c, s2) ## bT) = enat n \\<and>\n            snd (((c, s2) ## bT) !! n) \\<approx> t}", "have \"dist (?P s1) (?P s2) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist\n     (T.prob (c, s1)\n       {bT \\<in> space (T (c, s1)).\n        \\<exists>n.\n           qsend ((c, s1) ## bT) = enat n \\<and>\n           snd (((c, s1) ## bT) !! n) \\<approx> t})\n     (T.prob (c, s2)\n       {bT \\<in> space (T (c, s2)).\n        \\<exists>n.\n           qsend ((c, s2) ## bT) = enat n \\<and>\n           snd (((c, s2) ## bT) !! n) \\<approx> t}) =\n    0", "unfolding dist_real_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>T.prob (c, s1)\n           {bT \\<in> space (T (c, s1)).\n            \\<exists>n.\n               qsend ((c, s1) ## bT) = enat n \\<and>\n               snd (((c, s1) ## bT) !! n) \\<approx> t} -\n          T.prob (c, s2)\n           {bT \\<in> space (T (c, s2)).\n            \\<exists>n.\n               qsend ((c, s2) ## bT) = enat n \\<and>\n               snd (((c, s2) ## bT) !! n) \\<approx> t}\\<bar> =\n    0", "proof (rule field_abs_le_zero_epsilon)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<bar>T.prob (c, s1)\n              {bT \\<in> space (T (c, s1)).\n               \\<exists>n.\n                  qsend ((c, s1) ## bT) = enat n \\<and>\n                  snd (((c, s1) ## bT) !! n) \\<approx> t} -\n             T.prob (c, s2)\n              {bT \\<in> space (T (c, s2)).\n               \\<exists>n.\n                  qsend ((c, s2) ## bT) = enat n \\<and>\n                  snd (((c, s2) ## bT) !! n) \\<approx> t}\\<bar>\n       \\<le> e", "fix e :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<bar>T.prob (c, s1)\n              {bT \\<in> space (T (c, s1)).\n               \\<exists>n.\n                  qsend ((c, s1) ## bT) = enat n \\<and>\n                  snd (((c, s1) ## bT) !! n) \\<approx> t} -\n             T.prob (c, s2)\n              {bT \\<in> space (T (c, s2)).\n               \\<exists>n.\n                  qsend ((c, s2) ## bT) = enat n \\<and>\n                  snd (((c, s2) ## bT) !! n) \\<approx> t}\\<bar>\n       \\<le> e", "assume \"0 < e\""], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<bar>T.prob (c, s1)\n              {bT \\<in> space (T (c, s1)).\n               \\<exists>n.\n                  qsend ((c, s1) ## bT) = enat n \\<and>\n                  snd (((c, s1) ## bT) !! n) \\<approx> t} -\n             T.prob (c, s2)\n              {bT \\<in> space (T (c, s2)).\n               \\<exists>n.\n                  qsend ((c, s2) ## bT) = enat n \\<and>\n                  snd (((c, s2) ## bT) !! n) \\<approx> t}\\<bar>\n       \\<le> e", "then"], ["proof (chain)\npicking this:\n  0 < e", "have \"0 < e / 2\""], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. 0 < e / 2", "by simp"], ["proof (state)\nthis:\n  0 < e / 2\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<bar>T.prob (c, s1)\n              {bT \\<in> space (T (c, s1)).\n               \\<exists>n.\n                  qsend ((c, s1) ## bT) = enat n \\<and>\n                  snd (((c, s1) ## bT) !! n) \\<approx> t} -\n             T.prob (c, s2)\n              {bT \\<in> space (T (c, s2)).\n               \\<exists>n.\n                  qsend ((c, s2) ## bT) = enat n \\<and>\n                  snd (((c, s2) ## bT) !! n) \\<approx> t}\\<bar>\n       \\<le> e", "let ?N = \"\\<lambda>s n bT. \\<not> discrCf (((c,s) ## bT) !! n)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<bar>T.prob (c, s1)\n              {bT \\<in> space (T (c, s1)).\n               \\<exists>n.\n                  qsend ((c, s1) ## bT) = enat n \\<and>\n                  snd (((c, s1) ## bT) !! n) \\<approx> t} -\n             T.prob (c, s2)\n              {bT \\<in> space (T (c, s2)).\n               \\<exists>n.\n                  qsend ((c, s2) ## bT) = enat n \\<and>\n                  snd (((c, s2) ## bT) !! n) \\<approx> t}\\<bar>\n       \\<le> e", "from AE_T_max_qsend_time[OF _ \\<open>0 < e / 2\\<close>, of \"(c,s1)\"]"], ["proof (chain)\npicking this:\n  AE bT in T (c, s1). qsend ((c, s1) ## bT) < \\<infinity> \\<Longrightarrow>\n  \\<exists>N.\n     T.prob (c, s1)\n      {bT \\<in> space (T (c, s1)). \\<not> discrCf (((c, s1) ## bT) !! N)}\n     < e / 2", "obtain N1 where N1: \"\\<P>(bT in T.T (c, s1). ?N s1 N1 bT) < e / 2\""], ["proof (prove)\nusing this:\n  AE bT in T (c, s1). qsend ((c, s1) ## bT) < \\<infinity> \\<Longrightarrow>\n  \\<exists>N.\n     T.prob (c, s1)\n      {bT \\<in> space (T (c, s1)). \\<not> discrCf (((c, s1) ## bT) !! N)}\n     < e / 2\n\ngoal (1 subgoal):\n 1. (\\<And>N1.\n        T.prob (c, s1)\n         {bT \\<in> space (T (c, s1)).\n          \\<not> discrCf (((c, s1) ## bT) !! N1)}\n        < e / 2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<open>aeT c\\<close>"], ["proof (prove)\nusing this:\n  AE bT in T (c, s1). qsend ((c, s1) ## bT) < \\<infinity> \\<Longrightarrow>\n  \\<exists>N.\n     T.prob (c, s1)\n      {bT \\<in> space (T (c, s1)). \\<not> discrCf (((c, s1) ## bT) !! N)}\n     < e / 2\n  aeT c\n\ngoal (1 subgoal):\n 1. (\\<And>N1.\n        T.prob (c, s1)\n         {bT \\<in> space (T (c, s1)).\n          \\<not> discrCf (((c, s1) ## bT) !! N1)}\n        < e / 2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding aeT_def"], ["proof (prove)\nusing this:\n  AE bT in T (c, s1). qsend ((c, s1) ## bT) < \\<infinity> \\<Longrightarrow>\n  \\<exists>N.\n     T.prob (c, s1)\n      {bT \\<in> space (T (c, s1)). \\<not> discrCf (((c, s1) ## bT) !! N)}\n     < e / 2\n  \\<forall>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<And>N1.\n        T.prob (c, s1)\n         {bT \\<in> space (T (c, s1)).\n          \\<not> discrCf (((c, s1) ## bT) !! N1)}\n        < e / 2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  T.prob (c, s1)\n   {bT \\<in> space (T (c, s1)). \\<not> discrCf (((c, s1) ## bT) !! N1)}\n  < e / 2\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<bar>T.prob (c, s1)\n              {bT \\<in> space (T (c, s1)).\n               \\<exists>n.\n                  qsend ((c, s1) ## bT) = enat n \\<and>\n                  snd (((c, s1) ## bT) !! n) \\<approx> t} -\n             T.prob (c, s2)\n              {bT \\<in> space (T (c, s2)).\n               \\<exists>n.\n                  qsend ((c, s2) ## bT) = enat n \\<and>\n                  snd (((c, s2) ## bT) !! n) \\<approx> t}\\<bar>\n       \\<le> e", "from AE_T_max_qsend_time[OF _ \\<open>0 < e / 2\\<close>, of \"(c,s2)\"]"], ["proof (chain)\npicking this:\n  AE bT in T (c, s2). qsend ((c, s2) ## bT) < \\<infinity> \\<Longrightarrow>\n  \\<exists>N.\n     T.prob (c, s2)\n      {bT \\<in> space (T (c, s2)). \\<not> discrCf (((c, s2) ## bT) !! N)}\n     < e / 2", "obtain N2 where N2: \"\\<P>(bT in T.T (c, s2). ?N s2 N2 bT) < e / 2\""], ["proof (prove)\nusing this:\n  AE bT in T (c, s2). qsend ((c, s2) ## bT) < \\<infinity> \\<Longrightarrow>\n  \\<exists>N.\n     T.prob (c, s2)\n      {bT \\<in> space (T (c, s2)). \\<not> discrCf (((c, s2) ## bT) !! N)}\n     < e / 2\n\ngoal (1 subgoal):\n 1. (\\<And>N2.\n        T.prob (c, s2)\n         {bT \\<in> space (T (c, s2)).\n          \\<not> discrCf (((c, s2) ## bT) !! N2)}\n        < e / 2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<open>aeT c\\<close>"], ["proof (prove)\nusing this:\n  AE bT in T (c, s2). qsend ((c, s2) ## bT) < \\<infinity> \\<Longrightarrow>\n  \\<exists>N.\n     T.prob (c, s2)\n      {bT \\<in> space (T (c, s2)). \\<not> discrCf (((c, s2) ## bT) !! N)}\n     < e / 2\n  aeT c\n\ngoal (1 subgoal):\n 1. (\\<And>N2.\n        T.prob (c, s2)\n         {bT \\<in> space (T (c, s2)).\n          \\<not> discrCf (((c, s2) ## bT) !! N2)}\n        < e / 2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding aeT_def"], ["proof (prove)\nusing this:\n  AE bT in T (c, s2). qsend ((c, s2) ## bT) < \\<infinity> \\<Longrightarrow>\n  \\<exists>N.\n     T.prob (c, s2)\n      {bT \\<in> space (T (c, s2)). \\<not> discrCf (((c, s2) ## bT) !! N)}\n     < e / 2\n  \\<forall>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<And>N2.\n        T.prob (c, s2)\n         {bT \\<in> space (T (c, s2)).\n          \\<not> discrCf (((c, s2) ## bT) !! N2)}\n        < e / 2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  T.prob (c, s2)\n   {bT \\<in> space (T (c, s2)). \\<not> discrCf (((c, s2) ## bT) !! N2)}\n  < e / 2\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<bar>T.prob (c, s1)\n              {bT \\<in> space (T (c, s1)).\n               \\<exists>n.\n                  qsend ((c, s1) ## bT) = enat n \\<and>\n                  snd (((c, s1) ## bT) !! n) \\<approx> t} -\n             T.prob (c, s2)\n              {bT \\<in> space (T (c, s2)).\n               \\<exists>n.\n                  qsend ((c, s2) ## bT) = enat n \\<and>\n                  snd (((c, s2) ## bT) !! n) \\<approx> t}\\<bar>\n       \\<le> e", "define N where \"N = max N1 N2\""], ["proof (state)\nthis:\n  N = max N1 N2\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<bar>T.prob (c, s1)\n              {bT \\<in> space (T (c, s1)).\n               \\<exists>n.\n                  qsend ((c, s1) ## bT) = enat n \\<and>\n                  snd (((c, s1) ## bT) !! n) \\<approx> t} -\n             T.prob (c, s2)\n              {bT \\<in> space (T (c, s2)).\n               \\<exists>n.\n                  qsend ((c, s2) ## bT) = enat n \\<and>\n                  snd (((c, s2) ## bT) !! n) \\<approx> t}\\<bar>\n       \\<le> e", "let ?Tn = \"\\<lambda>n s bT. eff_at (c,s) bT n \\<approx> t\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<bar>T.prob (c, s1)\n              {bT \\<in> space (T (c, s1)).\n               \\<exists>n.\n                  qsend ((c, s1) ## bT) = enat n \\<and>\n                  snd (((c, s1) ## bT) !! n) \\<approx> t} -\n             T.prob (c, s2)\n              {bT \\<in> space (T (c, s2)).\n               \\<exists>n.\n                  qsend ((c, s2) ## bT) = enat n \\<and>\n                  snd (((c, s2) ## bT) !! n) \\<approx> t}\\<bar>\n       \\<le> e", "have \"dist \\<P>(bT in T.T (c, s1). ?T s1 bT) \\<P>(bT in T.T (c, s1). ?Tn N s1 bT) \\<le>\n        \\<P>(bT in T.T (c, s1). ?N s1 N1 bT)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist\n     (T.prob (c, s1)\n       {bT \\<in> space (T (c, s1)).\n        \\<exists>n.\n           qsend ((c, s1) ## bT) = enat n \\<and>\n           snd (((c, s1) ## bT) !! n) \\<approx> t})\n     (T.prob (c, s1)\n       {bT \\<in> space (T (c, s1)). snd (((c, s1) ## bT) !! N) \\<approx> t})\n    \\<le> T.prob (c, s1)\n           {bT \\<in> space (T (c, s1)).\n            \\<not> discrCf (((c, s1) ## bT) !! N1)}", "using \\<open>aeT c\\<close>[unfolded aeT_def, rule_format] AE_T_enabled AE_space"], ["proof (prove)\nusing this:\n  AE bT in T (c, ?s). qsend ((c, ?s) ## bT) < \\<infinity>\n  almost_everywhere (T ?s) (enabled ?s)\n  AE x in ?M. x \\<in> space ?M\n\ngoal (1 subgoal):\n 1. dist\n     (T.prob (c, s1)\n       {bT \\<in> space (T (c, s1)).\n        \\<exists>n.\n           qsend ((c, s1) ## bT) = enat n \\<and>\n           snd (((c, s1) ## bT) !! n) \\<approx> t})\n     (T.prob (c, s1)\n       {bT \\<in> space (T (c, s1)). snd (((c, s1) ## bT) !! N) \\<approx> t})\n    \\<le> T.prob (c, s1)\n           {bT \\<in> space (T (c, s1)).\n            \\<not> discrCf (((c, s1) ## bT) !! N1)}", "proof (intro T.prob_dist, eventually_elim, intro impI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>bT.\n       \\<lbrakk>\\<And>s.\n                   AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n        \\<And>s. almost_everywhere (T s) (enabled s);\n        \\<And>M. AE x in M. x \\<in> space M;\n        qsend ((c, s1) ## bT) < \\<infinity>; enabled (c, s1) bT;\n        bT \\<in> space (T (c, s1));\n        \\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n        \\<And>s. almost_everywhere (T s) (enabled s);\n        \\<And>M. AE x in M. x \\<in> space M;\n        \\<not> \\<not> discrCf (((c, s1) ## bT) !! N1)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n.\n                             qsend ((c, s1) ## bT) = enat n \\<and>\n                             snd (((c, s1) ## bT) !! n) \\<approx> t) =\n                         (snd (((c, s1) ## bT) !! N) \\<approx> t)\n 2. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s1) (count_space UNIV)\n                       (\\<lambda>x.\n                           \\<exists>n.\n                              qsend ((c, s1) ## x) = enat n \\<and>\n                              snd (((c, s1) ## x) !! n) \\<approx> t)\n 3. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s1) (count_space UNIV)\n                       (\\<lambda>x. snd (((c, s1) ## x) !! N) \\<approx> t)\n 4. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s1) (count_space UNIV)\n                       (\\<lambda>x. \\<not> discrCf (((c, s1) ## x) !! N1))", "fix bT"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>bT.\n       \\<lbrakk>\\<And>s.\n                   AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n        \\<And>s. almost_everywhere (T s) (enabled s);\n        \\<And>M. AE x in M. x \\<in> space M;\n        qsend ((c, s1) ## bT) < \\<infinity>; enabled (c, s1) bT;\n        bT \\<in> space (T (c, s1));\n        \\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n        \\<And>s. almost_everywhere (T s) (enabled s);\n        \\<And>M. AE x in M. x \\<in> space M;\n        \\<not> \\<not> discrCf (((c, s1) ## bT) !! N1)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n.\n                             qsend ((c, s1) ## bT) = enat n \\<and>\n                             snd (((c, s1) ## bT) !! n) \\<approx> t) =\n                         (snd (((c, s1) ## bT) !! N) \\<approx> t)\n 2. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s1) (count_space UNIV)\n                       (\\<lambda>x.\n                           \\<exists>n.\n                              qsend ((c, s1) ## x) = enat n \\<and>\n                              snd (((c, s1) ## x) !! n) \\<approx> t)\n 3. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s1) (count_space UNIV)\n                       (\\<lambda>x. snd (((c, s1) ## x) !! N) \\<approx> t)\n 4. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s1) (count_space UNIV)\n                       (\\<lambda>x. \\<not> discrCf (((c, s1) ## x) !! N1))", "assume bT: \"enabled (c,s1) bT\" and \"\\<not> \\<not> discrCf (((c,s1) ## bT) !! N1)\""], ["proof (state)\nthis:\n  enabled (c, s1) bT\n  \\<not> \\<not> discrCf (((c, s1) ## bT) !! N1)\n\ngoal (4 subgoals):\n 1. \\<And>bT.\n       \\<lbrakk>\\<And>s.\n                   AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n        \\<And>s. almost_everywhere (T s) (enabled s);\n        \\<And>M. AE x in M. x \\<in> space M;\n        qsend ((c, s1) ## bT) < \\<infinity>; enabled (c, s1) bT;\n        bT \\<in> space (T (c, s1));\n        \\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n        \\<And>s. almost_everywhere (T s) (enabled s);\n        \\<And>M. AE x in M. x \\<in> space M;\n        \\<not> \\<not> discrCf (((c, s1) ## bT) !! N1)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n.\n                             qsend ((c, s1) ## bT) = enat n \\<and>\n                             snd (((c, s1) ## bT) !! n) \\<approx> t) =\n                         (snd (((c, s1) ## bT) !! N) \\<approx> t)\n 2. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s1) (count_space UNIV)\n                       (\\<lambda>x.\n                           \\<exists>n.\n                              qsend ((c, s1) ## x) = enat n \\<and>\n                              snd (((c, s1) ## x) !! n) \\<approx> t)\n 3. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s1) (count_space UNIV)\n                       (\\<lambda>x. snd (((c, s1) ## x) !! N) \\<approx> t)\n 4. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s1) (count_space UNIV)\n                       (\\<lambda>x. \\<not> discrCf (((c, s1) ## x) !! N1))", "with bT"], ["proof (chain)\npicking this:\n  enabled (c, s1) bT\n  enabled (c, s1) bT\n  \\<not> \\<not> discrCf (((c, s1) ## bT) !! N1)", "have \"qsend ((c,s1) ## bT) \\<le> N1\""], ["proof (prove)\nusing this:\n  enabled (c, s1) bT\n  enabled (c, s1) bT\n  \\<not> \\<not> discrCf (((c, s1) ## bT) !! N1)\n\ngoal (1 subgoal):\n 1. qsend ((c, s1) ## bT) \\<le> enat N1", "using less_qsend_iff_not_discrCf[of \"(c,s1)\" bT N1]"], ["proof (prove)\nusing this:\n  enabled (c, s1) bT\n  enabled (c, s1) bT\n  \\<not> \\<not> discrCf (((c, s1) ## bT) !! N1)\n  enabled (c, s1) bT \\<Longrightarrow>\n  (enat N1 < qsend ((c, s1) ## bT)) =\n  (\\<not> discrCf (((c, s1) ## bT) !! N1))\n\ngoal (1 subgoal):\n 1. qsend ((c, s1) ## bT) \\<le> enat N1", "by simp"], ["proof (state)\nthis:\n  qsend ((c, s1) ## bT) \\<le> enat N1\n\ngoal (4 subgoals):\n 1. \\<And>bT.\n       \\<lbrakk>\\<And>s.\n                   AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n        \\<And>s. almost_everywhere (T s) (enabled s);\n        \\<And>M. AE x in M. x \\<in> space M;\n        qsend ((c, s1) ## bT) < \\<infinity>; enabled (c, s1) bT;\n        bT \\<in> space (T (c, s1));\n        \\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n        \\<And>s. almost_everywhere (T s) (enabled s);\n        \\<And>M. AE x in M. x \\<in> space M;\n        \\<not> \\<not> discrCf (((c, s1) ## bT) !! N1)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n.\n                             qsend ((c, s1) ## bT) = enat n \\<and>\n                             snd (((c, s1) ## bT) !! n) \\<approx> t) =\n                         (snd (((c, s1) ## bT) !! N) \\<approx> t)\n 2. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s1) (count_space UNIV)\n                       (\\<lambda>x.\n                           \\<exists>n.\n                              qsend ((c, s1) ## x) = enat n \\<and>\n                              snd (((c, s1) ## x) !! n) \\<approx> t)\n 3. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s1) (count_space UNIV)\n                       (\\<lambda>x. snd (((c, s1) ## x) !! N) \\<approx> t)\n 4. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s1) (count_space UNIV)\n                       (\\<lambda>x. \\<not> discrCf (((c, s1) ## x) !! N1))", "then"], ["proof (chain)\npicking this:\n  qsend ((c, s1) ## bT) \\<le> enat N1", "show \"?T s1 bT \\<longleftrightarrow> ?Tn N s1 bT\""], ["proof (prove)\nusing this:\n  qsend ((c, s1) ## bT) \\<le> enat N1\n\ngoal (1 subgoal):\n 1. (\\<exists>n.\n        qsend ((c, s1) ## bT) = enat n \\<and>\n        snd (((c, s1) ## bT) !! n) \\<approx> t) =\n    (snd (((c, s1) ## bT) !! N) \\<approx> t)", "using bT"], ["proof (prove)\nusing this:\n  qsend ((c, s1) ## bT) \\<le> enat N1\n  enabled (c, s1) bT\n\ngoal (1 subgoal):\n 1. (\\<exists>n.\n        qsend ((c, s1) ## bT) = enat n \\<and>\n        snd (((c, s1) ## bT) !! n) \\<approx> t) =\n    (snd (((c, s1) ## bT) !! N) \\<approx> t)", "by (cases \"qsend ((c, s1) ## bT)\")\n           (auto intro!: enabled_qsend_indis del: iffI simp: N_def)"], ["proof (state)\nthis:\n  (\\<exists>n.\n      qsend ((c, s1) ## bT) = enat n \\<and>\n      snd (((c, s1) ## bT) !! n) \\<approx> t) =\n  (snd (((c, s1) ## bT) !! N) \\<approx> t)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s1) (count_space UNIV)\n                       (\\<lambda>x.\n                           \\<exists>n.\n                              qsend ((c, s1) ## x) = enat n \\<and>\n                              snd (((c, s1) ## x) !! n) \\<approx> t)\n 2. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s1) (count_space UNIV)\n                       (\\<lambda>x. snd (((c, s1) ## x) !! N) \\<approx> t)\n 3. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s1) (count_space UNIV)\n                       (\\<lambda>x. \\<not> discrCf (((c, s1) ## x) !! N1))", "qed measurable"], ["proof (state)\nthis:\n  dist\n   (T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)).\n      \\<exists>n.\n         qsend ((c, s1) ## bT) = enat n \\<and>\n         snd (((c, s1) ## bT) !! n) \\<approx> t})\n   (T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)). snd (((c, s1) ## bT) !! N) \\<approx> t})\n  \\<le> T.prob (c, s1)\n         {bT \\<in> space (T (c, s1)).\n          \\<not> discrCf (((c, s1) ## bT) !! N1)}\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<bar>T.prob (c, s1)\n              {bT \\<in> space (T (c, s1)).\n               \\<exists>n.\n                  qsend ((c, s1) ## bT) = enat n \\<and>\n                  snd (((c, s1) ## bT) !! n) \\<approx> t} -\n             T.prob (c, s2)\n              {bT \\<in> space (T (c, s2)).\n               \\<exists>n.\n                  qsend ((c, s2) ## bT) = enat n \\<and>\n                  snd (((c, s2) ## bT) !! n) \\<approx> t}\\<bar>\n       \\<le> e", "moreover"], ["proof (state)\nthis:\n  dist\n   (T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)).\n      \\<exists>n.\n         qsend ((c, s1) ## bT) = enat n \\<and>\n         snd (((c, s1) ## bT) !! n) \\<approx> t})\n   (T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)). snd (((c, s1) ## bT) !! N) \\<approx> t})\n  \\<le> T.prob (c, s1)\n         {bT \\<in> space (T (c, s1)).\n          \\<not> discrCf (((c, s1) ## bT) !! N1)}\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<bar>T.prob (c, s1)\n              {bT \\<in> space (T (c, s1)).\n               \\<exists>n.\n                  qsend ((c, s1) ## bT) = enat n \\<and>\n                  snd (((c, s1) ## bT) !! n) \\<approx> t} -\n             T.prob (c, s2)\n              {bT \\<in> space (T (c, s2)).\n               \\<exists>n.\n                  qsend ((c, s2) ## bT) = enat n \\<and>\n                  snd (((c, s2) ## bT) !! n) \\<approx> t}\\<bar>\n       \\<le> e", "have \"dist \\<P>(bT in T.T (c, s2). ?T s2 bT) \\<P>(bT in T.T (c, s2). ?Tn N s2 bT) \\<le>\n        \\<P>(bT in T.T (c, s2). ?N s2 N2 bT)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist\n     (T.prob (c, s2)\n       {bT \\<in> space (T (c, s2)).\n        \\<exists>n.\n           qsend ((c, s2) ## bT) = enat n \\<and>\n           snd (((c, s2) ## bT) !! n) \\<approx> t})\n     (T.prob (c, s2)\n       {bT \\<in> space (T (c, s2)). snd (((c, s2) ## bT) !! N) \\<approx> t})\n    \\<le> T.prob (c, s2)\n           {bT \\<in> space (T (c, s2)).\n            \\<not> discrCf (((c, s2) ## bT) !! N2)}", "using \\<open>aeT c\\<close>[unfolded aeT_def, rule_format] AE_T_enabled AE_space"], ["proof (prove)\nusing this:\n  AE bT in T (c, ?s). qsend ((c, ?s) ## bT) < \\<infinity>\n  almost_everywhere (T ?s) (enabled ?s)\n  AE x in ?M. x \\<in> space ?M\n\ngoal (1 subgoal):\n 1. dist\n     (T.prob (c, s2)\n       {bT \\<in> space (T (c, s2)).\n        \\<exists>n.\n           qsend ((c, s2) ## bT) = enat n \\<and>\n           snd (((c, s2) ## bT) !! n) \\<approx> t})\n     (T.prob (c, s2)\n       {bT \\<in> space (T (c, s2)). snd (((c, s2) ## bT) !! N) \\<approx> t})\n    \\<le> T.prob (c, s2)\n           {bT \\<in> space (T (c, s2)).\n            \\<not> discrCf (((c, s2) ## bT) !! N2)}", "proof (intro T.prob_dist, eventually_elim, intro impI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>bT.\n       \\<lbrakk>\\<And>s.\n                   AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n        \\<And>s. almost_everywhere (T s) (enabled s);\n        \\<And>M. AE x in M. x \\<in> space M;\n        qsend ((c, s2) ## bT) < \\<infinity>; enabled (c, s2) bT;\n        bT \\<in> space (T (c, s2));\n        \\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n        \\<And>s. almost_everywhere (T s) (enabled s);\n        \\<And>M. AE x in M. x \\<in> space M;\n        \\<not> \\<not> discrCf (((c, s2) ## bT) !! N2)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n.\n                             qsend ((c, s2) ## bT) = enat n \\<and>\n                             snd (((c, s2) ## bT) !! n) \\<approx> t) =\n                         (snd (((c, s2) ## bT) !! N) \\<approx> t)\n 2. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s2) (count_space UNIV)\n                       (\\<lambda>x.\n                           \\<exists>n.\n                              qsend ((c, s2) ## x) = enat n \\<and>\n                              snd (((c, s2) ## x) !! n) \\<approx> t)\n 3. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s2) (count_space UNIV)\n                       (\\<lambda>x. snd (((c, s2) ## x) !! N) \\<approx> t)\n 4. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s2) (count_space UNIV)\n                       (\\<lambda>x. \\<not> discrCf (((c, s2) ## x) !! N2))", "fix bT"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>bT.\n       \\<lbrakk>\\<And>s.\n                   AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n        \\<And>s. almost_everywhere (T s) (enabled s);\n        \\<And>M. AE x in M. x \\<in> space M;\n        qsend ((c, s2) ## bT) < \\<infinity>; enabled (c, s2) bT;\n        bT \\<in> space (T (c, s2));\n        \\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n        \\<And>s. almost_everywhere (T s) (enabled s);\n        \\<And>M. AE x in M. x \\<in> space M;\n        \\<not> \\<not> discrCf (((c, s2) ## bT) !! N2)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n.\n                             qsend ((c, s2) ## bT) = enat n \\<and>\n                             snd (((c, s2) ## bT) !! n) \\<approx> t) =\n                         (snd (((c, s2) ## bT) !! N) \\<approx> t)\n 2. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s2) (count_space UNIV)\n                       (\\<lambda>x.\n                           \\<exists>n.\n                              qsend ((c, s2) ## x) = enat n \\<and>\n                              snd (((c, s2) ## x) !! n) \\<approx> t)\n 3. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s2) (count_space UNIV)\n                       (\\<lambda>x. snd (((c, s2) ## x) !! N) \\<approx> t)\n 4. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s2) (count_space UNIV)\n                       (\\<lambda>x. \\<not> discrCf (((c, s2) ## x) !! N2))", "assume bT: \"enabled (c,s2) bT\" \"\\<not> \\<not> discrCf (((c,s2) ## bT) !! N2)\""], ["proof (state)\nthis:\n  enabled (c, s2) bT\n  \\<not> \\<not> discrCf (((c, s2) ## bT) !! N2)\n\ngoal (4 subgoals):\n 1. \\<And>bT.\n       \\<lbrakk>\\<And>s.\n                   AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n        \\<And>s. almost_everywhere (T s) (enabled s);\n        \\<And>M. AE x in M. x \\<in> space M;\n        qsend ((c, s2) ## bT) < \\<infinity>; enabled (c, s2) bT;\n        bT \\<in> space (T (c, s2));\n        \\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n        \\<And>s. almost_everywhere (T s) (enabled s);\n        \\<And>M. AE x in M. x \\<in> space M;\n        \\<not> \\<not> discrCf (((c, s2) ## bT) !! N2)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n.\n                             qsend ((c, s2) ## bT) = enat n \\<and>\n                             snd (((c, s2) ## bT) !! n) \\<approx> t) =\n                         (snd (((c, s2) ## bT) !! N) \\<approx> t)\n 2. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s2) (count_space UNIV)\n                       (\\<lambda>x.\n                           \\<exists>n.\n                              qsend ((c, s2) ## x) = enat n \\<and>\n                              snd (((c, s2) ## x) !! n) \\<approx> t)\n 3. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s2) (count_space UNIV)\n                       (\\<lambda>x. snd (((c, s2) ## x) !! N) \\<approx> t)\n 4. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s2) (count_space UNIV)\n                       (\\<lambda>x. \\<not> discrCf (((c, s2) ## x) !! N2))", "with bT"], ["proof (chain)\npicking this:\n  enabled (c, s2) bT\n  \\<not> \\<not> discrCf (((c, s2) ## bT) !! N2)\n  enabled (c, s2) bT\n  \\<not> \\<not> discrCf (((c, s2) ## bT) !! N2)", "have \"qsend ((c,s2) ## bT) \\<le> N2\""], ["proof (prove)\nusing this:\n  enabled (c, s2) bT\n  \\<not> \\<not> discrCf (((c, s2) ## bT) !! N2)\n  enabled (c, s2) bT\n  \\<not> \\<not> discrCf (((c, s2) ## bT) !! N2)\n\ngoal (1 subgoal):\n 1. qsend ((c, s2) ## bT) \\<le> enat N2", "using less_qsend_iff_not_discrCf[of \"(c,s2)\" bT N2]"], ["proof (prove)\nusing this:\n  enabled (c, s2) bT\n  \\<not> \\<not> discrCf (((c, s2) ## bT) !! N2)\n  enabled (c, s2) bT\n  \\<not> \\<not> discrCf (((c, s2) ## bT) !! N2)\n  enabled (c, s2) bT \\<Longrightarrow>\n  (enat N2 < qsend ((c, s2) ## bT)) =\n  (\\<not> discrCf (((c, s2) ## bT) !! N2))\n\ngoal (1 subgoal):\n 1. qsend ((c, s2) ## bT) \\<le> enat N2", "by simp"], ["proof (state)\nthis:\n  qsend ((c, s2) ## bT) \\<le> enat N2\n\ngoal (4 subgoals):\n 1. \\<And>bT.\n       \\<lbrakk>\\<And>s.\n                   AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n        \\<And>s. almost_everywhere (T s) (enabled s);\n        \\<And>M. AE x in M. x \\<in> space M;\n        qsend ((c, s2) ## bT) < \\<infinity>; enabled (c, s2) bT;\n        bT \\<in> space (T (c, s2));\n        \\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n        \\<And>s. almost_everywhere (T s) (enabled s);\n        \\<And>M. AE x in M. x \\<in> space M;\n        \\<not> \\<not> discrCf (((c, s2) ## bT) !! N2)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n.\n                             qsend ((c, s2) ## bT) = enat n \\<and>\n                             snd (((c, s2) ## bT) !! n) \\<approx> t) =\n                         (snd (((c, s2) ## bT) !! N) \\<approx> t)\n 2. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s2) (count_space UNIV)\n                       (\\<lambda>x.\n                           \\<exists>n.\n                              qsend ((c, s2) ## x) = enat n \\<and>\n                              snd (((c, s2) ## x) !! n) \\<approx> t)\n 3. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s2) (count_space UNIV)\n                       (\\<lambda>x. snd (((c, s2) ## x) !! N) \\<approx> t)\n 4. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s2) (count_space UNIV)\n                       (\\<lambda>x. \\<not> discrCf (((c, s2) ## x) !! N2))", "then"], ["proof (chain)\npicking this:\n  qsend ((c, s2) ## bT) \\<le> enat N2", "show \"?T s2 bT \\<longleftrightarrow> ?Tn N s2 bT\""], ["proof (prove)\nusing this:\n  qsend ((c, s2) ## bT) \\<le> enat N2\n\ngoal (1 subgoal):\n 1. (\\<exists>n.\n        qsend ((c, s2) ## bT) = enat n \\<and>\n        snd (((c, s2) ## bT) !! n) \\<approx> t) =\n    (snd (((c, s2) ## bT) !! N) \\<approx> t)", "using bT"], ["proof (prove)\nusing this:\n  qsend ((c, s2) ## bT) \\<le> enat N2\n  enabled (c, s2) bT\n  \\<not> \\<not> discrCf (((c, s2) ## bT) !! N2)\n\ngoal (1 subgoal):\n 1. (\\<exists>n.\n        qsend ((c, s2) ## bT) = enat n \\<and>\n        snd (((c, s2) ## bT) !! n) \\<approx> t) =\n    (snd (((c, s2) ## bT) !! N) \\<approx> t)", "by (cases \"qsend ((c, s2) ## bT)\")\n           (auto intro!: enabled_qsend_indis del: iffI simp: N_def)"], ["proof (state)\nthis:\n  (\\<exists>n.\n      qsend ((c, s2) ## bT) = enat n \\<and>\n      snd (((c, s2) ## bT) !! n) \\<approx> t) =\n  (snd (((c, s2) ## bT) !! N) \\<approx> t)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s2) (count_space UNIV)\n                       (\\<lambda>x.\n                           \\<exists>n.\n                              qsend ((c, s2) ## x) = enat n \\<and>\n                              snd (((c, s2) ## x) !! n) \\<approx> t)\n 2. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s2) (count_space UNIV)\n                       (\\<lambda>x. snd (((c, s2) ## x) !! N) \\<approx> t)\n 3. \\<lbrakk>\\<And>s. AE bT in T (c, s). qsend ((c, s) ## bT) < \\<infinity>;\n     \\<And>s. almost_everywhere (T s) (enabled s);\n     \\<And>M. AE x in M. x \\<in> space M\\<rbrakk>\n    \\<Longrightarrow> T.random_variable (c, s2) (count_space UNIV)\n                       (\\<lambda>x. \\<not> discrCf (((c, s2) ## x) !! N2))", "qed measurable"], ["proof (state)\nthis:\n  dist\n   (T.prob (c, s2)\n     {bT \\<in> space (T (c, s2)).\n      \\<exists>n.\n         qsend ((c, s2) ## bT) = enat n \\<and>\n         snd (((c, s2) ## bT) !! n) \\<approx> t})\n   (T.prob (c, s2)\n     {bT \\<in> space (T (c, s2)). snd (((c, s2) ## bT) !! N) \\<approx> t})\n  \\<le> T.prob (c, s2)\n         {bT \\<in> space (T (c, s2)).\n          \\<not> discrCf (((c, s2) ## bT) !! N2)}\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<bar>T.prob (c, s1)\n              {bT \\<in> space (T (c, s1)).\n               \\<exists>n.\n                  qsend ((c, s1) ## bT) = enat n \\<and>\n                  snd (((c, s1) ## bT) !! n) \\<approx> t} -\n             T.prob (c, s2)\n              {bT \\<in> space (T (c, s2)).\n               \\<exists>n.\n                  qsend ((c, s2) ## bT) = enat n \\<and>\n                  snd (((c, s2) ## bT) !! n) \\<approx> t}\\<bar>\n       \\<le> e", "ultimately"], ["proof (chain)\npicking this:\n  dist\n   (T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)).\n      \\<exists>n.\n         qsend ((c, s1) ## bT) = enat n \\<and>\n         snd (((c, s1) ## bT) !! n) \\<approx> t})\n   (T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)). snd (((c, s1) ## bT) !! N) \\<approx> t})\n  \\<le> T.prob (c, s1)\n         {bT \\<in> space (T (c, s1)).\n          \\<not> discrCf (((c, s1) ## bT) !! N1)}\n  dist\n   (T.prob (c, s2)\n     {bT \\<in> space (T (c, s2)).\n      \\<exists>n.\n         qsend ((c, s2) ## bT) = enat n \\<and>\n         snd (((c, s2) ## bT) !! n) \\<approx> t})\n   (T.prob (c, s2)\n     {bT \\<in> space (T (c, s2)). snd (((c, s2) ## bT) !! N) \\<approx> t})\n  \\<le> T.prob (c, s2)\n         {bT \\<in> space (T (c, s2)).\n          \\<not> discrCf (((c, s2) ## bT) !! N2)}", "have \"dist \\<P>(bT in T.T (c, s1). ?T s1 bT) \\<P>(bT in T.T (c, s1). ?Tn N s1 bT) +\n      dist \\<P>(bT in T.T (c, s2). ?T s2 bT) \\<P>(bT in T.T (c, s1). ?Tn N s1 bT) \\<le> e\""], ["proof (prove)\nusing this:\n  dist\n   (T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)).\n      \\<exists>n.\n         qsend ((c, s1) ## bT) = enat n \\<and>\n         snd (((c, s1) ## bT) !! n) \\<approx> t})\n   (T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)). snd (((c, s1) ## bT) !! N) \\<approx> t})\n  \\<le> T.prob (c, s1)\n         {bT \\<in> space (T (c, s1)).\n          \\<not> discrCf (((c, s1) ## bT) !! N1)}\n  dist\n   (T.prob (c, s2)\n     {bT \\<in> space (T (c, s2)).\n      \\<exists>n.\n         qsend ((c, s2) ## bT) = enat n \\<and>\n         snd (((c, s2) ## bT) !! n) \\<approx> t})\n   (T.prob (c, s2)\n     {bT \\<in> space (T (c, s2)). snd (((c, s2) ## bT) !! N) \\<approx> t})\n  \\<le> T.prob (c, s2)\n         {bT \\<in> space (T (c, s2)).\n          \\<not> discrCf (((c, s2) ## bT) !! N2)}\n\ngoal (1 subgoal):\n 1. dist\n     (T.prob (c, s1)\n       {bT \\<in> space (T (c, s1)).\n        \\<exists>n.\n           qsend ((c, s1) ## bT) = enat n \\<and>\n           snd (((c, s1) ## bT) !! n) \\<approx> t})\n     (T.prob (c, s1)\n       {bT \\<in> space (T (c, s1)).\n        snd (((c, s1) ## bT) !! N) \\<approx> t}) +\n    dist\n     (T.prob (c, s2)\n       {bT \\<in> space (T (c, s2)).\n        \\<exists>n.\n           qsend ((c, s2) ## bT) = enat n \\<and>\n           snd (((c, s2) ## bT) !! n) \\<approx> t})\n     (T.prob (c, s1)\n       {bT \\<in> space (T (c, s1)). snd (((c, s1) ## bT) !! N) \\<approx> t})\n    \\<le> e", "using \\<open>amSec c\\<close>[unfolded amSec_def, rule_format, OF \\<open>s1 \\<approx> s2\\<close>, of N t]"], ["proof (prove)\nusing this:\n  dist\n   (T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)).\n      \\<exists>n.\n         qsend ((c, s1) ## bT) = enat n \\<and>\n         snd (((c, s1) ## bT) !! n) \\<approx> t})\n   (T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)). snd (((c, s1) ## bT) !! N) \\<approx> t})\n  \\<le> T.prob (c, s1)\n         {bT \\<in> space (T (c, s1)).\n          \\<not> discrCf (((c, s1) ## bT) !! N1)}\n  dist\n   (T.prob (c, s2)\n     {bT \\<in> space (T (c, s2)).\n      \\<exists>n.\n         qsend ((c, s2) ## bT) = enat n \\<and>\n         snd (((c, s2) ## bT) !! n) \\<approx> t})\n   (T.prob (c, s2)\n     {bT \\<in> space (T (c, s2)). snd (((c, s2) ## bT) !! N) \\<approx> t})\n  \\<le> T.prob (c, s2)\n         {bT \\<in> space (T (c, s2)).\n          \\<not> discrCf (((c, s2) ## bT) !! N2)}\n  T.prob (c, s1)\n   {bT \\<in> space (T (c, s1)). snd (((c, s1) ## bT) !! N) \\<approx> t} =\n  T.prob (c, s2)\n   {bT \\<in> space (T (c, s2)). snd (((c, s2) ## bT) !! N) \\<approx> t}\n\ngoal (1 subgoal):\n 1. dist\n     (T.prob (c, s1)\n       {bT \\<in> space (T (c, s1)).\n        \\<exists>n.\n           qsend ((c, s1) ## bT) = enat n \\<and>\n           snd (((c, s1) ## bT) !! n) \\<approx> t})\n     (T.prob (c, s1)\n       {bT \\<in> space (T (c, s1)).\n        snd (((c, s1) ## bT) !! N) \\<approx> t}) +\n    dist\n     (T.prob (c, s2)\n       {bT \\<in> space (T (c, s2)).\n        \\<exists>n.\n           qsend ((c, s2) ## bT) = enat n \\<and>\n           snd (((c, s2) ## bT) !! n) \\<approx> t})\n     (T.prob (c, s1)\n       {bT \\<in> space (T (c, s1)). snd (((c, s1) ## bT) !! N) \\<approx> t})\n    \\<le> e", "using N1 N2"], ["proof (prove)\nusing this:\n  dist\n   (T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)).\n      \\<exists>n.\n         qsend ((c, s1) ## bT) = enat n \\<and>\n         snd (((c, s1) ## bT) !! n) \\<approx> t})\n   (T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)). snd (((c, s1) ## bT) !! N) \\<approx> t})\n  \\<le> T.prob (c, s1)\n         {bT \\<in> space (T (c, s1)).\n          \\<not> discrCf (((c, s1) ## bT) !! N1)}\n  dist\n   (T.prob (c, s2)\n     {bT \\<in> space (T (c, s2)).\n      \\<exists>n.\n         qsend ((c, s2) ## bT) = enat n \\<and>\n         snd (((c, s2) ## bT) !! n) \\<approx> t})\n   (T.prob (c, s2)\n     {bT \\<in> space (T (c, s2)). snd (((c, s2) ## bT) !! N) \\<approx> t})\n  \\<le> T.prob (c, s2)\n         {bT \\<in> space (T (c, s2)).\n          \\<not> discrCf (((c, s2) ## bT) !! N2)}\n  T.prob (c, s1)\n   {bT \\<in> space (T (c, s1)). snd (((c, s1) ## bT) !! N) \\<approx> t} =\n  T.prob (c, s2)\n   {bT \\<in> space (T (c, s2)). snd (((c, s2) ## bT) !! N) \\<approx> t}\n  T.prob (c, s1)\n   {bT \\<in> space (T (c, s1)). \\<not> discrCf (((c, s1) ## bT) !! N1)}\n  < e / 2\n  T.prob (c, s2)\n   {bT \\<in> space (T (c, s2)). \\<not> discrCf (((c, s2) ## bT) !! N2)}\n  < e / 2\n\ngoal (1 subgoal):\n 1. dist\n     (T.prob (c, s1)\n       {bT \\<in> space (T (c, s1)).\n        \\<exists>n.\n           qsend ((c, s1) ## bT) = enat n \\<and>\n           snd (((c, s1) ## bT) !! n) \\<approx> t})\n     (T.prob (c, s1)\n       {bT \\<in> space (T (c, s1)).\n        snd (((c, s1) ## bT) !! N) \\<approx> t}) +\n    dist\n     (T.prob (c, s2)\n       {bT \\<in> space (T (c, s2)).\n        \\<exists>n.\n           qsend ((c, s2) ## bT) = enat n \\<and>\n           snd (((c, s2) ## bT) !! n) \\<approx> t})\n     (T.prob (c, s1)\n       {bT \\<in> space (T (c, s1)). snd (((c, s1) ## bT) !! N) \\<approx> t})\n    \\<le> e", "by simp"], ["proof (state)\nthis:\n  dist\n   (T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)).\n      \\<exists>n.\n         qsend ((c, s1) ## bT) = enat n \\<and>\n         snd (((c, s1) ## bT) !! n) \\<approx> t})\n   (T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)). snd (((c, s1) ## bT) !! N) \\<approx> t}) +\n  dist\n   (T.prob (c, s2)\n     {bT \\<in> space (T (c, s2)).\n      \\<exists>n.\n         qsend ((c, s2) ## bT) = enat n \\<and>\n         snd (((c, s2) ## bT) !! n) \\<approx> t})\n   (T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)). snd (((c, s1) ## bT) !! N) \\<approx> t})\n  \\<le> e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<bar>T.prob (c, s1)\n              {bT \\<in> space (T (c, s1)).\n               \\<exists>n.\n                  qsend ((c, s1) ## bT) = enat n \\<and>\n                  snd (((c, s1) ## bT) !! n) \\<approx> t} -\n             T.prob (c, s2)\n              {bT \\<in> space (T (c, s2)).\n               \\<exists>n.\n                  qsend ((c, s2) ## bT) = enat n \\<and>\n                  snd (((c, s2) ## bT) !! n) \\<approx> t}\\<bar>\n       \\<le> e", "from dist_triangle_le[OF this]"], ["proof (chain)\npicking this:\n  dist\n   (T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)).\n      \\<exists>n.\n         qsend ((c, s1) ## bT) = enat n \\<and>\n         snd (((c, s1) ## bT) !! n) \\<approx> t})\n   (T.prob (c, s2)\n     {bT \\<in> space (T (c, s2)).\n      \\<exists>n.\n         qsend ((c, s2) ## bT) = enat n \\<and>\n         snd (((c, s2) ## bT) !! n) \\<approx> t})\n  \\<le> e", "show \"\\<bar>?P s1 - ?P s2\\<bar> \\<le> e\""], ["proof (prove)\nusing this:\n  dist\n   (T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)).\n      \\<exists>n.\n         qsend ((c, s1) ## bT) = enat n \\<and>\n         snd (((c, s1) ## bT) !! n) \\<approx> t})\n   (T.prob (c, s2)\n     {bT \\<in> space (T (c, s2)).\n      \\<exists>n.\n         qsend ((c, s2) ## bT) = enat n \\<and>\n         snd (((c, s2) ## bT) !! n) \\<approx> t})\n  \\<le> e\n\ngoal (1 subgoal):\n 1. \\<bar>T.prob (c, s1)\n           {bT \\<in> space (T (c, s1)).\n            \\<exists>n.\n               qsend ((c, s1) ## bT) = enat n \\<and>\n               snd (((c, s1) ## bT) !! n) \\<approx> t} -\n          T.prob (c, s2)\n           {bT \\<in> space (T (c, s2)).\n            \\<exists>n.\n               qsend ((c, s2) ## bT) = enat n \\<and>\n               snd (((c, s2) ## bT) !! n) \\<approx> t}\\<bar>\n    \\<le> e", "by (simp add: dist_real_def)"], ["proof (state)\nthis:\n  \\<bar>T.prob (c, s1)\n         {bT \\<in> space (T (c, s1)).\n          \\<exists>n.\n             qsend ((c, s1) ## bT) = enat n \\<and>\n             snd (((c, s1) ## bT) !! n) \\<approx> t} -\n        T.prob (c, s2)\n         {bT \\<in> space (T (c, s2)).\n          \\<exists>n.\n             qsend ((c, s2) ## bT) = enat n \\<and>\n             snd (((c, s2) ## bT) !! n) \\<approx> t}\\<bar>\n  \\<le> e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist\n   (T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)).\n      \\<exists>n.\n         qsend ((c, s1) ## bT) = enat n \\<and>\n         snd (((c, s1) ## bT) !! n) \\<approx> t})\n   (T.prob (c, s2)\n     {bT \\<in> space (T (c, s2)).\n      \\<exists>n.\n         qsend ((c, s2) ## bT) = enat n \\<and>\n         snd (((c, s2) ## bT) !! n) \\<approx> t}) =\n  0\n\ngoal (1 subgoal):\n 1. \\<And>s1 s2 t.\n       s1 \\<approx> s2 \\<Longrightarrow>\n       T.prob (c, s1)\n        {bT \\<in> space (T (c, s1)).\n         \\<exists>n.\n            qsend ((c, s1) ## bT) = enat n \\<and>\n            snd (((c, s1) ## bT) !! n) \\<approx> t} =\n       T.prob (c, s2)\n        {bT \\<in> space (T (c, s2)).\n         \\<exists>n.\n            qsend ((c, s2) ## bT) = enat n \\<and>\n            snd (((c, s2) ## bT) !! n) \\<approx> t}", "then"], ["proof (chain)\npicking this:\n  dist\n   (T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)).\n      \\<exists>n.\n         qsend ((c, s1) ## bT) = enat n \\<and>\n         snd (((c, s1) ## bT) !! n) \\<approx> t})\n   (T.prob (c, s2)\n     {bT \\<in> space (T (c, s2)).\n      \\<exists>n.\n         qsend ((c, s2) ## bT) = enat n \\<and>\n         snd (((c, s2) ## bT) !! n) \\<approx> t}) =\n  0", "show \"?P s1 = ?P s2\""], ["proof (prove)\nusing this:\n  dist\n   (T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)).\n      \\<exists>n.\n         qsend ((c, s1) ## bT) = enat n \\<and>\n         snd (((c, s1) ## bT) !! n) \\<approx> t})\n   (T.prob (c, s2)\n     {bT \\<in> space (T (c, s2)).\n      \\<exists>n.\n         qsend ((c, s2) ## bT) = enat n \\<and>\n         snd (((c, s2) ## bT) !! n) \\<approx> t}) =\n  0\n\ngoal (1 subgoal):\n 1. T.prob (c, s1)\n     {bT \\<in> space (T (c, s1)).\n      \\<exists>n.\n         qsend ((c, s1) ## bT) = enat n \\<and>\n         snd (((c, s1) ## bT) !! n) \\<approx> t} =\n    T.prob (c, s2)\n     {bT \\<in> space (T (c, s2)).\n      \\<exists>n.\n         qsend ((c, s2) ## bT) = enat n \\<and>\n         snd (((c, s2) ## bT) !! n) \\<approx> t}", "by simp"], ["proof (state)\nthis:\n  T.prob (c, s1)\n   {bT \\<in> space (T (c, s1)).\n    \\<exists>n.\n       qsend ((c, s1) ## bT) = enat n \\<and>\n       snd (((c, s1) ## bT) !! n) \\<approx> t} =\n  T.prob (c, s2)\n   {bT \\<in> space (T (c, s2)).\n    \\<exists>n.\n       qsend ((c, s2) ## bT) = enat n \\<and>\n       snd (((c, s2) ## bT) !! n) \\<approx> t}\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}