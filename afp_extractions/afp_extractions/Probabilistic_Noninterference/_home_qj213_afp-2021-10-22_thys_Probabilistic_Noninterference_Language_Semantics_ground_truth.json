{"file_name": "/home/qj213/afp-2021-10-22/thys/Probabilistic_Noninterference/Language_Semantics.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Probabilistic_Noninterference", "problem_names": ["lemma in_minus_Un[simp]:\nassumes \"i \\<in> I\"\nshows \"I - {i} Un {i} = I\" and \"{i} Un (I - {i}) = I\"", "lemma less_plus_cases[case_names Left Right]:\nassumes\n*: \"(i::nat) < n1 \\<Longrightarrow> phi\" and\n**: \"\\<And> i2. i = n1 + i2 \\<Longrightarrow> phi\"\nshows phi", "lemma less_plus_elim[elim!, consumes 1, case_names Left Right]:\nassumes i: \"(i:: nat) < n1 + n2\" and\n*: \"i < n1 \\<Longrightarrow> phi\" and\n**: \"\\<And> i2. \\<lbrakk>i2 < n2; i = n1 + i2\\<rbrakk> \\<Longrightarrow> phi\"\nshows phi", "lemma nth_append_singl[simp]:\n\"i < length al \\<Longrightarrow> (al @ [a]) ! i = al ! i\"", "lemma take_append_singl[simp]:\nassumes \"n < length al\" shows \"take n (al @ [a]) = take n al\"", "lemma length_unique_prefix:\n  \"al1 \\<le> al \\<Longrightarrow> al2 \\<le> al \\<Longrightarrow> length al1 = length al2 \\<Longrightarrow> al1 = al2\"", "lemma take_length[simp]:\n\"take (length al) al = al\"", "lemma take_le:\nassumes \"n < length al\"\nshows \"take n al @ [al ! n] \\<le> al\"", "lemma list_less_iff_prefix: \"a < b \\<longleftrightarrow> strict_prefix a b\"", "lemma take_lt:\n  \"n < length al \\<Longrightarrow> take n al < al\"", "lemma le_take:\nassumes \"n1 \\<le> n2\"\nshows \"take n1 al \\<le> take n2 al\"", "lemma inj_take:\nassumes \"n1 \\<le> length al\" and \"n2 \\<le> length al\"\nshows \"take n1 al = take n2 al \\<longleftrightarrow> n1 = n2\"", "lemma lt_take: \"n1 < n2 \\<Longrightarrow> n2 \\<le> length al \\<Longrightarrow> take n1 al < take n2 al\"", "lemma lsum_simps[simp]:\n \"lsum f [] = 0\"\n \"lsum f (al @ [a]) = lsum f al + f a\"", "lemma lsum_append:\n\"lsum f (al @ bl) = lsum f al + lsum f bl\"", "lemma lsum_cong[fundef_cong]:\nassumes \"\\<And> a. a \\<in> set al \\<Longrightarrow> f a = g a\"\nshows \"lsum f al = lsum g al\"", "lemma lsum_gt_0[simp]:\nassumes \"al \\<noteq> []\" and \"\\<And> a. a \\<in> set al \\<Longrightarrow> 0 < f a\"\nshows \"0 < lsum f al\"", "lemma lsum_mono[simp]:\nassumes \"al \\<le> bl\"\nshows \"lsum f al \\<le> lsum f bl\"", "lemma lsum_mono2[simp]:\nassumes f: \"\\<And> b. b \\<in> set bl \\<Longrightarrow> f b > 0\" and le: \"al < bl\"\nshows \"lsum f al < lsum f bl\"", "lemma lsum_take[simp]:\n\"lsum f (take n al) \\<le> lsum f al\"", "lemma less_lsum_nchotomy:\nassumes f: \"\\<And> a. a \\<in> set al \\<Longrightarrow> 0 < f a\"\nand i: \"(i::nat) < lsum f al\"\nshows \"\\<exists> n j. n < length al \\<and> j < f (al ! n) \\<and> i = lsum f (take n al) + j\"", "lemma less_lsum_unique:\nassumes \"\\<And> a. a \\<in> set al \\<Longrightarrow> (0::nat) < f a\"\nand \"n1 < length al \\<and> j1 < f (al ! n1)\"\nand \"n2 < length al \\<and> j2 < f (al ! n2)\"\nand \"lsum f (take n1 al) + j1 = lsum f (take n2 al) + j2\"\nshows \"n1 = n2 \\<and> j1 = j2\"", "lemma locate_pred_ex:\nassumes \"\\<And> a. a \\<in> set al \\<Longrightarrow> 0 < f a\"\nand \"i < lsum f al\"\nshows \"\\<exists> n_j. locate_pred f al i n_j\"", "lemma locate_pred_unique:\nassumes \"\\<And> a. a \\<in> set al \\<Longrightarrow> 0 < f a\"\nand \"locate_pred f al i n1_j1\" \"locate_pred f al i n2_j2\"\nshows \"n1_j1 = n2_j2\"", "lemma locate_locate_pred:\nassumes \"\\<And> a. a \\<in> set al \\<Longrightarrow> (0::nat) < f a\"\nand \"i < lsum f al\"\nshows \"locate_pred f al i (locate f al i)\"", "lemma locate_locate_pred_unique:\nassumes \"\\<And> a. a \\<in> set al \\<Longrightarrow> (0::nat) < f a\"\nand \"locate_pred f al i n_j\"\nshows \"n_j = locate f al i\"", "lemma locate:\nassumes \"\\<And> a. a \\<in> set al \\<Longrightarrow> 0 < f a\"\nand \"i < lsum f al\"\nshows \"locate1 f al i < length al \\<and>\n locate2 f al i < f (al ! (locate1 f al i)) \\<and>\n i = lsum f (take (locate1 f al i) al) + (locate2 f al i)\"", "lemma locate_unique:\nassumes \"\\<And> a. a \\<in> set al \\<Longrightarrow> 0 < f a\"\nand \"n < length al\" and \"j < f (al ! n)\" and \"i = lsum f (take n al) + j\"\nshows \"n = locate1 f al i \\<and> j = locate2 f al i\"", "lemma sum_2[simp]:\n\"sum f {..< 2} = f 0 + f (Suc 0)\"", "lemma inj_Plus[simp]:\n\"inj ((+) (a::nat))\"", "lemma inj_on_Plus[simp]:\n\"inj_on ((+) (a::nat)) A\"", "lemma Plus_int[simp]:\nfixes a :: nat\nshows \"(+) b ` {..< a} = {b ..< b + a}\"", "lemma sum_minus[simp]:\nfixes a :: nat\nshows \"sum f {a ..< a + b} = sum (%x. f (a + x)) {..< b}\"", "lemma sum_Un_introL:\nassumes \"A1 = B1 Un C1\" and \"x = x1 + x2\"\n\"finite A1\" and\n\"B1 Int C1 = {}\" and\n\"sum f1 B1 = x1\" and \"sum f1 C1 = x2\"\nshows \"sum f1 A1 = x\"", "lemma sum_Un_intro:\nassumes \"A1 = B1 Un C1\" and \"A2 = B2 Un C2\" and\n\"finite A1\" and \"finite A2\" and\n\"B1 Int C1 = {}\" and \"B2 Int C2 = {}\" and\n\"sum f1 B1 = sum f2 B2\" and \"sum f1 C1 = sum f2 C2\"\nshows \"sum f1 A1 = sum f2 A2\"", "lemma sum_UN_introL:\nassumes A1: \"A1 = (UN n : N. B1 n)\" and a2: \"a2 = sum b2 N\" and\nfin: \"finite N\" \"\\<And> n. n \\<in> N \\<Longrightarrow> finite (B1 n)\" and\nint: \"\\<And> m n. {m, n} \\<subseteq> N \\<and> m \\<noteq> n \\<Longrightarrow> B1 m \\<inter> B1 n = {}\" and\nss: \"\\<And> n. n \\<in> N \\<Longrightarrow> sum f1 (B1 n) = b2 n\"\nshows \"sum f1 A1 = a2\" (is \"?L = a2\")", "lemma sum_UN_intro:\nassumes A1: \"A1 = (UN n : N. B1 n)\" and A2: \"A2 = (UN n : N. B2 n)\" and\nfin: \"finite N\" \"\\<And> n. n \\<in> N \\<Longrightarrow> finite (B1 n) \\<and> finite (B2 n)\" and\nint: \"\\<And> m n. {m, n} \\<subseteq> N \\<and> m \\<noteq> n \\<Longrightarrow> B1 m \\<inter> B1 n = {}\" \"\\<And> m n. {m, n} \\<subseteq> N \\<Longrightarrow> B2 m \\<inter> B2 n = {}\" and\nss: \"\\<And> n. n \\<in> N \\<Longrightarrow> sum f1 (B1 n) = sum f2 (B2 n)\"\nshows \"sum f1 A1 = sum f2 A2\" (is \"?L = ?R\")", "lemma sum_Minus_intro:\nfixes f1 :: \"'a1 \\<Rightarrow> real\" and f2 :: \"'a2 \\<Rightarrow> real\"\nassumes \"B1 = A1 - {a1}\" and \"B2 = A2 - {a2}\" and\n\"a1 : A1\" and \"a2 : A2\" and \"finite A1\" and \"finite A2\"\n\"sum f1 A1 = sum f2 A2\" and \"f1 a1 = f2 a2\"\nshows \"sum f1 B1 = sum f2 B2\"", "lemma sum_singl_intro:\nassumes \"b = f a\"\nand \"finite A\" and \"a \\<in> A\"\nand \"\\<And> a'. \\<lbrakk>a' \\<in> A; a' \\<noteq> a\\<rbrakk> \\<Longrightarrow> f a' = 0\"\nshows \"sum f A = b\"", "lemma sum_all0_intro:\nassumes \"b = 0\"\nand \"\\<And> a. a \\<in> A \\<Longrightarrow> f a = 0\"\nshows \"sum f A = b\"", "lemma sum_1:\nassumes I: \"finite I\" and ss: \"sum f I = 1\" and i: \"i \\<in> I - I1\" and I1: \"I1 \\<subseteq> I\"\nand f: \"\\<And>i. i \\<in> I \\<Longrightarrow> (0::real) \\<le> f i\"\nshows \"f i \\<le> 1 - sum f I1\"", "lemma fin_Par_noWhileL[simp]:\n\"noWhile (Par cl) \\<longleftrightarrow> noWhileL cl\"", "lemma fin_ParT_noWhileL[simp]:\n\"noWhile (ParT cl) \\<longleftrightarrow> noWhileL cl\"", "lemma noWhileL_intro[intro]:\nassumes \"\\<And> c. c \\<in> set cl \\<Longrightarrow> noWhile c\"\nshows \"noWhileL cl\"", "lemma noWhileL_fin[simp]:\nassumes \"noWhileL cl\" and \"c \\<in> set cl\"\nshows \"noWhile c\"", "lemma noWhileL_update[simp]:\nassumes cl: \"noWhileL cl\" and c': \"noWhile c'\"\nshows \"noWhileL (cl[n := c'])\"", "lemma finished_Par_finishedL[simp]:\n\"finished (Par cl) \\<longleftrightarrow> finishedL cl\"", "lemma finished_ParT_finishedL[simp]:\n\"finished (ParT cl) \\<longleftrightarrow> finishedL cl\"", "lemma finishedL_intro[intro]:\nassumes \"\\<And> c. c \\<in> set cl \\<Longrightarrow> finished c\"\nshows \"finishedL cl\"", "lemma finishedL_finished[simp]:\nassumes \"finishedL cl\" and \"c \\<in> set cl\"\nshows \"finished c\"", "lemma finishedL_update[simp]:\nassumes cl: \"finishedL cl\" and c': \"finished c'\"\nshows \"finishedL (cl[n := c'])\"", "lemma finished_fin[simp]:\n\"finished c \\<Longrightarrow> noWhile c\"", "lemma finishedL_noWhileL[simp]:\n\"finishedL cl \\<Longrightarrow> noWhileL cl\"", "lemma [simp]: \"(n::nat) < N \\<Longrightarrow> 0 \\<le> 1 / N\"", "lemma [simp]: \"(n::nat) < N \\<Longrightarrow> 1 / N \\<le> 1\"", "lemma [simp]: \"(n::nat) < N \\<Longrightarrow> 0 \\<le> 1 - 1 / N\"", "lemma sum_equal: \"0 < (N::nat) \\<Longrightarrow> sum (\\<lambda> n. 1/N) {..< N} = 1\"", "lemma proper_Par_properL[simp]:\n\"proper (Par cl) \\<longleftrightarrow> properL cl\"", "lemma proper_ParT_properL[simp]:\n\"proper (ParT cl) \\<longleftrightarrow> properL cl\"", "lemma properL_intro[intro]:\n\"\\<lbrakk>cl \\<noteq> []; \\<And> c. c \\<in> set cl \\<Longrightarrow> proper c\\<rbrakk> \\<Longrightarrow> properL cl\"", "lemma properL_notEmp[simp]: \"properL cl \\<Longrightarrow> cl \\<noteq> []\"", "lemma properL_proper[simp]:\n\"\\<lbrakk>properL cl; c \\<in> set cl\\<rbrakk> \\<Longrightarrow> proper c\"", "lemma properL_update[simp]:\nassumes cl: \"properL cl\" and c': \"proper c'\"\nshows \"properL (cl[n := c'])\"", "lemma proper_induct[consumes 1, case_names Done Atm Seq While Ch Par ParT]:\nassumes *: \"proper c\"\nand Done: \"phi Done\"\nand Atm: \"\\<And> atm. phi (Atm atm)\"\nand Seq: \"\\<And> c1 c2. \\<lbrakk>phi c1; phi c2\\<rbrakk> \\<Longrightarrow> phi (c1 ;; c2)\"\nand While: \"\\<And> tst c. phi c \\<Longrightarrow> phi (While tst c)\"\nand Ch: \"\\<And> ch c1 c2. \\<lbrakk>phi c1; phi c2\\<rbrakk> \\<Longrightarrow> phi (Ch ch c1 c2)\"\nand Par: \"\\<And> cl. \\<lbrakk>properL cl; \\<And> c. c \\<in> set cl \\<Longrightarrow> phi c\\<rbrakk> \\<Longrightarrow> phi (Par cl)\"\nand ParT: \"\\<And> cl. \\<lbrakk>properL cl; \\<And> c. c \\<in> set cl \\<Longrightarrow> phi c\\<rbrakk> \\<Longrightarrow> phi (ParT cl)\"\nshows \"phi c\"", "lemma finite_theFT[simp]: \"finite (theFT cl)\"", "lemma theFT_length[simp]: \"n \\<in> theFT cl \\<Longrightarrow> n < length cl\"", "lemma theFT_finished[simp]: \"n \\<in> theFT cl \\<Longrightarrow> finished (cl!n)\"", "lemma finite_theNFT[simp]: \"finite (theNFT cl)\"", "lemma theNFT_length[simp]: \"n \\<in> theNFT cl \\<Longrightarrow> n < length cl\"", "lemma theNFT_notFinished[simp]: \"n \\<in> theNFT cl \\<Longrightarrow> \\<not> finished (cl!n)\"", "lemma theFT_Int_theNFT[simp]:\n\"theFT cl Int theNFT cl = {}\" and \"theNFT cl Int theFT cl = {}\"", "lemma theFT_Un_theNFT[simp]:\n\"theFT cl Un theNFT cl = {..< length cl}\" and\n\"theNFT cl Un theFT cl = {..< length cl}\"", "lemma in_theFT_theNFT[simp]:\nassumes \"n1 \\<in> theFT cl\" and \"n2 \\<in> theNFT cl\"\nshows \"n1 \\<noteq> n2\" and \"n2 \\<noteq> n1\"", "lemma WtFT_WtNFT[simp]:\nassumes \"0 < length cl\"\nshows \"WtFT cl + WtNFT cl = 1\" (is \"?A = 1\")", "lemma WtNFT_1_WtFT: \"0 < length cl \\<Longrightarrow> WtNFT cl = 1 - WtFT cl\"", "lemma WtNFT_WtFT_1[simp]:\nassumes \"0 < length cl\" and \"WtFT cl \\<noteq> 1\"\nshows \"WtNFT cl / (1 - WtFT cl) = 1\" (is \"?A / ?B = 1\")", "lemma WtFT_ge_0[simp]: \"WtFT cl \\<ge> 0\"", "lemma WtFT_le_1[simp]: \"WtFT cl \\<le> 1\" (is \"?L \\<le> 1\")", "lemma le_1_WtFT[simp]: \"0 \\<le> 1 - WtFT cl\" (is \"0 \\<le> ?R\")", "lemma WtFT_lt_1[simp]: \"WtFT cl \\<noteq> 1 \\<Longrightarrow> WtFT cl < 1\"", "lemma lt_1_WtFT[simp]: \"WtFT cl \\<noteq> 1 \\<Longrightarrow> 0 < 1 - WtFT cl\"", "lemma notFinished_WtFT[simp]:\nassumes \"n < length cl\" and \"\\<not> finished (cl ! n)\"\nshows \"1 / length cl \\<le> 1 - WtFT cl\"", "lemma brn_gt_0: \"proper c \\<Longrightarrow> 0 < brn c\"", "lemma brn_gt_0_L: \"\\<lbrakk>properL cl; c \\<in> set cl\\<rbrakk> \\<Longrightarrow> 0 < brn c\"", "lemma brnL_lsum: \"brnL cl (length cl) = lsum brn cl\"", "lemma brnL_unique:\nassumes \"properL cl\" and \"n1 < length cl \\<and> j1 < brn (cl ! n1)\"\nand \"n2 < length cl \\<and> j2 < brn (cl ! n2)\" and \"brnL cl n1 + j1 = brnL cl n2 + j2\"\nshows \"n1 = n2 \\<and> j1 = j2\"", "lemma brn_Par_simp[simp]: \"brn (Par cl) = brnL cl (length cl)\"", "lemma brn_ParT_simp[simp]: \"brn (ParT cl) = brnL cl (length cl)\"", "lemma brnL_0[simp]: \"brnL cl 0 = 0\"", "lemma brnL_Suc[simp]: \"n < length cl \\<Longrightarrow> brnL cl (Suc n) = brnL cl n + brn (cl ! n)\"", "lemma brnL_mono[simp]: \"n1 \\<le> n2 \\<Longrightarrow> brnL cl n1 \\<le> brnL cl n2\"", "lemma brnL_mono2[simp]:\nassumes p: \"properL cl\" and n: \"n1 < n2\" and l: \"n2 \\<le> length cl\"\nshows \"brnL cl n1 < brnL cl n2\" (is \"?L < ?R\")", "lemma brn_index[simp]:\nassumes n: \"n < length cl\" and i: \"i < brn (cl ! n)\"\nshows \"brnL cl n + i < brnL cl (length cl)\" (is \"?L < ?R\")", "lemma brnL_gt_0[simp]: \"\\<lbrakk>properL cl; 0 < n\\<rbrakk> \\<Longrightarrow> 0 < brnL cl n\"", "lemma locateTI:\nassumes \"properL cl\" and \"ii < brn (Par cl)\"\nshows\n\"locateT cl ii < length cl \\<and>\n locateI cl ii < brn (cl ! (locateT cl ii)) \\<and>\n ii = brnL cl (locateT cl ii) + locateI cl ii\"", "lemma locateTI_unique:\nassumes \"properL cl\" and \"n < length cl\"\nand \"i < brn (cl ! n)\" and \"ii = brnL cl n + i\"\nshows \"n = locateT cl ii \\<and> i = locateI cl ii\"", "lemma pickFT_pred:\nassumes \"WtFT cl = 1\"  shows \"\\<exists> n. pickFT_pred cl n\"", "lemma pickFT_pred_pickFT: \"WtFT cl = 1 \\<Longrightarrow> pickFT_pred cl (pickFT cl)\"", "lemma pickFT_length[simp]: \"WtFT cl = 1 \\<Longrightarrow> pickFT cl < length cl\"", "lemma pickFT_finished[simp]: \"WtFT cl = 1 \\<Longrightarrow> finished (cl ! (pickFT cl))\"", "lemma pickFT_theFT[simp]: \"WtFT cl = 1 \\<Longrightarrow> pickFT cl \\<in> theFT cl\"", "lemma wt_Done[simp]: \"wt Done s i = 1\"", "lemma wt_Atm[simp]: \"wt (Atm atm) s i = 1\"", "lemma wt_Seq[simp]:\n\"wt (c1 ;; c2) s = wt c1 s\"", "lemma wt_While[simp]: \"wt (While tst c) s i = 1\"", "lemma wt_Ch_L[simp]: \"wt (Ch ch c1 c2) s 0 = cval ch s\"", "lemma wt_Ch_R[simp]: \"wt (Ch ch c1 c2) s (Suc n) = 1 - cval ch s\"", "lemma cont_Done[simp]: \"cont Done s i = Done\"", "lemma cont_Atm[simp]: \"cont (Atm atm) s i = Done\"", "lemma cont_Seq_finished[simp]: \"finished (cont c1 s i) \\<Longrightarrow> cont (c1 ;; c2) s i = c2\"", "lemma cont_Seq_notFinished[simp]:\nassumes \"\\<not> finished (cont c1 s i)\"\nshows \"cont (c1 ;; c2) s i = (cont c1 s i) ;; c2\"", "lemma cont_Seq_not_eq_finished[simp]: \"\\<not> finished c2 \\<Longrightarrow> \\<not> finished (cont (Seq c1 c2) s i)\"", "lemma cont_While_False[simp]: \"tval tst s = False \\<Longrightarrow> cont (While tst c) s i = Done\"", "lemma cont_While_True[simp]: \"tval tst s = True \\<Longrightarrow> cont (While tst c) s i = c ;; (While tst c)\"", "lemma cont_Ch_L[simp]: \"cont (Ch ch c1 c2) s 0 = c1\"", "lemma cont_Ch_R[simp]: \"cont (Ch ch c1 c2) s (Suc n) = c2\"", "lemma eff_Done[simp]: \"eff Done s i = s\"", "lemma eff_Atm[simp]: \"eff (Atm atm) s i = aval atm s\"", "lemma eff_Seq[simp]: \"eff (c1 ;; c2) s = eff c1 s\"", "lemma eff_While[simp]: \"eff (While tst c) s i = s\"", "lemma eff_Ch[simp]: \"eff (Ch ch c1 c2) s i = s\"", "lemma brnL_nchotomy:\nassumes \"properL cl\" and \"ii < brnL cl (length cl)\"\nshows \"\\<exists> n i. n < length cl \\<and> i < brn (cl ! n) \\<and> ii = brnL cl n + i\"", "lemma wt_cont_eff_Par[simp]:\nassumes p: \"properL cl\"\nand n: \"n < length cl\" and i: \"i < brn (cl ! n)\"\nshows\n\"wt (Par cl) s (brnL cl n + i) =\n 1 / (length cl) * wt (cl ! n) s i\"\n(is \"?wL = ?wR\")\n(*  *)\n\"cont (Par cl) s (brnL cl n + i) =\n Par (cl [n := cont (cl ! n) s i])\"\n(is \"?mL = ?mR\")\n(*  *)\n\"eff (Par cl) s (brnL cl n + i) =\n eff (cl ! n) s i\"\n(is \"?eL = ?eR\")", "lemma cont_eff_ParT[simp]:\nassumes p: \"properL cl\"\nand n: \"n < length cl\" and i: \"i < brn (cl ! n)\"\nshows\n\"cont (ParT cl) s (brnL cl n + i) =\n ParT (cl [n := cont (cl ! n) s i])\"\n(is \"?mL = ?mR\")\n(*  *)\n\"eff (ParT cl) s (brnL cl n + i) =\n eff (cl ! n) s i\"\n(is \"?eL = ?eR\")", "lemma wt_ParT_WtFT_pickFT_0[simp]:\nassumes p: \"properL cl\" and WtFT: \"WtFT cl = 1\"\nshows \"wt (ParT cl) s (brnL cl (pickFT cl)) = 1\"\n(is \"?wL = 1\")", "lemma wt_ParT_WtFT_notPickFT_0[simp]:\nassumes p: \"properL cl\" and n: \"n < length cl\" and i: \"i < brn (cl ! n)\"\nand WtFT: \"WtFT cl = 1\" and ni: \"n = pickFT cl \\<longrightarrow> i \\<noteq> 0\"\nshows \"wt (ParT cl) s (brnL cl n + i) = 0\" (is \"?wL = 0\")", "lemma wt_ParT_notWtFT_finished[simp]:\nassumes p: \"properL cl\" and n: \"n < length cl\" and i: \"i < brn (cl ! n)\"\nand WtFT: \"WtFT cl \\<noteq> 1\" and f: \"finished (cl ! n)\"\nshows \"wt (ParT cl) s (brnL cl n + i) = 0\" (is \"?wL = 0\")", "lemma wt_cont_eff_ParT_notWtFT_notFinished[simp]:\nassumes p: \"properL cl\" and n: \"n < length cl\" and i: \"i < brn (cl ! n)\"\nand WtFT: \"WtFT cl \\<noteq> 1\" and nf: \"\\<not> finished (cl ! n)\"\nshows \"wt (ParT cl) s (brnL cl n + i) =\n       (1 / (length cl)) / (1 - WtFT cl) * wt (cl ! n) s i\" (is \"?wL = ?wR\")", "lemma wt_ge_0[simp]:\nassumes \"proper c\" and \"i < brn c\"\nshows \"0 \\<le> wt c s i\"", "lemma wt_le_1[simp]:\nassumes \"proper c\" and \"i < brn c\"\nshows \"wt c s i \\<le> 1\"", "lemma brnL_UN:\nassumes \"properL cl\"\nshows \"{..< brnL cl (length cl)} = (\\<Union> n < length cl. {brnL cl n ..<+ brn (cl!n)})\"\n(is \"?L = (\\<Union> n < length cl. ?R n)\")", "lemma brnL_Int_lt:\nassumes n12: \"n1 < n2\" and n2: \"n2 < length cl\"\nshows\n\"{brnL cl n1 ..<+ brn (cl!n1)} \\<inter> {brnL cl n2 ..<+ brn (cl!n2)} = {}\"", "lemma brnL_Int:\nassumes \"n1 \\<noteq> n2\" and \"n1 < length cl\" and \"n2 < length cl\"\nshows \"{brnL cl n1 ..<+ brn (cl!n1)} \\<inter> {brnL cl n2 ..<+ brn (cl!n2)} = {}\"", "lemma sum_wt_Par_sub[simp]:\nassumes cl: \"properL cl\" and n: \"n < length cl\" and I: \"I \\<subseteq> {..< brn (cl ! n)}\"\nshows \"sum (wt (Par cl) s) ((+) (brnL cl n) ` I) =\n       1 /(length cl) * sum (wt (cl ! n) s) I\" (is \"?L = ?wSch * ?R\")", "lemma sum_wt_Par[simp]:\nassumes cl: \"properL cl\" and n: \"n < length cl\"\nshows \"sum (wt (Par cl) s) {brnL cl n ..<+ brn (cl!n)} =\n       1 /(length cl) * sum (wt (cl ! n) s) {..< brn (cl ! n)}\" (is \"?L = ?W * ?R\")", "lemma sum_wt_ParT_sub_WtFT_pickFT_0[simp]:\nassumes cl: \"properL cl\" and nf: \"WtFT cl = 1\"\nand I: \"I \\<subseteq> {..< brn (cl ! (pickFT cl))}\" \"0 \\<in> I\"\nshows \"sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) = 1\" (is \"?L = 1\")", "lemma sum_wt_ParT_sub_WtFT_pickFT_0_2[simp]:\nassumes cl: \"properL cl\" and nf: \"WtFT cl = 1\"\nand II: \"II \\<subseteq> {..< brnL cl (length cl)}\" \"brnL cl (pickFT cl) \\<in> II\"\nshows \"sum (wt (ParT cl) s) II = 1\" (is \"?L = 1\")", "lemma sum_wt_ParT_sub_WtFT_notPickFT_0[simp]:\nassumes cl: \"properL cl\" and nf: \"WtFT cl = 1\" and n: \"n < length cl\"\nand I: \"I \\<subseteq> {..< brn (cl ! n)}\" and nI: \"n = pickFT cl \\<longrightarrow> 0 \\<notin> I\"\nshows \"sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0\" (is \"?L = 0\")", "lemma sum_wt_ParT_sub_notWtFT_finished[simp]:\nassumes cl: \"properL cl\" and nf: \"WtFT cl \\<noteq> 1\"\nand n: \"n < length cl\" and cln: \"finished (cl!n)\" and I: \"I \\<subseteq> {..< brn (cl ! n)}\"\nshows \"sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0\" (is \"?L = 0\")", "lemma sum_wt_ParT_sub_notWtFT_notFinished[simp]:\nassumes cl: \"properL cl\" and nf: \"WtFT cl \\<noteq> 1\" and n: \"n < length cl\"\nand cln: \"\\<not> finished (cl!n)\" and I: \"I \\<subseteq> {..< brn (cl ! n)}\"\nshows\n\"sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) =\n (1 / (length cl)) / (1 - WtFT cl) * sum (wt (cl ! n) s) I\"\n(is \"?L = ?w / (1 - ?wF) * ?R\")", "lemma sum_wt_ParT_WtFT_pickFT_0[simp]:\nassumes cl: \"properL cl\" and nf: \"WtFT cl = 1\"\nshows \"sum (wt (ParT cl) s) {brnL cl (pickFT cl) ..<+ brn (cl ! (pickFT cl))} = 1\"", "lemma sum_wt_ParT_WtFT_notPickFT_0[simp]:\nassumes cl: \"properL cl\" and nf: \"WtFT cl = 1\" and n: \"n < length cl\" \"n \\<noteq> pickFT cl\"\nshows \"sum (wt (ParT cl) s) {brnL cl n ..<+ brn (cl!n)} = 0\"", "lemma sum_wt_ParT_notWtFT_finished[simp]:\nassumes cl: \"properL cl\" and \"WtFT cl \\<noteq> 1\"\nand n: \"n < length cl\" and cln: \"finished (cl!n)\"\nshows \"sum (wt (ParT cl) s) {brnL cl n ..<+ brn (cl!n)} = 0\"", "lemma sum_wt_ParT_notWtFT_notFinished[simp]:\nassumes cl: \"properL cl\" and nf: \"WtFT cl \\<noteq> 1\"\nand n: \"n < length cl\" and cln: \"\\<not> finished (cl!n)\"\nshows\n\"sum (wt (ParT cl) s) {brnL cl n ..<+ brn (cl!n)} =\n (1 / (length cl)) / (1 - WtFT cl) *\n sum (wt (cl ! n) s) {..< brn (cl ! n)}\"", "lemma sum_wt[simp]:\nassumes \"proper c\"\nshows \"sum (wt c s) {..< brn c} = 1\"", "lemma proper_cont[simp]:\nassumes \"proper c\" and \"i < brn c\"\nshows \"proper (cont c s i)\"", "lemma sum_subset_le_1[simp]:\nassumes *: \"proper c\" and **: \"I \\<subseteq> {..< brn c}\"\nshows \"sum (wt c s) I \\<le> 1\"", "lemma sum_le_1[simp]:\nassumes *: \"proper c\" and **: \"i < brn c\"\nshows \"sum (wt c s) {..i} \\<le> 1\"", "lemma cont_eff: \"cont_eff cf b = (cont (fst cf) (snd cf) b, eff (fst cf) (snd cf) b)\""], "translations": [["", "lemma in_minus_Un[simp]:\nassumes \"i \\<in> I\"\nshows \"I - {i} Un {i} = I\" and \"{i} Un (I - {i}) = I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I - {i} \\<union> {i} = I &&& {i} \\<union> (I - {i}) = I", "apply(metis Un_commute assms insert_Diff_single insert_absorb insert_is_Un)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {i} \\<union> (I - {i}) = I", "by (metis assms insert_Diff_single insert_absorb insert_is_Un)"], ["", "lemma less_plus_cases[case_names Left Right]:\nassumes\n*: \"(i::nat) < n1 \\<Longrightarrow> phi\" and\n**: \"\\<And> i2. i = n1 + i2 \\<Longrightarrow> phi\"\nshows phi"], ["proof (prove)\ngoal (1 subgoal):\n 1. phi", "proof(cases \"i < n1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i < n1 \\<Longrightarrow> phi\n 2. \\<not> i < n1 \\<Longrightarrow> phi", "case True"], ["proof (state)\nthis:\n  i < n1\n\ngoal (2 subgoals):\n 1. i < n1 \\<Longrightarrow> phi\n 2. \\<not> i < n1 \\<Longrightarrow> phi", "thus ?thesis"], ["proof (prove)\nusing this:\n  i < n1\n\ngoal (1 subgoal):\n 1. phi", "using *"], ["proof (prove)\nusing this:\n  i < n1\n  i < n1 \\<Longrightarrow> phi\n\ngoal (1 subgoal):\n 1. phi", "by simp"], ["proof (state)\nthis:\n  phi\n\ngoal (1 subgoal):\n 1. \\<not> i < n1 \\<Longrightarrow> phi", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i < n1 \\<Longrightarrow> phi", "case False"], ["proof (state)\nthis:\n  \\<not> i < n1\n\ngoal (1 subgoal):\n 1. \\<not> i < n1 \\<Longrightarrow> phi", "hence \"n1 \\<le> i\""], ["proof (prove)\nusing this:\n  \\<not> i < n1\n\ngoal (1 subgoal):\n 1. n1 \\<le> i", "by simp"], ["proof (state)\nthis:\n  n1 \\<le> i\n\ngoal (1 subgoal):\n 1. \\<not> i < n1 \\<Longrightarrow> phi", "then"], ["proof (chain)\npicking this:\n  n1 \\<le> i", "obtain i2 where \"i = n1 + i2\""], ["proof (prove)\nusing this:\n  n1 \\<le> i\n\ngoal (1 subgoal):\n 1. (\\<And>i2. i = n1 + i2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis le_iff_add)"], ["proof (state)\nthis:\n  i = n1 + i2\n\ngoal (1 subgoal):\n 1. \\<not> i < n1 \\<Longrightarrow> phi", "thus ?thesis"], ["proof (prove)\nusing this:\n  i = n1 + i2\n\ngoal (1 subgoal):\n 1. phi", "using **"], ["proof (prove)\nusing this:\n  i = n1 + i2\n  i = n1 + ?i2.0 \\<Longrightarrow> phi\n\ngoal (1 subgoal):\n 1. phi", "by blast"], ["proof (state)\nthis:\n  phi\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma less_plus_elim[elim!, consumes 1, case_names Left Right]:\nassumes i: \"(i:: nat) < n1 + n2\" and\n*: \"i < n1 \\<Longrightarrow> phi\" and\n**: \"\\<And> i2. \\<lbrakk>i2 < n2; i = n1 + i2\\<rbrakk> \\<Longrightarrow> phi\"\nshows phi"], ["proof (prove)\ngoal (1 subgoal):\n 1. phi", "apply(rule less_plus_cases[of i n1])"], ["proof (prove)\ngoal (2 subgoals):\n 1. i < n1 \\<Longrightarrow> phi\n 2. \\<And>i2. i = n1 + i2 \\<Longrightarrow> phi", "using assms"], ["proof (prove)\nusing this:\n  i < n1 + n2\n  i < n1 \\<Longrightarrow> phi\n  \\<lbrakk>?i2.0 < n2; i = n1 + ?i2.0\\<rbrakk> \\<Longrightarrow> phi\n\ngoal (2 subgoals):\n 1. i < n1 \\<Longrightarrow> phi\n 2. \\<And>i2. i = n1 + i2 \\<Longrightarrow> phi", "by auto"], ["", "lemma nth_append_singl[simp]:\n\"i < length al \\<Longrightarrow> (al @ [a]) ! i = al ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < length al \\<Longrightarrow> (al @ [a]) ! i = al ! i", "by (auto simp add: nth_append)"], ["", "lemma take_append_singl[simp]:\nassumes \"n < length al\" shows \"take n (al @ [a]) = take n al\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take n (al @ [a]) = take n al", "using assms"], ["proof (prove)\nusing this:\n  n < length al\n\ngoal (1 subgoal):\n 1. take n (al @ [a]) = take n al", "by (induct al rule: rev_induct) auto"], ["", "lemma length_unique_prefix:\n  \"al1 \\<le> al \\<Longrightarrow> al2 \\<le> al \\<Longrightarrow> length al1 = length al2 \\<Longrightarrow> al1 = al2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>al1 \\<le> al; al2 \\<le> al; length al1 = length al2\\<rbrakk>\n    \\<Longrightarrow> al1 = al2", "by (metis not_equal_is_parallel parallelE prefix_same_cases less_eq_list_def)"], ["", "text\\<open>take:\\<close>"], ["", "lemma take_length[simp]:\n\"take (length al) al = al\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take (length al) al = al", "using take_all"], ["proof (prove)\nusing this:\n  length ?xs \\<le> ?n \\<Longrightarrow> take ?n ?xs = ?xs\n\ngoal (1 subgoal):\n 1. take (length al) al = al", "by auto"], ["", "lemma take_le:\nassumes \"n < length al\"\nshows \"take n al @ [al ! n] \\<le> al\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take n al @ [al ! n] \\<le> al", "by (metis assms take_Suc_conv_app_nth take_is_prefix less_eq_list_def)"], ["", "lemma list_less_iff_prefix: \"a < b \\<longleftrightarrow> strict_prefix a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a < b) = strict_prefix a b", "by (metis le_less less_eq_list_def less_irrefl prefix_order.le_less prefix_order.less_irrefl)"], ["", "lemma take_lt:\n  \"n < length al \\<Longrightarrow> take n al < al\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < length al \\<Longrightarrow> take n al < al", "unfolding list_less_iff_prefix"], ["proof (prove)\ngoal (1 subgoal):\n 1. n < length al \\<Longrightarrow> strict_prefix (take n al) al", "using prefix_order.le_less[of \"take n al\" al]"], ["proof (prove)\nusing this:\n  prefix (take n al) al =\n  (strict_prefix (take n al) al \\<or> take n al = al)\n\ngoal (1 subgoal):\n 1. n < length al \\<Longrightarrow> strict_prefix (take n al) al", "by (simp add: take_is_prefix)"], ["", "lemma le_take:\nassumes \"n1 \\<le> n2\"\nshows \"take n1 al \\<le> take n2 al\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take n1 al \\<le> take n2 al", "using assms"], ["proof (prove)\nusing this:\n  n1 \\<le> n2\n\ngoal (1 subgoal):\n 1. take n1 al \\<le> take n2 al", "proof(induct al arbitrary: n1 n2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n1 n2. n1 \\<le> n2 \\<Longrightarrow> take n1 [] \\<le> take n2 []\n 2. \\<And>a al n1 n2.\n       \\<lbrakk>\\<And>n1 n2.\n                   n1 \\<le> n2 \\<Longrightarrow>\n                   take n1 al \\<le> take n2 al;\n        n1 \\<le> n2\\<rbrakk>\n       \\<Longrightarrow> take n1 (a # al) \\<le> take n2 (a # al)", "case (Cons a al)"], ["proof (state)\nthis:\n  ?n1.0 \\<le> ?n2.0 \\<Longrightarrow> take ?n1.0 al \\<le> take ?n2.0 al\n  n1 \\<le> n2\n\ngoal (2 subgoals):\n 1. \\<And>n1 n2. n1 \\<le> n2 \\<Longrightarrow> take n1 [] \\<le> take n2 []\n 2. \\<And>a al n1 n2.\n       \\<lbrakk>\\<And>n1 n2.\n                   n1 \\<le> n2 \\<Longrightarrow>\n                   take n1 al \\<le> take n2 al;\n        n1 \\<le> n2\\<rbrakk>\n       \\<Longrightarrow> take n1 (a # al) \\<le> take n2 (a # al)", "thus ?case"], ["proof (prove)\nusing this:\n  ?n1.0 \\<le> ?n2.0 \\<Longrightarrow> take ?n1.0 al \\<le> take ?n2.0 al\n  n1 \\<le> n2\n\ngoal (1 subgoal):\n 1. take n1 (a # al) \\<le> take n2 (a # al)", "by (cases n1 n2 rule: nat.exhaust[case_product nat.exhaust]) auto"], ["proof (state)\nthis:\n  take n1 (a # al) \\<le> take n2 (a # al)\n\ngoal (1 subgoal):\n 1. \\<And>n1 n2. n1 \\<le> n2 \\<Longrightarrow> take n1 [] \\<le> take n2 []", "qed auto"], ["", "lemma inj_take:\nassumes \"n1 \\<le> length al\" and \"n2 \\<le> length al\"\nshows \"take n1 al = take n2 al \\<longleftrightarrow> n1 = n2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (take n1 al = take n2 al) = (n1 = n2)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (take n1 al = take n2 al) = (n1 = n2)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (take n1 al = take n2 al) = (n1 = n2)", "assume \"take n1 al = take n2 al\""], ["proof (state)\nthis:\n  take n1 al = take n2 al\n\ngoal (1 subgoal):\n 1. (take n1 al = take n2 al) = (n1 = n2)", "hence \"n1 = n2\""], ["proof (prove)\nusing this:\n  take n1 al = take n2 al\n\ngoal (1 subgoal):\n 1. n1 = n2", "using assms"], ["proof (prove)\nusing this:\n  take n1 al = take n2 al\n  n1 \\<le> length al\n  n2 \\<le> length al\n\ngoal (1 subgoal):\n 1. n1 = n2", "proof(induct al arbitrary: n1 n2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n1 n2.\n       \\<lbrakk>take n1 [] = take n2 []; n1 \\<le> length [];\n        n2 \\<le> length []\\<rbrakk>\n       \\<Longrightarrow> n1 = n2\n 2. \\<And>a al n1 n2.\n       \\<lbrakk>\\<And>n1 n2.\n                   \\<lbrakk>take n1 al = take n2 al; n1 \\<le> length al;\n                    n2 \\<le> length al\\<rbrakk>\n                   \\<Longrightarrow> n1 = n2;\n        take n1 (a # al) = take n2 (a # al); n1 \\<le> length (a # al);\n        n2 \\<le> length (a # al)\\<rbrakk>\n       \\<Longrightarrow> n1 = n2", "case (Cons a al)"], ["proof (state)\nthis:\n  \\<lbrakk>take ?n1.0 al = take ?n2.0 al; ?n1.0 \\<le> length al;\n   ?n2.0 \\<le> length al\\<rbrakk>\n  \\<Longrightarrow> ?n1.0 = ?n2.0\n  take n1 (a # al) = take n2 (a # al)\n  n1 \\<le> length (a # al)\n  n2 \\<le> length (a # al)\n\ngoal (2 subgoals):\n 1. \\<And>n1 n2.\n       \\<lbrakk>take n1 [] = take n2 []; n1 \\<le> length [];\n        n2 \\<le> length []\\<rbrakk>\n       \\<Longrightarrow> n1 = n2\n 2. \\<And>a al n1 n2.\n       \\<lbrakk>\\<And>n1 n2.\n                   \\<lbrakk>take n1 al = take n2 al; n1 \\<le> length al;\n                    n2 \\<le> length al\\<rbrakk>\n                   \\<Longrightarrow> n1 = n2;\n        take n1 (a # al) = take n2 (a # al); n1 \\<le> length (a # al);\n        n2 \\<le> length (a # al)\\<rbrakk>\n       \\<Longrightarrow> n1 = n2", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>take ?n1.0 al = take ?n2.0 al; ?n1.0 \\<le> length al;\n   ?n2.0 \\<le> length al\\<rbrakk>\n  \\<Longrightarrow> ?n1.0 = ?n2.0\n  take n1 (a # al) = take n2 (a # al)\n  n1 \\<le> length (a # al)\n  n2 \\<le> length (a # al)\n\ngoal (1 subgoal):\n 1. n1 = n2", "by (cases n1 n2 rule: nat.exhaust[case_product nat.exhaust]) auto"], ["proof (state)\nthis:\n  n1 = n2\n\ngoal (1 subgoal):\n 1. \\<And>n1 n2.\n       \\<lbrakk>take n1 [] = take n2 []; n1 \\<le> length [];\n        n2 \\<le> length []\\<rbrakk>\n       \\<Longrightarrow> n1 = n2", "qed auto"], ["proof (state)\nthis:\n  n1 = n2\n\ngoal (1 subgoal):\n 1. (take n1 al = take n2 al) = (n1 = n2)", "}"], ["proof (state)\nthis:\n  take n1 al = take n2 al \\<Longrightarrow> n1 = n2\n\ngoal (1 subgoal):\n 1. (take n1 al = take n2 al) = (n1 = n2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  take n1 al = take n2 al \\<Longrightarrow> n1 = n2\n\ngoal (1 subgoal):\n 1. (take n1 al = take n2 al) = (n1 = n2)", "by auto"], ["proof (state)\nthis:\n  (take n1 al = take n2 al) = (n1 = n2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lt_take: \"n1 < n2 \\<Longrightarrow> n2 \\<le> length al \\<Longrightarrow> take n1 al < take n2 al\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n1 < n2; n2 \\<le> length al\\<rbrakk>\n    \\<Longrightarrow> take n1 al < take n2 al", "by (metis inj_take le_less_trans le_take not_less_iff_gr_or_eq order.not_eq_order_implies_strict order.strict_implies_order)"], ["", "text\\<open>lsum:\\<close>"], ["", "definition lsum :: \"('a \\<Rightarrow> nat) \\<Rightarrow> 'a list \\<Rightarrow> nat\" where\n\"lsum f al \\<equiv> sum_list (map f al)\""], ["", "lemma lsum_simps[simp]:\n \"lsum f [] = 0\"\n \"lsum f (al @ [a]) = lsum f al + f a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lsum f [] = 0 &&& lsum f (al @ [a]) = lsum f al + f a", "unfolding lsum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list (map f []) = 0 &&&\n    sum_list (map f (al @ [a])) = sum_list (map f al) + f a", "by auto"], ["", "lemma lsum_append:\n\"lsum f (al @ bl) = lsum f al + lsum f bl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lsum f (al @ bl) = lsum f al + lsum f bl", "unfolding lsum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list (map f (al @ bl)) = sum_list (map f al) + sum_list (map f bl)", "by auto"], ["", "lemma lsum_cong[fundef_cong]:\nassumes \"\\<And> a. a \\<in> set al \\<Longrightarrow> f a = g a\"\nshows \"lsum f al = lsum g al\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lsum f al = lsum g al", "using assms"], ["proof (prove)\nusing this:\n  ?a \\<in> set al \\<Longrightarrow> f ?a = g ?a\n\ngoal (1 subgoal):\n 1. lsum f al = lsum g al", "unfolding lsum_def"], ["proof (prove)\nusing this:\n  ?a \\<in> set al \\<Longrightarrow> f ?a = g ?a\n\ngoal (1 subgoal):\n 1. sum_list (map f al) = sum_list (map g al)", "by (metis map_eq_conv)"], ["", "lemma lsum_gt_0[simp]:\nassumes \"al \\<noteq> []\" and \"\\<And> a. a \\<in> set al \\<Longrightarrow> 0 < f a\"\nshows \"0 < lsum f al\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < lsum f al", "using assms"], ["proof (prove)\nusing this:\n  al \\<noteq> []\n  ?a \\<in> set al \\<Longrightarrow> 0 < f ?a\n\ngoal (1 subgoal):\n 1. 0 < lsum f al", "by (induct rule: rev_induct) auto"], ["", "lemma lsum_mono[simp]:\nassumes \"al \\<le> bl\"\nshows \"lsum f al \\<le> lsum f bl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lsum f al \\<le> lsum f bl", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. lsum f al \\<le> lsum f bl", "obtain cl where bl: \"bl = al @ cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>cl. bl = al @ cl \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  al \\<le> bl\n\ngoal (1 subgoal):\n 1. (\\<And>cl. bl = al @ cl \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding prefix_def less_eq_list_def"], ["proof (prove)\nusing this:\n  \\<exists>zs. bl = al @ zs\n\ngoal (1 subgoal):\n 1. (\\<And>cl. bl = al @ cl \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  bl = al @ cl\n\ngoal (1 subgoal):\n 1. lsum f al \\<le> lsum f bl", "thus ?thesis"], ["proof (prove)\nusing this:\n  bl = al @ cl\n\ngoal (1 subgoal):\n 1. lsum f al \\<le> lsum f bl", "unfolding bl lsum_append"], ["proof (prove)\nusing this:\n  al @ cl = al @ cl\n\ngoal (1 subgoal):\n 1. lsum f al \\<le> lsum f al + lsum f cl", "by simp"], ["proof (state)\nthis:\n  lsum f al \\<le> lsum f bl\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lsum_mono2[simp]:\nassumes f: \"\\<And> b. b \\<in> set bl \\<Longrightarrow> f b > 0\" and le: \"al < bl\"\nshows \"lsum f al < lsum f bl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lsum f al < lsum f bl", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. lsum f al < lsum f bl", "obtain cl where bl: \"bl = al @ cl\" and cl: \"cl \\<noteq> []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>cl.\n        \\<lbrakk>bl = al @ cl; cl \\<noteq> []\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  ?b \\<in> set bl \\<Longrightarrow> 0 < f ?b\n  al < bl\n\ngoal (1 subgoal):\n 1. (\\<And>cl.\n        \\<lbrakk>bl = al @ cl; cl \\<noteq> []\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding list_less_iff_prefix prefix_def strict_prefix_def"], ["proof (prove)\nusing this:\n  ?b \\<in> set bl \\<Longrightarrow> 0 < f ?b\n  (\\<exists>zs. bl = al @ zs) \\<and> al \\<noteq> bl\n\ngoal (1 subgoal):\n 1. (\\<And>cl.\n        \\<lbrakk>bl = al @ cl; cl \\<noteq> []\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  bl = al @ cl\n  cl \\<noteq> []\n\ngoal (1 subgoal):\n 1. lsum f al < lsum f bl", "have \"lsum f al < lsum f al + lsum f cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lsum f al < lsum f al + lsum f cl", "using f cl"], ["proof (prove)\nusing this:\n  ?b \\<in> set bl \\<Longrightarrow> 0 < f ?b\n  cl \\<noteq> []\n\ngoal (1 subgoal):\n 1. lsum f al < lsum f al + lsum f cl", "unfolding bl"], ["proof (prove)\nusing this:\n  ?b \\<in> set (al @ cl) \\<Longrightarrow> 0 < f ?b\n  cl \\<noteq> []\n\ngoal (1 subgoal):\n 1. lsum f al < lsum f al + lsum f cl", "by simp"], ["proof (state)\nthis:\n  lsum f al < lsum f al + lsum f cl\n\ngoal (1 subgoal):\n 1. lsum f al < lsum f bl", "also"], ["proof (state)\nthis:\n  lsum f al < lsum f al + lsum f cl\n\ngoal (1 subgoal):\n 1. lsum f al < lsum f bl", "have \"... = lsum f bl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lsum f al + lsum f cl = lsum f bl", "unfolding bl lsum_append"], ["proof (prove)\ngoal (1 subgoal):\n 1. lsum f al + lsum f cl = lsum f al + lsum f cl", "by simp"], ["proof (state)\nthis:\n  lsum f al + lsum f cl = lsum f bl\n\ngoal (1 subgoal):\n 1. lsum f al < lsum f bl", "finally"], ["proof (chain)\npicking this:\n  lsum f al < lsum f bl", "show ?thesis"], ["proof (prove)\nusing this:\n  lsum f al < lsum f bl\n\ngoal (1 subgoal):\n 1. lsum f al < lsum f bl", "."], ["proof (state)\nthis:\n  lsum f al < lsum f bl\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lsum_take[simp]:\n\"lsum f (take n al) \\<le> lsum f al\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lsum f (take n al) \\<le> lsum f al", "by (metis lsum_mono take_is_prefix less_eq_list_def)"], ["", "lemma less_lsum_nchotomy:\nassumes f: \"\\<And> a. a \\<in> set al \\<Longrightarrow> 0 < f a\"\nand i: \"(i::nat) < lsum f al\"\nshows \"\\<exists> n j. n < length al \\<and> j < f (al ! n) \\<and> i = lsum f (take n al) + j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n j.\n       n < length al \\<and> j < f (al ! n) \\<and> i = lsum f (take n al) + j", "using assms"], ["proof (prove)\nusing this:\n  ?a \\<in> set al \\<Longrightarrow> 0 < f ?a\n  i < lsum f al\n\ngoal (1 subgoal):\n 1. \\<exists>n j.\n       n < length al \\<and> j < f (al ! n) \\<and> i = lsum f (take n al) + j", "proof(induct rule: rev_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>a. a \\<in> set [] \\<Longrightarrow> 0 < f a;\n     i < lsum f []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n j.\n                         n < length [] \\<and>\n                         j < f ([] ! n) \\<and> i = lsum f (take n []) + j\n 2. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<And>a. a \\<in> set xs \\<Longrightarrow> 0 < f a;\n                 i < lsum f xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>n j.\n                                     n < length xs \\<and>\n                                     j < f (xs ! n) \\<and>\n                                     i = lsum f (take n xs) + j;\n        \\<And>a. a \\<in> set (xs @ [x]) \\<Longrightarrow> 0 < f a;\n        i < lsum f (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n j.\n                            n < length (xs @ [x]) \\<and>\n                            j < f ((xs @ [x]) ! n) \\<and>\n                            i = lsum f (take n (xs @ [x])) + j", "case (snoc a al)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n   i < lsum f al\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n j.\n                       n < length al \\<and>\n                       j < f (al ! n) \\<and> i = lsum f (take n al) + j\n  ?a \\<in> set (al @ [a]) \\<Longrightarrow> 0 < f ?a\n  i < lsum f (al @ [a])\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>a. a \\<in> set [] \\<Longrightarrow> 0 < f a;\n     i < lsum f []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n j.\n                         n < length [] \\<and>\n                         j < f ([] ! n) \\<and> i = lsum f (take n []) + j\n 2. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<And>a. a \\<in> set xs \\<Longrightarrow> 0 < f a;\n                 i < lsum f xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>n j.\n                                     n < length xs \\<and>\n                                     j < f (xs ! n) \\<and>\n                                     i = lsum f (take n xs) + j;\n        \\<And>a. a \\<in> set (xs @ [x]) \\<Longrightarrow> 0 < f a;\n        i < lsum f (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n j.\n                            n < length (xs @ [x]) \\<and>\n                            j < f ((xs @ [x]) ! n) \\<and>\n                            i = lsum f (take n (xs @ [x])) + j", "hence i: \"i < lsum f al + f a\" and\n  pos: \"0 < f a\"  \"\\<And>a'. a' \\<in> set al \\<Longrightarrow> 0 < f a'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n   i < lsum f al\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n j.\n                       n < length al \\<and>\n                       j < f (al ! n) \\<and> i = lsum f (take n al) + j\n  ?a \\<in> set (al @ [a]) \\<Longrightarrow> 0 < f ?a\n  i < lsum f (al @ [a])\n\ngoal (1 subgoal):\n 1. i < lsum f al + f a &&&\n    0 < f a &&& (\\<And>a'. a' \\<in> set al \\<Longrightarrow> 0 < f a')", "by auto"], ["proof (state)\nthis:\n  i < lsum f al + f a\n  0 < f a\n  ?a' \\<in> set al \\<Longrightarrow> 0 < f ?a'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>a. a \\<in> set [] \\<Longrightarrow> 0 < f a;\n     i < lsum f []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n j.\n                         n < length [] \\<and>\n                         j < f ([] ! n) \\<and> i = lsum f (take n []) + j\n 2. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<And>a. a \\<in> set xs \\<Longrightarrow> 0 < f a;\n                 i < lsum f xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>n j.\n                                     n < length xs \\<and>\n                                     j < f (xs ! n) \\<and>\n                                     i = lsum f (take n xs) + j;\n        \\<And>a. a \\<in> set (xs @ [x]) \\<Longrightarrow> 0 < f a;\n        i < lsum f (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n j.\n                            n < length (xs @ [x]) \\<and>\n                            j < f ((xs @ [x]) ! n) \\<and>\n                            i = lsum f (take n (xs @ [x])) + j", "from i"], ["proof (chain)\npicking this:\n  i < lsum f al + f a", "show ?case"], ["proof (prove)\nusing this:\n  i < lsum f al + f a\n\ngoal (1 subgoal):\n 1. \\<exists>n j.\n       n < length (al @ [a]) \\<and>\n       j < f ((al @ [a]) ! n) \\<and> i = lsum f (take n (al @ [a])) + j", "proof(cases rule: less_plus_elim)"], ["proof (state)\ngoal (2 subgoals):\n 1. i < lsum f al \\<Longrightarrow>\n    \\<exists>n j.\n       n < length (al @ [a]) \\<and>\n       j < f ((al @ [a]) ! n) \\<and> i = lsum f (take n (al @ [a])) + j\n 2. \\<And>i2.\n       \\<lbrakk>i2 < f a; i = lsum f al + i2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n j.\n                            n < length (al @ [a]) \\<and>\n                            j < f ((al @ [a]) ! n) \\<and>\n                            i = lsum f (take n (al @ [a])) + j", "case Left"], ["proof (state)\nthis:\n  i < lsum f al\n\ngoal (2 subgoals):\n 1. i < lsum f al \\<Longrightarrow>\n    \\<exists>n j.\n       n < length (al @ [a]) \\<and>\n       j < f ((al @ [a]) ! n) \\<and> i = lsum f (take n (al @ [a])) + j\n 2. \\<And>i2.\n       \\<lbrakk>i2 < f a; i = lsum f al + i2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n j.\n                            n < length (al @ [a]) \\<and>\n                            j < f ((al @ [a]) ! n) \\<and>\n                            i = lsum f (take n (al @ [a])) + j", "then"], ["proof (chain)\npicking this:\n  i < lsum f al", "obtain n j where \"n < length al \\<and> j < f (al ! n) \\<and> i = lsum f (take n al) + j\""], ["proof (prove)\nusing this:\n  i < lsum f al\n\ngoal (1 subgoal):\n 1. (\\<And>n j.\n        n < length al \\<and>\n        j < f (al ! n) \\<and> i = lsum f (take n al) + j \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using pos snoc"], ["proof (prove)\nusing this:\n  i < lsum f al\n  0 < f a\n  ?a' \\<in> set al \\<Longrightarrow> 0 < f ?a'\n  \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n   i < lsum f al\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n j.\n                       n < length al \\<and>\n                       j < f (al ! n) \\<and> i = lsum f (take n al) + j\n  ?a \\<in> set (al @ [a]) \\<Longrightarrow> 0 < f ?a\n  i < lsum f (al @ [a])\n\ngoal (1 subgoal):\n 1. (\\<And>n j.\n        n < length al \\<and>\n        j < f (al ! n) \\<and> i = lsum f (take n al) + j \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  n < length al \\<and> j < f (al ! n) \\<and> i = lsum f (take n al) + j\n\ngoal (2 subgoals):\n 1. i < lsum f al \\<Longrightarrow>\n    \\<exists>n j.\n       n < length (al @ [a]) \\<and>\n       j < f ((al @ [a]) ! n) \\<and> i = lsum f (take n (al @ [a])) + j\n 2. \\<And>i2.\n       \\<lbrakk>i2 < f a; i = lsum f al + i2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n j.\n                            n < length (al @ [a]) \\<and>\n                            j < f ((al @ [a]) ! n) \\<and>\n                            i = lsum f (take n (al @ [a])) + j", "thus ?thesis"], ["proof (prove)\nusing this:\n  n < length al \\<and> j < f (al ! n) \\<and> i = lsum f (take n al) + j\n\ngoal (1 subgoal):\n 1. \\<exists>n j.\n       n < length (al @ [a]) \\<and>\n       j < f ((al @ [a]) ! n) \\<and> i = lsum f (take n (al @ [a])) + j", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. n < length al \\<and>\n    j < f (al ! n) \\<and> i = lsum f (take n al) + j \\<Longrightarrow>\n    \\<exists>n j.\n       n < length (al @ [a]) \\<and>\n       j < f ((al @ [a]) ! n) \\<and> i = lsum f (take n (al @ [a])) + j", "apply(rule exI[of _ n])"], ["proof (prove)\ngoal (1 subgoal):\n 1. n < length al \\<and>\n    j < f (al ! n) \\<and> i = lsum f (take n al) + j \\<Longrightarrow>\n    \\<exists>j.\n       n < length (al @ [a]) \\<and>\n       j < f ((al @ [a]) ! n) \\<and> i = lsum f (take n (al @ [a])) + j", "apply(rule exI[of _ j])"], ["proof (prove)\ngoal (1 subgoal):\n 1. n < length al \\<and>\n    j < f (al ! n) \\<and> i = lsum f (take n al) + j \\<Longrightarrow>\n    n < length (al @ [a]) \\<and>\n    j < f ((al @ [a]) ! n) \\<and> i = lsum f (take n (al @ [a])) + j", "by auto"], ["proof (state)\nthis:\n  \\<exists>n j.\n     n < length (al @ [a]) \\<and>\n     j < f ((al @ [a]) ! n) \\<and> i = lsum f (take n (al @ [a])) + j\n\ngoal (1 subgoal):\n 1. \\<And>i2.\n       \\<lbrakk>i2 < f a; i = lsum f al + i2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n j.\n                            n < length (al @ [a]) \\<and>\n                            j < f ((al @ [a]) ! n) \\<and>\n                            i = lsum f (take n (al @ [a])) + j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i2.\n       \\<lbrakk>i2 < f a; i = lsum f al + i2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n j.\n                            n < length (al @ [a]) \\<and>\n                            j < f ((al @ [a]) ! n) \\<and>\n                            i = lsum f (take n (al @ [a])) + j", "case (Right j)"], ["proof (state)\nthis:\n  j < f a\n  i = lsum f al + j\n\ngoal (1 subgoal):\n 1. \\<And>i2.\n       \\<lbrakk>i2 < f a; i = lsum f al + i2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n j.\n                            n < length (al @ [a]) \\<and>\n                            j < f ((al @ [a]) ! n) \\<and>\n                            i = lsum f (take n (al @ [a])) + j", "thus ?thesis"], ["proof (prove)\nusing this:\n  j < f a\n  i = lsum f al + j\n\ngoal (1 subgoal):\n 1. \\<exists>n j.\n       n < length (al @ [a]) \\<and>\n       j < f ((al @ [a]) ! n) \\<and> i = lsum f (take n (al @ [a])) + j", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>j < f a; i = lsum f al + j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n j.\n                         n < length (al @ [a]) \\<and>\n                         j < f ((al @ [a]) ! n) \\<and>\n                         i = lsum f (take n (al @ [a])) + j", "apply(rule exI[of _ \"length al\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>j < f a; i = lsum f al + j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>j.\n                         length al < length (al @ [a]) \\<and>\n                         j < f ((al @ [a]) ! length al) \\<and>\n                         i = lsum f (take (length al) (al @ [a])) + j", "apply(rule exI[of _ j])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>j < f a; i = lsum f al + j\\<rbrakk>\n    \\<Longrightarrow> length al < length (al @ [a]) \\<and>\n                      j < f ((al @ [a]) ! length al) \\<and>\n                      i = lsum f (take (length al) (al @ [a])) + j", "by simp"], ["proof (state)\nthis:\n  \\<exists>n j.\n     n < length (al @ [a]) \\<and>\n     j < f ((al @ [a]) ! n) \\<and> i = lsum f (take n (al @ [a])) + j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>n j.\n     n < length (al @ [a]) \\<and>\n     j < f ((al @ [a]) ! n) \\<and> i = lsum f (take n (al @ [a])) + j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a. a \\<in> set [] \\<Longrightarrow> 0 < f a;\n     i < lsum f []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n j.\n                         n < length [] \\<and>\n                         j < f ([] ! n) \\<and> i = lsum f (take n []) + j", "qed auto"], ["", "lemma less_lsum_unique:\nassumes \"\\<And> a. a \\<in> set al \\<Longrightarrow> (0::nat) < f a\"\nand \"n1 < length al \\<and> j1 < f (al ! n1)\"\nand \"n2 < length al \\<and> j2 < f (al ! n2)\"\nand \"lsum f (take n1 al) + j1 = lsum f (take n2 al) + j2\"\nshows \"n1 = n2 \\<and> j1 = j2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n1 = n2 \\<and> j1 = j2", "using assms"], ["proof (prove)\nusing this:\n  ?a \\<in> set al \\<Longrightarrow> 0 < f ?a\n  n1 < length al \\<and> j1 < f (al ! n1)\n  n2 < length al \\<and> j2 < f (al ! n2)\n  lsum f (take n1 al) + j1 = lsum f (take n2 al) + j2\n\ngoal (1 subgoal):\n 1. n1 = n2 \\<and> j1 = j2", "proof(induct al arbitrary: n1 n2 j1 j2 rule: rev_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n1 n2 j1 j2.\n       \\<lbrakk>\\<And>a. a \\<in> set [] \\<Longrightarrow> 0 < f a;\n        n1 < length [] \\<and> j1 < f ([] ! n1);\n        n2 < length [] \\<and> j2 < f ([] ! n2);\n        lsum f (take n1 []) + j1 = lsum f (take n2 []) + j2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>x xs n1 n2 j1 j2.\n       \\<lbrakk>\\<And>n1 n2 j1 j2.\n                   \\<lbrakk>\\<And>a.\n                               a \\<in> set xs \\<Longrightarrow> 0 < f a;\n                    n1 < length xs \\<and> j1 < f (xs ! n1);\n                    n2 < length xs \\<and> j2 < f (xs ! n2);\n                    lsum f (take n1 xs) + j1 =\n                    lsum f (take n2 xs) + j2\\<rbrakk>\n                   \\<Longrightarrow> n1 = n2 \\<and> j1 = j2;\n        \\<And>a. a \\<in> set (xs @ [x]) \\<Longrightarrow> 0 < f a;\n        n1 < length (xs @ [x]) \\<and> j1 < f ((xs @ [x]) ! n1);\n        n2 < length (xs @ [x]) \\<and> j2 < f ((xs @ [x]) ! n2);\n        lsum f (take n1 (xs @ [x])) + j1 =\n        lsum f (take n2 (xs @ [x])) + j2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "case (snoc a al)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n   ?n1.0 < length al \\<and> ?j1.0 < f (al ! ?n1.0);\n   ?n2.0 < length al \\<and> ?j2.0 < f (al ! ?n2.0);\n   lsum f (take ?n1.0 al) + ?j1.0 = lsum f (take ?n2.0 al) + ?j2.0\\<rbrakk>\n  \\<Longrightarrow> ?n1.0 = ?n2.0 \\<and> ?j1.0 = ?j2.0\n  ?a \\<in> set (al @ [a]) \\<Longrightarrow> 0 < f ?a\n  n1 < length (al @ [a]) \\<and> j1 < f ((al @ [a]) ! n1)\n  n2 < length (al @ [a]) \\<and> j2 < f ((al @ [a]) ! n2)\n  lsum f (take n1 (al @ [a])) + j1 = lsum f (take n2 (al @ [a])) + j2\n\ngoal (2 subgoals):\n 1. \\<And>n1 n2 j1 j2.\n       \\<lbrakk>\\<And>a. a \\<in> set [] \\<Longrightarrow> 0 < f a;\n        n1 < length [] \\<and> j1 < f ([] ! n1);\n        n2 < length [] \\<and> j2 < f ([] ! n2);\n        lsum f (take n1 []) + j1 = lsum f (take n2 []) + j2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>x xs n1 n2 j1 j2.\n       \\<lbrakk>\\<And>n1 n2 j1 j2.\n                   \\<lbrakk>\\<And>a.\n                               a \\<in> set xs \\<Longrightarrow> 0 < f a;\n                    n1 < length xs \\<and> j1 < f (xs ! n1);\n                    n2 < length xs \\<and> j2 < f (xs ! n2);\n                    lsum f (take n1 xs) + j1 =\n                    lsum f (take n2 xs) + j2\\<rbrakk>\n                   \\<Longrightarrow> n1 = n2 \\<and> j1 = j2;\n        \\<And>a. a \\<in> set (xs @ [x]) \\<Longrightarrow> 0 < f a;\n        n1 < length (xs @ [x]) \\<and> j1 < f ((xs @ [x]) ! n1);\n        n2 < length (xs @ [x]) \\<and> j2 < f ((xs @ [x]) ! n2);\n        lsum f (take n1 (xs @ [x])) + j1 =\n        lsum f (take n2 (xs @ [x])) + j2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "hence pos: \"0 < f a\"   \"\\<And> a'. a' \\<in> set al \\<Longrightarrow> 0 < f a'\"\n  and n1: \"n1 < length al + 1\" and n2: \"n2 < length al + 1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n   ?n1.0 < length al \\<and> ?j1.0 < f (al ! ?n1.0);\n   ?n2.0 < length al \\<and> ?j2.0 < f (al ! ?n2.0);\n   lsum f (take ?n1.0 al) + ?j1.0 = lsum f (take ?n2.0 al) + ?j2.0\\<rbrakk>\n  \\<Longrightarrow> ?n1.0 = ?n2.0 \\<and> ?j1.0 = ?j2.0\n  ?a \\<in> set (al @ [a]) \\<Longrightarrow> 0 < f ?a\n  n1 < length (al @ [a]) \\<and> j1 < f ((al @ [a]) ! n1)\n  n2 < length (al @ [a]) \\<and> j2 < f ((al @ [a]) ! n2)\n  lsum f (take n1 (al @ [a])) + j1 = lsum f (take n2 (al @ [a])) + j2\n\ngoal (1 subgoal):\n 1. (0 < f a &&& (\\<And>a'. a' \\<in> set al \\<Longrightarrow> 0 < f a')) &&&\n    n1 < length al + 1 &&& n2 < length al + 1", "by auto"], ["proof (state)\nthis:\n  0 < f a\n  ?a' \\<in> set al \\<Longrightarrow> 0 < f ?a'\n  n1 < length al + 1\n  n2 < length al + 1\n\ngoal (2 subgoals):\n 1. \\<And>n1 n2 j1 j2.\n       \\<lbrakk>\\<And>a. a \\<in> set [] \\<Longrightarrow> 0 < f a;\n        n1 < length [] \\<and> j1 < f ([] ! n1);\n        n2 < length [] \\<and> j2 < f ([] ! n2);\n        lsum f (take n1 []) + j1 = lsum f (take n2 []) + j2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>x xs n1 n2 j1 j2.\n       \\<lbrakk>\\<And>n1 n2 j1 j2.\n                   \\<lbrakk>\\<And>a.\n                               a \\<in> set xs \\<Longrightarrow> 0 < f a;\n                    n1 < length xs \\<and> j1 < f (xs ! n1);\n                    n2 < length xs \\<and> j2 < f (xs ! n2);\n                    lsum f (take n1 xs) + j1 =\n                    lsum f (take n2 xs) + j2\\<rbrakk>\n                   \\<Longrightarrow> n1 = n2 \\<and> j1 = j2;\n        \\<And>a. a \\<in> set (xs @ [x]) \\<Longrightarrow> 0 < f a;\n        n1 < length (xs @ [x]) \\<and> j1 < f ((xs @ [x]) ! n1);\n        n2 < length (xs @ [x]) \\<and> j2 < f ((xs @ [x]) ! n2);\n        lsum f (take n1 (xs @ [x])) + j1 =\n        lsum f (take n2 (xs @ [x])) + j2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "from n1"], ["proof (chain)\npicking this:\n  n1 < length al + 1", "show ?case"], ["proof (prove)\nusing this:\n  n1 < length al + 1\n\ngoal (1 subgoal):\n 1. n1 = n2 \\<and> j1 = j2", "proof(cases rule: less_plus_elim)"], ["proof (state)\ngoal (2 subgoals):\n 1. n1 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n1 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "case Left"], ["proof (state)\nthis:\n  n1 < length al\n\ngoal (2 subgoals):\n 1. n1 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n1 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "note n1 = Left"], ["proof (state)\nthis:\n  n1 < length al\n\ngoal (2 subgoals):\n 1. n1 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n1 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "hence j1: \"j1 < f (al ! n1)\""], ["proof (prove)\nusing this:\n  n1 < length al\n\ngoal (1 subgoal):\n 1. j1 < f (al ! n1)", "using snoc"], ["proof (prove)\nusing this:\n  n1 < length al\n  \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n   ?n1.0 < length al \\<and> ?j1.0 < f (al ! ?n1.0);\n   ?n2.0 < length al \\<and> ?j2.0 < f (al ! ?n2.0);\n   lsum f (take ?n1.0 al) + ?j1.0 = lsum f (take ?n2.0 al) + ?j2.0\\<rbrakk>\n  \\<Longrightarrow> ?n1.0 = ?n2.0 \\<and> ?j1.0 = ?j2.0\n  ?a \\<in> set (al @ [a]) \\<Longrightarrow> 0 < f ?a\n  n1 < length (al @ [a]) \\<and> j1 < f ((al @ [a]) ! n1)\n  n2 < length (al @ [a]) \\<and> j2 < f ((al @ [a]) ! n2)\n  lsum f (take n1 (al @ [a])) + j1 = lsum f (take n2 (al @ [a])) + j2\n\ngoal (1 subgoal):\n 1. j1 < f (al ! n1)", "by auto"], ["proof (state)\nthis:\n  j1 < f (al ! n1)\n\ngoal (2 subgoals):\n 1. n1 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n1 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "obtain al' where al: \"al = (take n1 al) @ ((al ! n1) # al')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>al'.\n        al = take n1 al @ al ! n1 # al' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using n1"], ["proof (prove)\nusing this:\n  n1 < length al\n\ngoal (1 subgoal):\n 1. (\\<And>al'.\n        al = take n1 al @ al ! n1 # al' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis append_take_drop_id Cons_nth_drop_Suc)"], ["proof (state)\nthis:\n  al = take n1 al @ al ! n1 # al'\n\ngoal (2 subgoals):\n 1. n1 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n1 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "have \"j1 < lsum f ((al ! n1) # al')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j1 < lsum f (al ! n1 # al')", "using pos j1"], ["proof (prove)\nusing this:\n  0 < f a\n  ?a' \\<in> set al \\<Longrightarrow> 0 < f ?a'\n  j1 < f (al ! n1)\n\ngoal (1 subgoal):\n 1. j1 < lsum f (al ! n1 # al')", "unfolding lsum_def"], ["proof (prove)\nusing this:\n  0 < f a\n  ?a' \\<in> set al \\<Longrightarrow> 0 < f ?a'\n  j1 < f (al ! n1)\n\ngoal (1 subgoal):\n 1. j1 < sum_list (map f (al ! n1 # al'))", "by simp"], ["proof (state)\nthis:\n  j1 < lsum f (al ! n1 # al')\n\ngoal (2 subgoals):\n 1. n1 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n1 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "hence \"lsum f (take n1 al) + j1 < lsum f (take n1 al) + lsum f ((al ! n1) # al')\""], ["proof (prove)\nusing this:\n  j1 < lsum f (al ! n1 # al')\n\ngoal (1 subgoal):\n 1. lsum f (take n1 al) + j1 < lsum f (take n1 al) + lsum f (al ! n1 # al')", "by simp"], ["proof (state)\nthis:\n  lsum f (take n1 al) + j1 < lsum f (take n1 al) + lsum f (al ! n1 # al')\n\ngoal (2 subgoals):\n 1. n1 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n1 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "also"], ["proof (state)\nthis:\n  lsum f (take n1 al) + j1 < lsum f (take n1 al) + lsum f (al ! n1 # al')\n\ngoal (2 subgoals):\n 1. n1 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n1 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "have \"... = lsum f al\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lsum f (take n1 al) + lsum f (al ! n1 # al') = lsum f al", "unfolding lsum_append[THEN sym]"], ["proof (prove)\ngoal (1 subgoal):\n 1. lsum f (take n1 al @ al ! n1 # al') = lsum f al", "using al"], ["proof (prove)\nusing this:\n  al = take n1 al @ al ! n1 # al'\n\ngoal (1 subgoal):\n 1. lsum f (take n1 al @ al ! n1 # al') = lsum f al", "by simp"], ["proof (state)\nthis:\n  lsum f (take n1 al) + lsum f (al ! n1 # al') = lsum f al\n\ngoal (2 subgoals):\n 1. n1 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n1 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "finally"], ["proof (chain)\npicking this:\n  lsum f (take n1 al) + j1 < lsum f al", "have lsum1: \"lsum f (take n1 al) + j1 < lsum f al\""], ["proof (prove)\nusing this:\n  lsum f (take n1 al) + j1 < lsum f al\n\ngoal (1 subgoal):\n 1. lsum f (take n1 al) + j1 < lsum f al", "."], ["proof (state)\nthis:\n  lsum f (take n1 al) + j1 < lsum f al\n\ngoal (2 subgoals):\n 1. n1 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n1 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "from n2"], ["proof (chain)\npicking this:\n  n2 < length al + 1", "show ?thesis"], ["proof (prove)\nusing this:\n  n2 < length al + 1\n\ngoal (1 subgoal):\n 1. n1 = n2 \\<and> j1 = j2", "proof(cases rule: less_plus_elim)"], ["proof (state)\ngoal (2 subgoals):\n 1. n2 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "case Left"], ["proof (state)\nthis:\n  n2 < length al\n\ngoal (2 subgoals):\n 1. n2 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "note n2 = Left"], ["proof (state)\nthis:\n  n2 < length al\n\ngoal (2 subgoals):\n 1. n2 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "hence j2: \"j2 < f (al ! n2)\""], ["proof (prove)\nusing this:\n  n2 < length al\n\ngoal (1 subgoal):\n 1. j2 < f (al ! n2)", "using snoc"], ["proof (prove)\nusing this:\n  n2 < length al\n  \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n   ?n1.0 < length al \\<and> ?j1.0 < f (al ! ?n1.0);\n   ?n2.0 < length al \\<and> ?j2.0 < f (al ! ?n2.0);\n   lsum f (take ?n1.0 al) + ?j1.0 = lsum f (take ?n2.0 al) + ?j2.0\\<rbrakk>\n  \\<Longrightarrow> ?n1.0 = ?n2.0 \\<and> ?j1.0 = ?j2.0\n  ?a \\<in> set (al @ [a]) \\<Longrightarrow> 0 < f ?a\n  n1 < length (al @ [a]) \\<and> j1 < f ((al @ [a]) ! n1)\n  n2 < length (al @ [a]) \\<and> j2 < f ((al @ [a]) ! n2)\n  lsum f (take n1 (al @ [a])) + j1 = lsum f (take n2 (al @ [a])) + j2\n\ngoal (1 subgoal):\n 1. j2 < f (al ! n2)", "by auto"], ["proof (state)\nthis:\n  j2 < f (al ! n2)\n\ngoal (2 subgoals):\n 1. n2 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. n1 = n2 \\<and> j1 = j2", "apply(rule snoc(1))"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a\n 2. n1 < length al \\<and> j1 < f (al ! n1)\n 3. n2 < length al \\<and> j2 < f (al ! n2)\n 4. lsum f (take n1 al) + j1 = lsum f (take n2 al) + j2", "using snoc"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n   ?n1.0 < length al \\<and> ?j1.0 < f (al ! ?n1.0);\n   ?n2.0 < length al \\<and> ?j2.0 < f (al ! ?n2.0);\n   lsum f (take ?n1.0 al) + ?j1.0 = lsum f (take ?n2.0 al) + ?j2.0\\<rbrakk>\n  \\<Longrightarrow> ?n1.0 = ?n2.0 \\<and> ?j1.0 = ?j2.0\n  ?a \\<in> set (al @ [a]) \\<Longrightarrow> 0 < f ?a\n  n1 < length (al @ [a]) \\<and> j1 < f ((al @ [a]) ! n1)\n  n2 < length (al @ [a]) \\<and> j2 < f ((al @ [a]) ! n2)\n  lsum f (take n1 (al @ [a])) + j1 = lsum f (take n2 (al @ [a])) + j2\n\ngoal (4 subgoals):\n 1. \\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a\n 2. n1 < length al \\<and> j1 < f (al ! n1)\n 3. n2 < length al \\<and> j2 < f (al ! n2)\n 4. lsum f (take n1 al) + j1 = lsum f (take n2 al) + j2", "using pos n1 j1 n2 j2"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n   ?n1.0 < length al \\<and> ?j1.0 < f (al ! ?n1.0);\n   ?n2.0 < length al \\<and> ?j2.0 < f (al ! ?n2.0);\n   lsum f (take ?n1.0 al) + ?j1.0 = lsum f (take ?n2.0 al) + ?j2.0\\<rbrakk>\n  \\<Longrightarrow> ?n1.0 = ?n2.0 \\<and> ?j1.0 = ?j2.0\n  ?a \\<in> set (al @ [a]) \\<Longrightarrow> 0 < f ?a\n  n1 < length (al @ [a]) \\<and> j1 < f ((al @ [a]) ! n1)\n  n2 < length (al @ [a]) \\<and> j2 < f ((al @ [a]) ! n2)\n  lsum f (take n1 (al @ [a])) + j1 = lsum f (take n2 (al @ [a])) + j2\n  0 < f a\n  ?a' \\<in> set al \\<Longrightarrow> 0 < f ?a'\n  n1 < length al\n  j1 < f (al ! n1)\n  n2 < length al\n  j2 < f (al ! n2)\n\ngoal (4 subgoals):\n 1. \\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a\n 2. n1 < length al \\<and> j1 < f (al ! n1)\n 3. n2 < length al \\<and> j2 < f (al ! n2)\n 4. lsum f (take n1 al) + j1 = lsum f (take n2 al) + j2", "by auto"], ["proof (state)\nthis:\n  n1 = n2 \\<and> j1 = j2\n\ngoal (1 subgoal):\n 1. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "case Right"], ["proof (state)\nthis:\n  i2_ < 1\n  n2 = length al + i2_\n\ngoal (1 subgoal):\n 1. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "hence n2: \"n2 = length al\""], ["proof (prove)\nusing this:\n  i2_ < 1\n  n2 = length al + i2_\n\ngoal (1 subgoal):\n 1. n2 = length al", "by simp"], ["proof (state)\nthis:\n  n2 = length al\n\ngoal (1 subgoal):\n 1. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "hence j2: \"j2 < f a\""], ["proof (prove)\nusing this:\n  n2 = length al\n\ngoal (1 subgoal):\n 1. j2 < f a", "using snoc"], ["proof (prove)\nusing this:\n  n2 = length al\n  \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n   ?n1.0 < length al \\<and> ?j1.0 < f (al ! ?n1.0);\n   ?n2.0 < length al \\<and> ?j2.0 < f (al ! ?n2.0);\n   lsum f (take ?n1.0 al) + ?j1.0 = lsum f (take ?n2.0 al) + ?j2.0\\<rbrakk>\n  \\<Longrightarrow> ?n1.0 = ?n2.0 \\<and> ?j1.0 = ?j2.0\n  ?a \\<in> set (al @ [a]) \\<Longrightarrow> 0 < f ?a\n  n1 < length (al @ [a]) \\<and> j1 < f ((al @ [a]) ! n1)\n  n2 < length (al @ [a]) \\<and> j2 < f ((al @ [a]) ! n2)\n  lsum f (take n1 (al @ [a])) + j1 = lsum f (take n2 (al @ [a])) + j2\n\ngoal (1 subgoal):\n 1. j2 < f a", "by simp"], ["proof (state)\nthis:\n  j2 < f a\n\ngoal (1 subgoal):\n 1. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "have \"lsum f (take n1 al) + j1 = lsum f al + j2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lsum f (take n1 al) + j1 = lsum f al + j2", "using n1 n2 snoc"], ["proof (prove)\nusing this:\n  n1 < length al\n  n2 = length al\n  \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n   ?n1.0 < length al \\<and> ?j1.0 < f (al ! ?n1.0);\n   ?n2.0 < length al \\<and> ?j2.0 < f (al ! ?n2.0);\n   lsum f (take ?n1.0 al) + ?j1.0 = lsum f (take ?n2.0 al) + ?j2.0\\<rbrakk>\n  \\<Longrightarrow> ?n1.0 = ?n2.0 \\<and> ?j1.0 = ?j2.0\n  ?a \\<in> set (al @ [a]) \\<Longrightarrow> 0 < f ?a\n  n1 < length (al @ [a]) \\<and> j1 < f ((al @ [a]) ! n1)\n  n2 < length (al @ [a]) \\<and> j2 < f ((al @ [a]) ! n2)\n  lsum f (take n1 (al @ [a])) + j1 = lsum f (take n2 (al @ [a])) + j2\n\ngoal (1 subgoal):\n 1. lsum f (take n1 al) + j1 = lsum f al + j2", "by simp"], ["proof (state)\nthis:\n  lsum f (take n1 al) + j1 = lsum f al + j2\n\ngoal (1 subgoal):\n 1. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "hence False"], ["proof (prove)\nusing this:\n  lsum f (take n1 al) + j1 = lsum f al + j2\n\ngoal (1 subgoal):\n 1. False", "using lsum1"], ["proof (prove)\nusing this:\n  lsum f (take n1 al) + j1 = lsum f al + j2\n  lsum f (take n1 al) + j1 < lsum f al\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. n1 = n2 \\<and> j1 = j2", "by simp"], ["proof (state)\nthis:\n  n1 = n2 \\<and> j1 = j2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  n1 = n2 \\<and> j1 = j2\n\ngoal (1 subgoal):\n 1. \\<And>i2.\n       \\<lbrakk>i2 < 1; n1 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i2.\n       \\<lbrakk>i2 < 1; n1 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "case Right"], ["proof (state)\nthis:\n  i2_ < 1\n  n1 = length al + i2_\n\ngoal (1 subgoal):\n 1. \\<And>i2.\n       \\<lbrakk>i2 < 1; n1 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "hence n1: \"n1 = length al\""], ["proof (prove)\nusing this:\n  i2_ < 1\n  n1 = length al + i2_\n\ngoal (1 subgoal):\n 1. n1 = length al", "by simp"], ["proof (state)\nthis:\n  n1 = length al\n\ngoal (1 subgoal):\n 1. \\<And>i2.\n       \\<lbrakk>i2 < 1; n1 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "hence j1: \"j1 < f a\""], ["proof (prove)\nusing this:\n  n1 = length al\n\ngoal (1 subgoal):\n 1. j1 < f a", "using snoc"], ["proof (prove)\nusing this:\n  n1 = length al\n  \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n   ?n1.0 < length al \\<and> ?j1.0 < f (al ! ?n1.0);\n   ?n2.0 < length al \\<and> ?j2.0 < f (al ! ?n2.0);\n   lsum f (take ?n1.0 al) + ?j1.0 = lsum f (take ?n2.0 al) + ?j2.0\\<rbrakk>\n  \\<Longrightarrow> ?n1.0 = ?n2.0 \\<and> ?j1.0 = ?j2.0\n  ?a \\<in> set (al @ [a]) \\<Longrightarrow> 0 < f ?a\n  n1 < length (al @ [a]) \\<and> j1 < f ((al @ [a]) ! n1)\n  n2 < length (al @ [a]) \\<and> j2 < f ((al @ [a]) ! n2)\n  lsum f (take n1 (al @ [a])) + j1 = lsum f (take n2 (al @ [a])) + j2\n\ngoal (1 subgoal):\n 1. j1 < f a", "by simp"], ["proof (state)\nthis:\n  j1 < f a\n\ngoal (1 subgoal):\n 1. \\<And>i2.\n       \\<lbrakk>i2 < 1; n1 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "from n2"], ["proof (chain)\npicking this:\n  n2 < length al + 1", "show ?thesis"], ["proof (prove)\nusing this:\n  n2 < length al + 1\n\ngoal (1 subgoal):\n 1. n1 = n2 \\<and> j1 = j2", "proof(cases rule: less_plus_elim)"], ["proof (state)\ngoal (2 subgoals):\n 1. n2 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "case Left"], ["proof (state)\nthis:\n  n2 < length al\n\ngoal (2 subgoals):\n 1. n2 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "note n2 = Left"], ["proof (state)\nthis:\n  n2 < length al\n\ngoal (2 subgoals):\n 1. n2 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "hence j2: \"j2 < f (al ! n2)\""], ["proof (prove)\nusing this:\n  n2 < length al\n\ngoal (1 subgoal):\n 1. j2 < f (al ! n2)", "using snoc"], ["proof (prove)\nusing this:\n  n2 < length al\n  \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n   ?n1.0 < length al \\<and> ?j1.0 < f (al ! ?n1.0);\n   ?n2.0 < length al \\<and> ?j2.0 < f (al ! ?n2.0);\n   lsum f (take ?n1.0 al) + ?j1.0 = lsum f (take ?n2.0 al) + ?j2.0\\<rbrakk>\n  \\<Longrightarrow> ?n1.0 = ?n2.0 \\<and> ?j1.0 = ?j2.0\n  ?a \\<in> set (al @ [a]) \\<Longrightarrow> 0 < f ?a\n  n1 < length (al @ [a]) \\<and> j1 < f ((al @ [a]) ! n1)\n  n2 < length (al @ [a]) \\<and> j2 < f ((al @ [a]) ! n2)\n  lsum f (take n1 (al @ [a])) + j1 = lsum f (take n2 (al @ [a])) + j2\n\ngoal (1 subgoal):\n 1. j2 < f (al ! n2)", "by auto"], ["proof (state)\nthis:\n  j2 < f (al ! n2)\n\ngoal (2 subgoals):\n 1. n2 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "obtain al' where al: \"al = (take n2 al) @ ((al ! n2) # al')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>al'.\n        al = take n2 al @ al ! n2 # al' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using n2"], ["proof (prove)\nusing this:\n  n2 < length al\n\ngoal (1 subgoal):\n 1. (\\<And>al'.\n        al = take n2 al @ al ! n2 # al' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis append_take_drop_id Cons_nth_drop_Suc)"], ["proof (state)\nthis:\n  al = take n2 al @ al ! n2 # al'\n\ngoal (2 subgoals):\n 1. n2 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "have \"j2 < lsum f ((al ! n2) # al')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j2 < lsum f (al ! n2 # al')", "using pos j2"], ["proof (prove)\nusing this:\n  0 < f a\n  ?a' \\<in> set al \\<Longrightarrow> 0 < f ?a'\n  j2 < f (al ! n2)\n\ngoal (1 subgoal):\n 1. j2 < lsum f (al ! n2 # al')", "unfolding lsum_def"], ["proof (prove)\nusing this:\n  0 < f a\n  ?a' \\<in> set al \\<Longrightarrow> 0 < f ?a'\n  j2 < f (al ! n2)\n\ngoal (1 subgoal):\n 1. j2 < sum_list (map f (al ! n2 # al'))", "by simp"], ["proof (state)\nthis:\n  j2 < lsum f (al ! n2 # al')\n\ngoal (2 subgoals):\n 1. n2 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "hence \"lsum f (take n2 al) + j2 < lsum f (take n2 al) + lsum f ((al ! n2) # al')\""], ["proof (prove)\nusing this:\n  j2 < lsum f (al ! n2 # al')\n\ngoal (1 subgoal):\n 1. lsum f (take n2 al) + j2 < lsum f (take n2 al) + lsum f (al ! n2 # al')", "by simp"], ["proof (state)\nthis:\n  lsum f (take n2 al) + j2 < lsum f (take n2 al) + lsum f (al ! n2 # al')\n\ngoal (2 subgoals):\n 1. n2 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "also"], ["proof (state)\nthis:\n  lsum f (take n2 al) + j2 < lsum f (take n2 al) + lsum f (al ! n2 # al')\n\ngoal (2 subgoals):\n 1. n2 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "have \"... = lsum f al\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lsum f (take n2 al) + lsum f (al ! n2 # al') = lsum f al", "unfolding lsum_append[THEN sym]"], ["proof (prove)\ngoal (1 subgoal):\n 1. lsum f (take n2 al @ al ! n2 # al') = lsum f al", "using al"], ["proof (prove)\nusing this:\n  al = take n2 al @ al ! n2 # al'\n\ngoal (1 subgoal):\n 1. lsum f (take n2 al @ al ! n2 # al') = lsum f al", "by simp"], ["proof (state)\nthis:\n  lsum f (take n2 al) + lsum f (al ! n2 # al') = lsum f al\n\ngoal (2 subgoals):\n 1. n2 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "finally"], ["proof (chain)\npicking this:\n  lsum f (take n2 al) + j2 < lsum f al", "have lsum2: \"lsum f (take n2 al) + j2 < lsum f al\""], ["proof (prove)\nusing this:\n  lsum f (take n2 al) + j2 < lsum f al\n\ngoal (1 subgoal):\n 1. lsum f (take n2 al) + j2 < lsum f al", "."], ["proof (state)\nthis:\n  lsum f (take n2 al) + j2 < lsum f al\n\ngoal (2 subgoals):\n 1. n2 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "have \"lsum f al + j1 = lsum f (take n2 al) + j2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lsum f al + j1 = lsum f (take n2 al) + j2", "using n1 n2 snoc"], ["proof (prove)\nusing this:\n  n1 = length al\n  n2 < length al\n  \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n   ?n1.0 < length al \\<and> ?j1.0 < f (al ! ?n1.0);\n   ?n2.0 < length al \\<and> ?j2.0 < f (al ! ?n2.0);\n   lsum f (take ?n1.0 al) + ?j1.0 = lsum f (take ?n2.0 al) + ?j2.0\\<rbrakk>\n  \\<Longrightarrow> ?n1.0 = ?n2.0 \\<and> ?j1.0 = ?j2.0\n  ?a \\<in> set (al @ [a]) \\<Longrightarrow> 0 < f ?a\n  n1 < length (al @ [a]) \\<and> j1 < f ((al @ [a]) ! n1)\n  n2 < length (al @ [a]) \\<and> j2 < f ((al @ [a]) ! n2)\n  lsum f (take n1 (al @ [a])) + j1 = lsum f (take n2 (al @ [a])) + j2\n\ngoal (1 subgoal):\n 1. lsum f al + j1 = lsum f (take n2 al) + j2", "by simp"], ["proof (state)\nthis:\n  lsum f al + j1 = lsum f (take n2 al) + j2\n\ngoal (2 subgoals):\n 1. n2 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "hence False"], ["proof (prove)\nusing this:\n  lsum f al + j1 = lsum f (take n2 al) + j2\n\ngoal (1 subgoal):\n 1. False", "using lsum2"], ["proof (prove)\nusing this:\n  lsum f al + j1 = lsum f (take n2 al) + j2\n  lsum f (take n2 al) + j2 < lsum f al\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. n2 < length al \\<Longrightarrow> n1 = n2 \\<and> j1 = j2\n 2. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. n1 = n2 \\<and> j1 = j2", "by simp"], ["proof (state)\nthis:\n  n1 = n2 \\<and> j1 = j2\n\ngoal (1 subgoal):\n 1. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "case Right"], ["proof (state)\nthis:\n  i2_ < 1\n  n2 = length al + i2_\n\ngoal (1 subgoal):\n 1. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "hence n2: \"n2 = length al\""], ["proof (prove)\nusing this:\n  i2_ < 1\n  n2 = length al + i2_\n\ngoal (1 subgoal):\n 1. n2 = length al", "by simp"], ["proof (state)\nthis:\n  n2 = length al\n\ngoal (1 subgoal):\n 1. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "have \"j1 = j2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j1 = j2", "using n1 n2 snoc"], ["proof (prove)\nusing this:\n  n1 = length al\n  n2 = length al\n  \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n   ?n1.0 < length al \\<and> ?j1.0 < f (al ! ?n1.0);\n   ?n2.0 < length al \\<and> ?j2.0 < f (al ! ?n2.0);\n   lsum f (take ?n1.0 al) + ?j1.0 = lsum f (take ?n2.0 al) + ?j2.0\\<rbrakk>\n  \\<Longrightarrow> ?n1.0 = ?n2.0 \\<and> ?j1.0 = ?j2.0\n  ?a \\<in> set (al @ [a]) \\<Longrightarrow> 0 < f ?a\n  n1 < length (al @ [a]) \\<and> j1 < f ((al @ [a]) ! n1)\n  n2 < length (al @ [a]) \\<and> j2 < f ((al @ [a]) ! n2)\n  lsum f (take n1 (al @ [a])) + j1 = lsum f (take n2 (al @ [a])) + j2\n\ngoal (1 subgoal):\n 1. j1 = j2", "by simp"], ["proof (state)\nthis:\n  j1 = j2\n\ngoal (1 subgoal):\n 1. \\<And>i2.\n       \\<lbrakk>i2 < 1; n2 = length al + i2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "thus ?thesis"], ["proof (prove)\nusing this:\n  j1 = j2\n\ngoal (1 subgoal):\n 1. n1 = n2 \\<and> j1 = j2", "using n1 n2"], ["proof (prove)\nusing this:\n  j1 = j2\n  n1 = length al\n  n2 = length al\n\ngoal (1 subgoal):\n 1. n1 = n2 \\<and> j1 = j2", "by simp"], ["proof (state)\nthis:\n  n1 = n2 \\<and> j1 = j2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  n1 = n2 \\<and> j1 = j2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  n1 = n2 \\<and> j1 = j2\n\ngoal (1 subgoal):\n 1. \\<And>n1 n2 j1 j2.\n       \\<lbrakk>\\<And>a. a \\<in> set [] \\<Longrightarrow> 0 < f a;\n        n1 < length [] \\<and> j1 < f ([] ! n1);\n        n2 < length [] \\<and> j2 < f ([] ! n2);\n        lsum f (take n1 []) + j1 = lsum f (take n2 []) + j2\\<rbrakk>\n       \\<Longrightarrow> n1 = n2 \\<and> j1 = j2", "qed auto"], ["", "definition locate_pred where\n\"locate_pred f al (i::nat) n_j \\<equiv>\n fst n_j < length al \\<and>\n snd n_j < f (al ! (fst n_j)) \\<and>\n i = lsum f (take (fst n_j) al) + (snd n_j)\""], ["", "definition locate where\n\"locate f al i \\<equiv> SOME n_j. locate_pred f al i n_j\""], ["", "definition locate1 where \"locate1 f al i \\<equiv> fst (locate f al i)\""], ["", "definition locate2 where \"locate2 f al i \\<equiv> snd (locate f al i)\""], ["", "lemma locate_pred_ex:\nassumes \"\\<And> a. a \\<in> set al \\<Longrightarrow> 0 < f a\"\nand \"i < lsum f al\"\nshows \"\\<exists> n_j. locate_pred f al i n_j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n_j. locate_pred f al i n_j", "using assms less_lsum_nchotomy"], ["proof (prove)\nusing this:\n  ?a \\<in> set al \\<Longrightarrow> 0 < f ?a\n  i < lsum f al\n  \\<lbrakk>\\<And>a. a \\<in> set ?al \\<Longrightarrow> 0 < ?f a;\n   ?i < lsum ?f ?al\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n j.\n                       n < length ?al \\<and>\n                       j < ?f (?al ! n) \\<and> ?i = lsum ?f (take n ?al) + j\n\ngoal (1 subgoal):\n 1. \\<exists>n_j. locate_pred f al i n_j", "unfolding locate_pred_def"], ["proof (prove)\nusing this:\n  ?a \\<in> set al \\<Longrightarrow> 0 < f ?a\n  i < lsum f al\n  \\<lbrakk>\\<And>a. a \\<in> set ?al \\<Longrightarrow> 0 < ?f a;\n   ?i < lsum ?f ?al\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n j.\n                       n < length ?al \\<and>\n                       j < ?f (?al ! n) \\<and> ?i = lsum ?f (take n ?al) + j\n\ngoal (1 subgoal):\n 1. \\<exists>n_j.\n       fst n_j < length al \\<and>\n       snd n_j < f (al ! fst n_j) \\<and>\n       i = lsum f (take (fst n_j) al) + snd n_j", "by force"], ["", "lemma locate_pred_unique:\nassumes \"\\<And> a. a \\<in> set al \\<Longrightarrow> 0 < f a\"\nand \"locate_pred f al i n1_j1\" \"locate_pred f al i n2_j2\"\nshows \"n1_j1 = n2_j2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n1_j1 = n2_j2", "using assms less_lsum_unique"], ["proof (prove)\nusing this:\n  ?a \\<in> set al \\<Longrightarrow> 0 < f ?a\n  locate_pred f al i n1_j1\n  locate_pred f al i n2_j2\n  \\<lbrakk>\\<And>a. a \\<in> set ?al \\<Longrightarrow> 0 < ?f a;\n   ?n1.0 < length ?al \\<and> ?j1.0 < ?f (?al ! ?n1.0);\n   ?n2.0 < length ?al \\<and> ?j2.0 < ?f (?al ! ?n2.0);\n   lsum ?f (take ?n1.0 ?al) + ?j1.0 =\n   lsum ?f (take ?n2.0 ?al) + ?j2.0\\<rbrakk>\n  \\<Longrightarrow> ?n1.0 = ?n2.0 \\<and> ?j1.0 = ?j2.0\n\ngoal (1 subgoal):\n 1. n1_j1 = n2_j2", "unfolding locate_pred_def"], ["proof (prove)\nusing this:\n  ?a \\<in> set al \\<Longrightarrow> 0 < f ?a\n  fst n1_j1 < length al \\<and>\n  snd n1_j1 < f (al ! fst n1_j1) \\<and>\n  i = lsum f (take (fst n1_j1) al) + snd n1_j1\n  fst n2_j2 < length al \\<and>\n  snd n2_j2 < f (al ! fst n2_j2) \\<and>\n  i = lsum f (take (fst n2_j2) al) + snd n2_j2\n  \\<lbrakk>\\<And>a. a \\<in> set ?al \\<Longrightarrow> 0 < ?f a;\n   ?n1.0 < length ?al \\<and> ?j1.0 < ?f (?al ! ?n1.0);\n   ?n2.0 < length ?al \\<and> ?j2.0 < ?f (?al ! ?n2.0);\n   lsum ?f (take ?n1.0 ?al) + ?j1.0 =\n   lsum ?f (take ?n2.0 ?al) + ?j2.0\\<rbrakk>\n  \\<Longrightarrow> ?n1.0 = ?n2.0 \\<and> ?j1.0 = ?j2.0\n\ngoal (1 subgoal):\n 1. n1_j1 = n2_j2", "apply(cases n1_j1, cases n2_j2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n        fst n1_j1 < length al \\<and>\n        snd n1_j1 < f (al ! fst n1_j1) \\<and>\n        i = lsum f (take (fst n1_j1) al) + snd n1_j1;\n        fst n2_j2 < length al \\<and>\n        snd n2_j2 < f (al ! fst n2_j2) \\<and>\n        i = lsum f (take (fst n2_j2) al) + snd n2_j2;\n        \\<And>al f n1 j1 n2 j2.\n           \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n            n1 < length al \\<and> j1 < f (al ! n1);\n            n2 < length al \\<and> j2 < f (al ! n2);\n            lsum f (take n1 al) + j1 = lsum f (take n2 al) + j2\\<rbrakk>\n           \\<Longrightarrow> n1 = n2 \\<and> j1 = j2;\n        n1_j1 = (a, b); \\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n        fst n1_j1 < length al \\<and>\n        snd n1_j1 < f (al ! fst n1_j1) \\<and>\n        i = lsum f (take (fst n1_j1) al) + snd n1_j1;\n        fst n2_j2 < length al \\<and>\n        snd n2_j2 < f (al ! fst n2_j2) \\<and>\n        i = lsum f (take (fst n2_j2) al) + snd n2_j2;\n        \\<And>al f n1 j1 n2 j2.\n           \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n            n1 < length al \\<and> j1 < f (al ! n1);\n            n2 < length al \\<and> j2 < f (al ! n2);\n            lsum f (take n1 al) + j1 = lsum f (take n2 al) + j2\\<rbrakk>\n           \\<Longrightarrow> n1 = n2 \\<and> j1 = j2;\n        n2_j2 = (aa, ba)\\<rbrakk>\n       \\<Longrightarrow> n1_j1 = n2_j2", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>a < length al \\<and>\n                b < f (al ! a) \\<and>\n                lsum f (take aa al) + ba = lsum f (take a al) + b;\n        aa < length al \\<and> ba < f (al ! aa);\n        \\<And>al f n1 j1 n2 j2.\n           \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n            n1 < length al \\<and> j1 < f (al ! n1);\n            n2 < length al \\<and> j2 < f (al ! n2);\n            lsum f (take n1 al) + j1 = lsum f (take n2 al) + j2\\<rbrakk>\n           \\<Longrightarrow> n1 = n2 \\<and> j1 = j2;\n        n1_j1 = (a, b); \\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n        i = lsum f (take a al) + b;\n        \\<And>al f n1 j1 n2 j2.\n           \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n            n1 < length al \\<and> j1 < f (al ! n1);\n            n2 < length al \\<and> j2 < f (al ! n2);\n            lsum f (take n1 al) + j1 = lsum f (take n2 al) + j2\\<rbrakk>\n           \\<Longrightarrow> n1 = n2 \\<and> j1 = j2;\n        n2_j2 = (aa, ba)\\<rbrakk>\n       \\<Longrightarrow> a = aa \\<and> b = ba", "by blast"], ["", "lemma locate_locate_pred:\nassumes \"\\<And> a. a \\<in> set al \\<Longrightarrow> (0::nat) < f a\"\nand \"i < lsum f al\"\nshows \"locate_pred f al i (locate f al i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. locate_pred f al i (locate f al i)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. locate_pred f al i (locate f al i)", "obtain n_j where \"locate_pred f al i n_j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n_j.\n        locate_pred f al i n_j \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms locate_pred_ex[of al f i]"], ["proof (prove)\nusing this:\n  ?a \\<in> set al \\<Longrightarrow> 0 < f ?a\n  i < lsum f al\n  \\<lbrakk>\\<And>a. a \\<in> set al \\<Longrightarrow> 0 < f a;\n   i < lsum f al\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n_j. locate_pred f al i n_j\n\ngoal (1 subgoal):\n 1. (\\<And>n_j.\n        locate_pred f al i n_j \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  locate_pred f al i n_j\n\ngoal (1 subgoal):\n 1. locate_pred f al i (locate f al i)", "thus ?thesis"], ["proof (prove)\nusing this:\n  locate_pred f al i n_j\n\ngoal (1 subgoal):\n 1. locate_pred f al i (locate f al i)", "unfolding locate_def"], ["proof (prove)\nusing this:\n  locate_pred f al i n_j\n\ngoal (1 subgoal):\n 1. locate_pred f al i (SOME n_j. locate_pred f al i n_j)", "apply(intro someI[of \"locate_pred f al i\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. locate_pred f al i n_j \\<Longrightarrow> locate_pred f al i ?x1", "by blast"], ["proof (state)\nthis:\n  locate_pred f al i (locate f al i)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma locate_locate_pred_unique:\nassumes \"\\<And> a. a \\<in> set al \\<Longrightarrow> (0::nat) < f a\"\nand \"locate_pred f al i n_j\"\nshows \"n_j = locate f al i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n_j = locate f al i", "unfolding locate_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. n_j = (SOME n_j. locate_pred f al i n_j)", "apply(rule sym, rule some_equality)"], ["proof (prove)\ngoal (2 subgoals):\n 1. locate_pred f al i n_j\n 2. \\<And>n_ja. locate_pred f al i n_ja \\<Longrightarrow> n_ja = n_j", "using assms locate_locate_pred"], ["proof (prove)\nusing this:\n  ?a \\<in> set al \\<Longrightarrow> 0 < f ?a\n  locate_pred f al i n_j\n  \\<lbrakk>\\<And>a. a \\<in> set ?al \\<Longrightarrow> 0 < ?f a;\n   ?i < lsum ?f ?al\\<rbrakk>\n  \\<Longrightarrow> locate_pred ?f ?al ?i (locate ?f ?al ?i)\n\ngoal (2 subgoals):\n 1. locate_pred f al i n_j\n 2. \\<And>n_ja. locate_pred f al i n_ja \\<Longrightarrow> n_ja = n_j", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n_ja. locate_pred f al i n_ja \\<Longrightarrow> n_ja = n_j", "using assms locate_pred_unique"], ["proof (prove)\nusing this:\n  ?a \\<in> set al \\<Longrightarrow> 0 < f ?a\n  locate_pred f al i n_j\n  \\<lbrakk>\\<And>a. a \\<in> set ?al \\<Longrightarrow> 0 < ?f a;\n   locate_pred ?f ?al ?i ?n1_j1.0; locate_pred ?f ?al ?i ?n2_j2.0\\<rbrakk>\n  \\<Longrightarrow> ?n1_j1.0 = ?n2_j2.0\n\ngoal (1 subgoal):\n 1. \\<And>n_ja. locate_pred f al i n_ja \\<Longrightarrow> n_ja = n_j", "by blast"], ["", "lemma locate:\nassumes \"\\<And> a. a \\<in> set al \\<Longrightarrow> 0 < f a\"\nand \"i < lsum f al\"\nshows \"locate1 f al i < length al \\<and>\n locate2 f al i < f (al ! (locate1 f al i)) \\<and>\n i = lsum f (take (locate1 f al i) al) + (locate2 f al i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. locate1 f al i < length al \\<and>\n    locate2 f al i < f (al ! locate1 f al i) \\<and>\n    i = lsum f (take (locate1 f al i) al) + locate2 f al i", "using assms locate_locate_pred"], ["proof (prove)\nusing this:\n  ?a \\<in> set al \\<Longrightarrow> 0 < f ?a\n  i < lsum f al\n  \\<lbrakk>\\<And>a. a \\<in> set ?al \\<Longrightarrow> 0 < ?f a;\n   ?i < lsum ?f ?al\\<rbrakk>\n  \\<Longrightarrow> locate_pred ?f ?al ?i (locate ?f ?al ?i)\n\ngoal (1 subgoal):\n 1. locate1 f al i < length al \\<and>\n    locate2 f al i < f (al ! locate1 f al i) \\<and>\n    i = lsum f (take (locate1 f al i) al) + locate2 f al i", "unfolding locate1_def locate2_def locate_pred_def"], ["proof (prove)\nusing this:\n  ?a \\<in> set al \\<Longrightarrow> 0 < f ?a\n  i < lsum f al\n  \\<lbrakk>\\<And>a. a \\<in> set ?al \\<Longrightarrow> 0 < ?f a;\n   ?i < lsum ?f ?al\\<rbrakk>\n  \\<Longrightarrow> fst (locate ?f ?al ?i) < length ?al \\<and>\n                    snd (locate ?f ?al ?i)\n                    < ?f (?al ! fst (locate ?f ?al ?i)) \\<and>\n                    ?i =\n                    lsum ?f (take (fst (locate ?f ?al ?i)) ?al) +\n                    snd (locate ?f ?al ?i)\n\ngoal (1 subgoal):\n 1. fst (locate f al i) < length al \\<and>\n    snd (locate f al i) < f (al ! fst (locate f al i)) \\<and>\n    i = lsum f (take (fst (locate f al i)) al) + snd (locate f al i)", "by auto"], ["", "lemma locate_unique:\nassumes \"\\<And> a. a \\<in> set al \\<Longrightarrow> 0 < f a\"\nand \"n < length al\" and \"j < f (al ! n)\" and \"i = lsum f (take n al) + j\"\nshows \"n = locate1 f al i \\<and> j = locate2 f al i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = locate1 f al i \\<and> j = locate2 f al i", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. n = locate1 f al i \\<and> j = locate2 f al i", "define n_j where \"n_j = (n,j)\""], ["proof (state)\nthis:\n  n_j = (n, j)\n\ngoal (1 subgoal):\n 1. n = locate1 f al i \\<and> j = locate2 f al i", "have \"locate_pred f al i n_j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. locate_pred f al i n_j", "using assms"], ["proof (prove)\nusing this:\n  ?a \\<in> set al \\<Longrightarrow> 0 < f ?a\n  n < length al\n  j < f (al ! n)\n  i = lsum f (take n al) + j\n\ngoal (1 subgoal):\n 1. locate_pred f al i n_j", "unfolding n_j_def locate_pred_def"], ["proof (prove)\nusing this:\n  ?a \\<in> set al \\<Longrightarrow> 0 < f ?a\n  n < length al\n  j < f (al ! n)\n  i = lsum f (take n al) + j\n\ngoal (1 subgoal):\n 1. fst (n, j) < length al \\<and>\n    snd (n, j) < f (al ! fst (n, j)) \\<and>\n    i = lsum f (take (fst (n, j)) al) + snd (n, j)", "by auto"], ["proof (state)\nthis:\n  locate_pred f al i n_j\n\ngoal (1 subgoal):\n 1. n = locate1 f al i \\<and> j = locate2 f al i", "hence \"n_j = locate f al i\""], ["proof (prove)\nusing this:\n  locate_pred f al i n_j\n\ngoal (1 subgoal):\n 1. n_j = locate f al i", "using assms locate_locate_pred_unique"], ["proof (prove)\nusing this:\n  locate_pred f al i n_j\n  ?a \\<in> set al \\<Longrightarrow> 0 < f ?a\n  n < length al\n  j < f (al ! n)\n  i = lsum f (take n al) + j\n  \\<lbrakk>\\<And>a. a \\<in> set ?al \\<Longrightarrow> 0 < ?f a;\n   locate_pred ?f ?al ?i ?n_j\\<rbrakk>\n  \\<Longrightarrow> ?n_j = locate ?f ?al ?i\n\ngoal (1 subgoal):\n 1. n_j = locate f al i", "by blast"], ["proof (state)\nthis:\n  n_j = locate f al i\n\ngoal (1 subgoal):\n 1. n = locate1 f al i \\<and> j = locate2 f al i", "thus ?thesis"], ["proof (prove)\nusing this:\n  n_j = locate f al i\n\ngoal (1 subgoal):\n 1. n = locate1 f al i \\<and> j = locate2 f al i", "unfolding n_j_def locate1_def locate2_def"], ["proof (prove)\nusing this:\n  (n, j) = locate f al i\n\ngoal (1 subgoal):\n 1. n = fst (locate f al i) \\<and> j = snd (locate f al i)", "by (metis fst_conv n_j_def snd_conv)"], ["proof (state)\nthis:\n  n = locate1 f al i \\<and> j = locate2 f al i\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>sum:\\<close>"], ["", "lemma sum_2[simp]:\n\"sum f {..< 2} = f 0 + f (Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {..<2} = f 0 + f (Suc 0)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sum f {..<2} = f 0 + f (Suc 0)", "have \"{..< 2} = {0, Suc 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..<2} = {0, Suc 0}", "by auto"], ["proof (state)\nthis:\n  {..<2} = {0, Suc 0}\n\ngoal (1 subgoal):\n 1. sum f {..<2} = f 0 + f (Suc 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  {..<2} = {0, Suc 0}\n\ngoal (1 subgoal):\n 1. sum f {..<2} = f 0 + f (Suc 0)", "by force"], ["proof (state)\nthis:\n  sum f {..<2} = f 0 + f (Suc 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inj_Plus[simp]:\n\"inj ((+) (a::nat))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj ((+) a)", "unfolding inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       \\<forall>y\\<in>UNIV. a + x = a + y \\<longrightarrow> x = y", "by auto"], ["", "lemma inj_on_Plus[simp]:\n\"inj_on ((+) (a::nat)) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on ((+) a) A", "unfolding inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A.\n       \\<forall>y\\<in>A. a + x = a + y \\<longrightarrow> x = y", "by auto"], ["", "lemma Plus_int[simp]:\nfixes a :: nat\nshows \"(+) b ` {..< a} = {b ..< b + a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (+) b ` {..<a} = {b..<b + a}", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x xa. xa < a \\<Longrightarrow> b + xa \\<in> {b..<b + a}\n 2. \\<And>x. x \\<in> {b..<b + a} \\<Longrightarrow> x \\<in> (+) b ` {..<a}", "fix x::nat"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x xa. xa < a \\<Longrightarrow> b + xa \\<in> {b..<b + a}\n 2. \\<And>x. x \\<in> {b..<b + a} \\<Longrightarrow> x \\<in> (+) b ` {..<a}", "assume \"x \\<in> {b..< b + a}\""], ["proof (state)\nthis:\n  x \\<in> {b..<b + a}\n\ngoal (2 subgoals):\n 1. \\<And>x xa. xa < a \\<Longrightarrow> b + xa \\<in> {b..<b + a}\n 2. \\<And>x. x \\<in> {b..<b + a} \\<Longrightarrow> x \\<in> (+) b ` {..<a}", "hence \"b \\<le> x\" and x: \"x < a + b\""], ["proof (prove)\nusing this:\n  x \\<in> {b..<b + a}\n\ngoal (1 subgoal):\n 1. b \\<le> x &&& x < a + b", "by auto"], ["proof (state)\nthis:\n  b \\<le> x\n  x < a + b\n\ngoal (2 subgoals):\n 1. \\<And>x xa. xa < a \\<Longrightarrow> b + xa \\<in> {b..<b + a}\n 2. \\<And>x. x \\<in> {b..<b + a} \\<Longrightarrow> x \\<in> (+) b ` {..<a}", "then"], ["proof (chain)\npicking this:\n  b \\<le> x\n  x < a + b", "obtain y where xb: \"x = b + y\""], ["proof (prove)\nusing this:\n  b \\<le> x\n  x < a + b\n\ngoal (1 subgoal):\n 1. (\\<And>y. x = b + y \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (metis le_iff_add)"], ["proof (state)\nthis:\n  x = b + y\n\ngoal (2 subgoals):\n 1. \\<And>x xa. xa < a \\<Longrightarrow> b + xa \\<in> {b..<b + a}\n 2. \\<And>x. x \\<in> {b..<b + a} \\<Longrightarrow> x \\<in> (+) b ` {..<a}", "hence \"y < a\""], ["proof (prove)\nusing this:\n  x = b + y\n\ngoal (1 subgoal):\n 1. y < a", "using x"], ["proof (prove)\nusing this:\n  x = b + y\n  x < a + b\n\ngoal (1 subgoal):\n 1. y < a", "by simp"], ["proof (state)\nthis:\n  y < a\n\ngoal (2 subgoals):\n 1. \\<And>x xa. xa < a \\<Longrightarrow> b + xa \\<in> {b..<b + a}\n 2. \\<And>x. x \\<in> {b..<b + a} \\<Longrightarrow> x \\<in> (+) b ` {..<a}", "thus \"x \\<in> (+) b ` {..<a}\""], ["proof (prove)\nusing this:\n  y < a\n\ngoal (1 subgoal):\n 1. x \\<in> (+) b ` {..<a}", "using xb"], ["proof (prove)\nusing this:\n  y < a\n  x = b + y\n\ngoal (1 subgoal):\n 1. x \\<in> (+) b ` {..<a}", "by auto"], ["proof (state)\nthis:\n  x \\<in> (+) b ` {..<a}\n\ngoal (1 subgoal):\n 1. \\<And>x xa. xa < a \\<Longrightarrow> b + xa \\<in> {b..<b + a}", "qed auto"], ["", "lemma sum_minus[simp]:\nfixes a :: nat\nshows \"sum f {a ..< a + b} = sum (%x. f (a + x)) {..< b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {a..<a + b} = (\\<Sum>x<b. f (a + x))", "using sum.reindex[of \"(+) a\" \"{..< b}\" f]"], ["proof (prove)\nusing this:\n  inj_on ((+) a) {..<b} \\<Longrightarrow>\n  sum f ((+) a ` {..<b}) = sum (f \\<circ> (+) a) {..<b}\n\ngoal (1 subgoal):\n 1. sum f {a..<a + b} = (\\<Sum>x<b. f (a + x))", "by auto"], ["", "lemma sum_Un_introL:\nassumes \"A1 = B1 Un C1\" and \"x = x1 + x2\"\n\"finite A1\" and\n\"B1 Int C1 = {}\" and\n\"sum f1 B1 = x1\" and \"sum f1 C1 = x2\"\nshows \"sum f1 A1 = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f1 A1 = x", "by (metis assms finite_Un sum.union_disjoint)"], ["", "lemma sum_Un_intro:\nassumes \"A1 = B1 Un C1\" and \"A2 = B2 Un C2\" and\n\"finite A1\" and \"finite A2\" and\n\"B1 Int C1 = {}\" and \"B2 Int C2 = {}\" and\n\"sum f1 B1 = sum f2 B2\" and \"sum f1 C1 = sum f2 C2\"\nshows \"sum f1 A1 = sum f2 A2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f1 A1 = sum f2 A2", "by (metis assms finite_Un sum.union_disjoint)"], ["", "lemma sum_UN_introL:\nassumes A1: \"A1 = (UN n : N. B1 n)\" and a2: \"a2 = sum b2 N\" and\nfin: \"finite N\" \"\\<And> n. n \\<in> N \\<Longrightarrow> finite (B1 n)\" and\nint: \"\\<And> m n. {m, n} \\<subseteq> N \\<and> m \\<noteq> n \\<Longrightarrow> B1 m \\<inter> B1 n = {}\" and\nss: \"\\<And> n. n \\<in> N \\<Longrightarrow> sum f1 (B1 n) = b2 n\"\nshows \"sum f1 A1 = a2\" (is \"?L = a2\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f1 A1 = a2", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sum f1 A1 = a2", "have \"?L = sum (%n. sum f1 (B1 n)) N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f1 A1 = (\\<Sum>n\\<in>N. sum f1 (B1 n))", "unfolding A1"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f1 (\\<Union> (B1 ` N)) = (\\<Sum>n\\<in>N. sum f1 (B1 n))", "using sum.UNION_disjoint[of N B1 f1] fin int"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite N; \\<forall>i\\<in>N. finite (B1 i);\n   \\<forall>i\\<in>N.\n      \\<forall>j\\<in>N.\n         i \\<noteq> j \\<longrightarrow> B1 i \\<inter> B1 j = {}\\<rbrakk>\n  \\<Longrightarrow> sum f1 (\\<Union> (B1 ` N)) =\n                    (\\<Sum>x\\<in>N. sum f1 (B1 x))\n  finite N\n  ?n \\<in> N \\<Longrightarrow> finite (B1 ?n)\n  {?m, ?n} \\<subseteq> N \\<and> ?m \\<noteq> ?n \\<Longrightarrow>\n  B1 ?m \\<inter> B1 ?n = {}\n\ngoal (1 subgoal):\n 1. sum f1 (\\<Union> (B1 ` N)) = (\\<Sum>n\\<in>N. sum f1 (B1 n))", "by simp"], ["proof (state)\nthis:\n  sum f1 A1 = (\\<Sum>n\\<in>N. sum f1 (B1 n))\n\ngoal (1 subgoal):\n 1. sum f1 A1 = a2", "also"], ["proof (state)\nthis:\n  sum f1 A1 = (\\<Sum>n\\<in>N. sum f1 (B1 n))\n\ngoal (1 subgoal):\n 1. sum f1 A1 = a2", "have \"... = sum b2 N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>N. sum f1 (B1 n)) = sum b2 N", "using ss fin"], ["proof (prove)\nusing this:\n  ?n \\<in> N \\<Longrightarrow> sum f1 (B1 ?n) = b2 ?n\n  finite N\n  ?n \\<in> N \\<Longrightarrow> finite (B1 ?n)\n\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>N. sum f1 (B1 n)) = sum b2 N", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>N. sum f1 (B1 n)) = sum b2 N\n\ngoal (1 subgoal):\n 1. sum f1 A1 = a2", "also"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>N. sum f1 (B1 n)) = sum b2 N\n\ngoal (1 subgoal):\n 1. sum f1 A1 = a2", "have \"... = a2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum b2 N = a2", "using a2"], ["proof (prove)\nusing this:\n  a2 = sum b2 N\n\ngoal (1 subgoal):\n 1. sum b2 N = a2", "by simp"], ["proof (state)\nthis:\n  sum b2 N = a2\n\ngoal (1 subgoal):\n 1. sum f1 A1 = a2", "finally"], ["proof (chain)\npicking this:\n  sum f1 A1 = a2", "show ?thesis"], ["proof (prove)\nusing this:\n  sum f1 A1 = a2\n\ngoal (1 subgoal):\n 1. sum f1 A1 = a2", "."], ["proof (state)\nthis:\n  sum f1 A1 = a2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_UN_intro:\nassumes A1: \"A1 = (UN n : N. B1 n)\" and A2: \"A2 = (UN n : N. B2 n)\" and\nfin: \"finite N\" \"\\<And> n. n \\<in> N \\<Longrightarrow> finite (B1 n) \\<and> finite (B2 n)\" and\nint: \"\\<And> m n. {m, n} \\<subseteq> N \\<and> m \\<noteq> n \\<Longrightarrow> B1 m \\<inter> B1 n = {}\" \"\\<And> m n. {m, n} \\<subseteq> N \\<Longrightarrow> B2 m \\<inter> B2 n = {}\" and\nss: \"\\<And> n. n \\<in> N \\<Longrightarrow> sum f1 (B1 n) = sum f2 (B2 n)\"\nshows \"sum f1 A1 = sum f2 A2\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f1 A1 = sum f2 A2", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sum f1 A1 = sum f2 A2", "have \"?L = sum (%n. sum f1 (B1 n)) N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f1 A1 = (\\<Sum>n\\<in>N. sum f1 (B1 n))", "unfolding A1"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f1 (\\<Union> (B1 ` N)) = (\\<Sum>n\\<in>N. sum f1 (B1 n))", "using sum.UNION_disjoint[of N B1 f1] fin int"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite N; \\<forall>i\\<in>N. finite (B1 i);\n   \\<forall>i\\<in>N.\n      \\<forall>j\\<in>N.\n         i \\<noteq> j \\<longrightarrow> B1 i \\<inter> B1 j = {}\\<rbrakk>\n  \\<Longrightarrow> sum f1 (\\<Union> (B1 ` N)) =\n                    (\\<Sum>x\\<in>N. sum f1 (B1 x))\n  finite N\n  ?n \\<in> N \\<Longrightarrow> finite (B1 ?n) \\<and> finite (B2 ?n)\n  {?m, ?n} \\<subseteq> N \\<and> ?m \\<noteq> ?n \\<Longrightarrow>\n  B1 ?m \\<inter> B1 ?n = {}\n  {?m, ?n} \\<subseteq> N \\<Longrightarrow> B2 ?m \\<inter> B2 ?n = {}\n\ngoal (1 subgoal):\n 1. sum f1 (\\<Union> (B1 ` N)) = (\\<Sum>n\\<in>N. sum f1 (B1 n))", "by simp"], ["proof (state)\nthis:\n  sum f1 A1 = (\\<Sum>n\\<in>N. sum f1 (B1 n))\n\ngoal (1 subgoal):\n 1. sum f1 A1 = sum f2 A2", "also"], ["proof (state)\nthis:\n  sum f1 A1 = (\\<Sum>n\\<in>N. sum f1 (B1 n))\n\ngoal (1 subgoal):\n 1. sum f1 A1 = sum f2 A2", "have \"... = sum (%n. sum f2 (B2 n)) N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>N. sum f1 (B1 n)) = (\\<Sum>n\\<in>N. sum f2 (B2 n))", "using ss fin sum.mono_neutral_left"], ["proof (prove)\nusing this:\n  ?n \\<in> N \\<Longrightarrow> sum f1 (B1 ?n) = sum f2 (B2 ?n)\n  finite N\n  ?n \\<in> N \\<Longrightarrow> finite (B1 ?n) \\<and> finite (B2 ?n)\n  \\<lbrakk>finite ?T; ?S \\<subseteq> ?T;\n   \\<forall>i\\<in>?T - ?S. ?g i = (0::?'a)\\<rbrakk>\n  \\<Longrightarrow> sum ?g ?S = sum ?g ?T\n\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>N. sum f1 (B1 n)) = (\\<Sum>n\\<in>N. sum f2 (B2 n))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>N. sum f1 (B1 n)) = (\\<Sum>n\\<in>N. sum f2 (B2 n))\n\ngoal (1 subgoal):\n 1. sum f1 A1 = sum f2 A2", "also"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>N. sum f1 (B1 n)) = (\\<Sum>n\\<in>N. sum f2 (B2 n))\n\ngoal (1 subgoal):\n 1. sum f1 A1 = sum f2 A2", "have \"... = ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>N. sum f2 (B2 n)) = sum f2 A2", "unfolding A2"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>N. sum f2 (B2 n)) = sum f2 (\\<Union> (B2 ` N))", "using sum.UNION_disjoint[of N B2 f2] fin int"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite N; \\<forall>i\\<in>N. finite (B2 i);\n   \\<forall>i\\<in>N.\n      \\<forall>j\\<in>N.\n         i \\<noteq> j \\<longrightarrow> B2 i \\<inter> B2 j = {}\\<rbrakk>\n  \\<Longrightarrow> sum f2 (\\<Union> (B2 ` N)) =\n                    (\\<Sum>x\\<in>N. sum f2 (B2 x))\n  finite N\n  ?n \\<in> N \\<Longrightarrow> finite (B1 ?n) \\<and> finite (B2 ?n)\n  {?m, ?n} \\<subseteq> N \\<and> ?m \\<noteq> ?n \\<Longrightarrow>\n  B1 ?m \\<inter> B1 ?n = {}\n  {?m, ?n} \\<subseteq> N \\<Longrightarrow> B2 ?m \\<inter> B2 ?n = {}\n\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>N. sum f2 (B2 n)) = sum f2 (\\<Union> (B2 ` N))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>N. sum f2 (B2 n)) = sum f2 A2\n\ngoal (1 subgoal):\n 1. sum f1 A1 = sum f2 A2", "finally"], ["proof (chain)\npicking this:\n  sum f1 A1 = sum f2 A2", "show ?thesis"], ["proof (prove)\nusing this:\n  sum f1 A1 = sum f2 A2\n\ngoal (1 subgoal):\n 1. sum f1 A1 = sum f2 A2", "."], ["proof (state)\nthis:\n  sum f1 A1 = sum f2 A2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_Minus_intro:\nfixes f1 :: \"'a1 \\<Rightarrow> real\" and f2 :: \"'a2 \\<Rightarrow> real\"\nassumes \"B1 = A1 - {a1}\" and \"B2 = A2 - {a2}\" and\n\"a1 : A1\" and \"a2 : A2\" and \"finite A1\" and \"finite A2\"\n\"sum f1 A1 = sum f2 A2\" and \"f1 a1 = f2 a2\"\nshows \"sum f1 B1 = sum f2 B2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f1 B1 = sum f2 B2", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sum f1 B1 = sum f2 B2", "have 1: \"A1 = B1 Un {a1}\" and 2: \"A2 = B2 Un {a2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A1 = B1 \\<union> {a1} &&& A2 = B2 \\<union> {a2}", "using assms"], ["proof (prove)\nusing this:\n  B1 = A1 - {a1}\n  B2 = A2 - {a2}\n  a1 \\<in> A1\n  a2 \\<in> A2\n  finite A1\n  finite A2\n  sum f1 A1 = sum f2 A2\n  f1 a1 = f2 a2\n\ngoal (1 subgoal):\n 1. A1 = B1 \\<union> {a1} &&& A2 = B2 \\<union> {a2}", "by blast+"], ["proof (state)\nthis:\n  A1 = B1 \\<union> {a1}\n  A2 = B2 \\<union> {a2}\n\ngoal (1 subgoal):\n 1. sum f1 B1 = sum f2 B2", "from assms"], ["proof (chain)\npicking this:\n  B1 = A1 - {a1}\n  B2 = A2 - {a2}\n  a1 \\<in> A1\n  a2 \\<in> A2\n  finite A1\n  finite A2\n  sum f1 A1 = sum f2 A2\n  f1 a1 = f2 a2", "have \"a1 \\<notin> B1\""], ["proof (prove)\nusing this:\n  B1 = A1 - {a1}\n  B2 = A2 - {a2}\n  a1 \\<in> A1\n  a2 \\<in> A2\n  finite A1\n  finite A2\n  sum f1 A1 = sum f2 A2\n  f1 a1 = f2 a2\n\ngoal (1 subgoal):\n 1. a1 \\<notin> B1", "by simp"], ["proof (state)\nthis:\n  a1 \\<notin> B1\n\ngoal (1 subgoal):\n 1. sum f1 B1 = sum f2 B2", "with 1 \\<open>finite A1\\<close>"], ["proof (chain)\npicking this:\n  A1 = B1 \\<union> {a1}\n  finite A1\n  a1 \\<notin> B1", "have \"sum f1 A1 = sum f1 B1 + f1 a1\""], ["proof (prove)\nusing this:\n  A1 = B1 \\<union> {a1}\n  finite A1\n  a1 \\<notin> B1\n\ngoal (1 subgoal):\n 1. sum f1 A1 = sum f1 B1 + f1 a1", "by simp"], ["proof (state)\nthis:\n  sum f1 A1 = sum f1 B1 + f1 a1\n\ngoal (1 subgoal):\n 1. sum f1 B1 = sum f2 B2", "hence 3: \"sum f1 B1 = sum f1 A1 - f1 a1\""], ["proof (prove)\nusing this:\n  sum f1 A1 = sum f1 B1 + f1 a1\n\ngoal (1 subgoal):\n 1. sum f1 B1 = sum f1 A1 - f1 a1", "by simp"], ["proof (state)\nthis:\n  sum f1 B1 = sum f1 A1 - f1 a1\n\ngoal (1 subgoal):\n 1. sum f1 B1 = sum f2 B2", "from assms"], ["proof (chain)\npicking this:\n  B1 = A1 - {a1}\n  B2 = A2 - {a2}\n  a1 \\<in> A1\n  a2 \\<in> A2\n  finite A1\n  finite A2\n  sum f1 A1 = sum f2 A2\n  f1 a1 = f2 a2", "have \"a2 \\<notin> B2\""], ["proof (prove)\nusing this:\n  B1 = A1 - {a1}\n  B2 = A2 - {a2}\n  a1 \\<in> A1\n  a2 \\<in> A2\n  finite A1\n  finite A2\n  sum f1 A1 = sum f2 A2\n  f1 a1 = f2 a2\n\ngoal (1 subgoal):\n 1. a2 \\<notin> B2", "by simp"], ["proof (state)\nthis:\n  a2 \\<notin> B2\n\ngoal (1 subgoal):\n 1. sum f1 B1 = sum f2 B2", "with 2 \\<open>finite A2 \\<close>"], ["proof (chain)\npicking this:\n  A2 = B2 \\<union> {a2}\n  finite A2\n  a2 \\<notin> B2", "have \"sum f2 A2 = sum f2 B2 + f2 a2\""], ["proof (prove)\nusing this:\n  A2 = B2 \\<union> {a2}\n  finite A2\n  a2 \\<notin> B2\n\ngoal (1 subgoal):\n 1. sum f2 A2 = sum f2 B2 + f2 a2", "by simp"], ["proof (state)\nthis:\n  sum f2 A2 = sum f2 B2 + f2 a2\n\ngoal (1 subgoal):\n 1. sum f1 B1 = sum f2 B2", "hence \"sum f2 B2 = sum f2 A2 - f2 a2\""], ["proof (prove)\nusing this:\n  sum f2 A2 = sum f2 B2 + f2 a2\n\ngoal (1 subgoal):\n 1. sum f2 B2 = sum f2 A2 - f2 a2", "by simp"], ["proof (state)\nthis:\n  sum f2 B2 = sum f2 A2 - f2 a2\n\ngoal (1 subgoal):\n 1. sum f1 B1 = sum f2 B2", "thus ?thesis"], ["proof (prove)\nusing this:\n  sum f2 B2 = sum f2 A2 - f2 a2\n\ngoal (1 subgoal):\n 1. sum f1 B1 = sum f2 B2", "using 3 assms"], ["proof (prove)\nusing this:\n  sum f2 B2 = sum f2 A2 - f2 a2\n  sum f1 B1 = sum f1 A1 - f1 a1\n  B1 = A1 - {a1}\n  B2 = A2 - {a2}\n  a1 \\<in> A1\n  a2 \\<in> A2\n  finite A1\n  finite A2\n  sum f1 A1 = sum f2 A2\n  f1 a1 = f2 a2\n\ngoal (1 subgoal):\n 1. sum f1 B1 = sum f2 B2", "by simp"], ["proof (state)\nthis:\n  sum f1 B1 = sum f2 B2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_singl_intro:\nassumes \"b = f a\"\nand \"finite A\" and \"a \\<in> A\"\nand \"\\<And> a'. \\<lbrakk>a' \\<in> A; a' \\<noteq> a\\<rbrakk> \\<Longrightarrow> f a' = 0\"\nshows \"sum f A = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f A = b", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sum f A = b", "define B where \"B = A - {a}\""], ["proof (state)\nthis:\n  B = A - {a}\n\ngoal (1 subgoal):\n 1. sum f A = b", "have \"A = B Un {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = B \\<union> {a}", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A = A - {a} \\<union> {a}", "using assms"], ["proof (prove)\nusing this:\n  b = f a\n  finite A\n  a \\<in> A\n  \\<lbrakk>?a' \\<in> A; ?a' \\<noteq> a\\<rbrakk>\n  \\<Longrightarrow> f ?a' = (0::'a)\n\ngoal (1 subgoal):\n 1. A = A - {a} \\<union> {a}", "by blast"], ["proof (state)\nthis:\n  A = B \\<union> {a}\n\ngoal (1 subgoal):\n 1. sum f A = b", "moreover"], ["proof (state)\nthis:\n  A = B \\<union> {a}\n\ngoal (1 subgoal):\n 1. sum f A = b", "have \"B Int {a} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<inter> {a} = {}", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A - {a}) \\<inter> {a} = {}", "by blast"], ["proof (state)\nthis:\n  B \\<inter> {a} = {}\n\ngoal (1 subgoal):\n 1. sum f A = b", "ultimately"], ["proof (chain)\npicking this:\n  A = B \\<union> {a}\n  B \\<inter> {a} = {}", "have \"sum f A = sum f B + sum f {a}\""], ["proof (prove)\nusing this:\n  A = B \\<union> {a}\n  B \\<inter> {a} = {}\n\ngoal (1 subgoal):\n 1. sum f A = sum f B + sum f {a}", "using assms sum.union_disjoint"], ["proof (prove)\nusing this:\n  A = B \\<union> {a}\n  B \\<inter> {a} = {}\n  b = f a\n  finite A\n  a \\<in> A\n  \\<lbrakk>?a' \\<in> A; ?a' \\<noteq> a\\<rbrakk>\n  \\<Longrightarrow> f ?a' = (0::'a)\n  \\<lbrakk>finite ?A; finite ?B; ?A \\<inter> ?B = {}\\<rbrakk>\n  \\<Longrightarrow> sum ?g (?A \\<union> ?B) = sum ?g ?A + sum ?g ?B\n\ngoal (1 subgoal):\n 1. sum f A = sum f B + sum f {a}", "by blast"], ["proof (state)\nthis:\n  sum f A = sum f B + sum f {a}\n\ngoal (1 subgoal):\n 1. sum f A = b", "moreover"], ["proof (state)\nthis:\n  sum f A = sum f B + sum f {a}\n\ngoal (1 subgoal):\n 1. sum f A = b", "have \"\\<forall> b \\<in> B. f b = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>b\\<in>B. f b = (0::'a)", "using assms"], ["proof (prove)\nusing this:\n  b = f a\n  finite A\n  a \\<in> A\n  \\<lbrakk>?a' \\<in> A; ?a' \\<noteq> a\\<rbrakk>\n  \\<Longrightarrow> f ?a' = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<forall>b\\<in>B. f b = (0::'a)", "unfolding B_def"], ["proof (prove)\nusing this:\n  b = f a\n  finite A\n  a \\<in> A\n  \\<lbrakk>?a' \\<in> A; ?a' \\<noteq> a\\<rbrakk>\n  \\<Longrightarrow> f ?a' = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<forall>b\\<in>A - {a}. f b = (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<forall>b\\<in>B. f b = (0::'a)\n\ngoal (1 subgoal):\n 1. sum f A = b", "ultimately"], ["proof (chain)\npicking this:\n  sum f A = sum f B + sum f {a}\n  \\<forall>b\\<in>B. f b = (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  sum f A = sum f B + sum f {a}\n  \\<forall>b\\<in>B. f b = (0::'a)\n\ngoal (1 subgoal):\n 1. sum f A = b", "using assms"], ["proof (prove)\nusing this:\n  sum f A = sum f B + sum f {a}\n  \\<forall>b\\<in>B. f b = (0::'a)\n  b = f a\n  finite A\n  a \\<in> A\n  \\<lbrakk>?a' \\<in> A; ?a' \\<noteq> a\\<rbrakk>\n  \\<Longrightarrow> f ?a' = (0::'a)\n\ngoal (1 subgoal):\n 1. sum f A = b", "by auto"], ["proof (state)\nthis:\n  sum f A = b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_all0_intro:\nassumes \"b = 0\"\nand \"\\<And> a. a \\<in> A \\<Longrightarrow> f a = 0\"\nshows \"sum f A = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f A = b", "apply(cases \"finite A\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> sum f A = b\n 2. infinite A \\<Longrightarrow> sum f A = b", "by(metis assms sum.neutral sum.infinite)+"], ["", "lemma sum_1:\nassumes I: \"finite I\" and ss: \"sum f I = 1\" and i: \"i \\<in> I - I1\" and I1: \"I1 \\<subseteq> I\"\nand f: \"\\<And>i. i \\<in> I \\<Longrightarrow> (0::real) \\<le> f i\"\nshows \"f i \\<le> 1 - sum f I1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i \\<le> 1 - sum f I1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f i \\<le> 1 - sum f I1", "have \"sum f I = sum f ({i} Un (I - {i}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f I = sum f ({i} \\<union> (I - {i}))", "using i"], ["proof (prove)\nusing this:\n  i \\<in> I - I1\n\ngoal (1 subgoal):\n 1. sum f I = sum f ({i} \\<union> (I - {i}))", "by (metis DiffE insert_Diff_single insert_absorb insert_is_Un)"], ["proof (state)\nthis:\n  sum f I = sum f ({i} \\<union> (I - {i}))\n\ngoal (1 subgoal):\n 1. f i \\<le> 1 - sum f I1", "also"], ["proof (state)\nthis:\n  sum f I = sum f ({i} \\<union> (I - {i}))\n\ngoal (1 subgoal):\n 1. f i \\<le> 1 - sum f I1", "have \"... = sum f {i} + sum f (I - {i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f ({i} \\<union> (I - {i})) = sum f {i} + sum f (I - {i})", "apply(rule sum.union_disjoint)"], ["proof (prove)\ngoal (3 subgoals):\n 1. finite {i}\n 2. finite (I - {i})\n 3. {i} \\<inter> (I - {i}) = {}", "using I"], ["proof (prove)\nusing this:\n  finite I\n\ngoal (3 subgoals):\n 1. finite {i}\n 2. finite (I - {i})\n 3. {i} \\<inter> (I - {i}) = {}", "by auto"], ["proof (state)\nthis:\n  sum f ({i} \\<union> (I - {i})) = sum f {i} + sum f (I - {i})\n\ngoal (1 subgoal):\n 1. f i \\<le> 1 - sum f I1", "finally"], ["proof (chain)\npicking this:\n  sum f I = sum f {i} + sum f (I - {i})", "have \"1 = f i + sum f (I - {i})\""], ["proof (prove)\nusing this:\n  sum f I = sum f {i} + sum f (I - {i})\n\ngoal (1 subgoal):\n 1. 1 = f i + sum f (I - {i})", "unfolding ss[THEN sym]"], ["proof (prove)\nusing this:\n  sum f I = sum f {i} + sum f (I - {i})\n\ngoal (1 subgoal):\n 1. sum f I = f i + sum f (I - {i})", "by simp"], ["proof (state)\nthis:\n  1 = f i + sum f (I - {i})\n\ngoal (1 subgoal):\n 1. f i \\<le> 1 - sum f I1", "moreover"], ["proof (state)\nthis:\n  1 = f i + sum f (I - {i})\n\ngoal (1 subgoal):\n 1. f i \\<le> 1 - sum f I1", "have \"sum f (I - {i}) \\<ge> sum f I1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f I1 \\<le> sum f (I - {i})", "apply(rule sum_mono2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. finite (I - {i})\n 2. I1 \\<subseteq> I - {i}\n 3. \\<And>b. b \\<in> I - {i} - I1 \\<Longrightarrow> 0 \\<le> f b", "using assms"], ["proof (prove)\nusing this:\n  finite I\n  sum f I = 1\n  i \\<in> I - I1\n  I1 \\<subseteq> I\n  ?i \\<in> I \\<Longrightarrow> 0 \\<le> f ?i\n\ngoal (3 subgoals):\n 1. finite (I - {i})\n 2. I1 \\<subseteq> I - {i}\n 3. \\<And>b. b \\<in> I - {i} - I1 \\<Longrightarrow> 0 \\<le> f b", "by auto"], ["proof (state)\nthis:\n  sum f I1 \\<le> sum f (I - {i})\n\ngoal (1 subgoal):\n 1. f i \\<le> 1 - sum f I1", "ultimately"], ["proof (chain)\npicking this:\n  1 = f i + sum f (I - {i})\n  sum f I1 \\<le> sum f (I - {i})", "have \"1 \\<ge> f i + sum f I1\""], ["proof (prove)\nusing this:\n  1 = f i + sum f (I - {i})\n  sum f I1 \\<le> sum f (I - {i})\n\ngoal (1 subgoal):\n 1. f i + sum f I1 \\<le> 1", "by auto"], ["proof (state)\nthis:\n  f i + sum f I1 \\<le> 1\n\ngoal (1 subgoal):\n 1. f i \\<le> 1 - sum f I1", "thus ?thesis"], ["proof (prove)\nusing this:\n  f i + sum f I1 \\<le> 1\n\ngoal (1 subgoal):\n 1. f i \\<le> 1 - sum f I1", "by auto"], ["proof (state)\nthis:\n  f i \\<le> 1 - sum f I1\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Syntax\\<close>"], ["", "datatype ('test, 'atom, 'choice) cmd =\n  Done\n| Atm \"'atom\"\n| Seq \"('test, 'atom, 'choice) cmd\" \"('test, 'atom, 'choice) cmd\" (\"_ ;; _\"  [60, 61] 60)\n| While \"'test\" \"('test, 'atom, 'choice) cmd\"\n| Ch 'choice \"('test, 'atom, 'choice) cmd\" \"('test, 'atom, 'choice) cmd\"\n| Par \"('test, 'atom, 'choice) cmd list\"\n| ParT \"('test, 'atom, 'choice) cmd list\""], ["", "(* Commands containing no while loops: *)"], ["", "fun noWhile where\n  \"noWhile Done \\<longleftrightarrow> True\"\n| \"noWhile (Atm atm) \\<longleftrightarrow> True\"\n| \"noWhile (c1 ;; c2) \\<longleftrightarrow> noWhile c1 \\<and> noWhile c2\"\n| \"noWhile (While tst c) \\<longleftrightarrow> False\"\n| \"noWhile (Ch ch c1 c2) \\<longleftrightarrow> noWhile c1 \\<and> noWhile c2\"\n| \"noWhile (Par cl) \\<longleftrightarrow> (\\<forall> c \\<in> set cl. noWhile c)\"\n| \"noWhile (ParT cl) \\<longleftrightarrow> (\\<forall> c \\<in> set cl. noWhile c)\""], ["", "(* ``Finished\" commands: *)"], ["", "fun finished where\n  \"finished Done \\<longleftrightarrow> True\"\n| \"finished (Atm atm) \\<longleftrightarrow> False\"\n| \"finished (c1 ;; c2) \\<longleftrightarrow> False\"\n| \"finished (While tst c) \\<longleftrightarrow> False\"\n| \"finished (Ch ch c1 c2) \\<longleftrightarrow> False\"\n| \"finished (Par cl) \\<longleftrightarrow> (\\<forall> c \\<in> set cl. finished c)\"\n| \"finished (ParT cl) \\<longleftrightarrow> (\\<forall> c \\<in> set cl. finished c)\""], ["", "definition noWhileL where\n\"noWhileL cl \\<equiv> \\<forall> c \\<in> set cl. noWhile c\""], ["", "lemma fin_Par_noWhileL[simp]:\n\"noWhile (Par cl) \\<longleftrightarrow> noWhileL cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. noWhile (Par cl) = noWhileL cl", "unfolding noWhileL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. noWhile (Par cl) = (\\<forall>c\\<in>set cl. noWhile c)", "by simp"], ["", "lemma fin_ParT_noWhileL[simp]:\n\"noWhile (ParT cl) \\<longleftrightarrow> noWhileL cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. noWhile (ParT cl) = noWhileL cl", "unfolding noWhileL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. noWhile (ParT cl) = (\\<forall>c\\<in>set cl. noWhile c)", "by simp"], ["", "declare noWhile.simps(6) [simp del]"], ["", "declare noWhile.simps(7) [simp del]"], ["", "lemma noWhileL_intro[intro]:\nassumes \"\\<And> c. c \\<in> set cl \\<Longrightarrow> noWhile c\"\nshows \"noWhileL cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. noWhileL cl", "using assms"], ["proof (prove)\nusing this:\n  ?c \\<in> set cl \\<Longrightarrow> noWhile ?c\n\ngoal (1 subgoal):\n 1. noWhileL cl", "unfolding noWhileL_def"], ["proof (prove)\nusing this:\n  ?c \\<in> set cl \\<Longrightarrow> noWhile ?c\n\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set cl. noWhile c", "by auto"], ["", "lemma noWhileL_fin[simp]:\nassumes \"noWhileL cl\" and \"c \\<in> set cl\"\nshows \"noWhile c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. noWhile c", "using assms"], ["proof (prove)\nusing this:\n  noWhileL cl\n  c \\<in> set cl\n\ngoal (1 subgoal):\n 1. noWhile c", "unfolding noWhileL_def"], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set cl. noWhile c\n  c \\<in> set cl\n\ngoal (1 subgoal):\n 1. noWhile c", "by simp"], ["", "lemma noWhileL_update[simp]:\nassumes cl: \"noWhileL cl\" and c': \"noWhile c'\"\nshows \"noWhileL (cl[n := c'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. noWhileL (cl[n := c'])", "proof(cases \"n < length cl\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n < length cl \\<Longrightarrow> noWhileL (cl[n := c'])\n 2. \\<not> n < length cl \\<Longrightarrow> noWhileL (cl[n := c'])", "case True"], ["proof (state)\nthis:\n  n < length cl\n\ngoal (2 subgoals):\n 1. n < length cl \\<Longrightarrow> noWhileL (cl[n := c'])\n 2. \\<not> n < length cl \\<Longrightarrow> noWhileL (cl[n := c'])", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. noWhileL (cl[n := c'])", "unfolding noWhileL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set (cl[n := c']). noWhile c", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> set (cl[n := c']) \\<Longrightarrow> noWhile c", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> set (cl[n := c']) \\<Longrightarrow> noWhile c", "assume \"c \\<in> set (cl[n := c'])\""], ["proof (state)\nthis:\n  c \\<in> set (cl[n := c'])\n\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> set (cl[n := c']) \\<Longrightarrow> noWhile c", "hence \"c \\<in> insert c' (set cl)\""], ["proof (prove)\nusing this:\n  c \\<in> set (cl[n := c'])\n\ngoal (1 subgoal):\n 1. c \\<in> insert c' (set cl)", "using set_update_subset_insert"], ["proof (prove)\nusing this:\n  c \\<in> set (cl[n := c'])\n  set (?xs[?i := ?x]) \\<subseteq> insert ?x (set ?xs)\n\ngoal (1 subgoal):\n 1. c \\<in> insert c' (set cl)", "by fastforce"], ["proof (state)\nthis:\n  c \\<in> insert c' (set cl)\n\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> set (cl[n := c']) \\<Longrightarrow> noWhile c", "thus \"noWhile c\""], ["proof (prove)\nusing this:\n  c \\<in> insert c' (set cl)\n\ngoal (1 subgoal):\n 1. noWhile c", "using assms"], ["proof (prove)\nusing this:\n  c \\<in> insert c' (set cl)\n  noWhileL cl\n  noWhile c'\n\ngoal (1 subgoal):\n 1. noWhile c", "by (cases \"c = c'\") auto"], ["proof (state)\nthis:\n  noWhile c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  noWhileL (cl[n := c'])\n\ngoal (1 subgoal):\n 1. \\<not> n < length cl \\<Longrightarrow> noWhileL (cl[n := c'])", "qed (insert cl, auto)"], ["", "definition finishedL where\n\"finishedL cl \\<equiv> \\<forall> c \\<in> set cl. finished c\""], ["", "lemma finished_Par_finishedL[simp]:\n\"finished (Par cl) \\<longleftrightarrow> finishedL cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finished (Par cl) = finishedL cl", "unfolding finishedL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finished (Par cl) = (\\<forall>c\\<in>set cl. finished c)", "by simp"], ["", "lemma finished_ParT_finishedL[simp]:\n\"finished (ParT cl) \\<longleftrightarrow> finishedL cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finished (ParT cl) = finishedL cl", "unfolding finishedL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finished (ParT cl) = (\\<forall>c\\<in>set cl. finished c)", "by simp"], ["", "declare finished.simps(6) [simp del]"], ["", "declare finished.simps(7) [simp del]"], ["", "lemma finishedL_intro[intro]:\nassumes \"\\<And> c. c \\<in> set cl \\<Longrightarrow> finished c\"\nshows \"finishedL cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finishedL cl", "using assms"], ["proof (prove)\nusing this:\n  ?c \\<in> set cl \\<Longrightarrow> finished ?c\n\ngoal (1 subgoal):\n 1. finishedL cl", "unfolding finishedL_def"], ["proof (prove)\nusing this:\n  ?c \\<in> set cl \\<Longrightarrow> finished ?c\n\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set cl. finished c", "by auto"], ["", "lemma finishedL_finished[simp]:\nassumes \"finishedL cl\" and \"c \\<in> set cl\"\nshows \"finished c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finished c", "using assms"], ["proof (prove)\nusing this:\n  finishedL cl\n  c \\<in> set cl\n\ngoal (1 subgoal):\n 1. finished c", "unfolding finishedL_def"], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set cl. finished c\n  c \\<in> set cl\n\ngoal (1 subgoal):\n 1. finished c", "by simp"], ["", "lemma finishedL_update[simp]:\nassumes cl: \"finishedL cl\" and c': \"finished c'\"\nshows \"finishedL (cl[n := c'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finishedL (cl[n := c'])", "proof(cases \"n < length cl\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n < length cl \\<Longrightarrow> finishedL (cl[n := c'])\n 2. \\<not> n < length cl \\<Longrightarrow> finishedL (cl[n := c'])", "case True"], ["proof (state)\nthis:\n  n < length cl\n\ngoal (2 subgoals):\n 1. n < length cl \\<Longrightarrow> finishedL (cl[n := c'])\n 2. \\<not> n < length cl \\<Longrightarrow> finishedL (cl[n := c'])", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. finishedL (cl[n := c'])", "unfolding finishedL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set (cl[n := c']). finished c", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> set (cl[n := c']) \\<Longrightarrow> finished c", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> set (cl[n := c']) \\<Longrightarrow> finished c", "assume \"c \\<in> set (cl[n := c'])\""], ["proof (state)\nthis:\n  c \\<in> set (cl[n := c'])\n\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> set (cl[n := c']) \\<Longrightarrow> finished c", "hence \"c \\<in> insert c' (set cl)\""], ["proof (prove)\nusing this:\n  c \\<in> set (cl[n := c'])\n\ngoal (1 subgoal):\n 1. c \\<in> insert c' (set cl)", "using set_update_subset_insert"], ["proof (prove)\nusing this:\n  c \\<in> set (cl[n := c'])\n  set (?xs[?i := ?x]) \\<subseteq> insert ?x (set ?xs)\n\ngoal (1 subgoal):\n 1. c \\<in> insert c' (set cl)", "by fastforce"], ["proof (state)\nthis:\n  c \\<in> insert c' (set cl)\n\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> set (cl[n := c']) \\<Longrightarrow> finished c", "thus \"finished c\""], ["proof (prove)\nusing this:\n  c \\<in> insert c' (set cl)\n\ngoal (1 subgoal):\n 1. finished c", "using assms"], ["proof (prove)\nusing this:\n  c \\<in> insert c' (set cl)\n  finishedL cl\n  finished c'\n\ngoal (1 subgoal):\n 1. finished c", "by (cases \"c = c'\") auto"], ["proof (state)\nthis:\n  finished c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finishedL (cl[n := c'])\n\ngoal (1 subgoal):\n 1. \\<not> n < length cl \\<Longrightarrow> finishedL (cl[n := c'])", "qed (insert cl, auto)"], ["", "lemma finished_fin[simp]:\n\"finished c \\<Longrightarrow> noWhile c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finished c \\<Longrightarrow> noWhile c", "by(induct c) auto"], ["", "lemma finishedL_noWhileL[simp]:\n\"finishedL cl \\<Longrightarrow> noWhileL cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finishedL cl \\<Longrightarrow> noWhileL cl", "unfolding finishedL_def noWhileL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set cl. finished c \\<Longrightarrow>\n    \\<forall>c\\<in>set cl. noWhile c", "by auto"], ["", "locale PL =\n  fixes\n    aval :: \"'atom \\<Rightarrow> 'state \\<Rightarrow> 'state\" and\n    tval :: \"'test \\<Rightarrow> 'state \\<Rightarrow> bool\" and\n    cval :: \"'choice \\<Rightarrow> 'state \\<Rightarrow> real\"\n  assumes\n    properCh: \"\\<And> ch s. 0 \\<le> cval ch s \\<and> cval ch s \\<le> 1\"\nbegin"], ["", "lemma [simp]: \"(n::nat) < N \\<Longrightarrow> 0 \\<le> 1 / N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < N \\<Longrightarrow> 0 \\<le> 1 / real N", "by auto"], ["", "lemma [simp]: \"(n::nat) < N \\<Longrightarrow> 1 / N \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < N \\<Longrightarrow> 1 / real N \\<le> 1", "by auto"], ["", "lemma [simp]: \"(n::nat) < N \\<Longrightarrow> 0 \\<le> 1 - 1 / N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < N \\<Longrightarrow> 0 \\<le> 1 - 1 / real N", "by (simp add: divide_simps)"], ["", "lemma sum_equal: \"0 < (N::nat) \\<Longrightarrow> sum (\\<lambda> n. 1/N) {..< N} = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < N \\<Longrightarrow> (\\<Sum>n<N. 1 / real N) = 1", "unfolding sum_constant"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < N \\<Longrightarrow> real (card {..<N}) * (1 / real N) = 1", "by auto"], ["", "fun proper where\n  \"proper Done \\<longleftrightarrow> True\"\n| \"proper (Atm x) \\<longleftrightarrow> True\"\n| \"proper (Seq c1 c2) \\<longleftrightarrow> proper c1 \\<and> proper c2\"\n| \"proper (While tst c) \\<longleftrightarrow> proper c\"\n| \"proper (Ch ch c1 c2) \\<longleftrightarrow> proper c1 \\<and> proper c2\"\n| \"proper (Par cl) \\<longleftrightarrow> cl \\<noteq> [] \\<and> (\\<forall> c \\<in> set cl. proper c)\"\n| \"proper (ParT cl) \\<longleftrightarrow> cl \\<noteq> [] \\<and> (\\<forall> c \\<in> set cl. proper c)\""], ["", "definition properL where\n\"properL cl \\<equiv> cl \\<noteq> [] \\<and> (\\<forall> c \\<in> set cl. proper c)\""], ["", "lemma proper_Par_properL[simp]:\n\"proper (Par cl) \\<longleftrightarrow> properL cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper (Par cl) = properL cl", "unfolding properL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. proper (Par cl) =\n    (cl \\<noteq> [] \\<and> (\\<forall>c\\<in>set cl. proper c))", "by simp"], ["", "lemma proper_ParT_properL[simp]:\n\"proper (ParT cl) \\<longleftrightarrow> properL cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper (ParT cl) = properL cl", "unfolding properL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. proper (ParT cl) =\n    (cl \\<noteq> [] \\<and> (\\<forall>c\\<in>set cl. proper c))", "by simp"], ["", "declare proper.simps(6) [simp del]"], ["", "declare proper.simps(7) [simp del]"], ["", "lemma properL_intro[intro]:\n\"\\<lbrakk>cl \\<noteq> []; \\<And> c. c \\<in> set cl \\<Longrightarrow> proper c\\<rbrakk> \\<Longrightarrow> properL cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cl \\<noteq> [];\n     \\<And>c. c \\<in> set cl \\<Longrightarrow> proper c\\<rbrakk>\n    \\<Longrightarrow> properL cl", "unfolding properL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cl \\<noteq> [];\n     \\<And>c. c \\<in> set cl \\<Longrightarrow> proper c\\<rbrakk>\n    \\<Longrightarrow> cl \\<noteq> [] \\<and>\n                      (\\<forall>c\\<in>set cl. proper c)", "by auto"], ["", "lemma properL_notEmp[simp]: \"properL cl \\<Longrightarrow> cl \\<noteq> []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. properL cl \\<Longrightarrow> cl \\<noteq> []", "unfolding properL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cl \\<noteq> [] \\<and>\n    (\\<forall>c\\<in>set cl. proper c) \\<Longrightarrow>\n    cl \\<noteq> []", "by simp"], ["", "lemma properL_proper[simp]:\n\"\\<lbrakk>properL cl; c \\<in> set cl\\<rbrakk> \\<Longrightarrow> proper c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>properL cl; c \\<in> set cl\\<rbrakk> \\<Longrightarrow> proper c", "unfolding properL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cl \\<noteq> [] \\<and> (\\<forall>c\\<in>set cl. proper c);\n     c \\<in> set cl\\<rbrakk>\n    \\<Longrightarrow> proper c", "by simp"], ["", "lemma properL_update[simp]:\nassumes cl: \"properL cl\" and c': \"proper c'\"\nshows \"properL (cl[n := c'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. properL (cl[n := c'])", "proof(cases \"n < length cl\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n < length cl \\<Longrightarrow> properL (cl[n := c'])\n 2. \\<not> n < length cl \\<Longrightarrow> properL (cl[n := c'])", "case True"], ["proof (state)\nthis:\n  n < length cl\n\ngoal (2 subgoals):\n 1. n < length cl \\<Longrightarrow> properL (cl[n := c'])\n 2. \\<not> n < length cl \\<Longrightarrow> properL (cl[n := c'])", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. properL (cl[n := c'])", "unfolding properL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cl[n := c'] \\<noteq> [] \\<and>\n    (\\<forall>c\\<in>set (cl[n := c']). proper c)", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. cl[n := c'] = [] \\<Longrightarrow> False\n 2. \\<And>c. c \\<in> set (cl[n := c']) \\<Longrightarrow> proper c", "fix c"], ["proof (state)\ngoal (2 subgoals):\n 1. cl[n := c'] = [] \\<Longrightarrow> False\n 2. \\<And>c. c \\<in> set (cl[n := c']) \\<Longrightarrow> proper c", "assume \"c \\<in> set (cl[n := c'])\""], ["proof (state)\nthis:\n  c \\<in> set (cl[n := c'])\n\ngoal (2 subgoals):\n 1. cl[n := c'] = [] \\<Longrightarrow> False\n 2. \\<And>c. c \\<in> set (cl[n := c']) \\<Longrightarrow> proper c", "hence \"c \\<in> insert c' (set cl)\""], ["proof (prove)\nusing this:\n  c \\<in> set (cl[n := c'])\n\ngoal (1 subgoal):\n 1. c \\<in> insert c' (set cl)", "using set_update_subset_insert"], ["proof (prove)\nusing this:\n  c \\<in> set (cl[n := c'])\n  set (?xs[?i := ?x]) \\<subseteq> insert ?x (set ?xs)\n\ngoal (1 subgoal):\n 1. c \\<in> insert c' (set cl)", "by fastforce"], ["proof (state)\nthis:\n  c \\<in> insert c' (set cl)\n\ngoal (2 subgoals):\n 1. cl[n := c'] = [] \\<Longrightarrow> False\n 2. \\<And>c. c \\<in> set (cl[n := c']) \\<Longrightarrow> proper c", "thus \"proper c\""], ["proof (prove)\nusing this:\n  c \\<in> insert c' (set cl)\n\ngoal (1 subgoal):\n 1. proper c", "using assms"], ["proof (prove)\nusing this:\n  c \\<in> insert c' (set cl)\n  properL cl\n  proper c'\n\ngoal (1 subgoal):\n 1. proper c", "by (cases \"c = c'\") auto"], ["proof (state)\nthis:\n  proper c\n\ngoal (1 subgoal):\n 1. cl[n := c'] = [] \\<Longrightarrow> False", "qed (insert cl, auto)"], ["proof (state)\nthis:\n  properL (cl[n := c'])\n\ngoal (1 subgoal):\n 1. \\<not> n < length cl \\<Longrightarrow> properL (cl[n := c'])", "qed (insert cl, auto)"], ["", "lemma proper_induct[consumes 1, case_names Done Atm Seq While Ch Par ParT]:\nassumes *: \"proper c\"\nand Done: \"phi Done\"\nand Atm: \"\\<And> atm. phi (Atm atm)\"\nand Seq: \"\\<And> c1 c2. \\<lbrakk>phi c1; phi c2\\<rbrakk> \\<Longrightarrow> phi (c1 ;; c2)\"\nand While: \"\\<And> tst c. phi c \\<Longrightarrow> phi (While tst c)\"\nand Ch: \"\\<And> ch c1 c2. \\<lbrakk>phi c1; phi c2\\<rbrakk> \\<Longrightarrow> phi (Ch ch c1 c2)\"\nand Par: \"\\<And> cl. \\<lbrakk>properL cl; \\<And> c. c \\<in> set cl \\<Longrightarrow> phi c\\<rbrakk> \\<Longrightarrow> phi (Par cl)\"\nand ParT: \"\\<And> cl. \\<lbrakk>properL cl; \\<And> c. c \\<in> set cl \\<Longrightarrow> phi c\\<rbrakk> \\<Longrightarrow> phi (ParT cl)\"\nshows \"phi c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. phi c", "using *"], ["proof (prove)\nusing this:\n  proper c\n\ngoal (1 subgoal):\n 1. phi c", "apply(induct c)"], ["proof (prove)\ngoal (7 subgoals):\n 1. proper Done \\<Longrightarrow> phi Done\n 2. \\<And>x. proper (Atm x) \\<Longrightarrow> phi (Atm x)\n 3. \\<And>c1 c2.\n       \\<lbrakk>proper c1 \\<Longrightarrow> phi c1;\n        proper c2 \\<Longrightarrow> phi c2; proper (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> phi (c1 ;; c2)\n 4. \\<And>x1 c.\n       \\<lbrakk>proper c \\<Longrightarrow> phi c;\n        proper (While x1 c)\\<rbrakk>\n       \\<Longrightarrow> phi (While x1 c)\n 5. \\<And>x1 c1 c2.\n       \\<lbrakk>proper c1 \\<Longrightarrow> phi c1;\n        proper c2 \\<Longrightarrow> phi c2; proper (Ch x1 c1 c2)\\<rbrakk>\n       \\<Longrightarrow> phi (Ch x1 c1 c2)\n 6. \\<And>x.\n       \\<lbrakk>\\<And>xa.\n                   \\<lbrakk>xa \\<in> set x; proper xa\\<rbrakk>\n                   \\<Longrightarrow> phi xa;\n        proper (Par x)\\<rbrakk>\n       \\<Longrightarrow> phi (Par x)\n 7. \\<And>x.\n       \\<lbrakk>\\<And>xa.\n                   \\<lbrakk>xa \\<in> set x; proper xa\\<rbrakk>\n                   \\<Longrightarrow> phi xa;\n        proper (ParT x)\\<rbrakk>\n       \\<Longrightarrow> phi (ParT x)", "using assms"], ["proof (prove)\nusing this:\n  proper c\n  phi Done\n  phi (Atm ?atm)\n  \\<lbrakk>phi ?c1.0; phi ?c2.0\\<rbrakk>\n  \\<Longrightarrow> phi (?c1.0 ;; ?c2.0)\n  phi ?c \\<Longrightarrow> phi (While ?tst ?c)\n  \\<lbrakk>phi ?c1.0; phi ?c2.0\\<rbrakk>\n  \\<Longrightarrow> phi (Ch ?ch ?c1.0 ?c2.0)\n  \\<lbrakk>properL ?cl;\n   \\<And>c. c \\<in> set ?cl \\<Longrightarrow> phi c\\<rbrakk>\n  \\<Longrightarrow> phi (Par ?cl)\n  \\<lbrakk>properL ?cl;\n   \\<And>c. c \\<in> set ?cl \\<Longrightarrow> phi c\\<rbrakk>\n  \\<Longrightarrow> phi (ParT ?cl)\n\ngoal (7 subgoals):\n 1. proper Done \\<Longrightarrow> phi Done\n 2. \\<And>x. proper (Atm x) \\<Longrightarrow> phi (Atm x)\n 3. \\<And>c1 c2.\n       \\<lbrakk>proper c1 \\<Longrightarrow> phi c1;\n        proper c2 \\<Longrightarrow> phi c2; proper (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> phi (c1 ;; c2)\n 4. \\<And>x1 c.\n       \\<lbrakk>proper c \\<Longrightarrow> phi c;\n        proper (While x1 c)\\<rbrakk>\n       \\<Longrightarrow> phi (While x1 c)\n 5. \\<And>x1 c1 c2.\n       \\<lbrakk>proper c1 \\<Longrightarrow> phi c1;\n        proper c2 \\<Longrightarrow> phi c2; proper (Ch x1 c1 c2)\\<rbrakk>\n       \\<Longrightarrow> phi (Ch x1 c1 c2)\n 6. \\<And>x.\n       \\<lbrakk>\\<And>xa.\n                   \\<lbrakk>xa \\<in> set x; proper xa\\<rbrakk>\n                   \\<Longrightarrow> phi xa;\n        proper (Par x)\\<rbrakk>\n       \\<Longrightarrow> phi (Par x)\n 7. \\<And>x.\n       \\<lbrakk>\\<And>xa.\n                   \\<lbrakk>xa \\<in> set x; proper xa\\<rbrakk>\n                   \\<Longrightarrow> phi xa;\n        proper (ParT x)\\<rbrakk>\n       \\<Longrightarrow> phi (ParT x)", "unfolding properL_def"], ["proof (prove)\nusing this:\n  proper c\n  phi Done\n  phi (Atm ?atm)\n  \\<lbrakk>phi ?c1.0; phi ?c2.0\\<rbrakk>\n  \\<Longrightarrow> phi (?c1.0 ;; ?c2.0)\n  phi ?c \\<Longrightarrow> phi (While ?tst ?c)\n  \\<lbrakk>phi ?c1.0; phi ?c2.0\\<rbrakk>\n  \\<Longrightarrow> phi (Ch ?ch ?c1.0 ?c2.0)\n  \\<lbrakk>?cl \\<noteq> [] \\<and> (\\<forall>c\\<in>set ?cl. proper c);\n   \\<And>c. c \\<in> set ?cl \\<Longrightarrow> phi c\\<rbrakk>\n  \\<Longrightarrow> phi (Par ?cl)\n  \\<lbrakk>?cl \\<noteq> [] \\<and> (\\<forall>c\\<in>set ?cl. proper c);\n   \\<And>c. c \\<in> set ?cl \\<Longrightarrow> phi c\\<rbrakk>\n  \\<Longrightarrow> phi (ParT ?cl)\n\ngoal (7 subgoals):\n 1. proper Done \\<Longrightarrow> phi Done\n 2. \\<And>x. proper (Atm x) \\<Longrightarrow> phi (Atm x)\n 3. \\<And>c1 c2.\n       \\<lbrakk>proper c1 \\<Longrightarrow> phi c1;\n        proper c2 \\<Longrightarrow> phi c2; proper (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> phi (c1 ;; c2)\n 4. \\<And>x1 c.\n       \\<lbrakk>proper c \\<Longrightarrow> phi c;\n        proper (While x1 c)\\<rbrakk>\n       \\<Longrightarrow> phi (While x1 c)\n 5. \\<And>x1 c1 c2.\n       \\<lbrakk>proper c1 \\<Longrightarrow> phi c1;\n        proper c2 \\<Longrightarrow> phi c2; proper (Ch x1 c1 c2)\\<rbrakk>\n       \\<Longrightarrow> phi (Ch x1 c1 c2)\n 6. \\<And>x.\n       \\<lbrakk>\\<And>xa.\n                   \\<lbrakk>xa \\<in> set x; proper xa\\<rbrakk>\n                   \\<Longrightarrow> phi xa;\n        proper (Par x)\\<rbrakk>\n       \\<Longrightarrow> phi (Par x)\n 7. \\<And>x.\n       \\<lbrakk>\\<And>xa.\n                   \\<lbrakk>xa \\<in> set x; proper xa\\<rbrakk>\n                   \\<Longrightarrow> phi xa;\n        proper (ParT x)\\<rbrakk>\n       \\<Longrightarrow> phi (ParT x)", "by auto"], ["", "subsubsection \\<open>Operational Small-Step Semantics\\<close>"], ["", "(* \"The Finished Threads\": The sublist of finished threads from a list of threads  *)"], ["", "definition \"theFT cl \\<equiv> {n. n < length cl \\<and> finished (cl!n)}\""], ["", "(* \"The NopnFinished Threads\": *)"], ["", "definition \"theNFT cl \\<equiv> {n. n < length cl \\<and> \\<not> finished (cl!n)}\""], ["", "lemma finite_theFT[simp]: \"finite (theFT cl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (theFT cl)", "unfolding theFT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {n. n < length cl \\<and> finished (cl ! n)}", "by simp"], ["", "lemma theFT_length[simp]: \"n \\<in> theFT cl \\<Longrightarrow> n < length cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<in> theFT cl \\<Longrightarrow> n < length cl", "unfolding theFT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<in> {n. n < length cl \\<and> finished (cl ! n)} \\<Longrightarrow>\n    n < length cl", "by simp"], ["", "lemma theFT_finished[simp]: \"n \\<in> theFT cl \\<Longrightarrow> finished (cl!n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<in> theFT cl \\<Longrightarrow> finished (cl ! n)", "unfolding theFT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<in> {n. n < length cl \\<and> finished (cl ! n)} \\<Longrightarrow>\n    finished (cl ! n)", "by simp"], ["", "lemma finite_theNFT[simp]: \"finite (theNFT cl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (theNFT cl)", "unfolding theNFT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {n. n < length cl \\<and> \\<not> finished (cl ! n)}", "by simp"], ["", "lemma theNFT_length[simp]: \"n \\<in> theNFT cl \\<Longrightarrow> n < length cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<in> theNFT cl \\<Longrightarrow> n < length cl", "unfolding theNFT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<in> {n. n < length cl \\<and>\n                \\<not> finished (cl ! n)} \\<Longrightarrow>\n    n < length cl", "by simp"], ["", "lemma theNFT_notFinished[simp]: \"n \\<in> theNFT cl \\<Longrightarrow> \\<not> finished (cl!n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<in> theNFT cl \\<Longrightarrow> \\<not> finished (cl ! n)", "unfolding theNFT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<in> {n. n < length cl \\<and>\n                \\<not> finished (cl ! n)} \\<Longrightarrow>\n    \\<not> finished (cl ! n)", "by simp"], ["", "lemma theFT_Int_theNFT[simp]:\n\"theFT cl Int theNFT cl = {}\" and \"theNFT cl Int theFT cl = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theFT cl \\<inter> theNFT cl = {} &&& theNFT cl \\<inter> theFT cl = {}", "unfolding theFT_def theNFT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {n. n < length cl \\<and> finished (cl ! n)} \\<inter>\n    {n. n < length cl \\<and> \\<not> finished (cl ! n)} =\n    {} &&&\n    {n. n < length cl \\<and> \\<not> finished (cl ! n)} \\<inter>\n    {n. n < length cl \\<and> finished (cl ! n)} =\n    {}", "by auto"], ["", "lemma theFT_Un_theNFT[simp]:\n\"theFT cl Un theNFT cl = {..< length cl}\" and\n\"theNFT cl Un theFT cl = {..< length cl}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theFT cl \\<union> theNFT cl = {..<length cl} &&&\n    theNFT cl \\<union> theFT cl = {..<length cl}", "unfolding theFT_def theNFT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {n. n < length cl \\<and> finished (cl ! n)} \\<union>\n    {n. n < length cl \\<and> \\<not> finished (cl ! n)} =\n    {..<length cl} &&&\n    {n. n < length cl \\<and> \\<not> finished (cl ! n)} \\<union>\n    {n. n < length cl \\<and> finished (cl ! n)} =\n    {..<length cl}", "by auto"], ["", "lemma in_theFT_theNFT[simp]:\nassumes \"n1 \\<in> theFT cl\" and \"n2 \\<in> theNFT cl\"\nshows \"n1 \\<noteq> n2\" and \"n2 \\<noteq> n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n1 \\<noteq> n2 &&& n2 \\<noteq> n1", "using assms theFT_Int_theNFT"], ["proof (prove)\nusing this:\n  n1 \\<in> theFT cl\n  n2 \\<in> theNFT cl\n  theFT ?cl \\<inter> theNFT ?cl = {}\n\ngoal (1 subgoal):\n 1. n1 \\<noteq> n2 &&& n2 \\<noteq> n1", "by blast+"], ["", "(* The cumulated weight of the finished threads: *)"], ["", "definition \"WtFT cl \\<equiv> sum (\\<lambda> (n::nat). 1/(length cl)) (theFT cl)\""], ["", "(* The cumulated weight of the non-finished threads: *)"], ["", "definition \"WtNFT cl \\<equiv> sum (\\<lambda> (n::nat). 1/(length cl)) (theNFT cl)\""], ["", "lemma WtFT_WtNFT[simp]:\nassumes \"0 < length cl\"\nshows \"WtFT cl + WtNFT cl = 1\" (is \"?A = 1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. WtFT cl + WtNFT cl = 1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. WtFT cl + WtNFT cl = 1", "let ?w = \"\\<lambda> n. 1 / length cl\""], ["proof (state)\ngoal (1 subgoal):\n 1. WtFT cl + WtNFT cl = 1", "let ?L = \"theFT cl\""], ["proof (state)\ngoal (1 subgoal):\n 1. WtFT cl + WtNFT cl = 1", "let ?Lnot = \"theNFT cl\""], ["proof (state)\ngoal (1 subgoal):\n 1. WtFT cl + WtNFT cl = 1", "have 1: \"{..< length cl} = ?L Un ?Lnot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..<length cl} = theFT cl \\<union> theNFT cl", "by auto"], ["proof (state)\nthis:\n  {..<length cl} = theFT cl \\<union> theNFT cl\n\ngoal (1 subgoal):\n 1. WtFT cl + WtNFT cl = 1", "have \"?A = sum ?w ?L + sum ?w ?Lnot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. WtFT cl + WtNFT cl =\n    (\\<Sum>n\\<in>theFT cl. 1 / real (length cl)) +\n    (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl))", "unfolding WtFT_def WtNFT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>theFT cl. 1 / real (length cl)) +\n    (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl)) =\n    (\\<Sum>n\\<in>theFT cl. 1 / real (length cl)) +\n    (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl))", "by simp"], ["proof (state)\nthis:\n  WtFT cl + WtNFT cl =\n  (\\<Sum>n\\<in>theFT cl. 1 / real (length cl)) +\n  (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl))\n\ngoal (1 subgoal):\n 1. WtFT cl + WtNFT cl = 1", "also"], ["proof (state)\nthis:\n  WtFT cl + WtNFT cl =\n  (\\<Sum>n\\<in>theFT cl. 1 / real (length cl)) +\n  (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl))\n\ngoal (1 subgoal):\n 1. WtFT cl + WtNFT cl = 1", "have \"... = sum ?w {..< length cl}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>theFT cl. 1 / real (length cl)) +\n    (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl)) =\n    (\\<Sum>n<length cl. 1 / real (length cl))", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>theFT cl. 1 / real (length cl)) +\n    (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl)) =\n    (\\<Sum>n\\<in>theFT cl \\<union> theNFT cl. 1 / real (length cl))", "apply(rule sum.union_disjoint[THEN sym])"], ["proof (prove)\ngoal (3 subgoals):\n 1. finite (theFT cl)\n 2. finite (theNFT cl)\n 3. theFT cl \\<inter> theNFT cl = {}", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>theFT cl. 1 / real (length cl)) +\n  (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl)) =\n  (\\<Sum>n<length cl. 1 / real (length cl))\n\ngoal (1 subgoal):\n 1. WtFT cl + WtNFT cl = 1", "also"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>theFT cl. 1 / real (length cl)) +\n  (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl)) =\n  (\\<Sum>n<length cl. 1 / real (length cl))\n\ngoal (1 subgoal):\n 1. WtFT cl + WtNFT cl = 1", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n<length cl. 1 / real (length cl)) = 1", "unfolding sum_equal[OF assms]"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 = 1", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>n<length cl. 1 / real (length cl)) = 1\n\ngoal (1 subgoal):\n 1. WtFT cl + WtNFT cl = 1", "finally"], ["proof (chain)\npicking this:\n  WtFT cl + WtNFT cl = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  WtFT cl + WtNFT cl = 1\n\ngoal (1 subgoal):\n 1. WtFT cl + WtNFT cl = 1", "."], ["proof (state)\nthis:\n  WtFT cl + WtNFT cl = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma WtNFT_1_WtFT: \"0 < length cl \\<Longrightarrow> WtNFT cl = 1 - WtFT cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < length cl \\<Longrightarrow> WtNFT cl = 1 - WtFT cl", "by (simp add: algebra_simps)"], ["", "lemma WtNFT_WtFT_1[simp]:\nassumes \"0 < length cl\" and \"WtFT cl \\<noteq> 1\"\nshows \"WtNFT cl / (1 - WtFT cl) = 1\" (is \"?A / ?B = 1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. WtNFT cl / (1 - WtFT cl) = 1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. WtNFT cl / (1 - WtFT cl) = 1", "have A: \"?A = ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. WtNFT cl = 1 - WtFT cl", "using assms WtNFT_1_WtFT"], ["proof (prove)\nusing this:\n  0 < length cl\n  WtFT cl \\<noteq> 1\n  0 < length ?cl \\<Longrightarrow> WtNFT ?cl = 1 - WtFT ?cl\n\ngoal (1 subgoal):\n 1. WtNFT cl = 1 - WtFT cl", "by auto"], ["proof (state)\nthis:\n  WtNFT cl = 1 - WtFT cl\n\ngoal (1 subgoal):\n 1. WtNFT cl / (1 - WtFT cl) = 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. WtNFT cl / (1 - WtFT cl) = 1", "unfolding A"], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - WtFT cl) / (1 - WtFT cl) = 1", "using assms"], ["proof (prove)\nusing this:\n  0 < length cl\n  WtFT cl \\<noteq> 1\n\ngoal (1 subgoal):\n 1. (1 - WtFT cl) / (1 - WtFT cl) = 1", "by auto"], ["proof (state)\nthis:\n  WtNFT cl / (1 - WtFT cl) = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma WtFT_ge_0[simp]: \"WtFT cl \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> WtFT cl", "unfolding WtFT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (\\<Sum>n\\<in>theFT cl. 1 / real (length cl))", "by (rule sum_nonneg) simp"], ["", "lemma WtFT_le_1[simp]: \"WtFT cl \\<le> 1\" (is \"?L \\<le> 1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. WtFT cl \\<le> 1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. WtFT cl \\<le> 1", "let ?N = \"length cl\""], ["proof (state)\ngoal (1 subgoal):\n 1. WtFT cl \\<le> 1", "have \"?L \\<le> sum (\\<lambda> n::nat. 1/?N) {..< ?N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. WtFT cl \\<le> (\\<Sum>n<length cl. 1 / real (length cl))", "unfolding WtFT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>theFT cl. 1 / real (length cl))\n    \\<le> (\\<Sum>n<length cl. 1 / real (length cl))", "apply(rule sum_mono2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. finite {..<length cl}\n 2. theFT cl \\<subseteq> {..<length cl}\n 3. \\<And>b.\n       b \\<in> {..<length cl} - theFT cl \\<Longrightarrow>\n       0 \\<le> 1 / real (length cl)", "by auto"], ["proof (state)\nthis:\n  WtFT cl \\<le> (\\<Sum>n<length cl. 1 / real (length cl))\n\ngoal (1 subgoal):\n 1. WtFT cl \\<le> 1", "also"], ["proof (state)\nthis:\n  WtFT cl \\<le> (\\<Sum>n<length cl. 1 / real (length cl))\n\ngoal (1 subgoal):\n 1. WtFT cl \\<le> 1", "have \"... \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n<length cl. 1 / real (length cl)) \\<le> 1", "by (metis div_by_0 le_cases neq0_conv not_one_le_zero of_nat_0 sum.neutral sum_equal)"], ["proof (state)\nthis:\n  (\\<Sum>n<length cl. 1 / real (length cl)) \\<le> 1\n\ngoal (1 subgoal):\n 1. WtFT cl \\<le> 1", "finally"], ["proof (chain)\npicking this:\n  WtFT cl \\<le> 1", "show ?thesis"], ["proof (prove)\nusing this:\n  WtFT cl \\<le> 1\n\ngoal (1 subgoal):\n 1. WtFT cl \\<le> 1", "."], ["proof (state)\nthis:\n  WtFT cl \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma le_1_WtFT[simp]: \"0 \\<le> 1 - WtFT cl\" (is \"0 \\<le> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 1 - WtFT cl", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> 1 - WtFT cl", "have a: \"-1 \\<le> - WtFT cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 \\<le> - WtFT cl", "by simp"], ["proof (state)\nthis:\n  - 1 \\<le> - WtFT cl\n\ngoal (1 subgoal):\n 1. 0 \\<le> 1 - WtFT cl", "have \"(0 :: real) = 1 + (-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 = 1 + - 1", "by simp"], ["proof (state)\nthis:\n  0 = 1 + - 1\n\ngoal (1 subgoal):\n 1. 0 \\<le> 1 - WtFT cl", "also"], ["proof (state)\nthis:\n  0 = 1 + - 1\n\ngoal (1 subgoal):\n 1. 0 \\<le> 1 - WtFT cl", "have \"1 + (-1) \\<le> 1 + (- WtFT cl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + - 1 \\<le> 1 + - WtFT cl", "using a"], ["proof (prove)\nusing this:\n  - 1 \\<le> - WtFT cl\n\ngoal (1 subgoal):\n 1. 1 + - 1 \\<le> 1 + - WtFT cl", "by arith"], ["proof (state)\nthis:\n  1 + - 1 \\<le> 1 + - WtFT cl\n\ngoal (1 subgoal):\n 1. 0 \\<le> 1 - WtFT cl", "also"], ["proof (state)\nthis:\n  1 + - 1 \\<le> 1 + - WtFT cl\n\ngoal (1 subgoal):\n 1. 0 \\<le> 1 - WtFT cl", "have \"... = ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + - WtFT cl = 1 - WtFT cl", "by simp"], ["proof (state)\nthis:\n  1 + - WtFT cl = 1 - WtFT cl\n\ngoal (1 subgoal):\n 1. 0 \\<le> 1 - WtFT cl", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> 1 - WtFT cl", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> 1 - WtFT cl\n\ngoal (1 subgoal):\n 1. 0 \\<le> 1 - WtFT cl", "."], ["proof (state)\nthis:\n  0 \\<le> 1 - WtFT cl\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma WtFT_lt_1[simp]: \"WtFT cl \\<noteq> 1 \\<Longrightarrow> WtFT cl < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> WtFT cl < 1", "using WtFT_le_1"], ["proof (prove)\nusing this:\n  WtFT ?cl \\<le> 1\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> WtFT cl < 1", "by (auto simp add: le_less)"], ["", "lemma lt_1_WtFT[simp]: \"WtFT cl \\<noteq> 1 \\<Longrightarrow> 0 < 1 - WtFT cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 0 < 1 - WtFT cl", "using le_1_WtFT"], ["proof (prove)\nusing this:\n  0 \\<le> 1 - WtFT ?cl\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 0 < 1 - WtFT cl", "by (metis le_1_WtFT eq_iff_diff_eq_0 less_eq_real_def)"], ["", "lemma notFinished_WtFT[simp]:\nassumes \"n < length cl\" and \"\\<not> finished (cl ! n)\"\nshows \"1 / length cl \\<le> 1 - WtFT cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / real (length cl) \\<le> 1 - WtFT cl", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 / real (length cl) \\<le> 1 - WtFT cl", "have \"0 < length cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < length cl", "using assms"], ["proof (prove)\nusing this:\n  n < length cl\n  \\<not> finished (cl ! n)\n\ngoal (1 subgoal):\n 1. 0 < length cl", "by auto"], ["proof (state)\nthis:\n  0 < length cl\n\ngoal (1 subgoal):\n 1. 1 / real (length cl) \\<le> 1 - WtFT cl", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 < length cl\n\ngoal (1 subgoal):\n 1. 1 / real (length cl) \\<le> 1 - WtFT cl", "unfolding WtFT_def"], ["proof (prove)\nusing this:\n  0 < length cl\n\ngoal (1 subgoal):\n 1. 1 / real (length cl)\n    \\<le> 1 - (\\<Sum>n\\<in>theFT cl. 1 / real (length cl))", "apply(intro sum_1[of \"{..< length cl}\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. 0 < length cl \\<Longrightarrow> finite {..<length cl}\n 2. 0 < length cl \\<Longrightarrow>\n    (\\<Sum>n<length cl. 1 / real (length cl)) = 1\n 3. 0 < length cl \\<Longrightarrow> ?i1 \\<in> {..<length cl} - theFT cl\n 4. 0 < length cl \\<Longrightarrow> theFT cl \\<subseteq> {..<length cl}\n 5. \\<And>i.\n       \\<lbrakk>0 < length cl; i \\<in> {..<length cl}\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> 1 / real (length cl)", "using assms"], ["proof (prove)\nusing this:\n  n < length cl\n  \\<not> finished (cl ! n)\n\ngoal (5 subgoals):\n 1. 0 < length cl \\<Longrightarrow> finite {..<length cl}\n 2. 0 < length cl \\<Longrightarrow>\n    (\\<Sum>n<length cl. 1 / real (length cl)) = 1\n 3. 0 < length cl \\<Longrightarrow> ?i1 \\<in> {..<length cl} - theFT cl\n 4. 0 < length cl \\<Longrightarrow> theFT cl \\<subseteq> {..<length cl}\n 5. \\<And>i.\n       \\<lbrakk>0 < length cl; i \\<in> {..<length cl}\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> 1 / real (length cl)", "by auto"], ["proof (state)\nthis:\n  1 / real (length cl) \\<le> 1 - WtFT cl\n\ngoal:\nNo subgoals!", "qed"], ["", "(* The branching of a command: *)"], ["", "fun brn :: \"('test, 'atom, 'choice) cmd \\<Rightarrow> nat\" where\n  \"brn Done = 1\"\n| \"brn (Atm atm) = 1\"\n| \"brn (c1 ;; c2) = brn c1\"\n| \"brn (While tst c) = 1\"\n| \"brn (Ch ch c1 c2) = 2\"\n| \"brn (Par cl) = lsum brn cl\"\n| \"brn (ParT cl) = lsum brn cl\""], ["", "lemma brn_gt_0: \"proper c \\<Longrightarrow> 0 < brn c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper c \\<Longrightarrow> 0 < brn c", "by (induct rule: proper_induct) auto"], ["", "lemma brn_gt_0_L: \"\\<lbrakk>properL cl; c \\<in> set cl\\<rbrakk> \\<Longrightarrow> 0 < brn c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>properL cl; c \\<in> set cl\\<rbrakk> \\<Longrightarrow> 0 < brn c", "by (metis brn_gt_0 properL_def)"], ["", "(* The locate-thread and locate-index operators.\n   Given a thread list cl with n = length cl and i < (\\<Sum> l < length cl . brn cl),\n   (locateT cl i, locateI cl i) are (k, j) from the paper's Figure 1.\n*)"], ["", "definition \"locateT \\<equiv> locate1 brn\""], ["", "definition \"locateI \\<equiv> locate2 brn\""], ["", "definition \"brnL cl n \\<equiv> lsum brn (take n cl)\""], ["", "lemma brnL_lsum: \"brnL cl (length cl) = lsum brn cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. brnL cl (length cl) = lsum brn cl", "unfolding brnL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lsum brn (take (length cl) cl) = lsum brn cl", "by simp"], ["", "lemma brnL_unique:\nassumes \"properL cl\" and \"n1 < length cl \\<and> j1 < brn (cl ! n1)\"\nand \"n2 < length cl \\<and> j2 < brn (cl ! n2)\" and \"brnL cl n1 + j1 = brnL cl n2 + j2\"\nshows \"n1 = n2 \\<and> j1 = j2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n1 = n2 \\<and> j1 = j2", "apply (rule less_lsum_unique)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a. a \\<in> set ?al \\<Longrightarrow> 0 < ?f a\n 2. n1 < length ?al \\<and> j1 < ?f (?al ! n1)\n 3. n2 < length ?al \\<and> j2 < ?f (?al ! n2)\n 4. lsum ?f (take n1 ?al) + j1 = lsum ?f (take n2 ?al) + j2", "using assms brn_gt_0"], ["proof (prove)\nusing this:\n  properL cl\n  n1 < length cl \\<and> j1 < brn (cl ! n1)\n  n2 < length cl \\<and> j2 < brn (cl ! n2)\n  brnL cl n1 + j1 = brnL cl n2 + j2\n  proper ?c \\<Longrightarrow> 0 < brn ?c\n\ngoal (4 subgoals):\n 1. \\<And>a. a \\<in> set ?al \\<Longrightarrow> 0 < ?f a\n 2. n1 < length ?al \\<and> j1 < ?f (?al ! n1)\n 3. n2 < length ?al \\<and> j2 < ?f (?al ! n2)\n 4. lsum ?f (take n1 ?al) + j1 = lsum ?f (take n2 ?al) + j2", "unfolding brnL_def properL_def"], ["proof (prove)\nusing this:\n  cl \\<noteq> [] \\<and> (\\<forall>c\\<in>set cl. proper c)\n  n1 < length cl \\<and> j1 < brn (cl ! n1)\n  n2 < length cl \\<and> j2 < brn (cl ! n2)\n  lsum brn (take n1 cl) + j1 = lsum brn (take n2 cl) + j2\n  proper ?c \\<Longrightarrow> 0 < brn ?c\n\ngoal (4 subgoals):\n 1. \\<And>a. a \\<in> set ?al \\<Longrightarrow> 0 < ?f a\n 2. n1 < length ?al \\<and> j1 < ?f (?al ! n1)\n 3. n2 < length ?al \\<and> j2 < ?f (?al ! n2)\n 4. lsum ?f (take n1 ?al) + j1 = lsum ?f (take n2 ?al) + j2", "by auto"], ["", "lemma brn_Par_simp[simp]: \"brn (Par cl) = brnL cl (length cl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. brn (Par cl) = brnL cl (length cl)", "unfolding brnL_lsum"], ["proof (prove)\ngoal (1 subgoal):\n 1. brn (Par cl) = lsum brn cl", "by simp"], ["", "lemma brn_ParT_simp[simp]: \"brn (ParT cl) = brnL cl (length cl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. brn (ParT cl) = brnL cl (length cl)", "unfolding brnL_lsum"], ["proof (prove)\ngoal (1 subgoal):\n 1. brn (ParT cl) = lsum brn cl", "by simp"], ["", "declare brn.simps(6)[simp del]"], ["", "declare brn.simps(7)[simp del]"], ["", "lemma brnL_0[simp]: \"brnL cl 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. brnL cl 0 = 0", "unfolding brnL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lsum brn (take 0 cl) = 0", "by auto"], ["", "lemma brnL_Suc[simp]: \"n < length cl \\<Longrightarrow> brnL cl (Suc n) = brnL cl n + brn (cl ! n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < length cl \\<Longrightarrow>\n    brnL cl (Suc n) = brnL cl n + brn (cl ! n)", "unfolding brnL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. n < length cl \\<Longrightarrow>\n    lsum brn (take (Suc n) cl) = lsum brn (take n cl) + brn (cl ! n)", "using take_Suc_conv_app_nth[of n cl]"], ["proof (prove)\nusing this:\n  n < length cl \\<Longrightarrow> take (Suc n) cl = take n cl @ [cl ! n]\n\ngoal (1 subgoal):\n 1. n < length cl \\<Longrightarrow>\n    lsum brn (take (Suc n) cl) = lsum brn (take n cl) + brn (cl ! n)", "by simp"], ["", "lemma brnL_mono[simp]: \"n1 \\<le> n2 \\<Longrightarrow> brnL cl n1 \\<le> brnL cl n2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n1 \\<le> n2 \\<Longrightarrow> brnL cl n1 \\<le> brnL cl n2", "using le_take[of n1 n2 cl]"], ["proof (prove)\nusing this:\n  n1 \\<le> n2 \\<Longrightarrow> take n1 cl \\<le> take n2 cl\n\ngoal (1 subgoal):\n 1. n1 \\<le> n2 \\<Longrightarrow> brnL cl n1 \\<le> brnL cl n2", "unfolding brnL_def"], ["proof (prove)\nusing this:\n  n1 \\<le> n2 \\<Longrightarrow> take n1 cl \\<le> take n2 cl\n\ngoal (1 subgoal):\n 1. n1 \\<le> n2 \\<Longrightarrow>\n    lsum brn (take n1 cl) \\<le> lsum brn (take n2 cl)", "by simp"], ["", "lemma brnL_mono2[simp]:\nassumes p: \"properL cl\" and n: \"n1 < n2\" and l: \"n2 \\<le> length cl\"\nshows \"brnL cl n1 < brnL cl n2\" (is \"?L < ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. brnL cl n1 < brnL cl n2", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. brnL cl n1 < brnL cl n2", "have 1: \"\\<And>c. c \\<in> set (take n2 cl) \\<Longrightarrow> 0 < brn c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> set (take n2 cl) \\<Longrightarrow> 0 < brn c", "using p"], ["proof (prove)\nusing this:\n  properL cl\n\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> set (take n2 cl) \\<Longrightarrow> 0 < brn c", "by (metis brn_gt_0 in_set_takeD properL_proper)"], ["proof (state)\nthis:\n  ?c \\<in> set (take n2 cl) \\<Longrightarrow> 0 < brn ?c\n\ngoal (1 subgoal):\n 1. brnL cl n1 < brnL cl n2", "have \"take n1 cl < take n2 cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take n1 cl < take n2 cl", "using n l lt_take"], ["proof (prove)\nusing this:\n  n1 < n2\n  n2 \\<le> length cl\n  \\<lbrakk>?n1.0 < ?n2.0; ?n2.0 \\<le> length ?al\\<rbrakk>\n  \\<Longrightarrow> take ?n1.0 ?al < take ?n2.0 ?al\n\ngoal (1 subgoal):\n 1. take n1 cl < take n2 cl", "by auto"], ["proof (state)\nthis:\n  take n1 cl < take n2 cl\n\ngoal (1 subgoal):\n 1. brnL cl n1 < brnL cl n2", "hence \"lsum brn (take n1 cl) < lsum brn (take n2 cl)\""], ["proof (prove)\nusing this:\n  take n1 cl < take n2 cl\n\ngoal (1 subgoal):\n 1. lsum brn (take n1 cl) < lsum brn (take n2 cl)", "using lsum_mono2[of \"take n2 cl\" \"%c. brn c\" \"take n1 cl\"] 1"], ["proof (prove)\nusing this:\n  take n1 cl < take n2 cl\n  \\<lbrakk>\\<And>b. b \\<in> set (take n2 cl) \\<Longrightarrow> 0 < brn b;\n   take n1 cl < take n2 cl\\<rbrakk>\n  \\<Longrightarrow> lsum brn (take n1 cl) < lsum brn (take n2 cl)\n  ?c \\<in> set (take n2 cl) \\<Longrightarrow> 0 < brn ?c\n\ngoal (1 subgoal):\n 1. lsum brn (take n1 cl) < lsum brn (take n2 cl)", "by simp"], ["proof (state)\nthis:\n  lsum brn (take n1 cl) < lsum brn (take n2 cl)\n\ngoal (1 subgoal):\n 1. brnL cl n1 < brnL cl n2", "thus ?thesis"], ["proof (prove)\nusing this:\n  lsum brn (take n1 cl) < lsum brn (take n2 cl)\n\ngoal (1 subgoal):\n 1. brnL cl n1 < brnL cl n2", "unfolding brnL_def"], ["proof (prove)\nusing this:\n  lsum brn (take n1 cl) < lsum brn (take n2 cl)\n\ngoal (1 subgoal):\n 1. lsum brn (take n1 cl) < lsum brn (take n2 cl)", "."], ["proof (state)\nthis:\n  brnL cl n1 < brnL cl n2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma brn_index[simp]:\nassumes n: \"n < length cl\" and i: \"i < brn (cl ! n)\"\nshows \"brnL cl n + i < brnL cl (length cl)\" (is \"?L < ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. brnL cl n + i < brnL cl (length cl)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. brnL cl n + i < brnL cl (length cl)", "have \"?L < brnL cl (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. brnL cl n + i < brnL cl (Suc n)", "using assms"], ["proof (prove)\nusing this:\n  n < length cl\n  i < brn (cl ! n)\n\ngoal (1 subgoal):\n 1. brnL cl n + i < brnL cl (Suc n)", "by simp"], ["proof (state)\nthis:\n  brnL cl n + i < brnL cl (Suc n)\n\ngoal (1 subgoal):\n 1. brnL cl n + i < brnL cl (length cl)", "also"], ["proof (state)\nthis:\n  brnL cl n + i < brnL cl (Suc n)\n\ngoal (1 subgoal):\n 1. brnL cl n + i < brnL cl (length cl)", "have \"... \\<le> ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. brnL cl (Suc n) \\<le> brnL cl (length cl)", "using n brnL_mono[of \"Suc n\" \"length cl\" cl]"], ["proof (prove)\nusing this:\n  n < length cl\n  Suc n \\<le> length cl \\<Longrightarrow>\n  brnL cl (Suc n) \\<le> brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. brnL cl (Suc n) \\<le> brnL cl (length cl)", "by simp"], ["proof (state)\nthis:\n  brnL cl (Suc n) \\<le> brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. brnL cl n + i < brnL cl (length cl)", "finally"], ["proof (chain)\npicking this:\n  brnL cl n + i < brnL cl (length cl)", "show ?thesis"], ["proof (prove)\nusing this:\n  brnL cl n + i < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. brnL cl n + i < brnL cl (length cl)", "."], ["proof (state)\nthis:\n  brnL cl n + i < brnL cl (length cl)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma brnL_gt_0[simp]: \"\\<lbrakk>properL cl; 0 < n\\<rbrakk> \\<Longrightarrow> 0 < brnL cl n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>properL cl; 0 < n\\<rbrakk> \\<Longrightarrow> 0 < brnL cl n", "by (metis properL_def brnL_mono brnL_mono2 le_0_eq length_greater_0_conv nat_le_linear neq0_conv)"], ["", "lemma locateTI:\nassumes \"properL cl\" and \"ii < brn (Par cl)\"\nshows\n\"locateT cl ii < length cl \\<and>\n locateI cl ii < brn (cl ! (locateT cl ii)) \\<and>\n ii = brnL cl (locateT cl ii) + locateI cl ii\""], ["proof (prove)\ngoal (1 subgoal):\n 1. locateT cl ii < length cl \\<and>\n    locateI cl ii < brn (cl ! locateT cl ii) \\<and>\n    ii = brnL cl (locateT cl ii) + locateI cl ii", "using assms locate[of cl brn] brn_gt_0"], ["proof (prove)\nusing this:\n  properL cl\n  ii < brn (Par cl)\n  \\<lbrakk>\\<And>a. a \\<in> set cl \\<Longrightarrow> 0 < brn a;\n   ?i < lsum brn cl\\<rbrakk>\n  \\<Longrightarrow> locate1 brn cl ?i < length cl \\<and>\n                    locate2 brn cl ?i < brn (cl ! locate1 brn cl ?i) \\<and>\n                    ?i =\n                    lsum brn (take (locate1 brn cl ?i) cl) +\n                    locate2 brn cl ?i\n  proper ?c \\<Longrightarrow> 0 < brn ?c\n\ngoal (1 subgoal):\n 1. locateT cl ii < length cl \\<and>\n    locateI cl ii < brn (cl ! locateT cl ii) \\<and>\n    ii = brnL cl (locateT cl ii) + locateI cl ii", "unfolding locateT_def locateI_def brnL_def"], ["proof (prove)\nusing this:\n  properL cl\n  ii < brn (Par cl)\n  \\<lbrakk>\\<And>a. a \\<in> set cl \\<Longrightarrow> 0 < brn a;\n   ?i < lsum brn cl\\<rbrakk>\n  \\<Longrightarrow> locate1 brn cl ?i < length cl \\<and>\n                    locate2 brn cl ?i < brn (cl ! locate1 brn cl ?i) \\<and>\n                    ?i =\n                    lsum brn (take (locate1 brn cl ?i) cl) +\n                    locate2 brn cl ?i\n  proper ?c \\<Longrightarrow> 0 < brn ?c\n\ngoal (1 subgoal):\n 1. locate1 brn cl ii < length cl \\<and>\n    locate2 brn cl ii < brn (cl ! locate1 brn cl ii) \\<and>\n    ii = lsum brn (take (locate1 brn cl ii) cl) + locate2 brn cl ii", "unfolding brnL_lsum[THEN sym]"], ["proof (prove)\nusing this:\n  properL cl\n  ii < brn (Par cl)\n  \\<lbrakk>\\<And>a. a \\<in> set cl \\<Longrightarrow> 0 < brn a;\n   ?i < brnL cl (length cl)\\<rbrakk>\n  \\<Longrightarrow> locate1 brn cl ?i < length cl \\<and>\n                    locate2 brn cl ?i < brn (cl ! locate1 brn cl ?i) \\<and>\n                    ?i =\n                    brnL (take (locate1 brn cl ?i) cl)\n                     (length (take (locate1 brn cl ?i) cl)) +\n                    locate2 brn cl ?i\n  proper ?c \\<Longrightarrow> 0 < brn ?c\n\ngoal (1 subgoal):\n 1. locate1 brn cl ii < length cl \\<and>\n    locate2 brn cl ii < brn (cl ! locate1 brn cl ii) \\<and>\n    ii =\n    brnL (take (locate1 brn cl ii) cl)\n     (length (take (locate1 brn cl ii) cl)) +\n    locate2 brn cl ii", "by auto"], ["", "lemma locateTI_unique:\nassumes \"properL cl\" and \"n < length cl\"\nand \"i < brn (cl ! n)\" and \"ii = brnL cl n + i\"\nshows \"n = locateT cl ii \\<and> i = locateI cl ii\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = locateT cl ii \\<and> i = locateI cl ii", "using assms locate_unique[of cl brn] brn_gt_0"], ["proof (prove)\nusing this:\n  properL cl\n  n < length cl\n  i < brn (cl ! n)\n  ii = brnL cl n + i\n  \\<lbrakk>\\<And>a. a \\<in> set cl \\<Longrightarrow> 0 < brn a;\n   ?n < length cl; ?j < brn (cl ! ?n);\n   ?i = lsum brn (take ?n cl) + ?j\\<rbrakk>\n  \\<Longrightarrow> ?n = locate1 brn cl ?i \\<and> ?j = locate2 brn cl ?i\n  proper ?c \\<Longrightarrow> 0 < brn ?c\n\ngoal (1 subgoal):\n 1. n = locateT cl ii \\<and> i = locateI cl ii", "unfolding locateT_def locateI_def brnL_def"], ["proof (prove)\nusing this:\n  properL cl\n  n < length cl\n  i < brn (cl ! n)\n  ii = lsum brn (take n cl) + i\n  \\<lbrakk>\\<And>a. a \\<in> set cl \\<Longrightarrow> 0 < brn a;\n   ?n < length cl; ?j < brn (cl ! ?n);\n   ?i = lsum brn (take ?n cl) + ?j\\<rbrakk>\n  \\<Longrightarrow> ?n = locate1 brn cl ?i \\<and> ?j = locate2 brn cl ?i\n  proper ?c \\<Longrightarrow> 0 < brn ?c\n\ngoal (1 subgoal):\n 1. n = locate1 brn cl ii \\<and> i = locate2 brn cl ii", "unfolding brnL_lsum[THEN sym]"], ["proof (prove)\nusing this:\n  properL cl\n  n < length cl\n  i < brn (cl ! n)\n  ii = brnL (take n cl) (length (take n cl)) + i\n  \\<lbrakk>\\<And>a. a \\<in> set cl \\<Longrightarrow> 0 < brn a;\n   ?n < length cl; ?j < brn (cl ! ?n);\n   ?i = brnL (take ?n cl) (length (take ?n cl)) + ?j\\<rbrakk>\n  \\<Longrightarrow> ?n = locate1 brn cl ?i \\<and> ?j = locate2 brn cl ?i\n  proper ?c \\<Longrightarrow> 0 < brn ?c\n\ngoal (1 subgoal):\n 1. n = locate1 brn cl ii \\<and> i = locate2 brn cl ii", "by auto"], ["", "(*  pickFT picks a finished thread (if there is any).\n    It will be used to perform a dummy transition in case the cumulated weight of the\n    finished threads is 0; specifically, one will assign probability 1 to that picked fresh.\n    (Obviously, the particular choice does not matter.)   *)"], ["", "definition pickFT_pred where \"pickFT_pred cl n \\<equiv> n < length cl \\<and> finished (cl!n)\""], ["", "definition pickFT where \"pickFT cl \\<equiv> SOME n. pickFT_pred cl n\""], ["", "lemma pickFT_pred:\nassumes \"WtFT cl = 1\"  shows \"\\<exists> n. pickFT_pred cl n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. pickFT_pred cl n", "proof(rule ccontr, unfold not_ex)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x. \\<not> pickFT_pred cl x \\<Longrightarrow> False", "assume \"\\<forall>n. \\<not> pickFT_pred cl n\""], ["proof (state)\nthis:\n  \\<forall>n. \\<not> pickFT_pred cl n\n\ngoal (1 subgoal):\n 1. \\<forall>x. \\<not> pickFT_pred cl x \\<Longrightarrow> False", "hence \"\\<And> n. n < length cl \\<Longrightarrow> \\<not> finished (cl!n)\""], ["proof (prove)\nusing this:\n  \\<forall>n. \\<not> pickFT_pred cl n\n\ngoal (1 subgoal):\n 1. \\<And>n. n < length cl \\<Longrightarrow> \\<not> finished (cl ! n)", "unfolding pickFT_pred_def"], ["proof (prove)\nusing this:\n  \\<forall>n. \\<not> (n < length cl \\<and> finished (cl ! n))\n\ngoal (1 subgoal):\n 1. \\<And>n. n < length cl \\<Longrightarrow> \\<not> finished (cl ! n)", "by auto"], ["proof (state)\nthis:\n  ?n < length cl \\<Longrightarrow> \\<not> finished (cl ! ?n)\n\ngoal (1 subgoal):\n 1. \\<forall>x. \\<not> pickFT_pred cl x \\<Longrightarrow> False", "hence \"theFT cl = {}\""], ["proof (prove)\nusing this:\n  ?n < length cl \\<Longrightarrow> \\<not> finished (cl ! ?n)\n\ngoal (1 subgoal):\n 1. theFT cl = {}", "unfolding theFT_def"], ["proof (prove)\nusing this:\n  ?n < length cl \\<Longrightarrow> \\<not> finished (cl ! ?n)\n\ngoal (1 subgoal):\n 1. {n. n < length cl \\<and> finished (cl ! n)} = {}", "by auto"], ["proof (state)\nthis:\n  theFT cl = {}\n\ngoal (1 subgoal):\n 1. \\<forall>x. \\<not> pickFT_pred cl x \\<Longrightarrow> False", "hence \"WtFT cl = 0\""], ["proof (prove)\nusing this:\n  theFT cl = {}\n\ngoal (1 subgoal):\n 1. WtFT cl = 0", "unfolding WtFT_def"], ["proof (prove)\nusing this:\n  theFT cl = {}\n\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>theFT cl. 1 / real (length cl)) = 0", "by simp"], ["proof (state)\nthis:\n  WtFT cl = 0\n\ngoal (1 subgoal):\n 1. \\<forall>x. \\<not> pickFT_pred cl x \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  WtFT cl = 0\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  WtFT cl = 0\n  WtFT cl = 1\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pickFT_pred_pickFT: \"WtFT cl = 1 \\<Longrightarrow> pickFT_pred cl (pickFT cl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. WtFT cl = 1 \\<Longrightarrow> pickFT_pred cl (pickFT cl)", "unfolding pickFT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. WtFT cl = 1 \\<Longrightarrow> pickFT_pred cl (SOME n. pickFT_pred cl n)", "by(auto intro: someI_ex pickFT_pred)"], ["", "lemma pickFT_length[simp]: \"WtFT cl = 1 \\<Longrightarrow> pickFT cl < length cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. WtFT cl = 1 \\<Longrightarrow> pickFT cl < length cl", "using pickFT_pred_pickFT"], ["proof (prove)\nusing this:\n  WtFT ?cl = 1 \\<Longrightarrow> pickFT_pred ?cl (pickFT ?cl)\n\ngoal (1 subgoal):\n 1. WtFT cl = 1 \\<Longrightarrow> pickFT cl < length cl", "unfolding pickFT_pred_def"], ["proof (prove)\nusing this:\n  WtFT ?cl = 1 \\<Longrightarrow>\n  pickFT ?cl < length ?cl \\<and> finished (?cl ! pickFT ?cl)\n\ngoal (1 subgoal):\n 1. WtFT cl = 1 \\<Longrightarrow> pickFT cl < length cl", "by auto"], ["", "lemma pickFT_finished[simp]: \"WtFT cl = 1 \\<Longrightarrow> finished (cl ! (pickFT cl))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. WtFT cl = 1 \\<Longrightarrow> finished (cl ! pickFT cl)", "using pickFT_pred_pickFT"], ["proof (prove)\nusing this:\n  WtFT ?cl = 1 \\<Longrightarrow> pickFT_pred ?cl (pickFT ?cl)\n\ngoal (1 subgoal):\n 1. WtFT cl = 1 \\<Longrightarrow> finished (cl ! pickFT cl)", "unfolding pickFT_pred_def"], ["proof (prove)\nusing this:\n  WtFT ?cl = 1 \\<Longrightarrow>\n  pickFT ?cl < length ?cl \\<and> finished (?cl ! pickFT ?cl)\n\ngoal (1 subgoal):\n 1. WtFT cl = 1 \\<Longrightarrow> finished (cl ! pickFT cl)", "by auto"], ["", "lemma pickFT_theFT[simp]: \"WtFT cl = 1 \\<Longrightarrow> pickFT cl \\<in> theFT cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. WtFT cl = 1 \\<Longrightarrow> pickFT cl \\<in> theFT cl", "unfolding theFT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. WtFT cl = 1 \\<Longrightarrow>\n    pickFT cl \\<in> {n. n < length cl \\<and> finished (cl ! n)}", "by auto"], ["", "(* The weight, continuation and effect defined as a single operator: *)"], ["", "fun wt_cont_eff where\n\"wt_cont_eff Done s i = (1, Done, s)\"\n|\n\"wt_cont_eff (Atm atm) s i = (1, Done, aval atm s)\"\n|\n\"wt_cont_eff (c1 ;; c2) s i =\n (case wt_cont_eff c1 s i of\n    (x, c1', s') \\<Rightarrow>\n      if finished c1' then (x, c2, s') else (x, c1' ;; c2, s'))\"\n|\n\"wt_cont_eff (While tst c) s i =\n(if tval tst s\n   then (1, c ;; (While tst c), s)\n   else (1, Done, s))\"\n|\n\"wt_cont_eff (Ch ch c1 c2) s i =\n (if i = 0 then cval ch s else 1 - cval ch s,\n  if i = 0 then c1 else c2,\n  s)\"\n|\n\"wt_cont_eff (Par cl) s ii =\n (if cl ! (locateT cl ii) \\<in> set cl then\n (case wt_cont_eff\n         (cl ! (locateT cl ii))\n         s\n         (locateI cl ii) of\n    (w, c', s') \\<Rightarrow>\n      ((1 / (length cl)) * w,\n       Par (cl [(locateT cl ii) := c']),\n       s'))\n  else undefined)\"\n|\n\"wt_cont_eff (ParT cl) s ii =\n (if cl ! (locateT cl ii) \\<in> set cl\n   then\n     (case wt_cont_eff\n             (cl ! (locateT cl ii))\n             s\n             (locateI cl ii) of\n        (w, c', s') \\<Rightarrow>\n           (if WtFT cl = 1\n            then (if locateT cl ii = pickFT cl \\<and> locateI cl ii = 0\n                    then 1\n                    else 0)\n            else if finished (cl ! (locateT cl ii))\n              then 0\n              else (1 / (length cl))\n                   / (1 - WtFT cl)\n                   * w,\n            ParT (cl [(locateT cl ii) := c']),\n            s'))\n   else undefined)\""], ["", "(* weight, cont (transition) and effect: *)"], ["", "definition wt where \"wt c s i = fst (wt_cont_eff c s i)\""], ["", "definition cont where \"cont c s i = fst (snd (wt_cont_eff c s i))\""], ["", "definition eff where \"eff c s i = snd (snd (wt_cont_eff c s i))\""], ["", "(* Their individual equations (corresponding to the paper's Figure 1):  *)"], ["", "lemma wt_Done[simp]: \"wt Done s i = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt Done s i = 1", "unfolding wt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (wt_cont_eff Done s i) = 1", "by simp"], ["", "lemma wt_Atm[simp]: \"wt (Atm atm) s i = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (Atm atm) s i = 1", "unfolding wt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (wt_cont_eff (Atm atm) s i) = 1", "by simp"], ["", "lemma wt_Seq[simp]:\n\"wt (c1 ;; c2) s = wt c1 s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (c1 ;; c2) s = wt c1 s", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. wt (c1 ;; c2) s = wt c1 s", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. wt (c1 ;; c2) s = wt c1 s", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. wt (c1 ;; c2) s = wt c1 s", "have \"wt (c1 ;; c2) s i = wt c1 s i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (c1 ;; c2) s i = wt c1 s i", "proof(cases \"wt_cont_eff c1 s i\")"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff c1 s i = (a, b, c) \\<Longrightarrow>\n       wt (c1 ;; c2) s i = wt c1 s i", "case (fields _ c1' _)"], ["proof (state)\nthis:\n  wt_cont_eff c1 s i = (a_, c1', c_)\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff c1 s i = (a, b, c) \\<Longrightarrow>\n       wt (c1 ;; c2) s i = wt c1 s i", "thus ?thesis"], ["proof (prove)\nusing this:\n  wt_cont_eff c1 s i = (a_, c1', c_)\n\ngoal (1 subgoal):\n 1. wt (c1 ;; c2) s i = wt c1 s i", "unfolding wt_def"], ["proof (prove)\nusing this:\n  wt_cont_eff c1 s i = (a_, c1', c_)\n\ngoal (1 subgoal):\n 1. fst (wt_cont_eff (c1 ;; c2) s i) = fst (wt_cont_eff c1 s i)", "by(cases c1', auto)"], ["proof (state)\nthis:\n  wt (c1 ;; c2) s i = wt c1 s i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wt (c1 ;; c2) s i = wt c1 s i\n\ngoal (1 subgoal):\n 1. wt (c1 ;; c2) s = wt c1 s", "}"], ["proof (state)\nthis:\n  wt (c1 ;; c2) s ?i2 = wt c1 s ?i2\n\ngoal (1 subgoal):\n 1. wt (c1 ;; c2) s = wt c1 s", "thus ?thesis"], ["proof (prove)\nusing this:\n  wt (c1 ;; c2) s ?i2 = wt c1 s ?i2\n\ngoal (1 subgoal):\n 1. wt (c1 ;; c2) s = wt c1 s", "by auto"], ["proof (state)\nthis:\n  wt (c1 ;; c2) s = wt c1 s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wt_While[simp]: \"wt (While tst c) s i = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (While tst c) s i = 1", "unfolding wt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (wt_cont_eff (While tst c) s i) = 1", "by simp"], ["", "lemma wt_Ch_L[simp]: \"wt (Ch ch c1 c2) s 0 = cval ch s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (Ch ch c1 c2) s 0 = cval ch s", "unfolding wt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (wt_cont_eff (Ch ch c1 c2) s 0) = cval ch s", "by simp"], ["", "lemma wt_Ch_R[simp]: \"wt (Ch ch c1 c2) s (Suc n) = 1 - cval ch s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (Ch ch c1 c2) s (Suc n) = 1 - cval ch s", "unfolding wt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (wt_cont_eff (Ch ch c1 c2) s (Suc n)) = 1 - cval ch s", "by simp"], ["", "(*  *)"], ["", "lemma cont_Done[simp]: \"cont Done s i = Done\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.cont Done s i = Done", "unfolding cont_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (snd (wt_cont_eff Done s i)) = Done", "by simp"], ["", "lemma cont_Atm[simp]: \"cont (Atm atm) s i = Done\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.cont (Atm atm) s i = Done", "unfolding cont_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (snd (wt_cont_eff (Atm atm) s i)) = Done", "by simp"], ["", "lemma cont_Seq_finished[simp]: \"finished (cont c1 s i) \\<Longrightarrow> cont (c1 ;; c2) s i = c2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finished (local.cont c1 s i) \\<Longrightarrow>\n    local.cont (c1 ;; c2) s i = c2", "unfolding cont_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finished (fst (snd (wt_cont_eff c1 s i))) \\<Longrightarrow>\n    fst (snd (wt_cont_eff (c1 ;; c2) s i)) = c2", "by(cases \"wt_cont_eff c1 s i\") auto"], ["", "lemma cont_Seq_notFinished[simp]:\nassumes \"\\<not> finished (cont c1 s i)\"\nshows \"cont (c1 ;; c2) s i = (cont c1 s i) ;; c2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.cont (c1 ;; c2) s i = local.cont c1 s i ;; c2", "proof(cases \"wt_cont_eff c1 s i\")"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff c1 s i = (a, b, c) \\<Longrightarrow>\n       local.cont (c1 ;; c2) s i = local.cont c1 s i ;; c2", "case (fields _ c1' _)"], ["proof (state)\nthis:\n  wt_cont_eff c1 s i = (a_, c1', c_)\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff c1 s i = (a, b, c) \\<Longrightarrow>\n       local.cont (c1 ;; c2) s i = local.cont c1 s i ;; c2", "thus ?thesis"], ["proof (prove)\nusing this:\n  wt_cont_eff c1 s i = (a_, c1', c_)\n\ngoal (1 subgoal):\n 1. local.cont (c1 ;; c2) s i = local.cont c1 s i ;; c2", "using assms"], ["proof (prove)\nusing this:\n  wt_cont_eff c1 s i = (a_, c1', c_)\n  \\<not> finished (local.cont c1 s i)\n\ngoal (1 subgoal):\n 1. local.cont (c1 ;; c2) s i = local.cont c1 s i ;; c2", "unfolding cont_def"], ["proof (prove)\nusing this:\n  wt_cont_eff c1 s i = (a_, c1', c_)\n  \\<not> finished (fst (snd (wt_cont_eff c1 s i)))\n\ngoal (1 subgoal):\n 1. fst (snd (wt_cont_eff (c1 ;; c2) s i)) =\n    fst (snd (wt_cont_eff c1 s i)) ;; c2", "by(cases c1')  auto"], ["proof (state)\nthis:\n  local.cont (c1 ;; c2) s i = local.cont c1 s i ;; c2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cont_Seq_not_eq_finished[simp]: \"\\<not> finished c2 \\<Longrightarrow> \\<not> finished (cont (Seq c1 c2) s i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> finished c2 \\<Longrightarrow>\n    \\<not> finished (local.cont (c1 ;; c2) s i)", "by (cases \"finished (cont c1 s i)\") auto"], ["", "lemma cont_While_False[simp]: \"tval tst s = False \\<Longrightarrow> cont (While tst c) s i = Done\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tval tst s = False \\<Longrightarrow> local.cont (While tst c) s i = Done", "unfolding cont_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. tval tst s = False \\<Longrightarrow>\n    fst (snd (wt_cont_eff (While tst c) s i)) = Done", "by simp"], ["", "lemma cont_While_True[simp]: \"tval tst s = True \\<Longrightarrow> cont (While tst c) s i = c ;; (While tst c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tval tst s = True \\<Longrightarrow>\n    local.cont (While tst c) s i = c ;; While tst c", "unfolding cont_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. tval tst s = True \\<Longrightarrow>\n    fst (snd (wt_cont_eff (While tst c) s i)) = c ;; While tst c", "by simp"], ["", "lemma cont_Ch_L[simp]: \"cont (Ch ch c1 c2) s 0 = c1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.cont (Ch ch c1 c2) s 0 = c1", "unfolding cont_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (snd (wt_cont_eff (Ch ch c1 c2) s 0)) = c1", "by simp"], ["", "lemma cont_Ch_R[simp]: \"cont (Ch ch c1 c2) s (Suc n) = c2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.cont (Ch ch c1 c2) s (Suc n) = c2", "unfolding cont_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (snd (wt_cont_eff (Ch ch c1 c2) s (Suc n))) = c2", "by simp"], ["", "(*  *)"], ["", "lemma eff_Done[simp]: \"eff Done s i = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eff Done s i = s", "unfolding eff_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (snd (wt_cont_eff Done s i)) = s", "by simp"], ["", "lemma eff_Atm[simp]: \"eff (Atm atm) s i = aval atm s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eff (Atm atm) s i = aval atm s", "unfolding eff_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (snd (wt_cont_eff (Atm atm) s i)) = aval atm s", "by simp"], ["", "lemma eff_Seq[simp]: \"eff (c1 ;; c2) s = eff c1 s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eff (c1 ;; c2) s = eff c1 s", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. eff (c1 ;; c2) s = eff c1 s", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. eff (c1 ;; c2) s = eff c1 s", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. eff (c1 ;; c2) s = eff c1 s", "have \"eff (c1 ;; c2) s i = eff c1 s i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eff (c1 ;; c2) s i = eff c1 s i", "proof(cases \"wt_cont_eff c1 s i\")"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff c1 s i = (a, b, c) \\<Longrightarrow>\n       eff (c1 ;; c2) s i = eff c1 s i", "case (fields _ c1' _)"], ["proof (state)\nthis:\n  wt_cont_eff c1 s i = (a_, c1', c_)\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff c1 s i = (a, b, c) \\<Longrightarrow>\n       eff (c1 ;; c2) s i = eff c1 s i", "thus ?thesis"], ["proof (prove)\nusing this:\n  wt_cont_eff c1 s i = (a_, c1', c_)\n\ngoal (1 subgoal):\n 1. eff (c1 ;; c2) s i = eff c1 s i", "unfolding eff_def"], ["proof (prove)\nusing this:\n  wt_cont_eff c1 s i = (a_, c1', c_)\n\ngoal (1 subgoal):\n 1. snd (snd (wt_cont_eff (c1 ;; c2) s i)) = snd (snd (wt_cont_eff c1 s i))", "by(cases c1') auto"], ["proof (state)\nthis:\n  eff (c1 ;; c2) s i = eff c1 s i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  eff (c1 ;; c2) s i = eff c1 s i\n\ngoal (1 subgoal):\n 1. eff (c1 ;; c2) s = eff c1 s", "}"], ["proof (state)\nthis:\n  eff (c1 ;; c2) s ?i2 = eff c1 s ?i2\n\ngoal (1 subgoal):\n 1. eff (c1 ;; c2) s = eff c1 s", "thus ?thesis"], ["proof (prove)\nusing this:\n  eff (c1 ;; c2) s ?i2 = eff c1 s ?i2\n\ngoal (1 subgoal):\n 1. eff (c1 ;; c2) s = eff c1 s", "by auto"], ["proof (state)\nthis:\n  eff (c1 ;; c2) s = eff c1 s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma eff_While[simp]: \"eff (While tst c) s i = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eff (While tst c) s i = s", "unfolding eff_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (snd (wt_cont_eff (While tst c) s i)) = s", "by simp"], ["", "lemma eff_Ch[simp]: \"eff (Ch ch c1 c2) s i = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eff (Ch ch c1 c2) s i = s", "unfolding eff_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (snd (wt_cont_eff (Ch ch c1 c2) s i)) = s", "by simp"], ["", "(* wt-cont-eff simps for parallel composition *)"], ["", "lemma brnL_nchotomy:\nassumes \"properL cl\" and \"ii < brnL cl (length cl)\"\nshows \"\\<exists> n i. n < length cl \\<and> i < brn (cl ! n) \\<and> ii = brnL cl n + i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n i.\n       n < length cl \\<and> i < brn (cl ! n) \\<and> ii = brnL cl n + i", "unfolding brnL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n i.\n       n < length cl \\<and>\n       i < brn (cl ! n) \\<and> ii = lsum brn (take n cl) + i", "apply(rule less_lsum_nchotomy)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> set cl \\<Longrightarrow> 0 < brn a\n 2. ii < lsum brn cl", "using assms brn_gt_0"], ["proof (prove)\nusing this:\n  properL cl\n  ii < brnL cl (length cl)\n  proper ?c \\<Longrightarrow> 0 < brn ?c\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> set cl \\<Longrightarrow> 0 < brn a\n 2. ii < lsum brn cl", "unfolding brnL_lsum[THEN sym]"], ["proof (prove)\nusing this:\n  properL cl\n  ii < brnL cl (length cl)\n  proper ?c \\<Longrightarrow> 0 < brn ?c\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> set cl \\<Longrightarrow> 0 < brn a\n 2. ii < brnL cl (length cl)", "by auto"], ["", "corollary brnL_cases[consumes 2, case_names Local, elim]:\nassumes \"properL cl\" and \"ii < brnL cl (length cl)\" and\n\"\\<And> n i. \\<lbrakk>n < length cl; i < brn (cl ! n); ii = brnL cl n + i\\<rbrakk> \\<Longrightarrow> phi\"\nshows phi"], ["proof (prove)\ngoal (1 subgoal):\n 1. phi", "using assms brnL_nchotomy"], ["proof (prove)\nusing this:\n  properL cl\n  ii < brnL cl (length cl)\n  \\<lbrakk>?n < length cl; ?i < brn (cl ! ?n); ii = brnL cl ?n + ?i\\<rbrakk>\n  \\<Longrightarrow> phi\n  \\<lbrakk>properL ?cl; ?ii < brnL ?cl (length ?cl)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n i.\n                       n < length ?cl \\<and>\n                       i < brn (?cl ! n) \\<and> ?ii = brnL ?cl n + i\n\ngoal (1 subgoal):\n 1. phi", "by blast"], ["", "lemma wt_cont_eff_Par[simp]:\nassumes p: \"properL cl\"\nand n: \"n < length cl\" and i: \"i < brn (cl ! n)\"\nshows\n\"wt (Par cl) s (brnL cl n + i) =\n 1 / (length cl) * wt (cl ! n) s i\"\n(is \"?wL = ?wR\")\n(*  *)\n\"cont (Par cl) s (brnL cl n + i) =\n Par (cl [n := cont (cl ! n) s i])\"\n(is \"?mL = ?mR\")\n(*  *)\n\"eff (Par cl) s (brnL cl n + i) =\n eff (cl ! n) s i\"\n(is \"?eL = ?eR\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (Par cl) s (brnL cl n + i) =\n    1 / real (length cl) * wt (cl ! n) s i &&&\n    local.cont (Par cl) s (brnL cl n + i) =\n    Par (cl[n := local.cont (cl ! n) s i]) &&&\n    eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. wt (Par cl) s (brnL cl n + i) = 1 / real (length cl) * wt (cl ! n) s i\n 2. local.cont (Par cl) s (brnL cl n + i) =\n    Par (cl[n := local.cont (cl ! n) s i])\n 3. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "define ii where \"ii = brnL cl n + i\""], ["proof (state)\nthis:\n  ii = brnL cl n + i\n\ngoal (3 subgoals):\n 1. wt (Par cl) s (brnL cl n + i) = 1 / real (length cl) * wt (cl ! n) s i\n 2. local.cont (Par cl) s (brnL cl n + i) =\n    Par (cl[n := local.cont (cl ! n) s i])\n 3. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "define n1 where \"n1 = locateT cl ii\""], ["proof (state)\nthis:\n  n1 = locateT cl ii\n\ngoal (3 subgoals):\n 1. wt (Par cl) s (brnL cl n + i) = 1 / real (length cl) * wt (cl ! n) s i\n 2. local.cont (Par cl) s (brnL cl n + i) =\n    Par (cl[n := local.cont (cl ! n) s i])\n 3. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "define i1 where \"i1 = locateI cl ii\""], ["proof (state)\nthis:\n  i1 = locateI cl ii\n\ngoal (3 subgoals):\n 1. wt (Par cl) s (brnL cl n + i) = 1 / real (length cl) * wt (cl ! n) s i\n 2. local.cont (Par cl) s (brnL cl n + i) =\n    Par (cl[n := local.cont (cl ! n) s i])\n 3. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "have n_i: \"n = n1\" \"i = i1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = n1 &&& i = i1", "using p"], ["proof (prove)\nusing this:\n  properL cl\n\ngoal (1 subgoal):\n 1. n = n1 &&& i = i1", "unfolding n1_def i1_def"], ["proof (prove)\nusing this:\n  properL cl\n\ngoal (1 subgoal):\n 1. n = locateT cl ii &&& i = locateI cl ii", "using ii_def locateTI_unique n i"], ["proof (prove)\nusing this:\n  properL cl\n  ii = brnL cl n + i\n  \\<lbrakk>properL ?cl; ?n < length ?cl; ?i < brn (?cl ! ?n);\n   ?ii = brnL ?cl ?n + ?i\\<rbrakk>\n  \\<Longrightarrow> ?n = locateT ?cl ?ii \\<and> ?i = locateI ?cl ?ii\n  n < length cl\n  i < brn (cl ! n)\n\ngoal (1 subgoal):\n 1. n = locateT cl ii &&& i = locateI cl ii", "by auto"], ["proof (state)\nthis:\n  n = n1\n  i = i1\n\ngoal (3 subgoals):\n 1. wt (Par cl) s (brnL cl n + i) = 1 / real (length cl) * wt (cl ! n) s i\n 2. local.cont (Par cl) s (brnL cl n + i) =\n    Par (cl[n := local.cont (cl ! n) s i])\n 3. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "have lsum1: \"ii < brnL cl (length cl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ii < brnL cl (length cl)", "unfolding ii_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. brnL cl n + i < brnL cl (length cl)", "using n i"], ["proof (prove)\nusing this:\n  n < length cl\n  i < brn (cl ! n)\n\ngoal (1 subgoal):\n 1. brnL cl n + i < brnL cl (length cl)", "by simp"], ["proof (state)\nthis:\n  ii < brnL cl (length cl)\n\ngoal (3 subgoals):\n 1. wt (Par cl) s (brnL cl n + i) = 1 / real (length cl) * wt (cl ! n) s i\n 2. local.cont (Par cl) s (brnL cl n + i) =\n    Par (cl[n := local.cont (cl ! n) s i])\n 3. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "hence \"n1 < length cl\""], ["proof (prove)\nusing this:\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. n1 < length cl", "unfolding n1_def"], ["proof (prove)\nusing this:\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. locateT cl ii < length cl", "using i p locateTI[of cl ii]"], ["proof (prove)\nusing this:\n  ii < brnL cl (length cl)\n  i < brn (cl ! n)\n  properL cl\n  \\<lbrakk>properL cl; ii < brn (Par cl)\\<rbrakk>\n  \\<Longrightarrow> locateT cl ii < length cl \\<and>\n                    locateI cl ii < brn (cl ! locateT cl ii) \\<and>\n                    ii = brnL cl (locateT cl ii) + locateI cl ii\n\ngoal (1 subgoal):\n 1. locateT cl ii < length cl", "by simp"], ["proof (state)\nthis:\n  n1 < length cl\n\ngoal (3 subgoals):\n 1. wt (Par cl) s (brnL cl n + i) = 1 / real (length cl) * wt (cl ! n) s i\n 2. local.cont (Par cl) s (brnL cl n + i) =\n    Par (cl[n := local.cont (cl ! n) s i])\n 3. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "hence set: \"cl ! n1 \\<in> set cl\""], ["proof (prove)\nusing this:\n  n1 < length cl\n\ngoal (1 subgoal):\n 1. cl ! n1 \\<in> set cl", "by simp"], ["proof (state)\nthis:\n  cl ! n1 \\<in> set cl\n\ngoal (3 subgoals):\n 1. wt (Par cl) s (brnL cl n + i) = 1 / real (length cl) * wt (cl ! n) s i\n 2. local.cont (Par cl) s (brnL cl n + i) =\n    Par (cl[n := local.cont (cl ! n) s i])\n 3. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "(*  *)"], ["proof (state)\nthis:\n  cl ! n1 \\<in> set cl\n\ngoal (3 subgoals):\n 1. wt (Par cl) s (brnL cl n + i) = 1 / real (length cl) * wt (cl ! n) s i\n 2. local.cont (Par cl) s (brnL cl n + i) =\n    Par (cl[n := local.cont (cl ! n) s i])\n 3. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "have \"?wL = 1 / (length cl)* wt (cl ! n1) s i1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (Par cl) s (brnL cl n + i) = 1 / real (length cl) * wt (cl ! n1) s i1", "unfolding ii_def[THEN sym]"], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (Par cl) s ii = 1 / real (length cl) * wt (cl ! n1) s i1", "apply (cases \"wt_cont_eff (cl ! n1) s i1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! n1) s i1 = (a, b, c) \\<Longrightarrow>\n       wt (Par cl) s ii = 1 / real (length cl) * wt (cl ! n1) s i1", "using set"], ["proof (prove)\nusing this:\n  cl ! n1 \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! n1) s i1 = (a, b, c) \\<Longrightarrow>\n       wt (Par cl) s ii = 1 / real (length cl) * wt (cl ! n1) s i1", "unfolding n1_def i1_def"], ["proof (prove)\nusing this:\n  cl ! locateT cl ii \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii) =\n       (a, b, c) \\<Longrightarrow>\n       wt (Par cl) s ii =\n       1 / real (length cl) * wt (cl ! locateT cl ii) s (locateI cl ii)", "unfolding wt_def"], ["proof (prove)\nusing this:\n  cl ! locateT cl ii \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii) =\n       (a, b, c) \\<Longrightarrow>\n       fst (wt_cont_eff (Par cl) s ii) =\n       1 / real (length cl) *\n       fst (wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii))", "by simp"], ["proof (state)\nthis:\n  wt (Par cl) s (brnL cl n + i) = 1 / real (length cl) * wt (cl ! n1) s i1\n\ngoal (3 subgoals):\n 1. wt (Par cl) s (brnL cl n + i) = 1 / real (length cl) * wt (cl ! n) s i\n 2. local.cont (Par cl) s (brnL cl n + i) =\n    Par (cl[n := local.cont (cl ! n) s i])\n 3. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "also"], ["proof (state)\nthis:\n  wt (Par cl) s (brnL cl n + i) = 1 / real (length cl) * wt (cl ! n1) s i1\n\ngoal (3 subgoals):\n 1. wt (Par cl) s (brnL cl n + i) = 1 / real (length cl) * wt (cl ! n) s i\n 2. local.cont (Par cl) s (brnL cl n + i) =\n    Par (cl[n := local.cont (cl ! n) s i])\n 3. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "have \"... = ?wR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / real (length cl) * wt (cl ! n1) s i1 =\n    1 / real (length cl) * wt (cl ! n) s i", "unfolding n_i"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / real (length cl) * wt (cl ! n1) s i1 =\n    1 / real (length cl) * wt (cl ! n1) s i1", "by simp"], ["proof (state)\nthis:\n  1 / real (length cl) * wt (cl ! n1) s i1 =\n  1 / real (length cl) * wt (cl ! n) s i\n\ngoal (3 subgoals):\n 1. wt (Par cl) s (brnL cl n + i) = 1 / real (length cl) * wt (cl ! n) s i\n 2. local.cont (Par cl) s (brnL cl n + i) =\n    Par (cl[n := local.cont (cl ! n) s i])\n 3. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "finally"], ["proof (chain)\npicking this:\n  wt (Par cl) s (brnL cl n + i) = 1 / real (length cl) * wt (cl ! n) s i", "show \"?wL = ?wR\""], ["proof (prove)\nusing this:\n  wt (Par cl) s (brnL cl n + i) = 1 / real (length cl) * wt (cl ! n) s i\n\ngoal (1 subgoal):\n 1. wt (Par cl) s (brnL cl n + i) = 1 / real (length cl) * wt (cl ! n) s i", "."], ["proof (state)\nthis:\n  wt (Par cl) s (brnL cl n + i) = 1 / real (length cl) * wt (cl ! n) s i\n\ngoal (2 subgoals):\n 1. local.cont (Par cl) s (brnL cl n + i) =\n    Par (cl[n := local.cont (cl ! n) s i])\n 2. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "(*  *)"], ["proof (state)\nthis:\n  wt (Par cl) s (brnL cl n + i) = 1 / real (length cl) * wt (cl ! n) s i\n\ngoal (2 subgoals):\n 1. local.cont (Par cl) s (brnL cl n + i) =\n    Par (cl[n := local.cont (cl ! n) s i])\n 2. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "have \"?mL = Par (cl [n1 := cont (cl ! n1) s i1])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.cont (Par cl) s (brnL cl n + i) =\n    Par (cl[n1 := local.cont (cl ! n1) s i1])", "unfolding ii_def[THEN sym]"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.cont (Par cl) s ii = Par (cl[n1 := local.cont (cl ! n1) s i1])", "apply (cases \"wt_cont_eff (cl ! n1) s i1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! n1) s i1 = (a, b, c) \\<Longrightarrow>\n       local.cont (Par cl) s ii = Par (cl[n1 := local.cont (cl ! n1) s i1])", "using set"], ["proof (prove)\nusing this:\n  cl ! n1 \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! n1) s i1 = (a, b, c) \\<Longrightarrow>\n       local.cont (Par cl) s ii = Par (cl[n1 := local.cont (cl ! n1) s i1])", "unfolding n1_def i1_def"], ["proof (prove)\nusing this:\n  cl ! locateT cl ii \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii) =\n       (a, b, c) \\<Longrightarrow>\n       local.cont (Par cl) s ii =\n       Par (cl[locateT cl ii :=\n                 local.cont (cl ! locateT cl ii) s (locateI cl ii)])", "unfolding cont_def"], ["proof (prove)\nusing this:\n  cl ! locateT cl ii \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii) =\n       (a, b, c) \\<Longrightarrow>\n       fst (snd (wt_cont_eff (Par cl) s ii)) =\n       Par (cl[locateT cl ii :=\n                 fst (snd (wt_cont_eff (cl ! locateT cl ii) s\n                            (locateI cl ii)))])", "by simp"], ["proof (state)\nthis:\n  local.cont (Par cl) s (brnL cl n + i) =\n  Par (cl[n1 := local.cont (cl ! n1) s i1])\n\ngoal (2 subgoals):\n 1. local.cont (Par cl) s (brnL cl n + i) =\n    Par (cl[n := local.cont (cl ! n) s i])\n 2. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "also"], ["proof (state)\nthis:\n  local.cont (Par cl) s (brnL cl n + i) =\n  Par (cl[n1 := local.cont (cl ! n1) s i1])\n\ngoal (2 subgoals):\n 1. local.cont (Par cl) s (brnL cl n + i) =\n    Par (cl[n := local.cont (cl ! n) s i])\n 2. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "have \"... = ?mR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Par (cl[n1 := local.cont (cl ! n1) s i1]) =\n    Par (cl[n := local.cont (cl ! n) s i])", "unfolding n_i"], ["proof (prove)\ngoal (1 subgoal):\n 1. Par (cl[n1 := local.cont (cl ! n1) s i1]) =\n    Par (cl[n1 := local.cont (cl ! n1) s i1])", "by simp"], ["proof (state)\nthis:\n  Par (cl[n1 := local.cont (cl ! n1) s i1]) =\n  Par (cl[n := local.cont (cl ! n) s i])\n\ngoal (2 subgoals):\n 1. local.cont (Par cl) s (brnL cl n + i) =\n    Par (cl[n := local.cont (cl ! n) s i])\n 2. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "finally"], ["proof (chain)\npicking this:\n  local.cont (Par cl) s (brnL cl n + i) =\n  Par (cl[n := local.cont (cl ! n) s i])", "show \"?mL = ?mR\""], ["proof (prove)\nusing this:\n  local.cont (Par cl) s (brnL cl n + i) =\n  Par (cl[n := local.cont (cl ! n) s i])\n\ngoal (1 subgoal):\n 1. local.cont (Par cl) s (brnL cl n + i) =\n    Par (cl[n := local.cont (cl ! n) s i])", "."], ["proof (state)\nthis:\n  local.cont (Par cl) s (brnL cl n + i) =\n  Par (cl[n := local.cont (cl ! n) s i])\n\ngoal (1 subgoal):\n 1. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "(*  *)"], ["proof (state)\nthis:\n  local.cont (Par cl) s (brnL cl n + i) =\n  Par (cl[n := local.cont (cl ! n) s i])\n\ngoal (1 subgoal):\n 1. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "have \"?eL = eff (cl ! n1) s i1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eff (Par cl) s (brnL cl n + i) = eff (cl ! n1) s i1", "unfolding ii_def[THEN sym]"], ["proof (prove)\ngoal (1 subgoal):\n 1. eff (Par cl) s ii = eff (cl ! n1) s i1", "apply (cases \"wt_cont_eff (cl ! n1) s i1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! n1) s i1 = (a, b, c) \\<Longrightarrow>\n       eff (Par cl) s ii = eff (cl ! n1) s i1", "using set"], ["proof (prove)\nusing this:\n  cl ! n1 \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! n1) s i1 = (a, b, c) \\<Longrightarrow>\n       eff (Par cl) s ii = eff (cl ! n1) s i1", "unfolding n1_def i1_def"], ["proof (prove)\nusing this:\n  cl ! locateT cl ii \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii) =\n       (a, b, c) \\<Longrightarrow>\n       eff (Par cl) s ii = eff (cl ! locateT cl ii) s (locateI cl ii)", "unfolding eff_def"], ["proof (prove)\nusing this:\n  cl ! locateT cl ii \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii) =\n       (a, b, c) \\<Longrightarrow>\n       snd (snd (wt_cont_eff (Par cl) s ii)) =\n       snd (snd (wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii)))", "by simp"], ["proof (state)\nthis:\n  eff (Par cl) s (brnL cl n + i) = eff (cl ! n1) s i1\n\ngoal (1 subgoal):\n 1. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "also"], ["proof (state)\nthis:\n  eff (Par cl) s (brnL cl n + i) = eff (cl ! n1) s i1\n\ngoal (1 subgoal):\n 1. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "have \"eff (cl ! n1) s i1 = ?eR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eff (cl ! n1) s i1 = eff (cl ! n) s i", "unfolding n_i"], ["proof (prove)\ngoal (1 subgoal):\n 1. eff (cl ! n1) s i1 = eff (cl ! n1) s i1", "by simp"], ["proof (state)\nthis:\n  eff (cl ! n1) s i1 = eff (cl ! n) s i\n\ngoal (1 subgoal):\n 1. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "finally"], ["proof (chain)\npicking this:\n  eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "show \"?eL = ?eR\""], ["proof (prove)\nusing this:\n  eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i\n\ngoal (1 subgoal):\n 1. eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i", "."], ["proof (state)\nthis:\n  eff (Par cl) s (brnL cl n + i) = eff (cl ! n) s i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cont_eff_ParT[simp]:\nassumes p: \"properL cl\"\nand n: \"n < length cl\" and i: \"i < brn (cl ! n)\"\nshows\n\"cont (ParT cl) s (brnL cl n + i) =\n ParT (cl [n := cont (cl ! n) s i])\"\n(is \"?mL = ?mR\")\n(*  *)\n\"eff (ParT cl) s (brnL cl n + i) =\n eff (cl ! n) s i\"\n(is \"?eL = ?eR\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.cont (ParT cl) s (brnL cl n + i) =\n    ParT (cl[n := local.cont (cl ! n) s i]) &&&\n    eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. local.cont (ParT cl) s (brnL cl n + i) =\n    ParT (cl[n := local.cont (cl ! n) s i])\n 2. eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i", "define ii where \"ii = brnL cl n + i\""], ["proof (state)\nthis:\n  ii = brnL cl n + i\n\ngoal (2 subgoals):\n 1. local.cont (ParT cl) s (brnL cl n + i) =\n    ParT (cl[n := local.cont (cl ! n) s i])\n 2. eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i", "define n1 where \"n1 = locateT cl ii\""], ["proof (state)\nthis:\n  n1 = locateT cl ii\n\ngoal (2 subgoals):\n 1. local.cont (ParT cl) s (brnL cl n + i) =\n    ParT (cl[n := local.cont (cl ! n) s i])\n 2. eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i", "define i1 where \"i1 = locateI cl ii\""], ["proof (state)\nthis:\n  i1 = locateI cl ii\n\ngoal (2 subgoals):\n 1. local.cont (ParT cl) s (brnL cl n + i) =\n    ParT (cl[n := local.cont (cl ! n) s i])\n 2. eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i", "have n_i: \"n = n1\" \"i = i1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = n1 &&& i = i1", "using p"], ["proof (prove)\nusing this:\n  properL cl\n\ngoal (1 subgoal):\n 1. n = n1 &&& i = i1", "unfolding n1_def i1_def"], ["proof (prove)\nusing this:\n  properL cl\n\ngoal (1 subgoal):\n 1. n = locateT cl ii &&& i = locateI cl ii", "using ii_def locateTI_unique n i"], ["proof (prove)\nusing this:\n  properL cl\n  ii = brnL cl n + i\n  \\<lbrakk>properL ?cl; ?n < length ?cl; ?i < brn (?cl ! ?n);\n   ?ii = brnL ?cl ?n + ?i\\<rbrakk>\n  \\<Longrightarrow> ?n = locateT ?cl ?ii \\<and> ?i = locateI ?cl ?ii\n  n < length cl\n  i < brn (cl ! n)\n\ngoal (1 subgoal):\n 1. n = locateT cl ii &&& i = locateI cl ii", "by auto"], ["proof (state)\nthis:\n  n = n1\n  i = i1\n\ngoal (2 subgoals):\n 1. local.cont (ParT cl) s (brnL cl n + i) =\n    ParT (cl[n := local.cont (cl ! n) s i])\n 2. eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i", "have lsum1: \"ii < brnL cl (length cl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ii < brnL cl (length cl)", "unfolding ii_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. brnL cl n + i < brnL cl (length cl)", "using n i"], ["proof (prove)\nusing this:\n  n < length cl\n  i < brn (cl ! n)\n\ngoal (1 subgoal):\n 1. brnL cl n + i < brnL cl (length cl)", "by simp"], ["proof (state)\nthis:\n  ii < brnL cl (length cl)\n\ngoal (2 subgoals):\n 1. local.cont (ParT cl) s (brnL cl n + i) =\n    ParT (cl[n := local.cont (cl ! n) s i])\n 2. eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i", "hence \"n1 < length cl\""], ["proof (prove)\nusing this:\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. n1 < length cl", "unfolding n1_def"], ["proof (prove)\nusing this:\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. locateT cl ii < length cl", "using i p locateTI[of cl ii]"], ["proof (prove)\nusing this:\n  ii < brnL cl (length cl)\n  i < brn (cl ! n)\n  properL cl\n  \\<lbrakk>properL cl; ii < brn (Par cl)\\<rbrakk>\n  \\<Longrightarrow> locateT cl ii < length cl \\<and>\n                    locateI cl ii < brn (cl ! locateT cl ii) \\<and>\n                    ii = brnL cl (locateT cl ii) + locateI cl ii\n\ngoal (1 subgoal):\n 1. locateT cl ii < length cl", "by simp"], ["proof (state)\nthis:\n  n1 < length cl\n\ngoal (2 subgoals):\n 1. local.cont (ParT cl) s (brnL cl n + i) =\n    ParT (cl[n := local.cont (cl ! n) s i])\n 2. eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i", "hence set: \"cl ! n1 \\<in> set cl\""], ["proof (prove)\nusing this:\n  n1 < length cl\n\ngoal (1 subgoal):\n 1. cl ! n1 \\<in> set cl", "by simp"], ["proof (state)\nthis:\n  cl ! n1 \\<in> set cl\n\ngoal (2 subgoals):\n 1. local.cont (ParT cl) s (brnL cl n + i) =\n    ParT (cl[n := local.cont (cl ! n) s i])\n 2. eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i", "(*  *)"], ["proof (state)\nthis:\n  cl ! n1 \\<in> set cl\n\ngoal (2 subgoals):\n 1. local.cont (ParT cl) s (brnL cl n + i) =\n    ParT (cl[n := local.cont (cl ! n) s i])\n 2. eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i", "have \"?mL = ParT (cl [n1 := cont (cl ! n1) s i1])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.cont (ParT cl) s (brnL cl n + i) =\n    ParT (cl[n1 := local.cont (cl ! n1) s i1])", "unfolding ii_def[THEN sym]"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.cont (ParT cl) s ii = ParT (cl[n1 := local.cont (cl ! n1) s i1])", "apply (cases \"wt_cont_eff (cl ! n1) s i1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! n1) s i1 = (a, b, c) \\<Longrightarrow>\n       local.cont (ParT cl) s ii =\n       ParT (cl[n1 := local.cont (cl ! n1) s i1])", "using set"], ["proof (prove)\nusing this:\n  cl ! n1 \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! n1) s i1 = (a, b, c) \\<Longrightarrow>\n       local.cont (ParT cl) s ii =\n       ParT (cl[n1 := local.cont (cl ! n1) s i1])", "unfolding n1_def i1_def"], ["proof (prove)\nusing this:\n  cl ! locateT cl ii \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii) =\n       (a, b, c) \\<Longrightarrow>\n       local.cont (ParT cl) s ii =\n       ParT\n        (cl[locateT cl ii :=\n              local.cont (cl ! locateT cl ii) s (locateI cl ii)])", "unfolding cont_def"], ["proof (prove)\nusing this:\n  cl ! locateT cl ii \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii) =\n       (a, b, c) \\<Longrightarrow>\n       fst (snd (wt_cont_eff (ParT cl) s ii)) =\n       ParT\n        (cl[locateT cl ii :=\n              fst (snd (wt_cont_eff (cl ! locateT cl ii) s\n                         (locateI cl ii)))])", "by simp"], ["proof (state)\nthis:\n  local.cont (ParT cl) s (brnL cl n + i) =\n  ParT (cl[n1 := local.cont (cl ! n1) s i1])\n\ngoal (2 subgoals):\n 1. local.cont (ParT cl) s (brnL cl n + i) =\n    ParT (cl[n := local.cont (cl ! n) s i])\n 2. eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i", "also"], ["proof (state)\nthis:\n  local.cont (ParT cl) s (brnL cl n + i) =\n  ParT (cl[n1 := local.cont (cl ! n1) s i1])\n\ngoal (2 subgoals):\n 1. local.cont (ParT cl) s (brnL cl n + i) =\n    ParT (cl[n := local.cont (cl ! n) s i])\n 2. eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i", "have \"... = ?mR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ParT (cl[n1 := local.cont (cl ! n1) s i1]) =\n    ParT (cl[n := local.cont (cl ! n) s i])", "unfolding n_i"], ["proof (prove)\ngoal (1 subgoal):\n 1. ParT (cl[n1 := local.cont (cl ! n1) s i1]) =\n    ParT (cl[n1 := local.cont (cl ! n1) s i1])", "by simp"], ["proof (state)\nthis:\n  ParT (cl[n1 := local.cont (cl ! n1) s i1]) =\n  ParT (cl[n := local.cont (cl ! n) s i])\n\ngoal (2 subgoals):\n 1. local.cont (ParT cl) s (brnL cl n + i) =\n    ParT (cl[n := local.cont (cl ! n) s i])\n 2. eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i", "finally"], ["proof (chain)\npicking this:\n  local.cont (ParT cl) s (brnL cl n + i) =\n  ParT (cl[n := local.cont (cl ! n) s i])", "show \"?mL = ?mR\""], ["proof (prove)\nusing this:\n  local.cont (ParT cl) s (brnL cl n + i) =\n  ParT (cl[n := local.cont (cl ! n) s i])\n\ngoal (1 subgoal):\n 1. local.cont (ParT cl) s (brnL cl n + i) =\n    ParT (cl[n := local.cont (cl ! n) s i])", "."], ["proof (state)\nthis:\n  local.cont (ParT cl) s (brnL cl n + i) =\n  ParT (cl[n := local.cont (cl ! n) s i])\n\ngoal (1 subgoal):\n 1. eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i", "(*  *)"], ["proof (state)\nthis:\n  local.cont (ParT cl) s (brnL cl n + i) =\n  ParT (cl[n := local.cont (cl ! n) s i])\n\ngoal (1 subgoal):\n 1. eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i", "have \"?eL = eff (cl ! n1) s i1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eff (ParT cl) s (brnL cl n + i) = eff (cl ! n1) s i1", "unfolding ii_def[THEN sym]"], ["proof (prove)\ngoal (1 subgoal):\n 1. eff (ParT cl) s ii = eff (cl ! n1) s i1", "apply (cases \"wt_cont_eff (cl ! n1) s i1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! n1) s i1 = (a, b, c) \\<Longrightarrow>\n       eff (ParT cl) s ii = eff (cl ! n1) s i1", "using set"], ["proof (prove)\nusing this:\n  cl ! n1 \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! n1) s i1 = (a, b, c) \\<Longrightarrow>\n       eff (ParT cl) s ii = eff (cl ! n1) s i1", "unfolding n1_def i1_def"], ["proof (prove)\nusing this:\n  cl ! locateT cl ii \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii) =\n       (a, b, c) \\<Longrightarrow>\n       eff (ParT cl) s ii = eff (cl ! locateT cl ii) s (locateI cl ii)", "unfolding eff_def"], ["proof (prove)\nusing this:\n  cl ! locateT cl ii \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii) =\n       (a, b, c) \\<Longrightarrow>\n       snd (snd (wt_cont_eff (ParT cl) s ii)) =\n       snd (snd (wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii)))", "by simp"], ["proof (state)\nthis:\n  eff (ParT cl) s (brnL cl n + i) = eff (cl ! n1) s i1\n\ngoal (1 subgoal):\n 1. eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i", "also"], ["proof (state)\nthis:\n  eff (ParT cl) s (brnL cl n + i) = eff (cl ! n1) s i1\n\ngoal (1 subgoal):\n 1. eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i", "have \"eff (cl ! n1) s i1 = ?eR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eff (cl ! n1) s i1 = eff (cl ! n) s i", "unfolding n_i"], ["proof (prove)\ngoal (1 subgoal):\n 1. eff (cl ! n1) s i1 = eff (cl ! n1) s i1", "by simp"], ["proof (state)\nthis:\n  eff (cl ! n1) s i1 = eff (cl ! n) s i\n\ngoal (1 subgoal):\n 1. eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i", "finally"], ["proof (chain)\npicking this:\n  eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i", "show \"?eL = ?eR\""], ["proof (prove)\nusing this:\n  eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i\n\ngoal (1 subgoal):\n 1. eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i", "."], ["proof (state)\nthis:\n  eff (ParT cl) s (brnL cl n + i) = eff (cl ! n) s i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wt_ParT_WtFT_pickFT_0[simp]:\nassumes p: \"properL cl\" and WtFT: \"WtFT cl = 1\"\nshows \"wt (ParT cl) s (brnL cl (pickFT cl)) = 1\"\n(is \"?wL = 1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl (pickFT cl)) = 1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl (pickFT cl)) = 1", "define ii where \"ii = brnL cl (pickFT cl)\""], ["proof (state)\nthis:\n  ii = brnL cl (pickFT cl)\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl (pickFT cl)) = 1", "define n1 where \"n1 = locateT cl ii\""], ["proof (state)\nthis:\n  n1 = locateT cl ii\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl (pickFT cl)) = 1", "define i1 where \"i1 = locateI cl ii\""], ["proof (state)\nthis:\n  i1 = locateI cl ii\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl (pickFT cl)) = 1", "have ni: \"pickFT cl < length cl\" \"0 < brn (cl! (pickFT cl))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pickFT cl < length cl &&& 0 < brn (cl ! pickFT cl)", "using WtFT p brn_gt_0"], ["proof (prove)\nusing this:\n  WtFT cl = 1\n  properL cl\n  proper ?c \\<Longrightarrow> 0 < brn ?c\n\ngoal (1 subgoal):\n 1. pickFT cl < length cl &&& 0 < brn (cl ! pickFT cl)", "by auto"], ["proof (state)\nthis:\n  pickFT cl < length cl\n  0 < brn (cl ! pickFT cl)\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl (pickFT cl)) = 1", "hence n_i: \"pickFT cl = n1\" \"0 = i1\""], ["proof (prove)\nusing this:\n  pickFT cl < length cl\n  0 < brn (cl ! pickFT cl)\n\ngoal (1 subgoal):\n 1. pickFT cl = n1 &&& 0 = i1", "using p"], ["proof (prove)\nusing this:\n  pickFT cl < length cl\n  0 < brn (cl ! pickFT cl)\n  properL cl\n\ngoal (1 subgoal):\n 1. pickFT cl = n1 &&& 0 = i1", "unfolding n1_def i1_def"], ["proof (prove)\nusing this:\n  pickFT cl < length cl\n  0 < brn (cl ! pickFT cl)\n  properL cl\n\ngoal (1 subgoal):\n 1. pickFT cl = locateT cl ii &&& 0 = locateI cl ii", "using ii_def locateTI_unique[of cl \"pickFT cl\" 0 ii]"], ["proof (prove)\nusing this:\n  pickFT cl < length cl\n  0 < brn (cl ! pickFT cl)\n  properL cl\n  ii = brnL cl (pickFT cl)\n  \\<lbrakk>properL cl; pickFT cl < length cl; 0 < brn (cl ! pickFT cl);\n   ii = brnL cl (pickFT cl) + 0\\<rbrakk>\n  \\<Longrightarrow> pickFT cl = locateT cl ii \\<and> 0 = locateI cl ii\n\ngoal (1 subgoal):\n 1. pickFT cl = locateT cl ii &&& 0 = locateI cl ii", "by auto"], ["proof (state)\nthis:\n  pickFT cl = n1\n  0 = i1\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl (pickFT cl)) = 1", "have lsum1: \"ii < brnL cl (length cl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ii < brnL cl (length cl)", "unfolding ii_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. brnL cl (pickFT cl) < brnL cl (length cl)", "using ni"], ["proof (prove)\nusing this:\n  pickFT cl < length cl\n  0 < brn (cl ! pickFT cl)\n\ngoal (1 subgoal):\n 1. brnL cl (pickFT cl) < brnL cl (length cl)", "by (metis add.comm_neutral brn_index)"], ["proof (state)\nthis:\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl (pickFT cl)) = 1", "hence \"n1 < length cl\""], ["proof (prove)\nusing this:\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. n1 < length cl", "unfolding n1_def"], ["proof (prove)\nusing this:\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. locateT cl ii < length cl", "using ni p locateTI[of cl ii]"], ["proof (prove)\nusing this:\n  ii < brnL cl (length cl)\n  pickFT cl < length cl\n  0 < brn (cl ! pickFT cl)\n  properL cl\n  \\<lbrakk>properL cl; ii < brn (Par cl)\\<rbrakk>\n  \\<Longrightarrow> locateT cl ii < length cl \\<and>\n                    locateI cl ii < brn (cl ! locateT cl ii) \\<and>\n                    ii = brnL cl (locateT cl ii) + locateI cl ii\n\ngoal (1 subgoal):\n 1. locateT cl ii < length cl", "by simp"], ["proof (state)\nthis:\n  n1 < length cl\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl (pickFT cl)) = 1", "hence set: \"cl ! n1 \\<in> set cl\""], ["proof (prove)\nusing this:\n  n1 < length cl\n\ngoal (1 subgoal):\n 1. cl ! n1 \\<in> set cl", "by simp"], ["proof (state)\nthis:\n  cl ! n1 \\<in> set cl\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl (pickFT cl)) = 1", "(*  *)"], ["proof (state)\nthis:\n  cl ! n1 \\<in> set cl\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl (pickFT cl)) = 1", "have n1i1: \"n1 = pickFT cl \\<and> i1 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n1 = pickFT cl \\<and> i1 = 0", "using WtFT ni"], ["proof (prove)\nusing this:\n  WtFT cl = 1\n  pickFT cl < length cl\n  0 < brn (cl ! pickFT cl)\n\ngoal (1 subgoal):\n 1. n1 = pickFT cl \\<and> i1 = 0", "unfolding n_i"], ["proof (prove)\nusing this:\n  WtFT cl = 1\n  n1 < length cl\n  i1 < brn (cl ! n1)\n\ngoal (1 subgoal):\n 1. n1 = n1 \\<and> i1 = i1", "by auto"], ["proof (state)\nthis:\n  n1 = pickFT cl \\<and> i1 = 0\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl (pickFT cl)) = 1", "show \"?wL = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl (pickFT cl)) = 1", "unfolding ii_def[THEN sym]"], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (ParT cl) s ii = 1", "apply (cases \"wt_cont_eff (cl ! n1) s i1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! n1) s i1 = (a, b, c) \\<Longrightarrow>\n       wt (ParT cl) s ii = 1", "using WtFT n1i1 set"], ["proof (prove)\nusing this:\n  WtFT cl = 1\n  n1 = pickFT cl \\<and> i1 = 0\n  cl ! n1 \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! n1) s i1 = (a, b, c) \\<Longrightarrow>\n       wt (ParT cl) s ii = 1", "unfolding n1_def i1_def"], ["proof (prove)\nusing this:\n  WtFT cl = 1\n  locateT cl ii = pickFT cl \\<and> locateI cl ii = 0\n  cl ! locateT cl ii \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii) =\n       (a, b, c) \\<Longrightarrow>\n       wt (ParT cl) s ii = 1", "unfolding wt_def"], ["proof (prove)\nusing this:\n  WtFT cl = 1\n  locateT cl ii = pickFT cl \\<and> locateI cl ii = 0\n  cl ! locateT cl ii \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii) =\n       (a, b, c) \\<Longrightarrow>\n       fst (wt_cont_eff (ParT cl) s ii) = 1", "by simp"], ["proof (state)\nthis:\n  wt (ParT cl) s (brnL cl (pickFT cl)) = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wt_ParT_WtFT_notPickFT_0[simp]:\nassumes p: \"properL cl\" and n: \"n < length cl\" and i: \"i < brn (cl ! n)\"\nand WtFT: \"WtFT cl = 1\" and ni: \"n = pickFT cl \\<longrightarrow> i \\<noteq> 0\"\nshows \"wt (ParT cl) s (brnL cl n + i) = 0\" (is \"?wL = 0\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "define ii where \"ii = brnL cl n + i\""], ["proof (state)\nthis:\n  ii = brnL cl n + i\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "define n1 where \"n1 = locateT cl ii\""], ["proof (state)\nthis:\n  n1 = locateT cl ii\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "define i1 where \"i1 = locateI cl ii\""], ["proof (state)\nthis:\n  i1 = locateI cl ii\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "have n_i: \"n = n1\" \"i = i1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = n1 &&& i = i1", "using p"], ["proof (prove)\nusing this:\n  properL cl\n\ngoal (1 subgoal):\n 1. n = n1 &&& i = i1", "unfolding n1_def i1_def"], ["proof (prove)\nusing this:\n  properL cl\n\ngoal (1 subgoal):\n 1. n = locateT cl ii &&& i = locateI cl ii", "using ii_def locateTI_unique n i"], ["proof (prove)\nusing this:\n  properL cl\n  ii = brnL cl n + i\n  \\<lbrakk>properL ?cl; ?n < length ?cl; ?i < brn (?cl ! ?n);\n   ?ii = brnL ?cl ?n + ?i\\<rbrakk>\n  \\<Longrightarrow> ?n = locateT ?cl ?ii \\<and> ?i = locateI ?cl ?ii\n  n < length cl\n  i < brn (cl ! n)\n\ngoal (1 subgoal):\n 1. n = locateT cl ii &&& i = locateI cl ii", "by auto"], ["proof (state)\nthis:\n  n = n1\n  i = i1\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "have lsum1: \"ii < brnL cl (length cl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ii < brnL cl (length cl)", "unfolding ii_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. brnL cl n + i < brnL cl (length cl)", "using n i"], ["proof (prove)\nusing this:\n  n < length cl\n  i < brn (cl ! n)\n\ngoal (1 subgoal):\n 1. brnL cl n + i < brnL cl (length cl)", "by simp"], ["proof (state)\nthis:\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "hence \"n1 < length cl\""], ["proof (prove)\nusing this:\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. n1 < length cl", "unfolding n1_def"], ["proof (prove)\nusing this:\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. locateT cl ii < length cl", "using i p locateTI[of cl ii]"], ["proof (prove)\nusing this:\n  ii < brnL cl (length cl)\n  i < brn (cl ! n)\n  properL cl\n  \\<lbrakk>properL cl; ii < brn (Par cl)\\<rbrakk>\n  \\<Longrightarrow> locateT cl ii < length cl \\<and>\n                    locateI cl ii < brn (cl ! locateT cl ii) \\<and>\n                    ii = brnL cl (locateT cl ii) + locateI cl ii\n\ngoal (1 subgoal):\n 1. locateT cl ii < length cl", "by simp"], ["proof (state)\nthis:\n  n1 < length cl\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "hence set: \"cl ! n1 \\<in> set cl\""], ["proof (prove)\nusing this:\n  n1 < length cl\n\ngoal (1 subgoal):\n 1. cl ! n1 \\<in> set cl", "by simp"], ["proof (state)\nthis:\n  cl ! n1 \\<in> set cl\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "(*  *)"], ["proof (state)\nthis:\n  cl ! n1 \\<in> set cl\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "have n1i1: \"n1 \\<noteq> pickFT cl \\<or> i1 \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n1 \\<noteq> pickFT cl \\<or> i1 \\<noteq> 0", "using WtFT ni"], ["proof (prove)\nusing this:\n  WtFT cl = 1\n  n = pickFT cl \\<longrightarrow> i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n1 \\<noteq> pickFT cl \\<or> i1 \\<noteq> 0", "unfolding n_i"], ["proof (prove)\nusing this:\n  WtFT cl = 1\n  n1 = pickFT cl \\<longrightarrow> i1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n1 \\<noteq> pickFT cl \\<or> i1 \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  n1 \\<noteq> pickFT cl \\<or> i1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "show \"?wL = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "unfolding ii_def[THEN sym]"], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (ParT cl) s ii = 0", "apply (cases \"wt_cont_eff (cl ! n1) s i1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! n1) s i1 = (a, b, c) \\<Longrightarrow>\n       wt (ParT cl) s ii = 0", "using WtFT n1i1 set"], ["proof (prove)\nusing this:\n  WtFT cl = 1\n  n1 \\<noteq> pickFT cl \\<or> i1 \\<noteq> 0\n  cl ! n1 \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! n1) s i1 = (a, b, c) \\<Longrightarrow>\n       wt (ParT cl) s ii = 0", "unfolding n1_def i1_def"], ["proof (prove)\nusing this:\n  WtFT cl = 1\n  locateT cl ii \\<noteq> pickFT cl \\<or> locateI cl ii \\<noteq> 0\n  cl ! locateT cl ii \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii) =\n       (a, b, c) \\<Longrightarrow>\n       wt (ParT cl) s ii = 0", "unfolding wt_def"], ["proof (prove)\nusing this:\n  WtFT cl = 1\n  locateT cl ii \\<noteq> pickFT cl \\<or> locateI cl ii \\<noteq> 0\n  cl ! locateT cl ii \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii) =\n       (a, b, c) \\<Longrightarrow>\n       fst (wt_cont_eff (ParT cl) s ii) = 0", "by force"], ["proof (state)\nthis:\n  wt (ParT cl) s (brnL cl n + i) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wt_ParT_notWtFT_finished[simp]:\nassumes p: \"properL cl\" and n: \"n < length cl\" and i: \"i < brn (cl ! n)\"\nand WtFT: \"WtFT cl \\<noteq> 1\" and f: \"finished (cl ! n)\"\nshows \"wt (ParT cl) s (brnL cl n + i) = 0\" (is \"?wL = 0\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "define ii where \"ii = brnL cl n + i\""], ["proof (state)\nthis:\n  ii = brnL cl n + i\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "define n1 where \"n1 = locateT cl ii\""], ["proof (state)\nthis:\n  n1 = locateT cl ii\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "define i1 where \"i1 = locateI cl ii\""], ["proof (state)\nthis:\n  i1 = locateI cl ii\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "have n_i: \"n = n1\" \"i = i1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = n1 &&& i = i1", "using p"], ["proof (prove)\nusing this:\n  properL cl\n\ngoal (1 subgoal):\n 1. n = n1 &&& i = i1", "unfolding n1_def i1_def"], ["proof (prove)\nusing this:\n  properL cl\n\ngoal (1 subgoal):\n 1. n = locateT cl ii &&& i = locateI cl ii", "using ii_def locateTI_unique n i"], ["proof (prove)\nusing this:\n  properL cl\n  ii = brnL cl n + i\n  \\<lbrakk>properL ?cl; ?n < length ?cl; ?i < brn (?cl ! ?n);\n   ?ii = brnL ?cl ?n + ?i\\<rbrakk>\n  \\<Longrightarrow> ?n = locateT ?cl ?ii \\<and> ?i = locateI ?cl ?ii\n  n < length cl\n  i < brn (cl ! n)\n\ngoal (1 subgoal):\n 1. n = locateT cl ii &&& i = locateI cl ii", "by auto"], ["proof (state)\nthis:\n  n = n1\n  i = i1\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "have lsum1: \"ii < brnL cl (length cl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ii < brnL cl (length cl)", "unfolding ii_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. brnL cl n + i < brnL cl (length cl)", "using n i"], ["proof (prove)\nusing this:\n  n < length cl\n  i < brn (cl ! n)\n\ngoal (1 subgoal):\n 1. brnL cl n + i < brnL cl (length cl)", "by simp"], ["proof (state)\nthis:\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "hence \"n1 < length cl\""], ["proof (prove)\nusing this:\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. n1 < length cl", "unfolding n1_def"], ["proof (prove)\nusing this:\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. locateT cl ii < length cl", "using i p locateTI[of cl ii]"], ["proof (prove)\nusing this:\n  ii < brnL cl (length cl)\n  i < brn (cl ! n)\n  properL cl\n  \\<lbrakk>properL cl; ii < brn (Par cl)\\<rbrakk>\n  \\<Longrightarrow> locateT cl ii < length cl \\<and>\n                    locateI cl ii < brn (cl ! locateT cl ii) \\<and>\n                    ii = brnL cl (locateT cl ii) + locateI cl ii\n\ngoal (1 subgoal):\n 1. locateT cl ii < length cl", "by simp"], ["proof (state)\nthis:\n  n1 < length cl\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "hence set: \"cl ! n1 \\<in> set cl\""], ["proof (prove)\nusing this:\n  n1 < length cl\n\ngoal (1 subgoal):\n 1. cl ! n1 \\<in> set cl", "by simp"], ["proof (state)\nthis:\n  cl ! n1 \\<in> set cl\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "(*  *)"], ["proof (state)\nthis:\n  cl ! n1 \\<in> set cl\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "have f: \"finished (cl ! n1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finished (cl ! n1)", "using f"], ["proof (prove)\nusing this:\n  finished (cl ! n)\n\ngoal (1 subgoal):\n 1. finished (cl ! n1)", "unfolding n_i"], ["proof (prove)\nusing this:\n  finished (cl ! n1)\n\ngoal (1 subgoal):\n 1. finished (cl ! n1)", "by auto"], ["proof (state)\nthis:\n  finished (cl ! n1)\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "show \"?wL = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "unfolding ii_def[THEN sym]"], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (ParT cl) s ii = 0", "apply (cases \"wt_cont_eff (cl ! n1) s i1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! n1) s i1 = (a, b, c) \\<Longrightarrow>\n       wt (ParT cl) s ii = 0", "using WtFT f set"], ["proof (prove)\nusing this:\n  WtFT cl \\<noteq> 1\n  finished (cl ! n1)\n  cl ! n1 \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! n1) s i1 = (a, b, c) \\<Longrightarrow>\n       wt (ParT cl) s ii = 0", "unfolding n1_def i1_def"], ["proof (prove)\nusing this:\n  WtFT cl \\<noteq> 1\n  finished (cl ! locateT cl ii)\n  cl ! locateT cl ii \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii) =\n       (a, b, c) \\<Longrightarrow>\n       wt (ParT cl) s ii = 0", "unfolding wt_def"], ["proof (prove)\nusing this:\n  WtFT cl \\<noteq> 1\n  finished (cl ! locateT cl ii)\n  cl ! locateT cl ii \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii) =\n       (a, b, c) \\<Longrightarrow>\n       fst (wt_cont_eff (ParT cl) s ii) = 0", "by simp"], ["proof (state)\nthis:\n  wt (ParT cl) s (brnL cl n + i) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wt_cont_eff_ParT_notWtFT_notFinished[simp]:\nassumes p: \"properL cl\" and n: \"n < length cl\" and i: \"i < brn (cl ! n)\"\nand WtFT: \"WtFT cl \\<noteq> 1\" and nf: \"\\<not> finished (cl ! n)\"\nshows \"wt (ParT cl) s (brnL cl n + i) =\n       (1 / (length cl)) / (1 - WtFT cl) * wt (cl ! n) s i\" (is \"?wL = ?wR\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) =\n    1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) =\n    1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i", "define ii where \"ii = brnL cl n + i\""], ["proof (state)\nthis:\n  ii = brnL cl n + i\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) =\n    1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i", "define n1 where \"n1 = locateT cl ii\""], ["proof (state)\nthis:\n  n1 = locateT cl ii\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) =\n    1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i", "define i1 where \"i1 = locateI cl ii\""], ["proof (state)\nthis:\n  i1 = locateI cl ii\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) =\n    1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i", "have n_i: \"n = n1\" \"i = i1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = n1 &&& i = i1", "using p"], ["proof (prove)\nusing this:\n  properL cl\n\ngoal (1 subgoal):\n 1. n = n1 &&& i = i1", "unfolding n1_def i1_def"], ["proof (prove)\nusing this:\n  properL cl\n\ngoal (1 subgoal):\n 1. n = locateT cl ii &&& i = locateI cl ii", "using ii_def locateTI_unique n i"], ["proof (prove)\nusing this:\n  properL cl\n  ii = brnL cl n + i\n  \\<lbrakk>properL ?cl; ?n < length ?cl; ?i < brn (?cl ! ?n);\n   ?ii = brnL ?cl ?n + ?i\\<rbrakk>\n  \\<Longrightarrow> ?n = locateT ?cl ?ii \\<and> ?i = locateI ?cl ?ii\n  n < length cl\n  i < brn (cl ! n)\n\ngoal (1 subgoal):\n 1. n = locateT cl ii &&& i = locateI cl ii", "by auto"], ["proof (state)\nthis:\n  n = n1\n  i = i1\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) =\n    1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i", "have lsum1: \"ii < brnL cl (length cl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ii < brnL cl (length cl)", "unfolding ii_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. brnL cl n + i < brnL cl (length cl)", "using n i"], ["proof (prove)\nusing this:\n  n < length cl\n  i < brn (cl ! n)\n\ngoal (1 subgoal):\n 1. brnL cl n + i < brnL cl (length cl)", "by simp"], ["proof (state)\nthis:\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) =\n    1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i", "hence \"n1 < length cl\""], ["proof (prove)\nusing this:\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. n1 < length cl", "unfolding n1_def"], ["proof (prove)\nusing this:\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. locateT cl ii < length cl", "using i p locateTI[of cl ii]"], ["proof (prove)\nusing this:\n  ii < brnL cl (length cl)\n  i < brn (cl ! n)\n  properL cl\n  \\<lbrakk>properL cl; ii < brn (Par cl)\\<rbrakk>\n  \\<Longrightarrow> locateT cl ii < length cl \\<and>\n                    locateI cl ii < brn (cl ! locateT cl ii) \\<and>\n                    ii = brnL cl (locateT cl ii) + locateI cl ii\n\ngoal (1 subgoal):\n 1. locateT cl ii < length cl", "by simp"], ["proof (state)\nthis:\n  n1 < length cl\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) =\n    1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i", "hence set: \"cl ! n1 \\<in> set cl\""], ["proof (prove)\nusing this:\n  n1 < length cl\n\ngoal (1 subgoal):\n 1. cl ! n1 \\<in> set cl", "by simp"], ["proof (state)\nthis:\n  cl ! n1 \\<in> set cl\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) =\n    1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i", "(*  *)"], ["proof (state)\nthis:\n  cl ! n1 \\<in> set cl\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) =\n    1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i", "have nf: \"\\<not> finished (cl ! n1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> finished (cl ! n1)", "using nf"], ["proof (prove)\nusing this:\n  \\<not> finished (cl ! n)\n\ngoal (1 subgoal):\n 1. \\<not> finished (cl ! n1)", "unfolding n_i"], ["proof (prove)\nusing this:\n  \\<not> finished (cl ! n1)\n\ngoal (1 subgoal):\n 1. \\<not> finished (cl ! n1)", "by auto"], ["proof (state)\nthis:\n  \\<not> finished (cl ! n1)\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) =\n    1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i", "have \"?wL = (1 / (length cl)) / (1 - WtFT cl) * wt (cl ! n1) s i1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) =\n    1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n1) s i1", "unfolding ii_def[THEN sym]"], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (ParT cl) s ii =\n    1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n1) s i1", "apply (cases \"wt_cont_eff (cl ! n1) s i1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! n1) s i1 = (a, b, c) \\<Longrightarrow>\n       wt (ParT cl) s ii =\n       1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n1) s i1", "using WtFT nf set"], ["proof (prove)\nusing this:\n  WtFT cl \\<noteq> 1\n  \\<not> finished (cl ! n1)\n  cl ! n1 \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! n1) s i1 = (a, b, c) \\<Longrightarrow>\n       wt (ParT cl) s ii =\n       1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n1) s i1", "unfolding n1_def i1_def"], ["proof (prove)\nusing this:\n  WtFT cl \\<noteq> 1\n  \\<not> finished (cl ! locateT cl ii)\n  cl ! locateT cl ii \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii) =\n       (a, b, c) \\<Longrightarrow>\n       wt (ParT cl) s ii =\n       1 / real (length cl) / (1 - WtFT cl) *\n       wt (cl ! locateT cl ii) s (locateI cl ii)", "unfolding wt_def"], ["proof (prove)\nusing this:\n  WtFT cl \\<noteq> 1\n  \\<not> finished (cl ! locateT cl ii)\n  cl ! locateT cl ii \\<in> set cl\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii) =\n       (a, b, c) \\<Longrightarrow>\n       fst (wt_cont_eff (ParT cl) s ii) =\n       1 / real (length cl) / (1 - WtFT cl) *\n       fst (wt_cont_eff (cl ! locateT cl ii) s (locateI cl ii))", "by simp"], ["proof (state)\nthis:\n  wt (ParT cl) s (brnL cl n + i) =\n  1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n1) s i1\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) =\n    1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i", "also"], ["proof (state)\nthis:\n  wt (ParT cl) s (brnL cl n + i) =\n  1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n1) s i1\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) =\n    1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i", "have \"... = ?wR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n1) s i1 =\n    1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i", "unfolding n_i"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n1) s i1 =\n    1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n1) s i1", "by simp"], ["proof (state)\nthis:\n  1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n1) s i1 =\n  1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) =\n    1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i", "finally"], ["proof (chain)\npicking this:\n  wt (ParT cl) s (brnL cl n + i) =\n  1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i", "show \"?wL = ?wR\""], ["proof (prove)\nusing this:\n  wt (ParT cl) s (brnL cl n + i) =\n  1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) =\n    1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i", "."], ["proof (state)\nthis:\n  wt (ParT cl) s (brnL cl n + i) =\n  1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i\n\ngoal:\nNo subgoals!", "qed"], ["", "(*  *)"], ["", "lemma wt_ge_0[simp]:\nassumes \"proper c\" and \"i < brn c\"\nshows \"0 \\<le> wt c s i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> wt c s i", "using assms"], ["proof (prove)\nusing this:\n  proper c\n  i < brn c\n\ngoal (1 subgoal):\n 1. 0 \\<le> wt c s i", "proof (induct c arbitrary: i s rule: proper_induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> 0 \\<le> wt Done s i\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> 0 \\<le> wt (Atm atm) s i\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> 0 \\<le> wt c1 s i;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> 0 \\<le> wt c2 s i;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (c1 ;; c2) s i\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (While tst c) s i\n 5. \\<And>ch c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> 0 \\<le> wt c1 s i;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> 0 \\<le> wt c2 s i;\n        i < brn (Ch ch c1 c2)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (Ch ch c1 c2) s i\n 6. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (Par cl)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (Par cl) s i\n 7. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (ParT cl)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (ParT cl) s i", "case (Ch ch c1 c2)"], ["proof (state)\nthis:\n  ?i < brn c1 \\<Longrightarrow> 0 \\<le> wt c1 ?s ?i\n  ?i < brn c2 \\<Longrightarrow> 0 \\<le> wt c2 ?s ?i\n  i < brn (Ch ch c1 c2)\n\ngoal (7 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> 0 \\<le> wt Done s i\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> 0 \\<le> wt (Atm atm) s i\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> 0 \\<le> wt c1 s i;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> 0 \\<le> wt c2 s i;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (c1 ;; c2) s i\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (While tst c) s i\n 5. \\<And>ch c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> 0 \\<le> wt c1 s i;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> 0 \\<le> wt c2 s i;\n        i < brn (Ch ch c1 c2)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (Ch ch c1 c2) s i\n 6. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (Par cl)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (Par cl) s i\n 7. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (ParT cl)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (ParT cl) s i", "thus ?case"], ["proof (prove)\nusing this:\n  ?i < brn c1 \\<Longrightarrow> 0 \\<le> wt c1 ?s ?i\n  ?i < brn c2 \\<Longrightarrow> 0 \\<le> wt c2 ?s ?i\n  i < brn (Ch ch c1 c2)\n\ngoal (1 subgoal):\n 1. 0 \\<le> wt (Ch ch c1 c2) s i", "using properCh"], ["proof (prove)\nusing this:\n  ?i < brn c1 \\<Longrightarrow> 0 \\<le> wt c1 ?s ?i\n  ?i < brn c2 \\<Longrightarrow> 0 \\<le> wt c2 ?s ?i\n  i < brn (Ch ch c1 c2)\n  0 \\<le> cval ?ch ?s \\<and> cval ?ch ?s \\<le> 1\n\ngoal (1 subgoal):\n 1. 0 \\<le> wt (Ch ch c1 c2) s i", "by (cases i) (auto simp: algebra_simps)"], ["proof (state)\nthis:\n  0 \\<le> wt (Ch ch c1 c2) s i\n\ngoal (6 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> 0 \\<le> wt Done s i\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> 0 \\<le> wt (Atm atm) s i\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> 0 \\<le> wt c1 s i;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> 0 \\<le> wt c2 s i;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (c1 ;; c2) s i\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (While tst c) s i\n 5. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (Par cl)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (Par cl) s i\n 6. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (ParT cl)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (ParT cl) s i", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> 0 \\<le> wt Done s i\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> 0 \\<le> wt (Atm atm) s i\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> 0 \\<le> wt c1 s i;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> 0 \\<le> wt c2 s i;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (c1 ;; c2) s i\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (While tst c) s i\n 5. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (Par cl)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (Par cl) s i\n 6. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (ParT cl)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (ParT cl) s i", "case (Par cl ii)"], ["proof (state)\nthis:\n  properL cl\n  \\<lbrakk>?c \\<in> set cl; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> wt ?c ?s ?i\n  ii < brn (Par cl)\n\ngoal (6 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> 0 \\<le> wt Done s i\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> 0 \\<le> wt (Atm atm) s i\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> 0 \\<le> wt c1 s i;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> 0 \\<le> wt c2 s i;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (c1 ;; c2) s i\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (While tst c) s i\n 5. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (Par cl)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (Par cl) s i\n 6. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (ParT cl)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (ParT cl) s i", "have \"properL cl\" and \"ii < brnL cl (length cl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. properL cl &&& ii < brnL cl (length cl)", "using Par"], ["proof (prove)\nusing this:\n  properL cl\n  \\<lbrakk>?c \\<in> set cl; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> wt ?c ?s ?i\n  ii < brn (Par cl)\n\ngoal (1 subgoal):\n 1. properL cl &&& ii < brnL cl (length cl)", "by auto"], ["proof (state)\nthis:\n  properL cl\n  ii < brnL cl (length cl)\n\ngoal (6 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> 0 \\<le> wt Done s i\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> 0 \\<le> wt (Atm atm) s i\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> 0 \\<le> wt c1 s i;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> 0 \\<le> wt c2 s i;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (c1 ;; c2) s i\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (While tst c) s i\n 5. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (Par cl)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (Par cl) s i\n 6. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (ParT cl)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (ParT cl) s i", "thus ?case"], ["proof (prove)\nusing this:\n  properL cl\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. 0 \\<le> wt (Par cl) s ii", "apply (cases rule: brnL_cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n i.\n       \\<lbrakk>n < length cl; i < brn (cl ! n); ii = brnL cl n + i\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (Par cl) s ii", "using Par"], ["proof (prove)\nusing this:\n  properL cl\n  \\<lbrakk>?c \\<in> set cl; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> wt ?c ?s ?i\n  ii < brn (Par cl)\n\ngoal (1 subgoal):\n 1. \\<And>n i.\n       \\<lbrakk>n < length cl; i < brn (cl ! n); ii = brnL cl n + i\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (Par cl) s ii", "by simp"], ["proof (state)\nthis:\n  0 \\<le> wt (Par cl) s ii\n\ngoal (5 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> 0 \\<le> wt Done s i\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> 0 \\<le> wt (Atm atm) s i\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> 0 \\<le> wt c1 s i;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> 0 \\<le> wt c2 s i;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (c1 ;; c2) s i\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (While tst c) s i\n 5. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (ParT cl)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (ParT cl) s i", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> 0 \\<le> wt Done s i\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> 0 \\<le> wt (Atm atm) s i\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> 0 \\<le> wt c1 s i;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> 0 \\<le> wt c2 s i;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (c1 ;; c2) s i\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (While tst c) s i\n 5. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (ParT cl)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (ParT cl) s i", "case (ParT cl ii)"], ["proof (state)\nthis:\n  properL cl\n  \\<lbrakk>?c \\<in> set cl; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> wt ?c ?s ?i\n  ii < brn (ParT cl)\n\ngoal (5 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> 0 \\<le> wt Done s i\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> 0 \\<le> wt (Atm atm) s i\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> 0 \\<le> wt c1 s i;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> 0 \\<le> wt c2 s i;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (c1 ;; c2) s i\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (While tst c) s i\n 5. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (ParT cl)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (ParT cl) s i", "have \"properL cl\" and \"ii < brnL cl (length cl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. properL cl &&& ii < brnL cl (length cl)", "using ParT"], ["proof (prove)\nusing this:\n  properL cl\n  \\<lbrakk>?c \\<in> set cl; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> wt ?c ?s ?i\n  ii < brn (ParT cl)\n\ngoal (1 subgoal):\n 1. properL cl &&& ii < brnL cl (length cl)", "by auto"], ["proof (state)\nthis:\n  properL cl\n  ii < brnL cl (length cl)\n\ngoal (5 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> 0 \\<le> wt Done s i\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> 0 \\<le> wt (Atm atm) s i\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> 0 \\<le> wt c1 s i;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> 0 \\<le> wt c2 s i;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (c1 ;; c2) s i\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (While tst c) s i\n 5. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (ParT cl)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (ParT cl) s i", "thus ?case"], ["proof (prove)\nusing this:\n  properL cl\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. 0 \\<le> wt (ParT cl) s ii", "proof(cases rule: brnL_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n i.\n       \\<lbrakk>n < length cl; i < brn (cl ! n); ii = brnL cl n + i\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (ParT cl) s ii", "case (Local n i)"], ["proof (state)\nthis:\n  n < length cl\n  i < brn (cl ! n)\n  ii = brnL cl n + i\n\ngoal (1 subgoal):\n 1. \\<And>n i.\n       \\<lbrakk>n < length cl; i < brn (cl ! n); ii = brnL cl n + i\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (ParT cl) s ii", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> wt (ParT cl) s ii", "proof (cases \"WtFT cl = 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. WtFT cl = 1 \\<Longrightarrow> 0 \\<le> wt (ParT cl) s ii\n 2. WtFT cl \\<noteq> 1 \\<Longrightarrow> 0 \\<le> wt (ParT cl) s ii", "case True"], ["proof (state)\nthis:\n  WtFT cl = 1\n\ngoal (2 subgoals):\n 1. WtFT cl = 1 \\<Longrightarrow> 0 \\<le> wt (ParT cl) s ii\n 2. WtFT cl \\<noteq> 1 \\<Longrightarrow> 0 \\<le> wt (ParT cl) s ii", "thus ?thesis"], ["proof (prove)\nusing this:\n  WtFT cl = 1\n\ngoal (1 subgoal):\n 1. 0 \\<le> wt (ParT cl) s ii", "using Local ParT"], ["proof (prove)\nusing this:\n  WtFT cl = 1\n  n < length cl\n  i < brn (cl ! n)\n  ii = brnL cl n + i\n  properL cl\n  \\<lbrakk>?c \\<in> set cl; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> wt ?c ?s ?i\n  ii < brn (ParT cl)\n\ngoal (1 subgoal):\n 1. 0 \\<le> wt (ParT cl) s ii", "by (cases \"n = pickFT cl \\<and> i = 0\") auto"], ["proof (state)\nthis:\n  0 \\<le> wt (ParT cl) s ii\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 0 \\<le> wt (ParT cl) s ii", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 0 \\<le> wt (ParT cl) s ii", "case False"], ["proof (state)\nthis:\n  WtFT cl \\<noteq> 1\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 0 \\<le> wt (ParT cl) s ii", "thus ?thesis"], ["proof (prove)\nusing this:\n  WtFT cl \\<noteq> 1\n\ngoal (1 subgoal):\n 1. 0 \\<le> wt (ParT cl) s ii", "using Local ParT"], ["proof (prove)\nusing this:\n  WtFT cl \\<noteq> 1\n  n < length cl\n  i < brn (cl ! n)\n  ii = brnL cl n + i\n  properL cl\n  \\<lbrakk>?c \\<in> set cl; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> wt ?c ?s ?i\n  ii < brn (ParT cl)\n\ngoal (1 subgoal):\n 1. 0 \\<le> wt (ParT cl) s ii", "by (cases \"finished (cl ! n)\") auto"], ["proof (state)\nthis:\n  0 \\<le> wt (ParT cl) s ii\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> wt (ParT cl) s ii\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> wt (ParT cl) s ii\n\ngoal (4 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> 0 \\<le> wt Done s i\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> 0 \\<le> wt (Atm atm) s i\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> 0 \\<le> wt c1 s i;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> 0 \\<le> wt c2 s i;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (c1 ;; c2) s i\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> 0 \\<le> wt c s i;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wt (While tst c) s i", "qed auto"], ["", "lemma wt_le_1[simp]:\nassumes \"proper c\" and \"i < brn c\"\nshows \"wt c s i \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt c s i \\<le> 1", "using assms"], ["proof (prove)\nusing this:\n  proper c\n  i < brn c\n\ngoal (1 subgoal):\n 1. wt c s i \\<le> 1", "proof (induct c arbitrary: i s rule: proper_induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> wt Done s i \\<le> 1\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> wt (Atm atm) s i \\<le> 1\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> wt c1 s i \\<le> 1;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> wt c2 s i \\<le> 1;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> wt (c1 ;; c2) s i \\<le> 1\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> wt (While tst c) s i \\<le> 1\n 5. \\<And>ch c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> wt c1 s i \\<le> 1;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> wt c2 s i \\<le> 1;\n        i < brn (Ch ch c1 c2)\\<rbrakk>\n       \\<Longrightarrow> wt (Ch ch c1 c2) s i \\<le> 1\n 6. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (Par cl)\\<rbrakk>\n       \\<Longrightarrow> wt (Par cl) s i \\<le> 1\n 7. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (ParT cl)\\<rbrakk>\n       \\<Longrightarrow> wt (ParT cl) s i \\<le> 1", "case (Ch ch c1 c2)"], ["proof (state)\nthis:\n  ?i < brn c1 \\<Longrightarrow> wt c1 ?s ?i \\<le> 1\n  ?i < brn c2 \\<Longrightarrow> wt c2 ?s ?i \\<le> 1\n  i < brn (Ch ch c1 c2)\n\ngoal (7 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> wt Done s i \\<le> 1\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> wt (Atm atm) s i \\<le> 1\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> wt c1 s i \\<le> 1;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> wt c2 s i \\<le> 1;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> wt (c1 ;; c2) s i \\<le> 1\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> wt (While tst c) s i \\<le> 1\n 5. \\<And>ch c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> wt c1 s i \\<le> 1;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> wt c2 s i \\<le> 1;\n        i < brn (Ch ch c1 c2)\\<rbrakk>\n       \\<Longrightarrow> wt (Ch ch c1 c2) s i \\<le> 1\n 6. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (Par cl)\\<rbrakk>\n       \\<Longrightarrow> wt (Par cl) s i \\<le> 1\n 7. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (ParT cl)\\<rbrakk>\n       \\<Longrightarrow> wt (ParT cl) s i \\<le> 1", "thus ?case"], ["proof (prove)\nusing this:\n  ?i < brn c1 \\<Longrightarrow> wt c1 ?s ?i \\<le> 1\n  ?i < brn c2 \\<Longrightarrow> wt c2 ?s ?i \\<le> 1\n  i < brn (Ch ch c1 c2)\n\ngoal (1 subgoal):\n 1. wt (Ch ch c1 c2) s i \\<le> 1", "using properCh"], ["proof (prove)\nusing this:\n  ?i < brn c1 \\<Longrightarrow> wt c1 ?s ?i \\<le> 1\n  ?i < brn c2 \\<Longrightarrow> wt c2 ?s ?i \\<le> 1\n  i < brn (Ch ch c1 c2)\n  0 \\<le> cval ?ch ?s \\<and> cval ?ch ?s \\<le> 1\n\ngoal (1 subgoal):\n 1. wt (Ch ch c1 c2) s i \\<le> 1", "by (cases i) auto"], ["proof (state)\nthis:\n  wt (Ch ch c1 c2) s i \\<le> 1\n\ngoal (6 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> wt Done s i \\<le> 1\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> wt (Atm atm) s i \\<le> 1\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> wt c1 s i \\<le> 1;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> wt c2 s i \\<le> 1;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> wt (c1 ;; c2) s i \\<le> 1\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> wt (While tst c) s i \\<le> 1\n 5. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (Par cl)\\<rbrakk>\n       \\<Longrightarrow> wt (Par cl) s i \\<le> 1\n 6. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (ParT cl)\\<rbrakk>\n       \\<Longrightarrow> wt (ParT cl) s i \\<le> 1", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> wt Done s i \\<le> 1\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> wt (Atm atm) s i \\<le> 1\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> wt c1 s i \\<le> 1;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> wt c2 s i \\<le> 1;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> wt (c1 ;; c2) s i \\<le> 1\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> wt (While tst c) s i \\<le> 1\n 5. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (Par cl)\\<rbrakk>\n       \\<Longrightarrow> wt (Par cl) s i \\<le> 1\n 6. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (ParT cl)\\<rbrakk>\n       \\<Longrightarrow> wt (ParT cl) s i \\<le> 1", "case (Par cl ii)"], ["proof (state)\nthis:\n  properL cl\n  \\<lbrakk>?c \\<in> set cl; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> wt ?c ?s ?i \\<le> 1\n  ii < brn (Par cl)\n\ngoal (6 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> wt Done s i \\<le> 1\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> wt (Atm atm) s i \\<le> 1\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> wt c1 s i \\<le> 1;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> wt c2 s i \\<le> 1;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> wt (c1 ;; c2) s i \\<le> 1\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> wt (While tst c) s i \\<le> 1\n 5. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (Par cl)\\<rbrakk>\n       \\<Longrightarrow> wt (Par cl) s i \\<le> 1\n 6. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (ParT cl)\\<rbrakk>\n       \\<Longrightarrow> wt (ParT cl) s i \\<le> 1", "hence \"properL cl\" and \"ii < brnL cl (length cl)\""], ["proof (prove)\nusing this:\n  properL cl\n  \\<lbrakk>?c \\<in> set cl; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> wt ?c ?s ?i \\<le> 1\n  ii < brn (Par cl)\n\ngoal (1 subgoal):\n 1. properL cl &&& ii < brnL cl (length cl)", "by auto"], ["proof (state)\nthis:\n  properL cl\n  ii < brnL cl (length cl)\n\ngoal (6 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> wt Done s i \\<le> 1\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> wt (Atm atm) s i \\<le> 1\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> wt c1 s i \\<le> 1;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> wt c2 s i \\<le> 1;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> wt (c1 ;; c2) s i \\<le> 1\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> wt (While tst c) s i \\<le> 1\n 5. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (Par cl)\\<rbrakk>\n       \\<Longrightarrow> wt (Par cl) s i \\<le> 1\n 6. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (ParT cl)\\<rbrakk>\n       \\<Longrightarrow> wt (ParT cl) s i \\<le> 1", "thus ?case"], ["proof (prove)\nusing this:\n  properL cl\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. wt (Par cl) s ii \\<le> 1", "apply (cases rule: brnL_cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n i.\n       \\<lbrakk>n < length cl; i < brn (cl ! n); ii = brnL cl n + i\\<rbrakk>\n       \\<Longrightarrow> wt (Par cl) s ii \\<le> 1", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n i.\n       \\<lbrakk>n < length cl; i < brn (cl ! n); ii = brnL cl n + i\\<rbrakk>\n       \\<Longrightarrow> wt (Par cl) s (brnL cl n + i) \\<le> 1", "using Par"], ["proof (prove)\nusing this:\n  properL cl\n  \\<lbrakk>?c \\<in> set cl; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> wt ?c ?s ?i \\<le> 1\n  ii < brn (Par cl)\n\ngoal (1 subgoal):\n 1. \\<And>n i.\n       \\<lbrakk>n < length cl; i < brn (cl ! n); ii = brnL cl n + i\\<rbrakk>\n       \\<Longrightarrow> wt (Par cl) s (brnL cl n + i) \\<le> 1", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n i.\n       \\<lbrakk>n < length cl; i < brn (cl ! n); ii = brnL cl n + i;\n        properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> wt c s i \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> wt (cl ! n) s i \\<le> real (length cl)", "by (metis add_increasing2 diff_is_0_eq gr0_conv_Suc less_imp_diff_less less_or_eq_imp_le nth_mem of_nat_0_le_iff of_nat_Suc)"], ["proof (state)\nthis:\n  wt (Par cl) s ii \\<le> 1\n\ngoal (5 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> wt Done s i \\<le> 1\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> wt (Atm atm) s i \\<le> 1\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> wt c1 s i \\<le> 1;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> wt c2 s i \\<le> 1;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> wt (c1 ;; c2) s i \\<le> 1\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> wt (While tst c) s i \\<le> 1\n 5. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (ParT cl)\\<rbrakk>\n       \\<Longrightarrow> wt (ParT cl) s i \\<le> 1", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> wt Done s i \\<le> 1\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> wt (Atm atm) s i \\<le> 1\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> wt c1 s i \\<le> 1;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> wt c2 s i \\<le> 1;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> wt (c1 ;; c2) s i \\<le> 1\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> wt (While tst c) s i \\<le> 1\n 5. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (ParT cl)\\<rbrakk>\n       \\<Longrightarrow> wt (ParT cl) s i \\<le> 1", "case (ParT cl ii)"], ["proof (state)\nthis:\n  properL cl\n  \\<lbrakk>?c \\<in> set cl; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> wt ?c ?s ?i \\<le> 1\n  ii < brn (ParT cl)\n\ngoal (5 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> wt Done s i \\<le> 1\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> wt (Atm atm) s i \\<le> 1\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> wt c1 s i \\<le> 1;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> wt c2 s i \\<le> 1;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> wt (c1 ;; c2) s i \\<le> 1\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> wt (While tst c) s i \\<le> 1\n 5. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (ParT cl)\\<rbrakk>\n       \\<Longrightarrow> wt (ParT cl) s i \\<le> 1", "have \"properL cl\" and \"ii < brnL cl (length cl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. properL cl &&& ii < brnL cl (length cl)", "using ParT"], ["proof (prove)\nusing this:\n  properL cl\n  \\<lbrakk>?c \\<in> set cl; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> wt ?c ?s ?i \\<le> 1\n  ii < brn (ParT cl)\n\ngoal (1 subgoal):\n 1. properL cl &&& ii < brnL cl (length cl)", "by auto"], ["proof (state)\nthis:\n  properL cl\n  ii < brnL cl (length cl)\n\ngoal (5 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> wt Done s i \\<le> 1\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> wt (Atm atm) s i \\<le> 1\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> wt c1 s i \\<le> 1;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> wt c2 s i \\<le> 1;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> wt (c1 ;; c2) s i \\<le> 1\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> wt (While tst c) s i \\<le> 1\n 5. \\<And>cl i s.\n       \\<lbrakk>properL cl;\n        \\<And>c i s.\n           \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n           \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (ParT cl)\\<rbrakk>\n       \\<Longrightarrow> wt (ParT cl) s i \\<le> 1", "thus ?case"], ["proof (prove)\nusing this:\n  properL cl\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s ii \\<le> 1", "proof(cases rule: brnL_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n i.\n       \\<lbrakk>n < length cl; i < brn (cl ! n); ii = brnL cl n + i\\<rbrakk>\n       \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "case (Local n i)"], ["proof (state)\nthis:\n  n < length cl\n  i < brn (cl ! n)\n  ii = brnL cl n + i\n\ngoal (1 subgoal):\n 1. \\<And>n i.\n       \\<lbrakk>n < length cl; i < brn (cl ! n); ii = brnL cl n + i\\<rbrakk>\n       \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (ParT cl) s ii \\<le> 1", "proof (cases \"WtFT cl = 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. WtFT cl = 1 \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1\n 2. WtFT cl \\<noteq> 1 \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "case True"], ["proof (state)\nthis:\n  WtFT cl = 1\n\ngoal (2 subgoals):\n 1. WtFT cl = 1 \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1\n 2. WtFT cl \\<noteq> 1 \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  WtFT cl = 1\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s ii \\<le> 1", "using Local ParT"], ["proof (prove)\nusing this:\n  WtFT cl = 1\n  n < length cl\n  i < brn (cl ! n)\n  ii = brnL cl n + i\n  properL cl\n  \\<lbrakk>?c \\<in> set cl; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> wt ?c ?s ?i \\<le> 1\n  ii < brn (ParT cl)\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s ii \\<le> 1", "by (cases \"n = pickFT cl \\<and> i = 0\", auto)"], ["proof (state)\nthis:\n  wt (ParT cl) s ii \\<le> 1\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "case False"], ["proof (state)\nthis:\n  WtFT cl \\<noteq> 1\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "note sch = False"], ["proof (state)\nthis:\n  WtFT cl \\<noteq> 1\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  WtFT cl \\<noteq> 1\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s ii \\<le> 1", "using Local ParT"], ["proof (prove)\nusing this:\n  WtFT cl \\<noteq> 1\n  n < length cl\n  i < brn (cl ! n)\n  ii = brnL cl n + i\n  properL cl\n  \\<lbrakk>?c \\<in> set cl; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> wt ?c ?s ?i \\<le> 1\n  ii < brn (ParT cl)\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s ii \\<le> 1", "proof (cases \"finished (cl ! n)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1\n 2. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); \\<not> finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "case False"], ["proof (state)\nthis:\n  \\<not> finished (cl ! n)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1\n 2. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); \\<not> finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "note cln = False"], ["proof (state)\nthis:\n  \\<not> finished (cl ! n)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1\n 2. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); \\<not> finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "let ?L1 = \"1 / (length cl)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1\n 2. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); \\<not> finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "let ?L2 = \"wt (cl ! n) s i\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1\n 2. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); \\<not> finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "let ?R = \"WtFT cl\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1\n 2. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); \\<not> finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "have \"0 \\<le> ?L1\" and \"0 \\<le> ?L2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 1 / real (length cl) &&& 0 \\<le> wt (cl ! n) s i", "using ParT Local"], ["proof (prove)\nusing this:\n  properL cl\n  \\<lbrakk>?c \\<in> set cl; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> wt ?c ?s ?i \\<le> 1\n  ii < brn (ParT cl)\n  n < length cl\n  i < brn (cl ! n)\n  ii = brnL cl n + i\n\ngoal (1 subgoal):\n 1. 0 \\<le> 1 / real (length cl) &&& 0 \\<le> wt (cl ! n) s i", "by auto"], ["proof (state)\nthis:\n  0 \\<le> 1 / real (length cl)\n  0 \\<le> wt (cl ! n) s i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1\n 2. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); \\<not> finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "moreover"], ["proof (state)\nthis:\n  0 \\<le> 1 / real (length cl)\n  0 \\<le> wt (cl ! n) s i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1\n 2. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); \\<not> finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "have \"?L2 \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (cl ! n) s i \\<le> 1", "using ParT Local"], ["proof (prove)\nusing this:\n  properL cl\n  \\<lbrakk>?c \\<in> set cl; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> wt ?c ?s ?i \\<le> 1\n  ii < brn (ParT cl)\n  n < length cl\n  i < brn (cl ! n)\n  ii = brnL cl n + i\n\ngoal (1 subgoal):\n 1. wt (cl ! n) s i \\<le> 1", "by auto"], ["proof (state)\nthis:\n  wt (cl ! n) s i \\<le> 1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1\n 2. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); \\<not> finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> 1 / real (length cl)\n  0 \\<le> wt (cl ! n) s i\n  wt (cl ! n) s i \\<le> 1", "have \"?L1 * ?L2 \\<le> ?L1\""], ["proof (prove)\nusing this:\n  0 \\<le> 1 / real (length cl)\n  0 \\<le> wt (cl ! n) s i\n  wt (cl ! n) s i \\<le> 1\n\ngoal (1 subgoal):\n 1. 1 / real (length cl) * wt (cl ! n) s i \\<le> 1 / real (length cl)", "by (metis mult_right_le_one_le)"], ["proof (state)\nthis:\n  1 / real (length cl) * wt (cl ! n) s i \\<le> 1 / real (length cl)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1\n 2. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); \\<not> finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "also"], ["proof (state)\nthis:\n  1 / real (length cl) * wt (cl ! n) s i \\<le> 1 / real (length cl)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1\n 2. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); \\<not> finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "have \"?L1 \\<le> 1 - ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / real (length cl) \\<le> 1 - WtFT cl", "using ParT Local cln"], ["proof (prove)\nusing this:\n  properL cl\n  \\<lbrakk>?c \\<in> set cl; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> wt ?c ?s ?i \\<le> 1\n  ii < brn (ParT cl)\n  n < length cl\n  i < brn (cl ! n)\n  ii = brnL cl n + i\n  \\<not> finished (cl ! n)\n\ngoal (1 subgoal):\n 1. 1 / real (length cl) \\<le> 1 - WtFT cl", "by auto"], ["proof (state)\nthis:\n  1 / real (length cl) \\<le> 1 - WtFT cl\n\ngoal (2 subgoals):\n 1. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1\n 2. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); \\<not> finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "finally"], ["proof (chain)\npicking this:\n  1 / real (length cl) * wt (cl ! n) s i \\<le> 1 - WtFT cl", "have \"?L1 * ?L2 \\<le> 1 - ?R\""], ["proof (prove)\nusing this:\n  1 / real (length cl) * wt (cl ! n) s i \\<le> 1 - WtFT cl\n\ngoal (1 subgoal):\n 1. 1 / real (length cl) * wt (cl ! n) s i \\<le> 1 - WtFT cl", "."], ["proof (state)\nthis:\n  1 / real (length cl) * wt (cl ! n) s i \\<le> 1 - WtFT cl\n\ngoal (2 subgoals):\n 1. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1\n 2. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); \\<not> finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  1 / real (length cl) * wt (cl ! n) s i \\<le> 1 - WtFT cl\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s ii \\<le> 1", "using Local ParT cln sch"], ["proof (prove)\nusing this:\n  1 / real (length cl) * wt (cl ! n) s i \\<le> 1 - WtFT cl\n  n < length cl\n  i < brn (cl ! n)\n  ii = brnL cl n + i\n  properL cl\n  \\<lbrakk>?c \\<in> set cl; ?i < brn ?c\\<rbrakk>\n  \\<Longrightarrow> wt ?c ?s ?i \\<le> 1\n  ii < brn (ParT cl)\n  \\<not> finished (cl ! n)\n  WtFT cl \\<noteq> 1\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s ii \\<le> 1", "by (auto simp: pos_divide_le_eq mult.commute)"], ["proof (state)\nthis:\n  wt (ParT cl) s ii \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>WtFT cl \\<noteq> 1; n < length cl; i < brn (cl ! n);\n     ii = brnL cl n + i; properL cl;\n     \\<And>c i s.\n        \\<lbrakk>c \\<in> set cl; i < brn c\\<rbrakk>\n        \\<Longrightarrow> wt c s i \\<le> 1;\n     ii < brn (ParT cl); finished (cl ! n)\\<rbrakk>\n    \\<Longrightarrow> wt (ParT cl) s ii \\<le> 1", "qed (insert sch ParT Local, auto)"], ["proof (state)\nthis:\n  wt (ParT cl) s ii \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wt (ParT cl) s ii \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wt (ParT cl) s ii \\<le> 1\n\ngoal (4 subgoals):\n 1. \\<And>i s. i < brn Done \\<Longrightarrow> wt Done s i \\<le> 1\n 2. \\<And>atm i s.\n       i < brn (Atm atm) \\<Longrightarrow> wt (Atm atm) s i \\<le> 1\n 3. \\<And>c1 c2 i s.\n       \\<lbrakk>\\<And>i s. i < brn c1 \\<Longrightarrow> wt c1 s i \\<le> 1;\n        \\<And>i s. i < brn c2 \\<Longrightarrow> wt c2 s i \\<le> 1;\n        i < brn (c1 ;; c2)\\<rbrakk>\n       \\<Longrightarrow> wt (c1 ;; c2) s i \\<le> 1\n 4. \\<And>tst c i s.\n       \\<lbrakk>\\<And>i s. i < brn c \\<Longrightarrow> wt c s i \\<le> 1;\n        i < brn (While tst c)\\<rbrakk>\n       \\<Longrightarrow> wt (While tst c) s i \\<le> 1", "qed auto"], ["", "abbreviation fromPlus (\"(1{_..<+_})\") where\n\"{a ..<+ b} \\<equiv> {a ..< a + b}\""], ["", "lemma brnL_UN:\nassumes \"properL cl\"\nshows \"{..< brnL cl (length cl)} = (\\<Union> n < length cl. {brnL cl n ..<+ brn (cl!n)})\"\n(is \"?L = (\\<Union> n < length cl. ?R n)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {..<brnL cl (length cl)} =\n    (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x < brnL cl (length cl) \\<Longrightarrow>\n       x \\<in> (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})\n 2. \\<And>x n.\n       \\<lbrakk>x \\<in> {brnL cl n..<brnL cl n + brn (cl ! n)};\n        n < length cl\\<rbrakk>\n       \\<Longrightarrow> x < brnL cl (length cl)", "fix ii"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x < brnL cl (length cl) \\<Longrightarrow>\n       x \\<in> (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})\n 2. \\<And>x n.\n       \\<lbrakk>x \\<in> {brnL cl n..<brnL cl n + brn (cl ! n)};\n        n < length cl\\<rbrakk>\n       \\<Longrightarrow> x < brnL cl (length cl)", "assume ii: \"ii < brnL cl (length cl)\""], ["proof (state)\nthis:\n  ii < brnL cl (length cl)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x < brnL cl (length cl) \\<Longrightarrow>\n       x \\<in> (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})\n 2. \\<And>x n.\n       \\<lbrakk>x \\<in> {brnL cl n..<brnL cl n + brn (cl ! n)};\n        n < length cl\\<rbrakk>\n       \\<Longrightarrow> x < brnL cl (length cl)", "from assms ii"], ["proof (chain)\npicking this:\n  properL cl\n  ii < brnL cl (length cl)", "show \"ii \\<in> (\\<Union> n < length cl. ?R n)\""], ["proof (prove)\nusing this:\n  properL cl\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. ii \\<in> (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})", "proof(cases rule: brnL_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n i.\n       \\<lbrakk>n < length cl; i < brn (cl ! n); ii = brnL cl n + i\\<rbrakk>\n       \\<Longrightarrow> ii \\<in> (\\<Union>n<length cl.\n{brnL cl n..<brnL cl n + brn (cl ! n)})", "case (Local n i)"], ["proof (state)\nthis:\n  n < length cl\n  i < brn (cl ! n)\n  ii = brnL cl n + i\n\ngoal (1 subgoal):\n 1. \\<And>n i.\n       \\<lbrakk>n < length cl; i < brn (cl ! n); ii = brnL cl n + i\\<rbrakk>\n       \\<Longrightarrow> ii \\<in> (\\<Union>n<length cl.\n{brnL cl n..<brnL cl n + brn (cl ! n)})", "hence \"ii \\<in> ?R n\""], ["proof (prove)\nusing this:\n  n < length cl\n  i < brn (cl ! n)\n  ii = brnL cl n + i\n\ngoal (1 subgoal):\n 1. ii \\<in> {brnL cl n..<brnL cl n + brn (cl ! n)}", "by simp"], ["proof (state)\nthis:\n  ii \\<in> {brnL cl n..<brnL cl n + brn (cl ! n)}\n\ngoal (1 subgoal):\n 1. \\<And>n i.\n       \\<lbrakk>n < length cl; i < brn (cl ! n); ii = brnL cl n + i\\<rbrakk>\n       \\<Longrightarrow> ii \\<in> (\\<Union>n<length cl.\n{brnL cl n..<brnL cl n + brn (cl ! n)})", "thus ?thesis"], ["proof (prove)\nusing this:\n  ii \\<in> {brnL cl n..<brnL cl n + brn (cl ! n)}\n\ngoal (1 subgoal):\n 1. ii \\<in> (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})", "using Local"], ["proof (prove)\nusing this:\n  ii \\<in> {brnL cl n..<brnL cl n + brn (cl ! n)}\n  n < length cl\n  i < brn (cl ! n)\n  ii = brnL cl n + i\n\ngoal (1 subgoal):\n 1. ii \\<in> (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})", "by force"], ["proof (state)\nthis:\n  ii \\<in> (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ii \\<in> (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})\n\ngoal (1 subgoal):\n 1. \\<And>x n.\n       \\<lbrakk>x \\<in> {brnL cl n..<brnL cl n + brn (cl ! n)};\n        n < length cl\\<rbrakk>\n       \\<Longrightarrow> x < brnL cl (length cl)", "qed auto"], ["", "lemma brnL_Int_lt:\nassumes n12: \"n1 < n2\" and n2: \"n2 < length cl\"\nshows\n\"{brnL cl n1 ..<+ brn (cl!n1)} \\<inter> {brnL cl n2 ..<+ brn (cl!n2)} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n    {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n    {}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n    {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n    {}", "have \"Suc n1 \\<le> n2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc n1 \\<le> n2", "using assms"], ["proof (prove)\nusing this:\n  n1 < n2\n  n2 < length cl\n\ngoal (1 subgoal):\n 1. Suc n1 \\<le> n2", "by simp"], ["proof (state)\nthis:\n  Suc n1 \\<le> n2\n\ngoal (1 subgoal):\n 1. {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n    {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n    {}", "hence \"brnL cl (Suc n1) \\<le> brnL cl n2\""], ["proof (prove)\nusing this:\n  Suc n1 \\<le> n2\n\ngoal (1 subgoal):\n 1. brnL cl (Suc n1) \\<le> brnL cl n2", "by simp"], ["proof (state)\nthis:\n  brnL cl (Suc n1) \\<le> brnL cl n2\n\ngoal (1 subgoal):\n 1. {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n    {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n    {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  brnL cl (Suc n1) \\<le> brnL cl n2\n\ngoal (1 subgoal):\n 1. {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n    {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n    {}", "using assms"], ["proof (prove)\nusing this:\n  brnL cl (Suc n1) \\<le> brnL cl n2\n  n1 < n2\n  n2 < length cl\n\ngoal (1 subgoal):\n 1. {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n    {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n    {}", "by simp"], ["proof (state)\nthis:\n  {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n  {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n  {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma brnL_Int:\nassumes \"n1 \\<noteq> n2\" and \"n1 < length cl\" and \"n2 < length cl\"\nshows \"{brnL cl n1 ..<+ brn (cl!n1)} \\<inter> {brnL cl n2 ..<+ brn (cl!n2)} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n    {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n    {}", "proof(cases \"n1 < n2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n1 < n2 \\<Longrightarrow>\n    {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n    {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n    {}\n 2. \\<not> n1 < n2 \\<Longrightarrow>\n    {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n    {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n    {}", "case True"], ["proof (state)\nthis:\n  n1 < n2\n\ngoal (2 subgoals):\n 1. n1 < n2 \\<Longrightarrow>\n    {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n    {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n    {}\n 2. \\<not> n1 < n2 \\<Longrightarrow>\n    {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n    {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n    {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  n1 < n2\n\ngoal (1 subgoal):\n 1. {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n    {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n    {}", "using assms brnL_Int_lt"], ["proof (prove)\nusing this:\n  n1 < n2\n  n1 \\<noteq> n2\n  n1 < length cl\n  n2 < length cl\n  \\<lbrakk>?n1.0 < ?n2.0; ?n2.0 < length ?cl\\<rbrakk>\n  \\<Longrightarrow> {brnL ?cl\n                      ?n1.0..<brnL ?cl ?n1.0 + brn (?cl ! ?n1.0)} \\<inter>\n                    {brnL ?cl ?n2.0..<brnL ?cl ?n2.0 + brn (?cl ! ?n2.0)} =\n                    {}\n\ngoal (1 subgoal):\n 1. {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n    {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n    {}", "by auto"], ["proof (state)\nthis:\n  {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n  {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n  {}\n\ngoal (1 subgoal):\n 1. \\<not> n1 < n2 \\<Longrightarrow>\n    {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n    {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n    {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> n1 < n2 \\<Longrightarrow>\n    {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n    {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n    {}", "case False"], ["proof (state)\nthis:\n  \\<not> n1 < n2\n\ngoal (1 subgoal):\n 1. \\<not> n1 < n2 \\<Longrightarrow>\n    {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n    {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n    {}", "hence \"n2 < n1\""], ["proof (prove)\nusing this:\n  \\<not> n1 < n2\n\ngoal (1 subgoal):\n 1. n2 < n1", "using assms"], ["proof (prove)\nusing this:\n  \\<not> n1 < n2\n  n1 \\<noteq> n2\n  n1 < length cl\n  n2 < length cl\n\ngoal (1 subgoal):\n 1. n2 < n1", "by simp"], ["proof (state)\nthis:\n  n2 < n1\n\ngoal (1 subgoal):\n 1. \\<not> n1 < n2 \\<Longrightarrow>\n    {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n    {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n    {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  n2 < n1\n\ngoal (1 subgoal):\n 1. {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n    {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n    {}", "using brnL_Int_lt assms"], ["proof (prove)\nusing this:\n  n2 < n1\n  \\<lbrakk>?n1.0 < ?n2.0; ?n2.0 < length ?cl\\<rbrakk>\n  \\<Longrightarrow> {brnL ?cl\n                      ?n1.0..<brnL ?cl ?n1.0 + brn (?cl ! ?n1.0)} \\<inter>\n                    {brnL ?cl ?n2.0..<brnL ?cl ?n2.0 + brn (?cl ! ?n2.0)} =\n                    {}\n  n1 \\<noteq> n2\n  n1 < length cl\n  n2 < length cl\n\ngoal (1 subgoal):\n 1. {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n    {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n    {}", "by fastforce"], ["proof (state)\nthis:\n  {brnL cl n1..<brnL cl n1 + brn (cl ! n1)} \\<inter>\n  {brnL cl n2..<brnL cl n2 + brn (cl ! n2)} =\n  {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_wt_Par_sub[simp]:\nassumes cl: \"properL cl\" and n: \"n < length cl\" and I: \"I \\<subseteq> {..< brn (cl ! n)}\"\nshows \"sum (wt (Par cl) s) ((+) (brnL cl n) ` I) =\n       1 /(length cl) * sum (wt (cl ! n) s) I\" (is \"?L = ?wSch * ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (Par cl) s) ((+) (brnL cl n) ` I) =\n    1 / real (length cl) * sum (wt (cl ! n) s) I", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (wt (Par cl) s) ((+) (brnL cl n) ` I) =\n    1 / real (length cl) * sum (wt (cl ! n) s) I", "have \"?L = sum (%i. ?wSch * wt (cl ! n) s i) I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (Par cl) s) ((+) (brnL cl n) ` I) =\n    (\\<Sum>i\\<in>I. 1 / real (length cl) * wt (cl ! n) s i)", "apply(rule sum.reindex_cong[of \"(+) (brnL cl n)\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. inj_on ((+) (brnL cl n)) I\n 2. (+) (brnL cl n) ` I = (+) (brnL cl n) ` I\n 3. \\<And>x.\n       x \\<in> I \\<Longrightarrow>\n       wt (Par cl) s (brnL cl n + x) =\n       1 / real (length cl) * wt (cl ! n) s x", "using assms"], ["proof (prove)\nusing this:\n  properL cl\n  n < length cl\n  I \\<subseteq> {..<brn (cl ! n)}\n\ngoal (3 subgoals):\n 1. inj_on ((+) (brnL cl n)) I\n 2. (+) (brnL cl n) ` I = (+) (brnL cl n) ` I\n 3. \\<And>x.\n       x \\<in> I \\<Longrightarrow>\n       wt (Par cl) s (brnL cl n + x) =\n       1 / real (length cl) * wt (cl ! n) s x", "by auto"], ["proof (state)\nthis:\n  sum (wt (Par cl) s) ((+) (brnL cl n) ` I) =\n  (\\<Sum>i\\<in>I. 1 / real (length cl) * wt (cl ! n) s i)\n\ngoal (1 subgoal):\n 1. sum (wt (Par cl) s) ((+) (brnL cl n) ` I) =\n    1 / real (length cl) * sum (wt (cl ! n) s) I", "also"], ["proof (state)\nthis:\n  sum (wt (Par cl) s) ((+) (brnL cl n) ` I) =\n  (\\<Sum>i\\<in>I. 1 / real (length cl) * wt (cl ! n) s i)\n\ngoal (1 subgoal):\n 1. sum (wt (Par cl) s) ((+) (brnL cl n) ` I) =\n    1 / real (length cl) * sum (wt (cl ! n) s) I", "have \"... = ?wSch * ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I. 1 / real (length cl) * wt (cl ! n) s i) =\n    1 / real (length cl) * sum (wt (cl ! n) s) I", "unfolding sum_distrib_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I. 1 / real (length cl) * wt (cl ! n) s i) =\n    (\\<Sum>na\\<in>I. 1 / real (length cl) * wt (cl ! n) s na)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>I. 1 / real (length cl) * wt (cl ! n) s i) =\n  1 / real (length cl) * sum (wt (cl ! n) s) I\n\ngoal (1 subgoal):\n 1. sum (wt (Par cl) s) ((+) (brnL cl n) ` I) =\n    1 / real (length cl) * sum (wt (cl ! n) s) I", "finally"], ["proof (chain)\npicking this:\n  sum (wt (Par cl) s) ((+) (brnL cl n) ` I) =\n  1 / real (length cl) * sum (wt (cl ! n) s) I", "show ?thesis"], ["proof (prove)\nusing this:\n  sum (wt (Par cl) s) ((+) (brnL cl n) ` I) =\n  1 / real (length cl) * sum (wt (cl ! n) s) I\n\ngoal (1 subgoal):\n 1. sum (wt (Par cl) s) ((+) (brnL cl n) ` I) =\n    1 / real (length cl) * sum (wt (cl ! n) s) I", "."], ["proof (state)\nthis:\n  sum (wt (Par cl) s) ((+) (brnL cl n) ` I) =\n  1 / real (length cl) * sum (wt (cl ! n) s) I\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_wt_Par[simp]:\nassumes cl: \"properL cl\" and n: \"n < length cl\"\nshows \"sum (wt (Par cl) s) {brnL cl n ..<+ brn (cl!n)} =\n       1 /(length cl) * sum (wt (cl ! n) s) {..< brn (cl ! n)}\" (is \"?L = ?W * ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (Par cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} =\n    1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)}", "using assms"], ["proof (prove)\nusing this:\n  properL cl\n  n < length cl\n\ngoal (1 subgoal):\n 1. sum (wt (Par cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} =\n    1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)}", "by (simp add: sum_distrib_left)"], ["", "lemma sum_wt_ParT_sub_WtFT_pickFT_0[simp]:\nassumes cl: \"properL cl\" and nf: \"WtFT cl = 1\"\nand I: \"I \\<subseteq> {..< brn (cl ! (pickFT cl))}\" \"0 \\<in> I\"\nshows \"sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) = 1\" (is \"?L = 1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) = 1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) = 1", "let ?n = \"pickFT cl\""], ["proof (state)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) = 1", "let ?w = \"%i. if i = 0 then (1::real) else 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) = 1", "have n: \"?n < length cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pickFT cl < length cl", "using nf"], ["proof (prove)\nusing this:\n  WtFT cl = 1\n\ngoal (1 subgoal):\n 1. pickFT cl < length cl", "by simp"], ["proof (state)\nthis:\n  pickFT cl < length cl\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) = 1", "have 0: \"I = {0} Un (I - {0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I = {0} \\<union> (I - {0})", "using I"], ["proof (prove)\nusing this:\n  I \\<subseteq> {..<brn (cl ! pickFT cl)}\n  0 \\<in> I\n\ngoal (1 subgoal):\n 1. I = {0} \\<union> (I - {0})", "by auto"], ["proof (state)\nthis:\n  I = {0} \\<union> (I - {0})\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) = 1", "have finI: \"finite I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I", "using I"], ["proof (prove)\nusing this:\n  I \\<subseteq> {..<brn (cl ! pickFT cl)}\n  0 \\<in> I\n\ngoal (1 subgoal):\n 1. finite I", "by (metis finite_nat_iff_bounded)"], ["proof (state)\nthis:\n  finite I\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) = 1", "have \"?L = sum ?w I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) =\n    (\\<Sum>i\\<in>I. if i = 0 then 1 else 0)", "proof (rule sum.reindex_cong [of \"plus (brnL cl ?n)\"])"], ["proof (state)\ngoal (3 subgoals):\n 1. inj_on ((+) (brnL cl (pickFT cl))) I\n 2. (+) (brnL cl (pickFT cl)) ` I = (+) (brnL cl (pickFT cl)) ` I\n 3. \\<And>x.\n       x \\<in> I \\<Longrightarrow>\n       wt (ParT cl) s (brnL cl (pickFT cl) + x) = (if x = 0 then 1 else 0)", "fix i"], ["proof (state)\ngoal (3 subgoals):\n 1. inj_on ((+) (brnL cl (pickFT cl))) I\n 2. (+) (brnL cl (pickFT cl)) ` I = (+) (brnL cl (pickFT cl)) ` I\n 3. \\<And>x.\n       x \\<in> I \\<Longrightarrow>\n       wt (ParT cl) s (brnL cl (pickFT cl) + x) = (if x = 0 then 1 else 0)", "assume i: \"i \\<in> I\""], ["proof (state)\nthis:\n  i \\<in> I\n\ngoal (3 subgoals):\n 1. inj_on ((+) (brnL cl (pickFT cl))) I\n 2. (+) (brnL cl (pickFT cl)) ` I = (+) (brnL cl (pickFT cl)) ` I\n 3. \\<And>x.\n       x \\<in> I \\<Longrightarrow>\n       wt (ParT cl) s (brnL cl (pickFT cl) + x) = (if x = 0 then 1 else 0)", "have \"i < brn (cl ! ?n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < brn (cl ! pickFT cl)", "using i I"], ["proof (prove)\nusing this:\n  i \\<in> I\n  I \\<subseteq> {..<brn (cl ! pickFT cl)}\n  0 \\<in> I\n\ngoal (1 subgoal):\n 1. i < brn (cl ! pickFT cl)", "by auto"], ["proof (state)\nthis:\n  i < brn (cl ! pickFT cl)\n\ngoal (3 subgoals):\n 1. inj_on ((+) (brnL cl (pickFT cl))) I\n 2. (+) (brnL cl (pickFT cl)) ` I = (+) (brnL cl (pickFT cl)) ` I\n 3. \\<And>x.\n       x \\<in> I \\<Longrightarrow>\n       wt (ParT cl) s (brnL cl (pickFT cl) + x) = (if x = 0 then 1 else 0)", "note i = this i"], ["proof (state)\nthis:\n  i < brn (cl ! pickFT cl)\n  i \\<in> I\n\ngoal (3 subgoals):\n 1. inj_on ((+) (brnL cl (pickFT cl))) I\n 2. (+) (brnL cl (pickFT cl)) ` I = (+) (brnL cl (pickFT cl)) ` I\n 3. \\<And>x.\n       x \\<in> I \\<Longrightarrow>\n       wt (ParT cl) s (brnL cl (pickFT cl) + x) = (if x = 0 then 1 else 0)", "show \"wt (ParT cl) s (brnL cl ?n + i) = ?w i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl (pickFT cl) + i) = (if i = 0 then 1 else 0)", "using nf n i cl"], ["proof (prove)\nusing this:\n  WtFT cl = 1\n  pickFT cl < length cl\n  i < brn (cl ! pickFT cl)\n  i \\<in> I\n  properL cl\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl (pickFT cl) + i) = (if i = 0 then 1 else 0)", "by (cases \"i = 0\") auto"], ["proof (state)\nthis:\n  wt (ParT cl) s (brnL cl (pickFT cl) + i) = (if i = 0 then 1 else 0)\n\ngoal (2 subgoals):\n 1. inj_on ((+) (brnL cl (pickFT cl))) I\n 2. (+) (brnL cl (pickFT cl)) ` I = (+) (brnL cl (pickFT cl)) ` I", "qed (insert assms, auto)"], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) =\n  (\\<Sum>i\\<in>I. if i = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) = 1", "also"], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) =\n  (\\<Sum>i\\<in>I. if i = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) = 1", "have \"... = sum ?w ({0} Un (I - {0}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I. if i = 0 then 1 else 0) =\n    (\\<Sum>i\\<in>{0} \\<union> (I - {0}). if i = 0 then 1 else 0)", "using 0"], ["proof (prove)\nusing this:\n  I = {0} \\<union> (I - {0})\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I. if i = 0 then 1 else 0) =\n    (\\<Sum>i\\<in>{0} \\<union> (I - {0}). if i = 0 then 1 else 0)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>I. if i = 0 then 1 else 0) =\n  (\\<Sum>i\\<in>{0} \\<union> (I - {0}). if i = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) = 1", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>I. if i = 0 then 1 else 0) =\n  (\\<Sum>i\\<in>{0} \\<union> (I - {0}). if i = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) = 1", "have \"... = sum ?w {0::real} + sum ?w (I - {0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{0} \\<union> (I - {0}). if i = 0 then 1 else 0) =\n    (\\<Sum>i\\<in>{0}. if i = 0 then 1 else 0) +\n    (\\<Sum>i\\<in>I - {0}. if i = 0 then 1 else 0)", "using sum.union_disjoint[of \"{0}\" \"I - {0}\" ?w] finI"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite {0}; finite (I - {0});\n   {0} \\<inter> (I - {0}) = {}\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>i\\<in>{0} \\<union> (I - {0}).\n                       if i = 0 then 1 else 0) =\n                    (\\<Sum>i\\<in>{0}. if i = 0 then 1 else 0) +\n                    (\\<Sum>i\\<in>I - {0}. if i = 0 then 1 else 0)\n  finite I\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{0} \\<union> (I - {0}). if i = 0 then 1 else 0) =\n    (\\<Sum>i\\<in>{0}. if i = 0 then 1 else 0) +\n    (\\<Sum>i\\<in>I - {0}. if i = 0 then 1 else 0)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{0} \\<union> (I - {0}). if i = 0 then 1 else 0) =\n  (\\<Sum>i\\<in>{0}. if i = 0 then 1 else 0) +\n  (\\<Sum>i\\<in>I - {0}. if i = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) = 1", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{0} \\<union> (I - {0}). if i = 0 then 1 else 0) =\n  (\\<Sum>i\\<in>{0}. if i = 0 then 1 else 0) +\n  (\\<Sum>i\\<in>I - {0}. if i = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) = 1", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{0}. if i = 0 then 1 else 0) +\n    (\\<Sum>i\\<in>I - {0}. if i = 0 then 1 else 0) =\n    1", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{0}. if i = 0 then 1 else 0) +\n  (\\<Sum>i\\<in>I - {0}. if i = 0 then 1 else 0) =\n  1\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) = 1", "finally"], ["proof (chain)\npicking this:\n  sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) = 1\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) = 1", "."], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) ((+) (brnL cl (pickFT cl)) ` I) = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_wt_ParT_sub_WtFT_pickFT_0_2[simp]:\nassumes cl: \"properL cl\" and nf: \"WtFT cl = 1\"\nand II: \"II \\<subseteq> {..< brnL cl (length cl)}\" \"brnL cl (pickFT cl) \\<in> II\"\nshows \"sum (wt (ParT cl) s) II = 1\" (is \"?L = 1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) II = 1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) II = 1", "let ?n = \"pickFT cl\""], ["proof (state)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) II = 1", "let ?w = \"%ii. if ii = brnL cl (pickFT cl) then (1::real) else 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) II = 1", "have n: \"?n < length cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pickFT cl < length cl", "using nf"], ["proof (prove)\nusing this:\n  WtFT cl = 1\n\ngoal (1 subgoal):\n 1. pickFT cl < length cl", "by simp"], ["proof (state)\nthis:\n  pickFT cl < length cl\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) II = 1", "have 0: \"II = {brnL cl ?n} Un (II - {brnL cl ?n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. II = {brnL cl (pickFT cl)} \\<union> (II - {brnL cl (pickFT cl)})", "using II"], ["proof (prove)\nusing this:\n  II \\<subseteq> {..<brnL cl (length cl)}\n  brnL cl (pickFT cl) \\<in> II\n\ngoal (1 subgoal):\n 1. II = {brnL cl (pickFT cl)} \\<union> (II - {brnL cl (pickFT cl)})", "by auto"], ["proof (state)\nthis:\n  II = {brnL cl (pickFT cl)} \\<union> (II - {brnL cl (pickFT cl)})\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) II = 1", "have finI: \"finite II\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite II", "using II"], ["proof (prove)\nusing this:\n  II \\<subseteq> {..<brnL cl (length cl)}\n  brnL cl (pickFT cl) \\<in> II\n\ngoal (1 subgoal):\n 1. finite II", "by (metis finite_nat_iff_bounded)"], ["proof (state)\nthis:\n  finite II\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) II = 1", "have \"?L = sum ?w II\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) II =\n    (\\<Sum>ii\\<in>II. if ii = brnL cl (pickFT cl) then 1 else 0)", "proof(rule sum.cong)"], ["proof (state)\ngoal (2 subgoals):\n 1. II = II\n 2. \\<And>x.\n       x \\<in> II \\<Longrightarrow>\n       wt (ParT cl) s x = (if x = brnL cl (pickFT cl) then 1 else 0)", "fix ii"], ["proof (state)\ngoal (2 subgoals):\n 1. II = II\n 2. \\<And>x.\n       x \\<in> II \\<Longrightarrow>\n       wt (ParT cl) s x = (if x = brnL cl (pickFT cl) then 1 else 0)", "assume ii: \"ii \\<in> II\""], ["proof (state)\nthis:\n  ii \\<in> II\n\ngoal (2 subgoals):\n 1. II = II\n 2. \\<And>x.\n       x \\<in> II \\<Longrightarrow>\n       wt (ParT cl) s x = (if x = brnL cl (pickFT cl) then 1 else 0)", "hence ii: \"ii < brnL cl (length cl)\""], ["proof (prove)\nusing this:\n  ii \\<in> II\n\ngoal (1 subgoal):\n 1. ii < brnL cl (length cl)", "using II"], ["proof (prove)\nusing this:\n  ii \\<in> II\n  II \\<subseteq> {..<brnL cl (length cl)}\n  brnL cl (pickFT cl) \\<in> II\n\ngoal (1 subgoal):\n 1. ii < brnL cl (length cl)", "by auto"], ["proof (state)\nthis:\n  ii < brnL cl (length cl)\n\ngoal (2 subgoals):\n 1. II = II\n 2. \\<And>x.\n       x \\<in> II \\<Longrightarrow>\n       wt (ParT cl) s x = (if x = brnL cl (pickFT cl) then 1 else 0)", "from cl ii"], ["proof (chain)\npicking this:\n  properL cl\n  ii < brnL cl (length cl)", "show \"wt (ParT cl) s ii = ?w ii\""], ["proof (prove)\nusing this:\n  properL cl\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s ii = (if ii = brnL cl (pickFT cl) then 1 else 0)", "proof(cases rule: brnL_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n i.\n       \\<lbrakk>n < length cl; i < brn (cl ! n); ii = brnL cl n + i\\<rbrakk>\n       \\<Longrightarrow> wt (ParT cl) s ii =\n                         (if ii = brnL cl (pickFT cl) then 1 else 0)", "case (Local n i)"], ["proof (state)\nthis:\n  n < length cl\n  i < brn (cl ! n)\n  ii = brnL cl n + i\n\ngoal (1 subgoal):\n 1. \\<And>n i.\n       \\<lbrakk>n < length cl; i < brn (cl ! n); ii = brnL cl n + i\\<rbrakk>\n       \\<Longrightarrow> wt (ParT cl) s ii =\n                         (if ii = brnL cl (pickFT cl) then 1 else 0)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (ParT cl) s ii = (if ii = brnL cl (pickFT cl) then 1 else 0)", "proof(cases \"ii = brnL cl (pickFT cl)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. ii = brnL cl (pickFT cl) \\<Longrightarrow>\n    wt (ParT cl) s ii = (if ii = brnL cl (pickFT cl) then 1 else 0)\n 2. ii \\<noteq> brnL cl (pickFT cl) \\<Longrightarrow>\n    wt (ParT cl) s ii = (if ii = brnL cl (pickFT cl) then 1 else 0)", "case True"], ["proof (state)\nthis:\n  ii = brnL cl (pickFT cl)\n\ngoal (2 subgoals):\n 1. ii = brnL cl (pickFT cl) \\<Longrightarrow>\n    wt (ParT cl) s ii = (if ii = brnL cl (pickFT cl) then 1 else 0)\n 2. ii \\<noteq> brnL cl (pickFT cl) \\<Longrightarrow>\n    wt (ParT cl) s ii = (if ii = brnL cl (pickFT cl) then 1 else 0)", "have \"n = pickFT cl \\<and> i = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = pickFT cl \\<and> i = 0", "apply(intro brnL_unique[of cl])"], ["proof (prove)\ngoal (4 subgoals):\n 1. properL cl\n 2. n < length cl \\<and> i < brn (cl ! n)\n 3. pickFT cl < length cl \\<and> 0 < brn (cl ! pickFT cl)\n 4. brnL cl n + i = brnL cl (pickFT cl) + 0", "using Local cl nf brn_gt_0"], ["proof (prove)\nusing this:\n  n < length cl\n  i < brn (cl ! n)\n  ii = brnL cl n + i\n  properL cl\n  WtFT cl = 1\n  proper ?c \\<Longrightarrow> 0 < brn ?c\n\ngoal (4 subgoals):\n 1. properL cl\n 2. n < length cl \\<and> i < brn (cl ! n)\n 3. pickFT cl < length cl \\<and> 0 < brn (cl ! pickFT cl)\n 4. brnL cl n + i = brnL cl (pickFT cl) + 0", "unfolding True"], ["proof (prove)\nusing this:\n  n < length cl\n  i < brn (cl ! n)\n  brnL cl (pickFT cl) = brnL cl n + i\n  properL cl\n  WtFT cl = 1\n  proper ?c \\<Longrightarrow> 0 < brn ?c\n\ngoal (4 subgoals):\n 1. properL cl\n 2. n < length cl \\<and> i < brn (cl ! n)\n 3. pickFT cl < length cl \\<and> 0 < brn (cl ! pickFT cl)\n 4. brnL cl n + i = brnL cl (pickFT cl) + 0", "by auto"], ["proof (state)\nthis:\n  n = pickFT cl \\<and> i = 0\n\ngoal (2 subgoals):\n 1. ii = brnL cl (pickFT cl) \\<Longrightarrow>\n    wt (ParT cl) s ii = (if ii = brnL cl (pickFT cl) then 1 else 0)\n 2. ii \\<noteq> brnL cl (pickFT cl) \\<Longrightarrow>\n    wt (ParT cl) s ii = (if ii = brnL cl (pickFT cl) then 1 else 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  n = pickFT cl \\<and> i = 0\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s ii = (if ii = brnL cl (pickFT cl) then 1 else 0)", "using cl nf True"], ["proof (prove)\nusing this:\n  n = pickFT cl \\<and> i = 0\n  properL cl\n  WtFT cl = 1\n  ii = brnL cl (pickFT cl)\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s ii = (if ii = brnL cl (pickFT cl) then 1 else 0)", "by simp"], ["proof (state)\nthis:\n  wt (ParT cl) s ii = (if ii = brnL cl (pickFT cl) then 1 else 0)\n\ngoal (1 subgoal):\n 1. ii \\<noteq> brnL cl (pickFT cl) \\<Longrightarrow>\n    wt (ParT cl) s ii = (if ii = brnL cl (pickFT cl) then 1 else 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ii \\<noteq> brnL cl (pickFT cl) \\<Longrightarrow>\n    wt (ParT cl) s ii = (if ii = brnL cl (pickFT cl) then 1 else 0)", "case False"], ["proof (state)\nthis:\n  ii \\<noteq> brnL cl (pickFT cl)\n\ngoal (1 subgoal):\n 1. ii \\<noteq> brnL cl (pickFT cl) \\<Longrightarrow>\n    wt (ParT cl) s ii = (if ii = brnL cl (pickFT cl) then 1 else 0)", "hence \"n = pickFT cl \\<longrightarrow> i \\<noteq> 0\""], ["proof (prove)\nusing this:\n  ii \\<noteq> brnL cl (pickFT cl)\n\ngoal (1 subgoal):\n 1. n = pickFT cl \\<longrightarrow> i \\<noteq> 0", "unfolding Local"], ["proof (prove)\nusing this:\n  brnL cl n + i \\<noteq> brnL cl (pickFT cl)\n\ngoal (1 subgoal):\n 1. n = pickFT cl \\<longrightarrow> i \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  n = pickFT cl \\<longrightarrow> i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ii \\<noteq> brnL cl (pickFT cl) \\<Longrightarrow>\n    wt (ParT cl) s ii = (if ii = brnL cl (pickFT cl) then 1 else 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  n = pickFT cl \\<longrightarrow> i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s ii = (if ii = brnL cl (pickFT cl) then 1 else 0)", "using Local ii nf cl False"], ["proof (prove)\nusing this:\n  n = pickFT cl \\<longrightarrow> i \\<noteq> 0\n  n < length cl\n  i < brn (cl ! n)\n  ii = brnL cl n + i\n  ii < brnL cl (length cl)\n  WtFT cl = 1\n  properL cl\n  ii \\<noteq> brnL cl (pickFT cl)\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s ii = (if ii = brnL cl (pickFT cl) then 1 else 0)", "by auto"], ["proof (state)\nthis:\n  wt (ParT cl) s ii = (if ii = brnL cl (pickFT cl) then 1 else 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wt (ParT cl) s ii = (if ii = brnL cl (pickFT cl) then 1 else 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wt (ParT cl) s ii = (if ii = brnL cl (pickFT cl) then 1 else 0)\n\ngoal (1 subgoal):\n 1. II = II", "qed simp"], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) II =\n  (\\<Sum>ii\\<in>II. if ii = brnL cl (pickFT cl) then 1 else 0)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) II = 1", "also"], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) II =\n  (\\<Sum>ii\\<in>II. if ii = brnL cl (pickFT cl) then 1 else 0)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) II = 1", "have \"... = sum ?w ({brnL cl ?n} Un (II - {brnL cl ?n}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ii\\<in>II. if ii = brnL cl (pickFT cl) then 1 else 0) =\n    (\\<Sum>ii\\<in>{brnL cl (pickFT cl)} \\<union>\n                  (II - {brnL cl (pickFT cl)}).\n       if ii = brnL cl (pickFT cl) then 1 else 0)", "using 0"], ["proof (prove)\nusing this:\n  II = {brnL cl (pickFT cl)} \\<union> (II - {brnL cl (pickFT cl)})\n\ngoal (1 subgoal):\n 1. (\\<Sum>ii\\<in>II. if ii = brnL cl (pickFT cl) then 1 else 0) =\n    (\\<Sum>ii\\<in>{brnL cl (pickFT cl)} \\<union>\n                  (II - {brnL cl (pickFT cl)}).\n       if ii = brnL cl (pickFT cl) then 1 else 0)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>ii\\<in>II. if ii = brnL cl (pickFT cl) then 1 else 0) =\n  (\\<Sum>ii\\<in>{brnL cl (pickFT cl)} \\<union> (II - {brnL cl (pickFT cl)}).\n     if ii = brnL cl (pickFT cl) then 1 else 0)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) II = 1", "also"], ["proof (state)\nthis:\n  (\\<Sum>ii\\<in>II. if ii = brnL cl (pickFT cl) then 1 else 0) =\n  (\\<Sum>ii\\<in>{brnL cl (pickFT cl)} \\<union> (II - {brnL cl (pickFT cl)}).\n     if ii = brnL cl (pickFT cl) then 1 else 0)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) II = 1", "have \"... = sum ?w {brnL cl ?n} + sum ?w (II - {brnL cl ?n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ii\\<in>{brnL cl (pickFT cl)} \\<union>\n                  (II - {brnL cl (pickFT cl)}).\n       if ii = brnL cl (pickFT cl) then 1 else 0) =\n    (\\<Sum>ii\\<in>{brnL cl (pickFT cl)}.\n       if ii = brnL cl (pickFT cl) then 1 else 0) +\n    (\\<Sum>ii\\<in>II - {brnL cl (pickFT cl)}.\n       if ii = brnL cl (pickFT cl) then 1 else 0)", "apply(rule sum.union_disjoint)"], ["proof (prove)\ngoal (3 subgoals):\n 1. finite {brnL cl (pickFT cl)}\n 2. finite (II - {brnL cl (pickFT cl)})\n 3. {brnL cl (pickFT cl)} \\<inter> (II - {brnL cl (pickFT cl)}) = {}", "using finI"], ["proof (prove)\nusing this:\n  finite II\n\ngoal (3 subgoals):\n 1. finite {brnL cl (pickFT cl)}\n 2. finite (II - {brnL cl (pickFT cl)})\n 3. {brnL cl (pickFT cl)} \\<inter> (II - {brnL cl (pickFT cl)}) = {}", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>ii\\<in>{brnL cl (pickFT cl)} \\<union> (II - {brnL cl (pickFT cl)}).\n     if ii = brnL cl (pickFT cl) then 1 else 0) =\n  (\\<Sum>ii\\<in>{brnL cl (pickFT cl)}.\n     if ii = brnL cl (pickFT cl) then 1 else 0) +\n  (\\<Sum>ii\\<in>II - {brnL cl (pickFT cl)}.\n     if ii = brnL cl (pickFT cl) then 1 else 0)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) II = 1", "also"], ["proof (state)\nthis:\n  (\\<Sum>ii\\<in>{brnL cl (pickFT cl)} \\<union> (II - {brnL cl (pickFT cl)}).\n     if ii = brnL cl (pickFT cl) then 1 else 0) =\n  (\\<Sum>ii\\<in>{brnL cl (pickFT cl)}.\n     if ii = brnL cl (pickFT cl) then 1 else 0) +\n  (\\<Sum>ii\\<in>II - {brnL cl (pickFT cl)}.\n     if ii = brnL cl (pickFT cl) then 1 else 0)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) II = 1", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ii\\<in>{brnL cl (pickFT cl)}.\n       if ii = brnL cl (pickFT cl) then 1 else 0) +\n    (\\<Sum>ii\\<in>II - {brnL cl (pickFT cl)}.\n       if ii = brnL cl (pickFT cl) then 1 else 0) =\n    1", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>ii\\<in>{brnL cl (pickFT cl)}.\n     if ii = brnL cl (pickFT cl) then 1 else 0) +\n  (\\<Sum>ii\\<in>II - {brnL cl (pickFT cl)}.\n     if ii = brnL cl (pickFT cl) then 1 else 0) =\n  1\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) II = 1", "finally"], ["proof (chain)\npicking this:\n  sum (wt (ParT cl) s) II = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  sum (wt (ParT cl) s) II = 1\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) II = 1", "."], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) II = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_wt_ParT_sub_WtFT_notPickFT_0[simp]:\nassumes cl: \"properL cl\" and nf: \"WtFT cl = 1\" and n: \"n < length cl\"\nand I: \"I \\<subseteq> {..< brn (cl ! n)}\" and nI: \"n = pickFT cl \\<longrightarrow> 0 \\<notin> I\"\nshows \"sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0\" (is \"?L = 0\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0", "have \"?L = sum (%i. 0) I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = (\\<Sum>i\\<in>I. 0)", "proof (rule sum.reindex_cong [of \"plus (brnL cl n)\"])"], ["proof (state)\ngoal (3 subgoals):\n 1. inj_on ((+) (brnL cl n)) I\n 2. (+) (brnL cl n) ` I = (+) (brnL cl n) ` I\n 3. \\<And>x. x \\<in> I \\<Longrightarrow> wt (ParT cl) s (brnL cl n + x) = 0", "fix i"], ["proof (state)\ngoal (3 subgoals):\n 1. inj_on ((+) (brnL cl n)) I\n 2. (+) (brnL cl n) ` I = (+) (brnL cl n) ` I\n 3. \\<And>x. x \\<in> I \\<Longrightarrow> wt (ParT cl) s (brnL cl n + x) = 0", "assume i: \"i \\<in> I\""], ["proof (state)\nthis:\n  i \\<in> I\n\ngoal (3 subgoals):\n 1. inj_on ((+) (brnL cl n)) I\n 2. (+) (brnL cl n) ` I = (+) (brnL cl n) ` I\n 3. \\<And>x. x \\<in> I \\<Longrightarrow> wt (ParT cl) s (brnL cl n + x) = 0", "hence \"n = pickFT cl \\<longrightarrow> i \\<noteq> 0\""], ["proof (prove)\nusing this:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. n = pickFT cl \\<longrightarrow> i \\<noteq> 0", "using nI"], ["proof (prove)\nusing this:\n  i \\<in> I\n  n = pickFT cl \\<longrightarrow> 0 \\<notin> I\n\ngoal (1 subgoal):\n 1. n = pickFT cl \\<longrightarrow> i \\<noteq> 0", "by metis"], ["proof (state)\nthis:\n  n = pickFT cl \\<longrightarrow> i \\<noteq> 0\n\ngoal (3 subgoals):\n 1. inj_on ((+) (brnL cl n)) I\n 2. (+) (brnL cl n) ` I = (+) (brnL cl n) ` I\n 3. \\<And>x. x \\<in> I \\<Longrightarrow> wt (ParT cl) s (brnL cl n + x) = 0", "moreover"], ["proof (state)\nthis:\n  n = pickFT cl \\<longrightarrow> i \\<noteq> 0\n\ngoal (3 subgoals):\n 1. inj_on ((+) (brnL cl n)) I\n 2. (+) (brnL cl n) ` I = (+) (brnL cl n) ` I\n 3. \\<And>x. x \\<in> I \\<Longrightarrow> wt (ParT cl) s (brnL cl n + x) = 0", "have \"i < brn (cl ! n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < brn (cl ! n)", "using i I"], ["proof (prove)\nusing this:\n  i \\<in> I\n  I \\<subseteq> {..<brn (cl ! n)}\n\ngoal (1 subgoal):\n 1. i < brn (cl ! n)", "by auto"], ["proof (state)\nthis:\n  i < brn (cl ! n)\n\ngoal (3 subgoals):\n 1. inj_on ((+) (brnL cl n)) I\n 2. (+) (brnL cl n) ` I = (+) (brnL cl n) ` I\n 3. \\<And>x. x \\<in> I \\<Longrightarrow> wt (ParT cl) s (brnL cl n + x) = 0", "ultimately"], ["proof (chain)\npicking this:\n  n = pickFT cl \\<longrightarrow> i \\<noteq> 0\n  i < brn (cl ! n)", "show \"wt (ParT cl) s (brnL cl n + i) = 0\""], ["proof (prove)\nusing this:\n  n = pickFT cl \\<longrightarrow> i \\<noteq> 0\n  i < brn (cl ! n)\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "using nf n cl"], ["proof (prove)\nusing this:\n  n = pickFT cl \\<longrightarrow> i \\<noteq> 0\n  i < brn (cl ! n)\n  WtFT cl = 1\n  n < length cl\n  properL cl\n\ngoal (1 subgoal):\n 1. wt (ParT cl) s (brnL cl n + i) = 0", "by simp"], ["proof (state)\nthis:\n  wt (ParT cl) s (brnL cl n + i) = 0\n\ngoal (2 subgoals):\n 1. inj_on ((+) (brnL cl n)) I\n 2. (+) (brnL cl n) ` I = (+) (brnL cl n) ` I", "qed (insert assms, auto)"], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = (\\<Sum>i\\<in>I. 0)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0", "also"], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = (\\<Sum>i\\<in>I. 0)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I. 0) = 0", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>I. 0) = 0\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0", "finally"], ["proof (chain)\npicking this:\n  sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0", "."], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_wt_ParT_sub_notWtFT_finished[simp]:\nassumes cl: \"properL cl\" and nf: \"WtFT cl \\<noteq> 1\"\nand n: \"n < length cl\" and cln: \"finished (cl!n)\" and I: \"I \\<subseteq> {..< brn (cl ! n)}\"\nshows \"sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0\" (is \"?L = 0\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0", "have \"?L = sum (%i. 0) I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = (\\<Sum>i\\<in>I. 0)", "apply(rule sum.reindex_cong[of \"(+) (brnL cl n)\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. inj_on ((+) (brnL cl n)) I\n 2. (+) (brnL cl n) ` I = (+) (brnL cl n) ` I\n 3. \\<And>x. x \\<in> I \\<Longrightarrow> wt (ParT cl) s (brnL cl n + x) = 0", "using assms"], ["proof (prove)\nusing this:\n  properL cl\n  WtFT cl \\<noteq> 1\n  n < length cl\n  finished (cl ! n)\n  I \\<subseteq> {..<brn (cl ! n)}\n\ngoal (3 subgoals):\n 1. inj_on ((+) (brnL cl n)) I\n 2. (+) (brnL cl n) ` I = (+) (brnL cl n) ` I\n 3. \\<And>x. x \\<in> I \\<Longrightarrow> wt (ParT cl) s (brnL cl n + x) = 0", "by auto"], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = (\\<Sum>i\\<in>I. 0)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0", "also"], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = (\\<Sum>i\\<in>I. 0)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I. 0) = 0", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>I. 0) = 0\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0", "finally"], ["proof (chain)\npicking this:\n  sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0", "."], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_wt_ParT_sub_notWtFT_notFinished[simp]:\nassumes cl: \"properL cl\" and nf: \"WtFT cl \\<noteq> 1\" and n: \"n < length cl\"\nand cln: \"\\<not> finished (cl!n)\" and I: \"I \\<subseteq> {..< brn (cl ! n)}\"\nshows\n\"sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) =\n (1 / (length cl)) / (1 - WtFT cl) * sum (wt (cl ! n) s) I\"\n(is \"?L = ?w / (1 - ?wF) * ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) =\n    1 / real (length cl) / (1 - WtFT cl) * sum (wt (cl ! n) s) I", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) =\n    1 / real (length cl) / (1 - WtFT cl) * sum (wt (cl ! n) s) I", "have \"?L = sum (%i. ?w / (1 - ?wF) * wt (cl ! n) s i) I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) =\n    (\\<Sum>i\\<in>I. 1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i)", "apply(rule sum.reindex_cong[of \"(+) (brnL cl n)\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. inj_on ((+) (brnL cl n)) I\n 2. (+) (brnL cl n) ` I = (+) (brnL cl n) ` I\n 3. \\<And>x.\n       x \\<in> I \\<Longrightarrow>\n       wt (ParT cl) s (brnL cl n + x) =\n       1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s x", "using assms"], ["proof (prove)\nusing this:\n  properL cl\n  WtFT cl \\<noteq> 1\n  n < length cl\n  \\<not> finished (cl ! n)\n  I \\<subseteq> {..<brn (cl ! n)}\n\ngoal (3 subgoals):\n 1. inj_on ((+) (brnL cl n)) I\n 2. (+) (brnL cl n) ` I = (+) (brnL cl n) ` I\n 3. \\<And>x.\n       x \\<in> I \\<Longrightarrow>\n       wt (ParT cl) s (brnL cl n + x) =\n       1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s x", "by auto"], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) =\n  (\\<Sum>i\\<in>I. 1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) =\n    1 / real (length cl) / (1 - WtFT cl) * sum (wt (cl ! n) s) I", "also"], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) =\n  (\\<Sum>i\\<in>I. 1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) =\n    1 / real (length cl) / (1 - WtFT cl) * sum (wt (cl ! n) s) I", "have \"... = ?w / (1 - ?wF) * ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I.\n       1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i) =\n    1 / real (length cl) / (1 - WtFT cl) * sum (wt (cl ! n) s) I", "unfolding sum_distrib_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I.\n       1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i) =\n    (\\<Sum>na\\<in>I.\n       1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s na)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>I. 1 / real (length cl) / (1 - WtFT cl) * wt (cl ! n) s i) =\n  1 / real (length cl) / (1 - WtFT cl) * sum (wt (cl ! n) s) I\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) =\n    1 / real (length cl) / (1 - WtFT cl) * sum (wt (cl ! n) s) I", "finally"], ["proof (chain)\npicking this:\n  sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) =\n  1 / real (length cl) / (1 - WtFT cl) * sum (wt (cl ! n) s) I", "show ?thesis"], ["proof (prove)\nusing this:\n  sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) =\n  1 / real (length cl) / (1 - WtFT cl) * sum (wt (cl ! n) s) I\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) =\n    1 / real (length cl) / (1 - WtFT cl) * sum (wt (cl ! n) s) I", "."], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) ((+) (brnL cl n) ` I) =\n  1 / real (length cl) / (1 - WtFT cl) * sum (wt (cl ! n) s) I\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_wt_ParT_WtFT_pickFT_0[simp]:\nassumes cl: \"properL cl\" and nf: \"WtFT cl = 1\"\nshows \"sum (wt (ParT cl) s) {brnL cl (pickFT cl) ..<+ brn (cl ! (pickFT cl))} = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s)\n     {brnL cl (pickFT cl)..<brnL cl (pickFT cl) + brn (cl ! pickFT cl)} =\n    1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s)\n     {brnL cl (pickFT cl)..<brnL cl (pickFT cl) + brn (cl ! pickFT cl)} =\n    1", "let ?n = \"pickFT cl\""], ["proof (state)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s)\n     {brnL cl (pickFT cl)..<brnL cl (pickFT cl) + brn (cl ! pickFT cl)} =\n    1", "have 1: \"{brnL cl ?n ..<+ brn (cl ! ?n)} =\n  (+) (brnL cl ?n) ` {..< brn (cl ! ?n)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {brnL cl (pickFT cl)..<brnL cl (pickFT cl) + brn (cl ! pickFT cl)} =\n    (+) (brnL cl (pickFT cl)) ` {..<brn (cl ! pickFT cl)}", "by simp"], ["proof (state)\nthis:\n  {brnL cl (pickFT cl)..<brnL cl (pickFT cl) + brn (cl ! pickFT cl)} =\n  (+) (brnL cl (pickFT cl)) ` {..<brn (cl ! pickFT cl)}\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s)\n     {brnL cl (pickFT cl)..<brnL cl (pickFT cl) + brn (cl ! pickFT cl)} =\n    1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s)\n     {brnL cl (pickFT cl)..<brnL cl (pickFT cl) + brn (cl ! pickFT cl)} =\n    1", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s)\n     ((+) (brnL cl (pickFT cl)) ` {..<brn (cl ! pickFT cl)}) =\n    1", "apply(rule sum_wt_ParT_sub_WtFT_pickFT_0)"], ["proof (prove)\ngoal (4 subgoals):\n 1. properL cl\n 2. WtFT cl = 1\n 3. {..<brn (cl ! pickFT cl)} \\<subseteq> {..<brn (cl ! pickFT cl)}\n 4. 0 \\<in> {..<brn (cl ! pickFT cl)}", "using assms"], ["proof (prove)\nusing this:\n  properL cl\n  WtFT cl = 1\n\ngoal (4 subgoals):\n 1. properL cl\n 2. WtFT cl = 1\n 3. {..<brn (cl ! pickFT cl)} \\<subseteq> {..<brn (cl ! pickFT cl)}\n 4. 0 \\<in> {..<brn (cl ! pickFT cl)}", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>properL cl; WtFT cl = 1\\<rbrakk>\n    \\<Longrightarrow> 0 < brn (cl ! pickFT cl)", "by (metis brn_gt_0_L nth_mem pickFT_length)"], ["proof (state)\nthis:\n  sum (wt (ParT cl) s)\n   {brnL cl (pickFT cl)..<brnL cl (pickFT cl) + brn (cl ! pickFT cl)} =\n  1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_wt_ParT_WtFT_notPickFT_0[simp]:\nassumes cl: \"properL cl\" and nf: \"WtFT cl = 1\" and n: \"n < length cl\" \"n \\<noteq> pickFT cl\"\nshows \"sum (wt (ParT cl) s) {brnL cl n ..<+ brn (cl!n)} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = 0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = 0", "have 1: \"{brnL cl n ..<+ brn (cl!n)} = (+) (brnL cl n) ` {..< brn (cl!n)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {brnL cl n..<brnL cl n + brn (cl ! n)} =\n    (+) (brnL cl n) ` {..<brn (cl ! n)}", "by simp"], ["proof (state)\nthis:\n  {brnL cl n..<brnL cl n + brn (cl ! n)} =\n  (+) (brnL cl n) ` {..<brn (cl ! n)}\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = 0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = 0", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` {..<brn (cl ! n)}) = 0", "apply(rule sum_wt_ParT_sub_WtFT_notPickFT_0)"], ["proof (prove)\ngoal (5 subgoals):\n 1. properL cl\n 2. WtFT cl = 1\n 3. n < length cl\n 4. {..<brn (cl ! n)} \\<subseteq> {..<brn (cl ! n)}\n 5. n = pickFT cl \\<longrightarrow> 0 \\<notin> {..<brn (cl ! n)}", "using assms"], ["proof (prove)\nusing this:\n  properL cl\n  WtFT cl = 1\n  n < length cl\n  n \\<noteq> pickFT cl\n\ngoal (5 subgoals):\n 1. properL cl\n 2. WtFT cl = 1\n 3. n < length cl\n 4. {..<brn (cl ! n)} \\<subseteq> {..<brn (cl ! n)}\n 5. n = pickFT cl \\<longrightarrow> 0 \\<notin> {..<brn (cl ! n)}", "by auto"], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_wt_ParT_notWtFT_finished[simp]:\nassumes cl: \"properL cl\" and \"WtFT cl \\<noteq> 1\"\nand n: \"n < length cl\" and cln: \"finished (cl!n)\"\nshows \"sum (wt (ParT cl) s) {brnL cl n ..<+ brn (cl!n)} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = 0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = 0", "have 1: \"{brnL cl n ..<+ brn (cl!n)} = (+) (brnL cl n) ` {..< brn (cl!n)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {brnL cl n..<brnL cl n + brn (cl ! n)} =\n    (+) (brnL cl n) ` {..<brn (cl ! n)}", "by simp"], ["proof (state)\nthis:\n  {brnL cl n..<brnL cl n + brn (cl ! n)} =\n  (+) (brnL cl n) ` {..<brn (cl ! n)}\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = 0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = 0", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` {..<brn (cl ! n)}) = 0", "apply(rule sum_wt_ParT_sub_notWtFT_finished)"], ["proof (prove)\ngoal (5 subgoals):\n 1. properL cl\n 2. WtFT cl \\<noteq> 1\n 3. n < length cl\n 4. finished (cl ! n)\n 5. {..<brn (cl ! n)} \\<subseteq> {..<brn (cl ! n)}", "using assms"], ["proof (prove)\nusing this:\n  properL cl\n  WtFT cl \\<noteq> 1\n  n < length cl\n  finished (cl ! n)\n\ngoal (5 subgoals):\n 1. properL cl\n 2. WtFT cl \\<noteq> 1\n 3. n < length cl\n 4. finished (cl ! n)\n 5. {..<brn (cl ! n)} \\<subseteq> {..<brn (cl ! n)}", "by auto"], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_wt_ParT_notWtFT_notFinished[simp]:\nassumes cl: \"properL cl\" and nf: \"WtFT cl \\<noteq> 1\"\nand n: \"n < length cl\" and cln: \"\\<not> finished (cl!n)\"\nshows\n\"sum (wt (ParT cl) s) {brnL cl n ..<+ brn (cl!n)} =\n (1 / (length cl)) / (1 - WtFT cl) *\n sum (wt (cl ! n) s) {..< brn (cl ! n)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} =\n    1 / real (length cl) / (1 - WtFT cl) *\n    sum (wt (cl ! n) s) {..<brn (cl ! n)}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} =\n    1 / real (length cl) / (1 - WtFT cl) *\n    sum (wt (cl ! n) s) {..<brn (cl ! n)}", "have 1: \"{brnL cl n ..<+ brn (cl!n)} = (+) (brnL cl n) ` {..< brn (cl!n)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {brnL cl n..<brnL cl n + brn (cl ! n)} =\n    (+) (brnL cl n) ` {..<brn (cl ! n)}", "by simp"], ["proof (state)\nthis:\n  {brnL cl n..<brnL cl n + brn (cl ! n)} =\n  (+) (brnL cl n) ` {..<brn (cl ! n)}\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} =\n    1 / real (length cl) / (1 - WtFT cl) *\n    sum (wt (cl ! n) s) {..<brn (cl ! n)}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} =\n    1 / real (length cl) / (1 - WtFT cl) *\n    sum (wt (cl ! n) s) {..<brn (cl ! n)}", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) ((+) (brnL cl n) ` {..<brn (cl ! n)}) =\n    1 / real (length cl) / (1 - WtFT cl) *\n    sum (wt (cl ! n) s) {..<brn (cl ! n)}", "apply(rule sum_wt_ParT_sub_notWtFT_notFinished)"], ["proof (prove)\ngoal (5 subgoals):\n 1. properL cl\n 2. WtFT cl \\<noteq> 1\n 3. n < length cl\n 4. \\<not> finished (cl ! n)\n 5. {..<brn (cl ! n)} \\<subseteq> {..<brn (cl ! n)}", "using assms"], ["proof (prove)\nusing this:\n  properL cl\n  WtFT cl \\<noteq> 1\n  n < length cl\n  \\<not> finished (cl ! n)\n\ngoal (5 subgoals):\n 1. properL cl\n 2. WtFT cl \\<noteq> 1\n 3. n < length cl\n 4. \\<not> finished (cl ! n)\n 5. {..<brn (cl ! n)} \\<subseteq> {..<brn (cl ! n)}", "by auto"], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} =\n  1 / real (length cl) / (1 - WtFT cl) *\n  sum (wt (cl ! n) s) {..<brn (cl ! n)}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_wt[simp]:\nassumes \"proper c\"\nshows \"sum (wt c s) {..< brn c} = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt c s) {..<brn c} = 1", "using assms"], ["proof (prove)\nusing this:\n  proper c\n\ngoal (1 subgoal):\n 1. sum (wt c s) {..<brn c} = 1", "proof (induct c arbitrary: s rule: proper_induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>s. sum (wt Done s) {..<brn Done} = 1\n 2. \\<And>atm s. sum (wt (Atm atm) s) {..<brn (Atm atm)} = 1\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (c1 ;; c2) s) {..<brn (c1 ;; c2)} = 1\n 4. \\<And>tst c s.\n       (\\<And>s. sum (wt c s) {..<brn c} = 1) \\<Longrightarrow>\n       sum (wt (While tst c) s) {..<brn (While tst c)} = 1\n 5. \\<And>ch c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (Ch ch c1 c2) s) {..<brn (Ch ch c1 c2)} = 1\n 6. \\<And>cl s.\n       \\<lbrakk>properL cl;\n        \\<And>c s.\n           c \\<in> set cl \\<Longrightarrow>\n           sum (wt c s) {..<brn c} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (Par cl) s) {..<brn (Par cl)} = 1\n 7. \\<And>cl s.\n       \\<lbrakk>properL cl;\n        \\<And>c s.\n           c \\<in> set cl \\<Longrightarrow>\n           sum (wt c s) {..<brn c} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "case (Par cl)"], ["proof (state)\nthis:\n  properL cl\n  ?c \\<in> set cl \\<Longrightarrow> sum (wt ?c ?s) {..<brn ?c} = 1\n\ngoal (7 subgoals):\n 1. \\<And>s. sum (wt Done s) {..<brn Done} = 1\n 2. \\<And>atm s. sum (wt (Atm atm) s) {..<brn (Atm atm)} = 1\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (c1 ;; c2) s) {..<brn (c1 ;; c2)} = 1\n 4. \\<And>tst c s.\n       (\\<And>s. sum (wt c s) {..<brn c} = 1) \\<Longrightarrow>\n       sum (wt (While tst c) s) {..<brn (While tst c)} = 1\n 5. \\<And>ch c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (Ch ch c1 c2) s) {..<brn (Ch ch c1 c2)} = 1\n 6. \\<And>cl s.\n       \\<lbrakk>properL cl;\n        \\<And>c s.\n           c \\<in> set cl \\<Longrightarrow>\n           sum (wt c s) {..<brn c} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (Par cl) s) {..<brn (Par cl)} = 1\n 7. \\<And>cl s.\n       \\<lbrakk>properL cl;\n        \\<And>c s.\n           c \\<in> set cl \\<Longrightarrow>\n           sum (wt c s) {..<brn c} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "let ?w = \"\\<lambda> n. 1 / (length cl) * sum (wt (cl ! n) s) {..< brn (cl ! n)}\""], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>s. sum (wt Done s) {..<brn Done} = 1\n 2. \\<And>atm s. sum (wt (Atm atm) s) {..<brn (Atm atm)} = 1\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (c1 ;; c2) s) {..<brn (c1 ;; c2)} = 1\n 4. \\<And>tst c s.\n       (\\<And>s. sum (wt c s) {..<brn c} = 1) \\<Longrightarrow>\n       sum (wt (While tst c) s) {..<brn (While tst c)} = 1\n 5. \\<And>ch c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (Ch ch c1 c2) s) {..<brn (Ch ch c1 c2)} = 1\n 6. \\<And>cl s.\n       \\<lbrakk>properL cl;\n        \\<And>c s.\n           c \\<in> set cl \\<Longrightarrow>\n           sum (wt c s) {..<brn c} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (Par cl) s) {..<brn (Par cl)} = 1\n 7. \\<And>cl s.\n       \\<lbrakk>properL cl;\n        \\<And>c s.\n           c \\<in> set cl \\<Longrightarrow>\n           sum (wt c s) {..<brn c} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (Par cl) s) {..<brn (Par cl)} = 1", "proof (rule sum_UN_introL [of _ \"%n. {brnL cl n ..<+ brn (cl!n)}\" \"{..< length cl}\" _ ?w])"], ["proof (state)\ngoal (6 subgoals):\n 1. {..<brn (Par cl)} =\n    (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})\n 2. 1 =\n    (\\<Sum>n<length cl.\n        1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)})\n 3. finite {..<length cl}\n 4. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       finite {brnL cl n..<brnL cl n + brn (cl ! n)}\n 5. \\<And>m n.\n       {m, n} \\<subseteq> {..<length cl} \\<and>\n       m \\<noteq> n \\<Longrightarrow>\n       {brnL cl m..<brnL cl m + brn (cl ! m)} \\<inter>\n       {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       {}\n 6. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       sum (wt (Par cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)}", "have \"1 = sum (\\<lambda> n. 1 / (length cl)) {..< length cl}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 = (\\<Sum>n<length cl. 1 / real (length cl))", "using Par"], ["proof (prove)\nusing this:\n  properL cl\n  ?c \\<in> set cl \\<Longrightarrow> sum (wt ?c ?s) {..<brn ?c} = 1\n\ngoal (1 subgoal):\n 1. 1 = (\\<Sum>n<length cl. 1 / real (length cl))", "by simp"], ["proof (state)\nthis:\n  1 = (\\<Sum>n<length cl. 1 / real (length cl))\n\ngoal (6 subgoals):\n 1. {..<brn (Par cl)} =\n    (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})\n 2. 1 =\n    (\\<Sum>n<length cl.\n        1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)})\n 3. finite {..<length cl}\n 4. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       finite {brnL cl n..<brnL cl n + brn (cl ! n)}\n 5. \\<And>m n.\n       {m, n} \\<subseteq> {..<length cl} \\<and>\n       m \\<noteq> n \\<Longrightarrow>\n       {brnL cl m..<brnL cl m + brn (cl ! m)} \\<inter>\n       {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       {}\n 6. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       sum (wt (Par cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)}", "also"], ["proof (state)\nthis:\n  1 = (\\<Sum>n<length cl. 1 / real (length cl))\n\ngoal (6 subgoals):\n 1. {..<brn (Par cl)} =\n    (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})\n 2. 1 =\n    (\\<Sum>n<length cl.\n        1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)})\n 3. finite {..<length cl}\n 4. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       finite {brnL cl n..<brnL cl n + brn (cl ! n)}\n 5. \\<And>m n.\n       {m, n} \\<subseteq> {..<length cl} \\<and>\n       m \\<noteq> n \\<Longrightarrow>\n       {brnL cl m..<brnL cl m + brn (cl ! m)} \\<inter>\n       {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       {}\n 6. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       sum (wt (Par cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)}", "have \"... = sum ?w {..< length cl}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n<length cl. 1 / real (length cl)) =\n    (\\<Sum>n<length cl.\n        1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)})", "using Par"], ["proof (prove)\nusing this:\n  properL cl\n  ?c \\<in> set cl \\<Longrightarrow> sum (wt ?c ?s) {..<brn ?c} = 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>n<length cl. 1 / real (length cl)) =\n    (\\<Sum>n<length cl.\n        1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)})", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>n<length cl. 1 / real (length cl)) =\n  (\\<Sum>n<length cl.\n      1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)})\n\ngoal (6 subgoals):\n 1. {..<brn (Par cl)} =\n    (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})\n 2. 1 =\n    (\\<Sum>n<length cl.\n        1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)})\n 3. finite {..<length cl}\n 4. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       finite {brnL cl n..<brnL cl n + brn (cl ! n)}\n 5. \\<And>m n.\n       {m, n} \\<subseteq> {..<length cl} \\<and>\n       m \\<noteq> n \\<Longrightarrow>\n       {brnL cl m..<brnL cl m + brn (cl ! m)} \\<inter>\n       {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       {}\n 6. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       sum (wt (Par cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)}", "finally"], ["proof (chain)\npicking this:\n  1 =\n  (\\<Sum>n<length cl.\n      1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)})", "show \"1 = sum ?w {..< length cl}\""], ["proof (prove)\nusing this:\n  1 =\n  (\\<Sum>n<length cl.\n      1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)})\n\ngoal (1 subgoal):\n 1. 1 =\n    (\\<Sum>n<length cl.\n        1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)})", "."], ["proof (state)\nthis:\n  1 =\n  (\\<Sum>n<length cl.\n      1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)})\n\ngoal (5 subgoals):\n 1. {..<brn (Par cl)} =\n    (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})\n 2. finite {..<length cl}\n 3. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       finite {brnL cl n..<brnL cl n + brn (cl ! n)}\n 4. \\<And>m n.\n       {m, n} \\<subseteq> {..<length cl} \\<and>\n       m \\<noteq> n \\<Longrightarrow>\n       {brnL cl m..<brnL cl m + brn (cl ! m)} \\<inter>\n       {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       {}\n 5. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       sum (wt (Par cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)}", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. {..<brn (Par cl)} =\n    (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})\n 2. finite {..<length cl}\n 3. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       finite {brnL cl n..<brnL cl n + brn (cl ! n)}\n 4. \\<And>m n.\n       {m, n} \\<subseteq> {..<length cl} \\<and>\n       m \\<noteq> n \\<Longrightarrow>\n       {brnL cl m..<brnL cl m + brn (cl ! m)} \\<inter>\n       {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       {}\n 5. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       sum (wt (Par cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)}", "fix m n"], ["proof (state)\ngoal (5 subgoals):\n 1. {..<brn (Par cl)} =\n    (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})\n 2. finite {..<length cl}\n 3. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       finite {brnL cl n..<brnL cl n + brn (cl ! n)}\n 4. \\<And>m n.\n       {m, n} \\<subseteq> {..<length cl} \\<and>\n       m \\<noteq> n \\<Longrightarrow>\n       {brnL cl m..<brnL cl m + brn (cl ! m)} \\<inter>\n       {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       {}\n 5. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       sum (wt (Par cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)}", "assume \"{m, n} \\<subseteq> {..<length cl} \\<and> m \\<noteq> n\""], ["proof (state)\nthis:\n  {m, n} \\<subseteq> {..<length cl} \\<and> m \\<noteq> n\n\ngoal (5 subgoals):\n 1. {..<brn (Par cl)} =\n    (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})\n 2. finite {..<length cl}\n 3. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       finite {brnL cl n..<brnL cl n + brn (cl ! n)}\n 4. \\<And>m n.\n       {m, n} \\<subseteq> {..<length cl} \\<and>\n       m \\<noteq> n \\<Longrightarrow>\n       {brnL cl m..<brnL cl m + brn (cl ! m)} \\<inter>\n       {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       {}\n 5. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       sum (wt (Par cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)}", "thus\n    \"{brnL cl m ..<+ brn (cl!m)} \\<inter> {brnL cl n ..<+ brn (cl!n)} = {}\""], ["proof (prove)\nusing this:\n  {m, n} \\<subseteq> {..<length cl} \\<and> m \\<noteq> n\n\ngoal (1 subgoal):\n 1. {brnL cl m..<brnL cl m + brn (cl ! m)} \\<inter>\n    {brnL cl n..<brnL cl n + brn (cl ! n)} =\n    {}", "using brnL_Int"], ["proof (prove)\nusing this:\n  {m, n} \\<subseteq> {..<length cl} \\<and> m \\<noteq> n\n  \\<lbrakk>?n1.0 \\<noteq> ?n2.0; ?n1.0 < length ?cl;\n   ?n2.0 < length ?cl\\<rbrakk>\n  \\<Longrightarrow> {brnL ?cl\n                      ?n1.0..<brnL ?cl ?n1.0 + brn (?cl ! ?n1.0)} \\<inter>\n                    {brnL ?cl ?n2.0..<brnL ?cl ?n2.0 + brn (?cl ! ?n2.0)} =\n                    {}\n\ngoal (1 subgoal):\n 1. {brnL cl m..<brnL cl m + brn (cl ! m)} \\<inter>\n    {brnL cl n..<brnL cl n + brn (cl ! n)} =\n    {}", "by auto"], ["proof (state)\nthis:\n  {brnL cl m..<brnL cl m + brn (cl ! m)} \\<inter>\n  {brnL cl n..<brnL cl n + brn (cl ! n)} =\n  {}\n\ngoal (4 subgoals):\n 1. {..<brn (Par cl)} =\n    (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})\n 2. finite {..<length cl}\n 3. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       finite {brnL cl n..<brnL cl n + brn (cl ! n)}\n 4. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       sum (wt (Par cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)}", "qed(insert Par brnL_UN sum_wt_Par, auto)"], ["proof (state)\nthis:\n  sum (wt (Par cl) s) {..<brn (Par cl)} = 1\n\ngoal (6 subgoals):\n 1. \\<And>s. sum (wt Done s) {..<brn Done} = 1\n 2. \\<And>atm s. sum (wt (Atm atm) s) {..<brn (Atm atm)} = 1\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (c1 ;; c2) s) {..<brn (c1 ;; c2)} = 1\n 4. \\<And>tst c s.\n       (\\<And>s. sum (wt c s) {..<brn c} = 1) \\<Longrightarrow>\n       sum (wt (While tst c) s) {..<brn (While tst c)} = 1\n 5. \\<And>ch c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (Ch ch c1 c2) s) {..<brn (Ch ch c1 c2)} = 1\n 6. \\<And>cl s.\n       \\<lbrakk>properL cl;\n        \\<And>c s.\n           c \\<in> set cl \\<Longrightarrow>\n           sum (wt c s) {..<brn c} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>s. sum (wt Done s) {..<brn Done} = 1\n 2. \\<And>atm s. sum (wt (Atm atm) s) {..<brn (Atm atm)} = 1\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (c1 ;; c2) s) {..<brn (c1 ;; c2)} = 1\n 4. \\<And>tst c s.\n       (\\<And>s. sum (wt c s) {..<brn c} = 1) \\<Longrightarrow>\n       sum (wt (While tst c) s) {..<brn (While tst c)} = 1\n 5. \\<And>ch c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (Ch ch c1 c2) s) {..<brn (Ch ch c1 c2)} = 1\n 6. \\<And>cl s.\n       \\<lbrakk>properL cl;\n        \\<And>c s.\n           c \\<in> set cl \\<Longrightarrow>\n           sum (wt c s) {..<brn c} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "case (ParT cl)"], ["proof (state)\nthis:\n  properL cl\n  ?c \\<in> set cl \\<Longrightarrow> sum (wt ?c ?s) {..<brn ?c} = 1\n\ngoal (6 subgoals):\n 1. \\<And>s. sum (wt Done s) {..<brn Done} = 1\n 2. \\<And>atm s. sum (wt (Atm atm) s) {..<brn (Atm atm)} = 1\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (c1 ;; c2) s) {..<brn (c1 ;; c2)} = 1\n 4. \\<And>tst c s.\n       (\\<And>s. sum (wt c s) {..<brn c} = 1) \\<Longrightarrow>\n       sum (wt (While tst c) s) {..<brn (While tst c)} = 1\n 5. \\<And>ch c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (Ch ch c1 c2) s) {..<brn (Ch ch c1 c2)} = 1\n 6. \\<And>cl s.\n       \\<lbrakk>properL cl;\n        \\<And>c s.\n           c \\<in> set cl \\<Longrightarrow>\n           sum (wt c s) {..<brn c} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "let ?v = \"1/(length cl)\""], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>s. sum (wt Done s) {..<brn Done} = 1\n 2. \\<And>atm s. sum (wt (Atm atm) s) {..<brn (Atm atm)} = 1\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (c1 ;; c2) s) {..<brn (c1 ;; c2)} = 1\n 4. \\<And>tst c s.\n       (\\<And>s. sum (wt c s) {..<brn c} = 1) \\<Longrightarrow>\n       sum (wt (While tst c) s) {..<brn (While tst c)} = 1\n 5. \\<And>ch c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (Ch ch c1 c2) s) {..<brn (Ch ch c1 c2)} = 1\n 6. \\<And>cl s.\n       \\<lbrakk>properL cl;\n        \\<And>c s.\n           c \\<in> set cl \\<Longrightarrow>\n           sum (wt c s) {..<brn c} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "let ?wtF = \"WtFT cl\""], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>s. sum (wt Done s) {..<brn Done} = 1\n 2. \\<And>atm s. sum (wt (Atm atm) s) {..<brn (Atm atm)} = 1\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (c1 ;; c2) s) {..<brn (c1 ;; c2)} = 1\n 4. \\<And>tst c s.\n       (\\<And>s. sum (wt c s) {..<brn c} = 1) \\<Longrightarrow>\n       sum (wt (While tst c) s) {..<brn (While tst c)} = 1\n 5. \\<And>ch c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (Ch ch c1 c2) s) {..<brn (Ch ch c1 c2)} = 1\n 6. \\<And>cl s.\n       \\<lbrakk>properL cl;\n        \\<And>c s.\n           c \\<in> set cl \\<Longrightarrow>\n           sum (wt c s) {..<brn c} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "let ?wtNF = \"WtNFT cl\""], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>s. sum (wt Done s) {..<brn Done} = 1\n 2. \\<And>atm s. sum (wt (Atm atm) s) {..<brn (Atm atm)} = 1\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (c1 ;; c2) s) {..<brn (c1 ;; c2)} = 1\n 4. \\<And>tst c s.\n       (\\<And>s. sum (wt c s) {..<brn c} = 1) \\<Longrightarrow>\n       sum (wt (While tst c) s) {..<brn (While tst c)} = 1\n 5. \\<And>ch c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (Ch ch c1 c2) s) {..<brn (Ch ch c1 c2)} = 1\n 6. \\<And>cl s.\n       \\<lbrakk>properL cl;\n        \\<And>c s.\n           c \\<in> set cl \\<Longrightarrow>\n           sum (wt c s) {..<brn c} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "let ?w = \"\\<lambda>n.\n  if ?wtF = 1\n    then\n      (if n = pickFT cl then 1 else 0)\n    else\n      (if finished (cl!n)\n         then 0\n         else ?v / (1 - ?wtF) *\n              sum (wt (cl ! n) s) {..< brn (cl ! n)})\""], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>s. sum (wt Done s) {..<brn Done} = 1\n 2. \\<And>atm s. sum (wt (Atm atm) s) {..<brn (Atm atm)} = 1\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (c1 ;; c2) s) {..<brn (c1 ;; c2)} = 1\n 4. \\<And>tst c s.\n       (\\<And>s. sum (wt c s) {..<brn c} = 1) \\<Longrightarrow>\n       sum (wt (While tst c) s) {..<brn (While tst c)} = 1\n 5. \\<And>ch c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (Ch ch c1 c2) s) {..<brn (Ch ch c1 c2)} = 1\n 6. \\<And>cl s.\n       \\<lbrakk>properL cl;\n        \\<And>c s.\n           c \\<in> set cl \\<Longrightarrow>\n           sum (wt c s) {..<brn c} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "define w where \"w = ?w\""], ["proof (state)\nthis:\n  w =\n  (\\<lambda>n.\n      if WtFT cl = 1 then if n = pickFT cl then 1 else 0\n      else if finished (cl ! n) then 0\n           else 1 / real (length cl) / (1 - WtFT cl) *\n                sum (wt (cl ! n) s) {..<brn (cl ! n)})\n\ngoal (6 subgoals):\n 1. \\<And>s. sum (wt Done s) {..<brn Done} = 1\n 2. \\<And>atm s. sum (wt (Atm atm) s) {..<brn (Atm atm)} = 1\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (c1 ;; c2) s) {..<brn (c1 ;; c2)} = 1\n 4. \\<And>tst c s.\n       (\\<And>s. sum (wt c s) {..<brn c} = 1) \\<Longrightarrow>\n       sum (wt (While tst c) s) {..<brn (While tst c)} = 1\n 5. \\<And>ch c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (Ch ch c1 c2) s) {..<brn (Ch ch c1 c2)} = 1\n 6. \\<And>cl s.\n       \\<lbrakk>properL cl;\n        \\<And>c s.\n           c \\<in> set cl \\<Longrightarrow>\n           sum (wt c s) {..<brn c} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "have w: \"\\<And> n. ?wtF \\<noteq> 1 \\<and> n < length cl \\<and> \\<not> finished (cl!n)\n  \\<Longrightarrow> w n = ?v / (1 - ?wtF)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       WtFT cl \\<noteq> 1 \\<and>\n       n < length cl \\<and> \\<not> finished (cl ! n) \\<Longrightarrow>\n       w n = 1 / real (length cl) / (1 - WtFT cl)", "unfolding w_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       WtFT cl \\<noteq> 1 \\<and>\n       n < length cl \\<and> \\<not> finished (cl ! n) \\<Longrightarrow>\n       (if WtFT cl = 1 then if n = pickFT cl then 1 else 0\n        else if finished (cl ! n) then 0\n             else 1 / real (length cl) / (1 - WtFT cl) *\n                  sum (wt (cl ! n) s) {..<brn (cl ! n)}) =\n       1 / real (length cl) / (1 - WtFT cl)", "using ParT"], ["proof (prove)\nusing this:\n  properL cl\n  ?c \\<in> set cl \\<Longrightarrow> sum (wt ?c ?s) {..<brn ?c} = 1\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       WtFT cl \\<noteq> 1 \\<and>\n       n < length cl \\<and> \\<not> finished (cl ! n) \\<Longrightarrow>\n       (if WtFT cl = 1 then if n = pickFT cl then 1 else 0\n        else if finished (cl ! n) then 0\n             else 1 / real (length cl) / (1 - WtFT cl) *\n                  sum (wt (cl ! n) s) {..<brn (cl ! n)}) =\n       1 / real (length cl) / (1 - WtFT cl)", "by simp"], ["proof (state)\nthis:\n  WtFT cl \\<noteq> 1 \\<and>\n  ?n < length cl \\<and> \\<not> finished (cl ! ?n) \\<Longrightarrow>\n  w ?n = 1 / real (length cl) / (1 - WtFT cl)\n\ngoal (6 subgoals):\n 1. \\<And>s. sum (wt Done s) {..<brn Done} = 1\n 2. \\<And>atm s. sum (wt (Atm atm) s) {..<brn (Atm atm)} = 1\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (c1 ;; c2) s) {..<brn (c1 ;; c2)} = 1\n 4. \\<And>tst c s.\n       (\\<And>s. sum (wt c s) {..<brn c} = 1) \\<Longrightarrow>\n       sum (wt (While tst c) s) {..<brn (While tst c)} = 1\n 5. \\<And>ch c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (Ch ch c1 c2) s) {..<brn (Ch ch c1 c2)} = 1\n 6. \\<And>cl s.\n       \\<lbrakk>properL cl;\n        \\<And>c s.\n           c \\<in> set cl \\<Longrightarrow>\n           sum (wt c s) {..<brn c} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "proof(cases \"WtFT cl = 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. WtFT cl = 1 \\<Longrightarrow>\n    sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1\n 2. WtFT cl \\<noteq> 1 \\<Longrightarrow>\n    sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "case True"], ["proof (state)\nthis:\n  WtFT cl = 1\n\ngoal (2 subgoals):\n 1. WtFT cl = 1 \\<Longrightarrow>\n    sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1\n 2. WtFT cl \\<noteq> 1 \\<Longrightarrow>\n    sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "with ParT"], ["proof (chain)\npicking this:\n  properL cl\n  ?c \\<in> set cl \\<Longrightarrow> sum (wt ?c ?s) {..<brn ?c} = 1\n  WtFT cl = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  properL cl\n  ?c \\<in> set cl \\<Longrightarrow> sum (wt ?c ?s) {..<brn ?c} = 1\n  WtFT cl = 1\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "by simp"], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow>\n    sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow>\n    sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "case False"], ["proof (state)\nthis:\n  WtFT cl \\<noteq> 1\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow>\n    sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "note nf = False"], ["proof (state)\nthis:\n  WtFT cl \\<noteq> 1\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow>\n    sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1", "proof (rule sum_UN_introL [of _ \"%n. {brnL cl n ..<+ brn (cl!n)}\" \"{..< length cl}\" _ w])"], ["proof (state)\ngoal (6 subgoals):\n 1. {..<brn (ParT cl)} =\n    (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})\n 2. 1 = sum w {..<length cl}\n 3. finite {..<length cl}\n 4. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       finite {brnL cl n..<brnL cl n + brn (cl ! n)}\n 5. \\<And>m n.\n       {m, n} \\<subseteq> {..<length cl} \\<and>\n       m \\<noteq> n \\<Longrightarrow>\n       {brnL cl m..<brnL cl m + brn (cl ! m)} \\<inter>\n       {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       {}\n 6. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = w n", "show \"1 = sum w {..< length cl}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 = sum w {..<length cl}", "proof(cases \"?wtF = 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. WtFT cl = 1 \\<Longrightarrow> 1 = sum w {..<length cl}\n 2. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "case True"], ["proof (state)\nthis:\n  WtFT cl = 1\n\ngoal (2 subgoals):\n 1. WtFT cl = 1 \\<Longrightarrow> 1 = sum w {..<length cl}\n 2. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "note sch = True"], ["proof (state)\nthis:\n  WtFT cl = 1\n\ngoal (2 subgoals):\n 1. WtFT cl = 1 \\<Longrightarrow> 1 = sum w {..<length cl}\n 2. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "let ?n = \"pickFT cl\""], ["proof (state)\ngoal (2 subgoals):\n 1. WtFT cl = 1 \\<Longrightarrow> 1 = sum w {..<length cl}\n 2. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "let ?L = \"{?n}\""], ["proof (state)\ngoal (2 subgoals):\n 1. WtFT cl = 1 \\<Longrightarrow> 1 = sum w {..<length cl}\n 2. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "let ?Lnot = \"{..<length cl} - {?n}\""], ["proof (state)\ngoal (2 subgoals):\n 1. WtFT cl = 1 \\<Longrightarrow> 1 = sum w {..<length cl}\n 2. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "have \"?n < length cl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pickFT cl < length cl", "using ParT True"], ["proof (prove)\nusing this:\n  properL cl\n  ?c \\<in> set cl \\<Longrightarrow> sum (wt ?c ?s) {..<brn ?c} = 1\n  WtFT cl = 1\n\ngoal (1 subgoal):\n 1. pickFT cl < length cl", "by auto"], ["proof (state)\nthis:\n  pickFT cl < length cl\n\ngoal (2 subgoals):\n 1. WtFT cl = 1 \\<Longrightarrow> 1 = sum w {..<length cl}\n 2. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "hence \"{..< length cl} = ?L Un ?Lnot\""], ["proof (prove)\nusing this:\n  pickFT cl < length cl\n\ngoal (1 subgoal):\n 1. {..<length cl} = {pickFT cl} \\<union> ({..<length cl} - {pickFT cl})", "by auto"], ["proof (state)\nthis:\n  {..<length cl} = {pickFT cl} \\<union> ({..<length cl} - {pickFT cl})\n\ngoal (2 subgoals):\n 1. WtFT cl = 1 \\<Longrightarrow> 1 = sum w {..<length cl}\n 2. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "hence \"sum w {..< length cl} = sum w (?L Un ?Lnot)\""], ["proof (prove)\nusing this:\n  {..<length cl} = {pickFT cl} \\<union> ({..<length cl} - {pickFT cl})\n\ngoal (1 subgoal):\n 1. sum w {..<length cl} =\n    sum w ({pickFT cl} \\<union> ({..<length cl} - {pickFT cl}))", "by simp"], ["proof (state)\nthis:\n  sum w {..<length cl} =\n  sum w ({pickFT cl} \\<union> ({..<length cl} - {pickFT cl}))\n\ngoal (2 subgoals):\n 1. WtFT cl = 1 \\<Longrightarrow> 1 = sum w {..<length cl}\n 2. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "also"], ["proof (state)\nthis:\n  sum w {..<length cl} =\n  sum w ({pickFT cl} \\<union> ({..<length cl} - {pickFT cl}))\n\ngoal (2 subgoals):\n 1. WtFT cl = 1 \\<Longrightarrow> 1 = sum w {..<length cl}\n 2. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "have \"... = sum w ?L + sum w ?Lnot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum w ({pickFT cl} \\<union> ({..<length cl} - {pickFT cl})) =\n    sum w {pickFT cl} + sum w ({..<length cl} - {pickFT cl})", "apply(rule sum.union_disjoint)"], ["proof (prove)\ngoal (3 subgoals):\n 1. finite {pickFT cl}\n 2. finite ({..<length cl} - {pickFT cl})\n 3. {pickFT cl} \\<inter> ({..<length cl} - {pickFT cl}) = {}", "by auto"], ["proof (state)\nthis:\n  sum w ({pickFT cl} \\<union> ({..<length cl} - {pickFT cl})) =\n  sum w {pickFT cl} + sum w ({..<length cl} - {pickFT cl})\n\ngoal (2 subgoals):\n 1. WtFT cl = 1 \\<Longrightarrow> 1 = sum w {..<length cl}\n 2. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "also"], ["proof (state)\nthis:\n  sum w ({pickFT cl} \\<union> ({..<length cl} - {pickFT cl})) =\n  sum w {pickFT cl} + sum w ({..<length cl} - {pickFT cl})\n\ngoal (2 subgoals):\n 1. WtFT cl = 1 \\<Longrightarrow> 1 = sum w {..<length cl}\n 2. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum w {pickFT cl} + sum w ({..<length cl} - {pickFT cl}) = 1", "unfolding w_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>{pickFT cl}.\n       if WtFT cl = 1 then if n = pickFT cl then 1 else 0\n       else if finished (cl ! n) then 0\n            else 1 / real (length cl) / (1 - WtFT cl) *\n                 sum (wt (cl ! n) s) {..<brn (cl ! n)}) +\n    (\\<Sum>n\\<in>{..<length cl} - {pickFT cl}.\n       if WtFT cl = 1 then if n = pickFT cl then 1 else 0\n       else if finished (cl ! n) then 0\n            else 1 / real (length cl) / (1 - WtFT cl) *\n                 sum (wt (cl ! n) s) {..<brn (cl ! n)}) =\n    1", "using sch"], ["proof (prove)\nusing this:\n  WtFT cl = 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>{pickFT cl}.\n       if WtFT cl = 1 then if n = pickFT cl then 1 else 0\n       else if finished (cl ! n) then 0\n            else 1 / real (length cl) / (1 - WtFT cl) *\n                 sum (wt (cl ! n) s) {..<brn (cl ! n)}) +\n    (\\<Sum>n\\<in>{..<length cl} - {pickFT cl}.\n       if WtFT cl = 1 then if n = pickFT cl then 1 else 0\n       else if finished (cl ! n) then 0\n            else 1 / real (length cl) / (1 - WtFT cl) *\n                 sum (wt (cl ! n) s) {..<brn (cl ! n)}) =\n    1", "by simp"], ["proof (state)\nthis:\n  sum w {pickFT cl} + sum w ({..<length cl} - {pickFT cl}) = 1\n\ngoal (2 subgoals):\n 1. WtFT cl = 1 \\<Longrightarrow> 1 = sum w {..<length cl}\n 2. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "finally"], ["proof (chain)\npicking this:\n  sum w {..<length cl} = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  sum w {..<length cl} = 1\n\ngoal (1 subgoal):\n 1. 1 = sum w {..<length cl}", "by simp"], ["proof (state)\nthis:\n  1 = sum w {..<length cl}\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "case False"], ["proof (state)\nthis:\n  WtFT cl \\<noteq> 1\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "note sch = False"], ["proof (state)\nthis:\n  WtFT cl \\<noteq> 1\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "let ?L = \"theFT cl\""], ["proof (state)\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "let ?Lnot = \"theNFT cl\""], ["proof (state)\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "have 1: \"{..< length cl} = ?L Un ?Lnot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..<length cl} = theFT cl \\<union> theNFT cl", "by auto"], ["proof (state)\nthis:\n  {..<length cl} = theFT cl \\<union> theNFT cl\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "have \"sum w {..< length cl} = sum w ?L + sum w ?Lnot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum w {..<length cl} = sum w (theFT cl) + sum w (theNFT cl)", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum w (theFT cl \\<union> theNFT cl) =\n    sum w (theFT cl) + sum w (theNFT cl)", "apply(rule sum.union_disjoint)"], ["proof (prove)\ngoal (3 subgoals):\n 1. finite (theFT cl)\n 2. finite (theNFT cl)\n 3. theFT cl \\<inter> theNFT cl = {}", "by auto"], ["proof (state)\nthis:\n  sum w {..<length cl} = sum w (theFT cl) + sum w (theNFT cl)\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "also"], ["proof (state)\nthis:\n  sum w {..<length cl} = sum w (theFT cl) + sum w (theNFT cl)\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "have \"... = sum w ?Lnot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum w (theFT cl) + sum w (theNFT cl) = sum w (theNFT cl)", "unfolding w_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>theFT cl.\n       if WtFT cl = 1 then if n = pickFT cl then 1 else 0\n       else if finished (cl ! n) then 0\n            else 1 / real (length cl) / (1 - WtFT cl) *\n                 sum (wt (cl ! n) s) {..<brn (cl ! n)}) +\n    (\\<Sum>n\\<in>theNFT cl.\n       if WtFT cl = 1 then if n = pickFT cl then 1 else 0\n       else if finished (cl ! n) then 0\n            else 1 / real (length cl) / (1 - WtFT cl) *\n                 sum (wt (cl ! n) s) {..<brn (cl ! n)}) =\n    (\\<Sum>n\\<in>theNFT cl.\n       if WtFT cl = 1 then if n = pickFT cl then 1 else 0\n       else if finished (cl ! n) then 0\n            else 1 / real (length cl) / (1 - WtFT cl) *\n                 sum (wt (cl ! n) s) {..<brn (cl ! n)})", "using sch"], ["proof (prove)\nusing this:\n  WtFT cl \\<noteq> 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>theFT cl.\n       if WtFT cl = 1 then if n = pickFT cl then 1 else 0\n       else if finished (cl ! n) then 0\n            else 1 / real (length cl) / (1 - WtFT cl) *\n                 sum (wt (cl ! n) s) {..<brn (cl ! n)}) +\n    (\\<Sum>n\\<in>theNFT cl.\n       if WtFT cl = 1 then if n = pickFT cl then 1 else 0\n       else if finished (cl ! n) then 0\n            else 1 / real (length cl) / (1 - WtFT cl) *\n                 sum (wt (cl ! n) s) {..<brn (cl ! n)}) =\n    (\\<Sum>n\\<in>theNFT cl.\n       if WtFT cl = 1 then if n = pickFT cl then 1 else 0\n       else if finished (cl ! n) then 0\n            else 1 / real (length cl) / (1 - WtFT cl) *\n                 sum (wt (cl ! n) s) {..<brn (cl ! n)})", "by simp"], ["proof (state)\nthis:\n  sum w (theFT cl) + sum w (theNFT cl) = sum w (theNFT cl)\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "also"], ["proof (state)\nthis:\n  sum w (theFT cl) + sum w (theNFT cl) = sum w (theNFT cl)\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "have \"... = sum (%n. ?v / (1 - ?wtF)) ?Lnot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum w (theNFT cl) =\n    (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl) / (1 - WtFT cl))", "apply(rule sum.cong)"], ["proof (prove)\ngoal (2 subgoals):\n 1. theNFT cl = theNFT cl\n 2. \\<And>x.\n       x \\<in> theNFT cl \\<Longrightarrow>\n       w x = 1 / real (length cl) / (1 - WtFT cl)", "using w sch"], ["proof (prove)\nusing this:\n  WtFT cl \\<noteq> 1 \\<and>\n  ?n < length cl \\<and> \\<not> finished (cl ! ?n) \\<Longrightarrow>\n  w ?n = 1 / real (length cl) / (1 - WtFT cl)\n  WtFT cl \\<noteq> 1\n\ngoal (2 subgoals):\n 1. theNFT cl = theNFT cl\n 2. \\<And>x.\n       x \\<in> theNFT cl \\<Longrightarrow>\n       w x = 1 / real (length cl) / (1 - WtFT cl)", "by auto"], ["proof (state)\nthis:\n  sum w (theNFT cl) =\n  (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl) / (1 - WtFT cl))\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "also"], ["proof (state)\nthis:\n  sum w (theNFT cl) =\n  (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl) / (1 - WtFT cl))\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "have \"... = sum (%n. ?v) ?Lnot / (1 - ?wtF)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl) / (1 - WtFT cl)) =\n    (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl)) / (1 - WtFT cl)", "unfolding sum_divide_distrib"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl) / (1 - WtFT cl)) =\n    (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl) / (1 - WtFT cl))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl) / (1 - WtFT cl)) =\n  (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl)) / (1 - WtFT cl)\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "also"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl) / (1 - WtFT cl)) =\n  (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl)) / (1 - WtFT cl)\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "have \"... = ?wtNF / (1 - ?wtF)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl)) / (1 - WtFT cl) =\n    WtNFT cl / (1 - WtFT cl)", "unfolding WtNFT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl)) / (1 - WtFT cl) =\n    (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl)) / (1 - WtFT cl)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl)) / (1 - WtFT cl) =\n  WtNFT cl / (1 - WtFT cl)\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "also"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>theNFT cl. 1 / real (length cl)) / (1 - WtFT cl) =\n  WtNFT cl / (1 - WtFT cl)\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. WtNFT cl / (1 - WtFT cl) = 1", "using nf ParT"], ["proof (prove)\nusing this:\n  WtFT cl \\<noteq> 1\n  properL cl\n  ?c \\<in> set cl \\<Longrightarrow> sum (wt ?c ?s) {..<brn ?c} = 1\n\ngoal (1 subgoal):\n 1. WtNFT cl / (1 - WtFT cl) = 1", "by simp"], ["proof (state)\nthis:\n  WtNFT cl / (1 - WtFT cl) = 1\n\ngoal (1 subgoal):\n 1. WtFT cl \\<noteq> 1 \\<Longrightarrow> 1 = sum w {..<length cl}", "finally"], ["proof (chain)\npicking this:\n  sum w {..<length cl} = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  sum w {..<length cl} = 1\n\ngoal (1 subgoal):\n 1. 1 = sum w {..<length cl}", "by simp"], ["proof (state)\nthis:\n  1 = sum w {..<length cl}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 = sum w {..<length cl}\n\ngoal (5 subgoals):\n 1. {..<brn (ParT cl)} =\n    (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})\n 2. finite {..<length cl}\n 3. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       finite {brnL cl n..<brnL cl n + brn (cl ! n)}\n 4. \\<And>m n.\n       {m, n} \\<subseteq> {..<length cl} \\<and>\n       m \\<noteq> n \\<Longrightarrow>\n       {brnL cl m..<brnL cl m + brn (cl ! m)} \\<inter>\n       {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       {}\n 5. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = w n", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. {..<brn (ParT cl)} =\n    (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})\n 2. finite {..<length cl}\n 3. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       finite {brnL cl n..<brnL cl n + brn (cl ! n)}\n 4. \\<And>m n.\n       {m, n} \\<subseteq> {..<length cl} \\<and>\n       m \\<noteq> n \\<Longrightarrow>\n       {brnL cl m..<brnL cl m + brn (cl ! m)} \\<inter>\n       {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       {}\n 5. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = w n", "fix n"], ["proof (state)\ngoal (5 subgoals):\n 1. {..<brn (ParT cl)} =\n    (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})\n 2. finite {..<length cl}\n 3. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       finite {brnL cl n..<brnL cl n + brn (cl ! n)}\n 4. \\<And>m n.\n       {m, n} \\<subseteq> {..<length cl} \\<and>\n       m \\<noteq> n \\<Longrightarrow>\n       {brnL cl m..<brnL cl m + brn (cl ! m)} \\<inter>\n       {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       {}\n 5. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = w n", "assume n: \"n \\<in> {..<length cl}\""], ["proof (state)\nthis:\n  n \\<in> {..<length cl}\n\ngoal (5 subgoals):\n 1. {..<brn (ParT cl)} =\n    (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})\n 2. finite {..<length cl}\n 3. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       finite {brnL cl n..<brnL cl n + brn (cl ! n)}\n 4. \\<And>m n.\n       {m, n} \\<subseteq> {..<length cl} \\<and>\n       m \\<noteq> n \\<Longrightarrow>\n       {brnL cl m..<brnL cl m + brn (cl ! m)} \\<inter>\n       {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       {}\n 5. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = w n", "show \"sum (wt (ParT cl) s) {brnL cl n..<+brn (cl ! n)} = w n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = w n", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = w n", "have \"(\\<Sum>i<brn (cl ! n). ?v * wt (cl ! n) s i / (1 - ?wtF)) =\n        ?v * (\\<Sum>i<brn (cl ! n). wt (cl ! n) s i) / (1 - ?wtF)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<brn (cl ! n).\n        1 / real (length cl) * wt (cl ! n) s i / (1 - WtFT cl)) =\n    1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)} /\n    (1 - WtFT cl)", "unfolding sum_distrib_left sum_divide_distrib"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<brn (cl ! n).\n        1 / real (length cl) * wt (cl ! n) s i / (1 - WtFT cl)) =\n    (\\<Sum>na<brn (cl ! n).\n        1 / real (length cl) * wt (cl ! n) s na / (1 - WtFT cl))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i<brn (cl ! n).\n      1 / real (length cl) * wt (cl ! n) s i / (1 - WtFT cl)) =\n  1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)} /\n  (1 - WtFT cl)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = w n", "also"], ["proof (state)\nthis:\n  (\\<Sum>i<brn (cl ! n).\n      1 / real (length cl) * wt (cl ! n) s i / (1 - WtFT cl)) =\n  1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)} /\n  (1 - WtFT cl)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = w n", "have \"... = ?v / (1 - ?wtF)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)} /\n    (1 - WtFT cl) =\n    1 / real (length cl) / (1 - WtFT cl)", "using ParT n"], ["proof (prove)\nusing this:\n  properL cl\n  ?c \\<in> set cl \\<Longrightarrow> sum (wt ?c ?s) {..<brn ?c} = 1\n  n \\<in> {..<length cl}\n\ngoal (1 subgoal):\n 1. 1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)} /\n    (1 - WtFT cl) =\n    1 / real (length cl) / (1 - WtFT cl)", "by simp"], ["proof (state)\nthis:\n  1 / real (length cl) * sum (wt (cl ! n) s) {..<brn (cl ! n)} /\n  (1 - WtFT cl) =\n  1 / real (length cl) / (1 - WtFT cl)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = w n", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>i<brn (cl ! n).\n      1 / real (length cl) * wt (cl ! n) s i / (1 - WtFT cl)) =\n  1 / real (length cl) / (1 - WtFT cl)", "have \"(\\<Sum>i<brn (cl ! n). ?v * wt (cl ! n) s i / (1 - ?wtF)) =\n        ?v / (1 - ?wtF)\""], ["proof (prove)\nusing this:\n  (\\<Sum>i<brn (cl ! n).\n      1 / real (length cl) * wt (cl ! n) s i / (1 - WtFT cl)) =\n  1 / real (length cl) / (1 - WtFT cl)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<brn (cl ! n).\n        1 / real (length cl) * wt (cl ! n) s i / (1 - WtFT cl)) =\n    1 / real (length cl) / (1 - WtFT cl)", "."], ["proof (state)\nthis:\n  (\\<Sum>i<brn (cl ! n).\n      1 / real (length cl) * wt (cl ! n) s i / (1 - WtFT cl)) =\n  1 / real (length cl) / (1 - WtFT cl)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = w n", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>i<brn (cl ! n).\n      1 / real (length cl) * wt (cl ! n) s i / (1 - WtFT cl)) =\n  1 / real (length cl) / (1 - WtFT cl)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = w n", "unfolding w_def"], ["proof (prove)\nusing this:\n  (\\<Sum>i<brn (cl ! n).\n      1 / real (length cl) * wt (cl ! n) s i / (1 - WtFT cl)) =\n  1 / real (length cl) / (1 - WtFT cl)\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} =\n    (if WtFT cl = 1 then if n = pickFT cl then 1 else 0\n     else if finished (cl ! n) then 0\n          else 1 / real (length cl) / (1 - WtFT cl) *\n               sum (wt (cl ! n) s) {..<brn (cl ! n)})", "using n nf ParT"], ["proof (prove)\nusing this:\n  (\\<Sum>i<brn (cl ! n).\n      1 / real (length cl) * wt (cl ! n) s i / (1 - WtFT cl)) =\n  1 / real (length cl) / (1 - WtFT cl)\n  n \\<in> {..<length cl}\n  WtFT cl \\<noteq> 1\n  properL cl\n  ?c \\<in> set cl \\<Longrightarrow> sum (wt ?c ?s) {..<brn ?c} = 1\n\ngoal (1 subgoal):\n 1. sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} =\n    (if WtFT cl = 1 then if n = pickFT cl then 1 else 0\n     else if finished (cl ! n) then 0\n          else 1 / real (length cl) / (1 - WtFT cl) *\n               sum (wt (cl ! n) s) {..<brn (cl ! n)})", "by simp"], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = w n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) {brnL cl n..<brnL cl n + brn (cl ! n)} = w n\n\ngoal (4 subgoals):\n 1. {..<brn (ParT cl)} =\n    (\\<Union>n<length cl. {brnL cl n..<brnL cl n + brn (cl ! n)})\n 2. finite {..<length cl}\n 3. \\<And>n.\n       n \\<in> {..<length cl} \\<Longrightarrow>\n       finite {brnL cl n..<brnL cl n + brn (cl ! n)}\n 4. \\<And>m n.\n       {m, n} \\<subseteq> {..<length cl} \\<and>\n       m \\<noteq> n \\<Longrightarrow>\n       {brnL cl m..<brnL cl m + brn (cl ! m)} \\<inter>\n       {brnL cl n..<brnL cl n + brn (cl ! n)} =\n       {}", "qed(insert ParT brnL_UN brnL_Int sum_wt_Par, auto)"], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sum (wt (ParT cl) s) {..<brn (ParT cl)} = 1\n\ngoal (5 subgoals):\n 1. \\<And>s. sum (wt Done s) {..<brn Done} = 1\n 2. \\<And>atm s. sum (wt (Atm atm) s) {..<brn (Atm atm)} = 1\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (c1 ;; c2) s) {..<brn (c1 ;; c2)} = 1\n 4. \\<And>tst c s.\n       (\\<And>s. sum (wt c s) {..<brn c} = 1) \\<Longrightarrow>\n       sum (wt (While tst c) s) {..<brn (While tst c)} = 1\n 5. \\<And>ch c1 c2 s.\n       \\<lbrakk>\\<And>s. sum (wt c1 s) {..<brn c1} = 1;\n        \\<And>s. sum (wt c2 s) {..<brn c2} = 1\\<rbrakk>\n       \\<Longrightarrow> sum (wt (Ch ch c1 c2) s) {..<brn (Ch ch c1 c2)} = 1", "qed auto"], ["", "lemma proper_cont[simp]:\nassumes \"proper c\" and \"i < brn c\"\nshows \"proper (cont c s i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper (local.cont c s i)", "using assms"], ["proof (prove)\nusing this:\n  proper c\n  i < brn c\n\ngoal (1 subgoal):\n 1. proper (local.cont c s i)", "proof(induct c arbitrary: i s rule: cmd.induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>i s.\n       \\<lbrakk>proper Done; i < brn Done\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont Done s i)\n 2. \\<And>x i s.\n       \\<lbrakk>proper (Atm x); i < brn (Atm x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Atm x) s i)\n 3. \\<And>x1 x2a i s.\n       \\<lbrakk>\\<And>i s.\n                   \\<lbrakk>proper x1; i < brn x1\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont x1 s i);\n        \\<And>i s.\n           \\<lbrakk>proper x2a; i < brn x2a\\<rbrakk>\n           \\<Longrightarrow> proper (local.cont x2a s i);\n        proper (x1 ;; x2a); i < brn (x1 ;; x2a)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (x1 ;; x2a) s i)\n 4. \\<And>x1 x2a i s.\n       \\<lbrakk>\\<And>i s.\n                   \\<lbrakk>proper x2a; i < brn x2a\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont x2a s i);\n        proper (While x1 x2a); i < brn (While x1 x2a)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (While x1 x2a) s i)\n 5. \\<And>x1 x2a x3 i s.\n       \\<lbrakk>\\<And>i s.\n                   \\<lbrakk>proper x2a; i < brn x2a\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont x2a s i);\n        \\<And>i s.\n           \\<lbrakk>proper x3; i < brn x3\\<rbrakk>\n           \\<Longrightarrow> proper (local.cont x3 s i);\n        proper (Ch x1 x2a x3); i < brn (Ch x1 x2a x3)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Ch x1 x2a x3) s i)\n 6. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (Par x); i < brn (Par x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Par x) s i)\n 7. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (ParT x); i < brn (ParT x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (ParT x) s i)", "case (Ch ch c1 c2)"], ["proof (state)\nthis:\n  \\<lbrakk>proper c1; ?i < brn c1\\<rbrakk>\n  \\<Longrightarrow> proper (local.cont c1 ?s ?i)\n  \\<lbrakk>proper c2; ?i < brn c2\\<rbrakk>\n  \\<Longrightarrow> proper (local.cont c2 ?s ?i)\n  proper (Ch ch c1 c2)\n  i < brn (Ch ch c1 c2)\n\ngoal (7 subgoals):\n 1. \\<And>i s.\n       \\<lbrakk>proper Done; i < brn Done\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont Done s i)\n 2. \\<And>x i s.\n       \\<lbrakk>proper (Atm x); i < brn (Atm x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Atm x) s i)\n 3. \\<And>x1 x2a i s.\n       \\<lbrakk>\\<And>i s.\n                   \\<lbrakk>proper x1; i < brn x1\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont x1 s i);\n        \\<And>i s.\n           \\<lbrakk>proper x2a; i < brn x2a\\<rbrakk>\n           \\<Longrightarrow> proper (local.cont x2a s i);\n        proper (x1 ;; x2a); i < brn (x1 ;; x2a)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (x1 ;; x2a) s i)\n 4. \\<And>x1 x2a i s.\n       \\<lbrakk>\\<And>i s.\n                   \\<lbrakk>proper x2a; i < brn x2a\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont x2a s i);\n        proper (While x1 x2a); i < brn (While x1 x2a)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (While x1 x2a) s i)\n 5. \\<And>x1 x2a x3 i s.\n       \\<lbrakk>\\<And>i s.\n                   \\<lbrakk>proper x2a; i < brn x2a\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont x2a s i);\n        \\<And>i s.\n           \\<lbrakk>proper x3; i < brn x3\\<rbrakk>\n           \\<Longrightarrow> proper (local.cont x3 s i);\n        proper (Ch x1 x2a x3); i < brn (Ch x1 x2a x3)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Ch x1 x2a x3) s i)\n 6. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (Par x); i < brn (Par x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Par x) s i)\n 7. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (ParT x); i < brn (ParT x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (ParT x) s i)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>proper c1; ?i < brn c1\\<rbrakk>\n  \\<Longrightarrow> proper (local.cont c1 ?s ?i)\n  \\<lbrakk>proper c2; ?i < brn c2\\<rbrakk>\n  \\<Longrightarrow> proper (local.cont c2 ?s ?i)\n  proper (Ch ch c1 c2)\n  i < brn (Ch ch c1 c2)\n\ngoal (1 subgoal):\n 1. proper (local.cont (Ch ch c1 c2) s i)", "by (cases i) auto"], ["proof (state)\nthis:\n  proper (local.cont (Ch ch c1 c2) s i)\n\ngoal (6 subgoals):\n 1. \\<And>i s.\n       \\<lbrakk>proper Done; i < brn Done\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont Done s i)\n 2. \\<And>x i s.\n       \\<lbrakk>proper (Atm x); i < brn (Atm x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Atm x) s i)\n 3. \\<And>x1 x2a i s.\n       \\<lbrakk>\\<And>i s.\n                   \\<lbrakk>proper x1; i < brn x1\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont x1 s i);\n        \\<And>i s.\n           \\<lbrakk>proper x2a; i < brn x2a\\<rbrakk>\n           \\<Longrightarrow> proper (local.cont x2a s i);\n        proper (x1 ;; x2a); i < brn (x1 ;; x2a)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (x1 ;; x2a) s i)\n 4. \\<And>x1 x2a i s.\n       \\<lbrakk>\\<And>i s.\n                   \\<lbrakk>proper x2a; i < brn x2a\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont x2a s i);\n        proper (While x1 x2a); i < brn (While x1 x2a)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (While x1 x2a) s i)\n 5. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (Par x); i < brn (Par x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Par x) s i)\n 6. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (ParT x); i < brn (ParT x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (ParT x) s i)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>i s.\n       \\<lbrakk>proper Done; i < brn Done\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont Done s i)\n 2. \\<And>x i s.\n       \\<lbrakk>proper (Atm x); i < brn (Atm x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Atm x) s i)\n 3. \\<And>x1 x2a i s.\n       \\<lbrakk>\\<And>i s.\n                   \\<lbrakk>proper x1; i < brn x1\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont x1 s i);\n        \\<And>i s.\n           \\<lbrakk>proper x2a; i < brn x2a\\<rbrakk>\n           \\<Longrightarrow> proper (local.cont x2a s i);\n        proper (x1 ;; x2a); i < brn (x1 ;; x2a)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (x1 ;; x2a) s i)\n 4. \\<And>x1 x2a i s.\n       \\<lbrakk>\\<And>i s.\n                   \\<lbrakk>proper x2a; i < brn x2a\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont x2a s i);\n        proper (While x1 x2a); i < brn (While x1 x2a)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (While x1 x2a) s i)\n 5. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (Par x); i < brn (Par x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Par x) s i)\n 6. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (ParT x); i < brn (ParT x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (ParT x) s i)", "case (Seq c1 c2)"], ["proof (state)\nthis:\n  \\<lbrakk>proper c1; ?i < brn c1\\<rbrakk>\n  \\<Longrightarrow> proper (local.cont c1 ?s ?i)\n  \\<lbrakk>proper c2; ?i < brn c2\\<rbrakk>\n  \\<Longrightarrow> proper (local.cont c2 ?s ?i)\n  proper (c1 ;; c2)\n  i < brn (c1 ;; c2)\n\ngoal (6 subgoals):\n 1. \\<And>i s.\n       \\<lbrakk>proper Done; i < brn Done\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont Done s i)\n 2. \\<And>x i s.\n       \\<lbrakk>proper (Atm x); i < brn (Atm x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Atm x) s i)\n 3. \\<And>x1 x2a i s.\n       \\<lbrakk>\\<And>i s.\n                   \\<lbrakk>proper x1; i < brn x1\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont x1 s i);\n        \\<And>i s.\n           \\<lbrakk>proper x2a; i < brn x2a\\<rbrakk>\n           \\<Longrightarrow> proper (local.cont x2a s i);\n        proper (x1 ;; x2a); i < brn (x1 ;; x2a)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (x1 ;; x2a) s i)\n 4. \\<And>x1 x2a i s.\n       \\<lbrakk>\\<And>i s.\n                   \\<lbrakk>proper x2a; i < brn x2a\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont x2a s i);\n        proper (While x1 x2a); i < brn (While x1 x2a)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (While x1 x2a) s i)\n 5. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (Par x); i < brn (Par x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Par x) s i)\n 6. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (ParT x); i < brn (ParT x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (ParT x) s i)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>proper c1; ?i < brn c1\\<rbrakk>\n  \\<Longrightarrow> proper (local.cont c1 ?s ?i)\n  \\<lbrakk>proper c2; ?i < brn c2\\<rbrakk>\n  \\<Longrightarrow> proper (local.cont c2 ?s ?i)\n  proper (c1 ;; c2)\n  i < brn (c1 ;; c2)\n\ngoal (1 subgoal):\n 1. proper (local.cont (c1 ;; c2) s i)", "by (cases \"finished (cont c1 s i)\") auto"], ["proof (state)\nthis:\n  proper (local.cont (c1 ;; c2) s i)\n\ngoal (5 subgoals):\n 1. \\<And>i s.\n       \\<lbrakk>proper Done; i < brn Done\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont Done s i)\n 2. \\<And>x i s.\n       \\<lbrakk>proper (Atm x); i < brn (Atm x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Atm x) s i)\n 3. \\<And>x1 x2a i s.\n       \\<lbrakk>\\<And>i s.\n                   \\<lbrakk>proper x2a; i < brn x2a\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont x2a s i);\n        proper (While x1 x2a); i < brn (While x1 x2a)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (While x1 x2a) s i)\n 4. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (Par x); i < brn (Par x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Par x) s i)\n 5. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (ParT x); i < brn (ParT x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (ParT x) s i)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>i s.\n       \\<lbrakk>proper Done; i < brn Done\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont Done s i)\n 2. \\<And>x i s.\n       \\<lbrakk>proper (Atm x); i < brn (Atm x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Atm x) s i)\n 3. \\<And>x1 x2a i s.\n       \\<lbrakk>\\<And>i s.\n                   \\<lbrakk>proper x2a; i < brn x2a\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont x2a s i);\n        proper (While x1 x2a); i < brn (While x1 x2a)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (While x1 x2a) s i)\n 4. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (Par x); i < brn (Par x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Par x) s i)\n 5. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (ParT x); i < brn (ParT x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (ParT x) s i)", "case (While tst c)"], ["proof (state)\nthis:\n  \\<lbrakk>proper c; ?i < brn c\\<rbrakk>\n  \\<Longrightarrow> proper (local.cont c ?s ?i)\n  proper (While tst c)\n  i < brn (While tst c)\n\ngoal (5 subgoals):\n 1. \\<And>i s.\n       \\<lbrakk>proper Done; i < brn Done\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont Done s i)\n 2. \\<And>x i s.\n       \\<lbrakk>proper (Atm x); i < brn (Atm x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Atm x) s i)\n 3. \\<And>x1 x2a i s.\n       \\<lbrakk>\\<And>i s.\n                   \\<lbrakk>proper x2a; i < brn x2a\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont x2a s i);\n        proper (While x1 x2a); i < brn (While x1 x2a)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (While x1 x2a) s i)\n 4. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (Par x); i < brn (Par x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Par x) s i)\n 5. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (ParT x); i < brn (ParT x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (ParT x) s i)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>proper c; ?i < brn c\\<rbrakk>\n  \\<Longrightarrow> proper (local.cont c ?s ?i)\n  proper (While tst c)\n  i < brn (While tst c)\n\ngoal (1 subgoal):\n 1. proper (local.cont (While tst c) s i)", "by (cases \"tval tst s\") auto"], ["proof (state)\nthis:\n  proper (local.cont (While tst c) s i)\n\ngoal (4 subgoals):\n 1. \\<And>i s.\n       \\<lbrakk>proper Done; i < brn Done\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont Done s i)\n 2. \\<And>x i s.\n       \\<lbrakk>proper (Atm x); i < brn (Atm x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Atm x) s i)\n 3. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (Par x); i < brn (Par x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Par x) s i)\n 4. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (ParT x); i < brn (ParT x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (ParT x) s i)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>i s.\n       \\<lbrakk>proper Done; i < brn Done\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont Done s i)\n 2. \\<And>x i s.\n       \\<lbrakk>proper (Atm x); i < brn (Atm x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Atm x) s i)\n 3. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (Par x); i < brn (Par x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Par x) s i)\n 4. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (ParT x); i < brn (ParT x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (ParT x) s i)", "case (Par cl ii)"], ["proof (state)\nthis:\n  \\<lbrakk>?xa \\<in> set cl; proper ?xa; ?i < brn ?xa\\<rbrakk>\n  \\<Longrightarrow> proper (local.cont ?xa ?s ?i)\n  proper (Par cl)\n  ii < brn (Par cl)\n\ngoal (4 subgoals):\n 1. \\<And>i s.\n       \\<lbrakk>proper Done; i < brn Done\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont Done s i)\n 2. \\<And>x i s.\n       \\<lbrakk>proper (Atm x); i < brn (Atm x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Atm x) s i)\n 3. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (Par x); i < brn (Par x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Par x) s i)\n 4. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (ParT x); i < brn (ParT x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (ParT x) s i)", "hence \"properL cl\" and \"ii < brnL cl (length cl)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?xa \\<in> set cl; proper ?xa; ?i < brn ?xa\\<rbrakk>\n  \\<Longrightarrow> proper (local.cont ?xa ?s ?i)\n  proper (Par cl)\n  ii < brn (Par cl)\n\ngoal (1 subgoal):\n 1. properL cl &&& ii < brnL cl (length cl)", "by auto"], ["proof (state)\nthis:\n  properL cl\n  ii < brnL cl (length cl)\n\ngoal (4 subgoals):\n 1. \\<And>i s.\n       \\<lbrakk>proper Done; i < brn Done\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont Done s i)\n 2. \\<And>x i s.\n       \\<lbrakk>proper (Atm x); i < brn (Atm x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Atm x) s i)\n 3. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (Par x); i < brn (Par x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Par x) s i)\n 4. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (ParT x); i < brn (ParT x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (ParT x) s i)", "thus ?case"], ["proof (prove)\nusing this:\n  properL cl\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. proper (local.cont (Par cl) s ii)", "using Par"], ["proof (prove)\nusing this:\n  properL cl\n  ii < brnL cl (length cl)\n  \\<lbrakk>?xa \\<in> set cl; proper ?xa; ?i < brn ?xa\\<rbrakk>\n  \\<Longrightarrow> proper (local.cont ?xa ?s ?i)\n  proper (Par cl)\n  ii < brn (Par cl)\n\ngoal (1 subgoal):\n 1. proper (local.cont (Par cl) s ii)", "by (cases rule: brnL_cases) auto"], ["proof (state)\nthis:\n  proper (local.cont (Par cl) s ii)\n\ngoal (3 subgoals):\n 1. \\<And>i s.\n       \\<lbrakk>proper Done; i < brn Done\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont Done s i)\n 2. \\<And>x i s.\n       \\<lbrakk>proper (Atm x); i < brn (Atm x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Atm x) s i)\n 3. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (ParT x); i < brn (ParT x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (ParT x) s i)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i s.\n       \\<lbrakk>proper Done; i < brn Done\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont Done s i)\n 2. \\<And>x i s.\n       \\<lbrakk>proper (Atm x); i < brn (Atm x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Atm x) s i)\n 3. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (ParT x); i < brn (ParT x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (ParT x) s i)", "case (ParT cl ii)"], ["proof (state)\nthis:\n  \\<lbrakk>?xa \\<in> set cl; proper ?xa; ?i < brn ?xa\\<rbrakk>\n  \\<Longrightarrow> proper (local.cont ?xa ?s ?i)\n  proper (ParT cl)\n  ii < brn (ParT cl)\n\ngoal (3 subgoals):\n 1. \\<And>i s.\n       \\<lbrakk>proper Done; i < brn Done\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont Done s i)\n 2. \\<And>x i s.\n       \\<lbrakk>proper (Atm x); i < brn (Atm x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Atm x) s i)\n 3. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (ParT x); i < brn (ParT x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (ParT x) s i)", "have \"properL cl\" and \"ii < brnL cl (length cl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. properL cl &&& ii < brnL cl (length cl)", "using ParT"], ["proof (prove)\nusing this:\n  \\<lbrakk>?xa \\<in> set cl; proper ?xa; ?i < brn ?xa\\<rbrakk>\n  \\<Longrightarrow> proper (local.cont ?xa ?s ?i)\n  proper (ParT cl)\n  ii < brn (ParT cl)\n\ngoal (1 subgoal):\n 1. properL cl &&& ii < brnL cl (length cl)", "by auto"], ["proof (state)\nthis:\n  properL cl\n  ii < brnL cl (length cl)\n\ngoal (3 subgoals):\n 1. \\<And>i s.\n       \\<lbrakk>proper Done; i < brn Done\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont Done s i)\n 2. \\<And>x i s.\n       \\<lbrakk>proper (Atm x); i < brn (Atm x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Atm x) s i)\n 3. \\<And>x i s.\n       \\<lbrakk>\\<And>xa i s.\n                   \\<lbrakk>xa \\<in> set x; proper xa; i < brn xa\\<rbrakk>\n                   \\<Longrightarrow> proper (local.cont xa s i);\n        proper (ParT x); i < brn (ParT x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (ParT x) s i)", "thus ?case"], ["proof (prove)\nusing this:\n  properL cl\n  ii < brnL cl (length cl)\n\ngoal (1 subgoal):\n 1. proper (local.cont (ParT cl) s ii)", "apply (cases rule: brnL_cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n i.\n       \\<lbrakk>n < length cl; i < brn (cl ! n); ii = brnL cl n + i\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (ParT cl) s ii)", "using ParT"], ["proof (prove)\nusing this:\n  \\<lbrakk>?xa \\<in> set cl; proper ?xa; ?i < brn ?xa\\<rbrakk>\n  \\<Longrightarrow> proper (local.cont ?xa ?s ?i)\n  proper (ParT cl)\n  ii < brn (ParT cl)\n\ngoal (1 subgoal):\n 1. \\<And>n i.\n       \\<lbrakk>n < length cl; i < brn (cl ! n); ii = brnL cl n + i\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (ParT cl) s ii)", "by auto"], ["proof (state)\nthis:\n  proper (local.cont (ParT cl) s ii)\n\ngoal (2 subgoals):\n 1. \\<And>i s.\n       \\<lbrakk>proper Done; i < brn Done\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont Done s i)\n 2. \\<And>x i s.\n       \\<lbrakk>proper (Atm x); i < brn (Atm x)\\<rbrakk>\n       \\<Longrightarrow> proper (local.cont (Atm x) s i)", "qed auto"], ["", "lemma sum_subset_le_1[simp]:\nassumes *: \"proper c\" and **: \"I \\<subseteq> {..< brn c}\"\nshows \"sum (wt c s) I \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt c s) I \\<le> 1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (wt c s) I \\<le> 1", "define J where \"J = {..< brn c}\""], ["proof (state)\nthis:\n  J = {..<brn c}\n\ngoal (1 subgoal):\n 1. sum (wt c s) I \\<le> 1", "have \"I \\<subseteq> J\" and \"finite J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<subseteq> J &&& finite J", "using **"], ["proof (prove)\nusing this:\n  I \\<subseteq> {..<brn c}\n\ngoal (1 subgoal):\n 1. I \\<subseteq> J &&& finite J", "unfolding J_def"], ["proof (prove)\nusing this:\n  I \\<subseteq> {..<brn c}\n\ngoal (1 subgoal):\n 1. I \\<subseteq> {..<brn c} &&& finite {..<brn c}", "by auto"], ["proof (state)\nthis:\n  I \\<subseteq> J\n  finite J\n\ngoal (1 subgoal):\n 1. sum (wt c s) I \\<le> 1", "moreover"], ["proof (state)\nthis:\n  I \\<subseteq> J\n  finite J\n\ngoal (1 subgoal):\n 1. sum (wt c s) I \\<le> 1", "have \"\\<forall> j \\<in> J. wt c s j \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>J. 0 \\<le> wt c s j", "unfolding J_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>{..<brn c}. 0 \\<le> wt c s j", "using *"], ["proof (prove)\nusing this:\n  proper c\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>{..<brn c}. 0 \\<le> wt c s j", "by simp"], ["proof (state)\nthis:\n  \\<forall>j\\<in>J. 0 \\<le> wt c s j\n\ngoal (1 subgoal):\n 1. sum (wt c s) I \\<le> 1", "ultimately"], ["proof (chain)\npicking this:\n  I \\<subseteq> J\n  finite J\n  \\<forall>j\\<in>J. 0 \\<le> wt c s j", "have \"sum (wt c s) I \\<le> sum (wt c s) J\""], ["proof (prove)\nusing this:\n  I \\<subseteq> J\n  finite J\n  \\<forall>j\\<in>J. 0 \\<le> wt c s j\n\ngoal (1 subgoal):\n 1. sum (wt c s) I \\<le> sum (wt c s) J", "using sum_mono2[of J I \"wt c s\"]"], ["proof (prove)\nusing this:\n  I \\<subseteq> J\n  finite J\n  \\<forall>j\\<in>J. 0 \\<le> wt c s j\n  \\<lbrakk>finite J; I \\<subseteq> J;\n   \\<And>b. b \\<in> J - I \\<Longrightarrow> 0 \\<le> wt c s b\\<rbrakk>\n  \\<Longrightarrow> sum (wt c s) I \\<le> sum (wt c s) J\n\ngoal (1 subgoal):\n 1. sum (wt c s) I \\<le> sum (wt c s) J", "by auto"], ["proof (state)\nthis:\n  sum (wt c s) I \\<le> sum (wt c s) J\n\ngoal (1 subgoal):\n 1. sum (wt c s) I \\<le> 1", "also"], ["proof (state)\nthis:\n  sum (wt c s) I \\<le> sum (wt c s) J\n\ngoal (1 subgoal):\n 1. sum (wt c s) I \\<le> 1", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt c s) J = 1", "using *"], ["proof (prove)\nusing this:\n  proper c\n\ngoal (1 subgoal):\n 1. sum (wt c s) J = 1", "unfolding J_def"], ["proof (prove)\nusing this:\n  proper c\n\ngoal (1 subgoal):\n 1. sum (wt c s) {..<brn c} = 1", "by simp"], ["proof (state)\nthis:\n  sum (wt c s) J = 1\n\ngoal (1 subgoal):\n 1. sum (wt c s) I \\<le> 1", "finally"], ["proof (chain)\npicking this:\n  sum (wt c s) I \\<le> 1", "show \"sum (wt c s) I \\<le> 1\""], ["proof (prove)\nusing this:\n  sum (wt c s) I \\<le> 1\n\ngoal (1 subgoal):\n 1. sum (wt c s) I \\<le> 1", "unfolding J_def"], ["proof (prove)\nusing this:\n  sum (wt c s) I \\<le> 1\n\ngoal (1 subgoal):\n 1. sum (wt c s) I \\<le> 1", "by simp"], ["proof (state)\nthis:\n  sum (wt c s) I \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_le_1[simp]:\nassumes *: \"proper c\" and **: \"i < brn c\"\nshows \"sum (wt c s) {..i} \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (wt c s) {..i} \\<le> 1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (wt c s) {..i} \\<le> 1", "have \"{..i} \\<subseteq> {..< brn c}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..i} \\<subseteq> {..<brn c}", "using **"], ["proof (prove)\nusing this:\n  i < brn c\n\ngoal (1 subgoal):\n 1. {..i} \\<subseteq> {..<brn c}", "by auto"], ["proof (state)\nthis:\n  {..i} \\<subseteq> {..<brn c}\n\ngoal (1 subgoal):\n 1. sum (wt c s) {..i} \\<le> 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  {..i} \\<subseteq> {..<brn c}\n\ngoal (1 subgoal):\n 1. sum (wt c s) {..i} \\<le> 1", "using assms sum_subset_le_1[of c \"{..i}\" s]"], ["proof (prove)\nusing this:\n  {..i} \\<subseteq> {..<brn c}\n  proper c\n  i < brn c\n  \\<lbrakk>proper c; {..i} \\<subseteq> {..<brn c}\\<rbrakk>\n  \\<Longrightarrow> sum (wt c s) {..i} \\<le> 1\n\ngoal (1 subgoal):\n 1. sum (wt c s) {..i} \\<le> 1", "by blast"], ["proof (state)\nthis:\n  sum (wt c s) {..i} \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Operations on configurations\\<close>"], ["", "definition \"cont_eff cf b = snd (wt_cont_eff (fst cf) (snd cf) b)\""], ["", "lemma cont_eff: \"cont_eff cf b = (cont (fst cf) (snd cf) b, eff (fst cf) (snd cf) b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cont_eff cf b =\n    (local.cont (fst cf) (snd cf) b, eff (fst cf) (snd cf) b)", "unfolding cont_eff_def cont_def eff_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (wt_cont_eff (fst cf) (snd cf) b) =\n    (fst (snd (wt_cont_eff (fst cf) (snd cf) b)),\n     snd (snd (wt_cont_eff (fst cf) (snd cf) b)))", "by simp"], ["", "end"], ["", "(* context PL *)"], ["", "end"]]}