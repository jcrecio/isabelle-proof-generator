{"file_name": "/home/qj213/afp-2021-10-22/thys/Approximation_Algorithms/Approx_LB_Hoare.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Approximation_Algorithms", "problem_names": ["lemma sum_le_card_Max: \"\\<lbrakk> finite A; A \\<noteq> {} \\<rbrakk> \\<Longrightarrow> sum f A \\<le> card A * Max (f ` A)\"", "lemma Max_const[simp]: \"\\<lbrakk> finite A; A \\<noteq> {} \\<rbrakk> \\<Longrightarrow> Max ((\\<lambda>_. c) ` A) = c\"", "lemma f_Max\\<^sub>0_equiv: \"f_Max\\<^sub>0 f n = Max\\<^sub>0 (f ` {1..n})\"", "lemma f_Max\\<^sub>0_correct:\n  \"\\<forall>x \\<in> {1..m}. T x \\<le> f_Max\\<^sub>0 T m\"\n  \"m > 0 \\<Longrightarrow> \\<exists>x \\<in> {1..m}. T x = f_Max\\<^sub>0 T m\"", "lemma f_Max\\<^sub>0_mono:\n  \"y \\<le> T x \\<Longrightarrow> f_Max\\<^sub>0 (T (x := y)) m \\<le> f_Max\\<^sub>0 T m\"\n  \"T x \\<le> y \\<Longrightarrow> f_Max\\<^sub>0 T m \\<le> f_Max\\<^sub>0 (T (x := y)) m\"", "lemma f_Max\\<^sub>0_out_of_range [simp]:\n  \"x \\<notin> {1..k} \\<Longrightarrow> f_Max\\<^sub>0 (T (x := y)) k = f_Max\\<^sub>0 T k\"", "lemma fun_upd_f_Max\\<^sub>0:\n  assumes \"x \\<in> {1..m}\" \"T x \\<le> y\"\n  shows \"f_Max\\<^sub>0 (T (x := y)) m = max y (f_Max\\<^sub>0 T m)\"", "lemma makespan_def': \"makespan T = Max (T ` {1..m})\"", "lemma makespan_correct:\n  \"\\<forall>x \\<in> {1..m}. T x \\<le> makespan T\"\n  \"\\<exists>x \\<in> {1..m}. T x = makespan T\"", "lemma lbE:\n  assumes \"lb T A j\"\n  shows \"\\<forall>x \\<in> {1..m}. \\<forall>y \\<in> {1..m}. x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\"\n        \"(\\<Union>x \\<in> {1..m}. A x) = {1..j}\"\n        \"\\<forall>x \\<in> {1..m}. (\\<Sum>y \\<in> A x. t y) = T x\"", "lemma lbI:\n  assumes \"\\<forall>x \\<in> {1..m}. \\<forall>y \\<in> {1..m}. x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\"\n          \"(\\<Union>x \\<in> {1..m}. A x) = {1..j}\"\n          \"\\<forall>x \\<in> {1..m}. (\\<Sum>y \\<in> A x. t y) = T x\"\n  shows \"lb T A j\"", "lemma A_lb_finite [simp]:\n  assumes \"lb T A j\" \"x \\<in> {1..m}\"\n  shows \"finite (A x)\"", "lemma sum_sum_eq_sum_Un:\n  fixes A :: \"nat \\<Rightarrow> nat set\"\n  assumes \"\\<forall>x \\<in> {1..m}. \\<forall>y \\<in> {1..m}. x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\"\n      and \"\\<forall>x \\<in> {1..m}. finite (A x)\"\n  shows \"(\\<Sum>x \\<in> {1..m}. (\\<Sum>y \\<in> A x. t y)) = (\\<Sum>x \\<in> (\\<Union>y \\<in> {1..m}. A y). t x)\"", "lemma lb_impl_job_sum:\n  assumes \"lb T A j\"\n  shows \"(\\<Sum>x \\<in> {1..m}. T x) = (\\<Sum>x \\<in> {1..j}. t x)\"", "lemma job_lower_bound_machine:\n  assumes \"lb T A j\" \"x \\<in> {1..j}\"\n  shows \"\\<exists>y \\<in> {1..m}. t x \\<le> T y\"", "lemma job_lower_bound_makespan:\n  assumes \"lb T A j\" \"x \\<in> {1..j}\"\n  shows \"t x \\<le> makespan T\"", "lemma max_job_lower_bound_makespan:\n  assumes \"lb T A j\"\n  shows \"Max\\<^sub>0 (t ` {1..j}) \\<le> makespan T\"", "lemma job_dist_lower_bound_makespan:\n  assumes \"lb T A j\"\n  shows \"(\\<Sum>x \\<in> {1..j}. t x) / m \\<le> makespan T\"", "lemma min_correct:\n  \"\\<forall>x \\<in> {1..m}. T (min\\<^sub>k T m) \\<le> T x\"", "lemma min_in_range:\n  \"k > 0 \\<Longrightarrow> (min\\<^sub>k T k) \\<in> {1..k}\"", "lemma add_job:\n  assumes \"lb T A j\" \"x \\<in> {1..m}\"\n  shows \"lb (T (x := T x + t (Suc j))) (A (x := A x \\<union> {Suc j})) (Suc j)\"\n    (is \\<open>lb ?T ?A _\\<close>)", "lemma makespan_mono:\n  \"y \\<le> T x \\<Longrightarrow> makespan (T (x := y)) \\<le> makespan T\"\n  \"T x \\<le> y \\<Longrightarrow> makespan T \\<le> makespan (T (x := y))\"", "lemma smaller_optimum:\n  assumes \"lb T A (Suc j)\"\n  shows \"\\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T\"", "lemma remove_small_job:\n  assumes \"makespan (T (x := T x + y)) \\<noteq> T x + y\"\n  shows   \"makespan (T (x := T x + y)) = makespan T\"", "lemma greedy_makespan_no_jobs [simp]:\n  \"makespan (\\<lambda>_. 0) = 0\"", "lemma min_avg: \"m * T (min\\<^sub>k T m) \\<le> (\\<Sum>i \\<in> {1..m}. T i)\"\n           (is \\<open>_ * ?T \\<le> ?S\\<close>)", "lemma inv\\<^sub>1E:\n  assumes \"inv\\<^sub>1 T A j\"\n  shows \"lb T A j\" \"j \\<le> n\"\n        \"lb T' A' j \\<Longrightarrow> makespan T \\<le> 2 * makespan T'\"", "lemma inv\\<^sub>1I:\n  assumes \"lb T A j\" \"j \\<le> n\" \"\\<forall>T' A'. lb T' A' j \\<longrightarrow> makespan T \\<le> 2 * makespan T'\"\n  shows \"inv\\<^sub>1 T A j\"", "lemma inv\\<^sub>1_step:\n  assumes \"inv\\<^sub>1 T A j\" \"j < n\"\n  shows \"inv\\<^sub>1 (T ((min\\<^sub>k T m) := T (min\\<^sub>k T m) + t (Suc j)))\n              (A ((min\\<^sub>k T m) := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\"\n    (is \\<open>inv\\<^sub>1 ?T ?A _\\<close>)", "lemma simple_greedy_approximation:\n\"VARS T A i j\n{True}\nT := (\\<lambda>_. 0);\nA := (\\<lambda>_. {});\nj := 0;\nWHILE j < n INV {inv\\<^sub>1 T A j} DO\n  i := min\\<^sub>k T m;\n  j := (Suc j);\n  A := A (i := A(i) \\<union> {j});\n  T := T (i := T(i) + t j)\nOD\n{lb T A n \\<and> (\\<forall>T' A'. lb T' A' n \\<longrightarrow> makespan T \\<le> 2 * makespan T')}\"", "lemma sorted_smaller [simp]: \"\\<lbrakk> sorted j; j \\<ge> j' \\<rbrakk> \\<Longrightarrow> sorted j'\"", "lemma j_gt_m_pigeonhole:\n  assumes \"lb T A j\" \"j > m\"\n  shows \"\\<exists>x \\<in> {1..j}. \\<exists>y \\<in> {1..j}. \\<exists>z \\<in> {1..m}. x \\<noteq> y \\<and> x \\<in> A z \\<and> y \\<in> A z\"", "lemma sorted_job_lower_bound_machine:\n  assumes \"lb T A j\" \"j > m\" \"sorted j\"\n  shows \"\\<exists>x \\<in> {1..m}. 2 * t j \\<le> T x\"", "lemma sorted_job_lower_bound_makespan:\n  assumes \"lb T A j\" \"j > m\" \"sorted j\"\n  shows \"2 * t j \\<le> makespan T\"", "lemma min_zero:\n  assumes \"x \\<in> {1..k}\" \"T x = 0\"\n  shows \"T (min\\<^sub>k T k) = 0\"", "lemma min_zero_index:\n  assumes \"x \\<in> {1..k}\" \"T x = 0\"\n  shows \"min\\<^sub>k T k \\<le> x\"", "lemma inv\\<^sub>2E:\n  assumes \"inv\\<^sub>2 T A j\"\n  shows \"lb T A j\" \"j \\<le> n\"\n        \"lb T' A' j \\<Longrightarrow> makespan T \\<le> 3 / 2 * makespan T'\"\n        \"\\<forall>x > j. T x = 0\" \"j \\<le> m \\<Longrightarrow> makespan T = Max\\<^sub>0 (t ` {1..j})\"", "lemma inv\\<^sub>2I:\n  assumes \"lb T A j\" \"j \\<le> n\"\n          \"\\<forall>T' A'. lb T' A' j \\<longrightarrow> makespan T \\<le> 3 / 2 * makespan T'\"\n          \"\\<forall>x > j. T x = 0\"\n          \"j \\<le> m \\<Longrightarrow> makespan T = Max\\<^sub>0 (t ` {1..j})\"\n  shows \"inv\\<^sub>2 T A j\"", "lemma inv\\<^sub>2_step:\n  assumes \"sorted n\" \"inv\\<^sub>2 T A j\" \"j < n\"\n  shows \"inv\\<^sub>2 (T (min\\<^sub>k T m := T(min\\<^sub>k T m) + t(Suc j)))\n              (A (min\\<^sub>k T m := A(min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\"\n    (is \\<open>inv\\<^sub>2 ?T ?A _\\<close>)", "lemma sorted_greedy_approximation:\n\"sorted n \\<Longrightarrow> VARS T A i j\n{True}\nT := (\\<lambda>_. 0);\nA := (\\<lambda>_. {});\nj := 0;\nWHILE j < n INV {inv\\<^sub>2 T A j} DO\n  i := min\\<^sub>k T m;\n  j := (Suc j);\n  A := A (i := A(i) \\<union> {j});\n  T := T (i := T(i) + t j)\nOD\n{lb T A n \\<and> (\\<forall>T' A'. lb T' A' n \\<longrightarrow> makespan T \\<le> 3 / 2 * makespan T')}\""], "translations": [["", "lemma sum_le_card_Max: \"\\<lbrakk> finite A; A \\<noteq> {} \\<rbrakk> \\<Longrightarrow> sum f A \\<le> card A * Max (f ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> sum f A \\<le> card A * Max (f ` A)", "proof(induction A rule: finite_ne_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. sum f {x} \\<le> card {x} * Max (f ` {x})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; F \\<noteq> {}; x \\<notin> F;\n        sum f F \\<le> card F * Max (f ` F)\\<rbrakk>\n       \\<Longrightarrow> sum f (insert x F)\n                         \\<le> card (insert x F) * Max (f ` insert x F)", "case (singleton x)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>x. sum f {x} \\<le> card {x} * Max (f ` {x})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; F \\<noteq> {}; x \\<notin> F;\n        sum f F \\<le> card F * Max (f ` F)\\<rbrakk>\n       \\<Longrightarrow> sum f (insert x F)\n                         \\<le> card (insert x F) * Max (f ` insert x F)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {x} \\<le> card {x} * Max (f ` {x})", "by simp"], ["proof (state)\nthis:\n  sum f {x} \\<le> card {x} * Max (f ` {x})\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; F \\<noteq> {}; x \\<notin> F;\n        sum f F \\<le> card F * Max (f ` F)\\<rbrakk>\n       \\<Longrightarrow> sum f (insert x F)\n                         \\<le> card (insert x F) * Max (f ` insert x F)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; F \\<noteq> {}; x \\<notin> F;\n        sum f F \\<le> card F * Max (f ` F)\\<rbrakk>\n       \\<Longrightarrow> sum f (insert x F)\n                         \\<le> card (insert x F) * Max (f ` insert x F)", "case (insert x F)"], ["proof (state)\nthis:\n  finite F\n  F \\<noteq> {}\n  x \\<notin> F\n  sum f F \\<le> card F * Max (f ` F)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; F \\<noteq> {}; x \\<notin> F;\n        sum f F \\<le> card F * Max (f ` F)\\<rbrakk>\n       \\<Longrightarrow> sum f (insert x F)\n                         \\<le> card (insert x F) * Max (f ` insert x F)", "then"], ["proof (chain)\npicking this:\n  finite F\n  F \\<noteq> {}\n  x \\<notin> F\n  sum f F \\<le> card F * Max (f ` F)", "show ?case"], ["proof (prove)\nusing this:\n  finite F\n  F \\<noteq> {}\n  x \\<notin> F\n  sum f F \\<le> card F * Max (f ` F)\n\ngoal (1 subgoal):\n 1. sum f (insert x F) \\<le> card (insert x F) * Max (f ` insert x F)", "by (auto simp: max_def order.trans[of \"sum f F\" \"card F * Max (f ` F)\"])"], ["proof (state)\nthis:\n  sum f (insert x F) \\<le> card (insert x F) * Max (f ` insert x F)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Max_const[simp]: \"\\<lbrakk> finite A; A \\<noteq> {} \\<rbrakk> \\<Longrightarrow> Max ((\\<lambda>_. c) ` A) = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (MAX _\\<in>A. c) = c", "using Max_in image_is_empty"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max ?A \\<in> ?A\n  (?f ` ?A = {}) = (?A = {})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (MAX _\\<in>A. c) = c", "by blast"], ["", "abbreviation Max\\<^sub>0 :: \"nat set \\<Rightarrow> nat\" where\n\"Max\\<^sub>0 N \\<equiv> (if N={} then 0 else Max N)\""], ["", "fun f_Max\\<^sub>0 :: \"(nat \\<Rightarrow> nat) \\<Rightarrow> nat \\<Rightarrow> nat\" where\n  \"f_Max\\<^sub>0 f 0 = 0\"\n| \"f_Max\\<^sub>0 f (Suc x) = max (f (Suc x)) (f_Max\\<^sub>0 f x)\""], ["", "lemma f_Max\\<^sub>0_equiv: \"f_Max\\<^sub>0 f n = Max\\<^sub>0 (f ` {1..n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f_Max\\<^sub>0 f n = Max\\<^sub>0 (f ` {1..n})", "by (induction n) (auto simp: not_le atLeastAtMostSuc_conv)"], ["", "lemma f_Max\\<^sub>0_correct:\n  \"\\<forall>x \\<in> {1..m}. T x \\<le> f_Max\\<^sub>0 T m\"\n  \"m > 0 \\<Longrightarrow> \\<exists>x \\<in> {1..m}. T x = f_Max\\<^sub>0 T m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{1..m}. T x \\<le> f_Max\\<^sub>0 T m &&&\n    (0 < m \\<Longrightarrow> \\<exists>x\\<in>{1..m}. T x = f_Max\\<^sub>0 T m)", "apply (induction m)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<forall>x\\<in>{1..0}. T x \\<le> f_Max\\<^sub>0 T 0\n 2. 0 < 0 \\<Longrightarrow> \\<exists>x\\<in>{1..0}. T x = f_Max\\<^sub>0 T 0\n 3. \\<And>m.\n       \\<lbrakk>\\<forall>x\\<in>{1..m}. T x \\<le> f_Max\\<^sub>0 T m;\n        0 < m \\<Longrightarrow>\n        \\<exists>x\\<in>{1..m}. T x = f_Max\\<^sub>0 T m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>{1..Suc m}.\n                            T x \\<le> f_Max\\<^sub>0 T (Suc m)\n 4. \\<And>m.\n       \\<lbrakk>\\<forall>x\\<in>{1..m}. T x \\<le> f_Max\\<^sub>0 T m;\n        0 < m \\<Longrightarrow>\n        \\<exists>x\\<in>{1..m}. T x = f_Max\\<^sub>0 T m;\n        0 < Suc m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>{1..Suc m}.\n                            T x = f_Max\\<^sub>0 T (Suc m)", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>\\<forall>x\\<in>{Suc 0..m}. T x \\<le> f_Max\\<^sub>0 T m;\n        0 < m \\<Longrightarrow>\n        \\<exists>x\\<in>{Suc 0..m}. T x = f_Max\\<^sub>0 T m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>{Suc 0..Suc m}.\n                            T x \\<le> max (T (Suc m)) (f_Max\\<^sub>0 T m)\n 2. \\<And>m.\n       \\<lbrakk>\\<forall>x\\<in>{Suc 0..m}. T x \\<le> f_Max\\<^sub>0 T m;\n        0 < m \\<Longrightarrow>\n        \\<exists>x\\<in>{Suc 0..m}. T x = f_Max\\<^sub>0 T m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>{Suc 0..Suc m}.\n                            T x = max (T (Suc m)) (f_Max\\<^sub>0 T m)", "apply (metis atLeastAtMost_iff le_Suc_eq max.cobounded1 max.coboundedI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>\\<forall>x\\<in>{Suc 0..m}. T x \\<le> f_Max\\<^sub>0 T m;\n        0 < m \\<Longrightarrow>\n        \\<exists>x\\<in>{Suc 0..m}. T x = f_Max\\<^sub>0 T m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>{Suc 0..Suc m}.\n                            T x = max (T (Suc m)) (f_Max\\<^sub>0 T m)", "subgoal for m"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>{Suc 0..m}. T x \\<le> f_Max\\<^sub>0 T m;\n     0 < m \\<Longrightarrow>\n     \\<exists>x\\<in>{Suc 0..m}. T x = f_Max\\<^sub>0 T m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x\\<in>{Suc 0..Suc m}.\n                         T x = max (T (Suc m)) (f_Max\\<^sub>0 T m)", "by (cases \\<open>m = 0\\<close>) (auto simp: max_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma f_Max\\<^sub>0_mono:\n  \"y \\<le> T x \\<Longrightarrow> f_Max\\<^sub>0 (T (x := y)) m \\<le> f_Max\\<^sub>0 T m\"\n  \"T x \\<le> y \\<Longrightarrow> f_Max\\<^sub>0 T m \\<le> f_Max\\<^sub>0 (T (x := y)) m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<le> T x \\<Longrightarrow>\n     f_Max\\<^sub>0 (T(x := y)) m \\<le> f_Max\\<^sub>0 T m) &&&\n    (T x \\<le> y \\<Longrightarrow>\n     f_Max\\<^sub>0 T m \\<le> f_Max\\<^sub>0 (T(x := y)) m)", "by (induction m) auto"], ["", "lemma f_Max\\<^sub>0_out_of_range [simp]:\n  \"x \\<notin> {1..k} \\<Longrightarrow> f_Max\\<^sub>0 (T (x := y)) k = f_Max\\<^sub>0 T k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> {1..k} \\<Longrightarrow>\n    f_Max\\<^sub>0 (T(x := y)) k = f_Max\\<^sub>0 T k", "by (induction k) auto"], ["", "lemma fun_upd_f_Max\\<^sub>0:\n  assumes \"x \\<in> {1..m}\" \"T x \\<le> y\"\n  shows \"f_Max\\<^sub>0 (T (x := y)) m = max y (f_Max\\<^sub>0 T m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f_Max\\<^sub>0 (T(x := y)) m = max y (f_Max\\<^sub>0 T m)", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> {1..m}\n  T x \\<le> y\n\ngoal (1 subgoal):\n 1. f_Max\\<^sub>0 (T(x := y)) m = max y (f_Max\\<^sub>0 T m)", "by (induction m) auto"], ["", "locale LoadBalancing = (* Load Balancing *)\n  fixes t :: \"nat \\<Rightarrow> nat\"\n    and m :: nat\n    and n :: nat\n  assumes m_gt_0: \"m > 0\"\nbegin"], ["", "subsection \\<open>Formalization of a Correct Load Balancing\\<close>"], ["", "subsubsection \\<open>Definition\\<close>"], ["", "definition lb :: \"(nat \\<Rightarrow> nat) \\<Rightarrow> (nat \\<Rightarrow> nat set) \\<Rightarrow> nat \\<Rightarrow> bool\" where\n  \"lb T A j = ((\\<forall>x \\<in> {1..m}. \\<forall>y \\<in> {1..m}. x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}) \\<comment> \\<open>No job is assigned to more than one machine\\<close>\n             \\<and> (\\<Union>x \\<in> {1..m}. A x) = {1..j} \\<comment> \\<open>Every job is assigned\\<close>\n             \\<and> (\\<forall>x \\<in> {1..m}. (\\<Sum>j \\<in> A x. t j) = T x) \\<comment> \\<open>The processing times sum up to the correct load\\<close>)\""], ["", "abbreviation makespan :: \"(nat \\<Rightarrow> nat) \\<Rightarrow> nat\" where\n  \"makespan T \\<equiv> f_Max\\<^sub>0 T m\""], ["", "lemma makespan_def': \"makespan T = Max (T ` {1..m})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. makespan T = Max (T ` {1..m})", "using m_gt_0"], ["proof (prove)\nusing this:\n  0 < m\n\ngoal (1 subgoal):\n 1. makespan T = Max (T ` {1..m})", "by (simp add: f_Max\\<^sub>0_equiv)"], ["", "(*\nlemma makespan_correct:\n  \"\\<forall>x \\<in> {1..m}. T x \\<le> makespan T m\"\n  \"m > 0 \\<Longrightarrow> \\<exists>x \\<in> {1..m}. T x = makespan T m\"\n   apply (induction m)\n     apply simp_all\n   apply (metis atLeastAtMost_iff le_Suc_eq max.cobounded1 max.coboundedI2)\n  subgoal for m by (cases \\<open>m = 0\\<close>) (auto simp: max_def)\n  done\n\nlemma no_machines_lb_iff_no_jobs: \"lb T A j 0 \\<longleftrightarrow> j = 0\"\n  unfolding lb_def by auto\n\nlemma machines_if_jobs: \"\\<lbrakk> lb T A j m; j > 0 \\<rbrakk> \\<Longrightarrow> m > 0\"\n  using no_machines_lb_iff_no_jobs by (cases m) auto\n*)"], ["", "lemma makespan_correct:\n  \"\\<forall>x \\<in> {1..m}. T x \\<le> makespan T\"\n  \"\\<exists>x \\<in> {1..m}. T x = makespan T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{1..m}. T x \\<le> makespan T &&&\n    \\<exists>x\\<in>{1..m}. T x = makespan T", "using f_Max\\<^sub>0_correct m_gt_0"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..?m}. ?T x \\<le> f_Max\\<^sub>0 ?T ?m\n  0 < ?m \\<Longrightarrow>\n  \\<exists>x\\<in>{1..?m}. ?T x = f_Max\\<^sub>0 ?T ?m\n  0 < m\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{1..m}. T x \\<le> makespan T &&&\n    \\<exists>x\\<in>{1..m}. T x = makespan T", "by auto"], ["", "lemma lbE:\n  assumes \"lb T A j\"\n  shows \"\\<forall>x \\<in> {1..m}. \\<forall>y \\<in> {1..m}. x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\"\n        \"(\\<Union>x \\<in> {1..m}. A x) = {1..j}\"\n        \"\\<forall>x \\<in> {1..m}. (\\<Sum>y \\<in> A x. t y) = T x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{1..m}.\n       \\<forall>y\\<in>{1..m}.\n          x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {} &&&\n    \\<Union> (A ` {1..m}) = {1..j} &&&\n    \\<forall>x\\<in>{1..m}. sum t (A x) = T x", "using assms"], ["proof (prove)\nusing this:\n  lb T A j\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{1..m}.\n       \\<forall>y\\<in>{1..m}.\n          x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {} &&&\n    \\<Union> (A ` {1..m}) = {1..j} &&&\n    \\<forall>x\\<in>{1..m}. sum t (A x) = T x", "unfolding lb_def"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>{1..m}.\n      \\<forall>y\\<in>{1..m}.\n         x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}) \\<and>\n  \\<Union> (A ` {1..m}) = {1..j} \\<and>\n  (\\<forall>x\\<in>{1..m}. sum t (A x) = T x)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{1..m}.\n       \\<forall>y\\<in>{1..m}.\n          x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {} &&&\n    \\<Union> (A ` {1..m}) = {1..j} &&&\n    \\<forall>x\\<in>{1..m}. sum t (A x) = T x", "by blast+"], ["", "lemma lbI:\n  assumes \"\\<forall>x \\<in> {1..m}. \\<forall>y \\<in> {1..m}. x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\"\n          \"(\\<Union>x \\<in> {1..m}. A x) = {1..j}\"\n          \"\\<forall>x \\<in> {1..m}. (\\<Sum>y \\<in> A x. t y) = T x\"\n  shows \"lb T A j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lb T A j", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..m}.\n     \\<forall>y\\<in>{1..m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\n  \\<Union> (A ` {1..m}) = {1..j}\n  \\<forall>x\\<in>{1..m}. sum t (A x) = T x\n\ngoal (1 subgoal):\n 1. lb T A j", "unfolding lb_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..m}.\n     \\<forall>y\\<in>{1..m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\n  \\<Union> (A ` {1..m}) = {1..j}\n  \\<forall>x\\<in>{1..m}. sum t (A x) = T x\n\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>{1..m}.\n        \\<forall>y\\<in>{1..m}.\n           x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}) \\<and>\n    \\<Union> (A ` {1..m}) = {1..j} \\<and>\n    (\\<forall>x\\<in>{1..m}. sum t (A x) = T x)", "by blast"], ["", "lemma A_lb_finite [simp]:\n  assumes \"lb T A j\" \"x \\<in> {1..m}\"\n  shows \"finite (A x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (A x)", "by (metis lbE(2) assms finite_UN finite_atLeastAtMost)"], ["", "text \\<open>If \\<open>A x\\<close> is pairwise disjoint for all \\<open>x \\<in> {1..m}\\<close>, then the the sum over the sums of the\n      individual \\<open>A x\\<close> is equal to the sum over the union of all \\<open>A x\\<close>.\\<close>"], ["", "lemma sum_sum_eq_sum_Un:\n  fixes A :: \"nat \\<Rightarrow> nat set\"\n  assumes \"\\<forall>x \\<in> {1..m}. \\<forall>y \\<in> {1..m}. x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\"\n      and \"\\<forall>x \\<in> {1..m}. finite (A x)\"\n  shows \"(\\<Sum>x \\<in> {1..m}. (\\<Sum>y \\<in> A x. t y)) = (\\<Sum>x \\<in> (\\<Union>y \\<in> {1..m}. A y). t x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x = 1..m. sum t (A x)) = sum t (\\<Union> (A ` {1..m}))", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..m}.\n     \\<forall>y\\<in>{1..m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\n  \\<forall>x\\<in>{1..m}. finite (A x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x = 1..m. sum t (A x)) = sum t (\\<Union> (A ` {1..m}))", "proof (induction m)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x\\<in>{1..0}.\n                \\<forall>y\\<in>{1..0}.\n                   x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {};\n     \\<forall>x\\<in>{1..0}. finite (A x)\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>x = 1..0. sum t (A x)) =\n                      sum t (\\<Union> (A ` {1..0}))\n 2. \\<And>m.\n       \\<lbrakk>\\<lbrakk>\\<forall>x\\<in>{1..m}.\n                            \\<forall>y\\<in>{1..m}.\n                               x \\<noteq> y \\<longrightarrow>\n                               A x \\<inter> A y = {};\n                 \\<forall>x\\<in>{1..m}. finite (A x)\\<rbrakk>\n                \\<Longrightarrow> (\\<Sum>x = 1..m. sum t (A x)) =\n                                  sum t (\\<Union> (A ` {1..m}));\n        \\<forall>x\\<in>{1..Suc m}.\n           \\<forall>y\\<in>{1..Suc m}.\n              x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {};\n        \\<forall>x\\<in>{1..Suc m}. finite (A x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x = 1..Suc m. sum t (A x)) =\n                         sum t (\\<Union> (A ` {1..Suc m}))", "case (Suc m)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>x\\<in>{1..m}.\n              \\<forall>y\\<in>{1..m}.\n                 x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {};\n   \\<forall>x\\<in>{1..m}. finite (A x)\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x = 1..m. sum t (A x)) =\n                    sum t (\\<Union> (A ` {1..m}))\n  \\<forall>x\\<in>{1..Suc m}.\n     \\<forall>y\\<in>{1..Suc m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\n  \\<forall>x\\<in>{1..Suc m}. finite (A x)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x\\<in>{1..0}.\n                \\<forall>y\\<in>{1..0}.\n                   x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {};\n     \\<forall>x\\<in>{1..0}. finite (A x)\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>x = 1..0. sum t (A x)) =\n                      sum t (\\<Union> (A ` {1..0}))\n 2. \\<And>m.\n       \\<lbrakk>\\<lbrakk>\\<forall>x\\<in>{1..m}.\n                            \\<forall>y\\<in>{1..m}.\n                               x \\<noteq> y \\<longrightarrow>\n                               A x \\<inter> A y = {};\n                 \\<forall>x\\<in>{1..m}. finite (A x)\\<rbrakk>\n                \\<Longrightarrow> (\\<Sum>x = 1..m. sum t (A x)) =\n                                  sum t (\\<Union> (A ` {1..m}));\n        \\<forall>x\\<in>{1..Suc m}.\n           \\<forall>y\\<in>{1..Suc m}.\n              x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {};\n        \\<forall>x\\<in>{1..Suc m}. finite (A x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x = 1..Suc m. sum t (A x)) =\n                         sum t (\\<Union> (A ` {1..Suc m}))", "have FINITE: \"finite (\\<Union>x \\<in> {1..m}. A x)\" \"finite (A (Suc m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (\\<Union> (A ` {1..m})) &&& finite (A (Suc m))", "using Suc.prems(2)"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..Suc m}. finite (A x)\n\ngoal (1 subgoal):\n 1. finite (\\<Union> (A ` {1..m})) &&& finite (A (Suc m))", "by auto"], ["proof (state)\nthis:\n  finite (\\<Union> (A ` {1..m}))\n  finite (A (Suc m))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x\\<in>{1..0}.\n                \\<forall>y\\<in>{1..0}.\n                   x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {};\n     \\<forall>x\\<in>{1..0}. finite (A x)\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>x = 1..0. sum t (A x)) =\n                      sum t (\\<Union> (A ` {1..0}))\n 2. \\<And>m.\n       \\<lbrakk>\\<lbrakk>\\<forall>x\\<in>{1..m}.\n                            \\<forall>y\\<in>{1..m}.\n                               x \\<noteq> y \\<longrightarrow>\n                               A x \\<inter> A y = {};\n                 \\<forall>x\\<in>{1..m}. finite (A x)\\<rbrakk>\n                \\<Longrightarrow> (\\<Sum>x = 1..m. sum t (A x)) =\n                                  sum t (\\<Union> (A ` {1..m}));\n        \\<forall>x\\<in>{1..Suc m}.\n           \\<forall>y\\<in>{1..Suc m}.\n              x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {};\n        \\<forall>x\\<in>{1..Suc m}. finite (A x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x = 1..Suc m. sum t (A x)) =\n                         sum t (\\<Union> (A ` {1..Suc m}))", "have \"\\<forall>x \\<in> {1..m}. A x \\<inter> A (Suc m) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{1..m}. A x \\<inter> A (Suc m) = {}", "using Suc.prems(1)"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..Suc m}.\n     \\<forall>y\\<in>{1..Suc m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{1..m}. A x \\<inter> A (Suc m) = {}", "by simp"], ["proof (state)\nthis:\n  \\<forall>x\\<in>{1..m}. A x \\<inter> A (Suc m) = {}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x\\<in>{1..0}.\n                \\<forall>y\\<in>{1..0}.\n                   x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {};\n     \\<forall>x\\<in>{1..0}. finite (A x)\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>x = 1..0. sum t (A x)) =\n                      sum t (\\<Union> (A ` {1..0}))\n 2. \\<And>m.\n       \\<lbrakk>\\<lbrakk>\\<forall>x\\<in>{1..m}.\n                            \\<forall>y\\<in>{1..m}.\n                               x \\<noteq> y \\<longrightarrow>\n                               A x \\<inter> A y = {};\n                 \\<forall>x\\<in>{1..m}. finite (A x)\\<rbrakk>\n                \\<Longrightarrow> (\\<Sum>x = 1..m. sum t (A x)) =\n                                  sum t (\\<Union> (A ` {1..m}));\n        \\<forall>x\\<in>{1..Suc m}.\n           \\<forall>y\\<in>{1..Suc m}.\n              x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {};\n        \\<forall>x\\<in>{1..Suc m}. finite (A x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x = 1..Suc m. sum t (A x)) =\n                         sum t (\\<Union> (A ` {1..Suc m}))", "then"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>{1..m}. A x \\<inter> A (Suc m) = {}", "have DISJNT: \"(\\<Union>x \\<in> {1..m}. A x) \\<inter> (A (Suc m)) = {}\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..m}. A x \\<inter> A (Suc m) = {}\n\ngoal (1 subgoal):\n 1. \\<Union> (A ` {1..m}) \\<inter> A (Suc m) = {}", "using Union_disjoint"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..m}. A x \\<inter> A (Suc m) = {}\n  (\\<Union> ?C \\<inter> ?A = {}) = (\\<forall>B\\<in>?C. B \\<inter> ?A = {})\n\ngoal (1 subgoal):\n 1. \\<Union> (A ` {1..m}) \\<inter> A (Suc m) = {}", "by blast"], ["proof (state)\nthis:\n  \\<Union> (A ` {1..m}) \\<inter> A (Suc m) = {}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x\\<in>{1..0}.\n                \\<forall>y\\<in>{1..0}.\n                   x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {};\n     \\<forall>x\\<in>{1..0}. finite (A x)\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>x = 1..0. sum t (A x)) =\n                      sum t (\\<Union> (A ` {1..0}))\n 2. \\<And>m.\n       \\<lbrakk>\\<lbrakk>\\<forall>x\\<in>{1..m}.\n                            \\<forall>y\\<in>{1..m}.\n                               x \\<noteq> y \\<longrightarrow>\n                               A x \\<inter> A y = {};\n                 \\<forall>x\\<in>{1..m}. finite (A x)\\<rbrakk>\n                \\<Longrightarrow> (\\<Sum>x = 1..m. sum t (A x)) =\n                                  sum t (\\<Union> (A ` {1..m}));\n        \\<forall>x\\<in>{1..Suc m}.\n           \\<forall>y\\<in>{1..Suc m}.\n              x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {};\n        \\<forall>x\\<in>{1..Suc m}. finite (A x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x = 1..Suc m. sum t (A x)) =\n                         sum t (\\<Union> (A ` {1..Suc m}))", "have \"(\\<Sum>x \\<in> (\\<Union>y \\<in> {1..m}. A y). t x) + (\\<Sum>x \\<in> A (Suc m). t x)\n      = (\\<Sum>x \\<in> ((\\<Union>y \\<in> {1..m}. A y) \\<union> A (Suc m)). t x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum t (\\<Union> (A ` {1..m})) + sum t (A (Suc m)) =\n    sum t (\\<Union> (A ` {1..m}) \\<union> A (Suc m))", "using sum.union_disjoint[OF FINITE DISJNT, symmetric]"], ["proof (prove)\nusing this:\n  sum ?g (\\<Union> (A ` {1..m})) + sum ?g (A (Suc m)) =\n  sum ?g (\\<Union> (A ` {1..m}) \\<union> A (Suc m))\n\ngoal (1 subgoal):\n 1. sum t (\\<Union> (A ` {1..m})) + sum t (A (Suc m)) =\n    sum t (\\<Union> (A ` {1..m}) \\<union> A (Suc m))", "."], ["proof (state)\nthis:\n  sum t (\\<Union> (A ` {1..m})) + sum t (A (Suc m)) =\n  sum t (\\<Union> (A ` {1..m}) \\<union> A (Suc m))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x\\<in>{1..0}.\n                \\<forall>y\\<in>{1..0}.\n                   x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {};\n     \\<forall>x\\<in>{1..0}. finite (A x)\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>x = 1..0. sum t (A x)) =\n                      sum t (\\<Union> (A ` {1..0}))\n 2. \\<And>m.\n       \\<lbrakk>\\<lbrakk>\\<forall>x\\<in>{1..m}.\n                            \\<forall>y\\<in>{1..m}.\n                               x \\<noteq> y \\<longrightarrow>\n                               A x \\<inter> A y = {};\n                 \\<forall>x\\<in>{1..m}. finite (A x)\\<rbrakk>\n                \\<Longrightarrow> (\\<Sum>x = 1..m. sum t (A x)) =\n                                  sum t (\\<Union> (A ` {1..m}));\n        \\<forall>x\\<in>{1..Suc m}.\n           \\<forall>y\\<in>{1..Suc m}.\n              x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {};\n        \\<forall>x\\<in>{1..Suc m}. finite (A x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x = 1..Suc m. sum t (A x)) =\n                         sum t (\\<Union> (A ` {1..Suc m}))", "also"], ["proof (state)\nthis:\n  sum t (\\<Union> (A ` {1..m})) + sum t (A (Suc m)) =\n  sum t (\\<Union> (A ` {1..m}) \\<union> A (Suc m))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x\\<in>{1..0}.\n                \\<forall>y\\<in>{1..0}.\n                   x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {};\n     \\<forall>x\\<in>{1..0}. finite (A x)\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>x = 1..0. sum t (A x)) =\n                      sum t (\\<Union> (A ` {1..0}))\n 2. \\<And>m.\n       \\<lbrakk>\\<lbrakk>\\<forall>x\\<in>{1..m}.\n                            \\<forall>y\\<in>{1..m}.\n                               x \\<noteq> y \\<longrightarrow>\n                               A x \\<inter> A y = {};\n                 \\<forall>x\\<in>{1..m}. finite (A x)\\<rbrakk>\n                \\<Longrightarrow> (\\<Sum>x = 1..m. sum t (A x)) =\n                                  sum t (\\<Union> (A ` {1..m}));\n        \\<forall>x\\<in>{1..Suc m}.\n           \\<forall>y\\<in>{1..Suc m}.\n              x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {};\n        \\<forall>x\\<in>{1..Suc m}. finite (A x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x = 1..Suc m. sum t (A x)) =\n                         sum t (\\<Union> (A ` {1..Suc m}))", "have \"... = (\\<Sum>x \\<in> (\\<Union>y \\<in> {1..Suc m}. A y). t x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum t (\\<Union> (A ` {1..m}) \\<union> A (Suc m)) =\n    sum t (\\<Union> (A ` {1..Suc m}))", "by (metis UN_insert image_Suc_lessThan image_insert inf_sup_aci(5) lessThan_Suc)"], ["proof (state)\nthis:\n  sum t (\\<Union> (A ` {1..m}) \\<union> A (Suc m)) =\n  sum t (\\<Union> (A ` {1..Suc m}))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x\\<in>{1..0}.\n                \\<forall>y\\<in>{1..0}.\n                   x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {};\n     \\<forall>x\\<in>{1..0}. finite (A x)\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>x = 1..0. sum t (A x)) =\n                      sum t (\\<Union> (A ` {1..0}))\n 2. \\<And>m.\n       \\<lbrakk>\\<lbrakk>\\<forall>x\\<in>{1..m}.\n                            \\<forall>y\\<in>{1..m}.\n                               x \\<noteq> y \\<longrightarrow>\n                               A x \\<inter> A y = {};\n                 \\<forall>x\\<in>{1..m}. finite (A x)\\<rbrakk>\n                \\<Longrightarrow> (\\<Sum>x = 1..m. sum t (A x)) =\n                                  sum t (\\<Union> (A ` {1..m}));\n        \\<forall>x\\<in>{1..Suc m}.\n           \\<forall>y\\<in>{1..Suc m}.\n              x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {};\n        \\<forall>x\\<in>{1..Suc m}. finite (A x)\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x = 1..Suc m. sum t (A x)) =\n                         sum t (\\<Union> (A ` {1..Suc m}))", "finally"], ["proof (chain)\npicking this:\n  sum t (\\<Union> (A ` {1..m})) + sum t (A (Suc m)) =\n  sum t (\\<Union> (A ` {1..Suc m}))", "show ?case"], ["proof (prove)\nusing this:\n  sum t (\\<Union> (A ` {1..m})) + sum t (A (Suc m)) =\n  sum t (\\<Union> (A ` {1..Suc m}))\n\ngoal (1 subgoal):\n 1. (\\<Sum>x = 1..Suc m. sum t (A x)) = sum t (\\<Union> (A ` {1..Suc m}))", "using Suc"], ["proof (prove)\nusing this:\n  sum t (\\<Union> (A ` {1..m})) + sum t (A (Suc m)) =\n  sum t (\\<Union> (A ` {1..Suc m}))\n  \\<lbrakk>\\<forall>x\\<in>{1..m}.\n              \\<forall>y\\<in>{1..m}.\n                 x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {};\n   \\<forall>x\\<in>{1..m}. finite (A x)\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x = 1..m. sum t (A x)) =\n                    sum t (\\<Union> (A ` {1..m}))\n  \\<forall>x\\<in>{1..Suc m}.\n     \\<forall>y\\<in>{1..Suc m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\n  \\<forall>x\\<in>{1..Suc m}. finite (A x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x = 1..Suc m. sum t (A x)) = sum t (\\<Union> (A ` {1..Suc m}))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>x = 1..Suc m. sum t (A x)) = sum t (\\<Union> (A ` {1..Suc m}))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>{1..0}.\n                \\<forall>y\\<in>{1..0}.\n                   x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {};\n     \\<forall>x\\<in>{1..0}. finite (A x)\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>x = 1..0. sum t (A x)) =\n                      sum t (\\<Union> (A ` {1..0}))", "qed simp"], ["", "text \\<open>If \\<open>T\\<close> and \\<open>A\\<close> are a correct load balancing for \\<open>j\\<close> jobs and \\<open>m\\<close> machines, \n      then the sum of the loads has to be equal to the sum of the processing times of the jobs\\<close>"], ["", "lemma lb_impl_job_sum:\n  assumes \"lb T A j\"\n  shows \"(\\<Sum>x \\<in> {1..m}. T x) = (\\<Sum>x \\<in> {1..j}. t x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum T {1..m} = sum t {1..j}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum T {1..m} = sum t {1..j}", "note lbrules = lbE[OF assms]"], ["proof (state)\nthis:\n  \\<forall>x\\<in>{1..m}.\n     \\<forall>y\\<in>{1..m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\n  \\<Union> (A ` {1..m}) = {1..j}\n  \\<forall>x\\<in>{1..m}. sum t (A x) = T x\n\ngoal (1 subgoal):\n 1. sum T {1..m} = sum t {1..j}", "from assms"], ["proof (chain)\npicking this:\n  lb T A j", "have FINITE: \"\\<forall>x \\<in> {1..m}. finite (A x)\""], ["proof (prove)\nusing this:\n  lb T A j\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{1..m}. finite (A x)", "by simp"], ["proof (state)\nthis:\n  \\<forall>x\\<in>{1..m}. finite (A x)\n\ngoal (1 subgoal):\n 1. sum T {1..m} = sum t {1..j}", "have \"(\\<Sum>x \\<in> {1..m}. T x) = (\\<Sum>x \\<in> {1..m}. (\\<Sum>y \\<in> A x. t y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum T {1..m} = (\\<Sum>x = 1..m. sum t (A x))", "using lbrules(3)"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..m}. sum t (A x) = T x\n\ngoal (1 subgoal):\n 1. sum T {1..m} = (\\<Sum>x = 1..m. sum t (A x))", "by simp"], ["proof (state)\nthis:\n  sum T {1..m} = (\\<Sum>x = 1..m. sum t (A x))\n\ngoal (1 subgoal):\n 1. sum T {1..m} = sum t {1..j}", "also"], ["proof (state)\nthis:\n  sum T {1..m} = (\\<Sum>x = 1..m. sum t (A x))\n\ngoal (1 subgoal):\n 1. sum T {1..m} = sum t {1..j}", "have \"... = (\\<Sum>x \\<in> {1..j}. t x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x = 1..m. sum t (A x)) = sum t {1..j}", "using sum_sum_eq_sum_Un[OF lbrules(1) FINITE]"], ["proof (prove)\nusing this:\n  (\\<Sum>x = 1..m. sum t (A x)) = sum t (\\<Union> (A ` {1..m}))\n\ngoal (1 subgoal):\n 1. (\\<Sum>x = 1..m. sum t (A x)) = sum t {1..j}", "unfolding lbrules(2)"], ["proof (prove)\nusing this:\n  (\\<Sum>x = 1..m. sum t (A x)) = sum t {1..j}\n\ngoal (1 subgoal):\n 1. (\\<Sum>x = 1..m. sum t (A x)) = sum t {1..j}", "."], ["proof (state)\nthis:\n  (\\<Sum>x = 1..m. sum t (A x)) = sum t {1..j}\n\ngoal (1 subgoal):\n 1. sum T {1..m} = sum t {1..j}", "finally"], ["proof (chain)\npicking this:\n  sum T {1..m} = sum t {1..j}", "show ?thesis"], ["proof (prove)\nusing this:\n  sum T {1..m} = sum t {1..j}\n\ngoal (1 subgoal):\n 1. sum T {1..m} = sum t {1..j}", "."], ["proof (state)\nthis:\n  sum T {1..m} = sum t {1..j}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Lower Bounds for the Makespan\\<close>"], ["", "text \\<open>If \\<open>T\\<close> and \\<open>A\\<close> are a correct load balancing for \\<open>j\\<close> jobs and \\<open>m\\<close> machines, then the processing time\n      of any job \\<open>x \\<in> {1..j}\\<close> is a lower bound for the load of some machine \\<open>y \\<in> {1..m}\\<close>\\<close>"], ["", "lemma job_lower_bound_machine:\n  assumes \"lb T A j\" \"x \\<in> {1..j}\"\n  shows \"\\<exists>y \\<in> {1..m}. t x \\<le> T y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>{1..m}. t x \\<le> T y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>{1..m}. t x \\<le> T y", "note lbrules = lbE[OF assms(1)]"], ["proof (state)\nthis:\n  \\<forall>x\\<in>{1..m}.\n     \\<forall>y\\<in>{1..m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\n  \\<Union> (A ` {1..m}) = {1..j}\n  \\<forall>x\\<in>{1..m}. sum t (A x) = T x\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>{1..m}. t x \\<le> T y", "have \"\\<exists>y \\<in> {1..m}. x \\<in> A y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>{1..m}. x \\<in> A y", "using lbrules(2) assms(2)"], ["proof (prove)\nusing this:\n  \\<Union> (A ` {1..m}) = {1..j}\n  x \\<in> {1..j}\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>{1..m}. x \\<in> A y", "by blast"], ["proof (state)\nthis:\n  \\<exists>y\\<in>{1..m}. x \\<in> A y\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>{1..m}. t x \\<le> T y", "then"], ["proof (chain)\npicking this:\n  \\<exists>y\\<in>{1..m}. x \\<in> A y", "obtain y where y_def: \"y \\<in> {1..m}\" \"x \\<in> A y\""], ["proof (prove)\nusing this:\n  \\<exists>y\\<in>{1..m}. x \\<in> A y\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> {1..m}; x \\<in> A y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  y \\<in> {1..m}\n  x \\<in> A y\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>{1..m}. t x \\<le> T y", "moreover"], ["proof (state)\nthis:\n  y \\<in> {1..m}\n  x \\<in> A y\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>{1..m}. t x \\<le> T y", "have \"finite (A y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (A y)", "using assms(1) y_def(1)"], ["proof (prove)\nusing this:\n  lb T A j\n  y \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. finite (A y)", "by simp"], ["proof (state)\nthis:\n  finite (A y)\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>{1..m}. t x \\<le> T y", "ultimately"], ["proof (chain)\npicking this:\n  y \\<in> {1..m}\n  x \\<in> A y\n  finite (A y)", "have \"t x \\<le> (\\<Sum>x \\<in> A y. t x)\""], ["proof (prove)\nusing this:\n  y \\<in> {1..m}\n  x \\<in> A y\n  finite (A y)\n\ngoal (1 subgoal):\n 1. t x \\<le> sum t (A y)", "using lbrules(1) member_le_sum"], ["proof (prove)\nusing this:\n  y \\<in> {1..m}\n  x \\<in> A y\n  finite (A y)\n  \\<forall>x\\<in>{1..m}.\n     \\<forall>y\\<in>{1..m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\n  \\<lbrakk>?i \\<in> ?A;\n   \\<And>x. x \\<in> ?A - {?i} \\<Longrightarrow> (0::?'b) \\<le> ?f x;\n   finite ?A\\<rbrakk>\n  \\<Longrightarrow> ?f ?i \\<le> sum ?f ?A\n\ngoal (1 subgoal):\n 1. t x \\<le> sum t (A y)", "by fast"], ["proof (state)\nthis:\n  t x \\<le> sum t (A y)\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>{1..m}. t x \\<le> T y", "also"], ["proof (state)\nthis:\n  t x \\<le> sum t (A y)\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>{1..m}. t x \\<le> T y", "have \"... = T y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum t (A y) = T y", "using lbrules(3) y_def(1)"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..m}. sum t (A x) = T x\n  y \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. sum t (A y) = T y", "by blast"], ["proof (state)\nthis:\n  sum t (A y) = T y\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>{1..m}. t x \\<le> T y", "finally"], ["proof (chain)\npicking this:\n  t x \\<le> T y", "show ?thesis"], ["proof (prove)\nusing this:\n  t x \\<le> T y\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>{1..m}. t x \\<le> T y", "using y_def(1)"], ["proof (prove)\nusing this:\n  t x \\<le> T y\n  y \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>{1..m}. t x \\<le> T y", "by blast"], ["proof (state)\nthis:\n  \\<exists>y\\<in>{1..m}. t x \\<le> T y\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>As the load of any machine is a lower bound for the makespan, the processing time \n      of any job \\<open>x \\<in> {1..j}\\<close> has to also be a lower bound for the makespan.\n      Follows from @{thm [source] job_lower_bound_machine} and @{thm [source] makespan_correct}.\\<close>"], ["", "lemma job_lower_bound_makespan:\n  assumes \"lb T A j\" \"x \\<in> {1..j}\"\n  shows \"t x \\<le> makespan T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t x \\<le> makespan T", "by (meson job_lower_bound_machine[OF assms] makespan_correct(1) le_trans)"], ["", "text \\<open>The makespan over \\<open>j\\<close> jobs is a lower bound for the makespan of any correct load balancing for \\<open>j\\<close> jobs.\\<close>"], ["", "lemma max_job_lower_bound_makespan:\n  assumes \"lb T A j\"\n  shows \"Max\\<^sub>0 (t ` {1..j}) \\<le> makespan T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max\\<^sub>0 (t ` {1..j}) \\<le> makespan T", "using job_lower_bound_makespan[OF assms]"], ["proof (prove)\nusing this:\n  ?x \\<in> {1..j} \\<Longrightarrow> t ?x \\<le> makespan T\n\ngoal (1 subgoal):\n 1. Max\\<^sub>0 (t ` {1..j}) \\<le> makespan T", "by fastforce"], ["", "lemma job_dist_lower_bound_makespan:\n  assumes \"lb T A j\"\n  shows \"(\\<Sum>x \\<in> {1..j}. t x) / m \\<le> makespan T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (sum t {1..j}) / real m \\<le> real (makespan T)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real (sum t {1..j}) / real m \\<le> real (makespan T)", "have \"(\\<Sum>x \\<in> {1..j}. t x) \\<le> m * makespan T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum t {1..j} \\<le> m * makespan T", "using assms lb_impl_job_sum[symmetric]\n      and sum_le_card_Max[of \"{1..m}\"] m_gt_0"], ["proof (prove)\nusing this:\n  lb T A j\n  lb ?T ?A ?j \\<Longrightarrow> sum t {1..?j} = sum ?T {1..m}\n  \\<lbrakk>finite {1..m}; {1..m} \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> sum ?f {1..m} \\<le> card {1..m} * Max (?f ` {1..m})\n  0 < m\n\ngoal (1 subgoal):\n 1. sum t {1..j} \\<le> m * makespan T", "by (simp add: makespan_def')"], ["proof (state)\nthis:\n  sum t {1..j} \\<le> m * makespan T\n\ngoal (1 subgoal):\n 1. real (sum t {1..j}) / real m \\<le> real (makespan T)", "then"], ["proof (chain)\npicking this:\n  sum t {1..j} \\<le> m * makespan T", "have \"real (\\<Sum>x \\<in> {1..j}. t x) \\<le> real m * real (makespan T)\""], ["proof (prove)\nusing this:\n  sum t {1..j} \\<le> m * makespan T\n\ngoal (1 subgoal):\n 1. real (sum t {1..j}) \\<le> real m * real (makespan T)", "using of_nat_mono"], ["proof (prove)\nusing this:\n  sum t {1..j} \\<le> m * makespan T\n  ?i \\<le> ?j \\<Longrightarrow> of_nat ?i \\<le> of_nat ?j\n\ngoal (1 subgoal):\n 1. real (sum t {1..j}) \\<le> real m * real (makespan T)", "by fastforce"], ["proof (state)\nthis:\n  real (sum t {1..j}) \\<le> real m * real (makespan T)\n\ngoal (1 subgoal):\n 1. real (sum t {1..j}) / real m \\<le> real (makespan T)", "then"], ["proof (chain)\npicking this:\n  real (sum t {1..j}) \\<le> real m * real (makespan T)", "show ?thesis"], ["proof (prove)\nusing this:\n  real (sum t {1..j}) \\<le> real m * real (makespan T)\n\ngoal (1 subgoal):\n 1. real (sum t {1..j}) / real m \\<le> real (makespan T)", "by (simp add: field_simps m_gt_0)"], ["proof (state)\nthis:\n  real (sum t {1..j}) / real m \\<le> real (makespan T)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The Greedy Approximation Algorithm\\<close>"], ["", "text \\<open>This function will perform a linear scan from \\<open>k \\<in> {1..m}\\<close> and return the index of the machine with minimum load assuming \\<open>m > 0\\<close>\\<close>"], ["", "fun min\\<^sub>k :: \"(nat \\<Rightarrow> nat) \\<Rightarrow> nat \\<Rightarrow> nat\" where\n  \"min\\<^sub>k T 0 = 1\"\n| \"min\\<^sub>k T (Suc x) =\n   (let k = min\\<^sub>k T x\n    in if T (Suc x) < T k then (Suc x) else k)\""], ["", "lemma min_correct:\n  \"\\<forall>x \\<in> {1..m}. T (min\\<^sub>k T m) \\<le> T x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{1..m}. T (min\\<^sub>k T m) \\<le> T x", "by (induction m) (auto simp: Let_def le_Suc_eq, force)"], ["", "lemma min_in_range:\n  \"k > 0 \\<Longrightarrow> (min\\<^sub>k T k) \\<in> {1..k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow> min\\<^sub>k T k \\<in> {1..k}", "by (induction k) (auto simp: Let_def, force+)"], ["", "lemma add_job:\n  assumes \"lb T A j\" \"x \\<in> {1..m}\"\n  shows \"lb (T (x := T x + t (Suc j))) (A (x := A x \\<union> {Suc j})) (Suc j)\"\n    (is \\<open>lb ?T ?A _\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "note lbrules = lbE[OF assms(1)]\n\n  \\<comment> \\<open>Rule 1: @{term ?A} pairwise disjoint\\<close>"], ["proof (state)\nthis:\n  \\<forall>x\\<in>{1..m}.\n     \\<forall>y\\<in>{1..m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\n  \\<Union> (A ` {1..m}) = {1..j}\n  \\<forall>x\\<in>{1..m}. sum t (A x) = T x\n\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "have NOTIN: \"\\<forall>i \\<in> {1..m}. Suc j \\<notin> A i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{1..m}. Suc j \\<notin> A i", "using lbrules(2) assms(2)"], ["proof (prove)\nusing this:\n  \\<Union> (A ` {1..m}) = {1..j}\n  x \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{1..m}. Suc j \\<notin> A i", "by force"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{1..m}. Suc j \\<notin> A i\n\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "with lbrules(1)"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>{1..m}.\n     \\<forall>y\\<in>{1..m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\n  \\<forall>i\\<in>{1..m}. Suc j \\<notin> A i", "have \"\\<forall>i \\<in> {1..m}. i \\<noteq> x \\<longrightarrow> A i \\<inter> (A x \\<union> {Suc j}) = {}\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..m}.\n     \\<forall>y\\<in>{1..m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\n  \\<forall>i\\<in>{1..m}. Suc j \\<notin> A i\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{1..m}.\n       i \\<noteq> x \\<longrightarrow>\n       A i \\<inter> (A x \\<union> {Suc j}) = {}", "using assms(2)"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..m}.\n     \\<forall>y\\<in>{1..m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\n  \\<forall>i\\<in>{1..m}. Suc j \\<notin> A i\n  x \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{1..m}.\n       i \\<noteq> x \\<longrightarrow>\n       A i \\<inter> (A x \\<union> {Suc j}) = {}", "by blast"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{1..m}.\n     i \\<noteq> x \\<longrightarrow> A i \\<inter> (A x \\<union> {Suc j}) = {}\n\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "then"], ["proof (chain)\npicking this:\n  \\<forall>i\\<in>{1..m}.\n     i \\<noteq> x \\<longrightarrow> A i \\<inter> (A x \\<union> {Suc j}) = {}", "have 1: \"\\<forall>x \\<in> {1..m}. \\<forall>y \\<in> {1..m}. x \\<noteq> y \\<longrightarrow> ?A x \\<inter> ?A y = {}\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{1..m}.\n     i \\<noteq> x \\<longrightarrow> A i \\<inter> (A x \\<union> {Suc j}) = {}\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>{1..m}.\n       \\<forall>y\\<in>{1..m}.\n          xa \\<noteq> y \\<longrightarrow>\n          (A(x := A x \\<union> {Suc j})) xa \\<inter>\n          (A(x := A x \\<union> {Suc j})) y =\n          {}", "using lbrules(1)"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{1..m}.\n     i \\<noteq> x \\<longrightarrow> A i \\<inter> (A x \\<union> {Suc j}) = {}\n  \\<forall>x\\<in>{1..m}.\n     \\<forall>y\\<in>{1..m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>{1..m}.\n       \\<forall>y\\<in>{1..m}.\n          xa \\<noteq> y \\<longrightarrow>\n          (A(x := A x \\<union> {Suc j})) xa \\<inter>\n          (A(x := A x \\<union> {Suc j})) y =\n          {}", "by simp\n\n  \\<comment> \\<open>Rule 2: @{term ?A} contains all jobs\\<close>"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>{1..m}.\n     \\<forall>y\\<in>{1..m}.\n        xa \\<noteq> y \\<longrightarrow>\n        (A(x := A x \\<union> {Suc j})) xa \\<inter>\n        (A(x := A x \\<union> {Suc j})) y =\n        {}\n\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "have \"(\\<Union>y \\<in> {1..m}. ?A y) = (\\<Union>y \\<in> {1..m}. A y) \\<union> {Suc j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (A(x := A x \\<union> {Suc j}) ` {1..m}) =\n    \\<Union> (A ` {1..m}) \\<union> {Suc j}", "using UNION_fun_upd assms(2)"], ["proof (prove)\nusing this:\n  \\<Union> (?A(?i := ?B) ` ?J) =\n  \\<Union> (?A ` (?J - {?i})) \\<union> (if ?i \\<in> ?J then ?B else {})\n  x \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. \\<Union> (A(x := A x \\<union> {Suc j}) ` {1..m}) =\n    \\<Union> (A ` {1..m}) \\<union> {Suc j}", "by auto"], ["proof (state)\nthis:\n  \\<Union> (A(x := A x \\<union> {Suc j}) ` {1..m}) =\n  \\<Union> (A ` {1..m}) \\<union> {Suc j}\n\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "also"], ["proof (state)\nthis:\n  \\<Union> (A(x := A x \\<union> {Suc j}) ` {1..m}) =\n  \\<Union> (A ` {1..m}) \\<union> {Suc j}\n\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "have \"... = {1..Suc j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (A ` {1..m}) \\<union> {Suc j} = {1..Suc j}", "unfolding lbrules(2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {1..j} \\<union> {Suc j} = {1..Suc j}", "by auto"], ["proof (state)\nthis:\n  \\<Union> (A ` {1..m}) \\<union> {Suc j} = {1..Suc j}\n\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "finally"], ["proof (chain)\npicking this:\n  \\<Union> (A(x := A x \\<union> {Suc j}) ` {1..m}) = {1..Suc j}", "have 2: \"(\\<Union>y \\<in> {1..m}. ?A y) = {1..Suc j}\""], ["proof (prove)\nusing this:\n  \\<Union> (A(x := A x \\<union> {Suc j}) ` {1..m}) = {1..Suc j}\n\ngoal (1 subgoal):\n 1. \\<Union> (A(x := A x \\<union> {Suc j}) ` {1..m}) = {1..Suc j}", ".\n\n  \\<comment> \\<open>Rule 3: @{term ?A} sums to @{term ?T}\\<close>"], ["proof (state)\nthis:\n  \\<Union> (A(x := A x \\<union> {Suc j}) ` {1..m}) = {1..Suc j}\n\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "have \"(\\<Sum>i \\<in> ?A x. t i) = (\\<Sum>i \\<in> A x \\<union> {Suc j}. t i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum t ((A(x := A x \\<union> {Suc j})) x) = sum t (A x \\<union> {Suc j})", "by simp"], ["proof (state)\nthis:\n  sum t ((A(x := A x \\<union> {Suc j})) x) = sum t (A x \\<union> {Suc j})\n\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "moreover"], ["proof (state)\nthis:\n  sum t ((A(x := A x \\<union> {Suc j})) x) = sum t (A x \\<union> {Suc j})\n\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "have \"A x \\<inter> {Suc j} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A x \\<inter> {Suc j} = {}", "using NOTIN assms(2)"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{1..m}. Suc j \\<notin> A i\n  x \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. A x \\<inter> {Suc j} = {}", "by blast"], ["proof (state)\nthis:\n  A x \\<inter> {Suc j} = {}\n\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "moreover"], ["proof (state)\nthis:\n  A x \\<inter> {Suc j} = {}\n\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "have \"finite (A x)\" \"finite {Suc j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (A x) &&& finite {Suc j}", "using assms"], ["proof (prove)\nusing this:\n  lb T A j\n  x \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. finite (A x) &&& finite {Suc j}", "by simp+"], ["proof (state)\nthis:\n  finite (A x)\n  finite {Suc j}\n\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "ultimately"], ["proof (chain)\npicking this:\n  sum t ((A(x := A x \\<union> {Suc j})) x) = sum t (A x \\<union> {Suc j})\n  A x \\<inter> {Suc j} = {}\n  finite (A x)\n  finite {Suc j}", "have \"(\\<Sum>i \\<in> ?A x. t i) = (\\<Sum>i \\<in> A x. t i) + (\\<Sum>i \\<in> {Suc j}. t i)\""], ["proof (prove)\nusing this:\n  sum t ((A(x := A x \\<union> {Suc j})) x) = sum t (A x \\<union> {Suc j})\n  A x \\<inter> {Suc j} = {}\n  finite (A x)\n  finite {Suc j}\n\ngoal (1 subgoal):\n 1. sum t ((A(x := A x \\<union> {Suc j})) x) = sum t (A x) + sum t {Suc j}", "using sum.union_disjoint"], ["proof (prove)\nusing this:\n  sum t ((A(x := A x \\<union> {Suc j})) x) = sum t (A x \\<union> {Suc j})\n  A x \\<inter> {Suc j} = {}\n  finite (A x)\n  finite {Suc j}\n  \\<lbrakk>finite ?A; finite ?B; ?A \\<inter> ?B = {}\\<rbrakk>\n  \\<Longrightarrow> sum ?g (?A \\<union> ?B) = sum ?g ?A + sum ?g ?B\n\ngoal (1 subgoal):\n 1. sum t ((A(x := A x \\<union> {Suc j})) x) = sum t (A x) + sum t {Suc j}", "by simp"], ["proof (state)\nthis:\n  sum t ((A(x := A x \\<union> {Suc j})) x) = sum t (A x) + sum t {Suc j}\n\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "also"], ["proof (state)\nthis:\n  sum t ((A(x := A x \\<union> {Suc j})) x) = sum t (A x) + sum t {Suc j}\n\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "have \"... = T x + t (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum t (A x) + sum t {Suc j} = T x + t (Suc j)", "using lbrules(3) assms(2)"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..m}. sum t (A x) = T x\n  x \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. sum t (A x) + sum t {Suc j} = T x + t (Suc j)", "by simp"], ["proof (state)\nthis:\n  sum t (A x) + sum t {Suc j} = T x + t (Suc j)\n\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "finally"], ["proof (chain)\npicking this:\n  sum t ((A(x := A x \\<union> {Suc j})) x) = T x + t (Suc j)", "have \"(\\<Sum>i \\<in> ?A x. t i) = ?T x\""], ["proof (prove)\nusing this:\n  sum t ((A(x := A x \\<union> {Suc j})) x) = T x + t (Suc j)\n\ngoal (1 subgoal):\n 1. sum t ((A(x := A x \\<union> {Suc j})) x) = (T(x := T x + t (Suc j))) x", "by simp"], ["proof (state)\nthis:\n  sum t ((A(x := A x \\<union> {Suc j})) x) = (T(x := T x + t (Suc j))) x\n\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "then"], ["proof (chain)\npicking this:\n  sum t ((A(x := A x \\<union> {Suc j})) x) = (T(x := T x + t (Suc j))) x", "have 3: \"\\<forall>i \\<in> {1..m}. (\\<Sum>j \\<in> ?A i. t j) = ?T i\""], ["proof (prove)\nusing this:\n  sum t ((A(x := A x \\<union> {Suc j})) x) = (T(x := T x + t (Suc j))) x\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{1..m}.\n       sum t ((A(x := A x \\<union> {Suc j})) i) =\n       (T(x := T x + t (Suc j))) i", "using lbrules(3) assms(2)"], ["proof (prove)\nusing this:\n  sum t ((A(x := A x \\<union> {Suc j})) x) = (T(x := T x + t (Suc j))) x\n  \\<forall>x\\<in>{1..m}. sum t (A x) = T x\n  x \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{1..m}.\n       sum t ((A(x := A x \\<union> {Suc j})) i) =\n       (T(x := T x + t (Suc j))) i", "by simp"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{1..m}.\n     sum t ((A(x := A x \\<union> {Suc j})) i) = (T(x := T x + t (Suc j))) i\n\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "from lbI[OF 1 2 3]"], ["proof (chain)\npicking this:\n  lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "show ?thesis"], ["proof (prove)\nusing this:\n  lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)\n\ngoal (1 subgoal):\n 1. lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)", "."], ["proof (state)\nthis:\n  lb (T(x := T x + t (Suc j))) (A(x := A x \\<union> {Suc j})) (Suc j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma makespan_mono:\n  \"y \\<le> T x \\<Longrightarrow> makespan (T (x := y)) \\<le> makespan T\"\n  \"T x \\<le> y \\<Longrightarrow> makespan T \\<le> makespan (T (x := y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<le> T x \\<Longrightarrow>\n     makespan (T(x := y)) \\<le> makespan T) &&&\n    (T x \\<le> y \\<Longrightarrow> makespan T \\<le> makespan (T(x := y)))", "using f_Max\\<^sub>0_mono"], ["proof (prove)\nusing this:\n  ?y \\<le> ?T ?x \\<Longrightarrow>\n  f_Max\\<^sub>0 (?T(?x := ?y)) ?m \\<le> f_Max\\<^sub>0 ?T ?m\n  ?T ?x \\<le> ?y \\<Longrightarrow>\n  f_Max\\<^sub>0 ?T ?m \\<le> f_Max\\<^sub>0 (?T(?x := ?y)) ?m\n\ngoal (1 subgoal):\n 1. (y \\<le> T x \\<Longrightarrow>\n     makespan (T(x := y)) \\<le> makespan T) &&&\n    (T x \\<le> y \\<Longrightarrow> makespan T \\<le> makespan (T(x := y)))", "by auto"], ["", "lemma smaller_optimum:\n  assumes \"lb T A (Suc j)\"\n  shows \"\\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "note lbrules = lbE[OF assms]"], ["proof (state)\nthis:\n  \\<forall>x\\<in>{1..m}.\n     \\<forall>y\\<in>{1..m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\n  \\<Union> (A ` {1..m}) = {1..Suc j}\n  \\<forall>x\\<in>{1..m}. sum t (A x) = T x\n\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "have \"\\<exists>x \\<in> {1..m}. Suc j \\<in> A x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..m}. Suc j \\<in> A x", "using lbrules(2)"], ["proof (prove)\nusing this:\n  \\<Union> (A ` {1..m}) = {1..Suc j}\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..m}. Suc j \\<in> A x", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<in>{1..m}. Suc j \\<in> A x\n\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "then"], ["proof (chain)\npicking this:\n  \\<exists>x\\<in>{1..m}. Suc j \\<in> A x", "obtain x where x_def: \"x \\<in> {1..m}\" \"Suc j \\<in> A x\""], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>{1..m}. Suc j \\<in> A x\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> {1..m}; Suc j \\<in> A x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  x \\<in> {1..m}\n  Suc j \\<in> A x\n\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "let ?T = \"T (x := T x - t (Suc j))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "let ?A = \"A (x := A x - {Suc j})\"\n\n  \\<comment> \\<open>Rule 1: @{term ?A} pairwise disjoint\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "from lbrules(1)"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>{1..m}.\n     \\<forall>y\\<in>{1..m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}", "have \"\\<forall>i \\<in> {1..m}. i \\<noteq> x \\<longrightarrow> A i \\<inter> (A x - {Suc j}) = {}\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..m}.\n     \\<forall>y\\<in>{1..m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{1..m}.\n       i \\<noteq> x \\<longrightarrow> A i \\<inter> (A x - {Suc j}) = {}", "using x_def(1)"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..m}.\n     \\<forall>y\\<in>{1..m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\n  x \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{1..m}.\n       i \\<noteq> x \\<longrightarrow> A i \\<inter> (A x - {Suc j}) = {}", "by blast"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{1..m}.\n     i \\<noteq> x \\<longrightarrow> A i \\<inter> (A x - {Suc j}) = {}\n\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "then"], ["proof (chain)\npicking this:\n  \\<forall>i\\<in>{1..m}.\n     i \\<noteq> x \\<longrightarrow> A i \\<inter> (A x - {Suc j}) = {}", "have 1: \"\\<forall>x \\<in> {1..m}. \\<forall>y \\<in> {1..m}. x \\<noteq> y \\<longrightarrow> ?A x \\<inter> ?A y = {}\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{1..m}.\n     i \\<noteq> x \\<longrightarrow> A i \\<inter> (A x - {Suc j}) = {}\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>{1..m}.\n       \\<forall>y\\<in>{1..m}.\n          xa \\<noteq> y \\<longrightarrow>\n          (A(x := A x - {Suc j})) xa \\<inter> (A(x := A x - {Suc j})) y = {}", "using lbrules(1)"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{1..m}.\n     i \\<noteq> x \\<longrightarrow> A i \\<inter> (A x - {Suc j}) = {}\n  \\<forall>x\\<in>{1..m}.\n     \\<forall>y\\<in>{1..m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>{1..m}.\n       \\<forall>y\\<in>{1..m}.\n          xa \\<noteq> y \\<longrightarrow>\n          (A(x := A x - {Suc j})) xa \\<inter> (A(x := A x - {Suc j})) y = {}", "by auto\n\n  \\<comment> \\<open>Rule 2: @{term ?A} contains all jobs\\<close>"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>{1..m}.\n     \\<forall>y\\<in>{1..m}.\n        xa \\<noteq> y \\<longrightarrow>\n        (A(x := A x - {Suc j})) xa \\<inter> (A(x := A x - {Suc j})) y = {}\n\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "have NOTIN: \"\\<forall>i \\<in> {1..m}. i \\<noteq> x \\<longrightarrow> Suc j \\<notin> A i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{1..m}. i \\<noteq> x \\<longrightarrow> Suc j \\<notin> A i", "using lbrules(1) x_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..m}.\n     \\<forall>y\\<in>{1..m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\n  x \\<in> {1..m}\n  Suc j \\<in> A x\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{1..m}. i \\<noteq> x \\<longrightarrow> Suc j \\<notin> A i", "by blast"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{1..m}. i \\<noteq> x \\<longrightarrow> Suc j \\<notin> A i\n\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "then"], ["proof (chain)\npicking this:\n  \\<forall>i\\<in>{1..m}. i \\<noteq> x \\<longrightarrow> Suc j \\<notin> A i", "have \"(\\<Union>y \\<in> {1..m}. ?A y) = (\\<Union>y \\<in> {1..m}. A y) - {Suc j}\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{1..m}. i \\<noteq> x \\<longrightarrow> Suc j \\<notin> A i\n\ngoal (1 subgoal):\n 1. \\<Union> (A(x := A x - {Suc j}) ` {1..m}) =\n    \\<Union> (A ` {1..m}) - {Suc j}", "using UNION_fun_upd x_def"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{1..m}. i \\<noteq> x \\<longrightarrow> Suc j \\<notin> A i\n  \\<Union> (?A(?i := ?B) ` ?J) =\n  \\<Union> (?A ` (?J - {?i})) \\<union> (if ?i \\<in> ?J then ?B else {})\n  x \\<in> {1..m}\n  Suc j \\<in> A x\n\ngoal (1 subgoal):\n 1. \\<Union> (A(x := A x - {Suc j}) ` {1..m}) =\n    \\<Union> (A ` {1..m}) - {Suc j}", "by auto"], ["proof (state)\nthis:\n  \\<Union> (A(x := A x - {Suc j}) ` {1..m}) =\n  \\<Union> (A ` {1..m}) - {Suc j}\n\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "also"], ["proof (state)\nthis:\n  \\<Union> (A(x := A x - {Suc j}) ` {1..m}) =\n  \\<Union> (A ` {1..m}) - {Suc j}\n\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "have \"... = {1..j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (A ` {1..m}) - {Suc j} = {1..j}", "unfolding lbrules(2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {1..Suc j} - {Suc j} = {1..j}", "by auto"], ["proof (state)\nthis:\n  \\<Union> (A ` {1..m}) - {Suc j} = {1..j}\n\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "finally"], ["proof (chain)\npicking this:\n  \\<Union> (A(x := A x - {Suc j}) ` {1..m}) = {1..j}", "have 2: \"(\\<Union>y \\<in> {1..m}. ?A y) = {1..j}\""], ["proof (prove)\nusing this:\n  \\<Union> (A(x := A x - {Suc j}) ` {1..m}) = {1..j}\n\ngoal (1 subgoal):\n 1. \\<Union> (A(x := A x - {Suc j}) ` {1..m}) = {1..j}", ".\n\n  \\<comment> \\<open>Rule 3: @{term ?A} sums to @{term ?T}\\<close>"], ["proof (state)\nthis:\n  \\<Union> (A(x := A x - {Suc j}) ` {1..m}) = {1..j}\n\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "have \"(\\<Sum>i \\<in> A x - {Suc j}. t i) = (\\<Sum>i \\<in> A x. t i) - t (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum t (A x - {Suc j}) = sum t (A x) - t (Suc j)", "by (simp add: sum_diff1_nat x_def(2))"], ["proof (state)\nthis:\n  sum t (A x - {Suc j}) = sum t (A x) - t (Suc j)\n\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "also"], ["proof (state)\nthis:\n  sum t (A x - {Suc j}) = sum t (A x) - t (Suc j)\n\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "have \"... = T x - t (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum t (A x) - t (Suc j) = T x - t (Suc j)", "using lbrules(3) x_def(1)"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..m}. sum t (A x) = T x\n  x \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. sum t (A x) - t (Suc j) = T x - t (Suc j)", "by simp"], ["proof (state)\nthis:\n  sum t (A x) - t (Suc j) = T x - t (Suc j)\n\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "finally"], ["proof (chain)\npicking this:\n  sum t (A x - {Suc j}) = T x - t (Suc j)", "have \"(\\<Sum>i \\<in> ?A x. t i) = ?T x\""], ["proof (prove)\nusing this:\n  sum t (A x - {Suc j}) = T x - t (Suc j)\n\ngoal (1 subgoal):\n 1. sum t ((A(x := A x - {Suc j})) x) = (T(x := T x - t (Suc j))) x", "by simp"], ["proof (state)\nthis:\n  sum t ((A(x := A x - {Suc j})) x) = (T(x := T x - t (Suc j))) x\n\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "then"], ["proof (chain)\npicking this:\n  sum t ((A(x := A x - {Suc j})) x) = (T(x := T x - t (Suc j))) x", "have 3: \"\\<forall>i \\<in> {1..m}. (\\<Sum>j \\<in> ?A i. t j) = ?T i\""], ["proof (prove)\nusing this:\n  sum t ((A(x := A x - {Suc j})) x) = (T(x := T x - t (Suc j))) x\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{1..m}.\n       sum t ((A(x := A x - {Suc j})) i) = (T(x := T x - t (Suc j))) i", "using lbrules(3) x_def(1)"], ["proof (prove)\nusing this:\n  sum t ((A(x := A x - {Suc j})) x) = (T(x := T x - t (Suc j))) x\n  \\<forall>x\\<in>{1..m}. sum t (A x) = T x\n  x \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{1..m}.\n       sum t ((A(x := A x - {Suc j})) i) = (T(x := T x - t (Suc j))) i", "by simp\n\n  \\<comment> \\<open>@{term makespan} is not larger\\<close>"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{1..m}.\n     sum t ((A(x := A x - {Suc j})) i) = (T(x := T x - t (Suc j))) i\n\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "have \"lb ?T ?A j \\<and> makespan ?T \\<le> makespan T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lb (T(x := T x - t (Suc j))) (A(x := A x - {Suc j})) j \\<and>\n    makespan (T(x := T x - t (Suc j))) \\<le> makespan T", "using lbI[OF 1 2 3] makespan_mono(1)"], ["proof (prove)\nusing this:\n  lb (T(x := T x - t (Suc j))) (A(x := A x - {Suc j})) j\n  ?y \\<le> ?T ?x \\<Longrightarrow> makespan (?T(?x := ?y)) \\<le> makespan ?T\n\ngoal (1 subgoal):\n 1. lb (T(x := T x - t (Suc j))) (A(x := A x - {Suc j})) j \\<and>\n    makespan (T(x := T x - t (Suc j))) \\<le> makespan T", "by force"], ["proof (state)\nthis:\n  lb (T(x := T x - t (Suc j))) (A(x := A x - {Suc j})) j \\<and>\n  makespan (T(x := T x - t (Suc j))) \\<le> makespan T\n\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "then"], ["proof (chain)\npicking this:\n  lb (T(x := T x - t (Suc j))) (A(x := A x - {Suc j})) j \\<and>\n  makespan (T(x := T x - t (Suc j))) \\<le> makespan T", "show ?thesis"], ["proof (prove)\nusing this:\n  lb (T(x := T x - t (Suc j))) (A(x := A x - {Suc j})) j \\<and>\n  makespan (T(x := T x - t (Suc j))) \\<le> makespan T\n\ngoal (1 subgoal):\n 1. \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T", "by blast"], ["proof (state)\nthis:\n  \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If the processing time \\<open>y\\<close> does not contribute to the makespan, we can ignore it.\\<close>"], ["", "lemma remove_small_job:\n  assumes \"makespan (T (x := T x + y)) \\<noteq> T x + y\"\n  shows   \"makespan (T (x := T x + y)) = makespan T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. makespan (T(x := T x + y)) = makespan T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. makespan (T(x := T x + y)) = makespan T", "let ?T = \"T (x := T x + y)\""], ["proof (state)\ngoal (1 subgoal):\n 1. makespan (T(x := T x + y)) = makespan T", "have NOT_X: \"makespan ?T \\<noteq> ?T x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. makespan (T(x := T x + y)) \\<noteq> (T(x := T x + y)) x", "using assms(1)"], ["proof (prove)\nusing this:\n  makespan (T(x := T x + y)) \\<noteq> T x + y\n\ngoal (1 subgoal):\n 1. makespan (T(x := T x + y)) \\<noteq> (T(x := T x + y)) x", "by simp"], ["proof (state)\nthis:\n  makespan (T(x := T x + y)) \\<noteq> (T(x := T x + y)) x\n\ngoal (1 subgoal):\n 1. makespan (T(x := T x + y)) = makespan T", "then"], ["proof (chain)\npicking this:\n  makespan (T(x := T x + y)) \\<noteq> (T(x := T x + y)) x", "have \"\\<exists>i \\<in> {1..m}. makespan ?T = ?T i \\<and> i \\<noteq> x\""], ["proof (prove)\nusing this:\n  makespan (T(x := T x + y)) \\<noteq> (T(x := T x + y)) x\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>{1..m}.\n       makespan (T(x := T x + y)) = (T(x := T x + y)) i \\<and> i \\<noteq> x", "using makespan_correct(2)"], ["proof (prove)\nusing this:\n  makespan (T(x := T x + y)) \\<noteq> (T(x := T x + y)) x\n  \\<exists>x\\<in>{1..m}. ?T x = makespan ?T\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>{1..m}.\n       makespan (T(x := T x + y)) = (T(x := T x + y)) i \\<and> i \\<noteq> x", "by metis"], ["proof (state)\nthis:\n  \\<exists>i\\<in>{1..m}.\n     makespan (T(x := T x + y)) = (T(x := T x + y)) i \\<and> i \\<noteq> x\n\ngoal (1 subgoal):\n 1. makespan (T(x := T x + y)) = makespan T", "then"], ["proof (chain)\npicking this:\n  \\<exists>i\\<in>{1..m}.\n     makespan (T(x := T x + y)) = (T(x := T x + y)) i \\<and> i \\<noteq> x", "obtain i where i_def: \"i \\<in> {1..m}\" \"makespan ?T = ?T i\" \"i \\<noteq> x\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<in>{1..m}.\n     makespan (T(x := T x + y)) = (T(x := T x + y)) i \\<and> i \\<noteq> x\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i \\<in> {1..m};\n         makespan (T(x := T x + y)) = (T(x := T x + y)) i;\n         i \\<noteq> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i \\<in> {1..m}\n  makespan (T(x := T x + y)) = (T(x := T x + y)) i\n  i \\<noteq> x\n\ngoal (1 subgoal):\n 1. makespan (T(x := T x + y)) = makespan T", "then"], ["proof (chain)\npicking this:\n  i \\<in> {1..m}\n  makespan (T(x := T x + y)) = (T(x := T x + y)) i\n  i \\<noteq> x", "have \"?T i = T i\""], ["proof (prove)\nusing this:\n  i \\<in> {1..m}\n  makespan (T(x := T x + y)) = (T(x := T x + y)) i\n  i \\<noteq> x\n\ngoal (1 subgoal):\n 1. (T(x := T x + y)) i = T i", "using NOT_X"], ["proof (prove)\nusing this:\n  i \\<in> {1..m}\n  makespan (T(x := T x + y)) = (T(x := T x + y)) i\n  i \\<noteq> x\n  makespan (T(x := T x + y)) \\<noteq> (T(x := T x + y)) x\n\ngoal (1 subgoal):\n 1. (T(x := T x + y)) i = T i", "by simp"], ["proof (state)\nthis:\n  (T(x := T x + y)) i = T i\n\ngoal (1 subgoal):\n 1. makespan (T(x := T x + y)) = makespan T", "moreover"], ["proof (state)\nthis:\n  (T(x := T x + y)) i = T i\n\ngoal (1 subgoal):\n 1. makespan (T(x := T x + y)) = makespan T", "from this"], ["proof (chain)\npicking this:\n  (T(x := T x + y)) i = T i", "have \"makespan T = T i\""], ["proof (prove)\nusing this:\n  (T(x := T x + y)) i = T i\n\ngoal (1 subgoal):\n 1. makespan T = T i", "by (metis i_def(1,2) antisym_conv le_add1 makespan_mono(2) makespan_correct(1))"], ["proof (state)\nthis:\n  makespan T = T i\n\ngoal (1 subgoal):\n 1. makespan (T(x := T x + y)) = makespan T", "ultimately"], ["proof (chain)\npicking this:\n  (T(x := T x + y)) i = T i\n  makespan T = T i", "show ?thesis"], ["proof (prove)\nusing this:\n  (T(x := T x + y)) i = T i\n  makespan T = T i\n\ngoal (1 subgoal):\n 1. makespan (T(x := T x + y)) = makespan T", "using i_def(2)"], ["proof (prove)\nusing this:\n  (T(x := T x + y)) i = T i\n  makespan T = T i\n  makespan (T(x := T x + y)) = (T(x := T x + y)) i\n\ngoal (1 subgoal):\n 1. makespan (T(x := T x + y)) = makespan T", "by simp"], ["proof (state)\nthis:\n  makespan (T(x := T x + y)) = makespan T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma greedy_makespan_no_jobs [simp]:\n  \"makespan (\\<lambda>_. 0) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. makespan (\\<lambda>_. 0) = 0", "using m_gt_0"], ["proof (prove)\nusing this:\n  0 < m\n\ngoal (1 subgoal):\n 1. makespan (\\<lambda>_. 0) = 0", "by (simp add: makespan_def')"], ["", "lemma min_avg: \"m * T (min\\<^sub>k T m) \\<le> (\\<Sum>i \\<in> {1..m}. T i)\"\n           (is \\<open>_ * ?T \\<le> ?S\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. m * T (min\\<^sub>k T m) \\<le> sum T {1..m}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. m * T (min\\<^sub>k T m) \\<le> sum T {1..m}", "have \"(\\<Sum>_ \\<in> {1..m}. ?T) \\<le> ?S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>_ = 1..m. T (min\\<^sub>k T m)) \\<le> sum T {1..m}", "using sum_mono[of \\<open>{1..m}\\<close> \\<open>\\<lambda>_. ?T\\<close> T]\n      and min_correct"], ["proof (prove)\nusing this:\n  (\\<And>i.\n      i \\<in> {1..m} \\<Longrightarrow>\n      T (min\\<^sub>k T m) \\<le> T i) \\<Longrightarrow>\n  (\\<Sum>i = 1..m. T (min\\<^sub>k T m)) \\<le> sum T {1..m}\n  \\<forall>x\\<in>{1..m}. ?T (min\\<^sub>k ?T m) \\<le> ?T x\n\ngoal (1 subgoal):\n 1. (\\<Sum>_ = 1..m. T (min\\<^sub>k T m)) \\<le> sum T {1..m}", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>_ = 1..m. T (min\\<^sub>k T m)) \\<le> sum T {1..m}\n\ngoal (1 subgoal):\n 1. m * T (min\\<^sub>k T m) \\<le> sum T {1..m}", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>_ = 1..m. T (min\\<^sub>k T m)) \\<le> sum T {1..m}", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>_ = 1..m. T (min\\<^sub>k T m)) \\<le> sum T {1..m}\n\ngoal (1 subgoal):\n 1. m * T (min\\<^sub>k T m) \\<le> sum T {1..m}", "by simp"], ["proof (state)\nthis:\n  m * T (min\\<^sub>k T m) \\<le> sum T {1..m}\n\ngoal:\nNo subgoals!", "qed"], ["", "definition inv\\<^sub>1 :: \"(nat \\<Rightarrow> nat) \\<Rightarrow> (nat \\<Rightarrow> nat set) \\<Rightarrow> nat \\<Rightarrow> bool\" where\n  \"inv\\<^sub>1 T A j = (lb T A j \\<and> j \\<le> n \\<and> (\\<forall>T' A'. lb T' A' j \\<longrightarrow> makespan T \\<le> 2 * makespan T'))\""], ["", "lemma inv\\<^sub>1E:\n  assumes \"inv\\<^sub>1 T A j\"\n  shows \"lb T A j\" \"j \\<le> n\"\n        \"lb T' A' j \\<Longrightarrow> makespan T \\<le> 2 * makespan T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lb T A j &&&\n    j \\<le> n &&&\n    (lb T' A' j \\<Longrightarrow> makespan T \\<le> 2 * makespan T')", "using assms"], ["proof (prove)\nusing this:\n  inv\\<^sub>1 T A j\n\ngoal (1 subgoal):\n 1. lb T A j &&&\n    j \\<le> n &&&\n    (lb T' A' j \\<Longrightarrow> makespan T \\<le> 2 * makespan T')", "unfolding inv\\<^sub>1_def"], ["proof (prove)\nusing this:\n  lb T A j \\<and>\n  j \\<le> n \\<and>\n  (\\<forall>T' A'.\n      lb T' A' j \\<longrightarrow> makespan T \\<le> 2 * makespan T')\n\ngoal (1 subgoal):\n 1. lb T A j &&&\n    j \\<le> n &&&\n    (lb T' A' j \\<Longrightarrow> makespan T \\<le> 2 * makespan T')", "by blast+"], ["", "lemma inv\\<^sub>1I:\n  assumes \"lb T A j\" \"j \\<le> n\" \"\\<forall>T' A'. lb T' A' j \\<longrightarrow> makespan T \\<le> 2 * makespan T'\"\n  shows \"inv\\<^sub>1 T A j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv\\<^sub>1 T A j", "using assms"], ["proof (prove)\nusing this:\n  lb T A j\n  j \\<le> n\n  \\<forall>T' A'.\n     lb T' A' j \\<longrightarrow> makespan T \\<le> 2 * makespan T'\n\ngoal (1 subgoal):\n 1. inv\\<^sub>1 T A j", "unfolding inv\\<^sub>1_def"], ["proof (prove)\nusing this:\n  lb T A j\n  j \\<le> n\n  \\<forall>T' A'.\n     lb T' A' j \\<longrightarrow> makespan T \\<le> 2 * makespan T'\n\ngoal (1 subgoal):\n 1. lb T A j \\<and>\n    j \\<le> n \\<and>\n    (\\<forall>T' A'.\n        lb T' A' j \\<longrightarrow> makespan T \\<le> 2 * makespan T')", "by blast"], ["", "lemma inv\\<^sub>1_step:\n  assumes \"inv\\<^sub>1 T A j\" \"j < n\"\n  shows \"inv\\<^sub>1 (T ((min\\<^sub>k T m) := T (min\\<^sub>k T m) + t (Suc j)))\n              (A ((min\\<^sub>k T m) := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\"\n    (is \\<open>inv\\<^sub>1 ?T ?A _\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. inv\\<^sub>1 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inv\\<^sub>1 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "note invrules = inv\\<^sub>1E[OF assms(1)]\n  \\<comment> \\<open>Greedy is correct\\<close>"], ["proof (state)\nthis:\n  lb T A j\n  j \\<le> n\n  lb ?T' ?A' j \\<Longrightarrow> makespan T \\<le> 2 * makespan ?T'\n\ngoal (1 subgoal):\n 1. inv\\<^sub>1 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "have LB: \"lb ?T ?A (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lb (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "using add_job[OF invrules(1) min_in_range[OF m_gt_0]]"], ["proof (prove)\nusing this:\n  lb (T(min\\<^sub>k ?T1 m := T (min\\<^sub>k ?T1 m) + t (Suc j)))\n   (A(min\\<^sub>k ?T1 m := A (min\\<^sub>k ?T1 m) \\<union> {Suc j})) (Suc j)\n\ngoal (1 subgoal):\n 1. lb (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "by blast\n  \\<comment> \\<open>Greedy maintains approximation factor\\<close>"], ["proof (state)\nthis:\n  lb (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n   (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n\ngoal (1 subgoal):\n 1. inv\\<^sub>1 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "have MK: \"\\<forall>T' A'. lb T' A' (Suc j) \\<longrightarrow> makespan ?T \\<le> 2 * makespan T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>T' A'.\n       lb T' A' (Suc j) \\<longrightarrow>\n       makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n       \\<le> 2 * makespan T'", "proof rule+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T' A'.\n       lb T' A' (Suc j) \\<Longrightarrow>\n       makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n       \\<le> 2 * makespan T'", "fix T\\<^sub>1 A\\<^sub>1"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T' A'.\n       lb T' A' (Suc j) \\<Longrightarrow>\n       makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n       \\<le> 2 * makespan T'", "assume \"lb T\\<^sub>1 A\\<^sub>1 (Suc j)\""], ["proof (state)\nthis:\n  lb T\\<^sub>1 A\\<^sub>1 (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>T' A'.\n       lb T' A' (Suc j) \\<Longrightarrow>\n       makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n       \\<le> 2 * makespan T'", "from smaller_optimum[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T\\<^sub>1", "obtain T\\<^sub>0 A\\<^sub>0 where \"lb T\\<^sub>0 A\\<^sub>0 j\" \"makespan T\\<^sub>0 \\<le> makespan T\\<^sub>1\""], ["proof (prove)\nusing this:\n  \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T\\<^sub>1\n\ngoal (1 subgoal):\n 1. (\\<And>T\\<^sub>0 A\\<^sub>0.\n        \\<lbrakk>lb T\\<^sub>0 A\\<^sub>0 j;\n         makespan T\\<^sub>0 \\<le> makespan T\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  lb T\\<^sub>0 A\\<^sub>0 j\n  makespan T\\<^sub>0 \\<le> makespan T\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<And>T' A'.\n       lb T' A' (Suc j) \\<Longrightarrow>\n       makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n       \\<le> 2 * makespan T'", "then"], ["proof (chain)\npicking this:\n  lb T\\<^sub>0 A\\<^sub>0 j\n  makespan T\\<^sub>0 \\<le> makespan T\\<^sub>1", "have IH: \"makespan T \\<le> 2 * makespan T\\<^sub>1\""], ["proof (prove)\nusing this:\n  lb T\\<^sub>0 A\\<^sub>0 j\n  makespan T\\<^sub>0 \\<le> makespan T\\<^sub>1\n\ngoal (1 subgoal):\n 1. makespan T \\<le> 2 * makespan T\\<^sub>1", "using invrules(3)"], ["proof (prove)\nusing this:\n  lb T\\<^sub>0 A\\<^sub>0 j\n  makespan T\\<^sub>0 \\<le> makespan T\\<^sub>1\n  lb ?T' ?A' j \\<Longrightarrow> makespan T \\<le> 2 * makespan ?T'\n\ngoal (1 subgoal):\n 1. makespan T \\<le> 2 * makespan T\\<^sub>1", "by force"], ["proof (state)\nthis:\n  makespan T \\<le> 2 * makespan T\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<And>T' A'.\n       lb T' A' (Suc j) \\<Longrightarrow>\n       makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n       \\<le> 2 * makespan T'", "show \"makespan ?T \\<le> 2 * makespan T\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1", "proof (cases \\<open>makespan ?T = T (min\\<^sub>k T m) + t (Suc j)\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1\n 2. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1", "case True"], ["proof (state)\nthis:\n  makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n  T (min\\<^sub>k T m) + t (Suc j)\n\ngoal (2 subgoals):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1\n 2. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1", "have \"m * T (min\\<^sub>k T m) \\<le> (\\<Sum>i \\<in> {1..m}. T i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m * T (min\\<^sub>k T m) \\<le> sum T {1..m}", "by (rule min_avg)"], ["proof (state)\nthis:\n  m * T (min\\<^sub>k T m) \\<le> sum T {1..m}\n\ngoal (2 subgoals):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1\n 2. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1", "also"], ["proof (state)\nthis:\n  m * T (min\\<^sub>k T m) \\<le> sum T {1..m}\n\ngoal (2 subgoals):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1\n 2. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1", "have \"... = (\\<Sum>i \\<in> {1..j}. t i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum T {1..m} = sum t {1..j}", "by (rule lb_impl_job_sum[OF invrules(1)])"], ["proof (state)\nthis:\n  sum T {1..m} = sum t {1..j}\n\ngoal (2 subgoals):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1\n 2. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1", "finally"], ["proof (chain)\npicking this:\n  m * T (min\\<^sub>k T m) \\<le> sum t {1..j}", "have \"real m * T (min\\<^sub>k T m) \\<le> (\\<Sum>i \\<in> {1..j}. t i)\""], ["proof (prove)\nusing this:\n  m * T (min\\<^sub>k T m) \\<le> sum t {1..j}\n\ngoal (1 subgoal):\n 1. real m * real (T (min\\<^sub>k T m)) \\<le> real (sum t {1..j})", "by (auto dest: of_nat_mono)"], ["proof (state)\nthis:\n  real m * real (T (min\\<^sub>k T m)) \\<le> real (sum t {1..j})\n\ngoal (2 subgoals):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1\n 2. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1", "with m_gt_0"], ["proof (chain)\npicking this:\n  0 < m\n  real m * real (T (min\\<^sub>k T m)) \\<le> real (sum t {1..j})", "have \"T (min\\<^sub>k T m) \\<le> (\\<Sum>i \\<in> {1..j}. t i) / m\""], ["proof (prove)\nusing this:\n  0 < m\n  real m * real (T (min\\<^sub>k T m)) \\<le> real (sum t {1..j})\n\ngoal (1 subgoal):\n 1. real (T (min\\<^sub>k T m)) \\<le> real (sum t {1..j}) / real m", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  real (T (min\\<^sub>k T m)) \\<le> real (sum t {1..j}) / real m\n\ngoal (2 subgoals):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1\n 2. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1", "then"], ["proof (chain)\npicking this:\n  real (T (min\\<^sub>k T m)) \\<le> real (sum t {1..j}) / real m", "have \"T (min\\<^sub>k T m) \\<le> makespan T\\<^sub>1\""], ["proof (prove)\nusing this:\n  real (T (min\\<^sub>k T m)) \\<le> real (sum t {1..j}) / real m\n\ngoal (1 subgoal):\n 1. T (min\\<^sub>k T m) \\<le> makespan T\\<^sub>1", "using job_dist_lower_bound_makespan[OF \\<open>lb T\\<^sub>0 A\\<^sub>0 j\\<close>] \n          and \\<open>makespan T\\<^sub>0 \\<le> makespan T\\<^sub>1\\<close>"], ["proof (prove)\nusing this:\n  real (T (min\\<^sub>k T m)) \\<le> real (sum t {1..j}) / real m\n  real (sum t {1..j}) / real m \\<le> real (makespan T\\<^sub>0)\n  makespan T\\<^sub>0 \\<le> makespan T\\<^sub>1\n\ngoal (1 subgoal):\n 1. T (min\\<^sub>k T m) \\<le> makespan T\\<^sub>1", "by linarith"], ["proof (state)\nthis:\n  T (min\\<^sub>k T m) \\<le> makespan T\\<^sub>1\n\ngoal (2 subgoals):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1\n 2. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1", "moreover"], ["proof (state)\nthis:\n  T (min\\<^sub>k T m) \\<le> makespan T\\<^sub>1\n\ngoal (2 subgoals):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1\n 2. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1", "have \"t (Suc j) \\<le> makespan T\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t (Suc j) \\<le> makespan T\\<^sub>1", "using job_lower_bound_makespan[OF \\<open>lb T\\<^sub>1 A\\<^sub>1 (Suc j)\\<close>]"], ["proof (prove)\nusing this:\n  ?x \\<in> {1..Suc j} \\<Longrightarrow> t ?x \\<le> makespan T\\<^sub>1\n\ngoal (1 subgoal):\n 1. t (Suc j) \\<le> makespan T\\<^sub>1", "by simp"], ["proof (state)\nthis:\n  t (Suc j) \\<le> makespan T\\<^sub>1\n\ngoal (2 subgoals):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1\n 2. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1", "ultimately"], ["proof (chain)\npicking this:\n  T (min\\<^sub>k T m) \\<le> makespan T\\<^sub>1\n  t (Suc j) \\<le> makespan T\\<^sub>1", "show ?thesis"], ["proof (prove)\nusing this:\n  T (min\\<^sub>k T m) \\<le> makespan T\\<^sub>1\n  t (Suc j) \\<le> makespan T\\<^sub>1\n\ngoal (1 subgoal):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1", "unfolding True"], ["proof (prove)\nusing this:\n  T (min\\<^sub>k T m) \\<le> makespan T\\<^sub>1\n  t (Suc j) \\<le> makespan T\\<^sub>1\n\ngoal (1 subgoal):\n 1. T (min\\<^sub>k T m) + t (Suc j) \\<le> 2 * makespan T\\<^sub>1", "by simp"], ["proof (state)\nthis:\n  makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n  \\<le> 2 * makespan T\\<^sub>1\n\ngoal (1 subgoal):\n 1. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1", "case False"], ["proof (state)\nthis:\n  makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n  T (min\\<^sub>k T m) + t (Suc j)\n\ngoal (1 subgoal):\n 1. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1", "using remove_small_job[OF False] IH"], ["proof (prove)\nusing this:\n  makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n  makespan T\n  makespan T \\<le> 2 * makespan T\\<^sub>1\n\ngoal (1 subgoal):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n    \\<le> 2 * makespan T\\<^sub>1", "by simp"], ["proof (state)\nthis:\n  makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n  \\<le> 2 * makespan T\\<^sub>1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n  \\<le> 2 * makespan T\\<^sub>1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>T' A'.\n     lb T' A' (Suc j) \\<longrightarrow>\n     makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     \\<le> 2 * makespan T'\n\ngoal (1 subgoal):\n 1. inv\\<^sub>1 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "from inv\\<^sub>1I[OF LB _ MK]"], ["proof (chain)\npicking this:\n  Suc j \\<le> n \\<Longrightarrow>\n  inv\\<^sub>1 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n   (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "show ?thesis"], ["proof (prove)\nusing this:\n  Suc j \\<le> n \\<Longrightarrow>\n  inv\\<^sub>1 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n   (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n\ngoal (1 subgoal):\n 1. inv\\<^sub>1 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "using assms(2)"], ["proof (prove)\nusing this:\n  Suc j \\<le> n \\<Longrightarrow>\n  inv\\<^sub>1 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n   (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n  j < n\n\ngoal (1 subgoal):\n 1. inv\\<^sub>1 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "by simp"], ["proof (state)\nthis:\n  inv\\<^sub>1 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n   (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma simple_greedy_approximation:\n\"VARS T A i j\n{True}\nT := (\\<lambda>_. 0);\nA := (\\<lambda>_. {});\nj := 0;\nWHILE j < n INV {inv\\<^sub>1 T A j} DO\n  i := min\\<^sub>k T m;\n  j := (Suc j);\n  A := A (i := A(i) \\<union> {j});\n  T := T (i := T(i) + t j)\nOD\n{lb T A n \\<and> (\\<forall>T' A'. lb T' A' n \\<longrightarrow> makespan T \\<le> 2 * makespan T')}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {True} \n     T := (\\<lambda>_. 0);\n     A := (\\<lambda>_. {});\n     j := 0;\n     WHILE j < n INV {inv\\<^sub>1 T A j}  VAR {\\<lambda>(T, A, i, j). 0} \n      DO i := min\\<^sub>k T m;\n         j := Suc j; A := A(i := A i \\<union> {j}); T := T(i := T i + t j) \n      OD \n     {lb T A n \\<and>\n      (\\<forall>T' A'.\n          lb T' A' n \\<longrightarrow> makespan T \\<le> 2 * makespan T')}", "proof (vcg, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>T A i j.\n       True \\<Longrightarrow> inv\\<^sub>1 (\\<lambda>_. 0) (\\<lambda>_. {}) 0\n 2. \\<And>T A i j.\n       inv\\<^sub>1 T A j \\<and> j < n \\<Longrightarrow>\n       inv\\<^sub>1 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n        (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n 3. \\<And>T A i j.\n       inv\\<^sub>1 T A j \\<and> \\<not> j < n \\<Longrightarrow>\n       lb T A n \\<and>\n       (\\<forall>T' A'.\n           lb T' A' n \\<longrightarrow> makespan T \\<le> 2 * makespan T')", "case (1 T A i j)"], ["proof (state)\nthis:\n  True\n\ngoal (3 subgoals):\n 1. \\<And>T A i j.\n       True \\<Longrightarrow> inv\\<^sub>1 (\\<lambda>_. 0) (\\<lambda>_. {}) 0\n 2. \\<And>T A i j.\n       inv\\<^sub>1 T A j \\<and> j < n \\<Longrightarrow>\n       inv\\<^sub>1 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n        (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n 3. \\<And>T A i j.\n       inv\\<^sub>1 T A j \\<and> \\<not> j < n \\<Longrightarrow>\n       lb T A n \\<and>\n       (\\<forall>T' A'.\n           lb T' A' n \\<longrightarrow> makespan T \\<le> 2 * makespan T')", "then"], ["proof (chain)\npicking this:\n  True", "show ?case"], ["proof (prove)\nusing this:\n  True\n\ngoal (1 subgoal):\n 1. inv\\<^sub>1 (\\<lambda>_. 0) (\\<lambda>_. {}) 0", "by (simp add: lb_def inv\\<^sub>1_def)"], ["proof (state)\nthis:\n  inv\\<^sub>1 (\\<lambda>_. 0) (\\<lambda>_. {}) 0\n\ngoal (2 subgoals):\n 1. \\<And>T A i j.\n       inv\\<^sub>1 T A j \\<and> j < n \\<Longrightarrow>\n       inv\\<^sub>1 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n        (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n 2. \\<And>T A i j.\n       inv\\<^sub>1 T A j \\<and> \\<not> j < n \\<Longrightarrow>\n       lb T A n \\<and>\n       (\\<forall>T' A'.\n           lb T' A' n \\<longrightarrow> makespan T \\<le> 2 * makespan T')", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>T A i j.\n       inv\\<^sub>1 T A j \\<and> j < n \\<Longrightarrow>\n       inv\\<^sub>1 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n        (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n 2. \\<And>T A i j.\n       inv\\<^sub>1 T A j \\<and> \\<not> j < n \\<Longrightarrow>\n       lb T A n \\<and>\n       (\\<forall>T' A'.\n           lb T' A' n \\<longrightarrow> makespan T \\<le> 2 * makespan T')", "case (2 T A i j)"], ["proof (state)\nthis:\n  inv\\<^sub>1 T A j \\<and> j < n\n\ngoal (2 subgoals):\n 1. \\<And>T A i j.\n       inv\\<^sub>1 T A j \\<and> j < n \\<Longrightarrow>\n       inv\\<^sub>1 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n        (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n 2. \\<And>T A i j.\n       inv\\<^sub>1 T A j \\<and> \\<not> j < n \\<Longrightarrow>\n       lb T A n \\<and>\n       (\\<forall>T' A'.\n           lb T' A' n \\<longrightarrow> makespan T \\<le> 2 * makespan T')", "then"], ["proof (chain)\npicking this:\n  inv\\<^sub>1 T A j \\<and> j < n", "show ?case"], ["proof (prove)\nusing this:\n  inv\\<^sub>1 T A j \\<and> j < n\n\ngoal (1 subgoal):\n 1. inv\\<^sub>1 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "using inv\\<^sub>1_step"], ["proof (prove)\nusing this:\n  inv\\<^sub>1 T A j \\<and> j < n\n  \\<lbrakk>inv\\<^sub>1 ?T ?A ?j; ?j < n\\<rbrakk>\n  \\<Longrightarrow> inv\\<^sub>1\n                     (?T(min\\<^sub>k ?T m :=\n                           ?T (min\\<^sub>k ?T m) + t (Suc ?j)))\n                     (?A(min\\<^sub>k ?T m :=\n                           ?A (min\\<^sub>k ?T m) \\<union> {Suc ?j}))\n                     (Suc ?j)\n\ngoal (1 subgoal):\n 1. inv\\<^sub>1 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "by simp"], ["proof (state)\nthis:\n  inv\\<^sub>1 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n   (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>T A i j.\n       inv\\<^sub>1 T A j \\<and> \\<not> j < n \\<Longrightarrow>\n       lb T A n \\<and>\n       (\\<forall>T' A'.\n           lb T' A' n \\<longrightarrow> makespan T \\<le> 2 * makespan T')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T A i j.\n       inv\\<^sub>1 T A j \\<and> \\<not> j < n \\<Longrightarrow>\n       lb T A n \\<and>\n       (\\<forall>T' A'.\n           lb T' A' n \\<longrightarrow> makespan T \\<le> 2 * makespan T')", "case (3 T A i j)"], ["proof (state)\nthis:\n  inv\\<^sub>1 T A j \\<and> \\<not> j < n\n\ngoal (1 subgoal):\n 1. \\<And>T A i j.\n       inv\\<^sub>1 T A j \\<and> \\<not> j < n \\<Longrightarrow>\n       lb T A n \\<and>\n       (\\<forall>T' A'.\n           lb T' A' n \\<longrightarrow> makespan T \\<le> 2 * makespan T')", "then"], ["proof (chain)\npicking this:\n  inv\\<^sub>1 T A j \\<and> \\<not> j < n", "show ?case"], ["proof (prove)\nusing this:\n  inv\\<^sub>1 T A j \\<and> \\<not> j < n\n\ngoal (1 subgoal):\n 1. lb T A n \\<and>\n    (\\<forall>T' A'.\n        lb T' A' n \\<longrightarrow> makespan T \\<le> 2 * makespan T')", "unfolding inv\\<^sub>1_def"], ["proof (prove)\nusing this:\n  (lb T A j \\<and>\n   j \\<le> n \\<and>\n   (\\<forall>T' A'.\n       lb T' A' j \\<longrightarrow>\n       makespan T \\<le> 2 * makespan T')) \\<and>\n  \\<not> j < n\n\ngoal (1 subgoal):\n 1. lb T A n \\<and>\n    (\\<forall>T' A'.\n        lb T' A' n \\<longrightarrow> makespan T \\<le> 2 * makespan T')", "by force"], ["proof (state)\nthis:\n  lb T A n \\<and>\n  (\\<forall>T' A'.\n      lb T' A' n \\<longrightarrow> makespan T \\<le> 2 * makespan T')\n\ngoal:\nNo subgoals!", "qed"], ["", "definition sorted :: \"nat \\<Rightarrow> bool\" where\n  \"sorted j = (\\<forall>x \\<in> {1..j}. \\<forall>y \\<in> {1..x}. t x \\<le> t y)\""], ["", "lemma sorted_smaller [simp]: \"\\<lbrakk> sorted j; j \\<ge> j' \\<rbrakk> \\<Longrightarrow> sorted j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sorted j; j' \\<le> j\\<rbrakk> \\<Longrightarrow> sorted j'", "unfolding sorted_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>{1..j}. \\<forall>y\\<in>{1..x}. t x \\<le> t y;\n     j' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>{1..j'}.\n                         \\<forall>y\\<in>{1..x}. t x \\<le> t y", "by simp"], ["", "lemma j_gt_m_pigeonhole:\n  assumes \"lb T A j\" \"j > m\"\n  shows \"\\<exists>x \\<in> {1..j}. \\<exists>y \\<in> {1..j}. \\<exists>z \\<in> {1..m}. x \\<noteq> y \\<and> x \\<in> A z \\<and> y \\<in> A z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..j}.\n       \\<exists>y\\<in>{1..j}.\n          \\<exists>z\\<in>{1..m}.\n             x \\<noteq> y \\<and> x \\<in> A z \\<and> y \\<in> A z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..j}.\n       \\<exists>y\\<in>{1..j}.\n          \\<exists>z\\<in>{1..m}.\n             x \\<noteq> y \\<and> x \\<in> A z \\<and> y \\<in> A z", "have \"\\<forall>x \\<in> {1..j}. \\<exists>y \\<in> {1..m}. x \\<in> A y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{1..j}. \\<exists>y\\<in>{1..m}. x \\<in> A y", "using lbE(2)[OF assms(1)]"], ["proof (prove)\nusing this:\n  \\<Union> (A ` {1..m}) = {1..j}\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{1..j}. \\<exists>y\\<in>{1..m}. x \\<in> A y", "by blast"], ["proof (state)\nthis:\n  \\<forall>x\\<in>{1..j}. \\<exists>y\\<in>{1..m}. x \\<in> A y\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..j}.\n       \\<exists>y\\<in>{1..j}.\n          \\<exists>z\\<in>{1..m}.\n             x \\<noteq> y \\<and> x \\<in> A z \\<and> y \\<in> A z", "then"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>{1..j}. \\<exists>y\\<in>{1..m}. x \\<in> A y", "have \"\\<exists>f. \\<forall>x \\<in> {1..j}. x \\<in> A (f x) \\<and> f x \\<in> {1..m}\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..j}. \\<exists>y\\<in>{1..m}. x \\<in> A y\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>x\\<in>{1..j}. x \\<in> A (f x) \\<and> f x \\<in> {1..m}", "by metis"], ["proof (state)\nthis:\n  \\<exists>f. \\<forall>x\\<in>{1..j}. x \\<in> A (f x) \\<and> f x \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..j}.\n       \\<exists>y\\<in>{1..j}.\n          \\<exists>z\\<in>{1..m}.\n             x \\<noteq> y \\<and> x \\<in> A z \\<and> y \\<in> A z", "then"], ["proof (chain)\npicking this:\n  \\<exists>f. \\<forall>x\\<in>{1..j}. x \\<in> A (f x) \\<and> f x \\<in> {1..m}", "obtain f where f_def: \"\\<forall>x \\<in> {1..j}. x \\<in> A (f x) \\<and> f x \\<in> {1..m}\""], ["proof (prove)\nusing this:\n  \\<exists>f. \\<forall>x\\<in>{1..j}. x \\<in> A (f x) \\<and> f x \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<forall>x\\<in>{1..j}.\n           x \\<in> A (f x) \\<and> f x \\<in> {1..m} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  \\<forall>x\\<in>{1..j}. x \\<in> A (f x) \\<and> f x \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..j}.\n       \\<exists>y\\<in>{1..j}.\n          \\<exists>z\\<in>{1..m}.\n             x \\<noteq> y \\<and> x \\<in> A z \\<and> y \\<in> A z", "then"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>{1..j}. x \\<in> A (f x) \\<and> f x \\<in> {1..m}", "have \"card (f ` {1..j}) \\<le> card {1..m}\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..j}. x \\<in> A (f x) \\<and> f x \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. card (f ` {1..j}) \\<le> card {1..m}", "by (meson card_mono finite_atLeastAtMost image_subset_iff)"], ["proof (state)\nthis:\n  card (f ` {1..j}) \\<le> card {1..m}\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..j}.\n       \\<exists>y\\<in>{1..j}.\n          \\<exists>z\\<in>{1..m}.\n             x \\<noteq> y \\<and> x \\<in> A z \\<and> y \\<in> A z", "also"], ["proof (state)\nthis:\n  card (f ` {1..j}) \\<le> card {1..m}\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..j}.\n       \\<exists>y\\<in>{1..j}.\n          \\<exists>z\\<in>{1..m}.\n             x \\<noteq> y \\<and> x \\<in> A z \\<and> y \\<in> A z", "have \"... < card {1..j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {1..m} < card {1..j}", "using assms(2)"], ["proof (prove)\nusing this:\n  m < j\n\ngoal (1 subgoal):\n 1. card {1..m} < card {1..j}", "by simp"], ["proof (state)\nthis:\n  card {1..m} < card {1..j}\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..j}.\n       \\<exists>y\\<in>{1..j}.\n          \\<exists>z\\<in>{1..m}.\n             x \\<noteq> y \\<and> x \\<in> A z \\<and> y \\<in> A z", "finally"], ["proof (chain)\npicking this:\n  card (f ` {1..j}) < card {1..j}", "have \"card (f ` {1..j}) < card {1..j}\""], ["proof (prove)\nusing this:\n  card (f ` {1..j}) < card {1..j}\n\ngoal (1 subgoal):\n 1. card (f ` {1..j}) < card {1..j}", "."], ["proof (state)\nthis:\n  card (f ` {1..j}) < card {1..j}\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..j}.\n       \\<exists>y\\<in>{1..j}.\n          \\<exists>z\\<in>{1..m}.\n             x \\<noteq> y \\<and> x \\<in> A z \\<and> y \\<in> A z", "then"], ["proof (chain)\npicking this:\n  card (f ` {1..j}) < card {1..j}", "have \"\\<not> inj_on f {1..j}\""], ["proof (prove)\nusing this:\n  card (f ` {1..j}) < card {1..j}\n\ngoal (1 subgoal):\n 1. \\<not> inj_on f {1..j}", "using pigeonhole"], ["proof (prove)\nusing this:\n  card (f ` {1..j}) < card {1..j}\n  card (?f ` ?A) < card ?A \\<Longrightarrow> \\<not> inj_on ?f ?A\n\ngoal (1 subgoal):\n 1. \\<not> inj_on f {1..j}", "by blast"], ["proof (state)\nthis:\n  \\<not> inj_on f {1..j}\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..j}.\n       \\<exists>y\\<in>{1..j}.\n          \\<exists>z\\<in>{1..m}.\n             x \\<noteq> y \\<and> x \\<in> A z \\<and> y \\<in> A z", "then"], ["proof (chain)\npicking this:\n  \\<not> inj_on f {1..j}", "have \"\\<exists>x \\<in> {1..j}. \\<exists>y \\<in> {1..j}. x \\<noteq> y \\<and> f x = f y\""], ["proof (prove)\nusing this:\n  \\<not> inj_on f {1..j}\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..j}.\n       \\<exists>y\\<in>{1..j}. x \\<noteq> y \\<and> f x = f y", "unfolding inj_on_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x\\<in>{1..j}.\n             \\<forall>y\\<in>{1..j}. f x = f y \\<longrightarrow> x = y)\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..j}.\n       \\<exists>y\\<in>{1..j}. x \\<noteq> y \\<and> f x = f y", "by blast"], ["proof (state)\nthis:\n  \\<exists>x\\<in>{1..j}.\n     \\<exists>y\\<in>{1..j}. x \\<noteq> y \\<and> f x = f y\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..j}.\n       \\<exists>y\\<in>{1..j}.\n          \\<exists>z\\<in>{1..m}.\n             x \\<noteq> y \\<and> x \\<in> A z \\<and> y \\<in> A z", "then"], ["proof (chain)\npicking this:\n  \\<exists>x\\<in>{1..j}.\n     \\<exists>y\\<in>{1..j}. x \\<noteq> y \\<and> f x = f y", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>{1..j}.\n     \\<exists>y\\<in>{1..j}. x \\<noteq> y \\<and> f x = f y\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..j}.\n       \\<exists>y\\<in>{1..j}.\n          \\<exists>z\\<in>{1..m}.\n             x \\<noteq> y \\<and> x \\<in> A z \\<and> y \\<in> A z", "using f_def"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>{1..j}.\n     \\<exists>y\\<in>{1..j}. x \\<noteq> y \\<and> f x = f y\n  \\<forall>x\\<in>{1..j}. x \\<in> A (f x) \\<and> f x \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..j}.\n       \\<exists>y\\<in>{1..j}.\n          \\<exists>z\\<in>{1..m}.\n             x \\<noteq> y \\<and> x \\<in> A z \\<and> y \\<in> A z", "by metis"], ["proof (state)\nthis:\n  \\<exists>x\\<in>{1..j}.\n     \\<exists>y\\<in>{1..j}.\n        \\<exists>z\\<in>{1..m}.\n           x \\<noteq> y \\<and> x \\<in> A z \\<and> y \\<in> A z\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If \\<open>T\\<close> and \\<open>A\\<close> are a correct load balancing for \\<open>j\\<close> jobs and \\<open>m\\<close> machines with \\<open>j > m\\<close>,\n      and the jobs are sorted in descending order, then there exists a machine \\<open>x \\<in> {1..m}\\<close>\n      whose load is at least twice as large as the processing time of job \\<open>j\\<close>.\\<close>"], ["", "lemma sorted_job_lower_bound_machine:\n  assumes \"lb T A j\" \"j > m\" \"sorted j\"\n  shows \"\\<exists>x \\<in> {1..m}. 2 * t j \\<le> T x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..m}. 2 * t j \\<le> T x", "proof -\n  \\<comment> \\<open>Step 1: Obtaining the jobs\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..m}. 2 * t j \\<le> T x", "note lbrules = lbE[OF assms(1)]"], ["proof (state)\nthis:\n  \\<forall>x\\<in>{1..m}.\n     \\<forall>y\\<in>{1..m}.\n        x \\<noteq> y \\<longrightarrow> A x \\<inter> A y = {}\n  \\<Union> (A ` {1..m}) = {1..j}\n  \\<forall>x\\<in>{1..m}. sum t (A x) = T x\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..m}. 2 * t j \\<le> T x", "obtain j\\<^sub>1 j\\<^sub>2 x where *:\n    \"j\\<^sub>1 \\<in> {1..j}\" \"j\\<^sub>2 \\<in> {1..j}\" \"x \\<in> {1..m}\" \"j\\<^sub>1 \\<noteq> j\\<^sub>2\" \"j\\<^sub>1 \\<in> A x\" \"j\\<^sub>2 \\<in> A x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>j\\<^sub>1 j\\<^sub>2 x.\n        \\<lbrakk>j\\<^sub>1 \\<in> {1..j}; j\\<^sub>2 \\<in> {1..j};\n         x \\<in> {1..m}; j\\<^sub>1 \\<noteq> j\\<^sub>2; j\\<^sub>1 \\<in> A x;\n         j\\<^sub>2 \\<in> A x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using j_gt_m_pigeonhole[OF assms(1,2)]"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>{1..j}.\n     \\<exists>y\\<in>{1..j}.\n        \\<exists>z\\<in>{1..m}.\n           x \\<noteq> y \\<and> x \\<in> A z \\<and> y \\<in> A z\n\ngoal (1 subgoal):\n 1. (\\<And>j\\<^sub>1 j\\<^sub>2 x.\n        \\<lbrakk>j\\<^sub>1 \\<in> {1..j}; j\\<^sub>2 \\<in> {1..j};\n         x \\<in> {1..m}; j\\<^sub>1 \\<noteq> j\\<^sub>2; j\\<^sub>1 \\<in> A x;\n         j\\<^sub>2 \\<in> A x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast\n\n  \\<comment> \\<open>Step 2: Jobs contained in sum\\<close>"], ["proof (state)\nthis:\n  j\\<^sub>1 \\<in> {1..j}\n  j\\<^sub>2 \\<in> {1..j}\n  x \\<in> {1..m}\n  j\\<^sub>1 \\<noteq> j\\<^sub>2\n  j\\<^sub>1 \\<in> A x\n  j\\<^sub>2 \\<in> A x\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..m}. 2 * t j \\<le> T x", "have \"finite (A x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (A x)", "using assms(1) *(3)"], ["proof (prove)\nusing this:\n  lb T A j\n  x \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. finite (A x)", "by simp"], ["proof (state)\nthis:\n  finite (A x)\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..m}. 2 * t j \\<le> T x", "then"], ["proof (chain)\npicking this:\n  finite (A x)", "have SUM: \"(\\<Sum>i \\<in> A x. t i) = t j\\<^sub>1 + t j\\<^sub>2 + (\\<Sum>i \\<in> A x - {j\\<^sub>1} - {j\\<^sub>2}. t i)\""], ["proof (prove)\nusing this:\n  finite (A x)\n\ngoal (1 subgoal):\n 1. sum t (A x) =\n    t j\\<^sub>1 + t j\\<^sub>2 + sum t (A x - {j\\<^sub>1} - {j\\<^sub>2})", "using *(4-6)"], ["proof (prove)\nusing this:\n  finite (A x)\n  j\\<^sub>1 \\<noteq> j\\<^sub>2\n  j\\<^sub>1 \\<in> A x\n  j\\<^sub>2 \\<in> A x\n\ngoal (1 subgoal):\n 1. sum t (A x) =\n    t j\\<^sub>1 + t j\\<^sub>2 + sum t (A x - {j\\<^sub>1} - {j\\<^sub>2})", "by (simp add: sum.remove)\n\n  \\<comment> \\<open>Step 3: Proof of lower bound\\<close>"], ["proof (state)\nthis:\n  sum t (A x) =\n  t j\\<^sub>1 + t j\\<^sub>2 + sum t (A x - {j\\<^sub>1} - {j\\<^sub>2})\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..m}. 2 * t j \\<le> T x", "have \"t j \\<le> t j\\<^sub>1\" \"t j \\<le> t j\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t j \\<le> t j\\<^sub>1 &&& t j \\<le> t j\\<^sub>2", "using assms(3) *(1-2)"], ["proof (prove)\nusing this:\n  sorted j\n  j\\<^sub>1 \\<in> {1..j}\n  j\\<^sub>2 \\<in> {1..j}\n\ngoal (1 subgoal):\n 1. t j \\<le> t j\\<^sub>1 &&& t j \\<le> t j\\<^sub>2", "unfolding sorted_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..j}. \\<forall>y\\<in>{1..x}. t x \\<le> t y\n  j\\<^sub>1 \\<in> {1..j}\n  j\\<^sub>2 \\<in> {1..j}\n\ngoal (1 subgoal):\n 1. t j \\<le> t j\\<^sub>1 &&& t j \\<le> t j\\<^sub>2", "by auto"], ["proof (state)\nthis:\n  t j \\<le> t j\\<^sub>1\n  t j \\<le> t j\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..m}. 2 * t j \\<le> T x", "then"], ["proof (chain)\npicking this:\n  t j \\<le> t j\\<^sub>1\n  t j \\<le> t j\\<^sub>2", "have \"2 * t j \\<le> t j\\<^sub>1 + t j\\<^sub>2\""], ["proof (prove)\nusing this:\n  t j \\<le> t j\\<^sub>1\n  t j \\<le> t j\\<^sub>2\n\ngoal (1 subgoal):\n 1. 2 * t j \\<le> t j\\<^sub>1 + t j\\<^sub>2", "by simp"], ["proof (state)\nthis:\n  2 * t j \\<le> t j\\<^sub>1 + t j\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..m}. 2 * t j \\<le> T x", "also"], ["proof (state)\nthis:\n  2 * t j \\<le> t j\\<^sub>1 + t j\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..m}. 2 * t j \\<le> T x", "have \"... \\<le> (\\<Sum>i \\<in> A x. t i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t j\\<^sub>1 + t j\\<^sub>2 \\<le> sum t (A x)", "unfolding SUM"], ["proof (prove)\ngoal (1 subgoal):\n 1. t j\\<^sub>1 + t j\\<^sub>2\n    \\<le> t j\\<^sub>1 + t j\\<^sub>2 +\n          sum t (A x - {j\\<^sub>1} - {j\\<^sub>2})", "by simp"], ["proof (state)\nthis:\n  t j\\<^sub>1 + t j\\<^sub>2 \\<le> sum t (A x)\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..m}. 2 * t j \\<le> T x", "finally"], ["proof (chain)\npicking this:\n  2 * t j \\<le> sum t (A x)", "have \"2 * t j \\<le> T x\""], ["proof (prove)\nusing this:\n  2 * t j \\<le> sum t (A x)\n\ngoal (1 subgoal):\n 1. 2 * t j \\<le> T x", "using lbrules(3) *(3)"], ["proof (prove)\nusing this:\n  2 * t j \\<le> sum t (A x)\n  \\<forall>x\\<in>{1..m}. sum t (A x) = T x\n  x \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. 2 * t j \\<le> T x", "by simp"], ["proof (state)\nthis:\n  2 * t j \\<le> T x\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..m}. 2 * t j \\<le> T x", "then"], ["proof (chain)\npicking this:\n  2 * t j \\<le> T x", "show ?thesis"], ["proof (prove)\nusing this:\n  2 * t j \\<le> T x\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..m}. 2 * t j \\<le> T x", "using *(3)"], ["proof (prove)\nusing this:\n  2 * t j \\<le> T x\n  x \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{1..m}. 2 * t j \\<le> T x", "by blast"], ["proof (state)\nthis:\n  \\<exists>x\\<in>{1..m}. 2 * t j \\<le> T x\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Reasoning analogous to @{thm [source] job_lower_bound_makespan}.\\<close>"], ["", "lemma sorted_job_lower_bound_makespan:\n  assumes \"lb T A j\" \"j > m\" \"sorted j\"\n  shows \"2 * t j \\<le> makespan T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * t j \\<le> makespan T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 * t j \\<le> makespan T", "obtain x where x_def: \"x \\<in> {1..m}\" \"2 * t j \\<le> T x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> {1..m}; 2 * t j \\<le> T x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using sorted_job_lower_bound_machine[OF assms]"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>{1..m}. 2 * t j \\<le> T x\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> {1..m}; 2 * t j \\<le> T x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  x \\<in> {1..m}\n  2 * t j \\<le> T x\n\ngoal (1 subgoal):\n 1. 2 * t j \\<le> makespan T", "with makespan_correct(1)"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>{1..m}. ?T x \\<le> makespan ?T\n  x \\<in> {1..m}\n  2 * t j \\<le> T x", "have \"T x \\<le> makespan T\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{1..m}. ?T x \\<le> makespan ?T\n  x \\<in> {1..m}\n  2 * t j \\<le> T x\n\ngoal (1 subgoal):\n 1. T x \\<le> makespan T", "by blast"], ["proof (state)\nthis:\n  T x \\<le> makespan T\n\ngoal (1 subgoal):\n 1. 2 * t j \\<le> makespan T", "with x_def(2)"], ["proof (chain)\npicking this:\n  2 * t j \\<le> T x\n  T x \\<le> makespan T", "show ?thesis"], ["proof (prove)\nusing this:\n  2 * t j \\<le> T x\n  T x \\<le> makespan T\n\ngoal (1 subgoal):\n 1. 2 * t j \\<le> makespan T", "by simp"], ["proof (state)\nthis:\n  2 * t j \\<le> makespan T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma min_zero:\n  assumes \"x \\<in> {1..k}\" \"T x = 0\"\n  shows \"T (min\\<^sub>k T k) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T (min\\<^sub>k T k) = 0", "using assms(1)"], ["proof (prove)\nusing this:\n  x \\<in> {1..k}\n\ngoal (1 subgoal):\n 1. T (min\\<^sub>k T k) = 0", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> {1..0} \\<Longrightarrow> T (min\\<^sub>k T 0) = 0\n 2. \\<And>k.\n       \\<lbrakk>x \\<in> {1..k} \\<Longrightarrow> T (min\\<^sub>k T k) = 0;\n        x \\<in> {1..Suc k}\\<rbrakk>\n       \\<Longrightarrow> T (min\\<^sub>k T (Suc k)) = 0", "case (Suc k)"], ["proof (state)\nthis:\n  x \\<in> {1..k} \\<Longrightarrow> T (min\\<^sub>k T k) = 0\n  x \\<in> {1..Suc k}\n\ngoal (2 subgoals):\n 1. x \\<in> {1..0} \\<Longrightarrow> T (min\\<^sub>k T 0) = 0\n 2. \\<And>k.\n       \\<lbrakk>x \\<in> {1..k} \\<Longrightarrow> T (min\\<^sub>k T k) = 0;\n        x \\<in> {1..Suc k}\\<rbrakk>\n       \\<Longrightarrow> T (min\\<^sub>k T (Suc k)) = 0", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. T (min\\<^sub>k T (Suc k)) = 0", "proof (cases \\<open>x = Suc k\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. x = Suc k \\<Longrightarrow> T (min\\<^sub>k T (Suc k)) = 0\n 2. x \\<noteq> Suc k \\<Longrightarrow> T (min\\<^sub>k T (Suc k)) = 0", "case True"], ["proof (state)\nthis:\n  x = Suc k\n\ngoal (2 subgoals):\n 1. x = Suc k \\<Longrightarrow> T (min\\<^sub>k T (Suc k)) = 0\n 2. x \\<noteq> Suc k \\<Longrightarrow> T (min\\<^sub>k T (Suc k)) = 0", "then"], ["proof (chain)\npicking this:\n  x = Suc k", "show ?thesis"], ["proof (prove)\nusing this:\n  x = Suc k\n\ngoal (1 subgoal):\n 1. T (min\\<^sub>k T (Suc k)) = 0", "using assms(2)"], ["proof (prove)\nusing this:\n  x = Suc k\n  T x = 0\n\ngoal (1 subgoal):\n 1. T (min\\<^sub>k T (Suc k)) = 0", "by (simp add: Let_def)"], ["proof (state)\nthis:\n  T (min\\<^sub>k T (Suc k)) = 0\n\ngoal (1 subgoal):\n 1. x \\<noteq> Suc k \\<Longrightarrow> T (min\\<^sub>k T (Suc k)) = 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> Suc k \\<Longrightarrow> T (min\\<^sub>k T (Suc k)) = 0", "case False"], ["proof (state)\nthis:\n  x \\<noteq> Suc k\n\ngoal (1 subgoal):\n 1. x \\<noteq> Suc k \\<Longrightarrow> T (min\\<^sub>k T (Suc k)) = 0", "with Suc"], ["proof (chain)\npicking this:\n  x \\<in> {1..k} \\<Longrightarrow> T (min\\<^sub>k T k) = 0\n  x \\<in> {1..Suc k}\n  x \\<noteq> Suc k", "have \"T (min\\<^sub>k T k) = 0\""], ["proof (prove)\nusing this:\n  x \\<in> {1..k} \\<Longrightarrow> T (min\\<^sub>k T k) = 0\n  x \\<in> {1..Suc k}\n  x \\<noteq> Suc k\n\ngoal (1 subgoal):\n 1. T (min\\<^sub>k T k) = 0", "by simp"], ["proof (state)\nthis:\n  T (min\\<^sub>k T k) = 0\n\ngoal (1 subgoal):\n 1. x \\<noteq> Suc k \\<Longrightarrow> T (min\\<^sub>k T (Suc k)) = 0", "then"], ["proof (chain)\npicking this:\n  T (min\\<^sub>k T k) = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  T (min\\<^sub>k T k) = 0\n\ngoal (1 subgoal):\n 1. T (min\\<^sub>k T (Suc k)) = 0", "by simp"], ["proof (state)\nthis:\n  T (min\\<^sub>k T (Suc k)) = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  T (min\\<^sub>k T (Suc k)) = 0\n\ngoal (1 subgoal):\n 1. x \\<in> {1..0} \\<Longrightarrow> T (min\\<^sub>k T 0) = 0", "qed simp"], ["", "lemma min_zero_index:\n  assumes \"x \\<in> {1..k}\" \"T x = 0\"\n  shows \"min\\<^sub>k T k \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min\\<^sub>k T k \\<le> x", "using assms(1)"], ["proof (prove)\nusing this:\n  x \\<in> {1..k}\n\ngoal (1 subgoal):\n 1. min\\<^sub>k T k \\<le> x", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> {1..0} \\<Longrightarrow> min\\<^sub>k T 0 \\<le> x\n 2. \\<And>k.\n       \\<lbrakk>x \\<in> {1..k} \\<Longrightarrow> min\\<^sub>k T k \\<le> x;\n        x \\<in> {1..Suc k}\\<rbrakk>\n       \\<Longrightarrow> min\\<^sub>k T (Suc k) \\<le> x", "case (Suc k)"], ["proof (state)\nthis:\n  x \\<in> {1..k} \\<Longrightarrow> min\\<^sub>k T k \\<le> x\n  x \\<in> {1..Suc k}\n\ngoal (2 subgoals):\n 1. x \\<in> {1..0} \\<Longrightarrow> min\\<^sub>k T 0 \\<le> x\n 2. \\<And>k.\n       \\<lbrakk>x \\<in> {1..k} \\<Longrightarrow> min\\<^sub>k T k \\<le> x;\n        x \\<in> {1..Suc k}\\<rbrakk>\n       \\<Longrightarrow> min\\<^sub>k T (Suc k) \\<le> x", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. min\\<^sub>k T (Suc k) \\<le> x", "proof (cases \\<open>x = Suc k\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. x = Suc k \\<Longrightarrow> min\\<^sub>k T (Suc k) \\<le> x\n 2. x \\<noteq> Suc k \\<Longrightarrow> min\\<^sub>k T (Suc k) \\<le> x", "case True"], ["proof (state)\nthis:\n  x = Suc k\n\ngoal (2 subgoals):\n 1. x = Suc k \\<Longrightarrow> min\\<^sub>k T (Suc k) \\<le> x\n 2. x \\<noteq> Suc k \\<Longrightarrow> min\\<^sub>k T (Suc k) \\<le> x", "then"], ["proof (chain)\npicking this:\n  x = Suc k", "show ?thesis"], ["proof (prove)\nusing this:\n  x = Suc k\n\ngoal (1 subgoal):\n 1. min\\<^sub>k T (Suc k) \\<le> x", "using min_in_range[of \"Suc k\"]"], ["proof (prove)\nusing this:\n  x = Suc k\n  0 < Suc k \\<Longrightarrow> min\\<^sub>k ?T (Suc k) \\<in> {1..Suc k}\n\ngoal (1 subgoal):\n 1. min\\<^sub>k T (Suc k) \\<le> x", "by simp"], ["proof (state)\nthis:\n  min\\<^sub>k T (Suc k) \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<noteq> Suc k \\<Longrightarrow> min\\<^sub>k T (Suc k) \\<le> x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> Suc k \\<Longrightarrow> min\\<^sub>k T (Suc k) \\<le> x", "case False"], ["proof (state)\nthis:\n  x \\<noteq> Suc k\n\ngoal (1 subgoal):\n 1. x \\<noteq> Suc k \\<Longrightarrow> min\\<^sub>k T (Suc k) \\<le> x", "with Suc.prems"], ["proof (chain)\npicking this:\n  x \\<in> {1..Suc k}\n  x \\<noteq> Suc k", "have \"x \\<in> {1..k}\""], ["proof (prove)\nusing this:\n  x \\<in> {1..Suc k}\n  x \\<noteq> Suc k\n\ngoal (1 subgoal):\n 1. x \\<in> {1..k}", "by simp"], ["proof (state)\nthis:\n  x \\<in> {1..k}\n\ngoal (1 subgoal):\n 1. x \\<noteq> Suc k \\<Longrightarrow> min\\<^sub>k T (Suc k) \\<le> x", "from min_zero[OF this, of T] assms(2) Suc.IH[OF this]"], ["proof (chain)\npicking this:\n  T x = 0 \\<Longrightarrow> T (min\\<^sub>k T k) = 0\n  T x = 0\n  min\\<^sub>k T k \\<le> x", "show ?thesis"], ["proof (prove)\nusing this:\n  T x = 0 \\<Longrightarrow> T (min\\<^sub>k T k) = 0\n  T x = 0\n  min\\<^sub>k T k \\<le> x\n\ngoal (1 subgoal):\n 1. min\\<^sub>k T (Suc k) \\<le> x", "by simp"], ["proof (state)\nthis:\n  min\\<^sub>k T (Suc k) \\<le> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  min\\<^sub>k T (Suc k) \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<in> {1..0} \\<Longrightarrow> min\\<^sub>k T 0 \\<le> x", "qed simp"], ["", "definition inv\\<^sub>2 :: \"(nat \\<Rightarrow> nat) \\<Rightarrow> (nat \\<Rightarrow> nat set) \\<Rightarrow> nat \\<Rightarrow> bool\" where\n  \"inv\\<^sub>2 T A j = (lb T A j \\<and> j \\<le> n\n                \\<and> (\\<forall>T' A'. lb T' A' j \\<longrightarrow> makespan T \\<le> 3 / 2 * makespan T') \n                \\<and> (\\<forall>x > j. T x = 0)\n                \\<and> (j \\<le> m \\<longrightarrow> makespan T = Max\\<^sub>0 (t ` {1..j})))\""], ["", "lemma inv\\<^sub>2E:\n  assumes \"inv\\<^sub>2 T A j\"\n  shows \"lb T A j\" \"j \\<le> n\"\n        \"lb T' A' j \\<Longrightarrow> makespan T \\<le> 3 / 2 * makespan T'\"\n        \"\\<forall>x > j. T x = 0\" \"j \\<le> m \\<Longrightarrow> makespan T = Max\\<^sub>0 (t ` {1..j})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (lb T A j &&& j \\<le> n) &&&\n    (lb T' A' j \\<Longrightarrow>\n     real (makespan T) \\<le> 3 / 2 * real (makespan T')) &&&\n    \\<forall>x>j. T x = 0 &&&\n    (j \\<le> m \\<Longrightarrow> makespan T = Max\\<^sub>0 (t ` {1..j}))", "using assms"], ["proof (prove)\nusing this:\n  inv\\<^sub>2 T A j\n\ngoal (1 subgoal):\n 1. (lb T A j &&& j \\<le> n) &&&\n    (lb T' A' j \\<Longrightarrow>\n     real (makespan T) \\<le> 3 / 2 * real (makespan T')) &&&\n    \\<forall>x>j. T x = 0 &&&\n    (j \\<le> m \\<Longrightarrow> makespan T = Max\\<^sub>0 (t ` {1..j}))", "unfolding inv\\<^sub>2_def"], ["proof (prove)\nusing this:\n  lb T A j \\<and>\n  j \\<le> n \\<and>\n  (\\<forall>T' A'.\n      lb T' A' j \\<longrightarrow>\n      real (makespan T) \\<le> 3 / 2 * real (makespan T')) \\<and>\n  (\\<forall>x>j. T x = 0) \\<and>\n  (j \\<le> m \\<longrightarrow> makespan T = Max\\<^sub>0 (t ` {1..j}))\n\ngoal (1 subgoal):\n 1. (lb T A j &&& j \\<le> n) &&&\n    (lb T' A' j \\<Longrightarrow>\n     real (makespan T) \\<le> 3 / 2 * real (makespan T')) &&&\n    \\<forall>x>j. T x = 0 &&&\n    (j \\<le> m \\<Longrightarrow> makespan T = Max\\<^sub>0 (t ` {1..j}))", "by blast+"], ["", "lemma inv\\<^sub>2I:\n  assumes \"lb T A j\" \"j \\<le> n\"\n          \"\\<forall>T' A'. lb T' A' j \\<longrightarrow> makespan T \\<le> 3 / 2 * makespan T'\"\n          \"\\<forall>x > j. T x = 0\"\n          \"j \\<le> m \\<Longrightarrow> makespan T = Max\\<^sub>0 (t ` {1..j})\"\n  shows \"inv\\<^sub>2 T A j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv\\<^sub>2 T A j", "unfolding inv\\<^sub>2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lb T A j \\<and>\n    j \\<le> n \\<and>\n    (\\<forall>T' A'.\n        lb T' A' j \\<longrightarrow>\n        real (makespan T) \\<le> 3 / 2 * real (makespan T')) \\<and>\n    (\\<forall>x>j. T x = 0) \\<and>\n    (j \\<le> m \\<longrightarrow> makespan T = Max\\<^sub>0 (t ` {1..j}))", "using assms"], ["proof (prove)\nusing this:\n  lb T A j\n  j \\<le> n\n  \\<forall>T' A'.\n     lb T' A' j \\<longrightarrow>\n     real (makespan T) \\<le> 3 / 2 * real (makespan T')\n  \\<forall>x>j. T x = 0\n  j \\<le> m \\<Longrightarrow> makespan T = Max\\<^sub>0 (t ` {1..j})\n\ngoal (1 subgoal):\n 1. lb T A j \\<and>\n    j \\<le> n \\<and>\n    (\\<forall>T' A'.\n        lb T' A' j \\<longrightarrow>\n        real (makespan T) \\<le> 3 / 2 * real (makespan T')) \\<and>\n    (\\<forall>x>j. T x = 0) \\<and>\n    (j \\<le> m \\<longrightarrow> makespan T = Max\\<^sub>0 (t ` {1..j}))", "by blast"], ["", "lemma inv\\<^sub>2_step:\n  assumes \"sorted n\" \"inv\\<^sub>2 T A j\" \"j < n\"\n  shows \"inv\\<^sub>2 (T (min\\<^sub>k T m := T(min\\<^sub>k T m) + t(Suc j)))\n              (A (min\\<^sub>k T m := A(min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\"\n    (is \\<open>inv\\<^sub>2 ?T ?A _\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "proof (cases \\<open>Suc j > m\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n 2. \\<not> m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "case True"], ["proof (state)\nthis:\n  m < Suc j\n\ngoal (2 subgoals):\n 1. m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n 2. \\<not> m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "note invrules = inv\\<^sub>2E[OF assms(2)]\n  \\<comment> \\<open>Greedy is correct\\<close>"], ["proof (state)\nthis:\n  lb T A j\n  j \\<le> n\n  lb ?T' ?A' j \\<Longrightarrow>\n  real (makespan T) \\<le> 3 / 2 * real (makespan ?T')\n  \\<forall>x>j. T x = 0\n  j \\<le> m \\<Longrightarrow> makespan T = Max\\<^sub>0 (t ` {1..j})\n\ngoal (2 subgoals):\n 1. m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n 2. \\<not> m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "have LB: \"lb ?T ?A (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lb (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "using add_job[OF invrules(1) min_in_range[OF m_gt_0]]"], ["proof (prove)\nusing this:\n  lb (T(min\\<^sub>k ?T1 m := T (min\\<^sub>k ?T1 m) + t (Suc j)))\n   (A(min\\<^sub>k ?T1 m := A (min\\<^sub>k ?T1 m) \\<union> {Suc j})) (Suc j)\n\ngoal (1 subgoal):\n 1. lb (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "by blast\n  \\<comment> \\<open>Greedy maintains approximation factor\\<close>"], ["proof (state)\nthis:\n  lb (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n   (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n\ngoal (2 subgoals):\n 1. m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n 2. \\<not> m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "have MK: \"\\<forall>T' A'. lb T' A' (Suc j) \\<longrightarrow> makespan ?T \\<le> 3 / 2 * makespan T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>T' A'.\n       lb T' A' (Suc j) \\<longrightarrow>\n       real\n        (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n       \\<le> 3 / 2 * real (makespan T')", "proof rule+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T' A'.\n       lb T' A' (Suc j) \\<Longrightarrow>\n       real\n        (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n       \\<le> 3 / 2 * real (makespan T')", "fix T\\<^sub>1 A\\<^sub>1"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T' A'.\n       lb T' A' (Suc j) \\<Longrightarrow>\n       real\n        (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n       \\<le> 3 / 2 * real (makespan T')", "assume \"lb T\\<^sub>1 A\\<^sub>1 (Suc j)\""], ["proof (state)\nthis:\n  lb T\\<^sub>1 A\\<^sub>1 (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>T' A'.\n       lb T' A' (Suc j) \\<Longrightarrow>\n       real\n        (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n       \\<le> 3 / 2 * real (makespan T')", "from smaller_optimum[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T\\<^sub>1", "obtain T\\<^sub>0 A\\<^sub>0 where \"lb T\\<^sub>0 A\\<^sub>0 j\" \"makespan T\\<^sub>0 \\<le> makespan T\\<^sub>1\""], ["proof (prove)\nusing this:\n  \\<exists>T' A'. lb T' A' j \\<and> makespan T' \\<le> makespan T\\<^sub>1\n\ngoal (1 subgoal):\n 1. (\\<And>T\\<^sub>0 A\\<^sub>0.\n        \\<lbrakk>lb T\\<^sub>0 A\\<^sub>0 j;\n         makespan T\\<^sub>0 \\<le> makespan T\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  lb T\\<^sub>0 A\\<^sub>0 j\n  makespan T\\<^sub>0 \\<le> makespan T\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<And>T' A'.\n       lb T' A' (Suc j) \\<Longrightarrow>\n       real\n        (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n       \\<le> 3 / 2 * real (makespan T')", "then"], ["proof (chain)\npicking this:\n  lb T\\<^sub>0 A\\<^sub>0 j\n  makespan T\\<^sub>0 \\<le> makespan T\\<^sub>1", "have IH: \"makespan T \\<le> 3 / 2 * makespan T\\<^sub>1\""], ["proof (prove)\nusing this:\n  lb T\\<^sub>0 A\\<^sub>0 j\n  makespan T\\<^sub>0 \\<le> makespan T\\<^sub>1\n\ngoal (1 subgoal):\n 1. real (makespan T) \\<le> 3 / 2 * real (makespan T\\<^sub>1)", "using invrules(3)"], ["proof (prove)\nusing this:\n  lb T\\<^sub>0 A\\<^sub>0 j\n  makespan T\\<^sub>0 \\<le> makespan T\\<^sub>1\n  lb ?T' ?A' j \\<Longrightarrow>\n  real (makespan T) \\<le> 3 / 2 * real (makespan ?T')\n\ngoal (1 subgoal):\n 1. real (makespan T) \\<le> 3 / 2 * real (makespan T\\<^sub>1)", "by force"], ["proof (state)\nthis:\n  real (makespan T) \\<le> 3 / 2 * real (makespan T\\<^sub>1)\n\ngoal (1 subgoal):\n 1. \\<And>T' A'.\n       lb T' A' (Suc j) \\<Longrightarrow>\n       real\n        (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n       \\<le> 3 / 2 * real (makespan T')", "show \"makespan ?T \\<le> 3 / 2 * makespan T\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)", "proof (cases \\<open>makespan ?T = T (min\\<^sub>k T m) + t (Suc j)\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)\n 2. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)", "case True"], ["proof (state)\nthis:\n  makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n  T (min\\<^sub>k T m) + t (Suc j)\n\ngoal (2 subgoals):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)\n 2. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)", "have \"m * T (min\\<^sub>k T m) \\<le> (\\<Sum>i \\<in> {1..m}. T i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m * T (min\\<^sub>k T m) \\<le> sum T {1..m}", "by (rule min_avg)"], ["proof (state)\nthis:\n  m * T (min\\<^sub>k T m) \\<le> sum T {1..m}\n\ngoal (2 subgoals):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)\n 2. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)", "also"], ["proof (state)\nthis:\n  m * T (min\\<^sub>k T m) \\<le> sum T {1..m}\n\ngoal (2 subgoals):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)\n 2. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)", "have \"... = (\\<Sum>i \\<in> {1..j}. t i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum T {1..m} = sum t {1..j}", "by (rule lb_impl_job_sum[OF invrules(1)])"], ["proof (state)\nthis:\n  sum T {1..m} = sum t {1..j}\n\ngoal (2 subgoals):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)\n 2. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)", "finally"], ["proof (chain)\npicking this:\n  m * T (min\\<^sub>k T m) \\<le> sum t {1..j}", "have \"real m * T (min\\<^sub>k T m) \\<le> (\\<Sum>i \\<in> {1..j}. t i)\""], ["proof (prove)\nusing this:\n  m * T (min\\<^sub>k T m) \\<le> sum t {1..j}\n\ngoal (1 subgoal):\n 1. real m * real (T (min\\<^sub>k T m)) \\<le> real (sum t {1..j})", "by (auto dest: of_nat_mono)"], ["proof (state)\nthis:\n  real m * real (T (min\\<^sub>k T m)) \\<le> real (sum t {1..j})\n\ngoal (2 subgoals):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)\n 2. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)", "with m_gt_0"], ["proof (chain)\npicking this:\n  0 < m\n  real m * real (T (min\\<^sub>k T m)) \\<le> real (sum t {1..j})", "have \"T (min\\<^sub>k T m) \\<le> (\\<Sum>i \\<in> {1..j}. t i) / m\""], ["proof (prove)\nusing this:\n  0 < m\n  real m * real (T (min\\<^sub>k T m)) \\<le> real (sum t {1..j})\n\ngoal (1 subgoal):\n 1. real (T (min\\<^sub>k T m)) \\<le> real (sum t {1..j}) / real m", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  real (T (min\\<^sub>k T m)) \\<le> real (sum t {1..j}) / real m\n\ngoal (2 subgoals):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)\n 2. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)", "then"], ["proof (chain)\npicking this:\n  real (T (min\\<^sub>k T m)) \\<le> real (sum t {1..j}) / real m", "have \"T (min\\<^sub>k T m) \\<le> makespan T\\<^sub>1\""], ["proof (prove)\nusing this:\n  real (T (min\\<^sub>k T m)) \\<le> real (sum t {1..j}) / real m\n\ngoal (1 subgoal):\n 1. T (min\\<^sub>k T m) \\<le> makespan T\\<^sub>1", "using job_dist_lower_bound_makespan[OF \\<open>lb T\\<^sub>0 A\\<^sub>0 j\\<close>] \n          and \\<open>makespan T\\<^sub>0 \\<le> makespan T\\<^sub>1\\<close>"], ["proof (prove)\nusing this:\n  real (T (min\\<^sub>k T m)) \\<le> real (sum t {1..j}) / real m\n  real (sum t {1..j}) / real m \\<le> real (makespan T\\<^sub>0)\n  makespan T\\<^sub>0 \\<le> makespan T\\<^sub>1\n\ngoal (1 subgoal):\n 1. T (min\\<^sub>k T m) \\<le> makespan T\\<^sub>1", "by linarith"], ["proof (state)\nthis:\n  T (min\\<^sub>k T m) \\<le> makespan T\\<^sub>1\n\ngoal (2 subgoals):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)\n 2. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)", "moreover"], ["proof (state)\nthis:\n  T (min\\<^sub>k T m) \\<le> makespan T\\<^sub>1\n\ngoal (2 subgoals):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)\n 2. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)", "have \"2 * t (Suc j) \\<le> makespan T\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * t (Suc j) \\<le> makespan T\\<^sub>1", "using sorted_job_lower_bound_makespan[OF \\<open>lb T\\<^sub>1 A\\<^sub>1 (Suc j)\\<close> \\<open>Suc j > m\\<close>]\n          and assms(1,3)"], ["proof (prove)\nusing this:\n  sorted (Suc j) \\<Longrightarrow> 2 * t (Suc j) \\<le> makespan T\\<^sub>1\n  sorted n\n  j < n\n\ngoal (1 subgoal):\n 1. 2 * t (Suc j) \\<le> makespan T\\<^sub>1", "by simp"], ["proof (state)\nthis:\n  2 * t (Suc j) \\<le> makespan T\\<^sub>1\n\ngoal (2 subgoals):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)\n 2. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)", "ultimately"], ["proof (chain)\npicking this:\n  T (min\\<^sub>k T m) \\<le> makespan T\\<^sub>1\n  2 * t (Suc j) \\<le> makespan T\\<^sub>1", "show ?thesis"], ["proof (prove)\nusing this:\n  T (min\\<^sub>k T m) \\<le> makespan T\\<^sub>1\n  2 * t (Suc j) \\<le> makespan T\\<^sub>1\n\ngoal (1 subgoal):\n 1. real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)", "unfolding True"], ["proof (prove)\nusing this:\n  T (min\\<^sub>k T m) \\<le> makespan T\\<^sub>1\n  2 * t (Suc j) \\<le> makespan T\\<^sub>1\n\ngoal (1 subgoal):\n 1. real (T (min\\<^sub>k T m) + t (Suc j))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)", "by simp"], ["proof (state)\nthis:\n  real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n  \\<le> 3 / 2 * real (makespan T\\<^sub>1)\n\ngoal (1 subgoal):\n 1. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)", "case False"], ["proof (state)\nthis:\n  makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n  T (min\\<^sub>k T m) + t (Suc j)\n\ngoal (1 subgoal):\n 1. makespan\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) \\<noteq>\n    T (min\\<^sub>k T m) + t (Suc j) \\<Longrightarrow>\n    real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)", "using remove_small_job[OF False] IH"], ["proof (prove)\nusing this:\n  makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n  makespan T\n  real (makespan T) \\<le> 3 / 2 * real (makespan T\\<^sub>1)\n\ngoal (1 subgoal):\n 1. real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n    \\<le> 3 / 2 * real (makespan T\\<^sub>1)", "by simp"], ["proof (state)\nthis:\n  real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n  \\<le> 3 / 2 * real (makespan T\\<^sub>1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n  \\<le> 3 / 2 * real (makespan T\\<^sub>1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>T' A'.\n     lb T' A' (Suc j) \\<longrightarrow>\n     real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n     \\<le> 3 / 2 * real (makespan T')\n\ngoal (2 subgoals):\n 1. m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n 2. \\<not> m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "have \"\\<forall>x > Suc j. ?T x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x>Suc j.\n       (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) x = 0", "using invrules(4) min_in_range[OF m_gt_0, of T] True"], ["proof (prove)\nusing this:\n  \\<forall>x>j. T x = 0\n  min\\<^sub>k T m \\<in> {1..m}\n  m < Suc j\n\ngoal (1 subgoal):\n 1. \\<forall>x>Suc j.\n       (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) x = 0", "by simp"], ["proof (state)\nthis:\n  \\<forall>x>Suc j.\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) x = 0\n\ngoal (2 subgoals):\n 1. m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n 2. \\<not> m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "with inv\\<^sub>2I[OF LB _ MK]"], ["proof (chain)\npicking this:\n  \\<lbrakk>Suc j \\<le> n;\n   \\<forall>x>Suc j.\n      (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) x = 0;\n   Suc j \\<le> m \\<Longrightarrow>\n   makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n   Max\\<^sub>0 (t ` {1..Suc j})\\<rbrakk>\n  \\<Longrightarrow> inv\\<^sub>2\n                     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n                     (A(min\\<^sub>k T m :=\n                          A (min\\<^sub>k T m) \\<union> {Suc j}))\n                     (Suc j)\n  \\<forall>x>Suc j.\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) x = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>Suc j \\<le> n;\n   \\<forall>x>Suc j.\n      (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) x = 0;\n   Suc j \\<le> m \\<Longrightarrow>\n   makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n   Max\\<^sub>0 (t ` {1..Suc j})\\<rbrakk>\n  \\<Longrightarrow> inv\\<^sub>2\n                     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n                     (A(min\\<^sub>k T m :=\n                          A (min\\<^sub>k T m) \\<union> {Suc j}))\n                     (Suc j)\n  \\<forall>x>Suc j.\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) x = 0\n\ngoal (1 subgoal):\n 1. inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "using assms(3) True"], ["proof (prove)\nusing this:\n  \\<lbrakk>Suc j \\<le> n;\n   \\<forall>x>Suc j.\n      (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) x = 0;\n   Suc j \\<le> m \\<Longrightarrow>\n   makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n   Max\\<^sub>0 (t ` {1..Suc j})\\<rbrakk>\n  \\<Longrightarrow> inv\\<^sub>2\n                     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n                     (A(min\\<^sub>k T m :=\n                          A (min\\<^sub>k T m) \\<union> {Suc j}))\n                     (Suc j)\n  \\<forall>x>Suc j.\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) x = 0\n  j < n\n  m < Suc j\n\ngoal (1 subgoal):\n 1. inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "by simp"], ["proof (state)\nthis:\n  inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n   (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n\ngoal (1 subgoal):\n 1. \\<not> m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "case False"], ["proof (state)\nthis:\n  \\<not> m < Suc j\n\ngoal (1 subgoal):\n 1. \\<not> m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "then"], ["proof (chain)\npicking this:\n  \\<not> m < Suc j", "have IN_RANGE: \"Suc j \\<in> {1..m}\""], ["proof (prove)\nusing this:\n  \\<not> m < Suc j\n\ngoal (1 subgoal):\n 1. Suc j \\<in> {1..m}", "by simp"], ["proof (state)\nthis:\n  Suc j \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. \\<not> m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "note invrules = inv\\<^sub>2E[OF assms(2)]"], ["proof (state)\nthis:\n  lb T A j\n  j \\<le> n\n  lb ?T' ?A' j \\<Longrightarrow>\n  real (makespan T) \\<le> 3 / 2 * real (makespan ?T')\n  \\<forall>x>j. T x = 0\n  j \\<le> m \\<Longrightarrow> makespan T = Max\\<^sub>0 (t ` {1..j})\n\ngoal (1 subgoal):\n 1. \\<not> m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "then"], ["proof (chain)\npicking this:\n  lb T A j\n  j \\<le> n\n  lb ?T' ?A' j \\<Longrightarrow>\n  real (makespan T) \\<le> 3 / 2 * real (makespan ?T')\n  \\<forall>x>j. T x = 0\n  j \\<le> m \\<Longrightarrow> makespan T = Max\\<^sub>0 (t ` {1..j})", "have \"T (Suc j) = 0\""], ["proof (prove)\nusing this:\n  lb T A j\n  j \\<le> n\n  lb ?T' ?A' j \\<Longrightarrow>\n  real (makespan T) \\<le> 3 / 2 * real (makespan ?T')\n  \\<forall>x>j. T x = 0\n  j \\<le> m \\<Longrightarrow> makespan T = Max\\<^sub>0 (t ` {1..j})\n\ngoal (1 subgoal):\n 1. T (Suc j) = 0", "by blast\n\n  \\<comment> \\<open>Greedy is correct\\<close>"], ["proof (state)\nthis:\n  T (Suc j) = 0\n\ngoal (1 subgoal):\n 1. \\<not> m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "have LB: \"lb ?T ?A (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lb (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "using add_job[OF invrules(1) min_in_range[OF m_gt_0]]"], ["proof (prove)\nusing this:\n  lb (T(min\\<^sub>k ?T1 m := T (min\\<^sub>k ?T1 m) + t (Suc j)))\n   (A(min\\<^sub>k ?T1 m := A (min\\<^sub>k ?T1 m) \\<union> {Suc j})) (Suc j)\n\ngoal (1 subgoal):\n 1. lb (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "by blast\n\n  \\<comment> \\<open>Greedy is trivially optimal\\<close>"], ["proof (state)\nthis:\n  lb (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n   (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n\ngoal (1 subgoal):\n 1. \\<not> m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "from IN_RANGE \\<open>T (Suc j) = 0\\<close>"], ["proof (chain)\npicking this:\n  Suc j \\<in> {1..m}\n  T (Suc j) = 0", "have \"min\\<^sub>k T m \\<le> Suc j\""], ["proof (prove)\nusing this:\n  Suc j \\<in> {1..m}\n  T (Suc j) = 0\n\ngoal (1 subgoal):\n 1. min\\<^sub>k T m \\<le> Suc j", "using min_zero_index"], ["proof (prove)\nusing this:\n  Suc j \\<in> {1..m}\n  T (Suc j) = 0\n  \\<lbrakk>?x \\<in> {1..?k}; ?T ?x = 0\\<rbrakk>\n  \\<Longrightarrow> min\\<^sub>k ?T ?k \\<le> ?x\n\ngoal (1 subgoal):\n 1. min\\<^sub>k T m \\<le> Suc j", "by blast"], ["proof (state)\nthis:\n  min\\<^sub>k T m \\<le> Suc j\n\ngoal (1 subgoal):\n 1. \\<not> m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "with invrules(4)"], ["proof (chain)\npicking this:\n  \\<forall>x>j. T x = 0\n  min\\<^sub>k T m \\<le> Suc j", "have EMPTY: \"\\<forall>x > Suc j. ?T x = 0\""], ["proof (prove)\nusing this:\n  \\<forall>x>j. T x = 0\n  min\\<^sub>k T m \\<le> Suc j\n\ngoal (1 subgoal):\n 1. \\<forall>x>Suc j.\n       (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) x = 0", "by simp"], ["proof (state)\nthis:\n  \\<forall>x>Suc j.\n     (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) x = 0\n\ngoal (1 subgoal):\n 1. \\<not> m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "from IN_RANGE \\<open>T (Suc j) = 0\\<close>"], ["proof (chain)\npicking this:\n  Suc j \\<in> {1..m}\n  T (Suc j) = 0", "have \"T (min\\<^sub>k T m) = 0\""], ["proof (prove)\nusing this:\n  Suc j \\<in> {1..m}\n  T (Suc j) = 0\n\ngoal (1 subgoal):\n 1. T (min\\<^sub>k T m) = 0", "using min_zero"], ["proof (prove)\nusing this:\n  Suc j \\<in> {1..m}\n  T (Suc j) = 0\n  \\<lbrakk>?x \\<in> {1..?k}; ?T ?x = 0\\<rbrakk>\n  \\<Longrightarrow> ?T (min\\<^sub>k ?T ?k) = 0\n\ngoal (1 subgoal):\n 1. T (min\\<^sub>k T m) = 0", "by blast"], ["proof (state)\nthis:\n  T (min\\<^sub>k T m) = 0\n\ngoal (1 subgoal):\n 1. \\<not> m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "with fun_upd_f_Max\\<^sub>0[OF min_in_range[OF m_gt_0]] invrules(5) False"], ["proof (chain)\npicking this:\n  ?T (min\\<^sub>k ?T1 m) \\<le> ?y \\<Longrightarrow>\n  makespan (?T(min\\<^sub>k ?T1 m := ?y)) = max ?y (makespan ?T)\n  j \\<le> m \\<Longrightarrow> makespan T = Max\\<^sub>0 (t ` {1..j})\n  \\<not> m < Suc j\n  T (min\\<^sub>k T m) = 0", "have TRIV: \"makespan ?T = Max\\<^sub>0 (t ` {1..Suc j})\""], ["proof (prove)\nusing this:\n  ?T (min\\<^sub>k ?T1 m) \\<le> ?y \\<Longrightarrow>\n  makespan (?T(min\\<^sub>k ?T1 m := ?y)) = max ?y (makespan ?T)\n  j \\<le> m \\<Longrightarrow> makespan T = Max\\<^sub>0 (t ` {1..j})\n  \\<not> m < Suc j\n  T (min\\<^sub>k T m) = 0\n\ngoal (1 subgoal):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    Max\\<^sub>0 (t ` {1..Suc j})", "unfolding f_Max\\<^sub>0_equiv[symmetric]"], ["proof (prove)\nusing this:\n  ?T (min\\<^sub>k ?T1 m) \\<le> ?y \\<Longrightarrow>\n  makespan (?T(min\\<^sub>k ?T1 m := ?y)) = max ?y (makespan ?T)\n  j \\<le> m \\<Longrightarrow> makespan T = f_Max\\<^sub>0 t j\n  \\<not> m < Suc j\n  T (min\\<^sub>k T m) = 0\n\ngoal (1 subgoal):\n 1. makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n    f_Max\\<^sub>0 t (Suc j)", "by simp"], ["proof (state)\nthis:\n  makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))) =\n  Max\\<^sub>0 (t ` {1..Suc j})\n\ngoal (1 subgoal):\n 1. \\<not> m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "have MK: \"\\<forall>T' A'. lb T' A' (Suc j) \\<longrightarrow> makespan ?T \\<le> 3 / 2 * makespan T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>T' A'.\n       lb T' A' (Suc j) \\<longrightarrow>\n       real\n        (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n       \\<le> 3 / 2 * real (makespan T')", "by (auto simp: TRIV[folded f_Max\\<^sub>0_equiv]\n            dest!: max_job_lower_bound_makespan[folded f_Max\\<^sub>0_equiv])"], ["proof (state)\nthis:\n  \\<forall>T' A'.\n     lb T' A' (Suc j) \\<longrightarrow>\n     real (makespan (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j))))\n     \\<le> 3 / 2 * real (makespan T')\n\ngoal (1 subgoal):\n 1. \\<not> m < Suc j \\<Longrightarrow>\n    inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "from inv\\<^sub>2I[OF LB _ MK EMPTY TRIV]"], ["proof (chain)\npicking this:\n  Suc j \\<le> n \\<Longrightarrow>\n  inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n   (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "show ?thesis"], ["proof (prove)\nusing this:\n  Suc j \\<le> n \\<Longrightarrow>\n  inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n   (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n\ngoal (1 subgoal):\n 1. inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "using assms(3)"], ["proof (prove)\nusing this:\n  Suc j \\<le> n \\<Longrightarrow>\n  inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n   (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n  j < n\n\ngoal (1 subgoal):\n 1. inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "by simp"], ["proof (state)\nthis:\n  inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n   (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sorted_greedy_approximation:\n\"sorted n \\<Longrightarrow> VARS T A i j\n{True}\nT := (\\<lambda>_. 0);\nA := (\\<lambda>_. {});\nj := 0;\nWHILE j < n INV {inv\\<^sub>2 T A j} DO\n  i := min\\<^sub>k T m;\n  j := (Suc j);\n  A := A (i := A(i) \\<union> {j});\n  T := T (i := T(i) + t j)\nOD\n{lb T A n \\<and> (\\<forall>T' A'. lb T' A' n \\<longrightarrow> makespan T \\<le> 3 / 2 * makespan T')}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted n \\<Longrightarrow>\n    {True} \n     T := (\\<lambda>_. 0);\n     A := (\\<lambda>_. {});\n     j := 0;\n     WHILE j < n INV {inv\\<^sub>2 T A j}  VAR {\\<lambda>(T, A, i, j). 0} \n      DO i := min\\<^sub>k T m;\n         j := Suc j; A := A(i := A i \\<union> {j}); T := T(i := T i + t j) \n      OD \n     {lb T A n \\<and>\n      (\\<forall>T' A'.\n          lb T' A' n \\<longrightarrow>\n          real (makespan T) \\<le> 3 / 2 * real (makespan T'))}", "proof (vcg, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>T A i j.\n       \\<lbrakk>sorted n; True\\<rbrakk>\n       \\<Longrightarrow> inv\\<^sub>2 (\\<lambda>_. 0) (\\<lambda>_. {}) 0\n 2. \\<And>T A i j.\n       \\<lbrakk>sorted n; inv\\<^sub>2 T A j \\<and> j < n\\<rbrakk>\n       \\<Longrightarrow> inv\\<^sub>2\n                          (T(min\\<^sub>k T m :=\n                               T (min\\<^sub>k T m) + t (Suc j)))\n                          (A(min\\<^sub>k T m :=\n                               A (min\\<^sub>k T m) \\<union> {Suc j}))\n                          (Suc j)\n 3. \\<And>T A i j.\n       \\<lbrakk>sorted n; inv\\<^sub>2 T A j \\<and> \\<not> j < n\\<rbrakk>\n       \\<Longrightarrow> lb T A n \\<and>\n                         (\\<forall>T' A'.\n                             lb T' A' n \\<longrightarrow>\n                             real (makespan T)\n                             \\<le> 3 / 2 * real (makespan T'))", "case (1 T A i j)"], ["proof (state)\nthis:\n  sorted n\n  True\n\ngoal (3 subgoals):\n 1. \\<And>T A i j.\n       \\<lbrakk>sorted n; True\\<rbrakk>\n       \\<Longrightarrow> inv\\<^sub>2 (\\<lambda>_. 0) (\\<lambda>_. {}) 0\n 2. \\<And>T A i j.\n       \\<lbrakk>sorted n; inv\\<^sub>2 T A j \\<and> j < n\\<rbrakk>\n       \\<Longrightarrow> inv\\<^sub>2\n                          (T(min\\<^sub>k T m :=\n                               T (min\\<^sub>k T m) + t (Suc j)))\n                          (A(min\\<^sub>k T m :=\n                               A (min\\<^sub>k T m) \\<union> {Suc j}))\n                          (Suc j)\n 3. \\<And>T A i j.\n       \\<lbrakk>sorted n; inv\\<^sub>2 T A j \\<and> \\<not> j < n\\<rbrakk>\n       \\<Longrightarrow> lb T A n \\<and>\n                         (\\<forall>T' A'.\n                             lb T' A' n \\<longrightarrow>\n                             real (makespan T)\n                             \\<le> 3 / 2 * real (makespan T'))", "then"], ["proof (chain)\npicking this:\n  sorted n\n  True", "show ?case"], ["proof (prove)\nusing this:\n  sorted n\n  True\n\ngoal (1 subgoal):\n 1. inv\\<^sub>2 (\\<lambda>_. 0) (\\<lambda>_. {}) 0", "by (simp add: lb_def inv\\<^sub>2_def)"], ["proof (state)\nthis:\n  inv\\<^sub>2 (\\<lambda>_. 0) (\\<lambda>_. {}) 0\n\ngoal (2 subgoals):\n 1. \\<And>T A i j.\n       \\<lbrakk>sorted n; inv\\<^sub>2 T A j \\<and> j < n\\<rbrakk>\n       \\<Longrightarrow> inv\\<^sub>2\n                          (T(min\\<^sub>k T m :=\n                               T (min\\<^sub>k T m) + t (Suc j)))\n                          (A(min\\<^sub>k T m :=\n                               A (min\\<^sub>k T m) \\<union> {Suc j}))\n                          (Suc j)\n 2. \\<And>T A i j.\n       \\<lbrakk>sorted n; inv\\<^sub>2 T A j \\<and> \\<not> j < n\\<rbrakk>\n       \\<Longrightarrow> lb T A n \\<and>\n                         (\\<forall>T' A'.\n                             lb T' A' n \\<longrightarrow>\n                             real (makespan T)\n                             \\<le> 3 / 2 * real (makespan T'))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>T A i j.\n       \\<lbrakk>sorted n; inv\\<^sub>2 T A j \\<and> j < n\\<rbrakk>\n       \\<Longrightarrow> inv\\<^sub>2\n                          (T(min\\<^sub>k T m :=\n                               T (min\\<^sub>k T m) + t (Suc j)))\n                          (A(min\\<^sub>k T m :=\n                               A (min\\<^sub>k T m) \\<union> {Suc j}))\n                          (Suc j)\n 2. \\<And>T A i j.\n       \\<lbrakk>sorted n; inv\\<^sub>2 T A j \\<and> \\<not> j < n\\<rbrakk>\n       \\<Longrightarrow> lb T A n \\<and>\n                         (\\<forall>T' A'.\n                             lb T' A' n \\<longrightarrow>\n                             real (makespan T)\n                             \\<le> 3 / 2 * real (makespan T'))", "case (2 T A i j)"], ["proof (state)\nthis:\n  sorted n\n  inv\\<^sub>2 T A j \\<and> j < n\n\ngoal (2 subgoals):\n 1. \\<And>T A i j.\n       \\<lbrakk>sorted n; inv\\<^sub>2 T A j \\<and> j < n\\<rbrakk>\n       \\<Longrightarrow> inv\\<^sub>2\n                          (T(min\\<^sub>k T m :=\n                               T (min\\<^sub>k T m) + t (Suc j)))\n                          (A(min\\<^sub>k T m :=\n                               A (min\\<^sub>k T m) \\<union> {Suc j}))\n                          (Suc j)\n 2. \\<And>T A i j.\n       \\<lbrakk>sorted n; inv\\<^sub>2 T A j \\<and> \\<not> j < n\\<rbrakk>\n       \\<Longrightarrow> lb T A n \\<and>\n                         (\\<forall>T' A'.\n                             lb T' A' n \\<longrightarrow>\n                             real (makespan T)\n                             \\<le> 3 / 2 * real (makespan T'))", "then"], ["proof (chain)\npicking this:\n  sorted n\n  inv\\<^sub>2 T A j \\<and> j < n", "show ?case"], ["proof (prove)\nusing this:\n  sorted n\n  inv\\<^sub>2 T A j \\<and> j < n\n\ngoal (1 subgoal):\n 1. inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "using inv\\<^sub>2_step"], ["proof (prove)\nusing this:\n  sorted n\n  inv\\<^sub>2 T A j \\<and> j < n\n  \\<lbrakk>sorted n; inv\\<^sub>2 ?T ?A ?j; ?j < n\\<rbrakk>\n  \\<Longrightarrow> inv\\<^sub>2\n                     (?T(min\\<^sub>k ?T m :=\n                           ?T (min\\<^sub>k ?T m) + t (Suc ?j)))\n                     (?A(min\\<^sub>k ?T m :=\n                           ?A (min\\<^sub>k ?T m) \\<union> {Suc ?j}))\n                     (Suc ?j)\n\ngoal (1 subgoal):\n 1. inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n     (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)", "by simp"], ["proof (state)\nthis:\n  inv\\<^sub>2 (T(min\\<^sub>k T m := T (min\\<^sub>k T m) + t (Suc j)))\n   (A(min\\<^sub>k T m := A (min\\<^sub>k T m) \\<union> {Suc j})) (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>T A i j.\n       \\<lbrakk>sorted n; inv\\<^sub>2 T A j \\<and> \\<not> j < n\\<rbrakk>\n       \\<Longrightarrow> lb T A n \\<and>\n                         (\\<forall>T' A'.\n                             lb T' A' n \\<longrightarrow>\n                             real (makespan T)\n                             \\<le> 3 / 2 * real (makespan T'))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T A i j.\n       \\<lbrakk>sorted n; inv\\<^sub>2 T A j \\<and> \\<not> j < n\\<rbrakk>\n       \\<Longrightarrow> lb T A n \\<and>\n                         (\\<forall>T' A'.\n                             lb T' A' n \\<longrightarrow>\n                             real (makespan T)\n                             \\<le> 3 / 2 * real (makespan T'))", "case (3 T A i j)"], ["proof (state)\nthis:\n  sorted n\n  inv\\<^sub>2 T A j \\<and> \\<not> j < n\n\ngoal (1 subgoal):\n 1. \\<And>T A i j.\n       \\<lbrakk>sorted n; inv\\<^sub>2 T A j \\<and> \\<not> j < n\\<rbrakk>\n       \\<Longrightarrow> lb T A n \\<and>\n                         (\\<forall>T' A'.\n                             lb T' A' n \\<longrightarrow>\n                             real (makespan T)\n                             \\<le> 3 / 2 * real (makespan T'))", "then"], ["proof (chain)\npicking this:\n  sorted n\n  inv\\<^sub>2 T A j \\<and> \\<not> j < n", "show ?case"], ["proof (prove)\nusing this:\n  sorted n\n  inv\\<^sub>2 T A j \\<and> \\<not> j < n\n\ngoal (1 subgoal):\n 1. lb T A n \\<and>\n    (\\<forall>T' A'.\n        lb T' A' n \\<longrightarrow>\n        real (makespan T) \\<le> 3 / 2 * real (makespan T'))", "unfolding inv\\<^sub>2_def"], ["proof (prove)\nusing this:\n  sorted n\n  (lb T A j \\<and>\n   j \\<le> n \\<and>\n   (\\<forall>T' A'.\n       lb T' A' j \\<longrightarrow>\n       real (makespan T) \\<le> 3 / 2 * real (makespan T')) \\<and>\n   (\\<forall>x>j. T x = 0) \\<and>\n   (j \\<le> m \\<longrightarrow>\n    makespan T = Max\\<^sub>0 (t ` {1..j}))) \\<and>\n  \\<not> j < n\n\ngoal (1 subgoal):\n 1. lb T A n \\<and>\n    (\\<forall>T' A'.\n        lb T' A' n \\<longrightarrow>\n        real (makespan T) \\<le> 3 / 2 * real (makespan T'))", "by force"], ["proof (state)\nthis:\n  lb T A n \\<and>\n  (\\<forall>T' A'.\n      lb T' A' n \\<longrightarrow>\n      real (makespan T) \\<le> 3 / 2 * real (makespan T'))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* LoadBalancing *)"], ["", "end"], ["", "(* Theory *)"]]}