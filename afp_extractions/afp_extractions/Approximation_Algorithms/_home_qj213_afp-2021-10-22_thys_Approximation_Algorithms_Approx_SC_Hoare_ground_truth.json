{"file_name": "/home/qj213/afp-2021-10-22/thys/Approximation_Algorithms/Approx_SC_Hoare.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Approximation_Algorithms", "problem_names": ["lemma S_subset: \"\\<forall>i \\<in> {1..m}. S i \\<subseteq> U\"", "lemma U_finite: \"finite U\"", "lemma empty_cover: \"m = 0 \\<Longrightarrow> U = {}\"", "lemma cost_nonneg: \"0 \\<le> cost R i\"", "lemma min_in_range: \"k > 0 \\<Longrightarrow> min_arg R k \\<in> {1..k}\"", "lemma min_empty: \"S (min_arg R k) \\<inter> R = {} \\<Longrightarrow> \\<forall>i \\<in> {1..k}. S i \\<inter> R = {}\"", "lemma min_correct: \"\\<lbrakk> i \\<in> {1..k}; S i \\<inter> R \\<noteq> {} \\<rbrakk> \\<Longrightarrow> cost R (min_arg R k) \\<le> cost R i\"", "lemma set_cover_correct:\n\"VARS (R :: 'a set) (C :: nat set) (i :: nat)\n  {True}\n  R := U; C := {};\n  WHILE R \\<noteq> {} INV {R \\<subseteq> U \\<and> sc C (U - R)} DO\n  i := min_arg R m;\n  R := R - S i;\n  C := C \\<union> {i}\n  OD\n  {sc C U}\"", "lemma invI:\n  assumes \"sc C (U - R)\" \"R \\<subseteq> U\"\n          \"\\<exists>c. sum w C = sum c (U - R) \\<and> (\\<forall>i. 0 \\<le> c i)\n        \\<and> (\\<forall>k \\<in> {1..m}. sum c (S k \\<inter> (U - R))\n                      \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse j) * w k)\"\n    shows \"inv C R\"", "lemma invD:\n  assumes \"inv C R\"\n  shows \"sc C (U - R)\" \"R \\<subseteq> U\"\n        \"\\<exists>c. sum w C = sum c (U - R) \\<and> (\\<forall>i. 0 \\<le> c i)\n      \\<and> (\\<forall>k \\<in> {1..m}. sum c (S k \\<inter> (U - R))\n                    \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse j) * w k)\"", "lemma inv_init: \"inv {} U\"", "lemma inv_step:\n  assumes \"inv C R\" \"R \\<noteq> {}\"\n  defines [simp]: \"i \\<equiv> min_arg R m\"\n  shows \"inv (C \\<union> {i}) (R - (S i))\"", "lemma cover_sum:\n  fixes c :: \"'a \\<Rightarrow> real\"\n  assumes \"sc C V\" \"\\<forall>i. 0 \\<le> c i\"\n  shows \"sum c V \\<le> (\\<Sum>i \\<in> C. sum c (S i))\"", "lemma set_cover_bound:\n  assumes \"inv C {}\" \"sc C' U\"\n  shows \"sum w C \\<le> H d\\<^sup>* * sum w C'\"", "theorem set_cover_approx:\n\"VARS (R :: 'a set) (C :: nat set) (i :: nat)\n  {True}\n  R := U; C := {};\n  WHILE R \\<noteq> {} INV {inv C R} DO\n  i := min_arg R m;\n  R := R - S i;\n  C := C \\<union> {i}\n  OD\n  {sc C U \\<and> (\\<forall>C'. sc C' U \\<longrightarrow> sum w C \\<le> H d\\<^sup>* * sum w C')}\""], "translations": [["", "lemma S_subset: \"\\<forall>i \\<in> {1..m}. S i \\<subseteq> U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{1..m}. S i \\<subseteq> U", "using U_def"], ["proof (prove)\nusing this:\n  U = \\<Union> (S ` {1..m})\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{1..m}. S i \\<subseteq> U", "by blast"], ["", "lemma U_finite: \"finite U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite U", "unfolding U_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (\\<Union> (S ` {1..m}))", "using S_finite"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{1..m}. finite (S i)\n\ngoal (1 subgoal):\n 1. finite (\\<Union> (S ` {1..m}))", "by blast"], ["", "lemma empty_cover: \"m = 0 \\<Longrightarrow> U = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m = 0 \\<Longrightarrow> U = {}", "using U_def"], ["proof (prove)\nusing this:\n  U = \\<Union> (S ` {1..m})\n\ngoal (1 subgoal):\n 1. m = 0 \\<Longrightarrow> U = {}", "by simp"], ["", "definition sc :: \"nat set \\<Rightarrow> 'a set \\<Rightarrow> bool\" where\n  \"sc C X \\<longleftrightarrow> C \\<subseteq> {1..m} \\<and> (\\<Union>i \\<in> C. S i) = X\""], ["", "definition cost :: \"'a set \\<Rightarrow> nat \\<Rightarrow> real\" where\n  \"cost R i = w i / card (S i \\<inter> R)\""], ["", "lemma cost_nonneg: \"0 \\<le> cost R i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> cost R i", "using w_nonneg"], ["proof (prove)\nusing this:\n  \\<forall>i. 0 \\<le> w i\n\ngoal (1 subgoal):\n 1. 0 \\<le> cost R i", "by (simp add: cost_def)"], ["", "text \\<open>\\<open>cost R i = 0\\<close> if \\<open>card (S i \\<inter> R) = 0\\<close>! Needs to be accounted for separately in \\<open>min_arg\\<close>.\\<close>"], ["", "fun min_arg :: \"'a set \\<Rightarrow> nat \\<Rightarrow> nat\" where\n  \"min_arg R 0 = 1\"\n| \"min_arg R (Suc x) =\n   (let j = min_arg R x\n    in if S j \\<inter> R = {} \\<or> (S (Suc x) \\<inter> R \\<noteq> {} \\<and> cost R (Suc x) < cost R j) then (Suc x) else j)\""], ["", "lemma min_in_range: \"k > 0 \\<Longrightarrow> min_arg R k \\<in> {1..k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow> min_arg R k \\<in> {1..k}", "by (induction k) (force simp: Let_def)+"], ["", "lemma min_empty: \"S (min_arg R k) \\<inter> R = {} \\<Longrightarrow> \\<forall>i \\<in> {1..k}. S i \\<inter> R = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S (min_arg R k) \\<inter> R = {} \\<Longrightarrow>\n    \\<forall>i\\<in>{1..k}. S i \\<inter> R = {}", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. S (min_arg R 0) \\<inter> R = {} \\<Longrightarrow>\n    \\<forall>i\\<in>{1..0}. S i \\<inter> R = {}\n 2. \\<And>k.\n       \\<lbrakk>S (min_arg R k) \\<inter> R = {} \\<Longrightarrow>\n                \\<forall>i\\<in>{1..k}. S i \\<inter> R = {};\n        S (min_arg R (Suc k)) \\<inter> R = {}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>{1..Suc k}. S i \\<inter> R = {}", "case (Suc k)"], ["proof (state)\nthis:\n  S (min_arg R k) \\<inter> R = {} \\<Longrightarrow>\n  \\<forall>i\\<in>{1..k}. S i \\<inter> R = {}\n  S (min_arg R (Suc k)) \\<inter> R = {}\n\ngoal (2 subgoals):\n 1. S (min_arg R 0) \\<inter> R = {} \\<Longrightarrow>\n    \\<forall>i\\<in>{1..0}. S i \\<inter> R = {}\n 2. \\<And>k.\n       \\<lbrakk>S (min_arg R k) \\<inter> R = {} \\<Longrightarrow>\n                \\<forall>i\\<in>{1..k}. S i \\<inter> R = {};\n        S (min_arg R (Suc k)) \\<inter> R = {}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>{1..Suc k}. S i \\<inter> R = {}", "from Suc.prems"], ["proof (chain)\npicking this:\n  S (min_arg R (Suc k)) \\<inter> R = {}", "have prem: \"S (min_arg R k) \\<inter> R = {}\""], ["proof (prove)\nusing this:\n  S (min_arg R (Suc k)) \\<inter> R = {}\n\ngoal (1 subgoal):\n 1. S (min_arg R k) \\<inter> R = {}", "by (auto simp: Let_def split: if_splits)"], ["proof (state)\nthis:\n  S (min_arg R k) \\<inter> R = {}\n\ngoal (2 subgoals):\n 1. S (min_arg R 0) \\<inter> R = {} \\<Longrightarrow>\n    \\<forall>i\\<in>{1..0}. S i \\<inter> R = {}\n 2. \\<And>k.\n       \\<lbrakk>S (min_arg R k) \\<inter> R = {} \\<Longrightarrow>\n                \\<forall>i\\<in>{1..k}. S i \\<inter> R = {};\n        S (min_arg R (Suc k)) \\<inter> R = {}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>{1..Suc k}. S i \\<inter> R = {}", "with Suc.IH"], ["proof (chain)\npicking this:\n  S (min_arg R k) \\<inter> R = {} \\<Longrightarrow>\n  \\<forall>i\\<in>{1..k}. S i \\<inter> R = {}\n  S (min_arg R k) \\<inter> R = {}", "have IH: \"\\<forall>i \\<in> {1..k}. S i \\<inter> R = {}\""], ["proof (prove)\nusing this:\n  S (min_arg R k) \\<inter> R = {} \\<Longrightarrow>\n  \\<forall>i\\<in>{1..k}. S i \\<inter> R = {}\n  S (min_arg R k) \\<inter> R = {}\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{1..k}. S i \\<inter> R = {}", "."], ["proof (state)\nthis:\n  \\<forall>i\\<in>{1..k}. S i \\<inter> R = {}\n\ngoal (2 subgoals):\n 1. S (min_arg R 0) \\<inter> R = {} \\<Longrightarrow>\n    \\<forall>i\\<in>{1..0}. S i \\<inter> R = {}\n 2. \\<And>k.\n       \\<lbrakk>S (min_arg R k) \\<inter> R = {} \\<Longrightarrow>\n                \\<forall>i\\<in>{1..k}. S i \\<inter> R = {};\n        S (min_arg R (Suc k)) \\<inter> R = {}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>{1..Suc k}. S i \\<inter> R = {}", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{1..Suc k}. S i \\<inter> R = {}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {1..Suc k} \\<Longrightarrow> S i \\<inter> R = {}", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {1..Suc k} \\<Longrightarrow> S i \\<inter> R = {}", "assume \"i \\<in> {1..Suc k}\""], ["proof (state)\nthis:\n  i \\<in> {1..Suc k}\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {1..Suc k} \\<Longrightarrow> S i \\<inter> R = {}", "show \"S i \\<inter> R = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S i \\<inter> R = {}", "proof (cases \\<open>i = Suc k\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. i = Suc k \\<Longrightarrow> S i \\<inter> R = {}\n 2. i \\<noteq> Suc k \\<Longrightarrow> S i \\<inter> R = {}", "case True"], ["proof (state)\nthis:\n  i = Suc k\n\ngoal (2 subgoals):\n 1. i = Suc k \\<Longrightarrow> S i \\<inter> R = {}\n 2. i \\<noteq> Suc k \\<Longrightarrow> S i \\<inter> R = {}", "with Suc.prems prem"], ["proof (chain)\npicking this:\n  S (min_arg R (Suc k)) \\<inter> R = {}\n  S (min_arg R k) \\<inter> R = {}\n  i = Suc k", "show ?thesis"], ["proof (prove)\nusing this:\n  S (min_arg R (Suc k)) \\<inter> R = {}\n  S (min_arg R k) \\<inter> R = {}\n  i = Suc k\n\ngoal (1 subgoal):\n 1. S i \\<inter> R = {}", "by simp"], ["proof (state)\nthis:\n  S i \\<inter> R = {}\n\ngoal (1 subgoal):\n 1. i \\<noteq> Suc k \\<Longrightarrow> S i \\<inter> R = {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> Suc k \\<Longrightarrow> S i \\<inter> R = {}", "case False"], ["proof (state)\nthis:\n  i \\<noteq> Suc k\n\ngoal (1 subgoal):\n 1. i \\<noteq> Suc k \\<Longrightarrow> S i \\<inter> R = {}", "with IH \\<open>i \\<in> {1..Suc k}\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i\\<in>{1..k}. S i \\<inter> R = {}\n  i \\<in> {1..Suc k}\n  i \\<noteq> Suc k", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{1..k}. S i \\<inter> R = {}\n  i \\<in> {1..Suc k}\n  i \\<noteq> Suc k\n\ngoal (1 subgoal):\n 1. S i \\<inter> R = {}", "by simp"], ["proof (state)\nthis:\n  S i \\<inter> R = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  S i \\<inter> R = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{1..Suc k}. S i \\<inter> R = {}\n\ngoal (1 subgoal):\n 1. S (min_arg R 0) \\<inter> R = {} \\<Longrightarrow>\n    \\<forall>i\\<in>{1..0}. S i \\<inter> R = {}", "qed simp"], ["", "lemma min_correct: \"\\<lbrakk> i \\<in> {1..k}; S i \\<inter> R \\<noteq> {} \\<rbrakk> \\<Longrightarrow> cost R (min_arg R k) \\<le> cost R i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<in> {1..k}; S i \\<inter> R \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> cost R (min_arg R k) \\<le> cost R i", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<in> {1..0}; S i \\<inter> R \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> cost R (min_arg R 0) \\<le> cost R i\n 2. \\<And>k.\n       \\<lbrakk>\\<lbrakk>i \\<in> {1..k}; S i \\<inter> R \\<noteq> {}\\<rbrakk>\n                \\<Longrightarrow> cost R (min_arg R k) \\<le> cost R i;\n        i \\<in> {1..Suc k}; S i \\<inter> R \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> cost R (min_arg R (Suc k)) \\<le> cost R i", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>i \\<in> {1..k}; S i \\<inter> R \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> cost R (min_arg R k) \\<le> cost R i\n  i \\<in> {1..Suc k}\n  S i \\<inter> R \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<in> {1..0}; S i \\<inter> R \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> cost R (min_arg R 0) \\<le> cost R i\n 2. \\<And>k.\n       \\<lbrakk>\\<lbrakk>i \\<in> {1..k}; S i \\<inter> R \\<noteq> {}\\<rbrakk>\n                \\<Longrightarrow> cost R (min_arg R k) \\<le> cost R i;\n        i \\<in> {1..Suc k}; S i \\<inter> R \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> cost R (min_arg R (Suc k)) \\<le> cost R i", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. cost R (min_arg R (Suc k)) \\<le> cost R i", "proof (cases \\<open>i = Suc k\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. i = Suc k \\<Longrightarrow> cost R (min_arg R (Suc k)) \\<le> cost R i\n 2. i \\<noteq> Suc k \\<Longrightarrow>\n    cost R (min_arg R (Suc k)) \\<le> cost R i", "case True"], ["proof (state)\nthis:\n  i = Suc k\n\ngoal (2 subgoals):\n 1. i = Suc k \\<Longrightarrow> cost R (min_arg R (Suc k)) \\<le> cost R i\n 2. i \\<noteq> Suc k \\<Longrightarrow>\n    cost R (min_arg R (Suc k)) \\<le> cost R i", "with Suc.prems"], ["proof (chain)\npicking this:\n  i \\<in> {1..Suc k}\n  S i \\<inter> R \\<noteq> {}\n  i = Suc k", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<in> {1..Suc k}\n  S i \\<inter> R \\<noteq> {}\n  i = Suc k\n\ngoal (1 subgoal):\n 1. cost R (min_arg R (Suc k)) \\<le> cost R i", "by (auto simp: Let_def)"], ["proof (state)\nthis:\n  cost R (min_arg R (Suc k)) \\<le> cost R i\n\ngoal (1 subgoal):\n 1. i \\<noteq> Suc k \\<Longrightarrow>\n    cost R (min_arg R (Suc k)) \\<le> cost R i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> Suc k \\<Longrightarrow>\n    cost R (min_arg R (Suc k)) \\<le> cost R i", "case False"], ["proof (state)\nthis:\n  i \\<noteq> Suc k\n\ngoal (1 subgoal):\n 1. i \\<noteq> Suc k \\<Longrightarrow>\n    cost R (min_arg R (Suc k)) \\<le> cost R i", "with Suc.prems Suc.IH"], ["proof (chain)\npicking this:\n  i \\<in> {1..Suc k}\n  S i \\<inter> R \\<noteq> {}\n  \\<lbrakk>i \\<in> {1..k}; S i \\<inter> R \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> cost R (min_arg R k) \\<le> cost R i\n  i \\<noteq> Suc k", "have IH: \"cost R (min_arg R k) \\<le> cost R i\""], ["proof (prove)\nusing this:\n  i \\<in> {1..Suc k}\n  S i \\<inter> R \\<noteq> {}\n  \\<lbrakk>i \\<in> {1..k}; S i \\<inter> R \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> cost R (min_arg R k) \\<le> cost R i\n  i \\<noteq> Suc k\n\ngoal (1 subgoal):\n 1. cost R (min_arg R k) \\<le> cost R i", "by simp"], ["proof (state)\nthis:\n  cost R (min_arg R k) \\<le> cost R i\n\ngoal (1 subgoal):\n 1. i \\<noteq> Suc k \\<Longrightarrow>\n    cost R (min_arg R (Suc k)) \\<le> cost R i", "from Suc.prems False min_empty[of R k]"], ["proof (chain)\npicking this:\n  i \\<in> {1..Suc k}\n  S i \\<inter> R \\<noteq> {}\n  i \\<noteq> Suc k\n  S (min_arg R k) \\<inter> R = {} \\<Longrightarrow>\n  \\<forall>i\\<in>{1..k}. S i \\<inter> R = {}", "have \"S (min_arg R k) \\<inter> R \\<noteq> {}\""], ["proof (prove)\nusing this:\n  i \\<in> {1..Suc k}\n  S i \\<inter> R \\<noteq> {}\n  i \\<noteq> Suc k\n  S (min_arg R k) \\<inter> R = {} \\<Longrightarrow>\n  \\<forall>i\\<in>{1..k}. S i \\<inter> R = {}\n\ngoal (1 subgoal):\n 1. S (min_arg R k) \\<inter> R \\<noteq> {}", "by force"], ["proof (state)\nthis:\n  S (min_arg R k) \\<inter> R \\<noteq> {}\n\ngoal (1 subgoal):\n 1. i \\<noteq> Suc k \\<Longrightarrow>\n    cost R (min_arg R (Suc k)) \\<le> cost R i", "with IH"], ["proof (chain)\npicking this:\n  cost R (min_arg R k) \\<le> cost R i\n  S (min_arg R k) \\<inter> R \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  cost R (min_arg R k) \\<le> cost R i\n  S (min_arg R k) \\<inter> R \\<noteq> {}\n\ngoal (1 subgoal):\n 1. cost R (min_arg R (Suc k)) \\<le> cost R i", "by (auto simp: Let_def)"], ["proof (state)\nthis:\n  cost R (min_arg R (Suc k)) \\<le> cost R i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cost R (min_arg R (Suc k)) \\<le> cost R i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<in> {1..0}; S i \\<inter> R \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> cost R (min_arg R 0) \\<le> cost R i", "qed simp"], ["", "text \\<open>Correctness holds quite trivially for both m = 0 and m > 0\n      (assuming a set cover can be found at all, otherwise algorithm would not terminate).\\<close>"], ["", "lemma set_cover_correct:\n\"VARS (R :: 'a set) (C :: nat set) (i :: nat)\n  {True}\n  R := U; C := {};\n  WHILE R \\<noteq> {} INV {R \\<subseteq> U \\<and> sc C (U - R)} DO\n  i := min_arg R m;\n  R := R - S i;\n  C := C \\<union> {i}\n  OD\n  {sc C U}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {True} \n     R := U;\n     C := {};\n     WHILE R \\<noteq> {} INV {R \\<subseteq> U \\<and> sc C (U - R)} \n      VAR {\\<lambda>(R, C, i). 0} \n      DO i := min_arg R m; R := R - S i; C := C \\<union> {i} OD \n     {sc C U}", "proof (vcg, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>R C i. True \\<Longrightarrow> U \\<subseteq> U \\<and> sc {} (U - U)\n 2. \\<And>R C i.\n       (R \\<subseteq> U \\<and> sc C (U - R)) \\<and>\n       R \\<noteq> {} \\<Longrightarrow>\n       R - S (min_arg R m) \\<subseteq> U \\<and>\n       sc (C \\<union> {min_arg R m}) (U - (R - S (min_arg R m)))\n 3. \\<And>R C i.\n       (R \\<subseteq> U \\<and> sc C (U - R)) \\<and>\n       \\<not> R \\<noteq> {} \\<Longrightarrow>\n       sc C U", "case 2"], ["proof (state)\nthis:\n  (R_ \\<subseteq> U \\<and> sc C_ (U - R_)) \\<and> R_ \\<noteq> {}\n\ngoal (3 subgoals):\n 1. \\<And>R C i. True \\<Longrightarrow> U \\<subseteq> U \\<and> sc {} (U - U)\n 2. \\<And>R C i.\n       (R \\<subseteq> U \\<and> sc C (U - R)) \\<and>\n       R \\<noteq> {} \\<Longrightarrow>\n       R - S (min_arg R m) \\<subseteq> U \\<and>\n       sc (C \\<union> {min_arg R m}) (U - (R - S (min_arg R m)))\n 3. \\<And>R C i.\n       (R \\<subseteq> U \\<and> sc C (U - R)) \\<and>\n       \\<not> R \\<noteq> {} \\<Longrightarrow>\n       sc C U", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. R_ - S (min_arg R_ m) \\<subseteq> U \\<and>\n    sc (C_ \\<union> {min_arg R_ m}) (U - (R_ - S (min_arg R_ m)))", "proof (cases m)"], ["proof (state)\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    R_ - S (min_arg R_ m) \\<subseteq> U \\<and>\n    sc (C_ \\<union> {min_arg R_ m}) (U - (R_ - S (min_arg R_ m)))\n 2. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       R_ - S (min_arg R_ m) \\<subseteq> U \\<and>\n       sc (C_ \\<union> {min_arg R_ m}) (U - (R_ - S (min_arg R_ m)))", "case 0"], ["proof (state)\nthis:\n  m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    R_ - S (min_arg R_ m) \\<subseteq> U \\<and>\n    sc (C_ \\<union> {min_arg R_ m}) (U - (R_ - S (min_arg R_ m)))\n 2. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       R_ - S (min_arg R_ m) \\<subseteq> U \\<and>\n       sc (C_ \\<union> {min_arg R_ m}) (U - (R_ - S (min_arg R_ m)))", "from empty_cover[OF this] 2"], ["proof (chain)\npicking this:\n  U = {}\n  (R_ \\<subseteq> U \\<and> sc C_ (U - R_)) \\<and> R_ \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  U = {}\n  (R_ \\<subseteq> U \\<and> sc C_ (U - R_)) \\<and> R_ \\<noteq> {}\n\ngoal (1 subgoal):\n 1. R_ - S (min_arg R_ m) \\<subseteq> U \\<and>\n    sc (C_ \\<union> {min_arg R_ m}) (U - (R_ - S (min_arg R_ m)))", "by (auto simp: sc_def)"], ["proof (state)\nthis:\n  R_ - S (min_arg R_ m) \\<subseteq> U \\<and>\n  sc (C_ \\<union> {min_arg R_ m}) (U - (R_ - S (min_arg R_ m)))\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       R_ - S (min_arg R_ m) \\<subseteq> U \\<and>\n       sc (C_ \\<union> {min_arg R_ m}) (U - (R_ - S (min_arg R_ m)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       R_ - S (min_arg R_ m) \\<subseteq> U \\<and>\n       sc (C_ \\<union> {min_arg R_ m}) (U - (R_ - S (min_arg R_ m)))", "case Suc"], ["proof (state)\nthis:\n  m = Suc nat_\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       R_ - S (min_arg R_ m) \\<subseteq> U \\<and>\n       sc (C_ \\<union> {min_arg R_ m}) (U - (R_ - S (min_arg R_ m)))", "then"], ["proof (chain)\npicking this:\n  m = Suc nat_", "have \"m > 0\""], ["proof (prove)\nusing this:\n  m = Suc nat_\n\ngoal (1 subgoal):\n 1. 0 < m", "by simp"], ["proof (state)\nthis:\n  0 < m\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       R_ - S (min_arg R_ m) \\<subseteq> U \\<and>\n       sc (C_ \\<union> {min_arg R_ m}) (U - (R_ - S (min_arg R_ m)))", "from min_in_range[OF this] 2"], ["proof (chain)\npicking this:\n  min_arg ?R m \\<in> {1..m}\n  (R_ \\<subseteq> U \\<and> sc C_ (U - R_)) \\<and> R_ \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  min_arg ?R m \\<in> {1..m}\n  (R_ \\<subseteq> U \\<and> sc C_ (U - R_)) \\<and> R_ \\<noteq> {}\n\ngoal (1 subgoal):\n 1. R_ - S (min_arg R_ m) \\<subseteq> U \\<and>\n    sc (C_ \\<union> {min_arg R_ m}) (U - (R_ - S (min_arg R_ m)))", "using S_subset"], ["proof (prove)\nusing this:\n  min_arg ?R m \\<in> {1..m}\n  (R_ \\<subseteq> U \\<and> sc C_ (U - R_)) \\<and> R_ \\<noteq> {}\n  \\<forall>i\\<in>{1..m}. S i \\<subseteq> U\n\ngoal (1 subgoal):\n 1. R_ - S (min_arg R_ m) \\<subseteq> U \\<and>\n    sc (C_ \\<union> {min_arg R_ m}) (U - (R_ - S (min_arg R_ m)))", "by (auto simp: sc_def)"], ["proof (state)\nthis:\n  R_ - S (min_arg R_ m) \\<subseteq> U \\<and>\n  sc (C_ \\<union> {min_arg R_ m}) (U - (R_ - S (min_arg R_ m)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  R_ - S (min_arg R_ m) \\<subseteq> U \\<and>\n  sc (C_ \\<union> {min_arg R_ m}) (U - (R_ - S (min_arg R_ m)))\n\ngoal (2 subgoals):\n 1. \\<And>R C i. True \\<Longrightarrow> U \\<subseteq> U \\<and> sc {} (U - U)\n 2. \\<And>R C i.\n       (R \\<subseteq> U \\<and> sc C (U - R)) \\<and>\n       \\<not> R \\<noteq> {} \\<Longrightarrow>\n       sc C U", "qed (auto simp: sc_def)"], ["", "definition c_exists :: \"nat set \\<Rightarrow> 'a set \\<Rightarrow> bool\" where\n  \"c_exists C R = (\\<exists>c. sum w C = sum c (U - R) \\<and> (\\<forall>i. 0 \\<le> c i)\n                \\<and> (\\<forall>k \\<in> {1..m}. sum c (S k \\<inter> (U - R))\n                   \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse j) * w k))\""], ["", "definition inv :: \"nat set \\<Rightarrow> 'a set \\<Rightarrow> bool\" where\n  \"inv C R \\<longleftrightarrow> sc C (U - R) \\<and> R \\<subseteq> U \\<and> c_exists C R\""], ["", "lemma invI:\n  assumes \"sc C (U - R)\" \"R \\<subseteq> U\"\n          \"\\<exists>c. sum w C = sum c (U - R) \\<and> (\\<forall>i. 0 \\<le> c i)\n        \\<and> (\\<forall>k \\<in> {1..m}. sum c (S k \\<inter> (U - R))\n                      \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse j) * w k)\"\n    shows \"inv C R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.inv C R", "using assms"], ["proof (prove)\nusing this:\n  sc C (U - R)\n  R \\<subseteq> U\n  \\<exists>c.\n     sum w C = sum c (U - R) \\<and>\n     (\\<forall>i. 0 \\<le> c i) \\<and>\n     (\\<forall>k\\<in>{1..m}.\n         sum c (S k \\<inter> (U - R))\n         \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n                   inverse (real j)) *\n               w k)\n\ngoal (1 subgoal):\n 1. local.inv C R", "by (auto simp: inv_def c_exists_def)"], ["", "lemma invD:\n  assumes \"inv C R\"\n  shows \"sc C (U - R)\" \"R \\<subseteq> U\"\n        \"\\<exists>c. sum w C = sum c (U - R) \\<and> (\\<forall>i. 0 \\<le> c i)\n      \\<and> (\\<forall>k \\<in> {1..m}. sum c (S k \\<inter> (U - R))\n                    \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse j) * w k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sc C (U - R) &&&\n    R \\<subseteq> U &&&\n    \\<exists>c.\n       sum w C = sum c (U - R) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - R))\n           \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "using assms"], ["proof (prove)\nusing this:\n  local.inv C R\n\ngoal (1 subgoal):\n 1. sc C (U - R) &&&\n    R \\<subseteq> U &&&\n    \\<exists>c.\n       sum w C = sum c (U - R) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - R))\n           \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "by (auto simp: inv_def c_exists_def)"], ["", "lemma inv_init: \"inv {} U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.inv {} U", "proof (rule invI, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. sc {} (U - U)\n 2. U \\<subseteq> U\n 3. \\<exists>c.\n       sum w {} = sum c (U - U) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - U))\n           \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "case 3"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. sc {} (U - U)\n 2. U \\<subseteq> U\n 3. \\<exists>c.\n       sum w {} = sum c (U - U) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - U))\n           \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "let ?c = \"(\\<lambda>_. 0) :: 'a \\<Rightarrow> real\""], ["proof (state)\ngoal (3 subgoals):\n 1. sc {} (U - U)\n 2. U \\<subseteq> U\n 3. \\<exists>c.\n       sum w {} = sum c (U - U) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - U))\n           \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "have \"sum w {} = sum ?c (U - U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum w {} = (\\<Sum>_\\<in>U - U. 0)", "by simp"], ["proof (state)\nthis:\n  sum w {} = (\\<Sum>_\\<in>U - U. 0)\n\ngoal (3 subgoals):\n 1. sc {} (U - U)\n 2. U \\<subseteq> U\n 3. \\<exists>c.\n       sum w {} = sum c (U - U) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - U))\n           \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "moreover"], ["proof (state)\nthis:\n  sum w {} = (\\<Sum>_\\<in>U - U. 0)\n\ngoal (3 subgoals):\n 1. sc {} (U - U)\n 2. U \\<subseteq> U\n 3. \\<exists>c.\n       sum w {} = sum c (U - U) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - U))\n           \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "{"], ["proof (state)\nthis:\n  sum w {} = (\\<Sum>_\\<in>U - U. 0)\n\ngoal (3 subgoals):\n 1. sc {} (U - U)\n 2. U \\<subseteq> U\n 3. \\<exists>c.\n       sum w {} = sum c (U - U) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - U))\n           \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "have \"\\<forall>k \\<in> {1..m}. 0 \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k). inverse j) * w k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>{1..m}.\n       0 \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k).\n                   inverse (real j)) *\n               w k", "by (simp add: sum_nonneg w_nonneg)"], ["proof (state)\nthis:\n  \\<forall>k\\<in>{1..m}.\n     0 \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k).\n                 inverse (real j)) *\n             w k\n\ngoal (3 subgoals):\n 1. sc {} (U - U)\n 2. U \\<subseteq> U\n 3. \\<exists>c.\n       sum w {} = sum c (U - U) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - U))\n           \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "then"], ["proof (chain)\npicking this:\n  \\<forall>k\\<in>{1..m}.\n     0 \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "have \"(\\<forall>k\\<in>{1..m}. sum ?c (S k \\<inter> (U - U))\n             \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k). inverse j) * w k)\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>{1..m}.\n     0 \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k).\n                 inverse (real j)) *\n             w k\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>{1..m}.\n       (\\<Sum>_\\<in>S k \\<inter> (U - U). 0)\n       \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "by simp"], ["proof (state)\nthis:\n  \\<forall>k\\<in>{1..m}.\n     (\\<Sum>_\\<in>S k \\<inter> (U - U). 0)\n     \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k).\n               inverse (real j)) *\n           w k\n\ngoal (3 subgoals):\n 1. sc {} (U - U)\n 2. U \\<subseteq> U\n 3. \\<exists>c.\n       sum w {} = sum c (U - U) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - U))\n           \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "}"], ["proof (state)\nthis:\n  \\<forall>k\\<in>{1..m}.\n     (\\<Sum>_\\<in>S k \\<inter> (U - U). 0)\n     \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k).\n               inverse (real j)) *\n           w k\n\ngoal (3 subgoals):\n 1. sc {} (U - U)\n 2. U \\<subseteq> U\n 3. \\<exists>c.\n       sum w {} = sum c (U - U) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - U))\n           \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "ultimately"], ["proof (chain)\npicking this:\n  sum w {} = (\\<Sum>_\\<in>U - U. 0)\n  \\<forall>k\\<in>{1..m}.\n     (\\<Sum>_\\<in>S k \\<inter> (U - U). 0)\n     \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k).\n               inverse (real j)) *\n           w k", "show ?case"], ["proof (prove)\nusing this:\n  sum w {} = (\\<Sum>_\\<in>U - U. 0)\n  \\<forall>k\\<in>{1..m}.\n     (\\<Sum>_\\<in>S k \\<inter> (U - U). 0)\n     \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k).\n               inverse (real j)) *\n           w k\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w {} = sum c (U - U) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - U))\n           \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "by blast"], ["proof (state)\nthis:\n  \\<exists>c.\n     sum w {} = sum c (U - U) \\<and>\n     (\\<forall>i. 0 \\<le> c i) \\<and>\n     (\\<forall>k\\<in>{1..m}.\n         sum c (S k \\<inter> (U - U))\n         \\<le> (\\<Sum>j = card (S k \\<inter> U) + 1..card (S k).\n                   inverse (real j)) *\n               w k)\n\ngoal (2 subgoals):\n 1. sc {} (U - U)\n 2. U \\<subseteq> U", "qed (simp_all add: sc_def)"], ["", "lemma inv_step:\n  assumes \"inv C R\" \"R \\<noteq> {}\"\n  defines [simp]: \"i \\<equiv> min_arg R m\"\n  shows \"inv (C \\<union> {i}) (R - (S i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.inv (C \\<union> {i}) (R - S i)", "proof (cases m)"], ["proof (state)\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> local.inv (C \\<union> {i}) (R - S i)\n 2. \\<And>nat.\n       m = Suc nat \\<Longrightarrow> local.inv (C \\<union> {i}) (R - S i)", "case 0"], ["proof (state)\nthis:\n  m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> local.inv (C \\<union> {i}) (R - S i)\n 2. \\<And>nat.\n       m = Suc nat \\<Longrightarrow> local.inv (C \\<union> {i}) (R - S i)", "from empty_cover[OF this] invD(2)[OF assms(1)]"], ["proof (chain)\npicking this:\n  U = {}\n  R \\<subseteq> U", "have \"R = {}\""], ["proof (prove)\nusing this:\n  U = {}\n  R \\<subseteq> U\n\ngoal (1 subgoal):\n 1. R = {}", "by blast"], ["proof (state)\nthis:\n  R = {}\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> local.inv (C \\<union> {i}) (R - S i)\n 2. \\<And>nat.\n       m = Suc nat \\<Longrightarrow> local.inv (C \\<union> {i}) (R - S i)", "then"], ["proof (chain)\npicking this:\n  R = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  R = {}\n\ngoal (1 subgoal):\n 1. local.inv (C \\<union> {i}) (R - S i)", "using assms(2)"], ["proof (prove)\nusing this:\n  R = {}\n  R \\<noteq> {}\n\ngoal (1 subgoal):\n 1. local.inv (C \\<union> {i}) (R - S i)", "by simp"], ["proof (state)\nthis:\n  local.inv (C \\<union> {i}) (R - S i)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow> local.inv (C \\<union> {i}) (R - S i)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow> local.inv (C \\<union> {i}) (R - S i)", "case Suc"], ["proof (state)\nthis:\n  m = Suc nat_\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow> local.inv (C \\<union> {i}) (R - S i)", "then"], ["proof (chain)\npicking this:\n  m = Suc nat_", "have \"0 < m\""], ["proof (prove)\nusing this:\n  m = Suc nat_\n\ngoal (1 subgoal):\n 1. 0 < m", "by simp"], ["proof (state)\nthis:\n  0 < m\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow> local.inv (C \\<union> {i}) (R - S i)", "note hyp = invD[OF assms(1)]"], ["proof (state)\nthis:\n  sc C (U - R)\n  R \\<subseteq> U\n  \\<exists>c.\n     sum w C = sum c (U - R) \\<and>\n     (\\<forall>i. 0 \\<le> c i) \\<and>\n     (\\<forall>k\\<in>{1..m}.\n         sum c (S k \\<inter> (U - R))\n         \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n                   inverse (real j)) *\n               w k)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow> local.inv (C \\<union> {i}) (R - S i)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.inv (C \\<union> {i}) (R - S i)", "proof (rule invI, goal_cases)\n      \\<comment> \\<open>Correctness\\<close>"], ["proof (state)\ngoal (3 subgoals):\n 1. sc (C \\<union> {i}) (U - (R - S i))\n 2. R - S i \\<subseteq> U\n 3. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. sc (C \\<union> {i}) (U - (R - S i))\n 2. R - S i \\<subseteq> U\n 3. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "have \"i \\<in> {1..m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> {1..m}", "using min_in_range[OF \\<open>0 < m\\<close>]"], ["proof (prove)\nusing this:\n  min_arg ?R m \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. i \\<in> {1..m}", "by simp"], ["proof (state)\nthis:\n  i \\<in> {1..m}\n\ngoal (3 subgoals):\n 1. sc (C \\<union> {i}) (U - (R - S i))\n 2. R - S i \\<subseteq> U\n 3. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "with hyp(1) S_subset"], ["proof (chain)\npicking this:\n  sc C (U - R)\n  \\<forall>i\\<in>{1..m}. S i \\<subseteq> U\n  i \\<in> {1..m}", "show ?case"], ["proof (prove)\nusing this:\n  sc C (U - R)\n  \\<forall>i\\<in>{1..m}. S i \\<subseteq> U\n  i \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. sc (C \\<union> {i}) (U - (R - S i))", "by (auto simp: sc_def)"], ["proof (state)\nthis:\n  sc (C \\<union> {i}) (U - (R - S i))\n\ngoal (2 subgoals):\n 1. R - S i \\<subseteq> U\n 2. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. R - S i \\<subseteq> U\n 2. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "case 2"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. R - S i \\<subseteq> U\n 2. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "from hyp(2)"], ["proof (chain)\npicking this:\n  R \\<subseteq> U", "show ?case"], ["proof (prove)\nusing this:\n  R \\<subseteq> U\n\ngoal (1 subgoal):\n 1. R - S i \\<subseteq> U", "by auto"], ["proof (state)\nthis:\n  R - S i \\<subseteq> U\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "case 3\n      \\<comment> \\<open>Set Cover grows\\<close>"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "have \"\\<exists>i \\<in> {1..m}. S i \\<inter> R \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>{1..m}. S i \\<inter> R \\<noteq> {}", "using assms(2) U_def hyp(2)"], ["proof (prove)\nusing this:\n  R \\<noteq> {}\n  U = \\<Union> (S ` {1..m})\n  R \\<subseteq> U\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>{1..m}. S i \\<inter> R \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  \\<exists>i\\<in>{1..m}. S i \\<inter> R \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "then"], ["proof (chain)\npicking this:\n  \\<exists>i\\<in>{1..m}. S i \\<inter> R \\<noteq> {}", "have \"S i \\<inter> R \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<in>{1..m}. S i \\<inter> R \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S i \\<inter> R \\<noteq> {}", "using min_empty"], ["proof (prove)\nusing this:\n  \\<exists>i\\<in>{1..m}. S i \\<inter> R \\<noteq> {}\n  S (min_arg ?R ?k) \\<inter> ?R = {} \\<Longrightarrow>\n  \\<forall>i\\<in>{1..?k}. S i \\<inter> ?R = {}\n\ngoal (1 subgoal):\n 1. S i \\<inter> R \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  S i \\<inter> R \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "then"], ["proof (chain)\npicking this:\n  S i \\<inter> R \\<noteq> {}", "have \"0 < card (S i \\<inter> R)\""], ["proof (prove)\nusing this:\n  S i \\<inter> R \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 0 < card (S i \\<inter> R)", "using S_finite min_in_range[OF \\<open>0 < m\\<close>]"], ["proof (prove)\nusing this:\n  S i \\<inter> R \\<noteq> {}\n  \\<forall>i\\<in>{1..m}. finite (S i)\n  min_arg ?R m \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. 0 < card (S i \\<inter> R)", "by auto\n\n      \\<comment> \\<open>Proving properties of cost function\\<close>"], ["proof (state)\nthis:\n  0 < card (S i \\<inter> R)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "from hyp(3)"], ["proof (chain)\npicking this:\n  \\<exists>c.\n     sum w C = sum c (U - R) \\<and>\n     (\\<forall>i. 0 \\<le> c i) \\<and>\n     (\\<forall>k\\<in>{1..m}.\n         sum c (S k \\<inter> (U - R))\n         \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n                   inverse (real j)) *\n               w k)", "obtain c where \"sum w C = sum c (U - R)\" \"\\<forall>i. 0 \\<le> c i\" and\n      SUM: \"\\<forall>k\\<in>{1..m}. sum c (S k \\<inter> (U - R))\n        \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse j) * w k\""], ["proof (prove)\nusing this:\n  \\<exists>c.\n     sum w C = sum c (U - R) \\<and>\n     (\\<forall>i. 0 \\<le> c i) \\<and>\n     (\\<forall>k\\<in>{1..m}.\n         sum c (S k \\<inter> (U - R))\n         \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n                   inverse (real j)) *\n               w k)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>sum w C = sum c (U - R); \\<forall>i. 0 \\<le> c i;\n         \\<forall>k\\<in>{1..m}.\n            sum c (S k \\<inter> (U - R))\n            \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n                      inverse (real j)) *\n                  w k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  sum w C = sum c (U - R)\n  \\<forall>i. 0 \\<le> c i\n  \\<forall>k\\<in>{1..m}.\n     sum c (S k \\<inter> (U - R))\n     \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n               inverse (real j)) *\n           w k\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "let ?c = \"(\\<lambda>x. if x \\<in> S i \\<inter> R then cost R i else c x)\"\n\n      \\<comment> \\<open>Proof of Lemma 11.9\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "have \"finite (U - R)\" \"finite (S i \\<inter> R)\" \"(U - R) \\<inter> (S i \\<inter> R) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (U - R) &&&\n    finite (S i \\<inter> R) &&& (U - R) \\<inter> (S i \\<inter> R) = {}", "using U_finite S_finite min_in_range[OF \\<open>0 < m\\<close>]"], ["proof (prove)\nusing this:\n  finite U\n  \\<forall>i\\<in>{1..m}. finite (S i)\n  min_arg ?R m \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. finite (U - R) &&&\n    finite (S i \\<inter> R) &&& (U - R) \\<inter> (S i \\<inter> R) = {}", "by auto"], ["proof (state)\nthis:\n  finite (U - R)\n  finite (S i \\<inter> R)\n  (U - R) \\<inter> (S i \\<inter> R) = {}\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "then"], ["proof (chain)\npicking this:\n  finite (U - R)\n  finite (S i \\<inter> R)\n  (U - R) \\<inter> (S i \\<inter> R) = {}", "have \"sum ?c (U - R \\<union> (S i \\<inter> R)) = sum ?c (U - R) + sum ?c (S i \\<inter> R)\""], ["proof (prove)\nusing this:\n  finite (U - R)\n  finite (S i \\<inter> R)\n  (U - R) \\<inter> (S i \\<inter> R) = {}\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>U - R \\<union> S i \\<inter> R.\n       if x \\<in> S i \\<inter> R then cost R i else c x) =\n    (\\<Sum>x\\<in>U - R. if x \\<in> S i \\<inter> R then cost R i else c x) +\n    (\\<Sum>x\\<in>S i \\<inter> R.\n       if x \\<in> S i \\<inter> R then cost R i else c x)", "by (rule sum.union_disjoint)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>U - R \\<union> S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  (\\<Sum>x\\<in>U - R. if x \\<in> S i \\<inter> R then cost R i else c x) +\n  (\\<Sum>x\\<in>S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>U - R \\<union> S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  (\\<Sum>x\\<in>U - R. if x \\<in> S i \\<inter> R then cost R i else c x) +\n  (\\<Sum>x\\<in>S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "have U_split: \"U - (R - S i) = U - R \\<union> (S i \\<inter> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U - (R - S i) = U - R \\<union> S i \\<inter> R", "using hyp(2)"], ["proof (prove)\nusing this:\n  R \\<subseteq> U\n\ngoal (1 subgoal):\n 1. U - (R - S i) = U - R \\<union> S i \\<inter> R", "by blast"], ["proof (state)\nthis:\n  U - (R - S i) = U - R \\<union> S i \\<inter> R\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "moreover"], ["proof (state)\nthis:\n  U - (R - S i) = U - R \\<union> S i \\<inter> R\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "{"], ["proof (state)\nthis:\n  U - (R - S i) = U - R \\<union> S i \\<inter> R\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "have \"sum ?c (S i \\<inter> R) = card (S i \\<inter> R) * cost R i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>S i \\<inter> R.\n       if x \\<in> S i \\<inter> R then cost R i else c x) =\n    real (card (S i \\<inter> R)) * cost R i", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  real (card (S i \\<inter> R)) * cost R i\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  real (card (S i \\<inter> R)) * cost R i\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "have \"... = w i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (card (S i \\<inter> R)) * cost R i = w i", "unfolding cost_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (card (S i \\<inter> R)) * (w i / real (card (S i \\<inter> R))) =\n    w i", "using \\<open>0 < card (S i \\<inter> R)\\<close>"], ["proof (prove)\nusing this:\n  0 < card (S i \\<inter> R)\n\ngoal (1 subgoal):\n 1. real (card (S i \\<inter> R)) * (w i / real (card (S i \\<inter> R))) =\n    w i", "by simp"], ["proof (state)\nthis:\n  real (card (S i \\<inter> R)) * cost R i = w i\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>x\\<in>S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  w i", "have \"sum ?c (S i \\<inter> R) = w i\""], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  w i\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>S i \\<inter> R.\n       if x \\<in> S i \\<inter> R then cost R i else c x) =\n    w i", "."], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  w i\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "}"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  w i\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>x\\<in>U - R \\<union> S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  (\\<Sum>x\\<in>U - R. if x \\<in> S i \\<inter> R then cost R i else c x) +\n  (\\<Sum>x\\<in>S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  U - (R - S i) = U - R \\<union> S i \\<inter> R\n  (\\<Sum>x\\<in>S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  w i", "have \"sum ?c (U - (R - S i)) = sum ?c (U - R) + w i\""], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>U - R \\<union> S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  (\\<Sum>x\\<in>U - R. if x \\<in> S i \\<inter> R then cost R i else c x) +\n  (\\<Sum>x\\<in>S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  U - (R - S i) = U - R \\<union> S i \\<inter> R\n  (\\<Sum>x\\<in>S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  w i\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>U - (R - S i).\n       if x \\<in> S i \\<inter> R then cost R i else c x) =\n    (\\<Sum>x\\<in>U - R. if x \\<in> S i \\<inter> R then cost R i else c x) +\n    w i", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>U - (R - S i).\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  (\\<Sum>x\\<in>U - R. if x \\<in> S i \\<inter> R then cost R i else c x) +\n  w i\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>U - (R - S i).\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  (\\<Sum>x\\<in>U - R. if x \\<in> S i \\<inter> R then cost R i else c x) +\n  w i\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "{"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>U - (R - S i).\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  (\\<Sum>x\\<in>U - R. if x \\<in> S i \\<inter> R then cost R i else c x) +\n  w i\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "have \"C \\<inter> {i} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<inter> {i} = {}", "using hyp(1) \\<open>S i \\<inter> R \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  sc C (U - R)\n  S i \\<inter> R \\<noteq> {}\n\ngoal (1 subgoal):\n 1. C \\<inter> {i} = {}", "by (auto simp: sc_def)"], ["proof (state)\nthis:\n  C \\<inter> {i} = {}\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "from sum.union_disjoint[OF _ _ this]"], ["proof (chain)\npicking this:\n  \\<lbrakk>finite C; finite {i}\\<rbrakk>\n  \\<Longrightarrow> sum ?g (C \\<union> {i}) = sum ?g C + sum ?g {i}", "have \"sum w (C \\<union> {i}) = sum w C + w i\""], ["proof (prove)\nusing this:\n  \\<lbrakk>finite C; finite {i}\\<rbrakk>\n  \\<Longrightarrow> sum ?g (C \\<union> {i}) = sum ?g C + sum ?g {i}\n\ngoal (1 subgoal):\n 1. sum w (C \\<union> {i}) = sum w C + w i", "using hyp(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite C; finite {i}\\<rbrakk>\n  \\<Longrightarrow> sum ?g (C \\<union> {i}) = sum ?g C + sum ?g {i}\n  sc C (U - R)\n\ngoal (1 subgoal):\n 1. sum w (C \\<union> {i}) = sum w C + w i", "by (auto simp: sc_def intro: finite_subset)"], ["proof (state)\nthis:\n  sum w (C \\<union> {i}) = sum w C + w i\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "}"], ["proof (state)\nthis:\n  sum w (C \\<union> {i}) = sum w C + w i\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>x\\<in>U - (R - S i).\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  (\\<Sum>x\\<in>U - R. if x \\<in> S i \\<inter> R then cost R i else c x) +\n  w i\n  sum w (C \\<union> {i}) = sum w C + w i", "have 1: \"sum w (C \\<union> {i}) = sum ?c (U - (R - S i))\" \\<comment> \\<open>Lemma 11.9\\<close>"], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>U - (R - S i).\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  (\\<Sum>x\\<in>U - R. if x \\<in> S i \\<inter> R then cost R i else c x) +\n  w i\n  sum w (C \\<union> {i}) = sum w C + w i\n\ngoal (1 subgoal):\n 1. sum w (C \\<union> {i}) =\n    (\\<Sum>x\\<in>U - (R - S i).\n       if x \\<in> S i \\<inter> R then cost R i else c x)", "using \\<open>sum w C = sum c (U - R)\\<close>"], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>U - (R - S i).\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  (\\<Sum>x\\<in>U - R. if x \\<in> S i \\<inter> R then cost R i else c x) +\n  w i\n  sum w (C \\<union> {i}) = sum w C + w i\n  sum w C = sum c (U - R)\n\ngoal (1 subgoal):\n 1. sum w (C \\<union> {i}) =\n    (\\<Sum>x\\<in>U - (R - S i).\n       if x \\<in> S i \\<inter> R then cost R i else c x)", "by simp"], ["proof (state)\nthis:\n  sum w (C \\<union> {i}) =\n  (\\<Sum>x\\<in>U - (R - S i).\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "have 2: \"\\<forall>i. 0 \\<le> ?c i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ia.\n       0 \\<le> (if ia \\<in> S i \\<inter> R then cost R i else c ia)", "using \\<open>\\<forall>i. 0 \\<le> c i\\<close> cost_nonneg"], ["proof (prove)\nusing this:\n  \\<forall>i. 0 \\<le> c i\n  0 \\<le> cost ?R ?i\n\ngoal (1 subgoal):\n 1. \\<forall>ia.\n       0 \\<le> (if ia \\<in> S i \\<inter> R then cost R i else c ia)", "by simp\n\n      \\<comment> \\<open>Proof of Lemma 11.10\\<close>"], ["proof (state)\nthis:\n  \\<forall>ia. 0 \\<le> (if ia \\<in> S i \\<inter> R then cost R i else c ia)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "have 3: \"\\<forall>k\\<in>{1..m}. sum ?c (S k \\<inter> (U - (R - S i)))\n          \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k). inverse j) * w k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>{1..m}.\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "assume \"k \\<in> {1..m}\""], ["proof (state)\nthis:\n  k \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "let ?rem = \"S k \\<inter> R\" \\<comment> \\<open>Remaining elements to be covered\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "let ?add = \"S k \\<inter> S i \\<inter> R\" \\<comment> \\<open>Elements that will be covered in this step\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "let ?cov = \"S k \\<inter> (U - R)\" \\<comment> \\<open>Covered elements\\<close>\n\n      \\<comment> \\<open>Transforming left and right sides\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "have \"sum ?c (S k \\<inter> (U - (R - S i))) = sum ?c (S k \\<inter> (U - R \\<union> (S i \\<inter> R)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n       if x \\<in> S i \\<inter> R then cost R i else c x) =\n    (\\<Sum>x\\<in>S k \\<inter> (U - R \\<union> S i \\<inter> R).\n       if x \\<in> S i \\<inter> R then cost R i else c x)", "unfolding U_split"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>S k \\<inter> (U - R \\<union> S i \\<inter> R).\n       if x \\<in> S i \\<inter> R then cost R i else c x) =\n    (\\<Sum>x\\<in>S k \\<inter> (U - R \\<union> S i \\<inter> R).\n       if x \\<in> S i \\<inter> R then cost R i else c x)", ".."], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  (\\<Sum>x\\<in>S k \\<inter> (U - R \\<union> S i \\<inter> R).\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  (\\<Sum>x\\<in>S k \\<inter> (U - R \\<union> S i \\<inter> R).\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "have \"... = sum ?c (?cov \\<union> ?add)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>S k \\<inter> (U - R \\<union> S i \\<inter> R).\n       if x \\<in> S i \\<inter> R then cost R i else c x) =\n    (\\<Sum>x\\<in>S k \\<inter> (U - R) \\<union> S k \\<inter> S i \\<inter> R.\n       if x \\<in> S i \\<inter> R then cost R i else c x)", "by (simp add: Int_Un_distrib Int_assoc)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>S k \\<inter> (U - R \\<union> S i \\<inter> R).\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  (\\<Sum>x\\<in>S k \\<inter> (U - R) \\<union> S k \\<inter> S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>S k \\<inter> (U - R \\<union> S i \\<inter> R).\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  (\\<Sum>x\\<in>S k \\<inter> (U - R) \\<union> S k \\<inter> S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "have \"... = sum ?c ?cov + sum ?c ?add\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>S k \\<inter> (U - R) \\<union> S k \\<inter> S i \\<inter> R.\n       if x \\<in> S i \\<inter> R then cost R i else c x) =\n    (\\<Sum>x\\<in>S k \\<inter> (U - R).\n       if x \\<in> S i \\<inter> R then cost R i else c x) +\n    (\\<Sum>x\\<in>S k \\<inter> S i \\<inter> R.\n       if x \\<in> S i \\<inter> R then cost R i else c x)", "by (rule sum.union_disjoint) (insert S_finite \\<open>k \\<in> _\\<close>, auto)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>S k \\<inter> (U - R) \\<union> S k \\<inter> S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  (\\<Sum>x\\<in>S k \\<inter> (U - R).\n     if x \\<in> S i \\<inter> R then cost R i else c x) +\n  (\\<Sum>x\\<in>S k \\<inter> S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  (\\<Sum>x\\<in>S k \\<inter> (U - R).\n     if x \\<in> S i \\<inter> R then cost R i else c x) +\n  (\\<Sum>x\\<in>S k \\<inter> S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x)", "have lhs:\n        \"sum ?c (S k \\<inter> (U - (R - S i))) = sum ?c ?cov + sum ?c ?add\""], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  (\\<Sum>x\\<in>S k \\<inter> (U - R).\n     if x \\<in> S i \\<inter> R then cost R i else c x) +\n  (\\<Sum>x\\<in>S k \\<inter> S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n       if x \\<in> S i \\<inter> R then cost R i else c x) =\n    (\\<Sum>x\\<in>S k \\<inter> (U - R).\n       if x \\<in> S i \\<inter> R then cost R i else c x) +\n    (\\<Sum>x\\<in>S k \\<inter> S i \\<inter> R.\n       if x \\<in> S i \\<inter> R then cost R i else c x)", "."], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  (\\<Sum>x\\<in>S k \\<inter> (U - R).\n     if x \\<in> S i \\<inter> R then cost R i else c x) +\n  (\\<Sum>x\\<in>S k \\<inter> S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "have \"S k \\<inter> (R - S i) = ?rem - ?add\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S k \\<inter> (R - S i) = S k \\<inter> R - S k \\<inter> S i \\<inter> R", "by blast"], ["proof (state)\nthis:\n  S k \\<inter> (R - S i) = S k \\<inter> R - S k \\<inter> S i \\<inter> R\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "then"], ["proof (chain)\npicking this:\n  S k \\<inter> (R - S i) = S k \\<inter> R - S k \\<inter> S i \\<inter> R", "have \"card (S k \\<inter> (R - S i)) = card (?rem - ?add)\""], ["proof (prove)\nusing this:\n  S k \\<inter> (R - S i) = S k \\<inter> R - S k \\<inter> S i \\<inter> R\n\ngoal (1 subgoal):\n 1. card (S k \\<inter> (R - S i)) =\n    card (S k \\<inter> R - S k \\<inter> S i \\<inter> R)", "by simp"], ["proof (state)\nthis:\n  card (S k \\<inter> (R - S i)) =\n  card (S k \\<inter> R - S k \\<inter> S i \\<inter> R)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "also"], ["proof (state)\nthis:\n  card (S k \\<inter> (R - S i)) =\n  card (S k \\<inter> R - S k \\<inter> S i \\<inter> R)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "have \"... = card ?rem - card ?add\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (S k \\<inter> R - S k \\<inter> S i \\<inter> R) =\n    card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R)", "using S_finite \\<open>k \\<in> _\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{1..m}. finite (S i)\n  k \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. card (S k \\<inter> R - S k \\<inter> S i \\<inter> R) =\n    card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R)", "by (auto intro: card_Diff_subset)"], ["proof (state)\nthis:\n  card (S k \\<inter> R - S k \\<inter> S i \\<inter> R) =\n  card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "finally"], ["proof (chain)\npicking this:\n  card (S k \\<inter> (R - S i)) =\n  card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R)", "have rhs:\n        \"card (S k \\<inter> (R - S i)) + 1 = card ?rem - card ?add + 1\""], ["proof (prove)\nusing this:\n  card (S k \\<inter> (R - S i)) =\n  card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R)\n\ngoal (1 subgoal):\n 1. card (S k \\<inter> (R - S i)) + 1 =\n    card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) + 1", "by simp\n      \n      \\<comment> \\<open>The apparent complexity of the remaining proof is deceiving. Much of this is just about\n          convincing Isabelle that these sum transformations are allowed.\\<close>"], ["proof (state)\nthis:\n  card (S k \\<inter> (R - S i)) + 1 =\n  card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) + 1\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "have \"sum ?c ?add = card ?add * cost R i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>S k \\<inter> S i \\<inter> R.\n       if x \\<in> S i \\<inter> R then cost R i else c x) =\n    real (card (S k \\<inter> S i \\<inter> R)) * cost R i", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>S k \\<inter> S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  real (card (S k \\<inter> S i \\<inter> R)) * cost R i\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>S k \\<inter> S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x) =\n  real (card (S k \\<inter> S i \\<inter> R)) * cost R i\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "have \"... \\<le> card ?add * cost R k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (card (S k \\<inter> S i \\<inter> R)) * cost R i\n    \\<le> real (card (S k \\<inter> S i \\<inter> R)) * cost R k", "proof (cases \"?rem = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S k \\<inter> R = {} \\<Longrightarrow>\n    real (card (S k \\<inter> S i \\<inter> R)) * cost R i\n    \\<le> real (card (S k \\<inter> S i \\<inter> R)) * cost R k\n 2. S k \\<inter> R \\<noteq> {} \\<Longrightarrow>\n    real (card (S k \\<inter> S i \\<inter> R)) * cost R i\n    \\<le> real (card (S k \\<inter> S i \\<inter> R)) * cost R k", "case True"], ["proof (state)\nthis:\n  S k \\<inter> R = {}\n\ngoal (2 subgoals):\n 1. S k \\<inter> R = {} \\<Longrightarrow>\n    real (card (S k \\<inter> S i \\<inter> R)) * cost R i\n    \\<le> real (card (S k \\<inter> S i \\<inter> R)) * cost R k\n 2. S k \\<inter> R \\<noteq> {} \\<Longrightarrow>\n    real (card (S k \\<inter> S i \\<inter> R)) * cost R i\n    \\<le> real (card (S k \\<inter> S i \\<inter> R)) * cost R k", "then"], ["proof (chain)\npicking this:\n  S k \\<inter> R = {}", "have \"card ?add = 0\""], ["proof (prove)\nusing this:\n  S k \\<inter> R = {}\n\ngoal (1 subgoal):\n 1. card (S k \\<inter> S i \\<inter> R) = 0", "by (auto simp: card_eq_0_iff)"], ["proof (state)\nthis:\n  card (S k \\<inter> S i \\<inter> R) = 0\n\ngoal (2 subgoals):\n 1. S k \\<inter> R = {} \\<Longrightarrow>\n    real (card (S k \\<inter> S i \\<inter> R)) * cost R i\n    \\<le> real (card (S k \\<inter> S i \\<inter> R)) * cost R k\n 2. S k \\<inter> R \\<noteq> {} \\<Longrightarrow>\n    real (card (S k \\<inter> S i \\<inter> R)) * cost R i\n    \\<le> real (card (S k \\<inter> S i \\<inter> R)) * cost R k", "then"], ["proof (chain)\npicking this:\n  card (S k \\<inter> S i \\<inter> R) = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  card (S k \\<inter> S i \\<inter> R) = 0\n\ngoal (1 subgoal):\n 1. real (card (S k \\<inter> S i \\<inter> R)) * cost R i\n    \\<le> real (card (S k \\<inter> S i \\<inter> R)) * cost R k", "by simp"], ["proof (state)\nthis:\n  real (card (S k \\<inter> S i \\<inter> R)) * cost R i\n  \\<le> real (card (S k \\<inter> S i \\<inter> R)) * cost R k\n\ngoal (1 subgoal):\n 1. S k \\<inter> R \\<noteq> {} \\<Longrightarrow>\n    real (card (S k \\<inter> S i \\<inter> R)) * cost R i\n    \\<le> real (card (S k \\<inter> S i \\<inter> R)) * cost R k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. S k \\<inter> R \\<noteq> {} \\<Longrightarrow>\n    real (card (S k \\<inter> S i \\<inter> R)) * cost R i\n    \\<le> real (card (S k \\<inter> S i \\<inter> R)) * cost R k", "case False"], ["proof (state)\nthis:\n  S k \\<inter> R \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S k \\<inter> R \\<noteq> {} \\<Longrightarrow>\n    real (card (S k \\<inter> S i \\<inter> R)) * cost R i\n    \\<le> real (card (S k \\<inter> S i \\<inter> R)) * cost R k", "from min_correct[OF \\<open>k \\<in> _\\<close> this]"], ["proof (chain)\npicking this:\n  cost R (min_arg R m) \\<le> cost R k", "have \"cost R i \\<le> cost R k\""], ["proof (prove)\nusing this:\n  cost R (min_arg R m) \\<le> cost R k\n\ngoal (1 subgoal):\n 1. cost R i \\<le> cost R k", "by simp"], ["proof (state)\nthis:\n  cost R i \\<le> cost R k\n\ngoal (1 subgoal):\n 1. S k \\<inter> R \\<noteq> {} \\<Longrightarrow>\n    real (card (S k \\<inter> S i \\<inter> R)) * cost R i\n    \\<le> real (card (S k \\<inter> S i \\<inter> R)) * cost R k", "then"], ["proof (chain)\npicking this:\n  cost R i \\<le> cost R k", "show ?thesis"], ["proof (prove)\nusing this:\n  cost R i \\<le> cost R k\n\ngoal (1 subgoal):\n 1. real (card (S k \\<inter> S i \\<inter> R)) * cost R i\n    \\<le> real (card (S k \\<inter> S i \\<inter> R)) * cost R k", "by (simp add: mult_left_mono)"], ["proof (state)\nthis:\n  real (card (S k \\<inter> S i \\<inter> R)) * cost R i\n  \\<le> real (card (S k \\<inter> S i \\<inter> R)) * cost R k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real (card (S k \\<inter> S i \\<inter> R)) * cost R i\n  \\<le> real (card (S k \\<inter> S i \\<inter> R)) * cost R k\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "also"], ["proof (state)\nthis:\n  real (card (S k \\<inter> S i \\<inter> R)) * cost R i\n  \\<le> real (card (S k \\<inter> S i \\<inter> R)) * cost R k\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "have \"... = card ?add * inverse (card ?rem) * w k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (card (S k \\<inter> S i \\<inter> R)) * cost R k =\n    real (card (S k \\<inter> S i \\<inter> R)) *\n    inverse (real (card (S k \\<inter> R))) *\n    w k", "by (simp add: cost_def divide_inverse_commute)"], ["proof (state)\nthis:\n  real (card (S k \\<inter> S i \\<inter> R)) * cost R k =\n  real (card (S k \\<inter> S i \\<inter> R)) *\n  inverse (real (card (S k \\<inter> R))) *\n  w k\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "also"], ["proof (state)\nthis:\n  real (card (S k \\<inter> S i \\<inter> R)) * cost R k =\n  real (card (S k \\<inter> S i \\<inter> R)) *\n  inverse (real (card (S k \\<inter> R))) *\n  w k\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "have \"... = (\\<Sum>j \\<in> {card ?rem - card ?add + 1 .. card ?rem}. inverse (card ?rem)) * w k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (card (S k \\<inter> S i \\<inter> R)) *\n    inverse (real (card (S k \\<inter> R))) *\n    w k =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real (card (S k \\<inter> R)))) *\n    w k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real (card (S k \\<inter> S i \\<inter> R)) *\n    inverse (real (card (S k \\<inter> R))) *\n    w k =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real (card (S k \\<inter> R)))) *\n    w k", "have \"card ?add \\<le> card ?rem\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (S k \\<inter> S i \\<inter> R) \\<le> card (S k \\<inter> R)", "using S_finite \\<open>k \\<in> _\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{1..m}. finite (S i)\n  k \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. card (S k \\<inter> S i \\<inter> R) \\<le> card (S k \\<inter> R)", "by (blast intro: card_mono)"], ["proof (state)\nthis:\n  card (S k \\<inter> S i \\<inter> R) \\<le> card (S k \\<inter> R)\n\ngoal (1 subgoal):\n 1. real (card (S k \\<inter> S i \\<inter> R)) *\n    inverse (real (card (S k \\<inter> R))) *\n    w k =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real (card (S k \\<inter> R)))) *\n    w k", "then"], ["proof (chain)\npicking this:\n  card (S k \\<inter> S i \\<inter> R) \\<le> card (S k \\<inter> R)", "show ?thesis"], ["proof (prove)\nusing this:\n  card (S k \\<inter> S i \\<inter> R) \\<le> card (S k \\<inter> R)\n\ngoal (1 subgoal):\n 1. real (card (S k \\<inter> S i \\<inter> R)) *\n    inverse (real (card (S k \\<inter> R))) *\n    w k =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real (card (S k \\<inter> R)))) *\n    w k", "by (simp add: sum_distrib_left)"], ["proof (state)\nthis:\n  real (card (S k \\<inter> S i \\<inter> R)) *\n  inverse (real (card (S k \\<inter> R))) *\n  w k =\n  (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n             1..card (S k \\<inter> R).\n      inverse (real (card (S k \\<inter> R)))) *\n  w k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real (card (S k \\<inter> S i \\<inter> R)) *\n  inverse (real (card (S k \\<inter> R))) *\n  w k =\n  (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n             1..card (S k \\<inter> R).\n      inverse (real (card (S k \\<inter> R)))) *\n  w k\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "also"], ["proof (state)\nthis:\n  real (card (S k \\<inter> S i \\<inter> R)) *\n  inverse (real (card (S k \\<inter> R))) *\n  w k =\n  (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n             1..card (S k \\<inter> R).\n      inverse (real (card (S k \\<inter> R)))) *\n  w k\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "have \"... \\<le> (\\<Sum>j \\<in> {card ?rem - card ?add + 1 .. card ?rem}. inverse j) * w k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real (card (S k \\<inter> R)))) *\n    w k\n    \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                     card (S k \\<inter> S i \\<inter> R) +\n                     1..card (S k \\<inter> R).\n              inverse (real j)) *\n          w k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real (card (S k \\<inter> R)))) *\n    w k\n    \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                     card (S k \\<inter> S i \\<inter> R) +\n                     1..card (S k \\<inter> R).\n              inverse (real j)) *\n          w k", "have \"\\<forall>j \\<in> {card ?rem - card ?add + 1 .. card ?rem}. inverse (card ?rem) \\<le> inverse j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>{card (S k \\<inter> R) -\n                    card (S k \\<inter> S i \\<inter> R) +\n                    1..card (S k \\<inter> R)}.\n       inverse (real (card (S k \\<inter> R))) \\<le> inverse (real j)", "by force"], ["proof (state)\nthis:\n  \\<forall>j\\<in>{card (S k \\<inter> R) -\n                  card (S k \\<inter> S i \\<inter> R) +\n                  1..card (S k \\<inter> R)}.\n     inverse (real (card (S k \\<inter> R))) \\<le> inverse (real j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real (card (S k \\<inter> R)))) *\n    w k\n    \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                     card (S k \\<inter> S i \\<inter> R) +\n                     1..card (S k \\<inter> R).\n              inverse (real j)) *\n          w k", "then"], ["proof (chain)\npicking this:\n  \\<forall>j\\<in>{card (S k \\<inter> R) -\n                  card (S k \\<inter> S i \\<inter> R) +\n                  1..card (S k \\<inter> R)}.\n     inverse (real (card (S k \\<inter> R))) \\<le> inverse (real j)", "have \"(\\<Sum>j \\<in> {card ?rem - card ?add + 1 .. card ?rem}. inverse (card ?rem))\n                   \\<le> (\\<Sum>j \\<in> {card ?rem - card ?add + 1 .. card ?rem}. inverse j)\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{card (S k \\<inter> R) -\n                  card (S k \\<inter> S i \\<inter> R) +\n                  1..card (S k \\<inter> R)}.\n     inverse (real (card (S k \\<inter> R))) \\<le> inverse (real j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real (card (S k \\<inter> R))))\n    \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                     card (S k \\<inter> S i \\<inter> R) +\n                     1..card (S k \\<inter> R).\n              inverse (real j))", "by (blast intro: sum_mono)"], ["proof (state)\nthis:\n  (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n             1..card (S k \\<inter> R).\n      inverse (real (card (S k \\<inter> R))))\n  \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                   card (S k \\<inter> S i \\<inter> R) +\n                   1..card (S k \\<inter> R).\n            inverse (real j))\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real (card (S k \\<inter> R)))) *\n    w k\n    \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                     card (S k \\<inter> S i \\<inter> R) +\n                     1..card (S k \\<inter> R).\n              inverse (real j)) *\n          w k", "with w_nonneg"], ["proof (chain)\npicking this:\n  \\<forall>i. 0 \\<le> w i\n  (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n             1..card (S k \\<inter> R).\n      inverse (real (card (S k \\<inter> R))))\n  \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                   card (S k \\<inter> S i \\<inter> R) +\n                   1..card (S k \\<inter> R).\n            inverse (real j))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>i. 0 \\<le> w i\n  (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n             1..card (S k \\<inter> R).\n      inverse (real (card (S k \\<inter> R))))\n  \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                   card (S k \\<inter> S i \\<inter> R) +\n                   1..card (S k \\<inter> R).\n            inverse (real j))\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real (card (S k \\<inter> R)))) *\n    w k\n    \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                     card (S k \\<inter> S i \\<inter> R) +\n                     1..card (S k \\<inter> R).\n              inverse (real j)) *\n          w k", "by (blast intro: mult_right_mono)"], ["proof (state)\nthis:\n  (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n             1..card (S k \\<inter> R).\n      inverse (real (card (S k \\<inter> R)))) *\n  w k\n  \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                   card (S k \\<inter> S i \\<inter> R) +\n                   1..card (S k \\<inter> R).\n            inverse (real j)) *\n        w k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n             1..card (S k \\<inter> R).\n      inverse (real (card (S k \\<inter> R)))) *\n  w k\n  \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                   card (S k \\<inter> S i \\<inter> R) +\n                   1..card (S k \\<inter> R).\n            inverse (real j)) *\n        w k\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>x\\<in>S k \\<inter> S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                   card (S k \\<inter> S i \\<inter> R) +\n                   1..card (S k \\<inter> R).\n            inverse (real j)) *\n        w k", "have \"sum ?c ?add\n                 \\<le> (\\<Sum>j \\<in> {card ?rem - card ?add + 1 .. card ?rem}. inverse j) * w k\""], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>S k \\<inter> S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                   card (S k \\<inter> S i \\<inter> R) +\n                   1..card (S k \\<inter> R).\n            inverse (real j)) *\n        w k\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>S k \\<inter> S i \\<inter> R.\n       if x \\<in> S i \\<inter> R then cost R i else c x)\n    \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                     card (S k \\<inter> S i \\<inter> R) +\n                     1..card (S k \\<inter> R).\n              inverse (real j)) *\n          w k", "."], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>S k \\<inter> S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                   card (S k \\<inter> S i \\<inter> R) +\n                   1..card (S k \\<inter> R).\n            inverse (real j)) *\n        w k\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>S k \\<inter> S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                   card (S k \\<inter> S i \\<inter> R) +\n                   1..card (S k \\<inter> R).\n            inverse (real j)) *\n        w k\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "from SUM"], ["proof (chain)\npicking this:\n  \\<forall>k\\<in>{1..m}.\n     sum c (S k \\<inter> (U - R))\n     \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n               inverse (real j)) *\n           w k", "have \"sum ?c ?cov \n                           \\<le> (\\<Sum>j \\<in> {card ?rem + 1 .. card (S k)}. inverse j) * w k\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>{1..m}.\n     sum c (S k \\<inter> (U - R))\n     \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n               inverse (real j)) *\n           w k\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>S k \\<inter> (U - R).\n       if x \\<in> S i \\<inter> R then cost R i else c x)\n    \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n              inverse (real j)) *\n          w k", "using \\<open>k \\<in> {1..m}\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>{1..m}.\n     sum c (S k \\<inter> (U - R))\n     \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n               inverse (real j)) *\n           w k\n  k \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>S k \\<inter> (U - R).\n       if x \\<in> S i \\<inter> R then cost R i else c x)\n    \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n              inverse (real j)) *\n          w k", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>S k \\<inter> (U - R).\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n            inverse (real j)) *\n        w k\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>x\\<in>S k \\<inter> S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                   card (S k \\<inter> S i \\<inter> R) +\n                   1..card (S k \\<inter> R).\n            inverse (real j)) *\n        w k\n  (\\<Sum>x\\<in>S k \\<inter> (U - R).\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n            inverse (real j)) *\n        w k", "have \"sum ?c (S k \\<inter> (U - (R - S i)))\n                    \\<le> ((\\<Sum>j \\<in> {card ?rem - card ?add + 1 .. card ?rem}. inverse j) +\n                        (\\<Sum>j \\<in> {card ?rem + 1 .. card (S k)}. inverse j)) * w k\""], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>S k \\<inter> S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                   card (S k \\<inter> S i \\<inter> R) +\n                   1..card (S k \\<inter> R).\n            inverse (real j)) *\n        w k\n  (\\<Sum>x\\<in>S k \\<inter> (U - R).\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n            inverse (real j)) *\n        w k\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n       if x \\<in> S i \\<inter> R then cost R i else c x)\n    \\<le> ((\\<Sum>j = card (S k \\<inter> R) -\n                      card (S k \\<inter> S i \\<inter> R) +\n                      1..card (S k \\<inter> R).\n               inverse (real j)) +\n           (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n               inverse (real j))) *\n          w k", "unfolding lhs"], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>S k \\<inter> S i \\<inter> R.\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                   card (S k \\<inter> S i \\<inter> R) +\n                   1..card (S k \\<inter> R).\n            inverse (real j)) *\n        w k\n  (\\<Sum>x\\<in>S k \\<inter> (U - R).\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  \\<le> (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n            inverse (real j)) *\n        w k\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>S k \\<inter> (U - R).\n       if x \\<in> S i \\<inter> R then cost R i else c x) +\n    (\\<Sum>x\\<in>S k \\<inter> S i \\<inter> R.\n       if x \\<in> S i \\<inter> R then cost R i else c x)\n    \\<le> ((\\<Sum>j = card (S k \\<inter> R) -\n                      card (S k \\<inter> S i \\<inter> R) +\n                      1..card (S k \\<inter> R).\n               inverse (real j)) +\n           (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n               inverse (real j))) *\n          w k", "by argo"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  \\<le> ((\\<Sum>j = card (S k \\<inter> R) -\n                    card (S k \\<inter> S i \\<inter> R) +\n                    1..card (S k \\<inter> R).\n             inverse (real j)) +\n         (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n             inverse (real j))) *\n        w k\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  \\<le> ((\\<Sum>j = card (S k \\<inter> R) -\n                    card (S k \\<inter> S i \\<inter> R) +\n                    1..card (S k \\<inter> R).\n             inverse (real j)) +\n         (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k).\n             inverse (real j))) *\n        w k\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "have \"... = (\\<Sum>j \\<in> {card ?rem - card ?add + 1 .. card (S k)}. inverse j) * w k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n                1..card (S k \\<inter> R).\n         inverse (real j)) +\n     (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))) *\n    w k =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k).\n        inverse (real j)) *\n    w k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n                1..card (S k \\<inter> R).\n         inverse (real j)) +\n     (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))) *\n    w k =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k).\n        inverse (real j)) *\n    w k", "have sum_split: \"b \\<in> {a .. c} \\<Longrightarrow> sum f {a .. c} = sum f {a .. b} + sum f {Suc b .. c}\"\n            for f :: \"nat \\<Rightarrow> real\" and a b c :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> {a..c} \\<Longrightarrow>\n    sum f {a..c} = sum f {a..b} + sum f {Suc b..c}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<in> {a..c} \\<Longrightarrow>\n    sum f {a..c} = sum f {a..b} + sum f {Suc b..c}", "assume \"b \\<in> {a .. c}\""], ["proof (state)\nthis:\n  b \\<in> {a..c}\n\ngoal (1 subgoal):\n 1. b \\<in> {a..c} \\<Longrightarrow>\n    sum f {a..c} = sum f {a..b} + sum f {Suc b..c}", "then"], ["proof (chain)\npicking this:\n  b \\<in> {a..c}", "have \"{a .. b} \\<union> {Suc b .. c} = {a .. c}\""], ["proof (prove)\nusing this:\n  b \\<in> {a..c}\n\ngoal (1 subgoal):\n 1. {a..b} \\<union> {Suc b..c} = {a..c}", "by force"], ["proof (state)\nthis:\n  {a..b} \\<union> {Suc b..c} = {a..c}\n\ngoal (1 subgoal):\n 1. b \\<in> {a..c} \\<Longrightarrow>\n    sum f {a..c} = sum f {a..b} + sum f {Suc b..c}", "moreover"], ["proof (state)\nthis:\n  {a..b} \\<union> {Suc b..c} = {a..c}\n\ngoal (1 subgoal):\n 1. b \\<in> {a..c} \\<Longrightarrow>\n    sum f {a..c} = sum f {a..b} + sum f {Suc b..c}", "have \"{a .. b} \\<inter> {Suc b .. c} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a..b} \\<inter> {Suc b..c} = {}", "using \\<open>b \\<in> {a .. c}\\<close>"], ["proof (prove)\nusing this:\n  b \\<in> {a..c}\n\ngoal (1 subgoal):\n 1. {a..b} \\<inter> {Suc b..c} = {}", "by auto"], ["proof (state)\nthis:\n  {a..b} \\<inter> {Suc b..c} = {}\n\ngoal (1 subgoal):\n 1. b \\<in> {a..c} \\<Longrightarrow>\n    sum f {a..c} = sum f {a..b} + sum f {Suc b..c}", "ultimately"], ["proof (chain)\npicking this:\n  {a..b} \\<union> {Suc b..c} = {a..c}\n  {a..b} \\<inter> {Suc b..c} = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  {a..b} \\<union> {Suc b..c} = {a..c}\n  {a..b} \\<inter> {Suc b..c} = {}\n\ngoal (1 subgoal):\n 1. sum f {a..c} = sum f {a..b} + sum f {Suc b..c}", "by (metis finite_atLeastAtMost sum.union_disjoint)"], ["proof (state)\nthis:\n  sum f {a..c} = sum f {a..b} + sum f {Suc b..c}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?b \\<in> {?a..?c} \\<Longrightarrow>\n  sum ?f {?a..?c} = sum ?f {?a..?b} + sum ?f {Suc ?b..?c}\n\ngoal (1 subgoal):\n 1. ((\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n                1..card (S k \\<inter> R).\n         inverse (real j)) +\n     (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))) *\n    w k =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k).\n        inverse (real j)) *\n    w k", "have \"(\\<Sum>j \\<in> {card ?rem - card ?add + 1 .. card (S k)}. inverse j)\n              = (\\<Sum>j \\<in> {card ?rem - card ?add + 1 .. card ?rem}. inverse j)\n              + (\\<Sum>j \\<in> {card ?rem + 1 .. card (S k)}. inverse j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k).\n        inverse (real j)) =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real j)) +\n    (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))", "proof (cases \\<open>?add = {}\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. S k \\<inter> S i \\<inter> R = {} \\<Longrightarrow>\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k).\n        inverse (real j)) =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real j)) +\n    (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))\n 2. S k \\<inter> S i \\<inter> R \\<noteq> {} \\<Longrightarrow>\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k).\n        inverse (real j)) =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real j)) +\n    (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))", "case False"], ["proof (state)\nthis:\n  S k \\<inter> S i \\<inter> R \\<noteq> {}\n\ngoal (2 subgoals):\n 1. S k \\<inter> S i \\<inter> R = {} \\<Longrightarrow>\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k).\n        inverse (real j)) =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real j)) +\n    (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))\n 2. S k \\<inter> S i \\<inter> R \\<noteq> {} \\<Longrightarrow>\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k).\n        inverse (real j)) =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real j)) +\n    (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))", "then"], ["proof (chain)\npicking this:\n  S k \\<inter> S i \\<inter> R \\<noteq> {}", "have \"0 < card ?add\" \"0 < card ?rem\""], ["proof (prove)\nusing this:\n  S k \\<inter> S i \\<inter> R \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 0 < card (S k \\<inter> S i \\<inter> R) &&& 0 < card (S k \\<inter> R)", "using S_finite \\<open>k \\<in> _\\<close>"], ["proof (prove)\nusing this:\n  S k \\<inter> S i \\<inter> R \\<noteq> {}\n  \\<forall>i\\<in>{1..m}. finite (S i)\n  k \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. 0 < card (S k \\<inter> S i \\<inter> R) &&& 0 < card (S k \\<inter> R)", "by fastforce+"], ["proof (state)\nthis:\n  0 < card (S k \\<inter> S i \\<inter> R)\n  0 < card (S k \\<inter> R)\n\ngoal (2 subgoals):\n 1. S k \\<inter> S i \\<inter> R = {} \\<Longrightarrow>\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k).\n        inverse (real j)) =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real j)) +\n    (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))\n 2. S k \\<inter> S i \\<inter> R \\<noteq> {} \\<Longrightarrow>\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k).\n        inverse (real j)) =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real j)) +\n    (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))", "then"], ["proof (chain)\npicking this:\n  0 < card (S k \\<inter> S i \\<inter> R)\n  0 < card (S k \\<inter> R)", "have \"Suc (card ?rem - card ?add) \\<le> card ?rem\""], ["proof (prove)\nusing this:\n  0 < card (S k \\<inter> S i \\<inter> R)\n  0 < card (S k \\<inter> R)\n\ngoal (1 subgoal):\n 1. Suc (card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R))\n    \\<le> card (S k \\<inter> R)", "by simp"], ["proof (state)\nthis:\n  Suc (card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R))\n  \\<le> card (S k \\<inter> R)\n\ngoal (2 subgoals):\n 1. S k \\<inter> S i \\<inter> R = {} \\<Longrightarrow>\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k).\n        inverse (real j)) =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real j)) +\n    (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))\n 2. S k \\<inter> S i \\<inter> R \\<noteq> {} \\<Longrightarrow>\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k).\n        inverse (real j)) =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real j)) +\n    (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))", "moreover"], ["proof (state)\nthis:\n  Suc (card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R))\n  \\<le> card (S k \\<inter> R)\n\ngoal (2 subgoals):\n 1. S k \\<inter> S i \\<inter> R = {} \\<Longrightarrow>\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k).\n        inverse (real j)) =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real j)) +\n    (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))\n 2. S k \\<inter> S i \\<inter> R \\<noteq> {} \\<Longrightarrow>\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k).\n        inverse (real j)) =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real j)) +\n    (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))", "have \"card ?rem \\<le> card (S k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (S k \\<inter> R) \\<le> card (S k)", "using S_finite \\<open>k \\<in> _\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{1..m}. finite (S i)\n  k \\<in> {1..m}\n\ngoal (1 subgoal):\n 1. card (S k \\<inter> R) \\<le> card (S k)", "by (simp add: card_mono)"], ["proof (state)\nthis:\n  card (S k \\<inter> R) \\<le> card (S k)\n\ngoal (2 subgoals):\n 1. S k \\<inter> S i \\<inter> R = {} \\<Longrightarrow>\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k).\n        inverse (real j)) =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real j)) +\n    (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))\n 2. S k \\<inter> S i \\<inter> R \\<noteq> {} \\<Longrightarrow>\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k).\n        inverse (real j)) =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real j)) +\n    (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))", "ultimately"], ["proof (chain)\npicking this:\n  Suc (card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R))\n  \\<le> card (S k \\<inter> R)\n  card (S k \\<inter> R) \\<le> card (S k)", "show ?thesis"], ["proof (prove)\nusing this:\n  Suc (card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R))\n  \\<le> card (S k \\<inter> R)\n  card (S k \\<inter> R) \\<le> card (S k)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k).\n        inverse (real j)) =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real j)) +\n    (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))", "by (auto intro: sum_split)"], ["proof (state)\nthis:\n  (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n             1..card (S k).\n      inverse (real j)) =\n  (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n             1..card (S k \\<inter> R).\n      inverse (real j)) +\n  (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))\n\ngoal (1 subgoal):\n 1. S k \\<inter> S i \\<inter> R = {} \\<Longrightarrow>\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k).\n        inverse (real j)) =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k \\<inter> R).\n        inverse (real j)) +\n    (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))", "qed simp"], ["proof (state)\nthis:\n  (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n             1..card (S k).\n      inverse (real j)) =\n  (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n             1..card (S k \\<inter> R).\n      inverse (real j)) +\n  (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))\n\ngoal (1 subgoal):\n 1. ((\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n                1..card (S k \\<inter> R).\n         inverse (real j)) +\n     (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))) *\n    w k =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k).\n        inverse (real j)) *\n    w k", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n             1..card (S k).\n      inverse (real j)) =\n  (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n             1..card (S k \\<inter> R).\n      inverse (real j)) +\n  (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n             1..card (S k).\n      inverse (real j)) =\n  (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n             1..card (S k \\<inter> R).\n      inverse (real j)) +\n  (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))\n\ngoal (1 subgoal):\n 1. ((\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n                1..card (S k \\<inter> R).\n         inverse (real j)) +\n     (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))) *\n    w k =\n    (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n               1..card (S k).\n        inverse (real j)) *\n    w k", "by algebra"], ["proof (state)\nthis:\n  ((\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n              1..card (S k \\<inter> R).\n       inverse (real j)) +\n   (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))) *\n  w k =\n  (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n             1..card (S k).\n      inverse (real j)) *\n  w k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n              1..card (S k \\<inter> R).\n       inverse (real j)) +\n   (\\<Sum>j = card (S k \\<inter> R) + 1..card (S k). inverse (real j))) *\n  w k =\n  (\\<Sum>j = card (S k \\<inter> R) - card (S k \\<inter> S i \\<inter> R) +\n             1..card (S k).\n      inverse (real j)) *\n  w k\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..m} \\<Longrightarrow>\n       (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n          if x \\<in> S i \\<inter> R then cost R i else c x)\n       \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                 inverse (real j)) *\n             w k", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                   card (S k \\<inter> S i \\<inter> R) +\n                   1..card (S k).\n            inverse (real j)) *\n        w k", "show \"sum ?c (S k \\<inter> (U - (R - S i)))\n                 \\<le> (\\<Sum>j \\<in> {card (S k \\<inter> (R - S i)) + 1 .. card (S k)}. inverse j) * w k\""], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                   card (S k \\<inter> S i \\<inter> R) +\n                   1..card (S k).\n            inverse (real j)) *\n        w k\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n       if x \\<in> S i \\<inter> R then cost R i else c x)\n    \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n              inverse (real j)) *\n          w k", "unfolding rhs"], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                   card (S k \\<inter> S i \\<inter> R) +\n                   1..card (S k).\n            inverse (real j)) *\n        w k\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n       if x \\<in> S i \\<inter> R then cost R i else c x)\n    \\<le> (\\<Sum>j = card (S k \\<inter> R) -\n                     card (S k \\<inter> S i \\<inter> R) +\n                     1..card (S k).\n              inverse (real j)) *\n          w k", "."], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n            inverse (real j)) *\n        w k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>k\\<in>{1..m}.\n     (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n        if x \\<in> S i \\<inter> R then cost R i else c x)\n     \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n               inverse (real j)) *\n           w k\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "from 1 2 3"], ["proof (chain)\npicking this:\n  sum w (C \\<union> {i}) =\n  (\\<Sum>x\\<in>U - (R - S i).\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  \\<forall>ia. 0 \\<le> (if ia \\<in> S i \\<inter> R then cost R i else c ia)\n  \\<forall>k\\<in>{1..m}.\n     (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n        if x \\<in> S i \\<inter> R then cost R i else c x)\n     \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n               inverse (real j)) *\n           w k", "show ?case"], ["proof (prove)\nusing this:\n  sum w (C \\<union> {i}) =\n  (\\<Sum>x\\<in>U - (R - S i).\n     if x \\<in> S i \\<inter> R then cost R i else c x)\n  \\<forall>ia. 0 \\<le> (if ia \\<in> S i \\<inter> R then cost R i else c ia)\n  \\<forall>k\\<in>{1..m}.\n     (\\<Sum>x\\<in>S k \\<inter> (U - (R - S i)).\n        if x \\<in> S i \\<inter> R then cost R i else c x)\n     \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n               inverse (real j)) *\n           w k\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n       (\\<forall>i. 0 \\<le> c i) \\<and>\n       (\\<forall>k\\<in>{1..m}.\n           sum c (S k \\<inter> (U - (R - S i)))\n           \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                     inverse (real j)) *\n                 w k)", "by blast"], ["proof (state)\nthis:\n  \\<exists>c.\n     sum w (C \\<union> {i}) = sum c (U - (R - S i)) \\<and>\n     (\\<forall>i. 0 \\<le> c i) \\<and>\n     (\\<forall>k\\<in>{1..m}.\n         sum c (S k \\<inter> (U - (R - S i)))\n         \\<le> (\\<Sum>j = card (S k \\<inter> (R - S i)) + 1..card (S k).\n                   inverse (real j)) *\n               w k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  local.inv (C \\<union> {i}) (R - S i)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cover_sum:\n  fixes c :: \"'a \\<Rightarrow> real\"\n  assumes \"sc C V\" \"\\<forall>i. 0 \\<le> c i\"\n  shows \"sum c V \\<le> (\\<Sum>i \\<in> C. sum c (S i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum c V \\<le> (\\<Sum>i\\<in>C. sum c (S i))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum c V \\<le> (\\<Sum>i\\<in>C. sum c (S i))", "from assms(1)"], ["proof (chain)\npicking this:\n  sc C V", "have \"finite C\""], ["proof (prove)\nusing this:\n  sc C V\n\ngoal (1 subgoal):\n 1. finite C", "by (auto simp: sc_def finite_subset)"], ["proof (state)\nthis:\n  finite C\n\ngoal (1 subgoal):\n 1. sum c V \\<le> (\\<Sum>i\\<in>C. sum c (S i))", "then"], ["proof (chain)\npicking this:\n  finite C", "show ?thesis"], ["proof (prove)\nusing this:\n  finite C\n\ngoal (1 subgoal):\n 1. sum c V \\<le> (\\<Sum>i\\<in>C. sum c (S i))", "using assms(1)"], ["proof (prove)\nusing this:\n  finite C\n  sc C V\n\ngoal (1 subgoal):\n 1. sum c V \\<le> (\\<Sum>i\\<in>C. sum c (S i))", "proof (induction C arbitrary: V rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>V.\n       sc {} V \\<Longrightarrow> sum c V \\<le> (\\<Sum>i\\<in>{}. sum c (S i))\n 2. \\<And>x F V.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>V.\n           sc F V \\<Longrightarrow>\n           sum c V \\<le> (\\<Sum>i\\<in>F. sum c (S i));\n        sc (insert x F) V\\<rbrakk>\n       \\<Longrightarrow> sum c V \\<le> (\\<Sum>i\\<in>insert x F. sum c (S i))", "case (insert i C)"], ["proof (state)\nthis:\n  finite C\n  i \\<notin> C\n  sc C ?V \\<Longrightarrow> sum c ?V \\<le> (\\<Sum>i\\<in>C. sum c (S i))\n  sc (insert i C) V\n\ngoal (2 subgoals):\n 1. \\<And>V.\n       sc {} V \\<Longrightarrow> sum c V \\<le> (\\<Sum>i\\<in>{}. sum c (S i))\n 2. \\<And>x F V.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>V.\n           sc F V \\<Longrightarrow>\n           sum c V \\<le> (\\<Sum>i\\<in>F. sum c (S i));\n        sc (insert x F) V\\<rbrakk>\n       \\<Longrightarrow> sum c V \\<le> (\\<Sum>i\\<in>insert x F. sum c (S i))", "have V_split: \"(\\<Union> (S ` insert i C)) = (\\<Union> (S ` C)) \\<union> S i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (S ` insert i C) = \\<Union> (S ` C) \\<union> S i", "by auto"], ["proof (state)\nthis:\n  \\<Union> (S ` insert i C) = \\<Union> (S ` C) \\<union> S i\n\ngoal (2 subgoals):\n 1. \\<And>V.\n       sc {} V \\<Longrightarrow> sum c V \\<le> (\\<Sum>i\\<in>{}. sum c (S i))\n 2. \\<And>x F V.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>V.\n           sc F V \\<Longrightarrow>\n           sum c V \\<le> (\\<Sum>i\\<in>F. sum c (S i));\n        sc (insert x F) V\\<rbrakk>\n       \\<Longrightarrow> sum c V \\<le> (\\<Sum>i\\<in>insert x F. sum c (S i))", "have finite: \"finite (\\<Union> (S ` C))\" \"finite (S i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (\\<Union> (S ` C)) &&& finite (S i)", "using insert S_finite"], ["proof (prove)\nusing this:\n  finite C\n  i \\<notin> C\n  sc C ?V \\<Longrightarrow> sum c ?V \\<le> (\\<Sum>i\\<in>C. sum c (S i))\n  sc (insert i C) V\n  \\<forall>i\\<in>{1..m}. finite (S i)\n\ngoal (1 subgoal):\n 1. finite (\\<Union> (S ` C)) &&& finite (S i)", "by (auto simp: sc_def)"], ["proof (state)\nthis:\n  finite (\\<Union> (S ` C))\n  finite (S i)\n\ngoal (2 subgoals):\n 1. \\<And>V.\n       sc {} V \\<Longrightarrow> sum c V \\<le> (\\<Sum>i\\<in>{}. sum c (S i))\n 2. \\<And>x F V.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>V.\n           sc F V \\<Longrightarrow>\n           sum c V \\<le> (\\<Sum>i\\<in>F. sum c (S i));\n        sc (insert x F) V\\<rbrakk>\n       \\<Longrightarrow> sum c V \\<le> (\\<Sum>i\\<in>insert x F. sum c (S i))", "have \"sum c (S i) - sum c (\\<Union> (S ` C) \\<inter> S i) \\<le> sum c (S i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum c (S i) - sum c (\\<Union> (S ` C) \\<inter> S i) \\<le> sum c (S i)", "using assms(2)"], ["proof (prove)\nusing this:\n  \\<forall>i. 0 \\<le> c i\n\ngoal (1 subgoal):\n 1. sum c (S i) - sum c (\\<Union> (S ` C) \\<inter> S i) \\<le> sum c (S i)", "by (simp add: sum_nonneg)"], ["proof (state)\nthis:\n  sum c (S i) - sum c (\\<Union> (S ` C) \\<inter> S i) \\<le> sum c (S i)\n\ngoal (2 subgoals):\n 1. \\<And>V.\n       sc {} V \\<Longrightarrow> sum c V \\<le> (\\<Sum>i\\<in>{}. sum c (S i))\n 2. \\<And>x F V.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>V.\n           sc F V \\<Longrightarrow>\n           sum c V \\<le> (\\<Sum>i\\<in>F. sum c (S i));\n        sc (insert x F) V\\<rbrakk>\n       \\<Longrightarrow> sum c V \\<le> (\\<Sum>i\\<in>insert x F. sum c (S i))", "then"], ["proof (chain)\npicking this:\n  sum c (S i) - sum c (\\<Union> (S ` C) \\<inter> S i) \\<le> sum c (S i)", "have \"sum c (\\<Union> (S ` insert i C)) \\<le> sum c (\\<Union> (S ` C)) + sum c (S i)\""], ["proof (prove)\nusing this:\n  sum c (S i) - sum c (\\<Union> (S ` C) \\<inter> S i) \\<le> sum c (S i)\n\ngoal (1 subgoal):\n 1. sum c (\\<Union> (S ` insert i C))\n    \\<le> sum c (\\<Union> (S ` C)) + sum c (S i)", "unfolding V_split"], ["proof (prove)\nusing this:\n  sum c (S i) - sum c (\\<Union> (S ` C) \\<inter> S i) \\<le> sum c (S i)\n\ngoal (1 subgoal):\n 1. sum c (\\<Union> (S ` C) \\<union> S i)\n    \\<le> sum c (\\<Union> (S ` C)) + sum c (S i)", "using sum_Un[OF finite, of c]"], ["proof (prove)\nusing this:\n  sum c (S i) - sum c (\\<Union> (S ` C) \\<inter> S i) \\<le> sum c (S i)\n  sum c (\\<Union> (S ` C) \\<union> S i) =\n  sum c (\\<Union> (S ` C)) + sum c (S i) -\n  sum c (\\<Union> (S ` C) \\<inter> S i)\n\ngoal (1 subgoal):\n 1. sum c (\\<Union> (S ` C) \\<union> S i)\n    \\<le> sum c (\\<Union> (S ` C)) + sum c (S i)", "by linarith"], ["proof (state)\nthis:\n  sum c (\\<Union> (S ` insert i C))\n  \\<le> sum c (\\<Union> (S ` C)) + sum c (S i)\n\ngoal (2 subgoals):\n 1. \\<And>V.\n       sc {} V \\<Longrightarrow> sum c V \\<le> (\\<Sum>i\\<in>{}. sum c (S i))\n 2. \\<And>x F V.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>V.\n           sc F V \\<Longrightarrow>\n           sum c V \\<le> (\\<Sum>i\\<in>F. sum c (S i));\n        sc (insert x F) V\\<rbrakk>\n       \\<Longrightarrow> sum c V \\<le> (\\<Sum>i\\<in>insert x F. sum c (S i))", "moreover"], ["proof (state)\nthis:\n  sum c (\\<Union> (S ` insert i C))\n  \\<le> sum c (\\<Union> (S ` C)) + sum c (S i)\n\ngoal (2 subgoals):\n 1. \\<And>V.\n       sc {} V \\<Longrightarrow> sum c V \\<le> (\\<Sum>i\\<in>{}. sum c (S i))\n 2. \\<And>x F V.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>V.\n           sc F V \\<Longrightarrow>\n           sum c V \\<le> (\\<Sum>i\\<in>F. sum c (S i));\n        sc (insert x F) V\\<rbrakk>\n       \\<Longrightarrow> sum c V \\<le> (\\<Sum>i\\<in>insert x F. sum c (S i))", "have \"(\\<Sum>i\\<in>insert i C. sum c (S i)) = (\\<Sum>i \\<in> C. sum c (S i)) + sum c (S i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>insert i C. sum c (S i)) =\n    (\\<Sum>i\\<in>C. sum c (S i)) + sum c (S i)", "by (simp add: insert.hyps)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>insert i C. sum c (S i)) =\n  (\\<Sum>i\\<in>C. sum c (S i)) + sum c (S i)\n\ngoal (2 subgoals):\n 1. \\<And>V.\n       sc {} V \\<Longrightarrow> sum c V \\<le> (\\<Sum>i\\<in>{}. sum c (S i))\n 2. \\<And>x F V.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>V.\n           sc F V \\<Longrightarrow>\n           sum c V \\<le> (\\<Sum>i\\<in>F. sum c (S i));\n        sc (insert x F) V\\<rbrakk>\n       \\<Longrightarrow> sum c V \\<le> (\\<Sum>i\\<in>insert x F. sum c (S i))", "ultimately"], ["proof (chain)\npicking this:\n  sum c (\\<Union> (S ` insert i C))\n  \\<le> sum c (\\<Union> (S ` C)) + sum c (S i)\n  (\\<Sum>i\\<in>insert i C. sum c (S i)) =\n  (\\<Sum>i\\<in>C. sum c (S i)) + sum c (S i)", "show ?case"], ["proof (prove)\nusing this:\n  sum c (\\<Union> (S ` insert i C))\n  \\<le> sum c (\\<Union> (S ` C)) + sum c (S i)\n  (\\<Sum>i\\<in>insert i C. sum c (S i)) =\n  (\\<Sum>i\\<in>C. sum c (S i)) + sum c (S i)\n\ngoal (1 subgoal):\n 1. sum c V \\<le> (\\<Sum>i\\<in>insert i C. sum c (S i))", "using insert"], ["proof (prove)\nusing this:\n  sum c (\\<Union> (S ` insert i C))\n  \\<le> sum c (\\<Union> (S ` C)) + sum c (S i)\n  (\\<Sum>i\\<in>insert i C. sum c (S i)) =\n  (\\<Sum>i\\<in>C. sum c (S i)) + sum c (S i)\n  finite C\n  i \\<notin> C\n  sc C ?V \\<Longrightarrow> sum c ?V \\<le> (\\<Sum>i\\<in>C. sum c (S i))\n  sc (insert i C) V\n\ngoal (1 subgoal):\n 1. sum c V \\<le> (\\<Sum>i\\<in>insert i C. sum c (S i))", "by (fastforce simp: sc_def)"], ["proof (state)\nthis:\n  sum c V \\<le> (\\<Sum>i\\<in>insert i C. sum c (S i))\n\ngoal (1 subgoal):\n 1. \\<And>V.\n       sc {} V \\<Longrightarrow> sum c V \\<le> (\\<Sum>i\\<in>{}. sum c (S i))", "qed (simp add: sc_def)"], ["proof (state)\nthis:\n  sum c V \\<le> (\\<Sum>i\\<in>C. sum c (S i))\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation H :: \"nat \\<Rightarrow> real\" where \"H \\<equiv> harm\""], ["", "definition d_star :: nat (\"d\\<^sup>*\") where \"d\\<^sup>* \\<equiv> Max (card ` (S ` {1..m}))\""], ["", "lemma set_cover_bound:\n  assumes \"inv C {}\" \"sc C' U\"\n  shows \"sum w C \\<le> H d\\<^sup>* * sum w C'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum w C \\<le> harm d\\<^sup>* * sum w C'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum w C \\<le> harm d\\<^sup>* * sum w C'", "from invD(3)[OF assms(1)]"], ["proof (chain)\npicking this:\n  \\<exists>c.\n     sum w C = sum c (U - {}) \\<and>\n     (\\<forall>i. 0 \\<le> c i) \\<and>\n     (\\<forall>k\\<in>{1..m}.\n         sum c (S k \\<inter> (U - {}))\n         \\<le> (\\<Sum>j = card (S k \\<inter> {}) + 1..card (S k).\n                   inverse (real j)) *\n               w k)", "obtain c where\n    \"sum w C = sum c U\" \"\\<forall>i. 0 \\<le> c i\" and H_bound:\n    \"\\<forall>k \\<in> {1..m}. sum c (S k) \\<le> H (card (S k)) * w k\" \\<comment> \\<open>Lemma 11.10\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>c.\n     sum w C = sum c (U - {}) \\<and>\n     (\\<forall>i. 0 \\<le> c i) \\<and>\n     (\\<forall>k\\<in>{1..m}.\n         sum c (S k \\<inter> (U - {}))\n         \\<le> (\\<Sum>j = card (S k \\<inter> {}) + 1..card (S k).\n                   inverse (real j)) *\n               w k)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>sum w C = sum c U; \\<forall>i. 0 \\<le> c i;\n         \\<forall>k\\<in>{1..m}.\n            sum c (S k) \\<le> harm (card (S k)) * w k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: harm_def Int_absorb2 S_subset)"], ["proof (state)\nthis:\n  sum w C = sum c U\n  \\<forall>i. 0 \\<le> c i\n  \\<forall>k\\<in>{1..m}. sum c (S k) \\<le> harm (card (S k)) * w k\n\ngoal (1 subgoal):\n 1. sum w C \\<le> harm d\\<^sup>* * sum w C'", "have \"\\<forall>k \\<in> {1..m}. card (S k) \\<le> d\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>{1..m}. card (S k) \\<le> d\\<^sup>*", "by (auto simp: d_star_def)"], ["proof (state)\nthis:\n  \\<forall>k\\<in>{1..m}. card (S k) \\<le> d\\<^sup>*\n\ngoal (1 subgoal):\n 1. sum w C \\<le> harm d\\<^sup>* * sum w C'", "then"], ["proof (chain)\npicking this:\n  \\<forall>k\\<in>{1..m}. card (S k) \\<le> d\\<^sup>*", "have \"\\<forall>k \\<in> {1..m}. H (card (S k)) \\<le> H d\\<^sup>*\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>{1..m}. card (S k) \\<le> d\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>{1..m}. harm (card (S k)) \\<le> harm d\\<^sup>*", "by (auto simp: harm_def intro!: sum_mono2)"], ["proof (state)\nthis:\n  \\<forall>k\\<in>{1..m}. harm (card (S k)) \\<le> harm d\\<^sup>*\n\ngoal (1 subgoal):\n 1. sum w C \\<le> harm d\\<^sup>* * sum w C'", "with H_bound"], ["proof (chain)\npicking this:\n  \\<forall>k\\<in>{1..m}. sum c (S k) \\<le> harm (card (S k)) * w k\n  \\<forall>k\\<in>{1..m}. harm (card (S k)) \\<le> harm d\\<^sup>*", "have \"\\<forall>k \\<in> {1..m}. sum c (S k) \\<le> H d\\<^sup>* * w k\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>{1..m}. sum c (S k) \\<le> harm (card (S k)) * w k\n  \\<forall>k\\<in>{1..m}. harm (card (S k)) \\<le> harm d\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>{1..m}. sum c (S k) \\<le> harm d\\<^sup>* * w k", "by (metis atLeastAtMost_iff atLeastatMost_empty_iff empty_iff mult_right_mono w_nonneg)"], ["proof (state)\nthis:\n  \\<forall>k\\<in>{1..m}. sum c (S k) \\<le> harm d\\<^sup>* * w k\n\ngoal (1 subgoal):\n 1. sum w C \\<le> harm d\\<^sup>* * sum w C'", "moreover"], ["proof (state)\nthis:\n  \\<forall>k\\<in>{1..m}. sum c (S k) \\<le> harm d\\<^sup>* * w k\n\ngoal (1 subgoal):\n 1. sum w C \\<le> harm d\\<^sup>* * sum w C'", "have \"C' \\<subseteq> {1..m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C' \\<subseteq> {1..m}", "using assms(2)"], ["proof (prove)\nusing this:\n  sc C' U\n\ngoal (1 subgoal):\n 1. C' \\<subseteq> {1..m}", "by (simp add: sc_def)"], ["proof (state)\nthis:\n  C' \\<subseteq> {1..m}\n\ngoal (1 subgoal):\n 1. sum w C \\<le> harm d\\<^sup>* * sum w C'", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>k\\<in>{1..m}. sum c (S k) \\<le> harm d\\<^sup>* * w k\n  C' \\<subseteq> {1..m}", "have \"\\<forall>i \\<in> C'. sum c (S i) \\<le> H d\\<^sup>* * w i\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>{1..m}. sum c (S k) \\<le> harm d\\<^sup>* * w k\n  C' \\<subseteq> {1..m}\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>C'. sum c (S i) \\<le> harm d\\<^sup>* * w i", "by blast"], ["proof (state)\nthis:\n  \\<forall>i\\<in>C'. sum c (S i) \\<le> harm d\\<^sup>* * w i\n\ngoal (1 subgoal):\n 1. sum w C \\<le> harm d\\<^sup>* * sum w C'", "then"], ["proof (chain)\npicking this:\n  \\<forall>i\\<in>C'. sum c (S i) \\<le> harm d\\<^sup>* * w i", "have \"(\\<Sum>i \\<in> C'. sum c (S i)) \\<le> H d\\<^sup>* * sum w C'\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>C'. sum c (S i) \\<le> harm d\\<^sup>* * w i\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>C'. sum c (S i)) \\<le> harm d\\<^sup>* * sum w C'", "by (auto simp: sum_distrib_left intro: sum_mono)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>C'. sum c (S i)) \\<le> harm d\\<^sup>* * sum w C'\n\ngoal (1 subgoal):\n 1. sum w C \\<le> harm d\\<^sup>* * sum w C'", "have \"sum w C = sum c U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum w C = sum c U", "by fact \\<comment> \\<open>Lemma 11.9\\<close>"], ["proof (state)\nthis:\n  sum w C = sum c U\n\ngoal (1 subgoal):\n 1. sum w C \\<le> harm d\\<^sup>* * sum w C'", "also"], ["proof (state)\nthis:\n  sum w C = sum c U\n\ngoal (1 subgoal):\n 1. sum w C \\<le> harm d\\<^sup>* * sum w C'", "have \"... \\<le> (\\<Sum>i \\<in> C'. sum c (S i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum c U \\<le> (\\<Sum>i\\<in>C'. sum c (S i))", "by (rule cover_sum[OF assms(2)]) fact"], ["proof (state)\nthis:\n  sum c U \\<le> (\\<Sum>i\\<in>C'. sum c (S i))\n\ngoal (1 subgoal):\n 1. sum w C \\<le> harm d\\<^sup>* * sum w C'", "also"], ["proof (state)\nthis:\n  sum c U \\<le> (\\<Sum>i\\<in>C'. sum c (S i))\n\ngoal (1 subgoal):\n 1. sum w C \\<le> harm d\\<^sup>* * sum w C'", "have \"... \\<le> H d\\<^sup>* * sum w C'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>C'. sum c (S i)) \\<le> harm d\\<^sup>* * sum w C'", "by fact"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>C'. sum c (S i)) \\<le> harm d\\<^sup>* * sum w C'\n\ngoal (1 subgoal):\n 1. sum w C \\<le> harm d\\<^sup>* * sum w C'", "finally"], ["proof (chain)\npicking this:\n  sum w C \\<le> harm d\\<^sup>* * sum w C'", "show ?thesis"], ["proof (prove)\nusing this:\n  sum w C \\<le> harm d\\<^sup>* * sum w C'\n\ngoal (1 subgoal):\n 1. sum w C \\<le> harm d\\<^sup>* * sum w C'", "."], ["proof (state)\nthis:\n  sum w C \\<le> harm d\\<^sup>* * sum w C'\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem set_cover_approx:\n\"VARS (R :: 'a set) (C :: nat set) (i :: nat)\n  {True}\n  R := U; C := {};\n  WHILE R \\<noteq> {} INV {inv C R} DO\n  i := min_arg R m;\n  R := R - S i;\n  C := C \\<union> {i}\n  OD\n  {sc C U \\<and> (\\<forall>C'. sc C' U \\<longrightarrow> sum w C \\<le> H d\\<^sup>* * sum w C')}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {True} \n     R := U;\n     C := {};\n     WHILE R \\<noteq> {} INV {local.inv C R}  VAR {\\<lambda>(R, C, i). 0} \n      DO i := min_arg R m; R := R - S i; C := C \\<union> {i} OD \n     {sc C U \\<and>\n      (\\<forall>C'.\n          sc C' U \\<longrightarrow>\n          sum w C \\<le> harm d\\<^sup>* * sum w C')}", "proof (vcg, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>R C i. True \\<Longrightarrow> local.inv {} U\n 2. \\<And>R C i.\n       local.inv C R \\<and> R \\<noteq> {} \\<Longrightarrow>\n       local.inv (C \\<union> {min_arg R m}) (R - S (min_arg R m))\n 3. \\<And>R C i.\n       local.inv C R \\<and> \\<not> R \\<noteq> {} \\<Longrightarrow>\n       sc C U \\<and>\n       (\\<forall>C'.\n           sc C' U \\<longrightarrow>\n           sum w C \\<le> harm d\\<^sup>* * sum w C')", "case 1"], ["proof (state)\nthis:\n  True\n\ngoal (3 subgoals):\n 1. \\<And>R C i. True \\<Longrightarrow> local.inv {} U\n 2. \\<And>R C i.\n       local.inv C R \\<and> R \\<noteq> {} \\<Longrightarrow>\n       local.inv (C \\<union> {min_arg R m}) (R - S (min_arg R m))\n 3. \\<And>R C i.\n       local.inv C R \\<and> \\<not> R \\<noteq> {} \\<Longrightarrow>\n       sc C U \\<and>\n       (\\<forall>C'.\n           sc C' U \\<longrightarrow>\n           sum w C \\<le> harm d\\<^sup>* * sum w C')", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.inv {} U", "by (rule inv_init)"], ["proof (state)\nthis:\n  local.inv {} U\n\ngoal (2 subgoals):\n 1. \\<And>R C i.\n       local.inv C R \\<and> R \\<noteq> {} \\<Longrightarrow>\n       local.inv (C \\<union> {min_arg R m}) (R - S (min_arg R m))\n 2. \\<And>R C i.\n       local.inv C R \\<and> \\<not> R \\<noteq> {} \\<Longrightarrow>\n       sc C U \\<and>\n       (\\<forall>C'.\n           sc C' U \\<longrightarrow>\n           sum w C \\<le> harm d\\<^sup>* * sum w C')", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R C i.\n       local.inv C R \\<and> R \\<noteq> {} \\<Longrightarrow>\n       local.inv (C \\<union> {min_arg R m}) (R - S (min_arg R m))\n 2. \\<And>R C i.\n       local.inv C R \\<and> \\<not> R \\<noteq> {} \\<Longrightarrow>\n       sc C U \\<and>\n       (\\<forall>C'.\n           sc C' U \\<longrightarrow>\n           sum w C \\<le> harm d\\<^sup>* * sum w C')", "case 2"], ["proof (state)\nthis:\n  local.inv C_ R_ \\<and> R_ \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>R C i.\n       local.inv C R \\<and> R \\<noteq> {} \\<Longrightarrow>\n       local.inv (C \\<union> {min_arg R m}) (R - S (min_arg R m))\n 2. \\<And>R C i.\n       local.inv C R \\<and> \\<not> R \\<noteq> {} \\<Longrightarrow>\n       sc C U \\<and>\n       (\\<forall>C'.\n           sc C' U \\<longrightarrow>\n           sum w C \\<le> harm d\\<^sup>* * sum w C')", "thus ?case"], ["proof (prove)\nusing this:\n  local.inv C_ R_ \\<and> R_ \\<noteq> {}\n\ngoal (1 subgoal):\n 1. local.inv (C_ \\<union> {min_arg R_ m}) (R_ - S (min_arg R_ m))", "using inv_step"], ["proof (prove)\nusing this:\n  local.inv C_ R_ \\<and> R_ \\<noteq> {}\n  \\<lbrakk>local.inv ?C ?R; ?R \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> local.inv (?C \\<union> {min_arg ?R m})\n                     (?R - S (min_arg ?R m))\n\ngoal (1 subgoal):\n 1. local.inv (C_ \\<union> {min_arg R_ m}) (R_ - S (min_arg R_ m))", ".."], ["proof (state)\nthis:\n  local.inv (C_ \\<union> {min_arg R_ m}) (R_ - S (min_arg R_ m))\n\ngoal (1 subgoal):\n 1. \\<And>R C i.\n       local.inv C R \\<and> \\<not> R \\<noteq> {} \\<Longrightarrow>\n       sc C U \\<and>\n       (\\<forall>C'.\n           sc C' U \\<longrightarrow>\n           sum w C \\<le> harm d\\<^sup>* * sum w C')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>R C i.\n       local.inv C R \\<and> \\<not> R \\<noteq> {} \\<Longrightarrow>\n       sc C U \\<and>\n       (\\<forall>C'.\n           sc C' U \\<longrightarrow>\n           sum w C \\<le> harm d\\<^sup>* * sum w C')", "case (3 R C i)"], ["proof (state)\nthis:\n  local.inv C R \\<and> \\<not> R \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>R C i.\n       local.inv C R \\<and> \\<not> R \\<noteq> {} \\<Longrightarrow>\n       sc C U \\<and>\n       (\\<forall>C'.\n           sc C' U \\<longrightarrow>\n           sum w C \\<le> harm d\\<^sup>* * sum w C')", "then"], ["proof (chain)\npicking this:\n  local.inv C R \\<and> \\<not> R \\<noteq> {}", "have \"sc C U\""], ["proof (prove)\nusing this:\n  local.inv C R \\<and> \\<not> R \\<noteq> {}\n\ngoal (1 subgoal):\n 1. sc C U", "unfolding inv_def"], ["proof (prove)\nusing this:\n  (sc C (U - R) \\<and> R \\<subseteq> U \\<and> c_exists C R) \\<and>\n  \\<not> R \\<noteq> {}\n\ngoal (1 subgoal):\n 1. sc C U", "by auto"], ["proof (state)\nthis:\n  sc C U\n\ngoal (1 subgoal):\n 1. \\<And>R C i.\n       local.inv C R \\<and> \\<not> R \\<noteq> {} \\<Longrightarrow>\n       sc C U \\<and>\n       (\\<forall>C'.\n           sc C' U \\<longrightarrow>\n           sum w C \\<le> harm d\\<^sup>* * sum w C')", "with 3"], ["proof (chain)\npicking this:\n  local.inv C R \\<and> \\<not> R \\<noteq> {}\n  sc C U", "show ?case"], ["proof (prove)\nusing this:\n  local.inv C R \\<and> \\<not> R \\<noteq> {}\n  sc C U\n\ngoal (1 subgoal):\n 1. sc C U \\<and>\n    (\\<forall>C'.\n        sc C' U \\<longrightarrow> sum w C \\<le> harm d\\<^sup>* * sum w C')", "by (auto intro: set_cover_bound)"], ["proof (state)\nthis:\n  sc C U \\<and>\n  (\\<forall>C'.\n      sc C' U \\<longrightarrow> sum w C \\<le> harm d\\<^sup>* * sum w C')\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* Set Cover *)"], ["", "end"], ["", "(* Theory *)"]]}