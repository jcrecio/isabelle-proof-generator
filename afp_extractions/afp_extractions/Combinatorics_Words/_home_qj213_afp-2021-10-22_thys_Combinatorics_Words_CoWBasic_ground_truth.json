{"file_name": "/home/qj213/afp-2021-10-22/thys/Combinatorics_Words/CoWBasic.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Combinatorics_Words", "problem_names": ["lemmas rassoc = append_assoc", "lemmas lassoc = append_assoc[symmetric]", "lemmas [simp] = prefix_def", "lemmas prefI'[intro] = prefixI", "lemma prefI[intro]: \"p \\<cdot> s = w \\<Longrightarrow> p \\<le>p w\"", "lemma prefD: \"u \\<le>p v \\<Longrightarrow> \\<exists> z. v = u \\<cdot> z\"", "lemma pref_compIff[iff]: \"u \\<bowtie> v \\<longleftrightarrow> u \\<le>p v \\<or> v \\<le>p u\"", "lemma npI[intro]: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<le>p v \\<Longrightarrow> u \\<le>np v\"", "lemma npI'[intro]: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> (\\<exists> z. u \\<cdot> z = v) \\<Longrightarrow> u \\<le>np v\"", "lemma npD: \"u \\<le>np v \\<Longrightarrow> u \\<le>p v\"", "lemma npD': \"u \\<le>np v \\<Longrightarrow> u \\<noteq> \\<epsilon>\"", "lemmas [simp] = strict_prefix_def", "lemma sprefI1[intro]: \"v = u \\<cdot> z \\<Longrightarrow> z \\<noteq> \\<epsilon> \\<Longrightarrow> u <p v\"", "lemma sprefI1'[intro]: \"u \\<cdot> z = v \\<Longrightarrow> z \\<noteq> \\<epsilon> \\<Longrightarrow> u <p v\"", "lemma sprefI2[intro]: \"u \\<le>p v \\<Longrightarrow> length u < length v \\<Longrightarrow> u <p v\"", "lemma sprefD[elim]: \"u <p v \\<Longrightarrow> u \\<le>p v \\<and> u \\<noteq> v\"", "lemmas sprefD1[elim] = prefix_order.order.strict_implies_order and\n  sprefD2[elim] = prefix_order.less_imp_neq", "lemma sprefE [elim]: assumes \"u <p v\" obtains z where \"u \\<cdot> z = v\" and \"z \\<noteq> \\<epsilon>\"", "lemmas [simp] = suffix_def", "lemma sufI[intro]: \"p \\<cdot> s = w \\<Longrightarrow> s \\<le>s w\"", "lemma sufD[elim]: \"u \\<le>s v \\<Longrightarrow> \\<exists> z. z \\<cdot> u = v\"", "lemmas [simp] = strict_suffix_def", "lemmas [intro] = suffix_order.le_neq_trans", "lemma ssufI1[intro]: \"u \\<cdot> v = w \\<Longrightarrow> u \\<noteq> \\<epsilon> \\<Longrightarrow> v <s w\"", "lemma ssufI2[intro]: \"u \\<le>s v \\<Longrightarrow> length u < length v \\<Longrightarrow> u <s v\"", "lemma ssufD[elim]: \"u <s v \\<Longrightarrow> u \\<le>s v \\<and> u \\<noteq> v\"", "lemmas ssufD1[elim] = suffix_order.order.strict_implies_order and\n  ssufD2[elim] = suffix_order.less_imp_neq", "lemma nsI[intro]: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<le>s v \\<Longrightarrow> u \\<le>ns v\"", "lemma nsI'[intro]: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> (\\<exists> z. z \\<cdot> u = v) \\<Longrightarrow> u \\<le>ns v\"", "lemma nsD: \"u \\<le>ns v \\<Longrightarrow> u \\<le>s v\"", "lemma nsD': \"u \\<le>ns v \\<Longrightarrow> u \\<noteq> \\<epsilon>\"", "lemmas factor_def[simp] = sublist_def", "lemmas strict_factor_def[simp] = strict_sublist_def", "lemma facI: \"u \\<le>f p\\<cdot>u\\<cdot>s\"", "lemma facI': \"a \\<cdot> u \\<cdot> b = w \\<Longrightarrow> u \\<le>f w\"", "lemma facE[elim]: assumes \"u \\<le>f v\" \n  obtains p s where \"v = p \\<cdot> u \\<cdot> s\"", "lemma facE'[elim]: assumes \"u \\<le>f v\" \n  obtains p s where \"p \\<cdot> u \\<cdot> s = v\"", "lemmas concat_morph = sym[OF concat_append]", "lemmas cancel = same_append_eq and\n    cancel_right = append_same_eq", "lemma bij_lists: \"bij_betw f X Y \\<Longrightarrow> bij_betw (map f) (lists X) (lists Y)\"", "lemma concat_sing': \"concat [r] = r\"", "lemma concat_sing:  \"s = [hd s] \\<Longrightarrow> concat s = hd s\"", "lemma rev_sing: \"rev [x] = [x]\"", "lemma hd_word: \"a#ws = [a] \\<cdot> ws\"", "lemma hd_word': \"w \\<noteq> \\<epsilon> \\<Longrightarrow> [hd w] \\<cdot> tl w = w\"", "lemma hd_pref: \"w \\<noteq> \\<epsilon> \\<Longrightarrow> [hd w] \\<le>p w\"", "lemma add_nth: assumes \"n < \\<^bold>|w\\<^bold>|\" shows \"(take n w) \\<cdot> [w!n] \\<le>p w\"", "lemma hd_pref': \"w \\<noteq> \\<epsilon> \\<Longrightarrow> [w!0] \\<le>p w\"", "lemma sub_lists_mono: \"A \\<subseteq> B \\<Longrightarrow> x \\<in> lists A \\<Longrightarrow> x \\<in> lists B\"", "lemma lists_hd: \"us \\<noteq> \\<epsilon> \\<Longrightarrow> us \\<in> lists Q \\<Longrightarrow> hd us \\<in> Q\"", "lemma replicate_in_lists: \"replicate k z \\<in> lists {z}\"", "lemma tl_lists: assumes \"us \\<in> lists A\" shows \"tl us \\<in> lists A\"", "lemma long_list_tl: assumes \"1 < \\<^bold>|us\\<^bold>|\" shows \"tl us \\<noteq> \\<epsilon>\"", "lemma tl_set: \"x \\<in> set (tl a) \\<Longrightarrow> x \\<in> set a\"", "lemma drop_take_inv: \"n \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> drop n (take n u \\<cdot> w) = w\"", "lemma split_list_long: assumes \"1 < \\<^bold>|us\\<^bold>|\" and \"u \\<in> set us\" \n  obtains xs ys where \"us = xs \\<cdot> [u] \\<cdot> ys\" and \"xs\\<cdot>ys\\<noteq>\\<epsilon>\"", "lemma flatten_lists: \"G \\<subseteq> lists B \\<Longrightarrow> xs \\<in> lists G \\<Longrightarrow> concat xs \\<in> lists B\"", "lemma concat_map_sing_ident: \"concat (map (\\<lambda> x. [x]) xs) = xs\"", "lemma hd_concat_tl: assumes \"ws \\<noteq> \\<epsilon>\" shows \"hd ws \\<cdot> concat (tl ws) = concat ws\"", "lemma concat_butlast_last: assumes \"ws \\<noteq> \\<epsilon>\" shows \"concat (butlast ws) \\<cdot> last ws = concat ws\"", "lemma concat_last_suf: \"ws \\<noteq> \\<epsilon> \\<Longrightarrow> last ws \\<le>s concat ws\"", "lemma concat_hd_pref: \"ws \\<noteq> \\<epsilon> \\<Longrightarrow> hd ws \\<le>p concat ws\"", "lemma set_nemp_concat_nemp: assumes \"ws \\<noteq> \\<epsilon>\" and \"\\<epsilon> \\<notin> set ws\" shows \"concat ws \\<noteq> \\<epsilon>\"", "lemmas takedrop = append_take_drop_id", "lemma comm_rev_iff: \"rev u \\<cdot> rev v = rev v \\<cdot> rev u \\<longleftrightarrow> u \\<cdot> v = v \\<cdot> u\"", "lemma rev_induct2:\n  \"\\<lbrakk> P [] [];\n  \\<And>x xs. P (xs\\<cdot>[x]) [];\n  \\<And>y ys. P [] (ys\\<cdot>[y]);\n  \\<And>x xs y ys. P xs ys  \\<Longrightarrow> P (xs\\<cdot>[x]) (ys\\<cdot>[y]) \\<rbrakk>\n \\<Longrightarrow> P xs ys\"", "lemmas self_pref = prefix_order.order.refl", "lemmas pref_antisym = prefix_order.order.antisym", "lemmas pref_trans = prefix_order.order.trans", "lemmas suf_trans = suffix_order.order.trans", "lemma nemp_elem_setI[intro]: \"u \\<in> S \\<Longrightarrow> u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<in> S\\<^sub>+\"", "lemma nel_drop_emp: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<in> S \\<Longrightarrow> u \\<in> S\\<^sub>+\"", "lemma drop_emp_nel: assumes \"u \\<in> S\\<^sub>+\" shows \"u \\<noteq> \\<epsilon>\" and \"u \\<in> S\"", "lemma emp_concat_emp: \"us \\<in> lists S\\<^sub>+ \\<Longrightarrow> concat us = \\<epsilon> \\<Longrightarrow> us = \\<epsilon>\"", "lemma take_nemp: \"w \\<noteq> \\<epsilon> \\<Longrightarrow> n \\<noteq> 0 \\<Longrightarrow> take n w \\<noteq> \\<epsilon>\"", "lemma pref_nemp [intro]: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<cdot> v \\<noteq> \\<epsilon>\"", "lemma suf_nemp [intro]: \"v \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<cdot> v \\<noteq> \\<epsilon>\"", "lemma lenarg: \"u = v \\<Longrightarrow> \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\"", "lemma npos_len: \"\\<^bold>|u\\<^bold>| \\<le> 0 \\<Longrightarrow> u = \\<epsilon>\"", "lemma nemp_pos_len: \"r \\<noteq> \\<epsilon> \\<Longrightarrow> 1 \\<le> \\<^bold>|r\\<^bold>|\"", "lemma swap_len: \"\\<^bold>|u \\<cdot> v\\<^bold>| = \\<^bold>|v \\<cdot> u\\<^bold>|\"", "lemma len_after_drop: \"p + q \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow>  q \\<le> \\<^bold>|drop p w\\<^bold>|\"", "lemma short_take_append: \"n \\<le> \\<^bold>|u\\<^bold>|\\<Longrightarrow> take n (u \\<cdot> v) = take n u\"", "lemma sing_word: \"\\<^bold>|us\\<^bold>| = 1 \\<Longrightarrow> [hd us] = us\"", "lemma sing_word_concat: assumes \"\\<^bold>|us\\<^bold>| = 1\" shows \"[concat us] = us\"", "lemma nonsing_concat_len: \"\\<^bold>|us\\<^bold>| \\<noteq> 1 \\<Longrightarrow> concat us \\<noteq> \\<epsilon> \\<Longrightarrow> 1 < \\<^bold>|us\\<^bold>|\"", "lemma sing_len: \"\\<^bold>|[a]\\<^bold>| = 1\"", "lemma pref_len': \"\\<^bold>|u\\<^bold>| \\<le> \\<^bold>|u \\<cdot> z\\<^bold>|\"", "lemma suf_len': \"\\<^bold>|u\\<^bold>| \\<le> \\<^bold>|z \\<cdot> u\\<^bold>|\"", "lemma fac_len: \"u \\<le>f v \\<Longrightarrow> \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|v\\<^bold>|\"", "lemma fac_len': \"\\<^bold>|w\\<^bold>| \\<le> \\<^bold>|u \\<cdot> w \\<cdot> v\\<^bold>|\"", "lemma fac_len_eq: \"u \\<le>f v \\<Longrightarrow> \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>| \\<Longrightarrow> u = v\"", "lemma drop_len: \"\\<^bold>|u \\<cdot> w\\<^bold>| \\<le> \\<^bold>|u \\<cdot> v \\<cdot> w\\<^bold>|\"", "lemma drop_pref: \"drop \\<^bold>|u\\<^bold>| (u \\<cdot> w) = w\"", "lemma take_len: \"p \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow> \\<^bold>|take p w\\<^bold>| = p\"", "lemma conj_len: \"p \\<cdot> x = x \\<cdot> s \\<Longrightarrow> \\<^bold>|p\\<^bold>| = \\<^bold>|s\\<^bold>|\"", "lemma take_nemp_len: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> r \\<noteq> \\<epsilon> \\<Longrightarrow> take \\<^bold>|r\\<^bold>| u \\<noteq> \\<epsilon>\"", "lemma nemp_len: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> \\<^bold>|u\\<^bold>| \\<noteq> 0\"", "lemma take_self: \"take \\<^bold>|w\\<^bold>| w = w\"", "lemma len_le_concat: \"\\<epsilon> \\<notin>  set ws \\<Longrightarrow> \\<^bold>|ws\\<^bold>| \\<le> \\<^bold>|concat ws\\<^bold>|\"", "lemma eq_len_iff: assumes eq: \"x \\<cdot> y = u \\<cdot> v\" shows \"\\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<longleftrightarrow> \\<^bold>|v\\<^bold>| \\<le> \\<^bold>|y\\<^bold>|\"", "lemma eq_len_iff_less: assumes eq: \"x \\<cdot> y = u \\<cdot> v\" shows \"\\<^bold>|x\\<^bold>| < \\<^bold>|u\\<^bold>| \\<longleftrightarrow> \\<^bold>|v\\<^bold>| < \\<^bold>|y\\<^bold>|\"", "lemmas pref_emp = prefix_bot.bot.extremum_uniqueI", "lemma triv_pref: \"r \\<le>p r \\<cdot> s\"", "lemma triv_spref: \"s \\<noteq> \\<epsilon> \\<Longrightarrow> r <p r \\<cdot> s\"", "lemma pref_cancel: \"z \\<cdot> u \\<le>p z \\<cdot> v \\<Longrightarrow> u \\<le>p v\"", "lemma pref_cancel': \"u \\<le>p v \\<Longrightarrow> z \\<cdot> u \\<le>p z \\<cdot> v\"", "lemmas pref_cancel_conv = same_prefix_prefix", "lemmas pref_ext = prefix_prefix \\<comment> \\<open>provided by Sublist.thy\\<close>", "lemma spref_ext: \"r <p u \\<Longrightarrow> r <p u \\<cdot> v\"", "lemma pref_ext_nemp: \"r \\<le>p u \\<Longrightarrow> v \\<noteq> \\<epsilon> \\<Longrightarrow> r <p u \\<cdot> v\"", "lemma pref_take: \"p \\<le>p w \\<Longrightarrow> take \\<^bold>|p\\<^bold>| w = p\"", "lemma pref_take_conv: \"take (\\<^bold>|r\\<^bold>|) w = r \\<longleftrightarrow> r \\<le>p w\"", "lemma le_suf_drop: assumes \"i \\<le> j\" shows \"drop j w \\<le>s drop i w\"", "lemma spref_take: \"p <p w \\<Longrightarrow> take \\<^bold>|p\\<^bold>| w = p\"", "lemma pref_same_len: \"u \\<le>p v \\<Longrightarrow> \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>| \\<Longrightarrow> u = v\"", "lemma add_nth_pref: assumes \"u <p w\" shows \"u \\<cdot> [w!\\<^bold>|u\\<^bold>|] \\<le>p w\"", "lemma index_pref: \"\\<^bold>|u\\<^bold>| \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow> (\\<forall> i < \\<^bold>|u\\<^bold>|.  u!i = w!i) \\<Longrightarrow> u \\<le>p w\"", "lemma pref_index: assumes \"u \\<le>p w\" \"i < \\<^bold>|u\\<^bold>|\" shows \"u!i = w!i\"", "lemma pref_drop: \"u \\<le>p v \\<Longrightarrow> drop p u \\<le>p drop p v\"", "lemma pref_comp_sym[sym]: \"u \\<bowtie> v \\<Longrightarrow> v \\<bowtie> u\"", "lemmas ruler_le = prefix_length_prefix and\n       ruler = prefix_same_cases and\n       ruler' = prefix_same_cases[folded prefix_comparable_def]", "lemma ruler_equal: \"u \\<le>p w \\<Longrightarrow> v \\<le>p w \\<Longrightarrow> \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>| \\<Longrightarrow> u = v\"", "lemma ruler_comp: \"u \\<le>p v \\<Longrightarrow> u' \\<le>p v' \\<Longrightarrow> v \\<bowtie> v' \\<Longrightarrow> u \\<bowtie> u'\"", "lemma ruler_pref: \"w \\<le>p v\\<cdot>z \\<Longrightarrow> w \\<bowtie> v\"", "lemma pref_prod_pref_short: \"u \\<le>p z \\<cdot> w \\<Longrightarrow> v \\<le>p w \\<Longrightarrow> \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|z \\<cdot> v\\<^bold>| \\<Longrightarrow> u \\<le>p z \\<cdot> v\"", "lemma pref_prod_pref: \"u \\<le>p z \\<cdot> w \\<Longrightarrow> u \\<le>p w \\<Longrightarrow>  u \\<le>p z \\<cdot> u\"", "lemma pref_prod_pref': assumes \"u \\<le>p z\\<cdot>u\\<cdot>w\" shows \"u \\<le>p z\\<cdot>u\"", "lemma pref_prod_long: \"u \\<le>p v \\<cdot> w \\<Longrightarrow> \\<^bold>|v\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> v \\<le>p u\"", "lemma pref_keeps_root: \"u \\<le>p r \\<cdot> u \\<Longrightarrow> v \\<le>p u \\<Longrightarrow> v \\<le>p r \\<cdot> v\"", "lemma pref_prolong:  \"w \\<le>p z \\<cdot> r \\<Longrightarrow> r \\<le>p s \\<Longrightarrow> w \\<le>p z \\<cdot> s\"", "lemma pref_prolong': assumes \"u \\<le>p w \\<cdot> z\" \"v \\<cdot> u \\<le>p z\" shows \"u \\<le>p w \\<cdot> v \\<cdot> u\"", "lemma pref_prolong_comp: \"u \\<le>p w \\<cdot> z \\<Longrightarrow> v \\<cdot> u \\<bowtie> z \\<Longrightarrow> u \\<le>p w \\<cdot> v \\<cdot> u\"", "lemma pref_prod_short: \"u \\<le>p v \\<cdot> w \\<Longrightarrow> \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|v\\<^bold>| \\<Longrightarrow> u \\<le>p v\"", "lemma pref_prod_short': assumes \"u \\<le>p v \\<cdot> w\" and \"\\<^bold>|u\\<^bold>| < \\<^bold>|v\\<^bold>|\" shows \"u <p v\"", "lemma pref_prod_cancel: assumes \"u \\<le>p p\\<cdot>w\\<cdot>q\" and \"\\<^bold>|p\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\" and \"\\<^bold>|u\\<^bold>| \\<le> \\<^bold>|p\\<cdot>w\\<^bold>|\"\n  obtains r where \"u = p \\<cdot> r\" and \"r \\<le>p w\"", "lemma pref_prod_cancel': assumes \"u \\<le>p p\\<cdot>w\\<cdot>q\" and \"\\<^bold>|p\\<^bold>| < \\<^bold>|u\\<^bold>|\" and \"\\<^bold>|u\\<^bold>| \\<le> \\<^bold>|p\\<cdot>w\\<^bold>|\"\n  obtains r where \"u = p \\<cdot> r\" and \"r \\<le>p w\" and \"r \\<noteq> \\<epsilon>\"", "lemma pref_comp_eq: \"u \\<bowtie> v \\<Longrightarrow>\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>| \\<Longrightarrow> u = v\"", "lemma non_comp_parallel: \"\\<not> u \\<bowtie> v \\<longleftrightarrow> u \\<parallel> v\"", "lemma comp_refl: \"u \\<bowtie> u\"", "lemma incomp_cancel: \"\\<not> p\\<cdot>u \\<bowtie> p\\<cdot>v \\<Longrightarrow> \\<not> u \\<bowtie> v\"", "lemma comp_cancel: \"z \\<cdot> u \\<bowtie> z \\<cdot> v \\<Longrightarrow> u \\<bowtie> v\"", "lemma comm_ruler: \"r \\<cdot> s \\<le>p w1 \\<Longrightarrow> s \\<cdot> r \\<le>p w2 \\<Longrightarrow> w1 \\<bowtie> w2 \\<Longrightarrow> r \\<cdot> s = s \\<cdot> r\"", "lemma pref_share_take: \"u \\<le>p v \\<Longrightarrow> q \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> take q u = take q v\"", "lemma pref_prod_longer: \"u \\<le>p z \\<cdot> w \\<Longrightarrow> v \\<le>p w \\<Longrightarrow> \\<^bold>|z \\<cdot> v\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|  \\<Longrightarrow> z \\<cdot> v \\<le>p u\"", "lemma pref_comp_not_pref: \"u \\<bowtie> v \\<Longrightarrow> \\<not> v \\<le>p u \\<Longrightarrow> u <p v\"", "lemma pref_comp_not_spref: \"u \\<bowtie> v \\<Longrightarrow> \\<not> u <p v \\<Longrightarrow> v \\<le>p u\"", "lemma hd_prod: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> (u \\<cdot> v)!0 = u!0\"", "lemma distinct_first: assumes \"w \\<noteq> \\<epsilon>\" \"z \\<noteq> \\<epsilon>\" \"w!0 \\<noteq> z!0\" shows \"w \\<cdot> w' \\<noteq> z \\<cdot> z'\"", "lemmas last_no_split = prefix_snoc", "lemma last_no_split': assumes \"u <p w\" \"w \\<le>p u \\<cdot> [a]\" shows \"w = u \\<cdot> [a]\"", "lemma pcomp_shorter: \"v \\<bowtie> w \\<Longrightarrow> \\<^bold>|v\\<^bold>| \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow> v \\<le>p w\"", "lemma pref_comp_len_trans: \"w \\<le>p v \\<Longrightarrow> u \\<bowtie> v \\<Longrightarrow> \\<^bold>|w\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> w \\<le>p u\"", "lemma comp_ext: \"z \\<cdot> w1 \\<bowtie> z \\<cdot> w2 \\<longleftrightarrow> w1 \\<bowtie> w2\"", "lemma emp_pref: \"\\<epsilon> \\<le>p u\"", "lemma emp_spref:  \"u \\<noteq> \\<epsilon> \\<Longrightarrow> \\<epsilon> <p u\"", "lemma long_pref: \"u \\<le>p v \\<Longrightarrow> \\<^bold>|v\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> u = v\"", "lemma incomp_ext: \"\\<not> w1 \\<bowtie>  w2 \\<Longrightarrow> \\<not> w1 \\<cdot> z \\<bowtie> w2 \\<cdot> z'\"", "lemma mismatch_incopm: \"\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>| \\<Longrightarrow> x \\<noteq> y \\<Longrightarrow> \\<not> u \\<cdot> [x] \\<bowtie> v \\<cdot> [y]\"", "lemma comp_prefs_comp: \"u \\<cdot> z \\<bowtie> v \\<cdot> w \\<Longrightarrow> u \\<bowtie> v\"", "lemma comp_hd_eq: \"u \\<bowtie> v \\<Longrightarrow> u \\<noteq> \\<epsilon> \\<Longrightarrow> v \\<noteq> \\<epsilon> \\<Longrightarrow> hd u = hd v\"", "lemma pref_hd_eq': \"p \\<le>p u \\<Longrightarrow> p \\<le>p v \\<Longrightarrow> p \\<noteq> \\<epsilon> \\<Longrightarrow>  hd u = hd v\"", "lemma pref_hd_eq: \"u \\<le>p v \\<Longrightarrow> u \\<noteq> \\<epsilon> \\<Longrightarrow>  hd u = hd v\"", "lemma suf_last_eq: \"p \\<le>s u \\<Longrightarrow> p \\<le>s v \\<Longrightarrow> p \\<noteq> \\<epsilon> \\<Longrightarrow>  last u = last v\"", "lemma comp_hd_eq': assumes  \"u \\<cdot> r \\<bowtie> v \\<cdot> s\" \"u \\<noteq> \\<epsilon>\" \"v \\<noteq> \\<epsilon>\" shows \"hd u = hd v\"", "lemmas suf_emp = suffix_bot.bot.extremum_uniqueI", "lemma triv_suf: \"u \\<le>s v \\<cdot> u\"", "lemma emp_ssuf: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> \\<epsilon> <s u\"", "lemma suf_cancel: \"u\\<cdot>v \\<le>s w\\<cdot>v \\<Longrightarrow> u \\<le>s w\"", "lemma suf_cancel': \"u \\<le>s w \\<Longrightarrow> u\\<cdot>v \\<le>s w\\<cdot>v\"", "lemmas suf_cancel_eq = same_suffix_suffix \\<comment> \\<open>provided by Sublist.thy\\<close>", "lemmas suf_rev_pref_iff = suffix_to_prefix \\<comment> \\<open>provided by Sublist.thy\\<close>", "lemmas ssuf_rev_pref_iff = strict_suffix_to_prefix \\<comment> \\<open>provided by Sublist.thy\\<close>", "lemma pref_rev_suf_iff: \"u \\<le>p v \\<longleftrightarrow> rev u \\<le>s rev v\"", "lemma spref_rev_suf_iff: \"s <p w \\<longleftrightarrow> rev s <s rev w\"", "lemma nsuf_rev_pref_iff: \"s \\<le>ns w \\<longleftrightarrow> rev s \\<le>np rev w\"", "lemma npref_rev_suf_iff: \"s \\<le>np w \\<longleftrightarrow> rev s \\<le>ns rev w\"", "lemmas [reversal_rule] = \n  suf_rev_pref_iff[symmetric]\n  pref_rev_suf_iff[symmetric]\n  nsuf_rev_pref_iff[symmetric]\n  npref_rev_suf_iff[symmetric]\n  ssuf_rev_pref_iff[symmetric]\n  spref_rev_suf_iff[symmetric]", "lemmas suf_ext = suffix_appendI \\<comment> \\<open>provided by Sublist.thy\\<close>", "lemmas ssuf_ext = spref_ext[reversed] and\n  suf_ext_nem = pref_ext_nemp[reversed] and\n  suf_same_len = pref_same_len[reversed] and\n  suf_take = pref_drop[reversed] and\n  suf_share_take = pref_share_take[reversed] and\n  long_suf = long_pref[reversed]", "lemma pref_comp_rev_suf_comp[reversal_rule]: \"(rev w) \\<bowtie>\\<^sub>s (rev v) \\<longleftrightarrow> w \\<bowtie> v\"", "lemma suf_comp_rev_pref_comp[reversal_rule]: \"(rev w) \\<bowtie> (rev v) \\<longleftrightarrow> w \\<bowtie>\\<^sub>s v\"", "lemmas suf_ruler_le = suffix_length_suffix \\<comment> \\<open>provided by Sublist.thy, same as ruler\\_le[reversed]\\<close>", "lemmas suf_ruler = suffix_same_cases \\<comment> \\<open>provided by Sublist.thy, same as ruler[reversed]\\<close>", "lemmas suf_ruler_equal = ruler_equal[reversed] and\n    suf_ruler_comp = ruler_comp[reversed] and\n    ruler_suf = ruler_pref[reversed] and\n    suf_prod_short = pref_prod_short[reversed] and\n    suf_prod_short' = pref_prod_short'[reversed] and\n    suf_prod_cancel = pref_prod_cancel[reversed] and\n    suf_prod_cancel' = pref_prod_cancel'[reversed] and\n    suf_prod_suf_short = pref_prod_pref_short[reversed] and\n    suf_prod_suf = pref_prod_pref[reversed] and\n    suf_prod_suf' = pref_prod_pref'[reversed, unfolded rassoc] and\n    suf_prolong = pref_prolong[reversed] and\n    suf_prolong' = pref_prolong'[reversed, unfolded rassoc] and\n    suf_prolong_comp = pref_prolong_comp[reversed, unfolded rassoc] and\n    suf_prod_long = pref_prod_long[reversed] and\n    suf_prod_longer = pref_prod_longer[reversed] and\n    suf_keeps_root = pref_keeps_root[reversed] and\n    comm_suf_ruler = comm_ruler[reversed]", "lemmas comp_sufs_comp = comp_prefs_comp[reversed] and\n  suf_comp_not_suf = pref_comp_not_pref[reversed] and\n  suf_comp_not_ssuf = pref_comp_not_spref[reversed] and\n  (* hd_no_split = last_no_split[reversed] *) (* this is suffix_Cons *)\n  suf_comp_ext = comp_ext[reversed] and\n  suf_incomp_ext = incomp_ext[reversed] and\n  mismatch_suf_incopm = mismatch_incopm[reversed] and\n  suf_comp_sym[sym] = pref_comp_sym[reversed]", "lemma suf_comp_last_eq: assumes \"u \\<bowtie>\\<^sub>s v\" \"u \\<noteq> \\<epsilon>\" \"v \\<noteq> \\<epsilon>\"\n    shows \"last u = last v\"", "lemma suf_comp_last_eq': \"r \\<cdot> u \\<bowtie>\\<^sub>s s \\<cdot> v \\<Longrightarrow> u \\<noteq> \\<epsilon> \\<Longrightarrow> v \\<noteq> \\<epsilon> \\<Longrightarrow> last u = last v\"", "lemma \"u\\<^sup><\\<inverse>v\\<^sup><\\<inverse>w = (u\\<^sup><\\<inverse>v)\\<^sup><\\<inverse>w\"", "lemma \"u\\<inverse>\\<^sup>>v\\<inverse>\\<^sup>>w = u\\<inverse>\\<^sup>>(v\\<inverse>\\<^sup>>w)\"", "lemma \"u\\<inverse>\\<^sup>>v\\<^sup><\\<inverse>w = u\\<inverse>\\<^sup>>(v\\<^sup><\\<inverse>w)\"", "lemma \"r \\<cdot> u\\<inverse>\\<^sup>>w\\<^sup><\\<inverse>v \\<cdot> s = r \\<cdot> (u\\<inverse>\\<^sup>>w\\<^sup><\\<inverse>v) \\<cdot> s\"", "lemma rq_rev_lq[reversal_rule]: \"(rev v)\\<^sup><\\<inverse>(rev u) = rev (u\\<inverse>\\<^sup>>v)\"", "lemma lq_rev_rq[reversal_rule]: \"(rev v)\\<inverse>\\<^sup>>rev u = rev (u\\<^sup><\\<inverse>v)\"", "lemma lqI:  \"u \\<cdot> z = v \\<Longrightarrow> u\\<inverse>\\<^sup>>v = z\"", "lemma lq_triv[simp]:  \"u\\<inverse>\\<^sup>>(u \\<cdot> z) = z\"", "lemma lq_triv'[simp]:  \"u \\<cdot> u\\<inverse>\\<^sup>>(u \\<cdot> z) = u \\<cdot>z\"", "lemma lq_self[simp]: \"u\\<inverse>\\<^sup>>u = \\<epsilon>\"", "lemma lq_emp[simp]: \"\\<epsilon>\\<inverse>\\<^sup>>u = u\"", "lemma lq_pref[simp]: \"u \\<le>p v \\<Longrightarrow> u \\<cdot> (u\\<inverse>\\<^sup>>v) = v\"", "lemma lq_the[simp]: \"u \\<le>p v \\<Longrightarrow> (u\\<inverse>\\<^sup>>v) = (THE z. u \\<cdot> z = v)\"", "lemma lq_reassoc: \"u \\<le>p v \\<Longrightarrow> (u\\<inverse>\\<^sup>>v)\\<cdot>w = u\\<inverse>\\<^sup>>(v\\<cdot>w)\"", "lemma lq_trans: \"u \\<le>p v \\<Longrightarrow> v \\<le>p w \\<Longrightarrow> (u\\<inverse>\\<^sup>>v) \\<cdot> (v\\<inverse>\\<^sup>>w) = u\\<inverse>\\<^sup>>w\"", "lemma lq_rq_reassoc_suf: \"u \\<le>p z \\<Longrightarrow> u \\<le>s w \\<Longrightarrow> w\\<cdot>u\\<inverse>\\<^sup>>z = w\\<^sup><\\<inverse>u \\<cdot> z\"", "lemma lq_ne: \"p \\<le>p u\\<cdot>p \\<Longrightarrow> u \\<noteq> \\<epsilon> \\<Longrightarrow> p\\<inverse>\\<^sup>>(u\\<cdot>p) \\<noteq> \\<epsilon>\"", "lemma lq_spref: \"u <p v \\<Longrightarrow> u\\<inverse>\\<^sup>>v \\<noteq> \\<epsilon>\"", "lemma lq_suf_suf: \"r \\<le>p s \\<Longrightarrow> (r\\<inverse>\\<^sup>>s) \\<le>s s\"", "lemma lq_len: \"r \\<le>p s \\<Longrightarrow> \\<^bold>|r\\<^bold>| +  \\<^bold>|r\\<inverse>\\<^sup>>s\\<^bold>| = \\<^bold>|s\\<^bold>|\"", "lemma pref_lq: \"u \\<le>p v \\<Longrightarrow> v \\<le>p w \\<Longrightarrow> u\\<inverse>\\<^sup>>v \\<le>p u\\<inverse>\\<^sup>>w\"", "lemma spref_lq: \"u \\<le>p v \\<Longrightarrow> v <p w \\<Longrightarrow> u\\<inverse>\\<^sup>>v <p u\\<inverse>\\<^sup>>w\"", "lemma conjug_lq: \"x \\<cdot> z = z \\<cdot> y \\<Longrightarrow> y = z\\<inverse>\\<^sup>>(x \\<cdot> z)\"", "lemma conjug_emp_emp: \"p \\<le>p u \\<cdot> p \\<Longrightarrow> p\\<inverse>\\<^sup>>(u \\<cdot> p) = \\<epsilon> \\<Longrightarrow> u = \\<epsilon>\"", "lemma lq_drop:  \"u \\<le>p v \\<Longrightarrow> u\\<inverse>\\<^sup>>v = drop \\<^bold>|u\\<^bold>| v\"", "lemma lq_code [code]:\n  \"left_quotient \\<epsilon> v = v\" \n  \"left_quotient (a#u) \\<epsilon> = undefined\"\n  \"left_quotient (a#u) (b#v) = (if a=b then left_quotient u v else undefined)\"", "lemmas rqI = lqI[reversed] and\n  rq_triv = lq_triv[reversed] and\n  rq_triv' = lq_triv'[reversed] and\n  rq_sefl = lq_self[reversed] and\n  rq_emp = lq_emp[reversed] and\n  rq_suf = lq_pref[reversed] and\n  rq_ssuf = lq_spref[reversed] and\n  rq_reassoc = lq_reassoc[reversed] and\n  rq_len = lq_len[reversed] and\n  rq_trans = lq_trans[reversed] and\n  rq_lq_reassoc_suf = lq_rq_reassoc_suf[reversed] and\n  rq_ne = lq_ne[reversed] and\n  rq_suf_suf = lq_suf_suf[reversed] and\n  suf_rq = pref_lq[reversed] and\n  ssuf_rq = spref_lq[reversed] and\n  conjug_rq = conjug_lq[reversed] and\n  conjug_emp_emp' = conjug_emp_emp[reversed] and\n  rq_take = lq_drop[reversed]", "lemma rev_lq': \"r \\<le>p s \\<Longrightarrow> rev (r\\<inverse>\\<^sup>>s) = (rev s)\\<^sup><\\<inverse>(rev r)\"", "lemma pref_rq_suf_lq: \"s \\<le>s u \\<Longrightarrow> r \\<le>p (u\\<^sup><\\<inverse>s) \\<Longrightarrow> s \\<le>s (r\\<inverse>\\<^sup>>u)\"", "lemmas suf_lq_pref_rq = pref_rq_suf_lq[reversed]", "lemma \"w\\<cdot>s = v \\<Longrightarrow> v\\<^sup><\\<inverse>s = w\"", "lemma lq_rq_assoc: \"s \\<le>s u \\<Longrightarrow> r \\<le>p (u\\<^sup><\\<inverse>s) \\<Longrightarrow> (r\\<inverse>\\<^sup>>u)\\<^sup><\\<inverse>s = r\\<inverse>\\<^sup>>(u\\<^sup><\\<inverse>s)\"", "lemmas rq_lq_assoc = lq_rq_assoc[reversed]", "lemma lq_prod: \"u \\<le>p v\\<cdot>u \\<Longrightarrow> u \\<le>p w \\<Longrightarrow>  u\\<inverse>\\<^sup>>(v\\<cdot>u)\\<cdot>u\\<inverse>\\<^sup>>w = u\\<inverse>\\<^sup>>(v\\<cdot>w)\"", "lemmas rq_prod = lq_prod[reversed]", "lemma eqd: \"x \\<cdot> y = u \\<cdot> v \\<Longrightarrow> \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> \\<exists> t. x \\<cdot> t = u \\<and> t \\<cdot> v = y\"", "lemma eqdE: assumes \"x \\<cdot> y = u \\<cdot> v\" and \"\\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\" \n  obtains t where \"x \\<cdot> t = u\" and \"t \\<cdot> v = y\"", "lemma eqdE': assumes \"x \\<cdot> y = u \\<cdot> v\" and \"\\<^bold>|v\\<^bold>| \\<le> \\<^bold>|y\\<^bold>|\" \n  obtains t where \"x \\<cdot> t = u\" and \"t \\<cdot> v = y\"", "lemma eqd_pref: \"x \\<cdot> y = u \\<cdot> v \\<Longrightarrow> \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> x \\<cdot> (x\\<inverse>\\<^sup>>u) = u \\<and> (x\\<inverse>\\<^sup>>u) \\<cdot> v = y\"", "lemma eqd_prefE: assumes \"x \\<cdot> y = u \\<cdot> v\" and  \"\\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\" \n  obtains t where \"x \\<cdot> t = u\" and  \"t \\<cdot> v = y\"", "lemma eqd_pref1: \"x \\<cdot> y = u \\<cdot> v \\<Longrightarrow> \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> x \\<cdot> (x\\<inverse>\\<^sup>>u) = u\"", "lemma eqd_pref2: \"x \\<cdot> y = u \\<cdot> v \\<Longrightarrow> \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> (x\\<inverse>\\<^sup>>u) \\<cdot> v = y\"", "lemma eqd_equal: \"x \\<cdot> y = u \\<cdot> v \\<Longrightarrow> \\<^bold>|x\\<^bold>| = \\<^bold>|u\\<^bold>| \\<Longrightarrow> x = u \\<and> y = v\"", "lemma pref_equal: \"u \\<le>p v \\<cdot> w \\<Longrightarrow> \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>| \\<Longrightarrow> u = v\"", "lemma eqd_equal_suf: \"x \\<cdot> y = u \\<cdot> v \\<Longrightarrow> \\<^bold>|y\\<^bold>| = \\<^bold>|v\\<^bold>| \\<Longrightarrow> x = u \\<and> y = v\"", "lemma eqd_comp: assumes \"x \\<cdot> y = u \\<cdot> v\" shows \"x \\<bowtie> u\"", "lemma eqd_suf1: \"x \\<cdot> y = u \\<cdot> v \\<Longrightarrow> \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> (y\\<^sup><\\<inverse>v)\\<cdot>v = y\"", "lemma eqd_suf2: assumes \"x \\<cdot> y = u \\<cdot> v\" \"\\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\" shows \"x \\<cdot> (y\\<^sup><\\<inverse>v) = u\"", "lemma eqd_suf: assumes \"x \\<cdot> y = u \\<cdot> v\" and \"\\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\" \n  shows \"(y\\<^sup><\\<inverse>v)\\<cdot>v = y \\<and> x \\<cdot> (y\\<^sup><\\<inverse>v) = u\"", "lemmas lcp_simps = longest_common_prefix.simps \\<comment> \\<open>provided by Sublist.thy\\<close>", "lemma lcp_sym: \"u \\<and>\\<^sub>p v = v \\<and>\\<^sub>p u\"", "lemmas lcp_pref = longest_common_prefix_prefix1", "lemmas lcp_pref' = longest_common_prefix_prefix2", "lemmas pref_pref_lcp = longest_common_prefix_max_prefix", "lemma lcp_take_eq: \"take (\\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|) u = take (\\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|) v\"", "lemma lcp_pref_conv: \"u \\<and>\\<^sub>p v = u \\<longleftrightarrow> u \\<le>p v\"", "lemma pref_lcp_pref: \"w \\<le>p u \\<and>\\<^sub>p v \\<Longrightarrow> w \\<le>p u\"", "lemma pref_lcp_pref': \"w \\<le>p u \\<and>\\<^sub>p v \\<Longrightarrow> w \\<le>p v\"", "lemma lcp_self[simp]: \"w \\<and>\\<^sub>p w = w\"", "lemma lcp_eq: \"\\<^bold>|u\\<^bold>| = \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| \\<Longrightarrow> u = u \\<and>\\<^sub>p v\"", "lemma lcp_len: \"\\<^bold>|u\\<^bold>| \\<le> \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| \\<Longrightarrow> u \\<le>p v\"", "lemma lcp_len': \"\\<not> u \\<le>p v \\<Longrightarrow> \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|u\\<^bold>|\"", "lemma incomp_lcp_len: assumes \"\\<not> u \\<bowtie> v\" shows \"\\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|\"", "lemma lcp_ext_right [case_names comp non_comp]: obtains  \"r \\<bowtie> r'\" | \"(r \\<cdot> u) \\<and>\\<^sub>p (r' \\<cdot> v) = r \\<and>\\<^sub>p r'\"", "lemma lcp_same_len: \"\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>| \\<Longrightarrow> u \\<noteq> v \\<Longrightarrow> u \\<and>\\<^sub>p v = u \\<cdot> w \\<and>\\<^sub>p v \\<cdot> w'\"", "lemma lcp_mismatch: \"\\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|u\\<^bold>| \\<Longrightarrow> \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|v\\<^bold>| \\<Longrightarrow> u! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| \\<noteq> v! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|\"", "lemma lcp_mismatch': assumes \"\\<not> u \\<bowtie> v\" shows \"u! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| \\<noteq> v! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|\"", "lemma lcp_ext_left: \"(z \\<cdot> u) \\<and>\\<^sub>p (z \\<cdot> v) = z \\<cdot> (u \\<and>\\<^sub>p v)\"", "lemma lcp_first_letters: \"u!0 \\<noteq> v!0 \\<Longrightarrow> u \\<and>\\<^sub>p v = \\<epsilon>\"", "lemma lcp_first_mismatch: \"a \\<noteq> b \\<Longrightarrow> w \\<cdot> [a] \\<cdot> u \\<and>\\<^sub>p w \\<cdot> [b] \\<cdot> v  = w\"", "lemma lcp_first_mismatch': \"a \\<noteq> b \\<Longrightarrow> u \\<cdot> [a] \\<and>\\<^sub>p u \\<cdot> [b] = u\"", "lemma lcp_mismatch_shorter: assumes \"\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\" \"x \\<noteq> y\" shows \"u \\<cdot> [x] \\<and>\\<^sub>p v \\<cdot> [y] = u \\<and>\\<^sub>p v\"", "lemma lcp_rulers: \"r \\<le>p s \\<Longrightarrow> r' \\<le>p s' \\<Longrightarrow> (r \\<bowtie> r' \\<or> r \\<and>\\<^sub>p r' = s \\<and>\\<^sub>p s')\"", "lemma pref_pref_lcp': \"w \\<le>p r \\<Longrightarrow> w' \\<le>p s \\<Longrightarrow> w \\<and>\\<^sub>p w' \\<le>p (r \\<and>\\<^sub>p s)\"", "lemma lcp_distinct_hd: \"hd u \\<noteq> hd v \\<Longrightarrow> u \\<and>\\<^sub>p v = \\<epsilon>\"", "lemma lcp_lenI: assumes \"i < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|\" and \"take i u = take i v\" and \"u!i \\<noteq> v!i\" \n  shows \"i = \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|\"", "lemma lcp_prefs: \"\\<^bold>|u \\<cdot> w \\<and>\\<^sub>p v \\<cdot> w'\\<^bold>| < \\<^bold>|u\\<^bold>| \\<Longrightarrow> \\<^bold>|u \\<cdot> w \\<and>\\<^sub>p v \\<cdot> w'\\<^bold>| < \\<^bold>|v\\<^bold>| \\<Longrightarrow> u \\<and>\\<^sub>p v = u \\<cdot> w \\<and>\\<^sub>p v \\<cdot> w'\"", "lemma lexord_cancel_right: \"(u \\<cdot> z, v \\<cdot> w) \\<in> lexord r \\<Longrightarrow> \\<not> u \\<bowtie> v \\<Longrightarrow> (u,v) \\<in> lexord r\"", "lemma lcp_ruler: \"r \\<bowtie> w1 \\<Longrightarrow> r \\<bowtie> w2 \\<Longrightarrow> \\<not> w1 \\<bowtie> w2 \\<Longrightarrow> r \\<le>p w1 \\<and>\\<^sub>p w2\"", "lemma comp_monotone: \"w \\<bowtie> r  \\<Longrightarrow> u \\<le>p w \\<Longrightarrow> u \\<bowtie> r\"", "lemma comp_monotone': \"w \\<bowtie> r  \\<Longrightarrow> w \\<and>\\<^sub>p w' \\<bowtie> r\"", "lemma double_ruler: assumes \"w \\<bowtie> r\" and \"w' \\<bowtie> r'\" and \"\\<not> r \\<bowtie> r'\" \n  shows \"w \\<and>\\<^sub>p w' \\<le>p r \\<and>\\<^sub>p r'\"", "lemma pref_comp_ruler: assumes \"w \\<bowtie> u \\<cdot> [x]\" and \"w \\<bowtie> v \\<cdot> [y]\" and \"x \\<noteq> y\" and \"\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\" \n  shows \"w \\<le>p u \\<and> w \\<le>p v\"", "lemmas suf_comp_ruler = pref_comp_ruler[reversed]", "lemma mismatch_pair_lcp: \"mismatch_pair u v = (u!\\<^bold>|u\\<and>\\<^sub>pv\\<^bold>|,v!\\<^bold>|u\\<and>\\<^sub>pv\\<^bold>|)\"", "lemma incomp_neq: \"\\<not> u \\<bowtie> v \\<Longrightarrow> (mismatch_pair u v) \\<notin> Id\"", "lemma mismatch_ext_left: \"\\<not> u \\<bowtie> v \\<Longrightarrow> mismatch_pair u v = mismatch_pair (p\\<cdot>u) (p\\<cdot>v)\"", "lemma mismatch_ext_right: assumes  \"\\<not> u \\<bowtie> v\" \n  shows \"mismatch_pair u v = mismatch_pair (u\\<cdot>z) (v\\<cdot>w)\"", "lemma mismatchI: \"\\<not> u \\<bowtie> v \\<Longrightarrow> i < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>| \\<Longrightarrow> take i u = take i v \\<Longrightarrow> u!i \\<noteq> v!i\n   \\<Longrightarrow> mismatch_pair u v = (u!i,v!i)\"", "lemma mismatch_lexord: assumes \"\\<not> u \\<bowtie> v\" and \"mismatch_pair u v \\<in> r\"    \n  shows \"(u,v) \\<in> lexord r\"", "lemma lexord_mismatch: assumes \"\\<not> u \\<bowtie> v\" and \"irrefl r\" \n  shows \"mismatch_pair u v \\<in> r \\<longleftrightarrow> (u,v) \\<in> lexord r\"", "lemma rev_fac[reversal_rule]: \"rev u \\<le>f rev v \\<longleftrightarrow> u \\<le>f v\"", "lemma fac_pref: \"u \\<le>f v \\<equiv> \\<exists> p. p \\<cdot> u \\<le>p v\"", "lemma fac_pref_suf: \"u \\<le>f v \\<Longrightarrow> \\<exists> p. p \\<le>p v \\<and> u \\<le>s p\"", "lemma pref_suf_fac: \"r \\<le>p v \\<Longrightarrow> u \\<le>s r \\<Longrightarrow> u \\<le>f v\"", "lemmas \n  fac_suf = fac_pref[reversed] and\n  fac_suf_pref = fac_pref_suf[reversed] and\n  suf_pref_fac = pref_suf_fac[reversed]", "lemma suf_pref_eq: \"s \\<le>s p \\<Longrightarrow> p \\<le>p s \\<Longrightarrow> p = s\"", "lemma fac_triv': assumes  \"p\\<cdot>x\\<cdot>q = x\" shows \"q = \\<epsilon>\"", "lemma fac_triv: \"p\\<cdot>x\\<cdot>q = x \\<Longrightarrow> p = \\<epsilon>\"", "lemmas \n  suf_fac = suffix_imp_sublist and\n  pref_fac = prefix_imp_sublist", "lemma fac_Cons_E: assumes \"u \\<le>f (a#v)\"\n  obtains \"u \\<le>p (a#v)\" | \"u \\<le>f v\"", "lemmas\n  fac_snoc_E = fac_Cons_E[reversed]", "lemma pow_zero [simp]:  \"u\\<^sup>@0 = \\<epsilon>\"", "lemma emp_pow: \"\\<epsilon>\\<^sup>@n = \\<epsilon>\"", "lemma pow_Suc_list: \"u\\<^sup>@(Suc n) = u \\<cdot> u\\<^sup>@n\"", "lemma pow_commutes_list: \"u\\<^sup>@n \\<cdot> u = u \\<cdot> u\\<^sup>@n\"", "lemma pow_add_list: \"x\\<^sup>@(a+b) = x\\<^sup>@a\\<cdot>x\\<^sup>@b\"", "lemma pow_Suc2_list: \"u\\<^sup>@Suc n = u\\<^sup>@n \\<cdot> u\"", "lemma pow_eq_if_list: \"p\\<^sup>@m = (if m = 0 then \\<epsilon> else p \\<cdot> p\\<^sup>@(m-1))\"", "lemma pow_one_id: \"u\\<^sup>@1 = u\"", "lemma pow2_list: \"u\\<^sup>@2 = u \\<cdot> u\"", "lemma comm_add_exp: \"u \\<cdot> v = v \\<cdot> u \\<Longrightarrow> u \\<^sup>@ n \\<cdot> v = v \\<cdot> u \\<^sup>@ n\"", "lemma pow_mult_list: \"u\\<^sup>@(m*n) = (u\\<^sup>@m)\\<^sup>@n\"", "lemma pow_rev_emp_conv[reversal_rule]: \"power.power (rev \\<epsilon>) (\\<cdot>) = (\\<^sup>@)\"", "lemma zero_exp: \"n = 0 \\<Longrightarrow> r\\<^sup>@n = \\<epsilon>\"", "lemma nemp_pow[elim]: \"t\\<^sup>@m \\<noteq> \\<epsilon> \\<Longrightarrow> m \\<noteq> 0\"", "lemma nemp_pow'[elim]: \"t\\<^sup>@m \\<noteq> \\<epsilon> \\<Longrightarrow> t \\<noteq> \\<epsilon>\"", "lemma sing_pow:\"i < m \\<Longrightarrow> ([a]\\<^sup>@m) ! i = a\"", "lemma pow_is_concat_replicate: \"u\\<^sup>@n = concat (replicate n u)\"", "lemma pow_slide: \"u \\<cdot> (v \\<cdot> u)\\<^sup>@n  \\<cdot> v = (u \\<cdot> v)\\<^sup>@(Suc n)\"", "lemma pop_pow_one:  \"m \\<noteq> 0 \\<Longrightarrow> r\\<^sup>@m = r \\<cdot> r\\<^sup>@(m-1)\"", "lemma hd_pow: assumes \"n \\<noteq> 0\" shows \"hd(u\\<^sup>@n) = hd u\"", "lemma pop_pow: \"m \\<le> k \\<Longrightarrow>u\\<^sup>@m \\<cdot> u\\<^sup>@(k-m) =  u\\<^sup>@k\"", "lemma pop_pow_cancel: \"u\\<^sup>@k \\<cdot> v = u\\<^sup>@m \\<cdot> w \\<Longrightarrow> m \\<le> k \\<Longrightarrow> u\\<^sup>@(k-m) \\<cdot> v = w\"", "lemma pow_comm: \"t\\<^sup>@k \\<cdot> t\\<^sup>@m = t\\<^sup>@m \\<cdot> t\\<^sup>@k\"", "lemma comm_add_exps: assumes \"r \\<cdot> u = u \\<cdot> r\" shows \"r\\<^sup>@m \\<cdot> u\\<^sup>@k = u\\<^sup>@k \\<cdot> r\\<^sup>@m\"", "lemma rev_pow: \"rev (x\\<^sup>@m) = (rev x)\\<^sup>@m\"", "lemmas [reversal_rule] = rev_pow[symmetric]", "lemmas pow_eq_if_list' = pow_eq_if_list[reversed] and\n  pop_pow_one' = pop_pow_one[reversed] and\n  pop_pow' = pop_pow[reversed] and\n  pop_pow_cancel' = pop_pow_cancel[reversed]", "lemma pow_len:  \"\\<^bold>|u\\<^sup>@k\\<^bold>| = k * \\<^bold>|u\\<^bold>|\"", "lemma eq_pow_exp: assumes \"u \\<noteq> \\<epsilon>\" shows \"u\\<^sup>@k = u\\<^sup>@m \\<longleftrightarrow> k = m\"", "lemma nemp_emp_power: assumes \"u \\<noteq> \\<epsilon>\" shows \"u\\<^sup>@m = \\<epsilon> \\<longleftrightarrow> m = 0\"", "lemma nonzero_pow_emp: assumes \"m \\<noteq> 0\" shows \"u\\<^sup>@m = \\<epsilon> \\<longleftrightarrow>  u = \\<epsilon>\"", "lemma pow_eq_eq:\n  assumes \"u\\<^sup>@k = v\\<^sup>@k\" and \"k \\<noteq> 0\"\n  shows \"u = v\"", "lemma sing_pow_empty: \"[a]\\<^sup>@n = \\<epsilon> \\<longleftrightarrow> n = 0\"", "lemma sing_pow_lists: \"a \\<in> A \\<Longrightarrow> [a]\\<^sup>@n \\<in> lists A\"", "lemma long_power: \"r \\<noteq> \\<epsilon> \\<Longrightarrow> \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|r\\<^sup>@\\<^bold>|x\\<^bold>|\\<^bold>|\"", "lemma long_power': \"r \\<noteq> \\<epsilon> \\<Longrightarrow> \\<^bold>|x\\<^bold>| < \\<^bold>|r\\<^sup>@(Suc \\<^bold>|x\\<^bold>|)\\<^bold>|\"", "lemma long_pow_exp: \"r \\<noteq> \\<epsilon> \\<Longrightarrow> m \\<le> \\<^bold>|r\\<^sup>@m\\<^bold>|\"", "lemma long_pow_ex: assumes \"r \\<noteq> \\<epsilon>\" obtains n where  \"m \\<le> \\<^bold>|r\\<^sup>@n\\<^bold>|\" and \"n \\<noteq> 0\"", "lemma pref_pow_ext: \"x \\<le>p r\\<^sup>@k \\<Longrightarrow> x \\<le>p r\\<^sup>@Suc k\"", "lemma pref_pow_ext': \"u \\<le>p r\\<^sup>@k \\<Longrightarrow> u \\<le>p r \\<cdot> r\\<^sup>@k\"", "lemma pref_pow_root_ext: \"x \\<le>p r\\<^sup>@k \\<Longrightarrow> r \\<cdot> x \\<le>p r\\<^sup>@Suc k\"", "lemma pref_prod_root: \"u \\<le>p r\\<^sup>@k \\<Longrightarrow> u \\<le>p r \\<cdot> u\"", "lemma pref_exps_pow:  \"k \\<le> l \\<Longrightarrow> r\\<^sup>@k \\<le>p r\\<^sup>@l\"", "lemma pref_exp_le: assumes \"u \\<noteq> \\<epsilon>\" \"u\\<^sup>@m \\<le>p u\\<^sup>@n\" shows \"m \\<le> n\"", "lemmas\n    suf_pow_ext = pref_pow_ext[reversed] and\n    suf_pow_ext'= pref_pow_ext'[reversed] and\n    suf_pow_root_ext = pref_pow_root_ext[reversed] and\n    suf_prod_root = pref_prod_root[reversed] and\n    suf_exps_pow = pref_exps_pow[reversed] and\n    suf_exp_le = pref_exp_le[reversed]", "lemma comm_common_power: assumes \"r \\<cdot> u = u \\<cdot> r\" shows \"r\\<^sup>@\\<^bold>|u\\<^bold>| = u\\<^sup>@\\<^bold>|r\\<^bold>|\"", "lemma one_generated_list_power: \"u \\<in> lists {x} \\<Longrightarrow> \\<exists>k. concat u = x\\<^sup>@k\"", "lemma pow_lists: \"0 < k \\<Longrightarrow> u\\<^sup>@k \\<in> lists B \\<Longrightarrow> u \\<in> lists B\"", "lemma concat_morph_power: \"xs \\<in> lists B \\<Longrightarrow> xs = ts\\<^sup>@k \\<Longrightarrow> concat ts\\<^sup>@k = concat xs\"", "lemma pref_not_idem:  \"z \\<noteq> \\<epsilon> \\<Longrightarrow> z \\<noteq> x \\<Longrightarrow> z \\<cdot> x\\<^sup>@k \\<noteq> x\"", "lemma per_exp_pref: \"u \\<le>p r \\<cdot> u \\<Longrightarrow> u \\<le>p r\\<^sup>@k \\<cdot> u\"", "lemmas\n  suf_not_idem =  pref_not_idem[reversed] and\n  per_exp_suf = per_exp_pref[reversed]", "lemma hd_sing_power: \"k \\<noteq> 0 \\<Longrightarrow> hd ([a]\\<^sup>@k) = a\"", "lemma root_pref_cancel: assumes \"t\\<^sup>@m \\<cdot> y = t\\<^sup>@k\" shows \"y = t\\<^sup>@(k - m)\"", "lemmas root_suf_cancel = root_pref_cancel[reversed]", "lemma index_pow_mod: \"i < \\<^bold>|r\\<^sup>@k\\<^bold>| \\<Longrightarrow> (r\\<^sup>@k)!i = r!(i mod \\<^bold>|r\\<^bold>|)\"", "lemma sing_pow_len: \"\\<^bold>|[r]\\<^sup>@l\\<^bold>| = l\"", "lemma concat_take_sing: \"k \\<le> l \\<Longrightarrow> concat (take k ([r]\\<^sup>@l)) = r\\<^sup>@k\"", "lemma concat_sing_pow: \"concat ([a]\\<^sup>@k) = a\\<^sup>@k\"", "lemma unique_letter_word: \"(\\<forall> c. c \\<in> set w \\<longrightarrow> c = a) \\<Longrightarrow> \\<exists> k. w = [a]\\<^sup>@k\"", "lemma unique_letter_wordE[elim]: assumes \"(\\<forall> c. c \\<in> set w \\<longrightarrow> c = a)\" obtains k where \"w = [a]\\<^sup>@k\"", "lemma unique_letter_wordE'[elim]: assumes \"set w \\<subseteq> {a}\" obtains k where \"w = [a] \\<^sup>@ k\"", "lemma conjug_pow: \"x \\<cdot> z = z \\<cdot> y \\<Longrightarrow> x\\<^sup>@k \\<cdot> z = z \\<cdot> y\\<^sup>@k\"", "lemma shift_pow: \"(u\\<cdot>v)\\<^sup>@k\\<cdot>u = u\\<cdot>(v\\<cdot>u)\\<^sup>@k\"", "lemma lq_conjug_pow: assumes \"p \\<le>p x \\<cdot> p\" shows \"p\\<inverse>\\<^sup>>(x\\<^sup>@k \\<cdot> p) = (p\\<inverse>\\<^sup>>(x \\<cdot> p))\\<^sup>@k\"", "lemmas rq_conjug_pow = lq_conjug_pow[reversed]", "lemma emp_to_emp[simp]: \"f \\<epsilon> = \\<epsilon>\"", "lemma pow_morph: \"f (x\\<^sup>@k) = (f x)\\<^sup>@k\"", "lemma pop_hd: \"f (a#u) = f [a] \\<cdot> f u\"", "lemma pop_hd_nemp: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> f (u) = f [hd u] \\<cdot> f (tl u)\"", "lemma pop_last_nemp: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> f (u) = f (butlast u) \\<cdot> f [last u]\"", "lemma pref_mono: \"u \\<le>p v \\<Longrightarrow> f u \\<le>p f v\"", "lemma morph_concat_map: \"f x = concat (map (\\<lambda> x. f [x]) x)\"", "lemma def_on_sings:\n  assumes \"\\<And>a. g [a] = h [a]\"\n  shows \"g u = h u\"", "lemma rev_morph_idemp[simp]: \"rev_morph (rev_morph f) = f\"", "lemma morph_compose: \"morphism f \\<Longrightarrow> morphism g \\<Longrightarrow> morphism (f \\<circ> g)\"", "lemma rev_morph_arg: \"rev_morph f u = rev (f (rev u))\"", "lemmas rev_morph_arg_rev[reversal_rule] = rev_morph_arg[reversed add: rev_rev_ident]", "lemma rev_morph_sing: \"rev_morph f [a] =  rev (f [a])\"", "lemma  rev_morph_morph: \"morphism (rev_morph f)\"", "lemma morph_rev_len:  \"\\<^bold>|f (rev u)\\<^bold>| = \\<^bold>|f u\\<^bold>|\"", "lemma  rev_morph_len: \"\\<^bold>|rev_morph f u\\<^bold>| = \\<^bold>|f u\\<^bold>|\"", "lemma rotate_comp_eq:\"w \\<bowtie> rotate n w \\<Longrightarrow> rotate n w = w\"", "lemma rotate_back: obtains m where \"rotate m (rotate n u) = u\"", "lemma rotate_class_rotate': \"(\\<exists>n. rotate n w = u) \\<longleftrightarrow> (\\<exists>n. rotate n (rotate l w) = u)\"", "lemma rotate_class_rotate: \"{u . \\<exists>n. rotate n w = u} = {u . \\<exists>n. rotate n (rotate l w) = u}\"", "lemma rotate_pow_self: \"rotate (l*\\<^bold>|u\\<^bold>|) (u\\<^sup>@k) = u\\<^sup>@k\"", "lemma rotate_root_self: \"rotate \\<^bold>|r\\<^bold>| (r\\<^sup>@k) = r\\<^sup>@k\"", "lemma rotate_pow_mod:  \"rotate n (u\\<^sup>@k) = rotate (n mod \\<^bold>|u\\<^bold>|) (u\\<^sup>@k)\"", "lemma rotate_conj_pow: \"rotate \\<^bold>|u\\<^bold>| ((u\\<cdot>v)\\<^sup>@k) = (v\\<cdot>u)\\<^sup>@k\"", "lemma rotate_pow_comm: \"rotate n (u\\<^sup>@k) = (rotate n u)\\<^sup>@k\"", "lemma append_in_lists: \"u \\<in> lists A \\<Longrightarrow> v \\<in> lists A \\<Longrightarrow> u \\<cdot> v \\<in> lists A\"", "lemma concat_take_is_prefix: \"concat(take n ws) \\<le>p concat ws\"", "lemma concat_take_suc: assumes \"j < \\<^bold>|ws\\<^bold>|\" shows \"concat(take j ws) \\<cdot> ws!j = concat(take (Suc j) ws)\"", "lemma pref_mod_list': assumes \"u \\<le>np concat ws\" \n  obtains j r where \"j < \\<^bold>|ws\\<^bold>|\" and \"r \\<le>np ws!j\" and \"concat (take j ws) \\<cdot> r = u\"", "lemma pref_mod_list_suf: assumes \"u \\<le>np concat ws\" \n  obtains j s where \"j < \\<^bold>|ws\\<^bold>|\" and \"s <s ws!j\" and \"concat (take (Suc j) ws) = u \\<cdot> s\"", "lemma suf_mod_list': \"s \\<le>ns concat ws \\<Longrightarrow> ws \\<noteq> \\<epsilon> \\<Longrightarrow> \\<exists>j r. j < \\<^bold>|ws\\<^bold>| \\<and> r \\<cdot> (concat (drop (Suc j) ws)) = s \\<and> r \\<le>ns ws!j\"", "lemma pref_mod_list: assumes \"u <p concat ws\" \n  obtains j r where \"j < \\<^bold>|ws\\<^bold>|\" and \"r <p ws!j\" and \"concat (take j ws) \\<cdot> r = u\"", "lemma pref_mod_power: assumes \"u <p w\\<^sup>@l\"\n  obtains k z where \"k < l\" and \"z <p w\" and \"w\\<^sup>@k\\<cdot>z = u\"", "lemma get_pow_exp: assumes \"z <p t\" shows \"m = \\<^bold>|t\\<^sup>@m\\<cdot>z\\<^bold>| div \\<^bold>|t\\<^bold>|\"", "lemma get_pow_remainder: assumes \"z <p t\" shows \"z = drop ((\\<^bold>|t\\<^sup>@m\\<cdot>z\\<^bold>| div \\<^bold>|t\\<^bold>|)*\\<^bold>|t\\<^bold>|) (t\\<^sup>@m\\<cdot>z)\"", "lemma pref_mod_power': assumes \"u \\<le>np w\\<^sup>@l\"\n  obtains k z where \"k < l\" and \"z \\<le>np w\" and \"w\\<^sup>@k\\<cdot>z = u\"", "lemma pref_power: assumes \"t \\<noteq> \\<epsilon>\" and  \"u \\<le>p t\\<^sup>@k\" \n  shows \"\\<exists> m. t\\<^sup>@m \\<le>p u \\<and> u <p t\\<^sup>@m \\<cdot> t\"", "lemma pref_powerE: assumes \"t \\<noteq> \\<epsilon>\" and  \"u \\<le>p t\\<^sup>@k\" \n  obtains m where \"t\\<^sup>@m \\<le>p u\" \"u <p t\\<^sup>@m \\<cdot> t\"", "lemma pref_power': assumes \"u \\<noteq> \\<epsilon>\" and  \"u \\<le>p t\\<^sup>@k\" \n  shows \"\\<exists> m. t\\<^sup>@m <p u \\<and> u \\<le>p t\\<^sup>@m \\<cdot> t\"", "lemma suf_power: assumes \"t \\<noteq> \\<epsilon>\" and \"u \\<le>s t\\<^sup>@k\" shows \"\\<exists>m. t\\<^sup>@m \\<le>s u \\<and> u <s t \\<cdot> t\\<^sup>@m\"", "lemma suf_powerE: assumes \"t \\<noteq> \\<epsilon>\" and  \"u \\<le>s t\\<^sup>@k\" \n  obtains m where \"t\\<^sup>@m \\<le>s u\" \"u <s t \\<cdot> t\\<^sup>@m\"", "lemma del_emp_concat: \"concat us = concat (filter (\\<lambda>x. x \\<noteq> \\<epsilon>) us)\"", "lemma lists_drop_emp: \"us \\<in> lists C\\<^sub>+ \\<Longrightarrow> us \\<in> lists C\"", "lemma lists_drop_emp': \"us \\<in> lists C \\<Longrightarrow> (filter (\\<lambda>x. x \\<noteq> \\<epsilon>) us) \\<in> lists C\\<^sub>+\"", "lemma pref_concat_pref: \"us \\<le>p ws \\<Longrightarrow> concat us \\<le>p concat ws\"", "lemma le_take_is_prefix: assumes \"k \\<le> n\" shows \"take k ws \\<le>p take n ws\"", "lemma take_pp_less: assumes \"take k ws <p take n ws\" shows \"k < n\"", "lemma concat_pp_less: assumes \"concat (take k ws) <p concat (take n ws)\" shows \"k < n\"", "lemma \"\\<epsilon> \\<in> r*\"", "lemma rootI: \"r\\<^sup>@k \\<in> r*\"", "lemma self_root: \"u \\<in> u*\"", "lemma rootE: assumes \"u \\<in> r*\" obtains k where \"r\\<^sup>@k = u\"", "lemma empty_all_roots[simp]: \"\\<epsilon> \\<in> r*\"", "lemma take_root: \"k \\<noteq> 0 \\<Longrightarrow> r = take (length r) (r\\<^sup>@k)\"", "lemma root_nemp: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<in> r* \\<Longrightarrow> r \\<noteq> \\<epsilon>\"", "lemma root_shorter: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<in> r* \\<Longrightarrow> u \\<noteq> r \\<Longrightarrow> \\<^bold>|r\\<^bold>| < \\<^bold>|u\\<^bold>|\"", "lemma root_shorter_eq: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<in> r* \\<Longrightarrow> \\<^bold>|r\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\"", "lemma root_trans[trans]: \"\\<lbrakk>v \\<in> u*; u \\<in> t*\\<rbrakk> \\<Longrightarrow> v \\<in> t*\"", "lemma root_pow_root[trans]: \"v \\<in> u* \\<Longrightarrow> v\\<^sup>@n \\<in> u*\"", "lemma root_len: \"u \\<in> q* \\<Longrightarrow> \\<exists>k. \\<^bold>|u\\<^bold>| = k*\\<^bold>|q\\<^bold>|\"", "lemma root_len_dvd: \"u \\<in> t* \\<Longrightarrow> \\<^bold>|t\\<^bold>| dvd \\<^bold>|u\\<^bold>|\"", "lemma common_root_len_gcd: \"u \\<in> t* \\<Longrightarrow> v \\<in> t* \\<Longrightarrow> \\<^bold>|t\\<^bold>| dvd ( gcd \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>| )\"", "lemma add_root[simp]: \"z \\<cdot> w \\<in> z* \\<longleftrightarrow> w \\<in> z*\"", "lemma add_roots: \"w \\<in> z* \\<Longrightarrow> w' \\<in> z* \\<Longrightarrow> w \\<cdot> w' \\<in> z*\"", "lemma concat_sing_list_pow: \"ws \\<in> lists {u} \\<Longrightarrow> \\<^bold>|ws\\<^bold>| = k \\<Longrightarrow> concat ws = u\\<^sup>@k\"", "lemma concat_sing_list_pow': \"ws \\<in> lists{u} \\<Longrightarrow> concat ws = u\\<^sup>@\\<^bold>|ws\\<^bold>|\"", "lemma root_pref_cancel': assumes \"x\\<cdot>y \\<in> t*\" and  \"x \\<in> t*\" shows \"y \\<in> t*\"", "lemma root_rev_iff[reversal_rule]: \"rev u \\<in> rev t* \\<longleftrightarrow> u \\<in> t*\"", "theorem comm:  \"x \\<cdot> y = y \\<cdot> x  \\<longleftrightarrow>  (\\<exists> t m k. x = t\\<^sup>@k \\<and> y = t\\<^sup>@m)\"", "lemma commD[elim]:  \"x \\<in> t* \\<Longrightarrow> y \\<in> t* \\<Longrightarrow> x \\<cdot> y = y \\<cdot> x\"", "lemma commE[elim]: assumes  \"x \\<cdot> y = y \\<cdot> x\"\n  obtains  t m k where \"x = t\\<^sup>@k\" and \"y = t\\<^sup>@m\"", "lemma comm_rootE: assumes  \"x \\<cdot> y = y \\<cdot> x\"\n  obtains  t where \"x \\<in>  t*\" and \"y \\<in> t*\"", "lemma per_rootI[simp,intro]: \"u \\<le>p r \\<cdot> u \\<Longrightarrow> r \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<le>p r\\<^sup>\\<omega>\"", "lemma per_rootI': assumes \"u \\<le>p r\\<^sup>@k\" and  \"r \\<noteq> \\<epsilon>\" shows  \"u \\<le>p r\\<^sup>\\<omega>\"", "lemma per_rootD[elim]: \"u \\<le>p r\\<^sup>\\<omega> \\<Longrightarrow> u \\<le>p r \\<cdot> u\"", "lemma per_rootD': \"u \\<le>p r\\<^sup>\\<omega> \\<Longrightarrow> r \\<noteq> \\<epsilon>\"", "lemma emp_any_per: \"r \\<noteq> \\<epsilon> \\<Longrightarrow> (\\<epsilon> \\<le>p r\\<^sup>\\<omega> )\"", "lemma emp_not_per: \"\\<not> (x \\<le>p \\<epsilon>\\<^sup>\\<omega>)\"", "lemma root_self: \"w \\<noteq> \\<epsilon> \\<Longrightarrow> w \\<le>p w\\<^sup>\\<omega>\"", "lemma root_is_take: \"w \\<le>p r\\<^sup>\\<omega> \\<Longrightarrow> \\<^bold>|r\\<^bold>| \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow>  r \\<le>p w\"", "lemma pref_pow_ext_take: assumes \"u \\<le>p r\\<^sup>@k\" shows \"u \\<le>p take \\<^bold>|r\\<^bold>| u \\<cdot> r\\<^sup>@k\"", "lemma pref_pow_take: assumes \"u \\<le>p r\\<^sup>@k\" shows \"u \\<le>p take \\<^bold>|r\\<^bold>| u \\<cdot> u\"", "lemma per_exp: assumes \"u \\<le>p r\\<^sup>\\<omega>\" shows \"u \\<le>p r\\<^sup>@k \\<cdot> u\"", "lemma per_root_spref_powE: assumes \"u \\<le>p r\\<^sup>\\<omega>\" \n  obtains k where \"u <p r\\<^sup>@k\"", "lemma period_rootE [elim]: assumes \"u \\<le>p t\\<^sup>\\<omega>\" obtains n r where \"r <p t\" and \"t\\<^sup>@n \\<cdot> r = u\"", "lemma per_add_exp: assumes \"u \\<le>p r\\<^sup>\\<omega>\" and \"m \\<noteq> 0\" shows \"u \\<le>p (r\\<^sup>@m)\\<^sup>\\<omega>\"", "lemma per_pref_ex: assumes \"u \\<le>p r\\<^sup>\\<omega>\" \n  obtains n where \"u \\<le>p r\\<^sup>@n\" and \"n \\<noteq> 0\"", "theorem per_pref: \"x \\<le>p r\\<^sup>\\<omega> \\<longleftrightarrow> (\\<exists> k. x \\<le>p r\\<^sup>@k) \\<and> r \\<noteq> \\<epsilon>\"", "lemma pref_pow_conv: \"(\\<exists> k. x \\<le>p r\\<^sup>@k) \\<longleftrightarrow> (\\<exists> k z. r\\<^sup>@k\\<cdot>z = x \\<and> z \\<le>p r)\"", "lemma per_eq: \"x \\<le>p r\\<^sup>\\<omega> \\<longleftrightarrow> (\\<exists> k z. r\\<^sup>@k\\<cdot>z = x \\<and> z \\<le>p r) \\<and> r \\<noteq> \\<epsilon>\"", "lemma per_drop_exp: \"u \\<le>p (r\\<^sup>@m)\\<^sup>\\<omega>  \\<Longrightarrow> u \\<le>p r\\<^sup>\\<omega>\"", "lemma per_drop_exp': \"i \\<noteq> 0 \\<Longrightarrow> p \\<le>p e\\<^sup>@i \\<cdot> p \\<Longrightarrow>  p \\<le>p  e \\<cdot> p\"", "lemma per_drop_exp_rev: assumes \"i \\<noteq> 0\" \"p \\<le>s p \\<cdot> e\\<^sup>@i\" shows \"p \\<le>s p \\<cdot> e\"", "lemma pow_comm_comm': assumes comm: \"u\\<^sup>@(Suc k) = v\\<^sup>@(Suc l)\" shows \"u \\<cdot> v = v \\<cdot> u\"", "lemma comm_trans: assumes uv: \"u\\<cdot>v =  v\\<cdot>u\" and vw: \"w\\<cdot>v = v\\<cdot>w\" and nemp: \"v \\<noteq> \\<epsilon>\" shows \"u \\<cdot> w = w \\<cdot> u\"", "theorem per_all_exps: \"\\<lbrakk> m \\<noteq> 0; k \\<noteq> 0 \\<rbrakk> \\<Longrightarrow> (u \\<le>p (r\\<^sup>@m)\\<^sup>\\<omega>) \\<longleftrightarrow> (u \\<le>p (r\\<^sup>@k)\\<^sup>\\<omega>)\"", "lemma drop_per_pref: assumes \"w \\<le>p u\\<^sup>\\<omega>\" shows \"drop \\<^bold>|u\\<^bold>| w \\<le>p w\"", "lemma per_root_trans[trans]: \"w \\<le>p u\\<^sup>\\<omega> \\<Longrightarrow> u \\<in> t* \\<Longrightarrow> w \\<le>p t\\<^sup>\\<omega>\"", "lemma per_root_same_prefix:\"w \\<le>p r\\<^sup>\\<omega> \\<Longrightarrow> w' \\<le>p r\\<^sup>\\<omega> \\<Longrightarrow>  w \\<bowtie> w\"", "lemma take_after_drop:  \"\\<^bold>|u\\<^bold>| + q \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow> w \\<le>p u\\<^sup>\\<omega> \\<Longrightarrow> take q (drop \\<^bold>|u\\<^bold>| w) = take q w\"", "lemma two_pers':\n  assumes pu: \"w \\<le>p u \\<cdot> w\" and pv: \"w \\<le>p v \\<cdot> w\" and len: \"\\<^bold>|u\\<^bold>| + \\<^bold>|v\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|\"\n  shows \"u \\<cdot> v = v \\<cdot> u\"", "lemma two_pers: assumes \"w \\<le>p u\\<^sup>\\<omega>\" and  \"w \\<le>p v\\<^sup>\\<omega>\" and \"\\<^bold>|u\\<^bold>|+\\<^bold>|v\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|\" shows \"u\\<cdot>v = v\\<cdot>u\"", "lemma periodN_I: \"w \\<noteq> \\<epsilon> \\<Longrightarrow> n \\<noteq> 0 \\<Longrightarrow> w \\<le>p (take n w) \\<cdot> w \\<Longrightarrow> periodN w n\"", "lemma emp_no_periodN: \"\\<not> periodN \\<epsilon> n\"", "lemma zero_not_per: \"\\<not> periodN w 0\"", "lemma periodN_D1: \"periodN w n \\<Longrightarrow>  w \\<noteq> \\<epsilon>\"", "lemma periodN_D2: \"periodN w n \\<Longrightarrow>  n \\<noteq> 0\"", "lemma periodN_D3: \"periodN w n \\<Longrightarrow>  w \\<le>p take n w \\<cdot> w\"", "lemma all_long_pers: \"\\<lbrakk> w \\<noteq> \\<epsilon>; \\<^bold>|w\\<^bold>| \\<le> n \\<rbrakk> \\<Longrightarrow> periodN w n\"", "lemmas per_nemp = periodN_D1", "lemmas per_positive = periodN_D2", "lemma periodN_indeces: assumes \"periodN w n\" and \"i + n < \\<^bold>|w\\<^bold>|\" shows \"w!i = w!(i+n)\"", "lemma indeces_periodN: \n  assumes  \"w \\<noteq> \\<epsilon>\" and \"n \\<noteq> 0\" and  forall: \"\\<And> i. i + n < \\<^bold>|w\\<^bold>| \\<Longrightarrow> w!i = w!(i+n)\" \n  shows \"periodN w n\"", "lemma periodN_rev: assumes \"periodN w p\" shows \"periodN (rev w) p\"", "lemma periodN_rev_conv [reversal_rule]: \"periodN (rev w) n \\<longleftrightarrow> periodN w n\"", "lemma periodN_fac: assumes \"periodN (u\\<cdot>w\\<cdot>v) p\" and \"w \\<noteq> \\<epsilon>\"\n  shows \"periodN w p\"", "lemma periodN_fac': \"periodN v p \\<Longrightarrow> u \\<le>f v \\<Longrightarrow> u \\<noteq> \\<epsilon> \\<Longrightarrow> periodN u p\"", "lemma assumes \"y \\<noteq> \\<epsilon>\" and \"k \\<noteq> 0\" shows \"y\\<^sup>@k \\<noteq> \\<epsilon>\"", "lemma pow_per: assumes \"y \\<noteq> \\<epsilon>\" and \"k \\<noteq> 0\" shows \"periodN (y\\<^sup>@k) \\<^bold>|y\\<^bold>|\"", "lemma per_fac: assumes \"y \\<noteq> \\<epsilon>\" and \"v \\<noteq> \\<epsilon>\" and \"y\\<^sup>@k = u\\<cdot>v\\<cdot>w\" shows \"periodN v \\<^bold>|y\\<^bold>|\"", "theorem periodN_pref: \"periodN w n \\<longleftrightarrow> (\\<exists>k r. w \\<le>np r\\<^sup>@k \\<and> \\<^bold>|r\\<^bold>| = n)\" (is \"_ \\<longleftrightarrow> ?R\")", "theorem per_shift: assumes \"w \\<noteq> \\<epsilon>\" \"n \\<noteq> 0\" \n  shows \"periodN w n \\<longleftrightarrow> drop n w \\<le>p w\"", "lemma rotate_per_root: assumes \"w \\<noteq> \\<epsilon>\" and \"n \\<noteq> 0\" and \"w = rotate n w\" \n  shows \"periodN w n\"", "lemma periodN_drop: assumes \"periodN w p\" and \"p < \\<^bold>|w\\<^bold>|\"\n  shows \"periodN (drop p w) p\"", "lemma ext_per_left: assumes \"periodN w p\" and  \"p \\<le> \\<^bold>|w\\<^bold>|\" \n  shows \"periodN (take p w \\<cdot> w) p\"", "lemma ext_per_left_power: \"periodN w p \\<Longrightarrow> p \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow> periodN ((take p w)\\<^sup>@k \\<cdot> w) p\"", "lemma take_several_pers: assumes \"periodN w n\" and \"m*n \\<le> \\<^bold>|w\\<^bold>|\"\n  shows \"(take n w)\\<^sup>@m = take (m*n) w\"", "lemma per_mult: assumes \"periodN w n\" and \"m \\<noteq> 0\" shows \"periodN w (m*n)\"", "lemma root_periodN: assumes \"w \\<noteq> \\<epsilon>\" and  \"w \\<le>p r\\<^sup>\\<omega>\" shows \"periodN w \\<^bold>|r\\<^bold>|\"", "theorem  two_periodsN:\n  assumes \"periodN w p\" \"periodN w q\"  \"p + q \\<le> \\<^bold>|w\\<^bold>|\" \n  shows \"periodN w (gcd p q)\"", "lemma index_mod_per_root: assumes \"r \\<noteq> \\<epsilon>\" and i: \"\\<forall> i < \\<^bold>|w\\<^bold>|. w!i = r!(i mod \\<^bold>|r\\<^bold>|)\" shows  \"w \\<le>p r\\<^sup>\\<omega>\"", "lemma index_pref_pow_mod: \"w \\<le>p r\\<^sup>@k \\<Longrightarrow> i < \\<^bold>|w\\<^bold>| \\<Longrightarrow>  w!i = r!(i mod \\<^bold>|r\\<^bold>| )\"", "lemma index_per_root_mod: \"w \\<le>p r\\<^sup>\\<omega> \\<Longrightarrow> i < \\<^bold>|w\\<^bold>| \\<Longrightarrow>  w!i = r!(i mod \\<^bold>|r\\<^bold>|)\"", "lemma root_divisor: assumes \"periodN w k\" and  \"k dvd \\<^bold>|w\\<^bold>|\" shows \"w \\<in> (take k w)*\"", "lemma per_pref': assumes \"u \\<noteq> \\<epsilon>\" and \"periodN v k\" and  \"u \\<le>p v\" shows \"periodN u k\"", "lemma concat_len_one: assumes \"\\<^bold>|us\\<^bold>| = 1\" shows \"concat us = hd us\"", "lemma sing_pow_hd_tl: \"c # w \\<in> [a]* \\<longleftrightarrow> c = a \\<and> w \\<in> [a]*\"", "lemma pref_sing_power: assumes \"w \\<le>p [a]\\<^sup>@m\" shows \"w = [a]\\<^sup>@(\\<^bold>|w\\<^bold>|)\"", "lemma sing_pow_palindrom: assumes \"w = [a]\\<^sup>@k\" shows \"rev w = w\"", "lemma suf_sing_power: assumes \"w \\<le>s [a]\\<^sup>@m\" shows \"w \\<in> [a]*\"", "lemma sing_fac_pow: assumes \"w \\<in> [a]*\" and  \"v \\<le>f w\" shows \"v \\<in> [a]*\"", "lemma sing_pow_fac': assumes \"a \\<noteq> b\" and  \"w \\<in> [a]*\" shows \"\\<not> ([b] \\<le>f w)\"", "lemma all_set_sing_pow: \"(\\<forall> b. b \\<in> set w \\<longrightarrow> b = a) \\<longleftrightarrow> w \\<in> [a]*\" (is \"?All \\<longleftrightarrow> _\")", "lemma sing_pow_set: \"u \\<in> [a]* \\<Longrightarrow> u \\<noteq> \\<epsilon> \\<Longrightarrow> set u = {a}\"", "lemma takeWhile_sing_root: \"takeWhile (\\<lambda> x. x = a) w \\<in> [a]*\"", "lemma takeWhile_sing_pow: \"takeWhile (\\<lambda> x. x = a) w = w \\<longleftrightarrow> w = [a]\\<^sup>@\\<^bold>|w\\<^bold>|\"", "lemma dropWhile_sing_pow: \"dropWhile (\\<lambda> x. x = a) w = \\<epsilon> \\<longleftrightarrow> w = [a]\\<^sup>@\\<^bold>|w\\<^bold>|\"", "lemma distinct_letter_in: assumes \"\\<not> w \\<in> [a]*\" \n  obtains m b q where \"[a]\\<^sup>@m \\<cdot> [b] \\<cdot> q = w\" and \"b \\<noteq> a\"", "lemma distinct_letter_in_hd: assumes \"\\<not> w \\<in>  [hd w]*\"\n  obtains m b q where  \"[hd w]\\<^sup>@m \\<cdot> [b] \\<cdot> q = w\" and \"b \\<noteq> hd w\" and \"m \\<noteq> 0\"", "lemma distinct_letter_in_suf: assumes \"\\<not> w \\<in>  [a]*\" shows \"\\<exists> m b. [b] \\<cdot> [a]\\<^sup>@m  \\<le>s w \\<and> b \\<noteq> a\"", "lemma sing_pow_exp: assumes \"w \\<in> [a]*\" shows \"w = [a]\\<^sup>@\\<^bold>|w\\<^bold>|\"", "lemma sing_power': assumes \"w \\<in> [a]*\" and \"i < \\<^bold>|w\\<^bold>|\" shows \"w ! i = a\"", "lemma rev_sing_power: \"x \\<in> [a]* \\<Longrightarrow> rev x = x\"", "lemma lcp_letter_power: \n  assumes \"w \\<noteq> \\<epsilon>\" and \"w \\<in> [a]*\" and \"[a]\\<^sup>@m \\<cdot> [b] \\<le>p z\" and  \"a \\<noteq> b\" \n  shows \"w \\<cdot> z \\<and>\\<^sub>p z \\<cdot> w = [a]\\<^sup>@m\"", "lemma per_one: assumes \"w \\<le>p [a]\\<^sup>\\<omega>\" shows \"w \\<in> [a]*\"", "lemma per_one': \"w \\<in> [a]* \\<Longrightarrow> w \\<le>p [a]\\<^sup>\\<omega>\"", "lemma per_sing_one: assumes \"w \\<noteq> \\<epsilon>\" \"w \\<le>p [a]\\<^sup>\\<omega>\" shows \"periodN w 1\"", "lemma borderI[intro]: \"x \\<le>p w \\<Longrightarrow> x \\<le>s w \\<Longrightarrow> x \\<noteq> w \\<Longrightarrow> x \\<noteq> \\<epsilon> \\<Longrightarrow> x \\<le>b w\"", "lemma borderD_pref: \"x \\<le>b w \\<Longrightarrow> x \\<le>p w\"", "lemma borderD_spref: \"x \\<le>b w \\<Longrightarrow> x <p w\"", "lemma borderD_suf: \"x \\<le>b w \\<Longrightarrow> x \\<le>s w\"", "lemma borderD_ssuf: \"x \\<le>b w \\<Longrightarrow> x <s w\"", "lemma borderD_nemp: \"x \\<le>b w \\<Longrightarrow> x \\<noteq> \\<epsilon>\"", "lemma borderD_neq: \"x \\<le>b w \\<Longrightarrow> x \\<noteq> w\"", "lemma border_lq_nemp: assumes \"x \\<le>b w\" shows \"x\\<inverse>\\<^sup>>w \\<noteq> \\<epsilon>\"", "lemma border_rq_nemp: assumes \"x \\<le>b w\" shows \"w\\<^sup><\\<inverse>x \\<noteq> \\<epsilon>\"", "lemma border_trans[trans]: assumes \"t \\<le>b x\" \"x \\<le>b w\"\n  shows \"t \\<le>b w\"", "lemma border_rev_conv[reversal_rule]: \"rev x \\<le>b rev w \\<longleftrightarrow> x \\<le>b w\"", "lemma border_lq_comp: \"x \\<le>b w \\<Longrightarrow> (w\\<^sup><\\<inverse>x) \\<bowtie> x\"", "lemmas border_lq_suf_comp = border_lq_comp[reversed]", "lemma border_len:  assumes \"x \\<le>b w\"\n  shows \"1 < \\<^bold>|w\\<^bold>|\" and \"0 < \\<^bold>|x\\<^bold>|\" and \"\\<^bold>|x\\<^bold>| < \\<^bold>|w\\<^bold>|\"", "lemma borders_compare: assumes \"x \\<le>b w\" and \"x' \\<le>b w\" and \"\\<^bold>|x'\\<^bold>| < \\<^bold>|x\\<^bold>|\"\n  shows \"x' \\<le>b x\"", "lemma unbordered_border: \n  \"bordered w \\<Longrightarrow>  \\<exists> x. x \\<le>b w \\<and> \\<not> bordered x\"", "lemma unbordered_border_shortest: \"x \\<le>b w \\<Longrightarrow> \\<not> bordered x \\<Longrightarrow>  y \\<le>b w \\<Longrightarrow> \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|y\\<^bold>|\"", "lemma long_border_bordered: assumes long: \"\\<^bold>|w\\<^bold>| < \\<^bold>|x\\<^bold>| + \\<^bold>|x\\<^bold>|\" and border: \"x \\<le>b w\" \n  shows \"(w\\<^sup><\\<inverse>x)\\<inverse>\\<^sup>>x \\<le>b x\"", "lemma border_short_dec: assumes border: \"x \\<le>b w\" and short: \"\\<^bold>|x\\<^bold>| + \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|\"\n  shows \"x \\<cdot> x\\<inverse>\\<^sup>>(w\\<^sup><\\<inverse>x) \\<cdot> x = w\"", "lemma bordered_dec: assumes \"bordered w\" \n  obtains u v where \"u\\<cdot>v\\<cdot>u = w\" and \"u \\<noteq> \\<epsilon>\"", "lemma border_conjug_eq: \"x \\<le>b w \\<Longrightarrow> (w\\<^sup><\\<inverse>x) \\<cdot> w = w \\<cdot> (x\\<inverse>\\<^sup>>w)\"", "lemma border_per_root: \"x \\<le>b w \\<Longrightarrow> w \\<le>p (w\\<^sup><\\<inverse>x) \\<cdot> w\"", "lemma per_root_border: assumes \"\\<^bold>|r\\<^bold>| < \\<^bold>|w\\<^bold>|\" and \"r \\<noteq> \\<epsilon>\" and \"w \\<le>p r \\<cdot> w\" \n  shows \"r\\<inverse>\\<^sup>>w \\<le>b w\"", "lemma border_per: assumes \"x \\<le>b w\" shows \"periodN w (\\<^bold>|w\\<^bold>|-\\<^bold>|x\\<^bold>|)\"", "lemma per_border: assumes \"n < \\<^bold>|w\\<^bold>|\" and \"periodN w n\" \n  shows \"take (\\<^bold>|w\\<^bold>| - n) w  \\<le>b w\"", "lemma primI: \"(\\<And> r k. r\\<^sup>@k = u \\<Longrightarrow> k = 1) \\<Longrightarrow> primitive u\"", "lemma prim_nemp: \"primitive u \\<Longrightarrow> u \\<noteq> \\<epsilon>\"", "lemma prim_exp_one: \"primitive u \\<Longrightarrow> r\\<^sup>@k = u \\<Longrightarrow> k = 1\"", "lemma prim_exp_eq: \"primitive u \\<Longrightarrow> r\\<^sup>@k = u \\<Longrightarrow> u = r\"", "lemma prim_triv_root: \"primitive u \\<Longrightarrow> u \\<in> t* \\<Longrightarrow> t = u\"", "lemma prim_comm_exp[elim]: assumes \"primitive v\" and \"v\\<cdot>u = u\\<cdot>v\" obtains k where \"u = v\\<^sup>@k\"", "lemma pow_non_prim: \"1 < k \\<Longrightarrow> \\<not> primitive (w\\<^sup>@k)\"", "lemma comm_non_prim: assumes \"u \\<noteq> \\<epsilon>\" \"v \\<noteq> \\<epsilon>\" \"u\\<cdot>v = v\\<cdot>u\" shows \"\\<not> primitive (u\\<cdot>v)\"", "lemma prim_rotate_conv: \"primitive w \\<longleftrightarrow> primitive (rotate n w)\"", "lemma non_prim: assumes \"\\<not> primitive w\" and \"w \\<noteq> \\<epsilon>\"\n  obtains r k where \"r \\<noteq> \\<epsilon>\" and \"1 < k\" and \"r\\<^sup>@k = w\" and \"w \\<noteq> r\"", "lemma prim_no_rotate: assumes \"primitive w\" and \"0 < n\" and \"n < \\<^bold>|w\\<^bold>|\" \n  shows \"rotate n w \\<noteq> w\"", "lemma no_rotate_prim: assumes  \"w \\<noteq> \\<epsilon>\" and \"\\<And> n. 0 < n \\<Longrightarrow> n < \\<^bold>|w\\<^bold>| \\<Longrightarrow> rotate n w \\<noteq> w\"\n  shows \"primitive w\"", "lemma prim_sing: \"primitive [a]\"", "lemma prim_rev_iff[reversal_rule]: \"primitive (rev u) \\<longleftrightarrow> primitive u\"", "lemma prim_rootD [dest]: \"x \\<in>\\<^sub>p r* \\<Longrightarrow> x \\<in> r*\"", "lemma prim_rootI [intro]: \"u \\<noteq> \\<epsilon> \\<Longrightarrow>  u \\<in> r* \\<Longrightarrow> primitive r \\<Longrightarrow> u \\<in>\\<^sub>p r*\"", "lemma prim_root_rev_conv [reversal_rule]: \"rev x \\<in>\\<^sub>p rev r* \\<longleftrightarrow>  x \\<in>\\<^sub>p r*\"", "lemma primrootE: assumes \"x \\<in>\\<^sub>p r*\"\n  obtains k where \"k \\<noteq> 0\" and \"r\\<^sup>@k = x\"", "lemma primroot_of_root: \"\\<lbrakk> x \\<noteq> \\<epsilon>; x \\<in> u*; u \\<in>\\<^sub>p r*\\<rbrakk> \\<Longrightarrow> x \\<in>\\<^sub>p r*\"", "lemma comm_prim: assumes \"primitive r\" and  \"primitive s\" and \"r\\<cdot>s = s\\<cdot>r\"\n      shows \"r = s\"", "lemma primroot_ex: assumes \"x \\<noteq> \\<epsilon>\" shows \"\\<exists> r k.  x \\<in>\\<^sub>p r* \\<and> k \\<noteq> 0 \\<and> x = r\\<^sup>@k\"", "lemma primroot_exE: assumes\"x \\<noteq> \\<epsilon>\" \n  obtains r k where \"primitive r\" and \"k \\<noteq> 0\" and \"x = r\\<^sup>@k\"", "lemma primroot_unique: assumes \"u \\<in>\\<^sub>p r*\" shows \"\\<rho> u = r\"", "lemma prim_self_root: \"primitive x \\<Longrightarrow> \\<rho> x  = x\"", "lemma primroot_is_primroot[intro]: assumes \"x \\<noteq> \\<epsilon>\" shows \"x \\<in>\\<^sub>p (\\<rho> x)*\"", "lemma primroot_is_root[intro]: \"x \\<noteq> \\<epsilon> \\<Longrightarrow> x \\<in> (\\<rho> x)*\"", "lemma primrootI [intro]: assumes \"x \\<noteq> \\<epsilon>\" shows primroot_prim: \"primitive (\\<rho> x)\" and primroot_nemp: \"\\<rho> x \\<noteq> \\<epsilon>\"", "lemma primroot_root: assumes \"u \\<noteq> \\<epsilon>\" \"u \\<in> q*\" shows \"\\<rho> q = \\<rho> u\"", "lemma primroot_len_mult: assumes \"u \\<noteq> \\<epsilon>\" \"u \\<in> q*\" obtains k where \"\\<^bold>|q\\<^bold>| = k*\\<^bold>|\\<rho> u\\<^bold>|\"", "lemma primroot_shorter_root: assumes \"u \\<noteq> \\<epsilon>\" \"u \\<in> q*\" shows \"\\<^bold>|\\<rho> u\\<^bold>| \\<le> \\<^bold>|q\\<^bold>|\"", "lemma primroot_shortest_root: assumes \"u \\<noteq> \\<epsilon>\" shows \"\\<^bold>|\\<rho> u\\<^bold>| = (LEAST d. (\\<exists> r. (u \\<in> r*) \\<and> \\<^bold>|r\\<^bold>| = d))\"", "lemma primroot_shorter_eq: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> \\<^bold>|\\<rho> u\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\"", "lemma primroot_take: assumes \"u \\<noteq> \\<epsilon>\" shows \"\\<rho> u = (take ( \\<^bold>|\\<rho> u\\<^bold>| ) u)\"", "lemma primroot_take_shortest: assumes \"u \\<noteq> \\<epsilon>\" shows \"\\<rho> u = (take (LEAST d. (\\<exists> r. (u \\<in> r*) \\<and> \\<^bold>|r\\<^bold>| = d)) u)\"", "lemma primroot_rotate_comm: assumes \"w \\<noteq> \\<epsilon>\" shows \"\\<rho> (rotate n w) = rotate n (\\<rho> w)\"", "lemma primrootI1 [intro]: assumes pow: \"u = r\\<^sup>@(Suc k)\" and prim: \"primitive r\" shows \"\\<rho> u = r\"", "lemma prim_root_power [elim]: assumes \"x \\<noteq> \\<epsilon>\" obtains i where \"(\\<rho> x)\\<^sup>@(Suc i) = x\"", "lemma prim_root_cases: obtains \"u = \\<epsilon>\" | \"primitive u\" | \"\\<^bold>|\\<rho> u\\<^bold>| < \\<^bold>|u\\<^bold>|\"", "theorem comm_primroots: assumes \"u \\<noteq> \\<epsilon>\" \"v \\<noteq> \\<epsilon>\" shows \"u \\<cdot> v = v \\<cdot> u \\<longleftrightarrow> \\<rho> u = \\<rho> v\"", "lemma prim_comm_short_emp: assumes \"primitive p\" and \"u\\<cdot>p=p\\<cdot>u\" and \"\\<^bold>|u\\<^bold>| < \\<^bold>|p\\<^bold>|\"\n  shows \"u = \\<epsilon>\"", "lemma conjug_rev_conv [reversal_rule]: \"rev u \\<sim> rev v \\<longleftrightarrow> u \\<sim> v\"", "lemma conjug_rotate_iff: \"u \\<sim> v \\<longleftrightarrow> (\\<exists> n. v = rotate n u)\"", "lemma conjugI [intro]: \"r \\<cdot> s = u \\<Longrightarrow> s \\<cdot> r = v \\<Longrightarrow> u \\<sim> v\"", "lemma conjugI' [intro!]: \"r \\<cdot> s \\<sim> s \\<cdot> r\"", "lemma conjugE [elim]: \n  assumes \"u \\<sim> v\"\n  obtains r s where \"r \\<cdot> s = u\" and \"s \\<cdot> r = v\"", "lemma conjugE1 [elim]:\n  assumes \"u \\<sim> v\"\n  obtains r where \"u \\<cdot> r = r \\<cdot> v\"", "lemma conjug_refl: \"u \\<sim> u\"", "lemma conjug_sym [sym]: \"u \\<sim> v \\<Longrightarrow> v \\<sim> u\"", "lemma conjug_nemp_iff: \"u \\<sim> v \\<Longrightarrow> u = \\<epsilon> \\<longleftrightarrow> v = \\<epsilon>\"", "lemma conjug_len: \"u \\<sim> v  \\<Longrightarrow> \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\"", "lemma pow_conjug:\n  assumes eq: \"t\\<^sup>@i \\<cdot> r \\<cdot> u = t\\<^sup>@k\" and t: \"r \\<cdot> s = t\"\n  shows \"u \\<cdot> t\\<^sup>@i \\<cdot> r = (s \\<cdot> r)\\<^sup>@k\"", "lemma conjug_eqE [elim, consumes 2]:\n  assumes eq: \"x \\<cdot> z = z \\<cdot> y\" and \"x \\<noteq> \\<epsilon>\"\n  obtains u v k where \"u \\<cdot> v = x\" and \"v \\<cdot> u = y\" and \"(u \\<cdot> v)\\<^sup>@k \\<cdot> u = z\" and \"v \\<noteq> \\<epsilon>\"", "theorem conjugation: assumes \"x\\<cdot>z = z\\<cdot>y\" and \"x \\<noteq> \\<epsilon>\" \n  shows \"\\<exists> u v k. u \\<cdot> v = x \\<and> v \\<cdot> u  = y \\<and> (u \\<cdot> v)\\<^sup>@k \\<cdot> u = z\"", "lemma conjug_eq_prim_rootE [elim, consumes 2]:\n  assumes eq: \"x \\<cdot> z = z \\<cdot> y\" and \"x \\<noteq> \\<epsilon>\"\n  obtains r s i n where\n    \"(r \\<cdot> s)\\<^sup>@Suc i = x\" and\n    \"(s \\<cdot> r)\\<^sup>@Suc i = y\" and \n    \"(r \\<cdot> s)\\<^sup>@n \\<cdot> r = z\" and\n    \"s \\<noteq> \\<epsilon>\" and \"primitive (r \\<cdot> s)\"", "lemma conjug_eq_prim_root:\n  assumes \"x \\<cdot> z = z \\<cdot> y\" and \"x \\<noteq> \\<epsilon>\"\n  shows \"\\<exists> r s i n. (r \\<cdot> s)\\<^sup>@(Suc i) = x \\<and> (s \\<cdot> r)\\<^sup>@(Suc i) = y \\<and> (r \\<cdot> s)\\<^sup>@n \\<cdot> r = z \\<and> s \\<noteq> \\<epsilon> \\<and> primitive (r \\<cdot> s)\"", "lemma conjugI1 [intro]:\n  assumes eq: \"u \\<cdot> r = r \\<cdot> v\"\n  shows \"u \\<sim> v\"", "lemma conjug_trans [trans]:\n  assumes uv: \"u \\<sim> v\" and vw: \"v \\<sim> w\"\n    shows \"u \\<sim> w\"", "lemma conjug_trans': assumes uv': \"u \\<cdot> r = r \\<cdot> v\" and vw': \"v \\<cdot> s = s \\<cdot> w\" shows \"u \\<cdot> (r \\<cdot> s) = (r \\<cdot> s) \\<cdot> w\"", "lemma nconjug_neq: \"\\<not> u \\<sim> v \\<Longrightarrow> u \\<noteq> v\"", "lemma prim_conjug:\n  assumes prim: \"primitive u\" and conjug: \"u \\<sim> v\"\n  shows \"primitive v\"", "lemma root_conjug: \"u \\<le>p r \\<cdot> u \\<Longrightarrow> u\\<inverse>\\<^sup>>(r\\<cdot>u) \\<sim> r\"", "lemma conjug_prim_root:\n  assumes conjug: \"u \\<sim> v\" and \"u \\<noteq> \\<epsilon>\"\n  shows \"\\<rho> u \\<sim> \\<rho> v\"", "lemma conjug_add_exp: \"u \\<sim> v \\<Longrightarrow>  u\\<^sup>@k \\<sim> v\\<^sup>@k\"", "lemma conjug_prim_root_iff:\n  assumes nemp:\"u \\<noteq> \\<epsilon>\" and len: \"\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\"\n  shows \"\\<rho> u  \\<sim> \\<rho> v \\<longleftrightarrow> u \\<sim> v\"", "lemma fac_pow_pref_conjug:\n  assumes \"u \\<le>f t\\<^sup>@k\"\n  obtains t' where \"t \\<sim> t'\" and \"u \\<le>p t'\\<^sup>@k\"", "lemma fac_pow_len_conjug: assumes  \"\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\" and \"u \\<le>f v\\<^sup>@k\" shows \"v \\<sim> u\"", "lemma border_conjug: \"x \\<le>b w \\<Longrightarrow> w\\<^sup><\\<inverse>x \\<sim>  x\\<inverse>\\<^sup>>w\"", "lemmas fac_pow_suf_conjug = fac_pow_pref_conjug[reversed]"], "translations": [["", "lemmas rassoc = append_assoc"], ["", "lemmas lassoc = append_assoc[symmetric]"], ["", "text\\<open>We add a common notation for the length of a given word $|w|$.\\<close>"], ["", "notation\n  length  (\"\\<^bold>|_\\<^bold>|\") \\<comment> \\<open>note that it's bold |\\<close>"], ["", "notation (latex output)\n  length  (\"\\<^latex>\\<open>\\\\ensuremath{\\\\left| \\<close>_\\<^latex>\\<open>\\\\right|}\\<close>\")"], ["", "subsection \\<open>Empty and nonempty word\\<close>"], ["", "text\\<open>As the word of length zero @{term Nil} or @{term \"[]\"} will be used often, we adopt its frequent notation $\\varepsilon $ in this formalization.\\<close>"], ["", "notation Nil (\"\\<epsilon>\")"], ["", "abbreviation drop_emp :: \"'a list set \\<Rightarrow> 'a list set\" ( \"_\\<^sub>+\" [1000] ) where\n  \"drop_emp S \\<equiv> S - {\\<epsilon>}\""], ["", "subsection \\<open>Prefix\\<close>"], ["", "text\\<open>The property of being a prefix shall be frequently used, and we give it yet another frequent shorthand notation.\nAnalogously, we introduce shorthand notations for non-empty prefix and strict prefix, and continue with suffixes and factors.\n\\<close>"], ["", "notation prefix (infixl \"\\<le>p\" 50)"], ["", "notation (latex output) prefix  (\"\\<le>\\<^sub>p\")"], ["", "lemmas [simp] = prefix_def"], ["", "lemmas prefI'[intro] = prefixI"], ["", "lemma prefI[intro]: \"p \\<cdot> s = w \\<Longrightarrow> p \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<cdot> s = w \\<Longrightarrow> p \\<le>p w", "by auto"], ["", "lemma prefD: \"u \\<le>p v \\<Longrightarrow> \\<exists> z. v = u \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p v \\<Longrightarrow> \\<exists>z. v = u \\<cdot> z", "unfolding prefix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>zs. v = u \\<cdot> zs \\<Longrightarrow>\n    \\<exists>z. v = u \\<cdot> z", "."], ["", "definition prefix_comparable :: \"'a list \\<Rightarrow> 'a list \\<Rightarrow> bool\" (infixl \"\\<bowtie>\" 50) \n  where prefix_comparable_def[simp]: \"(prefix_comparable u v) \\<equiv> u \\<le>p v \\<or> v \\<le>p u\""], ["", "lemma pref_compIff[iff]: \"u \\<bowtie> v \\<longleftrightarrow> u \\<le>p v \\<or> v \\<le>p u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<bowtie> v) = (u \\<le>p v \\<or> v \\<le>p u)", "by simp"], ["", "definition nonempty_prefix (infixl \"\\<le>np\" 50) where nonempty_prefix_def[simp]:  \"u \\<le>np v \\<equiv> u \\<noteq> \\<epsilon> \\<and> u \\<le>p v\""], ["", "notation (latex output) nonempty_prefix  (\"\\<le>\\<^bsub>np\\<^esub>\" 50)"], ["", "lemma npI[intro]: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<le>p v \\<Longrightarrow> u \\<le>np v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<noteq> \\<epsilon>; u \\<le>p v\\<rbrakk>\n    \\<Longrightarrow> u \\<le>np v", "by auto"], ["", "lemma npI'[intro]: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> (\\<exists> z. u \\<cdot> z = v) \\<Longrightarrow> u \\<le>np v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<noteq> \\<epsilon>; \\<exists>z. u \\<cdot> z = v\\<rbrakk>\n    \\<Longrightarrow> u \\<le>np v", "by auto"], ["", "lemma npD: \"u \\<le>np v \\<Longrightarrow> u \\<le>p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>np v \\<Longrightarrow> u \\<le>p v", "by simp"], ["", "lemma npD': \"u \\<le>np v \\<Longrightarrow> u \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>np v \\<Longrightarrow> u \\<noteq> \\<epsilon>", "by simp"], ["", "notation strict_prefix (infixl \"<p\" 50)"], ["", "notation (latex output) strict_prefix  (\"<\\<^sub>p\")"], ["", "lemmas [simp] = strict_prefix_def"], ["", "lemma sprefI1[intro]: \"v = u \\<cdot> z \\<Longrightarrow> z \\<noteq> \\<epsilon> \\<Longrightarrow> u <p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v = u \\<cdot> z; z \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> u <p v", "by simp"], ["", "lemma sprefI1'[intro]: \"u \\<cdot> z = v \\<Longrightarrow> z \\<noteq> \\<epsilon> \\<Longrightarrow> u <p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<cdot> z = v; z \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> u <p v", "by blast"], ["", "lemma sprefI2[intro]: \"u \\<le>p v \\<Longrightarrow> length u < length v \\<Longrightarrow> u <p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p v; \\<^bold>|u\\<^bold>| < \\<^bold>|v\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> u <p v", "unfolding strict_prefix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p v; \\<^bold>|u\\<^bold>| < \\<^bold>|v\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> u \\<le>p v \\<and> u \\<noteq> v", "by blast"], ["", "lemma sprefD[elim]: \"u <p v \\<Longrightarrow> u \\<le>p v \\<and> u \\<noteq> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u <p v \\<Longrightarrow> u \\<le>p v \\<and> u \\<noteq> v", "by auto"], ["", "lemmas sprefD1[elim] = prefix_order.order.strict_implies_order and\n  sprefD2[elim] = prefix_order.less_imp_neq"], ["", "lemma sprefE [elim]: assumes \"u <p v\" obtains z where \"u \\<cdot> z = v\" and \"z \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>u \\<cdot> z = v; z \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  u <p v\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>u \\<cdot> z = v; z \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "subsection \\<open>Suffix\\<close>"], ["", "notation suffix (infixl \"\\<le>s\" 60)"], ["", "notation (latex output) suffix (\"\\<le>\\<^sub>s\")"], ["", "lemmas [simp] = suffix_def"], ["", "lemma sufI[intro]: \"p \\<cdot> s = w \\<Longrightarrow> s \\<le>s w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<cdot> s = w \\<Longrightarrow> s \\<le>s w", "by auto"], ["", "lemma sufD[elim]: \"u \\<le>s v \\<Longrightarrow> \\<exists> z. z \\<cdot> u = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>s v \\<Longrightarrow> \\<exists>z. z \\<cdot> u = v", "by auto"], ["", "notation strict_suffix (infixl \"<s\" 50)"], ["", "notation (latex output) strict_suffix  (\"<\\<^sub>s\")"], ["", "lemmas [simp] = strict_suffix_def"], ["", "lemmas [intro] = suffix_order.le_neq_trans"], ["", "lemma ssufI1[intro]: \"u \\<cdot> v = w \\<Longrightarrow> u \\<noteq> \\<epsilon> \\<Longrightarrow> v <s w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<cdot> v = w; u \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> v <s w", "by blast"], ["", "lemma ssufI2[intro]: \"u \\<le>s v \\<Longrightarrow> length u < length v \\<Longrightarrow> u <s v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>s v; \\<^bold>|u\\<^bold>| < \\<^bold>|v\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> u <s v", "by blast"], ["", "lemma ssufD[elim]: \"u <s v \\<Longrightarrow> u \\<le>s v \\<and> u \\<noteq> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u <s v \\<Longrightarrow> u \\<le>s v \\<and> u \\<noteq> v", "by auto"], ["", "lemmas ssufD1[elim] = suffix_order.order.strict_implies_order and\n  ssufD2[elim] = suffix_order.less_imp_neq"], ["", "definition suffix_comparable :: \"'a list \\<Rightarrow> 'a list \\<Rightarrow> bool\" (infixl \"\\<bowtie>\\<^sub>s\" 50) \n  where suffix_comparable_def[simp]: \"(suffix_comparable u v) \\<equiv> (rev u) \\<bowtie> (rev v)\""], ["", "definition nonempty_suffix (infixl \"\\<le>ns\" 60) where nonempty_suffix_def[simp]:  \"u \\<le>ns v \\<equiv> u \\<noteq> \\<epsilon> \\<and> u \\<le>s v\""], ["", "notation (latex output) nonempty_suffix  (\"\\<le>\\<^bsub>ns\\<^esub>\" 50)"], ["", "lemma nsI[intro]: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<le>s v \\<Longrightarrow> u \\<le>ns v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<noteq> \\<epsilon>; u \\<le>s v\\<rbrakk>\n    \\<Longrightarrow> u \\<le>ns v", "by auto"], ["", "lemma nsI'[intro]: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> (\\<exists> z. z \\<cdot> u = v) \\<Longrightarrow> u \\<le>ns v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<noteq> \\<epsilon>; \\<exists>z. z \\<cdot> u = v\\<rbrakk>\n    \\<Longrightarrow> u \\<le>ns v", "by blast"], ["", "lemma nsD: \"u \\<le>ns v \\<Longrightarrow> u \\<le>s v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>ns v \\<Longrightarrow> u \\<le>s v", "by simp"], ["", "lemma nsD': \"u \\<le>ns v \\<Longrightarrow> u \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>ns v \\<Longrightarrow> u \\<noteq> \\<epsilon>", "by simp"], ["", "subsection \\<open>Factor\\<close>"], ["", "text\\<open>A @{term sublist} of some word is in Combinatorics of Words called a factor.\nWe adopt a common shorthand notation for the property of being a factor, strict factor and nonempty factor (the latter we also define).\\<close>"], ["", "notation sublist (infixl \"\\<le>f\" 60)"], ["", "notation (latex output) sublist (\"\\<le>\\<^sub>f\")"], ["", "lemmas factor_def[simp] = sublist_def"], ["", "notation strict_sublist (infixl \"<f\" 60)"], ["", "notation (latex output) strict_sublist (\"<\\<^bsub>f\\<^esub>\")"], ["", "lemmas strict_factor_def[simp] = strict_sublist_def"], ["", "definition nonempty_factor (infixl \"\\<le>nf\" 60) where nonempty_factor_def[simp]:  \"u \\<le>nf v \\<equiv> u \\<noteq> \\<epsilon> \\<and> (\\<exists> p s. p\\<cdot>u\\<cdot>s = v)\""], ["", "notation (latex output) nonempty_factor (\"\\<le>\\<^bsub>nf\\<^esub>\")"], ["", "lemma facI: \"u \\<le>f p\\<cdot>u\\<cdot>s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>f p \\<cdot> u \\<cdot> s", "using sublist_appendI"], ["proof (prove)\nusing this:\n  ?xs \\<le>f ?ps \\<cdot> ?xs \\<cdot> ?ss\n\ngoal (1 subgoal):\n 1. u \\<le>f p \\<cdot> u \\<cdot> s", "."], ["", "lemma facI': \"a \\<cdot> u \\<cdot> b = w \\<Longrightarrow> u \\<le>f w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<cdot> u \\<cdot> b = w \\<Longrightarrow> u \\<le>f w", "by auto"], ["", "lemma facE[elim]: assumes \"u \\<le>f v\" \n  obtains p s where \"v = p \\<cdot> u \\<cdot> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p s.\n        v = p \\<cdot> u \\<cdot> s \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  u \\<le>f v\n\ngoal (1 subgoal):\n 1. (\\<And>p s.\n        v = p \\<cdot> u \\<cdot> s \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding factor_def"], ["proof (prove)\nusing this:\n  \\<exists>ps ss. v = ps \\<cdot> u \\<cdot> ss\n\ngoal (1 subgoal):\n 1. (\\<And>p s.\n        v = p \\<cdot> u \\<cdot> s \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma facE'[elim]: assumes \"u \\<le>f v\" \n  obtains p s where \"p \\<cdot> u \\<cdot> s = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p s.\n        p \\<cdot> u \\<cdot> s = v \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  u \\<le>f v\n\ngoal (1 subgoal):\n 1. (\\<And>p s.\n        p \\<cdot> u \\<cdot> s = v \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding factor_def"], ["proof (prove)\nusing this:\n  \\<exists>ps ss. v = ps \\<cdot> u \\<cdot> ss\n\ngoal (1 subgoal):\n 1. (\\<And>p s.\n        p \\<cdot> u \\<cdot> s = v \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "section \"Various elementary lemmas\""], ["", "lemmas concat_morph = sym[OF concat_append]"], ["", "lemmas cancel = same_append_eq and\n    cancel_right = append_same_eq"], ["", "lemma bij_lists: \"bij_betw f X Y \\<Longrightarrow> bij_betw (map f) (lists X) (lists Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw f X Y \\<Longrightarrow> bij_betw (map f) (lists X) (lists Y)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. bij_betw f X Y \\<Longrightarrow> bij_betw (map f) (lists X) (lists Y)", "assume \"bij_betw f X Y\""], ["proof (state)\nthis:\n  bij_betw f X Y\n\ngoal (1 subgoal):\n 1. bij_betw f X Y \\<Longrightarrow> bij_betw (map f) (lists X) (lists Y)", "hence \"inj_on f X\""], ["proof (prove)\nusing this:\n  bij_betw f X Y\n\ngoal (1 subgoal):\n 1. inj_on f X", "by (simp add: bij_betw_def)"], ["proof (state)\nthis:\n  inj_on f X\n\ngoal (1 subgoal):\n 1. bij_betw f X Y \\<Longrightarrow> bij_betw (map f) (lists X) (lists Y)", "have \"\\<And> x y. x \\<in> lists X \\<Longrightarrow> y \\<in> lists X \\<Longrightarrow> (set x \\<union> set y) \\<subseteq> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> lists X; y \\<in> lists X\\<rbrakk>\n       \\<Longrightarrow> set x \\<union> set y \\<subseteq> X", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> lists X; ?y \\<in> lists X\\<rbrakk>\n  \\<Longrightarrow> set ?x \\<union> set ?y \\<subseteq> X\n\ngoal (1 subgoal):\n 1. bij_betw f X Y \\<Longrightarrow> bij_betw (map f) (lists X) (lists Y)", "hence \"\\<And> x y. x \\<in> lists X \\<Longrightarrow> y \\<in> lists X \\<Longrightarrow> inj_on f (set x \\<union> set y)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> lists X; ?y \\<in> lists X\\<rbrakk>\n  \\<Longrightarrow> set ?x \\<union> set ?y \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> lists X; y \\<in> lists X\\<rbrakk>\n       \\<Longrightarrow> inj_on f (set x \\<union> set y)", "using subset_inj_on[OF \\<open>inj_on f X\\<close>]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> lists X; ?y \\<in> lists X\\<rbrakk>\n  \\<Longrightarrow> set ?x \\<union> set ?y \\<subseteq> X\n  ?A \\<subseteq> X \\<Longrightarrow> inj_on f ?A\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> lists X; y \\<in> lists X\\<rbrakk>\n       \\<Longrightarrow> inj_on f (set x \\<union> set y)", "by meson"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> lists X; ?y \\<in> lists X\\<rbrakk>\n  \\<Longrightarrow> inj_on f (set ?x \\<union> set ?y)\n\ngoal (1 subgoal):\n 1. bij_betw f X Y \\<Longrightarrow> bij_betw (map f) (lists X) (lists Y)", "hence \"\\<And> x y. x \\<in> lists X \\<Longrightarrow> y \\<in> lists X \\<Longrightarrow> map f x = map f y \\<longleftrightarrow> x  = y\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> lists X; ?y \\<in> lists X\\<rbrakk>\n  \\<Longrightarrow> inj_on f (set ?x \\<union> set ?y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> lists X; y \\<in> lists X\\<rbrakk>\n       \\<Longrightarrow> (map f x = map f y) = (x = y)", "by (simp add: inj_on_map_eq_map)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> lists X; ?y \\<in> lists X\\<rbrakk>\n  \\<Longrightarrow> (map f ?x = map f ?y) = (?x = ?y)\n\ngoal (1 subgoal):\n 1. bij_betw f X Y \\<Longrightarrow> bij_betw (map f) (lists X) (lists Y)", "hence \"inj_on (map f) (lists X)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> lists X; ?y \\<in> lists X\\<rbrakk>\n  \\<Longrightarrow> (map f ?x = map f ?y) = (?x = ?y)\n\ngoal (1 subgoal):\n 1. inj_on (map f) (lists X)", "by (simp add: inj_on_def)"], ["proof (state)\nthis:\n  inj_on (map f) (lists X)\n\ngoal (1 subgoal):\n 1. bij_betw f X Y \\<Longrightarrow> bij_betw (map f) (lists X) (lists Y)", "thus ?thesis"], ["proof (prove)\nusing this:\n  inj_on (map f) (lists X)\n\ngoal (1 subgoal):\n 1. bij_betw (map f) (lists X) (lists Y)", "using  \\<open>bij_betw f X Y\\<close> bij_betw_def lists_image"], ["proof (prove)\nusing this:\n  inj_on (map f) (lists X)\n  bij_betw f X Y\n  bij_betw ?f ?A ?B = (inj_on ?f ?A \\<and> ?f ` ?A = ?B)\n  lists (?f ` ?A) = map ?f ` lists ?A\n\ngoal (1 subgoal):\n 1. bij_betw (map f) (lists X) (lists Y)", "by metis"], ["proof (state)\nthis:\n  bij_betw (map f) (lists X) (lists Y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma concat_sing': \"concat [r] = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concat [r] = r", "by simp"], ["", "lemma concat_sing:  \"s = [hd s] \\<Longrightarrow> concat s = hd s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s = [hd s] \\<Longrightarrow> concat s = hd s", "using concat_sing'[of \"hd s\"]"], ["proof (prove)\nusing this:\n  concat [hd s] = hd s\n\ngoal (1 subgoal):\n 1. s = [hd s] \\<Longrightarrow> concat s = hd s", "by auto"], ["", "lemma rev_sing: \"rev [x] = [x]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev [x] = [x]", "by simp"], ["", "lemma hd_word: \"a#ws = [a] \\<cdot> ws\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a # ws = [a] \\<cdot> ws", "by simp"], ["", "lemma hd_word': \"w \\<noteq> \\<epsilon> \\<Longrightarrow> [hd w] \\<cdot> tl w = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<noteq> \\<epsilon> \\<Longrightarrow> [hd w] \\<cdot> tl w = w", "by simp"], ["", "lemma hd_pref: \"w \\<noteq> \\<epsilon> \\<Longrightarrow> [hd w] \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<noteq> \\<epsilon> \\<Longrightarrow> [hd w] \\<le>p w", "using hd_word'"], ["proof (prove)\nusing this:\n  ?w \\<noteq> \\<epsilon> \\<Longrightarrow> [hd ?w] \\<cdot> tl ?w = ?w\n\ngoal (1 subgoal):\n 1. w \\<noteq> \\<epsilon> \\<Longrightarrow> [hd w] \\<le>p w", "by blast"], ["", "lemma add_nth: assumes \"n < \\<^bold>|w\\<^bold>|\" shows \"(take n w) \\<cdot> [w!n] \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take n w \\<cdot> [w ! n] \\<le>p w", "using take_is_prefix[of \"Suc n\" w, unfolded take_Suc_conv_app_nth[OF assms]]"], ["proof (prove)\nusing this:\n  take n w \\<cdot> [w ! n] \\<le>p w\n\ngoal (1 subgoal):\n 1. take n w \\<cdot> [w ! n] \\<le>p w", "."], ["", "lemma hd_pref': \"w \\<noteq> \\<epsilon> \\<Longrightarrow> [w!0] \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<noteq> \\<epsilon> \\<Longrightarrow> [w ! 0] \\<le>p w", "using add_nth"], ["proof (prove)\nusing this:\n  ?n < \\<^bold>|?w\\<^bold>| \\<Longrightarrow>\n  take ?n ?w \\<cdot> [?w ! ?n] \\<le>p ?w\n\ngoal (1 subgoal):\n 1. w \\<noteq> \\<epsilon> \\<Longrightarrow> [w ! 0] \\<le>p w", "by fastforce"], ["", "lemma sub_lists_mono: \"A \\<subseteq> B \\<Longrightarrow> x \\<in> lists A \\<Longrightarrow> x \\<in> lists B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B; x \\<in> lists A\\<rbrakk>\n    \\<Longrightarrow> x \\<in> lists B", "by auto"], ["", "lemma lists_hd: \"us \\<noteq> \\<epsilon> \\<Longrightarrow> us \\<in> lists Q \\<Longrightarrow> hd us \\<in> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>us \\<noteq> \\<epsilon>; us \\<in> lists Q\\<rbrakk>\n    \\<Longrightarrow> hd us \\<in> Q", "by fastforce"], ["", "lemma replicate_in_lists: \"replicate k z \\<in> lists {z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. replicate k z \\<in> lists {z}", "by (induction k) auto"], ["", "lemma tl_lists: assumes \"us \\<in> lists A\" shows \"tl us \\<in> lists A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tl us \\<in> lists A", "using suffix_lists[OF suffix_tl assms]"], ["proof (prove)\nusing this:\n  tl us \\<in> lists A\n\ngoal (1 subgoal):\n 1. tl us \\<in> lists A", "."], ["", "lemma long_list_tl: assumes \"1 < \\<^bold>|us\\<^bold>|\" shows \"tl us \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tl us \\<noteq> \\<epsilon>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. tl us = \\<epsilon> \\<Longrightarrow> False", "assume \"tl us = \\<epsilon>\""], ["proof (state)\nthis:\n  tl us = \\<epsilon>\n\ngoal (1 subgoal):\n 1. tl us = \\<epsilon> \\<Longrightarrow> False", "from assms"], ["proof (chain)\npicking this:\n  1 < \\<^bold>|us\\<^bold>|", "have \"us \\<noteq> \\<epsilon>\" and \"\\<^bold>|us\\<^bold>| = Suc \\<^bold>|tl us\\<^bold>|\" and \"\\<^bold>|us\\<^bold>| \\<noteq> Suc 0\""], ["proof (prove)\nusing this:\n  1 < \\<^bold>|us\\<^bold>|\n\ngoal (1 subgoal):\n 1. us \\<noteq> \\<epsilon> &&&\n    \\<^bold>|us\\<^bold>| = Suc \\<^bold>|tl us\\<^bold>| &&&\n    \\<^bold>|us\\<^bold>| \\<noteq> Suc 0", "by auto"], ["proof (state)\nthis:\n  us \\<noteq> \\<epsilon>\n  \\<^bold>|us\\<^bold>| = Suc \\<^bold>|tl us\\<^bold>|\n  \\<^bold>|us\\<^bold>| \\<noteq> Suc 0\n\ngoal (1 subgoal):\n 1. tl us = \\<epsilon> \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  us \\<noteq> \\<epsilon>\n  \\<^bold>|us\\<^bold>| = Suc \\<^bold>|tl us\\<^bold>|\n  \\<^bold>|us\\<^bold>| \\<noteq> Suc 0\n\ngoal (1 subgoal):\n 1. False", "using \\<open>tl us = \\<epsilon>\\<close>"], ["proof (prove)\nusing this:\n  us \\<noteq> \\<epsilon>\n  \\<^bold>|us\\<^bold>| = Suc \\<^bold>|tl us\\<^bold>|\n  \\<^bold>|us\\<^bold>| \\<noteq> Suc 0\n  tl us = \\<epsilon>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tl_set: \"x \\<in> set (tl a) \\<Longrightarrow> x \\<in> set a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set (tl a) \\<Longrightarrow> x \\<in> set a", "using list.sel(2) list.set_sel(2)"], ["proof (prove)\nusing this:\n  tl \\<epsilon> = \\<epsilon>\n  \\<lbrakk>?a \\<noteq> \\<epsilon>; ?x \\<in> set (tl ?a)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> set ?a\n\ngoal (1 subgoal):\n 1. x \\<in> set (tl a) \\<Longrightarrow> x \\<in> set a", "by metis"], ["", "lemma drop_take_inv: \"n \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> drop n (take n u \\<cdot> w) = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow>\n    drop n (take n u \\<cdot> w) = w", "by simp"], ["", "lemma split_list_long: assumes \"1 < \\<^bold>|us\\<^bold>|\" and \"u \\<in> set us\" \n  obtains xs ys where \"us = xs \\<cdot> [u] \\<cdot> ys\" and \"xs\\<cdot>ys\\<noteq>\\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xs ys.\n        \\<lbrakk>us = xs \\<cdot> [u] \\<cdot> ys;\n         xs \\<cdot> ys \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>xs ys.\n        \\<lbrakk>us = xs \\<cdot> [u] \\<cdot> ys;\n         xs \\<cdot> ys \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain xs ys where \"us = xs \\<cdot> [u] \\<cdot> ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xs ys.\n        us = xs \\<cdot> [u] \\<cdot> ys \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using split_list_first[OF \\<open>u \\<in> set us\\<close>]"], ["proof (prove)\nusing this:\n  \\<exists>ys zs. us = ys \\<cdot> u # zs \\<and> u \\<notin> set ys\n\ngoal (1 subgoal):\n 1. (\\<And>xs ys.\n        us = xs \\<cdot> [u] \\<cdot> ys \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  us = xs \\<cdot> [u] \\<cdot> ys\n\ngoal (1 subgoal):\n 1. (\\<And>xs ys.\n        \\<lbrakk>us = xs \\<cdot> [u] \\<cdot> ys;\n         xs \\<cdot> ys \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"xs\\<cdot>ys\\<noteq>\\<epsilon>\""], ["proof (prove)\nusing this:\n  us = xs \\<cdot> [u] \\<cdot> ys\n\ngoal (1 subgoal):\n 1. xs \\<cdot> ys \\<noteq> \\<epsilon>", "using \\<open>1 < \\<^bold>|us\\<^bold>|\\<close>"], ["proof (prove)\nusing this:\n  us = xs \\<cdot> [u] \\<cdot> ys\n  1 < \\<^bold>|us\\<^bold>|\n\ngoal (1 subgoal):\n 1. xs \\<cdot> ys \\<noteq> \\<epsilon>", "by auto"], ["proof (state)\nthis:\n  xs \\<cdot> ys \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. (\\<And>xs ys.\n        \\<lbrakk>us = xs \\<cdot> [u] \\<cdot> ys;\n         xs \\<cdot> ys \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from that[OF \\<open>us = xs \\<cdot> [u] \\<cdot> ys\\<close> this]"], ["proof (chain)\npicking this:\n  thesis", "show thesis"], ["proof (prove)\nusing this:\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma flatten_lists: \"G \\<subseteq> lists B \\<Longrightarrow> xs \\<in> lists G \\<Longrightarrow> concat xs \\<in> lists B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<subseteq> lists B; xs \\<in> lists G\\<rbrakk>\n    \\<Longrightarrow> concat xs \\<in> lists B", "proof (induct xs, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<lbrakk>G \\<subseteq> lists B; xs \\<in> lists G\\<rbrakk>\n                \\<Longrightarrow> concat xs \\<in> lists B;\n        G \\<subseteq> lists B; a # xs \\<in> lists G\\<rbrakk>\n       \\<Longrightarrow> concat (a # xs) \\<in> lists B", "case (Cons a xs)"], ["proof (state)\nthis:\n  \\<lbrakk>G \\<subseteq> lists B; xs \\<in> lists G\\<rbrakk>\n  \\<Longrightarrow> concat xs \\<in> lists B\n  G \\<subseteq> lists B\n  a # xs \\<in> lists G\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<lbrakk>G \\<subseteq> lists B; xs \\<in> lists G\\<rbrakk>\n                \\<Longrightarrow> concat xs \\<in> lists B;\n        G \\<subseteq> lists B; a # xs \\<in> lists G\\<rbrakk>\n       \\<Longrightarrow> concat (a # xs) \\<in> lists B", "hence \"concat xs \\<in> lists B\" and \"a \\<in> lists B\""], ["proof (prove)\nusing this:\n  \\<lbrakk>G \\<subseteq> lists B; xs \\<in> lists G\\<rbrakk>\n  \\<Longrightarrow> concat xs \\<in> lists B\n  G \\<subseteq> lists B\n  a # xs \\<in> lists G\n\ngoal (1 subgoal):\n 1. concat xs \\<in> lists B &&& a \\<in> lists B", "by auto"], ["proof (state)\nthis:\n  concat xs \\<in> lists B\n  a \\<in> lists B\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<lbrakk>G \\<subseteq> lists B; xs \\<in> lists G\\<rbrakk>\n                \\<Longrightarrow> concat xs \\<in> lists B;\n        G \\<subseteq> lists B; a # xs \\<in> lists G\\<rbrakk>\n       \\<Longrightarrow> concat (a # xs) \\<in> lists B", "thus ?case"], ["proof (prove)\nusing this:\n  concat xs \\<in> lists B\n  a \\<in> lists B\n\ngoal (1 subgoal):\n 1. concat (a # xs) \\<in> lists B", "by simp"], ["proof (state)\nthis:\n  concat (a # xs) \\<in> lists B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma concat_map_sing_ident: \"concat (map (\\<lambda> x. [x]) xs) = xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concat (map (\\<lambda>x. [x]) xs) = xs", "by auto"], ["", "lemma hd_concat_tl: assumes \"ws \\<noteq> \\<epsilon>\" shows \"hd ws \\<cdot> concat (tl ws) = concat ws\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd ws \\<cdot> concat (tl ws) = concat ws", "using concat.simps(2)[of \"hd ws\" \"tl ws\", unfolded list.collapse[OF \\<open>ws \\<noteq> \\<epsilon>\\<close>], symmetric]"], ["proof (prove)\nusing this:\n  hd ws \\<cdot> concat (tl ws) = concat ws\n\ngoal (1 subgoal):\n 1. hd ws \\<cdot> concat (tl ws) = concat ws", "."], ["", "lemma concat_butlast_last: assumes \"ws \\<noteq> \\<epsilon>\" shows \"concat (butlast ws) \\<cdot> last ws = concat ws\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concat (butlast ws) \\<cdot> last ws = concat ws", "using  concat_morph[of \"butlast ws\" \"[last ws]\", unfolded concat_sing' append_butlast_last_id[OF \\<open>ws \\<noteq> \\<epsilon>\\<close>]]"], ["proof (prove)\nusing this:\n  concat (butlast ws) \\<cdot> last ws = concat ws\n\ngoal (1 subgoal):\n 1. concat (butlast ws) \\<cdot> last ws = concat ws", "."], ["", "lemma concat_last_suf: \"ws \\<noteq> \\<epsilon> \\<Longrightarrow> last ws \\<le>s concat ws\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ws \\<noteq> \\<epsilon> \\<Longrightarrow> last ws \\<le>s concat ws", "using concat_butlast_last"], ["proof (prove)\nusing this:\n  ?ws \\<noteq> \\<epsilon> \\<Longrightarrow>\n  concat (butlast ?ws) \\<cdot> last ?ws = concat ?ws\n\ngoal (1 subgoal):\n 1. ws \\<noteq> \\<epsilon> \\<Longrightarrow> last ws \\<le>s concat ws", "by blast"], ["", "lemma concat_hd_pref: \"ws \\<noteq> \\<epsilon> \\<Longrightarrow> hd ws \\<le>p concat ws\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ws \\<noteq> \\<epsilon> \\<Longrightarrow> hd ws \\<le>p concat ws", "using hd_concat_tl"], ["proof (prove)\nusing this:\n  ?ws \\<noteq> \\<epsilon> \\<Longrightarrow>\n  hd ?ws \\<cdot> concat (tl ?ws) = concat ?ws\n\ngoal (1 subgoal):\n 1. ws \\<noteq> \\<epsilon> \\<Longrightarrow> hd ws \\<le>p concat ws", "by blast"], ["", "lemma set_nemp_concat_nemp: assumes \"ws \\<noteq> \\<epsilon>\" and \"\\<epsilon> \\<notin> set ws\" shows \"concat ws \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concat ws \\<noteq> \\<epsilon>", "using \\<open>\\<epsilon> \\<notin> set ws\\<close> last_in_set[OF \\<open>ws \\<noteq> \\<epsilon>\\<close>] concat_butlast_last[OF \\<open>ws \\<noteq> \\<epsilon>\\<close>]"], ["proof (prove)\nusing this:\n  \\<epsilon> \\<notin> set ws\n  last ws \\<in> set ws\n  concat (butlast ws) \\<cdot> last ws = concat ws\n\ngoal (1 subgoal):\n 1. concat ws \\<noteq> \\<epsilon>", "by fastforce"], ["", "lemmas takedrop = append_take_drop_id"], ["", "lemma comm_rev_iff: \"rev u \\<cdot> rev v = rev v \\<cdot> rev u \\<longleftrightarrow> u \\<cdot> v = v \\<cdot> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rev u \\<cdot> rev v = rev v \\<cdot> rev u) =\n    (u \\<cdot> v = v \\<cdot> u)", "unfolding rev_append[symmetric] rev_is_rev_conv eq_ac(1)[of \"u \\<cdot> v\"]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (v \\<cdot> u = u \\<cdot> v) = (v \\<cdot> u = u \\<cdot> v)", "by blast"], ["", "lemma rev_induct2:\n  \"\\<lbrakk> P [] [];\n  \\<And>x xs. P (xs\\<cdot>[x]) [];\n  \\<And>y ys. P [] (ys\\<cdot>[y]);\n  \\<And>x xs y ys. P xs ys  \\<Longrightarrow> P (xs\\<cdot>[x]) (ys\\<cdot>[y]) \\<rbrakk>\n \\<Longrightarrow> P xs ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<epsilon> \\<epsilon>;\n     \\<And>x xs. P (xs \\<cdot> [x]) \\<epsilon>;\n     \\<And>y ys. P \\<epsilon> (ys \\<cdot> [y]);\n     \\<And>x xs y ys.\n        P xs ys \\<Longrightarrow>\n        P (xs \\<cdot> [x]) (ys \\<cdot> [y])\\<rbrakk>\n    \\<Longrightarrow> P xs ys", "proof (induct xs arbitrary: ys rule: rev_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>P \\<epsilon> \\<epsilon>;\n        \\<And>x xs. P (xs \\<cdot> [x]) \\<epsilon>;\n        \\<And>y ys. P \\<epsilon> (ys \\<cdot> [y]);\n        \\<And>x xs y ys.\n           P xs ys \\<Longrightarrow>\n           P (xs \\<cdot> [x]) (ys \\<cdot> [y])\\<rbrakk>\n       \\<Longrightarrow> P \\<epsilon> x\n 2. \\<And>x xs xa.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>P \\<epsilon> \\<epsilon>;\n                    \\<And>x xs. P (xs \\<cdot> [x]) \\<epsilon>;\n                    \\<And>y ys. P \\<epsilon> (ys \\<cdot> [y]);\n                    \\<And>x xs y ys.\n                       P xs ys \\<Longrightarrow>\n                       P (xs \\<cdot> [x]) (ys \\<cdot> [y])\\<rbrakk>\n                   \\<Longrightarrow> P xs x;\n        P \\<epsilon> \\<epsilon>; \\<And>x xs. P (xs \\<cdot> [x]) \\<epsilon>;\n        \\<And>y ys. P \\<epsilon> (ys \\<cdot> [y]);\n        \\<And>x xs y ys.\n           P xs ys \\<Longrightarrow>\n           P (xs \\<cdot> [x]) (ys \\<cdot> [y])\\<rbrakk>\n       \\<Longrightarrow> P (xs \\<cdot> [x]) xa", "case Nil"], ["proof (state)\nthis:\n  P \\<epsilon> \\<epsilon>\n  P (?xs \\<cdot> [?x]) \\<epsilon>\n  P \\<epsilon> (?ys \\<cdot> [?y])\n  P ?xs ?ys \\<Longrightarrow> P (?xs \\<cdot> [?x]) (?ys \\<cdot> [?y])\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>P \\<epsilon> \\<epsilon>;\n        \\<And>x xs. P (xs \\<cdot> [x]) \\<epsilon>;\n        \\<And>y ys. P \\<epsilon> (ys \\<cdot> [y]);\n        \\<And>x xs y ys.\n           P xs ys \\<Longrightarrow>\n           P (xs \\<cdot> [x]) (ys \\<cdot> [y])\\<rbrakk>\n       \\<Longrightarrow> P \\<epsilon> x\n 2. \\<And>x xs xa.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>P \\<epsilon> \\<epsilon>;\n                    \\<And>x xs. P (xs \\<cdot> [x]) \\<epsilon>;\n                    \\<And>y ys. P \\<epsilon> (ys \\<cdot> [y]);\n                    \\<And>x xs y ys.\n                       P xs ys \\<Longrightarrow>\n                       P (xs \\<cdot> [x]) (ys \\<cdot> [y])\\<rbrakk>\n                   \\<Longrightarrow> P xs x;\n        P \\<epsilon> \\<epsilon>; \\<And>x xs. P (xs \\<cdot> [x]) \\<epsilon>;\n        \\<And>y ys. P \\<epsilon> (ys \\<cdot> [y]);\n        \\<And>x xs y ys.\n           P xs ys \\<Longrightarrow>\n           P (xs \\<cdot> [x]) (ys \\<cdot> [y])\\<rbrakk>\n       \\<Longrightarrow> P (xs \\<cdot> [x]) xa", "then"], ["proof (chain)\npicking this:\n  P \\<epsilon> \\<epsilon>\n  P (?xs \\<cdot> [?x]) \\<epsilon>\n  P \\<epsilon> (?ys \\<cdot> [?y])\n  P ?xs ?ys \\<Longrightarrow> P (?xs \\<cdot> [?x]) (?ys \\<cdot> [?y])", "show ?case"], ["proof (prove)\nusing this:\n  P \\<epsilon> \\<epsilon>\n  P (?xs \\<cdot> [?x]) \\<epsilon>\n  P \\<epsilon> (?ys \\<cdot> [?y])\n  P ?xs ?ys \\<Longrightarrow> P (?xs \\<cdot> [?x]) (?ys \\<cdot> [?y])\n\ngoal (1 subgoal):\n 1. P \\<epsilon> x", "using rev_induct[of \"P \\<epsilon>\"]"], ["proof (prove)\nusing this:\n  P \\<epsilon> \\<epsilon>\n  P (?xs \\<cdot> [?x]) \\<epsilon>\n  P \\<epsilon> (?ys \\<cdot> [?y])\n  P ?xs ?ys \\<Longrightarrow> P (?xs \\<cdot> [?x]) (?ys \\<cdot> [?y])\n  \\<lbrakk>P \\<epsilon> \\<epsilon>;\n   \\<And>x xs.\n      P \\<epsilon> xs \\<Longrightarrow>\n      P \\<epsilon> (xs \\<cdot> [x])\\<rbrakk>\n  \\<Longrightarrow> P \\<epsilon> ?xs\n\ngoal (1 subgoal):\n 1. P \\<epsilon> x", "by presburger"], ["proof (state)\nthis:\n  P \\<epsilon> x\n\ngoal (1 subgoal):\n 1. \\<And>x xs xa.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>P \\<epsilon> \\<epsilon>;\n                    \\<And>x xs. P (xs \\<cdot> [x]) \\<epsilon>;\n                    \\<And>y ys. P \\<epsilon> (ys \\<cdot> [y]);\n                    \\<And>x xs y ys.\n                       P xs ys \\<Longrightarrow>\n                       P (xs \\<cdot> [x]) (ys \\<cdot> [y])\\<rbrakk>\n                   \\<Longrightarrow> P xs x;\n        P \\<epsilon> \\<epsilon>; \\<And>x xs. P (xs \\<cdot> [x]) \\<epsilon>;\n        \\<And>y ys. P \\<epsilon> (ys \\<cdot> [y]);\n        \\<And>x xs y ys.\n           P xs ys \\<Longrightarrow>\n           P (xs \\<cdot> [x]) (ys \\<cdot> [y])\\<rbrakk>\n       \\<Longrightarrow> P (xs \\<cdot> [x]) xa", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xs xa.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>P \\<epsilon> \\<epsilon>;\n                    \\<And>x xs. P (xs \\<cdot> [x]) \\<epsilon>;\n                    \\<And>y ys. P \\<epsilon> (ys \\<cdot> [y]);\n                    \\<And>x xs y ys.\n                       P xs ys \\<Longrightarrow>\n                       P (xs \\<cdot> [x]) (ys \\<cdot> [y])\\<rbrakk>\n                   \\<Longrightarrow> P xs x;\n        P \\<epsilon> \\<epsilon>; \\<And>x xs. P (xs \\<cdot> [x]) \\<epsilon>;\n        \\<And>y ys. P \\<epsilon> (ys \\<cdot> [y]);\n        \\<And>x xs y ys.\n           P xs ys \\<Longrightarrow>\n           P (xs \\<cdot> [x]) (ys \\<cdot> [y])\\<rbrakk>\n       \\<Longrightarrow> P (xs \\<cdot> [x]) xa", "case (snoc x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>P \\<epsilon> \\<epsilon>;\n   \\<And>x xs. P (xs \\<cdot> [x]) \\<epsilon>;\n   \\<And>y ys. P \\<epsilon> (ys \\<cdot> [y]);\n   \\<And>x xs y ys.\n      P xs ys \\<Longrightarrow> P (xs \\<cdot> [x]) (ys \\<cdot> [y])\\<rbrakk>\n  \\<Longrightarrow> P xs ?x\n  P \\<epsilon> \\<epsilon>\n  P (?xs \\<cdot> [?x]) \\<epsilon>\n  P \\<epsilon> (?ys \\<cdot> [?y])\n  P ?xs ?ys \\<Longrightarrow> P (?xs \\<cdot> [?x]) (?ys \\<cdot> [?y])\n\ngoal (1 subgoal):\n 1. \\<And>x xs xa.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>P \\<epsilon> \\<epsilon>;\n                    \\<And>x xs. P (xs \\<cdot> [x]) \\<epsilon>;\n                    \\<And>y ys. P \\<epsilon> (ys \\<cdot> [y]);\n                    \\<And>x xs y ys.\n                       P xs ys \\<Longrightarrow>\n                       P (xs \\<cdot> [x]) (ys \\<cdot> [y])\\<rbrakk>\n                   \\<Longrightarrow> P xs x;\n        P \\<epsilon> \\<epsilon>; \\<And>x xs. P (xs \\<cdot> [x]) \\<epsilon>;\n        \\<And>y ys. P \\<epsilon> (ys \\<cdot> [y]);\n        \\<And>x xs y ys.\n           P xs ys \\<Longrightarrow>\n           P (xs \\<cdot> [x]) (ys \\<cdot> [y])\\<rbrakk>\n       \\<Longrightarrow> P (xs \\<cdot> [x]) xa", "hence \"P xs ys'\" for ys'"], ["proof (prove)\nusing this:\n  \\<lbrakk>P \\<epsilon> \\<epsilon>;\n   \\<And>x xs. P (xs \\<cdot> [x]) \\<epsilon>;\n   \\<And>y ys. P \\<epsilon> (ys \\<cdot> [y]);\n   \\<And>x xs y ys.\n      P xs ys \\<Longrightarrow> P (xs \\<cdot> [x]) (ys \\<cdot> [y])\\<rbrakk>\n  \\<Longrightarrow> P xs ?x\n  P \\<epsilon> \\<epsilon>\n  P (?xs \\<cdot> [?x]) \\<epsilon>\n  P \\<epsilon> (?ys \\<cdot> [?y])\n  P ?xs ?ys \\<Longrightarrow> P (?xs \\<cdot> [?x]) (?ys \\<cdot> [?y])\n\ngoal (1 subgoal):\n 1. P xs ys'", "by simp"], ["proof (state)\nthis:\n  P xs ?ys'\n\ngoal (1 subgoal):\n 1. \\<And>x xs xa.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>P \\<epsilon> \\<epsilon>;\n                    \\<And>x xs. P (xs \\<cdot> [x]) \\<epsilon>;\n                    \\<And>y ys. P \\<epsilon> (ys \\<cdot> [y]);\n                    \\<And>x xs y ys.\n                       P xs ys \\<Longrightarrow>\n                       P (xs \\<cdot> [x]) (ys \\<cdot> [y])\\<rbrakk>\n                   \\<Longrightarrow> P xs x;\n        P \\<epsilon> \\<epsilon>; \\<And>x xs. P (xs \\<cdot> [x]) \\<epsilon>;\n        \\<And>y ys. P \\<epsilon> (ys \\<cdot> [y]);\n        \\<And>x xs y ys.\n           P xs ys \\<Longrightarrow>\n           P (xs \\<cdot> [x]) (ys \\<cdot> [y])\\<rbrakk>\n       \\<Longrightarrow> P (xs \\<cdot> [x]) xa", "then"], ["proof (chain)\npicking this:\n  P xs ?ys'", "show ?case"], ["proof (prove)\nusing this:\n  P xs ?ys'\n\ngoal (1 subgoal):\n 1. P (xs \\<cdot> [x__]) x", "by (simp add: rev_induct snoc.prems(2) snoc.prems(4))"], ["proof (state)\nthis:\n  P (xs \\<cdot> [x__]) x\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Orderings on lists: prefix, suffix, factor\\<close>"], ["", "lemmas self_pref = prefix_order.order.refl"], ["", "lemmas pref_antisym = prefix_order.order.antisym"], ["", "lemmas pref_trans = prefix_order.order.trans"], ["", "lemmas suf_trans = suffix_order.order.trans"], ["", "subsection \"On the empty word\""], ["", "lemma nemp_elem_setI[intro]: \"u \\<in> S \\<Longrightarrow> u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<in> S\\<^sub>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> S; u \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> u \\<in> S\\<^sub>+", "by simp"], ["", "lemma nel_drop_emp: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<in> S \\<Longrightarrow> u \\<in> S\\<^sub>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<noteq> \\<epsilon>; u \\<in> S\\<rbrakk>\n    \\<Longrightarrow> u \\<in> S\\<^sub>+", "by simp"], ["", "lemma drop_emp_nel: assumes \"u \\<in> S\\<^sub>+\" shows \"u \\<noteq> \\<epsilon>\" and \"u \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> &&& u \\<in> S", "using assms"], ["proof (prove)\nusing this:\n  u \\<in> S\\<^sub>+\n\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> &&& u \\<in> S", "by simp+"], ["", "lemma emp_concat_emp: \"us \\<in> lists S\\<^sub>+ \\<Longrightarrow> concat us = \\<epsilon> \\<Longrightarrow> us = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>us \\<in> lists S\\<^sub>+; concat us = \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> us = \\<epsilon>", "using DiffD2"], ["proof (prove)\nusing this:\n  \\<lbrakk>?c \\<in> ?A - ?B; ?c \\<in> ?B\\<rbrakk> \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>us \\<in> lists S\\<^sub>+; concat us = \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> us = \\<epsilon>", "by auto"], ["", "lemma take_nemp: \"w \\<noteq> \\<epsilon> \\<Longrightarrow> n \\<noteq> 0 \\<Longrightarrow> take n w \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<noteq> \\<epsilon>; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> take n w \\<noteq> \\<epsilon>", "by simp"], ["", "lemma pref_nemp [intro]: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<cdot> v \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<cdot> v \\<noteq> \\<epsilon>", "unfolding append_is_Nil_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow>\n    \\<not> (u = \\<epsilon> \\<and> v = \\<epsilon>)", "by simp"], ["", "lemma suf_nemp [intro]: \"v \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<cdot> v \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<cdot> v \\<noteq> \\<epsilon>", "unfolding append_is_Nil_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<noteq> \\<epsilon> \\<Longrightarrow>\n    \\<not> (u = \\<epsilon> \\<and> v = \\<epsilon>)", "by simp"], ["", "section \"Length and its properties\""], ["", "lemma lenarg: \"u = v \\<Longrightarrow> \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u = v \\<Longrightarrow> \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|", "by simp"], ["", "lemma npos_len: \"\\<^bold>|u\\<^bold>| \\<le> 0 \\<Longrightarrow> u = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|u\\<^bold>| \\<le> 0 \\<Longrightarrow> u = \\<epsilon>", "by simp"], ["", "lemma nemp_pos_len: \"r \\<noteq> \\<epsilon> \\<Longrightarrow> 1 \\<le> \\<^bold>|r\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<noteq> \\<epsilon> \\<Longrightarrow> 1 \\<le> \\<^bold>|r\\<^bold>|", "by (simp add: leI)"], ["", "lemma swap_len: \"\\<^bold>|u \\<cdot> v\\<^bold>| = \\<^bold>|v \\<cdot> u\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|u \\<cdot> v\\<^bold>| = \\<^bold>|v \\<cdot> u\\<^bold>|", "by simp"], ["", "lemma len_after_drop: \"p + q \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow>  q \\<le> \\<^bold>|drop p w\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p + q \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n    q \\<le> \\<^bold>|drop p w\\<^bold>|", "by simp"], ["", "lemma short_take_append: \"n \\<le> \\<^bold>|u\\<^bold>|\\<Longrightarrow> take n (u \\<cdot> v) = take n u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow>\n    take n (u \\<cdot> v) = take n u", "by simp"], ["", "lemma sing_word: \"\\<^bold>|us\\<^bold>| = 1 \\<Longrightarrow> [hd us] = us\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|us\\<^bold>| = 1 \\<Longrightarrow> [hd us] = us", "by (cases us) simp+"], ["", "lemma sing_word_concat: assumes \"\\<^bold>|us\\<^bold>| = 1\" shows \"[concat us] = us\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [concat us] = us", "by (simp add: assms concat_sing sing_word)"], ["", "lemma nonsing_concat_len: \"\\<^bold>|us\\<^bold>| \\<noteq> 1 \\<Longrightarrow> concat us \\<noteq> \\<epsilon> \\<Longrightarrow> 1 < \\<^bold>|us\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>|us\\<^bold>| \\<noteq> 1;\n     concat us \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> 1 < \\<^bold>|us\\<^bold>|", "using nat_neq_iff"], ["proof (prove)\nusing this:\n  (?m \\<noteq> ?n) = (?m < ?n \\<or> ?n < ?m)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>|us\\<^bold>| \\<noteq> 1;\n     concat us \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> 1 < \\<^bold>|us\\<^bold>|", "by fastforce"], ["", "lemma sing_len: \"\\<^bold>|[a]\\<^bold>| = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|[a]\\<^bold>| = 1", "by simp"], ["", "lemma pref_len': \"\\<^bold>|u\\<^bold>| \\<le> \\<^bold>|u \\<cdot> z\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|u \\<cdot> z\\<^bold>|", "by auto"], ["", "lemma suf_len': \"\\<^bold>|u\\<^bold>| \\<le> \\<^bold>|z \\<cdot> u\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|z \\<cdot> u\\<^bold>|", "by auto"], ["", "lemma fac_len: \"u \\<le>f v \\<Longrightarrow> \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|v\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>f v \\<Longrightarrow>\n    \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|v\\<^bold>|", "by auto"], ["", "lemma fac_len': \"\\<^bold>|w\\<^bold>| \\<le> \\<^bold>|u \\<cdot> w \\<cdot> v\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|w\\<^bold>| \\<le> \\<^bold>|u \\<cdot> w \\<cdot> v\\<^bold>|", "by simp"], ["", "lemma fac_len_eq: \"u \\<le>f v \\<Longrightarrow> \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>| \\<Longrightarrow> u = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>f v; \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> u = v", "unfolding factor_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>ps ss. v = ps \\<cdot> u \\<cdot> ss;\n     \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> u = v", "using length_append npos_len"], ["proof (prove)\nusing this:\n  \\<^bold>|?xs \\<cdot> ?ys\\<^bold>| =\n  \\<^bold>|?xs\\<^bold>| + \\<^bold>|?ys\\<^bold>|\n  \\<^bold>|?u\\<^bold>| \\<le> 0 \\<Longrightarrow> ?u = \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>ps ss. v = ps \\<cdot> u \\<cdot> ss;\n     \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> u = v", "by fastforce"], ["", "lemma drop_len: \"\\<^bold>|u \\<cdot> w\\<^bold>| \\<le> \\<^bold>|u \\<cdot> v \\<cdot> w\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|u \\<cdot> w\\<^bold>|\n    \\<le> \\<^bold>|u \\<cdot> v \\<cdot> w\\<^bold>|", "by simp"], ["", "lemma drop_pref: \"drop \\<^bold>|u\\<^bold>| (u \\<cdot> w) = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. drop \\<^bold>|u\\<^bold>| (u \\<cdot> w) = w", "by simp"], ["", "lemma take_len: \"p \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow> \\<^bold>|take p w\\<^bold>| = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n    \\<^bold>|take p w\\<^bold>| = p", "using trans[OF length_take min_absorb2]"], ["proof (prove)\nusing this:\n  ?t \\<le> \\<^bold>|?xs2\\<^bold>| \\<Longrightarrow>\n  \\<^bold>|take ?t ?xs2\\<^bold>| = ?t\n\ngoal (1 subgoal):\n 1. p \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n    \\<^bold>|take p w\\<^bold>| = p", "."], ["", "lemma conj_len: \"p \\<cdot> x = x \\<cdot> s \\<Longrightarrow> \\<^bold>|p\\<^bold>| = \\<^bold>|s\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<cdot> x = x \\<cdot> s \\<Longrightarrow>\n    \\<^bold>|p\\<^bold>| = \\<^bold>|s\\<^bold>|", "using length_append[of p x] length_append[of x s] add.commute add_left_imp_eq"], ["proof (prove)\nusing this:\n  \\<^bold>|p \\<cdot> x\\<^bold>| = \\<^bold>|p\\<^bold>| + \\<^bold>|x\\<^bold>|\n  \\<^bold>|x \\<cdot> s\\<^bold>| = \\<^bold>|x\\<^bold>| + \\<^bold>|s\\<^bold>|\n  ?a + ?b = ?b + ?a\n  ?a + ?b = ?a + ?c \\<Longrightarrow> ?b = ?c\n\ngoal (1 subgoal):\n 1. p \\<cdot> x = x \\<cdot> s \\<Longrightarrow>\n    \\<^bold>|p\\<^bold>| = \\<^bold>|s\\<^bold>|", "by auto"], ["", "lemma take_nemp_len: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> r \\<noteq> \\<epsilon> \\<Longrightarrow> take \\<^bold>|r\\<^bold>| u \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<noteq> \\<epsilon>; r \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> take \\<^bold>|r\\<^bold>| u \\<noteq> \\<epsilon>", "by simp"], ["", "lemma nemp_len: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> \\<^bold>|u\\<^bold>| \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow> \\<^bold>|u\\<^bold>| \\<noteq> 0", "by simp"], ["", "lemma take_self: \"take \\<^bold>|w\\<^bold>| w = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take \\<^bold>|w\\<^bold>| w = w", "using take_all[of w \"\\<^bold>|w\\<^bold>|\", OF order.refl]"], ["proof (prove)\nusing this:\n  take \\<^bold>|w\\<^bold>| w = w\n\ngoal (1 subgoal):\n 1. take \\<^bold>|w\\<^bold>| w = w", "."], ["", "lemma len_le_concat: \"\\<epsilon> \\<notin>  set ws \\<Longrightarrow> \\<^bold>|ws\\<^bold>| \\<le> \\<^bold>|concat ws\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<epsilon> \\<notin> set ws \\<Longrightarrow>\n    \\<^bold>|ws\\<^bold>| \\<le> \\<^bold>|concat ws\\<^bold>|", "proof (induct ws, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a ws.\n       \\<lbrakk>\\<epsilon> \\<notin> set ws \\<Longrightarrow>\n                \\<^bold>|ws\\<^bold>| \\<le> \\<^bold>|concat ws\\<^bold>|;\n        \\<epsilon> \\<notin> set (a # ws)\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>|a # ws\\<^bold>|\n                         \\<le> \\<^bold>|concat (a # ws)\\<^bold>|", "case (Cons a ws)"], ["proof (state)\nthis:\n  \\<epsilon> \\<notin> set ws \\<Longrightarrow>\n  \\<^bold>|ws\\<^bold>| \\<le> \\<^bold>|concat ws\\<^bold>|\n  \\<epsilon> \\<notin> set (a # ws)\n\ngoal (1 subgoal):\n 1. \\<And>a ws.\n       \\<lbrakk>\\<epsilon> \\<notin> set ws \\<Longrightarrow>\n                \\<^bold>|ws\\<^bold>| \\<le> \\<^bold>|concat ws\\<^bold>|;\n        \\<epsilon> \\<notin> set (a # ws)\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>|a # ws\\<^bold>|\n                         \\<le> \\<^bold>|concat (a # ws)\\<^bold>|", "hence \"1 \\<le> \\<^bold>|a\\<^bold>|\""], ["proof (prove)\nusing this:\n  \\<epsilon> \\<notin> set ws \\<Longrightarrow>\n  \\<^bold>|ws\\<^bold>| \\<le> \\<^bold>|concat ws\\<^bold>|\n  \\<epsilon> \\<notin> set (a # ws)\n\ngoal (1 subgoal):\n 1. 1 \\<le> \\<^bold>|a\\<^bold>|", "using list.set_intros(1)[of a ws] nemp_pos_len[of a]"], ["proof (prove)\nusing this:\n  \\<epsilon> \\<notin> set ws \\<Longrightarrow>\n  \\<^bold>|ws\\<^bold>| \\<le> \\<^bold>|concat ws\\<^bold>|\n  \\<epsilon> \\<notin> set (a # ws)\n  a \\<in> set (a # ws)\n  a \\<noteq> \\<epsilon> \\<Longrightarrow> 1 \\<le> \\<^bold>|a\\<^bold>|\n\ngoal (1 subgoal):\n 1. 1 \\<le> \\<^bold>|a\\<^bold>|", "by blast"], ["proof (state)\nthis:\n  1 \\<le> \\<^bold>|a\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<And>a ws.\n       \\<lbrakk>\\<epsilon> \\<notin> set ws \\<Longrightarrow>\n                \\<^bold>|ws\\<^bold>| \\<le> \\<^bold>|concat ws\\<^bold>|;\n        \\<epsilon> \\<notin> set (a # ws)\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>|a # ws\\<^bold>|\n                         \\<le> \\<^bold>|concat (a # ws)\\<^bold>|", "then"], ["proof (chain)\npicking this:\n  1 \\<le> \\<^bold>|a\\<^bold>|", "show ?case"], ["proof (prove)\nusing this:\n  1 \\<le> \\<^bold>|a\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<^bold>|a # ws\\<^bold>| \\<le> \\<^bold>|concat (a # ws)\\<^bold>|", "unfolding   concat.simps(2)"], ["proof (prove)\nusing this:\n  1 \\<le> \\<^bold>|a\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<^bold>|a # ws\\<^bold>| \\<le> \\<^bold>|a \\<cdot> concat ws\\<^bold>|", "unfolding  length_append hd_word[of a ws] sing_len"], ["proof (prove)\nusing this:\n  1 \\<le> \\<^bold>|a\\<^bold>|\n\ngoal (1 subgoal):\n 1. 1 + \\<^bold>|ws\\<^bold>|\n    \\<le> \\<^bold>|a\\<^bold>| + \\<^bold>|concat ws\\<^bold>|", "using Cons.hyps Cons.prems"], ["proof (prove)\nusing this:\n  1 \\<le> \\<^bold>|a\\<^bold>|\n  \\<epsilon> \\<notin> set ws \\<Longrightarrow>\n  \\<^bold>|ws\\<^bold>| \\<le> \\<^bold>|concat ws\\<^bold>|\n  \\<epsilon> \\<notin> set (a # ws)\n\ngoal (1 subgoal):\n 1. 1 + \\<^bold>|ws\\<^bold>|\n    \\<le> \\<^bold>|a\\<^bold>| + \\<^bold>|concat ws\\<^bold>|", "by simp"], ["proof (state)\nthis:\n  \\<^bold>|a # ws\\<^bold>| \\<le> \\<^bold>|concat (a # ws)\\<^bold>|\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma eq_len_iff: assumes eq: \"x \\<cdot> y = u \\<cdot> v\" shows \"\\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<longleftrightarrow> \\<^bold>|v\\<^bold>| \\<le> \\<^bold>|y\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|) =\n    (\\<^bold>|v\\<^bold>| \\<le> \\<^bold>|y\\<^bold>|)", "using lenarg[OF eq]"], ["proof (prove)\nusing this:\n  \\<^bold>|x \\<cdot> y\\<^bold>| = \\<^bold>|u \\<cdot> v\\<^bold>|\n\ngoal (1 subgoal):\n 1. (\\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|) =\n    (\\<^bold>|v\\<^bold>| \\<le> \\<^bold>|y\\<^bold>|)", "unfolding length_append"], ["proof (prove)\nusing this:\n  \\<^bold>|x\\<^bold>| + \\<^bold>|y\\<^bold>| =\n  \\<^bold>|u\\<^bold>| + \\<^bold>|v\\<^bold>|\n\ngoal (1 subgoal):\n 1. (\\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|) =\n    (\\<^bold>|v\\<^bold>| \\<le> \\<^bold>|y\\<^bold>|)", "by auto"], ["", "lemma eq_len_iff_less: assumes eq: \"x \\<cdot> y = u \\<cdot> v\" shows \"\\<^bold>|x\\<^bold>| < \\<^bold>|u\\<^bold>| \\<longleftrightarrow> \\<^bold>|v\\<^bold>| < \\<^bold>|y\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<^bold>|x\\<^bold>| < \\<^bold>|u\\<^bold>|) =\n    (\\<^bold>|v\\<^bold>| < \\<^bold>|y\\<^bold>|)", "using lenarg[OF eq]"], ["proof (prove)\nusing this:\n  \\<^bold>|x \\<cdot> y\\<^bold>| = \\<^bold>|u \\<cdot> v\\<^bold>|\n\ngoal (1 subgoal):\n 1. (\\<^bold>|x\\<^bold>| < \\<^bold>|u\\<^bold>|) =\n    (\\<^bold>|v\\<^bold>| < \\<^bold>|y\\<^bold>|)", "unfolding length_append"], ["proof (prove)\nusing this:\n  \\<^bold>|x\\<^bold>| + \\<^bold>|y\\<^bold>| =\n  \\<^bold>|u\\<^bold>| + \\<^bold>|v\\<^bold>|\n\ngoal (1 subgoal):\n 1. (\\<^bold>|x\\<^bold>| < \\<^bold>|u\\<^bold>|) =\n    (\\<^bold>|v\\<^bold>| < \\<^bold>|y\\<^bold>|)", "by auto"], ["", "section \"Prefix and prefix comparability properties\""], ["", "lemmas pref_emp = prefix_bot.bot.extremum_uniqueI"], ["", "lemma triv_pref: \"r \\<le>p r \\<cdot> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<le>p r \\<cdot> s", "using prefI[OF refl]"], ["proof (prove)\nusing this:\n  ?p \\<le>p ?p \\<cdot> ?s\n\ngoal (1 subgoal):\n 1. r \\<le>p r \\<cdot> s", "."], ["", "lemma triv_spref: \"s \\<noteq> \\<epsilon> \\<Longrightarrow> r <p r \\<cdot> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<noteq> \\<epsilon> \\<Longrightarrow> r <p r \\<cdot> s", "by simp"], ["", "lemma pref_cancel: \"z \\<cdot> u \\<le>p z \\<cdot> v \\<Longrightarrow> u \\<le>p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> u \\<le>p z \\<cdot> v \\<Longrightarrow> u \\<le>p v", "by simp"], ["", "lemma pref_cancel': \"u \\<le>p v \\<Longrightarrow> z \\<cdot> u \\<le>p z \\<cdot> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p v \\<Longrightarrow> z \\<cdot> u \\<le>p z \\<cdot> v", "by simp"], ["", "lemmas pref_cancel_conv = same_prefix_prefix"], ["", "lemmas pref_ext = prefix_prefix \\<comment> \\<open>provided by Sublist.thy\\<close>"], ["", "lemma spref_ext: \"r <p u \\<Longrightarrow> r <p u \\<cdot> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r <p u \\<Longrightarrow> r <p u \\<cdot> v", "by force"], ["", "lemma pref_ext_nemp: \"r \\<le>p u \\<Longrightarrow> v \\<noteq> \\<epsilon> \\<Longrightarrow> r <p u \\<cdot> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<le>p u; v \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> r <p u \\<cdot> v", "by auto"], ["", "lemma pref_take: \"p \\<le>p w \\<Longrightarrow> take \\<^bold>|p\\<^bold>| w = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<le>p w \\<Longrightarrow> take \\<^bold>|p\\<^bold>| w = p", "by auto"], ["", "lemma pref_take_conv: \"take (\\<^bold>|r\\<^bold>|) w = r \\<longleftrightarrow> r \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (take \\<^bold>|r\\<^bold>| w = r) = (r \\<le>p w)", "using pref_take[of r w] take_is_prefix[of \"\\<^bold>|r\\<^bold>|\" w]"], ["proof (prove)\nusing this:\n  r \\<le>p w \\<Longrightarrow> take \\<^bold>|r\\<^bold>| w = r\n  take \\<^bold>|r\\<^bold>| w \\<le>p w\n\ngoal (1 subgoal):\n 1. (take \\<^bold>|r\\<^bold>| w = r) = (r \\<le>p w)", "by argo"], ["", "lemma le_suf_drop: assumes \"i \\<le> j\" shows \"drop j w \\<le>s drop i w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. drop j w \\<le>s drop i w", "using suffix_drop[of \"j - i\" \"drop i w\", unfolded drop_drop le_add_diff_inverse2[OF \\<open>i \\<le> j\\<close>]]"], ["proof (prove)\nusing this:\n  drop j w \\<le>s drop i w\n\ngoal (1 subgoal):\n 1. drop j w \\<le>s drop i w", "."], ["", "lemma spref_take: \"p <p w \\<Longrightarrow> take \\<^bold>|p\\<^bold>| w = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p <p w \\<Longrightarrow> take \\<^bold>|p\\<^bold>| w = p", "by auto"], ["", "lemma pref_same_len: \"u \\<le>p v \\<Longrightarrow> \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>| \\<Longrightarrow> u = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p v; \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> u = v", "by auto"], ["", "lemma add_nth_pref: assumes \"u <p w\" shows \"u \\<cdot> [w!\\<^bold>|u\\<^bold>|] \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> [w ! \\<^bold>|u\\<^bold>|] \\<le>p w", "using add_nth[OF prefix_length_less[OF \\<open>u <p w\\<close>], unfolded spref_take[OF \\<open>u <p w\\<close>]]"], ["proof (prove)\nusing this:\n  u \\<cdot> [w ! \\<^bold>|u\\<^bold>|] \\<le>p w\n\ngoal (1 subgoal):\n 1. u \\<cdot> [w ! \\<^bold>|u\\<^bold>|] \\<le>p w", "."], ["", "lemma index_pref: \"\\<^bold>|u\\<^bold>| \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow> (\\<forall> i < \\<^bold>|u\\<^bold>|.  u!i = w!i) \\<Longrightarrow> u \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>|u\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|;\n     \\<forall>i<\\<^bold>|u\\<^bold>|. u ! i = w ! i\\<rbrakk>\n    \\<Longrightarrow> u \\<le>p w", "using trans[OF sym[OF take_all[OF order_refl]] nth_take_lemma[OF order_refl], of u w] \n    take_is_prefix[of \"\\<^bold>|u\\<^bold>|\" w]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<^bold>|u\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|;\n   \\<And>i. i < \\<^bold>|u\\<^bold>| \\<longrightarrow> u ! i = w ! i\\<rbrakk>\n  \\<Longrightarrow> u = take \\<^bold>|u\\<^bold>| w\n  take \\<^bold>|u\\<^bold>| w \\<le>p w\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>|u\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|;\n     \\<forall>i<\\<^bold>|u\\<^bold>|. u ! i = w ! i\\<rbrakk>\n    \\<Longrightarrow> u \\<le>p w", "by auto"], ["", "lemma pref_index: assumes \"u \\<le>p w\" \"i < \\<^bold>|u\\<^bold>|\" shows \"u!i = w!i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u ! i = w ! i", "using nth_take[OF \\<open>i < \\<^bold>|u\\<^bold>|\\<close>, of w, unfolded pref_take[OF \\<open>u \\<le>p w\\<close>]]"], ["proof (prove)\nusing this:\n  u ! i = w ! i\n\ngoal (1 subgoal):\n 1. u ! i = w ! i", "."], ["", "lemma pref_drop: \"u \\<le>p v \\<Longrightarrow> drop p u \\<le>p drop p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p v \\<Longrightarrow> drop p u \\<le>p drop p v", "using prefI[OF sym[OF drop_append]]"], ["proof (prove)\nusing this:\n  drop ?n2 ?xs2 \\<le>p drop ?n2 (?xs2 \\<cdot> ?ys2)\n\ngoal (1 subgoal):\n 1. u \\<le>p v \\<Longrightarrow> drop p u \\<le>p drop p v", "by auto"], ["", "subsection \"Prefix comparability\""], ["", "lemma pref_comp_sym[sym]: \"u \\<bowtie> v \\<Longrightarrow> v \\<bowtie> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<bowtie> v \\<Longrightarrow> v \\<bowtie> u", "by blast"], ["", "lemmas ruler_le = prefix_length_prefix and\n       ruler = prefix_same_cases and\n       ruler' = prefix_same_cases[folded prefix_comparable_def]"], ["", "lemma ruler_equal: \"u \\<le>p w \\<Longrightarrow> v \\<le>p w \\<Longrightarrow> \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>| \\<Longrightarrow> u = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p w; v \\<le>p w;\n     \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> u = v", "by auto"], ["", "lemma ruler_comp: \"u \\<le>p v \\<Longrightarrow> u' \\<le>p v' \\<Longrightarrow> v \\<bowtie> v' \\<Longrightarrow> u \\<bowtie> u'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p v; u' \\<le>p v'; v \\<bowtie> v'\\<rbrakk>\n    \\<Longrightarrow> u \\<bowtie> u'", "unfolding prefix_comparable_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p v; u' \\<le>p v';\n     v \\<le>p v' \\<or> v' \\<le>p v\\<rbrakk>\n    \\<Longrightarrow> u \\<le>p u' \\<or> u' \\<le>p u", "using disjE[OF _ ruler[OF pref_trans] ruler[OF _ pref_trans]]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?P \\<or> ?Q; ?P \\<Longrightarrow> ?xs\\<^sub>11 \\<le>p ?b5;\n   ?P \\<Longrightarrow> ?b5 \\<le>p ?ys4;\n   ?P \\<Longrightarrow> ?xs\\<^sub>21 \\<le>p ?ys4;\n   ?Q \\<Longrightarrow> ?xs\\<^sub>11 \\<le>p ?ys1;\n   ?Q \\<Longrightarrow> ?xs\\<^sub>21 \\<le>p ?b2;\n   ?Q \\<Longrightarrow> ?b2 \\<le>p ?ys1\\<rbrakk>\n  \\<Longrightarrow> ?xs\\<^sub>11 \\<le>p ?xs\\<^sub>21 \\<or>\n                    ?xs\\<^sub>21 \\<le>p ?xs\\<^sub>11\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p v; u' \\<le>p v';\n     v \\<le>p v' \\<or> v' \\<le>p v\\<rbrakk>\n    \\<Longrightarrow> u \\<le>p u' \\<or> u' \\<le>p u", "."], ["", "lemma ruler_pref: \"w \\<le>p v\\<cdot>z \\<Longrightarrow> w \\<bowtie> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<le>p v \\<cdot> z \\<Longrightarrow> w \\<bowtie> v", "unfolding prefix_comparable_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<le>p v \\<cdot> z \\<Longrightarrow> w \\<le>p v \\<or> v \\<le>p w", "using ruler"], ["proof (prove)\nusing this:\n  \\<lbrakk>?xs\\<^sub>1 \\<le>p ?ys; ?xs\\<^sub>2 \\<le>p ?ys\\<rbrakk>\n  \\<Longrightarrow> ?xs\\<^sub>1 \\<le>p ?xs\\<^sub>2 \\<or>\n                    ?xs\\<^sub>2 \\<le>p ?xs\\<^sub>1\n\ngoal (1 subgoal):\n 1. w \\<le>p v \\<cdot> z \\<Longrightarrow> w \\<le>p v \\<or> v \\<le>p w", "by blast"], ["", "lemma pref_prod_pref_short: \"u \\<le>p z \\<cdot> w \\<Longrightarrow> v \\<le>p w \\<Longrightarrow> \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|z \\<cdot> v\\<^bold>| \\<Longrightarrow> u \\<le>p z \\<cdot> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p z \\<cdot> w; v \\<le>p w;\n     \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|z \\<cdot> v\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> u \\<le>p z \\<cdot> v", "using ruler_le[OF _ pref_cancel']"], ["proof (prove)\nusing this:\n  \\<lbrakk>?ps \\<le>p ?z1 \\<cdot> ?v1; ?u1 \\<le>p ?v1;\n   \\<^bold>|?ps\\<^bold>| \\<le> \\<^bold>|?z1 \\<cdot> ?u1\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> ?ps \\<le>p ?z1 \\<cdot> ?u1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p z \\<cdot> w; v \\<le>p w;\n     \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|z \\<cdot> v\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> u \\<le>p z \\<cdot> v", "."], ["", "lemma pref_prod_pref: \"u \\<le>p z \\<cdot> w \\<Longrightarrow> u \\<le>p w \\<Longrightarrow>  u \\<le>p z \\<cdot> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p z \\<cdot> w; u \\<le>p w\\<rbrakk>\n    \\<Longrightarrow> u \\<le>p z \\<cdot> u", "using pref_prod_pref_short[OF _ _ suf_len']"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<le>p ?z \\<cdot> ?w; ?u \\<le>p ?w\\<rbrakk>\n  \\<Longrightarrow> ?u \\<le>p ?z \\<cdot> ?u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p z \\<cdot> w; u \\<le>p w\\<rbrakk>\n    \\<Longrightarrow> u \\<le>p z \\<cdot> u", "."], ["", "lemma pref_prod_pref': assumes \"u \\<le>p z\\<cdot>u\\<cdot>w\" shows \"u \\<le>p z\\<cdot>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p z \\<cdot> u", "using pref_prod_pref[of  u z \"u \\<cdot> w\", OF \\<open>u \\<le>p z\\<cdot>u\\<cdot>w\\<close> triv_pref]"], ["proof (prove)\nusing this:\n  u \\<le>p z \\<cdot> u\n\ngoal (1 subgoal):\n 1. u \\<le>p z \\<cdot> u", "."], ["", "lemma pref_prod_long: \"u \\<le>p v \\<cdot> w \\<Longrightarrow> \\<^bold>|v\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> v \\<le>p u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p v \\<cdot> w;\n     \\<^bold>|v\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> v \\<le>p u", "using ruler_le[OF triv_pref]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?qs \\<le>p ?ps \\<cdot> ?s1;\n   \\<^bold>|?ps\\<^bold>| \\<le> \\<^bold>|?qs\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> ?ps \\<le>p ?qs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p v \\<cdot> w;\n     \\<^bold>|v\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> v \\<le>p u", "."], ["", "lemma pref_keeps_root: \"u \\<le>p r \\<cdot> u \\<Longrightarrow> v \\<le>p u \\<Longrightarrow> v \\<le>p r \\<cdot> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p r \\<cdot> u; v \\<le>p u\\<rbrakk>\n    \\<Longrightarrow> v \\<le>p r \\<cdot> v", "using pref_prod_pref[of v r u] pref_trans[of v u \"r\\<cdot>u\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>v \\<le>p r \\<cdot> u; v \\<le>p u\\<rbrakk>\n  \\<Longrightarrow> v \\<le>p r \\<cdot> v\n  \\<lbrakk>v \\<le>p u; u \\<le>p r \\<cdot> u\\<rbrakk>\n  \\<Longrightarrow> v \\<le>p r \\<cdot> u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p r \\<cdot> u; v \\<le>p u\\<rbrakk>\n    \\<Longrightarrow> v \\<le>p r \\<cdot> v", "by blast"], ["", "lemma pref_prolong:  \"w \\<le>p z \\<cdot> r \\<Longrightarrow> r \\<le>p s \\<Longrightarrow> w \\<le>p z \\<cdot> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le>p z \\<cdot> r; r \\<le>p s\\<rbrakk>\n    \\<Longrightarrow> w \\<le>p z \\<cdot> s", "using pref_trans[OF _ pref_cancel']"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le>p ?z1 \\<cdot> ?u1; ?u1 \\<le>p ?v1\\<rbrakk>\n  \\<Longrightarrow> ?a \\<le>p ?z1 \\<cdot> ?v1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le>p z \\<cdot> r; r \\<le>p s\\<rbrakk>\n    \\<Longrightarrow> w \\<le>p z \\<cdot> s", "."], ["", "lemma pref_prolong': assumes \"u \\<le>p w \\<cdot> z\" \"v \\<cdot> u \\<le>p z\" shows \"u \\<le>p w \\<cdot> v \\<cdot> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p w \\<cdot> v \\<cdot> u", "using prefix_length_prefix[OF \\<open>u \\<le>p w \\<cdot> z\\<close> pref_cancel'[OF \\<open>v \\<cdot> u \\<le>p z\\<close>, of w] suf_len'[of u \"w\\<cdot>v\", unfolded rassoc]]"], ["proof (prove)\nusing this:\n  u \\<le>p w \\<cdot> v \\<cdot> u\n\ngoal (1 subgoal):\n 1. u \\<le>p w \\<cdot> v \\<cdot> u", "."], ["", "lemma pref_prolong_comp: \"u \\<le>p w \\<cdot> z \\<Longrightarrow> v \\<cdot> u \\<bowtie> z \\<Longrightarrow> u \\<le>p w \\<cdot> v \\<cdot> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p w \\<cdot> z; v \\<cdot> u \\<bowtie> z\\<rbrakk>\n    \\<Longrightarrow> u \\<le>p w \\<cdot> v \\<cdot> u", "using pref_prolong[of u w z \"v \\<cdot> u\"] pref_prolong'[of u w z v]"], ["proof (prove)\nusing this:\n  \\<lbrakk>u \\<le>p w \\<cdot> z; z \\<le>p v \\<cdot> u\\<rbrakk>\n  \\<Longrightarrow> u \\<le>p w \\<cdot> v \\<cdot> u\n  \\<lbrakk>u \\<le>p w \\<cdot> z; v \\<cdot> u \\<le>p z\\<rbrakk>\n  \\<Longrightarrow> u \\<le>p w \\<cdot> v \\<cdot> u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p w \\<cdot> z; v \\<cdot> u \\<bowtie> z\\<rbrakk>\n    \\<Longrightarrow> u \\<le>p w \\<cdot> v \\<cdot> u", "by blast"], ["", "lemma pref_prod_short: \"u \\<le>p v \\<cdot> w \\<Longrightarrow> \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|v\\<^bold>| \\<Longrightarrow> u \\<le>p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p v \\<cdot> w;\n     \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|v\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> u \\<le>p v", "using  prefI prefix_length_prefix[of u \"v\\<cdot>w\" v]"], ["proof (prove)\nusing this:\n  ?p \\<cdot> ?s = ?w \\<Longrightarrow> ?p \\<le>p ?w\n  \\<lbrakk>u \\<le>p v \\<cdot> w; v \\<le>p v \\<cdot> w;\n   \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|v\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> u \\<le>p v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p v \\<cdot> w;\n     \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|v\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> u \\<le>p v", "by blast"], ["", "lemma pref_prod_short': assumes \"u \\<le>p v \\<cdot> w\" and \"\\<^bold>|u\\<^bold>| < \\<^bold>|v\\<^bold>|\" shows \"u <p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u <p v", "using pref_prod_short[OF \\<open>u \\<le>p v \\<cdot> w\\<close> less_imp_le[OF \\<open>\\<^bold>|u\\<^bold>| < \\<^bold>|v\\<^bold>|\\<close>]]  \\<open>\\<^bold>|u\\<^bold>| < \\<^bold>|v\\<^bold>|\\<close>"], ["proof (prove)\nusing this:\n  u \\<le>p v\n  \\<^bold>|u\\<^bold>| < \\<^bold>|v\\<^bold>|\n\ngoal (1 subgoal):\n 1. u <p v", "by blast"], ["", "lemma pref_prod_cancel: assumes \"u \\<le>p p\\<cdot>w\\<cdot>q\" and \"\\<^bold>|p\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\" and \"\\<^bold>|u\\<^bold>| \\<le> \\<^bold>|p\\<cdot>w\\<^bold>|\"\n  obtains r where \"u = p \\<cdot> r\" and \"r \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>u = p \\<cdot> r; r \\<le>p w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>u = p \\<cdot> r; r \\<le>p w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"p \\<le>p u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<le>p u", "using pref_prod_long[OF \\<open>u \\<le>p p\\<cdot>w\\<cdot>q\\<close>  \\<open>\\<^bold>|p\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<close>]"], ["proof (prove)\nusing this:\n  p \\<le>p u\n\ngoal (1 subgoal):\n 1. p \\<le>p u", "."], ["proof (state)\nthis:\n  p \\<le>p u\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>u = p \\<cdot> r; r \\<le>p w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  p \\<le>p u", "obtain r where \"u = p \\<cdot> r\""], ["proof (prove)\nusing this:\n  p \\<le>p u\n\ngoal (1 subgoal):\n 1. (\\<And>r. u = p \\<cdot> r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using prefD"], ["proof (prove)\nusing this:\n  p \\<le>p u\n  ?u \\<le>p ?v \\<Longrightarrow> \\<exists>z. ?v = ?u \\<cdot> z\n\ngoal (1 subgoal):\n 1. (\\<And>r. u = p \\<cdot> r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u = p \\<cdot> r\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>u = p \\<cdot> r; r \\<le>p w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"r \\<le>p w\""], ["proof (prove)\nusing this:\n  u = p \\<cdot> r\n\ngoal (1 subgoal):\n 1. r \\<le>p w", "using \\<open>\\<^bold>|u\\<^bold>| \\<le> \\<^bold>|p\\<cdot>w\\<^bold>|\\<close> \\<open>u \\<le>p p\\<cdot>w\\<cdot>q\\<close>"], ["proof (prove)\nusing this:\n  u = p \\<cdot> r\n  \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|p \\<cdot> w\\<^bold>|\n  u \\<le>p p \\<cdot> w \\<cdot> q\n\ngoal (1 subgoal):\n 1. r \\<le>p w", "unfolding \\<open>u = p \\<cdot> r\\<close> pref_cancel_conv length_append"], ["proof (prove)\nusing this:\n  p \\<cdot> r = p \\<cdot> r\n  \\<^bold>|p\\<^bold>| + \\<^bold>|r\\<^bold>|\n  \\<le> \\<^bold>|p\\<^bold>| + \\<^bold>|w\\<^bold>|\n  r \\<le>p w \\<cdot> q\n\ngoal (1 subgoal):\n 1. r \\<le>p w", "using pref_prod_short[of r w q]"], ["proof (prove)\nusing this:\n  p \\<cdot> r = p \\<cdot> r\n  \\<^bold>|p\\<^bold>| + \\<^bold>|r\\<^bold>|\n  \\<le> \\<^bold>|p\\<^bold>| + \\<^bold>|w\\<^bold>|\n  r \\<le>p w \\<cdot> q\n  \\<lbrakk>r \\<le>p w \\<cdot> q;\n   \\<^bold>|r\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> r \\<le>p w\n\ngoal (1 subgoal):\n 1. r \\<le>p w", "by simp"], ["proof (state)\nthis:\n  r \\<le>p w\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>u = p \\<cdot> r; r \\<le>p w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from that[OF \\<open>u = p \\<cdot> r\\<close> this]"], ["proof (chain)\npicking this:\n  thesis", "show thesis"], ["proof (prove)\nusing this:\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pref_prod_cancel': assumes \"u \\<le>p p\\<cdot>w\\<cdot>q\" and \"\\<^bold>|p\\<^bold>| < \\<^bold>|u\\<^bold>|\" and \"\\<^bold>|u\\<^bold>| \\<le> \\<^bold>|p\\<cdot>w\\<^bold>|\"\n  obtains r where \"u = p \\<cdot> r\" and \"r \\<le>p w\" and \"r \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>u = p \\<cdot> r; r \\<le>p w; r \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>u = p \\<cdot> r; r \\<le>p w; r \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain r where \"u = p \\<cdot> r\" and \"r \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>u = p \\<cdot> r; r \\<le>p w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using pref_prod_cancel[OF \\<open>u \\<le>p p\\<cdot>w\\<cdot>q\\<close> less_imp_le[OF \\<open>\\<^bold>|p\\<^bold>| < \\<^bold>|u\\<^bold>|\\<close>] \\<open>\\<^bold>|u\\<^bold>| \\<le> \\<^bold>|p\\<cdot>w\\<^bold>|\\<close>]"], ["proof (prove)\nusing this:\n  (\\<And>r.\n      \\<lbrakk>u = p \\<cdot> r; r \\<le>p w\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>u = p \\<cdot> r; r \\<le>p w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  u = p \\<cdot> r\n  r \\<le>p w\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>u = p \\<cdot> r; r \\<le>p w; r \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  u = p \\<cdot> r\n  r \\<le>p w\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>u = p \\<cdot> r; r \\<le>p w; r \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"r \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<noteq> \\<epsilon>", "using  \\<open>u = p \\<cdot> r\\<close> less_not_refl3[OF \\<open>\\<^bold>|p\\<^bold>| < \\<^bold>|u\\<^bold>|\\<close>, folded self_append_conv]"], ["proof (prove)\nusing this:\n  u = p \\<cdot> r\n  \\<^bold>|p\\<^bold>| \\<noteq> \\<^bold>|u\\<^bold>|\n\ngoal (1 subgoal):\n 1. r \\<noteq> \\<epsilon>", "by simp"], ["proof (state)\nthis:\n  r \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>u = p \\<cdot> r; r \\<le>p w; r \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  u = p \\<cdot> r\n  r \\<le>p w\n  r \\<noteq> \\<epsilon>", "show thesis"], ["proof (prove)\nusing this:\n  u = p \\<cdot> r\n  r \\<le>p w\n  r \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  u = p \\<cdot> r\n  r \\<le>p w\n  r \\<noteq> \\<epsilon>\n  \\<lbrakk>u = p \\<cdot> ?r; ?r \\<le>p w; ?r \\<noteq> \\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by simp"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pref_comp_eq: \"u \\<bowtie> v \\<Longrightarrow>\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>| \\<Longrightarrow> u = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<bowtie> v;\n     \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> u = v", "by auto"], ["", "lemma non_comp_parallel: \"\\<not> u \\<bowtie> v \\<longleftrightarrow> u \\<parallel> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> u \\<bowtie> v) = (u \\<parallel> v)", "unfolding prefix_comparable_def parallel_def de_Morgan_disj"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> u \\<le>p v \\<and> \\<not> v \\<le>p u) =\n    (\\<not> u \\<le>p v \\<and> \\<not> v \\<le>p u)", ".."], ["", "lemma comp_refl: \"u \\<bowtie> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<bowtie> u", "by simp"], ["", "lemma incomp_cancel: \"\\<not> p\\<cdot>u \\<bowtie> p\\<cdot>v \\<Longrightarrow> \\<not> u \\<bowtie> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> p \\<cdot> u \\<bowtie> p \\<cdot> v \\<Longrightarrow>\n    \\<not> u \\<bowtie> v", "by simp"], ["", "lemma comp_cancel: \"z \\<cdot> u \\<bowtie> z \\<cdot> v \\<Longrightarrow> u \\<bowtie> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> u \\<bowtie> z \\<cdot> v \\<Longrightarrow> u \\<bowtie> v", "by simp"], ["", "lemma comm_ruler: \"r \\<cdot> s \\<le>p w1 \\<Longrightarrow> s \\<cdot> r \\<le>p w2 \\<Longrightarrow> w1 \\<bowtie> w2 \\<Longrightarrow> r \\<cdot> s = s \\<cdot> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<cdot> s \\<le>p w1; s \\<cdot> r \\<le>p w2;\n     w1 \\<bowtie> w2\\<rbrakk>\n    \\<Longrightarrow> r \\<cdot> s = s \\<cdot> r", "using pref_comp_eq[OF ruler_comp swap_len]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u1 \\<cdot> ?v1 \\<le>p ?v2; ?v1 \\<cdot> ?u1 \\<le>p ?v'2;\n   ?v2 \\<bowtie> ?v'2\\<rbrakk>\n  \\<Longrightarrow> ?u1 \\<cdot> ?v1 = ?v1 \\<cdot> ?u1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<cdot> s \\<le>p w1; s \\<cdot> r \\<le>p w2;\n     w1 \\<bowtie> w2\\<rbrakk>\n    \\<Longrightarrow> r \\<cdot> s = s \\<cdot> r", "."], ["", "lemma pref_share_take: \"u \\<le>p v \\<Longrightarrow> q \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> take q u = take q v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p v; q \\<le> \\<^bold>|u\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> take q u = take q v", "by auto"], ["", "lemma pref_prod_longer: \"u \\<le>p z \\<cdot> w \\<Longrightarrow> v \\<le>p w \\<Longrightarrow> \\<^bold>|z \\<cdot> v\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|  \\<Longrightarrow> z \\<cdot> v \\<le>p u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p z \\<cdot> w; v \\<le>p w;\n     \\<^bold>|z \\<cdot> v\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> z \\<cdot> v \\<le>p u", "using ruler_le[OF pref_cancel']"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u1 \\<le>p ?v1; ?qs \\<le>p ?z1 \\<cdot> ?v1;\n   \\<^bold>|?z1 \\<cdot> ?u1\\<^bold>| \\<le> \\<^bold>|?qs\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> ?z1 \\<cdot> ?u1 \\<le>p ?qs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p z \\<cdot> w; v \\<le>p w;\n     \\<^bold>|z \\<cdot> v\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> z \\<cdot> v \\<le>p u", "."], ["", "lemma pref_comp_not_pref: \"u \\<bowtie> v \\<Longrightarrow> \\<not> v \\<le>p u \\<Longrightarrow> u <p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<bowtie> v; \\<not> v \\<le>p u\\<rbrakk>\n    \\<Longrightarrow> u <p v", "by auto"], ["", "lemma pref_comp_not_spref: \"u \\<bowtie> v \\<Longrightarrow> \\<not> u <p v \\<Longrightarrow> v \\<le>p u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<bowtie> v; \\<not> u <p v\\<rbrakk>\n    \\<Longrightarrow> v \\<le>p u", "using contrapos_np[OF _ pref_comp_not_pref]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<not> ?u1 <p ?v1; \\<not> ?P \\<Longrightarrow> ?u1 \\<bowtie> ?v1;\n   \\<not> ?P \\<Longrightarrow> \\<not> ?v1 \\<le>p ?u1\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<bowtie> v; \\<not> u <p v\\<rbrakk>\n    \\<Longrightarrow> v \\<le>p u", "."], ["", "lemma hd_prod: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> (u \\<cdot> v)!0 = u!0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow> (u \\<cdot> v) ! 0 = u ! 0", "by (cases u) (blast, simp)"], ["", "lemma distinct_first: assumes \"w \\<noteq> \\<epsilon>\" \"z \\<noteq> \\<epsilon>\" \"w!0 \\<noteq> z!0\" shows \"w \\<cdot> w' \\<noteq> z \\<cdot> z'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<cdot> w' \\<noteq> z \\<cdot> z'", "using hd_prod[of w w', OF \\<open>w \\<noteq> \\<epsilon>\\<close>] hd_prod[of z z', OF \\<open>z \\<noteq> \\<epsilon>\\<close>] \\<open>w!0 \\<noteq> z!0\\<close>"], ["proof (prove)\nusing this:\n  (w \\<cdot> w') ! 0 = w ! 0\n  (z \\<cdot> z') ! 0 = z ! 0\n  w ! 0 \\<noteq> z ! 0\n\ngoal (1 subgoal):\n 1. w \\<cdot> w' \\<noteq> z \\<cdot> z'", "by auto"], ["", "lemmas last_no_split = prefix_snoc"], ["", "lemma last_no_split': assumes \"u <p w\" \"w \\<le>p u \\<cdot> [a]\" shows \"w = u \\<cdot> [a]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w = u \\<cdot> [a]", "using assms(1)[unfolded prefix_order.less_le_not_le] assms(2)[unfolded last_no_split]"], ["proof (prove)\nusing this:\n  u \\<le>p w \\<and> \\<not> w \\<le>p u\n  w = u \\<cdot> [a] \\<or> w \\<le>p u\n\ngoal (1 subgoal):\n 1. w = u \\<cdot> [a]", "by presburger"], ["", "lemma pcomp_shorter: \"v \\<bowtie> w \\<Longrightarrow> \\<^bold>|v\\<^bold>| \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow> v \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v \\<bowtie> w;\n     \\<^bold>|v\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> v \\<le>p w", "by auto"], ["", "lemma pref_comp_len_trans: \"w \\<le>p v \\<Longrightarrow> u \\<bowtie> v \\<Longrightarrow> \\<^bold>|w\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> w \\<le>p u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le>p v; u \\<bowtie> v;\n     \\<^bold>|w\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> w \\<le>p u", "unfolding prefix_comparable_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le>p v; u \\<le>p v \\<or> v \\<le>p u;\n     \\<^bold>|w\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> w \\<le>p u", "using prefix_length_prefix[of w v u] prefix_order.order.trans[of w v u]"], ["proof (prove)\nusing this:\n  \\<lbrakk>w \\<le>p v; u \\<le>p v;\n   \\<^bold>|w\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> w \\<le>p u\n  \\<lbrakk>w \\<le>p v; v \\<le>p u\\<rbrakk> \\<Longrightarrow> w \\<le>p u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le>p v; u \\<le>p v \\<or> v \\<le>p u;\n     \\<^bold>|w\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> w \\<le>p u", "by argo"], ["", "lemma comp_ext: \"z \\<cdot> w1 \\<bowtie> z \\<cdot> w2 \\<longleftrightarrow> w1 \\<bowtie> w2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z \\<cdot> w1 \\<bowtie> z \\<cdot> w2) = (w1 \\<bowtie> w2)", "using pref_cancel"], ["proof (prove)\nusing this:\n  ?z \\<cdot> ?u \\<le>p ?z \\<cdot> ?v \\<Longrightarrow> ?u \\<le>p ?v\n\ngoal (1 subgoal):\n 1. (z \\<cdot> w1 \\<bowtie> z \\<cdot> w2) = (w1 \\<bowtie> w2)", "by auto"], ["", "lemma emp_pref: \"\\<epsilon> \\<le>p u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<epsilon> \\<le>p u", "by simp"], ["", "lemma emp_spref:  \"u \\<noteq> \\<epsilon> \\<Longrightarrow> \\<epsilon> <p u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow> \\<epsilon> <p u", "by simp"], ["", "lemma long_pref: \"u \\<le>p v \\<Longrightarrow> \\<^bold>|v\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> u = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p v;\n     \\<^bold>|v\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> u = v", "by auto"], ["", "lemma incomp_ext: \"\\<not> w1 \\<bowtie>  w2 \\<Longrightarrow> \\<not> w1 \\<cdot> z \\<bowtie> w2 \\<cdot> z'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> w1 \\<bowtie> w2 \\<Longrightarrow>\n    \\<not> w1 \\<cdot> z \\<bowtie> w2 \\<cdot> z'", "using contrapos_nn[OF _ ruler_comp[OF triv_pref triv_pref]]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<not> ?u1 \\<bowtie> ?u'1;\n   ?P \\<Longrightarrow> ?u1 \\<cdot> ?s3 \\<bowtie> ?u'1 \\<cdot> ?s2\\<rbrakk>\n  \\<Longrightarrow> \\<not> ?P\n\ngoal (1 subgoal):\n 1. \\<not> w1 \\<bowtie> w2 \\<Longrightarrow>\n    \\<not> w1 \\<cdot> z \\<bowtie> w2 \\<cdot> z'", "."], ["", "lemma mismatch_incopm: \"\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>| \\<Longrightarrow> x \\<noteq> y \\<Longrightarrow> \\<not> u \\<cdot> [x] \\<bowtie> v \\<cdot> [y]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|;\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<not> u \\<cdot> [x] \\<bowtie> v \\<cdot> [y]", "by simp"], ["", "lemma comp_prefs_comp: \"u \\<cdot> z \\<bowtie> v \\<cdot> w \\<Longrightarrow> u \\<bowtie> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> z \\<bowtie> v \\<cdot> w \\<Longrightarrow> u \\<bowtie> v", "using ruler_comp[OF prefI[of _ z] prefI[of _ w], OF refl refl]"], ["proof (prove)\nusing this:\n  ?u \\<cdot> z \\<bowtie> ?u' \\<cdot> w \\<Longrightarrow> ?u \\<bowtie> ?u'\n\ngoal (1 subgoal):\n 1. u \\<cdot> z \\<bowtie> v \\<cdot> w \\<Longrightarrow> u \\<bowtie> v", "."], ["", "lemma comp_hd_eq: \"u \\<bowtie> v \\<Longrightarrow> u \\<noteq> \\<epsilon> \\<Longrightarrow> v \\<noteq> \\<epsilon> \\<Longrightarrow> hd u = hd v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<bowtie> v; u \\<noteq> \\<epsilon>;\n     v \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> hd u = hd v", "by auto"], ["", "lemma pref_hd_eq': \"p \\<le>p u \\<Longrightarrow> p \\<le>p v \\<Longrightarrow> p \\<noteq> \\<epsilon> \\<Longrightarrow>  hd u = hd v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<le>p u; p \\<le>p v; p \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> hd u = hd v", "by auto"], ["", "lemma pref_hd_eq: \"u \\<le>p v \\<Longrightarrow> u \\<noteq> \\<epsilon> \\<Longrightarrow>  hd u = hd v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p v; u \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> hd u = hd v", "by auto"], ["", "lemma suf_last_eq: \"p \\<le>s u \\<Longrightarrow> p \\<le>s v \\<Longrightarrow> p \\<noteq> \\<epsilon> \\<Longrightarrow>  last u = last v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<le>s u; p \\<le>s v; p \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> last u = last v", "by auto"], ["", "lemma comp_hd_eq': assumes  \"u \\<cdot> r \\<bowtie> v \\<cdot> s\" \"u \\<noteq> \\<epsilon>\" \"v \\<noteq> \\<epsilon>\" shows \"hd u = hd v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd u = hd v", "using comp_prefs_comp[OF \\<open>u \\<cdot> r \\<bowtie> v \\<cdot> s\\<close>] \\<open>u \\<noteq> \\<epsilon>\\<close> \\<open>v \\<noteq> \\<epsilon>\\<close>"], ["proof (prove)\nusing this:\n  u \\<bowtie> v\n  u \\<noteq> \\<epsilon>\n  v \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. hd u = hd v", "by auto"], ["", "section \"Suffix and suffix comparability  properties\""], ["", "lemmas suf_emp = suffix_bot.bot.extremum_uniqueI"], ["", "lemma triv_suf: \"u \\<le>s v \\<cdot> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>s v \\<cdot> u", "by simp"], ["", "lemma emp_ssuf: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> \\<epsilon> <s u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow> \\<epsilon> <s u", "by simp"], ["", "lemma suf_cancel: \"u\\<cdot>v \\<le>s w\\<cdot>v \\<Longrightarrow> u \\<le>s w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> v \\<le>s w \\<cdot> v \\<Longrightarrow> u \\<le>s w", "by simp"], ["", "lemma suf_cancel': \"u \\<le>s w \\<Longrightarrow> u\\<cdot>v \\<le>s w\\<cdot>v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>s w \\<Longrightarrow> u \\<cdot> v \\<le>s w \\<cdot> v", "by simp"], ["", "lemmas suf_cancel_eq = same_suffix_suffix \\<comment> \\<open>provided by Sublist.thy\\<close>"], ["", "text\\<open>Straightforward relations of suffix and prefix follow.\\<close>"], ["", "lemmas suf_rev_pref_iff = suffix_to_prefix \\<comment> \\<open>provided by Sublist.thy\\<close>"], ["", "lemmas ssuf_rev_pref_iff = strict_suffix_to_prefix \\<comment> \\<open>provided by Sublist.thy\\<close>"], ["", "lemma pref_rev_suf_iff: \"u \\<le>p v \\<longleftrightarrow> rev u \\<le>s rev v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<le>p v) = rev u \\<le>s rev v", "using suffix_to_prefix[of \"rev u\" \"rev v\"]"], ["proof (prove)\nusing this:\n  rev u \\<le>s rev v = (rev (rev u) \\<le>p rev (rev v))\n\ngoal (1 subgoal):\n 1. (u \\<le>p v) = rev u \\<le>s rev v", "unfolding rev_rev_ident"], ["proof (prove)\nusing this:\n  rev u \\<le>s rev v = (u \\<le>p v)\n\ngoal (1 subgoal):\n 1. (u \\<le>p v) = rev u \\<le>s rev v", "by blast"], ["", "lemma spref_rev_suf_iff: \"s <p w \\<longleftrightarrow> rev s <s rev w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s <p w) = (rev s <s rev w)", "using strict_suffix_to_prefix[of \"rev s\" \"rev w\", unfolded rev_rev_ident, symmetric]"], ["proof (prove)\nusing this:\n  (s <p w) = (rev s <s rev w)\n\ngoal (1 subgoal):\n 1. (s <p w) = (rev s <s rev w)", "."], ["", "lemma nsuf_rev_pref_iff: \"s \\<le>ns w \\<longleftrightarrow> rev s \\<le>np rev w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<le>ns w = (rev s \\<le>np rev w)", "unfolding nonempty_prefix_def nonempty_suffix_def suffix_to_prefix"], ["proof (prove)\ngoal (1 subgoal):\n 1. (s \\<noteq> \\<epsilon> \\<and> rev s \\<le>p rev w) =\n    (rev s \\<noteq> \\<epsilon> \\<and> rev s \\<le>p rev w)", "by fast"], ["", "lemma npref_rev_suf_iff: \"s \\<le>np w \\<longleftrightarrow> rev s \\<le>ns rev w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s \\<le>np w) = rev s \\<le>ns rev w", "unfolding nonempty_prefix_def nonempty_suffix_def pref_rev_suf_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. (s \\<noteq> \\<epsilon> \\<and> rev s \\<le>s rev w) =\n    (rev s \\<noteq> \\<epsilon> \\<and> rev s \\<le>s rev w)", "by fast"], ["", "lemmas [reversal_rule] = \n  suf_rev_pref_iff[symmetric]\n  pref_rev_suf_iff[symmetric]\n  nsuf_rev_pref_iff[symmetric]\n  npref_rev_suf_iff[symmetric]\n  ssuf_rev_pref_iff[symmetric]\n  spref_rev_suf_iff[symmetric]"], ["", "lemmas suf_ext = suffix_appendI \\<comment> \\<open>provided by Sublist.thy\\<close>"], ["", "lemmas ssuf_ext = spref_ext[reversed] and\n  suf_ext_nem = pref_ext_nemp[reversed] and\n  suf_same_len = pref_same_len[reversed] and\n  suf_take = pref_drop[reversed] and\n  suf_share_take = pref_share_take[reversed] and\n  long_suf = long_pref[reversed]"], ["", "subsection \"Suffix comparability\""], ["", "lemma pref_comp_rev_suf_comp[reversal_rule]: \"(rev w) \\<bowtie>\\<^sub>s (rev v) \\<longleftrightarrow> w \\<bowtie> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rev w \\<bowtie>\\<^sub>s rev v) = (w \\<bowtie> v)", "by simp"], ["", "lemma suf_comp_rev_pref_comp[reversal_rule]: \"(rev w) \\<bowtie> (rev v) \\<longleftrightarrow> w \\<bowtie>\\<^sub>s v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rev w \\<bowtie> rev v) = (w \\<bowtie>\\<^sub>s v)", "by simp"], ["", "lemmas suf_ruler_le = suffix_length_suffix \\<comment> \\<open>provided by Sublist.thy, same as ruler\\_le[reversed]\\<close>"], ["", "lemmas suf_ruler = suffix_same_cases \\<comment> \\<open>provided by Sublist.thy, same as ruler[reversed]\\<close>"], ["", "lemmas suf_ruler_equal = ruler_equal[reversed] and\n    suf_ruler_comp = ruler_comp[reversed] and\n    ruler_suf = ruler_pref[reversed] and\n    suf_prod_short = pref_prod_short[reversed] and\n    suf_prod_short' = pref_prod_short'[reversed] and\n    suf_prod_cancel = pref_prod_cancel[reversed] and\n    suf_prod_cancel' = pref_prod_cancel'[reversed] and\n    suf_prod_suf_short = pref_prod_pref_short[reversed] and\n    suf_prod_suf = pref_prod_pref[reversed] and\n    suf_prod_suf' = pref_prod_pref'[reversed, unfolded rassoc] and\n    suf_prolong = pref_prolong[reversed] and\n    suf_prolong' = pref_prolong'[reversed, unfolded rassoc] and\n    suf_prolong_comp = pref_prolong_comp[reversed, unfolded rassoc] and\n    suf_prod_long = pref_prod_long[reversed] and\n    suf_prod_longer = pref_prod_longer[reversed] and\n    suf_keeps_root = pref_keeps_root[reversed] and\n    comm_suf_ruler = comm_ruler[reversed]"], ["", "lemmas comp_sufs_comp = comp_prefs_comp[reversed] and\n  suf_comp_not_suf = pref_comp_not_pref[reversed] and\n  suf_comp_not_ssuf = pref_comp_not_spref[reversed] and\n  (* hd_no_split = last_no_split[reversed] *) (* this is suffix_Cons *)\n  suf_comp_ext = comp_ext[reversed] and\n  suf_incomp_ext = incomp_ext[reversed] and\n  mismatch_suf_incopm = mismatch_incopm[reversed] and\n  suf_comp_sym[sym] = pref_comp_sym[reversed]"], ["", "lemma suf_comp_last_eq: assumes \"u \\<bowtie>\\<^sub>s v\" \"u \\<noteq> \\<epsilon>\" \"v \\<noteq> \\<epsilon>\"\n    shows \"last u = last v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. last u = last v", "using comp_hd_eq[reversed, OF assms]"], ["proof (prove)\nusing this:\n  last u = last v\n\ngoal (1 subgoal):\n 1. last u = last v", "unfolding hd_rev[OF \\<open>u \\<noteq> \\<epsilon>\\<close>] hd_rev[OF \\<open>v \\<noteq> \\<epsilon>\\<close>]"], ["proof (prove)\nusing this:\n  last u = last v\n\ngoal (1 subgoal):\n 1. last u = last v", "."], ["", "lemma suf_comp_last_eq': \"r \\<cdot> u \\<bowtie>\\<^sub>s s \\<cdot> v \\<Longrightarrow> u \\<noteq> \\<epsilon> \\<Longrightarrow> v \\<noteq> \\<epsilon> \\<Longrightarrow> last u = last v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<cdot> u \\<bowtie>\\<^sub>s s \\<cdot> v;\n     u \\<noteq> \\<epsilon>; v \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> last u = last v", "using comp_sufs_comp suf_comp_last_eq"], ["proof (prove)\nusing this:\n  ?z \\<cdot> ?u \\<bowtie>\\<^sub>s ?w \\<cdot> ?v \\<Longrightarrow>\n  ?u \\<bowtie>\\<^sub>s ?v\n  \\<lbrakk>?u \\<bowtie>\\<^sub>s ?v; ?u \\<noteq> \\<epsilon>;\n   ?v \\<noteq> \\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> last ?u = last ?v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<cdot> u \\<bowtie>\\<^sub>s s \\<cdot> v;\n     u \\<noteq> \\<epsilon>; v \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> last u = last v", "by blast"], ["", "section \"Left and Right Quotient\""], ["", "text\\<open>A useful function of left quotient is given. Note that the function is sometimes undefined.\\<close>"], ["", "definition left_quotient:: \"'a list \\<Rightarrow> 'a list \\<Rightarrow> 'a list\"   (\"(_\\<inverse>\\<^sup>>)(_)\" [75,74] 74)\n  where left_quotient_def[simp]: \"left_quotient u v  = (if u \\<le>p v then (THE z. u \\<cdot> z = v) else undefined)\""], ["", "notation (latex output) left_quotient  (\"\\<^latex>\\<open>\\\\ensuremath{ {\\<close>_ \\<^latex>\\<open>}^{-1} \\\\cdot {\\<close> _ \\<^latex>\\<open>}}\\<close>\")"], ["", "text\\<open>Analogously, we define the right quotient.\\<close>"], ["", "definition right_quotient :: \"'a list \\<Rightarrow> 'a list \\<Rightarrow> 'a list\"  (\"(_)(\\<^sup><\\<inverse>_) \" [76,77] 76)\n  where right_quotient_def[simp]: \"right_quotient u v  = rev ((rev v)\\<inverse>\\<^sup>>(rev u))\""], ["", "notation (latex output) right_quotient (\"\\<^latex>\\<open>\\\\ensuremath{ {\\<close>_ \\<^latex>\\<open>} \\\\cdot {\\<close> _ \\<^latex>\\<open>}^{-1}}\\<close>\")"], ["", "text\\<open>Priorities of these operations are as follows:\\<close>"], ["", "lemma \"u\\<^sup><\\<inverse>v\\<^sup><\\<inverse>w = (u\\<^sup><\\<inverse>v)\\<^sup><\\<inverse>w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u\\<^sup><\\<inverse>v \\<^sup><\\<inverse>w  =\n    u\\<^sup><\\<inverse>v \\<^sup><\\<inverse>w", "by simp"], ["", "lemma \"u\\<inverse>\\<^sup>>v\\<inverse>\\<^sup>>w = u\\<inverse>\\<^sup>>(v\\<inverse>\\<^sup>>w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u\\<inverse>\\<^sup>>v\\<inverse>\\<^sup>>w =\n    u\\<inverse>\\<^sup>>v\\<inverse>\\<^sup>>w", "by simp"], ["", "lemma \"u\\<inverse>\\<^sup>>v\\<^sup><\\<inverse>w = u\\<inverse>\\<^sup>>(v\\<^sup><\\<inverse>w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u\\<inverse>\\<^sup>>v\\<^sup><\\<inverse>w  =\n    u\\<inverse>\\<^sup>>v\\<^sup><\\<inverse>w", "by simp"], ["", "lemma \"r \\<cdot> u\\<inverse>\\<^sup>>w\\<^sup><\\<inverse>v \\<cdot> s = r \\<cdot> (u\\<inverse>\\<^sup>>w\\<^sup><\\<inverse>v) \\<cdot> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<cdot> u\\<inverse>\\<^sup>>w\\<^sup><\\<inverse>v  \\<cdot> s =\n    r \\<cdot> u\\<inverse>\\<^sup>>w\\<^sup><\\<inverse>v  \\<cdot> s", "by simp"], ["", "lemma rq_rev_lq[reversal_rule]: \"(rev v)\\<^sup><\\<inverse>(rev u) = rev (u\\<inverse>\\<^sup>>v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev v\\<^sup><\\<inverse>rev u  = rev (u\\<inverse>\\<^sup>>v)", "by simp"], ["", "lemma lq_rev_rq[reversal_rule]: \"(rev v)\\<inverse>\\<^sup>>rev u = rev (u\\<^sup><\\<inverse>v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev v\\<inverse>\\<^sup>>rev u = rev (u\\<^sup><\\<inverse>v )", "by simp"], ["", "subsection \\<open>Left Quotient\\<close>"], ["", "lemma lqI:  \"u \\<cdot> z = v \\<Longrightarrow> u\\<inverse>\\<^sup>>v = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> z = v \\<Longrightarrow> u\\<inverse>\\<^sup>>v = z", "by auto"], ["", "lemma lq_triv[simp]:  \"u\\<inverse>\\<^sup>>(u \\<cdot> z) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u\\<inverse>\\<^sup>>(u \\<cdot> z) = z", "using lqI[OF refl]"], ["proof (prove)\nusing this:\n  ?u\\<inverse>\\<^sup>>(?u \\<cdot> ?z) = ?z\n\ngoal (1 subgoal):\n 1. u\\<inverse>\\<^sup>>(u \\<cdot> z) = z", "."], ["", "lemma lq_triv'[simp]:  \"u \\<cdot> u\\<inverse>\\<^sup>>(u \\<cdot> z) = u \\<cdot>z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> u\\<inverse>\\<^sup>>(u \\<cdot> z) = u \\<cdot> z", "by simp"], ["", "lemma lq_self[simp]: \"u\\<inverse>\\<^sup>>u = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u\\<inverse>\\<^sup>>u = \\<epsilon>", "by auto"], ["", "lemma lq_emp[simp]: \"\\<epsilon>\\<inverse>\\<^sup>>u = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<epsilon>\\<inverse>\\<^sup>>u = u", "by auto"], ["", "lemma lq_pref[simp]: \"u \\<le>p v \\<Longrightarrow> u \\<cdot> (u\\<inverse>\\<^sup>>v) = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p v \\<Longrightarrow> u \\<cdot> u\\<inverse>\\<^sup>>v = v", "by auto"], ["", "lemma lq_the[simp]: \"u \\<le>p v \\<Longrightarrow> (u\\<inverse>\\<^sup>>v) = (THE z. u \\<cdot> z = v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p v \\<Longrightarrow>\n    u\\<inverse>\\<^sup>>v = (THE z. u \\<cdot> z = v)", "by simp"], ["", "lemma lq_reassoc: \"u \\<le>p v \\<Longrightarrow> (u\\<inverse>\\<^sup>>v)\\<cdot>w = u\\<inverse>\\<^sup>>(v\\<cdot>w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p v \\<Longrightarrow>\n    u\\<inverse>\\<^sup>>v \\<cdot> w = u\\<inverse>\\<^sup>>(v \\<cdot> w)", "by auto"], ["", "lemma lq_trans: \"u \\<le>p v \\<Longrightarrow> v \\<le>p w \\<Longrightarrow> (u\\<inverse>\\<^sup>>v) \\<cdot> (v\\<inverse>\\<^sup>>w) = u\\<inverse>\\<^sup>>w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p v; v \\<le>p w\\<rbrakk>\n    \\<Longrightarrow> u\\<inverse>\\<^sup>>v \\<cdot> v\\<inverse>\\<^sup>>w =\n                      u\\<inverse>\\<^sup>>w", "by auto"], ["", "lemma lq_rq_reassoc_suf: \"u \\<le>p z \\<Longrightarrow> u \\<le>s w \\<Longrightarrow> w\\<cdot>u\\<inverse>\\<^sup>>z = w\\<^sup><\\<inverse>u \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p z; u \\<le>s w\\<rbrakk>\n    \\<Longrightarrow> w \\<cdot> u\\<inverse>\\<^sup>>z =\n                      w\\<^sup><\\<inverse>u  \\<cdot> z", "using lq_pref[reversed]"], ["proof (prove)\nusing this:\n  ?u \\<le>s ?v \\<Longrightarrow> ?v\\<^sup><\\<inverse>?u  \\<cdot> ?u = ?v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p z; u \\<le>s w\\<rbrakk>\n    \\<Longrightarrow> w \\<cdot> u\\<inverse>\\<^sup>>z =\n                      w\\<^sup><\\<inverse>u  \\<cdot> z", "by fastforce"], ["", "lemma lq_ne: \"p \\<le>p u\\<cdot>p \\<Longrightarrow> u \\<noteq> \\<epsilon> \\<Longrightarrow> p\\<inverse>\\<^sup>>(u\\<cdot>p) \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<le>p u \\<cdot> p; u \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> p\\<inverse>\\<^sup>>(u \\<cdot> p) \\<noteq> \\<epsilon>", "using lq_pref[of p \"u \\<cdot> p\"]"], ["proof (prove)\nusing this:\n  p \\<le>p u \\<cdot> p \\<Longrightarrow>\n  p \\<cdot> p\\<inverse>\\<^sup>>(u \\<cdot> p) = u \\<cdot> p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<le>p u \\<cdot> p; u \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> p\\<inverse>\\<^sup>>(u \\<cdot> p) \\<noteq> \\<epsilon>", "by fastforce"], ["", "lemma lq_spref: \"u <p v \\<Longrightarrow> u\\<inverse>\\<^sup>>v \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u <p v \\<Longrightarrow> u\\<inverse>\\<^sup>>v \\<noteq> \\<epsilon>", "using lq_pref"], ["proof (prove)\nusing this:\n  ?u \\<le>p ?v \\<Longrightarrow> ?u \\<cdot> ?u\\<inverse>\\<^sup>>?v = ?v\n\ngoal (1 subgoal):\n 1. u <p v \\<Longrightarrow> u\\<inverse>\\<^sup>>v \\<noteq> \\<epsilon>", "by auto"], ["", "lemma lq_suf_suf: \"r \\<le>p s \\<Longrightarrow> (r\\<inverse>\\<^sup>>s) \\<le>s s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<le>p s \\<Longrightarrow> r\\<inverse>\\<^sup>>s \\<le>s s", "by auto"], ["", "lemma lq_len: \"r \\<le>p s \\<Longrightarrow> \\<^bold>|r\\<^bold>| +  \\<^bold>|r\\<inverse>\\<^sup>>s\\<^bold>| = \\<^bold>|s\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<le>p s \\<Longrightarrow>\n    \\<^bold>|r\\<^bold>| + \\<^bold>|r\\<inverse>\\<^sup>>s\\<^bold>| =\n    \\<^bold>|s\\<^bold>|", "by auto"], ["", "lemma pref_lq: \"u \\<le>p v \\<Longrightarrow> v \\<le>p w \\<Longrightarrow> u\\<inverse>\\<^sup>>v \\<le>p u\\<inverse>\\<^sup>>w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p v; v \\<le>p w\\<rbrakk>\n    \\<Longrightarrow> u\\<inverse>\\<^sup>>v \\<le>p u\\<inverse>\\<^sup>>w", "by auto"], ["", "lemma spref_lq: \"u \\<le>p v \\<Longrightarrow> v <p w \\<Longrightarrow> u\\<inverse>\\<^sup>>v <p u\\<inverse>\\<^sup>>w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p v; v <p w\\<rbrakk>\n    \\<Longrightarrow> u\\<inverse>\\<^sup>>v <p u\\<inverse>\\<^sup>>w", "by force"], ["", "lemma conjug_lq: \"x \\<cdot> z = z \\<cdot> y \\<Longrightarrow> y = z\\<inverse>\\<^sup>>(x \\<cdot> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> z = z \\<cdot> y \\<Longrightarrow>\n    y = z\\<inverse>\\<^sup>>(x \\<cdot> z)", "by simp"], ["", "lemma conjug_emp_emp: \"p \\<le>p u \\<cdot> p \\<Longrightarrow> p\\<inverse>\\<^sup>>(u \\<cdot> p) = \\<epsilon> \\<Longrightarrow> u = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<le>p u \\<cdot> p;\n     p\\<inverse>\\<^sup>>(u \\<cdot> p) = \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> u = \\<epsilon>", "using lq_ne"], ["proof (prove)\nusing this:\n  \\<lbrakk>?p \\<le>p ?u \\<cdot> ?p; ?u \\<noteq> \\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> ?p\\<inverse>\\<^sup>>(?u \\<cdot> ?p) \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<le>p u \\<cdot> p;\n     p\\<inverse>\\<^sup>>(u \\<cdot> p) = \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> u = \\<epsilon>", "by blast"], ["", "lemma lq_drop:  \"u \\<le>p v \\<Longrightarrow> u\\<inverse>\\<^sup>>v = drop \\<^bold>|u\\<^bold>| v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p v \\<Longrightarrow>\n    u\\<inverse>\\<^sup>>v = drop \\<^bold>|u\\<^bold>| v", "by fastforce"], ["", "lemma lq_code [code]:\n  \"left_quotient \\<epsilon> v = v\" \n  \"left_quotient (a#u) \\<epsilon> = undefined\"\n  \"left_quotient (a#u) (b#v) = (if a=b then left_quotient u v else undefined)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<epsilon>\\<inverse>\\<^sup>>v = v &&&\n    (a # u)\\<inverse>\\<^sup>>\\<epsilon> = undefined &&&\n    (a # u)\\<inverse>\\<^sup>>(b # v) =\n    (if a = b then u\\<inverse>\\<^sup>>v else undefined)", "by simp_all"], ["", "subsection \"Right quotient\""], ["", "lemmas rqI = lqI[reversed] and\n  rq_triv = lq_triv[reversed] and\n  rq_triv' = lq_triv'[reversed] and\n  rq_sefl = lq_self[reversed] and\n  rq_emp = lq_emp[reversed] and\n  rq_suf = lq_pref[reversed] and\n  rq_ssuf = lq_spref[reversed] and\n  rq_reassoc = lq_reassoc[reversed] and\n  rq_len = lq_len[reversed] and\n  rq_trans = lq_trans[reversed] and\n  rq_lq_reassoc_suf = lq_rq_reassoc_suf[reversed] and\n  rq_ne = lq_ne[reversed] and\n  rq_suf_suf = lq_suf_suf[reversed] and\n  suf_rq = pref_lq[reversed] and\n  ssuf_rq = spref_lq[reversed] and\n  conjug_rq = conjug_lq[reversed] and\n  conjug_emp_emp' = conjug_emp_emp[reversed] and\n  rq_take = lq_drop[reversed]"], ["", "subsection \\<open>Left and right quotients combined\\<close>"], ["", "lemma rev_lq': \"r \\<le>p s \\<Longrightarrow> rev (r\\<inverse>\\<^sup>>s) = (rev s)\\<^sup><\\<inverse>(rev r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<le>p s \\<Longrightarrow>\n    rev (r\\<inverse>\\<^sup>>s) = rev s\\<^sup><\\<inverse>rev r", "by auto"], ["", "lemma pref_rq_suf_lq: \"s \\<le>s u \\<Longrightarrow> r \\<le>p (u\\<^sup><\\<inverse>s) \\<Longrightarrow> s \\<le>s (r\\<inverse>\\<^sup>>u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<le>s u; r \\<le>p u\\<^sup><\\<inverse>s \\<rbrakk>\n    \\<Longrightarrow> s \\<le>s r\\<inverse>\\<^sup>>u", "using lq_reassoc[of r \"u\\<^sup><\\<inverse>s\" s] rq_suf[of s u] triv_suf[of s \"r\\<inverse>\\<^sup>>u\\<^sup><\\<inverse>s\"]"], ["proof (prove)\nusing this:\n  r \\<le>p u\\<^sup><\\<inverse>s  \\<Longrightarrow>\n  r\\<inverse>\\<^sup>>u\\<^sup><\\<inverse>s  \\<cdot> s =\n  r\\<inverse>\\<^sup>>(u\\<^sup><\\<inverse>s  \\<cdot> s)\n  s \\<le>s u \\<Longrightarrow> u\\<^sup><\\<inverse>s  \\<cdot> s = u\n  s \\<le>s r\\<inverse>\\<^sup>>u\\<^sup><\\<inverse>s  \\<cdot> s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<le>s u; r \\<le>p u\\<^sup><\\<inverse>s \\<rbrakk>\n    \\<Longrightarrow> s \\<le>s r\\<inverse>\\<^sup>>u", "by presburger"], ["", "lemmas suf_lq_pref_rq = pref_rq_suf_lq[reversed]"], ["", "lemma \"w\\<cdot>s = v \\<Longrightarrow> v\\<^sup><\\<inverse>s = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<cdot> s = v \\<Longrightarrow> v\\<^sup><\\<inverse>s  = w", "using rqI"], ["proof (prove)\nusing this:\n  ?z \\<cdot> ?u = ?v \\<Longrightarrow> ?v\\<^sup><\\<inverse>?u  = ?z\n\ngoal (1 subgoal):\n 1. w \\<cdot> s = v \\<Longrightarrow> v\\<^sup><\\<inverse>s  = w", "."], ["", "lemma lq_rq_assoc: \"s \\<le>s u \\<Longrightarrow> r \\<le>p (u\\<^sup><\\<inverse>s) \\<Longrightarrow> (r\\<inverse>\\<^sup>>u)\\<^sup><\\<inverse>s = r\\<inverse>\\<^sup>>(u\\<^sup><\\<inverse>s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<le>s u; r \\<le>p u\\<^sup><\\<inverse>s \\<rbrakk>\n    \\<Longrightarrow> (r\\<inverse>\\<^sup>>u)\\<^sup><\\<inverse>s  =\n                      r\\<inverse>\\<^sup>>u\\<^sup><\\<inverse>s", "using lq_reassoc[of r \"u\\<^sup><\\<inverse>s\" s] rq_suf[of s u] rqI[of \"r\\<inverse>\\<^sup>>u\\<^sup><\\<inverse>s\" s \"r\\<inverse>\\<^sup>>u\"]"], ["proof (prove)\nusing this:\n  r \\<le>p u\\<^sup><\\<inverse>s  \\<Longrightarrow>\n  r\\<inverse>\\<^sup>>u\\<^sup><\\<inverse>s  \\<cdot> s =\n  r\\<inverse>\\<^sup>>(u\\<^sup><\\<inverse>s  \\<cdot> s)\n  s \\<le>s u \\<Longrightarrow> u\\<^sup><\\<inverse>s  \\<cdot> s = u\n  r\\<inverse>\\<^sup>>u\\<^sup><\\<inverse>s  \\<cdot> s =\n  r\\<inverse>\\<^sup>>u \\<Longrightarrow>\n  (r\\<inverse>\\<^sup>>u)\\<^sup><\\<inverse>s  =\n  r\\<inverse>\\<^sup>>u\\<^sup><\\<inverse>s \n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<le>s u; r \\<le>p u\\<^sup><\\<inverse>s \\<rbrakk>\n    \\<Longrightarrow> (r\\<inverse>\\<^sup>>u)\\<^sup><\\<inverse>s  =\n                      r\\<inverse>\\<^sup>>u\\<^sup><\\<inverse>s", "by argo"], ["", "lemmas rq_lq_assoc = lq_rq_assoc[reversed]"], ["", "lemma lq_prod: \"u \\<le>p v\\<cdot>u \\<Longrightarrow> u \\<le>p w \\<Longrightarrow>  u\\<inverse>\\<^sup>>(v\\<cdot>u)\\<cdot>u\\<inverse>\\<^sup>>w = u\\<inverse>\\<^sup>>(v\\<cdot>w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p v \\<cdot> u; u \\<le>p w\\<rbrakk>\n    \\<Longrightarrow> u\\<inverse>\\<^sup>>(v \\<cdot> u) \\<cdot>\n                      u\\<inverse>\\<^sup>>w =\n                      u\\<inverse>\\<^sup>>(v \\<cdot> w)", "using lq_reassoc[of u \"v \\<cdot> u\" \"u\\<inverse>\\<^sup>>w\"] lq_rq_reassoc_suf[of u w \"v \\<cdot> u\", unfolded rq_triv[of v u]]"], ["proof (prove)\nusing this:\n  u \\<le>p v \\<cdot> u \\<Longrightarrow>\n  u\\<inverse>\\<^sup>>(v \\<cdot> u) \\<cdot> u\\<inverse>\\<^sup>>w =\n  u\\<inverse>\\<^sup>>((v \\<cdot> u) \\<cdot> u\\<inverse>\\<^sup>>w)\n  \\<lbrakk>u \\<le>p w; u \\<le>s v \\<cdot> u\\<rbrakk>\n  \\<Longrightarrow> (v \\<cdot> u) \\<cdot> u\\<inverse>\\<^sup>>w = v \\<cdot> w\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p v \\<cdot> u; u \\<le>p w\\<rbrakk>\n    \\<Longrightarrow> u\\<inverse>\\<^sup>>(v \\<cdot> u) \\<cdot>\n                      u\\<inverse>\\<^sup>>w =\n                      u\\<inverse>\\<^sup>>(v \\<cdot> w)", "by auto"], ["", "lemmas rq_prod = lq_prod[reversed]"], ["", "section \\<open>Equidivisibility\\<close>"], ["", "text\\<open>Equidivisibility is the following property: if\n\\[\nxy = uv,\n\\]\nthen there exists a word $t$ such that $xt = u$ and $ty = v$, or $ut = x$ and $y = tv$.\nFor monoids over words, this property is equivalent to the freeness of the monoid.\nAs the monoid of all words is free, we can prove that it is equidivisible.\nRelated lemmas based on this property follow.\n\\<close>"], ["", "lemma eqd: \"x \\<cdot> y = u \\<cdot> v \\<Longrightarrow> \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> \\<exists> t. x \\<cdot> t = u \\<and> t \\<cdot> v = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<cdot> y = u \\<cdot> v;\n     \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t. x \\<cdot> t = u \\<and> t \\<cdot> v = y", "by (simp add: append_eq_conv_conj)"], ["", "lemma eqdE: assumes \"x \\<cdot> y = u \\<cdot> v\" and \"\\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\" \n  obtains t where \"x \\<cdot> t = u\" and \"t \\<cdot> v = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>x \\<cdot> t = u; t \\<cdot> v = y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using eqd[OF assms]"], ["proof (prove)\nusing this:\n  \\<exists>t. x \\<cdot> t = u \\<and> t \\<cdot> v = y\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>x \\<cdot> t = u; t \\<cdot> v = y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma eqdE': assumes \"x \\<cdot> y = u \\<cdot> v\" and \"\\<^bold>|v\\<^bold>| \\<le> \\<^bold>|y\\<^bold>|\" \n  obtains t where \"x \\<cdot> t = u\" and \"t \\<cdot> v = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>x \\<cdot> t = u; t \\<cdot> v = y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using eqdE[OF assms(1)] lenarg[OF assms(1), unfolded length_append] assms(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|;\n   \\<And>t.\n      \\<lbrakk>x \\<cdot> t = u; t \\<cdot> v = y\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<^bold>|x\\<^bold>| + \\<^bold>|y\\<^bold>| =\n  \\<^bold>|u\\<^bold>| + \\<^bold>|v\\<^bold>|\n  \\<^bold>|v\\<^bold>| \\<le> \\<^bold>|y\\<^bold>|\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>x \\<cdot> t = u; t \\<cdot> v = y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "lemma eqd_pref: \"x \\<cdot> y = u \\<cdot> v \\<Longrightarrow> \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> x \\<cdot> (x\\<inverse>\\<^sup>>u) = u \\<and> (x\\<inverse>\\<^sup>>u) \\<cdot> v = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<cdot> y = u \\<cdot> v;\n     \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> x \\<cdot> x\\<inverse>\\<^sup>>u = u \\<and>\n                      x\\<inverse>\\<^sup>>u \\<cdot> v = y", "using eqd lq_triv"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<cdot> ?y = ?u \\<cdot> ?v;\n   \\<^bold>|?x\\<^bold>| \\<le> \\<^bold>|?u\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t. ?x \\<cdot> t = ?u \\<and> t \\<cdot> ?v = ?y\n  ?u\\<inverse>\\<^sup>>(?u \\<cdot> ?z) = ?z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<cdot> y = u \\<cdot> v;\n     \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> x \\<cdot> x\\<inverse>\\<^sup>>u = u \\<and>\n                      x\\<inverse>\\<^sup>>u \\<cdot> v = y", "by blast"], ["", "lemma eqd_prefE: assumes \"x \\<cdot> y = u \\<cdot> v\" and  \"\\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\" \n  obtains t where \"x \\<cdot> t = u\" and  \"t \\<cdot> v = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>x \\<cdot> t = u; t \\<cdot> v = y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using eqd_pref assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<cdot> ?y = ?u \\<cdot> ?v;\n   \\<^bold>|?x\\<^bold>| \\<le> \\<^bold>|?u\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> ?x \\<cdot> ?x\\<inverse>\\<^sup>>?u = ?u \\<and>\n                    ?x\\<inverse>\\<^sup>>?u \\<cdot> ?v = ?y\n  x \\<cdot> y = u \\<cdot> v\n  \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>x \\<cdot> t = u; t \\<cdot> v = y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma eqd_pref1: \"x \\<cdot> y = u \\<cdot> v \\<Longrightarrow> \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> x \\<cdot> (x\\<inverse>\\<^sup>>u) = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<cdot> y = u \\<cdot> v;\n     \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> x \\<cdot> x\\<inverse>\\<^sup>>u = u", "using eqd_pref"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<cdot> ?y = ?u \\<cdot> ?v;\n   \\<^bold>|?x\\<^bold>| \\<le> \\<^bold>|?u\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> ?x \\<cdot> ?x\\<inverse>\\<^sup>>?u = ?u \\<and>\n                    ?x\\<inverse>\\<^sup>>?u \\<cdot> ?v = ?y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<cdot> y = u \\<cdot> v;\n     \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> x \\<cdot> x\\<inverse>\\<^sup>>u = u", "by blast"], ["", "lemma eqd_pref2: \"x \\<cdot> y = u \\<cdot> v \\<Longrightarrow> \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> (x\\<inverse>\\<^sup>>u) \\<cdot> v = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<cdot> y = u \\<cdot> v;\n     \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> x\\<inverse>\\<^sup>>u \\<cdot> v = y", "using eqd_pref"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<cdot> ?y = ?u \\<cdot> ?v;\n   \\<^bold>|?x\\<^bold>| \\<le> \\<^bold>|?u\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> ?x \\<cdot> ?x\\<inverse>\\<^sup>>?u = ?u \\<and>\n                    ?x\\<inverse>\\<^sup>>?u \\<cdot> ?v = ?y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<cdot> y = u \\<cdot> v;\n     \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> x\\<inverse>\\<^sup>>u \\<cdot> v = y", "by blast"], ["", "lemma eqd_equal: \"x \\<cdot> y = u \\<cdot> v \\<Longrightarrow> \\<^bold>|x\\<^bold>| = \\<^bold>|u\\<^bold>| \\<Longrightarrow> x = u \\<and> y = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<cdot> y = u \\<cdot> v;\n     \\<^bold>|x\\<^bold>| = \\<^bold>|u\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> x = u \\<and> y = v", "by simp"], ["", "lemma pref_equal: \"u \\<le>p v \\<cdot> w \\<Longrightarrow> \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>| \\<Longrightarrow> u = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p v \\<cdot> w;\n     \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> u = v", "by simp"], ["", "lemma eqd_equal_suf: \"x \\<cdot> y = u \\<cdot> v \\<Longrightarrow> \\<^bold>|y\\<^bold>| = \\<^bold>|v\\<^bold>| \\<Longrightarrow> x = u \\<and> y = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<cdot> y = u \\<cdot> v;\n     \\<^bold>|y\\<^bold>| = \\<^bold>|v\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> x = u \\<and> y = v", "by simp"], ["", "lemma eqd_comp: assumes \"x \\<cdot> y = u \\<cdot> v\" shows \"x \\<bowtie> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<bowtie> u", "using le_cases[of \"\\<^bold>|x\\<^bold>|\" \"\\<^bold>|u\\<^bold>|\" \"x \\<bowtie> u\"] \n    eqd_pref1[of x y u v, THEN prefI[of x \"x\\<inverse>\\<^sup>>u\" u], OF assms] \n    eqd_pref1[of u v x y, THEN prefI[of u \"u\\<inverse>\\<^sup>>x\" x], OF assms[symmetric]]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow>\n           x \\<bowtie> u;\n   \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|x\\<^bold>| \\<Longrightarrow>\n   x \\<bowtie> u\\<rbrakk>\n  \\<Longrightarrow> x \\<bowtie> u\n  \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> x \\<le>p u\n  \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|x\\<^bold>| \\<Longrightarrow> u \\<le>p x\n\ngoal (1 subgoal):\n 1. x \\<bowtie> u", "by auto\n\n\\<comment> \\<open>not equal to eqd\\_pref1[reversed]\\<close>"], ["", "lemma eqd_suf1: \"x \\<cdot> y = u \\<cdot> v \\<Longrightarrow> \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> (y\\<^sup><\\<inverse>v)\\<cdot>v = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<cdot> y = u \\<cdot> v;\n     \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> y\\<^sup><\\<inverse>v  \\<cdot> v = y", "using eqd_pref2 rq_triv"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<cdot> ?y = ?u \\<cdot> ?v;\n   \\<^bold>|?x\\<^bold>| \\<le> \\<^bold>|?u\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> ?x\\<inverse>\\<^sup>>?u \\<cdot> ?v = ?y\n  (?z \\<cdot> ?u)\\<^sup><\\<inverse>?u  = ?z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<cdot> y = u \\<cdot> v;\n     \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> y\\<^sup><\\<inverse>v  \\<cdot> v = y", "by blast\n\n\\<comment> \\<open>not equal to eqd\\_pref2[reversed]\\<close>"], ["", "lemma eqd_suf2: assumes \"x \\<cdot> y = u \\<cdot> v\" \"\\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\" shows \"x \\<cdot> (y\\<^sup><\\<inverse>v) = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> y\\<^sup><\\<inverse>v  = u", "using rq_reassoc[OF sufI[OF eqd_suf1[OF \\<open>x \\<cdot> y = u \\<cdot> v\\<close> \\<open>\\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<close>]], of x, unfolded \\<open>x \\<cdot> y = u \\<cdot> v\\<close> rq_triv[of u v]]"], ["proof (prove)\nusing this:\n  x \\<cdot> y\\<^sup><\\<inverse>v  = u\n\ngoal (1 subgoal):\n 1. x \\<cdot> y\\<^sup><\\<inverse>v  = u", ". \n\n\\<comment> \\<open> not equal to eqd\\_pref[reversed] \\<close>"], ["", "lemma eqd_suf: assumes \"x \\<cdot> y = u \\<cdot> v\" and \"\\<^bold>|x\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\" \n  shows \"(y\\<^sup><\\<inverse>v)\\<cdot>v = y \\<and> x \\<cdot> (y\\<^sup><\\<inverse>v) = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup><\\<inverse>v  \\<cdot> v = y \\<and>\n    x \\<cdot> y\\<^sup><\\<inverse>v  = u", "using eqd_suf1[OF assms] eqd_suf2[OF assms]"], ["proof (prove)\nusing this:\n  y\\<^sup><\\<inverse>v  \\<cdot> v = y\n  x \\<cdot> y\\<^sup><\\<inverse>v  = u\n\ngoal (1 subgoal):\n 1. y\\<^sup><\\<inverse>v  \\<cdot> v = y \\<and>\n    x \\<cdot> y\\<^sup><\\<inverse>v  = u", "by blast"], ["", "section \\<open>Longest common prefix\\<close>"], ["", "notation longest_common_prefix  (\"_ \\<and>\\<^sub>p _\" [61,62] 64) \\<comment> \\<open>provided by Sublist.thy\\<close>"], ["", "lemmas lcp_simps = longest_common_prefix.simps \\<comment> \\<open>provided by Sublist.thy\\<close>"], ["", "lemma lcp_sym: \"u \\<and>\\<^sub>p v = v \\<and>\\<^sub>p u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<and>\\<^sub>p v = v \\<and>\\<^sub>p u", "by (induct u v rule: list_induct2') auto\n\n \\<comment> \\<open>provided by Sublist.thy\\<close>"], ["", "lemmas lcp_pref = longest_common_prefix_prefix1"], ["", "lemmas lcp_pref' = longest_common_prefix_prefix2"], ["", "lemmas pref_pref_lcp = longest_common_prefix_max_prefix"], ["", "lemma lcp_take_eq: \"take (\\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|) u = take (\\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|) v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| u =\n    take \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| v", "using pref_take[OF lcp_pref[of u v]] pref_take[OF lcp_pref'[of u v]]"], ["proof (prove)\nusing this:\n  take \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| u = u \\<and>\\<^sub>p v\n  take \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| v = u \\<and>\\<^sub>p v\n\ngoal (1 subgoal):\n 1. take \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| u =\n    take \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| v", "by simp"], ["", "lemma lcp_pref_conv: \"u \\<and>\\<^sub>p v = u \\<longleftrightarrow> u \\<le>p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<and>\\<^sub>p v = u) = (u \\<le>p v)", "unfolding prefix_order.eq_iff[of \"u \\<and>\\<^sub>p v\" u]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<and>\\<^sub>p v \\<le>p u \\<and> u \\<le>p u \\<and>\\<^sub>p v) =\n    (u \\<le>p v)", "using lcp_pref'[of u v] \n    lcp_pref[of u v] longest_common_prefix_max_prefix[OF self_pref[of u], of v]"], ["proof (prove)\nusing this:\n  u \\<and>\\<^sub>p v \\<le>p v\n  u \\<and>\\<^sub>p v \\<le>p u\n  u \\<le>p v \\<Longrightarrow> u \\<le>p u \\<and>\\<^sub>p v\n\ngoal (1 subgoal):\n 1. (u \\<and>\\<^sub>p v \\<le>p u \\<and> u \\<le>p u \\<and>\\<^sub>p v) =\n    (u \\<le>p v)", "by auto"], ["", "lemma pref_lcp_pref: \"w \\<le>p u \\<and>\\<^sub>p v \\<Longrightarrow> w \\<le>p u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<le>p u \\<and>\\<^sub>p v \\<Longrightarrow> w \\<le>p u", "using lcp_pref pref_trans"], ["proof (prove)\nusing this:\n  ?xs \\<and>\\<^sub>p ?ys \\<le>p ?xs\n  \\<lbrakk>?a \\<le>p ?b; ?b \\<le>p ?c\\<rbrakk>\n  \\<Longrightarrow> ?a \\<le>p ?c\n\ngoal (1 subgoal):\n 1. w \\<le>p u \\<and>\\<^sub>p v \\<Longrightarrow> w \\<le>p u", "by blast"], ["", "lemma pref_lcp_pref': \"w \\<le>p u \\<and>\\<^sub>p v \\<Longrightarrow> w \\<le>p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<le>p u \\<and>\\<^sub>p v \\<Longrightarrow> w \\<le>p v", "using pref_lcp_pref[of w v u, unfolded lcp_sym[of v u]]"], ["proof (prove)\nusing this:\n  w \\<le>p u \\<and>\\<^sub>p v \\<Longrightarrow> w \\<le>p v\n\ngoal (1 subgoal):\n 1. w \\<le>p u \\<and>\\<^sub>p v \\<Longrightarrow> w \\<le>p v", "."], ["", "lemma lcp_self[simp]: \"w \\<and>\\<^sub>p w = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<and>\\<^sub>p w = w", "using lcp_pref_conv"], ["proof (prove)\nusing this:\n  (?u \\<and>\\<^sub>p ?v = ?u) = (?u \\<le>p ?v)\n\ngoal (1 subgoal):\n 1. w \\<and>\\<^sub>p w = w", "by blast"], ["", "lemma lcp_eq: \"\\<^bold>|u\\<^bold>| = \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| \\<Longrightarrow> u = u \\<and>\\<^sub>p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|u\\<^bold>| =\n    \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| \\<Longrightarrow>\n    u = u \\<and>\\<^sub>p v", "using  long_pref[OF lcp_pref, of u v]"], ["proof (prove)\nusing this:\n  \\<^bold>|u\\<^bold>|\n  \\<le> \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| \\<Longrightarrow>\n  u \\<and>\\<^sub>p v = u\n\ngoal (1 subgoal):\n 1. \\<^bold>|u\\<^bold>| =\n    \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| \\<Longrightarrow>\n    u = u \\<and>\\<^sub>p v", "by auto"], ["", "lemma lcp_len: \"\\<^bold>|u\\<^bold>| \\<le> \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| \\<Longrightarrow> u \\<le>p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|u\\<^bold>|\n    \\<le> \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| \\<Longrightarrow>\n    u \\<le>p v", "using long_pref[OF lcp_pref, of u v]"], ["proof (prove)\nusing this:\n  \\<^bold>|u\\<^bold>|\n  \\<le> \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| \\<Longrightarrow>\n  u \\<and>\\<^sub>p v = u\n\ngoal (1 subgoal):\n 1. \\<^bold>|u\\<^bold>|\n    \\<le> \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| \\<Longrightarrow>\n    u \\<le>p v", "unfolding lcp_pref_conv[symmetric]"], ["proof (prove)\nusing this:\n  \\<^bold>|u\\<^bold>|\n  \\<le> \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| \\<Longrightarrow>\n  u \\<and>\\<^sub>p v = u\n\ngoal (1 subgoal):\n 1. \\<^bold>|u\\<^bold>|\n    \\<le> \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| \\<Longrightarrow>\n    u \\<and>\\<^sub>p v = u", "."], ["", "lemma lcp_len': \"\\<not> u \\<le>p v \\<Longrightarrow> \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|u\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> u \\<le>p v \\<Longrightarrow>\n    \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|u\\<^bold>|", "using not_le_imp_less[OF contrapos_nn[OF _ lcp_len]]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<not> ?u2 \\<le>p ?v2;\n   ?y \\<le> ?x \\<Longrightarrow>\n   \\<^bold>|?u2\\<^bold>|\n   \\<le> \\<^bold>|?u2 \\<and>\\<^sub>p ?v2\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. \\<not> u \\<le>p v \\<Longrightarrow>\n    \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|u\\<^bold>|", "."], ["", "lemma incomp_lcp_len: assumes \"\\<not> u \\<bowtie> v\" shows \"\\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|\n    < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|", "unfolding min_less_iff_conj[of \"\\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|\" \"\\<^bold>|u\\<^bold>|\" \"\\<^bold>|v\\<^bold>|\"]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|u\\<^bold>| \\<and>\n    \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|v\\<^bold>|", "using assms lcp_len'[of u v] lcp_len'[of v u, folded lcp_sym[of u v]]  \n    min_less_iff_conj[of \"\\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|\" \"\\<^bold>|u\\<^bold>|\" \"\\<^bold>|v\\<^bold>|\"]"], ["proof (prove)\nusing this:\n  \\<not> u \\<bowtie> v\n  \\<not> u \\<le>p v \\<Longrightarrow>\n  \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|u\\<^bold>|\n  \\<not> v \\<le>p u \\<Longrightarrow>\n  \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|v\\<^bold>|\n  (\\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|\n   < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|) =\n  (\\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|u\\<^bold>| \\<and>\n   \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|v\\<^bold>|)\n\ngoal (1 subgoal):\n 1. \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|u\\<^bold>| \\<and>\n    \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|v\\<^bold>|", "by blast"], ["", "lemma lcp_ext_right [case_names comp non_comp]: obtains  \"r \\<bowtie> r'\" | \"(r \\<cdot> u) \\<and>\\<^sub>p (r' \\<cdot> v) = r \\<and>\\<^sub>p r'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<bowtie> r' \\<Longrightarrow> thesis;\n     r \\<cdot> u \\<and>\\<^sub>p r' \\<cdot> v =\n     r \\<and>\\<^sub>p r' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<bowtie> r' \\<Longrightarrow> thesis;\n     r \\<cdot> u \\<and>\\<^sub>p r' \\<cdot> v =\n     r \\<and>\\<^sub>p r' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"\\<not> r \\<bowtie> r' \\<Longrightarrow> r \\<cdot> u \\<and>\\<^sub>p r' \\<cdot> v = r \\<and>\\<^sub>p r'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> r \\<bowtie> r' \\<Longrightarrow>\n    r \\<cdot> u \\<and>\\<^sub>p r' \\<cdot> v = r \\<and>\\<^sub>p r'", "by (induct r r' rule: list_induct2', simp+)"], ["proof (state)\nthis:\n  \\<not> r \\<bowtie> r' \\<Longrightarrow>\n  r \\<cdot> u \\<and>\\<^sub>p r' \\<cdot> v = r \\<and>\\<^sub>p r'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<bowtie> r' \\<Longrightarrow> thesis;\n     r \\<cdot> u \\<and>\\<^sub>p r' \\<cdot> v =\n     r \\<and>\\<^sub>p r' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> r \\<bowtie> r' \\<Longrightarrow>\n  r \\<cdot> u \\<and>\\<^sub>p r' \\<cdot> v = r \\<and>\\<^sub>p r'\n\ngoal (1 subgoal):\n 1. thesis", "using that(1) that(2)"], ["proof (prove)\nusing this:\n  \\<not> r \\<bowtie> r' \\<Longrightarrow>\n  r \\<cdot> u \\<and>\\<^sub>p r' \\<cdot> v = r \\<and>\\<^sub>p r'\n  r \\<bowtie> r' \\<Longrightarrow> thesis\n  r \\<cdot> u \\<and>\\<^sub>p r' \\<cdot> v =\n  r \\<and>\\<^sub>p r' \\<Longrightarrow>\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "by linarith"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lcp_same_len: \"\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>| \\<Longrightarrow> u \\<noteq> v \\<Longrightarrow> u \\<and>\\<^sub>p v = u \\<cdot> w \\<and>\\<^sub>p v \\<cdot> w'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|;\n     u \\<noteq> v\\<rbrakk>\n    \\<Longrightarrow> u \\<and>\\<^sub>p v =\n                      u \\<cdot> w \\<and>\\<^sub>p v \\<cdot> w'", "using lcp_ext_right[of u v _ w w'] pref_comp_eq[of u v]"], ["proof (prove)\nusing this:\n  \\<lbrakk>u \\<bowtie> v \\<Longrightarrow> ?thesis;\n   u \\<cdot> w \\<and>\\<^sub>p v \\<cdot> w' =\n   u \\<and>\\<^sub>p v \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>u \\<bowtie> v; \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> u = v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|;\n     u \\<noteq> v\\<rbrakk>\n    \\<Longrightarrow> u \\<and>\\<^sub>p v =\n                      u \\<cdot> w \\<and>\\<^sub>p v \\<cdot> w'", "by argo"], ["", "lemma lcp_mismatch: \"\\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|u\\<^bold>| \\<Longrightarrow> \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|v\\<^bold>| \\<Longrightarrow> u! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| \\<noteq> v! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|u\\<^bold>|;\n     \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|v\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> u ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| \\<noteq>\n                      v ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|", "by (induct u v rule: list_induct2') auto"], ["", "lemma lcp_mismatch': assumes \"\\<not> u \\<bowtie> v\" shows \"u! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| \\<noteq> v! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| \\<noteq>\n    v ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|", "using incomp_lcp_len[OF assms, unfolded min_less_iff_conj] lcp_mismatch"], ["proof (prove)\nusing this:\n  \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|u\\<^bold>| \\<and>\n  \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|v\\<^bold>|\n  \\<lbrakk>\\<^bold>|?u \\<and>\\<^sub>p ?v\\<^bold>| < \\<^bold>|?u\\<^bold>|;\n   \\<^bold>|?u \\<and>\\<^sub>p ?v\\<^bold>| < \\<^bold>|?v\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> ?u ! \\<^bold>|?u \\<and>\\<^sub>p ?v\\<^bold>| \\<noteq>\n                    ?v ! \\<^bold>|?u \\<and>\\<^sub>p ?v\\<^bold>|\n\ngoal (1 subgoal):\n 1. u ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| \\<noteq>\n    v ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|", "by blast"], ["", "lemma lcp_ext_left: \"(z \\<cdot> u) \\<and>\\<^sub>p (z \\<cdot> v) = z \\<cdot> (u \\<and>\\<^sub>p v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> u \\<and>\\<^sub>p z \\<cdot> v = z \\<cdot> (u \\<and>\\<^sub>p v)", "by (induct z) auto"], ["", "lemma lcp_first_letters: \"u!0 \\<noteq> v!0 \\<Longrightarrow> u \\<and>\\<^sub>p v = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u ! 0 \\<noteq> v ! 0 \\<Longrightarrow> u \\<and>\\<^sub>p v = \\<epsilon>", "by (induct u v rule: list_induct2') auto"], ["", "lemma lcp_first_mismatch: \"a \\<noteq> b \\<Longrightarrow> w \\<cdot> [a] \\<cdot> u \\<and>\\<^sub>p w \\<cdot> [b] \\<cdot> v  = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    w \\<cdot> [a] \\<cdot> u \\<and>\\<^sub>p w \\<cdot> [b] \\<cdot> v = w", "by (simp add: lcp_ext_left)"], ["", "lemma lcp_first_mismatch': \"a \\<noteq> b \\<Longrightarrow> u \\<cdot> [a] \\<and>\\<^sub>p u \\<cdot> [b] = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    u \\<cdot> [a] \\<and>\\<^sub>p u \\<cdot> [b] = u", "using lcp_first_mismatch[of a b u \\<epsilon> \\<epsilon>]"], ["proof (prove)\nusing this:\n  a \\<noteq> b \\<Longrightarrow>\n  u \\<cdot>\n  [a] \\<cdot> \\<epsilon> \\<and>\\<^sub>p u \\<cdot> [b] \\<cdot> \\<epsilon> =\n  u\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    u \\<cdot> [a] \\<and>\\<^sub>p u \\<cdot> [b] = u", "by simp"], ["", "lemma lcp_mismatch_shorter: assumes \"\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\" \"x \\<noteq> y\" shows \"u \\<cdot> [x] \\<and>\\<^sub>p v \\<cdot> [y] = u \\<and>\\<^sub>p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> [x] \\<and>\\<^sub>p v \\<cdot> [y] = u \\<and>\\<^sub>p v", "by (cases \"u = v\") \n    (simp add: lcp_self[of v]  lcp_first_mismatch'[OF \\<open>x \\<noteq> y\\<close>, of v],\n    use lcp_same_len[OF \\<open>\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\\<close>, of \"[x]\" \"[y]\"] in auto)"], ["", "lemma lcp_rulers: \"r \\<le>p s \\<Longrightarrow> r' \\<le>p s' \\<Longrightarrow> (r \\<bowtie> r' \\<or> r \\<and>\\<^sub>p r' = s \\<and>\\<^sub>p s')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<le>p s; r' \\<le>p s'\\<rbrakk>\n    \\<Longrightarrow> r \\<bowtie> r' \\<or>\n                      r \\<and>\\<^sub>p r' = s \\<and>\\<^sub>p s'", "using lcp_ext_right prefD[of r s] prefD[of r' s']"], ["proof (prove)\nusing this:\n  \\<lbrakk>?r \\<bowtie> ?r' \\<Longrightarrow> ?thesis;\n   ?r \\<cdot> ?u \\<and>\\<^sub>p ?r' \\<cdot> ?v =\n   ?r \\<and>\\<^sub>p ?r' \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  r \\<le>p s \\<Longrightarrow> \\<exists>z. s = r \\<cdot> z\n  r' \\<le>p s' \\<Longrightarrow> \\<exists>z. s' = r' \\<cdot> z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<le>p s; r' \\<le>p s'\\<rbrakk>\n    \\<Longrightarrow> r \\<bowtie> r' \\<or>\n                      r \\<and>\\<^sub>p r' = s \\<and>\\<^sub>p s'", "by metis"], ["", "lemma pref_pref_lcp': \"w \\<le>p r \\<Longrightarrow> w' \\<le>p s \\<Longrightarrow> w \\<and>\\<^sub>p w' \\<le>p (r \\<and>\\<^sub>p s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le>p r; w' \\<le>p s\\<rbrakk>\n    \\<Longrightarrow> w \\<and>\\<^sub>p w' \\<le>p r \\<and>\\<^sub>p s", "using pref_pref_lcp lcp_pref lcp_sym pref_trans"], ["proof (prove)\nusing this:\n  \\<lbrakk>?ps \\<le>p ?xs; ?ps \\<le>p ?ys\\<rbrakk>\n  \\<Longrightarrow> ?ps \\<le>p ?xs \\<and>\\<^sub>p ?ys\n  ?xs \\<and>\\<^sub>p ?ys \\<le>p ?xs\n  ?u \\<and>\\<^sub>p ?v = ?v \\<and>\\<^sub>p ?u\n  \\<lbrakk>?a \\<le>p ?b; ?b \\<le>p ?c\\<rbrakk>\n  \\<Longrightarrow> ?a \\<le>p ?c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le>p r; w' \\<le>p s\\<rbrakk>\n    \\<Longrightarrow> w \\<and>\\<^sub>p w' \\<le>p r \\<and>\\<^sub>p s", "by metis"], ["", "lemma lcp_distinct_hd: \"hd u \\<noteq> hd v \\<Longrightarrow> u \\<and>\\<^sub>p v = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd u \\<noteq> hd v \\<Longrightarrow> u \\<and>\\<^sub>p v = \\<epsilon>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. hd u \\<noteq> hd v \\<Longrightarrow> u \\<and>\\<^sub>p v = \\<epsilon>", "assume \"hd u \\<noteq> hd v\""], ["proof (state)\nthis:\n  hd u \\<noteq> hd v\n\ngoal (1 subgoal):\n 1. hd u \\<noteq> hd v \\<Longrightarrow> u \\<and>\\<^sub>p v = \\<epsilon>", "hence \"(u \\<noteq> \\<epsilon> \\<and> v \\<noteq> \\<epsilon>) \\<Longrightarrow> hd u \\<noteq> hd v \\<Longrightarrow>  u \\<and>\\<^sub>p v = \\<epsilon>\""], ["proof (prove)\nusing this:\n  hd u \\<noteq> hd v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<noteq> \\<epsilon> \\<and> v \\<noteq> \\<epsilon>;\n     hd u \\<noteq> hd v\\<rbrakk>\n    \\<Longrightarrow> u \\<and>\\<^sub>p v = \\<epsilon>", "by (simp add: lcp_first_letters hd_conv_nth)"], ["proof (state)\nthis:\n  \\<lbrakk>u \\<noteq> \\<epsilon> \\<and> v \\<noteq> \\<epsilon>;\n   hd u \\<noteq> hd v\\<rbrakk>\n  \\<Longrightarrow> u \\<and>\\<^sub>p v = \\<epsilon>\n\ngoal (1 subgoal):\n 1. hd u \\<noteq> hd v \\<Longrightarrow> u \\<and>\\<^sub>p v = \\<epsilon>", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>u \\<noteq> \\<epsilon> \\<and> v \\<noteq> \\<epsilon>;\n   hd u \\<noteq> hd v\\<rbrakk>\n  \\<Longrightarrow> u \\<and>\\<^sub>p v = \\<epsilon>\n\ngoal (1 subgoal):\n 1. hd u \\<noteq> hd v \\<Longrightarrow> u \\<and>\\<^sub>p v = \\<epsilon>", "have \"u = \\<epsilon> \\<or> v = \\<epsilon> \\<Longrightarrow>  u \\<and>\\<^sub>p v = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u = \\<epsilon> \\<or> v = \\<epsilon> \\<Longrightarrow>\n    u \\<and>\\<^sub>p v = \\<epsilon>", "using lcp_pref'"], ["proof (prove)\nusing this:\n  ?xs \\<and>\\<^sub>p ?ys \\<le>p ?ys\n\ngoal (1 subgoal):\n 1. u = \\<epsilon> \\<or> v = \\<epsilon> \\<Longrightarrow>\n    u \\<and>\\<^sub>p v = \\<epsilon>", "by auto"], ["proof (state)\nthis:\n  u = \\<epsilon> \\<or> v = \\<epsilon> \\<Longrightarrow>\n  u \\<and>\\<^sub>p v = \\<epsilon>\n\ngoal (1 subgoal):\n 1. hd u \\<noteq> hd v \\<Longrightarrow> u \\<and>\\<^sub>p v = \\<epsilon>", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>u \\<noteq> \\<epsilon> \\<and> v \\<noteq> \\<epsilon>;\n   hd u \\<noteq> hd v\\<rbrakk>\n  \\<Longrightarrow> u \\<and>\\<^sub>p v = \\<epsilon>\n  u = \\<epsilon> \\<or> v = \\<epsilon> \\<Longrightarrow>\n  u \\<and>\\<^sub>p v = \\<epsilon>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>u \\<noteq> \\<epsilon> \\<and> v \\<noteq> \\<epsilon>;\n   hd u \\<noteq> hd v\\<rbrakk>\n  \\<Longrightarrow> u \\<and>\\<^sub>p v = \\<epsilon>\n  u = \\<epsilon> \\<or> v = \\<epsilon> \\<Longrightarrow>\n  u \\<and>\\<^sub>p v = \\<epsilon>\n\ngoal (1 subgoal):\n 1. u \\<and>\\<^sub>p v = \\<epsilon>", "using \\<open>hd u \\<noteq> hd v\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>u \\<noteq> \\<epsilon> \\<and> v \\<noteq> \\<epsilon>;\n   hd u \\<noteq> hd v\\<rbrakk>\n  \\<Longrightarrow> u \\<and>\\<^sub>p v = \\<epsilon>\n  u = \\<epsilon> \\<or> v = \\<epsilon> \\<Longrightarrow>\n  u \\<and>\\<^sub>p v = \\<epsilon>\n  hd u \\<noteq> hd v\n\ngoal (1 subgoal):\n 1. u \\<and>\\<^sub>p v = \\<epsilon>", "by blast"], ["proof (state)\nthis:\n  u \\<and>\\<^sub>p v = \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lcp_lenI: assumes \"i < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|\" and \"take i u = take i v\" and \"u!i \\<noteq> v!i\" \n  shows \"i = \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i = \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. i = \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|", "have u: \"take i u \\<cdot> [u ! i] \\<cdot> (drop (Suc i) u) = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take i u \\<cdot> [u ! i] \\<cdot> drop (Suc i) u = u", "using \\<open>i < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|\\<close> id_take_nth_drop[of i u]"], ["proof (prove)\nusing this:\n  i < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|\n  i < \\<^bold>|u\\<^bold>| \\<Longrightarrow>\n  u = take i u \\<cdot> u ! i # drop (Suc i) u\n\ngoal (1 subgoal):\n 1. take i u \\<cdot> [u ! i] \\<cdot> drop (Suc i) u = u", "by simp"], ["proof (state)\nthis:\n  take i u \\<cdot> [u ! i] \\<cdot> drop (Suc i) u = u\n\ngoal (1 subgoal):\n 1. i = \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|", "have v: \"take i u \\<cdot> [v ! i] \\<cdot> drop (Suc i) v = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take i u \\<cdot> [v ! i] \\<cdot> drop (Suc i) v = v", "using \\<open>i < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|\\<close>"], ["proof (prove)\nusing this:\n  i < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|\n\ngoal (1 subgoal):\n 1. take i u \\<cdot> [v ! i] \\<cdot> drop (Suc i) v = v", "unfolding \\<open>take i u = take i v\\<close>"], ["proof (prove)\nusing this:\n  i < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|\n\ngoal (1 subgoal):\n 1. take i v \\<cdot> [v ! i] \\<cdot> drop (Suc i) v = v", "using id_take_nth_drop"], ["proof (prove)\nusing this:\n  i < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|\n  ?i < \\<^bold>|?xs\\<^bold>| \\<Longrightarrow>\n  ?xs = take ?i ?xs \\<cdot> ?xs ! ?i # drop (Suc ?i) ?xs\n\ngoal (1 subgoal):\n 1. take i v \\<cdot> [v ! i] \\<cdot> drop (Suc i) v = v", "by fastforce"], ["proof (state)\nthis:\n  take i u \\<cdot> [v ! i] \\<cdot> drop (Suc i) v = v\n\ngoal (1 subgoal):\n 1. i = \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|", "from lcp_first_mismatch[OF \\<open>u!i \\<noteq> v!i\\<close>, of \"take i u\" \"drop (Suc i) u\" \"drop (Suc i) v\", unfolded u v]"], ["proof (chain)\npicking this:\n  u \\<and>\\<^sub>p v = take i u", "have \"u \\<and>\\<^sub>p v = take i u\""], ["proof (prove)\nusing this:\n  u \\<and>\\<^sub>p v = take i u\n\ngoal (1 subgoal):\n 1. u \\<and>\\<^sub>p v = take i u", "."], ["proof (state)\nthis:\n  u \\<and>\\<^sub>p v = take i u\n\ngoal (1 subgoal):\n 1. i = \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|", "thus ?thesis"], ["proof (prove)\nusing this:\n  u \\<and>\\<^sub>p v = take i u\n\ngoal (1 subgoal):\n 1. i = \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|", "using \\<open>i < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|\\<close>"], ["proof (prove)\nusing this:\n  u \\<and>\\<^sub>p v = take i u\n  i < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|\n\ngoal (1 subgoal):\n 1. i = \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|", "by auto"], ["proof (state)\nthis:\n  i = \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lcp_prefs: \"\\<^bold>|u \\<cdot> w \\<and>\\<^sub>p v \\<cdot> w'\\<^bold>| < \\<^bold>|u\\<^bold>| \\<Longrightarrow> \\<^bold>|u \\<cdot> w \\<and>\\<^sub>p v \\<cdot> w'\\<^bold>| < \\<^bold>|v\\<^bold>| \\<Longrightarrow> u \\<and>\\<^sub>p v = u \\<cdot> w \\<and>\\<^sub>p v \\<cdot> w'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>|u \\<cdot> w \\<and>\\<^sub>p v \\<cdot> w'\\<^bold>|\n             < \\<^bold>|u\\<^bold>|;\n     \\<^bold>|u \\<cdot> w \\<and>\\<^sub>p v \\<cdot> w'\\<^bold>|\n     < \\<^bold>|v\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> u \\<and>\\<^sub>p v =\n                      u \\<cdot> w \\<and>\\<^sub>p v \\<cdot> w'", "by (induct u v rule: list_induct2') auto"], ["", "subsection \"Longest common prefix and prefix comparability\""], ["", "lemma lexord_cancel_right: \"(u \\<cdot> z, v \\<cdot> w) \\<in> lexord r \\<Longrightarrow> \\<not> u \\<bowtie> v \\<Longrightarrow> (u,v) \\<in> lexord r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(u \\<cdot> z, v \\<cdot> w) \\<in> lexord r;\n     \\<not> u \\<bowtie> v\\<rbrakk>\n    \\<Longrightarrow> (u, v) \\<in> lexord r", "by (induction rule: list_induct2', simp+, auto)"], ["", "lemma lcp_ruler: \"r \\<bowtie> w1 \\<Longrightarrow> r \\<bowtie> w2 \\<Longrightarrow> \\<not> w1 \\<bowtie> w2 \\<Longrightarrow> r \\<le>p w1 \\<and>\\<^sub>p w2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<bowtie> w1; r \\<bowtie> w2; \\<not> w1 \\<bowtie> w2\\<rbrakk>\n    \\<Longrightarrow> r \\<le>p w1 \\<and>\\<^sub>p w2", "unfolding prefix_comparable_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<le>p w1 \\<or> w1 \\<le>p r; r \\<le>p w2 \\<or> w2 \\<le>p r;\n     \\<not> (w1 \\<le>p w2 \\<or> w2 \\<le>p w1)\\<rbrakk>\n    \\<Longrightarrow> r \\<le>p w1 \\<and>\\<^sub>p w2", "by (meson pref_pref_lcp pref_trans ruler)"], ["", "lemma comp_monotone: \"w \\<bowtie> r  \\<Longrightarrow> u \\<le>p w \\<Longrightarrow> u \\<bowtie> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<bowtie> r; u \\<le>p w\\<rbrakk>\n    \\<Longrightarrow> u \\<bowtie> r", "using pref_trans[of u w r] ruler[of u w r]"], ["proof (prove)\nusing this:\n  \\<lbrakk>u \\<le>p w; w \\<le>p r\\<rbrakk> \\<Longrightarrow> u \\<le>p r\n  \\<lbrakk>u \\<le>p w; r \\<le>p w\\<rbrakk>\n  \\<Longrightarrow> u \\<le>p r \\<or> r \\<le>p u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<bowtie> r; u \\<le>p w\\<rbrakk>\n    \\<Longrightarrow> u \\<bowtie> r", "by blast"], ["", "lemma comp_monotone': \"w \\<bowtie> r  \\<Longrightarrow> w \\<and>\\<^sub>p w' \\<bowtie> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<bowtie> r \\<Longrightarrow> w \\<and>\\<^sub>p w' \\<bowtie> r", "using comp_monotone[of w r \"w \\<and>\\<^sub>p w'\", OF _ longest_common_prefix_prefix1]"], ["proof (prove)\nusing this:\n  w \\<bowtie> r \\<Longrightarrow> w \\<and>\\<^sub>p w' \\<bowtie> r\n\ngoal (1 subgoal):\n 1. w \\<bowtie> r \\<Longrightarrow> w \\<and>\\<^sub>p w' \\<bowtie> r", "."], ["", "lemma double_ruler: assumes \"w \\<bowtie> r\" and \"w' \\<bowtie> r'\" and \"\\<not> r \\<bowtie> r'\" \n  shows \"w \\<and>\\<^sub>p w' \\<le>p r \\<and>\\<^sub>p r'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<and>\\<^sub>p w' \\<le>p r \\<and>\\<^sub>p r'", "using comp_monotone'[OF \\<open>w' \\<bowtie> r'\\<close>, of w]"], ["proof (prove)\nusing this:\n  w' \\<and>\\<^sub>p w \\<bowtie> r'\n\ngoal (1 subgoal):\n 1. w \\<and>\\<^sub>p w' \\<le>p r \\<and>\\<^sub>p r'", "unfolding lcp_sym[of w' w]"], ["proof (prove)\nusing this:\n  w \\<and>\\<^sub>p w' \\<bowtie> r'\n\ngoal (1 subgoal):\n 1. w \\<and>\\<^sub>p w' \\<le>p r \\<and>\\<^sub>p r'", "using lcp_ruler[OF comp_monotone'[OF \\<open>w \\<bowtie> r\\<close>, of w'] _ \\<open>\\<not> r \\<bowtie> r'\\<close>]"], ["proof (prove)\nusing this:\n  w \\<and>\\<^sub>p w' \\<bowtie> r'\n  w \\<and>\\<^sub>p w' \\<bowtie> r' \\<Longrightarrow>\n  w \\<and>\\<^sub>p w' \\<le>p r \\<and>\\<^sub>p r'\n\ngoal (1 subgoal):\n 1. w \\<and>\\<^sub>p w' \\<le>p r \\<and>\\<^sub>p r'", "by blast"], ["", "lemma pref_comp_ruler: assumes \"w \\<bowtie> u \\<cdot> [x]\" and \"w \\<bowtie> v \\<cdot> [y]\" and \"x \\<noteq> y\" and \"\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\" \n  shows \"w \\<le>p u \\<and> w \\<le>p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<le>p u \\<and> w \\<le>p v", "using double_ruler[OF \\<open>w \\<bowtie> u \\<cdot> [x]\\<close> \\<open>w \\<bowtie> v \\<cdot> [y]\\<close> mismatch_incopm[OF \\<open>\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\\<close> \\<open>x \\<noteq> y\\<close>]]"], ["proof (prove)\nusing this:\n  w \\<and>\\<^sub>p w \\<le>p u \\<cdot> [x] \\<and>\\<^sub>p v \\<cdot> [y]\n\ngoal (1 subgoal):\n 1. w \\<le>p u \\<and> w \\<le>p v", "unfolding lcp_self[of w] lcp_mismatch_shorter[OF \\<open>\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\\<close> \\<open>x \\<noteq> y\\<close>]"], ["proof (prove)\nusing this:\n  w \\<le>p u \\<and>\\<^sub>p v\n\ngoal (1 subgoal):\n 1. w \\<le>p u \\<and> w \\<le>p v", "using pref_lcp_pref pref_lcp_pref'"], ["proof (prove)\nusing this:\n  w \\<le>p u \\<and>\\<^sub>p v\n  ?w \\<le>p ?u \\<and>\\<^sub>p ?v \\<Longrightarrow> ?w \\<le>p ?u\n  ?w \\<le>p ?u \\<and>\\<^sub>p ?v \\<Longrightarrow> ?w \\<le>p ?v\n\ngoal (1 subgoal):\n 1. w \\<le>p u \\<and> w \\<le>p v", "by blast"], ["", "lemmas suf_comp_ruler = pref_comp_ruler[reversed]"], ["", "section \"Mismatch\""], ["", "text \\<open>The first pair of letters on which two words/lists disagree\\<close>"], ["", "fun mismatch_pair :: \"'a list \\<Rightarrow> 'a list \\<Rightarrow> ('a \\<times> 'a)\" where\n  \"mismatch_pair \\<epsilon> v = (\\<epsilon>!0, v!0)\" |\n  \"mismatch_pair v \\<epsilon> = (v!0, \\<epsilon>!0)\" |\n  \"mismatch_pair (a#u) (b#v) = (if a=b then mismatch_pair u v else (a,b))\""], ["", "text \\<open>Alternatively, mismatch pair may be defined using the longest common prefix as follows.\\<close>"], ["", "lemma mismatch_pair_lcp: \"mismatch_pair u v = (u!\\<^bold>|u\\<and>\\<^sub>pv\\<^bold>|,v!\\<^bold>|u\\<and>\\<^sub>pv\\<^bold>|)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mismatch_pair u v =\n    (u ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|,\n     v ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|)", "proof(induction u v rule: mismatch_pair.induct, simp+)"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>For incomparable words the pair is out of diagonal.\\<close>"], ["", "lemma incomp_neq: \"\\<not> u \\<bowtie> v \\<Longrightarrow> (mismatch_pair u v) \\<notin> Id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> u \\<bowtie> v \\<Longrightarrow> mismatch_pair u v \\<notin> Id", "unfolding mismatch_pair_lcp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> u \\<bowtie> v \\<Longrightarrow>\n    (u ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|,\n     v ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|)\n    \\<notin> Id", "by (simp add: lcp_mismatch')"], ["", "lemma mismatch_ext_left: \"\\<not> u \\<bowtie> v \\<Longrightarrow> mismatch_pair u v = mismatch_pair (p\\<cdot>u) (p\\<cdot>v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> u \\<bowtie> v \\<Longrightarrow>\n    mismatch_pair u v = mismatch_pair (p \\<cdot> u) (p \\<cdot> v)", "unfolding mismatch_pair_lcp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> u \\<bowtie> v \\<Longrightarrow>\n    (u ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|,\n     v ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|) =\n    ((p \\<cdot> u) !\n     \\<^bold>|p \\<cdot> u \\<and>\\<^sub>p p \\<cdot> v\\<^bold>|,\n     (p \\<cdot> v) !\n     \\<^bold>|p \\<cdot> u \\<and>\\<^sub>p p \\<cdot> v\\<^bold>|)", "by (simp add: lcp_ext_left)"], ["", "lemma mismatch_ext_right: assumes  \"\\<not> u \\<bowtie> v\" \n  shows \"mismatch_pair u v = mismatch_pair (u\\<cdot>z) (v\\<cdot>w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mismatch_pair u v = mismatch_pair (u \\<cdot> z) (v \\<cdot> w)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. mismatch_pair u v = mismatch_pair (u \\<cdot> z) (v \\<cdot> w)", "have less1: \"\\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|u\\<^bold>|\" and less2: \"\\<^bold>|v \\<and>\\<^sub>p u\\<^bold>| < \\<^bold>|v\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|u\\<^bold>| &&&\n    \\<^bold>|v \\<and>\\<^sub>p u\\<^bold>| < \\<^bold>|v\\<^bold>|", "using lcp_len'[of u v] lcp_len'[of v u] assms"], ["proof (prove)\nusing this:\n  \\<not> u \\<le>p v \\<Longrightarrow>\n  \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|u\\<^bold>|\n  \\<not> v \\<le>p u \\<Longrightarrow>\n  \\<^bold>|v \\<and>\\<^sub>p u\\<^bold>| < \\<^bold>|v\\<^bold>|\n  \\<not> u \\<bowtie> v\n\ngoal (1 subgoal):\n 1. \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|u\\<^bold>| &&&\n    \\<^bold>|v \\<and>\\<^sub>p u\\<^bold>| < \\<^bold>|v\\<^bold>|", "by auto"], ["proof (state)\nthis:\n  \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>| < \\<^bold>|u\\<^bold>|\n  \\<^bold>|v \\<and>\\<^sub>p u\\<^bold>| < \\<^bold>|v\\<^bold>|\n\ngoal (1 subgoal):\n 1. mismatch_pair u v = mismatch_pair (u \\<cdot> z) (v \\<cdot> w)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. mismatch_pair u v = mismatch_pair (u \\<cdot> z) (v \\<cdot> w)", "unfolding mismatch_pair_lcp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (u ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|,\n     v ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|) =\n    ((u \\<cdot> z) !\n     \\<^bold>|u \\<cdot> z \\<and>\\<^sub>p v \\<cdot> w\\<^bold>|,\n     (v \\<cdot> w) !\n     \\<^bold>|u \\<cdot> z \\<and>\\<^sub>p v \\<cdot> w\\<^bold>|)", "unfolding pref_index[OF triv_pref less1, of z]  pref_index[OF triv_pref less2, of w, unfolded lcp_sym[of v]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((u \\<cdot> z) ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|,\n     (v \\<cdot> w) ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|) =\n    ((u \\<cdot> z) !\n     \\<^bold>|u \\<cdot> z \\<and>\\<^sub>p v \\<cdot> w\\<^bold>|,\n     (v \\<cdot> w) !\n     \\<^bold>|u \\<cdot> z \\<and>\\<^sub>p v \\<cdot> w\\<^bold>|)", "using assms lcp_ext_right[of u v _ z w]"], ["proof (prove)\nusing this:\n  \\<not> u \\<bowtie> v\n  \\<lbrakk>u \\<bowtie> v \\<Longrightarrow> ?thesis;\n   u \\<cdot> z \\<and>\\<^sub>p v \\<cdot> w =\n   u \\<and>\\<^sub>p v \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. ((u \\<cdot> z) ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|,\n     (v \\<cdot> w) ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|) =\n    ((u \\<cdot> z) !\n     \\<^bold>|u \\<cdot> z \\<and>\\<^sub>p v \\<cdot> w\\<^bold>|,\n     (v \\<cdot> w) !\n     \\<^bold>|u \\<cdot> z \\<and>\\<^sub>p v \\<cdot> w\\<^bold>|)", "by metis"], ["proof (state)\nthis:\n  mismatch_pair u v = mismatch_pair (u \\<cdot> z) (v \\<cdot> w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mismatchI: \"\\<not> u \\<bowtie> v \\<Longrightarrow> i < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>| \\<Longrightarrow> take i u = take i v \\<Longrightarrow> u!i \\<noteq> v!i\n   \\<Longrightarrow> mismatch_pair u v = (u!i,v!i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> u \\<bowtie> v;\n     i < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|; take i u = take i v;\n     u ! i \\<noteq> v ! i\\<rbrakk>\n    \\<Longrightarrow> mismatch_pair u v = (u ! i, v ! i)", "unfolding mismatch_pair_lcp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> u \\<bowtie> v;\n     i < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|; take i u = take i v;\n     u ! i \\<noteq> v ! i\\<rbrakk>\n    \\<Longrightarrow> (u ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|,\n                       v ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|) =\n                      (u ! i, v ! i)", "using lcp_lenI"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i < min \\<^bold>|?u\\<^bold>| \\<^bold>|?v\\<^bold>|;\n   take ?i ?u = take ?i ?v; ?u ! ?i \\<noteq> ?v ! ?i\\<rbrakk>\n  \\<Longrightarrow> ?i = \\<^bold>|?u \\<and>\\<^sub>p ?v\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> u \\<bowtie> v;\n     i < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|; take i u = take i v;\n     u ! i \\<noteq> v ! i\\<rbrakk>\n    \\<Longrightarrow> (u ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|,\n                       v ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|) =\n                      (u ! i, v ! i)", "by blast"], ["", "text \\<open>For incomparable words, the mismatch letters work in a similar way as the lexicographic order\\<close>"], ["", "lemma mismatch_lexord: assumes \"\\<not> u \\<bowtie> v\" and \"mismatch_pair u v \\<in> r\"    \n  shows \"(u,v) \\<in> lexord r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u, v) \\<in> lexord r", "unfolding lexord_take_index_conv mismatch_pair_lcp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|u\\<^bold>| < \\<^bold>|v\\<^bold>| \\<and>\n    take \\<^bold>|u\\<^bold>| v = u \\<or>\n    (\\<exists>i<min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|.\n        take i u = take i v \\<and> (u ! i, v ! i) \\<in> r)", "using  \\<open>mismatch_pair u v \\<in> r\\<close>[unfolded mismatch_pair_lcp]\n    incomp_lcp_len[OF assms(1)] lcp_take_eq"], ["proof (prove)\nusing this:\n  (u ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|,\n   v ! \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|)\n  \\<in> r\n  \\<^bold>|u \\<and>\\<^sub>p v\\<^bold>|\n  < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|\n  take \\<^bold>|?u \\<and>\\<^sub>p ?v\\<^bold>| ?u =\n  take \\<^bold>|?u \\<and>\\<^sub>p ?v\\<^bold>| ?v\n\ngoal (1 subgoal):\n 1. \\<^bold>|u\\<^bold>| < \\<^bold>|v\\<^bold>| \\<and>\n    take \\<^bold>|u\\<^bold>| v = u \\<or>\n    (\\<exists>i<min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|.\n        take i u = take i v \\<and> (u ! i, v ! i) \\<in> r)", "by blast"], ["", "text \\<open>However, the equivalence requires r to be irreflexive. \n(Due to the definition of lexord which is designed for irreflexive relations.)\\<close>"], ["", "lemma lexord_mismatch: assumes \"\\<not> u \\<bowtie> v\" and \"irrefl r\" \n  shows \"mismatch_pair u v \\<in> r \\<longleftrightarrow> (u,v) \\<in> lexord r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (mismatch_pair u v \\<in> r) = ((u, v) \\<in> lexord r)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. mismatch_pair u v \\<in> r \\<Longrightarrow> (u, v) \\<in> lexord r\n 2. (u, v) \\<in> lexord r \\<Longrightarrow> mismatch_pair u v \\<in> r", "assume \"(u,v) \\<in> lexord r\""], ["proof (state)\nthis:\n  (u, v) \\<in> lexord r\n\ngoal (2 subgoals):\n 1. mismatch_pair u v \\<in> r \\<Longrightarrow> (u, v) \\<in> lexord r\n 2. (u, v) \\<in> lexord r \\<Longrightarrow> mismatch_pair u v \\<in> r", "obtain i where  \"i < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|\" and  \"take i u = take i v\" and \"(u ! i, v ! i) \\<in> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|;\n         take i u = take i v; (u ! i, v ! i) \\<in> r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>(u,v) \\<in> lexord r\\<close>[unfolded lexord_take_index_conv] \\<open>\\<not> u \\<bowtie> v\\<close> pref_take_conv"], ["proof (prove)\nusing this:\n  \\<^bold>|u\\<^bold>| < \\<^bold>|v\\<^bold>| \\<and>\n  take \\<^bold>|u\\<^bold>| v = u \\<or>\n  (\\<exists>i<min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|.\n      take i u = take i v \\<and> (u ! i, v ! i) \\<in> r)\n  \\<not> u \\<bowtie> v\n  (take \\<^bold>|?r\\<^bold>| ?w = ?r) = (?r \\<le>p ?w)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|;\n         take i u = take i v; (u ! i, v ! i) \\<in> r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|\n  take i u = take i v\n  (u ! i, v ! i) \\<in> r\n\ngoal (2 subgoals):\n 1. mismatch_pair u v \\<in> r \\<Longrightarrow> (u, v) \\<in> lexord r\n 2. (u, v) \\<in> lexord r \\<Longrightarrow> mismatch_pair u v \\<in> r", "have \"u!i \\<noteq> v!i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u ! i \\<noteq> v ! i", "using  \\<open>irrefl r\\<close>[unfolded irrefl_def] \\<open>(u ! i, v ! i) \\<in> r\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>a. (a, a) \\<notin> r\n  (u ! i, v ! i) \\<in> r\n\ngoal (1 subgoal):\n 1. u ! i \\<noteq> v ! i", "by fastforce"], ["proof (state)\nthis:\n  u ! i \\<noteq> v ! i\n\ngoal (2 subgoals):\n 1. mismatch_pair u v \\<in> r \\<Longrightarrow> (u, v) \\<in> lexord r\n 2. (u, v) \\<in> lexord r \\<Longrightarrow> mismatch_pair u v \\<in> r", "from \\<open>(u ! i, v ! i) \\<in> r\\<close>[folded mismatchI[OF \\<open>\\<not> u \\<bowtie> v\\<close> \\<open>i < min \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|\\<close> \\<open>take i u = take i v\\<close> \\<open>u!i \\<noteq> v!i\\<close>]]"], ["proof (chain)\npicking this:\n  mismatch_pair u v \\<in> r", "show  \"mismatch_pair u v \\<in> r\""], ["proof (prove)\nusing this:\n  mismatch_pair u v \\<in> r\n\ngoal (1 subgoal):\n 1. mismatch_pair u v \\<in> r", "."], ["proof (state)\nthis:\n  mismatch_pair u v \\<in> r\n\ngoal (1 subgoal):\n 1. mismatch_pair u v \\<in> r \\<Longrightarrow> (u, v) \\<in> lexord r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. mismatch_pair u v \\<in> r \\<Longrightarrow> (u, v) \\<in> lexord r", "from mismatch_lexord[OF \\<open>\\<not> u \\<bowtie> v\\<close>]"], ["proof (chain)\npicking this:\n  mismatch_pair u v \\<in> ?r \\<Longrightarrow> (u, v) \\<in> lexord ?r", "show \"mismatch_pair u v \\<in> r \\<Longrightarrow> (u, v) \\<in> lexord r\""], ["proof (prove)\nusing this:\n  mismatch_pair u v \\<in> ?r \\<Longrightarrow> (u, v) \\<in> lexord ?r\n\ngoal (1 subgoal):\n 1. mismatch_pair u v \\<in> r \\<Longrightarrow> (u, v) \\<in> lexord r", "."], ["proof (state)\nthis:\n  mismatch_pair u v \\<in> r \\<Longrightarrow> (u, v) \\<in> lexord r\n\ngoal:\nNo subgoals!", "qed"], ["", "section \"Factor properties\""], ["", "lemma rev_fac[reversal_rule]: \"rev u \\<le>f rev v \\<longleftrightarrow> u \\<le>f v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev u \\<le>f rev v = u \\<le>f v", "using Sublist.sublist_rev"], ["proof (prove)\nusing this:\n  rev ?xs \\<le>f rev ?ys = ?xs \\<le>f ?ys\n\ngoal (1 subgoal):\n 1. rev u \\<le>f rev v = u \\<le>f v", "."], ["", "lemma fac_pref: \"u \\<le>f v \\<equiv> \\<exists> p. p \\<cdot> u \\<le>p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>f v \\<equiv> \\<exists>p. p \\<cdot> u \\<le>p v", "by simp"], ["", "lemma fac_pref_suf: \"u \\<le>f v \\<Longrightarrow> \\<exists> p. p \\<le>p v \\<and> u \\<le>s p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>f v \\<Longrightarrow> \\<exists>p. p \\<le>p v \\<and> u \\<le>s p", "using sublist_altdef"], ["proof (prove)\nusing this:\n  ?xs \\<le>f ?ys = (\\<exists>ys'. ys' \\<le>p ?ys \\<and> ?xs \\<le>s ys')\n\ngoal (1 subgoal):\n 1. u \\<le>f v \\<Longrightarrow> \\<exists>p. p \\<le>p v \\<and> u \\<le>s p", "by blast"], ["", "lemma pref_suf_fac: \"r \\<le>p v \\<Longrightarrow> u \\<le>s r \\<Longrightarrow> u \\<le>f v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<le>p v; u \\<le>s r\\<rbrakk> \\<Longrightarrow> u \\<le>f v", "using sublist_altdef"], ["proof (prove)\nusing this:\n  ?xs \\<le>f ?ys = (\\<exists>ys'. ys' \\<le>p ?ys \\<and> ?xs \\<le>s ys')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<le>p v; u \\<le>s r\\<rbrakk> \\<Longrightarrow> u \\<le>f v", "by blast"], ["", "lemmas \n  fac_suf = fac_pref[reversed] and\n  fac_suf_pref = fac_pref_suf[reversed] and\n  suf_pref_fac = pref_suf_fac[reversed]"], ["", "lemma suf_pref_eq: \"s \\<le>s p \\<Longrightarrow> p \\<le>p s \\<Longrightarrow> p = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<le>s p; p \\<le>p s\\<rbrakk> \\<Longrightarrow> p = s", "using sublist_order.eq_iff"], ["proof (prove)\nusing this:\n  (?x = ?y) = (?x \\<le>f ?y \\<and> ?y \\<le>f ?x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<le>s p; p \\<le>p s\\<rbrakk> \\<Longrightarrow> p = s", "by blast"], ["", "lemma fac_triv': assumes  \"p\\<cdot>x\\<cdot>q = x\" shows \"q = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q = \\<epsilon>", "using prefI[of \"p\\<cdot>x\" q \"p\\<cdot>x\\<cdot>q\"] sufI[of \\<epsilon> \"p\\<cdot>x\\<cdot>q\" \"x\", THEN suf_ext[of \"p\\<cdot>x\\<cdot>q\" x p]] \n    suf_pref_eq[of x \"p\\<cdot>x\"] self_append_conv[of \"p\\<cdot>x\" q]"], ["proof (prove)\nusing this:\n  (p \\<cdot> x) \\<cdot> q = p \\<cdot> x \\<cdot> q \\<Longrightarrow>\n  p \\<cdot> x \\<le>p p \\<cdot> x \\<cdot> q\n  \\<epsilon> \\<cdot> p \\<cdot> x \\<cdot> q = x \\<Longrightarrow>\n  p \\<cdot> x \\<cdot> q \\<le>s p \\<cdot> x\n  \\<lbrakk>x \\<le>s p \\<cdot> x; p \\<cdot> x \\<le>p x\\<rbrakk>\n  \\<Longrightarrow> p \\<cdot> x = x\n  (p \\<cdot> x = (p \\<cdot> x) \\<cdot> q) = (q = \\<epsilon>)\n\ngoal (1 subgoal):\n 1. q = \\<epsilon>", "unfolding assms append_Nil rassoc"], ["proof (prove)\nusing this:\n  x = x \\<Longrightarrow> p \\<cdot> x \\<le>p x\n  x = x \\<Longrightarrow> x \\<le>s p \\<cdot> x\n  \\<lbrakk>x \\<le>s p \\<cdot> x; p \\<cdot> x \\<le>p x\\<rbrakk>\n  \\<Longrightarrow> p \\<cdot> x = x\n  (p \\<cdot> x = x) = (q = \\<epsilon>)\n\ngoal (1 subgoal):\n 1. q = \\<epsilon>", "by blast"], ["", "lemma fac_triv: \"p\\<cdot>x\\<cdot>q = x \\<Longrightarrow> p = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<cdot> x \\<cdot> q = x \\<Longrightarrow> p = \\<epsilon>", "using fac_triv'"], ["proof (prove)\nusing this:\n  ?p \\<cdot> ?x \\<cdot> ?q = ?x \\<Longrightarrow> ?q = \\<epsilon>\n\ngoal (1 subgoal):\n 1. p \\<cdot> x \\<cdot> q = x \\<Longrightarrow> p = \\<epsilon>", "by force"], ["", "lemmas \n  suf_fac = suffix_imp_sublist and\n  pref_fac = prefix_imp_sublist"], ["", "lemma fac_Cons_E: assumes \"u \\<le>f (a#v)\"\n  obtains \"u \\<le>p (a#v)\" | \"u \\<le>f v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p a # v \\<Longrightarrow> thesis;\n     u \\<le>f v \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms[unfolded sublist_Cons_right]"], ["proof (prove)\nusing this:\n  u \\<le>p a # v \\<or> u \\<le>f v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p a # v \\<Longrightarrow> thesis;\n     u \\<le>f v \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by fast"], ["", "lemmas\n  fac_snoc_E = fac_Cons_E[reversed]"], ["", "section \"Power and its properties\""], ["", "text\\<open>Word powers are often investigated in Combinatorics on Words.\nWe thus interpret words as @{term monoid_mult} and adopt a notation for the word power.\n\\<close>"], ["", "declare power.power.simps [code]"], ["", "interpretation  monoid_mult \"\\<epsilon>\" \"append\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.monoid_mult \\<epsilon> (\\<cdot>)", "by standard simp+"], ["", "notation power (infixr \"\\<^sup>@\" 80)\n\n\\<comment> \\<open>inherited power properties\\<close>"], ["", "lemma pow_zero [simp]:  \"u\\<^sup>@0 = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<^sup>@ 0 = \\<epsilon>", "using power.power_0"], ["proof (prove)\nusing this:\n  ?a \\<^sup>@ 0 = \\<epsilon>\n\ngoal (1 subgoal):\n 1. u \\<^sup>@ 0 = \\<epsilon>", "."], ["", "lemma emp_pow: \"\\<epsilon>\\<^sup>@n = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<epsilon> \\<^sup>@ n = \\<epsilon>", "using power_one"], ["proof (prove)\nusing this:\n  \\<epsilon> \\<^sup>@ ?n = \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<epsilon> \\<^sup>@ n = \\<epsilon>", "."], ["", "lemma pow_Suc_list: \"u\\<^sup>@(Suc n) = u \\<cdot> u\\<^sup>@n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<^sup>@ Suc n = u \\<cdot> u \\<^sup>@ n", "using power.power_Suc"], ["proof (prove)\nusing this:\n  ?a \\<^sup>@ Suc ?n = ?a \\<cdot> ?a \\<^sup>@ ?n\n\ngoal (1 subgoal):\n 1. u \\<^sup>@ Suc n = u \\<cdot> u \\<^sup>@ n", "."], ["", "lemma pow_commutes_list: \"u\\<^sup>@n \\<cdot> u = u \\<cdot> u\\<^sup>@n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<^sup>@ n \\<cdot> u = u \\<cdot> u \\<^sup>@ n", "using power_commutes"], ["proof (prove)\nusing this:\n  ?a \\<^sup>@ ?n \\<cdot> ?a = ?a \\<cdot> ?a \\<^sup>@ ?n\n\ngoal (1 subgoal):\n 1. u \\<^sup>@ n \\<cdot> u = u \\<cdot> u \\<^sup>@ n", "."], ["", "lemma pow_add_list: \"x\\<^sup>@(a+b) = x\\<^sup>@a\\<cdot>x\\<^sup>@b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<^sup>@ (a + b) = x \\<^sup>@ a \\<cdot> x \\<^sup>@ b", "using power_add"], ["proof (prove)\nusing this:\n  ?a \\<^sup>@ (?m + ?n) = ?a \\<^sup>@ ?m \\<cdot> ?a \\<^sup>@ ?n\n\ngoal (1 subgoal):\n 1. x \\<^sup>@ (a + b) = x \\<^sup>@ a \\<cdot> x \\<^sup>@ b", "."], ["", "lemma pow_Suc2_list: \"u\\<^sup>@Suc n = u\\<^sup>@n \\<cdot> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<^sup>@ Suc n = u \\<^sup>@ n \\<cdot> u", "using power_Suc2"], ["proof (prove)\nusing this:\n  ?a \\<^sup>@ Suc ?n = ?a \\<^sup>@ ?n \\<cdot> ?a\n\ngoal (1 subgoal):\n 1. u \\<^sup>@ Suc n = u \\<^sup>@ n \\<cdot> u", "."], ["", "lemma pow_eq_if_list: \"p\\<^sup>@m = (if m = 0 then \\<epsilon> else p \\<cdot> p\\<^sup>@(m-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<^sup>@ m =\n    (if m = 0 then \\<epsilon> else p \\<cdot> p \\<^sup>@ (m - 1))", "using power_eq_if"], ["proof (prove)\nusing this:\n  ?p \\<^sup>@ ?m =\n  (if ?m = 0 then \\<epsilon> else ?p \\<cdot> ?p \\<^sup>@ (?m - 1))\n\ngoal (1 subgoal):\n 1. p \\<^sup>@ m =\n    (if m = 0 then \\<epsilon> else p \\<cdot> p \\<^sup>@ (m - 1))", "."], ["", "lemma pow_one_id: \"u\\<^sup>@1 = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<^sup>@ 1 = u", "using power_one_right"], ["proof (prove)\nusing this:\n  ?a \\<^sup>@ 1 = ?a\n\ngoal (1 subgoal):\n 1. u \\<^sup>@ 1 = u", "."], ["", "lemma pow2_list: \"u\\<^sup>@2 = u \\<cdot> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CoWBasic.power2 u = u \\<cdot> u", "using power2_eq_square"], ["proof (prove)\nusing this:\n  CoWBasic.power2 ?a = ?a \\<cdot> ?a\n\ngoal (1 subgoal):\n 1. CoWBasic.power2 u = u \\<cdot> u", "."], ["", "lemma comm_add_exp: \"u \\<cdot> v = v \\<cdot> u \\<Longrightarrow> u \\<^sup>@ n \\<cdot> v = v \\<cdot> u \\<^sup>@ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> v = v \\<cdot> u \\<Longrightarrow>\n    u \\<^sup>@ n \\<cdot> v = v \\<cdot> u \\<^sup>@ n", "using power_commuting_commutes"], ["proof (prove)\nusing this:\n  ?x \\<cdot> ?y = ?y \\<cdot> ?x \\<Longrightarrow>\n  ?x \\<^sup>@ ?n \\<cdot> ?y = ?y \\<cdot> ?x \\<^sup>@ ?n\n\ngoal (1 subgoal):\n 1. u \\<cdot> v = v \\<cdot> u \\<Longrightarrow>\n    u \\<^sup>@ n \\<cdot> v = v \\<cdot> u \\<^sup>@ n", "."], ["", "lemma pow_mult_list: \"u\\<^sup>@(m*n) = (u\\<^sup>@m)\\<^sup>@n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<^sup>@ (m * n) = (u \\<^sup>@ m) \\<^sup>@ n", "using power_mult"], ["proof (prove)\nusing this:\n  ?a \\<^sup>@ (?m * ?n) = (?a \\<^sup>@ ?m) \\<^sup>@ ?n\n\ngoal (1 subgoal):\n 1. u \\<^sup>@ (m * n) = (u \\<^sup>@ m) \\<^sup>@ n", "."], ["", "lemma pow_rev_emp_conv[reversal_rule]: \"power.power (rev \\<epsilon>) (\\<cdot>) = (\\<^sup>@)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. power.power (rev \\<epsilon>) (\\<cdot>) = (\\<^sup>@)", "by simp\n\n\\<comment> \\<open>more power properties\\<close>"], ["", "lemma zero_exp: \"n = 0 \\<Longrightarrow> r\\<^sup>@n = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = 0 \\<Longrightarrow> r \\<^sup>@ n = \\<epsilon>", "by simp"], ["", "lemma nemp_pow[elim]: \"t\\<^sup>@m \\<noteq> \\<epsilon> \\<Longrightarrow> m \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<^sup>@ m \\<noteq> \\<epsilon> \\<Longrightarrow> m \\<noteq> 0", "using zero_exp"], ["proof (prove)\nusing this:\n  ?n = 0 \\<Longrightarrow> ?r \\<^sup>@ ?n = \\<epsilon>\n\ngoal (1 subgoal):\n 1. t \\<^sup>@ m \\<noteq> \\<epsilon> \\<Longrightarrow> m \\<noteq> 0", "by blast"], ["", "lemma nemp_pow'[elim]: \"t\\<^sup>@m \\<noteq> \\<epsilon> \\<Longrightarrow> t \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<^sup>@ m \\<noteq> \\<epsilon> \\<Longrightarrow> t \\<noteq> \\<epsilon>", "using emp_pow"], ["proof (prove)\nusing this:\n  \\<epsilon> \\<^sup>@ ?n = \\<epsilon>\n\ngoal (1 subgoal):\n 1. t \\<^sup>@ m \\<noteq> \\<epsilon> \\<Longrightarrow> t \\<noteq> \\<epsilon>", "by auto"], ["", "lemma sing_pow:\"i < m \\<Longrightarrow> ([a]\\<^sup>@m) ! i = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < m \\<Longrightarrow> ([a] \\<^sup>@ m) ! i = a", "by (induct i m rule: diff_induct) auto"], ["", "lemma pow_is_concat_replicate: \"u\\<^sup>@n = concat (replicate n u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<^sup>@ n = concat (replicate n u)", "by (induct n) auto"], ["", "lemma pow_slide: \"u \\<cdot> (v \\<cdot> u)\\<^sup>@n  \\<cdot> v = (u \\<cdot> v)\\<^sup>@(Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> (v \\<cdot> u) \\<^sup>@ n \\<cdot> v =\n    (u \\<cdot> v) \\<^sup>@ Suc n", "by (induct n) simp+"], ["", "lemma pop_pow_one:  \"m \\<noteq> 0 \\<Longrightarrow> r\\<^sup>@m = r \\<cdot> r\\<^sup>@(m-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    r \\<^sup>@ m = r \\<cdot> r \\<^sup>@ (m - 1)", "by (simp add: pow_eq_if_list)"], ["", "lemma hd_pow: assumes \"n \\<noteq> 0\" shows \"hd(u\\<^sup>@n) = hd u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd (u \\<^sup>@ n) = hd u", "unfolding pop_pow_one[OF \\<open>n \\<noteq> 0\\<close>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. hd (u \\<cdot> u \\<^sup>@ (n - 1)) = hd u", "using  hd_append2"], ["proof (prove)\nusing this:\n  ?xs \\<noteq> \\<epsilon> \\<Longrightarrow> hd (?xs \\<cdot> ?ys) = hd ?xs\n\ngoal (1 subgoal):\n 1. hd (u \\<cdot> u \\<^sup>@ (n - 1)) = hd u", "by (cases \"u = \\<epsilon>\", simp)"], ["", "lemma pop_pow: \"m \\<le> k \\<Longrightarrow>u\\<^sup>@m \\<cdot> u\\<^sup>@(k-m) =  u\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<le> k \\<Longrightarrow>\n    u \\<^sup>@ m \\<cdot> u \\<^sup>@ (k - m) = u \\<^sup>@ k", "using le_add_diff_inverse pow_add_list"], ["proof (prove)\nusing this:\n  ?b \\<le> ?a \\<Longrightarrow> ?b + (?a - ?b) = ?a\n  ?x \\<^sup>@ (?a + ?b) = ?x \\<^sup>@ ?a \\<cdot> ?x \\<^sup>@ ?b\n\ngoal (1 subgoal):\n 1. m \\<le> k \\<Longrightarrow>\n    u \\<^sup>@ m \\<cdot> u \\<^sup>@ (k - m) = u \\<^sup>@ k", "by metis"], ["", "lemma pop_pow_cancel: \"u\\<^sup>@k \\<cdot> v = u\\<^sup>@m \\<cdot> w \\<Longrightarrow> m \\<le> k \\<Longrightarrow> u\\<^sup>@(k-m) \\<cdot> v = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<^sup>@ k \\<cdot> v = u \\<^sup>@ m \\<cdot> w;\n     m \\<le> k\\<rbrakk>\n    \\<Longrightarrow> u \\<^sup>@ (k - m) \\<cdot> v = w", "using  lassoc pop_pow[of m k u] same_append_eq[of \"u\\<^sup>@m\" \"u\\<^sup>@(k-m)\\<cdot>v\" w, unfolded lassoc]"], ["proof (prove)\nusing this:\n  ?xs \\<cdot> ?ys \\<cdot> ?zs = (?xs \\<cdot> ?ys) \\<cdot> ?zs\n  m \\<le> k \\<Longrightarrow>\n  u \\<^sup>@ m \\<cdot> u \\<^sup>@ (k - m) = u \\<^sup>@ k\n  ((u \\<^sup>@ m \\<cdot> u \\<^sup>@ (k - m)) \\<cdot> v =\n   u \\<^sup>@ m \\<cdot> w) =\n  (u \\<^sup>@ (k - m) \\<cdot> v = w)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<^sup>@ k \\<cdot> v = u \\<^sup>@ m \\<cdot> w;\n     m \\<le> k\\<rbrakk>\n    \\<Longrightarrow> u \\<^sup>@ (k - m) \\<cdot> v = w", "by argo"], ["", "lemma pow_comm: \"t\\<^sup>@k \\<cdot> t\\<^sup>@m = t\\<^sup>@m \\<cdot> t\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<^sup>@ k \\<cdot> t \\<^sup>@ m = t \\<^sup>@ m \\<cdot> t \\<^sup>@ k", "unfolding pow_add_list[symmetric] add.commute[of k]"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<^sup>@ (m + k) = t \\<^sup>@ (m + k)", ".."], ["", "lemma comm_add_exps: assumes \"r \\<cdot> u = u \\<cdot> r\" shows \"r\\<^sup>@m \\<cdot> u\\<^sup>@k = u\\<^sup>@k \\<cdot> r\\<^sup>@m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<^sup>@ m \\<cdot> u \\<^sup>@ k = u \\<^sup>@ k \\<cdot> r \\<^sup>@ m", "using comm_add_exp[OF comm_add_exp[OF assms, symmetric], symmetric]"], ["proof (prove)\nusing this:\n  r \\<^sup>@ ?na \\<cdot> u \\<^sup>@ ?n =\n  u \\<^sup>@ ?n \\<cdot> r \\<^sup>@ ?na\n\ngoal (1 subgoal):\n 1. r \\<^sup>@ m \\<cdot> u \\<^sup>@ k = u \\<^sup>@ k \\<cdot> r \\<^sup>@ m", "."], ["", "lemma rev_pow: \"rev (x\\<^sup>@m) = (rev x)\\<^sup>@m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev (x \\<^sup>@ m) = rev x \\<^sup>@ m", "by (induct m, simp, simp add: pow_commutes_list)"], ["", "lemmas [reversal_rule] = rev_pow[symmetric]"], ["", "lemmas pow_eq_if_list' = pow_eq_if_list[reversed] and\n  pop_pow_one' = pop_pow_one[reversed] and\n  pop_pow' = pop_pow[reversed] and\n  pop_pow_cancel' = pop_pow_cancel[reversed]"], ["", "lemma pow_len:  \"\\<^bold>|u\\<^sup>@k\\<^bold>| = k * \\<^bold>|u\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|u \\<^sup>@ k\\<^bold>| = k * \\<^bold>|u\\<^bold>|", "by (induct k) simp+"], ["", "lemma eq_pow_exp: assumes \"u \\<noteq> \\<epsilon>\" shows \"u\\<^sup>@k = u\\<^sup>@m \\<longleftrightarrow> k = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<^sup>@ k = u \\<^sup>@ m) = (k = m)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. u \\<^sup>@ k = u \\<^sup>@ m \\<Longrightarrow> k = m\n 2. k = m \\<Longrightarrow> u \\<^sup>@ k = u \\<^sup>@ m", "assume \"k = m\""], ["proof (state)\nthis:\n  k = m\n\ngoal (2 subgoals):\n 1. u \\<^sup>@ k = u \\<^sup>@ m \\<Longrightarrow> k = m\n 2. k = m \\<Longrightarrow> u \\<^sup>@ k = u \\<^sup>@ m", "thus \"u\\<^sup>@k = u\\<^sup>@m\""], ["proof (prove)\nusing this:\n  k = m\n\ngoal (1 subgoal):\n 1. u \\<^sup>@ k = u \\<^sup>@ m", "by simp"], ["proof (state)\nthis:\n  u \\<^sup>@ k = u \\<^sup>@ m\n\ngoal (1 subgoal):\n 1. u \\<^sup>@ k = u \\<^sup>@ m \\<Longrightarrow> k = m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<^sup>@ k = u \\<^sup>@ m \\<Longrightarrow> k = m", "assume \"u\\<^sup>@k = u\\<^sup>@m\""], ["proof (state)\nthis:\n  u \\<^sup>@ k = u \\<^sup>@ m\n\ngoal (1 subgoal):\n 1. u \\<^sup>@ k = u \\<^sup>@ m \\<Longrightarrow> k = m", "from lenarg[OF this, unfolded pow_len mult_cancel2]"], ["proof (chain)\npicking this:\n  k = m \\<or> \\<^bold>|u\\<^bold>| = 0", "show \"k = m\""], ["proof (prove)\nusing this:\n  k = m \\<or> \\<^bold>|u\\<^bold>| = 0\n\ngoal (1 subgoal):\n 1. k = m", "using \\<open>u \\<noteq> \\<epsilon>\\<close>[folded length_0_conv]"], ["proof (prove)\nusing this:\n  k = m \\<or> \\<^bold>|u\\<^bold>| = 0\n  \\<^bold>|u\\<^bold>| \\<noteq> 0\n\ngoal (1 subgoal):\n 1. k = m", "by blast"], ["proof (state)\nthis:\n  k = m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nemp_emp_power: assumes \"u \\<noteq> \\<epsilon>\" shows \"u\\<^sup>@m = \\<epsilon> \\<longleftrightarrow> m = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<^sup>@ m = \\<epsilon>) = (m = 0)", "using  eq_pow_exp[OF assms]"], ["proof (prove)\nusing this:\n  (u \\<^sup>@ ?k = u \\<^sup>@ ?m) = (?k = ?m)\n\ngoal (1 subgoal):\n 1. (u \\<^sup>@ m = \\<epsilon>) = (m = 0)", "by fastforce"], ["", "lemma nonzero_pow_emp: assumes \"m \\<noteq> 0\" shows \"u\\<^sup>@m = \\<epsilon> \\<longleftrightarrow>  u = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<^sup>@ m = \\<epsilon>) = (u = \\<epsilon>)", "by (meson assms nemp_emp_power nemp_pow')"], ["", "lemma pow_eq_eq:\n  assumes \"u\\<^sup>@k = v\\<^sup>@k\" and \"k \\<noteq> 0\"\n  shows \"u = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u = v", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. u = v", "have \"\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|", "using lenarg[OF \\<open>u\\<^sup>@k = v\\<^sup>@k\\<close>, unfolded pow_len] \\<open>k \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  k * \\<^bold>|u\\<^bold>| = k * \\<^bold>|v\\<^bold>|\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|", "by simp"], ["proof (state)\nthis:\n  \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\n\ngoal (1 subgoal):\n 1. u = v", "from eqd_equal[of u \"u\\<^sup>@(k-1)\" v \"v\\<^sup>@(k-1)\", OF _ this]"], ["proof (chain)\npicking this:\n  u \\<cdot> u \\<^sup>@ (k - 1) =\n  v \\<cdot> v \\<^sup>@ (k - 1) \\<Longrightarrow>\n  u = v \\<and> u \\<^sup>@ (k - 1) = v \\<^sup>@ (k - 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<cdot> u \\<^sup>@ (k - 1) =\n  v \\<cdot> v \\<^sup>@ (k - 1) \\<Longrightarrow>\n  u = v \\<and> u \\<^sup>@ (k - 1) = v \\<^sup>@ (k - 1)\n\ngoal (1 subgoal):\n 1. u = v", "using \\<open>u\\<^sup>@k = v\\<^sup>@k\\<close>"], ["proof (prove)\nusing this:\n  u \\<cdot> u \\<^sup>@ (k - 1) =\n  v \\<cdot> v \\<^sup>@ (k - 1) \\<Longrightarrow>\n  u = v \\<and> u \\<^sup>@ (k - 1) = v \\<^sup>@ (k - 1)\n  u \\<^sup>@ k = v \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. u = v", "unfolding pop_pow_one[OF \\<open>k \\<noteq> 0\\<close>]"], ["proof (prove)\nusing this:\n  u \\<cdot> u \\<^sup>@ (k - 1) =\n  v \\<cdot> v \\<^sup>@ (k - 1) \\<Longrightarrow>\n  u = v \\<and> u \\<^sup>@ (k - 1) = v \\<^sup>@ (k - 1)\n  u \\<cdot> u \\<^sup>@ (k - 1) = v \\<cdot> v \\<^sup>@ (k - 1)\n\ngoal (1 subgoal):\n 1. u = v", "by blast"], ["proof (state)\nthis:\n  u = v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sing_pow_empty: \"[a]\\<^sup>@n = \\<epsilon> \\<longleftrightarrow> n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([a] \\<^sup>@ n = \\<epsilon>) = (n = 0)", "by (simp add: nemp_emp_power)"], ["", "lemma sing_pow_lists: \"a \\<in> A \\<Longrightarrow> [a]\\<^sup>@n \\<in> lists A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> A \\<Longrightarrow> [a] \\<^sup>@ n \\<in> lists A", "by (induct n, auto)"], ["", "lemma long_power: \"r \\<noteq> \\<epsilon> \\<Longrightarrow> \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|r\\<^sup>@\\<^bold>|x\\<^bold>|\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<noteq> \\<epsilon> \\<Longrightarrow>\n    \\<^bold>|x\\<^bold>|\n    \\<le> \\<^bold>|r \\<^sup>@ \\<^bold>|x\\<^bold>|\\<^bold>|", "unfolding pow_len[of r \"\\<^bold>|x\\<^bold>|\"]"], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<noteq> \\<epsilon> \\<Longrightarrow>\n    \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|x\\<^bold>| * \\<^bold>|r\\<^bold>|", "using nemp_pos_len"], ["proof (prove)\nusing this:\n  ?r \\<noteq> \\<epsilon> \\<Longrightarrow> 1 \\<le> \\<^bold>|?r\\<^bold>|\n\ngoal (1 subgoal):\n 1. r \\<noteq> \\<epsilon> \\<Longrightarrow>\n    \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|x\\<^bold>| * \\<^bold>|r\\<^bold>|", "by auto"], ["", "lemma long_power': \"r \\<noteq> \\<epsilon> \\<Longrightarrow> \\<^bold>|x\\<^bold>| < \\<^bold>|r\\<^sup>@(Suc \\<^bold>|x\\<^bold>|)\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<noteq> \\<epsilon> \\<Longrightarrow>\n    \\<^bold>|x\\<^bold>|\n    < \\<^bold>|r \\<^sup>@ Suc \\<^bold>|x\\<^bold>|\\<^bold>|", "unfolding pow_Suc_list length_append"], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<noteq> \\<epsilon> \\<Longrightarrow>\n    \\<^bold>|x\\<^bold>|\n    < \\<^bold>|r\\<^bold>| + \\<^bold>|r \\<^sup>@ \\<^bold>|x\\<^bold>|\\<^bold>|", "by (simp add: long_power add_strict_increasing)"], ["", "lemma long_pow_exp: \"r \\<noteq> \\<epsilon> \\<Longrightarrow> m \\<le> \\<^bold>|r\\<^sup>@m\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<noteq> \\<epsilon> \\<Longrightarrow>\n    m \\<le> \\<^bold>|r \\<^sup>@ m\\<^bold>|", "unfolding pow_len[of r m]"], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<noteq> \\<epsilon> \\<Longrightarrow> m \\<le> m * \\<^bold>|r\\<^bold>|", "using nemp_pos_len[of r]"], ["proof (prove)\nusing this:\n  r \\<noteq> \\<epsilon> \\<Longrightarrow> 1 \\<le> \\<^bold>|r\\<^bold>|\n\ngoal (1 subgoal):\n 1. r \\<noteq> \\<epsilon> \\<Longrightarrow> m \\<le> m * \\<^bold>|r\\<^bold>|", "by simp"], ["", "lemma long_pow_ex: assumes \"r \\<noteq> \\<epsilon>\" obtains n where  \"m \\<le> \\<^bold>|r\\<^sup>@n\\<^bold>|\" and \"n \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>m \\<le> \\<^bold>|r \\<^sup>@ n\\<^bold>|;\n         n \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>m \\<le> \\<^bold>|r \\<^sup>@ n\\<^bold>|;\n         n \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain x :: \"'a list\" where \"\\<^bold>|x\\<^bold>| = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<^bold>|x\\<^bold>| = m \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Ex_list_of_length"], ["proof (prove)\nusing this:\n  \\<exists>xs. \\<^bold>|xs\\<^bold>| = ?n\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<^bold>|x\\<^bold>| = m \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<^bold>|x\\<^bold>| = m\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>m \\<le> \\<^bold>|r \\<^sup>@ n\\<^bold>|;\n         n \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using that[of m, OF long_power[OF \\<open>r \\<noteq> \\<epsilon>\\<close>, of x, unfolded \\<open>\\<^bold>|x\\<^bold>| = m\\<close>]] that[of \"Suc 1\"]"], ["proof (prove)\nusing this:\n  m \\<noteq> 0 \\<Longrightarrow> thesis\n  \\<lbrakk>m \\<le> \\<^bold>|r \\<^sup>@ Suc 1\\<^bold>|;\n   Suc 1 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pref_pow_ext: \"x \\<le>p r\\<^sup>@k \\<Longrightarrow> x \\<le>p r\\<^sup>@Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>p r \\<^sup>@ k \\<Longrightarrow> x \\<le>p r \\<^sup>@ Suc k", "using pref_trans[OF _ prefI[OF pow_Suc2_list[symmetric]]]"], ["proof (prove)\nusing this:\n  ?a \\<le>p ?s1 \\<^sup>@ ?n2 \\<Longrightarrow>\n  ?a \\<le>p ?s1 \\<^sup>@ Suc ?n2\n\ngoal (1 subgoal):\n 1. x \\<le>p r \\<^sup>@ k \\<Longrightarrow> x \\<le>p r \\<^sup>@ Suc k", "."], ["", "lemma pref_pow_ext': \"u \\<le>p r\\<^sup>@k \\<Longrightarrow> u \\<le>p r \\<cdot> r\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p r \\<^sup>@ k \\<Longrightarrow> u \\<le>p r \\<cdot> r \\<^sup>@ k", "using pref_pow_ext[unfolded pow_Suc_list]"], ["proof (prove)\nusing this:\n  ?x \\<le>p ?r \\<^sup>@ ?k \\<Longrightarrow>\n  ?x \\<le>p ?r \\<cdot> ?r \\<^sup>@ ?k\n\ngoal (1 subgoal):\n 1. u \\<le>p r \\<^sup>@ k \\<Longrightarrow> u \\<le>p r \\<cdot> r \\<^sup>@ k", "."], ["", "lemma pref_pow_root_ext: \"x \\<le>p r\\<^sup>@k \\<Longrightarrow> r \\<cdot> x \\<le>p r\\<^sup>@Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>p r \\<^sup>@ k \\<Longrightarrow>\n    r \\<cdot> x \\<le>p r \\<^sup>@ Suc k", "by simp"], ["", "lemma pref_prod_root: \"u \\<le>p r\\<^sup>@k \\<Longrightarrow> u \\<le>p r \\<cdot> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p r \\<^sup>@ k \\<Longrightarrow> u \\<le>p r \\<cdot> u", "using pref_pow_ext'[THEN pref_prod_pref]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<le>p ?z \\<^sup>@ ?k1; ?u \\<le>p ?z \\<^sup>@ ?k1\\<rbrakk>\n  \\<Longrightarrow> ?u \\<le>p ?z \\<cdot> ?u\n\ngoal (1 subgoal):\n 1. u \\<le>p r \\<^sup>@ k \\<Longrightarrow> u \\<le>p r \\<cdot> u", "."], ["", "lemma pref_exps_pow:  \"k \\<le> l \\<Longrightarrow> r\\<^sup>@k \\<le>p r\\<^sup>@l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> l \\<Longrightarrow> r \\<^sup>@ k \\<le>p r \\<^sup>@ l", "using leI pop_pow[of k l r]"], ["proof (prove)\nusing this:\n  \\<not> ?x < ?y \\<Longrightarrow> ?y \\<le> ?x\n  k \\<le> l \\<Longrightarrow>\n  r \\<^sup>@ k \\<cdot> r \\<^sup>@ (l - k) = r \\<^sup>@ l\n\ngoal (1 subgoal):\n 1. k \\<le> l \\<Longrightarrow> r \\<^sup>@ k \\<le>p r \\<^sup>@ l", "by blast"], ["", "lemma pref_exp_le: assumes \"u \\<noteq> \\<epsilon>\" \"u\\<^sup>@m \\<le>p u\\<^sup>@n\" shows \"m \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<le> n", "using mult_cancel_le[OF nemp_len[OF \\<open>u \\<noteq> \\<epsilon>\\<close>], of m n] \n    prefix_length_le[OF \\<open>u\\<^sup>@m \\<le>p u\\<^sup>@n\\<close>, unfolded pow_len[of u m] pow_len[of u n]]"], ["proof (prove)\nusing this:\n  m * \\<^bold>|u\\<^bold>| \\<le> n * \\<^bold>|u\\<^bold>| \\<Longrightarrow>\n  m \\<le> n\n  m * \\<^bold>|u\\<^bold>| \\<le> n * \\<^bold>|u\\<^bold>|\n\ngoal (1 subgoal):\n 1. m \\<le> n", "by blast"], ["", "lemmas\n    suf_pow_ext = pref_pow_ext[reversed] and\n    suf_pow_ext'= pref_pow_ext'[reversed] and\n    suf_pow_root_ext = pref_pow_root_ext[reversed] and\n    suf_prod_root = pref_prod_root[reversed] and\n    suf_exps_pow = pref_exps_pow[reversed] and\n    suf_exp_le = pref_exp_le[reversed]"], ["", "lemma comm_common_power: assumes \"r \\<cdot> u = u \\<cdot> r\" shows \"r\\<^sup>@\\<^bold>|u\\<^bold>| = u\\<^sup>@\\<^bold>|r\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<^sup>@ \\<^bold>|u\\<^bold>| = u \\<^sup>@ \\<^bold>|r\\<^bold>|", "using eqd_equal[OF comm_add_exps[OF \\<open>r \\<cdot> u = u \\<cdot> r\\<close>], of \"\\<^bold>|u\\<^bold>|\" \"\\<^bold>|r\\<^bold>|\"]"], ["proof (prove)\nusing this:\n  \\<^bold>|r \\<^sup>@ \\<^bold>|u\\<^bold>|\\<^bold>| =\n  \\<^bold>|u \\<^sup>@ \\<^bold>|r\\<^bold>|\\<^bold>| \\<Longrightarrow>\n  r \\<^sup>@ \\<^bold>|u\\<^bold>| = u \\<^sup>@ \\<^bold>|r\\<^bold>| \\<and>\n  u \\<^sup>@ \\<^bold>|r\\<^bold>| = r \\<^sup>@ \\<^bold>|u\\<^bold>|\n\ngoal (1 subgoal):\n 1. r \\<^sup>@ \\<^bold>|u\\<^bold>| = u \\<^sup>@ \\<^bold>|r\\<^bold>|", "unfolding pow_len"], ["proof (prove)\nusing this:\n  \\<^bold>|u\\<^bold>| * \\<^bold>|r\\<^bold>| =\n  \\<^bold>|r\\<^bold>| * \\<^bold>|u\\<^bold>| \\<Longrightarrow>\n  r \\<^sup>@ \\<^bold>|u\\<^bold>| = u \\<^sup>@ \\<^bold>|r\\<^bold>| \\<and>\n  u \\<^sup>@ \\<^bold>|r\\<^bold>| = r \\<^sup>@ \\<^bold>|u\\<^bold>|\n\ngoal (1 subgoal):\n 1. r \\<^sup>@ \\<^bold>|u\\<^bold>| = u \\<^sup>@ \\<^bold>|r\\<^bold>|", "by fastforce"], ["", "lemma one_generated_list_power: \"u \\<in> lists {x} \\<Longrightarrow> \\<exists>k. concat u = x\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> lists {x} \\<Longrightarrow> \\<exists>k. concat u = x \\<^sup>@ k", "proof(induction u)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<epsilon> \\<in> lists {x} \\<Longrightarrow>\n    \\<exists>k. concat \\<epsilon> = x \\<^sup>@ k\n 2. \\<And>a u.\n       \\<lbrakk>u \\<in> lists {x} \\<Longrightarrow>\n                \\<exists>k. concat u = x \\<^sup>@ k;\n        a # u \\<in> lists {x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. concat (a # u) = x \\<^sup>@ k", "case Nil"], ["proof (state)\nthis:\n  \\<epsilon> \\<in> lists {x}\n\ngoal (2 subgoals):\n 1. \\<epsilon> \\<in> lists {x} \\<Longrightarrow>\n    \\<exists>k. concat \\<epsilon> = x \\<^sup>@ k\n 2. \\<And>a u.\n       \\<lbrakk>u \\<in> lists {x} \\<Longrightarrow>\n                \\<exists>k. concat u = x \\<^sup>@ k;\n        a # u \\<in> lists {x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. concat (a # u) = x \\<^sup>@ k", "then"], ["proof (chain)\npicking this:\n  \\<epsilon> \\<in> lists {x}", "show ?case"], ["proof (prove)\nusing this:\n  \\<epsilon> \\<in> lists {x}\n\ngoal (1 subgoal):\n 1. \\<exists>k. concat \\<epsilon> = x \\<^sup>@ k", "by (simp add: pow_is_concat_replicate)"], ["proof (state)\nthis:\n  \\<exists>k. concat \\<epsilon> = x \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. \\<And>a u.\n       \\<lbrakk>u \\<in> lists {x} \\<Longrightarrow>\n                \\<exists>k. concat u = x \\<^sup>@ k;\n        a # u \\<in> lists {x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. concat (a # u) = x \\<^sup>@ k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a u.\n       \\<lbrakk>u \\<in> lists {x} \\<Longrightarrow>\n                \\<exists>k. concat u = x \\<^sup>@ k;\n        a # u \\<in> lists {x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. concat (a # u) = x \\<^sup>@ k", "case (Cons a u)"], ["proof (state)\nthis:\n  u \\<in> lists {x} \\<Longrightarrow> \\<exists>k. concat u = x \\<^sup>@ k\n  a # u \\<in> lists {x}\n\ngoal (1 subgoal):\n 1. \\<And>a u.\n       \\<lbrakk>u \\<in> lists {x} \\<Longrightarrow>\n                \\<exists>k. concat u = x \\<^sup>@ k;\n        a # u \\<in> lists {x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. concat (a # u) = x \\<^sup>@ k", "then"], ["proof (chain)\npicking this:\n  u \\<in> lists {x} \\<Longrightarrow> \\<exists>k. concat u = x \\<^sup>@ k\n  a # u \\<in> lists {x}", "show ?case"], ["proof (prove)\nusing this:\n  u \\<in> lists {x} \\<Longrightarrow> \\<exists>k. concat u = x \\<^sup>@ k\n  a # u \\<in> lists {x}\n\ngoal (1 subgoal):\n 1. \\<exists>k. concat (a # u) = x \\<^sup>@ k", "unfolding Cons_in_lists_iff concat.simps(2)"], ["proof (prove)\nusing this:\n  u \\<in> lists {x} \\<Longrightarrow> \\<exists>k. concat u = x \\<^sup>@ k\n  a \\<in> {x} \\<and> u \\<in> lists {x}\n\ngoal (1 subgoal):\n 1. \\<exists>k. a \\<cdot> concat u = x \\<^sup>@ k", "using singletonD[of a x] pow_Suc_list[of a]"], ["proof (prove)\nusing this:\n  u \\<in> lists {x} \\<Longrightarrow> \\<exists>k. concat u = x \\<^sup>@ k\n  a \\<in> {x} \\<and> u \\<in> lists {x}\n  a \\<in> {x} \\<Longrightarrow> a = x\n  a \\<^sup>@ Suc ?n = a \\<cdot> a \\<^sup>@ ?n\n\ngoal (1 subgoal):\n 1. \\<exists>k. a \\<cdot> concat u = x \\<^sup>@ k", "by metis"], ["proof (state)\nthis:\n  \\<exists>k. concat (a # u) = x \\<^sup>@ k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pow_lists: \"0 < k \\<Longrightarrow> u\\<^sup>@k \\<in> lists B \\<Longrightarrow> u \\<in> lists B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k; u \\<^sup>@ k \\<in> lists B\\<rbrakk>\n    \\<Longrightarrow> u \\<in> lists B", "by (simp add: pow_eq_if_list)"], ["", "lemma concat_morph_power: \"xs \\<in> lists B \\<Longrightarrow> xs = ts\\<^sup>@k \\<Longrightarrow> concat ts\\<^sup>@k = concat xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<in> lists B; xs = ts \\<^sup>@ k\\<rbrakk>\n    \\<Longrightarrow> concat ts \\<^sup>@ k = concat xs", "by (induct k arbitrary: xs ts) simp+"], ["", "lemma pref_not_idem:  \"z \\<noteq> \\<epsilon> \\<Longrightarrow> z \\<noteq> x \\<Longrightarrow> z \\<cdot> x\\<^sup>@k \\<noteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>z \\<noteq> \\<epsilon>; z \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> z \\<cdot> x \\<^sup>@ k \\<noteq> x", "using fac_triv"], ["proof (prove)\nusing this:\n  ?p \\<cdot> ?x \\<cdot> ?q = ?x \\<Longrightarrow> ?p = \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>z \\<noteq> \\<epsilon>; z \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> z \\<cdot> x \\<^sup>@ k \\<noteq> x", "by (cases k, simp, auto)"], ["", "lemma per_exp_pref: \"u \\<le>p r \\<cdot> u \\<Longrightarrow> u \\<le>p r\\<^sup>@k \\<cdot> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p r \\<cdot> u \\<Longrightarrow> u \\<le>p r \\<^sup>@ k \\<cdot> u", "proof(induct k, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>u \\<le>p r \\<cdot> u \\<Longrightarrow>\n                u \\<le>p r \\<^sup>@ k \\<cdot> u;\n        u \\<le>p r \\<cdot> u\\<rbrakk>\n       \\<Longrightarrow> u \\<le>p r \\<^sup>@ Suc k \\<cdot> u", "case (Suc k)"], ["proof (state)\nthis:\n  u \\<le>p r \\<cdot> u \\<Longrightarrow> u \\<le>p r \\<^sup>@ k \\<cdot> u\n  u \\<le>p r \\<cdot> u\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>u \\<le>p r \\<cdot> u \\<Longrightarrow>\n                u \\<le>p r \\<^sup>@ k \\<cdot> u;\n        u \\<le>p r \\<cdot> u\\<rbrakk>\n       \\<Longrightarrow> u \\<le>p r \\<^sup>@ Suc k \\<cdot> u", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p r \\<^sup>@ Suc k \\<cdot> u", "unfolding pow_Suc_list rassoc"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p r \\<cdot> r \\<^sup>@ k \\<cdot> u", "using Suc.hyps Suc.prems pref_prolong"], ["proof (prove)\nusing this:\n  u \\<le>p r \\<cdot> u \\<Longrightarrow> u \\<le>p r \\<^sup>@ k \\<cdot> u\n  u \\<le>p r \\<cdot> u\n  \\<lbrakk>?w \\<le>p ?z \\<cdot> ?r; ?r \\<le>p ?s\\<rbrakk>\n  \\<Longrightarrow> ?w \\<le>p ?z \\<cdot> ?s\n\ngoal (1 subgoal):\n 1. u \\<le>p r \\<cdot> r \\<^sup>@ k \\<cdot> u", "by blast"], ["proof (state)\nthis:\n  u \\<le>p r \\<^sup>@ Suc k \\<cdot> u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas\n  suf_not_idem =  pref_not_idem[reversed] and\n  per_exp_suf = per_exp_pref[reversed]"], ["", "lemma hd_sing_power: \"k \\<noteq> 0 \\<Longrightarrow> hd ([a]\\<^sup>@k) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> hd ([a] \\<^sup>@ k) = a", "by (induction k) simp+"], ["", "lemma root_pref_cancel: assumes \"t\\<^sup>@m \\<cdot> y = t\\<^sup>@k\" shows \"y = t\\<^sup>@(k - m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y = t \\<^sup>@ (k - m)", "using lqI[of \"t\\<^sup>@m\" \"t\\<^sup>@(k-m)\" \"t\\<^sup>@k\"]"], ["proof (prove)\nusing this:\n  t \\<^sup>@ m \\<cdot> t \\<^sup>@ (k - m) = t \\<^sup>@ k \\<Longrightarrow>\n  t \\<^sup>@ m\\<inverse>\\<^sup>>t \\<^sup>@ k = t \\<^sup>@ (k - m)\n\ngoal (1 subgoal):\n 1. y = t \\<^sup>@ (k - m)", "unfolding lqI[OF \\<open>t\\<^sup>@m \\<cdot> y = t\\<^sup>@k\\<close>]"], ["proof (prove)\nusing this:\n  t \\<^sup>@ m \\<cdot> t \\<^sup>@ (k - m) = t \\<^sup>@ k \\<Longrightarrow>\n  y = t \\<^sup>@ (k - m)\n\ngoal (1 subgoal):\n 1. y = t \\<^sup>@ (k - m)", "using  nat_le_linear[of m k] pop_pow[of m k t] diff_is_0_eq[of k m]   append.right_neutral[of \"t\\<^sup>@k\"] pow_zero[of t] \n    pref_antisym[of \"t\\<^sup>@m\" \"t\\<^sup>@k\", OF prefI[OF  \\<open>t\\<^sup>@m \\<cdot> y = t\\<^sup>@k\\<close>] pref_exps_pow[of k m t]]"], ["proof (prove)\nusing this:\n  t \\<^sup>@ m \\<cdot> t \\<^sup>@ (k - m) = t \\<^sup>@ k \\<Longrightarrow>\n  y = t \\<^sup>@ (k - m)\n  m \\<le> k \\<or> k \\<le> m\n  m \\<le> k \\<Longrightarrow>\n  t \\<^sup>@ m \\<cdot> t \\<^sup>@ (k - m) = t \\<^sup>@ k\n  (k - m = 0) = (k \\<le> m)\n  t \\<^sup>@ k \\<cdot> \\<epsilon> = t \\<^sup>@ k\n  t \\<^sup>@ 0 = \\<epsilon>\n  k \\<le> m \\<Longrightarrow> t \\<^sup>@ m = t \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. y = t \\<^sup>@ (k - m)", "by presburger"], ["", "lemmas root_suf_cancel = root_pref_cancel[reversed]"], ["", "lemma index_pow_mod: \"i < \\<^bold>|r\\<^sup>@k\\<^bold>| \\<Longrightarrow> (r\\<^sup>@k)!i = r!(i mod \\<^bold>|r\\<^bold>|)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < \\<^bold>|r \\<^sup>@ k\\<^bold>| \\<Longrightarrow>\n    (r \\<^sup>@ k) ! i = r ! (i mod \\<^bold>|r\\<^bold>|)", "proof(induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. i < \\<^bold>|r \\<^sup>@ 0\\<^bold>| \\<Longrightarrow>\n    (r \\<^sup>@ 0) ! i = r ! (i mod \\<^bold>|r\\<^bold>|)\n 2. \\<And>k.\n       \\<lbrakk>i < \\<^bold>|r \\<^sup>@ k\\<^bold>| \\<Longrightarrow>\n                (r \\<^sup>@ k) ! i = r ! (i mod \\<^bold>|r\\<^bold>|);\n        i < \\<^bold>|r \\<^sup>@ Suc k\\<^bold>|\\<rbrakk>\n       \\<Longrightarrow> (r \\<^sup>@ Suc k) ! i =\n                         r ! (i mod \\<^bold>|r\\<^bold>|)", "have aux:  \"\\<^bold>|r\\<^sup>@(Suc l)\\<^bold>| = \\<^bold>|r\\<^sup>@l\\<^bold>| + \\<^bold>|r\\<^bold>|\" for l"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|r \\<^sup>@ Suc l\\<^bold>| =\n    \\<^bold>|r \\<^sup>@ l\\<^bold>| + \\<^bold>|r\\<^bold>|", "by simp"], ["proof (state)\nthis:\n  \\<^bold>|r \\<^sup>@ Suc ?l\\<^bold>| =\n  \\<^bold>|r \\<^sup>@ ?l\\<^bold>| + \\<^bold>|r\\<^bold>|\n\ngoal (2 subgoals):\n 1. i < \\<^bold>|r \\<^sup>@ 0\\<^bold>| \\<Longrightarrow>\n    (r \\<^sup>@ 0) ! i = r ! (i mod \\<^bold>|r\\<^bold>|)\n 2. \\<And>k.\n       \\<lbrakk>i < \\<^bold>|r \\<^sup>@ k\\<^bold>| \\<Longrightarrow>\n                (r \\<^sup>@ k) ! i = r ! (i mod \\<^bold>|r\\<^bold>|);\n        i < \\<^bold>|r \\<^sup>@ Suc k\\<^bold>|\\<rbrakk>\n       \\<Longrightarrow> (r \\<^sup>@ Suc k) ! i =\n                         r ! (i mod \\<^bold>|r\\<^bold>|)", "have aux1: \"\\<^bold>|(r\\<^sup>@l)\\<^bold>| \\<le> i \\<Longrightarrow> i < \\<^bold>|r\\<^sup>@l\\<^bold>| + \\<^bold>|r\\<^bold>| \\<Longrightarrow>  i mod \\<^bold>|r\\<^bold>| = i -  \\<^bold>|r\\<^sup>@l\\<^bold>|\" for l"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>|r \\<^sup>@ l\\<^bold>| \\<le> i;\n     i < \\<^bold>|r \\<^sup>@ l\\<^bold>| + \\<^bold>|r\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> i mod \\<^bold>|r\\<^bold>| =\n                      i - \\<^bold>|r \\<^sup>@ l\\<^bold>|", "unfolding pow_len[of r l]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>l * \\<^bold>|r\\<^bold>| \\<le> i;\n     i < l * \\<^bold>|r\\<^bold>| + \\<^bold>|r\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> i mod \\<^bold>|r\\<^bold>| =\n                      i - l * \\<^bold>|r\\<^bold>|", "using less_diff_conv2[of \"l * \\<^bold>|r\\<^bold>|\" i \"\\<^bold>|r\\<^bold>|\", unfolded add.commute[of \"\\<^bold>|r\\<^bold>|\"  \"l * \\<^bold>|r\\<^bold>|\"]]\n      get_mod[of \"i - l * \\<^bold>|r\\<^bold>|\" \"\\<^bold>|r\\<^bold>|\" l] le_add_diff_inverse[of \"l*\\<^bold>|r\\<^bold>|\" i]"], ["proof (prove)\nusing this:\n  l * \\<^bold>|r\\<^bold>| \\<le> i \\<Longrightarrow>\n  (i - l * \\<^bold>|r\\<^bold>| < \\<^bold>|r\\<^bold>|) =\n  (i < l * \\<^bold>|r\\<^bold>| + \\<^bold>|r\\<^bold>|)\n  i - l * \\<^bold>|r\\<^bold>| < \\<^bold>|r\\<^bold>| \\<Longrightarrow>\n  i - l * \\<^bold>|r\\<^bold>| =\n  (l * \\<^bold>|r\\<^bold>| + (i - l * \\<^bold>|r\\<^bold>|)) mod\n  \\<^bold>|r\\<^bold>|\n  l * \\<^bold>|r\\<^bold>| \\<le> i \\<Longrightarrow>\n  l * \\<^bold>|r\\<^bold>| + (i - l * \\<^bold>|r\\<^bold>|) = i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>l * \\<^bold>|r\\<^bold>| \\<le> i;\n     i < l * \\<^bold>|r\\<^bold>| + \\<^bold>|r\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> i mod \\<^bold>|r\\<^bold>| =\n                      i - l * \\<^bold>|r\\<^bold>|", "by argo"], ["proof (state)\nthis:\n  \\<lbrakk>\\<^bold>|r \\<^sup>@ ?l\\<^bold>| \\<le> i;\n   i < \\<^bold>|r \\<^sup>@ ?l\\<^bold>| + \\<^bold>|r\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> i mod \\<^bold>|r\\<^bold>| =\n                    i - \\<^bold>|r \\<^sup>@ ?l\\<^bold>|\n\ngoal (2 subgoals):\n 1. i < \\<^bold>|r \\<^sup>@ 0\\<^bold>| \\<Longrightarrow>\n    (r \\<^sup>@ 0) ! i = r ! (i mod \\<^bold>|r\\<^bold>|)\n 2. \\<And>k.\n       \\<lbrakk>i < \\<^bold>|r \\<^sup>@ k\\<^bold>| \\<Longrightarrow>\n                (r \\<^sup>@ k) ! i = r ! (i mod \\<^bold>|r\\<^bold>|);\n        i < \\<^bold>|r \\<^sup>@ Suc k\\<^bold>|\\<rbrakk>\n       \\<Longrightarrow> (r \\<^sup>@ Suc k) ! i =\n                         r ! (i mod \\<^bold>|r\\<^bold>|)", "case (Suc k)"], ["proof (state)\nthis:\n  i < \\<^bold>|r \\<^sup>@ k\\<^bold>| \\<Longrightarrow>\n  (r \\<^sup>@ k) ! i = r ! (i mod \\<^bold>|r\\<^bold>|)\n  i < \\<^bold>|r \\<^sup>@ Suc k\\<^bold>|\n\ngoal (2 subgoals):\n 1. i < \\<^bold>|r \\<^sup>@ 0\\<^bold>| \\<Longrightarrow>\n    (r \\<^sup>@ 0) ! i = r ! (i mod \\<^bold>|r\\<^bold>|)\n 2. \\<And>k.\n       \\<lbrakk>i < \\<^bold>|r \\<^sup>@ k\\<^bold>| \\<Longrightarrow>\n                (r \\<^sup>@ k) ! i = r ! (i mod \\<^bold>|r\\<^bold>|);\n        i < \\<^bold>|r \\<^sup>@ Suc k\\<^bold>|\\<rbrakk>\n       \\<Longrightarrow> (r \\<^sup>@ Suc k) ! i =\n                         r ! (i mod \\<^bold>|r\\<^bold>|)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (r \\<^sup>@ Suc k) ! i = r ! (i mod \\<^bold>|r\\<^bold>|)", "unfolding aux sym[OF pow_Suc2_list[symmetric]] nth_append le_mod_geq"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i < \\<^bold>|r \\<^sup>@ k\\<^bold>| then (r \\<^sup>@ k) ! i\n     else r ! (i - \\<^bold>|r \\<^sup>@ k\\<^bold>|)) =\n    r ! (i mod \\<^bold>|r\\<^bold>|)", "using aux1[ OF _ Suc.prems[unfolded aux]]\n      Suc.IH pow_Suc2_list[symmetric] Suc.prems[unfolded aux] leI[of i \"\\<^bold>|r \\<^sup>@ k\\<^bold>|\"]"], ["proof (prove)\nusing this:\n  \\<^bold>|r \\<^sup>@ k\\<^bold>| \\<le> i \\<Longrightarrow>\n  i mod \\<^bold>|r\\<^bold>| = i - \\<^bold>|r \\<^sup>@ k\\<^bold>|\n  i < \\<^bold>|r \\<^sup>@ k\\<^bold>| \\<Longrightarrow>\n  (r \\<^sup>@ k) ! i = r ! (i mod \\<^bold>|r\\<^bold>|)\n  ?u \\<^sup>@ ?n \\<cdot> ?u = ?u \\<^sup>@ Suc ?n\n  i < \\<^bold>|r \\<^sup>@ k\\<^bold>| + \\<^bold>|r\\<^bold>|\n  \\<not> i < \\<^bold>|r \\<^sup>@ k\\<^bold>| \\<Longrightarrow>\n  \\<^bold>|r \\<^sup>@ k\\<^bold>| \\<le> i\n\ngoal (1 subgoal):\n 1. (if i < \\<^bold>|r \\<^sup>@ k\\<^bold>| then (r \\<^sup>@ k) ! i\n     else r ! (i - \\<^bold>|r \\<^sup>@ k\\<^bold>|)) =\n    r ! (i mod \\<^bold>|r\\<^bold>|)", "by presburger"], ["proof (state)\nthis:\n  (r \\<^sup>@ Suc k) ! i = r ! (i mod \\<^bold>|r\\<^bold>|)\n\ngoal (1 subgoal):\n 1. i < \\<^bold>|r \\<^sup>@ 0\\<^bold>| \\<Longrightarrow>\n    (r \\<^sup>@ 0) ! i = r ! (i mod \\<^bold>|r\\<^bold>|)", "qed auto"], ["", "lemma sing_pow_len: \"\\<^bold>|[r]\\<^sup>@l\\<^bold>| = l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|[r] \\<^sup>@ l\\<^bold>| = l", "by (induct l) auto"], ["", "lemma concat_take_sing: \"k \\<le> l \\<Longrightarrow> concat (take k ([r]\\<^sup>@l)) = r\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> l \\<Longrightarrow>\n    concat (take k ([r] \\<^sup>@ l)) = r \\<^sup>@ k", "proof(induct k, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k \\<le> l \\<Longrightarrow>\n                concat (take k ([r] \\<^sup>@ l)) = r \\<^sup>@ k;\n        Suc k \\<le> l\\<rbrakk>\n       \\<Longrightarrow> concat (take (Suc k) ([r] \\<^sup>@ l)) =\n                         r \\<^sup>@ Suc k", "case (Suc k)"], ["proof (state)\nthis:\n  k \\<le> l \\<Longrightarrow>\n  concat (take k ([r] \\<^sup>@ l)) = r \\<^sup>@ k\n  Suc k \\<le> l\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k \\<le> l \\<Longrightarrow>\n                concat (take k ([r] \\<^sup>@ l)) = r \\<^sup>@ k;\n        Suc k \\<le> l\\<rbrakk>\n       \\<Longrightarrow> concat (take (Suc k) ([r] \\<^sup>@ l)) =\n                         r \\<^sup>@ Suc k", "then"], ["proof (chain)\npicking this:\n  k \\<le> l \\<Longrightarrow>\n  concat (take k ([r] \\<^sup>@ l)) = r \\<^sup>@ k\n  Suc k \\<le> l", "show ?case"], ["proof (prove)\nusing this:\n  k \\<le> l \\<Longrightarrow>\n  concat (take k ([r] \\<^sup>@ l)) = r \\<^sup>@ k\n  Suc k \\<le> l\n\ngoal (1 subgoal):\n 1. concat (take (Suc k) ([r] \\<^sup>@ l)) = r \\<^sup>@ Suc k", "using concat_morph[of \"take k ((r # \\<epsilon>) \\<^sup>@ l)\"\"(r # \\<epsilon>)\", unfolded\n        sym[OF take_Suc_conv_app_nth[of k \"[r]\\<^sup>@l\", unfolded sing_pow_len[of r l] less_eq_Suc_le  \n            sing_pow[OF iffD2[OF less_eq_Suc_le Suc.prems], of r], OF \\<open>Suc k \\<le> l\\<close>]] \n        concat_sing'[of r] \n        Suc.hyps[OF Suc_leD[OF Suc.prems]]\n        pow_Suc2_list[symmetric]]"], ["proof (prove)\nusing this:\n  k \\<le> l \\<Longrightarrow>\n  concat (take k ([r] \\<^sup>@ l)) = r \\<^sup>@ k\n  Suc k \\<le> l\n  r \\<^sup>@ Suc k = concat (take (Suc k) ([r] \\<^sup>@ l))\n\ngoal (1 subgoal):\n 1. concat (take (Suc k) ([r] \\<^sup>@ l)) = r \\<^sup>@ Suc k", "by argo"], ["proof (state)\nthis:\n  concat (take (Suc k) ([r] \\<^sup>@ l)) = r \\<^sup>@ Suc k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma concat_sing_pow: \"concat ([a]\\<^sup>@k) = a\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concat ([a] \\<^sup>@ k) = a \\<^sup>@ k", "proof(induct k)"], ["proof (state)\ngoal (2 subgoals):\n 1. concat ([a] \\<^sup>@ 0) = a \\<^sup>@ 0\n 2. \\<And>k.\n       concat ([a] \\<^sup>@ k) = a \\<^sup>@ k \\<Longrightarrow>\n       concat ([a] \\<^sup>@ Suc k) = a \\<^sup>@ Suc k", "show \"concat ((a # \\<epsilon>) \\<^sup>@ 0) = a \\<^sup>@ 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concat ([a] \\<^sup>@ 0) = a \\<^sup>@ 0", "by simp"], ["proof (state)\nthis:\n  concat ([a] \\<^sup>@ 0) = a \\<^sup>@ 0\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       concat ([a] \\<^sup>@ k) = a \\<^sup>@ k \\<Longrightarrow>\n       concat ([a] \\<^sup>@ Suc k) = a \\<^sup>@ Suc k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       concat ([a] \\<^sup>@ k) = a \\<^sup>@ k \\<Longrightarrow>\n       concat ([a] \\<^sup>@ Suc k) = a \\<^sup>@ Suc k", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       concat ([a] \\<^sup>@ k) = a \\<^sup>@ k \\<Longrightarrow>\n       concat ([a] \\<^sup>@ Suc k) = a \\<^sup>@ Suc k", "assume \"concat ((a # \\<epsilon>) \\<^sup>@ k) = a \\<^sup>@ k\""], ["proof (state)\nthis:\n  concat ([a] \\<^sup>@ k) = a \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       concat ([a] \\<^sup>@ k) = a \\<^sup>@ k \\<Longrightarrow>\n       concat ([a] \\<^sup>@ Suc k) = a \\<^sup>@ Suc k", "thus \"concat ((a # \\<epsilon>) \\<^sup>@ Suc k) = a \\<^sup>@ Suc k\""], ["proof (prove)\nusing this:\n  concat ([a] \\<^sup>@ k) = a \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. concat ([a] \\<^sup>@ Suc k) = a \\<^sup>@ Suc k", "by simp"], ["proof (state)\nthis:\n  concat ([a] \\<^sup>@ Suc k) = a \\<^sup>@ Suc k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unique_letter_word: \"(\\<forall> c. c \\<in> set w \\<longrightarrow> c = a) \\<Longrightarrow> \\<exists> k. w = [a]\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c. c \\<in> set w \\<longrightarrow> c = a \\<Longrightarrow>\n    \\<exists>k. w = [a] \\<^sup>@ k", "proof (induct w)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>c.\n       c \\<in> set \\<epsilon> \\<longrightarrow> c = a \\<Longrightarrow>\n    \\<exists>k. \\<epsilon> = [a] \\<^sup>@ k\n 2. \\<And>aa w.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> set w \\<longrightarrow> c = a \\<Longrightarrow>\n                \\<exists>k. w = [a] \\<^sup>@ k;\n        \\<forall>c. c \\<in> set (aa # w) \\<longrightarrow> c = a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. aa # w = [a] \\<^sup>@ k", "case Nil"], ["proof (state)\nthis:\n  \\<forall>c. c \\<in> set \\<epsilon> \\<longrightarrow> c = a\n\ngoal (2 subgoals):\n 1. \\<forall>c.\n       c \\<in> set \\<epsilon> \\<longrightarrow> c = a \\<Longrightarrow>\n    \\<exists>k. \\<epsilon> = [a] \\<^sup>@ k\n 2. \\<And>aa w.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> set w \\<longrightarrow> c = a \\<Longrightarrow>\n                \\<exists>k. w = [a] \\<^sup>@ k;\n        \\<forall>c. c \\<in> set (aa # w) \\<longrightarrow> c = a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. aa # w = [a] \\<^sup>@ k", "then"], ["proof (chain)\npicking this:\n  \\<forall>c. c \\<in> set \\<epsilon> \\<longrightarrow> c = a", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>c. c \\<in> set \\<epsilon> \\<longrightarrow> c = a\n\ngoal (1 subgoal):\n 1. \\<exists>k. \\<epsilon> = [a] \\<^sup>@ k", "by (metis pow_zero)"], ["proof (state)\nthis:\n  \\<exists>k. \\<epsilon> = [a] \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. \\<And>aa w.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> set w \\<longrightarrow> c = a \\<Longrightarrow>\n                \\<exists>k. w = [a] \\<^sup>@ k;\n        \\<forall>c. c \\<in> set (aa # w) \\<longrightarrow> c = a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. aa # w = [a] \\<^sup>@ k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa w.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> set w \\<longrightarrow> c = a \\<Longrightarrow>\n                \\<exists>k. w = [a] \\<^sup>@ k;\n        \\<forall>c. c \\<in> set (aa # w) \\<longrightarrow> c = a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. aa # w = [a] \\<^sup>@ k", "case (Cons b w)"], ["proof (state)\nthis:\n  \\<forall>c. c \\<in> set w \\<longrightarrow> c = a \\<Longrightarrow>\n  \\<exists>k. w = [a] \\<^sup>@ k\n  \\<forall>c. c \\<in> set (b # w) \\<longrightarrow> c = a\n\ngoal (1 subgoal):\n 1. \\<And>aa w.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> set w \\<longrightarrow> c = a \\<Longrightarrow>\n                \\<exists>k. w = [a] \\<^sup>@ k;\n        \\<forall>c. c \\<in> set (aa # w) \\<longrightarrow> c = a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. aa # w = [a] \\<^sup>@ k", "then"], ["proof (chain)\npicking this:\n  \\<forall>c. c \\<in> set w \\<longrightarrow> c = a \\<Longrightarrow>\n  \\<exists>k. w = [a] \\<^sup>@ k\n  \\<forall>c. c \\<in> set (b # w) \\<longrightarrow> c = a", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>c. c \\<in> set w \\<longrightarrow> c = a \\<Longrightarrow>\n  \\<exists>k. w = [a] \\<^sup>@ k\n  \\<forall>c. c \\<in> set (b # w) \\<longrightarrow> c = a\n\ngoal (1 subgoal):\n 1. \\<exists>k. b # w = [a] \\<^sup>@ k", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>c.\n                c \\<in> set w \\<longrightarrow> c = a \\<Longrightarrow>\n             \\<exists>k. w = [a] \\<^sup>@ k;\n     \\<forall>c. c \\<in> set (b # w) \\<longrightarrow> c = a\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k. b # w = [a] \\<^sup>@ k", "obtain k where \"w = [a]\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k. w = [a] \\<^sup>@ k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Cons.hyps Cons.prems"], ["proof (prove)\nusing this:\n  \\<forall>c. c \\<in> set w \\<longrightarrow> c = a \\<Longrightarrow>\n  \\<exists>k. w = [a] \\<^sup>@ k\n  \\<forall>c. c \\<in> set (b # w) \\<longrightarrow> c = a\n\ngoal (1 subgoal):\n 1. (\\<And>k. w = [a] \\<^sup>@ k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  w = [a] \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>c.\n                c \\<in> set w \\<longrightarrow> c = a \\<Longrightarrow>\n             \\<exists>k. w = [a] \\<^sup>@ k;\n     \\<forall>c. c \\<in> set (b # w) \\<longrightarrow> c = a\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k. b # w = [a] \\<^sup>@ k", "hence \"b#w = [a]\\<^sup>@Suc k\""], ["proof (prove)\nusing this:\n  w = [a] \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. b # w = [a] \\<^sup>@ Suc k", "by (simp add: \\<open>w = (a # \\<epsilon>)\\<^sup>@k\\<close> Cons.prems)"], ["proof (state)\nthis:\n  b # w = [a] \\<^sup>@ Suc k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>c.\n                c \\<in> set w \\<longrightarrow> c = a \\<Longrightarrow>\n             \\<exists>k. w = [a] \\<^sup>@ k;\n     \\<forall>c. c \\<in> set (b # w) \\<longrightarrow> c = a\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k. b # w = [a] \\<^sup>@ k", "thus ?thesis"], ["proof (prove)\nusing this:\n  b # w = [a] \\<^sup>@ Suc k\n\ngoal (1 subgoal):\n 1. \\<exists>k. b # w = [a] \\<^sup>@ k", "by blast"], ["proof (state)\nthis:\n  \\<exists>k. b # w = [a] \\<^sup>@ k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>k. b # w = [a] \\<^sup>@ k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unique_letter_wordE[elim]: assumes \"(\\<forall> c. c \\<in> set w \\<longrightarrow> c = a)\" obtains k where \"w = [a]\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k. w = [a] \\<^sup>@ k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using unique_letter_word assms"], ["proof (prove)\nusing this:\n  \\<forall>c. c \\<in> set ?w \\<longrightarrow> c = ?a \\<Longrightarrow>\n  \\<exists>k. ?w = [?a] \\<^sup>@ k\n  \\<forall>c. c \\<in> set w \\<longrightarrow> c = a\n\ngoal (1 subgoal):\n 1. (\\<And>k. w = [a] \\<^sup>@ k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["", "lemma unique_letter_wordE'[elim]: assumes \"set w \\<subseteq> {a}\" obtains k where \"w = [a] \\<^sup>@ k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k. w = [a] \\<^sup>@ k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms unique_letter_word[of w a]"], ["proof (prove)\nusing this:\n  set w \\<subseteq> {a}\n  \\<forall>c. c \\<in> set w \\<longrightarrow> c = a \\<Longrightarrow>\n  \\<exists>k. w = [a] \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. (\\<And>k. w = [a] \\<^sup>@ k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma conjug_pow: \"x \\<cdot> z = z \\<cdot> y \\<Longrightarrow> x\\<^sup>@k \\<cdot> z = z \\<cdot> y\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> z = z \\<cdot> y \\<Longrightarrow>\n    x \\<^sup>@ k \\<cdot> z = z \\<cdot> y \\<^sup>@ k", "by (induct k) fastforce+"], ["", "lemma shift_pow: \"(u\\<cdot>v)\\<^sup>@k\\<cdot>u = u\\<cdot>(v\\<cdot>u)\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<cdot> v) \\<^sup>@ k \\<cdot> u = u \\<cdot> (v \\<cdot> u) \\<^sup>@ k", "by (simp add: conjug_pow)"], ["", "lemma lq_conjug_pow: assumes \"p \\<le>p x \\<cdot> p\" shows \"p\\<inverse>\\<^sup>>(x\\<^sup>@k \\<cdot> p) = (p\\<inverse>\\<^sup>>(x \\<cdot> p))\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p\\<inverse>\\<^sup>>(x \\<^sup>@ k \\<cdot> p) =\n    (p\\<inverse>\\<^sup>>(x \\<cdot> p)) \\<^sup>@ k", "using lqI[OF sym[OF conjug_pow[of x p  \"p\\<inverse>\\<^sup>>(x \\<cdot> p)\", OF sym[OF lq_pref[OF \\<open>p \\<le>p x \\<cdot> p\\<close>]], of k]]]"], ["proof (prove)\nusing this:\n  p\\<inverse>\\<^sup>>(x \\<^sup>@ k \\<cdot> p) =\n  (p\\<inverse>\\<^sup>>(x \\<cdot> p)) \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. p\\<inverse>\\<^sup>>(x \\<^sup>@ k \\<cdot> p) =\n    (p\\<inverse>\\<^sup>>(x \\<cdot> p)) \\<^sup>@ k", "."], ["", "lemmas rq_conjug_pow = lq_conjug_pow[reversed]"], ["", "section \"Total morphisms\""], ["", "locale  morphism =\n  fixes f :: \"'a list \\<Rightarrow> 'b list\"\n  assumes morph: \"f (u \\<cdot> v) = f u \\<cdot> f v\"\nbegin"], ["", "lemma emp_to_emp[simp]: \"f \\<epsilon> = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<epsilon> = \\<epsilon>", "using morph[of \\<epsilon> \\<epsilon>] self_append_conv2[of \"f \\<epsilon>\" \"f \\<epsilon>\"]"], ["proof (prove)\nusing this:\n  f (\\<epsilon> \\<cdot> \\<epsilon>) = f \\<epsilon> \\<cdot> f \\<epsilon>\n  (f \\<epsilon> = f \\<epsilon> \\<cdot> f \\<epsilon>) =\n  (f \\<epsilon> = \\<epsilon>)\n\ngoal (1 subgoal):\n 1. f \\<epsilon> = \\<epsilon>", "by simp"], ["", "lemma pow_morph: \"f (x\\<^sup>@k) = (f x)\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (x \\<^sup>@ k) = f x \\<^sup>@ k", "by (induction k) (simp add: morph)+"], ["", "lemma pop_hd: \"f (a#u) = f [a] \\<cdot> f u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (a # u) = f [a] \\<cdot> f u", "unfolding hd_word[of a u]"], ["proof (prove)\ngoal (1 subgoal):\n 1. f ([a] \\<cdot> u) = f [a] \\<cdot> f u", "using morph"], ["proof (prove)\nusing this:\n  f (?u \\<cdot> ?v) = f ?u \\<cdot> f ?v\n\ngoal (1 subgoal):\n 1. f ([a] \\<cdot> u) = f [a] \\<cdot> f u", "."], ["", "lemma pop_hd_nemp: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> f (u) = f [hd u] \\<cdot> f (tl u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow> f u = f [hd u] \\<cdot> f (tl u)", "using list.exhaust_sel pop_hd[of \"hd u\" \"tl u\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?list = \\<epsilon> \\<Longrightarrow> ?P;\n   ?list = hd ?list # tl ?list \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n  f (hd u # tl u) = f [hd u] \\<cdot> f (tl u)\n\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow> f u = f [hd u] \\<cdot> f (tl u)", "by force"], ["", "lemma pop_last_nemp: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> f (u) = f (butlast u) \\<cdot> f [last u]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow>\n    f u = f (butlast u) \\<cdot> f [last u]", "unfolding morph[symmetric] append_butlast_last_id"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow> f u = f u", ".."], ["", "lemma pref_mono: \"u \\<le>p v \\<Longrightarrow> f u \\<le>p f v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p v \\<Longrightarrow> f u \\<le>p f v", "using morph"], ["proof (prove)\nusing this:\n  f (?u \\<cdot> ?v) = f ?u \\<cdot> f ?v\n\ngoal (1 subgoal):\n 1. u \\<le>p v \\<Longrightarrow> f u \\<le>p f v", "by auto"], ["", "lemma morph_concat_map: \"f x = concat (map (\\<lambda> x. f [x]) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x = concat (map (\\<lambda>x. f [x]) x)", "proof (induction x, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a x.\n       f x = concat (map (\\<lambda>x. f [x]) x) \\<Longrightarrow>\n       f (a # x) = concat (map (\\<lambda>x. f [x]) (a # x))", "case (Cons a x)"], ["proof (state)\nthis:\n  f x = concat (map (\\<lambda>x. f [x]) x)\n\ngoal (1 subgoal):\n 1. \\<And>a x.\n       f x = concat (map (\\<lambda>x. f [x]) x) \\<Longrightarrow>\n       f (a # x) = concat (map (\\<lambda>x. f [x]) (a # x))", "then"], ["proof (chain)\npicking this:\n  f x = concat (map (\\<lambda>x. f [x]) x)", "show ?case"], ["proof (prove)\nusing this:\n  f x = concat (map (\\<lambda>x. f [x]) x)\n\ngoal (1 subgoal):\n 1. f (a # x) = concat (map (\\<lambda>x. f [x]) (a # x))", "unfolding pop_hd[of a x]"], ["proof (prove)\nusing this:\n  f x = concat (map (\\<lambda>x. f [x]) x)\n\ngoal (1 subgoal):\n 1. f [a] \\<cdot> f x = concat (map (\\<lambda>x. f [x]) (a # x))", "by auto"], ["proof (state)\nthis:\n  f (a # x) = concat (map (\\<lambda>x. f [x]) (a # x))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "locale two_morphisms = morphg: morphism g + morphh: morphism h for g h :: \"'a list \\<Rightarrow> 'b list\"\nbegin"], ["", "lemma def_on_sings:\n  assumes \"\\<And>a. g [a] = h [a]\"\n  shows \"g u = h u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g u = h u", "proof (induct u, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a u. g u = h u \\<Longrightarrow> g (a # u) = h (a # u)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a u. g u = h u \\<Longrightarrow> g (a # u) = h (a # u)", "case (Cons a u)"], ["proof (state)\nthis:\n  g u = h u\n\ngoal (1 subgoal):\n 1. \\<And>a u. g u = h u \\<Longrightarrow> g (a # u) = h (a # u)", "then"], ["proof (chain)\npicking this:\n  g u = h u", "show ?case"], ["proof (prove)\nusing this:\n  g u = h u\n\ngoal (1 subgoal):\n 1. g (a # u) = h (a # u)", "unfolding morphg.pop_hd[of a u] morphh.pop_hd[of a u]"], ["proof (prove)\nusing this:\n  g u = h u\n\ngoal (1 subgoal):\n 1. g [a] \\<cdot> g u = h [a] \\<cdot> h u", "using \\<open>\\<And>a. g [a] = h [a]\\<close>"], ["proof (prove)\nusing this:\n  g u = h u\n  g [?a] = h [?a]\n\ngoal (1 subgoal):\n 1. g [a] \\<cdot> g u = h [a] \\<cdot> h u", "by presburger"], ["proof (state)\nthis:\n  g (a # u) = h (a # u)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "section \\<open>Reversed morphism and composition\\<close>"], ["", "definition rev_morph :: \"('a list \\<Rightarrow> 'b list) \\<Rightarrow> ('a list \\<Rightarrow> 'b list)\" where \n  \"rev_morph f = rev \\<circ> f \\<circ> rev\""], ["", "lemma rev_morph_idemp[simp]: \"rev_morph (rev_morph f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev_morph (rev_morph f) = f", "unfolding rev_morph_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. rev \\<circ> (rev \\<circ> f \\<circ> rev) \\<circ> rev = f", "by auto"], ["", "lemma morph_compose: \"morphism f \\<Longrightarrow> morphism g \\<Longrightarrow> morphism (f \\<circ> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>morphism f; morphism g\\<rbrakk>\n    \\<Longrightarrow> morphism (f \\<circ> g)", "by (simp add: morphism_def)"], ["", "lemma rev_morph_arg: \"rev_morph f u = rev (f (rev u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev_morph f u = rev (f (rev u))", "by (simp add: rev_morph_def)"], ["", "lemmas rev_morph_arg_rev[reversal_rule] = rev_morph_arg[reversed add: rev_rev_ident]"], ["", "lemma rev_morph_sing: \"rev_morph f [a] =  rev (f [a])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev_morph f [a] = rev (f [a])", "unfolding rev_morph_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (rev \\<circ> f \\<circ> rev) [a] = rev (f [a])", "by simp"], ["", "context morphism\nbegin"], ["", "lemma  rev_morph_morph: \"morphism (rev_morph f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. morphism (rev_morph f)", "by (standard, auto simp add: rev_morph_def morph)"], ["", "lemma morph_rev_len:  \"\\<^bold>|f (rev u)\\<^bold>| = \\<^bold>|f u\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|f (rev u)\\<^bold>| = \\<^bold>|f u\\<^bold>|", "proof (induction u, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a u.\n       \\<^bold>|f (rev u)\\<^bold>| = \\<^bold>|f u\\<^bold>| \\<Longrightarrow>\n       \\<^bold>|f (rev (a # u))\\<^bold>| = \\<^bold>|f (a # u)\\<^bold>|", "case (Cons a u)"], ["proof (state)\nthis:\n  \\<^bold>|f (rev u)\\<^bold>| = \\<^bold>|f u\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<And>a u.\n       \\<^bold>|f (rev u)\\<^bold>| = \\<^bold>|f u\\<^bold>| \\<Longrightarrow>\n       \\<^bold>|f (rev (a # u))\\<^bold>| = \\<^bold>|f (a # u)\\<^bold>|", "then"], ["proof (chain)\npicking this:\n  \\<^bold>|f (rev u)\\<^bold>| = \\<^bold>|f u\\<^bold>|", "show ?case"], ["proof (prove)\nusing this:\n  \\<^bold>|f (rev u)\\<^bold>| = \\<^bold>|f u\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<^bold>|f (rev (a # u))\\<^bold>| = \\<^bold>|f (a # u)\\<^bold>|", "unfolding rev.simps(2) pop_hd[of a u] morph length_append"], ["proof (prove)\nusing this:\n  \\<^bold>|f (rev u)\\<^bold>| = \\<^bold>|f u\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<^bold>|f (rev u)\\<^bold>| + \\<^bold>|f [a]\\<^bold>| =\n    \\<^bold>|f [a]\\<^bold>| + \\<^bold>|f u\\<^bold>|", "by force"], ["proof (state)\nthis:\n  \\<^bold>|f (rev (a # u))\\<^bold>| = \\<^bold>|f (a # u)\\<^bold>|\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  rev_morph_len: \"\\<^bold>|rev_morph f u\\<^bold>| = \\<^bold>|f u\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|rev_morph f u\\<^bold>| = \\<^bold>|f u\\<^bold>|", "unfolding rev_morph_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|(rev \\<circ> f \\<circ> rev) u\\<^bold>| = \\<^bold>|f u\\<^bold>|", "by (simp add: morph_rev_len)"], ["", "end"], ["", "section \\<open>Rotation\\<close>"], ["", "lemma rotate_comp_eq:\"w \\<bowtie> rotate n w \\<Longrightarrow> rotate n w = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<bowtie> rotate n w \\<Longrightarrow> rotate n w = w", "using  pref_same_len[OF _ length_rotate[of n w]] pref_same_len[OF _ length_rotate[of n w, symmetric], symmetric]"], ["proof (prove)\nusing this:\n  rotate n w \\<le>p w \\<Longrightarrow> rotate n w = w\n  w \\<le>p rotate n w \\<Longrightarrow> rotate n w = w\n\ngoal (1 subgoal):\n 1. w \\<bowtie> rotate n w \\<Longrightarrow> rotate n w = w", "by blast"], ["", "corollary mismatch_iff_lexord: assumes \"rotate n w \\<noteq> w\" and \"irrefl r\"\n  shows \"mismatch_pair w (rotate  n w) \\<in> r \\<longleftrightarrow> (w,rotate n w) \\<in> lexord r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (mismatch_pair w (rotate n w) \\<in> r) =\n    ((w, rotate n w) \\<in> lexord r)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (mismatch_pair w (rotate n w) \\<in> r) =\n    ((w, rotate n w) \\<in> lexord r)", "have \"\\<not> w \\<bowtie> rotate n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> w \\<bowtie> rotate n w", "using rotate_comp_eq \\<open>rotate n w \\<noteq> w\\<close>"], ["proof (prove)\nusing this:\n  ?w \\<bowtie> rotate ?n ?w \\<Longrightarrow> rotate ?n ?w = ?w\n  rotate n w \\<noteq> w\n\ngoal (1 subgoal):\n 1. \\<not> w \\<bowtie> rotate n w", "unfolding prefix_comparable_def"], ["proof (prove)\nusing this:\n  ?w \\<le>p rotate ?n ?w \\<or> rotate ?n ?w \\<le>p ?w \\<Longrightarrow>\n  rotate ?n ?w = ?w\n  rotate n w \\<noteq> w\n\ngoal (1 subgoal):\n 1. \\<not> (w \\<le>p rotate n w \\<or> rotate n w \\<le>p w)", "by blast"], ["proof (state)\nthis:\n  \\<not> w \\<bowtie> rotate n w\n\ngoal (1 subgoal):\n 1. (mismatch_pair w (rotate n w) \\<in> r) =\n    ((w, rotate n w) \\<in> lexord r)", "from lexord_mismatch[OF this \\<open>irrefl r\\<close>]"], ["proof (chain)\npicking this:\n  (mismatch_pair w (rotate n w) \\<in> r) = ((w, rotate n w) \\<in> lexord r)", "show ?thesis"], ["proof (prove)\nusing this:\n  (mismatch_pair w (rotate n w) \\<in> r) = ((w, rotate n w) \\<in> lexord r)\n\ngoal (1 subgoal):\n 1. (mismatch_pair w (rotate n w) \\<in> r) =\n    ((w, rotate n w) \\<in> lexord r)", "."], ["proof (state)\nthis:\n  (mismatch_pair w (rotate n w) \\<in> r) = ((w, rotate n w) \\<in> lexord r)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rotate_back: obtains m where \"rotate m (rotate n u) = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        rotate m (rotate n u) = u \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof(cases \"u = \\<epsilon>\", simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>m. rotate m (rotate n u) = u \\<Longrightarrow> thesis;\n     u \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume \"u \\<noteq> \\<epsilon>\""], ["proof (state)\nthis:\n  u \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>m. rotate m (rotate n u) = u \\<Longrightarrow> thesis;\n     u \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using that[of \"\\<^bold>|u\\<^bold>| - n mod \\<^bold>|u\\<^bold>|\"]"], ["proof (prove)\nusing this:\n  rotate (\\<^bold>|u\\<^bold>| - n mod \\<^bold>|u\\<^bold>|) (rotate n u) =\n  u \\<Longrightarrow>\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "unfolding rotate_rotate[of \"\\<^bold>|u\\<^bold>| - n mod \\<^bold>|u\\<^bold>|\" \"n mod \\<^bold>|u\\<^bold>|\" u]\n      le_add_diff_inverse2[OF  \n        less_imp_le_nat[OF mod_less_divisor[OF nemp_len[OF \\<open>u \\<noteq> \\<epsilon>\\<close>, unfolded neq0_conv], of n]]]\n      arg_cong[OF rotate_conv_mod[of n u], of \"rotate (\\<^bold>|u\\<^bold>| - n mod \\<^bold>|u\\<^bold>|)\"]"], ["proof (prove)\nusing this:\n  rotate \\<^bold>|u\\<^bold>| u = u \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by simp"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rotate_class_rotate': \"(\\<exists>n. rotate n w = u) \\<longleftrightarrow> (\\<exists>n. rotate n (rotate l w) = u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>n. rotate n w = u) = (\\<exists>n. rotate n (rotate l w) = u)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>n. rotate n w = u \\<Longrightarrow>\n    \\<exists>n. rotate n (rotate l w) = u\n 2. \\<exists>n. rotate n (rotate l w) = u \\<Longrightarrow>\n    \\<exists>n. rotate n w = u", "obtain m where rot_m: \"rotate m (rotate l w) = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        rotate m (rotate l w) = w \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using rotate_back"], ["proof (prove)\nusing this:\n  (\\<And>m.\n      rotate m (rotate ?n ?u) = ?u \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        rotate m (rotate l w) = w \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  rotate m (rotate l w) = w\n\ngoal (2 subgoals):\n 1. \\<exists>n. rotate n w = u \\<Longrightarrow>\n    \\<exists>n. rotate n (rotate l w) = u\n 2. \\<exists>n. rotate n (rotate l w) = u \\<Longrightarrow>\n    \\<exists>n. rotate n w = u", "assume \"\\<exists>n. rotate n w = u\""], ["proof (state)\nthis:\n  \\<exists>n. rotate n w = u\n\ngoal (2 subgoals):\n 1. \\<exists>n. rotate n w = u \\<Longrightarrow>\n    \\<exists>n. rotate n (rotate l w) = u\n 2. \\<exists>n. rotate n (rotate l w) = u \\<Longrightarrow>\n    \\<exists>n. rotate n w = u", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. rotate n w = u", "obtain n where rot_n: \"rotate n w = u\""], ["proof (prove)\nusing this:\n  \\<exists>n. rotate n w = u\n\ngoal (1 subgoal):\n 1. (\\<And>n. rotate n w = u \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  rotate n w = u\n\ngoal (2 subgoals):\n 1. \\<exists>n. rotate n w = u \\<Longrightarrow>\n    \\<exists>n. rotate n (rotate l w) = u\n 2. \\<exists>n. rotate n (rotate l w) = u \\<Longrightarrow>\n    \\<exists>n. rotate n w = u", "show \"\\<exists>n. rotate n (rotate l w) = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. rotate n (rotate l w) = u", "using  exI[of \"\\<lambda> x. rotate x (rotate l w) = u\" \"n+m\", OF \n        rotate_rotate[symmetric, of n m \"rotate l w\", unfolded rot_m rot_n]]"], ["proof (prove)\nusing this:\n  \\<exists>x. rotate x (rotate l w) = u\n\ngoal (1 subgoal):\n 1. \\<exists>n. rotate n (rotate l w) = u", "."], ["proof (state)\nthis:\n  \\<exists>n. rotate n (rotate l w) = u\n\ngoal (1 subgoal):\n 1. \\<exists>n. rotate n (rotate l w) = u \\<Longrightarrow>\n    \\<exists>n. rotate n w = u", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n. rotate n (rotate l w) = u \\<Longrightarrow>\n    \\<exists>n. rotate n w = u", "show \"\\<exists>n. rotate n (rotate l w) = u \\<Longrightarrow> \\<exists>n. rotate n w = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. rotate n (rotate l w) = u \\<Longrightarrow>\n    \\<exists>n. rotate n w = u", "using rotate_rotate[symmetric]"], ["proof (prove)\nusing this:\n  rotate (?m + ?n) ?xs = rotate ?m (rotate ?n ?xs)\n\ngoal (1 subgoal):\n 1. \\<exists>n. rotate n (rotate l w) = u \\<Longrightarrow>\n    \\<exists>n. rotate n w = u", "by blast"], ["proof (state)\nthis:\n  \\<exists>n. rotate n (rotate l w) = u \\<Longrightarrow>\n  \\<exists>n. rotate n w = u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rotate_class_rotate: \"{u . \\<exists>n. rotate n w = u} = {u . \\<exists>n. rotate n (rotate l w) = u}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {u. \\<exists>n. rotate n w = u} =\n    {u. \\<exists>n. rotate n (rotate l w) = u}", "using rotate_class_rotate'"], ["proof (prove)\nusing this:\n  (\\<exists>n. rotate n ?w = ?u) =\n  (\\<exists>n. rotate n (rotate ?l ?w) = ?u)\n\ngoal (1 subgoal):\n 1. {u. \\<exists>n. rotate n w = u} =\n    {u. \\<exists>n. rotate n (rotate l w) = u}", "by blast"], ["", "lemma rotate_pow_self: \"rotate (l*\\<^bold>|u\\<^bold>|) (u\\<^sup>@k) = u\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rotate (l * \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k) = u \\<^sup>@ k", "proof(induct l, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       rotate (l * \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k) =\n       u \\<^sup>@ k \\<Longrightarrow>\n       rotate (Suc l * \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k) = u \\<^sup>@ k", "case (Suc l)"], ["proof (state)\nthis:\n  rotate (l * \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k) = u \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       rotate (l * \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k) =\n       u \\<^sup>@ k \\<Longrightarrow>\n       rotate (Suc l * \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k) = u \\<^sup>@ k", "then"], ["proof (chain)\npicking this:\n  rotate (l * \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k) = u \\<^sup>@ k", "show ?case"], ["proof (prove)\nusing this:\n  rotate (l * \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k) = u \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. rotate (Suc l * \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k) = u \\<^sup>@ k", "proof(cases \"k = 0\", simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>rotate (l * \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k) = u \\<^sup>@ k;\n     k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> rotate (Suc l * \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k) =\n                      u \\<^sup>@ k", "assume \"k \\<noteq> 0\""], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rotate (l * \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k) = u \\<^sup>@ k;\n     k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> rotate (Suc l * \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k) =\n                      u \\<^sup>@ k", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. rotate (Suc l * \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k) = u \\<^sup>@ k", "unfolding rotate_rotate[of \"\\<^bold>|u\\<^bold>|\" \"l * \\<^bold>|u\\<^bold>|\" \"u\\<^sup>@k\", unfolded mult_Suc[symmetric] Suc.hyps, symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. rotate \\<^bold>|u\\<^bold>| (u \\<^sup>@ k) = u \\<^sup>@ k", "using rotate_append[of u \"u\\<^sup>@(k-1)\", folded pop_pow_one[OF \\<open>k \\<noteq> 0\\<close>, of u] pop_pow_one'[OF \\<open>k \\<noteq> 0\\<close>, of u]]"], ["proof (prove)\nusing this:\n  rotate \\<^bold>|u\\<^bold>| (u \\<^sup>@ k) = u \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. rotate \\<^bold>|u\\<^bold>| (u \\<^sup>@ k) = u \\<^sup>@ k", "."], ["proof (state)\nthis:\n  rotate (Suc l * \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k) = u \\<^sup>@ k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rotate (Suc l * \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k) = u \\<^sup>@ k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rotate_root_self: \"rotate \\<^bold>|r\\<^bold>| (r\\<^sup>@k) = r\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rotate \\<^bold>|r\\<^bold>| (r \\<^sup>@ k) = r \\<^sup>@ k", "using rotate_pow_self[of 1 r k]"], ["proof (prove)\nusing this:\n  rotate (1 * \\<^bold>|r\\<^bold>|) (r \\<^sup>@ k) = r \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. rotate \\<^bold>|r\\<^bold>| (r \\<^sup>@ k) = r \\<^sup>@ k", "by auto"], ["", "lemma rotate_pow_mod:  \"rotate n (u\\<^sup>@k) = rotate (n mod \\<^bold>|u\\<^bold>|) (u\\<^sup>@k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rotate n (u \\<^sup>@ k) =\n    rotate (n mod \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k)", "using rotate_rotate[of \"n mod \\<^bold>|u\\<^bold>|\" \"n div \\<^bold>|u\\<^bold>| * \\<^bold>|u\\<^bold>|\" \"u\\<^sup>@k\", symmetric]"], ["proof (prove)\nusing this:\n  rotate\n   (n mod \\<^bold>|u\\<^bold>| +\n    n div \\<^bold>|u\\<^bold>| * \\<^bold>|u\\<^bold>|)\n   (u \\<^sup>@ k) =\n  rotate (n mod \\<^bold>|u\\<^bold>|)\n   (rotate (n div \\<^bold>|u\\<^bold>| * \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k))\n\ngoal (1 subgoal):\n 1. rotate n (u \\<^sup>@ k) =\n    rotate (n mod \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k)", "unfolding rotate_pow_self[of \"n div \\<^bold>|u\\<^bold>|\" u k] div_mult_mod_eq[of n \"\\<^bold>|u\\<^bold>|\", unfolded add.commute[of \"n div \\<^bold>|u\\<^bold>| * \\<^bold>|u\\<^bold>|\" \"n mod \\<^bold>|u\\<^bold>|\"]]"], ["proof (prove)\nusing this:\n  rotate n (u \\<^sup>@ k) =\n  rotate (n mod \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k)\n\ngoal (1 subgoal):\n 1. rotate n (u \\<^sup>@ k) =\n    rotate (n mod \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k)", "."], ["", "lemma rotate_conj_pow: \"rotate \\<^bold>|u\\<^bold>| ((u\\<cdot>v)\\<^sup>@k) = (v\\<cdot>u)\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rotate \\<^bold>|u\\<^bold>| ((u \\<cdot> v) \\<^sup>@ k) =\n    (v \\<cdot> u) \\<^sup>@ k", "by (induct k, simp, simp add: rotate_append shift_pow)"], ["", "lemma rotate_pow_comm: \"rotate n (u\\<^sup>@k) = (rotate n u)\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rotate n (u \\<^sup>@ k) = rotate n u \\<^sup>@ k", "proof (cases \"u = \\<epsilon>\", simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow>\n    rotate n (u \\<^sup>@ k) = rotate n u \\<^sup>@ k", "assume \"u \\<noteq> \\<epsilon>\""], ["proof (state)\nthis:\n  u \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow>\n    rotate n (u \\<^sup>@ k) = rotate n u \\<^sup>@ k", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. rotate n (u \\<^sup>@ k) = rotate n u \\<^sup>@ k", "unfolding rotate_drop_take[of n u] rotate_pow_mod[of n u k]"], ["proof (prove)\ngoal (1 subgoal):\n 1. rotate (n mod \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k) =\n    (drop (n mod \\<^bold>|u\\<^bold>|) u \\<cdot>\n     take (n mod \\<^bold>|u\\<^bold>|) u) \\<^sup>@\n    k", "using rotate_conj_pow[of \"take (n mod \\<^bold>|u\\<^bold>|) u\" \"drop (n mod \\<^bold>|u\\<^bold>|) u\" k, unfolded append_take_drop_id[of \"n mod \\<^bold>|u\\<^bold>|\" u]]"], ["proof (prove)\nusing this:\n  rotate \\<^bold>|take (n mod \\<^bold>|u\\<^bold>|) u\\<^bold>|\n   (u \\<^sup>@ k) =\n  (drop (n mod \\<^bold>|u\\<^bold>|) u \\<cdot>\n   take (n mod \\<^bold>|u\\<^bold>|) u) \\<^sup>@\n  k\n\ngoal (1 subgoal):\n 1. rotate (n mod \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k) =\n    (drop (n mod \\<^bold>|u\\<^bold>|) u \\<cdot>\n     take (n mod \\<^bold>|u\\<^bold>|) u) \\<^sup>@\n    k", "unfolding  mod_le_divisor[of \"\\<^bold>|u\\<^bold>|\" n, THEN take_len, OF \\<open>u\\<noteq>\\<epsilon>\\<close>[unfolded length_greater_0_conv[symmetric]]]"], ["proof (prove)\nusing this:\n  rotate (n mod \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k) =\n  (drop (n mod \\<^bold>|u\\<^bold>|) u \\<cdot>\n   take (n mod \\<^bold>|u\\<^bold>|) u) \\<^sup>@\n  k\n\ngoal (1 subgoal):\n 1. rotate (n mod \\<^bold>|u\\<^bold>|) (u \\<^sup>@ k) =\n    (drop (n mod \\<^bold>|u\\<^bold>|) u \\<cdot>\n     take (n mod \\<^bold>|u\\<^bold>|) u) \\<^sup>@\n    k", "."], ["proof (state)\nthis:\n  rotate n (u \\<^sup>@ k) = rotate n u \\<^sup>@ k\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Lists of words and their concatenation\\<close>"], ["", "text\\<open>The helpful lemmas of this section deal with concatenation of a list of words @{term concat}.\nThe main objective is to cover elementary facts needed to study factorizations of words.\n\\<close>"], ["", "lemma append_in_lists: \"u \\<in> lists A \\<Longrightarrow> v \\<in> lists A \\<Longrightarrow> u \\<cdot> v \\<in> lists A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> lists A; v \\<in> lists A\\<rbrakk>\n    \\<Longrightarrow> u \\<cdot> v \\<in> lists A", "by simp"], ["", "lemma concat_take_is_prefix: \"concat(take n ws) \\<le>p concat ws\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concat (take n ws) \\<le>p concat ws", "using concat_morph[of \"take n ws\" \"drop n ws\", unfolded append_take_drop_id[of n ws], THEN prefI]"], ["proof (prove)\nusing this:\n  concat (take n ws) \\<le>p concat ws\n\ngoal (1 subgoal):\n 1. concat (take n ws) \\<le>p concat ws", "."], ["", "lemma concat_take_suc: assumes \"j < \\<^bold>|ws\\<^bold>|\" shows \"concat(take j ws) \\<cdot> ws!j = concat(take (Suc j) ws)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concat (take j ws) \\<cdot> ws ! j = concat (take (Suc j) ws)", "unfolding take_Suc_conv_app_nth[OF \\<open>j < \\<^bold>|ws\\<^bold>|\\<close>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. concat (take j ws) \\<cdot> ws ! j = concat (take j ws \\<cdot> [ws ! j])", "using sym[OF concat_append[of \"(take j ws)\" \"[ws ! j]\",\n        unfolded concat.simps(2)[of \"ws!j\" \\<epsilon>, unfolded concat.simps(1) append_Nil2]]]"], ["proof (prove)\nusing this:\n  concat (take j ws) \\<cdot> ws ! j = concat (take j ws \\<cdot> [ws ! j])\n\ngoal (1 subgoal):\n 1. concat (take j ws) \\<cdot> ws ! j = concat (take j ws \\<cdot> [ws ! j])", "."], ["", "lemma pref_mod_list': assumes \"u \\<le>np concat ws\" \n  obtains j r where \"j < \\<^bold>|ws\\<^bold>|\" and \"r \\<le>np ws!j\" and \"concat (take j ws) \\<cdot> r = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r \\<le>np ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r \\<le>np ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<^bold>|ws\\<^bold>| \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|ws\\<^bold>| \\<noteq> 0", "using assms"], ["proof (prove)\nusing this:\n  u \\<le>np concat ws\n\ngoal (1 subgoal):\n 1. \\<^bold>|ws\\<^bold>| \\<noteq> 0", "by fastforce"], ["proof (state)\nthis:\n  \\<^bold>|ws\\<^bold>| \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r \\<le>np ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<^bold>|ws\\<^bold>| \\<noteq> 0", "obtain l where \"Suc l = \\<^bold>|ws\\<^bold>|\""], ["proof (prove)\nusing this:\n  \\<^bold>|ws\\<^bold>| \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        Suc l = \\<^bold>|ws\\<^bold>| \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using Suc_pred"], ["proof (prove)\nusing this:\n  \\<^bold>|ws\\<^bold>| \\<noteq> 0\n  0 < ?n \\<Longrightarrow> Suc (?n - Suc 0) = ?n\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        Suc l = \\<^bold>|ws\\<^bold>| \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Suc l = \\<^bold>|ws\\<^bold>|\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r \\<le>np ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?P = \"\\<lambda> j. u \\<le>p concat(take (Suc j) ws)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r \\<le>np ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"?P l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p concat (take (Suc l) ws)", "using assms  \\<open>Suc l = \\<^bold>|ws\\<^bold>|\\<close>"], ["proof (prove)\nusing this:\n  u \\<le>np concat ws\n  Suc l = \\<^bold>|ws\\<^bold>|\n\ngoal (1 subgoal):\n 1. u \\<le>p concat (take (Suc l) ws)", "by auto"], ["proof (state)\nthis:\n  u \\<le>p concat (take (Suc l) ws)\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r \\<le>np ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define j where \"j = (LEAST j. ?P j)\" \\<comment> \\<open>largest j such that concat (take j ws) <p u\\<close>"], ["proof (state)\nthis:\n  j = (LEAST j. u \\<le>p concat (take (Suc j) ws))\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r \\<le>np ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"u \\<le>p concat(take (Suc j) ws)\" and \"j < \\<^bold>|ws\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p concat (take (Suc j) ws) &&& j < \\<^bold>|ws\\<^bold>|", "using Least_le[of ?P, OF \\<open>?P l\\<close>]\n      LeastI[of ?P, OF \\<open>?P l\\<close>] \\<open>Suc l = \\<^bold>|ws\\<^bold>|\\<close>"], ["proof (prove)\nusing this:\n  (LEAST x. u \\<le>p concat (take (Suc x) ws)) \\<le> l\n  u \\<le>p\n  concat (take (Suc (LEAST x. u \\<le>p concat (take (Suc x) ws))) ws)\n  Suc l = \\<^bold>|ws\\<^bold>|\n\ngoal (1 subgoal):\n 1. u \\<le>p concat (take (Suc j) ws) &&& j < \\<^bold>|ws\\<^bold>|", "unfolding sym[OF j_def]"], ["proof (prove)\nusing this:\n  j \\<le> l\n  u \\<le>p concat (take (Suc j) ws)\n  Suc l = \\<^bold>|ws\\<^bold>|\n\ngoal (1 subgoal):\n 1. u \\<le>p concat (take (Suc j) ws) &&& j < \\<^bold>|ws\\<^bold>|", "by auto"], ["proof (state)\nthis:\n  u \\<le>p concat (take (Suc j) ws)\n  j < \\<^bold>|ws\\<^bold>|\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r \\<le>np ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"concat(take j ws) <p u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concat (take j ws) <p u", "proof (cases \"j = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow> concat (take j ws) <p u\n 2. j \\<noteq> 0 \\<Longrightarrow> concat (take j ws) <p u", "assume \"j = 0\""], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow> concat (take j ws) <p u\n 2. j \\<noteq> 0 \\<Longrightarrow> concat (take j ws) <p u", "thus \"concat(take j ws) <p u\""], ["proof (prove)\nusing this:\n  j = 0\n\ngoal (1 subgoal):\n 1. concat (take j ws) <p u", "using  assms"], ["proof (prove)\nusing this:\n  j = 0\n  u \\<le>np concat ws\n\ngoal (1 subgoal):\n 1. concat (take j ws) <p u", "by fastforce"], ["proof (state)\nthis:\n  concat (take j ws) <p u\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow> concat (take j ws) <p u", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow> concat (take j ws) <p u", "assume \"j \\<noteq> 0\""], ["proof (state)\nthis:\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow> concat (take j ws) <p u", "hence \"j - 1 < j\" and \"Suc (j-1) = j\""], ["proof (prove)\nusing this:\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. j - 1 < j &&& Suc (j - 1) = j", "by auto"], ["proof (state)\nthis:\n  j - 1 < j\n  Suc (j - 1) = j\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow> concat (take j ws) <p u", "hence \"\\<not> ?P (j-1)\""], ["proof (prove)\nusing this:\n  j - 1 < j\n  Suc (j - 1) = j\n\ngoal (1 subgoal):\n 1. \\<not> u \\<le>p concat (take (Suc (j - 1)) ws)", "using j_def not_less_Least"], ["proof (prove)\nusing this:\n  j - 1 < j\n  Suc (j - 1) = j\n  j = (LEAST j. u \\<le>p concat (take (Suc j) ws))\n  ?k < (LEAST x. ?P x) \\<Longrightarrow> \\<not> ?P ?k\n\ngoal (1 subgoal):\n 1. \\<not> u \\<le>p concat (take (Suc (j - 1)) ws)", "by blast"], ["proof (state)\nthis:\n  \\<not> u \\<le>p concat (take (Suc (j - 1)) ws)\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow> concat (take j ws) <p u", "from this[unfolded \\<open>Suc (j-1) = j\\<close>]"], ["proof (chain)\npicking this:\n  \\<not> u \\<le>p concat (take j ws)", "show \"concat(take j ws) <p u\""], ["proof (prove)\nusing this:\n  \\<not> u \\<le>p concat (take j ws)\n\ngoal (1 subgoal):\n 1. concat (take j ws) <p u", "using pref_comp_not_pref ruler[OF concat_take_is_prefix npD[OF assms], of j]"], ["proof (prove)\nusing this:\n  \\<not> u \\<le>p concat (take j ws)\n  \\<lbrakk>?u \\<bowtie> ?v; \\<not> ?v \\<le>p ?u\\<rbrakk>\n  \\<Longrightarrow> ?u <p ?v\n  concat (take j ws) \\<le>p u \\<or> u \\<le>p concat (take j ws)\n\ngoal (1 subgoal):\n 1. concat (take j ws) <p u", "unfolding prefix_comparable_def"], ["proof (prove)\nusing this:\n  \\<not> u \\<le>p concat (take j ws)\n  \\<lbrakk>?u \\<le>p ?v \\<or> ?v \\<le>p ?u; \\<not> ?v \\<le>p ?u\\<rbrakk>\n  \\<Longrightarrow> ?u <p ?v\n  concat (take j ws) \\<le>p u \\<or> u \\<le>p concat (take j ws)\n\ngoal (1 subgoal):\n 1. concat (take j ws) <p u", "by blast"], ["proof (state)\nthis:\n  concat (take j ws) <p u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  concat (take j ws) <p u\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r \\<le>np ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?r = \"concat(take j ws)\\<inverse>\\<^sup>>u\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r \\<le>np ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"concat(take j ws) \\<cdot> ?r = u\" and \"?r \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concat (take j ws) \\<cdot> concat (take j ws)\\<inverse>\\<^sup>>u = u &&&\n    concat (take j ws)\\<inverse>\\<^sup>>u \\<noteq> \\<epsilon>", "using \\<open>concat (take j ws) <p u\\<close>"], ["proof (prove)\nusing this:\n  concat (take j ws) <p u\n\ngoal (1 subgoal):\n 1. concat (take j ws) \\<cdot> concat (take j ws)\\<inverse>\\<^sup>>u = u &&&\n    concat (take j ws)\\<inverse>\\<^sup>>u \\<noteq> \\<epsilon>", "by auto"], ["proof (state)\nthis:\n  concat (take j ws) \\<cdot> concat (take j ws)\\<inverse>\\<^sup>>u = u\n  concat (take j ws)\\<inverse>\\<^sup>>u \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r \\<le>np ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"?r \\<le>p ws!j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concat (take j ws)\\<inverse>\\<^sup>>u \\<le>p ws ! j", "using  pref_cancel[of \"concat (take j ws)\" \"concat (take j ws)\\<inverse>\\<^sup>>u\" \"ws ! j\"]\n      \\<open>u \\<le>p concat (take (Suc j) ws)\\<close>[unfolded sym[OF concat_take_suc[OF \\<open>j < \\<^bold>|ws\\<^bold>|\\<close>]]]\n      \\<open>concat (take j ws) \\<cdot> concat (take j ws)\\<inverse>\\<^sup>>u = u\\<close>"], ["proof (prove)\nusing this:\n  concat (take j ws) \\<cdot> concat (take j ws)\\<inverse>\\<^sup>>u \\<le>p\n  concat (take j ws) \\<cdot> ws ! j \\<Longrightarrow>\n  concat (take j ws)\\<inverse>\\<^sup>>u \\<le>p ws ! j\n  u \\<le>p concat (take j ws) \\<cdot> ws ! j\n  concat (take j ws) \\<cdot> concat (take j ws)\\<inverse>\\<^sup>>u = u\n\ngoal (1 subgoal):\n 1. concat (take j ws)\\<inverse>\\<^sup>>u \\<le>p ws ! j", "by argo"], ["proof (state)\nthis:\n  concat (take j ws)\\<inverse>\\<^sup>>u \\<le>p ws ! j\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r \\<le>np ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using that[OF \\<open>j < \\<^bold>|ws\\<^bold>|\\<close>  npI[OF \\<open>?r \\<noteq> \\<epsilon>\\<close> \\<open>?r \\<le>p ws!j\\<close>] \\<open>concat(take j ws) \\<cdot> ?r = u\\<close>]"], ["proof (prove)\nusing this:\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pref_mod_list_suf: assumes \"u \\<le>np concat ws\" \n  obtains j s where \"j < \\<^bold>|ws\\<^bold>|\" and \"s <s ws!j\" and \"concat (take (Suc j) ws) = u \\<cdot> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>j s.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; s <s ws ! j;\n         concat (take (Suc j) ws) = u \\<cdot> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>j s.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; s <s ws ! j;\n         concat (take (Suc j) ws) = u \\<cdot> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain j r where \"j < \\<^bold>|ws\\<^bold>|\" and \"r \\<le>np ws!j\" and \"concat (take j ws) \\<cdot> r = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r \\<le>np ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using pref_mod_list'[OF assms]"], ["proof (prove)\nusing this:\n  (\\<And>j r.\n      \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r \\<le>np ws ! j;\n       concat (take j ws) \\<cdot> r = u\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r \\<le>np ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  j < \\<^bold>|ws\\<^bold>|\n  r \\<le>np ws ! j\n  concat (take j ws) \\<cdot> r = u\n\ngoal (1 subgoal):\n 1. (\\<And>j s.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; s <s ws ! j;\n         concat (take (Suc j) ws) = u \\<cdot> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"r\\<inverse>\\<^sup>>(ws!j) <s (ws!j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r\\<inverse>\\<^sup>>ws ! j <s ws ! j", "using ssufI1[OF _ npD'[OF \\<open>r \\<le>np ws ! j\\<close>]]  lq_pref[OF npD[OF \\<open>r \\<le>np ws ! j\\<close>]]"], ["proof (prove)\nusing this:\n  r \\<cdot> ?v = ?w \\<Longrightarrow> ?v <s ?w\n  r \\<cdot> r\\<inverse>\\<^sup>>ws ! j = ws ! j\n\ngoal (1 subgoal):\n 1. r\\<inverse>\\<^sup>>ws ! j <s ws ! j", "."], ["proof (state)\nthis:\n  r\\<inverse>\\<^sup>>ws ! j <s ws ! j\n\ngoal (1 subgoal):\n 1. (\\<And>j s.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; s <s ws ! j;\n         concat (take (Suc j) ws) = u \\<cdot> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"concat (take (Suc j) ws) = u \\<cdot> r\\<inverse>\\<^sup>>(ws!j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concat (take (Suc j) ws) = u \\<cdot> r\\<inverse>\\<^sup>>ws ! j", "using lq_pref[OF npD[OF \\<open>r \\<le>np ws ! j\\<close>], symmetric, unfolded\n        same_append_eq[of \"concat (take j ws)\" \"ws ! j\" \"r \\<cdot> r\\<inverse>\\<^sup>>ws ! j\", symmetric] lassoc\n        \\<open>concat (take j ws) \\<cdot> r = u\\<close> concat_take_suc[OF \\<open>j < \\<^bold>|ws\\<^bold>|\\<close>] \\<open>r \\<le>np ws!j\\<close>]"], ["proof (prove)\nusing this:\n  concat (take (Suc j) ws) = u \\<cdot> r\\<inverse>\\<^sup>>ws ! j\n\ngoal (1 subgoal):\n 1. concat (take (Suc j) ws) = u \\<cdot> r\\<inverse>\\<^sup>>ws ! j", "."], ["proof (state)\nthis:\n  concat (take (Suc j) ws) = u \\<cdot> r\\<inverse>\\<^sup>>ws ! j\n\ngoal (1 subgoal):\n 1. (\\<And>j s.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; s <s ws ! j;\n         concat (take (Suc j) ws) = u \\<cdot> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from that[OF \\<open>j < \\<^bold>|ws\\<^bold>|\\<close> \\<open>r\\<inverse>\\<^sup>>(ws!j) <s (ws!j)\\<close> this]"], ["proof (chain)\npicking this:\n  thesis", "show thesis"], ["proof (prove)\nusing this:\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma suf_mod_list': \"s \\<le>ns concat ws \\<Longrightarrow> ws \\<noteq> \\<epsilon> \\<Longrightarrow> \\<exists>j r. j < \\<^bold>|ws\\<^bold>| \\<and> r \\<cdot> (concat (drop (Suc j) ws)) = s \\<and> r \\<le>ns ws!j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<le>ns concat ws; ws \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>j r.\n                         j < \\<^bold>|ws\\<^bold>| \\<and>\n                         r \\<cdot> concat (drop (Suc j) ws) = s \\<and>\n                         r \\<le>ns ws ! j", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<le>ns concat ws; ws \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>j r.\n                         j < \\<^bold>|ws\\<^bold>| \\<and>\n                         r \\<cdot> concat (drop (Suc j) ws) = s \\<and>\n                         r \\<le>ns ws ! j", "assume \"s \\<le>ns concat ws\" \"ws \\<noteq> \\<epsilon>\""], ["proof (state)\nthis:\n  s \\<le>ns concat ws\n  ws \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<le>ns concat ws; ws \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>j r.\n                         j < \\<^bold>|ws\\<^bold>| \\<and>\n                         r \\<cdot> concat (drop (Suc j) ws) = s \\<and>\n                         r \\<le>ns ws ! j", "have \"rev s \\<le>np concat (rev (map (\\<lambda>u. rev u) ws))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev s \\<le>np concat (rev (map rev ws))", "using \\<open>s \\<le>ns concat ws\\<close>[unfolded nsuf_rev_pref_iff]"], ["proof (prove)\nusing this:\n  rev s \\<le>np rev (concat ws)\n\ngoal (1 subgoal):\n 1. rev s \\<le>np concat (rev (map rev ws))", "by (simp add: rev_concat rev_map)"], ["proof (state)\nthis:\n  rev s \\<le>np concat (rev (map rev ws))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<le>ns concat ws; ws \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>j r.\n                         j < \\<^bold>|ws\\<^bold>| \\<and>\n                         r \\<cdot> concat (drop (Suc j) ws) = s \\<and>\n                         r \\<le>ns ws ! j", "have  \"rev ws \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev ws \\<noteq> \\<epsilon>", "by (simp add: \\<open>ws \\<noteq> \\<epsilon>\\<close>)"], ["proof (state)\nthis:\n  rev ws \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<le>ns concat ws; ws \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>j r.\n                         j < \\<^bold>|ws\\<^bold>| \\<and>\n                         r \\<cdot> concat (drop (Suc j) ws) = s \\<and>\n                         r \\<le>ns ws ! j", "then"], ["proof (chain)\npicking this:\n  rev ws \\<noteq> \\<epsilon>", "obtain j r where \"j < \\<^bold>|rev (map rev ws)\\<^bold>|\" \"concat (take j (rev (map rev ws))) \\<cdot> r = rev s\" \"r \\<le>np rev (map rev ws) ! j\""], ["proof (prove)\nusing this:\n  rev ws \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|rev (map rev ws)\\<^bold>|;\n         concat (take j (rev (map rev ws))) \\<cdot> r = rev s;\n         r \\<le>np rev (map rev ws) ! j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using pref_mod_list'[of \"rev s\" \"rev (map (\\<lambda>u. rev u) ws)\" thesis]\n      \\<open>rev s \\<le>np concat (rev (map rev ws))\\<close>"], ["proof (prove)\nusing this:\n  rev ws \\<noteq> \\<epsilon>\n  \\<lbrakk>rev s \\<le>np concat (rev (map rev ws));\n   \\<And>j r.\n      \\<lbrakk>j < \\<^bold>|rev (map rev ws)\\<^bold>|;\n       r \\<le>np rev (map rev ws) ! j;\n       concat (take j (rev (map rev ws))) \\<cdot> r = rev s\\<rbrakk>\n      \\<Longrightarrow> thesis\\<rbrakk>\n  \\<Longrightarrow> thesis\n  rev s \\<le>np concat (rev (map rev ws))\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|rev (map rev ws)\\<^bold>|;\n         concat (take j (rev (map rev ws))) \\<cdot> r = rev s;\n         r \\<le>np rev (map rev ws) ! j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  j < \\<^bold>|rev (map rev ws)\\<^bold>|\n  concat (take j (rev (map rev ws))) \\<cdot> r = rev s\n  r \\<le>np rev (map rev ws) ! j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<le>ns concat ws; ws \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>j r.\n                         j < \\<^bold>|ws\\<^bold>| \\<and>\n                         r \\<cdot> concat (drop (Suc j) ws) = s \\<and>\n                         r \\<le>ns ws ! j", "have \"rev ws ! j = rev (rev (map rev ws) ! j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev ws ! j = rev (rev (map rev ws) ! j)", "using \\<open>j < \\<^bold>|rev (map rev ws)\\<^bold>|\\<close> length_map nth_map[of j \"rev ws\" rev, unfolded rev_map[of rev ws, symmetric]]  rev_rev_ident"], ["proof (prove)\nusing this:\n  j < \\<^bold>|rev (map rev ws)\\<^bold>|\n  \\<^bold>|map ?f ?xs\\<^bold>| = \\<^bold>|?xs\\<^bold>|\n  j < \\<^bold>|rev ws\\<^bold>| \\<Longrightarrow>\n  rev (map rev ws) ! j = rev (rev ws ! j)\n  rev (rev ?xs) = ?xs\n\ngoal (1 subgoal):\n 1. rev ws ! j = rev (rev (map rev ws) ! j)", "by simp"], ["proof (state)\nthis:\n  rev ws ! j = rev (rev (map rev ws) ! j)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<le>ns concat ws; ws \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>j r.\n                         j < \\<^bold>|ws\\<^bold>| \\<and>\n                         r \\<cdot> concat (drop (Suc j) ws) = s \\<and>\n                         r \\<le>ns ws ! j", "from \\<open>j < \\<^bold>|rev (map rev ws)\\<^bold>|\\<close> rev_nth[of j ws, unfolded this]"], ["proof (chain)\npicking this:\n  j < \\<^bold>|rev (map rev ws)\\<^bold>|\n  j < \\<^bold>|ws\\<^bold>| \\<Longrightarrow>\n  rev (rev (map rev ws) ! j) = ws ! (\\<^bold>|ws\\<^bold>| - Suc j)", "have \"rev (rev (map rev ws) ! j) = ws!(\\<^bold>|ws\\<^bold>|- Suc j)\""], ["proof (prove)\nusing this:\n  j < \\<^bold>|rev (map rev ws)\\<^bold>|\n  j < \\<^bold>|ws\\<^bold>| \\<Longrightarrow>\n  rev (rev (map rev ws) ! j) = ws ! (\\<^bold>|ws\\<^bold>| - Suc j)\n\ngoal (1 subgoal):\n 1. rev (rev (map rev ws) ! j) = ws ! (\\<^bold>|ws\\<^bold>| - Suc j)", "by fastforce"], ["proof (state)\nthis:\n  rev (rev (map rev ws) ! j) = ws ! (\\<^bold>|ws\\<^bold>| - Suc j)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<le>ns concat ws; ws \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>j r.\n                         j < \\<^bold>|ws\\<^bold>| \\<and>\n                         r \\<cdot> concat (drop (Suc j) ws) = s \\<and>\n                         r \\<le>ns ws ! j", "from \\<open>r \\<le>np rev (map rev ws) ! j\\<close>[unfolded npref_rev_suf_iff, unfolded this]"], ["proof (chain)\npicking this:\n  rev r \\<le>ns ws ! (\\<^bold>|ws\\<^bold>| - Suc j)", "have p2: \"rev r \\<le>ns ws!(\\<^bold>|ws\\<^bold>|-Suc j)\""], ["proof (prove)\nusing this:\n  rev r \\<le>ns ws ! (\\<^bold>|ws\\<^bold>| - Suc j)\n\ngoal (1 subgoal):\n 1. rev r \\<le>ns ws ! (\\<^bold>|ws\\<^bold>| - Suc j)", "."], ["proof (state)\nthis:\n  rev r \\<le>ns ws ! (\\<^bold>|ws\\<^bold>| - Suc j)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<le>ns concat ws; ws \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>j r.\n                         j < \\<^bold>|ws\\<^bold>| \\<and>\n                         r \\<cdot> concat (drop (Suc j) ws) = s \\<and>\n                         r \\<le>ns ws ! j", "have \"concat (take j (rev (map rev ws))) = rev (concat (drop (\\<^bold>|ws\\<^bold>|-j) ws))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concat (take j (rev (map rev ws))) =\n    rev (concat (drop (\\<^bold>|ws\\<^bold>| - j) ws))", "by (simp add: rev_concat rev_map take_map take_rev)"], ["proof (state)\nthis:\n  concat (take j (rev (map rev ws))) =\n  rev (concat (drop (\\<^bold>|ws\\<^bold>| - j) ws))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<le>ns concat ws; ws \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>j r.\n                         j < \\<^bold>|ws\\<^bold>| \\<and>\n                         r \\<cdot> concat (drop (Suc j) ws) = s \\<and>\n                         r \\<le>ns ws ! j", "from arg_cong[OF this, of \"\\<lambda>x. x\\<cdot>r\", unfolded \\<open>concat (take j (rev (map rev ws))) \\<cdot> r = rev s\\<close>]"], ["proof (chain)\npicking this:\n  rev s = rev (concat (drop (\\<^bold>|ws\\<^bold>| - j) ws)) \\<cdot> r", "have p1: \"s = rev r \\<cdot> (concat (drop (\\<^bold>|ws\\<^bold>|-j) ws))\""], ["proof (prove)\nusing this:\n  rev s = rev (concat (drop (\\<^bold>|ws\\<^bold>| - j) ws)) \\<cdot> r\n\ngoal (1 subgoal):\n 1. s = rev r \\<cdot> concat (drop (\\<^bold>|ws\\<^bold>| - j) ws)", "using  rev_append[of \"rev (concat (drop (\\<^bold>|ws\\<^bold>| - j) ws))\" r] rev_rev_ident[of s] rev_rev_ident[of \"(concat (drop (\\<^bold>|ws\\<^bold>| - j) ws))\"]"], ["proof (prove)\nusing this:\n  rev s = rev (concat (drop (\\<^bold>|ws\\<^bold>| - j) ws)) \\<cdot> r\n  rev (rev (concat (drop (\\<^bold>|ws\\<^bold>| - j) ws)) \\<cdot> r) =\n  rev r \\<cdot> rev (rev (concat (drop (\\<^bold>|ws\\<^bold>| - j) ws)))\n  rev (rev s) = s\n  rev (rev (concat (drop (\\<^bold>|ws\\<^bold>| - j) ws))) =\n  concat (drop (\\<^bold>|ws\\<^bold>| - j) ws)\n\ngoal (1 subgoal):\n 1. s = rev r \\<cdot> concat (drop (\\<^bold>|ws\\<^bold>| - j) ws)", "by argo"], ["proof (state)\nthis:\n  s = rev r \\<cdot> concat (drop (\\<^bold>|ws\\<^bold>| - j) ws)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<le>ns concat ws; ws \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>j r.\n                         j < \\<^bold>|ws\\<^bold>| \\<and>\n                         r \\<cdot> concat (drop (Suc j) ws) = s \\<and>\n                         r \\<le>ns ws ! j", "have p0: \"\\<^bold>|ws\\<^bold>| - Suc j < \\<^bold>|ws\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|ws\\<^bold>| - Suc j < \\<^bold>|ws\\<^bold>|", "by (simp add: \\<open>ws \\<noteq> \\<epsilon>\\<close>)"], ["proof (state)\nthis:\n  \\<^bold>|ws\\<^bold>| - Suc j < \\<^bold>|ws\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<le>ns concat ws; ws \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>j r.\n                         j < \\<^bold>|ws\\<^bold>| \\<and>\n                         r \\<cdot> concat (drop (Suc j) ws) = s \\<and>\n                         r \\<le>ns ws ! j", "have \"\\<^bold>|ws\\<^bold>| - j = Suc (\\<^bold>|ws\\<^bold>| - Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|ws\\<^bold>| - j = Suc (\\<^bold>|ws\\<^bold>| - Suc j)", "using  Suc_diff_Suc[OF \\<open>j < \\<^bold>|rev (map rev ws)\\<^bold>|\\<close>]"], ["proof (prove)\nusing this:\n  Suc (\\<^bold>|rev (map rev ws)\\<^bold>| - Suc j) =\n  \\<^bold>|rev (map rev ws)\\<^bold>| - j\n\ngoal (1 subgoal):\n 1. \\<^bold>|ws\\<^bold>| - j = Suc (\\<^bold>|ws\\<^bold>| - Suc j)", "by auto"], ["proof (state)\nthis:\n  \\<^bold>|ws\\<^bold>| - j = Suc (\\<^bold>|ws\\<^bold>| - Suc j)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<le>ns concat ws; ws \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>j r.\n                         j < \\<^bold>|ws\\<^bold>| \\<and>\n                         r \\<cdot> concat (drop (Suc j) ws) = s \\<and>\n                         r \\<le>ns ws ! j", "from p0 p1[unfolded this] p2"], ["proof (chain)\npicking this:\n  \\<^bold>|ws\\<^bold>| - Suc j < \\<^bold>|ws\\<^bold>|\n  s = rev r \\<cdot> concat (drop (Suc (\\<^bold>|ws\\<^bold>| - Suc j)) ws)\n  rev r \\<le>ns ws ! (\\<^bold>|ws\\<^bold>| - Suc j)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<^bold>|ws\\<^bold>| - Suc j < \\<^bold>|ws\\<^bold>|\n  s = rev r \\<cdot> concat (drop (Suc (\\<^bold>|ws\\<^bold>| - Suc j)) ws)\n  rev r \\<le>ns ws ! (\\<^bold>|ws\\<^bold>| - Suc j)\n\ngoal (1 subgoal):\n 1. \\<exists>j r.\n       j < \\<^bold>|ws\\<^bold>| \\<and>\n       r \\<cdot> concat (drop (Suc j) ws) = s \\<and> r \\<le>ns ws ! j", "by blast"], ["proof (state)\nthis:\n  \\<exists>j r.\n     j < \\<^bold>|ws\\<^bold>| \\<and>\n     r \\<cdot> concat (drop (Suc j) ws) = s \\<and> r \\<le>ns ws ! j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pref_mod_list: assumes \"u <p concat ws\" \n  obtains j r where \"j < \\<^bold>|ws\\<^bold>|\" and \"r <p ws!j\" and \"concat (take j ws) \\<cdot> r = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r <p ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r <p ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<^bold>|ws\\<^bold>| \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|ws\\<^bold>| \\<noteq> 0", "using assms"], ["proof (prove)\nusing this:\n  u <p concat ws\n\ngoal (1 subgoal):\n 1. \\<^bold>|ws\\<^bold>| \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  \\<^bold>|ws\\<^bold>| \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r <p ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<^bold>|ws\\<^bold>| \\<noteq> 0", "obtain l where \"Suc l = \\<^bold>|ws\\<^bold>|\""], ["proof (prove)\nusing this:\n  \\<^bold>|ws\\<^bold>| \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        Suc l = \\<^bold>|ws\\<^bold>| \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using Suc_pred"], ["proof (prove)\nusing this:\n  \\<^bold>|ws\\<^bold>| \\<noteq> 0\n  0 < ?n \\<Longrightarrow> Suc (?n - Suc 0) = ?n\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        Suc l = \\<^bold>|ws\\<^bold>| \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Suc l = \\<^bold>|ws\\<^bold>|\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r <p ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?P = \"\\<lambda> j. u <p concat(take (Suc j) ws)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r <p ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"?P l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u <p concat (take (Suc l) ws)", "using assms  \\<open>Suc l = \\<^bold>|ws\\<^bold>|\\<close>"], ["proof (prove)\nusing this:\n  u <p concat ws\n  Suc l = \\<^bold>|ws\\<^bold>|\n\ngoal (1 subgoal):\n 1. u <p concat (take (Suc l) ws)", "by auto"], ["proof (state)\nthis:\n  u <p concat (take (Suc l) ws)\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r <p ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define j where \"j = (LEAST j. ?P j)\" \\<comment> \\<open>smallest j such that concat (take (Suc j) ws) <p u\\<close>"], ["proof (state)\nthis:\n  j = (LEAST j. u <p concat (take (Suc j) ws))\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r <p ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"u <p concat(take (Suc j) ws)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u <p concat (take (Suc j) ws)", "using  LeastI[of ?P, OF \\<open>?P l\\<close>]"], ["proof (prove)\nusing this:\n  u <p concat (take (Suc (LEAST x. u <p concat (take (Suc x) ws))) ws)\n\ngoal (1 subgoal):\n 1. u <p concat (take (Suc j) ws)", "unfolding sym[OF j_def]"], ["proof (prove)\nusing this:\n  u <p concat (take (Suc j) ws)\n\ngoal (1 subgoal):\n 1. u <p concat (take (Suc j) ws)", "."], ["proof (state)\nthis:\n  u <p concat (take (Suc j) ws)\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r <p ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have  \"j < \\<^bold>|ws\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < \\<^bold>|ws\\<^bold>|", "using Least_le[of ?P, OF \\<open>?P l\\<close>] \\<open>Suc l = \\<^bold>|ws\\<^bold>|\\<close>"], ["proof (prove)\nusing this:\n  (LEAST x. u <p concat (take (Suc x) ws)) \\<le> l\n  Suc l = \\<^bold>|ws\\<^bold>|\n\ngoal (1 subgoal):\n 1. j < \\<^bold>|ws\\<^bold>|", "unfolding sym[OF j_def]"], ["proof (prove)\nusing this:\n  j \\<le> l\n  Suc l = \\<^bold>|ws\\<^bold>|\n\ngoal (1 subgoal):\n 1. j < \\<^bold>|ws\\<^bold>|", "by auto"], ["proof (state)\nthis:\n  j < \\<^bold>|ws\\<^bold>|\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r <p ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"0 < j \\<Longrightarrow> concat(take j ws) \\<le>p u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < j \\<Longrightarrow> concat (take j ws) \\<le>p u", "using Least_le[of ?P \"(j- Suc 0)\", unfolded sym[OF j_def]] \n      ruler[OF concat_take_is_prefix sprefD1[OF assms], of j]"], ["proof (prove)\nusing this:\n  u <p concat (take (Suc (j - Suc 0)) ws) \\<Longrightarrow>\n  j \\<le> j - Suc 0\n  concat (take j ws) \\<le>p u \\<or> u \\<le>p concat (take j ws)\n\ngoal (1 subgoal):\n 1. 0 < j \\<Longrightarrow> concat (take j ws) \\<le>p u", "by force"], ["proof (state)\nthis:\n  0 < j \\<Longrightarrow> concat (take j ws) \\<le>p u\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r <p ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"concat(take j ws) \\<le>p u\""], ["proof (prove)\nusing this:\n  0 < j \\<Longrightarrow> concat (take j ws) \\<le>p u\n\ngoal (1 subgoal):\n 1. concat (take j ws) \\<le>p u", "by fastforce"], ["proof (state)\nthis:\n  concat (take j ws) \\<le>p u\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r <p ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?r = \"concat(take j ws)\\<inverse>\\<^sup>>u\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r <p ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"concat(take j ws) \\<cdot> ?r = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concat (take j ws) \\<cdot> concat (take j ws)\\<inverse>\\<^sup>>u = u", "using \\<open>concat (take j ws) \\<le>p u\\<close>"], ["proof (prove)\nusing this:\n  concat (take j ws) \\<le>p u\n\ngoal (1 subgoal):\n 1. concat (take j ws) \\<cdot> concat (take j ws)\\<inverse>\\<^sup>>u = u", "by auto"], ["proof (state)\nthis:\n  concat (take j ws) \\<cdot> concat (take j ws)\\<inverse>\\<^sup>>u = u\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r <p ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"?r <p ws!j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concat (take j ws)\\<inverse>\\<^sup>>u <p ws ! j", "using spref_lq[OF \\<open>concat (take j ws) \\<le>p u\\<close> \\<open>u <p concat (take (Suc j) ws)\\<close>, unfolded \n        lq_triv[of \"concat (take j ws)\" \"ws!j\", unfolded concat_take_suc[OF \\<open>j < \\<^bold>|ws\\<^bold>|\\<close>]]]"], ["proof (prove)\nusing this:\n  concat (take j ws)\\<inverse>\\<^sup>>u <p ws ! j\n\ngoal (1 subgoal):\n 1. concat (take j ws)\\<inverse>\\<^sup>>u <p ws ! j", "."], ["proof (state)\nthis:\n  concat (take j ws)\\<inverse>\\<^sup>>u <p ws ! j\n\ngoal (1 subgoal):\n 1. (\\<And>j r.\n        \\<lbrakk>j < \\<^bold>|ws\\<^bold>|; r <p ws ! j;\n         concat (take j ws) \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using that[OF \\<open>j < \\<^bold>|ws\\<^bold>|\\<close> \\<open>?r <p ws!j\\<close> \\<open>concat(take j ws) \\<cdot> ?r = u\\<close>]"], ["proof (prove)\nusing this:\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pref_mod_power: assumes \"u <p w\\<^sup>@l\"\n  obtains k z where \"k < l\" and \"z <p w\" and \"w\\<^sup>@k\\<cdot>z = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k z.\n        \\<lbrakk>k < l; z <p w; w \\<^sup>@ k \\<cdot> z = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using pref_mod_list[of u \"[w]\\<^sup>@l\", unfolded sing_pow_len concat_sing_pow, OF \\<open>u <p w\\<^sup>@l\\<close>, of thesis] \n    sing_pow[of _ l w] concat_take_sing\n    less_imp_le_nat"], ["proof (prove)\nusing this:\n  (\\<And>j r.\n      \\<lbrakk>j < l; r <p ([w] \\<^sup>@ l) ! j;\n       concat (take j ([w] \\<^sup>@ l)) \\<cdot> r = u\\<rbrakk>\n      \\<Longrightarrow> thesis) \\<Longrightarrow>\n  thesis\n  ?i < l \\<Longrightarrow> ([w] \\<^sup>@ l) ! ?i = w\n  ?k \\<le> ?l \\<Longrightarrow>\n  concat (take ?k ([?r] \\<^sup>@ ?l)) = ?r \\<^sup>@ ?k\n  ?m < ?n \\<Longrightarrow> ?m \\<le> ?n\n\ngoal (1 subgoal):\n 1. (\\<And>k z.\n        \\<lbrakk>k < l; z <p w; w \\<^sup>@ k \\<cdot> z = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["", "lemma get_pow_exp: assumes \"z <p t\" shows \"m = \\<^bold>|t\\<^sup>@m\\<cdot>z\\<^bold>| div \\<^bold>|t\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m = \\<^bold>|t \\<^sup>@ m \\<cdot> z\\<^bold>| div \\<^bold>|t\\<^bold>|", "unfolding length_append[of \"t\\<^sup>@m\" z, unfolded pow_len]"], ["proof (prove)\ngoal (1 subgoal):\n 1. m =\n    (m * \\<^bold>|t\\<^bold>| + \\<^bold>|z\\<^bold>|) div \\<^bold>|t\\<^bold>|", "using  get_div[OF prefix_length_less[OF assms]]"], ["proof (prove)\nusing this:\n  ?m =\n  (?m * \\<^bold>|t\\<^bold>| + \\<^bold>|z\\<^bold>|) div \\<^bold>|t\\<^bold>|\n\ngoal (1 subgoal):\n 1. m =\n    (m * \\<^bold>|t\\<^bold>| + \\<^bold>|z\\<^bold>|) div \\<^bold>|t\\<^bold>|", "."], ["", "lemma get_pow_remainder: assumes \"z <p t\" shows \"z = drop ((\\<^bold>|t\\<^sup>@m\\<cdot>z\\<^bold>| div \\<^bold>|t\\<^bold>|)*\\<^bold>|t\\<^bold>|) (t\\<^sup>@m\\<cdot>z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z =\n    drop\n     (\\<^bold>|t \\<^sup>@ m \\<cdot> z\\<^bold>| div \\<^bold>|t\\<^bold>| *\n      \\<^bold>|t\\<^bold>|)\n     (t \\<^sup>@ m \\<cdot> z)", "using  drop_pref[of \"t\\<^sup>@m\" z]  pow_len[of t m] get_pow_exp[OF assms, of m]"], ["proof (prove)\nusing this:\n  drop \\<^bold>|t \\<^sup>@ m\\<^bold>| (t \\<^sup>@ m \\<cdot> z) = z\n  \\<^bold>|t \\<^sup>@ m\\<^bold>| = m * \\<^bold>|t\\<^bold>|\n  m = \\<^bold>|t \\<^sup>@ m \\<cdot> z\\<^bold>| div \\<^bold>|t\\<^bold>|\n\ngoal (1 subgoal):\n 1. z =\n    drop\n     (\\<^bold>|t \\<^sup>@ m \\<cdot> z\\<^bold>| div \\<^bold>|t\\<^bold>| *\n      \\<^bold>|t\\<^bold>|)\n     (t \\<^sup>@ m \\<cdot> z)", "by simp"], ["", "lemma pref_mod_power': assumes \"u \\<le>np w\\<^sup>@l\"\n  obtains k z where \"k < l\" and \"z \\<le>np w\" and \"w\\<^sup>@k\\<cdot>z = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k z.\n        \\<lbrakk>k < l; z \\<le>np w; w \\<^sup>@ k \\<cdot> z = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using pref_mod_list'[of u \"[w]\\<^sup>@l\", unfolded sing_pow_len concat_sing_pow, OF \\<open>u \\<le>np w\\<^sup>@l\\<close>] \n    sing_pow[of _ l w] concat_take_sing[of _ l w]\n    less_imp_le_nat[of _ l]"], ["proof (prove)\nusing this:\n  (\\<And>j r.\n      \\<lbrakk>j < l; r \\<le>np ([w] \\<^sup>@ l) ! j;\n       concat (take j ([w] \\<^sup>@ l)) \\<cdot> r = u\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n  ?i < l \\<Longrightarrow> ([w] \\<^sup>@ l) ! ?i = w\n  ?k \\<le> l \\<Longrightarrow>\n  concat (take ?k ([w] \\<^sup>@ l)) = w \\<^sup>@ ?k\n  ?m < l \\<Longrightarrow> ?m \\<le> l\n\ngoal (1 subgoal):\n 1. (\\<And>k z.\n        \\<lbrakk>k < l; z \\<le>np w; w \\<^sup>@ k \\<cdot> z = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["", "lemma pref_power: assumes \"t \\<noteq> \\<epsilon>\" and  \"u \\<le>p t\\<^sup>@k\" \n  shows \"\\<exists> m. t\\<^sup>@m \\<le>p u \\<and> u <p t\\<^sup>@m \\<cdot> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m. t \\<^sup>@ m \\<le>p u \\<and> u <p t \\<^sup>@ m \\<cdot> t", "proof (cases \"u = t\\<^sup>@k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. u = t \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>m. t \\<^sup>@ m \\<le>p u \\<and> u <p t \\<^sup>@ m \\<cdot> t\n 2. u \\<noteq> t \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>m. t \\<^sup>@ m \\<le>p u \\<and> u <p t \\<^sup>@ m \\<cdot> t", "show \"u = t \\<^sup>@ k \\<Longrightarrow> \\<exists>m. t \\<^sup>@ m \\<le>p u \\<and> u <p t \\<^sup>@ m \\<cdot> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u = t \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>m. t \\<^sup>@ m \\<le>p u \\<and> u <p t \\<^sup>@ m \\<cdot> t", "using \\<open>t \\<noteq> \\<epsilon>\\<close>"], ["proof (prove)\nusing this:\n  t \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. u = t \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>m. t \\<^sup>@ m \\<le>p u \\<and> u <p t \\<^sup>@ m \\<cdot> t", "by blast"], ["proof (state)\nthis:\n  u = t \\<^sup>@ k \\<Longrightarrow>\n  \\<exists>m. t \\<^sup>@ m \\<le>p u \\<and> u <p t \\<^sup>@ m \\<cdot> t\n\ngoal (1 subgoal):\n 1. u \\<noteq> t \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>m. t \\<^sup>@ m \\<le>p u \\<and> u <p t \\<^sup>@ m \\<cdot> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<noteq> t \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>m. t \\<^sup>@ m \\<le>p u \\<and> u <p t \\<^sup>@ m \\<cdot> t", "assume \"u \\<noteq> t \\<^sup>@ k\""], ["proof (state)\nthis:\n  u \\<noteq> t \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. u \\<noteq> t \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>m. t \\<^sup>@ m \\<le>p u \\<and> u <p t \\<^sup>@ m \\<cdot> t", "obtain m z where \"m < k\" \"z <p t\" \"t \\<^sup>@ m \\<cdot> z = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m z.\n        \\<lbrakk>m < k; z <p t; t \\<^sup>@ m \\<cdot> z = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using pref_mod_power[of u t k] \\<open>u \\<le>p t\\<^sup>@k\\<close>[unfolded prefix_order.dual_order.order_iff_strict] \\<open>u \\<noteq> t\\<^sup>@k\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>u <p t \\<^sup>@ k;\n   \\<And>ka z.\n      \\<lbrakk>ka < k; z <p t; t \\<^sup>@ ka \\<cdot> z = u\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  u <p t \\<^sup>@ k \\<or> t \\<^sup>@ k = u\n  u \\<noteq> t \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. (\\<And>m z.\n        \\<lbrakk>m < k; z <p t; t \\<^sup>@ m \\<cdot> z = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  m < k\n  z <p t\n  t \\<^sup>@ m \\<cdot> z = u\n\ngoal (1 subgoal):\n 1. u \\<noteq> t \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>m. t \\<^sup>@ m \\<le>p u \\<and> u <p t \\<^sup>@ m \\<cdot> t", "hence \"t \\<^sup>@ m \\<le>p u\" and \"u <p t \\<^sup>@ m \\<cdot> t\""], ["proof (prove)\nusing this:\n  m < k\n  z <p t\n  t \\<^sup>@ m \\<cdot> z = u\n\ngoal (1 subgoal):\n 1. t \\<^sup>@ m \\<le>p u &&& u <p t \\<^sup>@ m \\<cdot> t", "by auto"], ["proof (state)\nthis:\n  t \\<^sup>@ m \\<le>p u\n  u <p t \\<^sup>@ m \\<cdot> t\n\ngoal (1 subgoal):\n 1. u \\<noteq> t \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>m. t \\<^sup>@ m \\<le>p u \\<and> u <p t \\<^sup>@ m \\<cdot> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  t \\<^sup>@ m \\<le>p u\n  u <p t \\<^sup>@ m \\<cdot> t\n\ngoal (1 subgoal):\n 1. \\<exists>m. t \\<^sup>@ m \\<le>p u \\<and> u <p t \\<^sup>@ m \\<cdot> t", "by blast"], ["proof (state)\nthis:\n  \\<exists>m. t \\<^sup>@ m \\<le>p u \\<and> u <p t \\<^sup>@ m \\<cdot> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pref_powerE: assumes \"t \\<noteq> \\<epsilon>\" and  \"u \\<le>p t\\<^sup>@k\" \n  obtains m where \"t\\<^sup>@m \\<le>p u\" \"u <p t\\<^sup>@m \\<cdot> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>t \\<^sup>@ m \\<le>p u; u <p t \\<^sup>@ m \\<cdot> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms pref_power"], ["proof (prove)\nusing this:\n  t \\<noteq> \\<epsilon>\n  u \\<le>p t \\<^sup>@ k\n  \\<lbrakk>?t \\<noteq> \\<epsilon>; ?u \\<le>p ?t \\<^sup>@ ?k\\<rbrakk>\n  \\<Longrightarrow> \\<exists>m.\n                       ?t \\<^sup>@ m \\<le>p ?u \\<and>\n                       ?u <p ?t \\<^sup>@ m \\<cdot> ?t\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>t \\<^sup>@ m \\<le>p u; u <p t \\<^sup>@ m \\<cdot> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma pref_power': assumes \"u \\<noteq> \\<epsilon>\" and  \"u \\<le>p t\\<^sup>@k\" \n  shows \"\\<exists> m. t\\<^sup>@m <p u \\<and> u \\<le>p t\\<^sup>@m \\<cdot> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m. t \\<^sup>@ m <p u \\<and> u \\<le>p t \\<^sup>@ m \\<cdot> t", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>m. t \\<^sup>@ m <p u \\<and> u \\<le>p t \\<^sup>@ m \\<cdot> t", "obtain m z where \"m < k\" \"z \\<le>np t\" \"t \\<^sup>@ m \\<cdot> z = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m z.\n        \\<lbrakk>m < k; z \\<le>np t; t \\<^sup>@ m \\<cdot> z = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using pref_mod_power'[OF npI[OF \\<open>u \\<noteq> \\<epsilon>\\<close> \\<open>u \\<le>p t\\<^sup>@k\\<close>]]"], ["proof (prove)\nusing this:\n  (\\<And>ka z.\n      \\<lbrakk>ka < k; z \\<le>np t; t \\<^sup>@ ka \\<cdot> z = u\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>m z.\n        \\<lbrakk>m < k; z \\<le>np t; t \\<^sup>@ m \\<cdot> z = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  m < k\n  z \\<le>np t\n  t \\<^sup>@ m \\<cdot> z = u\n\ngoal (1 subgoal):\n 1. \\<exists>m. t \\<^sup>@ m <p u \\<and> u \\<le>p t \\<^sup>@ m \\<cdot> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  m < k\n  z \\<le>np t\n  t \\<^sup>@ m \\<cdot> z = u\n\ngoal (1 subgoal):\n 1. \\<exists>m. t \\<^sup>@ m <p u \\<and> u \\<le>p t \\<^sup>@ m \\<cdot> t", "by auto"], ["proof (state)\nthis:\n  \\<exists>m. t \\<^sup>@ m <p u \\<and> u \\<le>p t \\<^sup>@ m \\<cdot> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma suf_power: assumes \"t \\<noteq> \\<epsilon>\" and \"u \\<le>s t\\<^sup>@k\" shows \"\\<exists>m. t\\<^sup>@m \\<le>s u \\<and> u <s t \\<cdot> t\\<^sup>@m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m. t \\<^sup>@ m \\<le>s u \\<and> u <s t \\<cdot> t \\<^sup>@ m", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>m. t \\<^sup>@ m \\<le>s u \\<and> u <s t \\<cdot> t \\<^sup>@ m", "have \"rev u \\<le>p (rev t)\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev u \\<le>p rev t \\<^sup>@ k", "using \\<open>u \\<le>s t\\<^sup>@k\\<close>[unfolded suffix_to_prefix rev_pow]"], ["proof (prove)\nusing this:\n  rev u \\<le>p rev t \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. rev u \\<le>p rev t \\<^sup>@ k", "."], ["proof (state)\nthis:\n  rev u \\<le>p rev t \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. \\<exists>m. t \\<^sup>@ m \\<le>s u \\<and> u <s t \\<cdot> t \\<^sup>@ m", "from pref_power[OF _ this]"], ["proof (chain)\npicking this:\n  rev t \\<noteq> \\<epsilon> \\<Longrightarrow>\n  \\<exists>m.\n     rev t \\<^sup>@ m \\<le>p rev u \\<and>\n     rev u <p rev t \\<^sup>@ m \\<cdot> rev t", "obtain m where \"(rev t)\\<^sup>@m \\<le>p rev u\" and \"rev u <p (rev t)\\<^sup>@m \\<cdot> rev t\""], ["proof (prove)\nusing this:\n  rev t \\<noteq> \\<epsilon> \\<Longrightarrow>\n  \\<exists>m.\n     rev t \\<^sup>@ m \\<le>p rev u \\<and>\n     rev u <p rev t \\<^sup>@ m \\<cdot> rev t\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>rev t \\<^sup>@ m \\<le>p rev u;\n         rev u <p rev t \\<^sup>@ m \\<cdot> rev t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>t \\<noteq> \\<epsilon>\\<close>"], ["proof (prove)\nusing this:\n  rev t \\<noteq> \\<epsilon> \\<Longrightarrow>\n  \\<exists>m.\n     rev t \\<^sup>@ m \\<le>p rev u \\<and>\n     rev u <p rev t \\<^sup>@ m \\<cdot> rev t\n  t \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>rev t \\<^sup>@ m \\<le>p rev u;\n         rev u <p rev t \\<^sup>@ m \\<cdot> rev t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  rev t \\<^sup>@ m \\<le>p rev u\n  rev u <p rev t \\<^sup>@ m \\<cdot> rev t\n\ngoal (1 subgoal):\n 1. \\<exists>m. t \\<^sup>@ m \\<le>s u \\<and> u <s t \\<cdot> t \\<^sup>@ m", "have \"t\\<^sup>@m \\<le>s u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<^sup>@ m \\<le>s u", "using \\<open>(rev t)\\<^sup>@m \\<le>p rev u\\<close>[folded suffix_to_prefix rev_pow]"], ["proof (prove)\nusing this:\n  t \\<^sup>@ m \\<le>s u\n\ngoal (1 subgoal):\n 1. t \\<^sup>@ m \\<le>s u", "."], ["proof (state)\nthis:\n  t \\<^sup>@ m \\<le>s u\n\ngoal (1 subgoal):\n 1. \\<exists>m. t \\<^sup>@ m \\<le>s u \\<and> u <s t \\<cdot> t \\<^sup>@ m", "moreover"], ["proof (state)\nthis:\n  t \\<^sup>@ m \\<le>s u\n\ngoal (1 subgoal):\n 1. \\<exists>m. t \\<^sup>@ m \\<le>s u \\<and> u <s t \\<cdot> t \\<^sup>@ m", "have \"u <s t \\<cdot> t\\<^sup>@m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u <s t \\<cdot> t \\<^sup>@ m", "using sprefD1[OF \\<open>rev u <p (rev t)\\<^sup>@m \\<cdot> rev t\\<close>, folded rev_pow  rev_append suffix_to_prefix]\n      sprefD2[OF \\<open>rev u <p (rev t)\\<^sup>@m \\<cdot> rev t\\<close>, folded rev_pow  rev_append]"], ["proof (prove)\nusing this:\n  u \\<le>s t \\<cdot> t \\<^sup>@ m\n  rev u \\<noteq> rev (t \\<cdot> t \\<^sup>@ m)\n\ngoal (1 subgoal):\n 1. u <s t \\<cdot> t \\<^sup>@ m", "by blast"], ["proof (state)\nthis:\n  u <s t \\<cdot> t \\<^sup>@ m\n\ngoal (1 subgoal):\n 1. \\<exists>m. t \\<^sup>@ m \\<le>s u \\<and> u <s t \\<cdot> t \\<^sup>@ m", "ultimately"], ["proof (chain)\npicking this:\n  t \\<^sup>@ m \\<le>s u\n  u <s t \\<cdot> t \\<^sup>@ m", "show ?thesis"], ["proof (prove)\nusing this:\n  t \\<^sup>@ m \\<le>s u\n  u <s t \\<cdot> t \\<^sup>@ m\n\ngoal (1 subgoal):\n 1. \\<exists>m. t \\<^sup>@ m \\<le>s u \\<and> u <s t \\<cdot> t \\<^sup>@ m", "by blast"], ["proof (state)\nthis:\n  \\<exists>m. t \\<^sup>@ m \\<le>s u \\<and> u <s t \\<cdot> t \\<^sup>@ m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma suf_powerE: assumes \"t \\<noteq> \\<epsilon>\" and  \"u \\<le>s t\\<^sup>@k\" \n  obtains m where \"t\\<^sup>@m \\<le>s u\" \"u <s t \\<cdot> t\\<^sup>@m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>t \\<^sup>@ m \\<le>s u; u <s t \\<cdot> t \\<^sup>@ m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms suf_power"], ["proof (prove)\nusing this:\n  t \\<noteq> \\<epsilon>\n  u \\<le>s t \\<^sup>@ k\n  \\<lbrakk>?t \\<noteq> \\<epsilon>; ?u \\<le>s ?t \\<^sup>@ ?k\\<rbrakk>\n  \\<Longrightarrow> \\<exists>m.\n                       ?t \\<^sup>@ m \\<le>s ?u \\<and>\n                       ?u <s ?t \\<cdot> ?t \\<^sup>@ m\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>t \\<^sup>@ m \\<le>s u; u <s t \\<cdot> t \\<^sup>@ m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma del_emp_concat: \"concat us = concat (filter (\\<lambda>x. x \\<noteq> \\<epsilon>) us)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concat us = concat (filter (\\<lambda>x. x \\<noteq> \\<epsilon>) us)", "by (induct us) simp+"], ["", "lemma lists_drop_emp: \"us \\<in> lists C\\<^sub>+ \\<Longrightarrow> us \\<in> lists C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. us \\<in> lists C\\<^sub>+ \\<Longrightarrow> us \\<in> lists C", "by blast"], ["", "lemma lists_drop_emp': \"us \\<in> lists C \\<Longrightarrow> (filter (\\<lambda>x. x \\<noteq> \\<epsilon>) us) \\<in> lists C\\<^sub>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. us \\<in> lists C \\<Longrightarrow>\n    filter (\\<lambda>x. x \\<noteq> \\<epsilon>) us \\<in> lists C\\<^sub>+", "by (simp add: in_lists_conv_set)"], ["", "lemma pref_concat_pref: \"us \\<le>p ws \\<Longrightarrow> concat us \\<le>p concat ws\""], ["proof (prove)\ngoal (1 subgoal):\n 1. us \\<le>p ws \\<Longrightarrow> concat us \\<le>p concat ws", "by auto"], ["", "lemma le_take_is_prefix: assumes \"k \\<le> n\" shows \"take k ws \\<le>p take n ws\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take k ws \\<le>p take n ws", "using take_add[of k \"(n-k)\" ws, unfolded le_add_diff_inverse[OF \\<open>k \\<le> n\\<close>]]"], ["proof (prove)\nusing this:\n  take n ws = take k ws \\<cdot> take (n - k) (drop k ws)\n\ngoal (1 subgoal):\n 1. take k ws \\<le>p take n ws", "by force"], ["", "lemma take_pp_less: assumes \"take k ws <p take n ws\" shows \"k < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k < n", "using  conjunct2[OF sprefD[OF assms]] \n    leI[of k n, THEN[2] le_take_is_prefix[of n k ws, THEN[2] pref_antisym[of \"take k ws\" \"take n ws\"]], OF conjunct1[OF sprefD[OF assms]]]"], ["proof (prove)\nusing this:\n  take k ws \\<noteq> take n ws\n  \\<not> k < n \\<Longrightarrow> take k ws = take n ws\n\ngoal (1 subgoal):\n 1. k < n", "by blast"], ["", "lemma concat_pp_less: assumes \"concat (take k ws) <p concat (take n ws)\" shows \"k < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k < n", "using le_take_is_prefix[of n k ws, THEN pref_concat_pref] conjunct1[OF sprefD[OF assms]] \n    conjunct2[OF sprefD[OF assms]] pref_antisym[of \"concat(take k ws)\" \"concat(take n ws)\"]"], ["proof (prove)\nusing this:\n  n \\<le> k \\<Longrightarrow> concat (take n ws) \\<le>p concat (take k ws)\n  concat (take k ws) \\<le>p concat (take n ws)\n  concat (take k ws) \\<noteq> concat (take n ws)\n  \\<lbrakk>concat (take k ws) \\<le>p concat (take n ws);\n   concat (take n ws) \\<le>p concat (take k ws)\\<rbrakk>\n  \\<Longrightarrow> concat (take k ws) = concat (take n ws)\n\ngoal (1 subgoal):\n 1. k < n", "by fastforce"], ["", "section \\<open>Root\\<close>"], ["", "definition root :: \"'a list \\<Rightarrow> 'a list \\<Rightarrow> bool\" (\"_ \\<in> _*\" [51,51] 60 )\n  where  \"u \\<in> r* =  (\\<exists> k. r\\<^sup>@k = u)\""], ["", "notation (latex output) root (\"_ \\<in> _\\<^sup>*\")"], ["", "text\\<open>Empty word has all roots, including the empty root.\\<close>"], ["", "lemma \"\\<epsilon> \\<in> r*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<epsilon> \\<in> r*", "unfolding root_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. r \\<^sup>@ k = \\<epsilon>", "using power_0"], ["proof (prove)\nusing this:\n  ?a \\<^sup>@ 0 = \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>k. r \\<^sup>@ k = \\<epsilon>", "by blast"], ["", "lemma rootI: \"r\\<^sup>@k \\<in> r*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<^sup>@ k \\<in> r*", "using root_def"], ["proof (prove)\nusing this:\n  ?u \\<in> ?r* = (\\<exists>k. ?r \\<^sup>@ k = ?u)\n\ngoal (1 subgoal):\n 1. r \\<^sup>@ k \\<in> r*", "by auto"], ["", "lemma self_root: \"u \\<in> u*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> u*", "using rootI[of u \"Suc 0\"]"], ["proof (prove)\nusing this:\n  u \\<^sup>@ Suc 0 \\<in> u*\n\ngoal (1 subgoal):\n 1. u \\<in> u*", "by simp"], ["", "lemma rootE: assumes \"u \\<in> r*\" obtains k where \"r\\<^sup>@k = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k. r \\<^sup>@ k = u \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms root_def"], ["proof (prove)\nusing this:\n  u \\<in> r*\n  ?u \\<in> ?r* = (\\<exists>k. ?r \\<^sup>@ k = ?u)\n\ngoal (1 subgoal):\n 1. (\\<And>k. r \\<^sup>@ k = u \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "lemma empty_all_roots[simp]: \"\\<epsilon> \\<in> r*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<epsilon> \\<in> r*", "using  rootI[of r 0, unfolded pow_zero]"], ["proof (prove)\nusing this:\n  \\<epsilon> \\<in> r*\n\ngoal (1 subgoal):\n 1. \\<epsilon> \\<in> r*", "."], ["", "lemma take_root: \"k \\<noteq> 0 \\<Longrightarrow> r = take (length r) (r\\<^sup>@k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    r = take \\<^bold>|r\\<^bold>| (r \\<^sup>@ k)", "by (simp add: pow_eq_if_list)"], ["", "lemma root_nemp: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<in> r* \\<Longrightarrow> r \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<noteq> \\<epsilon>; u \\<in> r*\\<rbrakk>\n    \\<Longrightarrow> r \\<noteq> \\<epsilon>", "unfolding root_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<noteq> \\<epsilon>; \\<exists>k. r \\<^sup>@ k = u\\<rbrakk>\n    \\<Longrightarrow> r \\<noteq> \\<epsilon>", "using emp_pow"], ["proof (prove)\nusing this:\n  \\<epsilon> \\<^sup>@ ?n = \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<noteq> \\<epsilon>; \\<exists>k. r \\<^sup>@ k = u\\<rbrakk>\n    \\<Longrightarrow> r \\<noteq> \\<epsilon>", "by auto"], ["", "lemma root_shorter: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<in> r* \\<Longrightarrow> u \\<noteq> r \\<Longrightarrow> \\<^bold>|r\\<^bold>| < \\<^bold>|u\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<noteq> \\<epsilon>; u \\<in> r*; u \\<noteq> r\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>|r\\<^bold>| < \\<^bold>|u\\<^bold>|", "by (metis root_def leI take_all take_root pow_zero)"], ["", "lemma root_shorter_eq: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<in> r* \\<Longrightarrow> \\<^bold>|r\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<noteq> \\<epsilon>; u \\<in> r*\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>|r\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|", "using root_shorter"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<noteq> \\<epsilon>; ?u \\<in> ?r*; ?u \\<noteq> ?r\\<rbrakk>\n  \\<Longrightarrow> \\<^bold>|?r\\<^bold>| < \\<^bold>|?u\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<noteq> \\<epsilon>; u \\<in> r*\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>|r\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|", "by fastforce"], ["", "lemma root_trans[trans]: \"\\<lbrakk>v \\<in> u*; u \\<in> t*\\<rbrakk> \\<Longrightarrow> v \\<in> t*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v \\<in> u*; u \\<in> t*\\<rbrakk> \\<Longrightarrow> v \\<in> t*", "by (metis root_def pow_mult_list)"], ["", "lemma root_pow_root[trans]: \"v \\<in> u* \\<Longrightarrow> v\\<^sup>@n \\<in> u*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> u* \\<Longrightarrow> v \\<^sup>@ n \\<in> u*", "using rootI root_trans"], ["proof (prove)\nusing this:\n  ?r \\<^sup>@ ?k \\<in> ?r*\n  \\<lbrakk>?v \\<in> ?u*; ?u \\<in> ?t*\\<rbrakk>\n  \\<Longrightarrow> ?v \\<in> ?t*\n\ngoal (1 subgoal):\n 1. v \\<in> u* \\<Longrightarrow> v \\<^sup>@ n \\<in> u*", "by blast"], ["", "lemma root_len: \"u \\<in> q* \\<Longrightarrow> \\<exists>k. \\<^bold>|u\\<^bold>| = k*\\<^bold>|q\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> q* \\<Longrightarrow>\n    \\<exists>k. \\<^bold>|u\\<^bold>| = k * \\<^bold>|q\\<^bold>|", "unfolding root_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. q \\<^sup>@ k = u \\<Longrightarrow>\n    \\<exists>k. \\<^bold>|u\\<^bold>| = k * \\<^bold>|q\\<^bold>|", "using pow_len"], ["proof (prove)\nusing this:\n  \\<^bold>|?u \\<^sup>@ ?k\\<^bold>| = ?k * \\<^bold>|?u\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<exists>k. q \\<^sup>@ k = u \\<Longrightarrow>\n    \\<exists>k. \\<^bold>|u\\<^bold>| = k * \\<^bold>|q\\<^bold>|", "by auto"], ["", "lemma root_len_dvd: \"u \\<in> t* \\<Longrightarrow> \\<^bold>|t\\<^bold>| dvd \\<^bold>|u\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> t* \\<Longrightarrow> \\<^bold>|t\\<^bold>| dvd \\<^bold>|u\\<^bold>|", "using root_len root_def"], ["proof (prove)\nusing this:\n  ?u \\<in> ?q* \\<Longrightarrow>\n  \\<exists>k. \\<^bold>|?u\\<^bold>| = k * \\<^bold>|?q\\<^bold>|\n  ?u \\<in> ?r* = (\\<exists>k. ?r \\<^sup>@ k = ?u)\n\ngoal (1 subgoal):\n 1. u \\<in> t* \\<Longrightarrow> \\<^bold>|t\\<^bold>| dvd \\<^bold>|u\\<^bold>|", "by fastforce"], ["", "lemma common_root_len_gcd: \"u \\<in> t* \\<Longrightarrow> v \\<in> t* \\<Longrightarrow> \\<^bold>|t\\<^bold>| dvd ( gcd \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>| )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> t*; v \\<in> t*\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>|t\\<^bold>| dvd\n                      gcd \\<^bold>|u\\<^bold>| \\<^bold>|v\\<^bold>|", "by (simp add: root_len_dvd)"], ["", "lemma add_root[simp]: \"z \\<cdot> w \\<in> z* \\<longleftrightarrow> w \\<in> z*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> w \\<in> z* = w \\<in> z*", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. z \\<cdot> w \\<in> z* \\<Longrightarrow> w \\<in> z*\n 2. w \\<in> z* \\<Longrightarrow> z \\<cdot> w \\<in> z*", "assume \"w \\<in> z*\""], ["proof (state)\nthis:\n  w \\<in> z*\n\ngoal (2 subgoals):\n 1. z \\<cdot> w \\<in> z* \\<Longrightarrow> w \\<in> z*\n 2. w \\<in> z* \\<Longrightarrow> z \\<cdot> w \\<in> z*", "thus \"z \\<cdot> w \\<in> z*\""], ["proof (prove)\nusing this:\n  w \\<in> z*\n\ngoal (1 subgoal):\n 1. z \\<cdot> w \\<in> z*", "unfolding root_def"], ["proof (prove)\nusing this:\n  \\<exists>k. z \\<^sup>@ k = w\n\ngoal (1 subgoal):\n 1. \\<exists>k. z \\<^sup>@ k = z \\<cdot> w", "using pow_Suc_list"], ["proof (prove)\nusing this:\n  \\<exists>k. z \\<^sup>@ k = w\n  ?u \\<^sup>@ Suc ?n = ?u \\<cdot> ?u \\<^sup>@ ?n\n\ngoal (1 subgoal):\n 1. \\<exists>k. z \\<^sup>@ k = z \\<cdot> w", "by blast"], ["proof (state)\nthis:\n  z \\<cdot> w \\<in> z*\n\ngoal (1 subgoal):\n 1. z \\<cdot> w \\<in> z* \\<Longrightarrow> w \\<in> z*", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<cdot> w \\<in> z* \\<Longrightarrow> w \\<in> z*", "assume \"z \\<cdot> w \\<in> z*\""], ["proof (state)\nthis:\n  z \\<cdot> w \\<in> z*\n\ngoal (1 subgoal):\n 1. z \\<cdot> w \\<in> z* \\<Longrightarrow> w \\<in> z*", "thus \"w \\<in> z*\""], ["proof (prove)\nusing this:\n  z \\<cdot> w \\<in> z*\n\ngoal (1 subgoal):\n 1. w \\<in> z*", "unfolding root_def"], ["proof (prove)\nusing this:\n  \\<exists>k. z \\<^sup>@ k = z \\<cdot> w\n\ngoal (1 subgoal):\n 1. \\<exists>k. z \\<^sup>@ k = w", "using root_pref_cancel[of z 1 w, unfolded power_one_right]"], ["proof (prove)\nusing this:\n  \\<exists>k. z \\<^sup>@ k = z \\<cdot> w\n  z \\<cdot> w = z \\<^sup>@ ?k \\<Longrightarrow> w = z \\<^sup>@ (?k - 1)\n\ngoal (1 subgoal):\n 1. \\<exists>k. z \\<^sup>@ k = w", "by metis"], ["proof (state)\nthis:\n  w \\<in> z*\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma add_roots: \"w \\<in> z* \\<Longrightarrow> w' \\<in> z* \\<Longrightarrow> w \\<cdot> w' \\<in> z*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<in> z*; w' \\<in> z*\\<rbrakk>\n    \\<Longrightarrow> w \\<cdot> w' \\<in> z*", "unfolding root_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>k. z \\<^sup>@ k = w;\n     \\<exists>k. z \\<^sup>@ k = w'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k. z \\<^sup>@ k = w \\<cdot> w'", "using pow_add_list"], ["proof (prove)\nusing this:\n  ?x \\<^sup>@ (?a + ?b) = ?x \\<^sup>@ ?a \\<cdot> ?x \\<^sup>@ ?b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>k. z \\<^sup>@ k = w;\n     \\<exists>k. z \\<^sup>@ k = w'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k. z \\<^sup>@ k = w \\<cdot> w'", "by blast"], ["", "lemma concat_sing_list_pow: \"ws \\<in> lists {u} \\<Longrightarrow> \\<^bold>|ws\\<^bold>| = k \\<Longrightarrow> concat ws = u\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ws \\<in> lists {u}; \\<^bold>|ws\\<^bold>| = k\\<rbrakk>\n    \\<Longrightarrow> concat ws = u \\<^sup>@ k", "proof(induct k arbitrary: ws)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ws.\n       \\<lbrakk>ws \\<in> lists {u}; \\<^bold>|ws\\<^bold>| = 0\\<rbrakk>\n       \\<Longrightarrow> concat ws = u \\<^sup>@ 0\n 2. \\<And>k ws.\n       \\<lbrakk>\\<And>ws.\n                   \\<lbrakk>ws \\<in> lists {u};\n                    \\<^bold>|ws\\<^bold>| = k\\<rbrakk>\n                   \\<Longrightarrow> concat ws = u \\<^sup>@ k;\n        ws \\<in> lists {u}; \\<^bold>|ws\\<^bold>| = Suc k\\<rbrakk>\n       \\<Longrightarrow> concat ws = u \\<^sup>@ Suc k", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>?ws \\<in> lists {u}; \\<^bold>|?ws\\<^bold>| = k\\<rbrakk>\n  \\<Longrightarrow> concat ?ws = u \\<^sup>@ k\n  ws \\<in> lists {u}\n  \\<^bold>|ws\\<^bold>| = Suc k\n\ngoal (2 subgoals):\n 1. \\<And>ws.\n       \\<lbrakk>ws \\<in> lists {u}; \\<^bold>|ws\\<^bold>| = 0\\<rbrakk>\n       \\<Longrightarrow> concat ws = u \\<^sup>@ 0\n 2. \\<And>k ws.\n       \\<lbrakk>\\<And>ws.\n                   \\<lbrakk>ws \\<in> lists {u};\n                    \\<^bold>|ws\\<^bold>| = k\\<rbrakk>\n                   \\<Longrightarrow> concat ws = u \\<^sup>@ k;\n        ws \\<in> lists {u}; \\<^bold>|ws\\<^bold>| = Suc k\\<rbrakk>\n       \\<Longrightarrow> concat ws = u \\<^sup>@ Suc k", "have \"ws \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ws \\<noteq> \\<epsilon>", "using  list.size(3) nat.distinct(2)[of k, folded \\<open>\\<^bold>|ws\\<^bold>| = Suc k\\<close>]"], ["proof (prove)\nusing this:\n  \\<^bold>|\\<epsilon>\\<^bold>| = 0\n  \\<^bold>|ws\\<^bold>| \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ws \\<noteq> \\<epsilon>", "by blast"], ["proof (state)\nthis:\n  ws \\<noteq> \\<epsilon>\n\ngoal (2 subgoals):\n 1. \\<And>ws.\n       \\<lbrakk>ws \\<in> lists {u}; \\<^bold>|ws\\<^bold>| = 0\\<rbrakk>\n       \\<Longrightarrow> concat ws = u \\<^sup>@ 0\n 2. \\<And>k ws.\n       \\<lbrakk>\\<And>ws.\n                   \\<lbrakk>ws \\<in> lists {u};\n                    \\<^bold>|ws\\<^bold>| = k\\<rbrakk>\n                   \\<Longrightarrow> concat ws = u \\<^sup>@ k;\n        ws \\<in> lists {u}; \\<^bold>|ws\\<^bold>| = Suc k\\<rbrakk>\n       \\<Longrightarrow> concat ws = u \\<^sup>@ Suc k", "from hd_Cons_tl[OF this]"], ["proof (chain)\npicking this:\n  hd ws # tl ws = ws", "have \"ws = hd ws # tl ws\"  and \"\\<^bold>|tl ws\\<^bold>| = k\""], ["proof (prove)\nusing this:\n  hd ws # tl ws = ws\n\ngoal (1 subgoal):\n 1. ws = hd ws # tl ws &&& \\<^bold>|tl ws\\<^bold>| = k", "using \\<open> \\<^bold>|ws\\<^bold>| = Suc k\\<close>"], ["proof (prove)\nusing this:\n  hd ws # tl ws = ws\n  \\<^bold>|ws\\<^bold>| = Suc k\n\ngoal (1 subgoal):\n 1. ws = hd ws # tl ws &&& \\<^bold>|tl ws\\<^bold>| = k", "by simp+"], ["proof (state)\nthis:\n  ws = hd ws # tl ws\n  \\<^bold>|tl ws\\<^bold>| = k\n\ngoal (2 subgoals):\n 1. \\<And>ws.\n       \\<lbrakk>ws \\<in> lists {u}; \\<^bold>|ws\\<^bold>| = 0\\<rbrakk>\n       \\<Longrightarrow> concat ws = u \\<^sup>@ 0\n 2. \\<And>k ws.\n       \\<lbrakk>\\<And>ws.\n                   \\<lbrakk>ws \\<in> lists {u};\n                    \\<^bold>|ws\\<^bold>| = k\\<rbrakk>\n                   \\<Longrightarrow> concat ws = u \\<^sup>@ k;\n        ws \\<in> lists {u}; \\<^bold>|ws\\<^bold>| = Suc k\\<rbrakk>\n       \\<Longrightarrow> concat ws = u \\<^sup>@ Suc k", "then"], ["proof (chain)\npicking this:\n  ws = hd ws # tl ws\n  \\<^bold>|tl ws\\<^bold>| = k", "show ?case"], ["proof (prove)\nusing this:\n  ws = hd ws # tl ws\n  \\<^bold>|tl ws\\<^bold>| = k\n\ngoal (1 subgoal):\n 1. concat ws = u \\<^sup>@ Suc k", "unfolding  pow_Suc_list hd_concat_tl[OF \\<open>ws \\<noteq> \\<epsilon>\\<close>, symmetric]"], ["proof (prove)\nusing this:\n  ws = hd ws # tl ws\n  \\<^bold>|tl ws\\<^bold>| = k\n\ngoal (1 subgoal):\n 1. hd ws \\<cdot> concat (tl ws) = u \\<cdot> u \\<^sup>@ k", "using Suc.hyps[OF tl_lists[OF \\<open> ws \\<in> lists {u}\\<close>] \\<open>\\<^bold>|tl ws\\<^bold>| = k\\<close>]\n          Nitpick.size_list_simp(2) lists_hd[of \"ws\" \"{u}\"] \\<open>ws \\<in> lists{u}\\<close>"], ["proof (prove)\nusing this:\n  ws = hd ws # tl ws\n  \\<^bold>|tl ws\\<^bold>| = k\n  concat (tl ws) = u \\<^sup>@ k\n  \\<^bold>|?xs\\<^bold>| =\n  (if ?xs = \\<epsilon> then 0 else Suc \\<^bold>|tl ?xs\\<^bold>|)\n  \\<lbrakk>ws \\<noteq> \\<epsilon>; ws \\<in> lists {u}\\<rbrakk>\n  \\<Longrightarrow> hd ws \\<in> {u}\n  ws \\<in> lists {u}\n\ngoal (1 subgoal):\n 1. hd ws \\<cdot> concat (tl ws) = u \\<cdot> u \\<^sup>@ k", "by blast"], ["proof (state)\nthis:\n  concat ws = u \\<^sup>@ Suc k\n\ngoal (1 subgoal):\n 1. \\<And>ws.\n       \\<lbrakk>ws \\<in> lists {u}; \\<^bold>|ws\\<^bold>| = 0\\<rbrakk>\n       \\<Longrightarrow> concat ws = u \\<^sup>@ 0", "qed simp"], ["", "lemma concat_sing_list_pow': \"ws \\<in> lists{u} \\<Longrightarrow> concat ws = u\\<^sup>@\\<^bold>|ws\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ws \\<in> lists {u} \\<Longrightarrow>\n    concat ws = u \\<^sup>@ \\<^bold>|ws\\<^bold>|", "by (simp add: concat_sing_list_pow)"], ["", "lemma root_pref_cancel': assumes \"x\\<cdot>y \\<in> t*\" and  \"x \\<in> t*\" shows \"y \\<in> t*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> t*", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> t*", "obtain n m where \"t\\<^sup>@m = x \\<cdot> y\" and \"t\\<^sup>@n = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m n.\n        \\<lbrakk>t \\<^sup>@ m = x \\<cdot> y; t \\<^sup>@ n = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>x\\<cdot>y \\<in> t*\\<close>[unfolded root_def] \\<open>x \\<in> t*\\<close>[unfolded root_def]"], ["proof (prove)\nusing this:\n  \\<exists>k. t \\<^sup>@ k = x \\<cdot> y\n  \\<exists>k. t \\<^sup>@ k = x\n\ngoal (1 subgoal):\n 1. (\\<And>m n.\n        \\<lbrakk>t \\<^sup>@ m = x \\<cdot> y; t \\<^sup>@ n = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t \\<^sup>@ m = x \\<cdot> y\n  t \\<^sup>@ n = x\n\ngoal (1 subgoal):\n 1. y \\<in> t*", "from root_pref_cancel[of t n y m, unfolded this]"], ["proof (chain)\npicking this:\n  x \\<cdot> y = x \\<cdot> y \\<Longrightarrow> y = t \\<^sup>@ (m - n)", "show \"y \\<in> t*\""], ["proof (prove)\nusing this:\n  x \\<cdot> y = x \\<cdot> y \\<Longrightarrow> y = t \\<^sup>@ (m - n)\n\ngoal (1 subgoal):\n 1. y \\<in> t*", "using rootI"], ["proof (prove)\nusing this:\n  x \\<cdot> y = x \\<cdot> y \\<Longrightarrow> y = t \\<^sup>@ (m - n)\n  ?r \\<^sup>@ ?k \\<in> ?r*\n\ngoal (1 subgoal):\n 1. y \\<in> t*", "by auto"], ["proof (state)\nthis:\n  y \\<in> t*\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma root_rev_iff[reversal_rule]: \"rev u \\<in> rev t* \\<longleftrightarrow> u \\<in> t*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev u \\<in> rev t* = u \\<in> t*", "unfolding root_def[reversed]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>k. t \\<^sup>@ k = u) = u \\<in> t*", "using root_def"], ["proof (prove)\nusing this:\n  ?u \\<in> ?r* = (\\<exists>k. ?r \\<^sup>@ k = ?u)\n\ngoal (1 subgoal):\n 1. (\\<exists>k. t \\<^sup>@ k = u) = u \\<in> t*", ".."], ["", "section Commutation"], ["", "text\\<open>The solution of the easiest nontrivial word equation, @{term \"x \\<cdot> y = y \\<cdot> x\"}, is in fact already contained in List.thy as the fact @{thm comm_append_are_replicate[no_vars]}.\\<close>"], ["", "theorem comm:  \"x \\<cdot> y = y \\<cdot> x  \\<longleftrightarrow>  (\\<exists> t m k. x = t\\<^sup>@k \\<and> y = t\\<^sup>@m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> y = y \\<cdot> x) =\n    (\\<exists>t m k. x = t \\<^sup>@ k \\<and> y = t \\<^sup>@ m)", "using  comm_append_are_replicate[of x y, folded pow_is_concat_replicate] pow_comm"], ["proof (prove)\nusing this:\n  x \\<cdot> y = y \\<cdot> x \\<Longrightarrow>\n  \\<exists>m n zs. zs \\<^sup>@ m = x \\<and> zs \\<^sup>@ n = y\n  ?t \\<^sup>@ ?k \\<cdot> ?t \\<^sup>@ ?m =\n  ?t \\<^sup>@ ?m \\<cdot> ?t \\<^sup>@ ?k\n\ngoal (1 subgoal):\n 1. (x \\<cdot> y = y \\<cdot> x) =\n    (\\<exists>t m k. x = t \\<^sup>@ k \\<and> y = t \\<^sup>@ m)", "by auto"], ["", "corollary comm_root:  \"x \\<cdot> y = y \\<cdot> x   \\<longleftrightarrow>  (\\<exists> t. x \\<in> t* \\<and> y \\<in> t*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> y = y \\<cdot> x) = (\\<exists>t. x \\<in> t* \\<and> y \\<in> t*)", "unfolding root_def comm"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>t m k. x = t \\<^sup>@ k \\<and> y = t \\<^sup>@ m) =\n    (\\<exists>t.\n        (\\<exists>k. t \\<^sup>@ k = x) \\<and>\n        (\\<exists>k. t \\<^sup>@ k = y))", "by fast"], ["", "lemma commD[elim]:  \"x \\<in> t* \\<Longrightarrow> y \\<in> t* \\<Longrightarrow> x \\<cdot> y = y \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> t*; y \\<in> t*\\<rbrakk>\n    \\<Longrightarrow> x \\<cdot> y = y \\<cdot> x", "using comm_root"], ["proof (prove)\nusing this:\n  (?x \\<cdot> ?y = ?y \\<cdot> ?x) =\n  (\\<exists>t. ?x \\<in> t* \\<and> ?y \\<in> t*)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> t*; y \\<in> t*\\<rbrakk>\n    \\<Longrightarrow> x \\<cdot> y = y \\<cdot> x", "by auto"], ["", "lemma commE[elim]: assumes  \"x \\<cdot> y = y \\<cdot> x\"\n  obtains  t m k where \"x = t\\<^sup>@k\" and \"y = t\\<^sup>@m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t k m.\n        \\<lbrakk>x = t \\<^sup>@ k; y = t \\<^sup>@ m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms[unfolded comm]"], ["proof (prove)\nusing this:\n  \\<exists>t m k. x = t \\<^sup>@ k \\<and> y = t \\<^sup>@ m\n\ngoal (1 subgoal):\n 1. (\\<And>t k m.\n        \\<lbrakk>x = t \\<^sup>@ k; y = t \\<^sup>@ m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma comm_rootE: assumes  \"x \\<cdot> y = y \\<cdot> x\"\n  obtains  t where \"x \\<in>  t*\" and \"y \\<in> t*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>x \\<in> t*; y \\<in> t*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms[unfolded comm_root]"], ["proof (prove)\nusing this:\n  \\<exists>t. x \\<in> t* \\<and> y \\<in> t*\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>x \\<in> t*; y \\<in> t*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "section \\<open>Periods\\<close>"], ["", "text\\<open>Periodicity is probably the most studied property of words. It captures the fact that a word overlaps with itself.\nAnother possible point of view is that the periodic word is a prefix of an (infinite) power of some nonempty \nword, which can be called its period word. Both these points of view are expressed by the following definition.\n\\<close>"], ["", "subsection \"Periodic root\""], ["", "definition period_root :: \"'a list \\<Rightarrow> 'a list \\<Rightarrow> bool\" (\"_ \\<le>p _\\<^sup>\\<omega>\" [51,51] 60 )\n  where [simp]: \"period_root u r = (u \\<le>p r \\<cdot> u \\<and> r \\<noteq> \\<epsilon>)\""], ["", "lemma per_rootI[simp,intro]: \"u \\<le>p r \\<cdot> u \\<Longrightarrow> r \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<le>p r\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le>p r \\<cdot> u; r \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> u \\<le>p r\\<^sup>\\<omega>", "by simp"], ["", "lemma per_rootI': assumes \"u \\<le>p r\\<^sup>@k\" and  \"r \\<noteq> \\<epsilon>\" shows  \"u \\<le>p r\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p r\\<^sup>\\<omega>", "using per_rootI[OF  pref_prod_pref[OF pref_pow_ext'[OF \\<open>u \\<le>p r\\<^sup>@k\\<close>] \\<open>u \\<le>p r\\<^sup>@k\\<close>] \\<open>r\\<noteq>\\<epsilon>\\<close>]"], ["proof (prove)\nusing this:\n  u \\<le>p r\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. u \\<le>p r\\<^sup>\\<omega>", "."], ["", "lemma per_rootD[elim]: \"u \\<le>p r\\<^sup>\\<omega> \\<Longrightarrow> u \\<le>p r \\<cdot> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p r\\<^sup>\\<omega> \\<Longrightarrow> u \\<le>p r \\<cdot> u", "by simp"], ["", "lemma per_rootD': \"u \\<le>p r\\<^sup>\\<omega> \\<Longrightarrow> r \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p r\\<^sup>\\<omega> \\<Longrightarrow> r \\<noteq> \\<epsilon>", "by simp"], ["", "text \\<open>Empty word is not a periodic root but it has all nonempty periodic roots.\\<close>"], ["", "lemma emp_any_per: \"r \\<noteq> \\<epsilon> \\<Longrightarrow> (\\<epsilon> \\<le>p r\\<^sup>\\<omega> )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<noteq> \\<epsilon> \\<Longrightarrow>\n    \\<epsilon> \\<le>p r\\<^sup>\\<omega>", "by simp"], ["", "lemma emp_not_per: \"\\<not> (x \\<le>p \\<epsilon>\\<^sup>\\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> x \\<le>p \\<epsilon>\\<^sup>\\<omega>", "by simp"], ["", "text \\<open>Any nonempty word is its own periodic root.\\<close>"], ["", "lemma root_self: \"w \\<noteq> \\<epsilon> \\<Longrightarrow> w \\<le>p w\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<noteq> \\<epsilon> \\<Longrightarrow> w \\<le>p w\\<^sup>\\<omega>", "by simp"], ["", "text\\<open>\"Short roots are prefixes\"\\<close>"], ["", "lemma root_is_take: \"w \\<le>p r\\<^sup>\\<omega> \\<Longrightarrow> \\<^bold>|r\\<^bold>| \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow>  r \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le>p r\\<^sup>\\<omega>;\n     \\<^bold>|r\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> r \\<le>p w", "unfolding period_root_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le>p r \\<cdot> w \\<and> r \\<noteq> \\<epsilon>;\n     \\<^bold>|r\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> r \\<le>p w", "using pref_prod_long[of w r w]"], ["proof (prove)\nusing this:\n  \\<lbrakk>w \\<le>p r \\<cdot> w;\n   \\<^bold>|r\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> r \\<le>p w\n\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le>p r \\<cdot> w \\<and> r \\<noteq> \\<epsilon>;\n     \\<^bold>|r\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> r \\<le>p w", "by fastforce"], ["", "text \\<open>Periodic words are prefixes of the power of the root, which motivates the notation\\<close>"], ["", "lemma pref_pow_ext_take: assumes \"u \\<le>p r\\<^sup>@k\" shows \"u \\<le>p take \\<^bold>|r\\<^bold>| u \\<cdot> r\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p take \\<^bold>|r\\<^bold>| u \\<cdot> r \\<^sup>@ k", "proof (rule le_cases[of \"\\<^bold>|u\\<^bold>|\" \"\\<^bold>|r\\<^bold>|\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|r\\<^bold>| \\<Longrightarrow>\n    u \\<le>p take \\<^bold>|r\\<^bold>| u \\<cdot> r \\<^sup>@ k\n 2. \\<^bold>|r\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow>\n    u \\<le>p take \\<^bold>|r\\<^bold>| u \\<cdot> r \\<^sup>@ k", "assume \"\\<^bold>|r\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\""], ["proof (state)\nthis:\n  \\<^bold>|r\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\n\ngoal (2 subgoals):\n 1. \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|r\\<^bold>| \\<Longrightarrow>\n    u \\<le>p take \\<^bold>|r\\<^bold>| u \\<cdot> r \\<^sup>@ k\n 2. \\<^bold>|r\\<^bold>| \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow>\n    u \\<le>p take \\<^bold>|r\\<^bold>| u \\<cdot> r \\<^sup>@ k", "show \"u \\<le>p take \\<^bold>|r\\<^bold>| u \\<cdot> r \\<^sup>@ k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p take \\<^bold>|r\\<^bold>| u \\<cdot> r \\<^sup>@ k", "unfolding pref_take[OF pref_prod_long[OF pref_pow_ext'[OF \\<open>u \\<le>p r\\<^sup>@k\\<close>] \\<open>\\<^bold>|r\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\\<close>]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p r \\<cdot> r \\<^sup>@ k", "using pref_pow_ext'[OF \\<open>u \\<le>p r\\<^sup>@k\\<close>]"], ["proof (prove)\nusing this:\n  u \\<le>p r \\<cdot> r \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. u \\<le>p r \\<cdot> r \\<^sup>@ k", "."], ["proof (state)\nthis:\n  u \\<le>p take \\<^bold>|r\\<^bold>| u \\<cdot> r \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|r\\<^bold>| \\<Longrightarrow>\n    u \\<le>p take \\<^bold>|r\\<^bold>| u \\<cdot> r \\<^sup>@ k", "qed simp"], ["", "lemma pref_pow_take: assumes \"u \\<le>p r\\<^sup>@k\" shows \"u \\<le>p take \\<^bold>|r\\<^bold>| u \\<cdot> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p take \\<^bold>|r\\<^bold>| u \\<cdot> u", "using pref_prod_pref[of u \"take \\<^bold>|r\\<^bold>| u\" \"r\\<^sup>@k\", OF pref_pow_ext_take \\<open>u \\<le>p r\\<^sup>@k\\<close>, OF \\<open>u \\<le>p r\\<^sup>@k\\<close>]"], ["proof (prove)\nusing this:\n  u \\<le>p take \\<^bold>|r\\<^bold>| u \\<cdot> u\n\ngoal (1 subgoal):\n 1. u \\<le>p take \\<^bold>|r\\<^bold>| u \\<cdot> u", "."], ["", "lemma per_exp: assumes \"u \\<le>p r\\<^sup>\\<omega>\" shows \"u \\<le>p r\\<^sup>@k \\<cdot> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p r \\<^sup>@ k \\<cdot> u", "using  per_exp_pref[OF per_rootD[OF assms]]"], ["proof (prove)\nusing this:\n  u \\<le>p r \\<^sup>@ ?k \\<cdot> u\n\ngoal (1 subgoal):\n 1. u \\<le>p r \\<^sup>@ k \\<cdot> u", "."], ["", "lemma per_root_spref_powE: assumes \"u \\<le>p r\\<^sup>\\<omega>\" \n  obtains k where \"u <p r\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k. u <p r \\<^sup>@ k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using pref_prod_short'[OF per_exp[OF assms, of \"Suc \\<^bold>|u\\<^bold>|\"] long_power'[of r u, OF per_rootD'[OF assms]]]"], ["proof (prove)\nusing this:\n  u <p r \\<^sup>@ Suc \\<^bold>|u\\<^bold>|\n\ngoal (1 subgoal):\n 1. (\\<And>k. u <p r \\<^sup>@ k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma period_rootE [elim]: assumes \"u \\<le>p t\\<^sup>\\<omega>\" obtains n r where \"r <p t\" and \"t\\<^sup>@n \\<cdot> r = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r n.\n        \\<lbrakk>r <p t; t \\<^sup>@ n \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>r n.\n        \\<lbrakk>r <p t; t \\<^sup>@ n \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain m where \"u <p t\\<^sup>@m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m. u <p t \\<^sup>@ m \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>u \\<le>p t\\<^sup>\\<omega>\\<close>"], ["proof (prove)\nusing this:\n  u \\<le>p t\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (\\<And>m. u <p t \\<^sup>@ m \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using per_root_spref_powE"], ["proof (prove)\nusing this:\n  u \\<le>p t\\<^sup>\\<omega>\n  \\<lbrakk>?u \\<le>p ?r\\<^sup>\\<omega>;\n   \\<And>k. ?u <p ?r \\<^sup>@ k \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>m. u <p t \\<^sup>@ m \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u <p t \\<^sup>@ m\n\ngoal (1 subgoal):\n 1. (\\<And>r n.\n        \\<lbrakk>r <p t; t \\<^sup>@ n \\<cdot> r = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from pref_mod_power[OF this that, of \"\\<lambda> x y. y\" \"\\<lambda> x y. x\"]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>k z.\n              \\<lbrakk>k < m; z <p t; t \\<^sup>@ k \\<cdot> z = u\\<rbrakk>\n              \\<Longrightarrow> z <p t;\n   \\<And>k z.\n      \\<lbrakk>k < m; z <p t; t \\<^sup>@ k \\<cdot> z = u\\<rbrakk>\n      \\<Longrightarrow> t \\<^sup>@ k \\<cdot> z = u\\<rbrakk>\n  \\<Longrightarrow> thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>k z.\n              \\<lbrakk>k < m; z <p t; t \\<^sup>@ k \\<cdot> z = u\\<rbrakk>\n              \\<Longrightarrow> z <p t;\n   \\<And>k z.\n      \\<lbrakk>k < m; z <p t; t \\<^sup>@ k \\<cdot> z = u\\<rbrakk>\n      \\<Longrightarrow> t \\<^sup>@ k \\<cdot> z = u\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma per_add_exp: assumes \"u \\<le>p r\\<^sup>\\<omega>\" and \"m \\<noteq> 0\" shows \"u \\<le>p (r\\<^sup>@m)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p r \\<^sup>@ m\\<^sup>\\<omega>", "using per_exp_pref[OF per_rootD, OF \\<open>u \\<le>p r\\<^sup>\\<omega>\\<close>, of m]  per_rootD'[OF \\<open>u \\<le>p r\\<^sup>\\<omega>\\<close>, folded nonzero_pow_emp[OF \\<open>m \\<noteq> 0\\<close>, of r]]"], ["proof (prove)\nusing this:\n  u \\<le>p r \\<^sup>@ m \\<cdot> u\n  r \\<^sup>@ m \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. u \\<le>p r \\<^sup>@ m\\<^sup>\\<omega>", "unfolding period_root_def"], ["proof (prove)\nusing this:\n  u \\<le>p r \\<^sup>@ m \\<cdot> u\n  r \\<^sup>@ m \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. u \\<le>p r \\<^sup>@ m \\<cdot> u \\<and> r \\<^sup>@ m \\<noteq> \\<epsilon>", ".."], ["", "lemma per_pref_ex: assumes \"u \\<le>p r\\<^sup>\\<omega>\" \n  obtains n where \"u \\<le>p r\\<^sup>@n\" and \"n \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>u \\<le>p r \\<^sup>@ n; n \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using pcomp_shorter[OF ruler_pref[OF per_exp[OF \\<open>u \\<le>p r\\<^sup>\\<omega>\\<close>]]] long_pow_ex[of r \"\\<^bold>|u\\<^bold>|\", OF per_rootD'[OF \\<open>u \\<le>p r\\<^sup>\\<omega>\\<close>], of thesis]"], ["proof (prove)\nusing this:\n  \\<^bold>|u\\<^bold>|\n  \\<le> \\<^bold>|r \\<^sup>@ ?k2\\<^bold>| \\<Longrightarrow>\n  u \\<le>p r \\<^sup>@ ?k2\n  (\\<And>n.\n      \\<lbrakk>\\<^bold>|u\\<^bold>| \\<le> \\<^bold>|r \\<^sup>@ n\\<^bold>|;\n       n \\<noteq> 0\\<rbrakk>\n      \\<Longrightarrow> thesis) \\<Longrightarrow>\n  thesis\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>u \\<le>p r \\<^sup>@ n; n \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "theorem per_pref: \"x \\<le>p r\\<^sup>\\<omega> \\<longleftrightarrow> (\\<exists> k. x \\<le>p r\\<^sup>@k) \\<and> r \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>p r\\<^sup>\\<omega> =\n    ((\\<exists>k. x \\<le>p r \\<^sup>@ k) \\<and> r \\<noteq> \\<epsilon>)", "using per_pref_ex period_root_def pref_pow_ext' pref_prod_pref"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<le>p ?r\\<^sup>\\<omega>;\n   \\<And>n.\n      \\<lbrakk>?u \\<le>p ?r \\<^sup>@ n; n \\<noteq> 0\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  ?u \\<le>p ?r\\<^sup>\\<omega> =\n  (?u \\<le>p ?r \\<cdot> ?u \\<and> ?r \\<noteq> \\<epsilon>)\n  ?u \\<le>p ?r \\<^sup>@ ?k \\<Longrightarrow>\n  ?u \\<le>p ?r \\<cdot> ?r \\<^sup>@ ?k\n  \\<lbrakk>?u \\<le>p ?z \\<cdot> ?w; ?u \\<le>p ?w\\<rbrakk>\n  \\<Longrightarrow> ?u \\<le>p ?z \\<cdot> ?u\n\ngoal (1 subgoal):\n 1. x \\<le>p r\\<^sup>\\<omega> =\n    ((\\<exists>k. x \\<le>p r \\<^sup>@ k) \\<and> r \\<noteq> \\<epsilon>)", "by metis"], ["", "lemma pref_pow_conv: \"(\\<exists> k. x \\<le>p r\\<^sup>@k) \\<longleftrightarrow> (\\<exists> k z. r\\<^sup>@k\\<cdot>z = x \\<and> z \\<le>p r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>k. x \\<le>p r \\<^sup>@ k) =\n    (\\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>k. x \\<le>p r \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r\n 2. \\<exists>k z.\n       r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r \\<Longrightarrow>\n    \\<exists>k. x \\<le>p r \\<^sup>@ k", "assume \"\\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r\""], ["proof (state)\nthis:\n  \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r\n\ngoal (2 subgoals):\n 1. \\<exists>k. x \\<le>p r \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r\n 2. \\<exists>k z.\n       r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r \\<Longrightarrow>\n    \\<exists>k. x \\<le>p r \\<^sup>@ k", "then"], ["proof (chain)\npicking this:\n  \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "obtain k z where \"r\\<^sup>@k \\<cdot> z = x\" and \"z \\<le>p r\""], ["proof (prove)\nusing this:\n  \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r\n\ngoal (1 subgoal):\n 1. (\\<And>k z.\n        \\<lbrakk>r \\<^sup>@ k \\<cdot> z = x; z \\<le>p r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  r \\<^sup>@ k \\<cdot> z = x\n  z \\<le>p r\n\ngoal (2 subgoals):\n 1. \\<exists>k. x \\<le>p r \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r\n 2. \\<exists>k z.\n       r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r \\<Longrightarrow>\n    \\<exists>k. x \\<le>p r \\<^sup>@ k", "thus \"\\<exists> k. x \\<le>p r\\<^sup>@k\""], ["proof (prove)\nusing this:\n  r \\<^sup>@ k \\<cdot> z = x\n  z \\<le>p r\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<le>p r \\<^sup>@ k", "using pref_cancel'[OF \\<open>z \\<le>p r\\<close>, of \"r\\<^sup>@k\", unfolded \\<open>r\\<^sup>@k \\<cdot> z = x\\<close>, folded pow_Suc2_list]"], ["proof (prove)\nusing this:\n  r \\<^sup>@ k \\<cdot> z = x\n  z \\<le>p r\n  x \\<le>p r \\<^sup>@ Suc k\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<le>p r \\<^sup>@ k", "by fast"], ["proof (state)\nthis:\n  \\<exists>k. x \\<le>p r \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<le>p r \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<le>p r \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "assume \"\\<exists> k. x \\<le>p r\\<^sup>@k\""], ["proof (state)\nthis:\n  \\<exists>k. x \\<le>p r \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<le>p r \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "then"], ["proof (chain)\npicking this:\n  \\<exists>k. x \\<le>p r \\<^sup>@ k", "obtain k where \"x \\<le>p r\\<^sup>@k\""], ["proof (prove)\nusing this:\n  \\<exists>k. x \\<le>p r \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        x \\<le>p r \\<^sup>@ k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x \\<le>p r \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<le>p r \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "{"], ["proof (state)\nthis:\n  x \\<le>p r \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<le>p r \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "assume \"r = \\<epsilon>\""], ["proof (state)\nthis:\n  r = \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<le>p r \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "have \"x = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = \\<epsilon>", "using pref_emp[OF \\<open>x \\<le>p r \\<^sup>@ k\\<close>[unfolded \\<open>r = \\<epsilon>\\<close> emp_pow]]"], ["proof (prove)\nusing this:\n  x = \\<epsilon>\n\ngoal (1 subgoal):\n 1. x = \\<epsilon>", "."], ["proof (state)\nthis:\n  x = \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<le>p r \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "hence \"\\<exists> k z. r\\<^sup>@k\\<cdot>z = x \\<and> z \\<le>p r\""], ["proof (prove)\nusing this:\n  x = \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "using \\<open>r = \\<epsilon>\\<close> emp_pow"], ["proof (prove)\nusing this:\n  x = \\<epsilon>\n  r = \\<epsilon>\n  \\<epsilon> \\<^sup>@ ?n = \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "by auto"], ["proof (state)\nthis:\n  \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<le>p r \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "}"], ["proof (state)\nthis:\n  r = \\<epsilon> \\<Longrightarrow>\n  \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<le>p r \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "moreover"], ["proof (state)\nthis:\n  r = \\<epsilon> \\<Longrightarrow>\n  \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<le>p r \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "{"], ["proof (state)\nthis:\n  r = \\<epsilon> \\<Longrightarrow>\n  \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<le>p r \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "assume \"r \\<noteq> \\<epsilon>\""], ["proof (state)\nthis:\n  r \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<le>p r \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "have \"x <p r\\<^sup>@(Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x <p r \\<^sup>@ Suc k", "using pref_ext_nemp[OF \\<open>x \\<le>p r\\<^sup>@k\\<close> \\<open>r \\<noteq> \\<epsilon>\\<close>, folded pow_Suc2_list]"], ["proof (prove)\nusing this:\n  x <p r \\<^sup>@ Suc k\n\ngoal (1 subgoal):\n 1. x <p r \\<^sup>@ Suc k", "."], ["proof (state)\nthis:\n  x <p r \\<^sup>@ Suc k\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<le>p r \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "then"], ["proof (chain)\npicking this:\n  x <p r \\<^sup>@ Suc k", "have \"\\<exists> k z. r\\<^sup>@k\\<cdot>z = x \\<and> z \\<le>p r\""], ["proof (prove)\nusing this:\n  x <p r \\<^sup>@ Suc k\n\ngoal (1 subgoal):\n 1. \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "using pref_mod_power[OF pref_ext_nemp[OF \\<open>x \\<le>p r\\<^sup>@k\\<close> \\<open>r \\<noteq> \\<epsilon>\\<close>, folded pow_Suc2_list], of \"\\<exists> k z. r\\<^sup>@k\\<cdot>z = x \\<and> z \\<le>p r\"]"], ["proof (prove)\nusing this:\n  x <p r \\<^sup>@ Suc k\n  (\\<And>ka z.\n      \\<lbrakk>ka < Suc k; z <p r; r \\<^sup>@ ka \\<cdot> z = x\\<rbrakk>\n      \\<Longrightarrow> \\<exists>k z.\n                           r \\<^sup>@ k \\<cdot> z = x \\<and>\n                           z \\<le>p r) \\<Longrightarrow>\n  \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r\n\ngoal (1 subgoal):\n 1. \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "by auto"], ["proof (state)\nthis:\n  \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<le>p r \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "}"], ["proof (state)\nthis:\n  r \\<noteq> \\<epsilon> \\<Longrightarrow>\n  \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<le>p r \\<^sup>@ k \\<Longrightarrow>\n    \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "ultimately"], ["proof (chain)\npicking this:\n  r = \\<epsilon> \\<Longrightarrow>\n  \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r\n  r \\<noteq> \\<epsilon> \\<Longrightarrow>\n  \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "show \"\\<exists> k z. r\\<^sup>@k\\<cdot>z = x \\<and> z \\<le>p r\""], ["proof (prove)\nusing this:\n  r = \\<epsilon> \\<Longrightarrow>\n  \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r\n  r \\<noteq> \\<epsilon> \\<Longrightarrow>\n  \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r\n\ngoal (1 subgoal):\n 1. \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r", "by blast"], ["proof (state)\nthis:\n  \\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma per_eq: \"x \\<le>p r\\<^sup>\\<omega> \\<longleftrightarrow> (\\<exists> k z. r\\<^sup>@k\\<cdot>z = x \\<and> z \\<le>p r) \\<and> r \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>p r\\<^sup>\\<omega> =\n    ((\\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r) \\<and>\n     r \\<noteq> \\<epsilon>)", "using per_pref[unfolded pref_pow_conv]"], ["proof (prove)\nusing this:\n  ?x \\<le>p ?r\\<^sup>\\<omega> =\n  ((\\<exists>k z. ?r \\<^sup>@ k \\<cdot> z = ?x \\<and> z \\<le>p ?r) \\<and>\n   ?r \\<noteq> \\<epsilon>)\n\ngoal (1 subgoal):\n 1. x \\<le>p r\\<^sup>\\<omega> =\n    ((\\<exists>k z. r \\<^sup>@ k \\<cdot> z = x \\<and> z \\<le>p r) \\<and>\n     r \\<noteq> \\<epsilon>)", "."], ["", "text\\<open>The previous theorem allows to prove some basic relations between powers, periods and commutation\\<close>"], ["", "lemma per_drop_exp: \"u \\<le>p (r\\<^sup>@m)\\<^sup>\\<omega>  \\<Longrightarrow> u \\<le>p r\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p r \\<^sup>@ m\\<^sup>\\<omega> \\<Longrightarrow>\n    u \\<le>p r\\<^sup>\\<omega>", "using per_pref[of u \"r\\<^sup>@m\"] pow_mult_list[of r m, symmetric]"], ["proof (prove)\nusing this:\n  u \\<le>p r \\<^sup>@ m\\<^sup>\\<omega> =\n  ((\\<exists>k. u \\<le>p (r \\<^sup>@ m) \\<^sup>@ k) \\<and>\n   r \\<^sup>@ m \\<noteq> \\<epsilon>)\n  (r \\<^sup>@ m) \\<^sup>@ ?n = r \\<^sup>@ (m * ?n)\n\ngoal (1 subgoal):\n 1. u \\<le>p r \\<^sup>@ m\\<^sup>\\<omega> \\<Longrightarrow>\n    u \\<le>p r\\<^sup>\\<omega>", "unfolding per_pref[of u r]"], ["proof (prove)\nusing this:\n  u \\<le>p r \\<^sup>@ m\\<^sup>\\<omega> =\n  ((\\<exists>k. u \\<le>p (r \\<^sup>@ m) \\<^sup>@ k) \\<and>\n   r \\<^sup>@ m \\<noteq> \\<epsilon>)\n  (r \\<^sup>@ m) \\<^sup>@ ?n = r \\<^sup>@ (m * ?n)\n\ngoal (1 subgoal):\n 1. u \\<le>p r \\<^sup>@ m\\<^sup>\\<omega> \\<Longrightarrow>\n    (\\<exists>k. u \\<le>p r \\<^sup>@ k) \\<and> r \\<noteq> \\<epsilon>", "using nemp_pow'[of r m]"], ["proof (prove)\nusing this:\n  u \\<le>p r \\<^sup>@ m\\<^sup>\\<omega> =\n  ((\\<exists>k. u \\<le>p (r \\<^sup>@ m) \\<^sup>@ k) \\<and>\n   r \\<^sup>@ m \\<noteq> \\<epsilon>)\n  (r \\<^sup>@ m) \\<^sup>@ ?n = r \\<^sup>@ (m * ?n)\n  r \\<^sup>@ m \\<noteq> \\<epsilon> \\<Longrightarrow> r \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. u \\<le>p r \\<^sup>@ m\\<^sup>\\<omega> \\<Longrightarrow>\n    (\\<exists>k. u \\<le>p r \\<^sup>@ k) \\<and> r \\<noteq> \\<epsilon>", "by auto"], ["", "lemma per_drop_exp': \"i \\<noteq> 0 \\<Longrightarrow> p \\<le>p e\\<^sup>@i \\<cdot> p \\<Longrightarrow>  p \\<le>p  e \\<cdot> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> 0; p \\<le>p e \\<^sup>@ i \\<cdot> p\\<rbrakk>\n    \\<Longrightarrow> p \\<le>p e \\<cdot> p", "by (metis period_root_def eq_pow_exp per_drop_exp pow_zero)"], ["", "lemma per_drop_exp_rev: assumes \"i \\<noteq> 0\" \"p \\<le>s p \\<cdot> e\\<^sup>@i\" shows \"p \\<le>s p \\<cdot> e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<le>s p \\<cdot> e", "using per_drop_exp'[OF \\<open>i \\<noteq> 0\\<close> \\<open>p \\<le>s p \\<cdot> e\\<^sup>@i\\<close>[unfolded suffix_to_prefix rev_append rev_pow], folded rev_append suffix_to_prefix]"], ["proof (prove)\nusing this:\n  p \\<le>s p \\<cdot> e\n\ngoal (1 subgoal):\n 1. p \\<le>s p \\<cdot> e", "."], ["", "corollary comm_drop_exp: assumes \"m \\<noteq> 0\" and \"u \\<cdot> r\\<^sup>@m = r\\<^sup>@m \\<cdot> u\" shows \"r \\<cdot> u = u \\<cdot> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<cdot> u = u \\<cdot> r", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<cdot> u = u \\<cdot> r", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<cdot> u = u \\<cdot> r", "assume \"r \\<noteq> \\<epsilon>\" \"u \\<noteq> \\<epsilon>\""], ["proof (state)\nthis:\n  r \\<noteq> \\<epsilon>\n  u \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. r \\<cdot> u = u \\<cdot> r", "hence \"u\\<cdot>r \\<le>p u\\<cdot>r\\<^sup>@m\""], ["proof (prove)\nusing this:\n  r \\<noteq> \\<epsilon>\n  u \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. u \\<cdot> r \\<le>p u \\<cdot> r \\<^sup>@ m", "using pop_pow_one \\<open>m \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  r \\<noteq> \\<epsilon>\n  u \\<noteq> \\<epsilon>\n  ?m \\<noteq> 0 \\<Longrightarrow>\n  ?r \\<^sup>@ ?m = ?r \\<cdot> ?r \\<^sup>@ (?m - 1)\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. u \\<cdot> r \\<le>p u \\<cdot> r \\<^sup>@ m", "by (simp add: pop_pow_one)"], ["proof (state)\nthis:\n  u \\<cdot> r \\<le>p u \\<cdot> r \\<^sup>@ m\n\ngoal (1 subgoal):\n 1. r \\<cdot> u = u \\<cdot> r", "have \"u\\<cdot>r \\<le>p r\\<^sup>@m\\<cdot>(u\\<cdot>r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> r \\<le>p r \\<^sup>@ m \\<cdot> u \\<cdot> r", "using pref_ext[of \"u \\<cdot> r\" \"r\\<^sup>@m \\<cdot> u\" r, unfolded append_assoc[of \"r\\<^sup>@m\" u r], OF  \\<open>u\\<cdot>r \\<le>p u\\<cdot>r\\<^sup>@m\\<close>[unfolded \\<open>u \\<cdot> r\\<^sup>@m = r\\<^sup>@m \\<cdot> u\\<close>]]"], ["proof (prove)\nusing this:\n  u \\<cdot> r \\<le>p r \\<^sup>@ m \\<cdot> u \\<cdot> r\n\ngoal (1 subgoal):\n 1. u \\<cdot> r \\<le>p r \\<^sup>@ m \\<cdot> u \\<cdot> r", "."], ["proof (state)\nthis:\n  u \\<cdot> r \\<le>p r \\<^sup>@ m \\<cdot> u \\<cdot> r\n\ngoal (1 subgoal):\n 1. r \\<cdot> u = u \\<cdot> r", "hence \"u\\<cdot>r \\<le>p r\\<cdot>(u\\<cdot>r)\""], ["proof (prove)\nusing this:\n  u \\<cdot> r \\<le>p r \\<^sup>@ m \\<cdot> u \\<cdot> r\n\ngoal (1 subgoal):\n 1. u \\<cdot> r \\<le>p r \\<cdot> u \\<cdot> r", "using per_drop_exp[of \"u\\<cdot>r\" r m] \\<open>m \\<noteq> 0\\<close> per_drop_exp'"], ["proof (prove)\nusing this:\n  u \\<cdot> r \\<le>p r \\<^sup>@ m \\<cdot> u \\<cdot> r\n  u \\<cdot> r \\<le>p r \\<^sup>@ m\\<^sup>\\<omega> \\<Longrightarrow>\n  u \\<cdot> r \\<le>p r\\<^sup>\\<omega>\n  m \\<noteq> 0\n  \\<lbrakk>?i \\<noteq> 0; ?p \\<le>p ?e \\<^sup>@ ?i \\<cdot> ?p\\<rbrakk>\n  \\<Longrightarrow> ?p \\<le>p ?e \\<cdot> ?p\n\ngoal (1 subgoal):\n 1. u \\<cdot> r \\<le>p r \\<cdot> u \\<cdot> r", "by blast"], ["proof (state)\nthis:\n  u \\<cdot> r \\<le>p r \\<cdot> u \\<cdot> r\n\ngoal (1 subgoal):\n 1. r \\<cdot> u = u \\<cdot> r", "from comm_ruler[OF self_pref[of \"r \\<cdot> u\"], of \"r \\<cdot> u \\<cdot> r\", OF this]"], ["proof (chain)\npicking this:\n  r \\<cdot> u \\<bowtie> r \\<cdot> u \\<cdot> r \\<Longrightarrow>\n  r \\<cdot> u = u \\<cdot> r", "have \"r \\<cdot> u = u \\<cdot> r\""], ["proof (prove)\nusing this:\n  r \\<cdot> u \\<bowtie> r \\<cdot> u \\<cdot> r \\<Longrightarrow>\n  r \\<cdot> u = u \\<cdot> r\n\ngoal (1 subgoal):\n 1. r \\<cdot> u = u \\<cdot> r", "by auto"], ["proof (state)\nthis:\n  r \\<cdot> u = u \\<cdot> r\n\ngoal (1 subgoal):\n 1. r \\<cdot> u = u \\<cdot> r", "}"], ["proof (state)\nthis:\n  \\<lbrakk>r \\<noteq> \\<epsilon>; u \\<noteq> \\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> r \\<cdot> u = u \\<cdot> r\n\ngoal (1 subgoal):\n 1. r \\<cdot> u = u \\<cdot> r", "thus \"r \\<cdot> u = u \\<cdot> r\""], ["proof (prove)\nusing this:\n  \\<lbrakk>r \\<noteq> \\<epsilon>; u \\<noteq> \\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> r \\<cdot> u = u \\<cdot> r\n\ngoal (1 subgoal):\n 1. r \\<cdot> u = u \\<cdot> r", "by fastforce"], ["proof (state)\nthis:\n  r \\<cdot> u = u \\<cdot> r\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary pow_comm_comm: assumes \"x\\<^sup>@j = y\\<^sup>@k\" and \"j \\<noteq> 0\" shows \"x\\<cdot>y = y\\<cdot>x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> y = y \\<cdot> x", "proof(cases \"k = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> x \\<cdot> y = y \\<cdot> x\n 2. k \\<noteq> 0 \\<Longrightarrow> x \\<cdot> y = y \\<cdot> x", "assume \"k = 0\""], ["proof (state)\nthis:\n  k = 0\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> x \\<cdot> y = y \\<cdot> x\n 2. k \\<noteq> 0 \\<Longrightarrow> x \\<cdot> y = y \\<cdot> x", "from \\<open>x\\<^sup>@j = y\\<^sup>@k\\<close>[unfolded zero_exp[OF this, of y], unfolded  nonzero_pow_emp[OF \\<open>j \\<noteq> 0\\<close>]]"], ["proof (chain)\npicking this:\n  x = \\<epsilon>", "show \"x \\<cdot> y = y \\<cdot> x\""], ["proof (prove)\nusing this:\n  x = \\<epsilon>\n\ngoal (1 subgoal):\n 1. x \\<cdot> y = y \\<cdot> x", "by simp"], ["proof (state)\nthis:\n  x \\<cdot> y = y \\<cdot> x\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> x \\<cdot> y = y \\<cdot> x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> x \\<cdot> y = y \\<cdot> x", "assume \"k \\<noteq> 0\""], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> x \\<cdot> y = y \\<cdot> x", "show \"x \\<cdot> y = y \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> y = y \\<cdot> x", "using comm_drop_exp[of j y x, OF \\<open>j \\<noteq> 0\\<close>, OF\n        comm_drop_exp[of k \"x\\<^sup>@j\" y, OF \\<open>k \\<noteq> 0\\<close> , unfolded \\<open>x\\<^sup>@j = y\\<^sup>@k\\<close>, OF refl, folded \\<open>x\\<^sup>@j = y\\<^sup>@k\\<close>]]"], ["proof (prove)\nusing this:\n  x \\<cdot> y = y \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<cdot> y = y \\<cdot> x", "."], ["proof (state)\nthis:\n  x \\<cdot> y = y \\<cdot> x\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary comm_pow_roots: assumes \"m \\<noteq> 0\" \"k \\<noteq> 0\" \n  shows \"u\\<^sup>@m \\<cdot> v\\<^sup>@k = v\\<^sup>@k \\<cdot> u\\<^sup>@m \\<longleftrightarrow> u \\<cdot> v = v \\<cdot> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<^sup>@ m \\<cdot> v \\<^sup>@ k =\n     v \\<^sup>@ k \\<cdot> u \\<^sup>@ m) =\n    (u \\<cdot> v = v \\<cdot> u)", "using comm_drop_exp[OF \\<open>k \\<noteq> 0\\<close>, of \"u\\<^sup>@m\" v, THEN comm_drop_exp[OF \\<open>m \\<noteq> 0\\<close>, of v u]]\n        comm_add_exps[of u v m k]"], ["proof (prove)\nusing this:\n  u \\<^sup>@ m \\<cdot> v \\<^sup>@ k =\n  v \\<^sup>@ k \\<cdot> u \\<^sup>@ m \\<Longrightarrow>\n  u \\<cdot> v = v \\<cdot> u\n  u \\<cdot> v = v \\<cdot> u \\<Longrightarrow>\n  u \\<^sup>@ m \\<cdot> v \\<^sup>@ k = v \\<^sup>@ k \\<cdot> u \\<^sup>@ m\n\ngoal (1 subgoal):\n 1. (u \\<^sup>@ m \\<cdot> v \\<^sup>@ k =\n     v \\<^sup>@ k \\<cdot> u \\<^sup>@ m) =\n    (u \\<cdot> v = v \\<cdot> u)", "by blast"], ["", "lemma pow_comm_comm': assumes comm: \"u\\<^sup>@(Suc k) = v\\<^sup>@(Suc l)\" shows \"u \\<cdot> v = v \\<cdot> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> v = v \\<cdot> u", "using comm pow_comm_comm"], ["proof (prove)\nusing this:\n  u \\<^sup>@ Suc k = v \\<^sup>@ Suc l\n  \\<lbrakk>?x \\<^sup>@ ?j = ?y \\<^sup>@ ?k; ?j \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> ?x \\<cdot> ?y = ?y \\<cdot> ?x\n\ngoal (1 subgoal):\n 1. u \\<cdot> v = v \\<cdot> u", "by blast"], ["", "lemma comm_trans: assumes uv: \"u\\<cdot>v =  v\\<cdot>u\" and vw: \"w\\<cdot>v = v\\<cdot>w\" and nemp: \"v \\<noteq> \\<epsilon>\" shows \"u \\<cdot> w = w \\<cdot> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> w = w \\<cdot> u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<cdot> w = w \\<cdot> u", "consider (u_emp) \"u = \\<epsilon>\" | (w_emp) \"w = \\<epsilon>\" | (nemp') \"u \\<noteq> \\<epsilon>\" and \"w \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u = \\<epsilon> \\<Longrightarrow> thesis;\n     w = \\<epsilon> \\<Longrightarrow> thesis;\n     \\<lbrakk>u \\<noteq> \\<epsilon>; w \\<noteq> \\<epsilon>\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>u = \\<epsilon> \\<Longrightarrow> ?thesis;\n   w = \\<epsilon> \\<Longrightarrow> ?thesis;\n   \\<lbrakk>u \\<noteq> \\<epsilon>; w \\<noteq> \\<epsilon>\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. u \\<cdot> w = w \\<cdot> u", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>u = \\<epsilon> \\<Longrightarrow> ?thesis;\n   w = \\<epsilon> \\<Longrightarrow> ?thesis;\n   \\<lbrakk>u \\<noteq> \\<epsilon>; w \\<noteq> \\<epsilon>\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>u = \\<epsilon> \\<Longrightarrow> ?thesis;\n   w = \\<epsilon> \\<Longrightarrow> ?thesis;\n   \\<lbrakk>u \\<noteq> \\<epsilon>; w \\<noteq> \\<epsilon>\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. u \\<cdot> w = w \\<cdot> u", "proof (cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. u = \\<epsilon> \\<Longrightarrow> u \\<cdot> w = w \\<cdot> u\n 2. w = \\<epsilon> \\<Longrightarrow> u \\<cdot> w = w \\<cdot> u\n 3. \\<lbrakk>u \\<noteq> \\<epsilon>; w \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> u \\<cdot> w = w \\<cdot> u", "case nemp'"], ["proof (state)\nthis:\n  u \\<noteq> \\<epsilon>\n  w \\<noteq> \\<epsilon>\n\ngoal (3 subgoals):\n 1. u = \\<epsilon> \\<Longrightarrow> u \\<cdot> w = w \\<cdot> u\n 2. w = \\<epsilon> \\<Longrightarrow> u \\<cdot> w = w \\<cdot> u\n 3. \\<lbrakk>u \\<noteq> \\<epsilon>; w \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> u \\<cdot> w = w \\<cdot> u", "have eq: \"u\\<^sup>@(\\<^bold>|v\\<^bold>| * \\<^bold>|w\\<^bold>|) = w\\<^sup>@(\\<^bold>|v\\<^bold>| * \\<^bold>|u\\<^bold>|)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<^sup>@ (\\<^bold>|v\\<^bold>| * \\<^bold>|w\\<^bold>|) =\n    w \\<^sup>@ (\\<^bold>|v\\<^bold>| * \\<^bold>|u\\<^bold>|)", "unfolding power_mult comm_common_power[OF uv] comm_common_power[OF vw]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (v \\<^sup>@ \\<^bold>|u\\<^bold>|) \\<^sup>@ \\<^bold>|w\\<^bold>| =\n    (v \\<^sup>@ \\<^bold>|w\\<^bold>|) \\<^sup>@ \\<^bold>|u\\<^bold>|", "unfolding pow_mult_list[symmetric] mult.commute[of \"\\<^bold>|u\\<^bold>|\"]"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<^sup>@ (\\<^bold>|w\\<^bold>| * \\<^bold>|u\\<^bold>|) =\n    v \\<^sup>@ (\\<^bold>|w\\<^bold>| * \\<^bold>|u\\<^bold>|)", ".."], ["proof (state)\nthis:\n  u \\<^sup>@ (\\<^bold>|v\\<^bold>| * \\<^bold>|w\\<^bold>|) =\n  w \\<^sup>@ (\\<^bold>|v\\<^bold>| * \\<^bold>|u\\<^bold>|)\n\ngoal (3 subgoals):\n 1. u = \\<epsilon> \\<Longrightarrow> u \\<cdot> w = w \\<cdot> u\n 2. w = \\<epsilon> \\<Longrightarrow> u \\<cdot> w = w \\<cdot> u\n 3. \\<lbrakk>u \\<noteq> \\<epsilon>; w \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> u \\<cdot> w = w \\<cdot> u", "obtain k l where k: \"\\<^bold>|v\\<^bold>| * \\<^bold>|w\\<^bold>| = Suc k\" and l: \"\\<^bold>|v\\<^bold>| * \\<^bold>|u\\<^bold>| = Suc l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k l.\n        \\<lbrakk>\\<^bold>|v\\<^bold>| * \\<^bold>|w\\<^bold>| = Suc k;\n         \\<^bold>|v\\<^bold>| * \\<^bold>|u\\<^bold>| = Suc l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using nemp nemp'"], ["proof (prove)\nusing this:\n  v \\<noteq> \\<epsilon>\n  u \\<noteq> \\<epsilon>\n  w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. (\\<And>k l.\n        \\<lbrakk>\\<^bold>|v\\<^bold>| * \\<^bold>|w\\<^bold>| = Suc k;\n         \\<^bold>|v\\<^bold>| * \\<^bold>|u\\<^bold>| = Suc l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding length_0_conv[symmetric]"], ["proof (prove)\nusing this:\n  \\<^bold>|v\\<^bold>| \\<noteq> 0\n  \\<^bold>|u\\<^bold>| \\<noteq> 0\n  \\<^bold>|w\\<^bold>| \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>k l.\n        \\<lbrakk>\\<^bold>|v\\<^bold>| * \\<^bold>|w\\<^bold>| = Suc k;\n         \\<^bold>|v\\<^bold>| * \\<^bold>|u\\<^bold>| = Suc l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using not0_implies_Suc[OF no_zero_divisors]"], ["proof (prove)\nusing this:\n  \\<^bold>|v\\<^bold>| \\<noteq> 0\n  \\<^bold>|u\\<^bold>| \\<noteq> 0\n  \\<^bold>|w\\<^bold>| \\<noteq> 0\n  \\<lbrakk>?a1 \\<noteq> 0; ?b1 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>m. ?a1 * ?b1 = Suc m\n\ngoal (1 subgoal):\n 1. (\\<And>k l.\n        \\<lbrakk>\\<^bold>|v\\<^bold>| * \\<^bold>|w\\<^bold>| = Suc k;\n         \\<^bold>|v\\<^bold>| * \\<^bold>|u\\<^bold>| = Suc l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by presburger"], ["proof (state)\nthis:\n  \\<^bold>|v\\<^bold>| * \\<^bold>|w\\<^bold>| = Suc k\n  \\<^bold>|v\\<^bold>| * \\<^bold>|u\\<^bold>| = Suc l\n\ngoal (3 subgoals):\n 1. u = \\<epsilon> \\<Longrightarrow> u \\<cdot> w = w \\<cdot> u\n 2. w = \\<epsilon> \\<Longrightarrow> u \\<cdot> w = w \\<cdot> u\n 3. \\<lbrakk>u \\<noteq> \\<epsilon>; w \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> u \\<cdot> w = w \\<cdot> u", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> w = w \\<cdot> u", "using pow_comm_comm'[OF eq[unfolded k l]]"], ["proof (prove)\nusing this:\n  u \\<cdot> w = w \\<cdot> u\n\ngoal (1 subgoal):\n 1. u \\<cdot> w = w \\<cdot> u", "."], ["proof (state)\nthis:\n  u \\<cdot> w = w \\<cdot> u\n\ngoal (2 subgoals):\n 1. u = \\<epsilon> \\<Longrightarrow> u \\<cdot> w = w \\<cdot> u\n 2. w = \\<epsilon> \\<Longrightarrow> u \\<cdot> w = w \\<cdot> u", "qed simp+"], ["proof (state)\nthis:\n  u \\<cdot> w = w \\<cdot> u\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem per_all_exps: \"\\<lbrakk> m \\<noteq> 0; k \\<noteq> 0 \\<rbrakk> \\<Longrightarrow> (u \\<le>p (r\\<^sup>@m)\\<^sup>\\<omega>) \\<longleftrightarrow> (u \\<le>p (r\\<^sup>@k)\\<^sup>\\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<noteq> 0; k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> u \\<le>p r \\<^sup>@ m\\<^sup>\\<omega> =\n                      u \\<le>p r \\<^sup>@ k\\<^sup>\\<omega>", "using per_drop_exp[of u r m, THEN per_add_exp[of u r k]] per_drop_exp[of u r k, THEN per_add_exp[of u r m]]"], ["proof (prove)\nusing this:\n  \\<lbrakk>u \\<le>p r \\<^sup>@ m\\<^sup>\\<omega>; k \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> u \\<le>p r \\<^sup>@ k\\<^sup>\\<omega>\n  \\<lbrakk>u \\<le>p r \\<^sup>@ k\\<^sup>\\<omega>; m \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> u \\<le>p r \\<^sup>@ m\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<noteq> 0; k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> u \\<le>p r \\<^sup>@ m\\<^sup>\\<omega> =\n                      u \\<le>p r \\<^sup>@ k\\<^sup>\\<omega>", "by blast"], ["", "lemma drop_per_pref: assumes \"w \\<le>p u\\<^sup>\\<omega>\" shows \"drop \\<^bold>|u\\<^bold>| w \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. drop \\<^bold>|u\\<^bold>| w \\<le>p w", "using pref_drop[OF per_rootD[OF \\<open>w \\<le>p u\\<^sup>\\<omega>\\<close>], of \"\\<^bold>|u\\<^bold>|\", unfolded drop_pref[of u w]]"], ["proof (prove)\nusing this:\n  drop \\<^bold>|u\\<^bold>| w \\<le>p w\n\ngoal (1 subgoal):\n 1. drop \\<^bold>|u\\<^bold>| w \\<le>p w", "."], ["", "lemma per_root_trans[trans]: \"w \\<le>p u\\<^sup>\\<omega> \\<Longrightarrow> u \\<in> t* \\<Longrightarrow> w \\<le>p t\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le>p u\\<^sup>\\<omega>; u \\<in> t*\\<rbrakk>\n    \\<Longrightarrow> w \\<le>p t\\<^sup>\\<omega>", "using root_def[of u t] per_drop_exp[of w t]"], ["proof (prove)\nusing this:\n  u \\<in> t* = (\\<exists>k. t \\<^sup>@ k = u)\n  w \\<le>p t \\<^sup>@ ?m\\<^sup>\\<omega> \\<Longrightarrow>\n  w \\<le>p t\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le>p u\\<^sup>\\<omega>; u \\<in> t*\\<rbrakk>\n    \\<Longrightarrow> w \\<le>p t\\<^sup>\\<omega>", "by blast"], ["", "text\\<open>Note that \n@{term \"w \\<le>p u\\<^sup>\\<omega> \\<Longrightarrow> u \\<le>p t\\<^sup>\\<omega> \\<Longrightarrow> w \\<le>p t\\<^sup>\\<omega>\"}\ndoes not hold.\n\\<close>"], ["", "lemma per_root_same_prefix:\"w \\<le>p r\\<^sup>\\<omega> \\<Longrightarrow> w' \\<le>p r\\<^sup>\\<omega> \\<Longrightarrow>  w \\<bowtie> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le>p r\\<^sup>\\<omega>; w' \\<le>p r\\<^sup>\\<omega>\\<rbrakk>\n    \\<Longrightarrow> w \\<bowtie> w", "by blast"], ["", "lemma take_after_drop:  \"\\<^bold>|u\\<^bold>| + q \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow> w \\<le>p u\\<^sup>\\<omega> \\<Longrightarrow> take q (drop \\<^bold>|u\\<^bold>| w) = take q w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>|u\\<^bold>| + q \\<le> \\<^bold>|w\\<^bold>|;\n     w \\<le>p u\\<^sup>\\<omega>\\<rbrakk>\n    \\<Longrightarrow> take q (drop \\<^bold>|u\\<^bold>| w) = take q w", "using pref_share_take[OF drop_per_pref[of w u] len_after_drop[of \"\\<^bold>|u\\<^bold>|\" q w]]"], ["proof (prove)\nusing this:\n  \\<lbrakk>w \\<le>p u\\<^sup>\\<omega>;\n   \\<^bold>|u\\<^bold>| + q \\<le> \\<^bold>|w\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> take q (drop \\<^bold>|u\\<^bold>| w) = take q w\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>|u\\<^bold>| + q \\<le> \\<^bold>|w\\<^bold>|;\n     w \\<le>p u\\<^sup>\\<omega>\\<rbrakk>\n    \\<Longrightarrow> take q (drop \\<^bold>|u\\<^bold>| w) = take q w", "."], ["", "text\\<open>The following lemmas are a weak version of the Periodicity lemma\\<close>"], ["", "lemma two_pers':\n  assumes pu: \"w \\<le>p u \\<cdot> w\" and pv: \"w \\<le>p v \\<cdot> w\" and len: \"\\<^bold>|u\\<^bold>| + \\<^bold>|v\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|\"\n  shows \"u \\<cdot> v = v \\<cdot> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> v = v \\<cdot> u", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<cdot> v = v \\<cdot> u", "have uv: \"w \\<le>p (u \\<cdot> v) \\<cdot> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<le>p (u \\<cdot> v) \\<cdot> w", "using pref_prolong[OF pu pv]"], ["proof (prove)\nusing this:\n  w \\<le>p u \\<cdot> v \\<cdot> w\n\ngoal (1 subgoal):\n 1. w \\<le>p (u \\<cdot> v) \\<cdot> w", "unfolding lassoc"], ["proof (prove)\nusing this:\n  w \\<le>p (u \\<cdot> v) \\<cdot> w\n\ngoal (1 subgoal):\n 1. w \\<le>p (u \\<cdot> v) \\<cdot> w", "."], ["proof (state)\nthis:\n  w \\<le>p (u \\<cdot> v) \\<cdot> w\n\ngoal (1 subgoal):\n 1. u \\<cdot> v = v \\<cdot> u", "have vu: \"w \\<le>p (v \\<cdot> u) \\<cdot> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<le>p (v \\<cdot> u) \\<cdot> w", "using pref_prolong[OF pv pu]"], ["proof (prove)\nusing this:\n  w \\<le>p v \\<cdot> u \\<cdot> w\n\ngoal (1 subgoal):\n 1. w \\<le>p (v \\<cdot> u) \\<cdot> w", "unfolding lassoc"], ["proof (prove)\nusing this:\n  w \\<le>p (v \\<cdot> u) \\<cdot> w\n\ngoal (1 subgoal):\n 1. w \\<le>p (v \\<cdot> u) \\<cdot> w", "."], ["proof (state)\nthis:\n  w \\<le>p (v \\<cdot> u) \\<cdot> w\n\ngoal (1 subgoal):\n 1. u \\<cdot> v = v \\<cdot> u", "have \"u \\<cdot> v \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> v \\<le>p w", "using len pref_prod_long[OF uv]"], ["proof (prove)\nusing this:\n  \\<^bold>|u\\<^bold>| + \\<^bold>|v\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|\n  \\<^bold>|u \\<cdot> v\\<^bold>| \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n  u \\<cdot> v \\<le>p w\n\ngoal (1 subgoal):\n 1. u \\<cdot> v \\<le>p w", "by simp"], ["proof (state)\nthis:\n  u \\<cdot> v \\<le>p w\n\ngoal (1 subgoal):\n 1. u \\<cdot> v = v \\<cdot> u", "moreover"], ["proof (state)\nthis:\n  u \\<cdot> v \\<le>p w\n\ngoal (1 subgoal):\n 1. u \\<cdot> v = v \\<cdot> u", "have \"v \\<cdot> u \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<cdot> u \\<le>p w", "using len pref_prod_long[OF vu]"], ["proof (prove)\nusing this:\n  \\<^bold>|u\\<^bold>| + \\<^bold>|v\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|\n  \\<^bold>|v \\<cdot> u\\<^bold>| \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n  v \\<cdot> u \\<le>p w\n\ngoal (1 subgoal):\n 1. v \\<cdot> u \\<le>p w", "by simp"], ["proof (state)\nthis:\n  v \\<cdot> u \\<le>p w\n\ngoal (1 subgoal):\n 1. u \\<cdot> v = v \\<cdot> u", "ultimately"], ["proof (chain)\npicking this:\n  u \\<cdot> v \\<le>p w\n  v \\<cdot> u \\<le>p w", "show \"u \\<cdot> v = v \\<cdot> u\""], ["proof (prove)\nusing this:\n  u \\<cdot> v \\<le>p w\n  v \\<cdot> u \\<le>p w\n\ngoal (1 subgoal):\n 1. u \\<cdot> v = v \\<cdot> u", "by (rule pref_comp_eq[unfolded prefix_comparable_def, OF ruler swap_len])"], ["proof (state)\nthis:\n  u \\<cdot> v = v \\<cdot> u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma two_pers: assumes \"w \\<le>p u\\<^sup>\\<omega>\" and  \"w \\<le>p v\\<^sup>\\<omega>\" and \"\\<^bold>|u\\<^bold>|+\\<^bold>|v\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|\" shows \"u\\<cdot>v = v\\<cdot>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> v = v \\<cdot> u", "using two_pers'[OF per_rootD[OF assms(1)] per_rootD[OF assms(2)] assms(3)]"], ["proof (prove)\nusing this:\n  u \\<cdot> v = v \\<cdot> u\n\ngoal (1 subgoal):\n 1. u \\<cdot> v = v \\<cdot> u", "."], ["", "subsection \"Period - numeric\""], ["", "text\\<open>Definition of a period as the length of the periodic root is often offered as the basic one. From our point of view, \nit is secondary, and less convenient for reasoning.\\<close>"], ["", "definition periodN :: \"'a list \\<Rightarrow> nat \\<Rightarrow> bool\" \n  where [simp]: \"periodN w n =  w \\<le>p (take n w)\\<^sup>\\<omega>\""], ["", "lemma periodN_I: \"w \\<noteq> \\<epsilon> \\<Longrightarrow> n \\<noteq> 0 \\<Longrightarrow> w \\<le>p (take n w) \\<cdot> w \\<Longrightarrow> periodN w n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<noteq> \\<epsilon>; n \\<noteq> 0;\n     w \\<le>p take n w \\<cdot> w\\<rbrakk>\n    \\<Longrightarrow> periodN w n", "unfolding periodN_def period_root_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<noteq> \\<epsilon>; n \\<noteq> 0;\n     w \\<le>p take n w \\<cdot> w\\<rbrakk>\n    \\<Longrightarrow> w \\<le>p take n w \\<cdot> w \\<and>\n                      take n w \\<noteq> \\<epsilon>", "by fastforce"], ["", "text\\<open>The numeric definition respects the following convention about empty words and empty periods.\\<close>"], ["", "lemma emp_no_periodN: \"\\<not> periodN \\<epsilon> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> periodN \\<epsilon> n", "by simp"], ["", "lemma zero_not_per: \"\\<not> periodN w 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> periodN w 0", "by simp"], ["", "(* lemma periodN_I [intro]: assumes \"u \\<le>p r\\<^sup>@k\" and  \"u \\<noteq> \\<epsilon>\" shows  \"periodN u \\<^bold>|r\\<^bold>|\" *)\n  (* unfolding periodN_def period_root_def *)\n  (* using  pref_pow_take[OF \\<open>u \\<le>p r\\<^sup>@k\\<close>] take_nemp_len[OF \\<open>u \\<noteq> \\<epsilon>\\<close>] \\<open>u \\<le>p r\\<^sup>@k\\<close> by force *)\n\n(* lemma periodNI' [intro]: \"u \\<le>np r\\<^sup>@k \\<Longrightarrow> periodN u \\<^bold>|r\\<^bold>|\" *)\n  (* unfolding nonempty_prefix_def by blast *)"], ["", "lemma periodN_D1: \"periodN w n \\<Longrightarrow>  w \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN w n \\<Longrightarrow> w \\<noteq> \\<epsilon>", "by simp"], ["", "lemma periodN_D2: \"periodN w n \\<Longrightarrow>  n \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN w n \\<Longrightarrow> n \\<noteq> 0", "by simp"], ["", "lemma periodN_D3: \"periodN w n \\<Longrightarrow>  w \\<le>p take n w \\<cdot> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN w n \\<Longrightarrow> w \\<le>p take n w \\<cdot> w", "by simp"], ["", "text\\<open>A nonempty word has all \"long\" periods\\<close>"], ["", "lemma all_long_pers: \"\\<lbrakk> w \\<noteq> \\<epsilon>; \\<^bold>|w\\<^bold>| \\<le> n \\<rbrakk> \\<Longrightarrow> periodN w n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<noteq> \\<epsilon>; \\<^bold>|w\\<^bold>| \\<le> n\\<rbrakk>\n    \\<Longrightarrow> periodN w n", "by simp"], ["", "lemmas per_nemp = periodN_D1"], ["", "lemmas per_positive = periodN_D2"], ["", "text\\<open>The standard numeric definition of a period uses indeces.\\<close>"], ["", "lemma periodN_indeces: assumes \"periodN w n\" and \"i + n < \\<^bold>|w\\<^bold>|\" shows \"w!i = w!(i+n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w ! i = w ! (i + n)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. w ! i = w ! (i + n)", "have \"w ! i = (take n w \\<cdot> w) ! (n + i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w ! i = (take n w \\<cdot> w) ! (n + i)", "using nth_append_length_plus[of \"take n w\" w i, symmetric]"], ["proof (prove)\nusing this:\n  w ! i = (take n w \\<cdot> w) ! (\\<^bold>|take n w\\<^bold>| + i)\n\ngoal (1 subgoal):\n 1. w ! i = (take n w \\<cdot> w) ! (n + i)", "unfolding take_len[OF less_imp_le[OF add_lessD2[OF \\<open>i + n < \\<^bold>|w\\<^bold>|\\<close>]]]"], ["proof (prove)\nusing this:\n  w ! i = (take n w \\<cdot> w) ! (n + i)\n\ngoal (1 subgoal):\n 1. w ! i = (take n w \\<cdot> w) ! (n + i)", "."], ["proof (state)\nthis:\n  w ! i = (take n w \\<cdot> w) ! (n + i)\n\ngoal (1 subgoal):\n 1. w ! i = w ! (i + n)", "also"], ["proof (state)\nthis:\n  w ! i = (take n w \\<cdot> w) ! (n + i)\n\ngoal (1 subgoal):\n 1. w ! i = w ! (i + n)", "have \"... = w ! (i + n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (take n w \\<cdot> w) ! (n + i) = w ! (i + n)", "using pref_index[OF periodN_D3[OF \\<open>periodN w n\\<close>] \\<open>i + n < \\<^bold>|w\\<^bold>|\\<close>, symmetric]"], ["proof (prove)\nusing this:\n  (take n w \\<cdot> w) ! (i + n) = w ! (i + n)\n\ngoal (1 subgoal):\n 1. (take n w \\<cdot> w) ! (n + i) = w ! (i + n)", "unfolding add.commute[of n i]"], ["proof (prove)\nusing this:\n  (take n w \\<cdot> w) ! (i + n) = w ! (i + n)\n\ngoal (1 subgoal):\n 1. (take n w \\<cdot> w) ! (i + n) = w ! (i + n)", "."], ["proof (state)\nthis:\n  (take n w \\<cdot> w) ! (n + i) = w ! (i + n)\n\ngoal (1 subgoal):\n 1. w ! i = w ! (i + n)", "finally"], ["proof (chain)\npicking this:\n  w ! i = w ! (i + n)", "show ?thesis"], ["proof (prove)\nusing this:\n  w ! i = w ! (i + n)\n\ngoal (1 subgoal):\n 1. w ! i = w ! (i + n)", "."], ["proof (state)\nthis:\n  w ! i = w ! (i + n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma indeces_periodN: \n  assumes  \"w \\<noteq> \\<epsilon>\" and \"n \\<noteq> 0\" and  forall: \"\\<And> i. i + n < \\<^bold>|w\\<^bold>| \\<Longrightarrow> w!i = w!(i+n)\" \n  shows \"periodN w n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN w n", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. periodN w n", "have \"\\<^bold>|w\\<^bold>| \\<le> \\<^bold>|take n w \\<cdot> w\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|w\\<^bold>| \\<le> \\<^bold>|take n w \\<cdot> w\\<^bold>|", "by auto"], ["proof (state)\nthis:\n  \\<^bold>|w\\<^bold>| \\<le> \\<^bold>|take n w \\<cdot> w\\<^bold>|\n\ngoal (1 subgoal):\n 1. periodN w n", "{"], ["proof (state)\nthis:\n  \\<^bold>|w\\<^bold>| \\<le> \\<^bold>|take n w \\<cdot> w\\<^bold>|\n\ngoal (1 subgoal):\n 1. periodN w n", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. periodN w n", "assume \"j < \\<^bold>|w\\<^bold>|\""], ["proof (state)\nthis:\n  j < \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. periodN w n", "have \"w ! j = (take n w \\<cdot> w) ! j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w ! j = (take n w \\<cdot> w) ! j", "proof (cases \"j < \\<^bold>|take n w\\<^bold>|\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j < \\<^bold>|take n w\\<^bold>| \\<Longrightarrow>\n    w ! j = (take n w \\<cdot> w) ! j\n 2. \\<not> j < \\<^bold>|take n w\\<^bold>| \\<Longrightarrow>\n    w ! j = (take n w \\<cdot> w) ! j", "assume \"j < \\<^bold>|take n w\\<^bold>|\""], ["proof (state)\nthis:\n  j < \\<^bold>|take n w\\<^bold>|\n\ngoal (2 subgoals):\n 1. j < \\<^bold>|take n w\\<^bold>| \\<Longrightarrow>\n    w ! j = (take n w \\<cdot> w) ! j\n 2. \\<not> j < \\<^bold>|take n w\\<^bold>| \\<Longrightarrow>\n    w ! j = (take n w \\<cdot> w) ! j", "show \"w ! j = (take n w \\<cdot> w) ! j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w ! j = (take n w \\<cdot> w) ! j", "using pref_index[OF take_is_prefix \\<open>j < \\<^bold>|take n w\\<^bold>|\\<close>, symmetric]"], ["proof (prove)\nusing this:\n  w ! j = take n w ! j\n\ngoal (1 subgoal):\n 1. w ! j = (take n w \\<cdot> w) ! j", "unfolding pref_index[OF triv_pref \\<open>j < \\<^bold>|take n w\\<^bold>|\\<close>, of w]"], ["proof (prove)\nusing this:\n  w ! j = (take n w \\<cdot> w) ! j\n\ngoal (1 subgoal):\n 1. w ! j = (take n w \\<cdot> w) ! j", "."], ["proof (state)\nthis:\n  w ! j = (take n w \\<cdot> w) ! j\n\ngoal (1 subgoal):\n 1. \\<not> j < \\<^bold>|take n w\\<^bold>| \\<Longrightarrow>\n    w ! j = (take n w \\<cdot> w) ! j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> j < \\<^bold>|take n w\\<^bold>| \\<Longrightarrow>\n    w ! j = (take n w \\<cdot> w) ! j", "assume \"\\<not> j < \\<^bold>|take n w\\<^bold>|\""], ["proof (state)\nthis:\n  \\<not> j < \\<^bold>|take n w\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<not> j < \\<^bold>|take n w\\<^bold>| \\<Longrightarrow>\n    w ! j = (take n w \\<cdot> w) ! j", "from leI[OF this] \\<open>j < \\<^bold>|w\\<^bold>|\\<close>"], ["proof (chain)\npicking this:\n  \\<^bold>|take n w\\<^bold>| \\<le> j\n  j < \\<^bold>|w\\<^bold>|", "have \"\\<^bold>|take n w\\<^bold>| = n\""], ["proof (prove)\nusing this:\n  \\<^bold>|take n w\\<^bold>| \\<le> j\n  j < \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<^bold>|take n w\\<^bold>| = n", "by force"], ["proof (state)\nthis:\n  \\<^bold>|take n w\\<^bold>| = n\n\ngoal (1 subgoal):\n 1. \\<not> j < \\<^bold>|take n w\\<^bold>| \\<Longrightarrow>\n    w ! j = (take n w \\<cdot> w) ! j", "hence \"j = (j - n) + n\" and \"(j - n) + n < \\<^bold>|w\\<^bold>|\""], ["proof (prove)\nusing this:\n  \\<^bold>|take n w\\<^bold>| = n\n\ngoal (1 subgoal):\n 1. j = j - n + n &&& j - n + n < \\<^bold>|w\\<^bold>|", "using  leI[OF \\<open>\\<not> j < \\<^bold>|take n w\\<^bold>|\\<close>] \\<open>j < \\<^bold>|w\\<^bold>|\\<close>"], ["proof (prove)\nusing this:\n  \\<^bold>|take n w\\<^bold>| = n\n  \\<^bold>|take n w\\<^bold>| \\<le> j\n  j < \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. j = j - n + n &&& j - n + n < \\<^bold>|w\\<^bold>|", "by simp+"], ["proof (state)\nthis:\n  j = j - n + n\n  j - n + n < \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<not> j < \\<^bold>|take n w\\<^bold>| \\<Longrightarrow>\n    w ! j = (take n w \\<cdot> w) ! j", "hence \"w!j = w!(j - n)\""], ["proof (prove)\nusing this:\n  j = j - n + n\n  j - n + n < \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. w ! j = w ! (j - n)", "using forall"], ["proof (prove)\nusing this:\n  j = j - n + n\n  j - n + n < \\<^bold>|w\\<^bold>|\n  ?i + n < \\<^bold>|w\\<^bold>| \\<Longrightarrow> w ! ?i = w ! (?i + n)\n\ngoal (1 subgoal):\n 1. w ! j = w ! (j - n)", "by simp"], ["proof (state)\nthis:\n  w ! j = w ! (j - n)\n\ngoal (1 subgoal):\n 1. \\<not> j < \\<^bold>|take n w\\<^bold>| \\<Longrightarrow>\n    w ! j = (take n w \\<cdot> w) ! j", "from this[folded nth_append_length_plus[of \"take n w\" w \"j-n\", unfolded \\<open>\\<^bold>|take n w\\<^bold>| = n\\<close>]]"], ["proof (chain)\npicking this:\n  w ! j = (take n w \\<cdot> w) ! (n + (j - n))", "show \"w ! j = (take n w \\<cdot> w) ! j\""], ["proof (prove)\nusing this:\n  w ! j = (take n w \\<cdot> w) ! (n + (j - n))\n\ngoal (1 subgoal):\n 1. w ! j = (take n w \\<cdot> w) ! j", "using \\<open>j = (j - n) + n\\<close>"], ["proof (prove)\nusing this:\n  w ! j = (take n w \\<cdot> w) ! (n + (j - n))\n  j = j - n + n\n\ngoal (1 subgoal):\n 1. w ! j = (take n w \\<cdot> w) ! j", "by simp"], ["proof (state)\nthis:\n  w ! j = (take n w \\<cdot> w) ! j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  w ! j = (take n w \\<cdot> w) ! j\n\ngoal (1 subgoal):\n 1. periodN w n", "}"], ["proof (state)\nthis:\n  ?j2 < \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n  w ! ?j2 = (take n w \\<cdot> w) ! ?j2\n\ngoal (1 subgoal):\n 1. periodN w n", "with index_pref[OF \\<open>\\<^bold>|w\\<^bold>| \\<le> \\<^bold>|take n w \\<cdot> w\\<^bold>|\\<close>]"], ["proof (chain)\npicking this:\n  \\<forall>i<\\<^bold>|w\\<^bold>|.\n     w ! i = (take n w \\<cdot> w) ! i \\<Longrightarrow>\n  w \\<le>p take n w \\<cdot> w\n  ?j2 < \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n  w ! ?j2 = (take n w \\<cdot> w) ! ?j2", "have \"w \\<le>p take n w \\<cdot> w\""], ["proof (prove)\nusing this:\n  \\<forall>i<\\<^bold>|w\\<^bold>|.\n     w ! i = (take n w \\<cdot> w) ! i \\<Longrightarrow>\n  w \\<le>p take n w \\<cdot> w\n  ?j2 < \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n  w ! ?j2 = (take n w \\<cdot> w) ! ?j2\n\ngoal (1 subgoal):\n 1. w \\<le>p take n w \\<cdot> w", "by blast"], ["proof (state)\nthis:\n  w \\<le>p take n w \\<cdot> w\n\ngoal (1 subgoal):\n 1. periodN w n", "thus ?thesis"], ["proof (prove)\nusing this:\n  w \\<le>p take n w \\<cdot> w\n\ngoal (1 subgoal):\n 1. periodN w n", "using assms"], ["proof (prove)\nusing this:\n  w \\<le>p take n w \\<cdot> w\n  w \\<noteq> \\<epsilon>\n  n \\<noteq> 0\n  ?i + n < \\<^bold>|w\\<^bold>| \\<Longrightarrow> w ! ?i = w ! (?i + n)\n\ngoal (1 subgoal):\n 1. periodN w n", "by force"], ["proof (state)\nthis:\n  periodN w n\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>In some cases, the numeric definition is more useful than the definition using the period root.\\<close>"], ["", "lemma periodN_rev: assumes \"periodN w p\" shows \"periodN (rev w) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN (rev w) p", "proof (rule indeces_periodN[of \"rev w\" p, OF _ periodN_D2[OF assms]])"], ["proof (state)\ngoal (2 subgoals):\n 1. rev w \\<noteq> \\<epsilon>\n 2. \\<And>i.\n       i + p < \\<^bold>|rev w\\<^bold>| \\<Longrightarrow>\n       rev w ! i = rev w ! (i + p)", "show \"rev w \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev w \\<noteq> \\<epsilon>", "using assms[unfolded periodN_def period_root_def]"], ["proof (prove)\nusing this:\n  w \\<le>p take p w \\<cdot> w \\<and> take p w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. rev w \\<noteq> \\<epsilon>", "by force"], ["proof (state)\nthis:\n  rev w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i + p < \\<^bold>|rev w\\<^bold>| \\<Longrightarrow>\n       rev w ! i = rev w ! (i + p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i + p < \\<^bold>|rev w\\<^bold>| \\<Longrightarrow>\n       rev w ! i = rev w ! (i + p)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i + p < \\<^bold>|rev w\\<^bold>| \\<Longrightarrow>\n       rev w ! i = rev w ! (i + p)", "assume \"i + p < \\<^bold>|rev w\\<^bold>|\""], ["proof (state)\nthis:\n  i + p < \\<^bold>|rev w\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i + p < \\<^bold>|rev w\\<^bold>| \\<Longrightarrow>\n       rev w ! i = rev w ! (i + p)", "from this[unfolded length_rev] add_lessD1"], ["proof (chain)\npicking this:\n  i + p < \\<^bold>|w\\<^bold>|\n  ?i + ?j < ?k \\<Longrightarrow> ?i < ?k", "have \"i < \\<^bold>|w\\<^bold>|\" and \"i + p < \\<^bold>|w\\<^bold>|\""], ["proof (prove)\nusing this:\n  i + p < \\<^bold>|w\\<^bold>|\n  ?i + ?j < ?k \\<Longrightarrow> ?i < ?k\n\ngoal (1 subgoal):\n 1. i < \\<^bold>|w\\<^bold>| &&& i + p < \\<^bold>|w\\<^bold>|", "by blast+"], ["proof (state)\nthis:\n  i < \\<^bold>|w\\<^bold>|\n  i + p < \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i + p < \\<^bold>|rev w\\<^bold>| \\<Longrightarrow>\n       rev w ! i = rev w ! (i + p)", "have e: \"\\<^bold>|w\\<^bold>| - Suc (i + p) + p = \\<^bold>|w\\<^bold>| - Suc i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|w\\<^bold>| - Suc (i + p) + p = \\<^bold>|w\\<^bold>| - Suc i", "using \\<open>i + p < \\<^bold>|rev w\\<^bold>|\\<close>"], ["proof (prove)\nusing this:\n  i + p < \\<^bold>|rev w\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<^bold>|w\\<^bold>| - Suc (i + p) + p = \\<^bold>|w\\<^bold>| - Suc i", "by simp"], ["proof (state)\nthis:\n  \\<^bold>|w\\<^bold>| - Suc (i + p) + p = \\<^bold>|w\\<^bold>| - Suc i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i + p < \\<^bold>|rev w\\<^bold>| \\<Longrightarrow>\n       rev w ! i = rev w ! (i + p)", "have \"\\<^bold>|w\\<^bold>| - Suc (i + p) + p < \\<^bold>|w\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|w\\<^bold>| - Suc (i + p) + p < \\<^bold>|w\\<^bold>|", "using \\<open>i + p < \\<^bold>|w\\<^bold>|\\<close>"], ["proof (prove)\nusing this:\n  i + p < \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<^bold>|w\\<^bold>| - Suc (i + p) + p < \\<^bold>|w\\<^bold>|", "by linarith"], ["proof (state)\nthis:\n  \\<^bold>|w\\<^bold>| - Suc (i + p) + p < \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i + p < \\<^bold>|rev w\\<^bold>| \\<Longrightarrow>\n       rev w ! i = rev w ! (i + p)", "from periodN_indeces[OF assms this] rev_nth[OF \\<open>i  < \\<^bold>|w\\<^bold>|\\<close>, folded e] rev_nth[OF \\<open>i + p < \\<^bold>|w\\<^bold>|\\<close>]"], ["proof (chain)\npicking this:\n  w ! (\\<^bold>|w\\<^bold>| - Suc (i + p)) =\n  w ! (\\<^bold>|w\\<^bold>| - Suc (i + p) + p)\n  rev w ! i = w ! (\\<^bold>|w\\<^bold>| - Suc (i + p) + p)\n  rev w ! (i + p) = w ! (\\<^bold>|w\\<^bold>| - Suc (i + p))", "show \"rev w ! i = rev w !(i+p)\""], ["proof (prove)\nusing this:\n  w ! (\\<^bold>|w\\<^bold>| - Suc (i + p)) =\n  w ! (\\<^bold>|w\\<^bold>| - Suc (i + p) + p)\n  rev w ! i = w ! (\\<^bold>|w\\<^bold>| - Suc (i + p) + p)\n  rev w ! (i + p) = w ! (\\<^bold>|w\\<^bold>| - Suc (i + p))\n\ngoal (1 subgoal):\n 1. rev w ! i = rev w ! (i + p)", "by presburger"], ["proof (state)\nthis:\n  rev w ! i = rev w ! (i + p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma periodN_rev_conv [reversal_rule]: \"periodN (rev w) n \\<longleftrightarrow> periodN w n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN (rev w) n = periodN w n", "using periodN_rev periodN_rev[of \"rev w\"]"], ["proof (prove)\nusing this:\n  periodN ?w ?p \\<Longrightarrow> periodN (rev ?w) ?p\n  periodN (rev w) ?p \\<Longrightarrow> periodN (rev (rev w)) ?p\n\ngoal (1 subgoal):\n 1. periodN (rev w) n = periodN w n", "unfolding rev_rev_ident"], ["proof (prove)\nusing this:\n  periodN ?w ?p \\<Longrightarrow> periodN (rev ?w) ?p\n  periodN (rev w) ?p \\<Longrightarrow> periodN w ?p\n\ngoal (1 subgoal):\n 1. periodN (rev w) n = periodN w n", "by (intro iffI)"], ["", "lemma periodN_fac: assumes \"periodN (u\\<cdot>w\\<cdot>v) p\" and \"w \\<noteq> \\<epsilon>\"\n  shows \"periodN w p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN w p", "proof (rule indeces_periodN, simp add: \\<open>w \\<noteq> \\<epsilon>\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. p \\<noteq> 0\n 2. \\<And>i.\n       i + p < \\<^bold>|w\\<^bold>| \\<Longrightarrow> w ! i = w ! (i + p)", "show \"p \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<noteq> 0", "using periodN_D2[OF \\<open>periodN (u\\<cdot>w\\<cdot>v) p\\<close>]"], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0", "."], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i + p < \\<^bold>|w\\<^bold>| \\<Longrightarrow> w ! i = w ! (i + p)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i + p < \\<^bold>|w\\<^bold>| \\<Longrightarrow> w ! i = w ! (i + p)", "assume \"i + p < \\<^bold>|w\\<^bold>|\""], ["proof (state)\nthis:\n  i + p < \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i + p < \\<^bold>|w\\<^bold>| \\<Longrightarrow> w ! i = w ! (i + p)", "hence \"\\<^bold>|u\\<^bold>| + i + p  < \\<^bold>|u\\<cdot>w\\<cdot>v\\<^bold>|\""], ["proof (prove)\nusing this:\n  i + p < \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<^bold>|u\\<^bold>| + i + p < \\<^bold>|u \\<cdot> w \\<cdot> v\\<^bold>|", "by simp"], ["proof (state)\nthis:\n  \\<^bold>|u\\<^bold>| + i + p < \\<^bold>|u \\<cdot> w \\<cdot> v\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i + p < \\<^bold>|w\\<^bold>| \\<Longrightarrow> w ! i = w ! (i + p)", "from periodN_indeces[OF \\<open>periodN (u\\<cdot>w\\<cdot>v) p\\<close> this]"], ["proof (chain)\npicking this:\n  (u \\<cdot> w \\<cdot> v) ! (\\<^bold>|u\\<^bold>| + i) =\n  (u \\<cdot> w \\<cdot> v) ! (\\<^bold>|u\\<^bold>| + i + p)", "have \"(u\\<cdot>w\\<cdot>v)!(\\<^bold>|u\\<^bold>| + i) = (u\\<cdot>w\\<cdot>v)! (\\<^bold>|u\\<^bold>| + (i + p))\""], ["proof (prove)\nusing this:\n  (u \\<cdot> w \\<cdot> v) ! (\\<^bold>|u\\<^bold>| + i) =\n  (u \\<cdot> w \\<cdot> v) ! (\\<^bold>|u\\<^bold>| + i + p)\n\ngoal (1 subgoal):\n 1. (u \\<cdot> w \\<cdot> v) ! (\\<^bold>|u\\<^bold>| + i) =\n    (u \\<cdot> w \\<cdot> v) ! (\\<^bold>|u\\<^bold>| + (i + p))", "by (simp add: add.assoc)"], ["proof (state)\nthis:\n  (u \\<cdot> w \\<cdot> v) ! (\\<^bold>|u\\<^bold>| + i) =\n  (u \\<cdot> w \\<cdot> v) ! (\\<^bold>|u\\<^bold>| + (i + p))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i + p < \\<^bold>|w\\<^bold>| \\<Longrightarrow> w ! i = w ! (i + p)", "thus \"w!i = w!(i+p)\""], ["proof (prove)\nusing this:\n  (u \\<cdot> w \\<cdot> v) ! (\\<^bold>|u\\<^bold>| + i) =\n  (u \\<cdot> w \\<cdot> v) ! (\\<^bold>|u\\<^bold>| + (i + p))\n\ngoal (1 subgoal):\n 1. w ! i = w ! (i + p)", "using nth_append_length_plus[of u \"w\\<cdot>v\" , unfolded lassoc] \\<open>i + p < \\<^bold>|w\\<^bold>|\\<close> add_lessD1[OF \\<open>i + p < \\<^bold>|w\\<^bold>|\\<close>]\n      nth_append[of w v]"], ["proof (prove)\nusing this:\n  (u \\<cdot> w \\<cdot> v) ! (\\<^bold>|u\\<^bold>| + i) =\n  (u \\<cdot> w \\<cdot> v) ! (\\<^bold>|u\\<^bold>| + (i + p))\n  ((u \\<cdot> w) \\<cdot> v) ! (\\<^bold>|u\\<^bold>| + ?n) =\n  (w \\<cdot> v) ! ?n\n  i + p < \\<^bold>|w\\<^bold>|\n  i < \\<^bold>|w\\<^bold>|\n  (w \\<cdot> v) ! ?n =\n  (if ?n < \\<^bold>|w\\<^bold>| then w ! ?n\n   else v ! (?n - \\<^bold>|w\\<^bold>|))\n\ngoal (1 subgoal):\n 1. w ! i = w ! (i + p)", "by auto"], ["proof (state)\nthis:\n  w ! i = w ! (i + p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma periodN_fac': \"periodN v p \\<Longrightarrow> u \\<le>f v \\<Longrightarrow> u \\<noteq> \\<epsilon> \\<Longrightarrow> periodN u p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>periodN v p; u \\<le>f v; u \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> periodN u p", "by (elim facE, hypsubst, rule periodN_fac)"], ["", "lemma assumes \"y \\<noteq> \\<epsilon>\" and \"k \\<noteq> 0\" shows \"y\\<^sup>@k \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<^sup>@ k \\<noteq> \\<epsilon>", "by (simp add: assms(1) assms(2) nemp_emp_power)"], ["", "lemma pow_per: assumes \"y \\<noteq> \\<epsilon>\" and \"k \\<noteq> 0\" shows \"periodN (y\\<^sup>@k) \\<^bold>|y\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN (y \\<^sup>@ k) \\<^bold>|y\\<^bold>|", "using periodN_I[OF \\<open>k \\<noteq> 0\\<close>[folded nemp_emp_power[OF \\<open>y \\<noteq> \\<epsilon>\\<close>]] nemp_len[OF \\<open>y \\<noteq> \\<epsilon>\\<close>]] pref_pow_ext_take"], ["proof (prove)\nusing this:\n  y \\<^sup>@ k \\<le>p\n  take \\<^bold>|y\\<^bold>| (y \\<^sup>@ k) \\<cdot>\n  y \\<^sup>@ k \\<Longrightarrow>\n  periodN (y \\<^sup>@ k) \\<^bold>|y\\<^bold>|\n  ?u \\<le>p ?r \\<^sup>@ ?k \\<Longrightarrow>\n  ?u \\<le>p take \\<^bold>|?r\\<^bold>| ?u \\<cdot> ?r \\<^sup>@ ?k\n\ngoal (1 subgoal):\n 1. periodN (y \\<^sup>@ k) \\<^bold>|y\\<^bold>|", "by blast"], ["", "lemma per_fac: assumes \"y \\<noteq> \\<epsilon>\" and \"v \\<noteq> \\<epsilon>\" and \"y\\<^sup>@k = u\\<cdot>v\\<cdot>w\" shows \"periodN v \\<^bold>|y\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN v \\<^bold>|y\\<^bold>|", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. periodN v \\<^bold>|y\\<^bold>|", "have \"k \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<noteq> 0", "using nemp_pow suf_nemp[OF pref_nemp[OF \\<open>v \\<noteq> \\<epsilon>\\<close>, of w], of u, folded \\<open>y\\<^sup>@k = u\\<cdot>v\\<cdot>w\\<close>]"], ["proof (prove)\nusing this:\n  ?t \\<^sup>@ ?m \\<noteq> \\<epsilon> \\<Longrightarrow> ?m \\<noteq> 0\n  y \\<^sup>@ k \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0", "by blast"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. periodN v \\<^bold>|y\\<^bold>|", "from pow_per[OF \\<open>y \\<noteq> \\<epsilon>\\<close> this, unfolded \\<open>y\\<^sup>@k = u\\<cdot>v\\<cdot>w\\<close>]"], ["proof (chain)\npicking this:\n  periodN (u \\<cdot> v \\<cdot> w) \\<^bold>|y\\<^bold>|", "have \"periodN (u \\<cdot> v \\<cdot> w) \\<^bold>|y\\<^bold>|\""], ["proof (prove)\nusing this:\n  periodN (u \\<cdot> v \\<cdot> w) \\<^bold>|y\\<^bold>|\n\ngoal (1 subgoal):\n 1. periodN (u \\<cdot> v \\<cdot> w) \\<^bold>|y\\<^bold>|", "."], ["proof (state)\nthis:\n  periodN (u \\<cdot> v \\<cdot> w) \\<^bold>|y\\<^bold>|\n\ngoal (1 subgoal):\n 1. periodN v \\<^bold>|y\\<^bold>|", "from periodN_fac[OF this \\<open>v \\<noteq> \\<epsilon>\\<close>]"], ["proof (chain)\npicking this:\n  periodN v \\<^bold>|y\\<^bold>|", "show \"periodN v \\<^bold>|y\\<^bold>|\""], ["proof (prove)\nusing this:\n  periodN v \\<^bold>|y\\<^bold>|\n\ngoal (1 subgoal):\n 1. periodN v \\<^bold>|y\\<^bold>|", "."], ["proof (state)\nthis:\n  periodN v \\<^bold>|y\\<^bold>|\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>The numeric definition is equivalent to being prefix of a power.\\<close>"], ["", "theorem periodN_pref: \"periodN w n \\<longleftrightarrow> (\\<exists>k r. w \\<le>np r\\<^sup>@k \\<and> \\<^bold>|r\\<^bold>| = n)\" (is \"_ \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN w n =\n    (\\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n)", "proof(cases \"w = \\<epsilon>\", simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. w \\<noteq> \\<epsilon> \\<Longrightarrow>\n    periodN w n =\n    (\\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n)", "assume \"w \\<noteq> \\<epsilon>\""], ["proof (state)\nthis:\n  w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. w \\<noteq> \\<epsilon> \\<Longrightarrow>\n    periodN w n =\n    (\\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n)", "show \"periodN w n \\<longleftrightarrow> ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN w n =\n    (\\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. periodN w n \\<Longrightarrow>\n    \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n\n 2. \\<exists>k r.\n       w \\<le>np r \\<^sup>@ k \\<and>\n       \\<^bold>|r\\<^bold>| = n \\<Longrightarrow>\n    periodN w n", "assume \"periodN w n\""], ["proof (state)\nthis:\n  periodN w n\n\ngoal (2 subgoals):\n 1. periodN w n \\<Longrightarrow>\n    \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n\n 2. \\<exists>k r.\n       w \\<le>np r \\<^sup>@ k \\<and>\n       \\<^bold>|r\\<^bold>| = n \\<Longrightarrow>\n    periodN w n", "consider (short) \"\\<^bold>|w\\<^bold>| \\<le> n\" |  (long) \"n < \\<^bold>|w\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>|w\\<^bold>| \\<le> n \\<Longrightarrow> thesis;\n     n < \\<^bold>|w\\<^bold>| \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by linarith"], ["proof (state)\nthis:\n  \\<lbrakk>\\<^bold>|w\\<^bold>| \\<le> n \\<Longrightarrow> ?thesis;\n   n < \\<^bold>|w\\<^bold>| \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. periodN w n \\<Longrightarrow>\n    \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n\n 2. \\<exists>k r.\n       w \\<le>np r \\<^sup>@ k \\<and>\n       \\<^bold>|r\\<^bold>| = n \\<Longrightarrow>\n    periodN w n", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<^bold>|w\\<^bold>| \\<le> n \\<Longrightarrow> ?thesis;\n   n < \\<^bold>|w\\<^bold>| \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?R"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<^bold>|w\\<^bold>| \\<le> n \\<Longrightarrow> ?thesis;\n   n < \\<^bold>|w\\<^bold>| \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<^bold>|w\\<^bold>| \\<le> n \\<Longrightarrow>\n    \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n\n 2. n < \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n    \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n", "assume \"\\<^bold>|w\\<^bold>| \\<le> n\""], ["proof (state)\nthis:\n  \\<^bold>|w\\<^bold>| \\<le> n\n\ngoal (2 subgoals):\n 1. \\<^bold>|w\\<^bold>| \\<le> n \\<Longrightarrow>\n    \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n\n 2. n < \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n    \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n", "from le_add_diff_inverse[OF this]"], ["proof (chain)\npicking this:\n  \\<^bold>|w\\<^bold>| + (n - \\<^bold>|w\\<^bold>|) = n", "obtain z where \"\\<^bold>|w \\<cdot> z\\<^bold>| = n\""], ["proof (prove)\nusing this:\n  \\<^bold>|w\\<^bold>| + (n - \\<^bold>|w\\<^bold>|) = n\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<^bold>|w \\<cdot> z\\<^bold>| = n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding length_append"], ["proof (prove)\nusing this:\n  \\<^bold>|w\\<^bold>| + (n - \\<^bold>|w\\<^bold>|) = n\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<^bold>|w\\<^bold>| + \\<^bold>|z\\<^bold>| = n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using exE[OF Ex_list_of_length[of \"n - \\<^bold>|w\\<^bold>|\"]]"], ["proof (prove)\nusing this:\n  \\<^bold>|w\\<^bold>| + (n - \\<^bold>|w\\<^bold>|) = n\n  (\\<And>x.\n      \\<^bold>|x\\<^bold>| = n - \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n      ?Q) \\<Longrightarrow>\n  ?Q\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<^bold>|w\\<^bold>| + \\<^bold>|z\\<^bold>| = n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<^bold>|w \\<cdot> z\\<^bold>| = n\n\ngoal (2 subgoals):\n 1. \\<^bold>|w\\<^bold>| \\<le> n \\<Longrightarrow>\n    \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n\n 2. n < \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n    \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n", "thus ?R"], ["proof (prove)\nusing this:\n  \\<^bold>|w \\<cdot> z\\<^bold>| = n\n\ngoal (1 subgoal):\n 1. \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n", "using  pow_one_id npI'[OF \\<open>w \\<noteq> \\<epsilon>\\<close>]"], ["proof (prove)\nusing this:\n  \\<^bold>|w \\<cdot> z\\<^bold>| = n\n  ?u \\<^sup>@ 1 = ?u\n  \\<exists>z. w \\<cdot> z = ?v \\<Longrightarrow> w \\<le>np ?v\n\ngoal (1 subgoal):\n 1. \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n", "by metis"], ["proof (state)\nthis:\n  \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n\n\ngoal (1 subgoal):\n 1. n < \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n    \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n < \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n    \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n", "assume \"n < \\<^bold>|w\\<^bold>|\""], ["proof (state)\nthis:\n  n < \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. n < \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n    \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n", "then"], ["proof (chain)\npicking this:\n  n < \\<^bold>|w\\<^bold>|", "show ?R"], ["proof (prove)\nusing this:\n  n < \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n", "using \\<open>periodN w n\\<close>[unfolded periodN_def per_pref[of w \"take n w\"]] \n          \\<open>w \\<noteq> \\<epsilon>\\<close> take_len[OF less_imp_le[OF \\<open>n < \\<^bold>|w\\<^bold>|\\<close>]]"], ["proof (prove)\nusing this:\n  n < \\<^bold>|w\\<^bold>|\n  (\\<exists>k. w \\<le>p take n w \\<^sup>@ k) \\<and>\n  take n w \\<noteq> \\<epsilon>\n  w \\<noteq> \\<epsilon>\n  \\<^bold>|take n w\\<^bold>| = n\n\ngoal (1 subgoal):\n 1. \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n", "by blast"], ["proof (state)\nthis:\n  \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n\n\ngoal (1 subgoal):\n 1. \\<exists>k r.\n       w \\<le>np r \\<^sup>@ k \\<and>\n       \\<^bold>|r\\<^bold>| = n \\<Longrightarrow>\n    periodN w n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k r.\n       w \\<le>np r \\<^sup>@ k \\<and>\n       \\<^bold>|r\\<^bold>| = n \\<Longrightarrow>\n    periodN w n", "assume ?R"], ["proof (state)\nthis:\n  \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n\n\ngoal (1 subgoal):\n 1. \\<exists>k r.\n       w \\<le>np r \\<^sup>@ k \\<and>\n       \\<^bold>|r\\<^bold>| = n \\<Longrightarrow>\n    periodN w n", "then"], ["proof (chain)\npicking this:\n  \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n", "obtain k r where \"w \\<le>np r\\<^sup>@k\" and \"n = \\<^bold>|r\\<^bold>|\""], ["proof (prove)\nusing this:\n  \\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n\n\ngoal (1 subgoal):\n 1. (\\<And>r k.\n        \\<lbrakk>w \\<le>np r \\<^sup>@ k; n = \\<^bold>|r\\<^bold>|\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  w \\<le>np r \\<^sup>@ k\n  n = \\<^bold>|r\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<exists>k r.\n       w \\<le>np r \\<^sup>@ k \\<and>\n       \\<^bold>|r\\<^bold>| = n \\<Longrightarrow>\n    periodN w n", "have \"w \\<le>p take n w \\<cdot> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<le>p take n w \\<cdot> w", "using  pref_pow_take[OF npD[OF \\<open>w \\<le>np r \\<^sup>@ k\\<close>], folded \\<open>n = \\<^bold>|r\\<^bold>|\\<close>]"], ["proof (prove)\nusing this:\n  w \\<le>p take n w \\<cdot> w\n\ngoal (1 subgoal):\n 1. w \\<le>p take n w \\<cdot> w", "."], ["proof (state)\nthis:\n  w \\<le>p take n w \\<cdot> w\n\ngoal (1 subgoal):\n 1. \\<exists>k r.\n       w \\<le>np r \\<^sup>@ k \\<and>\n       \\<^bold>|r\\<^bold>| = n \\<Longrightarrow>\n    periodN w n", "have \"n \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<noteq> 0", "unfolding length_0_conv[of r, folded \\<open>n = \\<^bold>|r\\<^bold>|\\<close>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<noteq> \\<epsilon>", "using \\<open>w \\<le>np r \\<^sup>@ k\\<close>"], ["proof (prove)\nusing this:\n  w \\<le>np r \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. r \\<noteq> \\<epsilon>", "by force"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>k r.\n       w \\<le>np r \\<^sup>@ k \\<and>\n       \\<^bold>|r\\<^bold>| = n \\<Longrightarrow>\n    periodN w n", "hence \"take n w \\<noteq> \\<epsilon>\""], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. take n w \\<noteq> \\<epsilon>", "unfolding \\<open>n = \\<^bold>|r\\<^bold>|\\<close>"], ["proof (prove)\nusing this:\n  \\<^bold>|r\\<^bold>| \\<noteq> 0\n\ngoal (1 subgoal):\n 1. take \\<^bold>|r\\<^bold>| w \\<noteq> \\<epsilon>", "using \\<open>w \\<noteq> \\<epsilon>\\<close>"], ["proof (prove)\nusing this:\n  \\<^bold>|r\\<^bold>| \\<noteq> 0\n  w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. take \\<^bold>|r\\<^bold>| w \\<noteq> \\<epsilon>", "by simp"], ["proof (state)\nthis:\n  take n w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>k r.\n       w \\<le>np r \\<^sup>@ k \\<and>\n       \\<^bold>|r\\<^bold>| = n \\<Longrightarrow>\n    periodN w n", "thus \"periodN w n\""], ["proof (prove)\nusing this:\n  take n w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. periodN w n", "unfolding periodN_def period_root_def"], ["proof (prove)\nusing this:\n  take n w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. w \\<le>p take n w \\<cdot> w \\<and> take n w \\<noteq> \\<epsilon>", "using \\<open>w \\<le>p take n w \\<cdot> w\\<close>"], ["proof (prove)\nusing this:\n  take n w \\<noteq> \\<epsilon>\n  w \\<le>p take n w \\<cdot> w\n\ngoal (1 subgoal):\n 1. w \\<le>p take n w \\<cdot> w \\<and> take n w \\<noteq> \\<epsilon>", "by blast"], ["proof (state)\nthis:\n  periodN w n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  periodN w n =\n  (\\<exists>k r. w \\<le>np r \\<^sup>@ k \\<and> \\<^bold>|r\\<^bold>| = n)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Two more characterizations of a period\\<close>"], ["", "theorem per_shift: assumes \"w \\<noteq> \\<epsilon>\" \"n \\<noteq> 0\" \n  shows \"periodN w n \\<longleftrightarrow> drop n w \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN w n = (drop n w \\<le>p w)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. periodN w n \\<Longrightarrow> drop n w \\<le>p w\n 2. drop n w \\<le>p w \\<Longrightarrow> periodN w n", "assume \"periodN w n\""], ["proof (state)\nthis:\n  periodN w n\n\ngoal (2 subgoals):\n 1. periodN w n \\<Longrightarrow> drop n w \\<le>p w\n 2. drop n w \\<le>p w \\<Longrightarrow> periodN w n", "show \"drop n w \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. drop n w \\<le>p w", "using drop_per_pref[OF \\<open>periodN w n\\<close>[unfolded periodN_def]]\n  append_take_drop_id[of n w, unfolded append_eq_conv_conj]"], ["proof (prove)\nusing this:\n  drop \\<^bold>|take n w\\<^bold>| w \\<le>p w\n  take n w = take \\<^bold>|take n w\\<^bold>| w \\<and>\n  drop n w = drop \\<^bold>|take n w\\<^bold>| w\n\ngoal (1 subgoal):\n 1. drop n w \\<le>p w", "by argo"], ["proof (state)\nthis:\n  drop n w \\<le>p w\n\ngoal (1 subgoal):\n 1. drop n w \\<le>p w \\<Longrightarrow> periodN w n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. drop n w \\<le>p w \\<Longrightarrow> periodN w n", "assume \"drop n w \\<le>p w\""], ["proof (state)\nthis:\n  drop n w \\<le>p w\n\ngoal (1 subgoal):\n 1. drop n w \\<le>p w \\<Longrightarrow> periodN w n", "show \"periodN w n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN w n", "using conjI[OF pref_cancel'[OF \\<open>drop n w \\<le>p w\\<close>, of \"take n w\"] take_nemp[OF \\<open>w \\<noteq> \\<epsilon>\\<close> \\<open>n \\<noteq> 0\\<close>]]"], ["proof (prove)\nusing this:\n  take n w \\<cdot> drop n w \\<le>p take n w \\<cdot> w \\<and>\n  take n w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. periodN w n", "unfolding  append_take_drop_id period_root_def"], ["proof (prove)\nusing this:\n  w \\<le>p take n w \\<cdot> w \\<and> take n w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. periodN w n", "by force"], ["proof (state)\nthis:\n  periodN w n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rotate_per_root: assumes \"w \\<noteq> \\<epsilon>\" and \"n \\<noteq> 0\" and \"w = rotate n w\" \n  shows \"periodN w n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN w n", "proof (cases \"\\<^bold>|w\\<^bold>| \\<le> n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<^bold>|w\\<^bold>| \\<le> n \\<Longrightarrow> periodN w n\n 2. \\<not> \\<^bold>|w\\<^bold>| \\<le> n \\<Longrightarrow> periodN w n", "assume \"\\<^bold>|w\\<^bold>| \\<le> n\""], ["proof (state)\nthis:\n  \\<^bold>|w\\<^bold>| \\<le> n\n\ngoal (2 subgoals):\n 1. \\<^bold>|w\\<^bold>| \\<le> n \\<Longrightarrow> periodN w n\n 2. \\<not> \\<^bold>|w\\<^bold>| \\<le> n \\<Longrightarrow> periodN w n", "from all_long_pers[OF \\<open>w \\<noteq> \\<epsilon>\\<close>, OF this]"], ["proof (chain)\npicking this:\n  periodN w n", "show \"periodN w n\""], ["proof (prove)\nusing this:\n  periodN w n\n\ngoal (1 subgoal):\n 1. periodN w n", "."], ["proof (state)\nthis:\n  periodN w n\n\ngoal (1 subgoal):\n 1. \\<not> \\<^bold>|w\\<^bold>| \\<le> n \\<Longrightarrow> periodN w n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<^bold>|w\\<^bold>| \\<le> n \\<Longrightarrow> periodN w n", "assume not: \"\\<not> \\<^bold>|w\\<^bold>| \\<le> n\""], ["proof (state)\nthis:\n  \\<not> \\<^bold>|w\\<^bold>| \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> \\<^bold>|w\\<^bold>| \\<le> n \\<Longrightarrow> periodN w n", "have \"drop (n mod \\<^bold>|w\\<^bold>|) w \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. drop (n mod \\<^bold>|w\\<^bold>|) w \\<le>p w", "using prefI[OF rotate_drop_take[symmetric, of n w]]"], ["proof (prove)\nusing this:\n  drop (n mod \\<^bold>|w\\<^bold>|) w \\<le>p rotate n w\n\ngoal (1 subgoal):\n 1. drop (n mod \\<^bold>|w\\<^bold>|) w \\<le>p w", "unfolding \\<open>w = rotate n w\\<close>[symmetric]"], ["proof (prove)\nusing this:\n  drop (n mod \\<^bold>|w\\<^bold>|) w \\<le>p w\n\ngoal (1 subgoal):\n 1. drop (n mod \\<^bold>|w\\<^bold>|) w \\<le>p w", "."], ["proof (state)\nthis:\n  drop (n mod \\<^bold>|w\\<^bold>|) w \\<le>p w\n\ngoal (1 subgoal):\n 1. \\<not> \\<^bold>|w\\<^bold>| \\<le> n \\<Longrightarrow> periodN w n", "from per_shift[OF \\<open>w \\<noteq> \\<epsilon>\\<close> \\<open>n \\<noteq> 0\\<close>] this[unfolded mod_less[OF not[unfolded not_le]]]"], ["proof (chain)\npicking this:\n  periodN w n = (drop n w \\<le>p w)\n  drop n w \\<le>p w", "show \"periodN w n\""], ["proof (prove)\nusing this:\n  periodN w n = (drop n w \\<le>p w)\n  drop n w \\<le>p w\n\ngoal (1 subgoal):\n 1. periodN w n", ".."], ["proof (state)\nthis:\n  periodN w n\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Various lemmas on periods\\<close>"], ["", "lemma periodN_drop: assumes \"periodN w p\" and \"p < \\<^bold>|w\\<^bold>|\"\n  shows \"periodN (drop p w) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN (drop p w) p", "using periodN_fac[of \"take p w\" \"drop p w\" \\<epsilon> p] \\<open>p < \\<^bold>|w\\<^bold>|\\<close> \\<open>periodN w p\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>periodN (take p w \\<cdot> drop p w \\<cdot> \\<epsilon>) p;\n   drop p w \\<noteq> \\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> periodN (drop p w) p\n  p < \\<^bold>|w\\<^bold>|\n  periodN w p\n\ngoal (1 subgoal):\n 1. periodN (drop p w) p", "unfolding append_take_drop_id drop_eq_Nil not_le append_Nil2"], ["proof (prove)\nusing this:\n  \\<lbrakk>periodN w p; p < \\<^bold>|w\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> periodN (drop p w) p\n  p < \\<^bold>|w\\<^bold>|\n  periodN w p\n\ngoal (1 subgoal):\n 1. periodN (drop p w) p", "by blast"], ["", "lemma ext_per_left: assumes \"periodN w p\" and  \"p \\<le> \\<^bold>|w\\<^bold>|\" \n  shows \"periodN (take p w \\<cdot> w) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN (take p w \\<cdot> w) p", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. periodN (take p w \\<cdot> w) p", "have f: \"take p (take p w \\<cdot> w) = take p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take p (take p w \\<cdot> w) = take p w", "using \\<open>p \\<le> \\<^bold>|w\\<^bold>|\\<close>"], ["proof (prove)\nusing this:\n  p \\<le> \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. take p (take p w \\<cdot> w) = take p w", "by simp"], ["proof (state)\nthis:\n  take p (take p w \\<cdot> w) = take p w\n\ngoal (1 subgoal):\n 1. periodN (take p w \\<cdot> w) p", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN (take p w \\<cdot> w) p", "using  \\<open>periodN w p\\<close> pref_cancel'[of w \"take p w \\<cdot> w\" \"take p w\" ]"], ["proof (prove)\nusing this:\n  periodN w p\n  w \\<le>p take p w \\<cdot> w \\<Longrightarrow>\n  take p w \\<cdot> w \\<le>p take p w \\<cdot> take p w \\<cdot> w\n\ngoal (1 subgoal):\n 1. periodN (take p w \\<cdot> w) p", "unfolding f periodN_def period_root_def"], ["proof (prove)\nusing this:\n  w \\<le>p take p w \\<cdot> w \\<and> take p w \\<noteq> \\<epsilon>\n  w \\<le>p take p w \\<cdot> w \\<Longrightarrow>\n  take p w \\<cdot> w \\<le>p take p w \\<cdot> take p w \\<cdot> w\n\ngoal (1 subgoal):\n 1. take p w \\<cdot> w \\<le>p take p w \\<cdot> take p w \\<cdot> w \\<and>\n    take p w \\<noteq> \\<epsilon>", "by blast"], ["proof (state)\nthis:\n  periodN (take p w \\<cdot> w) p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ext_per_left_power: \"periodN w p \\<Longrightarrow> p \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow> periodN ((take p w)\\<^sup>@k \\<cdot> w) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>periodN w p; p \\<le> \\<^bold>|w\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> periodN (take p w \\<^sup>@ k \\<cdot> w) p", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>periodN w p; p \\<le> \\<^bold>|w\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> periodN (take p w \\<^sup>@ 0 \\<cdot> w) p\n 2. \\<And>k.\n       \\<lbrakk>\\<lbrakk>periodN w p; p \\<le> \\<^bold>|w\\<^bold>|\\<rbrakk>\n                \\<Longrightarrow> periodN (take p w \\<^sup>@ k \\<cdot> w) p;\n        periodN w p; p \\<le> \\<^bold>|w\\<^bold>|\\<rbrakk>\n       \\<Longrightarrow> periodN (take p w \\<^sup>@ Suc k \\<cdot> w) p", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>periodN w p; p \\<le> \\<^bold>|w\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> periodN (take p w \\<^sup>@ k \\<cdot> w) p\n  periodN w p\n  p \\<le> \\<^bold>|w\\<^bold>|\n\ngoal (2 subgoals):\n 1. \\<lbrakk>periodN w p; p \\<le> \\<^bold>|w\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> periodN (take p w \\<^sup>@ 0 \\<cdot> w) p\n 2. \\<And>k.\n       \\<lbrakk>\\<lbrakk>periodN w p; p \\<le> \\<^bold>|w\\<^bold>|\\<rbrakk>\n                \\<Longrightarrow> periodN (take p w \\<^sup>@ k \\<cdot> w) p;\n        periodN w p; p \\<le> \\<^bold>|w\\<^bold>|\\<rbrakk>\n       \\<Longrightarrow> periodN (take p w \\<^sup>@ Suc k \\<cdot> w) p", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN (take p w \\<^sup>@ Suc k \\<cdot> w) p", "using ext_per_left[OF Suc.IH[OF \\<open>periodN w p\\<close> \\<open>p \\<le> \\<^bold>|w\\<^bold>|\\<close>]] \\<open>p \\<le> \\<^bold>|w\\<^bold>|\\<close>"], ["proof (prove)\nusing this:\n  p \\<le> \\<^bold>|take p w \\<^sup>@ k \\<cdot> w\\<^bold>| \\<Longrightarrow>\n  periodN\n   (take p (take p w \\<^sup>@ k \\<cdot> w) \\<cdot>\n    take p w \\<^sup>@ k \\<cdot> w)\n   p\n  p \\<le> \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. periodN (take p w \\<^sup>@ Suc k \\<cdot> w) p", "unfolding pref_share_take[OF per_exp_pref[OF periodN_D3[OF \\<open>periodN w p\\<close>]] \\<open>p \\<le> \\<^bold>|w\\<^bold>|\\<close>,symmetric] \n      lassoc pow_Suc_list[symmetric]"], ["proof (prove)\nusing this:\n  p \\<le> \\<^bold>|take p w \\<^sup>@ k \\<cdot> w\\<^bold>| \\<Longrightarrow>\n  periodN (take p w \\<^sup>@ Suc k \\<cdot> w) p\n  p \\<le> \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. periodN (take p w \\<^sup>@ Suc k \\<cdot> w) p", "by fastforce"], ["proof (state)\nthis:\n  periodN (take p w \\<^sup>@ Suc k \\<cdot> w) p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>periodN w p; p \\<le> \\<^bold>|w\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> periodN (take p w \\<^sup>@ 0 \\<cdot> w) p", "qed auto"], ["", "lemma take_several_pers: assumes \"periodN w n\" and \"m*n \\<le> \\<^bold>|w\\<^bold>|\"\n  shows \"(take n w)\\<^sup>@m = take (m*n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take n w \\<^sup>@ m = take (m * n) w", "proof (cases \"m = 0\", simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> take n w \\<^sup>@ m = take (m * n) w", "assume \"m \\<noteq> 0\""], ["proof (state)\nthis:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> take n w \\<^sup>@ m = take (m * n) w", "have \"\\<^bold>|(take n w)\\<^sup>@m\\<^bold>| = m*n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|take n w \\<^sup>@ m\\<^bold>| = m * n", "unfolding pow_len nat_prod_le[OF \\<open>m \\<noteq> 0\\<close> \\<open>m*n \\<le> \\<^bold>|w\\<^bold>|\\<close>, THEN take_len]"], ["proof (prove)\ngoal (1 subgoal):\n 1. m * n = m * n", "by blast"], ["proof (state)\nthis:\n  \\<^bold>|take n w \\<^sup>@ m\\<^bold>| = m * n\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> take n w \\<^sup>@ m = take (m * n) w", "have \"(take n w)\\<^sup>@m \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take n w \\<^sup>@ m \\<le>p w", "using  \\<open>periodN w n\\<close>[unfolded periodN_def, THEN  per_exp[of w \"take n w\" m], THEN \n      ruler_le[of \"take n w\\<^sup>@m\" \"take n w\\<^sup>@m \\<cdot> w\" w, OF triv_pref], OF  \\<open>m * n \\<le> \\<^bold>|w\\<^bold>|\\<close>[folded \\<open>\\<^bold>|take n w\\<^sup>@m\\<^bold>| = m * n\\<close>]]"], ["proof (prove)\nusing this:\n  take n w \\<^sup>@ m \\<le>p w\n\ngoal (1 subgoal):\n 1. take n w \\<^sup>@ m \\<le>p w", "."], ["proof (state)\nthis:\n  take n w \\<^sup>@ m \\<le>p w\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> take n w \\<^sup>@ m = take (m * n) w", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. take n w \\<^sup>@ m = take (m * n) w", "using pref_take[OF \\<open>take n w\\<^sup>@m \\<le>p w\\<close>, unfolded  \\<open>\\<^bold>|take n w\\<^sup>@m\\<^bold>| = m * n\\<close>, symmetric]"], ["proof (prove)\nusing this:\n  take n w \\<^sup>@ m = take (m * n) w\n\ngoal (1 subgoal):\n 1. take n w \\<^sup>@ m = take (m * n) w", "."], ["proof (state)\nthis:\n  take n w \\<^sup>@ m = take (m * n) w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma per_mult: assumes \"periodN w n\" and \"m \\<noteq> 0\" shows \"periodN w (m*n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN w (m * n)", "proof (cases \"m*n \\<le> \\<^bold>|w\\<^bold>|\")"], ["proof (state)\ngoal (2 subgoals):\n 1. m * n \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow> periodN w (m * n)\n 2. \\<not> m * n \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n    periodN w (m * n)", "have \"w \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<noteq> \\<epsilon>", "using periodN_D1[OF \\<open>periodN w n\\<close>]"], ["proof (prove)\nusing this:\n  w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. w \\<noteq> \\<epsilon>", "."], ["proof (state)\nthis:\n  w \\<noteq> \\<epsilon>\n\ngoal (2 subgoals):\n 1. m * n \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow> periodN w (m * n)\n 2. \\<not> m * n \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n    periodN w (m * n)", "assume \"\\<not> m * n \\<le> \\<^bold>|w\\<^bold>|\""], ["proof (state)\nthis:\n  \\<not> m * n \\<le> \\<^bold>|w\\<^bold>|\n\ngoal (2 subgoals):\n 1. m * n \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow> periodN w (m * n)\n 2. \\<not> m * n \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n    periodN w (m * n)", "thus \"periodN w (m*n)\""], ["proof (prove)\nusing this:\n  \\<not> m * n \\<le> \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. periodN w (m * n)", "using all_long_pers[of  w \"m * n\", OF \\<open>w \\<noteq> \\<epsilon>\\<close>]"], ["proof (prove)\nusing this:\n  \\<not> m * n \\<le> \\<^bold>|w\\<^bold>|\n  \\<^bold>|w\\<^bold>| \\<le> m * n \\<Longrightarrow> periodN w (m * n)\n\ngoal (1 subgoal):\n 1. periodN w (m * n)", "by linarith"], ["proof (state)\nthis:\n  periodN w (m * n)\n\ngoal (1 subgoal):\n 1. m * n \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow> periodN w (m * n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. m * n \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow> periodN w (m * n)", "assume \"m * n \\<le> \\<^bold>|w\\<^bold>|\""], ["proof (state)\nthis:\n  m * n \\<le> \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. m * n \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow> periodN w (m * n)", "show \"periodN w (m*n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN w (m * n)", "using  per_add_exp[of w \"take n w\", OF _ \\<open>m \\<noteq> 0\\<close>] \\<open>periodN w n\\<close>"], ["proof (prove)\nusing this:\n  w \\<le>p take n w\\<^sup>\\<omega> \\<Longrightarrow>\n  w \\<le>p take n w \\<^sup>@ m\\<^sup>\\<omega>\n  periodN w n\n\ngoal (1 subgoal):\n 1. periodN w (m * n)", "unfolding periodN_def period_root_def take_several_pers[OF \\<open>periodN w n\\<close> \\<open>m*n \\<le> \\<^bold>|w\\<^bold>|\\<close>, symmetric]"], ["proof (prove)\nusing this:\n  w \\<le>p take n w \\<cdot> w \\<and>\n  take n w \\<noteq> \\<epsilon> \\<Longrightarrow>\n  w \\<le>p take n w \\<^sup>@ m \\<cdot> w \\<and>\n  take n w \\<^sup>@ m \\<noteq> \\<epsilon>\n  w \\<le>p take n w \\<cdot> w \\<and> take n w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. w \\<le>p take n w \\<^sup>@ m \\<cdot> w \\<and>\n    take n w \\<^sup>@ m \\<noteq> \\<epsilon>", "by blast"], ["proof (state)\nthis:\n  periodN w (m * n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma root_periodN: assumes \"w \\<noteq> \\<epsilon>\" and  \"w \\<le>p r\\<^sup>\\<omega>\" shows \"periodN w \\<^bold>|r\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN w \\<^bold>|r\\<^bold>|", "unfolding periodN_def period_root_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<le>p take \\<^bold>|r\\<^bold>| w \\<cdot> w \\<and>\n    take \\<^bold>|r\\<^bold>| w \\<noteq> \\<epsilon>", "using  per_pref_ex[OF \\<open>w \\<le>p r\\<^sup>\\<omega>\\<close> \n  pref_pow_take[of w r], of \"\\<lambda> x. x\"] take_nemp_len[OF \\<open>w \\<noteq> \\<epsilon>\\<close>  per_rootD'[OF \\<open>w \\<le>p r\\<^sup>\\<omega>\\<close>]]"], ["proof (prove)\nusing this:\n  (\\<And>n.\n      \\<lbrakk>w \\<le>p r \\<^sup>@ n; n \\<noteq> 0\\<rbrakk>\n      \\<Longrightarrow> w \\<le>p r \\<^sup>@ n) \\<Longrightarrow>\n  w \\<le>p take \\<^bold>|r\\<^bold>| w \\<cdot> w\n  take \\<^bold>|r\\<^bold>| w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. w \\<le>p take \\<^bold>|r\\<^bold>| w \\<cdot> w \\<and>\n    take \\<^bold>|r\\<^bold>| w \\<noteq> \\<epsilon>", "by blast"], ["", "theorem  two_periodsN:\n  assumes \"periodN w p\" \"periodN w q\"  \"p + q \\<le> \\<^bold>|w\\<^bold>|\" \n  shows \"periodN w (gcd p q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN w (gcd p q)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. periodN w (gcd p q)", "obtain t where \"take p w \\<in> t*\" \"take q w \\<in> t*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>take p w \\<in> t*; take q w \\<in> t*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using two_pers[OF \\<open>periodN w p\\<close>[unfolded periodN_def] \\<open>periodN w q\\<close>[unfolded periodN_def],\n        unfolded take_len[OF add_leD1[OF \\<open>p + q \\<le> \\<^bold>|w\\<^bold>|\\<close>]] take_len[OF add_leD2[OF \\<open>p + q \\<le> \\<^bold>|w\\<^bold>|\\<close>]],\n        OF \\<open>p + q \\<le> \\<^bold>|w\\<^bold>|\\<close>, unfolded comm_root[of \"take p w\" \"take q w\"]]"], ["proof (prove)\nusing this:\n  \\<exists>t. take p w \\<in> t* \\<and> take q w \\<in> t*\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>take p w \\<in> t*; take q w \\<in> t*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  take p w \\<in> t*\n  take q w \\<in> t*\n\ngoal (1 subgoal):\n 1. periodN w (gcd p q)", "hence \"w \\<le>p t\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  take p w \\<in> t*\n  take q w \\<in> t*\n\ngoal (1 subgoal):\n 1. w \\<le>p t\\<^sup>\\<omega>", "using \\<open>periodN w p\\<close> periodN_def per_root_trans"], ["proof (prove)\nusing this:\n  take p w \\<in> t*\n  take q w \\<in> t*\n  periodN w p\n  periodN ?w ?n = ?w \\<le>p take ?n ?w\\<^sup>\\<omega>\n  \\<lbrakk>?w \\<le>p ?u\\<^sup>\\<omega>; ?u \\<in> ?t*\\<rbrakk>\n  \\<Longrightarrow> ?w \\<le>p ?t\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. w \\<le>p t\\<^sup>\\<omega>", "by blast"], ["proof (state)\nthis:\n  w \\<le>p t\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. periodN w (gcd p q)", "have \"periodN w \\<^bold>|t\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN w \\<^bold>|t\\<^bold>|", "using  root_periodN[OF  per_nemp[OF \\<open>periodN w p\\<close>] \\<open>w \\<le>p t\\<^sup>\\<omega>\\<close>]"], ["proof (prove)\nusing this:\n  periodN w \\<^bold>|t\\<^bold>|\n\ngoal (1 subgoal):\n 1. periodN w \\<^bold>|t\\<^bold>|", "."], ["proof (state)\nthis:\n  periodN w \\<^bold>|t\\<^bold>|\n\ngoal (1 subgoal):\n 1. periodN w (gcd p q)", "have \"\\<^bold>|t\\<^bold>| dvd (gcd p q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|t\\<^bold>| dvd gcd p q", "using gcd_nat.boundedI[OF root_len_dvd[OF \\<open>take p w \\<in> t*\\<close>] root_len_dvd[OF \\<open>take q w \\<in> t*\\<close>]]"], ["proof (prove)\nusing this:\n  \\<^bold>|t\\<^bold>| dvd\n  gcd \\<^bold>|take p w\\<^bold>| \\<^bold>|take q w\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<^bold>|t\\<^bold>| dvd gcd p q", "unfolding take_len[OF add_leD1[OF \\<open>p + q \\<le> \\<^bold>|w\\<^bold>|\\<close>]] take_len[OF add_leD2[OF \\<open>p + q \\<le> \\<^bold>|w\\<^bold>|\\<close>]]"], ["proof (prove)\nusing this:\n  \\<^bold>|t\\<^bold>| dvd gcd p q\n\ngoal (1 subgoal):\n 1. \\<^bold>|t\\<^bold>| dvd gcd p q", "."], ["proof (state)\nthis:\n  \\<^bold>|t\\<^bold>| dvd gcd p q\n\ngoal (1 subgoal):\n 1. periodN w (gcd p q)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<^bold>|t\\<^bold>| dvd gcd p q\n\ngoal (1 subgoal):\n 1. periodN w (gcd p q)", "using  per_mult[OF \\<open>periodN w \\<^bold>|t\\<^bold>|\\<close>, of \"gcd p q div \\<^bold>|t\\<^bold>|\", unfolded dvd_div_mult_self[OF \\<open>\\<^bold>|t\\<^bold>| dvd (gcd p q)\\<close>]]\n      dvd_div_mult_self[OF \\<open>\\<^bold>|t\\<^bold>| dvd (gcd p q)\\<close>]\n      gcd_eq_0_iff[of p q] mult_zero_left[of \"\\<^bold>|t\\<^bold>|\"] periodN_D2[OF \\<open>periodN w p\\<close>]"], ["proof (prove)\nusing this:\n  \\<^bold>|t\\<^bold>| dvd gcd p q\n  gcd p q div \\<^bold>|t\\<^bold>| \\<noteq> 0 \\<Longrightarrow>\n  periodN w (gcd p q)\n  gcd p q div \\<^bold>|t\\<^bold>| * \\<^bold>|t\\<^bold>| = gcd p q\n  (gcd p q = 0) = (p = 0 \\<and> q = 0)\n  0 * \\<^bold>|t\\<^bold>| = 0\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. periodN w (gcd p q)", "by argo"], ["proof (state)\nthis:\n  periodN w (gcd p q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma index_mod_per_root: assumes \"r \\<noteq> \\<epsilon>\" and i: \"\\<forall> i < \\<^bold>|w\\<^bold>|. w!i = r!(i mod \\<^bold>|r\\<^bold>|)\" shows  \"w \\<le>p r\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<le>p r\\<^sup>\\<omega>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. w \\<le>p r\\<^sup>\\<omega>", "have \"i < \\<^bold>|w\\<^bold>| \\<Longrightarrow> (r \\<cdot> w) ! i = r ! (i mod \\<^bold>|r\\<^bold>|)\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. i < \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n    (r \\<cdot> w) ! i = r ! (i mod \\<^bold>|r\\<^bold>|)", "by (simp add: i mod_if nth_append)"], ["proof (state)\nthis:\n  ?i < \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n  (r \\<cdot> w) ! ?i = r ! (?i mod \\<^bold>|r\\<^bold>|)\n\ngoal (1 subgoal):\n 1. w \\<le>p r\\<^sup>\\<omega>", "hence \"w \\<le>p r \\<cdot> w\""], ["proof (prove)\nusing this:\n  ?i < \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n  (r \\<cdot> w) ! ?i = r ! (?i mod \\<^bold>|r\\<^bold>|)\n\ngoal (1 subgoal):\n 1. w \\<le>p r \\<cdot> w", "using index_pref[of w \"r \\<cdot> w\"] i"], ["proof (prove)\nusing this:\n  ?i < \\<^bold>|w\\<^bold>| \\<Longrightarrow>\n  (r \\<cdot> w) ! ?i = r ! (?i mod \\<^bold>|r\\<^bold>|)\n  \\<lbrakk>\\<^bold>|w\\<^bold>| \\<le> \\<^bold>|r \\<cdot> w\\<^bold>|;\n   \\<forall>i<\\<^bold>|w\\<^bold>|. w ! i = (r \\<cdot> w) ! i\\<rbrakk>\n  \\<Longrightarrow> w \\<le>p r \\<cdot> w\n  \\<forall>i<\\<^bold>|w\\<^bold>|. w ! i = r ! (i mod \\<^bold>|r\\<^bold>|)\n\ngoal (1 subgoal):\n 1. w \\<le>p r \\<cdot> w", "by simp"], ["proof (state)\nthis:\n  w \\<le>p r \\<cdot> w\n\ngoal (1 subgoal):\n 1. w \\<le>p r\\<^sup>\\<omega>", "thus ?thesis"], ["proof (prove)\nusing this:\n  w \\<le>p r \\<cdot> w\n\ngoal (1 subgoal):\n 1. w \\<le>p r\\<^sup>\\<omega>", "unfolding period_root_def"], ["proof (prove)\nusing this:\n  w \\<le>p r \\<cdot> w\n\ngoal (1 subgoal):\n 1. w \\<le>p r \\<cdot> w \\<and> r \\<noteq> \\<epsilon>", "using \\<open>r \\<noteq> \\<epsilon>\\<close>"], ["proof (prove)\nusing this:\n  w \\<le>p r \\<cdot> w\n  r \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. w \\<le>p r \\<cdot> w \\<and> r \\<noteq> \\<epsilon>", "by auto"], ["proof (state)\nthis:\n  w \\<le>p r\\<^sup>\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma index_pref_pow_mod: \"w \\<le>p r\\<^sup>@k \\<Longrightarrow> i < \\<^bold>|w\\<^bold>| \\<Longrightarrow>  w!i = r!(i mod \\<^bold>|r\\<^bold>| )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le>p r \\<^sup>@ k; i < \\<^bold>|w\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> w ! i = r ! (i mod \\<^bold>|r\\<^bold>|)", "using  index_pow_mod[of i r k] less_le_trans[of i \"\\<^bold>|w\\<^bold>|\" \"\\<^bold>|r\\<^sup>@k\\<^bold>|\"] prefix_length_le[of w \"r\\<^sup>@k\"] pref_index[of w \"r\\<^sup>@k\" i]"], ["proof (prove)\nusing this:\n  i < \\<^bold>|r \\<^sup>@ k\\<^bold>| \\<Longrightarrow>\n  (r \\<^sup>@ k) ! i = r ! (i mod \\<^bold>|r\\<^bold>|)\n  \\<lbrakk>i < \\<^bold>|w\\<^bold>|;\n   \\<^bold>|w\\<^bold>| \\<le> \\<^bold>|r \\<^sup>@ k\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> i < \\<^bold>|r \\<^sup>@ k\\<^bold>|\n  w \\<le>p r \\<^sup>@ k \\<Longrightarrow>\n  \\<^bold>|w\\<^bold>| \\<le> \\<^bold>|r \\<^sup>@ k\\<^bold>|\n  \\<lbrakk>w \\<le>p r \\<^sup>@ k; i < \\<^bold>|w\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> w ! i = (r \\<^sup>@ k) ! i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le>p r \\<^sup>@ k; i < \\<^bold>|w\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> w ! i = r ! (i mod \\<^bold>|r\\<^bold>|)", "by argo"], ["", "lemma index_per_root_mod: \"w \\<le>p r\\<^sup>\\<omega> \\<Longrightarrow> i < \\<^bold>|w\\<^bold>| \\<Longrightarrow>  w!i = r!(i mod \\<^bold>|r\\<^bold>|)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le>p r\\<^sup>\\<omega>; i < \\<^bold>|w\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> w ! i = r ! (i mod \\<^bold>|r\\<^bold>|)", "using index_pref_pow_mod[of w r _ i] per_pref[of w r ]"], ["proof (prove)\nusing this:\n  \\<lbrakk>w \\<le>p r \\<^sup>@ ?k; i < \\<^bold>|w\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> w ! i = r ! (i mod \\<^bold>|r\\<^bold>|)\n  w \\<le>p r\\<^sup>\\<omega> =\n  ((\\<exists>k. w \\<le>p r \\<^sup>@ k) \\<and> r \\<noteq> \\<epsilon>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le>p r\\<^sup>\\<omega>; i < \\<^bold>|w\\<^bold>|\\<rbrakk>\n    \\<Longrightarrow> w ! i = r ! (i mod \\<^bold>|r\\<^bold>|)", "by blast"], ["", "lemma root_divisor: assumes \"periodN w k\" and  \"k dvd \\<^bold>|w\\<^bold>|\" shows \"w \\<in> (take k w)*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> take k w*", "using rootI[of \"take k w\" \"(\\<^bold>|w\\<^bold>| div k)\"]"], ["proof (prove)\nusing this:\n  take k w \\<^sup>@ (\\<^bold>|w\\<^bold>| div k) \\<in> take k w*\n\ngoal (1 subgoal):\n 1. w \\<in> take k w*", "unfolding \n    take_several_pers[OF \\<open>periodN w k\\<close>, of \"\\<^bold>|w\\<^bold>| div k\", unfolded dvd_div_mult_self[OF \\<open>k dvd \\<^bold>|w\\<^bold>|\\<close>] take_self, OF , OF order_refl]"], ["proof (prove)\nusing this:\n  w \\<in> take k w*\n\ngoal (1 subgoal):\n 1. w \\<in> take k w*", "."], ["", "lemma per_pref': assumes \"u \\<noteq> \\<epsilon>\" and \"periodN v k\" and  \"u \\<le>p v\" shows \"periodN u k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN u k", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. periodN u k", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. periodN u k", "assume \"k \\<le> \\<^bold>|u\\<^bold>|\""], ["proof (state)\nthis:\n  k \\<le> \\<^bold>|u\\<^bold>|\n\ngoal (1 subgoal):\n 1. periodN u k", "have \"take k v = take k u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take k v = take k u", "using  pref_share_take[OF \\<open>u \\<le>p v\\<close> \\<open>k \\<le> \\<^bold>|u\\<^bold>|\\<close>]"], ["proof (prove)\nusing this:\n  take k u = take k v\n\ngoal (1 subgoal):\n 1. take k v = take k u", "by auto"], ["proof (state)\nthis:\n  take k v = take k u\n\ngoal (1 subgoal):\n 1. periodN u k", "hence \"take k v \\<noteq> \\<epsilon>\""], ["proof (prove)\nusing this:\n  take k v = take k u\n\ngoal (1 subgoal):\n 1. take k v \\<noteq> \\<epsilon>", "using \\<open>periodN v k\\<close>"], ["proof (prove)\nusing this:\n  take k v = take k u\n  periodN v k\n\ngoal (1 subgoal):\n 1. take k v \\<noteq> \\<epsilon>", "by auto"], ["proof (state)\nthis:\n  take k v \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. periodN u k", "hence \"take k u \\<noteq> \\<epsilon>\""], ["proof (prove)\nusing this:\n  take k v \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. take k u \\<noteq> \\<epsilon>", "by (simp add: \\<open>take k v = take k u\\<close>)"], ["proof (state)\nthis:\n  take k u \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. periodN u k", "have \"u \\<le>p take k u \\<cdot> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p take k u \\<cdot> v", "using  \\<open>periodN v k\\<close>"], ["proof (prove)\nusing this:\n  periodN v k\n\ngoal (1 subgoal):\n 1. u \\<le>p take k u \\<cdot> v", "unfolding periodN_def period_root_def \\<open>take k v = take k u\\<close>"], ["proof (prove)\nusing this:\n  v \\<le>p take k u \\<cdot> v \\<and> take k u \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. u \\<le>p take k u \\<cdot> v", "using pref_trans[OF \\<open>u \\<le>p v\\<close>, of \"take k u \\<cdot> v\"]"], ["proof (prove)\nusing this:\n  v \\<le>p take k u \\<cdot> v \\<and> take k u \\<noteq> \\<epsilon>\n  v \\<le>p take k u \\<cdot> v \\<Longrightarrow> u \\<le>p take k u \\<cdot> v\n\ngoal (1 subgoal):\n 1. u \\<le>p take k u \\<cdot> v", "by blast"], ["proof (state)\nthis:\n  u \\<le>p take k u \\<cdot> v\n\ngoal (1 subgoal):\n 1. periodN u k", "hence \"u \\<le>p take k u \\<cdot> u\""], ["proof (prove)\nusing this:\n  u \\<le>p take k u \\<cdot> v\n\ngoal (1 subgoal):\n 1. u \\<le>p take k u \\<cdot> u", "using \\<open>u \\<le>p v\\<close> pref_prod_pref"], ["proof (prove)\nusing this:\n  u \\<le>p take k u \\<cdot> v\n  u \\<le>p v\n  \\<lbrakk>?u \\<le>p ?z \\<cdot> ?w; ?u \\<le>p ?w\\<rbrakk>\n  \\<Longrightarrow> ?u \\<le>p ?z \\<cdot> ?u\n\ngoal (1 subgoal):\n 1. u \\<le>p take k u \\<cdot> u", "by blast"], ["proof (state)\nthis:\n  u \\<le>p take k u \\<cdot> u\n\ngoal (1 subgoal):\n 1. periodN u k", "hence ?thesis"], ["proof (prove)\nusing this:\n  u \\<le>p take k u \\<cdot> u\n\ngoal (1 subgoal):\n 1. periodN u k", "using \\<open>take k u \\<noteq> \\<epsilon>\\<close> periodN_def"], ["proof (prove)\nusing this:\n  u \\<le>p take k u \\<cdot> u\n  take k u \\<noteq> \\<epsilon>\n  periodN ?w ?n = ?w \\<le>p take ?n ?w\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. periodN u k", "by fast"], ["proof (state)\nthis:\n  periodN u k\n\ngoal (1 subgoal):\n 1. periodN u k", "}"], ["proof (state)\nthis:\n  k \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> periodN u k\n\ngoal (1 subgoal):\n 1. periodN u k", "thus ?thesis"], ["proof (prove)\nusing this:\n  k \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> periodN u k\n\ngoal (1 subgoal):\n 1. periodN u k", "using \\<open>u \\<noteq> \\<epsilon>\\<close> all_long_pers nat_le_linear"], ["proof (prove)\nusing this:\n  k \\<le> \\<^bold>|u\\<^bold>| \\<Longrightarrow> periodN u k\n  u \\<noteq> \\<epsilon>\n  \\<lbrakk>?w \\<noteq> \\<epsilon>; \\<^bold>|?w\\<^bold>| \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> periodN ?w ?n\n  ?m \\<le> ?n \\<or> ?n \\<le> ?m\n\ngoal (1 subgoal):\n 1. periodN u k", "by blast"], ["proof (state)\nthis:\n  periodN u k\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Period: overview\""], ["", "notepad\nbegin"], ["proof (state)", "fix w r::\"'a list\""], ["proof (state)", "fix n::nat"], ["proof (state)", "assume \"w \\<noteq> \\<epsilon>\" \"r \\<noteq> \\<epsilon>\" \"n > 0\""], ["proof (state)\nthis:\n  w \\<noteq> \\<epsilon>\n  r \\<noteq> \\<epsilon>\n  0 < n", "have \"\\<not> w \\<le>p \\<epsilon>\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> w \\<le>p \\<epsilon>\\<^sup>\\<omega>", "by simp"], ["proof (state)\nthis:\n  \\<not> w \\<le>p \\<epsilon>\\<^sup>\\<omega>", "have \"\\<not> \\<epsilon> \\<le>p \\<epsilon>\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> \\<epsilon> \\<le>p \\<epsilon>\\<^sup>\\<omega>", "by simp"], ["proof (state)\nthis:\n  \\<not> \\<epsilon> \\<le>p \\<epsilon>\\<^sup>\\<omega>", "have \"\\<epsilon> \\<le>p r\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<epsilon> \\<le>p r\\<^sup>\\<omega>", "by (simp add: \\<open>r \\<noteq> \\<epsilon>\\<close>)"], ["proof (state)\nthis:\n  \\<epsilon> \\<le>p r\\<^sup>\\<omega>", "have \"\\<not> periodN w 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> periodN w 0", "by simp"], ["proof (state)\nthis:\n  \\<not> periodN w 0", "have \"\\<not> periodN \\<epsilon> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> periodN \\<epsilon> 0", "by simp"], ["proof (state)\nthis:\n  \\<not> periodN \\<epsilon> 0", "have \"\\<not> periodN \\<epsilon> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> periodN \\<epsilon> n", "by simp"], ["proof (state)\nthis:\n  \\<not> periodN \\<epsilon> n", "end"], ["", "subsection \\<open>Singleton and its power\\<close>"], ["", "lemma concat_len_one: assumes \"\\<^bold>|us\\<^bold>| = 1\" shows \"concat us = hd us\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concat us = hd us", "using concat_sing[OF sing_word[OF \\<open>\\<^bold>|us\\<^bold>| = 1\\<close>, symmetric]]"], ["proof (prove)\nusing this:\n  concat us = hd us\n\ngoal (1 subgoal):\n 1. concat us = hd us", "."], ["", "lemma sing_pow_hd_tl: \"c # w \\<in> [a]* \\<longleftrightarrow> c = a \\<and> w \\<in> [a]*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c # w \\<in> [a]* = (c = a \\<and> w \\<in> [a]*)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. c # w \\<in> [a]* \\<Longrightarrow> c = a \\<and> w \\<in> [a]*\n 2. c = a \\<and> w \\<in> [a]* \\<Longrightarrow> c # w \\<in> [a]*", "assume \"c = a \\<and> w \\<in> [a]*\""], ["proof (state)\nthis:\n  c = a \\<and> w \\<in> [a]*\n\ngoal (2 subgoals):\n 1. c # w \\<in> [a]* \\<Longrightarrow> c = a \\<and> w \\<in> [a]*\n 2. c = a \\<and> w \\<in> [a]* \\<Longrightarrow> c # w \\<in> [a]*", "thus \"c # w \\<in> [a]*\""], ["proof (prove)\nusing this:\n  c = a \\<and> w \\<in> [a]*\n\ngoal (1 subgoal):\n 1. c # w \\<in> [a]*", "unfolding  hd_word[of _ w]"], ["proof (prove)\nusing this:\n  c = a \\<and> w \\<in> [a]*\n\ngoal (1 subgoal):\n 1. [c] \\<cdot> w \\<in> [a]*", "using add_root[of \"[c]\" w]"], ["proof (prove)\nusing this:\n  c = a \\<and> w \\<in> [a]*\n  [c] \\<cdot> w \\<in> [c]* = w \\<in> [c]*\n\ngoal (1 subgoal):\n 1. [c] \\<cdot> w \\<in> [a]*", "by simp"], ["proof (state)\nthis:\n  c # w \\<in> [a]*\n\ngoal (1 subgoal):\n 1. c # w \\<in> [a]* \\<Longrightarrow> c = a \\<and> w \\<in> [a]*", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c # w \\<in> [a]* \\<Longrightarrow> c = a \\<and> w \\<in> [a]*", "assume \"c # w \\<in> [a]*\""], ["proof (state)\nthis:\n  c # w \\<in> [a]*\n\ngoal (1 subgoal):\n 1. c # w \\<in> [a]* \\<Longrightarrow> c = a \\<and> w \\<in> [a]*", "then"], ["proof (chain)\npicking this:\n  c # w \\<in> [a]*", "obtain k where \"[a]\\<^sup>@k = c # w\""], ["proof (prove)\nusing this:\n  c # w \\<in> [a]*\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        [a] \\<^sup>@ k = c # w \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding root_def"], ["proof (prove)\nusing this:\n  \\<exists>k. [a] \\<^sup>@ k = c # w\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        [a] \\<^sup>@ k = c # w \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  [a] \\<^sup>@ k = c # w\n\ngoal (1 subgoal):\n 1. c # w \\<in> [a]* \\<Longrightarrow> c = a \\<and> w \\<in> [a]*", "thus \"c = a \\<and> w \\<in> [a]*\""], ["proof (prove)\nusing this:\n  [a] \\<^sup>@ k = c # w\n\ngoal (1 subgoal):\n 1. c = a \\<and> w \\<in> [a]*", "proof (cases \"k = 0\", simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>[a] \\<^sup>@ k = c # w; k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> c = a \\<and> w \\<in> [a]*", "assume \"[a] \\<^sup>@ k = c # w\" and \"k \\<noteq> 0\""], ["proof (state)\nthis:\n  [a] \\<^sup>@ k = c # w\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>[a] \\<^sup>@ k = c # w; k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> c = a \\<and> w \\<in> [a]*", "from eqd_equal[of \"[a]\", OF this(1)[unfolded hd_word[of _ w] pop_pow_one[OF \\<open>k \\<noteq> 0\\<close>]]]"], ["proof (chain)\npicking this:\n  \\<^bold>|[a]\\<^bold>| = \\<^bold>|[c]\\<^bold>| \\<Longrightarrow>\n  [a] = [c] \\<and> [a] \\<^sup>@ (k - 1) = w", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<^bold>|[a]\\<^bold>| = \\<^bold>|[c]\\<^bold>| \\<Longrightarrow>\n  [a] = [c] \\<and> [a] \\<^sup>@ (k - 1) = w\n\ngoal (1 subgoal):\n 1. c = a \\<and> w \\<in> [a]*", "unfolding root_def"], ["proof (prove)\nusing this:\n  \\<^bold>|[a]\\<^bold>| = \\<^bold>|[c]\\<^bold>| \\<Longrightarrow>\n  [a] = [c] \\<and> [a] \\<^sup>@ (k - 1) = w\n\ngoal (1 subgoal):\n 1. c = a \\<and> (\\<exists>k. [a] \\<^sup>@ k = w)", "by auto"], ["proof (state)\nthis:\n  c = a \\<and> w \\<in> [a]*\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c = a \\<and> w \\<in> [a]*\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pref_sing_power: assumes \"w \\<le>p [a]\\<^sup>@m\" shows \"w = [a]\\<^sup>@(\\<^bold>|w\\<^bold>|)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w = [a] \\<^sup>@ \\<^bold>|w\\<^bold>|", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. w = [a] \\<^sup>@ \\<^bold>|w\\<^bold>|", "have  \"[a]\\<^sup>@m = [a]\\<^sup>@(\\<^bold>|w\\<^bold>|)\\<cdot>[a]\\<^sup>@(m-\\<^bold>|w\\<^bold>|)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a] \\<^sup>@ m =\n    [a] \\<^sup>@ \\<^bold>|w\\<^bold>| \\<cdot>\n    [a] \\<^sup>@ (m - \\<^bold>|w\\<^bold>|)", "using pop_pow[OF prefix_length_le[OF assms, unfolded sing_pow_len], of \"[a]\", symmetric]"], ["proof (prove)\nusing this:\n  [a] \\<^sup>@ m =\n  [a] \\<^sup>@ \\<^bold>|w\\<^bold>| \\<cdot>\n  [a] \\<^sup>@ (m - \\<^bold>|w\\<^bold>|)\n\ngoal (1 subgoal):\n 1. [a] \\<^sup>@ m =\n    [a] \\<^sup>@ \\<^bold>|w\\<^bold>| \\<cdot>\n    [a] \\<^sup>@ (m - \\<^bold>|w\\<^bold>|)", "."], ["proof (state)\nthis:\n  [a] \\<^sup>@ m =\n  [a] \\<^sup>@ \\<^bold>|w\\<^bold>| \\<cdot>\n  [a] \\<^sup>@ (m - \\<^bold>|w\\<^bold>|)\n\ngoal (1 subgoal):\n 1. w = [a] \\<^sup>@ \\<^bold>|w\\<^bold>|", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. w = [a] \\<^sup>@ \\<^bold>|w\\<^bold>|", "using  conjunct1[OF eqd_equal[of w \"w\\<inverse>\\<^sup>>[a]\\<^sup>@m\" \"[a]\\<^sup>@(\\<^bold>|w\\<^bold>|)\"\"[a]\\<^sup>@(m-\\<^bold>|w\\<^bold>|)\", \n          unfolded lq_pref[OF assms] sing_pow_len, \n          OF \\<open>[a]\\<^sup>@m = [a]\\<^sup>@(\\<^bold>|w\\<^bold>|)\\<cdot>[a]\\<^sup>@(m-\\<^bold>|w\\<^bold>|)\\<close> refl]]"], ["proof (prove)\nusing this:\n  w = [a] \\<^sup>@ \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. w = [a] \\<^sup>@ \\<^bold>|w\\<^bold>|", "."], ["proof (state)\nthis:\n  w = [a] \\<^sup>@ \\<^bold>|w\\<^bold>|\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sing_pow_palindrom: assumes \"w = [a]\\<^sup>@k\" shows \"rev w = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev w = w", "using rev_pow[of \"[a]\" \"\\<^bold>|w\\<^bold>|\", unfolded rev_sing]"], ["proof (prove)\nusing this:\n  rev ([a] \\<^sup>@ \\<^bold>|w\\<^bold>|) = [a] \\<^sup>@ \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. rev w = w", "unfolding pref_sing_power[of w a k, unfolded assms[unfolded root_def, symmetric], OF self_pref, symmetric]"], ["proof (prove)\nusing this:\n  rev w = w\n\ngoal (1 subgoal):\n 1. rev w = w", "."], ["", "lemma suf_sing_power: assumes \"w \\<le>s [a]\\<^sup>@m\" shows \"w \\<in> [a]*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> [a]*", "using sing_pow_palindrom[of \"rev w\" a \"\\<^bold>|rev w\\<^bold>|\", unfolded rev_rev_ident]\n    pref_sing_power[of \"rev w\" a m, OF \\<open>w \\<le>s [a]\\<^sup>@m\\<close>[unfolded suffix_to_prefix rev_pow rev_rev_ident rev_sing]] \n    rootI[of \"[a]\" \"\\<^bold>|rev w\\<^bold>|\"]"], ["proof (prove)\nusing this:\n  rev w = [a] \\<^sup>@ \\<^bold>|rev w\\<^bold>| \\<Longrightarrow> w = rev w\n  rev w = [a] \\<^sup>@ \\<^bold>|rev w\\<^bold>|\n  [a] \\<^sup>@ \\<^bold>|rev w\\<^bold>| \\<in> [a]*\n\ngoal (1 subgoal):\n 1. w \\<in> [a]*", "by auto"], ["", "lemma sing_fac_pow: assumes \"w \\<in> [a]*\" and  \"v \\<le>f w\" shows \"v \\<in> [a]*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> [a]*", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<in> [a]*", "obtain k where \"w = [a]\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k. w = [a] \\<^sup>@ k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>w \\<in> [a]*\\<close>[unfolded root_def]"], ["proof (prove)\nusing this:\n  \\<exists>k. [a] \\<^sup>@ k = w\n\ngoal (1 subgoal):\n 1. (\\<And>k. w = [a] \\<^sup>@ k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  w = [a] \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. v \\<in> [a]*", "obtain p where \"p \\<le>p w\" and \"v \\<le>s p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p \\<le>p w; v \\<le>s p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using fac_pref_suf[OF \\<open> v \\<le>f w\\<close>]"], ["proof (prove)\nusing this:\n  \\<exists>p. p \\<le>p w \\<and> v \\<le>s p\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p \\<le>p w; v \\<le>s p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  p \\<le>p w\n  v \\<le>s p\n\ngoal (1 subgoal):\n 1. v \\<in> [a]*", "hence \"v \\<le>s [a]\\<^sup>@ \\<^bold>|p\\<^bold>|\""], ["proof (prove)\nusing this:\n  p \\<le>p w\n  v \\<le>s p\n\ngoal (1 subgoal):\n 1. v \\<le>s [a] \\<^sup>@ \\<^bold>|p\\<^bold>|", "using pref_sing_power[OF \\<open>p \\<le>p w\\<close>[unfolded \\<open>w = [a]\\<^sup>@k\\<close>]]"], ["proof (prove)\nusing this:\n  p \\<le>p w\n  v \\<le>s p\n  p = [a] \\<^sup>@ \\<^bold>|p\\<^bold>|\n\ngoal (1 subgoal):\n 1. v \\<le>s [a] \\<^sup>@ \\<^bold>|p\\<^bold>|", "by argo"], ["proof (state)\nthis:\n  v \\<le>s [a] \\<^sup>@ \\<^bold>|p\\<^bold>|\n\ngoal (1 subgoal):\n 1. v \\<in> [a]*", "from suf_sing_power[OF this]"], ["proof (chain)\npicking this:\n  v \\<in> [a]*", "show ?thesis"], ["proof (prove)\nusing this:\n  v \\<in> [a]*\n\ngoal (1 subgoal):\n 1. v \\<in> [a]*", "."], ["proof (state)\nthis:\n  v \\<in> [a]*\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sing_pow_fac': assumes \"a \\<noteq> b\" and  \"w \\<in> [a]*\" shows \"\\<not> ([b] \\<le>f w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> [b] \\<le>f w", "using sing_fac_pow[OF \\<open> w \\<in> [a]*\\<close>, of \"[b]\"]"], ["proof (prove)\nusing this:\n  [b] \\<le>f w \\<Longrightarrow> [b] \\<in> [a]*\n\ngoal (1 subgoal):\n 1. \\<not> [b] \\<le>f w", "unfolding sing_pow_hd_tl[of b \\<epsilon>]"], ["proof (prove)\nusing this:\n  [b] \\<le>f w \\<Longrightarrow> b = a \\<and> \\<epsilon> \\<in> [a]*\n\ngoal (1 subgoal):\n 1. \\<not> [b] \\<le>f w", "using \\<open>a \\<noteq> b\\<close>"], ["proof (prove)\nusing this:\n  [b] \\<le>f w \\<Longrightarrow> b = a \\<and> \\<epsilon> \\<in> [a]*\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<not> [b] \\<le>f w", "by auto"], ["", "lemma all_set_sing_pow: \"(\\<forall> b. b \\<in> set w \\<longrightarrow> b = a) \\<longleftrightarrow> w \\<in> [a]*\" (is \"?All \\<longleftrightarrow> _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>b. b \\<in> set w \\<longrightarrow> b = a) = w \\<in> [a]*", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>b. b \\<in> set w \\<longrightarrow> b = a \\<Longrightarrow>\n    w \\<in> [a]*\n 2. w \\<in> [a]* \\<Longrightarrow>\n    \\<forall>b. b \\<in> set w \\<longrightarrow> b = a", "assume ?All"], ["proof (state)\nthis:\n  \\<forall>b. b \\<in> set w \\<longrightarrow> b = a\n\ngoal (2 subgoals):\n 1. \\<forall>b. b \\<in> set w \\<longrightarrow> b = a \\<Longrightarrow>\n    w \\<in> [a]*\n 2. w \\<in> [a]* \\<Longrightarrow>\n    \\<forall>b. b \\<in> set w \\<longrightarrow> b = a", "then"], ["proof (chain)\npicking this:\n  \\<forall>b. b \\<in> set w \\<longrightarrow> b = a", "show \"w \\<in> [a]*\""], ["proof (prove)\nusing this:\n  \\<forall>b. b \\<in> set w \\<longrightarrow> b = a\n\ngoal (1 subgoal):\n 1. w \\<in> [a]*", "proof (induct w, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa w.\n       \\<lbrakk>\\<forall>b.\n                   b \\<in> set w \\<longrightarrow> b = a \\<Longrightarrow>\n                w \\<in> [a]*;\n        \\<forall>b. b \\<in> set (aa # w) \\<longrightarrow> b = a\\<rbrakk>\n       \\<Longrightarrow> aa # w \\<in> [a]*", "case (Cons c w)"], ["proof (state)\nthis:\n  \\<forall>b. b \\<in> set w \\<longrightarrow> b = a \\<Longrightarrow>\n  w \\<in> [a]*\n  \\<forall>b. b \\<in> set (c # w) \\<longrightarrow> b = a\n\ngoal (1 subgoal):\n 1. \\<And>aa w.\n       \\<lbrakk>\\<forall>b.\n                   b \\<in> set w \\<longrightarrow> b = a \\<Longrightarrow>\n                w \\<in> [a]*;\n        \\<forall>b. b \\<in> set (aa # w) \\<longrightarrow> b = a\\<rbrakk>\n       \\<Longrightarrow> aa # w \\<in> [a]*", "then"], ["proof (chain)\npicking this:\n  \\<forall>b. b \\<in> set w \\<longrightarrow> b = a \\<Longrightarrow>\n  w \\<in> [a]*\n  \\<forall>b. b \\<in> set (c # w) \\<longrightarrow> b = a", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>b. b \\<in> set w \\<longrightarrow> b = a \\<Longrightarrow>\n  w \\<in> [a]*\n  \\<forall>b. b \\<in> set (c # w) \\<longrightarrow> b = a\n\ngoal (1 subgoal):\n 1. c # w \\<in> [a]*", "by (simp add: sing_pow_hd_tl)"], ["proof (state)\nthis:\n  c # w \\<in> [a]*\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  w \\<in> [a]*\n\ngoal (1 subgoal):\n 1. w \\<in> [a]* \\<Longrightarrow>\n    \\<forall>b. b \\<in> set w \\<longrightarrow> b = a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. w \\<in> [a]* \\<Longrightarrow>\n    \\<forall>b. b \\<in> set w \\<longrightarrow> b = a", "assume \"w \\<in> [a]*\""], ["proof (state)\nthis:\n  w \\<in> [a]*\n\ngoal (1 subgoal):\n 1. w \\<in> [a]* \\<Longrightarrow>\n    \\<forall>b. b \\<in> set w \\<longrightarrow> b = a", "then"], ["proof (chain)\npicking this:\n  w \\<in> [a]*", "show ?All"], ["proof (prove)\nusing this:\n  w \\<in> [a]*\n\ngoal (1 subgoal):\n 1. \\<forall>b. b \\<in> set w \\<longrightarrow> b = a", "proof (induct w, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa w.\n       \\<lbrakk>w \\<in> [a]* \\<Longrightarrow>\n                \\<forall>b. b \\<in> set w \\<longrightarrow> b = a;\n        aa # w \\<in> [a]*\\<rbrakk>\n       \\<Longrightarrow> \\<forall>b.\n                            b \\<in> set (aa # w) \\<longrightarrow> b = a", "case (Cons c w)"], ["proof (state)\nthis:\n  w \\<in> [a]* \\<Longrightarrow>\n  \\<forall>b. b \\<in> set w \\<longrightarrow> b = a\n  c # w \\<in> [a]*\n\ngoal (1 subgoal):\n 1. \\<And>aa w.\n       \\<lbrakk>w \\<in> [a]* \\<Longrightarrow>\n                \\<forall>b. b \\<in> set w \\<longrightarrow> b = a;\n        aa # w \\<in> [a]*\\<rbrakk>\n       \\<Longrightarrow> \\<forall>b.\n                            b \\<in> set (aa # w) \\<longrightarrow> b = a", "then"], ["proof (chain)\npicking this:\n  w \\<in> [a]* \\<Longrightarrow>\n  \\<forall>b. b \\<in> set w \\<longrightarrow> b = a\n  c # w \\<in> [a]*", "show ?case"], ["proof (prove)\nusing this:\n  w \\<in> [a]* \\<Longrightarrow>\n  \\<forall>b. b \\<in> set w \\<longrightarrow> b = a\n  c # w \\<in> [a]*\n\ngoal (1 subgoal):\n 1. \\<forall>b. b \\<in> set (c # w) \\<longrightarrow> b = a", "unfolding sing_pow_hd_tl"], ["proof (prove)\nusing this:\n  w \\<in> [a]* \\<Longrightarrow>\n  \\<forall>b. b \\<in> set w \\<longrightarrow> b = a\n  c = a \\<and> w \\<in> [a]*\n\ngoal (1 subgoal):\n 1. \\<forall>b. b \\<in> set (c # w) \\<longrightarrow> b = a", "by simp"], ["proof (state)\nthis:\n  \\<forall>b. b \\<in> set (c # w) \\<longrightarrow> b = a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>b. b \\<in> set w \\<longrightarrow> b = a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sing_pow_set: \"u \\<in> [a]* \\<Longrightarrow> u \\<noteq> \\<epsilon> \\<Longrightarrow> set u = {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [a]*; u \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> set u = {a}", "unfolding all_set_sing_pow[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>b. b \\<in> set u \\<longrightarrow> b = a;\n     u \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> set u = {a}", "using hd_in_set[of u] is_singletonI'[unfolded is_singleton_the_elem, of \"set u\"]\n     singleton_iff[of a \"the_elem (set u)\"]"], ["proof (prove)\nusing this:\n  u \\<noteq> \\<epsilon> \\<Longrightarrow> hd u \\<in> set u\n  \\<lbrakk>set u \\<noteq> {};\n   \\<And>x y.\n      \\<lbrakk>x \\<in> set u; y \\<in> set u\\<rbrakk>\n      \\<Longrightarrow> x = y\\<rbrakk>\n  \\<Longrightarrow> set u = {the_elem (set u)}\n  (a \\<in> {the_elem (set u)}) = (a = the_elem (set u))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>b. b \\<in> set u \\<longrightarrow> b = a;\n     u \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> set u = {a}", "by auto"], ["", "lemma takeWhile_sing_root: \"takeWhile (\\<lambda> x. x = a) w \\<in> [a]*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. takeWhile (\\<lambda>x. x = a) w \\<in> [a]*", "unfolding all_set_sing_pow[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>b.\n       b \\<in> set (takeWhile (\\<lambda>x. x = a) w) \\<longrightarrow> b = a", "using set_takeWhileD[of _ \"\\<lambda> x. x = a\" w]"], ["proof (prove)\nusing this:\n  ?x \\<in> set (takeWhile (\\<lambda>x. x = a) w) \\<Longrightarrow>\n  ?x \\<in> set w \\<and> ?x = a\n\ngoal (1 subgoal):\n 1. \\<forall>b.\n       b \\<in> set (takeWhile (\\<lambda>x. x = a) w) \\<longrightarrow> b = a", "by blast"], ["", "lemma takeWhile_sing_pow: \"takeWhile (\\<lambda> x. x = a) w = w \\<longleftrightarrow> w = [a]\\<^sup>@\\<^bold>|w\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (takeWhile (\\<lambda>x. x = a) w = w) =\n    (w = [a] \\<^sup>@ \\<^bold>|w\\<^bold>|)", "by(induct w,  auto)"], ["", "lemma dropWhile_sing_pow: \"dropWhile (\\<lambda> x. x = a) w = \\<epsilon> \\<longleftrightarrow> w = [a]\\<^sup>@\\<^bold>|w\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dropWhile (\\<lambda>x. x = a) w = \\<epsilon>) =\n    (w = [a] \\<^sup>@ \\<^bold>|w\\<^bold>|)", "by(induct w,  auto)"], ["", "lemma distinct_letter_in: assumes \"\\<not> w \\<in> [a]*\" \n  obtains m b q where \"[a]\\<^sup>@m \\<cdot> [b] \\<cdot> q = w\" and \"b \\<noteq> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m b q.\n        \\<lbrakk>[a] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = w;\n         b \\<noteq> a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>m b q.\n        \\<lbrakk>[a] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = w;\n         b \\<noteq> a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"dropWhile (\\<lambda> x. x = a) w \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dropWhile (\\<lambda>x. x = a) w \\<noteq> \\<epsilon>", "unfolding dropWhile_sing_pow"], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<noteq> [a] \\<^sup>@ \\<^bold>|w\\<^bold>|", "using assms rootI[of \"[a]\" \"\\<^bold>|w\\<^bold>|\"]"], ["proof (prove)\nusing this:\n  \\<not> w \\<in> [a]*\n  [a] \\<^sup>@ \\<^bold>|w\\<^bold>| \\<in> [a]*\n\ngoal (1 subgoal):\n 1. w \\<noteq> [a] \\<^sup>@ \\<^bold>|w\\<^bold>|", "by auto"], ["proof (state)\nthis:\n  dropWhile (\\<lambda>x. x = a) w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. (\\<And>m b q.\n        \\<lbrakk>[a] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = w;\n         b \\<noteq> a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence eq: \"takeWhile (\\<lambda> x. x = a) w \\<cdot> [hd (dropWhile (\\<lambda> x. x = a) w)] \\<cdot> tl (dropWhile (\\<lambda> x. x = a) w) = w\""], ["proof (prove)\nusing this:\n  dropWhile (\\<lambda>x. x = a) w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. takeWhile (\\<lambda>x. x = a) w \\<cdot>\n    [hd (dropWhile (\\<lambda>x. x = a) w)] \\<cdot>\n    tl (dropWhile (\\<lambda>x. x = a) w) =\n    w", "by simp"], ["proof (state)\nthis:\n  takeWhile (\\<lambda>x. x = a) w \\<cdot>\n  [hd (dropWhile (\\<lambda>x. x = a) w)] \\<cdot>\n  tl (dropWhile (\\<lambda>x. x = a) w) =\n  w\n\ngoal (1 subgoal):\n 1. (\\<And>m b q.\n        \\<lbrakk>[a] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = w;\n         b \\<noteq> a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have root:\"takeWhile (\\<lambda> x. x = a) w \\<in> [a]*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. takeWhile (\\<lambda>x. x = a) w \\<in> [a]*", "by (simp add: takeWhile_sing_root)"], ["proof (state)\nthis:\n  takeWhile (\\<lambda>x. x = a) w \\<in> [a]*\n\ngoal (1 subgoal):\n 1. (\\<And>m b q.\n        \\<lbrakk>[a] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = w;\n         b \\<noteq> a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have  \"hd (dropWhile (\\<lambda> x. x = a) w) \\<noteq> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd (dropWhile (\\<lambda>x. x = a) w) \\<noteq> a", "using hd_dropWhile[OF \\<open>dropWhile (\\<lambda>x. x = a) w \\<noteq> \\<epsilon>\\<close>]"], ["proof (prove)\nusing this:\n  hd (dropWhile (\\<lambda>x. x = a) w) \\<noteq> a\n\ngoal (1 subgoal):\n 1. hd (dropWhile (\\<lambda>x. x = a) w) \\<noteq> a", "."], ["proof (state)\nthis:\n  hd (dropWhile (\\<lambda>x. x = a) w) \\<noteq> a\n\ngoal (1 subgoal):\n 1. (\\<And>m b q.\n        \\<lbrakk>[a] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = w;\n         b \\<noteq> a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from that[OF _  this]"], ["proof (chain)\npicking this:\n  [a] \\<^sup>@ ?m \\<cdot>\n  [hd (dropWhile (\\<lambda>x. x = a) w)] \\<cdot> ?q =\n  w \\<Longrightarrow>\n  thesis", "show thesis"], ["proof (prove)\nusing this:\n  [a] \\<^sup>@ ?m \\<cdot>\n  [hd (dropWhile (\\<lambda>x. x = a) w)] \\<cdot> ?q =\n  w \\<Longrightarrow>\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "using eq root"], ["proof (prove)\nusing this:\n  [a] \\<^sup>@ ?m \\<cdot>\n  [hd (dropWhile (\\<lambda>x. x = a) w)] \\<cdot> ?q =\n  w \\<Longrightarrow>\n  thesis\n  takeWhile (\\<lambda>x. x = a) w \\<cdot>\n  [hd (dropWhile (\\<lambda>x. x = a) w)] \\<cdot>\n  tl (dropWhile (\\<lambda>x. x = a) w) =\n  w\n  takeWhile (\\<lambda>x. x = a) w \\<in> [a]*\n\ngoal (1 subgoal):\n 1. thesis", "unfolding root_def"], ["proof (prove)\nusing this:\n  [a] \\<^sup>@ ?m \\<cdot>\n  [hd (dropWhile (\\<lambda>x. x = a) w)] \\<cdot> ?q =\n  w \\<Longrightarrow>\n  thesis\n  takeWhile (\\<lambda>x. x = a) w \\<cdot>\n  [hd (dropWhile (\\<lambda>x. x = a) w)] \\<cdot>\n  tl (dropWhile (\\<lambda>x. x = a) w) =\n  w\n  \\<exists>k. [a] \\<^sup>@ k = takeWhile (\\<lambda>x. x = a) w\n\ngoal (1 subgoal):\n 1. thesis", "by metis"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma distinct_letter_in_hd: assumes \"\\<not> w \\<in>  [hd w]*\"\n  obtains m b q where  \"[hd w]\\<^sup>@m \\<cdot> [b] \\<cdot> q = w\" and \"b \\<noteq> hd w\" and \"m \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m b q.\n        \\<lbrakk>[hd w] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = w;\n         b \\<noteq> hd w; m \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>m b q.\n        \\<lbrakk>[hd w] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = w;\n         b \\<noteq> hd w; m \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain m b q where a1: \"[hd w]\\<^sup>@m \\<cdot> [b] \\<cdot> q = w\" and a2: \"b \\<noteq> hd w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m b q.\n        \\<lbrakk>[hd w] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = w;\n         b \\<noteq> hd w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using distinct_letter_in[OF assms]"], ["proof (prove)\nusing this:\n  (\\<And>m b q.\n      \\<lbrakk>[hd w] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = w;\n       b \\<noteq> hd w\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>m b q.\n        \\<lbrakk>[hd w] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = w;\n         b \\<noteq> hd w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  [hd w] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = w\n  b \\<noteq> hd w\n\ngoal (1 subgoal):\n 1. (\\<And>m b q.\n        \\<lbrakk>[hd w] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = w;\n         b \\<noteq> hd w; m \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"m \\<noteq> 0\""], ["proof (prove)\nusing this:\n  [hd w] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = w\n  b \\<noteq> hd w\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0", "using power_eq_if[of \"[hd w]\" m] list.sel(1)"], ["proof (prove)\nusing this:\n  [hd w] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = w\n  b \\<noteq> hd w\n  [hd w] \\<^sup>@ m =\n  (if m = 0 then \\<epsilon> else [hd w] \\<cdot> [hd w] \\<^sup>@ (m - 1))\n  hd (?x21.0 # ?x22.0) = ?x21.0\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0", "by fastforce"], ["proof (state)\nthis:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>m b q.\n        \\<lbrakk>[hd w] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = w;\n         b \\<noteq> hd w; m \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from that a1 a2 this"], ["proof (chain)\npicking this:\n  \\<lbrakk>[hd w] \\<^sup>@ ?m \\<cdot> [?b] \\<cdot> ?q = w; ?b \\<noteq> hd w;\n   ?m \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> thesis\n  [hd w] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = w\n  b \\<noteq> hd w\n  m \\<noteq> 0", "show thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>[hd w] \\<^sup>@ ?m \\<cdot> [?b] \\<cdot> ?q = w; ?b \\<noteq> hd w;\n   ?m \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> thesis\n  [hd w] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = w\n  b \\<noteq> hd w\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma distinct_letter_in_suf: assumes \"\\<not> w \\<in>  [a]*\" shows \"\\<exists> m b. [b] \\<cdot> [a]\\<^sup>@m  \\<le>s w \\<and> b \\<noteq> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m b. [b] \\<cdot> [a] \\<^sup>@ m \\<le>s w \\<and> b \\<noteq> a", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>m b. [b] \\<cdot> [a] \\<^sup>@ m \\<le>s w \\<and> b \\<noteq> a", "have  \"\\<not> rev w \\<in>  [a]*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> rev w \\<in> [a]*", "using rev_pow[of \"[a]\"]"], ["proof (prove)\nusing this:\n  rev ([a] \\<^sup>@ ?m) = rev [a] \\<^sup>@ ?m\n\ngoal (1 subgoal):\n 1. \\<not> rev w \\<in> [a]*", "unfolding  rev_sing"], ["proof (prove)\nusing this:\n  rev ([a] \\<^sup>@ ?m) = [a] \\<^sup>@ ?m\n\ngoal (1 subgoal):\n 1. \\<not> rev w \\<in> [a]*", "using assms root_def rev_rev_ident[of w]"], ["proof (prove)\nusing this:\n  rev ([a] \\<^sup>@ ?m) = [a] \\<^sup>@ ?m\n  \\<not> w \\<in> [a]*\n  ?u \\<in> ?r* = (\\<exists>k. ?r \\<^sup>@ k = ?u)\n  rev (rev w) = w\n\ngoal (1 subgoal):\n 1. \\<not> rev w \\<in> [a]*", "by metis"], ["proof (state)\nthis:\n  \\<not> rev w \\<in> [a]*\n\ngoal (1 subgoal):\n 1. \\<exists>m b. [b] \\<cdot> [a] \\<^sup>@ m \\<le>s w \\<and> b \\<noteq> a", "obtain m b q where \"[a]\\<^sup>@m \\<cdot> [b] \\<cdot> q = rev w\" and \"b \\<noteq> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m b q.\n        \\<lbrakk>[a] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = rev w;\n         b \\<noteq> a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using distinct_letter_in[OF \\<open>\\<not> rev w \\<in>  [a]*\\<close>]"], ["proof (prove)\nusing this:\n  (\\<And>m b q.\n      \\<lbrakk>[a] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = rev w;\n       b \\<noteq> a\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>m b q.\n        \\<lbrakk>[a] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = rev w;\n         b \\<noteq> a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  [a] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = rev w\n  b \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<exists>m b. [b] \\<cdot> [a] \\<^sup>@ m \\<le>s w \\<and> b \\<noteq> a", "have eq: \"rev ([b] \\<cdot> [a]\\<^sup>@m) = [a]\\<^sup>@m \\<cdot> [b]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev ([b] \\<cdot> [a] \\<^sup>@ m) = [a] \\<^sup>@ m \\<cdot> [b]", "by (simp add: rev_pow)"], ["proof (state)\nthis:\n  rev ([b] \\<cdot> [a] \\<^sup>@ m) = [a] \\<^sup>@ m \\<cdot> [b]\n\ngoal (1 subgoal):\n 1. \\<exists>m b. [b] \\<cdot> [a] \\<^sup>@ m \\<le>s w \\<and> b \\<noteq> a", "have \"[b] \\<cdot> [a]\\<^sup>@m \\<le>s w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [b] \\<cdot> [a] \\<^sup>@ m \\<le>s w", "using  \\<open>[a]\\<^sup>@m \\<cdot> [b] \\<cdot> q = rev w\\<close>"], ["proof (prove)\nusing this:\n  [a] \\<^sup>@ m \\<cdot> [b] \\<cdot> q = rev w\n\ngoal (1 subgoal):\n 1. [b] \\<cdot> [a] \\<^sup>@ m \\<le>s w", "unfolding suf_rev_pref_iff eq lassoc"], ["proof (prove)\nusing this:\n  ([a] \\<^sup>@ m \\<cdot> [b]) \\<cdot> q = rev w\n\ngoal (1 subgoal):\n 1. [a] \\<^sup>@ m \\<cdot> [b] \\<le>p rev w", "using prefI"], ["proof (prove)\nusing this:\n  ([a] \\<^sup>@ m \\<cdot> [b]) \\<cdot> q = rev w\n  ?p \\<cdot> ?s = ?w \\<Longrightarrow> ?p \\<le>p ?w\n\ngoal (1 subgoal):\n 1. [a] \\<^sup>@ m \\<cdot> [b] \\<le>p rev w", "by blast"], ["proof (state)\nthis:\n  [b] \\<cdot> [a] \\<^sup>@ m \\<le>s w\n\ngoal (1 subgoal):\n 1. \\<exists>m b. [b] \\<cdot> [a] \\<^sup>@ m \\<le>s w \\<and> b \\<noteq> a", "thus ?thesis"], ["proof (prove)\nusing this:\n  [b] \\<cdot> [a] \\<^sup>@ m \\<le>s w\n\ngoal (1 subgoal):\n 1. \\<exists>m b. [b] \\<cdot> [a] \\<^sup>@ m \\<le>s w \\<and> b \\<noteq> a", "using \\<open>b \\<noteq> a\\<close>"], ["proof (prove)\nusing this:\n  [b] \\<cdot> [a] \\<^sup>@ m \\<le>s w\n  b \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<exists>m b. [b] \\<cdot> [a] \\<^sup>@ m \\<le>s w \\<and> b \\<noteq> a", "by blast"], ["proof (state)\nthis:\n  \\<exists>m b. [b] \\<cdot> [a] \\<^sup>@ m \\<le>s w \\<and> b \\<noteq> a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sing_pow_exp: assumes \"w \\<in> [a]*\" shows \"w = [a]\\<^sup>@\\<^bold>|w\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w = [a] \\<^sup>@ \\<^bold>|w\\<^bold>|", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. w = [a] \\<^sup>@ \\<^bold>|w\\<^bold>|", "obtain k where \"[a] \\<^sup>@ k = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k. [a] \\<^sup>@ k = w \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using rootE[OF assms]"], ["proof (prove)\nusing this:\n  (\\<And>k. [a] \\<^sup>@ k = w \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>k. [a] \\<^sup>@ k = w \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  [a] \\<^sup>@ k = w\n\ngoal (1 subgoal):\n 1. w = [a] \\<^sup>@ \\<^bold>|w\\<^bold>|", "from this[folded  sing_pow_len[of a k, folded this, unfolded this], symmetric]"], ["proof (chain)\npicking this:\n  w = [a] \\<^sup>@ \\<^bold>|w\\<^bold>|", "show ?thesis"], ["proof (prove)\nusing this:\n  w = [a] \\<^sup>@ \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. w = [a] \\<^sup>@ \\<^bold>|w\\<^bold>|", "."], ["proof (state)\nthis:\n  w = [a] \\<^sup>@ \\<^bold>|w\\<^bold>|\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sing_power': assumes \"w \\<in> [a]*\" and \"i < \\<^bold>|w\\<^bold>|\" shows \"w ! i = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w ! i = a", "using  sing_pow[OF \\<open>i < \\<^bold>|w\\<^bold>|\\<close>, of a, folded sing_pow_exp[OF \\<open>w \\<in> [a]*\\<close>]]"], ["proof (prove)\nusing this:\n  w ! i = a\n\ngoal (1 subgoal):\n 1. w ! i = a", "."], ["", "lemma rev_sing_power: \"x \\<in> [a]* \\<Longrightarrow> rev x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> [a]* \\<Longrightarrow> rev x = x", "unfolding root_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. [a] \\<^sup>@ k = x \\<Longrightarrow> rev x = x", "using rev_pow rev_singleton_conv"], ["proof (prove)\nusing this:\n  rev (?x \\<^sup>@ ?m) = rev ?x \\<^sup>@ ?m\n  (rev ?xs = [?x]) = (?xs = [?x])\n\ngoal (1 subgoal):\n 1. \\<exists>k. [a] \\<^sup>@ k = x \\<Longrightarrow> rev x = x", "by metis"], ["", "lemma lcp_letter_power: \n  assumes \"w \\<noteq> \\<epsilon>\" and \"w \\<in> [a]*\" and \"[a]\\<^sup>@m \\<cdot> [b] \\<le>p z\" and  \"a \\<noteq> b\" \n  shows \"w \\<cdot> z \\<and>\\<^sub>p z \\<cdot> w = [a]\\<^sup>@m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<cdot> z \\<and>\\<^sub>p z \\<cdot> w = [a] \\<^sup>@ m", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. w \\<cdot> z \\<and>\\<^sub>p z \\<cdot> w = [a] \\<^sup>@ m", "obtain k z' where \"w = [a]\\<^sup>@k\" \"z = [a]\\<^sup>@m \\<cdot> [b] \\<cdot> z'\" \"k \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k z'.\n        \\<lbrakk>w = [a] \\<^sup>@ k;\n         z = [a] \\<^sup>@ m \\<cdot> [b] \\<cdot> z'; k \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>w \\<in> [a]*\\<close> \\<open>[a]\\<^sup>@m \\<cdot> [b] \\<le>p z\\<close> \\<open>w \\<noteq> \\<epsilon>\\<close> nemp_pow[of \"[a]\"]"], ["proof (prove)\nusing this:\n  w \\<in> [a]*\n  [a] \\<^sup>@ m \\<cdot> [b] \\<le>p z\n  w \\<noteq> \\<epsilon>\n  [a] \\<^sup>@ ?m \\<noteq> \\<epsilon> \\<Longrightarrow> ?m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>k z'.\n        \\<lbrakk>w = [a] \\<^sup>@ k;\n         z = [a] \\<^sup>@ m \\<cdot> [b] \\<cdot> z'; k \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding root_def"], ["proof (prove)\nusing this:\n  \\<exists>k. [a] \\<^sup>@ k = w\n  [a] \\<^sup>@ m \\<cdot> [b] \\<le>p z\n  w \\<noteq> \\<epsilon>\n  [a] \\<^sup>@ ?m \\<noteq> \\<epsilon> \\<Longrightarrow> ?m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>k z'.\n        \\<lbrakk>w = [a] \\<^sup>@ k;\n         z = [a] \\<^sup>@ m \\<cdot> [b] \\<cdot> z'; k \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  w = [a] \\<^sup>@ k\n  z = [a] \\<^sup>@ m \\<cdot> [b] \\<cdot> z'\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. w \\<cdot> z \\<and>\\<^sub>p z \\<cdot> w = [a] \\<^sup>@ m", "hence eq1: \"w \\<cdot> z = [a]\\<^sup>@m \\<cdot> ([a]\\<^sup>@k \\<cdot> [b] \\<cdot> z')\" and eq2: \"z \\<cdot> w = [a]\\<^sup>@m \\<cdot> ([b] \\<cdot> z'\\<cdot> [a]\\<^sup>@k)\""], ["proof (prove)\nusing this:\n  w = [a] \\<^sup>@ k\n  z = [a] \\<^sup>@ m \\<cdot> [b] \\<cdot> z'\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. w \\<cdot> z =\n    [a] \\<^sup>@ m \\<cdot> [a] \\<^sup>@ k \\<cdot> [b] \\<cdot> z' &&&\n    z \\<cdot> w =\n    [a] \\<^sup>@ m \\<cdot> [b] \\<cdot> z' \\<cdot> [a] \\<^sup>@ k", "by (simp add: \\<open>w = [a]\\<^sup>@k\\<close> \\<open>z = [a]\\<^sup>@m \\<cdot> [b] \\<cdot> z'\\<close> pow_comm)+"], ["proof (state)\nthis:\n  w \\<cdot> z = [a] \\<^sup>@ m \\<cdot> [a] \\<^sup>@ k \\<cdot> [b] \\<cdot> z'\n  z \\<cdot> w = [a] \\<^sup>@ m \\<cdot> [b] \\<cdot> z' \\<cdot> [a] \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. w \\<cdot> z \\<and>\\<^sub>p z \\<cdot> w = [a] \\<^sup>@ m", "have \"hd ([a]\\<^sup>@k \\<cdot> [b] \\<cdot> z') = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd ([a] \\<^sup>@ k \\<cdot> [b] \\<cdot> z') = a", "using hd_append2[OF \\<open>w \\<noteq> \\<epsilon>\\<close>, of \"[b]\\<cdot>z'\", \n        unfolded \\<open>w = (a # \\<epsilon>)\\<^sup>@k\\<close> hd_sing_power[OF \\<open>k \\<noteq> 0\\<close>, of a]]"], ["proof (prove)\nusing this:\n  hd ([a] \\<^sup>@ k \\<cdot> [b] \\<cdot> z') = a\n\ngoal (1 subgoal):\n 1. hd ([a] \\<^sup>@ k \\<cdot> [b] \\<cdot> z') = a", "."], ["proof (state)\nthis:\n  hd ([a] \\<^sup>@ k \\<cdot> [b] \\<cdot> z') = a\n\ngoal (1 subgoal):\n 1. w \\<cdot> z \\<and>\\<^sub>p z \\<cdot> w = [a] \\<^sup>@ m", "moreover"], ["proof (state)\nthis:\n  hd ([a] \\<^sup>@ k \\<cdot> [b] \\<cdot> z') = a\n\ngoal (1 subgoal):\n 1. w \\<cdot> z \\<and>\\<^sub>p z \\<cdot> w = [a] \\<^sup>@ m", "have \"hd([b] \\<cdot> z'\\<cdot> [a]\\<^sup>@k) = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd ([b] \\<cdot> z' \\<cdot> [a] \\<^sup>@ k) = b", "by simp"], ["proof (state)\nthis:\n  hd ([b] \\<cdot> z' \\<cdot> [a] \\<^sup>@ k) = b\n\ngoal (1 subgoal):\n 1. w \\<cdot> z \\<and>\\<^sub>p z \\<cdot> w = [a] \\<^sup>@ m", "ultimately"], ["proof (chain)\npicking this:\n  hd ([a] \\<^sup>@ k \\<cdot> [b] \\<cdot> z') = a\n  hd ([b] \\<cdot> z' \\<cdot> [a] \\<^sup>@ k) = b", "have \"[a]\\<^sup>@k \\<cdot> [b] \\<cdot> z' \\<and>\\<^sub>p [b] \\<cdot> z'\\<cdot> [a]\\<^sup>@k = \\<epsilon>\""], ["proof (prove)\nusing this:\n  hd ([a] \\<^sup>@ k \\<cdot> [b] \\<cdot> z') = a\n  hd ([b] \\<cdot> z' \\<cdot> [a] \\<^sup>@ k) = b\n\ngoal (1 subgoal):\n 1. [a] \\<^sup>@ k \\<cdot>\n    [b] \\<cdot> z' \\<and>\\<^sub>p [b] \\<cdot> z' \\<cdot> [a] \\<^sup>@ k =\n    \\<epsilon>", "by (simp add: \\<open>a \\<noteq> b\\<close> lcp_distinct_hd)"], ["proof (state)\nthis:\n  [a] \\<^sup>@ k \\<cdot>\n  [b] \\<cdot> z' \\<and>\\<^sub>p [b] \\<cdot> z' \\<cdot> [a] \\<^sup>@ k =\n  \\<epsilon>\n\ngoal (1 subgoal):\n 1. w \\<cdot> z \\<and>\\<^sub>p z \\<cdot> w = [a] \\<^sup>@ m", "thus ?thesis"], ["proof (prove)\nusing this:\n  [a] \\<^sup>@ k \\<cdot>\n  [b] \\<cdot> z' \\<and>\\<^sub>p [b] \\<cdot> z' \\<cdot> [a] \\<^sup>@ k =\n  \\<epsilon>\n\ngoal (1 subgoal):\n 1. w \\<cdot> z \\<and>\\<^sub>p z \\<cdot> w = [a] \\<^sup>@ m", "using eq1 eq2 lcp_ext_left[of \"[a]\\<^sup>@m\" \"[a]\\<^sup>@k \\<cdot> [b] \\<cdot> z'\" \"[b] \\<cdot> z'\\<cdot> [a]\\<^sup>@k\"]"], ["proof (prove)\nusing this:\n  [a] \\<^sup>@ k \\<cdot>\n  [b] \\<cdot> z' \\<and>\\<^sub>p [b] \\<cdot> z' \\<cdot> [a] \\<^sup>@ k =\n  \\<epsilon>\n  w \\<cdot> z = [a] \\<^sup>@ m \\<cdot> [a] \\<^sup>@ k \\<cdot> [b] \\<cdot> z'\n  z \\<cdot> w = [a] \\<^sup>@ m \\<cdot> [b] \\<cdot> z' \\<cdot> [a] \\<^sup>@ k\n  [a] \\<^sup>@ m \\<cdot>\n  [a] \\<^sup>@ k \\<cdot>\n  [b] \\<cdot>\n  z' \\<and>\\<^sub>p [a] \\<^sup>@ m \\<cdot>\n                    [b] \\<cdot> z' \\<cdot> [a] \\<^sup>@ k =\n  [a] \\<^sup>@ m \\<cdot>\n  ([a] \\<^sup>@ k \\<cdot>\n   [b] \\<cdot> z' \\<and>\\<^sub>p [b] \\<cdot> z' \\<cdot> [a] \\<^sup>@ k)\n\ngoal (1 subgoal):\n 1. w \\<cdot> z \\<and>\\<^sub>p z \\<cdot> w = [a] \\<^sup>@ m", "by simp"], ["proof (state)\nthis:\n  w \\<cdot> z \\<and>\\<^sub>p z \\<cdot> w = [a] \\<^sup>@ m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma per_one: assumes \"w \\<le>p [a]\\<^sup>\\<omega>\" shows \"w \\<in> [a]*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> [a]*", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. w \\<in> [a]*", "have \"w \\<le>p (a # \\<epsilon>) \\<^sup>@ n \\<Longrightarrow> n \\<noteq> 0 \\<Longrightarrow> w \\<in> [a]*\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le>p [a] \\<^sup>@ n; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> w \\<in> [a]*", "using pref_sing_power[of w a] rootI[of \"[a]\" \"\\<^bold>|w\\<^bold>|\"]"], ["proof (prove)\nusing this:\n  w \\<le>p [a] \\<^sup>@ ?m \\<Longrightarrow>\n  w = [a] \\<^sup>@ \\<^bold>|w\\<^bold>|\n  [a] \\<^sup>@ \\<^bold>|w\\<^bold>| \\<in> [a]*\n\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le>p [a] \\<^sup>@ n; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> w \\<in> [a]*", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>w \\<le>p [a] \\<^sup>@ ?n; ?n \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> w \\<in> [a]*\n\ngoal (1 subgoal):\n 1. w \\<in> [a]*", "with per_pref_ex[OF \\<open>w \\<le>p [a]\\<^sup>\\<omega>\\<close>]"], ["proof (chain)\npicking this:\n  (\\<And>n.\n      \\<lbrakk>w \\<le>p [a] \\<^sup>@ n; n \\<noteq> 0\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n  \\<lbrakk>w \\<le>p [a] \\<^sup>@ ?n; ?n \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> w \\<in> [a]*", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>n.\n      \\<lbrakk>w \\<le>p [a] \\<^sup>@ n; n \\<noteq> 0\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n  \\<lbrakk>w \\<le>p [a] \\<^sup>@ ?n; ?n \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> w \\<in> [a]*\n\ngoal (1 subgoal):\n 1. w \\<in> [a]*", "by auto"], ["proof (state)\nthis:\n  w \\<in> [a]*\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma per_one': \"w \\<in> [a]* \\<Longrightarrow> w \\<le>p [a]\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> [a]* \\<Longrightarrow> w \\<le>p [a]\\<^sup>\\<omega>", "by (metis append_Nil2 not_Cons_self2 per_pref prefI root_def)"], ["", "lemma per_sing_one: assumes \"w \\<noteq> \\<epsilon>\" \"w \\<le>p [a]\\<^sup>\\<omega>\" shows \"periodN w 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN w 1", "using root_periodN[OF \\<open>w \\<noteq> \\<epsilon>\\<close> \\<open>w \\<le>p [a]\\<^sup>\\<omega>\\<close>]"], ["proof (prove)\nusing this:\n  periodN w \\<^bold>|[a]\\<^bold>|\n\ngoal (1 subgoal):\n 1. periodN w 1", "unfolding sing_len[of a]"], ["proof (prove)\nusing this:\n  periodN w 1\n\ngoal (1 subgoal):\n 1. periodN w 1", "."], ["", "section \"Border\""], ["", "text\\<open>A non-empty word  $x \\neq w$ is a \\emph{border} of a word $w$ if it is both its prefix and suffix. This elementary property captures how much the word $w$ overlaps\nwith itself, and it is in the obvious way related to a period of $w$. However, in many cases it is much easier to reason about borders than about periods.\\<close>"], ["", "definition border :: \"'a list \\<Rightarrow> 'a list \\<Rightarrow> bool\" (\"_ \\<le>b _\" [51,51] 60 )\n  where [simp]: \"border x w = (x \\<le>p w \\<and> x \\<le>s w \\<and> x \\<noteq> w \\<and> x \\<noteq> \\<epsilon>)\""], ["", "definition bordered :: \"'a list \\<Rightarrow> bool\" \n  where [simp]: \"bordered w = (\\<exists>b. b \\<le>b w)\""], ["", "lemma borderI[intro]: \"x \\<le>p w \\<Longrightarrow> x \\<le>s w \\<Longrightarrow> x \\<noteq> w \\<Longrightarrow> x \\<noteq> \\<epsilon> \\<Longrightarrow> x \\<le>b w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le>p w; x \\<le>s w; x \\<noteq> w;\n     x \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> x \\<le>b w", "unfolding border_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le>p w; x \\<le>s w; x \\<noteq> w;\n     x \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> x \\<le>p w \\<and>\n                      x \\<le>s w \\<and>\n                      x \\<noteq> w \\<and> x \\<noteq> \\<epsilon>", "by blast"], ["", "lemma borderD_pref: \"x \\<le>b w \\<Longrightarrow> x \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>b w \\<Longrightarrow> x \\<le>p w", "unfolding border_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>p w \\<and>\n    x \\<le>s w \\<and>\n    x \\<noteq> w \\<and> x \\<noteq> \\<epsilon> \\<Longrightarrow>\n    x \\<le>p w", "by blast"], ["", "lemma borderD_spref: \"x \\<le>b w \\<Longrightarrow> x <p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>b w \\<Longrightarrow> x <p w", "unfolding border_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>p w \\<and>\n    x \\<le>s w \\<and>\n    x \\<noteq> w \\<and> x \\<noteq> \\<epsilon> \\<Longrightarrow>\n    x <p w", "by simp"], ["", "lemma borderD_suf: \"x \\<le>b w \\<Longrightarrow> x \\<le>s w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>b w \\<Longrightarrow> x \\<le>s w", "unfolding border_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>p w \\<and>\n    x \\<le>s w \\<and>\n    x \\<noteq> w \\<and> x \\<noteq> \\<epsilon> \\<Longrightarrow>\n    x \\<le>s w", "by blast"], ["", "lemma borderD_ssuf: \"x \\<le>b w \\<Longrightarrow> x <s w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>b w \\<Longrightarrow> x <s w", "unfolding border_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>p w \\<and>\n    x \\<le>s w \\<and>\n    x \\<noteq> w \\<and> x \\<noteq> \\<epsilon> \\<Longrightarrow>\n    x <s w", "by blast"], ["", "lemma borderD_nemp: \"x \\<le>b w \\<Longrightarrow> x \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>b w \\<Longrightarrow> x \\<noteq> \\<epsilon>", "using border_def"], ["proof (prove)\nusing this:\n  ?x \\<le>b ?w =\n  (?x \\<le>p ?w \\<and>\n   ?x \\<le>s ?w \\<and> ?x \\<noteq> ?w \\<and> ?x \\<noteq> \\<epsilon>)\n\ngoal (1 subgoal):\n 1. x \\<le>b w \\<Longrightarrow> x \\<noteq> \\<epsilon>", "by blast"], ["", "lemma borderD_neq: \"x \\<le>b w \\<Longrightarrow> x \\<noteq> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>b w \\<Longrightarrow> x \\<noteq> w", "unfolding border_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>p w \\<and>\n    x \\<le>s w \\<and>\n    x \\<noteq> w \\<and> x \\<noteq> \\<epsilon> \\<Longrightarrow>\n    x \\<noteq> w", "by blast"], ["", "lemma border_lq_nemp: assumes \"x \\<le>b w\" shows \"x\\<inverse>\\<^sup>>w \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<inverse>\\<^sup>>w \\<noteq> \\<epsilon>", "using assms borderD_spref lq_spref"], ["proof (prove)\nusing this:\n  x \\<le>b w\n  ?x \\<le>b ?w \\<Longrightarrow> ?x <p ?w\n  ?u <p ?v \\<Longrightarrow> ?u\\<inverse>\\<^sup>>?v \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. x\\<inverse>\\<^sup>>w \\<noteq> \\<epsilon>", "by blast"], ["", "lemma border_rq_nemp: assumes \"x \\<le>b w\" shows \"w\\<^sup><\\<inverse>x \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w\\<^sup><\\<inverse>x  \\<noteq> \\<epsilon>", "using assms borderD_ssuf rq_ssuf"], ["proof (prove)\nusing this:\n  x \\<le>b w\n  ?x \\<le>b ?w \\<Longrightarrow> ?x <s ?w\n  ?u <s ?v \\<Longrightarrow> ?v\\<^sup><\\<inverse>?u  \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. w\\<^sup><\\<inverse>x  \\<noteq> \\<epsilon>", "by blast"], ["", "lemma border_trans[trans]: assumes \"t \\<le>b x\" \"x \\<le>b w\"\n  shows \"t \\<le>b w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<le>b w", "using assms"], ["proof (prove)\nusing this:\n  t \\<le>b x\n  x \\<le>b w\n\ngoal (1 subgoal):\n 1. t \\<le>b w", "unfolding border_def"], ["proof (prove)\nusing this:\n  t \\<le>p x \\<and>\n  t \\<le>s x \\<and> t \\<noteq> x \\<and> t \\<noteq> \\<epsilon>\n  x \\<le>p w \\<and>\n  x \\<le>s w \\<and> x \\<noteq> w \\<and> x \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. t \\<le>p w \\<and>\n    t \\<le>s w \\<and> t \\<noteq> w \\<and> t \\<noteq> \\<epsilon>", "using suffix_order.order.antisym pref_trans[of t x w] suf_trans[of t x w]"], ["proof (prove)\nusing this:\n  t \\<le>p x \\<and>\n  t \\<le>s x \\<and> t \\<noteq> x \\<and> t \\<noteq> \\<epsilon>\n  x \\<le>p w \\<and>\n  x \\<le>s w \\<and> x \\<noteq> w \\<and> x \\<noteq> \\<epsilon>\n  \\<lbrakk>?a \\<le>s ?b; ?b \\<le>s ?a\\<rbrakk> \\<Longrightarrow> ?a = ?b\n  \\<lbrakk>t \\<le>p x; x \\<le>p w\\<rbrakk> \\<Longrightarrow> t \\<le>p w\n  \\<lbrakk>t \\<le>s x; x \\<le>s w\\<rbrakk> \\<Longrightarrow> t \\<le>s w\n\ngoal (1 subgoal):\n 1. t \\<le>p w \\<and>\n    t \\<le>s w \\<and> t \\<noteq> w \\<and> t \\<noteq> \\<epsilon>", "by blast"], ["", "lemma border_rev_conv[reversal_rule]: \"rev x \\<le>b rev w \\<longleftrightarrow> x \\<le>b w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev x \\<le>b rev w = x \\<le>b w", "unfolding border_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (rev x \\<le>p rev w \\<and>\n     rev x \\<le>s rev w \\<and>\n     rev x \\<noteq> rev w \\<and> rev x \\<noteq> \\<epsilon>) =\n    (x \\<le>p w \\<and>\n     x \\<le>s w \\<and> x \\<noteq> w \\<and> x \\<noteq> \\<epsilon>)", "using rev_is_Nil_conv[of x] rev_swap[of w] rev_swap[of x]\n    suf_rev_pref_iff[of x w] pref_rev_suf_iff[of x w]"], ["proof (prove)\nusing this:\n  (rev x = \\<epsilon>) = (x = \\<epsilon>)\n  (rev w = ?ys) = (w = rev ?ys)\n  (rev x = ?ys) = (x = rev ?ys)\n  x \\<le>s w = (rev x \\<le>p rev w)\n  (x \\<le>p w) = rev x \\<le>s rev w\n\ngoal (1 subgoal):\n 1. (rev x \\<le>p rev w \\<and>\n     rev x \\<le>s rev w \\<and>\n     rev x \\<noteq> rev w \\<and> rev x \\<noteq> \\<epsilon>) =\n    (x \\<le>p w \\<and>\n     x \\<le>s w \\<and> x \\<noteq> w \\<and> x \\<noteq> \\<epsilon>)", "by fastforce"], ["", "lemma border_lq_comp: \"x \\<le>b w \\<Longrightarrow> (w\\<^sup><\\<inverse>x) \\<bowtie> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>b w \\<Longrightarrow> w\\<^sup><\\<inverse>x  \\<bowtie> x", "unfolding border_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>p w \\<and>\n    x \\<le>s w \\<and>\n    x \\<noteq> w \\<and> x \\<noteq> \\<epsilon> \\<Longrightarrow>\n    w\\<^sup><\\<inverse>x  \\<bowtie> x", "using rq_suf ruler"], ["proof (prove)\nusing this:\n  ?u \\<le>s ?v \\<Longrightarrow> ?v\\<^sup><\\<inverse>?u  \\<cdot> ?u = ?v\n  \\<lbrakk>?xs\\<^sub>1 \\<le>p ?ys; ?xs\\<^sub>2 \\<le>p ?ys\\<rbrakk>\n  \\<Longrightarrow> ?xs\\<^sub>1 \\<le>p ?xs\\<^sub>2 \\<or>\n                    ?xs\\<^sub>2 \\<le>p ?xs\\<^sub>1\n\ngoal (1 subgoal):\n 1. x \\<le>p w \\<and>\n    x \\<le>s w \\<and>\n    x \\<noteq> w \\<and> x \\<noteq> \\<epsilon> \\<Longrightarrow>\n    w\\<^sup><\\<inverse>x  \\<bowtie> x", "by blast"], ["", "lemmas border_lq_suf_comp = border_lq_comp[reversed]"], ["", "subsection \"The shortest border\""], ["", "lemma border_len:  assumes \"x \\<le>b w\"\n  shows \"1 < \\<^bold>|w\\<^bold>|\" and \"0 < \\<^bold>|x\\<^bold>|\" and \"\\<^bold>|x\\<^bold>| < \\<^bold>|w\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < \\<^bold>|w\\<^bold>| &&&\n    0 < \\<^bold>|x\\<^bold>| &&& \\<^bold>|x\\<^bold>| < \\<^bold>|w\\<^bold>|", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. 1 < \\<^bold>|w\\<^bold>|\n 2. 0 < \\<^bold>|x\\<^bold>|\n 3. \\<^bold>|x\\<^bold>| < \\<^bold>|w\\<^bold>|", "show \"\\<^bold>|x\\<^bold>| < \\<^bold>|w\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|x\\<^bold>| < \\<^bold>|w\\<^bold>|", "using assms prefix_length_less"], ["proof (prove)\nusing this:\n  x \\<le>b w\n  ?xs <p ?ys \\<Longrightarrow> \\<^bold>|?xs\\<^bold>| < \\<^bold>|?ys\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<^bold>|x\\<^bold>| < \\<^bold>|w\\<^bold>|", "unfolding border_def strict_prefix_def"], ["proof (prove)\nusing this:\n  x \\<le>p w \\<and>\n  x \\<le>s w \\<and> x \\<noteq> w \\<and> x \\<noteq> \\<epsilon>\n  ?xs \\<le>p ?ys \\<and> ?xs \\<noteq> ?ys \\<Longrightarrow>\n  \\<^bold>|?xs\\<^bold>| < \\<^bold>|?ys\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<^bold>|x\\<^bold>| < \\<^bold>|w\\<^bold>|", "by blast"], ["proof (state)\nthis:\n  \\<^bold>|x\\<^bold>| < \\<^bold>|w\\<^bold>|\n\ngoal (2 subgoals):\n 1. 1 < \\<^bold>|w\\<^bold>|\n 2. 0 < \\<^bold>|x\\<^bold>|", "show \"0 < \\<^bold>|x\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<^bold>|x\\<^bold>|", "using assms"], ["proof (prove)\nusing this:\n  x \\<le>b w\n\ngoal (1 subgoal):\n 1. 0 < \\<^bold>|x\\<^bold>|", "unfolding border_def"], ["proof (prove)\nusing this:\n  x \\<le>p w \\<and>\n  x \\<le>s w \\<and> x \\<noteq> w \\<and> x \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. 0 < \\<^bold>|x\\<^bold>|", "by blast"], ["proof (state)\nthis:\n  0 < \\<^bold>|x\\<^bold>|\n\ngoal (1 subgoal):\n 1. 1 < \\<^bold>|w\\<^bold>|", "thus \"1 < \\<^bold>|w\\<^bold>|\""], ["proof (prove)\nusing this:\n  0 < \\<^bold>|x\\<^bold>|\n\ngoal (1 subgoal):\n 1. 1 < \\<^bold>|w\\<^bold>|", "using assms \\<open>\\<^bold>|x\\<^bold>| < \\<^bold>|w\\<^bold>|\\<close>"], ["proof (prove)\nusing this:\n  0 < \\<^bold>|x\\<^bold>|\n  x \\<le>b w\n  \\<^bold>|x\\<^bold>| < \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. 1 < \\<^bold>|w\\<^bold>|", "unfolding border_def"], ["proof (prove)\nusing this:\n  0 < \\<^bold>|x\\<^bold>|\n  x \\<le>p w \\<and>\n  x \\<le>s w \\<and> x \\<noteq> w \\<and> x \\<noteq> \\<epsilon>\n  \\<^bold>|x\\<^bold>| < \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. 1 < \\<^bold>|w\\<^bold>|", "by linarith"], ["proof (state)\nthis:\n  1 < \\<^bold>|w\\<^bold>|\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma borders_compare: assumes \"x \\<le>b w\" and \"x' \\<le>b w\" and \"\\<^bold>|x'\\<^bold>| < \\<^bold>|x\\<^bold>|\"\n  shows \"x' \\<le>b x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x' \\<le>b x", "using ruler_le[OF borderD_pref[OF \\<open>x' \\<le>b w\\<close>] borderD_pref[OF \\<open>x \\<le>b w\\<close>] less_imp_le_nat[OF \\<open>\\<^bold>|x'\\<^bold>| < \\<^bold>|x\\<^bold>|\\<close>]]\n    suf_ruler_le[OF borderD_suf[OF \\<open>x' \\<le>b w\\<close>] borderD_suf[OF \\<open>x \\<le>b w\\<close>] less_imp_le_nat[OF \\<open>\\<^bold>|x'\\<^bold>| < \\<^bold>|x\\<^bold>|\\<close>]]\n    borderD_nemp[OF \\<open>x' \\<le>b w\\<close>] \\<open>\\<^bold>|x'\\<^bold>| < \\<^bold>|x\\<^bold>|\\<close>\n    borderI"], ["proof (prove)\nusing this:\n  x' \\<le>p x\n  x' \\<le>s x\n  x' \\<noteq> \\<epsilon>\n  \\<^bold>|x'\\<^bold>| < \\<^bold>|x\\<^bold>|\n  \\<lbrakk>?x \\<le>p ?w; ?x \\<le>s ?w; ?x \\<noteq> ?w;\n   ?x \\<noteq> \\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> ?x \\<le>b ?w\n\ngoal (1 subgoal):\n 1. x' \\<le>b x", "by blast"], ["", "lemma unbordered_border: \n  \"bordered w \\<Longrightarrow>  \\<exists> x. x \\<le>b w \\<and> \\<not> bordered x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bordered w \\<Longrightarrow>\n    \\<exists>x. x \\<le>b w \\<and> \\<not> bordered x", "proof (induction \"\\<^bold>|w\\<^bold>|\" arbitrary: w rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>\\<And>wa.\n                   \\<lbrakk>\\<^bold>|wa\\<^bold>| < \\<^bold>|w\\<^bold>|;\n                    bordered wa\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>x.\n  x \\<le>b wa \\<and> \\<not> bordered x;\n        bordered w\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. x \\<le>b w \\<and> \\<not> bordered x", "case less"], ["proof (state)\nthis:\n  \\<lbrakk>\\<^bold>|?w\\<^bold>| < \\<^bold>|w\\<^bold>|; bordered ?w\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x. x \\<le>b ?w \\<and> \\<not> bordered x\n  bordered w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>\\<And>wa.\n                   \\<lbrakk>\\<^bold>|wa\\<^bold>| < \\<^bold>|w\\<^bold>|;\n                    bordered wa\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>x.\n  x \\<le>b wa \\<and> \\<not> bordered x;\n        bordered w\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. x \\<le>b w \\<and> \\<not> bordered x", "obtain x' where \"x' \\<le>b w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x'. x' \\<le>b w \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using bordered_def less.prems"], ["proof (prove)\nusing this:\n  bordered ?w = (\\<exists>b. b \\<le>b ?w)\n  bordered w\n\ngoal (1 subgoal):\n 1. (\\<And>x'. x' \\<le>b w \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x' \\<le>b w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>\\<And>wa.\n                   \\<lbrakk>\\<^bold>|wa\\<^bold>| < \\<^bold>|w\\<^bold>|;\n                    bordered wa\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>x.\n  x \\<le>b wa \\<and> \\<not> bordered x;\n        bordered w\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. x \\<le>b w \\<and> \\<not> bordered x", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<le>b w \\<and> \\<not> bordered x", "proof (cases \"bordered x'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. bordered x' \\<Longrightarrow>\n    \\<exists>x. x \\<le>b w \\<and> \\<not> bordered x\n 2. \\<not> bordered x' \\<Longrightarrow>\n    \\<exists>x. x \\<le>b w \\<and> \\<not> bordered x", "assume \"\\<not> bordered x'\""], ["proof (state)\nthis:\n  \\<not> bordered x'\n\ngoal (2 subgoals):\n 1. bordered x' \\<Longrightarrow>\n    \\<exists>x. x \\<le>b w \\<and> \\<not> bordered x\n 2. \\<not> bordered x' \\<Longrightarrow>\n    \\<exists>x. x \\<le>b w \\<and> \\<not> bordered x", "thus ?case"], ["proof (prove)\nusing this:\n  \\<not> bordered x'\n\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<le>b w \\<and> \\<not> bordered x", "using \\<open>x' \\<le>b w\\<close>"], ["proof (prove)\nusing this:\n  \\<not> bordered x'\n  x' \\<le>b w\n\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<le>b w \\<and> \\<not> bordered x", "by blast"], ["proof (state)\nthis:\n  \\<exists>x. x \\<le>b w \\<and> \\<not> bordered x\n\ngoal (1 subgoal):\n 1. bordered x' \\<Longrightarrow>\n    \\<exists>x. x \\<le>b w \\<and> \\<not> bordered x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. bordered x' \\<Longrightarrow>\n    \\<exists>x. x \\<le>b w \\<and> \\<not> bordered x", "assume \"bordered x'\""], ["proof (state)\nthis:\n  bordered x'\n\ngoal (1 subgoal):\n 1. bordered x' \\<Longrightarrow>\n    \\<exists>x. x \\<le>b w \\<and> \\<not> bordered x", "from less.hyps[OF border_len(3)[OF \\<open>x' \\<le>b w\\<close>] this]"], ["proof (chain)\npicking this:\n  \\<exists>x. x \\<le>b x' \\<and> \\<not> bordered x", "show ?case"], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<le>b x' \\<and> \\<not> bordered x\n\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<le>b w \\<and> \\<not> bordered x", "using  border_trans[of _ x' w] \\<open>x' \\<le>b w\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<le>b x' \\<and> \\<not> bordered x\n  \\<lbrakk>?t \\<le>b x'; x' \\<le>b w\\<rbrakk> \\<Longrightarrow> ?t \\<le>b w\n  x' \\<le>b w\n\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<le>b w \\<and> \\<not> bordered x", "by blast"], ["proof (state)\nthis:\n  \\<exists>x. x \\<le>b w \\<and> \\<not> bordered x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x. x \\<le>b w \\<and> \\<not> bordered x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unbordered_border_shortest: \"x \\<le>b w \\<Longrightarrow> \\<not> bordered x \\<Longrightarrow>  y \\<le>b w \\<Longrightarrow> \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|y\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le>b w; \\<not> bordered x; y \\<le>b w\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|y\\<^bold>|", "using bordered_def[of x] borders_compare[of x w y] not_le_imp_less[of \"\\<^bold>|x\\<^bold>|\" \"\\<^bold>|y\\<^bold>|\"]"], ["proof (prove)\nusing this:\n  bordered x = (\\<exists>b. b \\<le>b x)\n  \\<lbrakk>x \\<le>b w; y \\<le>b w;\n   \\<^bold>|y\\<^bold>| < \\<^bold>|x\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> y \\<le>b x\n  \\<not> \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|y\\<^bold>| \\<Longrightarrow>\n  \\<^bold>|y\\<^bold>| < \\<^bold>|x\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le>b w; \\<not> bordered x; y \\<le>b w\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|y\\<^bold>|", "by blast"], ["", "lemma long_border_bordered: assumes long: \"\\<^bold>|w\\<^bold>| < \\<^bold>|x\\<^bold>| + \\<^bold>|x\\<^bold>|\" and border: \"x \\<le>b w\" \n  shows \"(w\\<^sup><\\<inverse>x)\\<inverse>\\<^sup>>x \\<le>b x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w\\<^sup><\\<inverse>x \\<inverse>\\<^sup>>x \\<le>b x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. w\\<^sup><\\<inverse>x \\<inverse>\\<^sup>>x \\<le>b x", "define p s where \"p = w\\<^sup><\\<inverse>x\" and \"s = x\\<inverse>\\<^sup>>w\""], ["proof (state)\nthis:\n  p = w\\<^sup><\\<inverse>x \n  s = x\\<inverse>\\<^sup>>w\n\ngoal (1 subgoal):\n 1. w\\<^sup><\\<inverse>x \\<inverse>\\<^sup>>x \\<le>b x", "hence eq: \"p\\<cdot>x = x\\<cdot>s\""], ["proof (prove)\nusing this:\n  p = w\\<^sup><\\<inverse>x \n  s = x\\<inverse>\\<^sup>>w\n\ngoal (1 subgoal):\n 1. p \\<cdot> x = x \\<cdot> s", "using assms"], ["proof (prove)\nusing this:\n  p = w\\<^sup><\\<inverse>x \n  s = x\\<inverse>\\<^sup>>w\n  \\<^bold>|w\\<^bold>| < \\<^bold>|x\\<^bold>| + \\<^bold>|x\\<^bold>|\n  x \\<le>b w\n\ngoal (1 subgoal):\n 1. p \\<cdot> x = x \\<cdot> s", "unfolding border_def"], ["proof (prove)\nusing this:\n  p = w\\<^sup><\\<inverse>x \n  s = x\\<inverse>\\<^sup>>w\n  \\<^bold>|w\\<^bold>| < \\<^bold>|x\\<^bold>| + \\<^bold>|x\\<^bold>|\n  x \\<le>p w \\<and>\n  x \\<le>s w \\<and> x \\<noteq> w \\<and> x \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. p \\<cdot> x = x \\<cdot> s", "using lq_pref[of x w] rq_suf[of x w]"], ["proof (prove)\nusing this:\n  p = w\\<^sup><\\<inverse>x \n  s = x\\<inverse>\\<^sup>>w\n  \\<^bold>|w\\<^bold>| < \\<^bold>|x\\<^bold>| + \\<^bold>|x\\<^bold>|\n  x \\<le>p w \\<and>\n  x \\<le>s w \\<and> x \\<noteq> w \\<and> x \\<noteq> \\<epsilon>\n  x \\<le>p w \\<Longrightarrow> x \\<cdot> x\\<inverse>\\<^sup>>w = w\n  x \\<le>s w \\<Longrightarrow> w\\<^sup><\\<inverse>x  \\<cdot> x = w\n\ngoal (1 subgoal):\n 1. p \\<cdot> x = x \\<cdot> s", "by simp"], ["proof (state)\nthis:\n  p \\<cdot> x = x \\<cdot> s\n\ngoal (1 subgoal):\n 1. w\\<^sup><\\<inverse>x \\<inverse>\\<^sup>>x \\<le>b x", "have \"\\<^bold>|p\\<^bold>| < \\<^bold>|x\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|p\\<^bold>| < \\<^bold>|x\\<^bold>|", "using p_def long[folded rq_len[OF borderD_suf[OF border]]]"], ["proof (prove)\nusing this:\n  p = w\\<^sup><\\<inverse>x \n  \\<^bold>|x\\<^bold>| + \\<^bold>|w\\<^sup><\\<inverse>x \\<^bold>|\n  < \\<^bold>|x\\<^bold>| + \\<^bold>|x\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<^bold>|p\\<^bold>| < \\<^bold>|x\\<^bold>|", "by simp"], ["proof (state)\nthis:\n  \\<^bold>|p\\<^bold>| < \\<^bold>|x\\<^bold>|\n\ngoal (1 subgoal):\n 1. w\\<^sup><\\<inverse>x \\<inverse>\\<^sup>>x \\<le>b x", "have px: \"p \\<cdot> p\\<inverse>\\<^sup>>x = x\" and sx: \"p\\<inverse>\\<^sup>>x \\<cdot> s = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<cdot> p\\<inverse>\\<^sup>>x = x &&&\n    p\\<inverse>\\<^sup>>x \\<cdot> s = x", "using eqd_pref[OF eq less_imp_le, OF \\<open>\\<^bold>|p\\<^bold>| < \\<^bold>|x\\<^bold>|\\<close>]"], ["proof (prove)\nusing this:\n  p \\<cdot> p\\<inverse>\\<^sup>>x = x \\<and>\n  p\\<inverse>\\<^sup>>x \\<cdot> s = x\n\ngoal (1 subgoal):\n 1. p \\<cdot> p\\<inverse>\\<^sup>>x = x &&&\n    p\\<inverse>\\<^sup>>x \\<cdot> s = x", "by blast+"], ["proof (state)\nthis:\n  p \\<cdot> p\\<inverse>\\<^sup>>x = x\n  p\\<inverse>\\<^sup>>x \\<cdot> s = x\n\ngoal (1 subgoal):\n 1. w\\<^sup><\\<inverse>x \\<inverse>\\<^sup>>x \\<le>b x", "have \"p\\<inverse>\\<^sup>>x \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p\\<inverse>\\<^sup>>x \\<noteq> \\<epsilon>", "using \\<open>\\<^bold>|p\\<^bold>| < \\<^bold>|x\\<^bold>|\\<close> px"], ["proof (prove)\nusing this:\n  \\<^bold>|p\\<^bold>| < \\<^bold>|x\\<^bold>|\n  p \\<cdot> p\\<inverse>\\<^sup>>x = x\n\ngoal (1 subgoal):\n 1. p\\<inverse>\\<^sup>>x \\<noteq> \\<epsilon>", "by fastforce"], ["proof (state)\nthis:\n  p\\<inverse>\\<^sup>>x \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. w\\<^sup><\\<inverse>x \\<inverse>\\<^sup>>x \\<le>b x", "have \"p \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<noteq> \\<epsilon>", "using border_rq_nemp[OF border] p_def"], ["proof (prove)\nusing this:\n  w\\<^sup><\\<inverse>x  \\<noteq> \\<epsilon>\n  p = w\\<^sup><\\<inverse>x \n\ngoal (1 subgoal):\n 1. p \\<noteq> \\<epsilon>", "by presburger"], ["proof (state)\nthis:\n  p \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. w\\<^sup><\\<inverse>x \\<inverse>\\<^sup>>x \\<le>b x", "have \"p\\<inverse>\\<^sup>>x \\<noteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p\\<inverse>\\<^sup>>x \\<noteq> x", "using \\<open>p \\<noteq> \\<epsilon>\\<close> px"], ["proof (prove)\nusing this:\n  p \\<noteq> \\<epsilon>\n  p \\<cdot> p\\<inverse>\\<^sup>>x = x\n\ngoal (1 subgoal):\n 1. p\\<inverse>\\<^sup>>x \\<noteq> x", "by force"], ["proof (state)\nthis:\n  p\\<inverse>\\<^sup>>x \\<noteq> x\n\ngoal (1 subgoal):\n 1. w\\<^sup><\\<inverse>x \\<inverse>\\<^sup>>x \\<le>b x", "have \"(p\\<inverse>\\<^sup>>x) \\<le>b x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p\\<inverse>\\<^sup>>x \\<le>b x", "unfolding border_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. p\\<inverse>\\<^sup>>x \\<le>p x \\<and>\n    p\\<inverse>\\<^sup>>x \\<le>s x \\<and>\n    p\\<inverse>\\<^sup>>x \\<noteq> x \\<and>\n    p\\<inverse>\\<^sup>>x \\<noteq> \\<epsilon>", "using eqd_pref[OF eq less_imp_le, OF \\<open>\\<^bold>|p\\<^bold>| < \\<^bold>|x\\<^bold>|\\<close>] \\<open>p\\<inverse>\\<^sup>>x \\<noteq> \\<epsilon>\\<close> \\<open>p\\<inverse>\\<^sup>>x \\<noteq> x\\<close>"], ["proof (prove)\nusing this:\n  p \\<cdot> p\\<inverse>\\<^sup>>x = x \\<and>\n  p\\<inverse>\\<^sup>>x \\<cdot> s = x\n  p\\<inverse>\\<^sup>>x \\<noteq> \\<epsilon>\n  p\\<inverse>\\<^sup>>x \\<noteq> x\n\ngoal (1 subgoal):\n 1. p\\<inverse>\\<^sup>>x \\<le>p x \\<and>\n    p\\<inverse>\\<^sup>>x \\<le>s x \\<and>\n    p\\<inverse>\\<^sup>>x \\<noteq> x \\<and>\n    p\\<inverse>\\<^sup>>x \\<noteq> \\<epsilon>", "by blast"], ["proof (state)\nthis:\n  p\\<inverse>\\<^sup>>x \\<le>b x\n\ngoal (1 subgoal):\n 1. w\\<^sup><\\<inverse>x \\<inverse>\\<^sup>>x \\<le>b x", "thus ?thesis"], ["proof (prove)\nusing this:\n  p\\<inverse>\\<^sup>>x \\<le>b x\n\ngoal (1 subgoal):\n 1. w\\<^sup><\\<inverse>x \\<inverse>\\<^sup>>x \\<le>b x", "unfolding p_def"], ["proof (prove)\nusing this:\n  w\\<^sup><\\<inverse>x \\<inverse>\\<^sup>>x \\<le>b x\n\ngoal (1 subgoal):\n 1. w\\<^sup><\\<inverse>x \\<inverse>\\<^sup>>x \\<le>b x", "."], ["proof (state)\nthis:\n  w\\<^sup><\\<inverse>x \\<inverse>\\<^sup>>x \\<le>b x\n\ngoal:\nNo subgoals!", "qed"], ["", "thm long_border_bordered[reversed]"], ["", "lemma border_short_dec: assumes border: \"x \\<le>b w\" and short: \"\\<^bold>|x\\<^bold>| + \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|\"\n  shows \"x \\<cdot> x\\<inverse>\\<^sup>>(w\\<^sup><\\<inverse>x) \\<cdot> x = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> x\\<inverse>\\<^sup>>w\\<^sup><\\<inverse>x  \\<cdot> x = w", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<cdot> x\\<inverse>\\<^sup>>w\\<^sup><\\<inverse>x  \\<cdot> x = w", "have eq: \"x\\<cdot>x\\<inverse>\\<^sup>>w = w\\<^sup><\\<inverse>x\\<cdot>x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> x\\<inverse>\\<^sup>>w = w\\<^sup><\\<inverse>x  \\<cdot> x", "using lq_pref[OF borderD_pref[OF border]] rq_suf[OF borderD_suf[OF border]]"], ["proof (prove)\nusing this:\n  x \\<cdot> x\\<inverse>\\<^sup>>w = w\n  w\\<^sup><\\<inverse>x  \\<cdot> x = w\n\ngoal (1 subgoal):\n 1. x \\<cdot> x\\<inverse>\\<^sup>>w = w\\<^sup><\\<inverse>x  \\<cdot> x", "by simp"], ["proof (state)\nthis:\n  x \\<cdot> x\\<inverse>\\<^sup>>w = w\\<^sup><\\<inverse>x  \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<cdot> x\\<inverse>\\<^sup>>w\\<^sup><\\<inverse>x  \\<cdot> x = w", "have \"\\<^bold>|x\\<^bold>| \\<le> \\<^bold>|w\\<^sup><\\<inverse>x\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|w\\<^sup><\\<inverse>x \\<^bold>|", "using short[folded rq_len[OF borderD_suf[OF border]]]"], ["proof (prove)\nusing this:\n  \\<^bold>|x\\<^bold>| + \\<^bold>|x\\<^bold>|\n  \\<le> \\<^bold>|x\\<^bold>| + \\<^bold>|w\\<^sup><\\<inverse>x \\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|w\\<^sup><\\<inverse>x \\<^bold>|", "by simp"], ["proof (state)\nthis:\n  \\<^bold>|x\\<^bold>| \\<le> \\<^bold>|w\\<^sup><\\<inverse>x \\<^bold>|\n\ngoal (1 subgoal):\n 1. x \\<cdot> x\\<inverse>\\<^sup>>w\\<^sup><\\<inverse>x  \\<cdot> x = w", "from  lq_pref[of x w, OF borderD_pref[OF border], folded conjunct2[OF eqd_pref[OF eq this]]]"], ["proof (chain)\npicking this:\n  x \\<cdot> x\\<inverse>\\<^sup>>w\\<^sup><\\<inverse>x  \\<cdot> x = w", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<cdot> x\\<inverse>\\<^sup>>w\\<^sup><\\<inverse>x  \\<cdot> x = w\n\ngoal (1 subgoal):\n 1. x \\<cdot> x\\<inverse>\\<^sup>>w\\<^sup><\\<inverse>x  \\<cdot> x = w", "."], ["proof (state)\nthis:\n  x \\<cdot> x\\<inverse>\\<^sup>>w\\<^sup><\\<inverse>x  \\<cdot> x = w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bordered_dec: assumes \"bordered w\" \n  obtains u v where \"u\\<cdot>v\\<cdot>u = w\" and \"u \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>u \\<cdot> v \\<cdot> u = w; u \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>u \\<cdot> v \\<cdot> u = w; u \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain u where \"u \\<le>b w\" and \"\\<not> bordered u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<le>b w; \\<not> bordered u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using unbordered_border[OF assms]"], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<le>b w \\<and> \\<not> bordered x\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<le>b w; \\<not> bordered u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u \\<le>b w\n  \\<not> bordered u\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>u \\<cdot> v \\<cdot> u = w; u \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<^bold>|u\\<^bold>| + \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|u\\<^bold>| + \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|", "using long_border_bordered[OF _ \\<open>u \\<le>b w\\<close>] \\<open>\\<not> bordered u\\<close> bordered_def leI"], ["proof (prove)\nusing this:\n  \\<^bold>|w\\<^bold>|\n  < \\<^bold>|u\\<^bold>| + \\<^bold>|u\\<^bold>| \\<Longrightarrow>\n  w\\<^sup><\\<inverse>u \\<inverse>\\<^sup>>u \\<le>b u\n  \\<not> bordered u\n  bordered ?w = (\\<exists>b. b \\<le>b ?w)\n  \\<not> ?x < ?y \\<Longrightarrow> ?y \\<le> ?x\n\ngoal (1 subgoal):\n 1. \\<^bold>|u\\<^bold>| + \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|", "by blast"], ["proof (state)\nthis:\n  \\<^bold>|u\\<^bold>| + \\<^bold>|u\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>u \\<cdot> v \\<cdot> u = w; u \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from border_short_dec[OF \\<open>u \\<le>b w\\<close> this, THEN that, OF borderD_nemp[OF \\<open>u \\<le>b w\\<close>]]"], ["proof (chain)\npicking this:\n  thesis", "show thesis"], ["proof (prove)\nusing this:\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Relation to period and conjugation\""], ["", "lemma border_conjug_eq: \"x \\<le>b w \\<Longrightarrow> (w\\<^sup><\\<inverse>x) \\<cdot> w = w \\<cdot> (x\\<inverse>\\<^sup>>w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>b w \\<Longrightarrow>\n    w\\<^sup><\\<inverse>x  \\<cdot> w = w \\<cdot> x\\<inverse>\\<^sup>>w", "using lq_rq_reassoc_suf[OF borderD_pref borderD_suf, symmetric]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<le>b ?z; ?u \\<le>b ?w\\<rbrakk>\n  \\<Longrightarrow> ?w\\<^sup><\\<inverse>?u  \\<cdot> ?z =\n                    ?w \\<cdot> ?u\\<inverse>\\<^sup>>?z\n\ngoal (1 subgoal):\n 1. x \\<le>b w \\<Longrightarrow>\n    w\\<^sup><\\<inverse>x  \\<cdot> w = w \\<cdot> x\\<inverse>\\<^sup>>w", "by blast"], ["", "lemma border_per_root: \"x \\<le>b w \\<Longrightarrow> w \\<le>p (w\\<^sup><\\<inverse>x) \\<cdot> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>b w \\<Longrightarrow> w \\<le>p w\\<^sup><\\<inverse>x  \\<cdot> w", "using border_conjug_eq"], ["proof (prove)\nusing this:\n  ?x \\<le>b ?w \\<Longrightarrow>\n  ?w\\<^sup><\\<inverse>?x  \\<cdot> ?w = ?w \\<cdot> ?x\\<inverse>\\<^sup>>?w\n\ngoal (1 subgoal):\n 1. x \\<le>b w \\<Longrightarrow> w \\<le>p w\\<^sup><\\<inverse>x  \\<cdot> w", "by blast"], ["", "lemma per_root_border: assumes \"\\<^bold>|r\\<^bold>| < \\<^bold>|w\\<^bold>|\" and \"r \\<noteq> \\<epsilon>\" and \"w \\<le>p r \\<cdot> w\" \n  shows \"r\\<inverse>\\<^sup>>w \\<le>b w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r\\<inverse>\\<^sup>>w \\<le>b w", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. r\\<inverse>\\<^sup>>w \\<le>p w\n 2. r\\<inverse>\\<^sup>>w \\<le>s w\n 3. r\\<inverse>\\<^sup>>w \\<noteq> w\n 4. r\\<inverse>\\<^sup>>w \\<noteq> \\<epsilon>", "have \"\\<^bold>|r\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|\" and \"r \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|r\\<^bold>| \\<le> \\<^bold>|w\\<^bold>| &&& r \\<le>p w", "using less_imp_le[OF \\<open>\\<^bold>|r\\<^bold>| < \\<^bold>|w\\<^bold>|\\<close>] pref_prod_long[OF \\<open>w \\<le>p r \\<cdot> w\\<close>]"], ["proof (prove)\nusing this:\n  \\<^bold>|r\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|\n  \\<^bold>|r\\<^bold>| \\<le> \\<^bold>|w\\<^bold>| \\<Longrightarrow> r \\<le>p w\n\ngoal (1 subgoal):\n 1. \\<^bold>|r\\<^bold>| \\<le> \\<^bold>|w\\<^bold>| &&& r \\<le>p w", "by blast+"], ["proof (state)\nthis:\n  \\<^bold>|r\\<^bold>| \\<le> \\<^bold>|w\\<^bold>|\n  r \\<le>p w\n\ngoal (4 subgoals):\n 1. r\\<inverse>\\<^sup>>w \\<le>p w\n 2. r\\<inverse>\\<^sup>>w \\<le>s w\n 3. r\\<inverse>\\<^sup>>w \\<noteq> w\n 4. r\\<inverse>\\<^sup>>w \\<noteq> \\<epsilon>", "show \"r\\<inverse>\\<^sup>>w \\<le>p w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r\\<inverse>\\<^sup>>w \\<le>p w", "using pref_lq[OF \\<open>r \\<le>p w\\<close> \\<open>w \\<le>p r \\<cdot> w\\<close>]"], ["proof (prove)\nusing this:\n  r\\<inverse>\\<^sup>>w \\<le>p r\\<inverse>\\<^sup>>(r \\<cdot> w)\n\ngoal (1 subgoal):\n 1. r\\<inverse>\\<^sup>>w \\<le>p w", "unfolding lq_triv"], ["proof (prove)\nusing this:\n  r\\<inverse>\\<^sup>>w \\<le>p w\n\ngoal (1 subgoal):\n 1. r\\<inverse>\\<^sup>>w \\<le>p w", "."], ["proof (state)\nthis:\n  r\\<inverse>\\<^sup>>w \\<le>p w\n\ngoal (3 subgoals):\n 1. r\\<inverse>\\<^sup>>w \\<le>s w\n 2. r\\<inverse>\\<^sup>>w \\<noteq> w\n 3. r\\<inverse>\\<^sup>>w \\<noteq> \\<epsilon>", "show \"r\\<inverse>\\<^sup>>w \\<le>s w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r\\<inverse>\\<^sup>>w \\<le>s w", "using \\<open>r \\<le>p w\\<close>"], ["proof (prove)\nusing this:\n  r \\<le>p w\n\ngoal (1 subgoal):\n 1. r\\<inverse>\\<^sup>>w \\<le>s w", "by auto"], ["proof (state)\nthis:\n  r\\<inverse>\\<^sup>>w \\<le>s w\n\ngoal (2 subgoals):\n 1. r\\<inverse>\\<^sup>>w \\<noteq> w\n 2. r\\<inverse>\\<^sup>>w \\<noteq> \\<epsilon>", "show \"r\\<inverse>\\<^sup>>w \\<noteq> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r\\<inverse>\\<^sup>>w \\<noteq> w", "using \\<open>r \\<le>p w\\<close> \\<open>r \\<noteq> \\<epsilon>\\<close>"], ["proof (prove)\nusing this:\n  r \\<le>p w\n  r \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. r\\<inverse>\\<^sup>>w \\<noteq> w", "by force"], ["proof (state)\nthis:\n  r\\<inverse>\\<^sup>>w \\<noteq> w\n\ngoal (1 subgoal):\n 1. r\\<inverse>\\<^sup>>w \\<noteq> \\<epsilon>", "show \"r\\<inverse>\\<^sup>>w \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r\\<inverse>\\<^sup>>w \\<noteq> \\<epsilon>", "using lq_pref[OF \\<open>r \\<le>p w\\<close>] \\<open>\\<^bold>|r\\<^bold>| < \\<^bold>|w\\<^bold>|\\<close>"], ["proof (prove)\nusing this:\n  r \\<cdot> r\\<inverse>\\<^sup>>w = w\n  \\<^bold>|r\\<^bold>| < \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. r\\<inverse>\\<^sup>>w \\<noteq> \\<epsilon>", "by force"], ["proof (state)\nthis:\n  r\\<inverse>\\<^sup>>w \\<noteq> \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma border_per: assumes \"x \\<le>b w\" shows \"periodN w (\\<^bold>|w\\<^bold>|-\\<^bold>|x\\<^bold>|)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodN w (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. periodN w (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|)", "have \"w = (w\\<^sup><\\<inverse>x)\\<cdot>x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w = w\\<^sup><\\<inverse>x  \\<cdot> x", "using rq_suf[OF borderD_suf[OF assms]]"], ["proof (prove)\nusing this:\n  w\\<^sup><\\<inverse>x  \\<cdot> x = w\n\ngoal (1 subgoal):\n 1. w = w\\<^sup><\\<inverse>x  \\<cdot> x", "by simp"], ["proof (state)\nthis:\n  w = w\\<^sup><\\<inverse>x  \\<cdot> x\n\ngoal (1 subgoal):\n 1. periodN w (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|)", "have \"w = x\\<cdot>(x\\<inverse>\\<^sup>>w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w = x \\<cdot> x\\<inverse>\\<^sup>>w", "using lq_pref[OF borderD_pref[OF assms]]"], ["proof (prove)\nusing this:\n  x \\<cdot> x\\<inverse>\\<^sup>>w = w\n\ngoal (1 subgoal):\n 1. w = x \\<cdot> x\\<inverse>\\<^sup>>w", "by simp"], ["proof (state)\nthis:\n  w = x \\<cdot> x\\<inverse>\\<^sup>>w\n\ngoal (1 subgoal):\n 1. periodN w (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|)", "have take: \"take (\\<^bold>|w\\<^bold>|-\\<^bold>|x\\<^bold>|) w = w\\<^sup><\\<inverse>x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|) w =\n    w\\<^sup><\\<inverse>x", "using borderD_suf[OF assms]"], ["proof (prove)\nusing this:\n  x \\<le>s w\n\ngoal (1 subgoal):\n 1. take (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|) w =\n    w\\<^sup><\\<inverse>x", "by auto"], ["proof (state)\nthis:\n  take (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|) w = w\\<^sup><\\<inverse>x \n\ngoal (1 subgoal):\n 1. periodN w (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|)", "have nemp: \"take (\\<^bold>|w\\<^bold>|-\\<^bold>|x\\<^bold>|) w \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|) w \\<noteq> \\<epsilon>", "using assms"], ["proof (prove)\nusing this:\n  x \\<le>b w\n\ngoal (1 subgoal):\n 1. take (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|) w \\<noteq> \\<epsilon>", "by auto"], ["proof (state)\nthis:\n  take (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|) w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. periodN w (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|)", "have \"w \\<le>p take (\\<^bold>|w\\<^bold>|-\\<^bold>|x\\<^bold>|) w \\<cdot> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<le>p take (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|) w \\<cdot> w", "unfolding take  lassoc[of \"w\\<^sup><\\<inverse>x\" x \"x\\<inverse>\\<^sup>>w\", folded \\<open>w = x \\<cdot> x\\<inverse>\\<^sup>>w\\<close> \\<open>w = w\\<^sup><\\<inverse>x \\<cdot> x\\<close>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<le>p w \\<cdot> x\\<inverse>\\<^sup>>w", "using  triv_pref[of w \"x\\<inverse>\\<^sup>>w\"]"], ["proof (prove)\nusing this:\n  w \\<le>p w \\<cdot> x\\<inverse>\\<^sup>>w\n\ngoal (1 subgoal):\n 1. w \\<le>p w \\<cdot> x\\<inverse>\\<^sup>>w", "."], ["proof (state)\nthis:\n  w \\<le>p take (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|) w \\<cdot> w\n\ngoal (1 subgoal):\n 1. periodN w (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|)", "thus \"periodN w (\\<^bold>|w\\<^bold>|-\\<^bold>|x\\<^bold>|)\""], ["proof (prove)\nusing this:\n  w \\<le>p take (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|) w \\<cdot> w\n\ngoal (1 subgoal):\n 1. periodN w (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|)", "unfolding periodN_def period_root_def"], ["proof (prove)\nusing this:\n  w \\<le>p take (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|) w \\<cdot> w\n\ngoal (1 subgoal):\n 1. w \\<le>p\n    take (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|) w \\<cdot> w \\<and>\n    take (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|) w \\<noteq> \\<epsilon>", "using nemp"], ["proof (prove)\nusing this:\n  w \\<le>p take (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|) w \\<cdot> w\n  take (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|) w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. w \\<le>p\n    take (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|) w \\<cdot> w \\<and>\n    take (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|) w \\<noteq> \\<epsilon>", "by blast"], ["proof (state)\nthis:\n  periodN w (\\<^bold>|w\\<^bold>| - \\<^bold>|x\\<^bold>|)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma per_border: assumes \"n < \\<^bold>|w\\<^bold>|\" and \"periodN w n\" \n  shows \"take (\\<^bold>|w\\<^bold>| - n) w  \\<le>b w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take (\\<^bold>|w\\<^bold>| - n) w \\<le>b w", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. take (\\<^bold>|w\\<^bold>| - n) w \\<le>b w", "have eq: \"take (\\<^bold>|w\\<^bold>| - n) w = drop n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take (\\<^bold>|w\\<^bold>| - n) w = drop n w", "using pref_take[OF \\<open>periodN w n\\<close>[unfolded per_shift[OF periodN_D1[OF \\<open>periodN w n\\<close>] per_positive[OF \\<open>periodN w n\\<close>]]], unfolded length_drop]"], ["proof (prove)\nusing this:\n  take (\\<^bold>|w\\<^bold>| - n) w = drop n w\n\ngoal (1 subgoal):\n 1. take (\\<^bold>|w\\<^bold>| - n) w = drop n w", "."], ["proof (state)\nthis:\n  take (\\<^bold>|w\\<^bold>| - n) w = drop n w\n\ngoal (1 subgoal):\n 1. take (\\<^bold>|w\\<^bold>| - n) w \\<le>b w", "have \"take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> \\<epsilon>", "using \\<open>n < \\<^bold>|w\\<^bold>|\\<close> take_eq_Nil"], ["proof (prove)\nusing this:\n  n < \\<^bold>|w\\<^bold>|\n  (take ?n ?xs = \\<epsilon>) = (?n = 0 \\<or> ?xs = \\<epsilon>)\n\ngoal (1 subgoal):\n 1. take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> \\<epsilon>", "by fastforce"], ["proof (state)\nthis:\n  take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. take (\\<^bold>|w\\<^bold>| - n) w \\<le>b w", "moreover"], ["proof (state)\nthis:\n  take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. take (\\<^bold>|w\\<^bold>| - n) w \\<le>b w", "have \"take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> w", "using  periodN_D2[OF \\<open>periodN w n\\<close>] \\<open>n < \\<^bold>|w\\<^bold>|\\<close>"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n  n < \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> w", "unfolding take_all_iff[of \"\\<^bold>|w\\<^bold>|-n\" w]"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n  n < \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<not> \\<^bold>|w\\<^bold>| \\<le> \\<^bold>|w\\<^bold>| - n", "by fastforce"], ["proof (state)\nthis:\n  take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> w\n\ngoal (1 subgoal):\n 1. take (\\<^bold>|w\\<^bold>| - n) w \\<le>b w", "ultimately"], ["proof (chain)\npicking this:\n  take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> \\<epsilon>\n  take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> w", "show ?thesis"], ["proof (prove)\nusing this:\n  take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> \\<epsilon>\n  take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> w\n\ngoal (1 subgoal):\n 1. take (\\<^bold>|w\\<^bold>| - n) w \\<le>b w", "unfolding border_def"], ["proof (prove)\nusing this:\n  take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> \\<epsilon>\n  take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> w\n\ngoal (1 subgoal):\n 1. take (\\<^bold>|w\\<^bold>| - n) w \\<le>p w \\<and>\n    take (\\<^bold>|w\\<^bold>| - n) w \\<le>s w \\<and>\n    take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> w \\<and>\n    take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> \\<epsilon>", "using take_is_prefix[of \"\\<^bold>|w\\<^bold>|-n\" w] suffix_drop[of n w, folded eq]"], ["proof (prove)\nusing this:\n  take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> \\<epsilon>\n  take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> w\n  take (\\<^bold>|w\\<^bold>| - n) w \\<le>p w\n  take (\\<^bold>|w\\<^bold>| - n) w \\<le>s w\n\ngoal (1 subgoal):\n 1. take (\\<^bold>|w\\<^bold>| - n) w \\<le>p w \\<and>\n    take (\\<^bold>|w\\<^bold>| - n) w \\<le>s w \\<and>\n    take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> w \\<and>\n    take (\\<^bold>|w\\<^bold>| - n) w \\<noteq> \\<epsilon>", "by blast"], ["proof (state)\nthis:\n  take (\\<^bold>|w\\<^bold>| - n) w \\<le>b w\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Primitive words\\<close>"], ["", "text\\<open>If a word $w$ is not a non-trivial power of some other word, we say it is primitive.\\<close>"], ["", "definition primitive :: \"'a list \\<Rightarrow> bool\" \n  where  \"primitive u = (\\<forall> r k. r\\<^sup>@k = u \\<longrightarrow> k = 1)\""], ["", "lemma primI: \"(\\<And> r k. r\\<^sup>@k = u \\<Longrightarrow> k = 1) \\<Longrightarrow> primitive u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r k. r \\<^sup>@ k = u \\<Longrightarrow> k = 1) \\<Longrightarrow>\n    primitive u", "by (simp add: primitive_def)"], ["", "lemma prim_nemp: \"primitive u \\<Longrightarrow> u \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primitive u \\<Longrightarrow> u \\<noteq> \\<epsilon>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. primitive u \\<Longrightarrow> u \\<noteq> \\<epsilon>", "have \"u = \\<epsilon> \\<Longrightarrow> \\<epsilon>\\<^sup>@0 = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u = \\<epsilon> \\<Longrightarrow> \\<epsilon> \\<^sup>@ 0 = u", "by simp"], ["proof (state)\nthis:\n  u = \\<epsilon> \\<Longrightarrow> \\<epsilon> \\<^sup>@ 0 = u\n\ngoal (1 subgoal):\n 1. primitive u \\<Longrightarrow> u \\<noteq> \\<epsilon>", "thus \"primitive u \\<Longrightarrow> u \\<noteq> \\<epsilon>\""], ["proof (prove)\nusing this:\n  u = \\<epsilon> \\<Longrightarrow> \\<epsilon> \\<^sup>@ 0 = u\n\ngoal (1 subgoal):\n 1. primitive u \\<Longrightarrow> u \\<noteq> \\<epsilon>", "using primitive_def zero_neq_one"], ["proof (prove)\nusing this:\n  u = \\<epsilon> \\<Longrightarrow> \\<epsilon> \\<^sup>@ 0 = u\n  primitive ?u = (\\<forall>r k. r \\<^sup>@ k = ?u \\<longrightarrow> k = 1)\n  (0::?'a) \\<noteq> (1::?'a)\n\ngoal (1 subgoal):\n 1. primitive u \\<Longrightarrow> u \\<noteq> \\<epsilon>", "by blast"], ["proof (state)\nthis:\n  primitive u \\<Longrightarrow> u \\<noteq> \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prim_exp_one: \"primitive u \\<Longrightarrow> r\\<^sup>@k = u \\<Longrightarrow> k = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>primitive u; r \\<^sup>@ k = u\\<rbrakk> \\<Longrightarrow> k = 1", "using primitive_def"], ["proof (prove)\nusing this:\n  primitive ?u = (\\<forall>r k. r \\<^sup>@ k = ?u \\<longrightarrow> k = 1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>primitive u; r \\<^sup>@ k = u\\<rbrakk> \\<Longrightarrow> k = 1", "by blast"], ["", "lemma prim_exp_eq: \"primitive u \\<Longrightarrow> r\\<^sup>@k = u \\<Longrightarrow> u = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>primitive u; r \\<^sup>@ k = u\\<rbrakk> \\<Longrightarrow> u = r", "using prim_exp_one power_one_right"], ["proof (prove)\nusing this:\n  \\<lbrakk>primitive ?u; ?r \\<^sup>@ ?k = ?u\\<rbrakk>\n  \\<Longrightarrow> ?k = 1\n  ?a \\<^sup>@ 1 = ?a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>primitive u; r \\<^sup>@ k = u\\<rbrakk> \\<Longrightarrow> u = r", "by blast"], ["", "lemma prim_triv_root: \"primitive u \\<Longrightarrow> u \\<in> t* \\<Longrightarrow> t = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>primitive u; u \\<in> t*\\<rbrakk> \\<Longrightarrow> t = u", "using prim_exp_eq"], ["proof (prove)\nusing this:\n  \\<lbrakk>primitive ?u; ?r \\<^sup>@ ?k = ?u\\<rbrakk>\n  \\<Longrightarrow> ?u = ?r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>primitive u; u \\<in> t*\\<rbrakk> \\<Longrightarrow> t = u", "unfolding root_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>primitive ?u; ?r \\<^sup>@ ?k = ?u\\<rbrakk>\n  \\<Longrightarrow> ?u = ?r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>primitive u; \\<exists>k. t \\<^sup>@ k = u\\<rbrakk>\n    \\<Longrightarrow> t = u", "unfolding primitive_def root_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>r k. r \\<^sup>@ k = ?u \\<longrightarrow> k = 1;\n   ?r \\<^sup>@ ?k = ?u\\<rbrakk>\n  \\<Longrightarrow> ?u = ?r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>r k. r \\<^sup>@ k = u \\<longrightarrow> k = 1;\n     \\<exists>k. t \\<^sup>@ k = u\\<rbrakk>\n    \\<Longrightarrow> t = u", "by fastforce"], ["", "lemma prim_comm_exp[elim]: assumes \"primitive v\" and \"v\\<cdot>u = u\\<cdot>v\" obtains k where \"u = v\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k. u = v \\<^sup>@ k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>v\\<cdot>u = u\\<cdot>v\\<close>[unfolded comm] prim_exp_eq[OF \\<open>primitive v\\<close>]"], ["proof (prove)\nusing this:\n  \\<exists>t m k. v = t \\<^sup>@ k \\<and> u = t \\<^sup>@ m\n  ?r \\<^sup>@ ?k = v \\<Longrightarrow> v = ?r\n\ngoal (1 subgoal):\n 1. (\\<And>k. u = v \\<^sup>@ k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["", "lemma pow_non_prim: \"1 < k \\<Longrightarrow> \\<not> primitive (w\\<^sup>@k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < k \\<Longrightarrow> \\<not> primitive (w \\<^sup>@ k)", "using prim_exp_one"], ["proof (prove)\nusing this:\n  \\<lbrakk>primitive ?u; ?r \\<^sup>@ ?k = ?u\\<rbrakk>\n  \\<Longrightarrow> ?k = 1\n\ngoal (1 subgoal):\n 1. 1 < k \\<Longrightarrow> \\<not> primitive (w \\<^sup>@ k)", "by auto"], ["", "lemma comm_non_prim: assumes \"u \\<noteq> \\<epsilon>\" \"v \\<noteq> \\<epsilon>\" \"u\\<cdot>v = v\\<cdot>u\" shows \"\\<not> primitive (u\\<cdot>v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> primitive (u \\<cdot> v)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> primitive (u \\<cdot> v)", "obtain t k m where \"u = t\\<^sup>@k\"  \"v = t\\<^sup>@m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t k m.\n        \\<lbrakk>u = t \\<^sup>@ k; v = t \\<^sup>@ m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>u\\<cdot>v = v\\<cdot>u\\<close>[unfolded comm]"], ["proof (prove)\nusing this:\n  \\<exists>t m k. u = t \\<^sup>@ k \\<and> v = t \\<^sup>@ m\n\ngoal (1 subgoal):\n 1. (\\<And>t k m.\n        \\<lbrakk>u = t \\<^sup>@ k; v = t \\<^sup>@ m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u = t \\<^sup>@ k\n  v = t \\<^sup>@ m\n\ngoal (1 subgoal):\n 1. \\<not> primitive (u \\<cdot> v)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> primitive (u \\<cdot> v)", "using pow_non_prim[of \"k+m\" \"t\"]"], ["proof (prove)\nusing this:\n  1 < k + m \\<Longrightarrow> \\<not> primitive (t \\<^sup>@ (k + m))\n\ngoal (1 subgoal):\n 1. \\<not> primitive (u \\<cdot> v)", "unfolding \\<open>u = t\\<^sup>@k\\<close> \\<open>v = t\\<^sup>@m\\<close> pow_add_list[of t k m]"], ["proof (prove)\nusing this:\n  1 < k + m \\<Longrightarrow>\n  \\<not> primitive (t \\<^sup>@ k \\<cdot> t \\<^sup>@ m)\n\ngoal (1 subgoal):\n 1. \\<not> primitive (t \\<^sup>@ k \\<cdot> t \\<^sup>@ m)", "using nemp_pow[OF \\<open>u \\<noteq> \\<epsilon>\\<close>[unfolded \\<open>u = t\\<^sup>@k\\<close>]] nemp_pow[OF \\<open>v \\<noteq> \\<epsilon>\\<close>[unfolded \\<open>v = t\\<^sup>@m\\<close>]]"], ["proof (prove)\nusing this:\n  1 < k + m \\<Longrightarrow>\n  \\<not> primitive (t \\<^sup>@ k \\<cdot> t \\<^sup>@ m)\n  k \\<noteq> 0\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> primitive (t \\<^sup>@ k \\<cdot> t \\<^sup>@ m)", "by linarith"], ["proof (state)\nthis:\n  \\<not> primitive (u \\<cdot> v)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prim_rotate_conv: \"primitive w \\<longleftrightarrow> primitive (rotate n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primitive w = primitive (rotate n w)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. primitive w \\<Longrightarrow> primitive (rotate n w)\n 2. primitive (rotate n w) \\<Longrightarrow> primitive w", "assume \"primitive w\""], ["proof (state)\nthis:\n  primitive w\n\ngoal (2 subgoals):\n 1. primitive w \\<Longrightarrow> primitive (rotate n w)\n 2. primitive (rotate n w) \\<Longrightarrow> primitive w", "show \"primitive (rotate n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primitive (rotate n w)", "proof (rule primI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r k. r \\<^sup>@ k = rotate n w \\<Longrightarrow> k = 1", "fix r k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r k. r \\<^sup>@ k = rotate n w \\<Longrightarrow> k = 1", "assume \"r\\<^sup>@k = rotate n w\""], ["proof (state)\nthis:\n  r \\<^sup>@ k = rotate n w\n\ngoal (1 subgoal):\n 1. \\<And>r k. r \\<^sup>@ k = rotate n w \\<Longrightarrow> k = 1", "obtain l where \"(rotate l r)\\<^sup>@k = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l.\n        rotate l r \\<^sup>@ k = w \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using rotate_back[of n w, folded \\<open>r\\<^sup>@k = rotate n w\\<close>, unfolded rotate_pow_comm]"], ["proof (prove)\nusing this:\n  (\\<And>m.\n      rotate m r \\<^sup>@ k = w \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        rotate l r \\<^sup>@ k = w \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  rotate l r \\<^sup>@ k = w\n\ngoal (1 subgoal):\n 1. \\<And>r k. r \\<^sup>@ k = rotate n w \\<Longrightarrow> k = 1", "from prim_exp_one[OF \\<open>primitive w\\<close> this]"], ["proof (chain)\npicking this:\n  k = 1", "show \"k = 1\""], ["proof (prove)\nusing this:\n  k = 1\n\ngoal (1 subgoal):\n 1. k = 1", "."], ["proof (state)\nthis:\n  k = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  primitive (rotate n w)\n\ngoal (1 subgoal):\n 1. primitive (rotate n w) \\<Longrightarrow> primitive w", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. primitive (rotate n w) \\<Longrightarrow> primitive w", "assume \"primitive (rotate n w)\""], ["proof (state)\nthis:\n  primitive (rotate n w)\n\ngoal (1 subgoal):\n 1. primitive (rotate n w) \\<Longrightarrow> primitive w", "show \"primitive w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primitive w", "proof (rule primI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r k. r \\<^sup>@ k = w \\<Longrightarrow> k = 1", "fix r k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r k. r \\<^sup>@ k = w \\<Longrightarrow> k = 1", "assume \"r\\<^sup>@k = w\""], ["proof (state)\nthis:\n  r \\<^sup>@ k = w\n\ngoal (1 subgoal):\n 1. \\<And>r k. r \\<^sup>@ k = w \\<Longrightarrow> k = 1", "from prim_exp_one[OF \\<open>primitive (rotate n w)\\<close>, OF rotate_pow_comm[of n r k, unfolded this, symmetric]]"], ["proof (chain)\npicking this:\n  k = 1", "show \"k = 1\""], ["proof (prove)\nusing this:\n  k = 1\n\ngoal (1 subgoal):\n 1. k = 1", "."], ["proof (state)\nthis:\n  k = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  primitive w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma non_prim: assumes \"\\<not> primitive w\" and \"w \\<noteq> \\<epsilon>\"\n  obtains r k where \"r \\<noteq> \\<epsilon>\" and \"1 < k\" and \"r\\<^sup>@k = w\" and \"w \\<noteq> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r k.\n        \\<lbrakk>r \\<noteq> \\<epsilon>; 1 < k; r \\<^sup>@ k = w;\n         w \\<noteq> r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>r k.\n        \\<lbrakk>r \\<noteq> \\<epsilon>; 1 < k; r \\<^sup>@ k = w;\n         w \\<noteq> r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>\\<not> primitive w\\<close>[unfolded primitive_def]"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>r k. r \\<^sup>@ k = w \\<longrightarrow> k = 1)", "obtain r k where \"k \\<noteq> 1\" and \"r\\<^sup>@k = w\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>r k. r \\<^sup>@ k = w \\<longrightarrow> k = 1)\n\ngoal (1 subgoal):\n 1. (\\<And>k r.\n        \\<lbrakk>k \\<noteq> 1; r \\<^sup>@ k = w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  k \\<noteq> 1\n  r \\<^sup>@ k = w\n\ngoal (1 subgoal):\n 1. (\\<And>r k.\n        \\<lbrakk>r \\<noteq> \\<epsilon>; 1 < k; r \\<^sup>@ k = w;\n         w \\<noteq> r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"r \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<noteq> \\<epsilon>", "using \\<open>w \\<noteq> \\<epsilon>\\<close> \\<open>r\\<^sup>@k = w\\<close> emp_pow"], ["proof (prove)\nusing this:\n  w \\<noteq> \\<epsilon>\n  r \\<^sup>@ k = w\n  \\<epsilon> \\<^sup>@ ?n = \\<epsilon>\n\ngoal (1 subgoal):\n 1. r \\<noteq> \\<epsilon>", "by blast"], ["proof (state)\nthis:\n  r \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. (\\<And>r k.\n        \\<lbrakk>r \\<noteq> \\<epsilon>; 1 < k; r \\<^sup>@ k = w;\n         w \\<noteq> r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"k \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<noteq> 0", "using \\<open>w \\<noteq> \\<epsilon>\\<close> \\<open>r\\<^sup>@k = w\\<close> pow_zero[of r]"], ["proof (prove)\nusing this:\n  w \\<noteq> \\<epsilon>\n  r \\<^sup>@ k = w\n  r \\<^sup>@ 0 = \\<epsilon>\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0", "by meson"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>r k.\n        \\<lbrakk>r \\<noteq> \\<epsilon>; 1 < k; r \\<^sup>@ k = w;\n         w \\<noteq> r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"w \\<noteq> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<noteq> r", "using \\<open>k \\<noteq> 1\\<close>[folded eq_pow_exp[OF \\<open>r \\<noteq> \\<epsilon>\\<close>, of k 1, unfolded \\<open>r \\<^sup>@ k = w\\<close>]]"], ["proof (prove)\nusing this:\n  w \\<noteq> r \\<^sup>@ 1\n\ngoal (1 subgoal):\n 1. w \\<noteq> r", "by simp"], ["proof (state)\nthis:\n  w \\<noteq> r\n\ngoal (1 subgoal):\n 1. (\\<And>r k.\n        \\<lbrakk>r \\<noteq> \\<epsilon>; 1 < k; r \\<^sup>@ k = w;\n         w \\<noteq> r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using that[OF \\<open>r \\<noteq> \\<epsilon>\\<close> _ \\<open>r\\<^sup>@k = w\\<close> \\<open>w \\<noteq> r\\<close>] \\<open>k \\<noteq> 0\\<close> \\<open>k \\<noteq> 1\\<close> less_linear"], ["proof (prove)\nusing this:\n  1 < k \\<Longrightarrow> thesis\n  k \\<noteq> 0\n  k \\<noteq> 1\n  ?x < ?y \\<or> ?x = ?y \\<or> ?y < ?x\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prim_no_rotate: assumes \"primitive w\" and \"0 < n\" and \"n < \\<^bold>|w\\<^bold>|\" \n  shows \"rotate n w \\<noteq> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rotate n w \\<noteq> w", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. rotate n w = w \\<Longrightarrow> False", "assume \"rotate n w = w\""], ["proof (state)\nthis:\n  rotate n w = w\n\ngoal (1 subgoal):\n 1. rotate n w = w \\<Longrightarrow> False", "have \"take n w \\<cdot> drop n w = drop n w \\<cdot> take n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take n w \\<cdot> drop n w = drop n w \\<cdot> take n w", "using rotate_append[of \"take n w\" \"drop n w\"]"], ["proof (prove)\nusing this:\n  rotate \\<^bold>|take n w\\<^bold>| (take n w \\<cdot> drop n w) =\n  drop n w \\<cdot> take n w\n\ngoal (1 subgoal):\n 1. take n w \\<cdot> drop n w = drop n w \\<cdot> take n w", "unfolding take_len[OF less_imp_le_nat[OF \\<open>n < \\<^bold>|w\\<^bold>|\\<close>]] append_take_drop_id \\<open>rotate n w = w\\<close>"], ["proof (prove)\nusing this:\n  w = drop n w \\<cdot> take n w\n\ngoal (1 subgoal):\n 1. w = drop n w \\<cdot> take n w", "."], ["proof (state)\nthis:\n  take n w \\<cdot> drop n w = drop n w \\<cdot> take n w\n\ngoal (1 subgoal):\n 1. rotate n w = w \\<Longrightarrow> False", "have \"take n w \\<noteq> \\<epsilon>\" \"drop n w \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take n w \\<noteq> \\<epsilon> &&& drop n w \\<noteq> \\<epsilon>", "using \\<open>0 < n\\<close> \\<open>n < \\<^bold>|w\\<^bold>|\\<close>"], ["proof (prove)\nusing this:\n  0 < n\n  n < \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. take n w \\<noteq> \\<epsilon> &&& drop n w \\<noteq> \\<epsilon>", "by auto+"], ["proof (state)\nthis:\n  take n w \\<noteq> \\<epsilon>\n  drop n w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. rotate n w = w \\<Longrightarrow> False", "from \\<open>primitive w\\<close>"], ["proof (chain)\npicking this:\n  primitive w", "show False"], ["proof (prove)\nusing this:\n  primitive w\n\ngoal (1 subgoal):\n 1. False", "using comm_non_prim[OF \\<open>take n w \\<noteq> \\<epsilon>\\<close> \\<open>drop n w \\<noteq> \\<epsilon>\\<close> \\<open>take n w \\<cdot> drop n w = drop n w \\<cdot> take n w\\<close>, unfolded append_take_drop_id]"], ["proof (prove)\nusing this:\n  primitive w\n  \\<not> primitive w\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma no_rotate_prim: assumes  \"w \\<noteq> \\<epsilon>\" and \"\\<And> n. 0 < n \\<Longrightarrow> n < \\<^bold>|w\\<^bold>| \\<Longrightarrow> rotate n w \\<noteq> w\"\n  shows \"primitive w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primitive w", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> primitive w \\<Longrightarrow> False", "assume \"\\<not> primitive w\""], ["proof (state)\nthis:\n  \\<not> primitive w\n\ngoal (1 subgoal):\n 1. \\<not> primitive w \\<Longrightarrow> False", "from non_prim[OF this \\<open>w \\<noteq> \\<epsilon>\\<close>]"], ["proof (chain)\npicking this:\n  (\\<And>r k.\n      \\<lbrakk>r \\<noteq> \\<epsilon>; 1 < k; r \\<^sup>@ k = w;\n       w \\<noteq> r\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain r l where \"r \\<noteq> \\<epsilon>\" and \"1 < l\" and \"r\\<^sup>@l = w\" and \"w \\<noteq> r\""], ["proof (prove)\nusing this:\n  (\\<And>r k.\n      \\<lbrakk>r \\<noteq> \\<epsilon>; 1 < k; r \\<^sup>@ k = w;\n       w \\<noteq> r\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>r l.\n        \\<lbrakk>r \\<noteq> \\<epsilon>; 1 < l; r \\<^sup>@ l = w;\n         w \\<noteq> r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  r \\<noteq> \\<epsilon>\n  1 < l\n  r \\<^sup>@ l = w\n  w \\<noteq> r\n\ngoal (1 subgoal):\n 1. \\<not> primitive w \\<Longrightarrow> False", "have \"rotate \\<^bold>|r\\<^bold>| w = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rotate \\<^bold>|r\\<^bold>| w = w", "using rotate_root_self[of r l, unfolded \\<open>r\\<^sup>@l = w\\<close>]"], ["proof (prove)\nusing this:\n  rotate \\<^bold>|r\\<^bold>| w = w\n\ngoal (1 subgoal):\n 1. rotate \\<^bold>|r\\<^bold>| w = w", "."], ["proof (state)\nthis:\n  rotate \\<^bold>|r\\<^bold>| w = w\n\ngoal (1 subgoal):\n 1. \\<not> primitive w \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  rotate \\<^bold>|r\\<^bold>| w = w\n\ngoal (1 subgoal):\n 1. \\<not> primitive w \\<Longrightarrow> False", "have \"0 < \\<^bold>|r\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<^bold>|r\\<^bold>|", "by (simp add: \\<open>r \\<noteq> \\<epsilon>\\<close>)"], ["proof (state)\nthis:\n  0 < \\<^bold>|r\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<not> primitive w \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  0 < \\<^bold>|r\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<not> primitive w \\<Longrightarrow> False", "have \"\\<^bold>|r\\<^bold>| < \\<^bold>|w\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|r\\<^bold>| < \\<^bold>|w\\<^bold>|", "unfolding pow_len[of r l, unfolded \\<open>r\\<^sup>@l = w\\<close>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|r\\<^bold>| < l * \\<^bold>|r\\<^bold>|", "using  \\<open>1 < l\\<close> \\<open>0 < \\<^bold>|r\\<^bold>|\\<close>"], ["proof (prove)\nusing this:\n  1 < l\n  0 < \\<^bold>|r\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<^bold>|r\\<^bold>| < l * \\<^bold>|r\\<^bold>|", "by auto"], ["proof (state)\nthis:\n  \\<^bold>|r\\<^bold>| < \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<not> primitive w \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  rotate \\<^bold>|r\\<^bold>| w = w\n  0 < \\<^bold>|r\\<^bold>|\n  \\<^bold>|r\\<^bold>| < \\<^bold>|w\\<^bold>|", "show False"], ["proof (prove)\nusing this:\n  rotate \\<^bold>|r\\<^bold>| w = w\n  0 < \\<^bold>|r\\<^bold>|\n  \\<^bold>|r\\<^bold>| < \\<^bold>|w\\<^bold>|\n\ngoal (1 subgoal):\n 1. False", "using assms(2)"], ["proof (prove)\nusing this:\n  rotate \\<^bold>|r\\<^bold>| w = w\n  0 < \\<^bold>|r\\<^bold>|\n  \\<^bold>|r\\<^bold>| < \\<^bold>|w\\<^bold>|\n  \\<lbrakk>0 < ?n; ?n < \\<^bold>|w\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> rotate ?n w \\<noteq> w\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary prim_iff_rotate: assumes \"w \\<noteq> \\<epsilon>\" shows \n   \"primitive w \\<longleftrightarrow> (\\<forall> n. 0 < n \\<and> n < \\<^bold>|w\\<^bold>| \\<longrightarrow> rotate n w \\<noteq> w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primitive w =\n    (\\<forall>n.\n        0 < n \\<and> n < \\<^bold>|w\\<^bold>| \\<longrightarrow>\n        rotate n w \\<noteq> w)", "using no_rotate_prim[OF \\<open>w \\<noteq> \\<epsilon>\\<close>] prim_no_rotate"], ["proof (prove)\nusing this:\n  (\\<And>n.\n      \\<lbrakk>0 < n; n < \\<^bold>|w\\<^bold>|\\<rbrakk>\n      \\<Longrightarrow> rotate n w \\<noteq> w) \\<Longrightarrow>\n  primitive w\n  \\<lbrakk>primitive ?w; 0 < ?n; ?n < \\<^bold>|?w\\<^bold>|\\<rbrakk>\n  \\<Longrightarrow> rotate ?n ?w \\<noteq> ?w\n\ngoal (1 subgoal):\n 1. primitive w =\n    (\\<forall>n.\n        0 < n \\<and> n < \\<^bold>|w\\<^bold>| \\<longrightarrow>\n        rotate n w \\<noteq> w)", "by blast"], ["", "lemma prim_sing: \"primitive [a]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primitive [a]", "using prim_iff_rotate[of \"[a]\"]"], ["proof (prove)\nusing this:\n  [a] \\<noteq> \\<epsilon> \\<Longrightarrow>\n  primitive [a] =\n  (\\<forall>n.\n      0 < n \\<and> n < \\<^bold>|[a]\\<^bold>| \\<longrightarrow>\n      rotate n [a] \\<noteq> [a])\n\ngoal (1 subgoal):\n 1. primitive [a]", "by fastforce"], ["", "lemma prim_rev_iff[reversal_rule]: \"primitive (rev u) \\<longleftrightarrow> primitive u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primitive (rev u) = primitive u", "unfolding primitive_def[reversed]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>r k. r \\<^sup>@ k = u \\<longrightarrow> k = 1) = primitive u", "using primitive_def"], ["proof (prove)\nusing this:\n  primitive ?u = (\\<forall>r k. r \\<^sup>@ k = ?u \\<longrightarrow> k = 1)\n\ngoal (1 subgoal):\n 1. (\\<forall>r k. r \\<^sup>@ k = u \\<longrightarrow> k = 1) = primitive u", ".."], ["", "section \\<open>Primitive root\\<close>"], ["", "text\\<open>Given a non-empty word $w$ which is not primitive, it is natural to look for the shortest $u$ such that $w = u^k$.\nSuch a word is primitive, and it is the primitive root of $w$.\\<close>"], ["", "definition primitive_rootP :: \"'a list \\<Rightarrow> 'a list \\<Rightarrow> bool\" (\"_ \\<in>\\<^sub>p _ *\" [51,51] 60)\n  where  \"primitive_rootP x r = (x \\<noteq> \\<epsilon> \\<and> x \\<in> r* \\<and> primitive r)\""], ["", "lemma prim_rootD [dest]: \"x \\<in>\\<^sub>p r* \\<Longrightarrow> x \\<in> r*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>p r * \\<Longrightarrow> x \\<in> r*", "unfolding primitive_rootP_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> \\<epsilon> \\<and>\n    x \\<in> r* \\<and> primitive r \\<Longrightarrow>\n    x \\<in> r*", "by (elim conjE)"], ["", "lemma prim_rootI [intro]: \"u \\<noteq> \\<epsilon> \\<Longrightarrow>  u \\<in> r* \\<Longrightarrow> primitive r \\<Longrightarrow> u \\<in>\\<^sub>p r*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<noteq> \\<epsilon>; u \\<in> r*; primitive r\\<rbrakk>\n    \\<Longrightarrow> u \\<in>\\<^sub>p r *", "unfolding primitive_rootP_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<noteq> \\<epsilon>; u \\<in> r*; primitive r\\<rbrakk>\n    \\<Longrightarrow> u \\<noteq> \\<epsilon> \\<and>\n                      u \\<in> r* \\<and> primitive r", "by (intro conjI)"], ["", "lemma prim_root_rev_conv [reversal_rule]: \"rev x \\<in>\\<^sub>p rev r* \\<longleftrightarrow>  x \\<in>\\<^sub>p r*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev x \\<in>\\<^sub>p rev r * = x \\<in>\\<^sub>p r *", "unfolding primitive_rootP_def[reversed]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<noteq> \\<epsilon> \\<and> x \\<in> r* \\<and> primitive r) =\n    x \\<in>\\<^sub>p r *", "using primitive_rootP_def"], ["proof (prove)\nusing this:\n  ?x \\<in>\\<^sub>p ?r * =\n  (?x \\<noteq> \\<epsilon> \\<and> ?x \\<in> ?r* \\<and> primitive ?r)\n\ngoal (1 subgoal):\n 1. (x \\<noteq> \\<epsilon> \\<and> x \\<in> r* \\<and> primitive r) =\n    x \\<in>\\<^sub>p r *", ".."], ["", "fun primitive_root :: \"'a list \\<Rightarrow> 'a list\" (\"\\<rho>\") where \"primitive_root x = (THE r. x \\<in>\\<^sub>p r*)\""], ["", "lemma primrootE: assumes \"x \\<in>\\<^sub>p r*\"\n  obtains k where \"k \\<noteq> 0\" and \"r\\<^sup>@k = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<noteq> 0; r \\<^sup>@ k = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>p r *\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<noteq> 0; r \\<^sup>@ k = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding primitive_rootP_def root_def"], ["proof (prove)\nusing this:\n  x \\<noteq> \\<epsilon> \\<and>\n  (\\<exists>k. r \\<^sup>@ k = x) \\<and> primitive r\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<noteq> 0; r \\<^sup>@ k = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using nemp_pow[of r]"], ["proof (prove)\nusing this:\n  x \\<noteq> \\<epsilon> \\<and>\n  (\\<exists>k. r \\<^sup>@ k = x) \\<and> primitive r\n  r \\<^sup>@ ?m \\<noteq> \\<epsilon> \\<Longrightarrow> ?m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<noteq> 0; r \\<^sup>@ k = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "lemma primroot_of_root: \"\\<lbrakk> x \\<noteq> \\<epsilon>; x \\<in> u*; u \\<in>\\<^sub>p r*\\<rbrakk> \\<Longrightarrow> x \\<in>\\<^sub>p r*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> \\<epsilon>; x \\<in> u*; u \\<in>\\<^sub>p r *\\<rbrakk>\n    \\<Longrightarrow> x \\<in>\\<^sub>p r *", "unfolding primitive_rootP_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> \\<epsilon>; x \\<in> u*;\n     u \\<noteq> \\<epsilon> \\<and> u \\<in> r* \\<and> primitive r\\<rbrakk>\n    \\<Longrightarrow> x \\<noteq> \\<epsilon> \\<and>\n                      x \\<in> r* \\<and> primitive r", "using root_trans"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> ?u*; ?u \\<in> ?t*\\<rbrakk>\n  \\<Longrightarrow> ?v \\<in> ?t*\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> \\<epsilon>; x \\<in> u*;\n     u \\<noteq> \\<epsilon> \\<and> u \\<in> r* \\<and> primitive r\\<rbrakk>\n    \\<Longrightarrow> x \\<noteq> \\<epsilon> \\<and>\n                      x \\<in> r* \\<and> primitive r", "by blast"], ["", "lemma comm_prim: assumes \"primitive r\" and  \"primitive s\" and \"r\\<cdot>s = s\\<cdot>r\"\n      shows \"r = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r = s", "using \\<open>r\\<cdot>s = s\\<cdot>r\\<close>[unfolded comm] assms[unfolded primitive_def, rule_format]"], ["proof (prove)\nusing this:\n  \\<exists>t m k. r = t \\<^sup>@ k \\<and> s = t \\<^sup>@ m\n  ?r \\<^sup>@ ?k = r \\<Longrightarrow> ?k = 1\n  ?r \\<^sup>@ ?k = s \\<Longrightarrow> ?k = 1\n  r \\<cdot> s = s \\<cdot> r\n\ngoal (1 subgoal):\n 1. r = s", "by metis"], ["", "lemma primroot_ex: assumes \"x \\<noteq> \\<epsilon>\" shows \"\\<exists> r k.  x \\<in>\\<^sub>p r* \\<and> k \\<noteq> 0 \\<and> x = r\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r k.\n       x \\<in>\\<^sub>p r * \\<and> k \\<noteq> 0 \\<and> x = r \\<^sup>@ k", "using \\<open>x \\<noteq> \\<epsilon>\\<close>"], ["proof (prove)\nusing this:\n  x \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>r k.\n       x \\<in>\\<^sub>p r * \\<and> k \\<noteq> 0 \\<and> x = r \\<^sup>@ k", "proof(induction \"\\<^bold>|x\\<^bold>|\" arbitrary: x rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>xa.\n                   \\<lbrakk>\\<^bold>|xa\\<^bold>| < \\<^bold>|x\\<^bold>|;\n                    xa \\<noteq> \\<epsilon>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>r k.\n  xa \\<in>\\<^sub>p r * \\<and> k \\<noteq> 0 \\<and> xa = r \\<^sup>@ k;\n        x \\<noteq> \\<epsilon>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r k.\n                            x \\<in>\\<^sub>p r * \\<and>\n                            k \\<noteq> 0 \\<and> x = r \\<^sup>@ k", "case less"], ["proof (state)\nthis:\n  \\<lbrakk>\\<^bold>|?x\\<^bold>| < \\<^bold>|x\\<^bold>|;\n   ?x \\<noteq> \\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r k.\n                       ?x \\<in>\\<^sub>p r * \\<and>\n                       k \\<noteq> 0 \\<and> ?x = r \\<^sup>@ k\n  x \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>xa.\n                   \\<lbrakk>\\<^bold>|xa\\<^bold>| < \\<^bold>|x\\<^bold>|;\n                    xa \\<noteq> \\<epsilon>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>r k.\n  xa \\<in>\\<^sub>p r * \\<and> k \\<noteq> 0 \\<and> xa = r \\<^sup>@ k;\n        x \\<noteq> \\<epsilon>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r k.\n                            x \\<in>\\<^sub>p r * \\<and>\n                            k \\<noteq> 0 \\<and> x = r \\<^sup>@ k", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<^bold>|?x\\<^bold>| < \\<^bold>|x\\<^bold>|;\n   ?x \\<noteq> \\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r k.\n                       ?x \\<in>\\<^sub>p r * \\<and>\n                       k \\<noteq> 0 \\<and> ?x = r \\<^sup>@ k\n  x \\<noteq> \\<epsilon>", "show \"\\<exists> r k.  x \\<in>\\<^sub>p r* \\<and> k \\<noteq> 0 \\<and> x = r\\<^sup>@k\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<^bold>|?x\\<^bold>| < \\<^bold>|x\\<^bold>|;\n   ?x \\<noteq> \\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r k.\n                       ?x \\<in>\\<^sub>p r * \\<and>\n                       k \\<noteq> 0 \\<and> ?x = r \\<^sup>@ k\n  x \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>r k.\n       x \\<in>\\<^sub>p r * \\<and> k \\<noteq> 0 \\<and> x = r \\<^sup>@ k", "proof (cases \"primitive x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<^bold>|x\\<^bold>| < \\<^bold>|x\\<^bold>|;\n                 x \\<noteq> \\<epsilon>\\<rbrakk>\n                \\<Longrightarrow> \\<exists>r k.\n                                     x \\<in>\\<^sub>p r * \\<and>\n                                     k \\<noteq> 0 \\<and> x = r \\<^sup>@ k;\n     x \\<noteq> \\<epsilon>; primitive x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r k.\n                         x \\<in>\\<^sub>p r * \\<and>\n                         k \\<noteq> 0 \\<and> x = r \\<^sup>@ k\n 2. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<^bold>|x\\<^bold>| < \\<^bold>|x\\<^bold>|;\n                 x \\<noteq> \\<epsilon>\\<rbrakk>\n                \\<Longrightarrow> \\<exists>r k.\n                                     x \\<in>\\<^sub>p r * \\<and>\n                                     k \\<noteq> 0 \\<and> x = r \\<^sup>@ k;\n     x \\<noteq> \\<epsilon>; \\<not> primitive x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r k.\n                         x \\<in>\\<^sub>p r * \\<and>\n                         k \\<noteq> 0 \\<and> x = r \\<^sup>@ k", "assume \"\\<not> primitive x\""], ["proof (state)\nthis:\n  \\<not> primitive x\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<^bold>|x\\<^bold>| < \\<^bold>|x\\<^bold>|;\n                 x \\<noteq> \\<epsilon>\\<rbrakk>\n                \\<Longrightarrow> \\<exists>r k.\n                                     x \\<in>\\<^sub>p r * \\<and>\n                                     k \\<noteq> 0 \\<and> x = r \\<^sup>@ k;\n     x \\<noteq> \\<epsilon>; primitive x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r k.\n                         x \\<in>\\<^sub>p r * \\<and>\n                         k \\<noteq> 0 \\<and> x = r \\<^sup>@ k\n 2. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<^bold>|x\\<^bold>| < \\<^bold>|x\\<^bold>|;\n                 x \\<noteq> \\<epsilon>\\<rbrakk>\n                \\<Longrightarrow> \\<exists>r k.\n                                     x \\<in>\\<^sub>p r * \\<and>\n                                     k \\<noteq> 0 \\<and> x = r \\<^sup>@ k;\n     x \\<noteq> \\<epsilon>; \\<not> primitive x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r k.\n                         x \\<in>\\<^sub>p r * \\<and>\n                         k \\<noteq> 0 \\<and> x = r \\<^sup>@ k", "from non_prim[OF this \\<open>x \\<noteq> \\<epsilon>\\<close>]"], ["proof (chain)\npicking this:\n  (\\<And>r k.\n      \\<lbrakk>r \\<noteq> \\<epsilon>; 1 < k; r \\<^sup>@ k = x;\n       x \\<noteq> r\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain r l where \"r \\<noteq> \\<epsilon>\" and \"1 < l\" and \"r\\<^sup>@l = x\" and \"x \\<noteq> r\""], ["proof (prove)\nusing this:\n  (\\<And>r k.\n      \\<lbrakk>r \\<noteq> \\<epsilon>; 1 < k; r \\<^sup>@ k = x;\n       x \\<noteq> r\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>r l.\n        \\<lbrakk>r \\<noteq> \\<epsilon>; 1 < l; r \\<^sup>@ l = x;\n         x \\<noteq> r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  r \\<noteq> \\<epsilon>\n  1 < l\n  r \\<^sup>@ l = x\n  x \\<noteq> r\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<^bold>|x\\<^bold>| < \\<^bold>|x\\<^bold>|;\n                 x \\<noteq> \\<epsilon>\\<rbrakk>\n                \\<Longrightarrow> \\<exists>r k.\n                                     x \\<in>\\<^sub>p r * \\<and>\n                                     k \\<noteq> 0 \\<and> x = r \\<^sup>@ k;\n     x \\<noteq> \\<epsilon>; primitive x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r k.\n                         x \\<in>\\<^sub>p r * \\<and>\n                         k \\<noteq> 0 \\<and> x = r \\<^sup>@ k\n 2. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<^bold>|x\\<^bold>| < \\<^bold>|x\\<^bold>|;\n                 x \\<noteq> \\<epsilon>\\<rbrakk>\n                \\<Longrightarrow> \\<exists>r k.\n                                     x \\<in>\\<^sub>p r * \\<and>\n                                     k \\<noteq> 0 \\<and> x = r \\<^sup>@ k;\n     x \\<noteq> \\<epsilon>; \\<not> primitive x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r k.\n                         x \\<in>\\<^sub>p r * \\<and>\n                         k \\<noteq> 0 \\<and> x = r \\<^sup>@ k", "then"], ["proof (chain)\npicking this:\n  r \\<noteq> \\<epsilon>\n  1 < l\n  r \\<^sup>@ l = x\n  x \\<noteq> r", "obtain pr k where \"r \\<in>\\<^sub>p pr*\" \"k \\<noteq> 0\" \"r = pr\\<^sup>@k\""], ["proof (prove)\nusing this:\n  r \\<noteq> \\<epsilon>\n  1 < l\n  r \\<^sup>@ l = x\n  x \\<noteq> r\n\ngoal (1 subgoal):\n 1. (\\<And>pr k.\n        \\<lbrakk>r \\<in>\\<^sub>p pr *; k \\<noteq> 0;\n         r = pr \\<^sup>@ k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>x \\<noteq> \\<epsilon>\\<close> less.hyps rootI root_shorter"], ["proof (prove)\nusing this:\n  r \\<noteq> \\<epsilon>\n  1 < l\n  r \\<^sup>@ l = x\n  x \\<noteq> r\n  x \\<noteq> \\<epsilon>\n  \\<lbrakk>\\<^bold>|?x\\<^bold>| < \\<^bold>|x\\<^bold>|;\n   ?x \\<noteq> \\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r k.\n                       ?x \\<in>\\<^sub>p r * \\<and>\n                       k \\<noteq> 0 \\<and> ?x = r \\<^sup>@ k\n  ?r \\<^sup>@ ?k \\<in> ?r*\n  \\<lbrakk>?u \\<noteq> \\<epsilon>; ?u \\<in> ?r*; ?u \\<noteq> ?r\\<rbrakk>\n  \\<Longrightarrow> \\<^bold>|?r\\<^bold>| < \\<^bold>|?u\\<^bold>|\n\ngoal (1 subgoal):\n 1. (\\<And>pr k.\n        \\<lbrakk>r \\<in>\\<^sub>p pr *; k \\<noteq> 0;\n         r = pr \\<^sup>@ k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  r \\<in>\\<^sub>p pr *\n  k \\<noteq> 0\n  r = pr \\<^sup>@ k\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<^bold>|x\\<^bold>| < \\<^bold>|x\\<^bold>|;\n                 x \\<noteq> \\<epsilon>\\<rbrakk>\n                \\<Longrightarrow> \\<exists>r k.\n                                     x \\<in>\\<^sub>p r * \\<and>\n                                     k \\<noteq> 0 \\<and> x = r \\<^sup>@ k;\n     x \\<noteq> \\<epsilon>; primitive x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r k.\n                         x \\<in>\\<^sub>p r * \\<and>\n                         k \\<noteq> 0 \\<and> x = r \\<^sup>@ k\n 2. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<^bold>|x\\<^bold>| < \\<^bold>|x\\<^bold>|;\n                 x \\<noteq> \\<epsilon>\\<rbrakk>\n                \\<Longrightarrow> \\<exists>r k.\n                                     x \\<in>\\<^sub>p r * \\<and>\n                                     k \\<noteq> 0 \\<and> x = r \\<^sup>@ k;\n     x \\<noteq> \\<epsilon>; \\<not> primitive x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r k.\n                         x \\<in>\\<^sub>p r * \\<and>\n                         k \\<noteq> 0 \\<and> x = r \\<^sup>@ k", "hence \"x \\<in>\\<^sub>p pr*\""], ["proof (prove)\nusing this:\n  r \\<in>\\<^sub>p pr *\n  k \\<noteq> 0\n  r = pr \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>p pr *", "using \\<open>r \\<^sup>@ l = x\\<close> less.prems primroot_of_root rootI"], ["proof (prove)\nusing this:\n  r \\<in>\\<^sub>p pr *\n  k \\<noteq> 0\n  r = pr \\<^sup>@ k\n  r \\<^sup>@ l = x\n  x \\<noteq> \\<epsilon>\n  \\<lbrakk>?x \\<noteq> \\<epsilon>; ?x \\<in> ?u*;\n   ?u \\<in>\\<^sub>p ?r *\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in>\\<^sub>p ?r *\n  ?r \\<^sup>@ ?k \\<in> ?r*\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>p pr *", "by blast"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>p pr *\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<^bold>|x\\<^bold>| < \\<^bold>|x\\<^bold>|;\n                 x \\<noteq> \\<epsilon>\\<rbrakk>\n                \\<Longrightarrow> \\<exists>r k.\n                                     x \\<in>\\<^sub>p r * \\<and>\n                                     k \\<noteq> 0 \\<and> x = r \\<^sup>@ k;\n     x \\<noteq> \\<epsilon>; primitive x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r k.\n                         x \\<in>\\<^sub>p r * \\<and>\n                         k \\<noteq> 0 \\<and> x = r \\<^sup>@ k\n 2. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<^bold>|x\\<^bold>| < \\<^bold>|x\\<^bold>|;\n                 x \\<noteq> \\<epsilon>\\<rbrakk>\n                \\<Longrightarrow> \\<exists>r k.\n                                     x \\<in>\\<^sub>p r * \\<and>\n                                     k \\<noteq> 0 \\<and> x = r \\<^sup>@ k;\n     x \\<noteq> \\<epsilon>; \\<not> primitive x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r k.\n                         x \\<in>\\<^sub>p r * \\<and>\n                         k \\<noteq> 0 \\<and> x = r \\<^sup>@ k", "show \"\\<exists> r k.  x \\<in>\\<^sub>p r* \\<and> k \\<noteq> 0 \\<and> x = r\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r k.\n       x \\<in>\\<^sub>p r * \\<and> k \\<noteq> 0 \\<and> x = r \\<^sup>@ k", "using  \\<open>x \\<in>\\<^sub>p pr*\\<close>[unfolded primitive_rootP_def root_def]\n        \\<open>x \\<in>\\<^sub>p pr *\\<close> nemp_pow"], ["proof (prove)\nusing this:\n  x \\<noteq> \\<epsilon> \\<and>\n  (\\<exists>k. pr \\<^sup>@ k = x) \\<and> primitive pr\n  x \\<in>\\<^sub>p pr *\n  ?t \\<^sup>@ ?m \\<noteq> \\<epsilon> \\<Longrightarrow> ?m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>r k.\n       x \\<in>\\<^sub>p r * \\<and> k \\<noteq> 0 \\<and> x = r \\<^sup>@ k", "by blast"], ["proof (state)\nthis:\n  \\<exists>r k.\n     x \\<in>\\<^sub>p r * \\<and> k \\<noteq> 0 \\<and> x = r \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<^bold>|x\\<^bold>| < \\<^bold>|x\\<^bold>|;\n                 x \\<noteq> \\<epsilon>\\<rbrakk>\n                \\<Longrightarrow> \\<exists>r k.\n                                     x \\<in>\\<^sub>p r * \\<and>\n                                     k \\<noteq> 0 \\<and> x = r \\<^sup>@ k;\n     x \\<noteq> \\<epsilon>; primitive x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r k.\n                         x \\<in>\\<^sub>p r * \\<and>\n                         k \\<noteq> 0 \\<and> x = r \\<^sup>@ k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<^bold>|x\\<^bold>| < \\<^bold>|x\\<^bold>|;\n                 x \\<noteq> \\<epsilon>\\<rbrakk>\n                \\<Longrightarrow> \\<exists>r k.\n                                     x \\<in>\\<^sub>p r * \\<and>\n                                     k \\<noteq> 0 \\<and> x = r \\<^sup>@ k;\n     x \\<noteq> \\<epsilon>; primitive x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r k.\n                         x \\<in>\\<^sub>p r * \\<and>\n                         k \\<noteq> 0 \\<and> x = r \\<^sup>@ k", "assume \"primitive x\""], ["proof (state)\nthis:\n  primitive x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<^bold>|x\\<^bold>| < \\<^bold>|x\\<^bold>|;\n                 x \\<noteq> \\<epsilon>\\<rbrakk>\n                \\<Longrightarrow> \\<exists>r k.\n                                     x \\<in>\\<^sub>p r * \\<and>\n                                     k \\<noteq> 0 \\<and> x = r \\<^sup>@ k;\n     x \\<noteq> \\<epsilon>; primitive x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r k.\n                         x \\<in>\\<^sub>p r * \\<and>\n                         k \\<noteq> 0 \\<and> x = r \\<^sup>@ k", "have \"x \\<in>\\<^sub>p x*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>p x *", "by (simp add: \\<open>primitive x\\<close> less.prems prim_rootI self_root)"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>p x *\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<^bold>|x\\<^bold>| < \\<^bold>|x\\<^bold>|;\n                 x \\<noteq> \\<epsilon>\\<rbrakk>\n                \\<Longrightarrow> \\<exists>r k.\n                                     x \\<in>\\<^sub>p r * \\<and>\n                                     k \\<noteq> 0 \\<and> x = r \\<^sup>@ k;\n     x \\<noteq> \\<epsilon>; primitive x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r k.\n                         x \\<in>\\<^sub>p r * \\<and>\n                         k \\<noteq> 0 \\<and> x = r \\<^sup>@ k", "thus \"\\<exists> r k.  x \\<in>\\<^sub>p r* \\<and> k \\<noteq> 0 \\<and> x = r\\<^sup>@k\""], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>p x *\n\ngoal (1 subgoal):\n 1. \\<exists>r k.\n       x \\<in>\\<^sub>p r * \\<and> k \\<noteq> 0 \\<and> x = r \\<^sup>@ k", "by force"], ["proof (state)\nthis:\n  \\<exists>r k.\n     x \\<in>\\<^sub>p r * \\<and> k \\<noteq> 0 \\<and> x = r \\<^sup>@ k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>r k.\n     x \\<in>\\<^sub>p r * \\<and> k \\<noteq> 0 \\<and> x = r \\<^sup>@ k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma primroot_exE: assumes\"x \\<noteq> \\<epsilon>\" \n  obtains r k where \"primitive r\" and \"k \\<noteq> 0\" and \"x = r\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r k.\n        \\<lbrakk>primitive r; k \\<noteq> 0; x = r \\<^sup>@ k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms primitive_rootP_def primroot_ex[OF \\<open> x \\<noteq> \\<epsilon>\\<close>]"], ["proof (prove)\nusing this:\n  x \\<noteq> \\<epsilon>\n  ?x \\<in>\\<^sub>p ?r * =\n  (?x \\<noteq> \\<epsilon> \\<and> ?x \\<in> ?r* \\<and> primitive ?r)\n  \\<exists>r k.\n     x \\<in>\\<^sub>p r * \\<and> k \\<noteq> 0 \\<and> x = r \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. (\\<And>r k.\n        \\<lbrakk>primitive r; k \\<noteq> 0; x = r \\<^sup>@ k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "text\\<open>Uniqueness of the primitive root follows from the following lemma\\<close>"], ["", "lemma primroot_unique: assumes \"u \\<in>\\<^sub>p r*\" shows \"\\<rho> u = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> u = r", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<rho> u = r", "obtain kr where \"kr \\<noteq> 0\" and \"r\\<^sup>@kr = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>kr.\n        \\<lbrakk>kr \\<noteq> 0; r \\<^sup>@ kr = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using primrootE[OF \\<open>u \\<in>\\<^sub>p r*\\<close>]"], ["proof (prove)\nusing this:\n  (\\<And>k.\n      \\<lbrakk>k \\<noteq> 0; r \\<^sup>@ k = u\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>kr.\n        \\<lbrakk>kr \\<noteq> 0; r \\<^sup>@ kr = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  kr \\<noteq> 0\n  r \\<^sup>@ kr = u\n\ngoal (1 subgoal):\n 1. \\<rho> u = r", "have \"u \\<in>\\<^sub>p s* \\<Longrightarrow> s = r\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in>\\<^sub>p s * \\<Longrightarrow> s = r", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<in>\\<^sub>p s * \\<Longrightarrow> s = r", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<in>\\<^sub>p s__ * \\<Longrightarrow> s__ = r", "assume \"u \\<in>\\<^sub>p s*\""], ["proof (state)\nthis:\n  u \\<in>\\<^sub>p s *\n\ngoal (1 subgoal):\n 1. u \\<in>\\<^sub>p s__ * \\<Longrightarrow> s__ = r", "obtain ks where \"ks \\<noteq> 0\" and \"s\\<^sup>@ks = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ks.\n        \\<lbrakk>ks \\<noteq> 0; s \\<^sup>@ ks = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using primrootE[OF \\<open>u \\<in>\\<^sub>p s*\\<close>]"], ["proof (prove)\nusing this:\n  (\\<And>k.\n      \\<lbrakk>k \\<noteq> 0; s \\<^sup>@ k = u\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>ks.\n        \\<lbrakk>ks \\<noteq> 0; s \\<^sup>@ ks = u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  ks \\<noteq> 0\n  s \\<^sup>@ ks = u\n\ngoal (1 subgoal):\n 1. u \\<in>\\<^sub>p s__ * \\<Longrightarrow> s__ = r", "obtain t where \"s \\<in> t*\" and \"r \\<in> t*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>s \\<in> t*; r \\<in> t*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using comm_rootE[OF pow_comm_comm[of r kr s ks, OF _ \\<open>kr \\<noteq> 0\\<close>, unfolded \\<open>r\\<^sup>@kr = u\\<close> \\<open>s\\<^sup>@ks = u\\<close>, OF refl]]"], ["proof (prove)\nusing this:\n  (\\<And>t.\n      \\<lbrakk>r \\<in> t*; s \\<in> t*\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>s \\<in> t*; r \\<in> t*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  s \\<in> t*\n  r \\<in> t*\n\ngoal (1 subgoal):\n 1. u \\<in>\\<^sub>p s__ * \\<Longrightarrow> s__ = r", "have \"primitive r\" and \"primitive s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primitive r &&& primitive s", "using \\<open>u \\<in>\\<^sub>p r *\\<close> \\<open>u \\<in>\\<^sub>p s *\\<close> primitive_rootP_def"], ["proof (prove)\nusing this:\n  u \\<in>\\<^sub>p r *\n  u \\<in>\\<^sub>p s *\n  ?x \\<in>\\<^sub>p ?r * =\n  (?x \\<noteq> \\<epsilon> \\<and> ?x \\<in> ?r* \\<and> primitive ?r)\n\ngoal (1 subgoal):\n 1. primitive r &&& primitive s", "by blast+"], ["proof (state)\nthis:\n  primitive r\n  primitive s\n\ngoal (1 subgoal):\n 1. u \\<in>\\<^sub>p s__ * \\<Longrightarrow> s__ = r", "from prim_exp_eq[OF \\<open>primitive r\\<close>, of t] prim_exp_eq[OF \\<open>primitive s\\<close>, of t]"], ["proof (chain)\npicking this:\n  t \\<^sup>@ ?k = r \\<Longrightarrow> r = t\n  t \\<^sup>@ ?k = s \\<Longrightarrow> s = t", "show \"s = r\""], ["proof (prove)\nusing this:\n  t \\<^sup>@ ?k = r \\<Longrightarrow> r = t\n  t \\<^sup>@ ?k = s \\<Longrightarrow> s = t\n\ngoal (1 subgoal):\n 1. s = r", "using rootE[OF \\<open>s \\<in> t*\\<close>, of \"s=r\"] rootE[OF \\<open>r \\<in> t*\\<close>, of \"r = t\"]"], ["proof (prove)\nusing this:\n  t \\<^sup>@ ?k = r \\<Longrightarrow> r = t\n  t \\<^sup>@ ?k = s \\<Longrightarrow> s = t\n  (\\<And>k. t \\<^sup>@ k = s \\<Longrightarrow> s = r) \\<Longrightarrow>\n  s = r\n  (\\<And>k. t \\<^sup>@ k = r \\<Longrightarrow> r = t) \\<Longrightarrow>\n  r = t\n\ngoal (1 subgoal):\n 1. s = r", "by fastforce"], ["proof (state)\nthis:\n  s = r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u \\<in>\\<^sub>p ?s * \\<Longrightarrow> ?s = r\n\ngoal (1 subgoal):\n 1. \\<rho> u = r", "from the_equality[of \"\\<lambda> r. u \\<in>\\<^sub>p r*\",OF \\<open>u \\<in>\\<^sub>p r*\\<close> this]"], ["proof (chain)\npicking this:\n  (\\<And>x.\n      u \\<in>\\<^sub>p x * \\<Longrightarrow>\n      u \\<in>\\<^sub>p x *) \\<Longrightarrow>\n  (THE x. u \\<in>\\<^sub>p x *) = r", "show \"\\<rho> u = r\""], ["proof (prove)\nusing this:\n  (\\<And>x.\n      u \\<in>\\<^sub>p x * \\<Longrightarrow>\n      u \\<in>\\<^sub>p x *) \\<Longrightarrow>\n  (THE x. u \\<in>\\<^sub>p x *) = r\n\ngoal (1 subgoal):\n 1. \\<rho> u = r", "by auto"], ["proof (state)\nthis:\n  \\<rho> u = r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prim_self_root: \"primitive x \\<Longrightarrow> \\<rho> x  = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primitive x \\<Longrightarrow> \\<rho> x = x", "using prim_nemp prim_rootI primroot_unique self_root"], ["proof (prove)\nusing this:\n  primitive ?u \\<Longrightarrow> ?u \\<noteq> \\<epsilon>\n  \\<lbrakk>?u \\<noteq> \\<epsilon>; ?u \\<in> ?r*; primitive ?r\\<rbrakk>\n  \\<Longrightarrow> ?u \\<in>\\<^sub>p ?r *\n  ?u \\<in>\\<^sub>p ?r * \\<Longrightarrow> \\<rho> ?u = ?r\n  ?u \\<in> ?u*\n\ngoal (1 subgoal):\n 1. primitive x \\<Longrightarrow> \\<rho> x = x", "by blast"], ["", "text\\<open>Existence and uniqueness of the primitive root justifies the function @{term \"\\<rho>\"}: it indeed yields the primitive root of a nonempty word.\\<close>"], ["", "lemma primroot_is_primroot[intro]: assumes \"x \\<noteq> \\<epsilon>\" shows \"x \\<in>\\<^sub>p (\\<rho> x)*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>p \\<rho> x *", "using primroot_ex[OF \\<open>x \\<noteq> \\<epsilon>\\<close>] primroot_unique[of x]"], ["proof (prove)\nusing this:\n  \\<exists>r k.\n     x \\<in>\\<^sub>p r * \\<and> k \\<noteq> 0 \\<and> x = r \\<^sup>@ k\n  x \\<in>\\<^sub>p ?r * \\<Longrightarrow> \\<rho> x = ?r\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>p \\<rho> x *", "by force"], ["", "lemma primroot_is_root[intro]: \"x \\<noteq> \\<epsilon> \\<Longrightarrow> x \\<in> (\\<rho> x)*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> \\<epsilon> \\<Longrightarrow> x \\<in> \\<rho> x*", "using primroot_is_primroot"], ["proof (prove)\nusing this:\n  ?x \\<noteq> \\<epsilon> \\<Longrightarrow> ?x \\<in>\\<^sub>p \\<rho> ?x *\n\ngoal (1 subgoal):\n 1. x \\<noteq> \\<epsilon> \\<Longrightarrow> x \\<in> \\<rho> x*", "by auto"], ["", "lemma primrootI [intro]: assumes \"x \\<noteq> \\<epsilon>\" shows primroot_prim: \"primitive (\\<rho> x)\" and primroot_nemp: \"\\<rho> x \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primitive (\\<rho> x) &&& \\<rho> x \\<noteq> \\<epsilon>", "using assms prim_nemp primitive_rootP_def"], ["proof (prove)\nusing this:\n  x \\<noteq> \\<epsilon>\n  primitive ?u \\<Longrightarrow> ?u \\<noteq> \\<epsilon>\n  ?x \\<in>\\<^sub>p ?r * =\n  (?x \\<noteq> \\<epsilon> \\<and> ?x \\<in> ?r* \\<and> primitive ?r)\n\ngoal (1 subgoal):\n 1. primitive (\\<rho> x) &&& \\<rho> x \\<noteq> \\<epsilon>", "by blast+"], ["", "lemma primroot_root: assumes \"u \\<noteq> \\<epsilon>\" \"u \\<in> q*\" shows \"\\<rho> q = \\<rho> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> q = \\<rho> u", "using primroot_unique[OF primroot_of_root[OF \\<open>u \\<noteq> \\<epsilon>\\<close> \\<open>u \\<in> q*\\<close> primroot_is_primroot, OF root_nemp[OF \\<open>u \\<noteq> \\<epsilon>\\<close> \\<open>u \\<in> q*\\<close>]], symmetric]"], ["proof (prove)\nusing this:\n  \\<rho> q = \\<rho> u\n\ngoal (1 subgoal):\n 1. \\<rho> q = \\<rho> u", "."], ["", "lemma primroot_len_mult: assumes \"u \\<noteq> \\<epsilon>\" \"u \\<in> q*\" obtains k where \"\\<^bold>|q\\<^bold>| = k*\\<^bold>|\\<rho> u\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<^bold>|q\\<^bold>| =\n        k * \\<^bold>|\\<rho> u\\<^bold>| \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using primroot_is_primroot[OF root_nemp[OF \\<open>u \\<noteq> \\<epsilon>\\<close> \\<open>u \\<in> q*\\<close>], unfolded primroot_root[OF \\<open>u \\<noteq> \\<epsilon>\\<close> \\<open>u \\<in> q*\\<close>]\n      primitive_rootP_def] root_len[of q \"\\<rho> u\"]"], ["proof (prove)\nusing this:\n  q \\<noteq> \\<epsilon> \\<and> q \\<in> \\<rho> u* \\<and> primitive (\\<rho> u)\n  q \\<in> \\<rho> u* \\<Longrightarrow>\n  \\<exists>k. \\<^bold>|q\\<^bold>| = k * \\<^bold>|\\<rho> u\\<^bold>|\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<^bold>|q\\<^bold>| =\n        k * \\<^bold>|\\<rho> u\\<^bold>| \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma primroot_shorter_root: assumes \"u \\<noteq> \\<epsilon>\" \"u \\<in> q*\" shows \"\\<^bold>|\\<rho> u\\<^bold>| \\<le> \\<^bold>|q\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|\\<rho> u\\<^bold>| \\<le> \\<^bold>|q\\<^bold>|", "using quotient_smaller[OF root_nemp[OF \\<open>u \\<noteq> \\<epsilon>\\<close> \\<open>u \\<in> q*\\<close>, folded length_0_conv], of _ \"\\<^bold>|\\<rho> u\\<^bold>|\"] \n    primroot_len_mult[OF \\<open>u \\<noteq> \\<epsilon>\\<close> \\<open>u \\<in> q*\\<close>]"], ["proof (prove)\nusing this:\n  \\<^bold>|q\\<^bold>| = ?k * \\<^bold>|\\<rho> u\\<^bold>| \\<Longrightarrow>\n  \\<^bold>|\\<rho> u\\<^bold>| \\<le> \\<^bold>|q\\<^bold>|\n  (\\<And>k.\n      \\<^bold>|q\\<^bold>| = k * \\<^bold>|\\<rho> u\\<^bold>| \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. \\<^bold>|\\<rho> u\\<^bold>| \\<le> \\<^bold>|q\\<^bold>|", "by blast"], ["", "lemma primroot_shortest_root: assumes \"u \\<noteq> \\<epsilon>\" shows \"\\<^bold>|\\<rho> u\\<^bold>| = (LEAST d. (\\<exists> r. (u \\<in> r*) \\<and> \\<^bold>|r\\<^bold>| = d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|\\<rho> u\\<^bold>| =\n    (LEAST d. \\<exists>r. u \\<in> r* \\<and> \\<^bold>|r\\<^bold>| = d)", "using  Least_equality[of \"\\<lambda> k. (\\<exists> r. (u \\<in> r*) \\<and> \\<^bold>|r\\<^bold>| = k)\" \"\\<^bold>|\\<rho> u\\<^bold>|\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<exists>r.\n              u \\<in> r* \\<and>\n              \\<^bold>|r\\<^bold>| = \\<^bold>|\\<rho> u\\<^bold>|;\n   \\<And>y.\n      \\<exists>r.\n         u \\<in> r* \\<and> \\<^bold>|r\\<^bold>| = y \\<Longrightarrow>\n      \\<^bold>|\\<rho> u\\<^bold>| \\<le> y\\<rbrakk>\n  \\<Longrightarrow> (LEAST k.\n                        \\<exists>r.\n                           u \\<in> r* \\<and> \\<^bold>|r\\<^bold>| = k) =\n                    \\<^bold>|\\<rho> u\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<^bold>|\\<rho> u\\<^bold>| =\n    (LEAST d. \\<exists>r. u \\<in> r* \\<and> \\<^bold>|r\\<^bold>| = d)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>r.\n       u \\<in> r* \\<and> \\<^bold>|r\\<^bold>| = \\<^bold>|\\<rho> u\\<^bold>|\n 2. \\<And>y.\n       \\<exists>r.\n          u \\<in> r* \\<and> \\<^bold>|r\\<^bold>| = y \\<Longrightarrow>\n       \\<^bold>|\\<rho> u\\<^bold>| \\<le> y", "show \"\\<exists>r. u \\<in> r* \\<and> \\<^bold>|r\\<^bold>| = \\<^bold>|\\<rho> u\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r.\n       u \\<in> r* \\<and> \\<^bold>|r\\<^bold>| = \\<^bold>|\\<rho> u\\<^bold>|", "using assms primitive_rootP_def primroot_is_primroot"], ["proof (prove)\nusing this:\n  u \\<noteq> \\<epsilon>\n  ?x \\<in>\\<^sub>p ?r * =\n  (?x \\<noteq> \\<epsilon> \\<and> ?x \\<in> ?r* \\<and> primitive ?r)\n  ?x \\<noteq> \\<epsilon> \\<Longrightarrow> ?x \\<in>\\<^sub>p \\<rho> ?x *\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       u \\<in> r* \\<and> \\<^bold>|r\\<^bold>| = \\<^bold>|\\<rho> u\\<^bold>|", "by blast"], ["proof (state)\nthis:\n  \\<exists>r.\n     u \\<in> r* \\<and> \\<^bold>|r\\<^bold>| = \\<^bold>|\\<rho> u\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<exists>r.\n          u \\<in> r* \\<and> \\<^bold>|r\\<^bold>| = y \\<Longrightarrow>\n       \\<^bold>|\\<rho> u\\<^bold>| \\<le> y", "show \"\\<And>y. \\<exists>r. u \\<in> r* \\<and> \\<^bold>|r\\<^bold>| = y \\<Longrightarrow> \\<^bold>|\\<rho> u\\<^bold>| \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<exists>r.\n          u \\<in> r* \\<and> \\<^bold>|r\\<^bold>| = y \\<Longrightarrow>\n       \\<^bold>|\\<rho> u\\<^bold>| \\<le> y", "using assms primroot_shorter_root"], ["proof (prove)\nusing this:\n  u \\<noteq> \\<epsilon>\n  \\<lbrakk>?u \\<noteq> \\<epsilon>; ?u \\<in> ?q*\\<rbrakk>\n  \\<Longrightarrow> \\<^bold>|\\<rho> ?u\\<^bold>| \\<le> \\<^bold>|?q\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<exists>r.\n          u \\<in> r* \\<and> \\<^bold>|r\\<^bold>| = y \\<Longrightarrow>\n       \\<^bold>|\\<rho> u\\<^bold>| \\<le> y", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>r. u \\<in> r* \\<and> \\<^bold>|r\\<^bold>| = ?y \\<Longrightarrow>\n  \\<^bold>|\\<rho> u\\<^bold>| \\<le> ?y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma primroot_shorter_eq: \"u \\<noteq> \\<epsilon> \\<Longrightarrow> \\<^bold>|\\<rho> u\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow>\n    \\<^bold>|\\<rho> u\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|", "using primroot_shorter_root self_root"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<noteq> \\<epsilon>; ?u \\<in> ?q*\\<rbrakk>\n  \\<Longrightarrow> \\<^bold>|\\<rho> ?u\\<^bold>| \\<le> \\<^bold>|?q\\<^bold>|\n  ?u \\<in> ?u*\n\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow>\n    \\<^bold>|\\<rho> u\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|", "by auto"], ["", "lemma primroot_take: assumes \"u \\<noteq> \\<epsilon>\" shows \"\\<rho> u = (take ( \\<^bold>|\\<rho> u\\<^bold>| ) u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> u = take \\<^bold>|\\<rho> u\\<^bold>| u", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<rho> u = take \\<^bold>|\\<rho> u\\<^bold>| u", "obtain k where \"(\\<rho> u)\\<^sup>@k = u\" and \"k \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>\\<rho> u \\<^sup>@ k = u; k \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using primrootE[OF primroot_is_primroot[OF \\<open>u \\<noteq> \\<epsilon>\\<close>]]"], ["proof (prove)\nusing this:\n  (\\<And>k.\n      \\<lbrakk>k \\<noteq> 0; \\<rho> u \\<^sup>@ k = u\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>\\<rho> u \\<^sup>@ k = u; k \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  \\<rho> u \\<^sup>@ k = u\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<rho> u = take \\<^bold>|\\<rho> u\\<^bold>| u", "show \"\\<rho> u = (take ( \\<^bold>|\\<rho> u\\<^bold>| ) u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> u = take \\<^bold>|\\<rho> u\\<^bold>| u", "using take_root[of _ \"(\\<rho> u)\", OF \\<open>k \\<noteq> 0\\<close>, unfolded \\<open>(\\<rho> u)\\<^sup>@k = u\\<close>]"], ["proof (prove)\nusing this:\n  \\<rho> u = take \\<^bold>|\\<rho> u\\<^bold>| u\n\ngoal (1 subgoal):\n 1. \\<rho> u = take \\<^bold>|\\<rho> u\\<^bold>| u", "."], ["proof (state)\nthis:\n  \\<rho> u = take \\<^bold>|\\<rho> u\\<^bold>| u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma primroot_take_shortest: assumes \"u \\<noteq> \\<epsilon>\" shows \"\\<rho> u = (take (LEAST d. (\\<exists> r. (u \\<in> r*) \\<and> \\<^bold>|r\\<^bold>| = d)) u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> u =\n    take (LEAST d. \\<exists>r. u \\<in> r* \\<and> \\<^bold>|r\\<^bold>| = d) u", "using primroot_take[OF assms, unfolded primroot_shortest_root[OF assms]]"], ["proof (prove)\nusing this:\n  \\<rho> u =\n  take (LEAST d. \\<exists>r. u \\<in> r* \\<and> \\<^bold>|r\\<^bold>| = d) u\n\ngoal (1 subgoal):\n 1. \\<rho> u =\n    take (LEAST d. \\<exists>r. u \\<in> r* \\<and> \\<^bold>|r\\<^bold>| = d) u", "."], ["", "lemma primroot_rotate_comm: assumes \"w \\<noteq> \\<epsilon>\" shows \"\\<rho> (rotate n w) = rotate n (\\<rho> w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> (rotate n w) = rotate n (\\<rho> w)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<rho> (rotate n w) = rotate n (\\<rho> w)", "obtain l where  \"w = (\\<rho> w)\\<^sup>@l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l.\n        w = \\<rho> w \\<^sup>@ l \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using pow_zero primrootE primroot_is_primroot"], ["proof (prove)\nusing this:\n  ?u \\<^sup>@ 0 = \\<epsilon>\n  \\<lbrakk>?x \\<in>\\<^sub>p ?r *;\n   \\<And>k.\n      \\<lbrakk>k \\<noteq> 0; ?r \\<^sup>@ k = ?x\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  ?x \\<noteq> \\<epsilon> \\<Longrightarrow> ?x \\<in>\\<^sub>p \\<rho> ?x *\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        w = \\<rho> w \\<^sup>@ l \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  w = \\<rho> w \\<^sup>@ l\n\ngoal (1 subgoal):\n 1. \\<rho> (rotate n w) = rotate n (\\<rho> w)", "hence \"rotate n w \\<in> (rotate n (\\<rho> w))*\""], ["proof (prove)\nusing this:\n  w = \\<rho> w \\<^sup>@ l\n\ngoal (1 subgoal):\n 1. rotate n w \\<in> rotate n (\\<rho> w)*", "using rotate_pow_comm root_def"], ["proof (prove)\nusing this:\n  w = \\<rho> w \\<^sup>@ l\n  rotate ?n (?u \\<^sup>@ ?k) = rotate ?n ?u \\<^sup>@ ?k\n  ?u \\<in> ?r* = (\\<exists>k. ?r \\<^sup>@ k = ?u)\n\ngoal (1 subgoal):\n 1. rotate n w \\<in> rotate n (\\<rho> w)*", "by metis"], ["proof (state)\nthis:\n  rotate n w \\<in> rotate n (\\<rho> w)*\n\ngoal (1 subgoal):\n 1. \\<rho> (rotate n w) = rotate n (\\<rho> w)", "moreover"], ["proof (state)\nthis:\n  rotate n w \\<in> rotate n (\\<rho> w)*\n\ngoal (1 subgoal):\n 1. \\<rho> (rotate n w) = rotate n (\\<rho> w)", "have \"rotate n w \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rotate n w \\<noteq> \\<epsilon>", "using assms"], ["proof (prove)\nusing this:\n  w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. rotate n w \\<noteq> \\<epsilon>", "by auto"], ["proof (state)\nthis:\n  rotate n w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<rho> (rotate n w) = rotate n (\\<rho> w)", "moreover"], ["proof (state)\nthis:\n  rotate n w \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<rho> (rotate n w) = rotate n (\\<rho> w)", "have \"primitive (rotate n (\\<rho> w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primitive (rotate n (\\<rho> w))", "using assms prim_rotate_conv primitive_rootP_def primroot_is_primroot"], ["proof (prove)\nusing this:\n  w \\<noteq> \\<epsilon>\n  primitive ?w = primitive (rotate ?n ?w)\n  ?x \\<in>\\<^sub>p ?r * =\n  (?x \\<noteq> \\<epsilon> \\<and> ?x \\<in> ?r* \\<and> primitive ?r)\n  ?x \\<noteq> \\<epsilon> \\<Longrightarrow> ?x \\<in>\\<^sub>p \\<rho> ?x *\n\ngoal (1 subgoal):\n 1. primitive (rotate n (\\<rho> w))", "by blast"], ["proof (state)\nthis:\n  primitive (rotate n (\\<rho> w))\n\ngoal (1 subgoal):\n 1. \\<rho> (rotate n w) = rotate n (\\<rho> w)", "ultimately"], ["proof (chain)\npicking this:\n  rotate n w \\<in> rotate n (\\<rho> w)*\n  rotate n w \\<noteq> \\<epsilon>\n  primitive (rotate n (\\<rho> w))", "have \"rotate n w \\<in>\\<^sub>p (rotate n (\\<rho> w))*\""], ["proof (prove)\nusing this:\n  rotate n w \\<in> rotate n (\\<rho> w)*\n  rotate n w \\<noteq> \\<epsilon>\n  primitive (rotate n (\\<rho> w))\n\ngoal (1 subgoal):\n 1. rotate n w \\<in>\\<^sub>p rotate n (\\<rho> w) *", "unfolding primitive_rootP_def"], ["proof (prove)\nusing this:\n  rotate n w \\<in> rotate n (\\<rho> w)*\n  rotate n w \\<noteq> \\<epsilon>\n  primitive (rotate n (\\<rho> w))\n\ngoal (1 subgoal):\n 1. rotate n w \\<noteq> \\<epsilon> \\<and>\n    rotate n w \\<in> rotate n (\\<rho> w)* \\<and>\n    primitive (rotate n (\\<rho> w))", "by blast"], ["proof (state)\nthis:\n  rotate n w \\<in>\\<^sub>p rotate n (\\<rho> w) *\n\ngoal (1 subgoal):\n 1. \\<rho> (rotate n w) = rotate n (\\<rho> w)", "thus  ?thesis"], ["proof (prove)\nusing this:\n  rotate n w \\<in>\\<^sub>p rotate n (\\<rho> w) *\n\ngoal (1 subgoal):\n 1. \\<rho> (rotate n w) = rotate n (\\<rho> w)", "using primroot_unique"], ["proof (prove)\nusing this:\n  rotate n w \\<in>\\<^sub>p rotate n (\\<rho> w) *\n  ?u \\<in>\\<^sub>p ?r * \\<Longrightarrow> \\<rho> ?u = ?r\n\ngoal (1 subgoal):\n 1. \\<rho> (rotate n w) = rotate n (\\<rho> w)", "by blast"], ["proof (state)\nthis:\n  \\<rho> (rotate n w) = rotate n (\\<rho> w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma primrootI1 [intro]: assumes pow: \"u = r\\<^sup>@(Suc k)\" and prim: \"primitive r\" shows \"\\<rho> u = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> u = r", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<rho> u = r", "have \"u \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon>", "using pow prim prim_nemp"], ["proof (prove)\nusing this:\n  u = r \\<^sup>@ Suc k\n  primitive r\n  primitive ?u \\<Longrightarrow> ?u \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon>", "by auto"], ["proof (state)\nthis:\n  u \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<rho> u = r", "have \"u \\<in> r*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> r*", "using pow rootI"], ["proof (prove)\nusing this:\n  u = r \\<^sup>@ Suc k\n  ?r \\<^sup>@ ?k \\<in> ?r*\n\ngoal (1 subgoal):\n 1. u \\<in> r*", "by blast"], ["proof (state)\nthis:\n  u \\<in> r*\n\ngoal (1 subgoal):\n 1. \\<rho> u = r", "show \"\\<rho> u = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> u = r", "using primroot_unique[OF prim_rootI[OF \\<open>u \\<noteq> \\<epsilon>\\<close> \\<open>u \\<in> r*\\<close> \\<open>primitive r\\<close>]]"], ["proof (prove)\nusing this:\n  \\<rho> u = r\n\ngoal (1 subgoal):\n 1. \\<rho> u = r", "."], ["proof (state)\nthis:\n  \\<rho> u = r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prim_root_power [elim]: assumes \"x \\<noteq> \\<epsilon>\" obtains i where \"(\\<rho> x)\\<^sup>@(Suc i) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<rho> x \\<^sup>@ Suc i = x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using prim_rootD[OF primroot_is_primroot[OF \\<open>x \\<noteq> \\<epsilon>\\<close>], unfolded root_def] assms pow_zero[of \"\\<rho> x\"] not0_implies_Suc"], ["proof (prove)\nusing this:\n  \\<exists>k. \\<rho> x \\<^sup>@ k = x\n  x \\<noteq> \\<epsilon>\n  \\<rho> x \\<^sup>@ 0 = \\<epsilon>\n  ?n \\<noteq> 0 \\<Longrightarrow> \\<exists>m. ?n = Suc m\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<rho> x \\<^sup>@ Suc i = x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["", "lemma prim_root_cases: obtains \"u = \\<epsilon>\" | \"primitive u\" | \"\\<^bold>|\\<rho> u\\<^bold>| < \\<^bold>|u\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u = \\<epsilon> \\<Longrightarrow> thesis;\n     primitive u \\<Longrightarrow> thesis;\n     \\<^bold>|\\<rho> u\\<^bold>| < \\<^bold>|u\\<^bold>| \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using primroot_is_primroot[THEN prim_rootD[of u \"\\<rho> u\"]]  \n        primroot_prim[of u] root_shorter[of u \"\\<rho> u\"]"], ["proof (prove)\nusing this:\n  u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<in> \\<rho> u*\n  u \\<noteq> \\<epsilon> \\<Longrightarrow> primitive (\\<rho> u)\n  \\<lbrakk>u \\<noteq> \\<epsilon>; u \\<in> \\<rho> u*;\n   u \\<noteq> \\<rho> u\\<rbrakk>\n  \\<Longrightarrow> \\<^bold>|\\<rho> u\\<^bold>| < \\<^bold>|u\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u = \\<epsilon> \\<Longrightarrow> thesis;\n     primitive u \\<Longrightarrow> thesis;\n     \\<^bold>|\\<rho> u\\<^bold>| < \\<^bold>|u\\<^bold>| \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by fastforce"], ["", "text\\<open>We also have the standard characterization of commutation for nonempty words.\\<close>"], ["", "theorem comm_primroots: assumes \"u \\<noteq> \\<epsilon>\" \"v \\<noteq> \\<epsilon>\" shows \"u \\<cdot> v = v \\<cdot> u \\<longleftrightarrow> \\<rho> u = \\<rho> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<cdot> v = v \\<cdot> u) = (\\<rho> u = \\<rho> v)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. u \\<cdot> v = v \\<cdot> u \\<Longrightarrow> \\<rho> u = \\<rho> v\n 2. \\<rho> u = \\<rho> v \\<Longrightarrow> u \\<cdot> v = v \\<cdot> u", "assume \"u \\<cdot> v = v \\<cdot> u\""], ["proof (state)\nthis:\n  u \\<cdot> v = v \\<cdot> u\n\ngoal (2 subgoals):\n 1. u \\<cdot> v = v \\<cdot> u \\<Longrightarrow> \\<rho> u = \\<rho> v\n 2. \\<rho> u = \\<rho> v \\<Longrightarrow> u \\<cdot> v = v \\<cdot> u", "then"], ["proof (chain)\npicking this:\n  u \\<cdot> v = v \\<cdot> u", "obtain t where \"u \\<in> t*\" and \"v \\<in> t*\""], ["proof (prove)\nusing this:\n  u \\<cdot> v = v \\<cdot> u\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>u \\<in> t*; v \\<in> t*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using comm_root"], ["proof (prove)\nusing this:\n  u \\<cdot> v = v \\<cdot> u\n  (?x \\<cdot> ?y = ?y \\<cdot> ?x) =\n  (\\<exists>t. ?x \\<in> t* \\<and> ?y \\<in> t*)\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>u \\<in> t*; v \\<in> t*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u \\<in> t*\n  v \\<in> t*\n\ngoal (2 subgoals):\n 1. u \\<cdot> v = v \\<cdot> u \\<Longrightarrow> \\<rho> u = \\<rho> v\n 2. \\<rho> u = \\<rho> v \\<Longrightarrow> u \\<cdot> v = v \\<cdot> u", "show \"\\<rho> u = \\<rho> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> u = \\<rho> v", "using primroot_root[OF \\<open>v \\<noteq> \\<epsilon>\\<close> \\<open>v \\<in> t*\\<close>, unfolded primroot_root[OF \\<open>u \\<noteq> \\<epsilon>\\<close> \\<open>u \\<in> t*\\<close>]]"], ["proof (prove)\nusing this:\n  \\<rho> u = \\<rho> v\n\ngoal (1 subgoal):\n 1. \\<rho> u = \\<rho> v", "."], ["proof (state)\nthis:\n  \\<rho> u = \\<rho> v\n\ngoal (1 subgoal):\n 1. \\<rho> u = \\<rho> v \\<Longrightarrow> u \\<cdot> v = v \\<cdot> u", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<rho> u = \\<rho> v \\<Longrightarrow> u \\<cdot> v = v \\<cdot> u", "assume \"\\<rho> u = \\<rho> v\""], ["proof (state)\nthis:\n  \\<rho> u = \\<rho> v\n\ngoal (1 subgoal):\n 1. \\<rho> u = \\<rho> v \\<Longrightarrow> u \\<cdot> v = v \\<cdot> u", "show \"u \\<cdot> v = v \\<cdot> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> v = v \\<cdot> u", "using primroot_is_primroot[OF \\<open>u \\<noteq> \\<epsilon>\\<close>, unfolded \\<open>\\<rho> u = \\<rho> v\\<close>] primroot_is_primroot[OF \\<open>v \\<noteq> \\<epsilon>\\<close>]"], ["proof (prove)\nusing this:\n  u \\<in>\\<^sub>p \\<rho> v *\n  v \\<in>\\<^sub>p \\<rho> v *\n\ngoal (1 subgoal):\n 1. u \\<cdot> v = v \\<cdot> u", "unfolding primitive_rootP_def\n    comm_root"], ["proof (prove)\nusing this:\n  u \\<noteq> \\<epsilon> \\<and> u \\<in> \\<rho> v* \\<and> primitive (\\<rho> v)\n  v \\<noteq> \\<epsilon> \\<and> v \\<in> \\<rho> v* \\<and> primitive (\\<rho> v)\n\ngoal (1 subgoal):\n 1. \\<exists>t. u \\<in> t* \\<and> v \\<in> t*", "by blast"], ["proof (state)\nthis:\n  u \\<cdot> v = v \\<cdot> u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prim_comm_short_emp: assumes \"primitive p\" and \"u\\<cdot>p=p\\<cdot>u\" and \"\\<^bold>|u\\<^bold>| < \\<^bold>|p\\<^bold>|\"\n  shows \"u = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u = \\<epsilon>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow> False", "assume \"u \\<noteq> \\<epsilon>\""], ["proof (state)\nthis:\n  u \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow> False", "from \\<open>u \\<cdot> p = p \\<cdot> u\\<close>"], ["proof (chain)\npicking this:\n  u \\<cdot> p = p \\<cdot> u", "have \"\\<rho> u = \\<rho> p\""], ["proof (prove)\nusing this:\n  u \\<cdot> p = p \\<cdot> u\n\ngoal (1 subgoal):\n 1. \\<rho> u = \\<rho> p", "unfolding comm_primroots[OF \\<open>u \\<noteq> \\<epsilon>\\<close> prim_nemp, OF \\<open>primitive p\\<close>]"], ["proof (prove)\nusing this:\n  \\<rho> u = \\<rho> p\n\ngoal (1 subgoal):\n 1. \\<rho> u = \\<rho> p", "."], ["proof (state)\nthis:\n  \\<rho> u = \\<rho> p\n\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow> False", "have \"\\<rho> u = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> u = p", "using prim_self_root[OF \\<open>primitive p\\<close>, folded \\<open>\\<rho> u = \\<rho> p\\<close>]"], ["proof (prove)\nusing this:\n  \\<rho> u = p\n\ngoal (1 subgoal):\n 1. \\<rho> u = p", "."], ["proof (state)\nthis:\n  \\<rho> u = p\n\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow> False", "from \\<open>\\<^bold>|u\\<^bold>| < \\<^bold>|p\\<^bold>|\\<close>[folded this]"], ["proof (chain)\npicking this:\n  \\<^bold>|u\\<^bold>| < \\<^bold>|\\<rho> u\\<^bold>|", "show False"], ["proof (prove)\nusing this:\n  \\<^bold>|u\\<^bold>| < \\<^bold>|\\<rho> u\\<^bold>|\n\ngoal (1 subgoal):\n 1. False", "using primroot_shorter_eq[OF \\<open>u \\<noteq> \\<epsilon>\\<close>]"], ["proof (prove)\nusing this:\n  \\<^bold>|u\\<^bold>| < \\<^bold>|\\<rho> u\\<^bold>|\n  \\<^bold>|\\<rho> u\\<^bold>| \\<le> \\<^bold>|u\\<^bold>|\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Conjugation\\<close>"], ["", "text\\<open>Two words $x$ and $y$ are conjugated if one is a rotation of the other.\nOr, equivalently, there exists $z$ such that\n\\[\nxz = zy.\n\\]\n\\<close>"], ["", "definition conjugate (\"_ \\<sim> _\" [50,50] 51) where \"u \\<sim> v \\<equiv> \\<exists>r s. r \\<cdot> s = u \\<and> s \\<cdot> r = v\""], ["", "lemma conjug_rev_conv [reversal_rule]: \"rev u \\<sim> rev v \\<longleftrightarrow> u \\<sim> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev u \\<sim> rev v = u \\<sim> v", "unfolding conjugate_def[reversed]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>r s. s \\<cdot> r = u \\<and> r \\<cdot> s = v) = u \\<sim> v", "using conjugate_def"], ["proof (prove)\nusing this:\n  ?u \\<sim> ?v \\<equiv>\n  \\<exists>r s. r \\<cdot> s = ?u \\<and> s \\<cdot> r = ?v\n\ngoal (1 subgoal):\n 1. (\\<exists>r s. s \\<cdot> r = u \\<and> r \\<cdot> s = v) = u \\<sim> v", "by blast"], ["", "lemma conjug_rotate_iff: \"u \\<sim> v \\<longleftrightarrow> (\\<exists> n. v = rotate n u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<sim> v = (\\<exists>n. v = rotate n u)", "unfolding conjugate_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>r s. r \\<cdot> s = u \\<and> s \\<cdot> r = v) =\n    (\\<exists>n. v = rotate n u)", "using rotate_drop_take[of _ u] takedrop[of _ u] rotate_append"], ["proof (prove)\nusing this:\n  rotate ?n u =\n  drop (?n mod \\<^bold>|u\\<^bold>|) u \\<cdot>\n  take (?n mod \\<^bold>|u\\<^bold>|) u\n  take ?n u \\<cdot> drop ?n u = u\n  rotate \\<^bold>|?l\\<^bold>| (?l \\<cdot> ?q) = ?q \\<cdot> ?l\n\ngoal (1 subgoal):\n 1. (\\<exists>r s. r \\<cdot> s = u \\<and> s \\<cdot> r = v) =\n    (\\<exists>n. v = rotate n u)", "by metis"], ["", "lemma conjugI [intro]: \"r \\<cdot> s = u \\<Longrightarrow> s \\<cdot> r = v \\<Longrightarrow> u \\<sim> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<cdot> s = u; s \\<cdot> r = v\\<rbrakk>\n    \\<Longrightarrow> u \\<sim> v", "unfolding conjugate_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<cdot> s = u; s \\<cdot> r = v\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r s. r \\<cdot> s = u \\<and> s \\<cdot> r = v", "by (intro exI conjI)"], ["", "lemma conjugI' [intro!]: \"r \\<cdot> s \\<sim> s \\<cdot> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<cdot> s \\<sim> s \\<cdot> r", "unfolding conjugate_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ra sa.\n       ra \\<cdot> sa = r \\<cdot> s \\<and> sa \\<cdot> ra = s \\<cdot> r", "by (intro exI conjI, standard+)"], ["", "lemma conjugE [elim]: \n  assumes \"u \\<sim> v\"\n  obtains r s where \"r \\<cdot> s = u\" and \"s \\<cdot> r = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r s.\n        \\<lbrakk>r \\<cdot> s = u; s \\<cdot> r = v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  u \\<sim> v\n\ngoal (1 subgoal):\n 1. (\\<And>r s.\n        \\<lbrakk>r \\<cdot> s = u; s \\<cdot> r = v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding conjugate_def"], ["proof (prove)\nusing this:\n  \\<exists>r s. r \\<cdot> s = u \\<and> s \\<cdot> r = v\n\ngoal (1 subgoal):\n 1. (\\<And>r s.\n        \\<lbrakk>r \\<cdot> s = u; s \\<cdot> r = v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim exE conjE)"], ["", "lemma conjugE1 [elim]:\n  assumes \"u \\<sim> v\"\n  obtains r where \"u \\<cdot> r = r \\<cdot> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        u \\<cdot> r = r \\<cdot> v \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        u \\<cdot> r = r \\<cdot> v \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "obtain r s where u: \"r \\<cdot> s = u\" and v: \"s \\<cdot> r = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r s.\n        \\<lbrakk>r \\<cdot> s = u; s \\<cdot> r = v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  u \\<sim> v\n\ngoal (1 subgoal):\n 1. (\\<And>r s.\n        \\<lbrakk>r \\<cdot> s = u; s \\<cdot> r = v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  r \\<cdot> s = u\n  s \\<cdot> r = v\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        u \\<cdot> r = r \\<cdot> v \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"u \\<cdot> r = r \\<cdot> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> r = r \\<cdot> v", "unfolding u[symmetric] v[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (r \\<cdot> s) \\<cdot> r = r \\<cdot> s \\<cdot> r", "using rassoc"], ["proof (prove)\nusing this:\n  (?xs \\<cdot> ?ys) \\<cdot> ?zs = ?xs \\<cdot> ?ys \\<cdot> ?zs\n\ngoal (1 subgoal):\n 1. (r \\<cdot> s) \\<cdot> r = r \\<cdot> s \\<cdot> r", "."], ["proof (state)\nthis:\n  u \\<cdot> r = r \\<cdot> v\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        u \\<cdot> r = r \\<cdot> v \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  u \\<cdot> r = r \\<cdot> v", "show thesis"], ["proof (prove)\nusing this:\n  u \\<cdot> r = r \\<cdot> v\n\ngoal (1 subgoal):\n 1. thesis", "by fact"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma conjug_refl: \"u \\<sim> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<sim> u", "by standard+"], ["", "lemma conjug_sym [sym]: \"u \\<sim> v \\<Longrightarrow> v \\<sim> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<sim> v \\<Longrightarrow> v \\<sim> u", "by (elim conjugE, intro conjugI) assumption+"], ["", "lemma conjug_nemp_iff: \"u \\<sim> v \\<Longrightarrow> u = \\<epsilon> \\<longleftrightarrow> v = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<sim> v \\<Longrightarrow> (u = \\<epsilon>) = (v = \\<epsilon>)", "by (elim conjugE1, intro iffI) simp+"], ["", "lemma conjug_len: \"u \\<sim> v  \\<Longrightarrow> \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<sim> v \\<Longrightarrow> \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|", "by (elim conjugE, hypsubst, rule swap_len)"], ["", "lemma pow_conjug:\n  assumes eq: \"t\\<^sup>@i \\<cdot> r \\<cdot> u = t\\<^sup>@k\" and t: \"r \\<cdot> s = t\"\n  shows \"u \\<cdot> t\\<^sup>@i \\<cdot> r = (s \\<cdot> r)\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> t \\<^sup>@ i \\<cdot> r = (s \\<cdot> r) \\<^sup>@ k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<cdot> t \\<^sup>@ i \\<cdot> r = (s \\<cdot> r) \\<^sup>@ k", "have \"t\\<^sup>@i \\<cdot> r \\<cdot> u \\<cdot> t\\<^sup>@i \\<cdot> r = t\\<^sup>@i \\<cdot> t\\<^sup>@k \\<cdot> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<^sup>@ i \\<cdot> r \\<cdot> u \\<cdot> t \\<^sup>@ i \\<cdot> r =\n    t \\<^sup>@ i \\<cdot> t \\<^sup>@ k \\<cdot> r", "unfolding eq[unfolded lassoc] lassoc append_same_eq pow_comm"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<^sup>@ i = t \\<^sup>@ i", ".."], ["proof (state)\nthis:\n  t \\<^sup>@ i \\<cdot> r \\<cdot> u \\<cdot> t \\<^sup>@ i \\<cdot> r =\n  t \\<^sup>@ i \\<cdot> t \\<^sup>@ k \\<cdot> r\n\ngoal (1 subgoal):\n 1. u \\<cdot> t \\<^sup>@ i \\<cdot> r = (s \\<cdot> r) \\<^sup>@ k", "also"], ["proof (state)\nthis:\n  t \\<^sup>@ i \\<cdot> r \\<cdot> u \\<cdot> t \\<^sup>@ i \\<cdot> r =\n  t \\<^sup>@ i \\<cdot> t \\<^sup>@ k \\<cdot> r\n\ngoal (1 subgoal):\n 1. u \\<cdot> t \\<^sup>@ i \\<cdot> r = (s \\<cdot> r) \\<^sup>@ k", "have \"\\<dots>  = t\\<^sup>@i \\<cdot> r \\<cdot> (s \\<cdot> r)\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<^sup>@ i \\<cdot> t \\<^sup>@ k \\<cdot> r =\n    t \\<^sup>@ i \\<cdot> r \\<cdot> (s \\<cdot> r) \\<^sup>@ k", "unfolding conjug_pow[OF rassoc, symmetric] t"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<^sup>@ i \\<cdot> t \\<^sup>@ k \\<cdot> r =\n    t \\<^sup>@ i \\<cdot> t \\<^sup>@ k \\<cdot> r", ".."], ["proof (state)\nthis:\n  t \\<^sup>@ i \\<cdot> t \\<^sup>@ k \\<cdot> r =\n  t \\<^sup>@ i \\<cdot> r \\<cdot> (s \\<cdot> r) \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. u \\<cdot> t \\<^sup>@ i \\<cdot> r = (s \\<cdot> r) \\<^sup>@ k", "finally"], ["proof (chain)\npicking this:\n  t \\<^sup>@ i \\<cdot> r \\<cdot> u \\<cdot> t \\<^sup>@ i \\<cdot> r =\n  t \\<^sup>@ i \\<cdot> r \\<cdot> (s \\<cdot> r) \\<^sup>@ k", "show \"u \\<cdot> t\\<^sup>@i \\<cdot> r = (s \\<cdot> r)\\<^sup>@k\""], ["proof (prove)\nusing this:\n  t \\<^sup>@ i \\<cdot> r \\<cdot> u \\<cdot> t \\<^sup>@ i \\<cdot> r =\n  t \\<^sup>@ i \\<cdot> r \\<cdot> (s \\<cdot> r) \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. u \\<cdot> t \\<^sup>@ i \\<cdot> r = (s \\<cdot> r) \\<^sup>@ k", "unfolding same_append_eq"], ["proof (prove)\nusing this:\n  u \\<cdot> t \\<^sup>@ i \\<cdot> r = (s \\<cdot> r) \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. u \\<cdot> t \\<^sup>@ i \\<cdot> r = (s \\<cdot> r) \\<^sup>@ k", "."], ["proof (state)\nthis:\n  u \\<cdot> t \\<^sup>@ i \\<cdot> r = (s \\<cdot> r) \\<^sup>@ k\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>The solution of the equation \n\\[\nxz = zy\n\\]\nis given by the next lemma.\n\\<close>"], ["", "lemma conjug_eqE [elim, consumes 2]:\n  assumes eq: \"x \\<cdot> z = z \\<cdot> y\" and \"x \\<noteq> \\<epsilon>\"\n  obtains u v k where \"u \\<cdot> v = x\" and \"v \\<cdot> u = y\" and \"(u \\<cdot> v)\\<^sup>@k \\<cdot> u = z\" and \"v \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u v k.\n        \\<lbrakk>u \\<cdot> v = x; v \\<cdot> u = y;\n         (u \\<cdot> v) \\<^sup>@ k \\<cdot> u = z;\n         v \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>u v k.\n        \\<lbrakk>u \\<cdot> v = x; v \\<cdot> u = y;\n         (u \\<cdot> v) \\<^sup>@ k \\<cdot> u = z;\n         v \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"z \\<le>p x \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<le>p x \\<cdot> z", "using eq[symmetric]"], ["proof (prove)\nusing this:\n  z \\<cdot> y = x \\<cdot> z\n\ngoal (1 subgoal):\n 1. z \\<le>p x \\<cdot> z", ".."], ["proof (state)\nthis:\n  z \\<le>p x \\<cdot> z\n\ngoal (1 subgoal):\n 1. (\\<And>u v k.\n        \\<lbrakk>u \\<cdot> v = x; v \\<cdot> u = y;\n         (u \\<cdot> v) \\<^sup>@ k \\<cdot> u = z;\n         v \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from this \\<open>x \\<noteq> \\<epsilon>\\<close>"], ["proof (chain)\npicking this:\n  z \\<le>p x \\<cdot> z\n  x \\<noteq> \\<epsilon>", "have \"z \\<le>p x\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  z \\<le>p x \\<cdot> z\n  x \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. z \\<le>p x\\<^sup>\\<omega>", ".."], ["proof (state)\nthis:\n  z \\<le>p x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (\\<And>u v k.\n        \\<lbrakk>u \\<cdot> v = x; v \\<cdot> u = y;\n         (u \\<cdot> v) \\<^sup>@ k \\<cdot> u = z;\n         v \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  z \\<le>p x\\<^sup>\\<omega>", "obtain k u where \"x\\<^sup>@k \\<cdot> u = z\" and \"u <p x\""], ["proof (prove)\nusing this:\n  z \\<le>p x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (\\<And>k u.\n        \\<lbrakk>x \\<^sup>@ k \\<cdot> u = z; u <p x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  x \\<^sup>@ k \\<cdot> u = z\n  u <p x\n\ngoal (1 subgoal):\n 1. (\\<And>u v k.\n        \\<lbrakk>u \\<cdot> v = x; v \\<cdot> u = y;\n         (u \\<cdot> v) \\<^sup>@ k \\<cdot> u = z;\n         v \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>u <p x\\<close>"], ["proof (chain)\npicking this:\n  u <p x", "obtain v where x: \"u \\<cdot> v = x\" and \"v \\<noteq> \\<epsilon>\""], ["proof (prove)\nusing this:\n  u <p x\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>u \\<cdot> v = x; v \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  u \\<cdot> v = x\n  v \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. (\\<And>u v k.\n        \\<lbrakk>u \\<cdot> v = x; v \\<cdot> u = y;\n         (u \\<cdot> v) \\<^sup>@ k \\<cdot> u = z;\n         v \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have z: \"(u\\<cdot>v)\\<^sup>@k \\<cdot> u = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<cdot> v) \\<^sup>@ k \\<cdot> u = z", "unfolding x \\<open>x\\<^sup>@k \\<cdot> u = z\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. z = z", ".."], ["proof (state)\nthis:\n  (u \\<cdot> v) \\<^sup>@ k \\<cdot> u = z\n\ngoal (1 subgoal):\n 1. (\\<And>u v k.\n        \\<lbrakk>u \\<cdot> v = x; v \\<cdot> u = y;\n         (u \\<cdot> v) \\<^sup>@ k \\<cdot> u = z;\n         v \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"z \\<cdot> y = (u\\<cdot>v) \\<cdot> ((u\\<cdot>v)\\<^sup>@k \\<cdot> u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> y = (u \\<cdot> v) \\<cdot> (u \\<cdot> v) \\<^sup>@ k \\<cdot> u", "unfolding z"], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> y = (u \\<cdot> v) \\<cdot> z", "unfolding x eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> y = z \\<cdot> y", ".."], ["proof (state)\nthis:\n  z \\<cdot> y = (u \\<cdot> v) \\<cdot> (u \\<cdot> v) \\<^sup>@ k \\<cdot> u\n\ngoal (1 subgoal):\n 1. (\\<And>u v k.\n        \\<lbrakk>u \\<cdot> v = x; v \\<cdot> u = y;\n         (u \\<cdot> v) \\<^sup>@ k \\<cdot> u = z;\n         v \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  z \\<cdot> y = (u \\<cdot> v) \\<cdot> (u \\<cdot> v) \\<^sup>@ k \\<cdot> u\n\ngoal (1 subgoal):\n 1. (\\<And>u v k.\n        \\<lbrakk>u \\<cdot> v = x; v \\<cdot> u = y;\n         (u \\<cdot> v) \\<^sup>@ k \\<cdot> u = z;\n         v \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<dots> = (u\\<cdot>v)\\<^sup>@k \\<cdot> u \\<cdot> (v \\<cdot> u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<cdot> v) \\<cdot> (u \\<cdot> v) \\<^sup>@ k \\<cdot> u =\n    (u \\<cdot> v) \\<^sup>@ k \\<cdot> u \\<cdot> v \\<cdot> u", "unfolding lassoc pow_commutes_list[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (((u \\<cdot> v) \\<^sup>@ k \\<cdot> u) \\<cdot> v) \\<cdot> u =\n    (((u \\<cdot> v) \\<^sup>@ k \\<cdot> u) \\<cdot> v) \\<cdot> u", ".."], ["proof (state)\nthis:\n  (u \\<cdot> v) \\<cdot> (u \\<cdot> v) \\<^sup>@ k \\<cdot> u =\n  (u \\<cdot> v) \\<^sup>@ k \\<cdot> u \\<cdot> v \\<cdot> u\n\ngoal (1 subgoal):\n 1. (\\<And>u v k.\n        \\<lbrakk>u \\<cdot> v = x; v \\<cdot> u = y;\n         (u \\<cdot> v) \\<^sup>@ k \\<cdot> u = z;\n         v \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  z \\<cdot> y = (u \\<cdot> v) \\<^sup>@ k \\<cdot> u \\<cdot> v \\<cdot> u", "have y: \"v \\<cdot> u = y\""], ["proof (prove)\nusing this:\n  z \\<cdot> y = (u \\<cdot> v) \\<^sup>@ k \\<cdot> u \\<cdot> v \\<cdot> u\n\ngoal (1 subgoal):\n 1. v \\<cdot> u = y", "unfolding z[symmetric] rassoc same_append_eq"], ["proof (prove)\nusing this:\n  y = v \\<cdot> u\n\ngoal (1 subgoal):\n 1. v \\<cdot> u = y", ".."], ["proof (state)\nthis:\n  v \\<cdot> u = y\n\ngoal (1 subgoal):\n 1. (\\<And>u v k.\n        \\<lbrakk>u \\<cdot> v = x; v \\<cdot> u = y;\n         (u \\<cdot> v) \\<^sup>@ k \\<cdot> u = z;\n         v \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from x y z \\<open>v \\<noteq> \\<epsilon>\\<close>"], ["proof (chain)\npicking this:\n  u \\<cdot> v = x\n  v \\<cdot> u = y\n  (u \\<cdot> v) \\<^sup>@ k \\<cdot> u = z\n  v \\<noteq> \\<epsilon>", "show thesis"], ["proof (prove)\nusing this:\n  u \\<cdot> v = x\n  v \\<cdot> u = y\n  (u \\<cdot> v) \\<^sup>@ k \\<cdot> u = z\n  v \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem conjugation: assumes \"x\\<cdot>z = z\\<cdot>y\" and \"x \\<noteq> \\<epsilon>\" \n  shows \"\\<exists> u v k. u \\<cdot> v = x \\<and> v \\<cdot> u  = y \\<and> (u \\<cdot> v)\\<^sup>@k \\<cdot> u = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u v k.\n       u \\<cdot> v = x \\<and>\n       v \\<cdot> u = y \\<and> (u \\<cdot> v) \\<^sup>@ k \\<cdot> u = z", "using assms"], ["proof (prove)\nusing this:\n  x \\<cdot> z = z \\<cdot> y\n  x \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>u v k.\n       u \\<cdot> v = x \\<and>\n       v \\<cdot> u = y \\<and> (u \\<cdot> v) \\<^sup>@ k \\<cdot> u = z", "by blast"], ["", "lemma conjug_eq_prim_rootE [elim, consumes 2]:\n  assumes eq: \"x \\<cdot> z = z \\<cdot> y\" and \"x \\<noteq> \\<epsilon>\"\n  obtains r s i n where\n    \"(r \\<cdot> s)\\<^sup>@Suc i = x\" and\n    \"(s \\<cdot> r)\\<^sup>@Suc i = y\" and \n    \"(r \\<cdot> s)\\<^sup>@n \\<cdot> r = z\" and\n    \"s \\<noteq> \\<epsilon>\" and \"primitive (r \\<cdot> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r s i n.\n        \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = x;\n         (s \\<cdot> r) \\<^sup>@ Suc i = y;\n         (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z; s \\<noteq> \\<epsilon>;\n         primitive (r \\<cdot> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>r s i n.\n        \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = x;\n         (s \\<cdot> r) \\<^sup>@ Suc i = y;\n         (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z; s \\<noteq> \\<epsilon>;\n         primitive (r \\<cdot> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>x \\<noteq> \\<epsilon>\\<close>"], ["proof (chain)\npicking this:\n  x \\<noteq> \\<epsilon>", "obtain i where \"(\\<rho> x)\\<^sup>@(Suc i) = x\""], ["proof (prove)\nusing this:\n  x \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<rho> x \\<^sup>@ Suc i = x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  \\<rho> x \\<^sup>@ Suc i = x\n\ngoal (1 subgoal):\n 1. (\\<And>r s i n.\n        \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = x;\n         (s \\<cdot> r) \\<^sup>@ Suc i = y;\n         (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z; s \\<noteq> \\<epsilon>;\n         primitive (r \\<cdot> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  \\<rho> x \\<^sup>@ Suc i = x\n\ngoal (1 subgoal):\n 1. (\\<And>r s i n.\n        \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = x;\n         (s \\<cdot> r) \\<^sup>@ Suc i = y;\n         (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z; s \\<noteq> \\<epsilon>;\n         primitive (r \\<cdot> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"z \\<le>p x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<le>p x\\<^sup>\\<omega>", "using prefI[OF \\<open>x \\<cdot> z = z \\<cdot> y\\<close>[symmetric]] \\<open>x \\<noteq> \\<epsilon>\\<close>"], ["proof (prove)\nusing this:\n  z \\<le>p x \\<cdot> z\n  x \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. z \\<le>p x\\<^sup>\\<omega>", ".."], ["proof (state)\nthis:\n  z \\<le>p x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (\\<And>r s i n.\n        \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = x;\n         (s \\<cdot> r) \\<^sup>@ Suc i = y;\n         (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z; s \\<noteq> \\<epsilon>;\n         primitive (r \\<cdot> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  z \\<le>p \\<rho> x \\<^sup>@ Suc i\\<^sup>\\<omega>", "have \"z \\<le>p (\\<rho> x)\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  z \\<le>p \\<rho> x \\<^sup>@ Suc i\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. z \\<le>p \\<rho> x\\<^sup>\\<omega>", "by (elim per_drop_exp)"], ["proof (state)\nthis:\n  z \\<le>p \\<rho> x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (\\<And>r s i n.\n        \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = x;\n         (s \\<cdot> r) \\<^sup>@ Suc i = y;\n         (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z; s \\<noteq> \\<epsilon>;\n         primitive (r \\<cdot> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  z \\<le>p \\<rho> x\\<^sup>\\<omega>", "obtain n r where \"(\\<rho> x)\\<^sup>@n \\<cdot> r = z\" and \"r <p \\<rho> x\""], ["proof (prove)\nusing this:\n  z \\<le>p \\<rho> x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (\\<And>n r.\n        \\<lbrakk>\\<rho> x \\<^sup>@ n \\<cdot> r = z; r <p \\<rho> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  \\<rho> x \\<^sup>@ n \\<cdot> r = z\n  r <p \\<rho> x\n\ngoal (1 subgoal):\n 1. (\\<And>r s i n.\n        \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = x;\n         (s \\<cdot> r) \\<^sup>@ Suc i = y;\n         (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z; s \\<noteq> \\<epsilon>;\n         primitive (r \\<cdot> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>r <p \\<rho> x\\<close>"], ["proof (chain)\npicking this:\n  r <p \\<rho> x", "obtain s where \"r \\<cdot> s = \\<rho> x\" and \"s \\<noteq> \\<epsilon>\""], ["proof (prove)\nusing this:\n  r <p \\<rho> x\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>r \\<cdot> s = \\<rho> x; s \\<noteq> \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  r \\<cdot> s = \\<rho> x\n  s \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. (\\<And>r s i n.\n        \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = x;\n         (s \\<cdot> r) \\<^sup>@ Suc i = y;\n         (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z; s \\<noteq> \\<epsilon>;\n         primitive (r \\<cdot> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define j where \"j = Suc i\""], ["proof (state)\nthis:\n  j = Suc i\n\ngoal (1 subgoal):\n 1. (\\<And>r s i n.\n        \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = x;\n         (s \\<cdot> r) \\<^sup>@ Suc i = y;\n         (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z; s \\<noteq> \\<epsilon>;\n         primitive (r \\<cdot> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have x: \"(r\\<cdot>s)\\<^sup>@j = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r \\<cdot> s) \\<^sup>@ j = x", "unfolding \\<open>r \\<cdot> s = \\<rho> x\\<close> \\<open>j = Suc i\\<close> \\<open>(\\<rho> x)\\<^sup>@(Suc i) = x\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = x", ".."], ["proof (state)\nthis:\n  (r \\<cdot> s) \\<^sup>@ j = x\n\ngoal (1 subgoal):\n 1. (\\<And>r s i n.\n        \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = x;\n         (s \\<cdot> r) \\<^sup>@ Suc i = y;\n         (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z; s \\<noteq> \\<epsilon>;\n         primitive (r \\<cdot> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have z: \"(r\\<cdot>s)\\<^sup>@n \\<cdot> r = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z", "unfolding \\<open>r \\<cdot> s = \\<rho> x\\<close> \\<open>(\\<rho> x)\\<^sup>@n \\<cdot> r = z\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. z = z", ".."], ["proof (state)\nthis:\n  (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z\n\ngoal (1 subgoal):\n 1. (\\<And>r s i n.\n        \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = x;\n         (s \\<cdot> r) \\<^sup>@ Suc i = y;\n         (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z; s \\<noteq> \\<epsilon>;\n         primitive (r \\<cdot> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"z \\<cdot> y = ((r\\<cdot>s)\\<^sup>@j \\<cdot> (r\\<cdot>s)\\<^sup>@n) \\<cdot> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> y =\n    ((r \\<cdot> s) \\<^sup>@ j \\<cdot> (r \\<cdot> s) \\<^sup>@ n) \\<cdot> r", "using eq[symmetric]"], ["proof (prove)\nusing this:\n  z \\<cdot> y = x \\<cdot> z\n\ngoal (1 subgoal):\n 1. z \\<cdot> y =\n    ((r \\<cdot> s) \\<^sup>@ j \\<cdot> (r \\<cdot> s) \\<^sup>@ n) \\<cdot> r", "unfolding rassoc x z"], ["proof (prove)\nusing this:\n  z \\<cdot> y = x \\<cdot> z\n\ngoal (1 subgoal):\n 1. z \\<cdot> y = x \\<cdot> z", "."], ["proof (state)\nthis:\n  z \\<cdot> y =\n  ((r \\<cdot> s) \\<^sup>@ j \\<cdot> (r \\<cdot> s) \\<^sup>@ n) \\<cdot> r\n\ngoal (1 subgoal):\n 1. (\\<And>r s i n.\n        \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = x;\n         (s \\<cdot> r) \\<^sup>@ Suc i = y;\n         (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z; s \\<noteq> \\<epsilon>;\n         primitive (r \\<cdot> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  z \\<cdot> y =\n  ((r \\<cdot> s) \\<^sup>@ j \\<cdot> (r \\<cdot> s) \\<^sup>@ n) \\<cdot> r\n\ngoal (1 subgoal):\n 1. (\\<And>r s i n.\n        \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = x;\n         (s \\<cdot> r) \\<^sup>@ Suc i = y;\n         (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z; s \\<noteq> \\<epsilon>;\n         primitive (r \\<cdot> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"(r\\<cdot>s)\\<^sup>@j \\<cdot> (r\\<cdot>s)\\<^sup>@n = (r\\<cdot>s)\\<^sup>@n \\<cdot> (r\\<cdot>s)\\<^sup>@j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r \\<cdot> s) \\<^sup>@ j \\<cdot> (r \\<cdot> s) \\<^sup>@ n =\n    (r \\<cdot> s) \\<^sup>@ n \\<cdot> (r \\<cdot> s) \\<^sup>@ j", "using pow_comm"], ["proof (prove)\nusing this:\n  ?t \\<^sup>@ ?k \\<cdot> ?t \\<^sup>@ ?m =\n  ?t \\<^sup>@ ?m \\<cdot> ?t \\<^sup>@ ?k\n\ngoal (1 subgoal):\n 1. (r \\<cdot> s) \\<^sup>@ j \\<cdot> (r \\<cdot> s) \\<^sup>@ n =\n    (r \\<cdot> s) \\<^sup>@ n \\<cdot> (r \\<cdot> s) \\<^sup>@ j", "."], ["proof (state)\nthis:\n  (r \\<cdot> s) \\<^sup>@ j \\<cdot> (r \\<cdot> s) \\<^sup>@ n =\n  (r \\<cdot> s) \\<^sup>@ n \\<cdot> (r \\<cdot> s) \\<^sup>@ j\n\ngoal (1 subgoal):\n 1. (\\<And>r s i n.\n        \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = x;\n         (s \\<cdot> r) \\<^sup>@ Suc i = y;\n         (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z; s \\<noteq> \\<epsilon>;\n         primitive (r \\<cdot> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  (r \\<cdot> s) \\<^sup>@ j \\<cdot> (r \\<cdot> s) \\<^sup>@ n =\n  (r \\<cdot> s) \\<^sup>@ n \\<cdot> (r \\<cdot> s) \\<^sup>@ j\n\ngoal (1 subgoal):\n 1. (\\<And>r s i n.\n        \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = x;\n         (s \\<cdot> r) \\<^sup>@ Suc i = y;\n         (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z; s \\<noteq> \\<epsilon>;\n         primitive (r \\<cdot> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<dots> \\<cdot> r = (r\\<cdot>s)\\<^sup>@n \\<cdot> r \\<cdot> (s\\<cdot>r)\\<^sup>@j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((r \\<cdot> s) \\<^sup>@ n \\<cdot> (r \\<cdot> s) \\<^sup>@ j) \\<cdot> r =\n    (r \\<cdot> s) \\<^sup>@ n \\<cdot> r \\<cdot> (s \\<cdot> r) \\<^sup>@ j", "unfolding rassoc"], ["proof (prove)\ngoal (1 subgoal):\n 1. (r \\<cdot> s) \\<^sup>@ n \\<cdot> (r \\<cdot> s) \\<^sup>@ j \\<cdot> r =\n    (r \\<cdot> s) \\<^sup>@ n \\<cdot> r \\<cdot> (s \\<cdot> r) \\<^sup>@ j", "unfolding shift_pow"], ["proof (prove)\ngoal (1 subgoal):\n 1. (r \\<cdot> s) \\<^sup>@ n \\<cdot> r \\<cdot> (s \\<cdot> r) \\<^sup>@ j =\n    (r \\<cdot> s) \\<^sup>@ n \\<cdot> r \\<cdot> (s \\<cdot> r) \\<^sup>@ j", ".."], ["proof (state)\nthis:\n  ((r \\<cdot> s) \\<^sup>@ n \\<cdot> (r \\<cdot> s) \\<^sup>@ j) \\<cdot> r =\n  (r \\<cdot> s) \\<^sup>@ n \\<cdot> r \\<cdot> (s \\<cdot> r) \\<^sup>@ j\n\ngoal (1 subgoal):\n 1. (\\<And>r s i n.\n        \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = x;\n         (s \\<cdot> r) \\<^sup>@ Suc i = y;\n         (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z; s \\<noteq> \\<epsilon>;\n         primitive (r \\<cdot> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  z \\<cdot> y =\n  (r \\<cdot> s) \\<^sup>@ n \\<cdot> r \\<cdot> (s \\<cdot> r) \\<^sup>@ j", "have y: \"y = (s\\<cdot>r)\\<^sup>@j\""], ["proof (prove)\nusing this:\n  z \\<cdot> y =\n  (r \\<cdot> s) \\<^sup>@ n \\<cdot> r \\<cdot> (s \\<cdot> r) \\<^sup>@ j\n\ngoal (1 subgoal):\n 1. y = (s \\<cdot> r) \\<^sup>@ j", "unfolding z[symmetric] rassoc cancel"], ["proof (prove)\nusing this:\n  y = (s \\<cdot> r) \\<^sup>@ j\n\ngoal (1 subgoal):\n 1. y = (s \\<cdot> r) \\<^sup>@ j", "."], ["proof (state)\nthis:\n  y = (s \\<cdot> r) \\<^sup>@ j\n\ngoal (1 subgoal):\n 1. (\\<And>r s i n.\n        \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = x;\n         (s \\<cdot> r) \\<^sup>@ Suc i = y;\n         (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z; s \\<noteq> \\<epsilon>;\n         primitive (r \\<cdot> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>x \\<noteq> \\<epsilon>\\<close>"], ["proof (chain)\npicking this:\n  x \\<noteq> \\<epsilon>", "have \"primitive (r \\<cdot> s)\""], ["proof (prove)\nusing this:\n  x \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. primitive (r \\<cdot> s)", "unfolding \\<open>r \\<cdot> s = \\<rho> x\\<close>"], ["proof (prove)\nusing this:\n  x \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. primitive (\\<rho> x)", ".."], ["proof (state)\nthis:\n  primitive (r \\<cdot> s)\n\ngoal (1 subgoal):\n 1. (\\<And>r s i n.\n        \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = x;\n         (s \\<cdot> r) \\<^sup>@ Suc i = y;\n         (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z; s \\<noteq> \\<epsilon>;\n         primitive (r \\<cdot> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with that x y z \\<open>s \\<noteq> \\<epsilon>\\<close>"], ["proof (chain)\npicking this:\n  \\<lbrakk>(?r \\<cdot> ?s) \\<^sup>@ Suc ?i = x;\n   (?s \\<cdot> ?r) \\<^sup>@ Suc ?i = y;\n   (?r \\<cdot> ?s) \\<^sup>@ ?n \\<cdot> ?r = z; ?s \\<noteq> \\<epsilon>;\n   primitive (?r \\<cdot> ?s)\\<rbrakk>\n  \\<Longrightarrow> thesis\n  (r \\<cdot> s) \\<^sup>@ j = x\n  y = (s \\<cdot> r) \\<^sup>@ j\n  (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z\n  s \\<noteq> \\<epsilon>\n  primitive (r \\<cdot> s)", "show thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?r \\<cdot> ?s) \\<^sup>@ Suc ?i = x;\n   (?s \\<cdot> ?r) \\<^sup>@ Suc ?i = y;\n   (?r \\<cdot> ?s) \\<^sup>@ ?n \\<cdot> ?r = z; ?s \\<noteq> \\<epsilon>;\n   primitive (?r \\<cdot> ?s)\\<rbrakk>\n  \\<Longrightarrow> thesis\n  (r \\<cdot> s) \\<^sup>@ j = x\n  y = (s \\<cdot> r) \\<^sup>@ j\n  (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z\n  s \\<noteq> \\<epsilon>\n  primitive (r \\<cdot> s)\n\ngoal (1 subgoal):\n 1. thesis", "unfolding \\<open>j = Suc i\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?r \\<cdot> ?s) \\<^sup>@ Suc ?i = x;\n   (?s \\<cdot> ?r) \\<^sup>@ Suc ?i = y;\n   (?r \\<cdot> ?s) \\<^sup>@ ?n \\<cdot> ?r = z; ?s \\<noteq> \\<epsilon>;\n   primitive (?r \\<cdot> ?s)\\<rbrakk>\n  \\<Longrightarrow> thesis\n  (r \\<cdot> s) \\<^sup>@ Suc i = x\n  y = (s \\<cdot> r) \\<^sup>@ Suc i\n  (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z\n  s \\<noteq> \\<epsilon>\n  primitive (r \\<cdot> s)\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma conjug_eq_prim_root:\n  assumes \"x \\<cdot> z = z \\<cdot> y\" and \"x \\<noteq> \\<epsilon>\"\n  shows \"\\<exists> r s i n. (r \\<cdot> s)\\<^sup>@(Suc i) = x \\<and> (s \\<cdot> r)\\<^sup>@(Suc i) = y \\<and> (r \\<cdot> s)\\<^sup>@n \\<cdot> r = z \\<and> s \\<noteq> \\<epsilon> \\<and> primitive (r \\<cdot> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r s i n.\n       (r \\<cdot> s) \\<^sup>@ Suc i = x \\<and>\n       (s \\<cdot> r) \\<^sup>@ Suc i = y \\<and>\n       (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z \\<and>\n       s \\<noteq> \\<epsilon> \\<and> primitive (r \\<cdot> s)", "using conjug_eq_prim_rootE[OF assms, of ?thesis]"], ["proof (prove)\nusing this:\n  (\\<And>r s i n.\n      \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = x;\n       (s \\<cdot> r) \\<^sup>@ Suc i = y;\n       (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z; s \\<noteq> \\<epsilon>;\n       primitive (r \\<cdot> s)\\<rbrakk>\n      \\<Longrightarrow> \\<exists>r s i n.\n                           (r \\<cdot> s) \\<^sup>@ Suc i = x \\<and>\n                           (s \\<cdot> r) \\<^sup>@ Suc i = y \\<and>\n                           (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z \\<and>\n                           s \\<noteq> \\<epsilon> \\<and>\n                           primitive (r \\<cdot> s)) \\<Longrightarrow>\n  \\<exists>r s i n.\n     (r \\<cdot> s) \\<^sup>@ Suc i = x \\<and>\n     (s \\<cdot> r) \\<^sup>@ Suc i = y \\<and>\n     (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z \\<and>\n     s \\<noteq> \\<epsilon> \\<and> primitive (r \\<cdot> s)\n\ngoal (1 subgoal):\n 1. \\<exists>r s i n.\n       (r \\<cdot> s) \\<^sup>@ Suc i = x \\<and>\n       (s \\<cdot> r) \\<^sup>@ Suc i = y \\<and>\n       (r \\<cdot> s) \\<^sup>@ n \\<cdot> r = z \\<and>\n       s \\<noteq> \\<epsilon> \\<and> primitive (r \\<cdot> s)", "by blast"], ["", "lemma conjugI1 [intro]:\n  assumes eq: \"u \\<cdot> r = r \\<cdot> v\"\n  shows \"u \\<sim> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<sim> v", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> u \\<sim> v\n 2. \\<not> ?P \\<Longrightarrow> u \\<sim> v", "assume \"u = \\<epsilon>\""], ["proof (state)\nthis:\n  u = \\<epsilon>\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> u \\<sim> v\n 2. \\<not> ?P \\<Longrightarrow> u \\<sim> v", "have \"v = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = \\<epsilon>", "using eq"], ["proof (prove)\nusing this:\n  u \\<cdot> r = r \\<cdot> v\n\ngoal (1 subgoal):\n 1. v = \\<epsilon>", "unfolding \\<open>u = \\<epsilon>\\<close>"], ["proof (prove)\nusing this:\n  \\<epsilon> \\<cdot> r = r \\<cdot> v\n\ngoal (1 subgoal):\n 1. v = \\<epsilon>", "by simp"], ["proof (state)\nthis:\n  v = \\<epsilon>\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> u \\<sim> v\n 2. \\<not> ?P \\<Longrightarrow> u \\<sim> v", "show \"u \\<sim> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<sim> v", "unfolding \\<open>u = \\<epsilon>\\<close> \\<open>v = \\<epsilon>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<epsilon> \\<sim> \\<epsilon>", "using conjug_refl"], ["proof (prove)\nusing this:\n  ?u \\<sim> ?u\n\ngoal (1 subgoal):\n 1. \\<epsilon> \\<sim> \\<epsilon>", "."], ["proof (state)\nthis:\n  u \\<sim> v\n\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<sim> v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<sim> v", "assume \"u \\<noteq> \\<epsilon>\""], ["proof (state)\nthis:\n  u \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. u \\<noteq> \\<epsilon> \\<Longrightarrow> u \\<sim> v", "show \"u \\<sim> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<sim> v", "using eq \\<open>u \\<noteq> \\<epsilon>\\<close>"], ["proof (prove)\nusing this:\n  u \\<cdot> r = r \\<cdot> v\n  u \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. u \\<sim> v", "by (cases rule: conjug_eqE, intro conjugI)"], ["proof (state)\nthis:\n  u \\<sim> v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma conjug_trans [trans]:\n  assumes uv: \"u \\<sim> v\" and vw: \"v \\<sim> w\"\n    shows \"u \\<sim> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<sim> w", "using assms"], ["proof (prove)\nusing this:\n  u \\<sim> v\n  v \\<sim> w\n\ngoal (1 subgoal):\n 1. u \\<sim> w", "unfolding conjug_rotate_iff"], ["proof (prove)\nusing this:\n  \\<exists>n. v = rotate n u\n  \\<exists>n. w = rotate n v\n\ngoal (1 subgoal):\n 1. \\<exists>n. w = rotate n u", "using rotate_rotate"], ["proof (prove)\nusing this:\n  \\<exists>n. v = rotate n u\n  \\<exists>n. w = rotate n v\n  rotate ?m (rotate ?n ?xs) = rotate (?m + ?n) ?xs\n\ngoal (1 subgoal):\n 1. \\<exists>n. w = rotate n u", "by blast"], ["", "lemma conjug_trans': assumes uv': \"u \\<cdot> r = r \\<cdot> v\" and vw': \"v \\<cdot> s = s \\<cdot> w\" shows \"u \\<cdot> (r \\<cdot> s) = (r \\<cdot> s) \\<cdot> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> r \\<cdot> s = (r \\<cdot> s) \\<cdot> w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<cdot> r \\<cdot> s = (r \\<cdot> s) \\<cdot> w", "have \"u \\<cdot> (r \\<cdot> s) = (r \\<cdot> v) \\<cdot> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> r \\<cdot> s = (r \\<cdot> v) \\<cdot> s", "unfolding uv'[symmetric] rassoc"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<cdot> r \\<cdot> s = u \\<cdot> r \\<cdot> s", ".."], ["proof (state)\nthis:\n  u \\<cdot> r \\<cdot> s = (r \\<cdot> v) \\<cdot> s\n\ngoal (1 subgoal):\n 1. u \\<cdot> r \\<cdot> s = (r \\<cdot> s) \\<cdot> w", "also"], ["proof (state)\nthis:\n  u \\<cdot> r \\<cdot> s = (r \\<cdot> v) \\<cdot> s\n\ngoal (1 subgoal):\n 1. u \\<cdot> r \\<cdot> s = (r \\<cdot> s) \\<cdot> w", "have \"\\<dots> = r \\<cdot> (s \\<cdot> w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r \\<cdot> v) \\<cdot> s = r \\<cdot> s \\<cdot> w", "unfolding vw'[symmetric] rassoc"], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<cdot> v \\<cdot> s = r \\<cdot> v \\<cdot> s", ".."], ["proof (state)\nthis:\n  (r \\<cdot> v) \\<cdot> s = r \\<cdot> s \\<cdot> w\n\ngoal (1 subgoal):\n 1. u \\<cdot> r \\<cdot> s = (r \\<cdot> s) \\<cdot> w", "finally"], ["proof (chain)\npicking this:\n  u \\<cdot> r \\<cdot> s = r \\<cdot> s \\<cdot> w", "show \"u \\<cdot> (r \\<cdot> s) = (r \\<cdot> s) \\<cdot> w\""], ["proof (prove)\nusing this:\n  u \\<cdot> r \\<cdot> s = r \\<cdot> s \\<cdot> w\n\ngoal (1 subgoal):\n 1. u \\<cdot> r \\<cdot> s = (r \\<cdot> s) \\<cdot> w", "unfolding rassoc"], ["proof (prove)\nusing this:\n  u \\<cdot> r \\<cdot> s = r \\<cdot> s \\<cdot> w\n\ngoal (1 subgoal):\n 1. u \\<cdot> r \\<cdot> s = r \\<cdot> s \\<cdot> w", "."], ["proof (state)\nthis:\n  u \\<cdot> r \\<cdot> s = (r \\<cdot> s) \\<cdot> w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nconjug_neq: \"\\<not> u \\<sim> v \\<Longrightarrow> u \\<noteq> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> u \\<sim> v \\<Longrightarrow> u \\<noteq> v", "by blast"], ["", "lemma prim_conjug:\n  assumes prim: \"primitive u\" and conjug: \"u \\<sim> v\"\n  shows \"primitive v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primitive v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. primitive v", "have \"v \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<noteq> \\<epsilon>", "using prim_nemp[OF prim]"], ["proof (prove)\nusing this:\n  u \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. v \\<noteq> \\<epsilon>", "unfolding conjug_nemp_iff[OF conjug]"], ["proof (prove)\nusing this:\n  v \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. v \\<noteq> \\<epsilon>", "."], ["proof (state)\nthis:\n  v \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. primitive v", "from conjug[symmetric]"], ["proof (chain)\npicking this:\n  v \\<sim> u", "obtain t where \"v \\<cdot> t = t \\<cdot> u\""], ["proof (prove)\nusing this:\n  v \\<sim> u\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        v \\<cdot> t = t \\<cdot> u \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  v \\<cdot> t = t \\<cdot> u\n\ngoal (1 subgoal):\n 1. primitive v", "from this \\<open>v \\<noteq> \\<epsilon>\\<close>"], ["proof (chain)\npicking this:\n  v \\<cdot> t = t \\<cdot> u\n  v \\<noteq> \\<epsilon>", "obtain r s i where\n    v: \"(r \\<cdot> s)\\<^sup>@(Suc i) = v\" and u: \"(s \\<cdot> r)\\<^sup>@(Suc i) = u\" and prim': \"primitive (r \\<cdot> s)\""], ["proof (prove)\nusing this:\n  v \\<cdot> t = t \\<cdot> u\n  v \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. (\\<And>r s i.\n        \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = v;\n         (s \\<cdot> r) \\<^sup>@ Suc i = u; primitive (r \\<cdot> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  (r \\<cdot> s) \\<^sup>@ Suc i = v\n  (s \\<cdot> r) \\<^sup>@ Suc i = u\n  primitive (r \\<cdot> s)\n\ngoal (1 subgoal):\n 1. primitive v", "have \"r \\<cdot> s = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<cdot> s = v", "using v"], ["proof (prove)\nusing this:\n  (r \\<cdot> s) \\<^sup>@ Suc i = v\n\ngoal (1 subgoal):\n 1. r \\<cdot> s = v", "unfolding prim_exp_one[OF prim u] pow_one_id"], ["proof (prove)\nusing this:\n  r \\<cdot> s = v\n\ngoal (1 subgoal):\n 1. r \\<cdot> s = v", "."], ["proof (state)\nthis:\n  r \\<cdot> s = v\n\ngoal (1 subgoal):\n 1. primitive v", "show \"primitive v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primitive v", "using prim'"], ["proof (prove)\nusing this:\n  primitive (r \\<cdot> s)\n\ngoal (1 subgoal):\n 1. primitive v", "unfolding \\<open>r \\<cdot> s = v\\<close>"], ["proof (prove)\nusing this:\n  primitive v\n\ngoal (1 subgoal):\n 1. primitive v", "."], ["proof (state)\nthis:\n  primitive v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma root_conjug: \"u \\<le>p r \\<cdot> u \\<Longrightarrow> u\\<inverse>\\<^sup>>(r\\<cdot>u) \\<sim> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p r \\<cdot> u \\<Longrightarrow>\n    u\\<inverse>\\<^sup>>(r \\<cdot> u) \\<sim> r", "using conjugI1 conjug_sym lq_pref"], ["proof (prove)\nusing this:\n  ?u \\<cdot> ?r = ?r \\<cdot> ?v \\<Longrightarrow> ?u \\<sim> ?v\n  ?u \\<sim> ?v \\<Longrightarrow> ?v \\<sim> ?u\n  ?u \\<le>p ?v \\<Longrightarrow> ?u \\<cdot> ?u\\<inverse>\\<^sup>>?v = ?v\n\ngoal (1 subgoal):\n 1. u \\<le>p r \\<cdot> u \\<Longrightarrow>\n    u\\<inverse>\\<^sup>>(r \\<cdot> u) \\<sim> r", "by metis"], ["", "lemma conjug_prim_root:\n  assumes conjug: \"u \\<sim> v\" and \"u \\<noteq> \\<epsilon>\"\n  shows \"\\<rho> u \\<sim> \\<rho> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> u \\<sim> \\<rho> v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<rho> u \\<sim> \\<rho> v", "from conjug"], ["proof (chain)\npicking this:\n  u \\<sim> v", "obtain t where \"u \\<cdot> t = t \\<cdot> v\""], ["proof (prove)\nusing this:\n  u \\<sim> v\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        u \\<cdot> t = t \\<cdot> v \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  u \\<cdot> t = t \\<cdot> v\n\ngoal (1 subgoal):\n 1. \\<rho> u \\<sim> \\<rho> v", "from this \\<open>u \\<noteq> \\<epsilon>\\<close>"], ["proof (chain)\npicking this:\n  u \\<cdot> t = t \\<cdot> v\n  u \\<noteq> \\<epsilon>", "obtain r s i where\n    u: \"(r \\<cdot> s)\\<^sup>@(Suc i) = u\" and v: \"(s \\<cdot> r)\\<^sup>@(Suc i) = v\" and prim: \"primitive (r \\<cdot> s)\""], ["proof (prove)\nusing this:\n  u \\<cdot> t = t \\<cdot> v\n  u \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. (\\<And>r s i.\n        \\<lbrakk>(r \\<cdot> s) \\<^sup>@ Suc i = u;\n         (s \\<cdot> r) \\<^sup>@ Suc i = v; primitive (r \\<cdot> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  (r \\<cdot> s) \\<^sup>@ Suc i = u\n  (s \\<cdot> r) \\<^sup>@ Suc i = v\n  primitive (r \\<cdot> s)\n\ngoal (1 subgoal):\n 1. \\<rho> u \\<sim> \\<rho> v", "have rs: \"\\<rho> u = r \\<cdot> s\" and sr: \"\\<rho> v = s \\<cdot> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> u = r \\<cdot> s &&& \\<rho> v = s \\<cdot> r", "using prim prim_conjug u v"], ["proof (prove)\nusing this:\n  primitive (r \\<cdot> s)\n  \\<lbrakk>primitive ?u; ?u \\<sim> ?v\\<rbrakk>\n  \\<Longrightarrow> primitive ?v\n  (r \\<cdot> s) \\<^sup>@ Suc i = u\n  (s \\<cdot> r) \\<^sup>@ Suc i = v\n\ngoal (1 subgoal):\n 1. \\<rho> u = r \\<cdot> s &&& \\<rho> v = s \\<cdot> r", "by blast+"], ["proof (state)\nthis:\n  \\<rho> u = r \\<cdot> s\n  \\<rho> v = s \\<cdot> r\n\ngoal (1 subgoal):\n 1. \\<rho> u \\<sim> \\<rho> v", "show \"\\<rho> u \\<sim> \\<rho> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> u \\<sim> \\<rho> v", "using conjugI'"], ["proof (prove)\nusing this:\n  ?r \\<cdot> ?s \\<sim> ?s \\<cdot> ?r\n\ngoal (1 subgoal):\n 1. \\<rho> u \\<sim> \\<rho> v", "unfolding rs sr"], ["proof (prove)\nusing this:\n  ?r \\<cdot> ?s \\<sim> ?s \\<cdot> ?r\n\ngoal (1 subgoal):\n 1. r \\<cdot> s \\<sim> s \\<cdot> r", "."], ["proof (state)\nthis:\n  \\<rho> u \\<sim> \\<rho> v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma conjug_add_exp: \"u \\<sim> v \\<Longrightarrow>  u\\<^sup>@k \\<sim> v\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<sim> v \\<Longrightarrow> u \\<^sup>@ k \\<sim> v \\<^sup>@ k", "by (elim conjugE1, intro conjugI1, rule conjug_pow)"], ["", "lemma conjug_prim_root_iff:\n  assumes nemp:\"u \\<noteq> \\<epsilon>\" and len: \"\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\"\n  shows \"\\<rho> u  \\<sim> \\<rho> v \\<longleftrightarrow> u \\<sim> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> u \\<sim> \\<rho> v = u \\<sim> v", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<rho> u \\<sim> \\<rho> v \\<Longrightarrow> u \\<sim> v\n 2. u \\<sim> v \\<Longrightarrow> \\<rho> u \\<sim> \\<rho> v", "show \"u \\<sim> v \\<Longrightarrow> \\<rho> u  \\<sim> \\<rho> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<sim> v \\<Longrightarrow> \\<rho> u \\<sim> \\<rho> v", "using conjug_prim_root[OF _ nemp]"], ["proof (prove)\nusing this:\n  u \\<sim> ?v \\<Longrightarrow> \\<rho> u \\<sim> \\<rho> ?v\n\ngoal (1 subgoal):\n 1. u \\<sim> v \\<Longrightarrow> \\<rho> u \\<sim> \\<rho> v", "."], ["proof (state)\nthis:\n  u \\<sim> v \\<Longrightarrow> \\<rho> u \\<sim> \\<rho> v\n\ngoal (1 subgoal):\n 1. \\<rho> u \\<sim> \\<rho> v \\<Longrightarrow> u \\<sim> v", "assume conjug: \"\\<rho> u  \\<sim> \\<rho> v\""], ["proof (state)\nthis:\n  \\<rho> u \\<sim> \\<rho> v\n\ngoal (1 subgoal):\n 1. \\<rho> u \\<sim> \\<rho> v \\<Longrightarrow> u \\<sim> v", "have \"v \\<noteq> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<noteq> \\<epsilon>", "using nemp_len[OF nemp]"], ["proof (prove)\nusing this:\n  \\<^bold>|u\\<^bold>| \\<noteq> 0\n\ngoal (1 subgoal):\n 1. v \\<noteq> \\<epsilon>", "unfolding len length_0_conv"], ["proof (prove)\nusing this:\n  v \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. v \\<noteq> \\<epsilon>", "."], ["proof (state)\nthis:\n  v \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<rho> u \\<sim> \\<rho> v \\<Longrightarrow> u \\<sim> v", "with nemp"], ["proof (chain)\npicking this:\n  u \\<noteq> \\<epsilon>\n  v \\<noteq> \\<epsilon>", "obtain k l where roots: \"(\\<rho> u)\\<^sup>@k = u\" \"(\\<rho> v)\\<^sup>@l = v\""], ["proof (prove)\nusing this:\n  u \\<noteq> \\<epsilon>\n  v \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. (\\<And>k l.\n        \\<lbrakk>\\<rho> u \\<^sup>@ k = u; \\<rho> v \\<^sup>@ l = v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim prim_root_power)"], ["proof (state)\nthis:\n  \\<rho> u \\<^sup>@ k = u\n  \\<rho> v \\<^sup>@ l = v\n\ngoal (1 subgoal):\n 1. \\<rho> u \\<sim> \\<rho> v \\<Longrightarrow> u \\<sim> v", "have \"\\<^bold>|(\\<rho> u)\\<^sup>@k\\<^bold>| = \\<^bold>|(\\<rho> v)\\<^sup>@l\\<^bold>|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>|\\<rho> u \\<^sup>@ k\\<^bold>| =\n    \\<^bold>|\\<rho> v \\<^sup>@ l\\<^bold>|", "using len"], ["proof (prove)\nusing this:\n  \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<^bold>|\\<rho> u \\<^sup>@ k\\<^bold>| =\n    \\<^bold>|\\<rho> v \\<^sup>@ l\\<^bold>|", "unfolding roots"], ["proof (prove)\nusing this:\n  \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|", "."], ["proof (state)\nthis:\n  \\<^bold>|\\<rho> u \\<^sup>@ k\\<^bold>| =\n  \\<^bold>|\\<rho> v \\<^sup>@ l\\<^bold>|\n\ngoal (1 subgoal):\n 1. \\<rho> u \\<sim> \\<rho> v \\<Longrightarrow> u \\<sim> v", "then"], ["proof (chain)\npicking this:\n  \\<^bold>|\\<rho> u \\<^sup>@ k\\<^bold>| =\n  \\<^bold>|\\<rho> v \\<^sup>@ l\\<^bold>|", "have \"k = l\""], ["proof (prove)\nusing this:\n  \\<^bold>|\\<rho> u \\<^sup>@ k\\<^bold>| =\n  \\<^bold>|\\<rho> v \\<^sup>@ l\\<^bold>|\n\ngoal (1 subgoal):\n 1. k = l", "using primroot_nemp[OF \\<open>v \\<noteq> \\<epsilon>\\<close>]"], ["proof (prove)\nusing this:\n  \\<^bold>|\\<rho> u \\<^sup>@ k\\<^bold>| =\n  \\<^bold>|\\<rho> v \\<^sup>@ l\\<^bold>|\n  \\<rho> v \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. k = l", "unfolding pow_len conjug_len[OF conjug]"], ["proof (prove)\nusing this:\n  k * \\<^bold>|\\<rho> v\\<^bold>| = l * \\<^bold>|\\<rho> v\\<^bold>|\n  \\<rho> v \\<noteq> \\<epsilon>\n\ngoal (1 subgoal):\n 1. k = l", "by simp"], ["proof (state)\nthis:\n  k = l\n\ngoal (1 subgoal):\n 1. \\<rho> u \\<sim> \\<rho> v \\<Longrightarrow> u \\<sim> v", "show \"u \\<sim> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<sim> v", "using conjug_add_exp[OF conjug, of l]"], ["proof (prove)\nusing this:\n  \\<rho> u \\<^sup>@ l \\<sim> \\<rho> v \\<^sup>@ l\n\ngoal (1 subgoal):\n 1. u \\<sim> v", "unfolding roots[unfolded \\<open>k = l\\<close>]"], ["proof (prove)\nusing this:\n  u \\<sim> v\n\ngoal (1 subgoal):\n 1. u \\<sim> v", "."], ["proof (state)\nthis:\n  u \\<sim> v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fac_pow_pref_conjug:\n  assumes \"u \\<le>f t\\<^sup>@k\"\n  obtains t' where \"t \\<sim> t'\" and \"u \\<le>p t'\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>t \\<sim> t'; u \\<le>p t' \\<^sup>@ k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (cases \"u = \\<epsilon>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t'.\n                \\<lbrakk>t \\<sim> t'; u \\<le>p t' \\<^sup>@ k\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     u = \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>t'.\n                \\<lbrakk>t \\<sim> t'; u \\<le>p t' \\<^sup>@ k\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     u \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume \"u \\<noteq> \\<epsilon>\""], ["proof (state)\nthis:\n  u \\<noteq> \\<epsilon>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t'.\n                \\<lbrakk>t \\<sim> t'; u \\<le>p t' \\<^sup>@ k\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     u = \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>t'.\n                \\<lbrakk>t \\<sim> t'; u \\<le>p t' \\<^sup>@ k\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     u \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> thesis", "obtain p q where eq: \"p \\<cdot> u \\<cdot> q = t\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        p \\<cdot> u \\<cdot> q = t \\<^sup>@ k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using facE'[OF assms]"], ["proof (prove)\nusing this:\n  (\\<And>p s.\n      p \\<cdot> u \\<cdot> s = t \\<^sup>@ k \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        p \\<cdot> u \\<cdot> q = t \\<^sup>@ k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  p \\<cdot> u \\<cdot> q = t \\<^sup>@ k\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t'.\n                \\<lbrakk>t \\<sim> t'; u \\<le>p t' \\<^sup>@ k\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     u = \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>t'.\n                \\<lbrakk>t \\<sim> t'; u \\<le>p t' \\<^sup>@ k\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     u \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> thesis", "obtain i r where \"i < k\" and \"r <p t\" and p: \"t\\<^sup>@i \\<cdot> r = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i r.\n        \\<lbrakk>i < k; r <p t; t \\<^sup>@ i \\<cdot> r = p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using pref_mod_power[OF sprefI1'[OF eq pref_nemp[OF \\<open>u \\<noteq> \\<epsilon>\\<close>]]]"], ["proof (prove)\nusing this:\n  (\\<And>ka z.\n      \\<lbrakk>ka < k; z <p t; t \\<^sup>@ ka \\<cdot> z = p\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>i r.\n        \\<lbrakk>i < k; r <p t; t \\<^sup>@ i \\<cdot> r = p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  i < k\n  r <p t\n  t \\<^sup>@ i \\<cdot> r = p\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t'.\n                \\<lbrakk>t \\<sim> t'; u \\<le>p t' \\<^sup>@ k\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     u = \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>t'.\n                \\<lbrakk>t \\<sim> t'; u \\<le>p t' \\<^sup>@ k\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     u \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> thesis", "from \\<open>r <p t\\<close>"], ["proof (chain)\npicking this:\n  r <p t", "obtain s where t: \"r \\<cdot> s = t\""], ["proof (prove)\nusing this:\n  r <p t\n\ngoal (1 subgoal):\n 1. (\\<And>s. r \\<cdot> s = t \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  r \\<cdot> s = t\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t'.\n                \\<lbrakk>t \\<sim> t'; u \\<le>p t' \\<^sup>@ k\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     u = \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>t'.\n                \\<lbrakk>t \\<sim> t'; u \\<le>p t' \\<^sup>@ k\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     u \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> thesis", "have eq': \"t\\<^sup>@i \\<cdot> r \\<cdot> (u \\<cdot> q) = t\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<^sup>@ i \\<cdot> r \\<cdot> u \\<cdot> q = t \\<^sup>@ k", "using eq"], ["proof (prove)\nusing this:\n  p \\<cdot> u \\<cdot> q = t \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. t \\<^sup>@ i \\<cdot> r \\<cdot> u \\<cdot> q = t \\<^sup>@ k", "unfolding lassoc p"], ["proof (prove)\nusing this:\n  (p \\<cdot> u) \\<cdot> q = t \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. (p \\<cdot> u) \\<cdot> q = t \\<^sup>@ k", "."], ["proof (state)\nthis:\n  t \\<^sup>@ i \\<cdot> r \\<cdot> u \\<cdot> q = t \\<^sup>@ k\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t'.\n                \\<lbrakk>t \\<sim> t'; u \\<le>p t' \\<^sup>@ k\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     u = \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>t'.\n                \\<lbrakk>t \\<sim> t'; u \\<le>p t' \\<^sup>@ k\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     u \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> thesis", "have  \"u \\<le>p (s \\<cdot> r)\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>p (s \\<cdot> r) \\<^sup>@ k", "using pow_conjug[OF eq' t]"], ["proof (prove)\nusing this:\n  (u \\<cdot> q) \\<cdot> t \\<^sup>@ i \\<cdot> r = (s \\<cdot> r) \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. u \\<le>p (s \\<cdot> r) \\<^sup>@ k", "unfolding rassoc"], ["proof (prove)\nusing this:\n  u \\<cdot> q \\<cdot> t \\<^sup>@ i \\<cdot> r = (s \\<cdot> r) \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. u \\<le>p (s \\<cdot> r) \\<^sup>@ k", ".."], ["proof (state)\nthis:\n  u \\<le>p (s \\<cdot> r) \\<^sup>@ k\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t'.\n                \\<lbrakk>t \\<sim> t'; u \\<le>p t' \\<^sup>@ k\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     u = \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>t'.\n                \\<lbrakk>t \\<sim> t'; u \\<le>p t' \\<^sup>@ k\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     u \\<noteq> \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> thesis", "with conjugI'[of r s]"], ["proof (chain)\npicking this:\n  r \\<cdot> s \\<sim> s \\<cdot> r\n  u \\<le>p (s \\<cdot> r) \\<^sup>@ k", "show thesis"], ["proof (prove)\nusing this:\n  r \\<cdot> s \\<sim> s \\<cdot> r\n  u \\<le>p (s \\<cdot> r) \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. thesis", "unfolding t"], ["proof (prove)\nusing this:\n  t \\<sim> s \\<cdot> r\n  u \\<le>p (s \\<cdot> r) \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>t'.\n                \\<lbrakk>t \\<sim> t'; u \\<le>p t' \\<^sup>@ k\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     u = \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> thesis", "qed blast"], ["", "lemma fac_pow_len_conjug: assumes  \"\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\" and \"u \\<le>f v\\<^sup>@k\" shows \"v \\<sim> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<sim> u", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<sim> u", "obtain t where \"v \\<sim> t\" and \"u \\<le>p t\\<^sup>@k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>v \\<sim> t; u \\<le>p t \\<^sup>@ k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using fac_pow_pref_conjug assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<le>f ?t \\<^sup>@ ?k;\n   \\<And>t'.\n      \\<lbrakk>?t \\<sim> t'; ?u \\<le>p t' \\<^sup>@ ?k\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\n  u \\<le>f v \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>v \\<sim> t; u \\<le>p t \\<^sup>@ k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v \\<sim> t\n  u \\<le>p t \\<^sup>@ k\n\ngoal (1 subgoal):\n 1. v \\<sim> u", "have \"u = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u = t", "using pref_equal[OF pref_prod_root[OF \\<open>u \\<le>p t\\<^sup>@k\\<close>] conjug_len[OF \\<open>v \\<sim> t\\<close>,folded \\<open>\\<^bold>|u\\<^bold>| = \\<^bold>|v\\<^bold>|\\<close>]]"], ["proof (prove)\nusing this:\n  u = t\n\ngoal (1 subgoal):\n 1. u = t", "."], ["proof (state)\nthis:\n  u = t\n\ngoal (1 subgoal):\n 1. v \\<sim> u", "from \\<open>v \\<sim> t\\<close>[folded this]"], ["proof (chain)\npicking this:\n  v \\<sim> u", "show \"v \\<sim> u\""], ["proof (prove)\nusing this:\n  v \\<sim> u\n\ngoal (1 subgoal):\n 1. v \\<sim> u", "."], ["proof (state)\nthis:\n  v \\<sim> u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma border_conjug: \"x \\<le>b w \\<Longrightarrow> w\\<^sup><\\<inverse>x \\<sim>  x\\<inverse>\\<^sup>>w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>b w \\<Longrightarrow>\n    w\\<^sup><\\<inverse>x  \\<sim> x\\<inverse>\\<^sup>>w", "using border_conjug_eq conjugI1"], ["proof (prove)\nusing this:\n  ?x \\<le>b ?w \\<Longrightarrow>\n  ?w\\<^sup><\\<inverse>?x  \\<cdot> ?w = ?w \\<cdot> ?x\\<inverse>\\<^sup>>?w\n  ?u \\<cdot> ?r = ?r \\<cdot> ?v \\<Longrightarrow> ?u \\<sim> ?v\n\ngoal (1 subgoal):\n 1. x \\<le>b w \\<Longrightarrow>\n    w\\<^sup><\\<inverse>x  \\<sim> x\\<inverse>\\<^sup>>w", "by blast"], ["", "lemmas fac_pow_suf_conjug = fac_pow_pref_conjug[reversed]"], ["", "end"]]}