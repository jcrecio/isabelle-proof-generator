{"file_name": "/home/qj213/afp-2021-10-22/thys/VeriComp/Language.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/VeriComp", "problem_names": ["lemma behaves_deterministic:\n  assumes\n    load_deterministic: \"\\<And>p s s'. load p s \\<Longrightarrow> load p s' \\<Longrightarrow> s = s'\" and\n    step_deterministic: \"\\<And>x y z. step x y \\<Longrightarrow> step x z \\<Longrightarrow> y = z\" and\n    behaves: \"p \\<Down> b\" \"p \\<Down> b'\"\n  shows \"b = b'\""], "translations": [["", "lemma behaves_deterministic:\n  assumes\n    load_deterministic: \"\\<And>p s s'. load p s \\<Longrightarrow> load p s' \\<Longrightarrow> s = s'\" and\n    step_deterministic: \"\\<And>x y z. step x y \\<Longrightarrow> step x z \\<Longrightarrow> y = z\" and\n    behaves: \"p \\<Down> b\" \"p \\<Down> b'\"\n  shows \"b = b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b = b'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b = b'", "obtain s where \"load p s\" and \"s \\<down> b\" and \"s \\<down> b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>load p s; s \\<down> b; s \\<down> b'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using behaves load_deterministic"], ["proof (prove)\nusing this:\n  p \\<Down> b\n  p \\<Down> b'\n  \\<lbrakk>load ?p ?s; load ?p ?s'\\<rbrakk> \\<Longrightarrow> ?s = ?s'\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>load p s; s \\<down> b; s \\<down> b'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: behaves_def)"], ["proof (state)\nthis:\n  load p s\n  s \\<down> b\n  s \\<down> b'\n\ngoal (1 subgoal):\n 1. b = b'", "thus ?thesis"], ["proof (prove)\nusing this:\n  load p s\n  s \\<down> b\n  s \\<down> b'\n\ngoal (1 subgoal):\n 1. b = b'", "using step_deterministic sem_behaves_deterministic[OF _ \\<open>s \\<down> b\\<close> \\<open>s \\<down> b'\\<close>]"], ["proof (prove)\nusing this:\n  load p s\n  s \\<down> b\n  s \\<down> b'\n  \\<lbrakk>step ?x ?y; step ?x ?z\\<rbrakk> \\<Longrightarrow> ?y = ?z\n  (\\<And>x y z.\n      \\<lbrakk>step x y; step x z\\<rbrakk>\n      \\<Longrightarrow> y = z) \\<Longrightarrow>\n  b = b'\n\ngoal (1 subgoal):\n 1. b = b'", "by simp"], ["proof (state)\nthis:\n  b = b'\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}