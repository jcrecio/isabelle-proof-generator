{"file_name": "/home/qj213/afp-2021-10-22/thys/Generic_Deriving/Tagged_Prod_Sum.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Generic_Deriving", "problem_names": ["lemma measure_tagged_fst[measure_function]: \"is_measure f \\<Longrightarrow> is_measure (\\<lambda> p. f (Tagged_Prod_Sum.fst p))\"", "lemma measure_tagged_snd[measure_function]: \"is_measure f \\<Longrightarrow> is_measure (\\<lambda> p. f (Tagged_Prod_Sum.snd p))\"", "lemma size_tagged_prod_simp: \n  \"Tagged_Prod_Sum.prod.size_prod f g p = f (Tagged_Prod_Sum.fst p) + g (Tagged_Prod_Sum.snd p) + Suc 0\"", "lemma size_tagged_sum_simp: \n  \"Tagged_Prod_Sum.sum.size_sum f g x = (case x of Tagged_Prod_Sum.Inl _ a \\<Rightarrow> f a + Suc 0 | Tagged_Prod_Sum.Inr _ b \\<Rightarrow> g b + Suc 0)\"", "lemma size_tagged_prod_measure: \n  \"is_measure f \\<Longrightarrow> is_measure g \\<Longrightarrow> is_measure (Tagged_Prod_Sum.prod.size_prod f g)\"", "lemma size_tagged_sum_measure: \n  \"is_measure f \\<Longrightarrow> is_measure g \\<Longrightarrow> is_measure (Tagged_Prod_Sum.sum.size_sum f g)\""], "translations": [["", "lemma measure_tagged_fst[measure_function]: \"is_measure f \\<Longrightarrow> is_measure (\\<lambda> p. f (Tagged_Prod_Sum.fst p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_measure f \\<Longrightarrow>\n    is_measure (\\<lambda>p. f (Tagged_Prod_Sum.fst p))", "by (rule is_measure_trivial)"], ["", "lemma measure_tagged_snd[measure_function]: \"is_measure f \\<Longrightarrow> is_measure (\\<lambda> p. f (Tagged_Prod_Sum.snd p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_measure f \\<Longrightarrow>\n    is_measure (\\<lambda>p. f (Tagged_Prod_Sum.snd p))", "by (rule is_measure_trivial)"], ["", "lemma size_tagged_prod_simp: \n  \"Tagged_Prod_Sum.prod.size_prod f g p = f (Tagged_Prod_Sum.fst p) + g (Tagged_Prod_Sum.snd p) + Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Tagged_Prod_Sum.prod.size_prod f g p =\n    f (Tagged_Prod_Sum.fst p) + g (Tagged_Prod_Sum.snd p) + Suc 0", "apply (induct p)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a x3a x4a.\n       Tagged_Prod_Sum.prod.size_prod f g (prod.Prod x1a x2a x3a x4a) =\n       f (Tagged_Prod_Sum.fst (prod.Prod x1a x2a x3a x4a)) +\n       g (Tagged_Prod_Sum.snd (prod.Prod x1a x2a x3a x4a)) +\n       Suc 0", "by (simp add: Tagged_Prod_Sum.fst_def Tagged_Prod_Sum.snd_def)"], ["", "lemma size_tagged_sum_simp: \n  \"Tagged_Prod_Sum.sum.size_sum f g x = (case x of Tagged_Prod_Sum.Inl _ a \\<Rightarrow> f a + Suc 0 | Tagged_Prod_Sum.Inr _ b \\<Rightarrow> g b + Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Tagged_Prod_Sum.sum.size_sum f g x =\n    (case x of sum.Inl x a \\<Rightarrow> f a + Suc 0\n     | sum.Inr x b \\<Rightarrow> g b + Suc 0)", "apply (induct x)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 x2.\n       Tagged_Prod_Sum.sum.size_sum f g (sum.Inl x1 x2) =\n       (case sum.Inl x1 x2 of sum.Inl x a \\<Rightarrow> f a + Suc 0\n        | sum.Inr x b \\<Rightarrow> g b + Suc 0)\n 2. \\<And>x1 x2.\n       Tagged_Prod_Sum.sum.size_sum f g (sum.Inr x1 x2) =\n       (case sum.Inr x1 x2 of sum.Inl x a \\<Rightarrow> f a + Suc 0\n        | sum.Inr x b \\<Rightarrow> g b + Suc 0)", "by auto"], ["", "lemma size_tagged_prod_measure: \n  \"is_measure f \\<Longrightarrow> is_measure g \\<Longrightarrow> is_measure (Tagged_Prod_Sum.prod.size_prod f g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_measure f; is_measure g\\<rbrakk>\n    \\<Longrightarrow> is_measure (Tagged_Prod_Sum.prod.size_prod f g)", "by (rule is_measure_trivial)"], ["", "lemma size_tagged_sum_measure: \n  \"is_measure f \\<Longrightarrow> is_measure g \\<Longrightarrow> is_measure (Tagged_Prod_Sum.sum.size_sum f g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_measure f; is_measure g\\<rbrakk>\n    \\<Longrightarrow> is_measure (Tagged_Prod_Sum.sum.size_sum f g)", "by (rule is_measure_trivial)"], ["", "end"]]}