{"file_name": "/home/qj213/afp-2021-10-22/thys/Quantales/Quantale_Models.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Quantales", "problem_names": ["lemma bool_sep_eq_conj [simp]: \"((x :: bool) * y) = (x \\<and> y)\"", "lemma bool_impl_eq [simp]: \"(x :: bool) \\<rightarrow> y = -x \\<squnion> y\"", "lemma comp_dist_mix: \"\\<Squnion>(X::'a::quantale set) \\<cdot> \\<Squnion>Y = \\<Squnion>(X \\<cdot> Y)\""], "translations": [["", "lemma bool_sep_eq_conj [simp]: \"((x :: bool) * y) = (x \\<and> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> y = (x \\<and> y)", "by (auto simp: times_bool_def)"], ["", "lemma bool_impl_eq [simp]: \"(x :: bool) \\<rightarrow> y = -x \\<squnion> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<rightarrow> y = - x \\<squnion> y", "by (clarsimp simp: bres_def)"], ["", "subsection \\<open>Powerset Quantales of Semigroups and Monoids\\<close>"], ["", "instance set :: (semigroup_mult) quantale"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a set, quantale_class)", "by intro_classes (auto simp: times_set_def)"], ["", "text \\<open>With the definition of products on powersets (from the component of models of dioids) one\ncan prove the following mixed distributivity law.\\<close>"], ["", "lemma comp_dist_mix: \"\\<Squnion>(X::'a::quantale set) \\<cdot> \\<Squnion>Y = \\<Squnion>(X \\<cdot> Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion> X \\<cdot> \\<Squnion> Y = \\<Squnion> (X \\<cdot> Y)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Squnion> X \\<cdot> \\<Squnion> Y = \\<Squnion> (X \\<cdot> Y)", "have \"\\<Squnion>X \\<cdot> \\<Squnion>Y = (\\<Squnion>x \\<in> X. \\<Squnion>y \\<in> Y. x \\<cdot> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion> X \\<cdot> \\<Squnion> Y =\n    (\\<Squnion>x\\<in>X. \\<Squnion> ((\\<cdot>) x ` Y))", "by (metis (no_types, lifting) SUP_cong Sup_distl Sup_distr)"], ["proof (state)\nthis:\n  \\<Squnion> X \\<cdot> \\<Squnion> Y =\n  (\\<Squnion>x\\<in>X. \\<Squnion> ((\\<cdot>) x ` Y))\n\ngoal (1 subgoal):\n 1. \\<Squnion> X \\<cdot> \\<Squnion> Y = \\<Squnion> (X \\<cdot> Y)", "also"], ["proof (state)\nthis:\n  \\<Squnion> X \\<cdot> \\<Squnion> Y =\n  (\\<Squnion>x\\<in>X. \\<Squnion> ((\\<cdot>) x ` Y))\n\ngoal (1 subgoal):\n 1. \\<Squnion> X \\<cdot> \\<Squnion> Y = \\<Squnion> (X \\<cdot> Y)", "have \"... = \\<Squnion>{\\<Squnion>{x \\<cdot> y|y. y \\<in> Y} |x. x \\<in> X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>x\\<in>X. \\<Squnion> ((\\<cdot>) x ` Y)) =\n    \\<Squnion> {\\<Squnion> {x \\<cdot> y |y. y \\<in> Y} |x. x \\<in> X}", "by (simp add: setcompr_eq_image)"], ["proof (state)\nthis:\n  (\\<Squnion>x\\<in>X. \\<Squnion> ((\\<cdot>) x ` Y)) =\n  \\<Squnion> {\\<Squnion> {x \\<cdot> y |y. y \\<in> Y} |x. x \\<in> X}\n\ngoal (1 subgoal):\n 1. \\<Squnion> X \\<cdot> \\<Squnion> Y = \\<Squnion> (X \\<cdot> Y)", "also"], ["proof (state)\nthis:\n  (\\<Squnion>x\\<in>X. \\<Squnion> ((\\<cdot>) x ` Y)) =\n  \\<Squnion> {\\<Squnion> {x \\<cdot> y |y. y \\<in> Y} |x. x \\<in> X}\n\ngoal (1 subgoal):\n 1. \\<Squnion> X \\<cdot> \\<Squnion> Y = \\<Squnion> (X \\<cdot> Y)", "have \"... = \\<Squnion>{x \\<cdot> y |x y. x \\<in> X \\<and> y \\<in> Y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion> {\\<Squnion> {x \\<cdot> y |y. y \\<in> Y} |x. x \\<in> X} =\n    \\<Squnion> {x \\<cdot> y |x y. x \\<in> X \\<and> y \\<in> Y}", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Squnion> {\\<Squnion> {x \\<cdot> y |y. y \\<in> Y} |x. x \\<in> X}\n    \\<le> \\<Squnion> {x \\<cdot> y |x y. x \\<in> X \\<and> y \\<in> Y}\n 2. \\<Squnion> {x \\<cdot> y |x y. x \\<in> X \\<and> y \\<in> Y}\n    \\<le> \\<Squnion> {\\<Squnion> {x \\<cdot> y |y. y \\<in> Y} |x. x \\<in> X}", "apply (rule Sup_least, smt Collect_mono Sup_subset_mono mem_Collect_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion> {x \\<cdot> y |x y. x \\<in> X \\<and> y \\<in> Y}\n    \\<le> \\<Squnion> {\\<Squnion> {x \\<cdot> y |y. y \\<in> Y} |x. x \\<in> X}", "by (rule Sup_least, smt Sup_upper calculation mem_Collect_eq psrpq.mult_isol_var)"], ["proof (state)\nthis:\n  \\<Squnion> {\\<Squnion> {x \\<cdot> y |y. y \\<in> Y} |x. x \\<in> X} =\n  \\<Squnion> {x \\<cdot> y |x y. x \\<in> X \\<and> y \\<in> Y}\n\ngoal (1 subgoal):\n 1. \\<Squnion> X \\<cdot> \\<Squnion> Y = \\<Squnion> (X \\<cdot> Y)", "finally"], ["proof (chain)\npicking this:\n  \\<Squnion> X \\<cdot> \\<Squnion> Y =\n  \\<Squnion> {x \\<cdot> y |x y. x \\<in> X \\<and> y \\<in> Y}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Squnion> X \\<cdot> \\<Squnion> Y =\n  \\<Squnion> {x \\<cdot> y |x y. x \\<in> X \\<and> y \\<in> Y}\n\ngoal (1 subgoal):\n 1. \\<Squnion> X \\<cdot> \\<Squnion> Y = \\<Squnion> (X \\<cdot> Y)", "by (simp add: times_set_def)"], ["proof (state)\nthis:\n  \\<Squnion> X \\<cdot> \\<Squnion> Y = \\<Squnion> (X \\<cdot> Y)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Powerset quantales of monoids can nevertheless be formalised as instances.\\<close>"], ["", "instance set :: (monoid_mult) unital_quantale"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a set, unital_quantale_class)", ".."], ["", "text \\<open>There is much more to this example. In fact, every quantale can be represented, up to isomorphism, \nas a certain quotient of a powerset quantale over some semigroup~\\cite{Rosenthal90}. This representation theorem is \nformalised in the section on nuclei.\\<close>"], ["", "subsection \\<open>Language, Relation, Trace and Path Quantales\\<close>"], ["", "text \\<open>The language quantale is implcit in the powerset quantale over a semigroup or monoid. The free list monoid has\nalready been linked with the class of monoid as an instance in Isabelle's dioid components~\\cite{ArmstrongSW13}. I provide an alternative\ninterpretation. In all of the following locale statements, an interpretation for Sup-quantales fails, due to the occurance of some low level\nless operations in the underlying model...\\<close>"], ["", "interpretation lan_quantale: unital_quantale \"1::'a lan\" \"(\\<cdot>)\" Inf Sup inf \"(\\<subseteq>)\" \"(\\<subset>)\" sup \"0\" UNIV"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.unital_quantale 1 (\\<cdot>) \\<Inter> \\<Union> (\\<inter>)\n     (\\<subseteq>) (\\<subset>) (\\<union>) 0 UNIV", "by unfold_locales (simp_all add: Inf_lower Inter_greatest Sup_upper Sup_least zero_set_def Sup_distr Sup_distl)"], ["", "text \\<open>The relation quantale follows.\\<close>"], ["", "interpretation rel_quantale: unital_quantale Id relcomp Inf Sup inf \"(\\<subseteq>)\" \"(\\<subset>)\" sup \"{}\" \"UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.unital_quantale Id (O) \\<Inter> \\<Union> (\\<inter>) (\\<subseteq>)\n     (\\<subset>) (\\<union>) {} UNIV", "by (unfold_locales, auto)"], ["", "text \\<open>Traces alternate between state and action symbols, the first and last symbol of a trace being state symbols.\nThey can be associated with behaviours of automata or executions of programs.\\<close>"], ["", "interpretation trace_quantale: unital_quantale t_one t_prod Inf Sup inf \"(\\<subseteq>)\" \"(\\<subset>)\" sup t_zero UNIV"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.unital_quantale t_one t_prod \\<Inter> \\<Union> (\\<inter>)\n     (\\<subseteq>) (\\<subset>) (\\<union>) t_zero UNIV", "by unfold_locales (auto simp: Inf_lower Inf_greatest Sup_upper Sup_least t_zero_def t_prod_def t_fusion_def)"], ["", "text \\<open>The final model corresponds to paths as sequences of states of an automata, transition system or graph.\\<close>"], ["", "interpretation path_quantale: unital_quantale p_one p_prod Inter Union \"(\\<inter>)\" \"(\\<subseteq>)\" \"(\\<subset>)\" \"(\\<union>)\" \"{}\" UNIV"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.unital_quantale p_one p_prod \\<Inter> \\<Union> (\\<inter>)\n     (\\<subseteq>) (\\<subset>) (\\<union>) {} UNIV", "by unfold_locales (auto simp: p_prod_def)"], ["", "text \\<open>Rosenthal's book contains a wealth of other examples. Many of them come from ring theory \n(e.g. the additive subgroups of a ring form a quantale and so do the left, right and two-sided ideals). Others are based\non the interval $[0,\\infty]$. The first line of models was the original motivation for the study of quantales, the second \none is important to Lawvere's categorical generalisation of metric spaces. These examples are left for future consideration.\\<close>"], ["", "end"]]}