{"file_name": "/home/qj213/afp-2021-10-22/thys/Echelon_Form/Rings2.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Echelon_Form", "problem_names": ["lemma chain_le:\n  fixes I::\"nat => 'a set\"\n  assumes inc: \"\\<forall>n. I(n) \\<subseteq> I(n+1)\"\n  shows \"\\<forall>n\\<le>m. I(n) \\<subseteq> I(m)\"", "lemma sum_add:\n  assumes A: \"finite A\"\n  and B: \"finite B\"\n  shows \"sum f A + sum g B = sum f (A - B) + sum g (B - A) + sum (\\<lambda>x. f x + g x) (A \\<inter> B)\"", "lemma sum_negf:\n  \"sum (%x. - (f x)::'a) A = - sum f A\"", "lemma sum_distrib_left:\n  shows \"r * sum f A = sum (%n. r * f n) A\"", "lemma sum_distrib_right:\n  \"sum f A * r = (\\<Sum>n\\<in>A. f n * r)\"", "lemma sum_two_elements:\n  assumes \"a \\<noteq> b\"\n  shows \"sum f {a,b} = f a + f b\"", "lemma sum_singleton: \"sum f {x} = f x\"", "lemma subgroup_0: \"subgroup {0}\"", "lemma subgroup_UNIV: \"subgroup (UNIV)\"", "lemma subgroup_inter:\n  assumes \"subgroup A\" and \"subgroup B\"\n  shows \"subgroup (A \\<inter> B)\"", "lemma subgroup_Inter:\n  assumes \"\\<forall>I\\<in>S. subgroup I\"\n  shows \"subgroup (\\<Inter>S)\"", "lemma subgroup_Union:\n  fixes I::\"nat => 'a set\"\n  defines S: \"S\\<equiv>{I n|n. n\\<in>UNIV}\"\n  assumes all_subgroup: \"\\<forall>A\\<in>S. subgroup A\"\n  and inc: \"\\<forall>n. I(n) \\<subseteq> I(n+1)\"\n  shows \"subgroup (\\<Union>S)\"", "lemma subgroup_left_principal_ideal: \"subgroup {r*a|r. r\\<in>UNIV}\"", "lemma ideal_inter:\n  assumes \"ideal I\" and \"ideal J\" shows \"ideal (I \\<inter> J)\"", "lemma ideal_Inter:\n  assumes \"\\<forall>I\\<in>S. ideal I\"\n  shows \"ideal (\\<Inter>S)\"", "lemma ideal_Union:\n  fixes I::\"nat => 'a set\"\n  defines S: \"S\\<equiv>{I n|n. n\\<in>UNIV}\"\n  assumes all_ideal: \"\\<forall>A\\<in>S. ideal A\"\n  and inc: \"\\<forall>n. I(n) \\<subseteq> I(n+1)\"\n  shows \"ideal (\\<Union>S)\"", "lemma ideal_not_empty:\n  assumes \"ideal I\"\n  shows \"I \\<noteq> {}\"", "lemma ideal_0: \"ideal {0}\"", "lemma ideal_UNIV: \"ideal UNIV\"", "lemma ideal_generated_0: \"ideal_generated {0} = {0}\"", "lemma ideal_generated_subset_generator:\n  assumes \"ideal_generated A = I\"\n  shows \"A \\<subseteq> I\"", "lemma left_ideal_minus:\n  assumes \"left_ideal I\"\n  and \"a\\<in>I\" and \"b\\<in>I\"\n  shows \"a - b \\<in> I\"", "lemma right_ideal_minus:\n  assumes \"right_ideal I\"\n  and \"a\\<in>I\" and \"b\\<in>I\"\n  shows \"a - b \\<in> I\"", "lemma ideal_minus:\n  assumes \"ideal I\"\n  and \"a\\<in>I\" and \"b\\<in>I\"\n  shows \"a - b \\<in> I\"", "lemma ideal_ideal_generated: \"ideal (ideal_generated S)\"", "lemma sum_left_ideal:\n  assumes li_X: \"left_ideal X\"\n  and U_X: \"U \\<subseteq> X\" and U: \"finite U\"\n  shows \"(\\<Sum>i\\<in>U. f i * i) \\<in> X\"", "lemma sum_right_ideal:\n  assumes li_X: \"right_ideal X\"\n  and U_X: \"U \\<subseteq> X\" and U: \"finite U\"\n  shows \"(\\<Sum>i\\<in>U. i * f i) \\<in> X\"", "lemma left_ideal_generated_subset:\n  assumes \"S \\<subseteq> T\"\n  shows \"left_ideal_generated S \\<subseteq> left_ideal_generated T\"", "lemma right_ideal_generated_subset:\n  assumes \"S \\<subseteq> T\"\n  shows \"right_ideal_generated S \\<subseteq> right_ideal_generated T\"", "lemma ideal_generated_subset:\n  assumes \"S \\<subseteq> T\"\n  shows \"ideal_generated S \\<subseteq> ideal_generated T\"", "lemma ideal_generated_in:\n  assumes \"a \\<in> A\"\n  shows \"a \\<in> ideal_generated A\"", "lemma ideal_generated_repeated: \"ideal_generated {a,a} = ideal_generated {a}\"", "lemma left_ideal_explicit:\n  \"left_ideal_generated S = {y. \\<exists>f U. finite U \\<and> U \\<subseteq> S \\<and> sum (\\<lambda>i. f i * i) U = y}\" (is \"?S = ?B\")", "lemma right_ideal_explicit:\n  \"right_ideal_generated S = {y. \\<exists>f U. finite U \\<and> U \\<subseteq> S \\<and> sum (\\<lambda>i. i * f i) U = y}\" (is \"?S = ?B\")", "lemma left_ideal_eq_right_ideal: \"left_ideal I = right_ideal I\"", "lemma ideal_eq_right_ideal: \"ideal I = right_ideal I\"", "lemma principal_ideal_eq_left:\n  \"principal_ideal S = (\\<exists>a. left_ideal_generated {a} = S)\"", "lemma ideal_generated_eq_left_ideal: \"ideal_generated A = left_ideal_generated A\"", "lemma ideal_generated_eq_right_ideal: \"ideal_generated A = right_ideal_generated A\"", "lemma obtain_sum_ideal_generated:\n  assumes a: \"a \\<in> ideal_generated A\" and A: \"finite A\"\n  obtains f where \"sum (\\<lambda>i. f i * i) A = a\"", "lemma dvd_ideal_generated_singleton:\n  assumes subset: \"ideal_generated {a} \\<subseteq> ideal_generated {b}\"\n  shows \"b dvd a\"", "lemma ideal_generated_singleton: \"ideal_generated {a} = {k*a|k. k \\<in> UNIV}\"", "lemma dvd_ideal_generated_singleton':\n  assumes b_dvd_a: \"b dvd a\"\n  shows \"ideal_generated {a} \\<subseteq> ideal_generated {b}\"", "lemma ideal_generated_subset2:\n  assumes ac: \"ideal_generated {a} \\<subseteq> ideal_generated {c}\"\n  and bc: \"ideal_generated {b} \\<subseteq> ideal_generated {c}\"\n  shows \"ideal_generated {a,b} \\<subseteq> ideal_generated {c}\"", "lemma ideal_kZ: \"ideal {k*x|x. x\\<in>(UNIV::int set)}\"", "lemma gcd'_dvd1:\n  assumes \"is_gcd gcd'\" shows \"gcd' a b dvd a\"", "lemma gcd'_dvd2:\n  assumes \"is_gcd gcd'\" shows \"gcd' a b dvd b\"", "lemma gcd'_greatest:\n  assumes \"is_gcd gcd'\" and \"l dvd a\" and \"l dvd b\"\n  shows \"l dvd gcd' a b\"", "lemma gcd'_zero [simp]:\n  assumes \"is_gcd gcd'\"\n  shows \"gcd' x y = 0 \\<longleftrightarrow> x = 0 \\<and> y = 0\"", "lemma is_gcd_is_bezout_ext:\n  assumes \"is_bezout_ext bezout\"\n  shows \"is_gcd (\\<lambda>a b. case bezout a b of (x, xa,u,v, gcd') \\<Rightarrow> gcd')\"", "lemma is_bezout_ext_is_bezout:\n  assumes \"is_bezout_ext bezout\"\n  shows \"is_bezout (\\<lambda>a b. case bezout a b of (x,xa,u,v, gcd') \\<Rightarrow> (x,xa,gcd'))\"", "lemma is_gcd_is_bezout:\n  assumes \"is_bezout bezout\"\n  shows \"is_gcd (\\<lambda>a b. (case bezout a b of (_, _, gcd') \\<Rightarrow> (gcd')))\"", "lemma exists_bezout_ext_aux:\n  fixes a and b\n  shows \"\\<exists>p q u v d. (p * a + q * b = d)\n                    \\<and> (d dvd a)\n                    \\<and> (d dvd b)\n                    \\<and> (\\<forall>d'. (d' dvd a \\<and> d' dvd b) \\<longrightarrow> d' dvd d) \\<and> d * u = -b \\<and> d * v = a\"", "lemma exists_bezout_ext: \"\\<exists>bezout_ext. is_bezout_ext bezout_ext\"", "lemma ascending_chain_condition:\n  fixes I::\"nat=>'a set\"\n  assumes all_ideal: \"\\<forall>n. ideal (I(n))\"\n  and inc: \"\\<forall>n. I(n) \\<subseteq> I(n+1)\"\n  shows \"\\<exists>n. I(n)=I(n+1)\"", "lemma ascending_chain_condition2:\n  \"\\<nexists>I::(nat \\<Rightarrow> 'a set). (\\<forall>n. ideal (I n) \\<and> I n \\<subset> I (n + 1))\"", "lemma is_bezout_ext_euclid_ext2: \"is_bezout_ext (euclid_ext2)\"", "lemma is_bezout_euclid_ext: \"is_bezout (\\<lambda>a b. (fst (bezout_coefficients a b), snd (bezout_coefficients a b), gcd a b))\""], "translations": [["", "lemma chain_le:\n  fixes I::\"nat => 'a set\"\n  assumes inc: \"\\<forall>n. I(n) \\<subseteq> I(n+1)\"\n  shows \"\\<forall>n\\<le>m. I(n) \\<subseteq> I(m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n\\<le>m. I n \\<subseteq> I m", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>n. I n \\<subseteq> I (n + 1)\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<le>m. I n \\<subseteq> I m", "proof (induct m)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>n. I n \\<subseteq> I (n + 1) \\<Longrightarrow>\n    \\<forall>n\\<le>0. I n \\<subseteq> I 0\n 2. \\<And>m.\n       \\<lbrakk>\\<forall>n. I n \\<subseteq> I (n + 1) \\<Longrightarrow>\n                \\<forall>n\\<le>m. I n \\<subseteq> I m;\n        \\<forall>n. I n \\<subseteq> I (n + 1)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n\\<le>Suc m. I n \\<subseteq> I (Suc m)", "case 0"], ["proof (state)\nthis:\n  \\<forall>n. I n \\<subseteq> I (n + 1)\n\ngoal (2 subgoals):\n 1. \\<forall>n. I n \\<subseteq> I (n + 1) \\<Longrightarrow>\n    \\<forall>n\\<le>0. I n \\<subseteq> I 0\n 2. \\<And>m.\n       \\<lbrakk>\\<forall>n. I n \\<subseteq> I (n + 1) \\<Longrightarrow>\n                \\<forall>n\\<le>m. I n \\<subseteq> I m;\n        \\<forall>n. I n \\<subseteq> I (n + 1)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n\\<le>Suc m. I n \\<subseteq> I (Suc m)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n\\<le>0. I n \\<subseteq> I 0", "by auto"], ["proof (state)\nthis:\n  \\<forall>n\\<le>0. I n \\<subseteq> I 0\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>\\<forall>n. I n \\<subseteq> I (n + 1) \\<Longrightarrow>\n                \\<forall>n\\<le>m. I n \\<subseteq> I m;\n        \\<forall>n. I n \\<subseteq> I (n + 1)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n\\<le>Suc m. I n \\<subseteq> I (Suc m)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>\\<forall>n. I n \\<subseteq> I (n + 1) \\<Longrightarrow>\n                \\<forall>n\\<le>m. I n \\<subseteq> I m;\n        \\<forall>n. I n \\<subseteq> I (n + 1)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n\\<le>Suc m. I n \\<subseteq> I (Suc m)", "case (Suc m)"], ["proof (state)\nthis:\n  \\<forall>n. I n \\<subseteq> I (n + 1) \\<Longrightarrow>\n  \\<forall>n\\<le>m. I n \\<subseteq> I m\n  \\<forall>n. I n \\<subseteq> I (n + 1)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>\\<forall>n. I n \\<subseteq> I (n + 1) \\<Longrightarrow>\n                \\<forall>n\\<le>m. I n \\<subseteq> I m;\n        \\<forall>n. I n \\<subseteq> I (n + 1)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n\\<le>Suc m. I n \\<subseteq> I (Suc m)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n\\<le>Suc m. I n \\<subseteq> I (Suc m)", "by (metis Suc_eq_plus1 inc lift_Suc_mono_le)"], ["proof (state)\nthis:\n  \\<forall>n\\<le>Suc m. I n \\<subseteq> I (Suc m)\n\ngoal:\nNo subgoals!", "qed"], ["", "context Rings.ring\nbegin"], ["", "lemma sum_add:\n  assumes A: \"finite A\"\n  and B: \"finite B\"\n  shows \"sum f A + sum g B = sum f (A - B) + sum g (B - A) + sum (\\<lambda>x. f x + g x) (A \\<inter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f A + sum g B =\n    sum f (A - B) + sum g (B - A) + (\\<Sum>x\\<in>A \\<inter> B. f x + g x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum f A + sum g B =\n    sum f (A - B) + sum g (B - A) + (\\<Sum>x\\<in>A \\<inter> B. f x + g x)", "have 1: \"sum f A = sum f (A - B) + sum f (A \\<inter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f A = sum f (A - B) + sum f (A \\<inter> B)", "by (metis A Int_Diff_disjoint Un_Diff_Int finite_Diff finite_Int inf_sup_aci(1) local.sum.union_disjoint)"], ["proof (state)\nthis:\n  sum f A = sum f (A - B) + sum f (A \\<inter> B)\n\ngoal (1 subgoal):\n 1. sum f A + sum g B =\n    sum f (A - B) + sum g (B - A) + (\\<Sum>x\\<in>A \\<inter> B. f x + g x)", "have 2: \"sum g B = sum g (B - A) + sum g (A \\<inter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum g B = sum g (B - A) + sum g (A \\<inter> B)", "by (metis B Int_Diff_disjoint Int_commute Un_Diff_Int finite_Diff finite_Int local.sum.union_disjoint)"], ["proof (state)\nthis:\n  sum g B = sum g (B - A) + sum g (A \\<inter> B)\n\ngoal (1 subgoal):\n 1. sum f A + sum g B =\n    sum f (A - B) + sum g (B - A) + (\\<Sum>x\\<in>A \\<inter> B. f x + g x)", "have 3: \"sum f (A \\<inter> B) + sum g (A \\<inter> B) = sum (\\<lambda>x. f x + g x) (A \\<inter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f (A \\<inter> B) + sum g (A \\<inter> B) =\n    (\\<Sum>x\\<in>A \\<inter> B. f x + g x)", "by (simp add: sum.distrib)"], ["proof (state)\nthis:\n  sum f (A \\<inter> B) + sum g (A \\<inter> B) =\n  (\\<Sum>x\\<in>A \\<inter> B. f x + g x)\n\ngoal (1 subgoal):\n 1. sum f A + sum g B =\n    sum f (A - B) + sum g (B - A) + (\\<Sum>x\\<in>A \\<inter> B. f x + g x)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f A + sum g B =\n    sum f (A - B) + sum g (B - A) + (\\<Sum>x\\<in>A \\<inter> B. f x + g x)", "by (simp add: \"1\" \"2\" \"3\" add.assoc add.left_commute)"], ["proof (state)\nthis:\n  sum f A + sum g B =\n  sum f (A - B) + sum g (B - A) + (\\<Sum>x\\<in>A \\<inter> B. f x + g x)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>This lemma is presented in the library but for additive abelian groups\\<close>"], ["", "lemma sum_negf:\n  \"sum (%x. - (f x)::'a) A = - sum f A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>A. - f x) = - sum f A", "proof (cases \"finite A\")"], ["proof (state)\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> (\\<Sum>x\\<in>A. - f x) = - sum f A\n 2. infinite A \\<Longrightarrow> (\\<Sum>x\\<in>A. - f x) = - sum f A", "case True"], ["proof (state)\nthis:\n  finite A\n\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> (\\<Sum>x\\<in>A. - f x) = - sum f A\n 2. infinite A \\<Longrightarrow> (\\<Sum>x\\<in>A. - f x) = - sum f A", "thus ?thesis"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>A. - f x) = - sum f A", "by (induct set: finite) auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>A. - f x) = - sum f A\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> (\\<Sum>x\\<in>A. - f x) = - sum f A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> (\\<Sum>x\\<in>A. - f x) = - sum f A", "case False"], ["proof (state)\nthis:\n  infinite A\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> (\\<Sum>x\\<in>A. - f x) = - sum f A", "thus ?thesis"], ["proof (prove)\nusing this:\n  infinite A\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>A. - f x) = - sum f A", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>A. - f x) = - sum f A\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>The following lemmas are presented in the library but for other type classes (semiring\\_0)\\<close>"], ["", "lemma sum_distrib_left:\n  shows \"r * sum f A = sum (%n. r * f n) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r * sum f A = (\\<Sum>n\\<in>A. r * f n)", "proof (cases \"finite A\")"], ["proof (state)\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> r * sum f A = (\\<Sum>n\\<in>A. r * f n)\n 2. infinite A \\<Longrightarrow> r * sum f A = (\\<Sum>n\\<in>A. r * f n)", "case True"], ["proof (state)\nthis:\n  finite A\n\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> r * sum f A = (\\<Sum>n\\<in>A. r * f n)\n 2. infinite A \\<Longrightarrow> r * sum f A = (\\<Sum>n\\<in>A. r * f n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. r * sum f A = (\\<Sum>n\\<in>A. r * f n)", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. r * sum f {} = (\\<Sum>n\\<in>{}. r * f n)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        r * sum f F = (\\<Sum>n\\<in>F. r * f n)\\<rbrakk>\n       \\<Longrightarrow> r * sum f (insert x F) =\n                         (\\<Sum>n\\<in>insert x F. r * f n)", "case empty"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. r * sum f {} = (\\<Sum>n\\<in>{}. r * f n)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        r * sum f F = (\\<Sum>n\\<in>F. r * f n)\\<rbrakk>\n       \\<Longrightarrow> r * sum f (insert x F) =\n                         (\\<Sum>n\\<in>insert x F. r * f n)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. r * sum f {} = (\\<Sum>n\\<in>{}. r * f n)", "by simp"], ["proof (state)\nthis:\n  r * sum f {} = (\\<Sum>n\\<in>{}. r * f n)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        r * sum f F = (\\<Sum>n\\<in>F. r * f n)\\<rbrakk>\n       \\<Longrightarrow> r * sum f (insert x F) =\n                         (\\<Sum>n\\<in>insert x F. r * f n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        r * sum f F = (\\<Sum>n\\<in>F. r * f n)\\<rbrakk>\n       \\<Longrightarrow> r * sum f (insert x F) =\n                         (\\<Sum>n\\<in>insert x F. r * f n)", "case (insert x A)"], ["proof (state)\nthis:\n  finite A\n  x \\<notin> A\n  r * sum f A = (\\<Sum>n\\<in>A. r * f n)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        r * sum f F = (\\<Sum>n\\<in>F. r * f n)\\<rbrakk>\n       \\<Longrightarrow> r * sum f (insert x F) =\n                         (\\<Sum>n\\<in>insert x F. r * f n)", "thus ?case"], ["proof (prove)\nusing this:\n  finite A\n  x \\<notin> A\n  r * sum f A = (\\<Sum>n\\<in>A. r * f n)\n\ngoal (1 subgoal):\n 1. r * sum f (insert x A) = (\\<Sum>n\\<in>insert x A. r * f n)", "by (simp add: distrib_left)"], ["proof (state)\nthis:\n  r * sum f (insert x A) = (\\<Sum>n\\<in>insert x A. r * f n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r * sum f A = (\\<Sum>n\\<in>A. r * f n)\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> r * sum f A = (\\<Sum>n\\<in>A. r * f n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> r * sum f A = (\\<Sum>n\\<in>A. r * f n)", "case False"], ["proof (state)\nthis:\n  infinite A\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> r * sum f A = (\\<Sum>n\\<in>A. r * f n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  infinite A\n\ngoal (1 subgoal):\n 1. r * sum f A = (\\<Sum>n\\<in>A. r * f n)", "by simp"], ["proof (state)\nthis:\n  r * sum f A = (\\<Sum>n\\<in>A. r * f n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_distrib_right:\n  \"sum f A * r = (\\<Sum>n\\<in>A. f n * r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f A * r = (\\<Sum>n\\<in>A. f n * r)", "proof (cases \"finite A\")"], ["proof (state)\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> sum f A * r = (\\<Sum>n\\<in>A. f n * r)\n 2. infinite A \\<Longrightarrow> sum f A * r = (\\<Sum>n\\<in>A. f n * r)", "case True"], ["proof (state)\nthis:\n  finite A\n\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> sum f A * r = (\\<Sum>n\\<in>A. f n * r)\n 2. infinite A \\<Longrightarrow> sum f A * r = (\\<Sum>n\\<in>A. f n * r)", "then"], ["proof (chain)\npicking this:\n  finite A", "show ?thesis"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. sum f A * r = (\\<Sum>n\\<in>A. f n * r)", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. sum f {} * r = (\\<Sum>n\\<in>{}. f n * r)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        sum f F * r = (\\<Sum>n\\<in>F. f n * r)\\<rbrakk>\n       \\<Longrightarrow> sum f (insert x F) * r =\n                         (\\<Sum>n\\<in>insert x F. f n * r)", "case empty"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. sum f {} * r = (\\<Sum>n\\<in>{}. f n * r)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        sum f F * r = (\\<Sum>n\\<in>F. f n * r)\\<rbrakk>\n       \\<Longrightarrow> sum f (insert x F) * r =\n                         (\\<Sum>n\\<in>insert x F. f n * r)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {} * r = (\\<Sum>n\\<in>{}. f n * r)", "by simp"], ["proof (state)\nthis:\n  sum f {} * r = (\\<Sum>n\\<in>{}. f n * r)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        sum f F * r = (\\<Sum>n\\<in>F. f n * r)\\<rbrakk>\n       \\<Longrightarrow> sum f (insert x F) * r =\n                         (\\<Sum>n\\<in>insert x F. f n * r)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        sum f F * r = (\\<Sum>n\\<in>F. f n * r)\\<rbrakk>\n       \\<Longrightarrow> sum f (insert x F) * r =\n                         (\\<Sum>n\\<in>insert x F. f n * r)", "case (insert x A)"], ["proof (state)\nthis:\n  finite A\n  x \\<notin> A\n  sum f A * r = (\\<Sum>n\\<in>A. f n * r)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        sum f F * r = (\\<Sum>n\\<in>F. f n * r)\\<rbrakk>\n       \\<Longrightarrow> sum f (insert x F) * r =\n                         (\\<Sum>n\\<in>insert x F. f n * r)", "thus ?case"], ["proof (prove)\nusing this:\n  finite A\n  x \\<notin> A\n  sum f A * r = (\\<Sum>n\\<in>A. f n * r)\n\ngoal (1 subgoal):\n 1. sum f (insert x A) * r = (\\<Sum>n\\<in>insert x A. f n * r)", "by (simp add: distrib_right)"], ["proof (state)\nthis:\n  sum f (insert x A) * r = (\\<Sum>n\\<in>insert x A. f n * r)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sum f A * r = (\\<Sum>n\\<in>A. f n * r)\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> sum f A * r = (\\<Sum>n\\<in>A. f n * r)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> sum f A * r = (\\<Sum>n\\<in>A. f n * r)", "case False"], ["proof (state)\nthis:\n  infinite A\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> sum f A * r = (\\<Sum>n\\<in>A. f n * r)", "thus ?thesis"], ["proof (prove)\nusing this:\n  infinite A\n\ngoal (1 subgoal):\n 1. sum f A * r = (\\<Sum>n\\<in>A. f n * r)", "by simp"], ["proof (state)\nthis:\n  sum f A * r = (\\<Sum>n\\<in>A. f n * r)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context comm_monoid_add\nbegin"], ["", "lemma sum_two_elements:\n  assumes \"a \\<noteq> b\"\n  shows \"sum f {a,b} = f a + f b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {a, b} = f a + f b", "by (metis Diff_cancel assms empty_Diff finite.emptyI infinite_remove add_0_right\n    sum.empty sum.insert sum.insert_remove singletonD)"], ["", "lemma sum_singleton: \"sum f {x} = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {x} = f x", "by simp"], ["", "end"], ["", "subsection\\<open>Subgroups\\<close>"], ["", "context group_add\nbegin"], ["", "definition \"subgroup A \\<equiv> (0 \\<in> A \\<and> (\\<forall>a\\<in>A. \\<forall>b \\<in> A. a + b \\<in> A) \\<and> (\\<forall>a\\<in>A. -a \\<in> A))\""], ["", "lemma subgroup_0: \"subgroup {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup {0::'a}", "unfolding subgroup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<in> {0::'a} \\<and>\n    (\\<forall>a\\<in>{0::'a}.\n        \\<forall>b\\<in>{0::'a}. a + b \\<in> {0::'a}) \\<and>\n    (\\<forall>a\\<in>{0::'a}. - a \\<in> {0::'a})", "by auto"], ["", "lemma subgroup_UNIV: \"subgroup (UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup UNIV", "unfolding subgroup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<in> UNIV \\<and>\n    (\\<forall>a\\<in>UNIV. \\<forall>b\\<in>UNIV. a + b \\<in> UNIV) \\<and>\n    (\\<forall>a\\<in>UNIV. - a \\<in> UNIV)", "by auto"], ["", "lemma subgroup_inter:\n  assumes \"subgroup A\" and \"subgroup B\"\n  shows \"subgroup (A \\<inter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (A \\<inter> B)", "using assms"], ["proof (prove)\nusing this:\n  subgroup A\n  subgroup B\n\ngoal (1 subgoal):\n 1. subgroup (A \\<inter> B)", "unfolding subgroup_def"], ["proof (prove)\nusing this:\n  (0::'a) \\<in> A \\<and>\n  (\\<forall>a\\<in>A. \\<forall>b\\<in>A. a + b \\<in> A) \\<and>\n  (\\<forall>a\\<in>A. - a \\<in> A)\n  (0::'a) \\<in> B \\<and>\n  (\\<forall>a\\<in>B. \\<forall>b\\<in>B. a + b \\<in> B) \\<and>\n  (\\<forall>a\\<in>B. - a \\<in> B)\n\ngoal (1 subgoal):\n 1. (0::'a) \\<in> A \\<inter> B \\<and>\n    (\\<forall>a\\<in>A \\<inter> B.\n        \\<forall>b\\<in>A \\<inter> B. a + b \\<in> A \\<inter> B) \\<and>\n    (\\<forall>a\\<in>A \\<inter> B. - a \\<in> A \\<inter> B)", "by blast"], ["", "lemma subgroup_Inter:\n  assumes \"\\<forall>I\\<in>S. subgroup I\"\n  shows \"subgroup (\\<Inter>S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (\\<Inter> S)", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>I\\<in>S. subgroup I\n\ngoal (1 subgoal):\n 1. subgroup (\\<Inter> S)", "unfolding subgroup_def"], ["proof (prove)\nusing this:\n  \\<forall>I\\<in>S.\n     (0::'a) \\<in> I \\<and>\n     (\\<forall>a\\<in>I. \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n     (\\<forall>a\\<in>I. - a \\<in> I)\n\ngoal (1 subgoal):\n 1. (0::'a) \\<in> \\<Inter> S \\<and>\n    (\\<forall>a\\<in>\\<Inter> S.\n        \\<forall>b\\<in>\\<Inter> S. a + b \\<in> \\<Inter> S) \\<and>\n    (\\<forall>a\\<in>\\<Inter> S. - a \\<in> \\<Inter> S)", "by auto"], ["", "lemma subgroup_Union:\n  fixes I::\"nat => 'a set\"\n  defines S: \"S\\<equiv>{I n|n. n\\<in>UNIV}\"\n  assumes all_subgroup: \"\\<forall>A\\<in>S. subgroup A\"\n  and inc: \"\\<forall>n. I(n) \\<subseteq> I(n+1)\"\n  shows \"subgroup (\\<Union>S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (\\<Union> S)", "unfolding subgroup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<in> \\<Union> S \\<and>\n    (\\<forall>a\\<in>\\<Union> S.\n        \\<forall>b\\<in>\\<Union> S. a + b \\<in> \\<Union> S) \\<and>\n    (\\<forall>a\\<in>\\<Union> S. - a \\<in> \\<Union> S)", "proof (safe; (unfold Union_iff)?)"], ["proof (state)\ngoal (3 subgoals):\n 1. Bex S ((\\<in>) (0::'a))\n 2. \\<And>a X b Xa.\n       \\<lbrakk>a \\<in> X; X \\<in> S; b \\<in> Xa; Xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (a + b))\n 3. \\<And>a X.\n       \\<lbrakk>a \\<in> X; X \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (- a))", "show \"\\<exists>X\\<in>S. 0 \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>X\\<in>S. (0::'a) \\<in> X", "proof (rule bexI[of _ \"I 0\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. (0::'a) \\<in> I 0\n 2. I 0 \\<in> S", "show \"I 0 \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I 0 \\<in> S", "unfolding S"], ["proof (prove)\ngoal (1 subgoal):\n 1. I 0 \\<in> {I n |n. n \\<in> UNIV}", "by auto"], ["proof (state)\nthis:\n  I 0 \\<in> S\n\ngoal (1 subgoal):\n 1. (0::'a) \\<in> I 0", "thus \"0 \\<in> I 0\""], ["proof (prove)\nusing this:\n  I 0 \\<in> S\n\ngoal (1 subgoal):\n 1. (0::'a) \\<in> I 0", "using all_subgroup"], ["proof (prove)\nusing this:\n  I 0 \\<in> S\n  \\<forall>A\\<in>S. subgroup A\n\ngoal (1 subgoal):\n 1. (0::'a) \\<in> I 0", "unfolding subgroup_def"], ["proof (prove)\nusing this:\n  I 0 \\<in> S\n  \\<forall>A\\<in>S.\n     (0::'a) \\<in> A \\<and>\n     (\\<forall>a\\<in>A. \\<forall>b\\<in>A. a + b \\<in> A) \\<and>\n     (\\<forall>a\\<in>A. - a \\<in> A)\n\ngoal (1 subgoal):\n 1. (0::'a) \\<in> I 0", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<in> I 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>X\\<in>S. (0::'a) \\<in> X\n\ngoal (2 subgoals):\n 1. \\<And>a X b Xa.\n       \\<lbrakk>a \\<in> X; X \\<in> S; b \\<in> Xa; Xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (a + b))\n 2. \\<And>a X.\n       \\<lbrakk>a \\<in> X; X \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (- a))", "fix y a ya b"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a X b Xa.\n       \\<lbrakk>a \\<in> X; X \\<in> S; b \\<in> Xa; Xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (a + b))\n 2. \\<And>a X.\n       \\<lbrakk>a \\<in> X; X \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (- a))", "assume y: \"y \\<in> S\" and a: \"a \\<in> y\" and ya: \"ya \\<in> S\" and b: \"b \\<in> ya\""], ["proof (state)\nthis:\n  y \\<in> S\n  a \\<in> y\n  ya \\<in> S\n  b \\<in> ya\n\ngoal (2 subgoals):\n 1. \\<And>a X b Xa.\n       \\<lbrakk>a \\<in> X; X \\<in> S; b \\<in> Xa; Xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (a + b))\n 2. \\<And>a X.\n       \\<lbrakk>a \\<in> X; X \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (- a))", "obtain n m where In: \"y=I n\" and Im: \"ya = I m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n m.\n        \\<lbrakk>y = I n; ya = I m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using y ya S"], ["proof (prove)\nusing this:\n  y \\<in> S\n  ya \\<in> S\n  S \\<equiv> {I n |n. n \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. (\\<And>n m.\n        \\<lbrakk>y = I n; ya = I m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y = I n\n  ya = I m\n\ngoal (2 subgoals):\n 1. \\<And>a X b Xa.\n       \\<lbrakk>a \\<in> X; X \\<in> S; b \\<in> Xa; Xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (a + b))\n 2. \\<And>a X.\n       \\<lbrakk>a \\<in> X; X \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (- a))", "have In_I_max:\"I n \\<subseteq> I (max n m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I n \\<subseteq> I (max n m)", "using chain_le[OF inc]"], ["proof (prove)\nusing this:\n  \\<forall>n\\<le>?m. I n \\<subseteq> I ?m\n\ngoal (1 subgoal):\n 1. I n \\<subseteq> I (max n m)", "by auto"], ["proof (state)\nthis:\n  I n \\<subseteq> I (max n m)\n\ngoal (2 subgoals):\n 1. \\<And>a X b Xa.\n       \\<lbrakk>a \\<in> X; X \\<in> S; b \\<in> Xa; Xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (a + b))\n 2. \\<And>a X.\n       \\<lbrakk>a \\<in> X; X \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (- a))", "have Im_I_max:\"I m \\<subseteq> I (max n m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I m \\<subseteq> I (max n m)", "using chain_le[OF inc]"], ["proof (prove)\nusing this:\n  \\<forall>n\\<le>?m. I n \\<subseteq> I ?m\n\ngoal (1 subgoal):\n 1. I m \\<subseteq> I (max n m)", "by auto"], ["proof (state)\nthis:\n  I m \\<subseteq> I (max n m)\n\ngoal (2 subgoals):\n 1. \\<And>a X b Xa.\n       \\<lbrakk>a \\<in> X; X \\<in> S; b \\<in> Xa; Xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (a + b))\n 2. \\<And>a X.\n       \\<lbrakk>a \\<in> X; X \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (- a))", "show \"\\<exists>x\\<in>S. a + b \\<in> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>S. a + b \\<in> x", "proof (rule bexI[of _ \"I (max n m)\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. a + b \\<in> I (max n m)\n 2. I (max n m) \\<in> S", "show \"a + b \\<in> I (max n m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a + b \\<in> I (max n m)", "by (metis Im Im_I_max In In_I_max a all_subgroup b in_mono max_def subgroup_def y ya)"], ["proof (state)\nthis:\n  a + b \\<in> I (max n m)\n\ngoal (1 subgoal):\n 1. I (max n m) \\<in> S", "show \"I (max n m) \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I (max n m) \\<in> S", "using S"], ["proof (prove)\nusing this:\n  S \\<equiv> {I n |n. n \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. I (max n m) \\<in> S", "by auto"], ["proof (state)\nthis:\n  I (max n m) \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x\\<in>S. a + b \\<in> x\n\ngoal (1 subgoal):\n 1. \\<And>a X.\n       \\<lbrakk>a \\<in> X; X \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (- a))", "show \"\\<exists>x\\<in>S. - a \\<in> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>S. - a \\<in> x", "proof (rule bexI[of _ \"I (max n m)\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. - a \\<in> I (max n m)\n 2. I (max n m) \\<in> S", "show \"- a \\<in> I (max n m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - a \\<in> I (max n m)", "by (metis In In_I_max a all_subgroup in_mono subgroup_def y)"], ["proof (state)\nthis:\n  - a \\<in> I (max n m)\n\ngoal (1 subgoal):\n 1. I (max n m) \\<in> S", "show \"I (max n m) \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I (max n m) \\<in> S", "using S"], ["proof (prove)\nusing this:\n  S \\<equiv> {I n |n. n \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. I (max n m) \\<in> S", "by auto"], ["proof (state)\nthis:\n  I (max n m) \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x\\<in>S. - a \\<in> x\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection\\<open>Ideals\\<close>"], ["", "context Rings.ring\nbegin"], ["", "lemma subgroup_left_principal_ideal: \"subgroup {r*a|r. r\\<in>UNIV}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup {r * a |r. r \\<in> UNIV}", "proof (unfold subgroup_def, auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<exists>r. (0::'a) = r * a\n 2. \\<And>r ra. \\<exists>rb. r * a + ra * a = rb * a\n 3. \\<And>r. \\<exists>ra. - (r * a) = ra * a", "show \"\\<exists>r. 0 = r * a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r. (0::'a) = r * a", "by (rule exI[of _ 0], simp)"], ["proof (state)\nthis:\n  \\<exists>r. (0::'a) = r * a\n\ngoal (2 subgoals):\n 1. \\<And>r ra. \\<exists>rb. r * a + ra * a = rb * a\n 2. \\<And>r. \\<exists>ra. - (r * a) = ra * a", "fix r ra"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>r ra. \\<exists>rb. r * a + ra * a = rb * a\n 2. \\<And>r. \\<exists>ra. - (r * a) = ra * a", "show \"\\<exists>rb. r * a + ra * a = rb * a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rb. r * a + ra * a = rb * a", "by (metis add_0_right combine_common_factor)"], ["proof (state)\nthis:\n  \\<exists>rb. r * a + ra * a = rb * a\n\ngoal (1 subgoal):\n 1. \\<And>r. \\<exists>ra. - (r * a) = ra * a", "show \"\\<exists>ra. - (r * a) = ra * a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ra. - (r * a) = ra * a", "by (metis minus_mult_left)"], ["proof (state)\nthis:\n  \\<exists>ra. - (r * a) = ra * a\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"left_ideal I = (subgroup I \\<and> (\\<forall>x\\<in>I. \\<forall>r. r*x \\<in> I))\""], ["", "definition \"right_ideal I = (subgroup I \\<and> (\\<forall>x\\<in>I. \\<forall>r. x*r \\<in> I))\""], ["", "definition \"ideal I= (left_ideal I \\<and> right_ideal I)\""], ["", "definition \"left_ideal_generated S = \\<Inter>{I. left_ideal I \\<and> S \\<subseteq> I}\""], ["", "definition \"right_ideal_generated S = \\<Inter>{I. right_ideal I \\<and> S \\<subseteq> I}\""], ["", "definition \"ideal_generated S = \\<Inter>{I. ideal I \\<and> S \\<subseteq> I}\""], ["", "definition \"left_principal_ideal S =  (\\<exists>a. left_ideal_generated {a} = S)\""], ["", "definition \"right_principal_ideal S = (right_ideal S \\<and> (\\<exists>a. right_ideal_generated {a} = S))\""], ["", "definition \"principal_ideal S = (\\<exists>a. ideal_generated {a} = S)\""], ["", "lemma ideal_inter:\n  assumes \"ideal I\" and \"ideal J\" shows \"ideal (I \\<inter> J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal (I \\<inter> J)", "using assms"], ["proof (prove)\nusing this:\n  ideal I\n  ideal J\n\ngoal (1 subgoal):\n 1. ideal (I \\<inter> J)", "unfolding ideal_def left_ideal_def right_ideal_def subgroup_def"], ["proof (prove)\nusing this:\n  (((0::'a) \\<in> I \\<and>\n    (\\<forall>a\\<in>I. \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n    (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n   (\\<forall>x\\<in>I. \\<forall>r. r * x \\<in> I)) \\<and>\n  ((0::'a) \\<in> I \\<and>\n   (\\<forall>a\\<in>I. \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n   (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n  (\\<forall>x\\<in>I. \\<forall>r. x * r \\<in> I)\n  (((0::'a) \\<in> J \\<and>\n    (\\<forall>a\\<in>J. \\<forall>b\\<in>J. a + b \\<in> J) \\<and>\n    (\\<forall>a\\<in>J. - a \\<in> J)) \\<and>\n   (\\<forall>x\\<in>J. \\<forall>r. r * x \\<in> J)) \\<and>\n  ((0::'a) \\<in> J \\<and>\n   (\\<forall>a\\<in>J. \\<forall>b\\<in>J. a + b \\<in> J) \\<and>\n   (\\<forall>a\\<in>J. - a \\<in> J)) \\<and>\n  (\\<forall>x\\<in>J. \\<forall>r. x * r \\<in> J)\n\ngoal (1 subgoal):\n 1. (((0::'a) \\<in> I \\<inter> J \\<and>\n      (\\<forall>a\\<in>I \\<inter> J.\n          \\<forall>b\\<in>I \\<inter> J. a + b \\<in> I \\<inter> J) \\<and>\n      (\\<forall>a\\<in>I \\<inter> J. - a \\<in> I \\<inter> J)) \\<and>\n     (\\<forall>x\\<in>I \\<inter> J.\n         \\<forall>r. r * x \\<in> I \\<inter> J)) \\<and>\n    ((0::'a) \\<in> I \\<inter> J \\<and>\n     (\\<forall>a\\<in>I \\<inter> J.\n         \\<forall>b\\<in>I \\<inter> J. a + b \\<in> I \\<inter> J) \\<and>\n     (\\<forall>a\\<in>I \\<inter> J. - a \\<in> I \\<inter> J)) \\<and>\n    (\\<forall>x\\<in>I \\<inter> J. \\<forall>r. x * r \\<in> I \\<inter> J)", "by auto"], ["", "lemma ideal_Inter:\n  assumes \"\\<forall>I\\<in>S. ideal I\"\n  shows \"ideal (\\<Inter>S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal (\\<Inter> S)", "proof (unfold ideal_def left_ideal_def right_ideal_def, auto)"], ["proof (state)\ngoal (4 subgoals):\n 1. subgroup (\\<Inter> S)\n 2. \\<And>x r xa.\n       \\<lbrakk>\\<forall>X\\<in>S. x \\<in> X; xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> r * x \\<in> xa\n 3. subgroup (\\<Inter> S)\n 4. \\<And>x r xa.\n       \\<lbrakk>\\<forall>X\\<in>S. x \\<in> X; xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> x * r \\<in> xa", "show \"subgroup (\\<Inter>S)\" and \"subgroup (\\<Inter>S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (\\<Inter> S) &&& subgroup (\\<Inter> S)", "using subgroup_Inter assms"], ["proof (prove)\nusing this:\n  \\<forall>I\\<in>?S. subgroup I \\<Longrightarrow> subgroup (\\<Inter> ?S)\n  \\<forall>I\\<in>S. ideal I\n\ngoal (1 subgoal):\n 1. subgroup (\\<Inter> S) &&& subgroup (\\<Inter> S)", "unfolding ideal_def left_ideal_def"], ["proof (prove)\nusing this:\n  \\<forall>I\\<in>?S. subgroup I \\<Longrightarrow> subgroup (\\<Inter> ?S)\n  \\<forall>I\\<in>S.\n     (subgroup I \\<and>\n      (\\<forall>x\\<in>I. \\<forall>r. r * x \\<in> I)) \\<and>\n     right_ideal I\n\ngoal (1 subgoal):\n 1. subgroup (\\<Inter> S) &&& subgroup (\\<Inter> S)", "by auto"], ["proof (state)\nthis:\n  subgroup (\\<Inter> S)\n  subgroup (\\<Inter> S)\n\ngoal (2 subgoals):\n 1. \\<And>x r xa.\n       \\<lbrakk>\\<forall>X\\<in>S. x \\<in> X; xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> r * x \\<in> xa\n 2. \\<And>x r xa.\n       \\<lbrakk>\\<forall>X\\<in>S. x \\<in> X; xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> x * r \\<in> xa", "fix x r xa"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x r xa.\n       \\<lbrakk>\\<forall>X\\<in>S. x \\<in> X; xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> r * x \\<in> xa\n 2. \\<And>x r xa.\n       \\<lbrakk>\\<forall>X\\<in>S. x \\<in> X; xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> x * r \\<in> xa", "assume X: \"\\<forall>X\\<in>S. x \\<in> X\" and xa: \"xa \\<in> S\""], ["proof (state)\nthis:\n  \\<forall>X\\<in>S. x \\<in> X\n  xa \\<in> S\n\ngoal (2 subgoals):\n 1. \\<And>x r xa.\n       \\<lbrakk>\\<forall>X\\<in>S. x \\<in> X; xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> r * x \\<in> xa\n 2. \\<And>x r xa.\n       \\<lbrakk>\\<forall>X\\<in>S. x \\<in> X; xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> x * r \\<in> xa", "show \"r * x \\<in> xa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r * x \\<in> xa", "by (metis X assms ideal_def left_ideal_def xa)"], ["proof (state)\nthis:\n  r * x \\<in> xa\n\ngoal (1 subgoal):\n 1. \\<And>x r xa.\n       \\<lbrakk>\\<forall>X\\<in>S. x \\<in> X; xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> x * r \\<in> xa", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x r xa.\n       \\<lbrakk>\\<forall>X\\<in>S. x \\<in> X; xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> x * r \\<in> xa", "fix x r xa"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x r xa.\n       \\<lbrakk>\\<forall>X\\<in>S. x \\<in> X; xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> x * r \\<in> xa", "assume X: \"\\<forall>X\\<in>S. x \\<in> X\" and xa: \"xa \\<in> S\""], ["proof (state)\nthis:\n  \\<forall>X\\<in>S. x \\<in> X\n  xa \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x r xa.\n       \\<lbrakk>\\<forall>X\\<in>S. x \\<in> X; xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> x * r \\<in> xa", "show \"x * r \\<in> xa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * r \\<in> xa", "by (metis X assms ideal_def right_ideal_def xa)"], ["proof (state)\nthis:\n  x * r \\<in> xa\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ideal_Union:\n  fixes I::\"nat => 'a set\"\n  defines S: \"S\\<equiv>{I n|n. n\\<in>UNIV}\"\n  assumes all_ideal: \"\\<forall>A\\<in>S. ideal A\"\n  and inc: \"\\<forall>n. I(n) \\<subseteq> I(n+1)\"\n  shows \"ideal (\\<Union>S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal (\\<Union> S)", "unfolding ideal_def left_ideal_def right_ideal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (subgroup (\\<Union> S) \\<and>\n     (\\<forall>x\\<in>\\<Union> S. \\<forall>r. r * x \\<in> \\<Union> S)) \\<and>\n    subgroup (\\<Union> S) \\<and>\n    (\\<forall>x\\<in>\\<Union> S. \\<forall>r. x * r \\<in> \\<Union> S)", "proof (safe; (unfold Union_iff)?)"], ["proof (state)\ngoal (4 subgoals):\n 1. subgroup (\\<Union> S)\n 2. \\<And>x X r.\n       \\<lbrakk>x \\<in> X; X \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (r * x))\n 3. subgroup (\\<Union> S)\n 4. \\<And>x X r.\n       \\<lbrakk>x \\<in> X; X \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (x * r))", "fix y x r"], ["proof (state)\ngoal (4 subgoals):\n 1. subgroup (\\<Union> S)\n 2. \\<And>x X r.\n       \\<lbrakk>x \\<in> X; X \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (r * x))\n 3. subgroup (\\<Union> S)\n 4. \\<And>x X r.\n       \\<lbrakk>x \\<in> X; X \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (x * r))", "assume y: \"y \\<in> S\" and x: \"x \\<in> y\""], ["proof (state)\nthis:\n  y \\<in> S\n  x \\<in> y\n\ngoal (4 subgoals):\n 1. subgroup (\\<Union> S)\n 2. \\<And>x X r.\n       \\<lbrakk>x \\<in> X; X \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (r * x))\n 3. subgroup (\\<Union> S)\n 4. \\<And>x X r.\n       \\<lbrakk>x \\<in> X; X \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (x * r))", "obtain n where n: \"y=I n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n. y = I n \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using y S"], ["proof (prove)\nusing this:\n  y \\<in> S\n  S \\<equiv> {I n |n. n \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. (\\<And>n. y = I n \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  y = I n\n\ngoal (4 subgoals):\n 1. subgroup (\\<Union> S)\n 2. \\<And>x X r.\n       \\<lbrakk>x \\<in> X; X \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (r * x))\n 3. subgroup (\\<Union> S)\n 4. \\<And>x X r.\n       \\<lbrakk>x \\<in> X; X \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (x * r))", "show \"\\<exists>xa\\<in>S. r * x \\<in> xa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xa\\<in>S. r * x \\<in> xa", "proof (rule bexI[of _ \"I n\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. r * x \\<in> I n\n 2. I n \\<in> S", "show \"r * x \\<in> I n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r * x \\<in> I n", "by (metis n assms(2) ideal_def left_ideal_def x y)"], ["proof (state)\nthis:\n  r * x \\<in> I n\n\ngoal (1 subgoal):\n 1. I n \\<in> S", "show \"I n \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I n \\<in> S", "by (metis n y)"], ["proof (state)\nthis:\n  I n \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>xa\\<in>S. r * x \\<in> xa\n\ngoal (3 subgoals):\n 1. subgroup (\\<Union> S)\n 2. subgroup (\\<Union> S)\n 3. \\<And>x X r.\n       \\<lbrakk>x \\<in> X; X \\<in> S\\<rbrakk>\n       \\<Longrightarrow> Bex S ((\\<in>) (x * r))", "show \"\\<exists>xa\\<in>S. x * r \\<in> xa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xa\\<in>S. x * r \\<in> xa", "proof (rule bexI[of _ \"I n\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. x * r \\<in> I n\n 2. I n \\<in> S", "show \"x * r \\<in> I n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * r \\<in> I n", "by (metis n assms(2) ideal_def right_ideal_def x y)"], ["proof (state)\nthis:\n  x * r \\<in> I n\n\ngoal (1 subgoal):\n 1. I n \\<in> S", "show \"I n \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I n \\<in> S", "by (metis n y)"], ["proof (state)\nthis:\n  I n \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>xa\\<in>S. x * r \\<in> xa\n\ngoal (2 subgoals):\n 1. subgroup (\\<Union> S)\n 2. subgroup (\\<Union> S)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. subgroup (\\<Union> S)\n 2. subgroup (\\<Union> S)", "show \"subgroup (\\<Union>S)\" and \"subgroup (\\<Union>S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (\\<Union> S) &&& subgroup (\\<Union> S)", "using subgroup_Union"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>A\\<in>{?I n |n. n \\<in> UNIV}. subgroup A;\n   \\<forall>n. ?I n \\<subseteq> ?I (n + 1)\\<rbrakk>\n  \\<Longrightarrow> subgroup (\\<Union> {?I n |n. n \\<in> UNIV})\n\ngoal (1 subgoal):\n 1. subgroup (\\<Union> S) &&& subgroup (\\<Union> S)", "by (metis (mono_tags) S all_ideal ideal_def inc right_ideal_def)+"], ["proof (state)\nthis:\n  subgroup (\\<Union> S)\n  subgroup (\\<Union> S)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ideal_not_empty:\n  assumes \"ideal I\"\n  shows \"I \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<noteq> {}", "using assms"], ["proof (prove)\nusing this:\n  ideal I\n\ngoal (1 subgoal):\n 1. I \\<noteq> {}", "unfolding ideal_def left_ideal_def subgroup_def"], ["proof (prove)\nusing this:\n  (((0::'a) \\<in> I \\<and>\n    (\\<forall>a\\<in>I. \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n    (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n   (\\<forall>x\\<in>I. \\<forall>r. r * x \\<in> I)) \\<and>\n  right_ideal I\n\ngoal (1 subgoal):\n 1. I \\<noteq> {}", "by auto"], ["", "lemma ideal_0: \"ideal {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal {0::'a}", "unfolding ideal_def left_ideal_def right_ideal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (subgroup {0::'a} \\<and>\n     (\\<forall>x\\<in>{0::'a}. \\<forall>r. r * x \\<in> {0::'a})) \\<and>\n    subgroup {0::'a} \\<and>\n    (\\<forall>x\\<in>{0::'a}. \\<forall>r. x * r \\<in> {0::'a})", "using subgroup_0"], ["proof (prove)\nusing this:\n  subgroup {0::'a}\n\ngoal (1 subgoal):\n 1. (subgroup {0::'a} \\<and>\n     (\\<forall>x\\<in>{0::'a}. \\<forall>r. r * x \\<in> {0::'a})) \\<and>\n    subgroup {0::'a} \\<and>\n    (\\<forall>x\\<in>{0::'a}. \\<forall>r. x * r \\<in> {0::'a})", "by auto"], ["", "lemma ideal_UNIV: \"ideal UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal UNIV", "unfolding ideal_def left_ideal_def right_ideal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (subgroup UNIV \\<and>\n     (\\<forall>x\\<in>UNIV. \\<forall>r. r * x \\<in> UNIV)) \\<and>\n    subgroup UNIV \\<and> (\\<forall>x\\<in>UNIV. \\<forall>r. x * r \\<in> UNIV)", "using subgroup_UNIV"], ["proof (prove)\nusing this:\n  subgroup UNIV\n\ngoal (1 subgoal):\n 1. (subgroup UNIV \\<and>\n     (\\<forall>x\\<in>UNIV. \\<forall>r. r * x \\<in> UNIV)) \\<and>\n    subgroup UNIV \\<and> (\\<forall>x\\<in>UNIV. \\<forall>r. x * r \\<in> UNIV)", "by auto"], ["", "lemma ideal_generated_0: \"ideal_generated {0} = {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {0::'a} = {0::'a}", "unfolding ideal_generated_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Inter> {I. ideal I \\<and> {0::'a} \\<subseteq> I} = {0::'a}", "using ideal_0"], ["proof (prove)\nusing this:\n  ideal {0::'a}\n\ngoal (1 subgoal):\n 1. \\<Inter> {I. ideal I \\<and> {0::'a} \\<subseteq> I} = {0::'a}", "by auto"], ["", "lemma ideal_generated_subset_generator:\n  assumes \"ideal_generated A = I\"\n  shows \"A \\<subseteq> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> I", "using assms"], ["proof (prove)\nusing this:\n  ideal_generated A = I\n\ngoal (1 subgoal):\n 1. A \\<subseteq> I", "unfolding ideal_generated_def"], ["proof (prove)\nusing this:\n  \\<Inter> {I. ideal I \\<and> A \\<subseteq> I} = I\n\ngoal (1 subgoal):\n 1. A \\<subseteq> I", "by auto"], ["", "lemma left_ideal_minus:\n  assumes \"left_ideal I\"\n  and \"a\\<in>I\" and \"b\\<in>I\"\n  shows \"a - b \\<in> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a - b \\<in> I", "by (metis assms(1) assms(2) assms(3) diff_minus_eq_add left_ideal_def minus_minus subgroup_def)"], ["", "lemma right_ideal_minus:\n  assumes \"right_ideal I\"\n  and \"a\\<in>I\" and \"b\\<in>I\"\n  shows \"a - b \\<in> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a - b \\<in> I", "by (metis assms(1) assms(2) assms(3) diff_minus_eq_add minus_minus right_ideal_def subgroup_def)"], ["", "lemma ideal_minus:\n  assumes \"ideal I\"\n  and \"a\\<in>I\" and \"b\\<in>I\"\n  shows \"a - b \\<in> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a - b \\<in> I", "by (metis assms(1) assms(2) assms(3) ideal_def right_ideal_minus)"], ["", "lemma ideal_ideal_generated: \"ideal (ideal_generated S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal (ideal_generated S)", "unfolding ideal_generated_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal (\\<Inter> {I. ideal I \\<and> S \\<subseteq> I})", "unfolding ideal_def left_ideal_def subgroup_def right_ideal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (((0::'a)\n      \\<in> \\<Inter>\n             {I. ((((0::'a) \\<in> I \\<and>\n                    (\\<forall>a\\<in>I.\n                        \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                    (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                   (\\<forall>x\\<in>I. \\<forall>r. r * x \\<in> I)) \\<and>\n                  ((0::'a) \\<in> I \\<and>\n                   (\\<forall>a\\<in>I.\n                       \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                   (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                  (\\<forall>x\\<in>I. \\<forall>r. x * r \\<in> I)) \\<and>\n                 S \\<subseteq> I} \\<and>\n      (\\<forall>a\\<in>\\<Inter>\n                       {I. ((((0::'a) \\<in> I \\<and>\n                              (\\<forall>a\\<in>I.\n                                  \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                              (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                             (\\<forall>x\\<in>I.\n                                 \\<forall>r. r * x \\<in> I)) \\<and>\n                            ((0::'a) \\<in> I \\<and>\n                             (\\<forall>a\\<in>I.\n                                 \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                             (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                            (\\<forall>x\\<in>I.\n                                \\<forall>r. x * r \\<in> I)) \\<and>\n                           S \\<subseteq> I}.\n          \\<forall>b\\<in>\\<Inter>\n                          {I. ((((0::'a) \\<in> I \\<and>\n                                 (\\<forall>a\\<in>I.\n                                     \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                                 (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                                (\\<forall>x\\<in>I.\n                                    \\<forall>r. r * x \\<in> I)) \\<and>\n                               ((0::'a) \\<in> I \\<and>\n                                (\\<forall>a\\<in>I.\n                                    \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                                (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                               (\\<forall>x\\<in>I.\n                                   \\<forall>r. x * r \\<in> I)) \\<and>\n                              S \\<subseteq> I}.\n             a + b\n             \\<in> \\<Inter>\n                    {I. ((((0::'a) \\<in> I \\<and>\n                           (\\<forall>a\\<in>I.\n                               \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                           (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                          (\\<forall>x\\<in>I.\n                              \\<forall>r. r * x \\<in> I)) \\<and>\n                         ((0::'a) \\<in> I \\<and>\n                          (\\<forall>a\\<in>I.\n                              \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                          (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                         (\\<forall>x\\<in>I.\n                             \\<forall>r. x * r \\<in> I)) \\<and>\n                        S \\<subseteq> I}) \\<and>\n      (\\<forall>a\\<in>\\<Inter>\n                       {I. ((((0::'a) \\<in> I \\<and>\n                              (\\<forall>a\\<in>I.\n                                  \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                              (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                             (\\<forall>x\\<in>I.\n                                 \\<forall>r. r * x \\<in> I)) \\<and>\n                            ((0::'a) \\<in> I \\<and>\n                             (\\<forall>a\\<in>I.\n                                 \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                             (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                            (\\<forall>x\\<in>I.\n                                \\<forall>r. x * r \\<in> I)) \\<and>\n                           S \\<subseteq> I}.\n          - a\n          \\<in> \\<Inter>\n                 {I. ((((0::'a) \\<in> I \\<and>\n                        (\\<forall>a\\<in>I.\n                            \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                        (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                       (\\<forall>x\\<in>I. \\<forall>r. r * x \\<in> I)) \\<and>\n                      ((0::'a) \\<in> I \\<and>\n                       (\\<forall>a\\<in>I.\n                           \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                       (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                      (\\<forall>x\\<in>I. \\<forall>r. x * r \\<in> I)) \\<and>\n                     S \\<subseteq> I})) \\<and>\n     (\\<forall>x\\<in>\\<Inter>\n                      {I. ((((0::'a) \\<in> I \\<and>\n                             (\\<forall>a\\<in>I.\n                                 \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                             (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                            (\\<forall>x\\<in>I.\n                                \\<forall>r. r * x \\<in> I)) \\<and>\n                           ((0::'a) \\<in> I \\<and>\n                            (\\<forall>a\\<in>I.\n                                \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                            (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                           (\\<forall>x\\<in>I.\n                               \\<forall>r. x * r \\<in> I)) \\<and>\n                          S \\<subseteq> I}.\n         \\<forall>r.\n            r * x\n            \\<in> \\<Inter>\n                   {I. ((((0::'a) \\<in> I \\<and>\n                          (\\<forall>a\\<in>I.\n                              \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                          (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                         (\\<forall>x\\<in>I.\n                             \\<forall>r. r * x \\<in> I)) \\<and>\n                        ((0::'a) \\<in> I \\<and>\n                         (\\<forall>a\\<in>I.\n                             \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                         (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                        (\\<forall>x\\<in>I.\n                            \\<forall>r. x * r \\<in> I)) \\<and>\n                       S \\<subseteq> I})) \\<and>\n    ((0::'a)\n     \\<in> \\<Inter>\n            {I. ((((0::'a) \\<in> I \\<and>\n                   (\\<forall>a\\<in>I.\n                       \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                   (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                  (\\<forall>x\\<in>I. \\<forall>r. r * x \\<in> I)) \\<and>\n                 ((0::'a) \\<in> I \\<and>\n                  (\\<forall>a\\<in>I. \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                  (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                 (\\<forall>x\\<in>I. \\<forall>r. x * r \\<in> I)) \\<and>\n                S \\<subseteq> I} \\<and>\n     (\\<forall>a\\<in>\\<Inter>\n                      {I. ((((0::'a) \\<in> I \\<and>\n                             (\\<forall>a\\<in>I.\n                                 \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                             (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                            (\\<forall>x\\<in>I.\n                                \\<forall>r. r * x \\<in> I)) \\<and>\n                           ((0::'a) \\<in> I \\<and>\n                            (\\<forall>a\\<in>I.\n                                \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                            (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                           (\\<forall>x\\<in>I.\n                               \\<forall>r. x * r \\<in> I)) \\<and>\n                          S \\<subseteq> I}.\n         \\<forall>b\\<in>\\<Inter>\n                         {I. ((((0::'a) \\<in> I \\<and>\n                                (\\<forall>a\\<in>I.\n                                    \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                                (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                               (\\<forall>x\\<in>I.\n                                   \\<forall>r. r * x \\<in> I)) \\<and>\n                              ((0::'a) \\<in> I \\<and>\n                               (\\<forall>a\\<in>I.\n                                   \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                               (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                              (\\<forall>x\\<in>I.\n                                  \\<forall>r. x * r \\<in> I)) \\<and>\n                             S \\<subseteq> I}.\n            a + b\n            \\<in> \\<Inter>\n                   {I. ((((0::'a) \\<in> I \\<and>\n                          (\\<forall>a\\<in>I.\n                              \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                          (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                         (\\<forall>x\\<in>I.\n                             \\<forall>r. r * x \\<in> I)) \\<and>\n                        ((0::'a) \\<in> I \\<and>\n                         (\\<forall>a\\<in>I.\n                             \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                         (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                        (\\<forall>x\\<in>I.\n                            \\<forall>r. x * r \\<in> I)) \\<and>\n                       S \\<subseteq> I}) \\<and>\n     (\\<forall>a\\<in>\\<Inter>\n                      {I. ((((0::'a) \\<in> I \\<and>\n                             (\\<forall>a\\<in>I.\n                                 \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                             (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                            (\\<forall>x\\<in>I.\n                                \\<forall>r. r * x \\<in> I)) \\<and>\n                           ((0::'a) \\<in> I \\<and>\n                            (\\<forall>a\\<in>I.\n                                \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                            (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                           (\\<forall>x\\<in>I.\n                               \\<forall>r. x * r \\<in> I)) \\<and>\n                          S \\<subseteq> I}.\n         - a\n         \\<in> \\<Inter>\n                {I. ((((0::'a) \\<in> I \\<and>\n                       (\\<forall>a\\<in>I.\n                           \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                       (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                      (\\<forall>x\\<in>I. \\<forall>r. r * x \\<in> I)) \\<and>\n                     ((0::'a) \\<in> I \\<and>\n                      (\\<forall>a\\<in>I.\n                          \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                      (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                     (\\<forall>x\\<in>I. \\<forall>r. x * r \\<in> I)) \\<and>\n                    S \\<subseteq> I})) \\<and>\n    (\\<forall>x\\<in>\\<Inter>\n                     {I. ((((0::'a) \\<in> I \\<and>\n                            (\\<forall>a\\<in>I.\n                                \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                            (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                           (\\<forall>x\\<in>I.\n                               \\<forall>r. r * x \\<in> I)) \\<and>\n                          ((0::'a) \\<in> I \\<and>\n                           (\\<forall>a\\<in>I.\n                               \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                           (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                          (\\<forall>x\\<in>I.\n                              \\<forall>r. x * r \\<in> I)) \\<and>\n                         S \\<subseteq> I}.\n        \\<forall>r.\n           x * r\n           \\<in> \\<Inter>\n                  {I. ((((0::'a) \\<in> I \\<and>\n                         (\\<forall>a\\<in>I.\n                             \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                         (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                        (\\<forall>x\\<in>I.\n                            \\<forall>r. r * x \\<in> I)) \\<and>\n                       ((0::'a) \\<in> I \\<and>\n                        (\\<forall>a\\<in>I.\n                            \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n                        (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n                       (\\<forall>x\\<in>I. \\<forall>r. x * r \\<in> I)) \\<and>\n                      S \\<subseteq> I})", "by blast"], ["", "lemma sum_left_ideal:\n  assumes li_X: \"left_ideal X\"\n  and U_X: \"U \\<subseteq> X\" and U: \"finite U\"\n  shows \"(\\<Sum>i\\<in>U. f i * i) \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>U. f i * i) \\<in> X", "using U U_X"], ["proof (prove)\nusing this:\n  finite U\n  U \\<subseteq> X\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>U. f i * i) \\<in> X", "proof (induct U)"], ["proof (state)\ngoal (2 subgoals):\n 1. {} \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>{}. f i * i) \\<in> X\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. f i * i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. f i * i) \\<in> X", "case empty"], ["proof (state)\nthis:\n  {} \\<subseteq> X\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>{}. f i * i) \\<in> X\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. f i * i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. f i * i) \\<in> X", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{}. f i * i) \\<in> X", "using li_X"], ["proof (prove)\nusing this:\n  left_ideal X\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{}. f i * i) \\<in> X", "by (simp add:  left_ideal_def subgroup_def)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{}. f i * i) \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. f i * i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. f i * i) \\<in> X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. f i * i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. f i * i) \\<in> X", "case (insert x U)"], ["proof (state)\nthis:\n  finite U\n  x \\<notin> U\n  U \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>U. f i * i) \\<in> X\n  insert x U \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. f i * i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. f i * i) \\<in> X", "have x_in_X: \"x \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> X", "using insert.prems"], ["proof (prove)\nusing this:\n  insert x U \\<subseteq> X\n\ngoal (1 subgoal):\n 1. x \\<in> X", "by simp"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. f i * i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. f i * i) \\<in> X", "have fx_x_X: \"f x * x \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x * x \\<in> X", "using li_X x_in_X"], ["proof (prove)\nusing this:\n  left_ideal X\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. f x * x \\<in> X", "unfolding left_ideal_def"], ["proof (prove)\nusing this:\n  subgroup X \\<and> (\\<forall>x\\<in>X. \\<forall>r. r * x \\<in> X)\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. f x * x \\<in> X", "by simp"], ["proof (state)\nthis:\n  f x * x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. f i * i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. f i * i) \\<in> X", "have sum_in_X: \"(\\<Sum>i\\<in>U. f i * i) \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>U. f i * i) \\<in> X", "using insert.prems insert.hyps(3)"], ["proof (prove)\nusing this:\n  insert x U \\<subseteq> X\n  U \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>U. f i * i) \\<in> X\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>U. f i * i) \\<in> X", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>U. f i * i) \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. f i * i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. f i * i) \\<in> X", "have \"(\\<Sum>i\\<in>(insert x U). f i * i) = f x * x + (\\<Sum>i\\<in>U. f i * i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>insert x U. f i * i) = f x * x + (\\<Sum>i\\<in>U. f i * i)", "by (simp add: insert.hyps(1) insert.hyps(2))"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>insert x U. f i * i) = f x * x + (\\<Sum>i\\<in>U. f i * i)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. f i * i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. f i * i) \\<in> X", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>insert x U. f i * i) = f x * x + (\\<Sum>i\\<in>U. f i * i)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. f i * i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. f i * i) \\<in> X", "have \"... \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x * x + (\\<Sum>i\\<in>U. f i * i) \\<in> X", "using li_X fx_x_X sum_in_X"], ["proof (prove)\nusing this:\n  left_ideal X\n  f x * x \\<in> X\n  (\\<Sum>i\\<in>U. f i * i) \\<in> X\n\ngoal (1 subgoal):\n 1. f x * x + (\\<Sum>i\\<in>U. f i * i) \\<in> X", "unfolding left_ideal_def subgroup_def"], ["proof (prove)\nusing this:\n  ((0::'a) \\<in> X \\<and>\n   (\\<forall>a\\<in>X. \\<forall>b\\<in>X. a + b \\<in> X) \\<and>\n   (\\<forall>a\\<in>X. - a \\<in> X)) \\<and>\n  (\\<forall>x\\<in>X. \\<forall>r. r * x \\<in> X)\n  f x * x \\<in> X\n  (\\<Sum>i\\<in>U. f i * i) \\<in> X\n\ngoal (1 subgoal):\n 1. f x * x + (\\<Sum>i\\<in>U. f i * i) \\<in> X", "by auto"], ["proof (state)\nthis:\n  f x * x + (\\<Sum>i\\<in>U. f i * i) \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. f i * i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. f i * i) \\<in> X", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>i\\<in>insert x U. f i * i) \\<in> X", "show \"(\\<Sum>i\\<in>(insert x U). f i * i) \\<in> X\""], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>insert x U. f i * i) \\<in> X\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>insert x U. f i * i) \\<in> X", "."], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>insert x U. f i * i) \\<in> X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_right_ideal:\n  assumes li_X: \"right_ideal X\"\n  and U_X: \"U \\<subseteq> X\" and U: \"finite U\"\n  shows \"(\\<Sum>i\\<in>U. i * f i) \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>U. i * f i) \\<in> X", "using U U_X"], ["proof (prove)\nusing this:\n  finite U\n  U \\<subseteq> X\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>U. i * f i) \\<in> X", "proof (induct U)"], ["proof (state)\ngoal (2 subgoals):\n 1. {} \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>{}. i * f i) \\<in> X\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. i * f i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. i * f i) \\<in> X", "case empty"], ["proof (state)\nthis:\n  {} \\<subseteq> X\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>{}. i * f i) \\<in> X\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. i * f i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. i * f i) \\<in> X", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{}. i * f i) \\<in> X", "using li_X"], ["proof (prove)\nusing this:\n  right_ideal X\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{}. i * f i) \\<in> X", "by (simp add: right_ideal_def subgroup_def)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{}. i * f i) \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. i * f i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. i * f i) \\<in> X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. i * f i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. i * f i) \\<in> X", "case (insert x U)"], ["proof (state)\nthis:\n  finite U\n  x \\<notin> U\n  U \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>U. i * f i) \\<in> X\n  insert x U \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. i * f i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. i * f i) \\<in> X", "have x_in_X: \"x \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> X", "using insert.prems"], ["proof (prove)\nusing this:\n  insert x U \\<subseteq> X\n\ngoal (1 subgoal):\n 1. x \\<in> X", "by simp"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. i * f i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. i * f i) \\<in> X", "have fx_x_X: \"x * f x \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * f x \\<in> X", "using li_X x_in_X"], ["proof (prove)\nusing this:\n  right_ideal X\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. x * f x \\<in> X", "unfolding right_ideal_def"], ["proof (prove)\nusing this:\n  subgroup X \\<and> (\\<forall>x\\<in>X. \\<forall>r. x * r \\<in> X)\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. x * f x \\<in> X", "by simp"], ["proof (state)\nthis:\n  x * f x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. i * f i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. i * f i) \\<in> X", "have sum_in_X: \"(\\<Sum>i\\<in>U. i * f i) \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>U. i * f i) \\<in> X", "using insert.prems insert.hyps(3)"], ["proof (prove)\nusing this:\n  insert x U \\<subseteq> X\n  U \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>U. i * f i) \\<in> X\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>U. i * f i) \\<in> X", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>U. i * f i) \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. i * f i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. i * f i) \\<in> X", "have \"(\\<Sum>i\\<in>(insert x U). i * f i) =  x * f x + (\\<Sum>i\\<in>U. i * f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>insert x U. i * f i) = x * f x + (\\<Sum>i\\<in>U. i * f i)", "by (simp add: insert.hyps(1) insert.hyps(2))"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>insert x U. i * f i) = x * f x + (\\<Sum>i\\<in>U. i * f i)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. i * f i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. i * f i) \\<in> X", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>insert x U. i * f i) = x * f x + (\\<Sum>i\\<in>U. i * f i)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. i * f i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. i * f i) \\<in> X", "have \"... \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * f x + (\\<Sum>i\\<in>U. i * f i) \\<in> X", "using li_X fx_x_X sum_in_X"], ["proof (prove)\nusing this:\n  right_ideal X\n  x * f x \\<in> X\n  (\\<Sum>i\\<in>U. i * f i) \\<in> X\n\ngoal (1 subgoal):\n 1. x * f x + (\\<Sum>i\\<in>U. i * f i) \\<in> X", "unfolding right_ideal_def subgroup_def"], ["proof (prove)\nusing this:\n  ((0::'a) \\<in> X \\<and>\n   (\\<forall>a\\<in>X. \\<forall>b\\<in>X. a + b \\<in> X) \\<and>\n   (\\<forall>a\\<in>X. - a \\<in> X)) \\<and>\n  (\\<forall>x\\<in>X. \\<forall>r. x * r \\<in> X)\n  x * f x \\<in> X\n  (\\<Sum>i\\<in>U. i * f i) \\<in> X\n\ngoal (1 subgoal):\n 1. x * f x + (\\<Sum>i\\<in>U. i * f i) \\<in> X", "by auto"], ["proof (state)\nthis:\n  x * f x + (\\<Sum>i\\<in>U. i * f i) \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> X \\<Longrightarrow> (\\<Sum>i\\<in>F. i * f i) \\<in> X;\n        insert x F \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>insert x F. i * f i) \\<in> X", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>i\\<in>insert x U. i * f i) \\<in> X", "show \"(\\<Sum>i\\<in>(insert x U). i * f i) \\<in> X\""], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>insert x U. i * f i) \\<in> X\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>insert x U. i * f i) \\<in> X", "."], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>insert x U. i * f i) \\<in> X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma left_ideal_generated_subset:\n  assumes \"S \\<subseteq> T\"\n  shows \"left_ideal_generated S \\<subseteq> left_ideal_generated T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. left_ideal_generated S \\<subseteq> left_ideal_generated T", "unfolding left_ideal_generated_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Inter> {I. left_ideal I \\<and> S \\<subseteq> I}\n    \\<subseteq> \\<Inter> {I. left_ideal I \\<and> T \\<subseteq> I}", "using assms"], ["proof (prove)\nusing this:\n  S \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<Inter> {I. left_ideal I \\<and> S \\<subseteq> I}\n    \\<subseteq> \\<Inter> {I. left_ideal I \\<and> T \\<subseteq> I}", "by auto"], ["", "lemma right_ideal_generated_subset:\n  assumes \"S \\<subseteq> T\"\n  shows \"right_ideal_generated S \\<subseteq> right_ideal_generated T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. right_ideal_generated S \\<subseteq> right_ideal_generated T", "unfolding right_ideal_generated_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Inter> {I. right_ideal I \\<and> S \\<subseteq> I}\n    \\<subseteq> \\<Inter> {I. right_ideal I \\<and> T \\<subseteq> I}", "using assms"], ["proof (prove)\nusing this:\n  S \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<Inter> {I. right_ideal I \\<and> S \\<subseteq> I}\n    \\<subseteq> \\<Inter> {I. right_ideal I \\<and> T \\<subseteq> I}", "by auto"], ["", "lemma ideal_generated_subset:\n  assumes \"S \\<subseteq> T\"\n  shows \"ideal_generated S \\<subseteq> ideal_generated T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated S \\<subseteq> ideal_generated T", "unfolding ideal_generated_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Inter> {I. ideal I \\<and> S \\<subseteq> I}\n    \\<subseteq> \\<Inter> {I. ideal I \\<and> T \\<subseteq> I}", "using assms"], ["proof (prove)\nusing this:\n  S \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<Inter> {I. ideal I \\<and> S \\<subseteq> I}\n    \\<subseteq> \\<Inter> {I. ideal I \\<and> T \\<subseteq> I}", "by auto"], ["", "lemma ideal_generated_in:\n  assumes \"a \\<in> A\"\n  shows \"a \\<in> ideal_generated A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> ideal_generated A", "unfolding ideal_generated_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> \\<Inter> {I. ideal I \\<and> A \\<subseteq> I}", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. a \\<in> \\<Inter> {I. ideal I \\<and> A \\<subseteq> I}", "by auto"], ["", "lemma ideal_generated_repeated: \"ideal_generated {a,a} = ideal_generated {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {a, a} = ideal_generated {a}", "unfolding ideal_generated_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Inter> {I. ideal I \\<and> {a, a} \\<subseteq> I} =\n    \\<Inter> {I. ideal I \\<and> {a} \\<subseteq> I}", "by auto"], ["", "end"], ["", "context ring_1\nbegin"], ["", "lemma left_ideal_explicit:\n  \"left_ideal_generated S = {y. \\<exists>f U. finite U \\<and> U \\<subseteq> S \\<and> sum (\\<lambda>i. f i * i) U = y}\" (is \"?S = ?B\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. left_ideal_generated S =\n    {y. \\<exists>f U.\n           finite U \\<and>\n           U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. left_ideal_generated S\n    \\<subseteq> {y. \\<exists>f U.\n                       finite U \\<and>\n                       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n 2. {y. \\<exists>f U.\n           finite U \\<and>\n           U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n    \\<subseteq> left_ideal_generated S", "have S_in_B: \"S \\<subseteq> ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<subseteq> {y. \\<exists>f U.\n                         finite U \\<and>\n                         U \\<subseteq> S \\<and>\n                         (\\<Sum>i\\<in>U. f i * i) = y}", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = x", "assume x: \"x\\<in>S\""], ["proof (state)\nthis:\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = x", "show \"\\<exists>f U. finite U \\<and> U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f U.\n       finite U \\<and> U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = x", "by (rule exI[of _ \"\\<lambda>i. 1\"], rule exI[of _ \"{x}\"], simp add: x)"], ["proof (state)\nthis:\n  \\<exists>f U.\n     finite U \\<and> U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  S \\<subseteq> {y. \\<exists>f U.\n                       finite U \\<and>\n                       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n\ngoal (2 subgoals):\n 1. left_ideal_generated S\n    \\<subseteq> {y. \\<exists>f U.\n                       finite U \\<and>\n                       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n 2. {y. \\<exists>f U.\n           finite U \\<and>\n           U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n    \\<subseteq> left_ideal_generated S", "have left_ideal_B: \"left_ideal ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. left_ideal\n     {y. \\<exists>f U.\n            finite U \\<and>\n            U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}", "proof (unfold left_ideal_def, auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. subgroup\n     {y. \\<exists>f U.\n            finite U \\<and>\n            U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n 2. \\<And>f U r.\n       \\<lbrakk>finite U; U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fa Ua.\n                            finite Ua \\<and>\n                            Ua \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ua. fa i * i) =\n                            r * (\\<Sum>i\\<in>U. f i * i)", "show \"subgroup ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup\n     {y. \\<exists>f U.\n            finite U \\<and>\n            U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}", "proof (unfold subgroup_def, auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<exists>f U.\n       finite U \\<and>\n       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = (0::'a)\n 2. \\<And>f U fa Ua.\n       \\<lbrakk>finite U; U \\<subseteq> S; finite Ua;\n        Ua \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fb Ub.\n                            finite Ub \\<and>\n                            Ub \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ub. fb i * i) =\n                            (\\<Sum>i\\<in>U. f i * i) +\n                            (\\<Sum>i\\<in>Ua. fa i * i)\n 3. \\<And>f U.\n       \\<lbrakk>finite U; U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fa Ua.\n                            finite Ua \\<and>\n                            Ua \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ua. fa i * i) =\n                            - (\\<Sum>i\\<in>U. f i * i)", "show \"\\<exists>f U. finite U \\<and> U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f U.\n       finite U \\<and>\n       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = (0::'a)", "by (rule exI[of _ \"id\"], rule exI[of _ \"{}\"], auto)"], ["proof (state)\nthis:\n  \\<exists>f U.\n     finite U \\<and>\n     U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = (0::'a)\n\ngoal (2 subgoals):\n 1. \\<And>f U fa Ua.\n       \\<lbrakk>finite U; U \\<subseteq> S; finite Ua;\n        Ua \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fb Ub.\n                            finite Ub \\<and>\n                            Ub \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ub. fb i * i) =\n                            (\\<Sum>i\\<in>U. f i * i) +\n                            (\\<Sum>i\\<in>Ua. fa i * i)\n 2. \\<And>f U.\n       \\<lbrakk>finite U; U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fa Ua.\n                            finite Ua \\<and>\n                            Ua \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ua. fa i * i) =\n                            - (\\<Sum>i\\<in>U. f i * i)", "fix f A"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f U fa Ua.\n       \\<lbrakk>finite U; U \\<subseteq> S; finite Ua;\n        Ua \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fb Ub.\n                            finite Ub \\<and>\n                            Ub \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ub. fb i * i) =\n                            (\\<Sum>i\\<in>U. f i * i) +\n                            (\\<Sum>i\\<in>Ua. fa i * i)\n 2. \\<And>f U.\n       \\<lbrakk>finite U; U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fa Ua.\n                            finite Ua \\<and>\n                            Ua \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ua. fa i * i) =\n                            - (\\<Sum>i\\<in>U. f i * i)", "assume A: \"finite A\" and AS: \"A \\<subseteq> S\""], ["proof (state)\nthis:\n  finite A\n  A \\<subseteq> S\n\ngoal (2 subgoals):\n 1. \\<And>f U fa Ua.\n       \\<lbrakk>finite U; U \\<subseteq> S; finite Ua;\n        Ua \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fb Ub.\n                            finite Ub \\<and>\n                            Ub \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ub. fb i * i) =\n                            (\\<Sum>i\\<in>U. f i * i) +\n                            (\\<Sum>i\\<in>Ua. fa i * i)\n 2. \\<And>f U.\n       \\<lbrakk>finite U; U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fa Ua.\n                            finite Ua \\<and>\n                            Ua \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ua. fa i * i) =\n                            - (\\<Sum>i\\<in>U. f i * i)", "show\"\\<exists>fa Ua. finite Ua \\<and> Ua \\<subseteq> S \\<and> (\\<Sum>i\\<in>Ua. fa i * i) = - (\\<Sum>i\\<in>A. f i * i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fa Ua.\n       finite Ua \\<and>\n       Ua \\<subseteq> S \\<and>\n       (\\<Sum>i\\<in>Ua. fa i * i) = - (\\<Sum>i\\<in>A. f i * i)", "by (rule exI[of _ \"\\<lambda>i. - f i\"], rule exI[of _ A],\n            auto simp add: A AS sum_negf[of \"\\<lambda>i. f i * i\" A])"], ["proof (state)\nthis:\n  \\<exists>fa Ua.\n     finite Ua \\<and>\n     Ua \\<subseteq> S \\<and>\n     (\\<Sum>i\\<in>Ua. fa i * i) = - (\\<Sum>i\\<in>A. f i * i)\n\ngoal (1 subgoal):\n 1. \\<And>f U fa Ua.\n       \\<lbrakk>finite U; U \\<subseteq> S; finite Ua;\n        Ua \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fb Ub.\n                            finite Ub \\<and>\n                            Ub \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ub. fb i * i) =\n                            (\\<Sum>i\\<in>U. f i * i) +\n                            (\\<Sum>i\\<in>Ua. fa i * i)", "fix fa B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f U fa Ua.\n       \\<lbrakk>finite U; U \\<subseteq> S; finite Ua;\n        Ua \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fb Ub.\n                            finite Ub \\<and>\n                            Ub \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ub. fb i * i) =\n                            (\\<Sum>i\\<in>U. f i * i) +\n                            (\\<Sum>i\\<in>Ua. fa i * i)", "assume B: \"finite B\" and BS: \"B \\<subseteq> S\""], ["proof (state)\nthis:\n  finite B\n  B \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<And>f U fa Ua.\n       \\<lbrakk>finite U; U \\<subseteq> S; finite Ua;\n        Ua \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fb Ub.\n                            finite Ub \\<and>\n                            Ub \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ub. fb i * i) =\n                            (\\<Sum>i\\<in>U. f i * i) +\n                            (\\<Sum>i\\<in>Ua. fa i * i)", "let ?g=\"\\<lambda>i. if i \\<in> A - B then f i else if i \\<in> B - A then fa i else f i + fa i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f U fa Ua.\n       \\<lbrakk>finite U; U \\<subseteq> S; finite Ua;\n        Ua \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fb Ub.\n                            finite Ub \\<and>\n                            Ub \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ub. fb i * i) =\n                            (\\<Sum>i\\<in>U. f i * i) +\n                            (\\<Sum>i\\<in>Ua. fa i * i)", "show \"\\<exists>fb Ub. finite Ub \\<and> Ub \\<subseteq> S \\<and> (\\<Sum>i\\<in>Ub. fb i * i)\n        = (\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fb Ub.\n       finite Ub \\<and>\n       Ub \\<subseteq> S \\<and>\n       (\\<Sum>i\\<in>Ub. fb i * i) =\n       (\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i)", "proof (rule exI[of _ ?g], rule exI[of _ \"A \\<union> B\"], simp add: A B AS BS)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A \\<union> B.\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i) *\n       i) =\n    (\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i)", "let ?g2 = \"(\\<lambda>i. (if i \\<in> A \\<and> i \\<notin> B then f i else\n          if i \\<in> B - A then fa i else f i + fa i) * i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A \\<union> B.\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i) *\n       i) =\n    (\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i)", "have \"(\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i)\n          = (\\<Sum>i\\<in>A - B. f i * i) + (\\<Sum>i\\<in>B - A. fa i * i) + (\\<Sum>i\\<in>A\\<inter>B. (f i * i) + (fa i * i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i) =\n    (\\<Sum>i\\<in>A - B. f i * i) + (\\<Sum>i\\<in>B - A. fa i * i) +\n    (\\<Sum>i\\<in>A \\<inter> B. f i * i + fa i * i)", "by (rule sum_add[OF A B])"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i) =\n  (\\<Sum>i\\<in>A - B. f i * i) + (\\<Sum>i\\<in>B - A. fa i * i) +\n  (\\<Sum>i\\<in>A \\<inter> B. f i * i + fa i * i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A \\<union> B.\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i) *\n       i) =\n    (\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i) =\n  (\\<Sum>i\\<in>A - B. f i * i) + (\\<Sum>i\\<in>B - A. fa i * i) +\n  (\\<Sum>i\\<in>A \\<inter> B. f i * i + fa i * i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A \\<union> B.\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i) *\n       i) =\n    (\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i)", "have \"... = (\\<Sum>i\\<in>A - B. f i * i) + (\\<Sum>i\\<in>B - A. fa i * i)\n          + (\\<Sum>i\\<in>A \\<inter> B. (f i + fa i) * i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A - B. f i * i) + (\\<Sum>i\\<in>B - A. fa i * i) +\n    (\\<Sum>i\\<in>A \\<inter> B. f i * i + fa i * i) =\n    (\\<Sum>i\\<in>A - B. f i * i) + (\\<Sum>i\\<in>B - A. fa i * i) +\n    (\\<Sum>i\\<in>A \\<inter> B. (f i + fa i) * i)", "by (simp add: distrib_right)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A - B. f i * i) + (\\<Sum>i\\<in>B - A. fa i * i) +\n  (\\<Sum>i\\<in>A \\<inter> B. f i * i + fa i * i) =\n  (\\<Sum>i\\<in>A - B. f i * i) + (\\<Sum>i\\<in>B - A. fa i * i) +\n  (\\<Sum>i\\<in>A \\<inter> B. (f i + fa i) * i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A \\<union> B.\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i) *\n       i) =\n    (\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A - B. f i * i) + (\\<Sum>i\\<in>B - A. fa i * i) +\n  (\\<Sum>i\\<in>A \\<inter> B. f i * i + fa i * i) =\n  (\\<Sum>i\\<in>A - B. f i * i) + (\\<Sum>i\\<in>B - A. fa i * i) +\n  (\\<Sum>i\\<in>A \\<inter> B. (f i + fa i) * i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A \\<union> B.\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i) *\n       i) =\n    (\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i)", "have \"... =  sum ?g2 (A - B) + sum ?g2 (B - A) + sum ?g2 (A \\<inter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A - B. f i * i) + (\\<Sum>i\\<in>B - A. fa i * i) +\n    (\\<Sum>i\\<in>A \\<inter> B. (f i + fa i) * i) =\n    (\\<Sum>i\\<in>A - B.\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i) *\n       i) +\n    (\\<Sum>i\\<in>B - A.\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i) *\n       i) +\n    (\\<Sum>i\\<in>A \\<inter> B.\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i) *\n       i)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A - B. f i * i) + (\\<Sum>i\\<in>B - A. fa i * i) +\n  (\\<Sum>i\\<in>A \\<inter> B. (f i + fa i) * i) =\n  (\\<Sum>i\\<in>A - B.\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i) *\n     i) +\n  (\\<Sum>i\\<in>B - A.\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i) *\n     i) +\n  (\\<Sum>i\\<in>A \\<inter> B.\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i) *\n     i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A \\<union> B.\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i) *\n       i) =\n    (\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A - B. f i * i) + (\\<Sum>i\\<in>B - A. fa i * i) +\n  (\\<Sum>i\\<in>A \\<inter> B. (f i + fa i) * i) =\n  (\\<Sum>i\\<in>A - B.\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i) *\n     i) +\n  (\\<Sum>i\\<in>B - A.\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i) *\n     i) +\n  (\\<Sum>i\\<in>A \\<inter> B.\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i) *\n     i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A \\<union> B.\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i) *\n       i) =\n    (\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i)", "have \"... = sum ?g2 (A \\<union> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A - B.\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i) *\n       i) +\n    (\\<Sum>i\\<in>B - A.\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i) *\n       i) +\n    (\\<Sum>i\\<in>A \\<inter> B.\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i) *\n       i) =\n    (\\<Sum>i\\<in>A \\<union> B.\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i) *\n       i)", "by (rule sum.union_diff2[OF A B, symmetric])"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A - B.\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i) *\n     i) +\n  (\\<Sum>i\\<in>B - A.\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i) *\n     i) +\n  (\\<Sum>i\\<in>A \\<inter> B.\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i) *\n     i) =\n  (\\<Sum>i\\<in>A \\<union> B.\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i) *\n     i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A \\<union> B.\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i) *\n       i) =\n    (\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i) =\n  (\\<Sum>i\\<in>A \\<union> B.\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i) *\n     i)", "show \"sum ?g2 (A \\<union> B) = (\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i)\""], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i) =\n  (\\<Sum>i\\<in>A \\<union> B.\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i) *\n     i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A \\<union> B.\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i) *\n       i) =\n    (\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i)", ".."], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A \\<union> B.\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i) *\n     i) =\n  (\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>fb Ub.\n     finite Ub \\<and>\n     Ub \\<subseteq> S \\<and>\n     (\\<Sum>i\\<in>Ub. fb i * i) =\n     (\\<Sum>i\\<in>A. f i * i) + (\\<Sum>i\\<in>B. fa i * i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subgroup\n   {y. \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n\ngoal (1 subgoal):\n 1. \\<And>f U r.\n       \\<lbrakk>finite U; U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fa Ua.\n                            finite Ua \\<and>\n                            Ua \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ua. fa i * i) =\n                            r * (\\<Sum>i\\<in>U. f i * i)", "fix f U r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f U r.\n       \\<lbrakk>finite U; U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fa Ua.\n                            finite Ua \\<and>\n                            Ua \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ua. fa i * i) =\n                            r * (\\<Sum>i\\<in>U. f i * i)", "assume U: \"finite U\" and U_in_S: \"U \\<subseteq> S\""], ["proof (state)\nthis:\n  finite U\n  U \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<And>f U r.\n       \\<lbrakk>finite U; U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fa Ua.\n                            finite Ua \\<and>\n                            Ua \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ua. fa i * i) =\n                            r * (\\<Sum>i\\<in>U. f i * i)", "show \"\\<exists>fa Ua. finite Ua \\<and> Ua \\<subseteq> S \\<and> (\\<Sum>i\\<in>Ua. fa i * i) = r * (\\<Sum>i\\<in>U. f i * i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fa Ua.\n       finite Ua \\<and>\n       Ua \\<subseteq> S \\<and>\n       (\\<Sum>i\\<in>Ua. fa i * i) = r * (\\<Sum>i\\<in>U. f i * i)", "by (rule exI[of _ \"\\<lambda>i. r * f i\"], rule exI[of _ U])\n    (simp add: U U_in_S sum_distrib_left mult_assoc)"], ["proof (state)\nthis:\n  \\<exists>fa Ua.\n     finite Ua \\<and>\n     Ua \\<subseteq> S \\<and>\n     (\\<Sum>i\\<in>Ua. fa i * i) = r * (\\<Sum>i\\<in>U. f i * i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  left_ideal\n   {y. \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n\ngoal (2 subgoals):\n 1. left_ideal_generated S\n    \\<subseteq> {y. \\<exists>f U.\n                       finite U \\<and>\n                       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n 2. {y. \\<exists>f U.\n           finite U \\<and>\n           U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n    \\<subseteq> left_ideal_generated S", "thus \"?S \\<subseteq> ?B\""], ["proof (prove)\nusing this:\n  left_ideal\n   {y. \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n\ngoal (1 subgoal):\n 1. left_ideal_generated S\n    \\<subseteq> {y. \\<exists>f U.\n                       finite U \\<and>\n                       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}", "using S_in_B"], ["proof (prove)\nusing this:\n  left_ideal\n   {y. \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n  S \\<subseteq> {y. \\<exists>f U.\n                       finite U \\<and>\n                       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n\ngoal (1 subgoal):\n 1. left_ideal_generated S\n    \\<subseteq> {y. \\<exists>f U.\n                       finite U \\<and>\n                       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}", "unfolding left_ideal_generated_def"], ["proof (prove)\nusing this:\n  left_ideal\n   {y. \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n  S \\<subseteq> {y. \\<exists>f U.\n                       finite U \\<and>\n                       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n\ngoal (1 subgoal):\n 1. \\<Inter> {I. left_ideal I \\<and> S \\<subseteq> I}\n    \\<subseteq> {y. \\<exists>f U.\n                       finite U \\<and>\n                       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}", "by auto"], ["proof (state)\nthis:\n  left_ideal_generated S\n  \\<subseteq> {y. \\<exists>f U.\n                     finite U \\<and>\n                     U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n\ngoal (1 subgoal):\n 1. {y. \\<exists>f U.\n           finite U \\<and>\n           U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n    \\<subseteq> left_ideal_generated S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {y. \\<exists>f U.\n           finite U \\<and>\n           U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n    \\<subseteq> left_ideal_generated S", "show \"?B \\<subseteq> ?S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>f U.\n           finite U \\<and>\n           U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n    \\<subseteq> left_ideal_generated S", "proof (unfold left_ideal_generated_def, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X f U.\n       \\<lbrakk>left_ideal X; S \\<subseteq> X; finite U;\n        U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>U. f i * i) \\<in> X", "fix X f U"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X f U.\n       \\<lbrakk>left_ideal X; S \\<subseteq> X; finite U;\n        U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>U. f i * i) \\<in> X", "assume li_X: \"left_ideal X\" and S_X: \"S \\<subseteq> X\" and U: \"finite U\" and U_in_S: \"U \\<subseteq> S\""], ["proof (state)\nthis:\n  left_ideal X\n  S \\<subseteq> X\n  finite U\n  U \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<And>X f U.\n       \\<lbrakk>left_ideal X; S \\<subseteq> X; finite U;\n        U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>U. f i * i) \\<in> X", "have U_in_X: \"U \\<subseteq> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U \\<subseteq> X", "using U_in_S S_X"], ["proof (prove)\nusing this:\n  U \\<subseteq> S\n  S \\<subseteq> X\n\ngoal (1 subgoal):\n 1. U \\<subseteq> X", "by simp"], ["proof (state)\nthis:\n  U \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<And>X f U.\n       \\<lbrakk>left_ideal X; S \\<subseteq> X; finite U;\n        U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>U. f i * i) \\<in> X", "show \"(\\<Sum>i\\<in>U. f i * i) \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>U. f i * i) \\<in> X", "by (rule sum_left_ideal[OF li_X U_in_X U])"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>U. f i * i) \\<in> X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {y. \\<exists>f U.\n         finite U \\<and>\n         U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n  \\<subseteq> left_ideal_generated S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma right_ideal_explicit:\n  \"right_ideal_generated S = {y. \\<exists>f U. finite U \\<and> U \\<subseteq> S \\<and> sum (\\<lambda>i. i * f i) U = y}\" (is \"?S = ?B\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. right_ideal_generated S =\n    {y. \\<exists>f U.\n           finite U \\<and>\n           U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. right_ideal_generated S\n    \\<subseteq> {y. \\<exists>f U.\n                       finite U \\<and>\n                       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}\n 2. {y. \\<exists>f U.\n           finite U \\<and>\n           U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}\n    \\<subseteq> right_ideal_generated S", "have S_in_B: \"S \\<subseteq> ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<subseteq> {y. \\<exists>f U.\n                         finite U \\<and>\n                         U \\<subseteq> S \\<and>\n                         (\\<Sum>i\\<in>U. i * f i) = y}", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = x", "assume x: \"x\\<in>S\""], ["proof (state)\nthis:\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = x", "show \"\\<exists>f U. finite U \\<and> U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f U.\n       finite U \\<and> U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = x", "by (rule exI[of _ \"\\<lambda>i. 1\"], rule exI[of _ \"{x}\"], simp add: x)"], ["proof (state)\nthis:\n  \\<exists>f U.\n     finite U \\<and> U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  S \\<subseteq> {y. \\<exists>f U.\n                       finite U \\<and>\n                       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}\n\ngoal (2 subgoals):\n 1. right_ideal_generated S\n    \\<subseteq> {y. \\<exists>f U.\n                       finite U \\<and>\n                       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}\n 2. {y. \\<exists>f U.\n           finite U \\<and>\n           U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}\n    \\<subseteq> right_ideal_generated S", "have right_ideal_B: \"right_ideal ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. right_ideal\n     {y. \\<exists>f U.\n            finite U \\<and>\n            U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}", "proof (unfold right_ideal_def, auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. subgroup\n     {y. \\<exists>f U.\n            finite U \\<and>\n            U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}\n 2. \\<And>f U r.\n       \\<lbrakk>finite U; U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fa Ua.\n                            finite Ua \\<and>\n                            Ua \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ua. i * fa i) =\n                            (\\<Sum>i\\<in>U. i * f i) * r", "show \"subgroup ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup\n     {y. \\<exists>f U.\n            finite U \\<and>\n            U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}", "proof (unfold subgroup_def, auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<exists>f U.\n       finite U \\<and>\n       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = (0::'a)\n 2. \\<And>f U fa Ua.\n       \\<lbrakk>finite U; U \\<subseteq> S; finite Ua;\n        Ua \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fb Ub.\n                            finite Ub \\<and>\n                            Ub \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ub. i * fb i) =\n                            (\\<Sum>i\\<in>U. i * f i) +\n                            (\\<Sum>i\\<in>Ua. i * fa i)\n 3. \\<And>f U.\n       \\<lbrakk>finite U; U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fa Ua.\n                            finite Ua \\<and>\n                            Ua \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ua. i * fa i) =\n                            - (\\<Sum>i\\<in>U. i * f i)", "show \"\\<exists>f U. finite U \\<and> U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f U.\n       finite U \\<and>\n       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = (0::'a)", "by (rule exI[of _ \"id\"], rule exI[of _ \"{}\"], auto)"], ["proof (state)\nthis:\n  \\<exists>f U.\n     finite U \\<and>\n     U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = (0::'a)\n\ngoal (2 subgoals):\n 1. \\<And>f U fa Ua.\n       \\<lbrakk>finite U; U \\<subseteq> S; finite Ua;\n        Ua \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fb Ub.\n                            finite Ub \\<and>\n                            Ub \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ub. i * fb i) =\n                            (\\<Sum>i\\<in>U. i * f i) +\n                            (\\<Sum>i\\<in>Ua. i * fa i)\n 2. \\<And>f U.\n       \\<lbrakk>finite U; U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fa Ua.\n                            finite Ua \\<and>\n                            Ua \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ua. i * fa i) =\n                            - (\\<Sum>i\\<in>U. i * f i)", "fix f A"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f U fa Ua.\n       \\<lbrakk>finite U; U \\<subseteq> S; finite Ua;\n        Ua \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fb Ub.\n                            finite Ub \\<and>\n                            Ub \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ub. i * fb i) =\n                            (\\<Sum>i\\<in>U. i * f i) +\n                            (\\<Sum>i\\<in>Ua. i * fa i)\n 2. \\<And>f U.\n       \\<lbrakk>finite U; U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fa Ua.\n                            finite Ua \\<and>\n                            Ua \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ua. i * fa i) =\n                            - (\\<Sum>i\\<in>U. i * f i)", "assume A: \"finite A\" and AS: \"A \\<subseteq> S\""], ["proof (state)\nthis:\n  finite A\n  A \\<subseteq> S\n\ngoal (2 subgoals):\n 1. \\<And>f U fa Ua.\n       \\<lbrakk>finite U; U \\<subseteq> S; finite Ua;\n        Ua \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fb Ub.\n                            finite Ub \\<and>\n                            Ub \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ub. i * fb i) =\n                            (\\<Sum>i\\<in>U. i * f i) +\n                            (\\<Sum>i\\<in>Ua. i * fa i)\n 2. \\<And>f U.\n       \\<lbrakk>finite U; U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fa Ua.\n                            finite Ua \\<and>\n                            Ua \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ua. i * fa i) =\n                            - (\\<Sum>i\\<in>U. i * f i)", "show\"\\<exists>fa Ua. finite Ua \\<and> Ua \\<subseteq> S \\<and> (\\<Sum>i\\<in>Ua.  i * fa i) = - (\\<Sum>i\\<in>A.  i * f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fa Ua.\n       finite Ua \\<and>\n       Ua \\<subseteq> S \\<and>\n       (\\<Sum>i\\<in>Ua. i * fa i) = - (\\<Sum>i\\<in>A. i * f i)", "by (rule exI[of _ \"\\<lambda>i. - f i\"], rule exI[of _ A],\n            auto simp add: A AS sum_negf[of \"\\<lambda>i. i * f i\" A])"], ["proof (state)\nthis:\n  \\<exists>fa Ua.\n     finite Ua \\<and>\n     Ua \\<subseteq> S \\<and>\n     (\\<Sum>i\\<in>Ua. i * fa i) = - (\\<Sum>i\\<in>A. i * f i)\n\ngoal (1 subgoal):\n 1. \\<And>f U fa Ua.\n       \\<lbrakk>finite U; U \\<subseteq> S; finite Ua;\n        Ua \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fb Ub.\n                            finite Ub \\<and>\n                            Ub \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ub. i * fb i) =\n                            (\\<Sum>i\\<in>U. i * f i) +\n                            (\\<Sum>i\\<in>Ua. i * fa i)", "fix fa B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f U fa Ua.\n       \\<lbrakk>finite U; U \\<subseteq> S; finite Ua;\n        Ua \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fb Ub.\n                            finite Ub \\<and>\n                            Ub \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ub. i * fb i) =\n                            (\\<Sum>i\\<in>U. i * f i) +\n                            (\\<Sum>i\\<in>Ua. i * fa i)", "assume B: \"finite B\" and BS: \"B \\<subseteq> S\""], ["proof (state)\nthis:\n  finite B\n  B \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<And>f U fa Ua.\n       \\<lbrakk>finite U; U \\<subseteq> S; finite Ua;\n        Ua \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fb Ub.\n                            finite Ub \\<and>\n                            Ub \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ub. i * fb i) =\n                            (\\<Sum>i\\<in>U. i * f i) +\n                            (\\<Sum>i\\<in>Ua. i * fa i)", "let ?g=\"\\<lambda>i. if i \\<in> A - B then f i else if i \\<in> B - A then fa i else f i + fa i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f U fa Ua.\n       \\<lbrakk>finite U; U \\<subseteq> S; finite Ua;\n        Ua \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fb Ub.\n                            finite Ub \\<and>\n                            Ub \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ub. i * fb i) =\n                            (\\<Sum>i\\<in>U. i * f i) +\n                            (\\<Sum>i\\<in>Ua. i * fa i)", "show \"\\<exists>fb Ub. finite Ub \\<and> Ub \\<subseteq> S \\<and> (\\<Sum>i\\<in>Ub. i * fb i)\n        = (\\<Sum>i\\<in>A. i * f i) + (\\<Sum>i\\<in>B. i * fa i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fb Ub.\n       finite Ub \\<and>\n       Ub \\<subseteq> S \\<and>\n       (\\<Sum>i\\<in>Ub. i * fb i) =\n       (\\<Sum>i\\<in>A. i * f i) + (\\<Sum>i\\<in>B. i * fa i)", "proof (rule exI[of _ ?g], rule exI[of _ \"A \\<union> B\"], simp add: A B AS BS)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A \\<union> B.\n       i *\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i)) =\n    (\\<Sum>i\\<in>A. i * f i) + (\\<Sum>i\\<in>B. i * fa i)", "let ?g2 = \"(\\<lambda>i. i * (if i \\<in> A \\<and> i \\<notin> B then f i else\n          if i \\<in> B - A then fa i else f i + fa i))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A \\<union> B.\n       i *\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i)) =\n    (\\<Sum>i\\<in>A. i * f i) + (\\<Sum>i\\<in>B. i * fa i)", "have \"(\\<Sum>i\\<in>A.  i * f i) + (\\<Sum>i\\<in>B.  i * fa i)\n          = (\\<Sum>i\\<in>A - B.  i * f i) + (\\<Sum>i\\<in>B - A.  i * fa i) + (\\<Sum>i\\<in>A\\<inter>B. (i * f i) + (i * fa i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A. i * f i) + (\\<Sum>i\\<in>B. i * fa i) =\n    (\\<Sum>i\\<in>A - B. i * f i) + (\\<Sum>i\\<in>B - A. i * fa i) +\n    (\\<Sum>i\\<in>A \\<inter> B. i * f i + i * fa i)", "by (rule sum_add[OF A B])"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A. i * f i) + (\\<Sum>i\\<in>B. i * fa i) =\n  (\\<Sum>i\\<in>A - B. i * f i) + (\\<Sum>i\\<in>B - A. i * fa i) +\n  (\\<Sum>i\\<in>A \\<inter> B. i * f i + i * fa i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A \\<union> B.\n       i *\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i)) =\n    (\\<Sum>i\\<in>A. i * f i) + (\\<Sum>i\\<in>B. i * fa i)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A. i * f i) + (\\<Sum>i\\<in>B. i * fa i) =\n  (\\<Sum>i\\<in>A - B. i * f i) + (\\<Sum>i\\<in>B - A. i * fa i) +\n  (\\<Sum>i\\<in>A \\<inter> B. i * f i + i * fa i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A \\<union> B.\n       i *\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i)) =\n    (\\<Sum>i\\<in>A. i * f i) + (\\<Sum>i\\<in>B. i * fa i)", "have \"... = (\\<Sum>i\\<in>A - B. i * f i) + (\\<Sum>i\\<in>B - A.  i * fa i)\n          + (\\<Sum>i\\<in>A \\<inter> B. i * (f i + fa i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A - B. i * f i) + (\\<Sum>i\\<in>B - A. i * fa i) +\n    (\\<Sum>i\\<in>A \\<inter> B. i * f i + i * fa i) =\n    (\\<Sum>i\\<in>A - B. i * f i) + (\\<Sum>i\\<in>B - A. i * fa i) +\n    (\\<Sum>i\\<in>A \\<inter> B. i * (f i + fa i))", "by (simp add: distrib_left)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A - B. i * f i) + (\\<Sum>i\\<in>B - A. i * fa i) +\n  (\\<Sum>i\\<in>A \\<inter> B. i * f i + i * fa i) =\n  (\\<Sum>i\\<in>A - B. i * f i) + (\\<Sum>i\\<in>B - A. i * fa i) +\n  (\\<Sum>i\\<in>A \\<inter> B. i * (f i + fa i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A \\<union> B.\n       i *\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i)) =\n    (\\<Sum>i\\<in>A. i * f i) + (\\<Sum>i\\<in>B. i * fa i)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A - B. i * f i) + (\\<Sum>i\\<in>B - A. i * fa i) +\n  (\\<Sum>i\\<in>A \\<inter> B. i * f i + i * fa i) =\n  (\\<Sum>i\\<in>A - B. i * f i) + (\\<Sum>i\\<in>B - A. i * fa i) +\n  (\\<Sum>i\\<in>A \\<inter> B. i * (f i + fa i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A \\<union> B.\n       i *\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i)) =\n    (\\<Sum>i\\<in>A. i * f i) + (\\<Sum>i\\<in>B. i * fa i)", "have \"... =  sum ?g2 (A - B) + sum ?g2 (B - A) + sum ?g2 (A \\<inter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A - B. i * f i) + (\\<Sum>i\\<in>B - A. i * fa i) +\n    (\\<Sum>i\\<in>A \\<inter> B. i * (f i + fa i)) =\n    (\\<Sum>i\\<in>A - B.\n       i *\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i)) +\n    (\\<Sum>i\\<in>B - A.\n       i *\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i)) +\n    (\\<Sum>i\\<in>A \\<inter> B.\n       i *\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A - B. i * f i) + (\\<Sum>i\\<in>B - A. i * fa i) +\n  (\\<Sum>i\\<in>A \\<inter> B. i * (f i + fa i)) =\n  (\\<Sum>i\\<in>A - B.\n     i *\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i)) +\n  (\\<Sum>i\\<in>B - A.\n     i *\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i)) +\n  (\\<Sum>i\\<in>A \\<inter> B.\n     i *\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A \\<union> B.\n       i *\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i)) =\n    (\\<Sum>i\\<in>A. i * f i) + (\\<Sum>i\\<in>B. i * fa i)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A - B. i * f i) + (\\<Sum>i\\<in>B - A. i * fa i) +\n  (\\<Sum>i\\<in>A \\<inter> B. i * (f i + fa i)) =\n  (\\<Sum>i\\<in>A - B.\n     i *\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i)) +\n  (\\<Sum>i\\<in>B - A.\n     i *\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i)) +\n  (\\<Sum>i\\<in>A \\<inter> B.\n     i *\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A \\<union> B.\n       i *\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i)) =\n    (\\<Sum>i\\<in>A. i * f i) + (\\<Sum>i\\<in>B. i * fa i)", "have \"... = sum ?g2 (A \\<union> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A - B.\n       i *\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i)) +\n    (\\<Sum>i\\<in>B - A.\n       i *\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i)) +\n    (\\<Sum>i\\<in>A \\<inter> B.\n       i *\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i)) =\n    (\\<Sum>i\\<in>A \\<union> B.\n       i *\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i))", "by (rule sum.union_diff2[OF A B, symmetric])"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A - B.\n     i *\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i)) +\n  (\\<Sum>i\\<in>B - A.\n     i *\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i)) +\n  (\\<Sum>i\\<in>A \\<inter> B.\n     i *\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i)) =\n  (\\<Sum>i\\<in>A \\<union> B.\n     i *\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A \\<union> B.\n       i *\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i)) =\n    (\\<Sum>i\\<in>A. i * f i) + (\\<Sum>i\\<in>B. i * fa i)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>i\\<in>A. i * f i) + (\\<Sum>i\\<in>B. i * fa i) =\n  (\\<Sum>i\\<in>A \\<union> B.\n     i *\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i))", "show \"sum ?g2 (A \\<union> B) = (\\<Sum>i\\<in>A. i * f i) + (\\<Sum>i\\<in>B. i * fa i)\""], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>A. i * f i) + (\\<Sum>i\\<in>B. i * fa i) =\n  (\\<Sum>i\\<in>A \\<union> B.\n     i *\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A \\<union> B.\n       i *\n       (if i \\<in> A \\<and> i \\<notin> B then f i\n        else if i \\<in> B - A then fa i else f i + fa i)) =\n    (\\<Sum>i\\<in>A. i * f i) + (\\<Sum>i\\<in>B. i * fa i)", ".."], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A \\<union> B.\n     i *\n     (if i \\<in> A \\<and> i \\<notin> B then f i\n      else if i \\<in> B - A then fa i else f i + fa i)) =\n  (\\<Sum>i\\<in>A. i * f i) + (\\<Sum>i\\<in>B. i * fa i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>fb Ub.\n     finite Ub \\<and>\n     Ub \\<subseteq> S \\<and>\n     (\\<Sum>i\\<in>Ub. i * fb i) =\n     (\\<Sum>i\\<in>A. i * f i) + (\\<Sum>i\\<in>B. i * fa i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subgroup\n   {y. \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}\n\ngoal (1 subgoal):\n 1. \\<And>f U r.\n       \\<lbrakk>finite U; U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fa Ua.\n                            finite Ua \\<and>\n                            Ua \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ua. i * fa i) =\n                            (\\<Sum>i\\<in>U. i * f i) * r", "fix f U r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f U r.\n       \\<lbrakk>finite U; U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fa Ua.\n                            finite Ua \\<and>\n                            Ua \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ua. i * fa i) =\n                            (\\<Sum>i\\<in>U. i * f i) * r", "assume U: \"finite U\" and U_in_S: \"U \\<subseteq> S\""], ["proof (state)\nthis:\n  finite U\n  U \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<And>f U r.\n       \\<lbrakk>finite U; U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fa Ua.\n                            finite Ua \\<and>\n                            Ua \\<subseteq> S \\<and>\n                            (\\<Sum>i\\<in>Ua. i * fa i) =\n                            (\\<Sum>i\\<in>U. i * f i) * r", "show \"\\<exists>fa Ua. finite Ua \\<and> Ua \\<subseteq> S \\<and> (\\<Sum>i\\<in>Ua. i * fa i) = (\\<Sum>i\\<in>U. i * f i) * r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fa Ua.\n       finite Ua \\<and>\n       Ua \\<subseteq> S \\<and>\n       (\\<Sum>i\\<in>Ua. i * fa i) = (\\<Sum>i\\<in>U. i * f i) * r", "by (rule exI[of _ \"\\<lambda>i. f i * r\"], rule exI[of _ U])\n    (simp add: U U_in_S sum_distrib_right mult_assoc)"], ["proof (state)\nthis:\n  \\<exists>fa Ua.\n     finite Ua \\<and>\n     Ua \\<subseteq> S \\<and>\n     (\\<Sum>i\\<in>Ua. i * fa i) = (\\<Sum>i\\<in>U. i * f i) * r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  right_ideal\n   {y. \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}\n\ngoal (2 subgoals):\n 1. right_ideal_generated S\n    \\<subseteq> {y. \\<exists>f U.\n                       finite U \\<and>\n                       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}\n 2. {y. \\<exists>f U.\n           finite U \\<and>\n           U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}\n    \\<subseteq> right_ideal_generated S", "thus \"?S \\<subseteq> ?B\""], ["proof (prove)\nusing this:\n  right_ideal\n   {y. \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}\n\ngoal (1 subgoal):\n 1. right_ideal_generated S\n    \\<subseteq> {y. \\<exists>f U.\n                       finite U \\<and>\n                       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}", "using S_in_B"], ["proof (prove)\nusing this:\n  right_ideal\n   {y. \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}\n  S \\<subseteq> {y. \\<exists>f U.\n                       finite U \\<and>\n                       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}\n\ngoal (1 subgoal):\n 1. right_ideal_generated S\n    \\<subseteq> {y. \\<exists>f U.\n                       finite U \\<and>\n                       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}", "unfolding right_ideal_generated_def"], ["proof (prove)\nusing this:\n  right_ideal\n   {y. \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}\n  S \\<subseteq> {y. \\<exists>f U.\n                       finite U \\<and>\n                       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}\n\ngoal (1 subgoal):\n 1. \\<Inter> {I. right_ideal I \\<and> S \\<subseteq> I}\n    \\<subseteq> {y. \\<exists>f U.\n                       finite U \\<and>\n                       U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}", "by auto"], ["proof (state)\nthis:\n  right_ideal_generated S\n  \\<subseteq> {y. \\<exists>f U.\n                     finite U \\<and>\n                     U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}\n\ngoal (1 subgoal):\n 1. {y. \\<exists>f U.\n           finite U \\<and>\n           U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}\n    \\<subseteq> right_ideal_generated S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {y. \\<exists>f U.\n           finite U \\<and>\n           U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}\n    \\<subseteq> right_ideal_generated S", "show \"?B \\<subseteq> ?S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>f U.\n           finite U \\<and>\n           U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}\n    \\<subseteq> right_ideal_generated S", "proof (unfold right_ideal_generated_def, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X f U.\n       \\<lbrakk>right_ideal X; S \\<subseteq> X; finite U;\n        U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>U. i * f i) \\<in> X", "fix X f U"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X f U.\n       \\<lbrakk>right_ideal X; S \\<subseteq> X; finite U;\n        U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>U. i * f i) \\<in> X", "assume li_X: \"right_ideal X\" and S_X: \"S \\<subseteq> X\" and U: \"finite U\" and U_in_S: \"U \\<subseteq> S\""], ["proof (state)\nthis:\n  right_ideal X\n  S \\<subseteq> X\n  finite U\n  U \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<And>X f U.\n       \\<lbrakk>right_ideal X; S \\<subseteq> X; finite U;\n        U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>U. i * f i) \\<in> X", "have U_in_X: \"U \\<subseteq> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U \\<subseteq> X", "using U_in_S S_X"], ["proof (prove)\nusing this:\n  U \\<subseteq> S\n  S \\<subseteq> X\n\ngoal (1 subgoal):\n 1. U \\<subseteq> X", "by simp"], ["proof (state)\nthis:\n  U \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<And>X f U.\n       \\<lbrakk>right_ideal X; S \\<subseteq> X; finite U;\n        U \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i\\<in>U. i * f i) \\<in> X", "show \"(\\<Sum>i\\<in>U. i * f i) \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>U. i * f i) \\<in> X", "by (rule sum_right_ideal[OF li_X U_in_X U])"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>U. i * f i) \\<in> X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {y. \\<exists>f U.\n         finite U \\<and>\n         U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. i * f i) = y}\n  \\<subseteq> right_ideal_generated S\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context comm_ring\nbegin"], ["", "lemma left_ideal_eq_right_ideal: \"left_ideal I = right_ideal I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. left_ideal I = right_ideal I", "unfolding left_ideal_def right_ideal_def subgroup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (((0::'a) \\<in> I \\<and>\n      (\\<forall>a\\<in>I. \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n      (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n     (\\<forall>x\\<in>I. \\<forall>r. r * x \\<in> I)) =\n    (((0::'a) \\<in> I \\<and>\n      (\\<forall>a\\<in>I. \\<forall>b\\<in>I. a + b \\<in> I) \\<and>\n      (\\<forall>a\\<in>I. - a \\<in> I)) \\<and>\n     (\\<forall>x\\<in>I. \\<forall>r. x * r \\<in> I))", "by auto (metis mult_commute)+"], ["", "corollary ideal_eq_left_ideal: \"ideal I = left_ideal I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal I = left_ideal I", "by (metis ideal_def left_ideal_eq_right_ideal)"], ["", "lemma ideal_eq_right_ideal: \"ideal I = right_ideal I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal I = right_ideal I", "by (metis ideal_def left_ideal_eq_right_ideal)"], ["", "lemma principal_ideal_eq_left:\n  \"principal_ideal S = (\\<exists>a. left_ideal_generated {a} = S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. principal_ideal S = (\\<exists>a. left_ideal_generated {a} = S)", "unfolding principal_ideal_def ideal_generated_def left_ideal_generated_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a. \\<Inter> {I. ideal I \\<and> {a} \\<subseteq> I} = S) =\n    (\\<exists>a. \\<Inter> {I. left_ideal I \\<and> {a} \\<subseteq> I} = S)", "unfolding ideal_eq_left_ideal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a. \\<Inter> {I. left_ideal I \\<and> {a} \\<subseteq> I} = S) =\n    (\\<exists>a. \\<Inter> {I. left_ideal I \\<and> {a} \\<subseteq> I} = S)", ".."], ["", "end"], ["", "context comm_ring_1\nbegin"], ["", "lemma ideal_generated_eq_left_ideal: \"ideal_generated A = left_ideal_generated A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated A = left_ideal_generated A", "unfolding ideal_generated_def ideal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Inter>\n     {I. (left_ideal I \\<and> right_ideal I) \\<and> A \\<subseteq> I} =\n    left_ideal_generated A", "by (metis (no_types, lifting) Collect_cong left_ideal_eq_right_ideal left_ideal_generated_def)"], ["", "lemma ideal_generated_eq_right_ideal: \"ideal_generated A = right_ideal_generated A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated A = right_ideal_generated A", "unfolding ideal_generated_def ideal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Inter>\n     {I. (left_ideal I \\<and> right_ideal I) \\<and> A \\<subseteq> I} =\n    right_ideal_generated A", "by (metis (no_types, lifting) Collect_cong left_ideal_eq_right_ideal right_ideal_generated_def)"], ["", "lemma obtain_sum_ideal_generated:\n  assumes a: \"a \\<in> ideal_generated A\" and A: \"finite A\"\n  obtains f where \"sum (\\<lambda>i. f i * i) A = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>A. f i * i) = a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>A. f i * i) = a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "obtain g U where g: \"sum (\\<lambda>i. g i * i) U = a\" and UA: \"U \\<subseteq> A\" and U: \"finite U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g U.\n        \\<lbrakk>(\\<Sum>i\\<in>U. g i * i) = a; U \\<subseteq> A;\n         finite U\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using a"], ["proof (prove)\nusing this:\n  a \\<in> ideal_generated A\n\ngoal (1 subgoal):\n 1. (\\<And>g U.\n        \\<lbrakk>(\\<Sum>i\\<in>U. g i * i) = a; U \\<subseteq> A;\n         finite U\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding ideal_generated_eq_left_ideal"], ["proof (prove)\nusing this:\n  a \\<in> left_ideal_generated A\n\ngoal (1 subgoal):\n 1. (\\<And>g U.\n        \\<lbrakk>(\\<Sum>i\\<in>U. g i * i) = a; U \\<subseteq> A;\n         finite U\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding left_ideal_explicit"], ["proof (prove)\nusing this:\n  a \\<in> {y. \\<exists>f U.\n                 finite U \\<and>\n                 U \\<subseteq> A \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n\ngoal (1 subgoal):\n 1. (\\<And>g U.\n        \\<lbrakk>(\\<Sum>i\\<in>U. g i * i) = a; U \\<subseteq> A;\n         finite U\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>U. g i * i) = a\n  U \\<subseteq> A\n  finite U\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>A. f i * i) = a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "let ?f=\"\\<lambda>i. if i \\<in> A - U then 0 else g i\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>A. f i * i) = a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have A_union: \"A = (A - U) \\<union> U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = A - U \\<union> U", "using UA"], ["proof (prove)\nusing this:\n  U \\<subseteq> A\n\ngoal (1 subgoal):\n 1. A = A - U \\<union> U", "by auto"], ["proof (state)\nthis:\n  A = A - U \\<union> U\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>A. f i * i) = a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"sum (\\<lambda>i. ?f i * i) A = sum (\\<lambda>i. ?f i * i) ((A - U) \\<union> U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A. (if i \\<in> A - U then 0::'a else g i) * i) =\n    (\\<Sum>i\\<in>A - U \\<union> U.\n       (if i \\<in> A - U then 0::'a else g i) * i)", "using A_union"], ["proof (prove)\nusing this:\n  A = A - U \\<union> U\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A. (if i \\<in> A - U then 0::'a else g i) * i) =\n    (\\<Sum>i\\<in>A - U \\<union> U.\n       (if i \\<in> A - U then 0::'a else g i) * i)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A. (if i \\<in> A - U then 0::'a else g i) * i) =\n  (\\<Sum>i\\<in>A - U \\<union> U. (if i \\<in> A - U then 0::'a else g i) * i)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>A. f i * i) = a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A. (if i \\<in> A - U then 0::'a else g i) * i) =\n  (\\<Sum>i\\<in>A - U \\<union> U. (if i \\<in> A - U then 0::'a else g i) * i)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>A. f i * i) = a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"... = sum (\\<lambda>i. ?f i * i) (A - U) + sum (\\<lambda>i. ?f i * i) U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A - U \\<union> U.\n       (if i \\<in> A - U then 0::'a else g i) * i) =\n    (\\<Sum>i\\<in>A - U. (if i \\<in> A - U then 0::'a else g i) * i) +\n    (\\<Sum>i\\<in>U. (if i \\<in> A - U then 0::'a else g i) * i)", "by (rule sum.union_disjoint[OF _ U], auto simp add: A U UA)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A - U \\<union> U.\n     (if i \\<in> A - U then 0::'a else g i) * i) =\n  (\\<Sum>i\\<in>A - U. (if i \\<in> A - U then 0::'a else g i) * i) +\n  (\\<Sum>i\\<in>U. (if i \\<in> A - U then 0::'a else g i) * i)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>A. f i * i) = a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A - U \\<union> U.\n     (if i \\<in> A - U then 0::'a else g i) * i) =\n  (\\<Sum>i\\<in>A - U. (if i \\<in> A - U then 0::'a else g i) * i) +\n  (\\<Sum>i\\<in>U. (if i \\<in> A - U then 0::'a else g i) * i)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>A. f i * i) = a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"... = sum (\\<lambda>i. ?f i * i) U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A - U. (if i \\<in> A - U then 0::'a else g i) * i) +\n    (\\<Sum>i\\<in>U. (if i \\<in> A - U then 0::'a else g i) * i) =\n    (\\<Sum>i\\<in>U. (if i \\<in> A - U then 0::'a else g i) * i)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A - U. (if i \\<in> A - U then 0::'a else g i) * i) +\n  (\\<Sum>i\\<in>U. (if i \\<in> A - U then 0::'a else g i) * i) =\n  (\\<Sum>i\\<in>U. (if i \\<in> A - U then 0::'a else g i) * i)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>A. f i * i) = a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A - U. (if i \\<in> A - U then 0::'a else g i) * i) +\n  (\\<Sum>i\\<in>U. (if i \\<in> A - U then 0::'a else g i) * i) =\n  (\\<Sum>i\\<in>U. (if i \\<in> A - U then 0::'a else g i) * i)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>A. f i * i) = a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"... = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>U. (if i \\<in> A - U then 0::'a else g i) * i) = a", "using g"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>U. g i * i) = a\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>U. (if i \\<in> A - U then 0::'a else g i) * i) = a", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>U. (if i \\<in> A - U then 0::'a else g i) * i) = a\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>A. f i * i) = a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>i\\<in>A. (if i \\<in> A - U then 0::'a else g i) * i) = a", "have \"sum (\\<lambda>i. ?f i * i) A = a\""], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>A. (if i \\<in> A - U then 0::'a else g i) * i) = a\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A. (if i \\<in> A - U then 0::'a else g i) * i) = a", "."], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>A. (if i \\<in> A - U then 0::'a else g i) * i) = a\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>A. f i * i) = a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "with that"], ["proof (chain)\npicking this:\n  (\\<Sum>i\\<in>A. ?f1 i * i) = a \\<Longrightarrow> thesis\n  (\\<Sum>i\\<in>A. (if i \\<in> A - U then 0::'a else g i) * i) = a", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>A. ?f1 i * i) = a \\<Longrightarrow> thesis\n  (\\<Sum>i\\<in>A. (if i \\<in> A - U then 0::'a else g i) * i) = a\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dvd_ideal_generated_singleton:\n  assumes subset: \"ideal_generated {a} \\<subseteq> ideal_generated {b}\"\n  shows \"b dvd a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b dvd a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b dvd a", "have \"a \\<in> ideal_generated {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> ideal_generated {a}", "by (simp add: ideal_generated_in)"], ["proof (state)\nthis:\n  a \\<in> ideal_generated {a}\n\ngoal (1 subgoal):\n 1. b dvd a", "hence a: \"a \\<in> ideal_generated {b}\""], ["proof (prove)\nusing this:\n  a \\<in> ideal_generated {a}\n\ngoal (1 subgoal):\n 1. a \\<in> ideal_generated {b}", "by (metis subset subsetCE)"], ["proof (state)\nthis:\n  a \\<in> ideal_generated {b}\n\ngoal (1 subgoal):\n 1. b dvd a", "obtain f where \"sum (\\<lambda>i. f i * i) {b} = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>{b}. f i * i) = a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule obtain_sum_ideal_generated[OF a], simp)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{b}. f i * i) = a\n\ngoal (1 subgoal):\n 1. b dvd a", "hence fb_b_a: \"f b * b = a\""], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{b}. f i * i) = a\n\ngoal (1 subgoal):\n 1. f b * b = a", "unfolding sum_singleton"], ["proof (prove)\nusing this:\n  f b * b = a\n\ngoal (1 subgoal):\n 1. f b * b = a", "."], ["proof (state)\nthis:\n  f b * b = a\n\ngoal (1 subgoal):\n 1. b dvd a", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. b dvd a", "unfolding dvd_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. a = b * k", "by (rule exI[of _ \"f b\"], metis fb_b_a mult_commute)"], ["proof (state)\nthis:\n  b dvd a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ideal_generated_singleton: \"ideal_generated {a} = {k*a|k. k \\<in> UNIV}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {a} = {k * a |k. k \\<in> UNIV}", "proof (auto simp add: ideal_generated_eq_left_ideal left_ideal_explicit)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f U.\n       \\<lbrakk>finite U; U \\<subseteq> {a}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. (\\<Sum>i\\<in>U. f i * i) = k * a\n 2. \\<And>k.\n       \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> {a} \\<and> (\\<Sum>i\\<in>U. f i * i) = k * a", "fix f U"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f U.\n       \\<lbrakk>finite U; U \\<subseteq> {a}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. (\\<Sum>i\\<in>U. f i * i) = k * a\n 2. \\<And>k.\n       \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> {a} \\<and> (\\<Sum>i\\<in>U. f i * i) = k * a", "assume U: \"finite U\" and U_in_a: \"U \\<subseteq> {a}\""], ["proof (state)\nthis:\n  finite U\n  U \\<subseteq> {a}\n\ngoal (2 subgoals):\n 1. \\<And>f U.\n       \\<lbrakk>finite U; U \\<subseteq> {a}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. (\\<Sum>i\\<in>U. f i * i) = k * a\n 2. \\<And>k.\n       \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> {a} \\<and> (\\<Sum>i\\<in>U. f i * i) = k * a", "show \"\\<exists>k. (\\<Sum>i\\<in>U. f i * i) = k * a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. (\\<Sum>i\\<in>U. f i * i) = k * a", "proof (cases \"U={}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. U = {} \\<Longrightarrow> \\<exists>k. (\\<Sum>i\\<in>U. f i * i) = k * a\n 2. U \\<noteq> {} \\<Longrightarrow>\n    \\<exists>k. (\\<Sum>i\\<in>U. f i * i) = k * a", "case True"], ["proof (state)\nthis:\n  U = {}\n\ngoal (2 subgoals):\n 1. U = {} \\<Longrightarrow> \\<exists>k. (\\<Sum>i\\<in>U. f i * i) = k * a\n 2. U \\<noteq> {} \\<Longrightarrow>\n    \\<exists>k. (\\<Sum>i\\<in>U. f i * i) = k * a", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. (\\<Sum>i\\<in>U. f i * i) = k * a", "by (rule exI[of _ 0], simp add: True)"], ["proof (state)\nthis:\n  \\<exists>k. (\\<Sum>i\\<in>U. f i * i) = k * a\n\ngoal (1 subgoal):\n 1. U \\<noteq> {} \\<Longrightarrow>\n    \\<exists>k. (\\<Sum>i\\<in>U. f i * i) = k * a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. U \\<noteq> {} \\<Longrightarrow>\n    \\<exists>k. (\\<Sum>i\\<in>U. f i * i) = k * a", "case False"], ["proof (state)\nthis:\n  U \\<noteq> {}\n\ngoal (1 subgoal):\n 1. U \\<noteq> {} \\<Longrightarrow>\n    \\<exists>k. (\\<Sum>i\\<in>U. f i * i) = k * a", "hence Ua: \"U = {a}\""], ["proof (prove)\nusing this:\n  U \\<noteq> {}\n\ngoal (1 subgoal):\n 1. U = {a}", "using U_in_a"], ["proof (prove)\nusing this:\n  U \\<noteq> {}\n  U \\<subseteq> {a}\n\ngoal (1 subgoal):\n 1. U = {a}", "by auto"], ["proof (state)\nthis:\n  U = {a}\n\ngoal (1 subgoal):\n 1. U \\<noteq> {} \\<Longrightarrow>\n    \\<exists>k. (\\<Sum>i\\<in>U. f i * i) = k * a", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. (\\<Sum>i\\<in>U. f i * i) = k * a", "by (rule exI[of _ \"f a\"]) (simp add: Ua sum_singleton)"], ["proof (state)\nthis:\n  \\<exists>k. (\\<Sum>i\\<in>U. f i * i) = k * a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>k. (\\<Sum>i\\<in>U. f i * i) = k * a\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> {a} \\<and> (\\<Sum>i\\<in>U. f i * i) = k * a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> {a} \\<and> (\\<Sum>i\\<in>U. f i * i) = k * a", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<exists>f U.\n          finite U \\<and>\n          U \\<subseteq> {a} \\<and> (\\<Sum>i\\<in>U. f i * i) = k * a", "show \" \\<exists>f U. finite U \\<and> U \\<subseteq> {a} \\<and> (\\<Sum>i\\<in>U. f i * i) = k * a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f U.\n       finite U \\<and>\n       U \\<subseteq> {a} \\<and> (\\<Sum>i\\<in>U. f i * i) = k * a", "by (rule exI[of _ \"\\<lambda>i. k\"], rule exI[of _ \"{a}\"], simp)"], ["proof (state)\nthis:\n  \\<exists>f U.\n     finite U \\<and>\n     U \\<subseteq> {a} \\<and> (\\<Sum>i\\<in>U. f i * i) = k * a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dvd_ideal_generated_singleton':\n  assumes b_dvd_a: \"b dvd a\"\n  shows \"ideal_generated {a} \\<subseteq> ideal_generated {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {a} \\<subseteq> ideal_generated {b}", "apply (simp only: ideal_generated_singleton)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {k * a |k. k \\<in> UNIV} \\<subseteq> {k * b |k. k \\<in> UNIV}", "using assms"], ["proof (prove)\nusing this:\n  b dvd a\n\ngoal (1 subgoal):\n 1. {k * a |k. k \\<in> UNIV} \\<subseteq> {k * b |k. k \\<in> UNIV}", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. a = b * k\n\ngoal (1 subgoal):\n 1. {k * a |k. k \\<in> UNIV} \\<subseteq> {k * b |k. k \\<in> UNIV}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k ka.\n       a = b * k \\<Longrightarrow> \\<exists>kb. ka * (b * k) = kb * b", "apply (simp_all only: mult_commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k ka.\n       a = k * b \\<Longrightarrow> \\<exists>kb. ka * (k * b) = kb * b", "unfolding mult_assoc[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k ka. a = k * b \\<Longrightarrow> \\<exists>kb. ka * k * b = kb * b", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ideal_generated_subset2:\n  assumes ac: \"ideal_generated {a} \\<subseteq> ideal_generated {c}\"\n  and bc: \"ideal_generated {b} \\<subseteq> ideal_generated {c}\"\n  shows \"ideal_generated {a,b} \\<subseteq> ideal_generated {c}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {a, b} \\<subseteq> ideal_generated {c}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated {a, b} \\<Longrightarrow>\n       x \\<in> ideal_generated {c}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated {a, b} \\<Longrightarrow>\n       x \\<in> ideal_generated {c}", "assume x: \"x \\<in> ideal_generated {a, b}\""], ["proof (state)\nthis:\n  x \\<in> ideal_generated {a, b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated {a, b} \\<Longrightarrow>\n       x \\<in> ideal_generated {c}", "show \" x \\<in> ideal_generated {c}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {c}", "proof (cases \"a=b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow> x \\<in> ideal_generated {c}\n 2. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {c}", "case True"], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow> x \\<in> ideal_generated {c}\n 2. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {c}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {c}", "using x bc"], ["proof (prove)\nusing this:\n  x \\<in> ideal_generated {a, b}\n  ideal_generated {b} \\<subseteq> ideal_generated {c}\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {c}", "unfolding True ideal_generated_repeated"], ["proof (prove)\nusing this:\n  x \\<in> ideal_generated {b}\n  ideal_generated {b} \\<subseteq> ideal_generated {c}\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {c}", "by fast"], ["proof (state)\nthis:\n  x \\<in> ideal_generated {c}\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {c}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {c}", "case False"], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {c}", "obtain k where k: \"a = c * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k. a = c * k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using dvd_ideal_generated_singleton[OF ac]"], ["proof (prove)\nusing this:\n  c dvd a\n\ngoal (1 subgoal):\n 1. (\\<And>k. a = c * k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. a = c * k\n\ngoal (1 subgoal):\n 1. (\\<And>k. a = c * k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  a = c * k\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {c}", "obtain k' where k': \"b = c * k'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k'. b = c * k' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using dvd_ideal_generated_singleton[OF bc]"], ["proof (prove)\nusing this:\n  c dvd b\n\ngoal (1 subgoal):\n 1. (\\<And>k'. b = c * k' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. b = c * k\n\ngoal (1 subgoal):\n 1. (\\<And>k'. b = c * k' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  b = c * k'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {c}", "obtain f where f: \"sum (\\<lambda>i. f i * i) {a,b} = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>{a, b}. f i * i) = x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule obtain_sum_ideal_generated[OF x], simp)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{a, b}. f i * i) = x\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {c}", "hence \"x = f a * a + f b * b \""], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{a, b}. f i * i) = x\n\ngoal (1 subgoal):\n 1. x = f a * a + f b * b", "unfolding sum_two_elements[OF False]"], ["proof (prove)\nusing this:\n  f a * a + f b * b = x\n\ngoal (1 subgoal):\n 1. x = f a * a + f b * b", "by simp"], ["proof (state)\nthis:\n  x = f a * a + f b * b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {c}", "also"], ["proof (state)\nthis:\n  x = f a * a + f b * b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {c}", "have \"... = f a * (c * k) + f b * (c * k')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a * a + f b * b = f a * (c * k) + f b * (c * k')", "unfolding k k'"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (c * k) * (c * k) + f (c * k') * (c * k') =\n    f (c * k) * (c * k) + f (c * k') * (c * k')", "by simp"], ["proof (state)\nthis:\n  f a * a + f b * b = f a * (c * k) + f b * (c * k')\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {c}", "also"], ["proof (state)\nthis:\n  f a * a + f b * b = f a * (c * k) + f b * (c * k')\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {c}", "have \"... = (f a * k) * c + (f b * k') * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a * (c * k) + f b * (c * k') = f a * k * c + f b * k' * c", "by (simp only: mult_assoc) (simp only: mult_commute)"], ["proof (state)\nthis:\n  f a * (c * k) + f b * (c * k') = f a * k * c + f b * k' * c\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {c}", "also"], ["proof (state)\nthis:\n  f a * (c * k) + f b * (c * k') = f a * k * c + f b * k' * c\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {c}", "have \"... = (f a * k +  f b * k') * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a * k * c + f b * k' * c = (f a * k + f b * k') * c", "by (simp only: mult_commute) (simp only: distrib_left)"], ["proof (state)\nthis:\n  f a * k * c + f b * k' * c = (f a * k + f b * k') * c\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {c}", "finally"], ["proof (chain)\npicking this:\n  x = (f a * k + f b * k') * c", "have \"x = (f a * k + f b * k') * c\""], ["proof (prove)\nusing this:\n  x = (f a * k + f b * k') * c\n\ngoal (1 subgoal):\n 1. x = (f a * k + f b * k') * c", "."], ["proof (state)\nthis:\n  x = (f a * k + f b * k') * c\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {c}", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = (f a * k + f b * k') * c\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {c}", "unfolding ideal_generated_singleton"], ["proof (prove)\nusing this:\n  x = (f a * k + f b * k') * c\n\ngoal (1 subgoal):\n 1. x \\<in> {k * c |k. k \\<in> UNIV}", "by auto"], ["proof (state)\nthis:\n  x \\<in> ideal_generated {c}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> ideal_generated {c}\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma ideal_kZ: \"ideal {k*x|x. x\\<in>(UNIV::int set)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal {k * x |x. x \\<in> UNIV}", "unfolding ideal_def left_ideal_def right_ideal_def subgroup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((0 \\<in> {k * x |x. x \\<in> UNIV} \\<and>\n      (\\<forall>a\\<in>{k * x |x. x \\<in> UNIV}.\n          \\<forall>b\\<in>{k * x |x. x \\<in> UNIV}.\n             a + b \\<in> {k * x |x. x \\<in> UNIV}) \\<and>\n      (\\<forall>a\\<in>{k * x |x. x \\<in> UNIV}.\n          - a \\<in> {k * x |x. x \\<in> UNIV})) \\<and>\n     (\\<forall>x\\<in>{k * x |x. x \\<in> UNIV}.\n         \\<forall>r. r * x \\<in> {k * x |x. x \\<in> UNIV})) \\<and>\n    (0 \\<in> {k * x |x. x \\<in> UNIV} \\<and>\n     (\\<forall>a\\<in>{k * x |x. x \\<in> UNIV}.\n         \\<forall>b\\<in>{k * x |x. x \\<in> UNIV}.\n            a + b \\<in> {k * x |x. x \\<in> UNIV}) \\<and>\n     (\\<forall>a\\<in>{k * x |x. x \\<in> UNIV}.\n         - a \\<in> {k * x |x. x \\<in> UNIV})) \\<and>\n    (\\<forall>x\\<in>{k * x |x. x \\<in> UNIV}.\n        \\<forall>r. x * r \\<in> {k * x |x. x \\<in> UNIV})", "apply auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x xa. \\<exists>xb. k * x + k * xa = k * xb\n 2. \\<And>x. \\<exists>xa. - (k * x) = k * xa\n 3. \\<And>x xa. \\<exists>xb. k * x + k * xa = k * xb\n 4. \\<And>x. \\<exists>xa. - (k * x) = k * xa", "apply (metis int_distrib(2))"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x. \\<exists>xa. - (k * x) = k * xa\n 2. \\<And>x xa. \\<exists>xb. k * x + k * xa = k * xb\n 3. \\<And>x. \\<exists>xa. - (k * x) = k * xa", "apply (metis minus_mult_right)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa. \\<exists>xb. k * x + k * xa = k * xb\n 2. \\<And>x. \\<exists>xa. - (k * x) = k * xa", "apply (metis int_distrib(2))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. \\<exists>xa. - (k * x) = k * xa", "apply (metis minus_mult_right)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection\\<open>GCD Rings and Bezout Domains\\<close>"], ["", "text\\<open>To define GCD rings and Bezout rings, there are at least two options:\nfix the operation gcd or just assume its existence. We have chosen the second one in order to be\nable to use subclasses (if we fix a gcd in the bezout ring class, then we couln't prove that\nprincipal ideal rings are a subclass of bezout rings).\\<close>"], ["", "class GCD_ring = comm_ring_1\n  + assumes exists_gcd: \"\\<exists>d. d dvd a \\<and> d dvd b \\<and> (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)\"\nbegin"], ["", "text\\<open>In this structure, there is always a gcd for each pair of elements, but maybe not unique.\nThe following definition essentially says if a function satisfies the condition to be a gcd.\\<close>"], ["", "definition is_gcd :: \"('a \\<Rightarrow> 'a \\<Rightarrow> 'a) \\<Rightarrow> bool\"\n  where \"is_gcd (gcd') = (\\<forall>a b. (gcd' a b dvd a)\n                          \\<and> (gcd' a b dvd b)\n                          \\<and> (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd gcd' a b))\""], ["", "lemma gcd'_dvd1:\n  assumes \"is_gcd gcd'\" shows \"gcd' a b dvd a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd' a b dvd a", "using assms"], ["proof (prove)\nusing this:\n  is_gcd gcd'\n\ngoal (1 subgoal):\n 1. gcd' a b dvd a", "unfolding is_gcd_def"], ["proof (prove)\nusing this:\n  \\<forall>a b.\n     gcd' a b dvd a \\<and>\n     gcd' a b dvd b \\<and>\n     (\\<forall>d'.\n         d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd gcd' a b)\n\ngoal (1 subgoal):\n 1. gcd' a b dvd a", "by auto"], ["", "lemma gcd'_dvd2:\n  assumes \"is_gcd gcd'\" shows \"gcd' a b dvd b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd' a b dvd b", "using assms"], ["proof (prove)\nusing this:\n  is_gcd gcd'\n\ngoal (1 subgoal):\n 1. gcd' a b dvd b", "unfolding is_gcd_def"], ["proof (prove)\nusing this:\n  \\<forall>a b.\n     gcd' a b dvd a \\<and>\n     gcd' a b dvd b \\<and>\n     (\\<forall>d'.\n         d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd gcd' a b)\n\ngoal (1 subgoal):\n 1. gcd' a b dvd b", "by auto"], ["", "lemma gcd'_greatest:\n  assumes \"is_gcd gcd'\" and \"l dvd a\" and \"l dvd b\"\n  shows \"l dvd gcd' a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l dvd gcd' a b", "using assms"], ["proof (prove)\nusing this:\n  is_gcd gcd'\n  l dvd a\n  l dvd b\n\ngoal (1 subgoal):\n 1. l dvd gcd' a b", "unfolding is_gcd_def"], ["proof (prove)\nusing this:\n  \\<forall>a b.\n     gcd' a b dvd a \\<and>\n     gcd' a b dvd b \\<and>\n     (\\<forall>d'.\n         d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd gcd' a b)\n  l dvd a\n  l dvd b\n\ngoal (1 subgoal):\n 1. l dvd gcd' a b", "by auto"], ["", "lemma gcd'_zero [simp]:\n  assumes \"is_gcd gcd'\"\n  shows \"gcd' x y = 0 \\<longleftrightarrow> x = 0 \\<and> y = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (gcd' x y = (0::'a)) = (x = (0::'a) \\<and> y = (0::'a))", "by (metis dvd_0_left dvd_refl gcd'_dvd1 gcd'_dvd2 gcd'_greatest assms)+"], ["", "end"], ["", "class GCD_domain = GCD_ring + idom"], ["", "class bezout_ring = comm_ring_1 +\n        assumes exists_bezout: \"\\<exists>p q d. (p*a + q*b = d)\n                    \\<and> (d dvd a)\n                    \\<and> (d dvd b)\n                    \\<and> (\\<forall>d'. (d' dvd a \\<and> d' dvd b) \\<longrightarrow> d' dvd d)\"\nbegin"], ["", "subclass GCD_ring"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.GCD_ring (*) (1::'a) (+) (0::'a) (-) uminus", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>d.\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>d.\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "show \"\\<exists>d. d dvd a \\<and> d dvd b \\<and> (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>d.\n       d dvd a \\<and>\n       d dvd b \\<and>\n       (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "using exists_bezout[of a b]"], ["proof (prove)\nusing this:\n  \\<exists>p q d.\n     p * a + q * b = d \\<and>\n     d dvd a \\<and>\n     d dvd b \\<and>\n     (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)\n\ngoal (1 subgoal):\n 1. \\<exists>d.\n       d dvd a \\<and>\n       d dvd b \\<and>\n       (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "by auto"], ["proof (state)\nthis:\n  \\<exists>d.\n     d dvd a \\<and>\n     d dvd b \\<and>\n     (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>In this structure, there is always a bezout decomposition for each pair of elements, but it is\nnot unique. The following definition essentially says if a function satisfies the condition to be a\nbezout decomposition.\\<close>"], ["", "definition is_bezout :: \"('a \\<Rightarrow>'a \\<Rightarrow> ('a \\<times> 'a \\<times> 'a)) \\<Rightarrow> bool\"\n  where \"is_bezout (bezout) = (\\<forall>a b. let (p, q, gcd_a_b) = bezout a b\n                                      in\n                                        p * a + q * b = gcd_a_b\n                                        \\<and> (gcd_a_b dvd a)\n                                        \\<and> (gcd_a_b dvd b)\n                                        \\<and> (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd gcd_a_b))\""], ["", "text\\<open>The following definition is similar to the previous one, and checks if the input is a\nfunction that given two parameters \\<open>a b\\<close> returns 5 elements \\<open>(p,q,u,v,d)\\<close>\nwhere \\<open>d\\<close> is a gcd of \\<open>a\\<close> and \\<open>b\\<close>, \\<open>p\\<close> and \\<open>q\\<close> are the\nbezout coefficients such that \\<open>p*a+q*b=d\\<close>, \\<open>d*u = -b\\<close> and \\<open>d*v= a\\<close>.\nThe elements \\<open>u\\<close> and \\<open>v\\<close> are useful for defining the bezout matrix.\\<close>"], ["", "definition is_bezout_ext :: \"('a \\<Rightarrow>'a \\<Rightarrow> ('a \\<times> 'a \\<times> 'a \\<times> 'a \\<times> 'a)) \\<Rightarrow> bool\"\n  where \"is_bezout_ext (bezout) = (\\<forall>a b. let (p, q, u, v, gcd_a_b) = bezout a b\n                                          in\n                                            p * a + q * b = gcd_a_b\n                                            \\<and> (gcd_a_b dvd a)\n                                            \\<and> (gcd_a_b dvd b)\n                                            \\<and> (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd gcd_a_b)\n                                            \\<and> gcd_a_b * u = -b\n                                            \\<and> gcd_a_b * v = a)\""], ["", "lemma is_gcd_is_bezout_ext:\n  assumes \"is_bezout_ext bezout\"\n  shows \"is_gcd (\\<lambda>a b. case bezout a b of (x, xa,u,v, gcd') \\<Rightarrow> gcd')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_gcd\n     (\\<lambda>a b.\n         case bezout a b of (x, xa, u, v, gcd') \\<Rightarrow> gcd')", "unfolding is_gcd_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       (case bezout a b of (x, xaa, u, v, gcd') \\<Rightarrow> gcd') dvd\n       a \\<and>\n       (case bezout a b of (x, xaa, u, v, gcd') \\<Rightarrow> gcd') dvd\n       b \\<and>\n       (\\<forall>d'.\n           d' dvd a \\<and> d' dvd b \\<longrightarrow>\n           d' dvd\n           (case bezout a b of (x, xaa, u, v, gcd') \\<Rightarrow> gcd'))", "using assms"], ["proof (prove)\nusing this:\n  is_bezout_ext bezout\n\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       (case bezout a b of (x, xaa, u, v, gcd') \\<Rightarrow> gcd') dvd\n       a \\<and>\n       (case bezout a b of (x, xaa, u, v, gcd') \\<Rightarrow> gcd') dvd\n       b \\<and>\n       (\\<forall>d'.\n           d' dvd a \\<and> d' dvd b \\<longrightarrow>\n           d' dvd\n           (case bezout a b of (x, xaa, u, v, gcd') \\<Rightarrow> gcd'))", "unfolding is_bezout_ext_def Let_def"], ["proof (prove)\nusing this:\n  \\<forall>a b.\n     case bezout a b of\n     (p, q, u, v, gcd_a_b) \\<Rightarrow>\n       p * a + q * b = gcd_a_b \\<and>\n       gcd_a_b dvd a \\<and>\n       gcd_a_b dvd b \\<and>\n       (\\<forall>d'.\n           d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd gcd_a_b) \\<and>\n       gcd_a_b * u = - b \\<and> gcd_a_b * v = a\n\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       (case bezout a b of (x, xaa, u, v, gcd') \\<Rightarrow> gcd') dvd\n       a \\<and>\n       (case bezout a b of (x, xaa, u, v, gcd') \\<Rightarrow> gcd') dvd\n       b \\<and>\n       (\\<forall>d'.\n           d' dvd a \\<and> d' dvd b \\<longrightarrow>\n           d' dvd\n           (case bezout a b of (x, xaa, u, v, gcd') \\<Rightarrow> gcd'))", "by (simp add: split_beta)"], ["", "lemma is_bezout_ext_is_bezout:\n  assumes \"is_bezout_ext bezout\"\n  shows \"is_bezout (\\<lambda>a b. case bezout a b of (x,xa,u,v, gcd') \\<Rightarrow> (x,xa,gcd'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_bezout\n     (\\<lambda>a b.\n         case bezout a b of (x, xa, u, v, gcd') \\<Rightarrow> (x, xa, gcd'))", "unfolding is_bezout_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       let (p, q, gcd_a_b) =\n             case bezout a b of\n             (x, xaa, u, v, gcd') \\<Rightarrow> (x, xaa, gcd')\n       in p * a + q * b = gcd_a_b \\<and>\n          gcd_a_b dvd a \\<and>\n          gcd_a_b dvd b \\<and>\n          (\\<forall>d'.\n              d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd gcd_a_b)", "using assms"], ["proof (prove)\nusing this:\n  is_bezout_ext bezout\n\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       let (p, q, gcd_a_b) =\n             case bezout a b of\n             (x, xaa, u, v, gcd') \\<Rightarrow> (x, xaa, gcd')\n       in p * a + q * b = gcd_a_b \\<and>\n          gcd_a_b dvd a \\<and>\n          gcd_a_b dvd b \\<and>\n          (\\<forall>d'.\n              d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd gcd_a_b)", "unfolding is_bezout_ext_def Let_def"], ["proof (prove)\nusing this:\n  \\<forall>a b.\n     case bezout a b of\n     (p, q, u, v, gcd_a_b) \\<Rightarrow>\n       p * a + q * b = gcd_a_b \\<and>\n       gcd_a_b dvd a \\<and>\n       gcd_a_b dvd b \\<and>\n       (\\<forall>d'.\n           d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd gcd_a_b) \\<and>\n       gcd_a_b * u = - b \\<and> gcd_a_b * v = a\n\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       case case bezout a b of\n            (x, xaa, u, v, gcd') \\<Rightarrow> (x, xaa, gcd') of\n       (p, q, gcd_a_b) \\<Rightarrow>\n         p * a + q * b = gcd_a_b \\<and>\n         gcd_a_b dvd a \\<and>\n         gcd_a_b dvd b \\<and>\n         (\\<forall>d'.\n             d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd gcd_a_b)", "by (simp add: split_beta)"], ["", "lemma is_gcd_is_bezout:\n  assumes \"is_bezout bezout\"\n  shows \"is_gcd (\\<lambda>a b. (case bezout a b of (_, _, gcd') \\<Rightarrow> (gcd')))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_gcd\n     (\\<lambda>a b. case bezout a b of (x, xa, gcd') \\<Rightarrow> gcd')", "unfolding is_gcd_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       (case bezout a b of (x, xaa, gcd') \\<Rightarrow> gcd') dvd a \\<and>\n       (case bezout a b of (x, xaa, gcd') \\<Rightarrow> gcd') dvd b \\<and>\n       (\\<forall>d'.\n           d' dvd a \\<and> d' dvd b \\<longrightarrow>\n           d' dvd (case bezout a b of (x, xaa, gcd') \\<Rightarrow> gcd'))", "using assms"], ["proof (prove)\nusing this:\n  is_bezout bezout\n\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       (case bezout a b of (x, xaa, gcd') \\<Rightarrow> gcd') dvd a \\<and>\n       (case bezout a b of (x, xaa, gcd') \\<Rightarrow> gcd') dvd b \\<and>\n       (\\<forall>d'.\n           d' dvd a \\<and> d' dvd b \\<longrightarrow>\n           d' dvd (case bezout a b of (x, xaa, gcd') \\<Rightarrow> gcd'))", "unfolding is_bezout_def Let_def"], ["proof (prove)\nusing this:\n  \\<forall>a b.\n     case bezout a b of\n     (p, q, gcd_a_b) \\<Rightarrow>\n       p * a + q * b = gcd_a_b \\<and>\n       gcd_a_b dvd a \\<and>\n       gcd_a_b dvd b \\<and>\n       (\\<forall>d'.\n           d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd gcd_a_b)\n\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       (case bezout a b of (x, xaa, gcd') \\<Rightarrow> gcd') dvd a \\<and>\n       (case bezout a b of (x, xaa, gcd') \\<Rightarrow> gcd') dvd b \\<and>\n       (\\<forall>d'.\n           d' dvd a \\<and> d' dvd b \\<longrightarrow>\n           d' dvd (case bezout a b of (x, xaa, gcd') \\<Rightarrow> gcd'))", "by (simp add: split_beta)"], ["", "text\\<open>The assumptions of the Bezout rings say that there exists a bezout operation.\n  Now we will show that there also exists an operation satisfying \\<open>is_bezout_ext\\<close>\\<close>"], ["", "lemma exists_bezout_ext_aux:\n  fixes a and b\n  shows \"\\<exists>p q u v d. (p * a + q * b = d)\n                    \\<and> (d dvd a)\n                    \\<and> (d dvd b)\n                    \\<and> (\\<forall>d'. (d' dvd a \\<and> d' dvd b) \\<longrightarrow> d' dvd d) \\<and> d * u = -b \\<and> d * v = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p q u v d.\n       p * a + q * b = d \\<and>\n       d dvd a \\<and>\n       d dvd b \\<and>\n       (\\<forall>d'.\n           d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d) \\<and>\n       d * u = - b \\<and> d * v = a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p q u v d.\n       p * a + q * b = d \\<and>\n       d dvd a \\<and>\n       d dvd b \\<and>\n       (\\<forall>d'.\n           d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d) \\<and>\n       d * u = - b \\<and> d * v = a", "obtain p q d where prems01: \"(p * a + q * b = d)\n                    \\<and> (d dvd a)\n                    \\<and> (d dvd b)\n                    \\<and> (\\<forall>d'. (d' dvd a \\<and> d' dvd b) \\<longrightarrow> d' dvd d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p q d.\n        p * a + q * b = d \\<and>\n        d dvd a \\<and>\n        d dvd b \\<and>\n        (\\<forall>d'.\n            d' dvd a \\<and> d' dvd b \\<longrightarrow>\n            d' dvd d) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using exists_bezout [of a b]"], ["proof (prove)\nusing this:\n  \\<exists>p q d.\n     p * a + q * b = d \\<and>\n     d dvd a \\<and>\n     d dvd b \\<and>\n     (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)\n\ngoal (1 subgoal):\n 1. (\\<And>p q d.\n        p * a + q * b = d \\<and>\n        d dvd a \\<and>\n        d dvd b \\<and>\n        (\\<forall>d'.\n            d' dvd a \\<and> d' dvd b \\<longrightarrow>\n            d' dvd d) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  p * a + q * b = d \\<and>\n  d dvd a \\<and>\n  d dvd b \\<and>\n  (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)\n\ngoal (1 subgoal):\n 1. \\<exists>p q u v d.\n       p * a + q * b = d \\<and>\n       d dvd a \\<and>\n       d dvd b \\<and>\n       (\\<forall>d'.\n           d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d) \\<and>\n       d * u = - b \\<and> d * v = a", "hence db: \"d dvd b\" and da: \"d dvd a\""], ["proof (prove)\nusing this:\n  p * a + q * b = d \\<and>\n  d dvd a \\<and>\n  d dvd b \\<and>\n  (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)\n\ngoal (1 subgoal):\n 1. d dvd b &&& d dvd a", "by blast+"], ["proof (state)\nthis:\n  d dvd b\n  d dvd a\n\ngoal (1 subgoal):\n 1. \\<exists>p q u v d.\n       p * a + q * b = d \\<and>\n       d dvd a \\<and>\n       d dvd b \\<and>\n       (\\<forall>d'.\n           d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d) \\<and>\n       d * u = - b \\<and> d * v = a", "obtain u v where prems02: \"d * u = -b\" and prems03: \"d * v = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>d * u = - b; d * v = a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using db and da"], ["proof (prove)\nusing this:\n  d dvd b\n  d dvd a\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>d * u = - b; d * v = a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis local.dvdE local.minus_mult_right)"], ["proof (state)\nthis:\n  d * u = - b\n  d * v = a\n\ngoal (1 subgoal):\n 1. \\<exists>p q u v d.\n       p * a + q * b = d \\<and>\n       d dvd a \\<and>\n       d dvd b \\<and>\n       (\\<forall>d'.\n           d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d) \\<and>\n       d * u = - b \\<and> d * v = a", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p q u v d.\n       p * a + q * b = d \\<and>\n       d dvd a \\<and>\n       d dvd b \\<and>\n       (\\<forall>d'.\n           d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d) \\<and>\n       d * u = - b \\<and> d * v = a", "using exI [of _ \"(p,q,u,v,d)\"] prems01 prems02 prems03"], ["proof (prove)\nusing this:\n  ?P (p, q, u, v, d) \\<Longrightarrow> \\<exists>x. ?P x\n  p * a + q * b = d \\<and>\n  d dvd a \\<and>\n  d dvd b \\<and>\n  (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)\n  d * u = - b\n  d * v = a\n\ngoal (1 subgoal):\n 1. \\<exists>p q u v d.\n       p * a + q * b = d \\<and>\n       d dvd a \\<and>\n       d dvd b \\<and>\n       (\\<forall>d'.\n           d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d) \\<and>\n       d * u = - b \\<and> d * v = a", "by metis"], ["proof (state)\nthis:\n  \\<exists>p q u v d.\n     p * a + q * b = d \\<and>\n     d dvd a \\<and>\n     d dvd b \\<and>\n     (\\<forall>d'.\n         d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d) \\<and>\n     d * u = - b \\<and> d * v = a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma exists_bezout_ext: \"\\<exists>bezout_ext. is_bezout_ext bezout_ext\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>bezout_ext. is_bezout_ext bezout_ext", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>bezout_ext. is_bezout_ext bezout_ext", "define bezout_ext where \"bezout_ext a b = (SOME (p,q,u,v,d). p * a + q * b = d\n    \\<and> (d dvd a) \\<and> (d dvd b) \\<and> (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d) \\<and> d * u = -b \\<and> d * v = a)\"\n    for a b"], ["proof (state)\nthis:\n  bezout_ext ?a ?b =\n  (SOME (p, q, u, v, d).\n      p * ?a + q * ?b = d \\<and>\n      d dvd ?a \\<and>\n      d dvd ?b \\<and>\n      (\\<forall>d'.\n          d' dvd ?a \\<and> d' dvd ?b \\<longrightarrow> d' dvd d) \\<and>\n      d * u = - ?b \\<and> d * v = ?a)\n\ngoal (1 subgoal):\n 1. \\<exists>bezout_ext. is_bezout_ext bezout_ext", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>bezout_ext. is_bezout_ext bezout_ext", "proof (rule exI [of _ bezout_ext], unfold is_bezout_ext_def, rule+)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       let (p, q, u, v, gcd_a_b) = bezout_ext a b\n       in p * a + q * b = gcd_a_b \\<and>\n          gcd_a_b dvd a \\<and>\n          gcd_a_b dvd b \\<and>\n          (\\<forall>d'.\n              d' dvd a \\<and> d' dvd b \\<longrightarrow>\n              d' dvd gcd_a_b) \\<and>\n          gcd_a_b * u = - b \\<and> gcd_a_b * v = a", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       let (p, q, u, v, gcd_a_b) = bezout_ext a b\n       in p * a + q * b = gcd_a_b \\<and>\n          gcd_a_b dvd a \\<and>\n          gcd_a_b dvd b \\<and>\n          (\\<forall>d'.\n              d' dvd a \\<and> d' dvd b \\<longrightarrow>\n              d' dvd gcd_a_b) \\<and>\n          gcd_a_b * u = - b \\<and> gcd_a_b * v = a", "obtain p q u v d where foo: \"p * a + q * b = d \\<and>\n              d dvd a \\<and>\n              d dvd b \\<and>\n              (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d) \\<and>\n              d * u = - b \\<and> d * v = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p q d u v.\n        p * a + q * b = d \\<and>\n        d dvd a \\<and>\n        d dvd b \\<and>\n        (\\<forall>d'.\n            d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d) \\<and>\n        d * u = - b \\<and> d * v = a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using exists_bezout_ext_aux [of a b]"], ["proof (prove)\nusing this:\n  \\<exists>p q u v d.\n     p * a + q * b = d \\<and>\n     d dvd a \\<and>\n     d dvd b \\<and>\n     (\\<forall>d'.\n         d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d) \\<and>\n     d * u = - b \\<and> d * v = a\n\ngoal (1 subgoal):\n 1. (\\<And>p q d u v.\n        p * a + q * b = d \\<and>\n        d dvd a \\<and>\n        d dvd b \\<and>\n        (\\<forall>d'.\n            d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d) \\<and>\n        d * u = - b \\<and> d * v = a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  p * a + q * b = d \\<and>\n  d dvd a \\<and>\n  d dvd b \\<and>\n  (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d) \\<and>\n  d * u = - b \\<and> d * v = a\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       let (p, q, u, v, gcd_a_b) = bezout_ext a b\n       in p * a + q * b = gcd_a_b \\<and>\n          gcd_a_b dvd a \\<and>\n          gcd_a_b dvd b \\<and>\n          (\\<forall>d'.\n              d' dvd a \\<and> d' dvd b \\<longrightarrow>\n              d' dvd gcd_a_b) \\<and>\n          gcd_a_b * u = - b \\<and> gcd_a_b * v = a", "show \"let (p, q, u, v, gcd_a_b) = bezout_ext a b\n           in p * a + q * b = gcd_a_b \\<and>\n              gcd_a_b dvd a \\<and>\n              gcd_a_b dvd b \\<and>\n              (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd gcd_a_b) \\<and>\n              gcd_a_b * u = - b \\<and> gcd_a_b * v = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. let (p, q, u, v, gcd_a_b) = bezout_ext a b\n    in p * a + q * b = gcd_a_b \\<and>\n       gcd_a_b dvd a \\<and>\n       gcd_a_b dvd b \\<and>\n       (\\<forall>d'.\n           d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd gcd_a_b) \\<and>\n       gcd_a_b * u = - b \\<and> gcd_a_b * v = a", "by (unfold bezout_ext_def Let_def, rule someI [of _ \"(p,q,u,v,d)\"], clarify, rule foo)"], ["proof (state)\nthis:\n  let (p, q, u, v, gcd_a_b) = bezout_ext a b\n  in p * a + q * b = gcd_a_b \\<and>\n     gcd_a_b dvd a \\<and>\n     gcd_a_b dvd b \\<and>\n     (\\<forall>d'.\n         d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd gcd_a_b) \\<and>\n     gcd_a_b * u = - b \\<and> gcd_a_b * v = a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>bezout_ext. is_bezout_ext bezout_ext\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "class bezout_domain = bezout_ring + idom"], ["", "subclass (in bezout_domain) GCD_domain"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.GCD_domain (*) (1::'a) (+) (0::'a) (-) uminus", "proof"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "class bezout_ring_div = bezout_ring + euclidean_semiring"], ["", "class bezout_domain_div = bezout_domain + euclidean_semiring"], ["", "subclass (in bezout_ring_div) bezout_domain_div"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.bezout_domain_div (div) (+) (-) (0::'a) (*) (1::'a) (mod)\n     euclidean_size uminus", "proof"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Principal Ideal Domains\\<close>"], ["", "class pir = comm_ring_1 + assumes all_ideal_is_principal: \"ideal I \\<Longrightarrow> principal_ideal I\""], ["", "class pid = idom + pir"], ["", "text\\<open>Thanks to the following proof, we will show that there exist bezout and gcd operations\nin principal ideal rings for each pair of elements.\\<close>"], ["", "subclass (in pir) bezout_ring"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.bezout_ring (*) (1::'a) (+) (0::'a) (-) uminus", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "define S where \"S = ideal_generated {a,b}\""], ["proof (state)\nthis:\n  S = ideal_generated {a, b}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "have ideal_S: \"ideal S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal S", "using ideal_ideal_generated"], ["proof (prove)\nusing this:\n  ideal (ideal_generated ?S)\n\ngoal (1 subgoal):\n 1. ideal S", "unfolding S_def"], ["proof (prove)\nusing this:\n  ideal (ideal_generated ?S)\n\ngoal (1 subgoal):\n 1. ideal (ideal_generated {a, b})", "by simp"], ["proof (state)\nthis:\n  ideal S\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "obtain d where d: \"ideal_generated {d} = S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d.\n        ideal_generated {d} = S \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using all_ideal_is_principal[OF ideal_S]"], ["proof (prove)\nusing this:\n  principal_ideal S\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        ideal_generated {d} = S \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding principal_ideal_def"], ["proof (prove)\nusing this:\n  \\<exists>a. ideal_generated {a} = S\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        ideal_generated {d} = S \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ideal_generated {d} = S\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "have ideal_d: \"ideal (ideal_generated {d})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal (ideal_generated {d})", "using ideal_ideal_generated"], ["proof (prove)\nusing this:\n  ideal (ideal_generated ?S)\n\ngoal (1 subgoal):\n 1. ideal (ideal_generated {d})", "by simp"], ["proof (state)\nthis:\n  ideal (ideal_generated {d})\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "have a_subset_d: \"ideal_generated {a} \\<subseteq> ideal_generated {d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {a} \\<subseteq> ideal_generated {d}", "by (metis S_def d insertI1 ideal_generated_subset singletonD subsetI)"], ["proof (state)\nthis:\n  ideal_generated {a} \\<subseteq> ideal_generated {d}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "have b_subset_d: \"ideal_generated {b} \\<subseteq> ideal_generated {d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {b} \\<subseteq> ideal_generated {d}", "by (metis S_def d insert_iff ideal_generated_subset subsetI)"], ["proof (state)\nthis:\n  ideal_generated {b} \\<subseteq> ideal_generated {d}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "have d_in_S: \"d \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<in> S", "by (metis d insert_subset ideal_generated_subset_generator)"], ["proof (state)\nthis:\n  d \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "obtain f U where U: \"U \\<subseteq> {a,b}\" and f: \"sum (\\<lambda>i. f i * i) U = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>U f.\n        \\<lbrakk>U \\<subseteq> {a, b}; (\\<Sum>i\\<in>U. f i * i) = d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using left_ideal_explicit[of \"{a,b}\"] d_in_S"], ["proof (prove)\nusing this:\n  left_ideal_generated {a, b} =\n  {y. \\<exists>f U.\n         finite U \\<and>\n         U \\<subseteq> {a, b} \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n  d \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>U f.\n        \\<lbrakk>U \\<subseteq> {a, b}; (\\<Sum>i\\<in>U. f i * i) = d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding S_def ideal_generated_eq_left_ideal"], ["proof (prove)\nusing this:\n  left_ideal_generated {a, b} =\n  {y. \\<exists>f U.\n         finite U \\<and>\n         U \\<subseteq> {a, b} \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\n  d \\<in> left_ideal_generated {a, b}\n\ngoal (1 subgoal):\n 1. (\\<And>U f.\n        \\<lbrakk>U \\<subseteq> {a, b}; (\\<Sum>i\\<in>U. f i * i) = d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  U \\<subseteq> {a, b}\n  (\\<Sum>i\\<in>U. f i * i) = d\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "define g where \"g i = (if i \\<in> U then f i else 0)\" for i"], ["proof (state)\nthis:\n  g ?i = (if ?i \\<in> U then f ?i else (0::'a))\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "show \"\\<exists>p q d. p * a + q * b = d \\<and> d dvd a \\<and> d dvd b \\<and> (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p q d.\n       p * a + q * b = d \\<and>\n       d dvd a \\<and>\n       d dvd b \\<and>\n       (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "proof (cases \"a = b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>p q d.\n       p * a + q * b = d \\<and>\n       d dvd a \\<and>\n       d dvd b \\<and>\n       (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>p q d.\n       p * a + q * b = d \\<and>\n       d dvd a \\<and>\n       d dvd b \\<and>\n       (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "case True"], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>p q d.\n       p * a + q * b = d \\<and>\n       d dvd a \\<and>\n       d dvd b \\<and>\n       (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>p q d.\n       p * a + q * b = d \\<and>\n       d dvd a \\<and>\n       d dvd b \\<and>\n       (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p q d.\n       p * a + q * b = d \\<and>\n       d dvd a \\<and>\n       d dvd b \\<and>\n       (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "proof (rule exI[of _ \"g a\"], rule exI[of _ \"0\"], rule exI[of _ d], auto)"], ["proof (state)\ngoal (4 subgoals):\n 1. g a * a = d\n 2. d dvd a\n 3. d dvd b\n 4. \\<And>d'.\n       \\<lbrakk>d' dvd a; d' dvd b\\<rbrakk> \\<Longrightarrow> d' dvd d", "show ga_a_d: \"g a * a = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g a * a = d", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if a \\<in> U then f a else (0::'a)) * a = d", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<in> U \\<Longrightarrow> f a * a = d\n 2. a \\<notin> U \\<Longrightarrow> (0::'a) = d", "assume \"a \\<in> U\""], ["proof (state)\nthis:\n  a \\<in> U\n\ngoal (2 subgoals):\n 1. a \\<in> U \\<Longrightarrow> f a * a = d\n 2. a \\<notin> U \\<Longrightarrow> (0::'a) = d", "hence Ua: \"U = {a}\""], ["proof (prove)\nusing this:\n  a \\<in> U\n\ngoal (1 subgoal):\n 1. U = {a}", "using U True"], ["proof (prove)\nusing this:\n  a \\<in> U\n  U \\<subseteq> {a, b}\n  a = b\n\ngoal (1 subgoal):\n 1. U = {a}", "by auto"], ["proof (state)\nthis:\n  U = {a}\n\ngoal (2 subgoals):\n 1. a \\<in> U \\<Longrightarrow> f a * a = d\n 2. a \\<notin> U \\<Longrightarrow> (0::'a) = d", "show \"f a * a = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a * a = d", "using f"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>U. f i * i) = d\n\ngoal (1 subgoal):\n 1. f a * a = d", "unfolding Ua"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{a}. f i * i) = d\n\ngoal (1 subgoal):\n 1. f a * a = d", "unfolding sum_singleton"], ["proof (prove)\nusing this:\n  f a * a = d\n\ngoal (1 subgoal):\n 1. f a * a = d", "."], ["proof (state)\nthis:\n  f a * a = d\n\ngoal (1 subgoal):\n 1. a \\<notin> U \\<Longrightarrow> (0::'a) = d", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<notin> U \\<Longrightarrow> (0::'a) = d", "assume \"a \\<notin> U\""], ["proof (state)\nthis:\n  a \\<notin> U\n\ngoal (1 subgoal):\n 1. a \\<notin> U \\<Longrightarrow> (0::'a) = d", "hence U_empty: \"U = {}\""], ["proof (prove)\nusing this:\n  a \\<notin> U\n\ngoal (1 subgoal):\n 1. U = {}", "using U True"], ["proof (prove)\nusing this:\n  a \\<notin> U\n  U \\<subseteq> {a, b}\n  a = b\n\ngoal (1 subgoal):\n 1. U = {}", "by auto"], ["proof (state)\nthis:\n  U = {}\n\ngoal (1 subgoal):\n 1. a \\<notin> U \\<Longrightarrow> (0::'a) = d", "show \"0 = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) = d", "using f"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>U. f i * i) = d\n\ngoal (1 subgoal):\n 1. (0::'a) = d", "unfolding U_empty"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{}. f i * i) = d\n\ngoal (1 subgoal):\n 1. (0::'a) = d", "by auto"], ["proof (state)\nthis:\n  (0::'a) = d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g a * a = d\n\ngoal (3 subgoals):\n 1. d dvd a\n 2. d dvd b\n 3. \\<And>d'.\n       \\<lbrakk>d' dvd a; d' dvd b\\<rbrakk> \\<Longrightarrow> d' dvd d", "show \"d dvd a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d dvd a", "by (rule dvd_ideal_generated_singleton[OF a_subset_d])"], ["proof (state)\nthis:\n  d dvd a\n\ngoal (2 subgoals):\n 1. d dvd b\n 2. \\<And>d'.\n       \\<lbrakk>d' dvd a; d' dvd b\\<rbrakk> \\<Longrightarrow> d' dvd d", "show \"d dvd b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d dvd b", "by (rule dvd_ideal_generated_singleton[OF b_subset_d])"], ["proof (state)\nthis:\n  d dvd b\n\ngoal (1 subgoal):\n 1. \\<And>d'.\n       \\<lbrakk>d' dvd a; d' dvd b\\<rbrakk> \\<Longrightarrow> d' dvd d", "fix d'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d'.\n       \\<lbrakk>d' dvd a; d' dvd b\\<rbrakk> \\<Longrightarrow> d' dvd d", "assume d'_dvd_a: \"d' dvd a\" and d'_dvd_b: \"d' dvd b\""], ["proof (state)\nthis:\n  d' dvd a\n  d' dvd b\n\ngoal (1 subgoal):\n 1. \\<And>d'.\n       \\<lbrakk>d' dvd a; d' dvd b\\<rbrakk> \\<Longrightarrow> d' dvd d", "show \"d' dvd d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d' dvd d", "by (metis ga_a_d d'_dvd_a dvd_mult2 mult_commute)"], ["proof (state)\nthis:\n  d' dvd d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>p q d.\n     p * a + q * b = d \\<and>\n     d dvd a \\<and>\n     d dvd b \\<and>\n     (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>p q d.\n       p * a + q * b = d \\<and>\n       d dvd a \\<and>\n       d dvd b \\<and>\n       (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>p q d.\n       p * a + q * b = d \\<and>\n       d dvd a \\<and>\n       d dvd b \\<and>\n       (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "case False"], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>p q d.\n       p * a + q * b = d \\<and>\n       d dvd a \\<and>\n       d dvd b \\<and>\n       (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p q d.\n       p * a + q * b = d \\<and>\n       d dvd a \\<and>\n       d dvd b \\<and>\n       (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "proof (rule exI[of _ \"g a\"], rule exI[of _ \"g b\"], rule exI[of _ d], auto)"], ["proof (state)\ngoal (4 subgoals):\n 1. g a * a + g b * b = d\n 2. d dvd a\n 3. d dvd b\n 4. \\<And>d'.\n       \\<lbrakk>d' dvd a; d' dvd b\\<rbrakk> \\<Longrightarrow> d' dvd d", "show \"g a * a + g b * b = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g a * a + g b * b = d", "proof (auto simp add: g_def)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n    \\<Longrightarrow> f a * a + f b * b = d\n 2. \\<lbrakk>a \\<in> U; b \\<notin> U\\<rbrakk> \\<Longrightarrow> f a * a = d\n 3. \\<lbrakk>a \\<notin> U; b \\<in> U\\<rbrakk> \\<Longrightarrow> f b * b = d\n 4. \\<lbrakk>a \\<notin> U; b \\<notin> U\\<rbrakk>\n    \\<Longrightarrow> (0::'a) = d", "assume a: \"a \\<in> U\" and b: \"b \\<in> U\""], ["proof (state)\nthis:\n  a \\<in> U\n  b \\<in> U\n\ngoal (4 subgoals):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n    \\<Longrightarrow> f a * a + f b * b = d\n 2. \\<lbrakk>a \\<in> U; b \\<notin> U\\<rbrakk> \\<Longrightarrow> f a * a = d\n 3. \\<lbrakk>a \\<notin> U; b \\<in> U\\<rbrakk> \\<Longrightarrow> f b * b = d\n 4. \\<lbrakk>a \\<notin> U; b \\<notin> U\\<rbrakk>\n    \\<Longrightarrow> (0::'a) = d", "hence U_ab: \"U = {a,b}\""], ["proof (prove)\nusing this:\n  a \\<in> U\n  b \\<in> U\n\ngoal (1 subgoal):\n 1. U = {a, b}", "using U"], ["proof (prove)\nusing this:\n  a \\<in> U\n  b \\<in> U\n  U \\<subseteq> {a, b}\n\ngoal (1 subgoal):\n 1. U = {a, b}", "by auto"], ["proof (state)\nthis:\n  U = {a, b}\n\ngoal (4 subgoals):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n    \\<Longrightarrow> f a * a + f b * b = d\n 2. \\<lbrakk>a \\<in> U; b \\<notin> U\\<rbrakk> \\<Longrightarrow> f a * a = d\n 3. \\<lbrakk>a \\<notin> U; b \\<in> U\\<rbrakk> \\<Longrightarrow> f b * b = d\n 4. \\<lbrakk>a \\<notin> U; b \\<notin> U\\<rbrakk>\n    \\<Longrightarrow> (0::'a) = d", "show \"f a * a + f b * b = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a * a + f b * b = d", "using f"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>U. f i * i) = d\n\ngoal (1 subgoal):\n 1. f a * a + f b * b = d", "unfolding U_ab sum_two_elements[OF False]"], ["proof (prove)\nusing this:\n  f a * a + f b * b = d\n\ngoal (1 subgoal):\n 1. f a * a + f b * b = d", "."], ["proof (state)\nthis:\n  f a * a + f b * b = d\n\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> U; b \\<notin> U\\<rbrakk> \\<Longrightarrow> f a * a = d\n 2. \\<lbrakk>a \\<notin> U; b \\<in> U\\<rbrakk> \\<Longrightarrow> f b * b = d\n 3. \\<lbrakk>a \\<notin> U; b \\<notin> U\\<rbrakk>\n    \\<Longrightarrow> (0::'a) = d", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> U; b \\<notin> U\\<rbrakk> \\<Longrightarrow> f a * a = d\n 2. \\<lbrakk>a \\<notin> U; b \\<in> U\\<rbrakk> \\<Longrightarrow> f b * b = d\n 3. \\<lbrakk>a \\<notin> U; b \\<notin> U\\<rbrakk>\n    \\<Longrightarrow> (0::'a) = d", "assume a: \"a \\<in> U\" and b: \"b \\<notin> U\""], ["proof (state)\nthis:\n  a \\<in> U\n  b \\<notin> U\n\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> U; b \\<notin> U\\<rbrakk> \\<Longrightarrow> f a * a = d\n 2. \\<lbrakk>a \\<notin> U; b \\<in> U\\<rbrakk> \\<Longrightarrow> f b * b = d\n 3. \\<lbrakk>a \\<notin> U; b \\<notin> U\\<rbrakk>\n    \\<Longrightarrow> (0::'a) = d", "hence U_a: \"U = {a}\""], ["proof (prove)\nusing this:\n  a \\<in> U\n  b \\<notin> U\n\ngoal (1 subgoal):\n 1. U = {a}", "using U"], ["proof (prove)\nusing this:\n  a \\<in> U\n  b \\<notin> U\n  U \\<subseteq> {a, b}\n\ngoal (1 subgoal):\n 1. U = {a}", "by auto"], ["proof (state)\nthis:\n  U = {a}\n\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> U; b \\<notin> U\\<rbrakk> \\<Longrightarrow> f a * a = d\n 2. \\<lbrakk>a \\<notin> U; b \\<in> U\\<rbrakk> \\<Longrightarrow> f b * b = d\n 3. \\<lbrakk>a \\<notin> U; b \\<notin> U\\<rbrakk>\n    \\<Longrightarrow> (0::'a) = d", "show \"f a * a = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a * a = d", "using f"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>U. f i * i) = d\n\ngoal (1 subgoal):\n 1. f a * a = d", "unfolding U_a sum_singleton"], ["proof (prove)\nusing this:\n  f a * a = d\n\ngoal (1 subgoal):\n 1. f a * a = d", "."], ["proof (state)\nthis:\n  f a * a = d\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<notin> U; b \\<in> U\\<rbrakk> \\<Longrightarrow> f b * b = d\n 2. \\<lbrakk>a \\<notin> U; b \\<notin> U\\<rbrakk>\n    \\<Longrightarrow> (0::'a) = d", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<notin> U; b \\<in> U\\<rbrakk> \\<Longrightarrow> f b * b = d\n 2. \\<lbrakk>a \\<notin> U; b \\<notin> U\\<rbrakk>\n    \\<Longrightarrow> (0::'a) = d", "assume a: \"a \\<notin> U\" and b: \"b \\<in> U\""], ["proof (state)\nthis:\n  a \\<notin> U\n  b \\<in> U\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<notin> U; b \\<in> U\\<rbrakk> \\<Longrightarrow> f b * b = d\n 2. \\<lbrakk>a \\<notin> U; b \\<notin> U\\<rbrakk>\n    \\<Longrightarrow> (0::'a) = d", "hence U_b: \"U = {b}\""], ["proof (prove)\nusing this:\n  a \\<notin> U\n  b \\<in> U\n\ngoal (1 subgoal):\n 1. U = {b}", "using U"], ["proof (prove)\nusing this:\n  a \\<notin> U\n  b \\<in> U\n  U \\<subseteq> {a, b}\n\ngoal (1 subgoal):\n 1. U = {b}", "by auto"], ["proof (state)\nthis:\n  U = {b}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<notin> U; b \\<in> U\\<rbrakk> \\<Longrightarrow> f b * b = d\n 2. \\<lbrakk>a \\<notin> U; b \\<notin> U\\<rbrakk>\n    \\<Longrightarrow> (0::'a) = d", "show \"f b * b = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f b * b = d", "using f"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>U. f i * i) = d\n\ngoal (1 subgoal):\n 1. f b * b = d", "unfolding U_b sum_singleton"], ["proof (prove)\nusing this:\n  f b * b = d\n\ngoal (1 subgoal):\n 1. f b * b = d", "."], ["proof (state)\nthis:\n  f b * b = d\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<notin> U; b \\<notin> U\\<rbrakk>\n    \\<Longrightarrow> (0::'a) = d", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<notin> U; b \\<notin> U\\<rbrakk>\n    \\<Longrightarrow> (0::'a) = d", "assume a: \"a \\<notin> U\" and b: \"b \\<notin> U\""], ["proof (state)\nthis:\n  a \\<notin> U\n  b \\<notin> U\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<notin> U; b \\<notin> U\\<rbrakk>\n    \\<Longrightarrow> (0::'a) = d", "hence \"U = {}\""], ["proof (prove)\nusing this:\n  a \\<notin> U\n  b \\<notin> U\n\ngoal (1 subgoal):\n 1. U = {}", "using U"], ["proof (prove)\nusing this:\n  a \\<notin> U\n  b \\<notin> U\n  U \\<subseteq> {a, b}\n\ngoal (1 subgoal):\n 1. U = {}", "by auto"], ["proof (state)\nthis:\n  U = {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<notin> U; b \\<notin> U\\<rbrakk>\n    \\<Longrightarrow> (0::'a) = d", "thus \"0 = d\""], ["proof (prove)\nusing this:\n  U = {}\n\ngoal (1 subgoal):\n 1. (0::'a) = d", "using f"], ["proof (prove)\nusing this:\n  U = {}\n  (\\<Sum>i\\<in>U. f i * i) = d\n\ngoal (1 subgoal):\n 1. (0::'a) = d", "by auto"], ["proof (state)\nthis:\n  (0::'a) = d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g a * a + g b * b = d\n\ngoal (3 subgoals):\n 1. d dvd a\n 2. d dvd b\n 3. \\<And>d'.\n       \\<lbrakk>d' dvd a; d' dvd b\\<rbrakk> \\<Longrightarrow> d' dvd d", "show \"d dvd a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d dvd a", "by (rule dvd_ideal_generated_singleton[OF a_subset_d])"], ["proof (state)\nthis:\n  d dvd a\n\ngoal (2 subgoals):\n 1. d dvd b\n 2. \\<And>d'.\n       \\<lbrakk>d' dvd a; d' dvd b\\<rbrakk> \\<Longrightarrow> d' dvd d", "show \"d dvd b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d dvd b", "by (rule dvd_ideal_generated_singleton[OF b_subset_d])"], ["proof (state)\nthis:\n  d dvd b\n\ngoal (1 subgoal):\n 1. \\<And>d'.\n       \\<lbrakk>d' dvd a; d' dvd b\\<rbrakk> \\<Longrightarrow> d' dvd d", "fix d'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d'.\n       \\<lbrakk>d' dvd a; d' dvd b\\<rbrakk> \\<Longrightarrow> d' dvd d", "assume d'a: \"d' dvd a\" and d'b: \"d' dvd b\""], ["proof (state)\nthis:\n  d' dvd a\n  d' dvd b\n\ngoal (1 subgoal):\n 1. \\<And>d'.\n       \\<lbrakk>d' dvd a; d' dvd b\\<rbrakk> \\<Longrightarrow> d' dvd d", "have ad': \"ideal_generated {a} \\<subseteq> ideal_generated {d'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {a} \\<subseteq> ideal_generated {d'}", "by (rule dvd_ideal_generated_singleton'[OF d'a])"], ["proof (state)\nthis:\n  ideal_generated {a} \\<subseteq> ideal_generated {d'}\n\ngoal (1 subgoal):\n 1. \\<And>d'.\n       \\<lbrakk>d' dvd a; d' dvd b\\<rbrakk> \\<Longrightarrow> d' dvd d", "have bd': \"ideal_generated {b} \\<subseteq> ideal_generated {d'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {b} \\<subseteq> ideal_generated {d'}", "by (rule dvd_ideal_generated_singleton'[OF d'b])"], ["proof (state)\nthis:\n  ideal_generated {b} \\<subseteq> ideal_generated {d'}\n\ngoal (1 subgoal):\n 1. \\<And>d'.\n       \\<lbrakk>d' dvd a; d' dvd b\\<rbrakk> \\<Longrightarrow> d' dvd d", "have abd': \"ideal_generated {a,b} \\<subseteq> ideal_generated {d'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {a, b} \\<subseteq> ideal_generated {d'}", "by (rule ideal_generated_subset2[OF ad' bd'])"], ["proof (state)\nthis:\n  ideal_generated {a, b} \\<subseteq> ideal_generated {d'}\n\ngoal (1 subgoal):\n 1. \\<And>d'.\n       \\<lbrakk>d' dvd a; d' dvd b\\<rbrakk> \\<Longrightarrow> d' dvd d", "hence dd': \"ideal_generated {d} \\<subseteq> ideal_generated {d'}\""], ["proof (prove)\nusing this:\n  ideal_generated {a, b} \\<subseteq> ideal_generated {d'}\n\ngoal (1 subgoal):\n 1. ideal_generated {d} \\<subseteq> ideal_generated {d'}", "by (simp add: S_def d)"], ["proof (state)\nthis:\n  ideal_generated {d} \\<subseteq> ideal_generated {d'}\n\ngoal (1 subgoal):\n 1. \\<And>d'.\n       \\<lbrakk>d' dvd a; d' dvd b\\<rbrakk> \\<Longrightarrow> d' dvd d", "show \"d' dvd d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d' dvd d", "by (rule dvd_ideal_generated_singleton[OF dd'])"], ["proof (state)\nthis:\n  d' dvd d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>p q d.\n     p * a + q * b = d \\<and>\n     d dvd a \\<and>\n     d dvd b \\<and>\n     (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>p q d.\n     p * a + q * b = d \\<and>\n     d dvd a \\<and>\n     d dvd b \\<and>\n     (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)\n\ngoal:\nNo subgoals!", "qed"], ["", "subclass (in pid) bezout_domain"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.bezout_domain (*) (1::'a) (+) (0::'a) (-) uminus", "proof"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "context pir\nbegin"], ["", "lemma ascending_chain_condition:\n  fixes I::\"nat=>'a set\"\n  assumes all_ideal: \"\\<forall>n. ideal (I(n))\"\n  and inc: \"\\<forall>n. I(n) \\<subseteq> I(n+1)\"\n  shows \"\\<exists>n. I(n)=I(n+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. I n = I (n + 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n. I n = I (n + 1)", "let ?I = \"\\<Union>{I(n)|n. n\\<in>(UNIV::nat set)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n. I n = I (n + 1)", "have \"ideal ?I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal (\\<Union> {I n |n. n \\<in> UNIV})", "using ideal_Union[of I] all_ideal inc"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>A\\<in>{I n |n. n \\<in> UNIV}. ideal A;\n   \\<forall>n. I n \\<subseteq> I (n + 1)\\<rbrakk>\n  \\<Longrightarrow> ideal (\\<Union> {I n |n. n \\<in> UNIV})\n  \\<forall>n. ideal (I n)\n  \\<forall>n. I n \\<subseteq> I (n + 1)\n\ngoal (1 subgoal):\n 1. ideal (\\<Union> {I n |n. n \\<in> UNIV})", "by fast"], ["proof (state)\nthis:\n  ideal (\\<Union> {I n |n. n \\<in> UNIV})\n\ngoal (1 subgoal):\n 1. \\<exists>n. I n = I (n + 1)", "from this"], ["proof (chain)\npicking this:\n  ideal (\\<Union> {I n |n. n \\<in> UNIV})", "obtain a where a: \"ideal_generated {a} = ?I\""], ["proof (prove)\nusing this:\n  ideal (\\<Union> {I n |n. n \\<in> UNIV})\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        ideal_generated {a} =\n        \\<Union> {I n |n. n \\<in> UNIV} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using all_ideal_is_principal"], ["proof (prove)\nusing this:\n  ideal (\\<Union> {I n |n. n \\<in> UNIV})\n  ideal ?I \\<Longrightarrow> principal_ideal ?I\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        ideal_generated {a} =\n        \\<Union> {I n |n. n \\<in> UNIV} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding principal_ideal_def"], ["proof (prove)\nusing this:\n  ideal (\\<Union> {I n |n. n \\<in> UNIV})\n  ideal ?I \\<Longrightarrow> \\<exists>a. ideal_generated {a} = ?I\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        ideal_generated {a} =\n        \\<Union> {I n |n. n \\<in> UNIV} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  ideal_generated {a} = \\<Union> {I n |n. n \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. \\<exists>n. I n = I (n + 1)", "have \"a \\<in> ?I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> \\<Union> {I n |n. n \\<in> UNIV}", "using a ideal_generated_subset_generator[of \"{a}\" \"?I\"]"], ["proof (prove)\nusing this:\n  ideal_generated {a} = \\<Union> {I n |n. n \\<in> UNIV}\n  ideal_generated {a} = \\<Union> {I n |n. n \\<in> UNIV} \\<Longrightarrow>\n  {a} \\<subseteq> \\<Union> {I n |n. n \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. a \\<in> \\<Union> {I n |n. n \\<in> UNIV}", "by simp"], ["proof (state)\nthis:\n  a \\<in> \\<Union> {I n |n. n \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. \\<exists>n. I n = I (n + 1)", "from this"], ["proof (chain)\npicking this:\n  a \\<in> \\<Union> {I n |n. n \\<in> UNIV}", "obtain k where a_Ik: \"a \\<in> I(k)\""], ["proof (prove)\nusing this:\n  a \\<in> \\<Union> {I n |n. n \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. (\\<And>k. a \\<in> I k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using Union_iff[of a \"{I n |n. n \\<in> UNIV}\"]"], ["proof (prove)\nusing this:\n  a \\<in> \\<Union> {I n |n. n \\<in> UNIV}\n  (a \\<in> \\<Union> {I n |n. n \\<in> UNIV}) =\n  (\\<exists>X\\<in>{I n |n. n \\<in> UNIV}. a \\<in> X)\n\ngoal (1 subgoal):\n 1. (\\<And>k. a \\<in> I k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  a \\<in> I k\n\ngoal (1 subgoal):\n 1. \\<exists>n. I n = I (n + 1)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. I n = I (n + 1)", "proof (rule exI[of _ k], rule)"], ["proof (state)\ngoal (2 subgoals):\n 1. I k \\<subseteq> I (k + 1)\n 2. I (k + 1) \\<subseteq> I k", "show \"I k \\<subseteq> I (k + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I k \\<subseteq> I (k + 1)", "using inc"], ["proof (prove)\nusing this:\n  \\<forall>n. I n \\<subseteq> I (n + 1)\n\ngoal (1 subgoal):\n 1. I k \\<subseteq> I (k + 1)", "by simp"], ["proof (state)\nthis:\n  I k \\<subseteq> I (k + 1)\n\ngoal (1 subgoal):\n 1. I (k + 1) \\<subseteq> I k", "show \"I (k + 1) \\<subseteq> I k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I (k + 1) \\<subseteq> I k", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> I (Suc k) \\<Longrightarrow> x \\<in> I k", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> I (Suc k) \\<Longrightarrow> x \\<in> I k", "assume x: \"x \\<in> I (Suc k)\""], ["proof (state)\nthis:\n  x \\<in> I (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> I (Suc k) \\<Longrightarrow> x \\<in> I k", "have \"ideal_generated {a} = I k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {a} = I k", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ideal_generated {a} \\<subseteq> I k\n 2. I k \\<subseteq> ideal_generated {a}", "have ideal_Ik: \"ideal (I (k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal (I k)", "using all_ideal"], ["proof (prove)\nusing this:\n  \\<forall>n. ideal (I n)\n\ngoal (1 subgoal):\n 1. ideal (I k)", "by simp"], ["proof (state)\nthis:\n  ideal (I k)\n\ngoal (2 subgoals):\n 1. ideal_generated {a} \\<subseteq> I k\n 2. I k \\<subseteq> ideal_generated {a}", "show \"I k \\<subseteq> ideal_generated {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I k \\<subseteq> ideal_generated {a}", "using a"], ["proof (prove)\nusing this:\n  ideal_generated {a} = \\<Union> {I n |n. n \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. I k \\<subseteq> ideal_generated {a}", "by auto"], ["proof (state)\nthis:\n  I k \\<subseteq> ideal_generated {a}\n\ngoal (1 subgoal):\n 1. ideal_generated {a} \\<subseteq> I k", "show \"ideal_generated {a} \\<subseteq> I k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {a} \\<subseteq> I k", "by (metis (lifting) a_Ik all_ideal ideal_generated_def\n            le_Inf_iff mem_Collect_eq singleton_iff subsetI)"], ["proof (state)\nthis:\n  ideal_generated {a} \\<subseteq> I k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ideal_generated {a} = I k\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> I (Suc k) \\<Longrightarrow> x \\<in> I k", "thus \"x \\<in> I k\""], ["proof (prove)\nusing this:\n  ideal_generated {a} = I k\n\ngoal (1 subgoal):\n 1. x \\<in> I k", "using x"], ["proof (prove)\nusing this:\n  ideal_generated {a} = I k\n  x \\<in> I (Suc k)\n\ngoal (1 subgoal):\n 1. x \\<in> I k", "unfolding a"], ["proof (prove)\nusing this:\n  \\<Union> {I n |n. n \\<in> UNIV} = I k\n  x \\<in> I (Suc k)\n\ngoal (1 subgoal):\n 1. x \\<in> I k", "by auto"], ["proof (state)\nthis:\n  x \\<in> I k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  I (k + 1) \\<subseteq> I k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>n. I n = I (n + 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ascending_chain_condition2:\n  \"\\<nexists>I::(nat \\<Rightarrow> 'a set). (\\<forall>n. ideal (I n) \\<and> I n \\<subset> I (n + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>I. \\<forall>n. ideal (I n) \\<and> I n \\<subset> I (n + 1)", "proof (rule ccontr, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I.\n       \\<forall>n.\n          ideal (I n) \\<and> I n \\<subset> I (Suc n) \\<Longrightarrow>\n       False", "fix I"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I.\n       \\<forall>n.\n          ideal (I n) \\<and> I n \\<subset> I (Suc n) \\<Longrightarrow>\n       False", "assume a: \"\\<forall>n. ideal (I n) \\<and> I n \\<subset> I (Suc n)\""], ["proof (state)\nthis:\n  \\<forall>n. ideal (I n) \\<and> I n \\<subset> I (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       \\<forall>n.\n          ideal (I n) \\<and> I n \\<subset> I (Suc n) \\<Longrightarrow>\n       False", "hence \"\\<forall>n. ideal (I n)\" \"\\<forall>n. I n \\<subseteq> I (Suc n)\""], ["proof (prove)\nusing this:\n  \\<forall>n. ideal (I n) \\<and> I n \\<subset> I (Suc n)\n\ngoal (1 subgoal):\n 1. \\<forall>n. ideal (I n) &&& \\<forall>n. I n \\<subseteq> I (Suc n)", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. ideal (I n)\n  \\<forall>n. I n \\<subseteq> I (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       \\<forall>n.\n          ideal (I n) \\<and> I n \\<subset> I (Suc n) \\<Longrightarrow>\n       False", "hence \"\\<exists>n. I(n)=I(n+1)\""], ["proof (prove)\nusing this:\n  \\<forall>n. ideal (I n)\n  \\<forall>n. I n \\<subseteq> I (Suc n)\n\ngoal (1 subgoal):\n 1. \\<exists>n. I n = I (n + 1)", "using ascending_chain_condition"], ["proof (prove)\nusing this:\n  \\<forall>n. ideal (I n)\n  \\<forall>n. I n \\<subseteq> I (Suc n)\n  \\<lbrakk>\\<forall>n. ideal (?I n);\n   \\<forall>n. ?I n \\<subseteq> ?I (n + 1)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n. ?I n = ?I (n + 1)\n\ngoal (1 subgoal):\n 1. \\<exists>n. I n = I (n + 1)", "by auto"], ["proof (state)\nthis:\n  \\<exists>n. I n = I (n + 1)\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       \\<forall>n.\n          ideal (I n) \\<and> I n \\<subset> I (Suc n) \\<Longrightarrow>\n       False", "thus False"], ["proof (prove)\nusing this:\n  \\<exists>n. I n = I (n + 1)\n\ngoal (1 subgoal):\n 1. False", "using a"], ["proof (prove)\nusing this:\n  \\<exists>n. I n = I (n + 1)\n  \\<forall>n. ideal (I n) \\<and> I n \\<subset> I (Suc n)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "class pir_div = pir + euclidean_semiring"], ["", "class pid_div = pid + euclidean_semiring"], ["", "subclass (in pir_div) pid_div"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.pid_div (div) (+) (-) (0::'a) (*) (1::'a) (mod) euclidean_size\n     uminus", "proof"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "subclass (in pir_div) bezout_ring_div"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.bezout_ring_div (div) (+) (-) (0::'a) (*) (1::'a) (mod)\n     euclidean_size uminus", "proof"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "subclass (in pid_div) bezout_domain_div"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.bezout_domain_div (div) (+) (-) (0::'a) (*) (1::'a) (mod)\n     euclidean_size uminus", "proof"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Euclidean Domains\\<close>"], ["", "text\\<open>We make use of the euclidean ring (domain) class developed by Manuel Eberl.\\<close>"], ["", "subclass (in euclidean_ring) pid"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.pid (*) (1::'a) (+) (0::'a) (-) uminus", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I. ideal I \\<Longrightarrow> principal_ideal I", "fix I"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I. ideal I \\<Longrightarrow> principal_ideal I", "assume I: \"ideal I\""], ["proof (state)\nthis:\n  ideal I\n\ngoal (1 subgoal):\n 1. \\<And>I. ideal I \\<Longrightarrow> principal_ideal I", "show \"principal_ideal I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. principal_ideal I", "proof (cases \"I={0}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. I = {0::'a} \\<Longrightarrow> principal_ideal I\n 2. I \\<noteq> {0::'a} \\<Longrightarrow> principal_ideal I", "case True"], ["proof (state)\nthis:\n  I = {0::'a}\n\ngoal (2 subgoals):\n 1. I = {0::'a} \\<Longrightarrow> principal_ideal I\n 2. I \\<noteq> {0::'a} \\<Longrightarrow> principal_ideal I", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. principal_ideal I", "unfolding principal_ideal_def True"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. ideal_generated {a} = {0::'a}", "using ideal_generated_0 ideal_0"], ["proof (prove)\nusing this:\n  ideal_generated {0::'a} = {0::'a}\n  ideal {0::'a}\n\ngoal (1 subgoal):\n 1. \\<exists>a. ideal_generated {a} = {0::'a}", "by auto"], ["proof (state)\nthis:\n  principal_ideal I\n\ngoal (1 subgoal):\n 1. I \\<noteq> {0::'a} \\<Longrightarrow> principal_ideal I", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. I \\<noteq> {0::'a} \\<Longrightarrow> principal_ideal I", "case False"], ["proof (state)\nthis:\n  I \\<noteq> {0::'a}\n\ngoal (1 subgoal):\n 1. I \\<noteq> {0::'a} \\<Longrightarrow> principal_ideal I", "have fI_not_empty: \"(euclidean_size` (I-{0}))\\<noteq>{}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. euclidean_size ` (I - {0::'a}) \\<noteq> {}", "using False ideal_not_empty[OF I]"], ["proof (prove)\nusing this:\n  I \\<noteq> {0::'a}\n  I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. euclidean_size ` (I - {0::'a}) \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  euclidean_size ` (I - {0::'a}) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. I \\<noteq> {0::'a} \\<Longrightarrow> principal_ideal I", "from this"], ["proof (chain)\npicking this:\n  euclidean_size ` (I - {0::'a}) \\<noteq> {}", "obtain d where fd: \"euclidean_size d\n      = Least (\\<lambda>i. i \\<in> (euclidean_size`(I-{0})))\" and d: \"d\\<in>(I-{0})\""], ["proof (prove)\nusing this:\n  euclidean_size ` (I - {0::'a}) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<lbrakk>euclidean_size d =\n                 (LEAST i. i \\<in> euclidean_size ` (I - {0::'a}));\n         d \\<in> I - {0::'a}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (lifting, mono_tags) LeastI_ex imageE ex_in_conv)"], ["proof (state)\nthis:\n  euclidean_size d = (LEAST i. i \\<in> euclidean_size ` (I - {0::'a}))\n  d \\<in> I - {0::'a}\n\ngoal (1 subgoal):\n 1. I \\<noteq> {0::'a} \\<Longrightarrow> principal_ideal I", "have d_not_0: \"d\\<noteq>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<noteq> (0::'a)", "using d"], ["proof (prove)\nusing this:\n  d \\<in> I - {0::'a}\n\ngoal (1 subgoal):\n 1. d \\<noteq> (0::'a)", "by simp"], ["proof (state)\nthis:\n  d \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. I \\<noteq> {0::'a} \\<Longrightarrow> principal_ideal I", "have fd_le: \"\\<forall>x\\<in>I-{0}. euclidean_size d \\<le> euclidean_size x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>I - {0::'a}. euclidean_size d \\<le> euclidean_size x", "by (metis (mono_tags) Least_le fd image_eqI)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>I - {0::'a}. euclidean_size d \\<le> euclidean_size x\n\ngoal (1 subgoal):\n 1. I \\<noteq> {0::'a} \\<Longrightarrow> principal_ideal I", "show \"principal_ideal I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. principal_ideal I", "proof (unfold principal_ideal_def, rule exI[of _ d], auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> ideal_generated {d} \\<Longrightarrow> x \\<in> I\n 2. \\<And>x. x \\<in> I \\<Longrightarrow> x \\<in> ideal_generated {d}", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> ideal_generated {d} \\<Longrightarrow> x \\<in> I\n 2. \\<And>x. x \\<in> I \\<Longrightarrow> x \\<in> ideal_generated {d}", "assume x:\"x \\<in> ideal_generated {d}\""], ["proof (state)\nthis:\n  x \\<in> ideal_generated {d}\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> ideal_generated {d} \\<Longrightarrow> x \\<in> I\n 2. \\<And>x. x \\<in> I \\<Longrightarrow> x \\<in> ideal_generated {d}", "show \"x \\<in> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> I", "using x"], ["proof (prove)\nusing this:\n  x \\<in> ideal_generated {d}\n\ngoal (1 subgoal):\n 1. x \\<in> I", "unfolding ideal_generated_def"], ["proof (prove)\nusing this:\n  x \\<in> \\<Inter> {I. ideal I \\<and> {d} \\<subseteq> I}\n\ngoal (1 subgoal):\n 1. x \\<in> I", "by (auto, metis Diff_iff I d)"], ["proof (state)\nthis:\n  x \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> I \\<Longrightarrow> x \\<in> ideal_generated {d}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> I \\<Longrightarrow> x \\<in> ideal_generated {d}", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> I \\<Longrightarrow> x \\<in> ideal_generated {d}", "assume a: \"a \\<in> I\""], ["proof (state)\nthis:\n  a \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> I \\<Longrightarrow> x \\<in> ideal_generated {d}", "obtain q r where \"a = q * d + r\"\n        and fr_fd: \"euclidean_size r < euclidean_size d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>q r.\n        \\<lbrakk>a = q * d + r; euclidean_size r < euclidean_size d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using div_mult_mod_eq [of a d, symmetric] d_not_0 mod_size_less"], ["proof (prove)\nusing this:\n  a = a div d * d + a mod d\n  d \\<noteq> (0::'a)\n  ?b \\<noteq> (0::'a) \\<Longrightarrow>\n  euclidean_size (?a mod ?b) < euclidean_size ?b\n\ngoal (1 subgoal):\n 1. (\\<And>q r.\n        \\<lbrakk>a = q * d + r; euclidean_size r < euclidean_size d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a = q * d + r\n  euclidean_size r < euclidean_size d\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> I \\<Longrightarrow> x \\<in> ideal_generated {d}", "show \"a \\<in> ideal_generated {d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> ideal_generated {d}", "proof (cases \"r=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. r = (0::'a) \\<Longrightarrow> a \\<in> ideal_generated {d}\n 2. r \\<noteq> (0::'a) \\<Longrightarrow> a \\<in> ideal_generated {d}", "case True"], ["proof (state)\nthis:\n  r = (0::'a)\n\ngoal (2 subgoals):\n 1. r = (0::'a) \\<Longrightarrow> a \\<in> ideal_generated {d}\n 2. r \\<noteq> (0::'a) \\<Longrightarrow> a \\<in> ideal_generated {d}", "hence \"a = q * d\""], ["proof (prove)\nusing this:\n  r = (0::'a)\n\ngoal (1 subgoal):\n 1. a = q * d", "using \\<open>a = q * d + r\\<close>"], ["proof (prove)\nusing this:\n  r = (0::'a)\n  a = q * d + r\n\ngoal (1 subgoal):\n 1. a = q * d", "by auto"], ["proof (state)\nthis:\n  a = q * d\n\ngoal (2 subgoals):\n 1. r = (0::'a) \\<Longrightarrow> a \\<in> ideal_generated {d}\n 2. r \\<noteq> (0::'a) \\<Longrightarrow> a \\<in> ideal_generated {d}", "then"], ["proof (chain)\npicking this:\n  a = q * d", "show ?thesis"], ["proof (prove)\nusing this:\n  a = q * d\n\ngoal (1 subgoal):\n 1. a \\<in> ideal_generated {d}", "unfolding ideal_generated_def"], ["proof (prove)\nusing this:\n  a = q * d\n\ngoal (1 subgoal):\n 1. a \\<in> \\<Inter> {I. ideal I \\<and> {d} \\<subseteq> I}", "unfolding ideal_def right_ideal_def"], ["proof (prove)\nusing this:\n  a = q * d\n\ngoal (1 subgoal):\n 1. a \\<in> \\<Inter>\n             {I. (left_ideal I \\<and>\n                  subgroup I \\<and>\n                  (\\<forall>x\\<in>I. \\<forall>r. x * r \\<in> I)) \\<and>\n                 {d} \\<subseteq> I}", "by (simp add: ac_simps)"], ["proof (state)\nthis:\n  a \\<in> ideal_generated {d}\n\ngoal (1 subgoal):\n 1. r \\<noteq> (0::'a) \\<Longrightarrow> a \\<in> ideal_generated {d}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<noteq> (0::'a) \\<Longrightarrow> a \\<in> ideal_generated {d}", "case False"], ["proof (state)\nthis:\n  r \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. r \\<noteq> (0::'a) \\<Longrightarrow> a \\<in> ideal_generated {d}", "hence r_noteq_0: \"r \\<noteq> 0\""], ["proof (prove)\nusing this:\n  r \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. r \\<noteq> (0::'a)", "by simp"], ["proof (state)\nthis:\n  r \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. r \\<noteq> (0::'a) \\<Longrightarrow> a \\<in> ideal_generated {d}", "have \"r = a - d * q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r = a - d * q", "using \\<open>a = q * d + r\\<close>"], ["proof (prove)\nusing this:\n  a = q * d + r\n\ngoal (1 subgoal):\n 1. r = a - d * q", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  r = a - d * q\n\ngoal (1 subgoal):\n 1. r \\<noteq> (0::'a) \\<Longrightarrow> a \\<in> ideal_generated {d}", "also"], ["proof (state)\nthis:\n  r = a - d * q\n\ngoal (1 subgoal):\n 1. r \\<noteq> (0::'a) \\<Longrightarrow> a \\<in> ideal_generated {d}", "have \"... \\<in> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a - d * q \\<in> I", "proof (rule left_ideal_minus)"], ["proof (state)\ngoal (3 subgoals):\n 1. left_ideal I\n 2. a \\<in> I\n 3. d * q \\<in> I", "show \"left_ideal I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. left_ideal I", "using I"], ["proof (prove)\nusing this:\n  ideal I\n\ngoal (1 subgoal):\n 1. left_ideal I", "unfolding ideal_def"], ["proof (prove)\nusing this:\n  left_ideal I \\<and> right_ideal I\n\ngoal (1 subgoal):\n 1. left_ideal I", "by simp"], ["proof (state)\nthis:\n  left_ideal I\n\ngoal (2 subgoals):\n 1. a \\<in> I\n 2. d * q \\<in> I", "show \"a \\<in> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> I", "using a"], ["proof (prove)\nusing this:\n  a \\<in> I\n\ngoal (1 subgoal):\n 1. a \\<in> I", "."], ["proof (state)\nthis:\n  a \\<in> I\n\ngoal (1 subgoal):\n 1. d * q \\<in> I", "show \"d * q \\<in> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d * q \\<in> I", "using d I"], ["proof (prove)\nusing this:\n  d \\<in> I - {0::'a}\n  ideal I\n\ngoal (1 subgoal):\n 1. d * q \\<in> I", "unfolding ideal_def right_ideal_def"], ["proof (prove)\nusing this:\n  d \\<in> I - {0::'a}\n  left_ideal I \\<and>\n  subgroup I \\<and> (\\<forall>x\\<in>I. \\<forall>r. x * r \\<in> I)\n\ngoal (1 subgoal):\n 1. d * q \\<in> I", "by simp"], ["proof (state)\nthis:\n  d * q \\<in> I\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a - d * q \\<in> I\n\ngoal (1 subgoal):\n 1. r \\<noteq> (0::'a) \\<Longrightarrow> a \\<in> ideal_generated {d}", "finally"], ["proof (chain)\npicking this:\n  r \\<in> I", "have \"r \\<in> I-{0}\""], ["proof (prove)\nusing this:\n  r \\<in> I\n\ngoal (1 subgoal):\n 1. r \\<in> I - {0::'a}", "using r_noteq_0"], ["proof (prove)\nusing this:\n  r \\<in> I\n  r \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. r \\<in> I - {0::'a}", "by auto"], ["proof (state)\nthis:\n  r \\<in> I - {0::'a}\n\ngoal (1 subgoal):\n 1. r \\<noteq> (0::'a) \\<Longrightarrow> a \\<in> ideal_generated {d}", "hence \"euclidean_size d \\<le> euclidean_size r\""], ["proof (prove)\nusing this:\n  r \\<in> I - {0::'a}\n\ngoal (1 subgoal):\n 1. euclidean_size d \\<le> euclidean_size r", "using fd_le"], ["proof (prove)\nusing this:\n  r \\<in> I - {0::'a}\n  \\<forall>x\\<in>I - {0::'a}. euclidean_size d \\<le> euclidean_size x\n\ngoal (1 subgoal):\n 1. euclidean_size d \\<le> euclidean_size r", "by auto"], ["proof (state)\nthis:\n  euclidean_size d \\<le> euclidean_size r\n\ngoal (1 subgoal):\n 1. r \\<noteq> (0::'a) \\<Longrightarrow> a \\<in> ideal_generated {d}", "thus ?thesis"], ["proof (prove)\nusing this:\n  euclidean_size d \\<le> euclidean_size r\n\ngoal (1 subgoal):\n 1. a \\<in> ideal_generated {d}", "using fr_fd"], ["proof (prove)\nusing this:\n  euclidean_size d \\<le> euclidean_size r\n  euclidean_size r < euclidean_size d\n\ngoal (1 subgoal):\n 1. a \\<in> ideal_generated {d}", "by auto"], ["proof (state)\nthis:\n  a \\<in> ideal_generated {d}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a \\<in> ideal_generated {d}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  principal_ideal I\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  principal_ideal I\n\ngoal:\nNo subgoals!", "qed"], ["", "context euclidean_ring_gcd\nbegin"], ["", "text\\<open>This is similar to the \\<open>euclid_ext\\<close> operation, but involving two more parameters\nto satisfy that \\<open>is_bezout_ext euclid_ext2\\<close>\\<close>"], ["", "definition euclid_ext2 :: \"'a \\<Rightarrow> 'a \\<Rightarrow> 'a \\<times> 'a \\<times> 'a \\<times> 'a \\<times> 'a\"\n  where \"euclid_ext2 a b =\n   (fst (bezout_coefficients a b), snd (bezout_coefficients a b), - b div gcd a b, a div gcd a b, gcd a b)\""], ["", "lemma is_bezout_ext_euclid_ext2: \"is_bezout_ext (euclid_ext2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_bezout_ext euclid_ext2", "proof (unfold is_bezout_ext_def Let_def, clarify, intro conjI)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow>\n       p * a + aa * b = ba\n 2. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba dvd a\n 3. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba dvd b\n 4. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow>\n       \\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd ba\n 5. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba * ab = - b\n 6. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba * ac = a", "fix a b p q u v d"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow>\n       p * a + aa * b = ba\n 2. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba dvd a\n 3. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba dvd b\n 4. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow>\n       \\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd ba\n 5. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba * ab = - b\n 6. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba * ac = a", "assume e: \"euclid_ext2 a b = (p, q, u, v, d)\""], ["proof (state)\nthis:\n  euclid_ext2 a b = (p, q, u, v, d)\n\ngoal (6 subgoals):\n 1. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow>\n       p * a + aa * b = ba\n 2. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba dvd a\n 3. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba dvd b\n 4. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow>\n       \\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd ba\n 5. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba * ab = - b\n 6. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba * ac = a", "then"], ["proof (chain)\npicking this:\n  euclid_ext2 a b = (p, q, u, v, d)", "have \"bezout_coefficients a b = (p, q)\" and \"gcd a b = d\""], ["proof (prove)\nusing this:\n  euclid_ext2 a b = (p, q, u, v, d)\n\ngoal (1 subgoal):\n 1. bezout_coefficients a b = (p, q) &&& gcd a b = d", "by (auto simp add: euclid_ext2_def)"], ["proof (state)\nthis:\n  bezout_coefficients a b = (p, q)\n  gcd a b = d\n\ngoal (6 subgoals):\n 1. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow>\n       p * a + aa * b = ba\n 2. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba dvd a\n 3. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba dvd b\n 4. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow>\n       \\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd ba\n 5. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba * ab = - b\n 6. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba * ac = a", "then"], ["proof (chain)\npicking this:\n  bezout_coefficients a b = (p, q)\n  gcd a b = d", "show \"p * a + q * b = d\""], ["proof (prove)\nusing this:\n  bezout_coefficients a b = (p, q)\n  gcd a b = d\n\ngoal (1 subgoal):\n 1. p * a + q * b = d", "by (simp add: bezout_coefficients)"], ["proof (state)\nthis:\n  p * a + q * b = d\n\ngoal (5 subgoals):\n 1. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba dvd a\n 2. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba dvd b\n 3. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow>\n       \\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd ba\n 4. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba * ab = - b\n 5. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba * ac = a", "from \\<open>gcd a b = d\\<close>"], ["proof (chain)\npicking this:\n  gcd a b = d", "show \"d dvd a\" and \"d dvd b\""], ["proof (prove)\nusing this:\n  gcd a b = d\n\ngoal (1 subgoal):\n 1. d dvd a &&& d dvd b", "by auto"], ["proof (state)\nthis:\n  d dvd a\n  d dvd b\n\ngoal (3 subgoals):\n 1. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow>\n       \\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd ba\n 2. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba * ab = - b\n 3. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba * ac = a", "from \\<open>gcd a b = d\\<close>"], ["proof (chain)\npicking this:\n  gcd a b = d", "show \"\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d\""], ["proof (prove)\nusing this:\n  gcd a b = d\n\ngoal (1 subgoal):\n 1. \\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d", "by auto"], ["proof (state)\nthis:\n  \\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d\n\ngoal (2 subgoals):\n 1. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba * ab = - b\n 2. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba * ac = a", "have \"a div d = v\" and \"-b div d = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a div d = v &&& - b div d = u", "using e"], ["proof (prove)\nusing this:\n  euclid_ext2 a b = (p, q, u, v, d)\n\ngoal (1 subgoal):\n 1. a div d = v &&& - b div d = u", "by (auto simp add: euclid_ext2_def)"], ["proof (state)\nthis:\n  a div d = v\n  - b div d = u\n\ngoal (2 subgoals):\n 1. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba * ab = - b\n 2. \\<And>a b p aa ab ac ba.\n       euclid_ext2 a b = (p, aa, ab, ac, ba) \\<Longrightarrow> ba * ac = a", "then"], ["proof (chain)\npicking this:\n  a div d = v\n  - b div d = u", "show \"d * v = a\" and \"d * u = - b\""], ["proof (prove)\nusing this:\n  a div d = v\n  - b div d = u\n\ngoal (1 subgoal):\n 1. d * v = a &&& d * u = - b", "using \\<open>d dvd a\\<close> and \\<open>d dvd b\\<close>"], ["proof (prove)\nusing this:\n  a div d = v\n  - b div d = u\n  d dvd a\n  d dvd b\n\ngoal (1 subgoal):\n 1. d * v = a &&& d * u = - b", "by auto"], ["proof (state)\nthis:\n  d * v = a\n  d * u = - b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma is_bezout_euclid_ext: \"is_bezout (\\<lambda>a b. (fst (bezout_coefficients a b), snd (bezout_coefficients a b), gcd a b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_bezout\n     (\\<lambda>a b.\n         (fst (bezout_coefficients a b), snd (bezout_coefficients a b),\n          gcd a b))", "by (auto simp add: is_bezout_def bezout_coefficients)"], ["", "end"], ["", "subclass (in euclidean_ring) pid_div"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.pid_div (div) (+) (-) (0::'a) (*) (1::'a) (mod) euclidean_size\n     uminus", ".."], ["", "subsection\\<open>More gcd structures\\<close>"], ["", "text\\<open>The following classes represent structures where there exists a gcd\n  for each pair of elements and the operation is fixed.\\<close>"], ["", "class pir_gcd = pir + semiring_gcd"], ["", "class pid_gcd = pid + pir_gcd"], ["", "subclass (in euclidean_ring_gcd) pid_gcd"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.pid_gcd (*) (1::'a) (+) (0::'a) (-) uminus gcd lcm (div)\n     unit_factor normalize", ".."], ["", "subsection\\<open>Field\\<close>"], ["", "text\\<open>Proving that any field is a euclidean domain. There are alternatives to do this,\nsee @{url \"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2014-October/msg00034.html\"}\\<close>"], ["", "(* TODO Remove *)"], ["", "class field_euclidean = field + euclidean_ring +\n  assumes \"euclidean_size = (\\<lambda>i. if i = 0 then 0 else 1::nat)\"\n  and \"normalisation_factor = id\""], ["", "end"], ["", "(*********** Possible future work: ***********)\n(*\n  - Prime elements, irreducible elements...\n  - Prufer Domain, Noetherian...\n*)"]]}