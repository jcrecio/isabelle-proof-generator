{"file_name": "/home/qj213/afp-2021-10-22/thys/Power_Sum_Polynomials/Power_Sum_Puzzle.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Power_Sum_Polynomials", "problem_names": ["lemma p_0 [simp]: \"p 0 = of_nat n\"", "lemma p_altdef: \"p k = insertion x (powsum_mpoly {..<n} k)\"", "lemma e_altdef: \"e k = insertion x (sym_mpoly {..<n} k)\"", "lemma e_eq_0 [simp]: \"k > n \\<Longrightarrow> e k = 0\"", "lemma e_0 [simp]: \"e 0 = 1\"", "lemma e_recurrence:\n  assumes k: \"k > 0\"\n  shows   \"e k = -(\\<Sum>i=1..k. (- 1) ^ i * e (k - i) * p i) / of_nat k\"", "lemma p_recurrence:\n  assumes k: \"k > 0\"\n  shows   \"p k = -of_nat k * (-1) ^ k * e k - (\\<Sum>i=1..<k. (-1) ^ i * e i * p (k - i))\"", "lemma p_recurrence'':\n  assumes k: \"k > n\"\n  shows   \"p k = -(\\<Sum>i=1..n. (-1) ^ i * e i * p (k - i))\"", "lemma e_in_Rats:\n  assumes \"\\<And>k. k \\<in> {1..n} \\<Longrightarrow> p k \\<in> \\<rat>\"\n  shows   \"e k \\<in> \\<rat>\"", "lemma p_in_Rats:\n  assumes \"\\<And>k. k \\<in> {1..n} \\<Longrightarrow> p k \\<in> \\<rat>\"\n  shows   \"p k \\<in> \\<rat>\"", "lemma degree_Q [simp]: \"Polynomial.degree Q = n\"", "lemma lead_coeff_Q [simp]: \"Polynomial.coeff Q n = 1\"", "lemma coeff_Q: \"Polynomial.coeff Q k = (if k > n then 0 else (-1) ^ (n - k) * e (n - k))\"", "lemma Q_altdef: \"Q = (\\<Sum>k\\<le>n. Polynomial.monom ((-1) ^ (n - k) * e (n - k)) k)\"", "theorem mset_x_eq_poly_roots_Q: \"{#x i. i \\<in># mset_set {..<n}#} = poly_roots Q\"", "lemmas [simp del] = e'.simps", "lemma e'_0 [simp]: \"e' 0 = 1\"", "lemma e'_eq_0 [simp]: \"k > n \\<Longrightarrow> e' k = 0\"", "lemma f_recurrence:\n  assumes k: \"k > 0\" \"k \\<le> n\"\n  shows   \"f k = -of_nat k * (-1) ^ k * e' k - (\\<Sum>i=1..<k. (- 1) ^ i * e' i * f (k - i))\"", "lemma coeff_Q': \"Polynomial.coeff Q' k = (if k > n then 0 else (-1) ^ (n - k) * e' (n - k))\"", "lemma lead_coeff_Q': \"Polynomial.coeff Q' n = 1\"", "lemma degree_Q' [simp]: \"Polynomial.degree Q' = n\"", "lemma Root: \"Q' = (\\<Prod>i<n. [:-Root i, 1:])\"", "lemma e'_eq_e: \"e' k = e k\"", "lemma p_eq_f:\n  assumes \"k > 0\" \"k \\<le> n\"\n  shows   \"p k = f k\"", "theorem power_sum_puzzle_has_solution:\n  fixes f :: \"nat \\<Rightarrow> complex\"\n  shows \"\\<exists>Root. \\<forall>k\\<in>{1..n}. (\\<Sum>i<n. Root i ^ k) = f k\"", "lemma p_altdef': \"p k = x ^ k + y ^ k + z ^ k\"", "lemma p_base [simp]: \"p (Suc 0) = 1\" \"p 2 = 2\" \"p 3 = 3\"", "lemma e_Suc_0 [simp]: \"e (Suc 0) = 1\"", "lemma e_2 [simp]: \"e 2 = -1/2\"", "lemma e_3 [simp]: \"e 3 = 1/6\"", "lemma p_recurrence''': \"k > 3 \\<Longrightarrow> p k = p (k-3) / 6 + p (k-2) / 2 + p (k-1)\"", "lemma p_in_Rats': \"p k \\<in> \\<rat>\"", "lemma xyz_eq: \"{#x, y, z#} = poly_roots [:-1/6, -1/2, -1, 1:]\"", "lemma xyz_irrational: \"set_mset (poly_roots [:-1/6, -1/2, -1, 1::complex:]) \\<inter> \\<rat> = {}\"", "lemma rsquarefree: \"rsquarefree [:-1/6, -1/2, -1, 1 :: complex:]\"", "lemma distinct_xyz: \"distinct [x, y, z]\"", "lemma \"p 4 = 25 / 6\" and \"p 5 = 6\" and \"p 10 = 15539 / 432\""], "translations": [["", "lemma p_0 [simp]: \"p 0 = of_nat n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p 0 = of_nat n", "by (simp add: p_def)"], ["", "lemma p_altdef: \"p k = insertion x (powsum_mpoly {..<n} k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p k = insertion x (powsum_mpoly {..<n} k)", "by (simp add: p_def)"], ["", "text \\<open>\n  Similarly, we introduce the notation $e_k = e_k(x_1,\\ldots, x_n)$ where\n  $e_k(X_1,\\ldots,X_n)$ is the $k$-th elementary symmetric polynomial (i.\\,e. the sum of\n  all monomials that can be formed by taking the product of exactly $k$ distinct variables).\n\\<close>"], ["", "definition e where \"e k = (\\<Sum>Y | Y \\<subseteq> {..<n} \\<and> card Y = k. prod x Y)\""], ["", "lemma e_altdef: \"e k = insertion x (sym_mpoly {..<n} k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e k = insertion x (sym_mpoly {..<n} k)", "by (simp add: e_def insertion_sym_mpoly)"], ["", "text \\<open>\n  It is clear that $e_k$ vanishes for $k > n$.\n\\<close>"], ["", "lemma e_eq_0 [simp]: \"k > n \\<Longrightarrow> e k = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < k \\<Longrightarrow> e k = 0", "by (simp add: e_altdef)"], ["", "lemma e_0 [simp]: \"e 0 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e 0 = 1", "by (simp add: e_altdef)"], ["", "text \\<open>\n  The recurrences we got from the Girard--Newton Theorem earlier now directly give us\n  analogous recurrences for $e_k$ and $p_k$:\n\\<close>"], ["", "lemma e_recurrence:\n  assumes k: \"k > 0\"\n  shows   \"e k = -(\\<Sum>i=1..k. (- 1) ^ i * e (k - i) * p i) / of_nat k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e k = - (\\<Sum>i = 1..k. (- 1) ^ i * e (k - i) * p i) / of_nat k", "using assms"], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. e k = - (\\<Sum>i = 1..k. (- 1) ^ i * e (k - i) * p i) / of_nat k", "unfolding e_altdef p_altdef"], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. insertion x (sym_mpoly {..<n} k) =\n    - (\\<Sum>i = 1..k.\n          (- 1) ^ i * insertion x (sym_mpoly {..<n} (k - i)) *\n          insertion x (powsum_mpoly {..<n} i)) /\n    of_nat k", "by (subst sym_mpoly_recurrence)\n     (auto simp: insertion_sum insertion_add insertion_mult insertion_power insertion_sym_mpoly)"], ["", "lemma p_recurrence:\n  assumes k: \"k > 0\"\n  shows   \"p k = -of_nat k * (-1) ^ k * e k - (\\<Sum>i=1..<k. (-1) ^ i * e i * p (k - i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p k =\n    - of_nat k * (- 1) ^ k * e k -\n    (\\<Sum>i = 1..<k. (- 1) ^ i * e i * p (k - i))", "using assms"], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. p k =\n    - of_nat k * (- 1) ^ k * e k -\n    (\\<Sum>i = 1..<k. (- 1) ^ i * e i * p (k - i))", "unfolding e_altdef p_altdef"], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. insertion x (powsum_mpoly {..<n} k) =\n    - of_nat k * (- 1) ^ k * insertion x (sym_mpoly {..<n} k) -\n    (\\<Sum>i = 1..<k.\n        (- 1) ^ i * insertion x (sym_mpoly {..<n} i) *\n        insertion x (powsum_mpoly {..<n} (k - i)))", "by (subst powsum_mpoly_recurrence)\n     (auto simp: insertion_sum insertion_add insertion_mult insertion_diff \n                 insertion_power insertion_sym_mpoly)"], ["", "lemma p_recurrence'':\n  assumes k: \"k > n\"\n  shows   \"p k = -(\\<Sum>i=1..n. (-1) ^ i * e i * p (k - i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p k = - (\\<Sum>i = 1..n. (- 1) ^ i * e i * p (k - i))", "using assms"], ["proof (prove)\nusing this:\n  n < k\n\ngoal (1 subgoal):\n 1. p k = - (\\<Sum>i = 1..n. (- 1) ^ i * e i * p (k - i))", "unfolding e_altdef p_altdef"], ["proof (prove)\nusing this:\n  n < k\n\ngoal (1 subgoal):\n 1. insertion x (powsum_mpoly {..<n} k) =\n    - (\\<Sum>i = 1..n.\n          (- 1) ^ i * insertion x (sym_mpoly {..<n} i) *\n          insertion x (powsum_mpoly {..<n} (k - i)))", "by (subst powsum_mpoly_recurrence')\n     (auto simp: insertion_sum insertion_add insertion_mult insertion_diff \n                 insertion_power insertion_sym_mpoly)"], ["", "text \\<open>\n  It is clear from this recurrence that if $p_1$ to $p_n$ are rational, then so are the $e_k$:\n\\<close>"], ["", "lemma e_in_Rats:\n  assumes \"\\<And>k. k \\<in> {1..n} \\<Longrightarrow> p k \\<in> \\<rat>\"\n  shows   \"e k \\<in> \\<rat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e k \\<in> \\<rat>", "proof (cases \"k \\<le> n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k \\<le> n \\<Longrightarrow> e k \\<in> \\<rat>\n 2. \\<not> k \\<le> n \\<Longrightarrow> e k \\<in> \\<rat>", "case True"], ["proof (state)\nthis:\n  k \\<le> n\n\ngoal (2 subgoals):\n 1. k \\<le> n \\<Longrightarrow> e k \\<in> \\<rat>\n 2. \\<not> k \\<le> n \\<Longrightarrow> e k \\<in> \\<rat>", "thus ?thesis"], ["proof (prove)\nusing this:\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. e k \\<in> \\<rat>", "proof (induction k rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> e y \\<in> \\<rat>;\n        x \\<le> n\\<rbrakk>\n       \\<Longrightarrow> e x \\<in> \\<rat>", "case (less k)"], ["proof (state)\nthis:\n  \\<lbrakk>?y < k; ?y \\<le> n\\<rbrakk> \\<Longrightarrow> e ?y \\<in> \\<rat>\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> e y \\<in> \\<rat>;\n        x \\<le> n\\<rbrakk>\n       \\<Longrightarrow> e x \\<in> \\<rat>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. e k \\<in> \\<rat>", "proof (cases \"k = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> e k \\<in> \\<rat>\n 2. k \\<noteq> 0 \\<Longrightarrow> e k \\<in> \\<rat>", "case False"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> e k \\<in> \\<rat>\n 2. k \\<noteq> 0 \\<Longrightarrow> e k \\<in> \\<rat>", "thus ?thesis"], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. e k \\<in> \\<rat>", "using assms less"], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n  ?k \\<in> {1..n} \\<Longrightarrow> p ?k \\<in> \\<rat>\n  \\<lbrakk>?y < k; ?y \\<le> n\\<rbrakk> \\<Longrightarrow> e ?y \\<in> \\<rat>\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. e k \\<in> \\<rat>", "by (subst e_recurrence) (auto intro!: Rats_divide)"], ["proof (state)\nthis:\n  e k \\<in> \\<rat>\n\ngoal (1 subgoal):\n 1. k = 0 \\<Longrightarrow> e k \\<in> \\<rat>", "qed auto"], ["proof (state)\nthis:\n  e k \\<in> \\<rat>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  e k \\<in> \\<rat>\n\ngoal (1 subgoal):\n 1. \\<not> k \\<le> n \\<Longrightarrow> e k \\<in> \\<rat>", "qed auto"], ["", "text \\<open>\n  Analogously, if $p_1$ to $p_n$ are rational, then so are all the other $p_k$:\n\\<close>"], ["", "lemma p_in_Rats:\n  assumes \"\\<And>k. k \\<in> {1..n} \\<Longrightarrow> p k \\<in> \\<rat>\"\n  shows   \"p k \\<in> \\<rat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p k \\<in> \\<rat>", "proof (induction k rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. y < x \\<Longrightarrow> p y \\<in> \\<rat>) \\<Longrightarrow>\n       p x \\<in> \\<rat>", "case (less k)"], ["proof (state)\nthis:\n  ?y < k \\<Longrightarrow> p ?y \\<in> \\<rat>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. y < x \\<Longrightarrow> p y \\<in> \\<rat>) \\<Longrightarrow>\n       p x \\<in> \\<rat>", "consider \"k = 0\" | \"k \\<in> {1..n}\" | \"k > n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>k = 0 \\<Longrightarrow> thesis;\n     k \\<in> {1..n} \\<Longrightarrow> thesis;\n     n < k \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by force"], ["proof (state)\nthis:\n  \\<lbrakk>k = 0 \\<Longrightarrow> ?thesis;\n   k \\<in> {1..n} \\<Longrightarrow> ?thesis;\n   n < k \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. y < x \\<Longrightarrow> p y \\<in> \\<rat>) \\<Longrightarrow>\n       p x \\<in> \\<rat>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>k = 0 \\<Longrightarrow> ?thesis;\n   k \\<in> {1..n} \\<Longrightarrow> ?thesis;\n   n < k \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. p k \\<in> \\<rat>", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. k = 0 \\<Longrightarrow> p k \\<in> \\<rat>\n 2. k \\<in> {1..n} \\<Longrightarrow> p k \\<in> \\<rat>\n 3. n < k \\<Longrightarrow> p k \\<in> \\<rat>", "assume \"k > n\""], ["proof (state)\nthis:\n  n < k\n\ngoal (3 subgoals):\n 1. k = 0 \\<Longrightarrow> p k \\<in> \\<rat>\n 2. k \\<in> {1..n} \\<Longrightarrow> p k \\<in> \\<rat>\n 3. n < k \\<Longrightarrow> p k \\<in> \\<rat>", "thus ?thesis"], ["proof (prove)\nusing this:\n  n < k\n\ngoal (1 subgoal):\n 1. p k \\<in> \\<rat>", "using less assms"], ["proof (prove)\nusing this:\n  n < k\n  ?y < k \\<Longrightarrow> p ?y \\<in> \\<rat>\n  ?k \\<in> {1..n} \\<Longrightarrow> p ?k \\<in> \\<rat>\n\ngoal (1 subgoal):\n 1. p k \\<in> \\<rat>", "by (subst p_recurrence'') (auto intro!: sum_in_Rats Rats_mult e_in_Rats)"], ["proof (state)\nthis:\n  p k \\<in> \\<rat>\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> p k \\<in> \\<rat>\n 2. k \\<in> {1..n} \\<Longrightarrow> p k \\<in> \\<rat>", "qed (use assms in auto)"], ["proof (state)\nthis:\n  p k \\<in> \\<rat>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Next, we define the unique monic polynomial that has $x_1, \\ldots, x_n$ as its roots\n  (respecting multiplicity):\n\\<close>"], ["", "definition Q :: \"complex poly\" where \"Q = (\\<Prod>i<n. [:-x i, 1:])\""], ["", "lemma degree_Q [simp]: \"Polynomial.degree Q = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polynomial.degree Q = n", "by (simp add: Q_def degree_prod_eq_sum_degree)"], ["", "lemma lead_coeff_Q [simp]: \"Polynomial.coeff Q n = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly.coeff Q n = 1", "using monic_prod[of \"{..<n}\" \"\\<lambda>i. [:-x i, 1:]\"]"], ["proof (prove)\nusing this:\n  (\\<And>a.\n      a \\<in> {..<n} \\<Longrightarrow> monic [:- x a, 1:]) \\<Longrightarrow>\n  monic (\\<Prod>i<n. [:- x i, 1:])\n\ngoal (1 subgoal):\n 1. poly.coeff Q n = 1", "by (simp add: Q_def degree_prod_eq_sum_degree)"], ["", "text \\<open>\n  By Vieta's Theorem, we then have:\n  \\[Q(X) = \\sum_{k=0}^n (-1)^{n-k} e_{n-k} X^k\\]\n  In other words: The above allows us to determine the $x_1, \\ldots, x_n$ explicitly.\n  They are, in fact, precisely the roots of the above polynomial (respecting multiplicity).\n  Since this polynomial depends only on the $e_k$, which are in turn determined by\n  $p_1, \\ldots, p_n$, this means that these are the \\<^emph>\\<open>only\\<close> solutions of this puzzle\n  (up to permutation of the $x_i$).\n\\<close>"], ["", "lemma coeff_Q: \"Polynomial.coeff Q k = (if k > n then 0 else (-1) ^ (n - k) * e (n - k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly.coeff Q k = (if n < k then 0 else (- 1) ^ (n - k) * e (n - k))", "proof (cases \"k \\<le> n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k \\<le> n \\<Longrightarrow>\n    poly.coeff Q k = (if n < k then 0 else (- 1) ^ (n - k) * e (n - k))\n 2. \\<not> k \\<le> n \\<Longrightarrow>\n    poly.coeff Q k = (if n < k then 0 else (- 1) ^ (n - k) * e (n - k))", "case True"], ["proof (state)\nthis:\n  k \\<le> n\n\ngoal (2 subgoals):\n 1. k \\<le> n \\<Longrightarrow>\n    poly.coeff Q k = (if n < k then 0 else (- 1) ^ (n - k) * e (n - k))\n 2. \\<not> k \\<le> n \\<Longrightarrow>\n    poly.coeff Q k = (if n < k then 0 else (- 1) ^ (n - k) * e (n - k))", "thus ?thesis"], ["proof (prove)\nusing this:\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. poly.coeff Q k = (if n < k then 0 else (- 1) ^ (n - k) * e (n - k))", "using coeff_poly_from_roots[of \"{..<n}\" k x]"], ["proof (prove)\nusing this:\n  k \\<le> n\n  \\<lbrakk>finite {..<n}; k \\<le> card {..<n}\\<rbrakk>\n  \\<Longrightarrow> poly.coeff (\\<Prod>xa<n. [:- x xa, 1:]) k =\n                    (- 1) ^ (card {..<n} - k) *\n                    (\\<Sum>X | X \\<subseteq> {..<n} \\<and>\n                               card X = card {..<n} - k.\n                       prod x X)\n\ngoal (1 subgoal):\n 1. poly.coeff Q k = (if n < k then 0 else (- 1) ^ (n - k) * e (n - k))", "by (auto simp: Q_def e_def)"], ["proof (state)\nthis:\n  poly.coeff Q k = (if n < k then 0 else (- 1) ^ (n - k) * e (n - k))\n\ngoal (1 subgoal):\n 1. \\<not> k \\<le> n \\<Longrightarrow>\n    poly.coeff Q k = (if n < k then 0 else (- 1) ^ (n - k) * e (n - k))", "qed (auto simp: Polynomial.coeff_eq_0)"], ["", "lemma Q_altdef: \"Q = (\\<Sum>k\\<le>n. Polynomial.monom ((-1) ^ (n - k) * e (n - k)) k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q = (\\<Sum>k\\<le>n. Polynomial.monom ((- 1) ^ (n - k) * e (n - k)) k)", "by (subst poly_as_sum_of_monoms [symmetric]) (simp add: coeff_Q)"], ["", "text \\<open>\n  The following theorem again shows that $x_1, \\ldots, x_n$ are precisely the roots\n  of \\<^term>\\<open>Q\\<close>, respecting multiplicity.\n\\<close>"], ["", "theorem mset_x_eq_poly_roots_Q: \"{#x i. i \\<in># mset_set {..<n}#} = poly_roots Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset x (mset_set {..<n}) = poly_roots Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. image_mset x (mset_set {..<n}) = poly_roots Q", "have \"poly_roots Q = (\\<Sum>i<n. {#x i#})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly_roots Q = (\\<Sum>i<n. {#x i#})", "by (simp add: Q_def poly_roots_prod)"], ["proof (state)\nthis:\n  poly_roots Q = (\\<Sum>i<n. {#x i#})\n\ngoal (1 subgoal):\n 1. image_mset x (mset_set {..<n}) = poly_roots Q", "also"], ["proof (state)\nthis:\n  poly_roots Q = (\\<Sum>i<n. {#x i#})\n\ngoal (1 subgoal):\n 1. image_mset x (mset_set {..<n}) = poly_roots Q", "have \"\\<dots> = {#x i. i \\<in># mset_set {..<n}#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. {#x i#}) = image_mset x (mset_set {..<n})", "by (induction n) (auto simp: lessThan_Suc)"], ["proof (state)\nthis:\n  (\\<Sum>i<n. {#x i#}) = image_mset x (mset_set {..<n})\n\ngoal (1 subgoal):\n 1. image_mset x (mset_set {..<n}) = poly_roots Q", "finally"], ["proof (chain)\npicking this:\n  poly_roots Q = image_mset x (mset_set {..<n})", "show ?thesis"], ["proof (prove)\nusing this:\n  poly_roots Q = image_mset x (mset_set {..<n})\n\ngoal (1 subgoal):\n 1. image_mset x (mset_set {..<n}) = poly_roots Q", ".."], ["proof (state)\nthis:\n  image_mset x (mset_set {..<n}) = poly_roots Q\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Existence of solutions\\<close>"], ["", "text \\<open>\n  So far, we have assumed a solution to the puzzle and then shown the properties that this\n  solution must fulfil. However, we have not yet shown that there \\<^emph>\\<open>is\\<close> a solution.\n  We will do that now.\n\n  Let $n$ be a natural number and $f_k$ some sequence of complex numbers. We will show that \n  there are $x_1, \\ldots, x_n$ so that $x_1 ^ k + \\ldots + x_n ^ k = f_k$ for any $1\\leq k\\leq n$.\n\\<close>"], ["", "locale power_sum_puzzle_existence =\n  fixes f :: \"nat \\<Rightarrow> complex\" and n :: nat\nbegin"], ["", "text \\<open>\n  First, we define a sequence of numbers \\<open>e'\\<close> analogously to the sequence \\<open>e\\<close> before,\n  except that we replace all occurrences of the power sum $p_k$ with $f_k$ (recall that in the end\n  we want $p_k = f_k$).\n\\<close>"], ["", "fun e' :: \"nat \\<Rightarrow> complex\"\n  where \"e' k = (if k = 0 then 1 else if k > n then 0\n                 else -(\\<Sum>i=1..k. (-1) ^ i * e' (k - i) * f i) / of_nat k)\""], ["", "lemmas [simp del] = e'.simps"], ["", "lemma e'_0 [simp]: \"e' 0 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e' 0 = 1", "by (simp add: e'.simps)"], ["", "lemma e'_eq_0 [simp]: \"k > n \\<Longrightarrow> e' k = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < k \\<Longrightarrow> e' k = 0", "by (auto simp: e'.simps)"], ["", "text \\<open>\n  Just as before, we can show the following recurrence for \\<open>f\\<close> in terms of \\<open>e'\\<close>:\n\\<close>"], ["", "lemma f_recurrence:\n  assumes k: \"k > 0\" \"k \\<le> n\"\n  shows   \"f k = -of_nat k * (-1) ^ k * e' k - (\\<Sum>i=1..<k. (- 1) ^ i * e' i * f (k - i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f k =\n    - of_nat k * (- 1) ^ k * e' k -\n    (\\<Sum>i = 1..<k. (- 1) ^ i * e' i * f (k - i))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f k =\n    - of_nat k * (- 1) ^ k * e' k -\n    (\\<Sum>i = 1..<k. (- 1) ^ i * e' i * f (k - i))", "have \"-of_nat k * e' k = (\\<Sum>i=1..k. (- 1) ^ i * e' (k - i) * f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - of_nat k * e' k = (\\<Sum>i = 1..k. (- 1) ^ i * e' (k - i) * f i)", "using assms"], ["proof (prove)\nusing this:\n  0 < k\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. - of_nat k * e' k = (\\<Sum>i = 1..k. (- 1) ^ i * e' (k - i) * f i)", "by (subst e'.simps) (simp add: field_simps)"], ["proof (state)\nthis:\n  - of_nat k * e' k = (\\<Sum>i = 1..k. (- 1) ^ i * e' (k - i) * f i)\n\ngoal (1 subgoal):\n 1. f k =\n    - of_nat k * (- 1) ^ k * e' k -\n    (\\<Sum>i = 1..<k. (- 1) ^ i * e' i * f (k - i))", "hence \"(-1)^k * (-of_nat k * e' k) = (-1)^k * (\\<Sum>i=1..k. (- 1) ^ i * e' (k - i) * f i)\""], ["proof (prove)\nusing this:\n  - of_nat k * e' k = (\\<Sum>i = 1..k. (- 1) ^ i * e' (k - i) * f i)\n\ngoal (1 subgoal):\n 1. (- 1) ^ k * (- of_nat k * e' k) =\n    (- 1) ^ k * (\\<Sum>i = 1..k. (- 1) ^ i * e' (k - i) * f i)", "by simp"], ["proof (state)\nthis:\n  (- 1) ^ k * (- of_nat k * e' k) =\n  (- 1) ^ k * (\\<Sum>i = 1..k. (- 1) ^ i * e' (k - i) * f i)\n\ngoal (1 subgoal):\n 1. f k =\n    - of_nat k * (- 1) ^ k * e' k -\n    (\\<Sum>i = 1..<k. (- 1) ^ i * e' i * f (k - i))", "also"], ["proof (state)\nthis:\n  (- 1) ^ k * (- of_nat k * e' k) =\n  (- 1) ^ k * (\\<Sum>i = 1..k. (- 1) ^ i * e' (k - i) * f i)\n\ngoal (1 subgoal):\n 1. f k =\n    - of_nat k * (- 1) ^ k * e' k -\n    (\\<Sum>i = 1..<k. (- 1) ^ i * e' i * f (k - i))", "have \"\\<dots> = f k + (-1) ^ k * (\\<Sum>i=1..<k. (- 1) ^ i * e' (k - i) * f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- 1) ^ k * (\\<Sum>i = 1..k. (- 1) ^ i * e' (k - i) * f i) =\n    f k + (- 1) ^ k * (\\<Sum>i = 1..<k. (- 1) ^ i * e' (k - i) * f i)", "using assms"], ["proof (prove)\nusing this:\n  0 < k\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. (- 1) ^ k * (\\<Sum>i = 1..k. (- 1) ^ i * e' (k - i) * f i) =\n    f k + (- 1) ^ k * (\\<Sum>i = 1..<k. (- 1) ^ i * e' (k - i) * f i)", "by (subst sum.last_plus) (auto simp: minus_one_power_iff)"], ["proof (state)\nthis:\n  (- 1) ^ k * (\\<Sum>i = 1..k. (- 1) ^ i * e' (k - i) * f i) =\n  f k + (- 1) ^ k * (\\<Sum>i = 1..<k. (- 1) ^ i * e' (k - i) * f i)\n\ngoal (1 subgoal):\n 1. f k =\n    - of_nat k * (- 1) ^ k * e' k -\n    (\\<Sum>i = 1..<k. (- 1) ^ i * e' i * f (k - i))", "also"], ["proof (state)\nthis:\n  (- 1) ^ k * (\\<Sum>i = 1..k. (- 1) ^ i * e' (k - i) * f i) =\n  f k + (- 1) ^ k * (\\<Sum>i = 1..<k. (- 1) ^ i * e' (k - i) * f i)\n\ngoal (1 subgoal):\n 1. f k =\n    - of_nat k * (- 1) ^ k * e' k -\n    (\\<Sum>i = 1..<k. (- 1) ^ i * e' i * f (k - i))", "have \"(-1) ^ k * (\\<Sum>i=1..<k. (- 1) ^ i * e' (k - i) * f i) =\n             (\\<Sum>i=1..<k. (- 1) ^ (k - i) * e' (k - i) * f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- 1) ^ k * (\\<Sum>i = 1..<k. (- 1) ^ i * e' (k - i) * f i) =\n    (\\<Sum>i = 1..<k. (- 1) ^ (k - i) * e' (k - i) * f i)", "unfolding sum_distrib_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..<k. (- 1) ^ k * ((- 1) ^ n * e' (k - n) * f n)) =\n    (\\<Sum>i = 1..<k. (- 1) ^ (k - i) * e' (k - i) * f i)", "by (intro sum.cong) (auto simp: minus_one_power_iff)"], ["proof (state)\nthis:\n  (- 1) ^ k * (\\<Sum>i = 1..<k. (- 1) ^ i * e' (k - i) * f i) =\n  (\\<Sum>i = 1..<k. (- 1) ^ (k - i) * e' (k - i) * f i)\n\ngoal (1 subgoal):\n 1. f k =\n    - of_nat k * (- 1) ^ k * e' k -\n    (\\<Sum>i = 1..<k. (- 1) ^ i * e' i * f (k - i))", "also"], ["proof (state)\nthis:\n  (- 1) ^ k * (\\<Sum>i = 1..<k. (- 1) ^ i * e' (k - i) * f i) =\n  (\\<Sum>i = 1..<k. (- 1) ^ (k - i) * e' (k - i) * f i)\n\ngoal (1 subgoal):\n 1. f k =\n    - of_nat k * (- 1) ^ k * e' k -\n    (\\<Sum>i = 1..<k. (- 1) ^ i * e' i * f (k - i))", "have \"\\<dots> = (\\<Sum>i=1..<k. (- 1) ^ i * e' i * f (k - i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..<k. (- 1) ^ (k - i) * e' (k - i) * f i) =\n    (\\<Sum>i = 1..<k. (- 1) ^ i * e' i * f (k - i))", "by (intro sum.reindex_bij_witness[of _ \"\\<lambda>i. k - i\" \"\\<lambda>i. k - i\"]) auto"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..<k. (- 1) ^ (k - i) * e' (k - i) * f i) =\n  (\\<Sum>i = 1..<k. (- 1) ^ i * e' i * f (k - i))\n\ngoal (1 subgoal):\n 1. f k =\n    - of_nat k * (- 1) ^ k * e' k -\n    (\\<Sum>i = 1..<k. (- 1) ^ i * e' i * f (k - i))", "finally"], ["proof (chain)\npicking this:\n  (- 1) ^ k * (- of_nat k * e' k) =\n  f k + (\\<Sum>i = 1..<k. (- 1) ^ i * e' i * f (k - i))", "show ?thesis"], ["proof (prove)\nusing this:\n  (- 1) ^ k * (- of_nat k * e' k) =\n  f k + (\\<Sum>i = 1..<k. (- 1) ^ i * e' i * f (k - i))\n\ngoal (1 subgoal):\n 1. f k =\n    - of_nat k * (- 1) ^ k * e' k -\n    (\\<Sum>i = 1..<k. (- 1) ^ i * e' i * f (k - i))", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  f k =\n  - of_nat k * (- 1) ^ k * e' k -\n  (\\<Sum>i = 1..<k. (- 1) ^ i * e' i * f (k - i))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  We now define a polynomial whose roots will be precisely the solution $x_1, \\ldots, x_n$ to our\n  problem.\n\\<close>"], ["", "lift_definition Q' :: \"complex poly\" is \"\\<lambda>k. if k > n then 0 else (-1) ^ (n - k) * e' (n - k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>na.\n       (if n < na then 0 else (- 1) ^ (n - na) * e' (n - na)) = 0", "using eventually_gt_at_top[of n]"], ["proof (prove)\nusing this:\n  eventually ((<) n) sequentially\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>na.\n       (if n < na then 0 else (- 1) ^ (n - na) * e' (n - na)) = 0", "unfolding cofinite_eq_sequentially"], ["proof (prove)\nusing this:\n  eventually ((<) n) sequentially\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F na in sequentially.\n       (if n < na then 0 else (- 1) ^ (n - na) * e' (n - na)) = 0", "by eventually_elim auto"], ["", "lemma coeff_Q': \"Polynomial.coeff Q' k = (if k > n then 0 else (-1) ^ (n - k) * e' (n - k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly.coeff Q' k = (if n < k then 0 else (- 1) ^ (n - k) * e' (n - k))", "by transfer auto"], ["", "lemma lead_coeff_Q': \"Polynomial.coeff Q' n = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly.coeff Q' n = 1", "by (simp add: coeff_Q')"], ["", "lemma degree_Q' [simp]: \"Polynomial.degree Q' = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polynomial.degree Q' = n", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. Polynomial.degree Q' \\<le> n\n 2. n \\<le> Polynomial.degree Q'", "show \"Polynomial.degree Q' \\<ge> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> Polynomial.degree Q'", "by (rule le_degree) (auto simp: coeff_Q')"], ["proof (state)\nthis:\n  n \\<le> Polynomial.degree Q'\n\ngoal (1 subgoal):\n 1. Polynomial.degree Q' \\<le> n", "show \"Polynomial.degree Q' \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polynomial.degree Q' \\<le> n", "by (rule degree_le) (auto simp: coeff_Q')"], ["proof (state)\nthis:\n  Polynomial.degree Q' \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Since the complex numbers are algebraically closed, this polynomial splits into\n  linear factors:\n\\<close>"], ["", "definition Root :: \"nat \\<Rightarrow> complex\"\n  where \"Root = (SOME Root. Q' = (\\<Prod>i<n. [:-Root i, 1:]))\""], ["", "lemma Root: \"Q' = (\\<Prod>i<n. [:-Root i, 1:])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q' = (\\<Prod>i<n. [:- Root i, 1:])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q' = (\\<Prod>i<n. [:- Root i, 1:])", "obtain rs where rs: \"(\\<Prod>r\\<leftarrow>rs. [:-r, 1:]) = Q'\" \"length rs = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>(\\<Prod>r\\<leftarrow>rs. [:- r, 1:]) = Q';\n         length rs = n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using fundamental_theorem_algebra_factorized[of Q'] lead_coeff_Q'"], ["proof (prove)\nusing this:\n  \\<exists>as.\n     Polynomial.smult (Polynomial.lead_coeff Q')\n      (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) =\n     Q' \\<and>\n     length as = Polynomial.degree Q'\n  poly.coeff Q' n = 1\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>(\\<Prod>r\\<leftarrow>rs. [:- r, 1:]) = Q';\n         length rs = n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<Prod>r\\<leftarrow>rs. [:- r, 1:]) = Q'\n  length rs = n\n\ngoal (1 subgoal):\n 1. Q' = (\\<Prod>i<n. [:- Root i, 1:])", "have \"Q' = (\\<Prod>r\\<leftarrow>rs. [:-r, 1:])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q' = (\\<Prod>r\\<leftarrow>rs. [:- r, 1:])", "by (simp add: rs)"], ["proof (state)\nthis:\n  Q' = (\\<Prod>r\\<leftarrow>rs. [:- r, 1:])\n\ngoal (1 subgoal):\n 1. Q' = (\\<Prod>i<n. [:- Root i, 1:])", "also"], ["proof (state)\nthis:\n  Q' = (\\<Prod>r\\<leftarrow>rs. [:- r, 1:])\n\ngoal (1 subgoal):\n 1. Q' = (\\<Prod>i<n. [:- Root i, 1:])", "have \"\\<dots> = (\\<Prod>r=0..<n. [:-rs ! r, 1:])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>r\\<leftarrow>rs. [:- r, 1:]) =\n    (\\<Prod>r = 0..<n. [:- rs ! r, 1:])", "by (subst prod_list_prod_nth) (auto simp: rs)"], ["proof (state)\nthis:\n  (\\<Prod>r\\<leftarrow>rs. [:- r, 1:]) = (\\<Prod>r = 0..<n. [:- rs ! r, 1:])\n\ngoal (1 subgoal):\n 1. Q' = (\\<Prod>i<n. [:- Root i, 1:])", "also"], ["proof (state)\nthis:\n  (\\<Prod>r\\<leftarrow>rs. [:- r, 1:]) = (\\<Prod>r = 0..<n. [:- rs ! r, 1:])\n\ngoal (1 subgoal):\n 1. Q' = (\\<Prod>i<n. [:- Root i, 1:])", "have \"{0..<n} = {..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..<n} = {..<n}", "by auto"], ["proof (state)\nthis:\n  {0..<n} = {..<n}\n\ngoal (1 subgoal):\n 1. Q' = (\\<Prod>i<n. [:- Root i, 1:])", "finally"], ["proof (chain)\npicking this:\n  Q' = (\\<Prod>r<n. [:- rs ! r, 1:])", "have \"\\<exists>Root. Q' = (\\<Prod>i<n. [:-Root i, 1:])\""], ["proof (prove)\nusing this:\n  Q' = (\\<Prod>r<n. [:- rs ! r, 1:])\n\ngoal (1 subgoal):\n 1. \\<exists>Root. Q' = (\\<Prod>i<n. [:- Root i, 1:])", "by blast"], ["proof (state)\nthis:\n  \\<exists>Root. Q' = (\\<Prod>i<n. [:- Root i, 1:])\n\ngoal (1 subgoal):\n 1. Q' = (\\<Prod>i<n. [:- Root i, 1:])", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>Root. Q' = (\\<Prod>i<n. [:- Root i, 1:])\n\ngoal (1 subgoal):\n 1. Q' = (\\<Prod>i<n. [:- Root i, 1:])", "unfolding Root_def"], ["proof (prove)\nusing this:\n  \\<exists>Root. Q' = (\\<Prod>i<n. [:- Root i, 1:])\n\ngoal (1 subgoal):\n 1. Q' =\n    (\\<Prod>i<n. [:- (SOME Root. Q' = (\\<Prod>i<n. [:- Root i, 1:])) i, 1:])", "by (rule someI_ex)"], ["proof (state)\nthis:\n  Q' = (\\<Prod>i<n. [:- Root i, 1:])\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  We can therefore now use the results from before for these $x_1, \\ldots, x_n$.\n\\<close>"], ["", "sublocale power_sum_puzzle Root n"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "text \\<open>\n  Vieta's theorem gives us an expression for the coefficients of \\<open>Q'\\<close> in terms of\n  $e_k(x_1,\\ldots,x_n)$. This shows that our \\<open>e'\\<close> is indeed exactly the same as \\<open>e\\<close>.\n\\<close>"], ["", "lemma e'_eq_e: \"e' k = e k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e' k = e k", "proof (cases \"k \\<le> n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k \\<le> n \\<Longrightarrow> e' k = e k\n 2. \\<not> k \\<le> n \\<Longrightarrow> e' k = e k", "case True"], ["proof (state)\nthis:\n  k \\<le> n\n\ngoal (2 subgoals):\n 1. k \\<le> n \\<Longrightarrow> e' k = e k\n 2. \\<not> k \\<le> n \\<Longrightarrow> e' k = e k", "from True"], ["proof (chain)\npicking this:\n  k \\<le> n", "have \"e' k = (-1) ^ k * poly.coeff Q' (n - k)\""], ["proof (prove)\nusing this:\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. e' k = (- 1) ^ k * poly.coeff Q' (n - k)", "by (simp add: coeff_Q')"], ["proof (state)\nthis:\n  e' k = (- 1) ^ k * poly.coeff Q' (n - k)\n\ngoal (2 subgoals):\n 1. k \\<le> n \\<Longrightarrow> e' k = e k\n 2. \\<not> k \\<le> n \\<Longrightarrow> e' k = e k", "also"], ["proof (state)\nthis:\n  e' k = (- 1) ^ k * poly.coeff Q' (n - k)\n\ngoal (2 subgoals):\n 1. k \\<le> n \\<Longrightarrow> e' k = e k\n 2. \\<not> k \\<le> n \\<Longrightarrow> e' k = e k", "have \"Q' = (\\<Prod>x<n. [:-Root x, 1:])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q' = (\\<Prod>x<n. [:- Root x, 1:])", "using Root"], ["proof (prove)\nusing this:\n  Q' = (\\<Prod>i<n. [:- Root i, 1:])\n\ngoal (1 subgoal):\n 1. Q' = (\\<Prod>x<n. [:- Root x, 1:])", "by simp"], ["proof (state)\nthis:\n  Q' = (\\<Prod>x<n. [:- Root x, 1:])\n\ngoal (2 subgoals):\n 1. k \\<le> n \\<Longrightarrow> e' k = e k\n 2. \\<not> k \\<le> n \\<Longrightarrow> e' k = e k", "also"], ["proof (state)\nthis:\n  Q' = (\\<Prod>x<n. [:- Root x, 1:])\n\ngoal (2 subgoals):\n 1. k \\<le> n \\<Longrightarrow> e' k = e k\n 2. \\<not> k \\<le> n \\<Longrightarrow> e' k = e k", "have \"(-1) ^ k * poly.coeff \\<dots> (n - k) = e k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- 1) ^ k * poly.coeff (\\<Prod>x<n. [:- Root x, 1:]) (n - k) = e k", "using True coeff_poly_from_roots[of \"{..<n}\" \"n - k\" Root]"], ["proof (prove)\nusing this:\n  k \\<le> n\n  \\<lbrakk>finite {..<n}; n - k \\<le> card {..<n}\\<rbrakk>\n  \\<Longrightarrow> poly.coeff (\\<Prod>x<n. [:- Root x, 1:]) (n - k) =\n                    (- 1) ^ (card {..<n} - (n - k)) *\n                    (\\<Sum>X | X \\<subseteq> {..<n} \\<and>\n                               card X = card {..<n} - (n - k).\n                       prod Root X)\n\ngoal (1 subgoal):\n 1. (- 1) ^ k * poly.coeff (\\<Prod>x<n. [:- Root x, 1:]) (n - k) = e k", "by (simp add: insertion_sym_mpoly e_altdef)"], ["proof (state)\nthis:\n  (- 1) ^ k * poly.coeff (\\<Prod>x<n. [:- Root x, 1:]) (n - k) = e k\n\ngoal (2 subgoals):\n 1. k \\<le> n \\<Longrightarrow> e' k = e k\n 2. \\<not> k \\<le> n \\<Longrightarrow> e' k = e k", "finally"], ["proof (chain)\npicking this:\n  e' k = e k", "show \"e' k = e k\""], ["proof (prove)\nusing this:\n  e' k = e k\n\ngoal (1 subgoal):\n 1. e' k = e k", "."], ["proof (state)\nthis:\n  e' k = e k\n\ngoal (1 subgoal):\n 1. \\<not> k \\<le> n \\<Longrightarrow> e' k = e k", "qed auto"], ["", "text \\<open>\n  It then follows by a simple induction that $p_k = f_k$ for $1\\leq k\\leq n$, as intended:\n\\<close>"], ["", "lemma p_eq_f:\n  assumes \"k > 0\" \"k \\<le> n\"\n  shows   \"p k = f k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p k = f k", "using assms"], ["proof (prove)\nusing this:\n  0 < k\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. p k = f k", "proof (induction k rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; 0 < y; y \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> p y = f y;\n        0 < x; x \\<le> n\\<rbrakk>\n       \\<Longrightarrow> p x = f x", "case (less k)"], ["proof (state)\nthis:\n  \\<lbrakk>?y < k; 0 < ?y; ?y \\<le> n\\<rbrakk> \\<Longrightarrow> p ?y = f ?y\n  0 < k\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; 0 < y; y \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> p y = f y;\n        0 < x; x \\<le> n\\<rbrakk>\n       \\<Longrightarrow> p x = f x", "thus \"p k = f k\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?y < k; 0 < ?y; ?y \\<le> n\\<rbrakk> \\<Longrightarrow> p ?y = f ?y\n  0 < k\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. p k = f k", "using p_recurrence[of k] f_recurrence[of k] less"], ["proof (prove)\nusing this:\n  \\<lbrakk>?y < k; 0 < ?y; ?y \\<le> n\\<rbrakk> \\<Longrightarrow> p ?y = f ?y\n  0 < k\n  k \\<le> n\n  0 < k \\<Longrightarrow>\n  p k =\n  - of_nat k * (- 1) ^ k * e k -\n  (\\<Sum>i = 1..<k. (- 1) ^ i * e i * p (k - i))\n  \\<lbrakk>0 < k; k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> f k =\n                    - of_nat k * (- 1) ^ k * e' k -\n                    (\\<Sum>i = 1..<k. (- 1) ^ i * e' i * f (k - i))\n  \\<lbrakk>?y < k; 0 < ?y; ?y \\<le> n\\<rbrakk> \\<Longrightarrow> p ?y = f ?y\n  0 < k\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. p k = f k", "by (simp add: e'_eq_e)"], ["proof (state)\nthis:\n  p k = f k\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>\n  Here is a more condensed form of the above existence theorem:\n\\<close>"], ["", "theorem power_sum_puzzle_has_solution:\n  fixes f :: \"nat \\<Rightarrow> complex\"\n  shows \"\\<exists>Root. \\<forall>k\\<in>{1..n}. (\\<Sum>i<n. Root i ^ k) = f k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Root. \\<forall>k\\<in>{1..n}. (\\<Sum>i<n. Root i ^ k) = f k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Root. \\<forall>k\\<in>{1..n}. (\\<Sum>i<n. Root i ^ k) = f k", "interpret power_sum_puzzle_existence f"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Root. \\<forall>k\\<in>{1..n}. (\\<Sum>i<n. Root i ^ k) = f k", "from p_eq_f"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 < ?k; ?k \\<le> n\\<rbrakk> \\<Longrightarrow> p ?k = f ?k", "have \"\\<forall>k\\<in>{1..n}. (\\<Sum>i<n. Root i ^ k) = f k\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?k; ?k \\<le> n\\<rbrakk> \\<Longrightarrow> p ?k = f ?k\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>{1..n}. (\\<Sum>i<n. Root i ^ k) = f k", "by (auto simp: p_def)"], ["proof (state)\nthis:\n  \\<forall>k\\<in>{1..n}. (\\<Sum>i<n. Root i ^ k) = f k\n\ngoal (1 subgoal):\n 1. \\<exists>Root. \\<forall>k\\<in>{1..n}. (\\<Sum>i<n. Root i ^ k) = f k", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>{1..n}. (\\<Sum>i<n. Root i ^ k) = f k\n\ngoal (1 subgoal):\n 1. \\<exists>Root. \\<forall>k\\<in>{1..n}. (\\<Sum>i<n. Root i ^ k) = f k", "by blast"], ["proof (state)\nthis:\n  \\<exists>Root. \\<forall>k\\<in>{1..n}. (\\<Sum>i<n. Root i ^ k) = f k\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>A specific puzzle\\<close>"], ["", "text \\<open>\n  We now look at one particular instance of this puzzle, which was given as an exercise in\n  \\<^emph>\\<open>Abstract Algebra\\<close> by Dummit and Foote (Exercise 23 in Section 14.6)~\\cite{dummit}.\n\n Suppose we know that\n  $x + y + z = 1$, $x^2 + y^2 + z^2 = 2$, and $x^3 + y^3 + z^3 = 3$. Then what is\n  $x^5+y^5+z^5$? What about any arbitrary $x^n+y^n+z^n$?\n\\<close>"], ["", "locale power_sum_puzzle_example =\n  fixes x y z :: complex\n  assumes xyz: \"x   + y   + z   = 1\"\n               \"x^2 + y^2 + z^2 = 2\"\n               \"x^3 + y^3 + z^3 = 3\"\nbegin"], ["", "text \\<open>\n  We reuse the results we have shown in the general case before.\n\\<close>"], ["", "definition f where \"f n = [x,y,z] ! n\""], ["", "sublocale power_sum_puzzle f 3"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "text \\<open>\n  We can simplify \\<^term>\\<open>p\\<close> a bit more now.\n\\<close>"], ["", "lemma p_altdef': \"p k = x ^ k + y ^ k + z ^ k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p k = x ^ k + y ^ k + z ^ k", "unfolding p_def f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<3. [x, y, z] ! i ^ k) = x ^ k + y ^ k + z ^ k", "by (simp add: eval_nat_numeral)"], ["", "lemma p_base [simp]: \"p (Suc 0) = 1\" \"p 2 = 2\" \"p 3 = 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p (Suc 0) = 1 &&& p 2 = 2 &&& p 3 = 3", "using xyz"], ["proof (prove)\nusing this:\n  x + y + z = 1\n  x\\<^sup>2 + y\\<^sup>2 + z\\<^sup>2 = 2\n  x ^ 3 + y ^ 3 + z ^ 3 = 3\n\ngoal (1 subgoal):\n 1. p (Suc 0) = 1 &&& p 2 = 2 &&& p 3 = 3", "by (simp_all add: p_altdef')"], ["", "text \\<open>\n  We can easily compute all the non-zero values of \\<^term>\\<open>e\\<close> recursively:\n\\<close>"], ["", "lemma e_Suc_0 [simp]: \"e (Suc 0) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e (Suc 0) = 1", "by (subst e_recurrence; simp)"], ["", "lemma e_2 [simp]: \"e 2 = -1/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e 2 = - 1 / 2", "by (subst e_recurrence; simp add: atLeastAtMost_nat_numeral)"], ["", "lemma e_3 [simp]: \"e 3 = 1/6\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e 3 = 1 / 6", "by (subst e_recurrence; simp add: atLeastAtMost_nat_numeral)"], ["", "text \\<open>\n  Plugging in all the values, the recurrence relation for \\<^term>\\<open>p\\<close> now looks like this:\n\\<close>"], ["", "lemma p_recurrence''': \"k > 3 \\<Longrightarrow> p k = p (k-3) / 6 + p (k-2) / 2 + p (k-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 < k \\<Longrightarrow> p k = p (k - 3) / 6 + p (k - 2) / 2 + p (k - 1)", "using p_recurrence''[of k]"], ["proof (prove)\nusing this:\n  3 < k \\<Longrightarrow>\n  p k = - (\\<Sum>i = 1..3. (- 1) ^ i * e i * p (k - i))\n\ngoal (1 subgoal):\n 1. 3 < k \\<Longrightarrow> p k = p (k - 3) / 6 + p (k - 2) / 2 + p (k - 1)", "by (simp add: atLeastAtMost_nat_numeral)"], ["", "text \\<open>\n  Also note again that all $p_k$ are rational:\n\\<close>"], ["", "lemma p_in_Rats': \"p k \\<in> \\<rat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p k \\<in> \\<rat>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p k \\<in> \\<rat>", "have *: \"{1..3} = {1, 2, (3::nat)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {1..3} = {1, 2, 3}", "by auto"], ["proof (state)\nthis:\n  {1..3} = {1, 2, 3}\n\ngoal (1 subgoal):\n 1. p k \\<in> \\<rat>", "also"], ["proof (state)\nthis:\n  {1..3} = {1, 2, 3}\n\ngoal (1 subgoal):\n 1. p k \\<in> \\<rat>", "have \"\\<forall>k\\<in>\\<dots>. p k \\<in> \\<rat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>{1, 2, 3}. p k \\<in> \\<rat>", "by auto"], ["proof (state)\nthis:\n  \\<forall>k\\<in>{1, 2, 3}. p k \\<in> \\<rat>\n\ngoal (1 subgoal):\n 1. p k \\<in> \\<rat>", "finally"], ["proof (chain)\npicking this:\n  \\<forall>k\\<in>{1..3}. p k \\<in> \\<rat>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>{1..3}. p k \\<in> \\<rat>\n\ngoal (1 subgoal):\n 1. p k \\<in> \\<rat>", "using p_in_Rats[of k]"], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>{1..3}. p k \\<in> \\<rat>\n  (\\<And>k.\n      k \\<in> {1..3} \\<Longrightarrow> p k \\<in> \\<rat>) \\<Longrightarrow>\n  p k \\<in> \\<rat>\n\ngoal (1 subgoal):\n 1. p k \\<in> \\<rat>", "by simp"], ["proof (state)\nthis:\n  p k \\<in> \\<rat>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The above recurrence has the characteristic polynomial $X^3 - X^2 - \\frac{1}{2} X - \\frac{1}{6}$\n  (which is exactly our \\<^term>\\<open>Q\\<close>), so we know that can now specify $x$, $y$, and $z$\n  more precisely: They are the roots of that polynomial (in unspecified order).\n\\<close>"], ["", "lemma xyz_eq: \"{#x, y, z#} = poly_roots [:-1/6, -1/2, -1, 1:]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {#x, y, z#} = poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {#x, y, z#} = poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]", "have \"image_mset f (mset_set {..<3}) = poly_roots Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset f (mset_set {..<3}) = poly_roots Q", "using mset_x_eq_poly_roots_Q"], ["proof (prove)\nusing this:\n  image_mset f (mset_set {..<3}) = poly_roots Q\n\ngoal (1 subgoal):\n 1. image_mset f (mset_set {..<3}) = poly_roots Q", "."], ["proof (state)\nthis:\n  image_mset f (mset_set {..<3}) = poly_roots Q\n\ngoal (1 subgoal):\n 1. {#x, y, z#} = poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]", "also"], ["proof (state)\nthis:\n  image_mset f (mset_set {..<3}) = poly_roots Q\n\ngoal (1 subgoal):\n 1. {#x, y, z#} = poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]", "have \"image_mset f (mset_set {..<3}) = {#x, y, z#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset f (mset_set {..<3}) = {#x, y, z#}", "by (simp add: numeral_3_eq_3 lessThan_Suc f_def Multiset.union_ac)"], ["proof (state)\nthis:\n  image_mset f (mset_set {..<3}) = {#x, y, z#}\n\ngoal (1 subgoal):\n 1. {#x, y, z#} = poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]", "also"], ["proof (state)\nthis:\n  image_mset f (mset_set {..<3}) = {#x, y, z#}\n\ngoal (1 subgoal):\n 1. {#x, y, z#} = poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]", "have \"Q = [:-1/6, -1/2, -1, 1:]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q = [:- 1 / 6, - 1 / 2, - 1, 1:]", "by (simp add: Q_altdef atMost_nat_numeral Polynomial.monom_altdef\n                  power3_eq_cube power2_eq_square)"], ["proof (state)\nthis:\n  Q = [:- 1 / 6, - 1 / 2, - 1, 1:]\n\ngoal (1 subgoal):\n 1. {#x, y, z#} = poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]", "finally"], ["proof (chain)\npicking this:\n  {#x, y, z#} = poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]", "show ?thesis"], ["proof (prove)\nusing this:\n  {#x, y, z#} = poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]\n\ngoal (1 subgoal):\n 1. {#x, y, z#} = poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]", "."], ["proof (state)\nthis:\n  {#x, y, z#} = poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Using the rational root test, we can easily show that $x$, $y$, and $z$ are irrational.\n\\<close>"], ["", "lemma xyz_irrational: \"set_mset (poly_roots [:-1/6, -1/2, -1, 1::complex:]) \\<inter> \\<rat> = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_mset (poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]) \\<inter> \\<rat> = {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. set_mset (poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]) \\<inter> \\<rat> = {}", "define p :: \"rat poly\" where \"p = [:-1/6, -1/2, -1, 1:]\""], ["proof (state)\nthis:\n  p = [:- 1 / 6, - 1 / 2, - 1, 1:]\n\ngoal (1 subgoal):\n 1. set_mset (poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]) \\<inter> \\<rat> = {}", "have \"rational_root_test p = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rational_root_test p = None", "unfolding p_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. rational_root_test [:- 1 / 6, - 1 / 2, - 1, 1:] = None", "by code_simp"], ["proof (state)\nthis:\n  rational_root_test p = None\n\ngoal (1 subgoal):\n 1. set_mset (poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]) \\<inter> \\<rat> = {}", "hence \"\\<not>(\\<exists>x::rat. poly p x = 0)\""], ["proof (prove)\nusing this:\n  rational_root_test p = None\n\ngoal (1 subgoal):\n 1. \\<nexists>x. poly p x = 0", "by (rule rational_root_test)"], ["proof (state)\nthis:\n  \\<nexists>x. poly p x = 0\n\ngoal (1 subgoal):\n 1. set_mset (poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]) \\<inter> \\<rat> = {}", "hence \"\\<not>(\\<exists>x\\<in>\\<rat>. poly (map_poly of_rat p) x = (0 :: complex))\""], ["proof (prove)\nusing this:\n  \\<nexists>x. poly p x = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>x\\<in>\\<rat>. poly (map_poly of_rat p) x = 0)", "by (auto simp: Rats_def)"], ["proof (state)\nthis:\n  \\<not> (\\<exists>x\\<in>\\<rat>. poly (map_poly of_rat p) x = 0)\n\ngoal (1 subgoal):\n 1. set_mset (poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]) \\<inter> \\<rat> = {}", "also"], ["proof (state)\nthis:\n  \\<not> (\\<exists>x\\<in>\\<rat>. poly (map_poly of_rat p) x = 0)\n\ngoal (1 subgoal):\n 1. set_mset (poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]) \\<inter> \\<rat> = {}", "have \"map_poly of_rat p = [:-1/6, -1/2, -1, 1 :: complex:]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly of_rat p = [:- 1 / 6, - 1 / 2, - 1, 1:]", "by (simp add: p_def of_rat_minus of_rat_divide)"], ["proof (state)\nthis:\n  map_poly of_rat p = [:- 1 / 6, - 1 / 2, - 1, 1:]\n\ngoal (1 subgoal):\n 1. set_mset (poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]) \\<inter> \\<rat> = {}", "finally"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>x\\<in>\\<rat>. poly [:- 1 / 6, - 1 / 2, - 1, 1:] x = 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>x\\<in>\\<rat>. poly [:- 1 / 6, - 1 / 2, - 1, 1:] x = 0)\n\ngoal (1 subgoal):\n 1. set_mset (poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]) \\<inter> \\<rat> = {}", "by auto"], ["proof (state)\nthis:\n  set_mset (poly_roots [:- 1 / 6, - 1 / 2, - 1, 1:]) \\<inter> \\<rat> = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  This polynomial is \\<^emph>\\<open>squarefree\\<close>, so these three roots are, in fact, unique (so that there are\n  indeed $3! = 6$ possible permutations).\n\\<close>"], ["", "lemma rsquarefree: \"rsquarefree [:-1/6, -1/2, -1, 1 :: complex:]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rsquarefree [:- 1 / 6, - 1 / 2, - 1, 1:]", "by (rule coprime_pderiv_imp_rsquarefree)\n     (auto simp: pderiv_pCons coprime_iff_gcd_eq_1 gcd_poly_code gcd_poly_code_def content_def\n                 primitive_part_def gcd_poly_code_aux_reduce pseudo_mod_def pseudo_divmod_def\n                 Let_def Polynomial.monom_altdef normalize_poly_def)"], ["", "lemma distinct_xyz: \"distinct [x, y, z]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct [x, y, z]", "by (rule rsquarefree_imp_distinct_roots[OF rsquarefree]) (simp_all add: xyz_eq)"], ["", "text \\<open>\n  While these roots \\<^emph>\\<open>can\\<close> be written more explicitly in radical form, they are not very pleasant\n  to look at. We therefore only compute a few values of \\<open>p\\<close> just for fun:\n\\<close>"], ["", "lemma \"p 4 = 25 / 6\" and \"p 5 = 6\" and \"p 10 = 15539 / 432\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p 4 = 25 / 6 &&& p 5 = 6 &&& p 10 = 15539 / 432", "by (simp_all add: p_recurrence''')"], ["", "text \\<open>\n  Lastly, let us (informally) examine the asymptotics of this problem.\n\n  Two of the roots have a norm of roughly $\\beta \\approx 0.341$, while the remaining root \n  \\<open>\\<alpha>\\<close> is roughly 1.431. Consequently, $x^n + y^n + z^n$ is asymptotically equivalent to $\\alpha^n$,\n  with the error being bounded by $2\\cdot \\beta^n$ and therefore goes to 0 very quickly.\n\n  For $p(10) = \\frac{15539}{432} \\approx 35.97$, for instance, this approximation is correct\n  up to 6 decimals (a relative error of about 0.0001\\,\\%).\n\\<close>"], ["", "end"], ["", "text \\<open>\n  To really emphasise that the above puzzle has a solution and the locale is not `vacuous',\n  here is an interpretation of the locale using the existence theorem from before:\n\\<close>"], ["", "notepad\nbegin"], ["proof (state)", "define f :: \"nat \\<Rightarrow> complex\" where \"f = (\\<lambda>k. [1,2,3] ! (k - 1))\""], ["proof (state)\nthis:\n  f = (\\<lambda>k. [1, 2, 3] ! (k - 1))", "obtain Root :: \"nat \\<Rightarrow> complex\" where Root: \"\\<And>k. k \\<in> {1..3} \\<Longrightarrow> (\\<Sum>i<3. Root i ^ k) = f k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Root.\n        (\\<And>k.\n            k \\<in> {1..3} \\<Longrightarrow>\n            (\\<Sum>i<3. Root i ^ k) = f k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using power_sum_puzzle_has_solution[of 3 f]"], ["proof (prove)\nusing this:\n  \\<exists>Root. \\<forall>k\\<in>{1..3}. (\\<Sum>i<3. Root i ^ k) = f k\n\ngoal (1 subgoal):\n 1. (\\<And>Root.\n        (\\<And>k.\n            k \\<in> {1..3} \\<Longrightarrow>\n            (\\<Sum>i<3. Root i ^ k) = f k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  ?k \\<in> {1..3} \\<Longrightarrow> (\\<Sum>i<3. Root i ^ ?k) = f ?k", "define x y z where \"x = Root 0\" \"y = Root 1\" \"z = Root 2\""], ["proof (state)\nthis:\n  x = Root 0\n  y = Root 1\n  z = Root 2", "have \"x + y + z = 1\" and \"x^2 + y^2 + z^2 = 2\" and \"x^3 + y^3 + z^3 = 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x + y + z = 1 &&&\n    x\\<^sup>2 + y\\<^sup>2 + z\\<^sup>2 = 2 &&& x ^ 3 + y ^ 3 + z ^ 3 = 3", "using Root[of 1] Root[of 2] Root[of 3]"], ["proof (prove)\nusing this:\n  1 \\<in> {1..3} \\<Longrightarrow> (\\<Sum>i<3. Root i ^ 1) = f 1\n  2 \\<in> {1..3} \\<Longrightarrow> (\\<Sum>i<3. (Root i)\\<^sup>2) = f 2\n  3 \\<in> {1..3} \\<Longrightarrow> (\\<Sum>i<3. Root i ^ 3) = f 3\n\ngoal (1 subgoal):\n 1. x + y + z = 1 &&&\n    x\\<^sup>2 + y\\<^sup>2 + z\\<^sup>2 = 2 &&& x ^ 3 + y ^ 3 + z ^ 3 = 3", "by (simp_all add: eval_nat_numeral x_y_z_def f_def)"], ["proof (state)\nthis:\n  x + y + z = 1\n  x\\<^sup>2 + y\\<^sup>2 + z\\<^sup>2 = 2\n  x ^ 3 + y ^ 3 + z ^ 3 = 3", "then"], ["proof (chain)\npicking this:\n  x + y + z = 1\n  x\\<^sup>2 + y\\<^sup>2 + z\\<^sup>2 = 2\n  x ^ 3 + y ^ 3 + z ^ 3 = 3", "interpret power_sum_puzzle_example x y z"], ["proof (prove)\nusing this:\n  x + y + z = 1\n  x\\<^sup>2 + y\\<^sup>2 + z\\<^sup>2 = 2\n  x ^ 3 + y ^ 3 + z ^ 3 = 3\n\ngoal (1 subgoal):\n 1. power_sum_puzzle_example x y z", "by unfold_locales"], ["proof (state)", "have \"p 5 = 6\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p 5 = 6", "by (simp add: p_recurrence''')"], ["proof (state)\nthis:\n  p 5 = 6", "end"], ["", "end"]]}