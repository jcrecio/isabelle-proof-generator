{"file_name": "/home/qj213/afp-2021-10-22/thys/Real_Impl/Real_Impl.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Real_Impl", "problem_names": ["lemma sqrt_irrat: assumes choice: \"q = 0 \\<or> b \\<in> sqrt_irrat\"\n   and eq: \"real_of_rat p + real_of_rat q * sqrt (of_nat b) = 0\"\n   shows \"q = 0\"", "lemma ma_normalize_case[simp]: \"(case ma_normalize r of (a,b,c) \\<Rightarrow> real_of_rat a + real_of_rat b * sqrt (of_nat c))\n  = (case r of (a,b,c) \\<Rightarrow> real_of_rat a + real_of_rat b * sqrt (of_nat c))\"", "lemma ma_ge_0: \"ge_0 (real_of x) = ma_ge_0 x\"", "lemma ma_0: \"0 = real_of (ma_of_rat 0)\"", "lemma ma_1: \"1 = real_of (ma_of_rat 1)\"", "lemma ma_uminus:\n  \"- (real_of x) = real_of (ma_uminus x)\"", "lemma ma_inverse: \"inverse (real_of r) = real_of (ma_inverse r)\"", "lemma ma_sqrt_main: \"ma_rat r \\<ge> 0 \\<Longrightarrow> ma_coeff r = 0 \\<Longrightarrow> sqrt (real_of r) = real_of (ma_sqrt r)\"", "lemma ma_sqrt: \"sqrt (real_of r) = (if ma_coeff r = 0 then\n  (if ma_rat r \\<ge> 0 then real_of (ma_sqrt r) else - real_of (ma_sqrt (ma_uminus r)))\n  else Code.abort (STR ''cannot represent sqrt of irrational number'') (\\<lambda> _. sqrt (real_of r)))\"", "lemma ma_plus:\n  \"(real_of r1 + real_of r2) = (if ma_compatible r1 r2\n    then real_of (ma_plus r1 r2) else\n    Code.abort (STR ''different base'') (\\<lambda> _. real_of r1 + real_of r2))\"", "lemma ma_times:\n  \"(real_of r1 * real_of r2) = (if ma_compatible r1 r2\n    then real_of (ma_times r1 r2) else\n    Code.abort (STR ''different base'') (\\<lambda> _. real_of r1 * real_of r2))\"", "lemma ma_equal:\n  \"HOL.equal (real_of r1) (real_of r2) = (if ma_compatible r1 r2\n    then ma_equal r1 r2 else\n    Code.abort (STR ''different base'') (\\<lambda> _. HOL.equal (real_of r1) (real_of r2)))\"", "lemma ma_floor: \"floor (real_of r) = ma_floor r\"", "lemma comparison_impl:\n  \"(x :: real) \\<le> (y :: real) = ge_0 (y - x)\"\n  \"(x :: real) < (y :: real) = (x \\<noteq> y \\<and> ge_0 (y - x))\"", "lemma ma_of_rat: \"real_of_rat r = real_of (ma_of_rat r)\"", "lemma ma_is_rat: \"is_rat (real_of x) = ma_is_rat x\"", "lemma sqrt_real[simp]: assumes x: \"x \\<in> \\<rat>\"\n  shows \"set (sqrt_real x) = {y . y * y = x}\"", "lemma [code]:\n  \"Ratreal = real_of \\<circ> ma_of_rat\"", "lemmas ma_code_eqns [code equation] = ma_ge_0 ma_floor ma_0 ma_1 ma_uminus ma_inverse ma_sqrt ma_plus ma_times ma_equal ma_is_rat\n  comparison_impl", "lemma [code equation]:\n  \"(x :: real) / (y :: real) = x * inverse y\"\n  \"(x :: real) - (y :: real) = x + (- y)\""], "translations": [["", "lemma sqrt_irrat: assumes choice: \"q = 0 \\<or> b \\<in> sqrt_irrat\"\n   and eq: \"real_of_rat p + real_of_rat q * sqrt (of_nat b) = 0\"\n   shows \"q = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q = 0", "using choice"], ["proof (prove)\nusing this:\n  q = 0 \\<or> b \\<in> sqrt_irrat\n\ngoal (1 subgoal):\n 1. q = 0", "proof (cases \"q = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q = 0\\<rbrakk>\n    \\<Longrightarrow> q = 0\n 2. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> q = 0", "case False"], ["proof (state)\nthis:\n  q \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q = 0\\<rbrakk>\n    \\<Longrightarrow> q = 0\n 2. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> q = 0", "with choice"], ["proof (chain)\npicking this:\n  q = 0 \\<or> b \\<in> sqrt_irrat\n  q \\<noteq> 0", "have sqrt_irrat: \"b \\<in> sqrt_irrat\""], ["proof (prove)\nusing this:\n  q = 0 \\<or> b \\<in> sqrt_irrat\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b \\<in> sqrt_irrat", "by blast"], ["proof (state)\nthis:\n  b \\<in> sqrt_irrat\n\ngoal (2 subgoals):\n 1. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q = 0\\<rbrakk>\n    \\<Longrightarrow> q = 0\n 2. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> q = 0", "from eq"], ["proof (chain)\npicking this:\n  real_of_rat p + real_of_rat q * sqrt (real b) = 0", "have \"real_of_rat q * sqrt (of_nat b) = real_of_rat (- p)\""], ["proof (prove)\nusing this:\n  real_of_rat p + real_of_rat q * sqrt (real b) = 0\n\ngoal (1 subgoal):\n 1. real_of_rat q * sqrt (real b) = real_of_rat (- p)", "by (auto simp: of_rat_minus)"], ["proof (state)\nthis:\n  real_of_rat q * sqrt (real b) = real_of_rat (- p)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q = 0\\<rbrakk>\n    \\<Longrightarrow> q = 0\n 2. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> q = 0", "then"], ["proof (chain)\npicking this:\n  real_of_rat q * sqrt (real b) = real_of_rat (- p)", "obtain p where \"real_of_rat q * sqrt (of_nat b) = real_of_rat p\""], ["proof (prove)\nusing this:\n  real_of_rat q * sqrt (real b) = real_of_rat (- p)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        real_of_rat q * sqrt (real b) = real_of_rat p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  real_of_rat q * sqrt (real b) = real_of_rat p\n\ngoal (2 subgoals):\n 1. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q = 0\\<rbrakk>\n    \\<Longrightarrow> q = 0\n 2. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> q = 0", "from arg_cong[OF this, of \"\\<lambda> x. x * x\"]"], ["proof (chain)\npicking this:\n  real_of_rat q * sqrt (real b) * (real_of_rat q * sqrt (real b)) =\n  real_of_rat p * real_of_rat p", "have \"real_of_rat (q * q) * (sqrt (of_nat b) * sqrt (of_nat b)) =\n    real_of_rat (p * p)\""], ["proof (prove)\nusing this:\n  real_of_rat q * sqrt (real b) * (real_of_rat q * sqrt (real b)) =\n  real_of_rat p * real_of_rat p\n\ngoal (1 subgoal):\n 1. real_of_rat (q * q) * (sqrt (real b) * sqrt (real b)) =\n    real_of_rat (p * p)", "by (auto simp: field_simps of_rat_mult)"], ["proof (state)\nthis:\n  real_of_rat (q * q) * (sqrt (real b) * sqrt (real b)) =\n  real_of_rat (p * p)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q = 0\\<rbrakk>\n    \\<Longrightarrow> q = 0\n 2. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> q = 0", "also"], ["proof (state)\nthis:\n  real_of_rat (q * q) * (sqrt (real b) * sqrt (real b)) =\n  real_of_rat (p * p)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q = 0\\<rbrakk>\n    \\<Longrightarrow> q = 0\n 2. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> q = 0", "have \"sqrt (of_nat b) * sqrt (of_nat b) = of_nat b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (real b) * sqrt (real b) = real b", "by simp"], ["proof (state)\nthis:\n  sqrt (real b) * sqrt (real b) = real b\n\ngoal (2 subgoals):\n 1. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q = 0\\<rbrakk>\n    \\<Longrightarrow> q = 0\n 2. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> q = 0", "finally"], ["proof (chain)\npicking this:\n  real_of_rat (q * q) * real b = real_of_rat (p * p)", "have \"real_of_rat (q * q * rat_of_nat b) = real_of_rat (p * p)\""], ["proof (prove)\nusing this:\n  real_of_rat (q * q) * real b = real_of_rat (p * p)\n\ngoal (1 subgoal):\n 1. real_of_rat (q * q * rat_of_nat b) = real_of_rat (p * p)", "by (auto simp: of_rat_mult)"], ["proof (state)\nthis:\n  real_of_rat (q * q * rat_of_nat b) = real_of_rat (p * p)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q = 0\\<rbrakk>\n    \\<Longrightarrow> q = 0\n 2. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> q = 0", "hence \"q * q * (rat_of_nat b) = p * p\""], ["proof (prove)\nusing this:\n  real_of_rat (q * q * rat_of_nat b) = real_of_rat (p * p)\n\ngoal (1 subgoal):\n 1. q * q * rat_of_nat b = p * p", "by auto"], ["proof (state)\nthis:\n  q * q * rat_of_nat b = p * p\n\ngoal (2 subgoals):\n 1. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q = 0\\<rbrakk>\n    \\<Longrightarrow> q = 0\n 2. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> q = 0", "from arg_cong[OF this, of \"\\<lambda> x. x / (q * q)\"]"], ["proof (chain)\npicking this:\n  q * q * rat_of_nat b / (q * q) = p * p / (q * q)", "have \"(p / q) * (p / q) = rat_of_nat b\""], ["proof (prove)\nusing this:\n  q * q * rat_of_nat b / (q * q) = p * p / (q * q)\n\ngoal (1 subgoal):\n 1. p / q * (p / q) = rat_of_nat b", "using False"], ["proof (prove)\nusing this:\n  q * q * rat_of_nat b / (q * q) = p * p / (q * q)\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p / q * (p / q) = rat_of_nat b", "by (auto simp: field_simps)"], ["proof (state)\nthis:\n  p / q * (p / q) = rat_of_nat b\n\ngoal (2 subgoals):\n 1. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q = 0\\<rbrakk>\n    \\<Longrightarrow> q = 0\n 2. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> q = 0", "with sqrt_irrat"], ["proof (chain)\npicking this:\n  b \\<in> sqrt_irrat\n  p / q * (p / q) = rat_of_nat b", "show ?thesis"], ["proof (prove)\nusing this:\n  b \\<in> sqrt_irrat\n  p / q * (p / q) = rat_of_nat b\n\ngoal (1 subgoal):\n 1. q = 0", "unfolding sqrt_irrat_def"], ["proof (prove)\nusing this:\n  b \\<in> {q. \\<nexists>p. p * p = rat_of_nat q}\n  p / q * (p / q) = rat_of_nat b\n\ngoal (1 subgoal):\n 1. q = 0", "by blast"], ["proof (state)\nthis:\n  q = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>q = 0 \\<or> b \\<in> sqrt_irrat; q = 0\\<rbrakk>\n    \\<Longrightarrow> q = 0", "qed"], ["", "text \\<open>To represent  numbers of the form $p + q \\cdot \\sqrt{b}$, use mini algebraic numbers, i.e.,\n  triples $(p,q,b)$ with irrational $\\sqrt{b}$.\\<close>"], ["", "typedef mini_alg =\n  \"{(p,q,b) | (p :: rat) (q :: rat) (b :: nat).\n  q = 0 \\<or> b \\<in> sqrt_irrat}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> {(p, q, b) |p q b. q = 0 \\<or> b \\<in> sqrt_irrat}", "by auto"], ["", "setup_lifting type_definition_mini_alg"], ["", "lift_definition real_of :: \"mini_alg \\<Rightarrow> real\" is\n  \"\\<lambda> (p,q,b). of_rat p + of_rat q * sqrt (of_nat b)\""], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lift_definition ma_of_rat :: \"rat \\<Rightarrow> mini_alg\" is \"\\<lambda> x. (x,0,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rat.\n       \\<exists>p q b.\n          (rat, 0, 0) = (p, q, b) \\<and> (q = 0 \\<or> b \\<in> sqrt_irrat)", "by auto"], ["", "lift_definition ma_rat :: \"mini_alg \\<Rightarrow> rat\" is fst"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lift_definition ma_base :: \"mini_alg \\<Rightarrow> nat\" is \"snd o snd\""], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lift_definition ma_coeff :: \"mini_alg \\<Rightarrow> rat\" is \"fst o snd\""], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lift_definition ma_uminus :: \"mini_alg \\<Rightarrow> mini_alg\" is\n  \"\\<lambda> (p1,q1,b1). (- p1, - q1, b1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod.\n       \\<exists>p q b.\n          prod = (p, q, b) \\<and>\n          (q = 0 \\<or> b \\<in> sqrt_irrat) \\<Longrightarrow>\n       \\<exists>p q b.\n          (case prod of (p1, q1, b1) \\<Rightarrow> (- p1, - q1, b1)) =\n          (p, q, b) \\<and>\n          (q = 0 \\<or> b \\<in> sqrt_irrat)", "by auto"], ["", "lift_definition ma_compatible :: \"mini_alg \\<Rightarrow> mini_alg \\<Rightarrow> bool\" is\n  \"\\<lambda> (p1,q1,b1) (p2,q2,b2). q1 = 0 \\<or> q2 = 0 \\<or> b1 = b2\""], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "definition ma_normalize :: \"rat \\<times> rat \\<times> nat \\<Rightarrow> rat \\<times> rat \\<times> nat\" where\n  \"ma_normalize x \\<equiv> case x of (a,b,c) \\<Rightarrow> if b = 0 then (a,0,0) else (a,b,c)\""], ["", "lemma ma_normalize_case[simp]: \"(case ma_normalize r of (a,b,c) \\<Rightarrow> real_of_rat a + real_of_rat b * sqrt (of_nat c))\n  = (case r of (a,b,c) \\<Rightarrow> real_of_rat a + real_of_rat b * sqrt (of_nat c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (case ma_normalize r of\n     (a, b, c) \\<Rightarrow>\n       real_of_rat a + real_of_rat b * sqrt (real c)) =\n    (case r of\n     (a, b, c) \\<Rightarrow> real_of_rat a + real_of_rat b * sqrt (real c))", "by (cases r, auto simp: ma_normalize_def)"], ["", "lift_definition ma_plus :: \"mini_alg \\<Rightarrow> mini_alg \\<Rightarrow> mini_alg\" is\n  \"\\<lambda> (p1,q1,b1) (p2,q2,b2). if q1 = 0 then\n    (p1 + p2, q2, b2) else ma_normalize (p1 + p2, q1 + q2, b1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod1 prod2.\n       \\<lbrakk>\\<exists>p q b.\n                   prod1 = (p, q, b) \\<and>\n                   (q = 0 \\<or> b \\<in> sqrt_irrat);\n        \\<exists>p q b.\n           prod2 = (p, q, b) \\<and>\n           (q = 0 \\<or> b \\<in> sqrt_irrat)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p q b.\n                            (case prod1 of\n                             (p1, q1, b1) \\<Rightarrow>\n                               \\<lambda>(p2, q2, b2).\n                                  if q1 = 0 then (p1 + p2, q2, b2)\n                                  else ma_normalize (p1 + p2, q1 + q2, b1))\n                             prod2 =\n                            (p, q, b) \\<and>\n                            (q = 0 \\<or> b \\<in> sqrt_irrat)", "by (auto simp: ma_normalize_def)"], ["", "lift_definition ma_times :: \"mini_alg \\<Rightarrow> mini_alg \\<Rightarrow> mini_alg\" is\n  \"\\<lambda> (p1,q1,b1) (p2,q2,b2). if q1 = 0 then\n    ma_normalize (p1*p2, p1*q2, b2) else\n    ma_normalize (p1*p2 + of_nat b2*q1*q2, p1*q2 + q1*p2, b1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod1 prod2.\n       \\<lbrakk>\\<exists>p q b.\n                   prod1 = (p, q, b) \\<and>\n                   (q = 0 \\<or> b \\<in> sqrt_irrat);\n        \\<exists>p q b.\n           prod2 = (p, q, b) \\<and>\n           (q = 0 \\<or> b \\<in> sqrt_irrat)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p q b.\n                            (case prod1 of\n                             (p1, q1, b1) \\<Rightarrow>\n                               \\<lambda>(p2, q2, b2).\n                                  if q1 = 0\n                                  then ma_normalize (p1 * p2, p1 * q2, b2)\n                                  else ma_normalize\n  (p1 * p2 + rat_of_nat b2 * q1 * q2, p1 * q2 + q1 * p2, b1))\n                             prod2 =\n                            (p, q, b) \\<and>\n                            (q = 0 \\<or> b \\<in> sqrt_irrat)", "by (auto simp: ma_normalize_def)"], ["", "lift_definition ma_inverse :: \"mini_alg \\<Rightarrow> mini_alg\" is\n   \"\\<lambda> (p,q,b). let d = inverse (p * p - of_nat b * q * q) in\n   ma_normalize (p * d, - q * d, b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod.\n       \\<exists>p q b.\n          prod = (p, q, b) \\<and>\n          (q = 0 \\<or> b \\<in> sqrt_irrat) \\<Longrightarrow>\n       \\<exists>p q b.\n          (case prod of\n           (p, q, b) \\<Rightarrow>\n             let d = inverse (p * p - rat_of_nat b * q * q)\n             in ma_normalize (p * d, - q * d, b)) =\n          (p, q, b) \\<and>\n          (q = 0 \\<or> b \\<in> sqrt_irrat)", "by (auto simp: Let_def ma_normalize_def)"], ["", "lift_definition ma_floor :: \"mini_alg \\<Rightarrow> int\" is\n  \"\\<lambda> (p,q,b). case (quotient_of p,quotient_of q) of ((z1,n1),(z2,n2)) \\<Rightarrow>\n    let z2n1 = z2 * n1; z1n2 = z1 * n2; n12 = n1 * n2; prod = z2n1 * z2n1 * int b in\n    (z1n2 + (if z2n1 \\<ge> 0 then sqrt_int_floor_pos prod else - sqrt_int_ceiling_pos prod)) div n12\""], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lift_definition ma_sqrt :: \"mini_alg \\<Rightarrow> mini_alg\" is\n   \"\\<lambda> (p,q,b). let (a,b) = quotient_of p; aa = abs (a * b) in\n   case sqrt_int aa of [] \\<Rightarrow> (0,inverse (of_int b),nat aa) | (Cons s _) \\<Rightarrow> (of_int s / of_int b,0,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod.\n       \\<exists>p q b.\n          prod = (p, q, b) \\<and>\n          (q = 0 \\<or> b \\<in> sqrt_irrat) \\<Longrightarrow>\n       \\<exists>p q b.\n          (case prod of\n           (p, q, b) \\<Rightarrow>\n             let (a, b) = quotient_of p; aa = \\<bar>a * b\\<bar>\n             in case sqrt_int aa of\n                [] \\<Rightarrow> (0, inverse (rat_of_int b), nat aa)\n                | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0)) =\n          (p, q, b) \\<and>\n          (q = 0 \\<or> b \\<in> sqrt_irrat)", "proof (unfold Let_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>prod.\n       \\<exists>p q b.\n          prod = (p, q, b) \\<and>\n          (q = 0 \\<or> b \\<in> sqrt_irrat) \\<Longrightarrow>\n       \\<exists>p q b.\n          (case prod of\n           (p, q, b) \\<Rightarrow>\n             case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0)) =\n          (p, q, b) \\<and>\n          (q = 0 \\<or> b \\<in> sqrt_irrat)", "fix prod :: \"rat \\<times> rat \\<times> nat\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>prod.\n       \\<exists>p q b.\n          prod = (p, q, b) \\<and>\n          (q = 0 \\<or> b \\<in> sqrt_irrat) \\<Longrightarrow>\n       \\<exists>p q b.\n          (case prod of\n           (p, q, b) \\<Rightarrow>\n             case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0)) =\n          (p, q, b) \\<and>\n          (q = 0 \\<or> b \\<in> sqrt_irrat)", "obtain p q b where prod: \"prod = (p,q,b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p q b.\n        prod = (p, q, b) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases prod, auto)"], ["proof (state)\nthis:\n  prod = (p, q, b)\n\ngoal (1 subgoal):\n 1. \\<And>prod.\n       \\<exists>p q b.\n          prod = (p, q, b) \\<and>\n          (q = 0 \\<or> b \\<in> sqrt_irrat) \\<Longrightarrow>\n       \\<exists>p q b.\n          (case prod of\n           (p, q, b) \\<Rightarrow>\n             case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0)) =\n          (p, q, b) \\<and>\n          (q = 0 \\<or> b \\<in> sqrt_irrat)", "obtain a b where p: \"quotient_of p = (a,b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        quotient_of p = (a, b) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  quotient_of p = (a, b)\n\ngoal (1 subgoal):\n 1. \\<And>prod.\n       \\<exists>p q b.\n          prod = (p, q, b) \\<and>\n          (q = 0 \\<or> b \\<in> sqrt_irrat) \\<Longrightarrow>\n       \\<exists>p q b.\n          (case prod of\n           (p, q, b) \\<Rightarrow>\n             case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0)) =\n          (p, q, b) \\<and>\n          (q = 0 \\<or> b \\<in> sqrt_irrat)", "show \"\\<exists>p q b. (case prod of\n                     (p, q, b) \\<Rightarrow>\n                       case quotient_of p of\n                       (a, b) \\<Rightarrow>\n                         (case sqrt_int \\<bar>a * b\\<bar> of [] \\<Rightarrow> (0, inverse (of_int b), nat \\<bar>a * b\\<bar>)\n                         | s # x \\<Rightarrow> (of_int s / of_int b, 0, 0))) =\n                    (p, q, b) \\<and>\n                    (q = 0 \\<or> b \\<in> sqrt_irrat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p q b.\n       (case prod of\n        (p, q, b) \\<Rightarrow>\n          case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0::'a, inverse (of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (of_int s / of_int b, 0::'b, 0)) =\n       (p, q, b) \\<and>\n       (q = (0::'b) \\<or> b \\<in> sqrt_irrat)", "proof (cases \"sqrt_int (abs (a * b))\")"], ["proof (state)\ngoal (2 subgoals):\n 1. sqrt_int \\<bar>a * b\\<bar> = [] \\<Longrightarrow>\n    \\<exists>p q b.\n       (case prod of\n        (p, q, b) \\<Rightarrow>\n          case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0::'a, inverse (of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (of_int s / of_int b, 0::'b, 0)) =\n       (p, q, b) \\<and>\n       (q = (0::'b) \\<or> b \\<in> sqrt_irrat)\n 2. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       \\<exists>p q b.\n          (case prod of\n           (p, q, b) \\<Rightarrow>\n             case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0::'a, inverse (of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (of_int s / of_int b, 0::'b, 0)) =\n          (p, q, b) \\<and>\n          (q = (0::'b) \\<or> b \\<in> sqrt_irrat)", "case Nil"], ["proof (state)\nthis:\n  sqrt_int \\<bar>a * b\\<bar> = []\n\ngoal (2 subgoals):\n 1. sqrt_int \\<bar>a * b\\<bar> = [] \\<Longrightarrow>\n    \\<exists>p q b.\n       (case prod of\n        (p, q, b) \\<Rightarrow>\n          case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0::'a, inverse (of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (of_int s / of_int b, 0::'b, 0)) =\n       (p, q, b) \\<and>\n       (q = (0::'b) \\<or> b \\<in> sqrt_irrat)\n 2. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       \\<exists>p q b.\n          (case prod of\n           (p, q, b) \\<Rightarrow>\n             case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0::'a, inverse (of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (of_int s / of_int b, 0::'b, 0)) =\n          (p, q, b) \\<and>\n          (q = (0::'b) \\<or> b \\<in> sqrt_irrat)", "from sqrt_int[of \"abs (a * b)\"] Nil"], ["proof (chain)\npicking this:\n  set (sqrt_int \\<bar>a * b\\<bar>) = {y. y * y = \\<bar>a * b\\<bar>}\n  sqrt_int \\<bar>a * b\\<bar> = []", "have irrat: \"\\<not> (\\<exists> y. y * y = \\<bar>a * b\\<bar>)\""], ["proof (prove)\nusing this:\n  set (sqrt_int \\<bar>a * b\\<bar>) = {y. y * y = \\<bar>a * b\\<bar>}\n  sqrt_int \\<bar>a * b\\<bar> = []\n\ngoal (1 subgoal):\n 1. \\<nexists>y. y * y = \\<bar>a * b\\<bar>", "by auto"], ["proof (state)\nthis:\n  \\<nexists>y. y * y = \\<bar>a * b\\<bar>\n\ngoal (2 subgoals):\n 1. sqrt_int \\<bar>a * b\\<bar> = [] \\<Longrightarrow>\n    \\<exists>p q b.\n       (case prod of\n        (p, q, b) \\<Rightarrow>\n          case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0::'a, inverse (of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (of_int s / of_int b, 0::'b, 0)) =\n       (p, q, b) \\<and>\n       (q = (0::'b) \\<or> b \\<in> sqrt_irrat)\n 2. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       \\<exists>p q b.\n          (case prod of\n           (p, q, b) \\<Rightarrow>\n             case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0::'a, inverse (of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (of_int s / of_int b, 0::'b, 0)) =\n          (p, q, b) \\<and>\n          (q = (0::'b) \\<or> b \\<in> sqrt_irrat)", "have \"nat \\<bar>a * b\\<bar> \\<in> sqrt_irrat\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat \\<bar>a * b\\<bar> \\<in> sqrt_irrat", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. nat \\<bar>a * b\\<bar> \\<notin> sqrt_irrat \\<Longrightarrow> False", "assume \"nat \\<bar>a * b\\<bar> \\<notin> sqrt_irrat\""], ["proof (state)\nthis:\n  nat \\<bar>a * b\\<bar> \\<notin> sqrt_irrat\n\ngoal (1 subgoal):\n 1. nat \\<bar>a * b\\<bar> \\<notin> sqrt_irrat \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  nat \\<bar>a * b\\<bar> \\<notin> sqrt_irrat", "obtain x :: rat\n       where \"x * x = rat_of_nat (nat \\<bar>a * b\\<bar>)\""], ["proof (prove)\nusing this:\n  nat \\<bar>a * b\\<bar> \\<notin> sqrt_irrat\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x * x = rat_of_nat (nat \\<bar>a * b\\<bar>) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding sqrt_irrat_def"], ["proof (prove)\nusing this:\n  nat \\<bar>a * b\\<bar> \\<notin> {q. \\<nexists>p. p * p = rat_of_nat q}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x * x = rat_of_nat (nat \\<bar>a * b\\<bar>) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x * x = rat_of_nat (nat \\<bar>a * b\\<bar>)\n\ngoal (1 subgoal):\n 1. nat \\<bar>a * b\\<bar> \\<notin> sqrt_irrat \\<Longrightarrow> False", "hence \"x * x = rat_of_int \\<bar>a * b\\<bar>\""], ["proof (prove)\nusing this:\n  x * x = rat_of_nat (nat \\<bar>a * b\\<bar>)\n\ngoal (1 subgoal):\n 1. x * x = rat_of_int \\<bar>a * b\\<bar>", "by auto"], ["proof (state)\nthis:\n  x * x = rat_of_int \\<bar>a * b\\<bar>\n\ngoal (1 subgoal):\n 1. nat \\<bar>a * b\\<bar> \\<notin> sqrt_irrat \\<Longrightarrow> False", "from sqr_rat_of_int[OF this] irrat"], ["proof (chain)\npicking this:\n  \\<exists>j. j * j = \\<bar>a * b\\<bar>\n  \\<nexists>y. y * y = \\<bar>a * b\\<bar>", "show False"], ["proof (prove)\nusing this:\n  \\<exists>j. j * j = \\<bar>a * b\\<bar>\n  \\<nexists>y. y * y = \\<bar>a * b\\<bar>\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nat \\<bar>a * b\\<bar> \\<in> sqrt_irrat\n\ngoal (2 subgoals):\n 1. sqrt_int \\<bar>a * b\\<bar> = [] \\<Longrightarrow>\n    \\<exists>p q b.\n       (case prod of\n        (p, q, b) \\<Rightarrow>\n          case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0::'a, inverse (of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (of_int s / of_int b, 0::'b, 0)) =\n       (p, q, b) \\<and>\n       (q = (0::'b) \\<or> b \\<in> sqrt_irrat)\n 2. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       \\<exists>p q b.\n          (case prod of\n           (p, q, b) \\<Rightarrow>\n             case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0::'a, inverse (of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (of_int s / of_int b, 0::'b, 0)) =\n          (p, q, b) \\<and>\n          (q = (0::'b) \\<or> b \\<in> sqrt_irrat)", "thus ?thesis"], ["proof (prove)\nusing this:\n  nat \\<bar>a * b\\<bar> \\<in> sqrt_irrat\n\ngoal (1 subgoal):\n 1. \\<exists>p q b.\n       (case prod of\n        (p, q, b) \\<Rightarrow>\n          case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0::'a, inverse (of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (of_int s / of_int b, 0::'b, 0)) =\n       (p, q, b) \\<and>\n       (q = (0::'b) \\<or> b \\<in> sqrt_irrat)", "using Nil"], ["proof (prove)\nusing this:\n  nat \\<bar>a * b\\<bar> \\<in> sqrt_irrat\n  sqrt_int \\<bar>a * b\\<bar> = []\n\ngoal (1 subgoal):\n 1. \\<exists>p q b.\n       (case prod of\n        (p, q, b) \\<Rightarrow>\n          case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0::'a, inverse (of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (of_int s / of_int b, 0::'b, 0)) =\n       (p, q, b) \\<and>\n       (q = (0::'b) \\<or> b \\<in> sqrt_irrat)", "by (auto simp: prod p)"], ["proof (state)\nthis:\n  \\<exists>p q b.\n     (case prod of\n      (p, q, b) \\<Rightarrow>\n        case quotient_of p of\n        (a, b) \\<Rightarrow>\n          case sqrt_int \\<bar>a * b\\<bar> of\n          [] \\<Rightarrow>\n            (0::'a, inverse (of_int b), nat \\<bar>a * b\\<bar>)\n          | s # x \\<Rightarrow> (of_int s / of_int b, 0::'b, 0)) =\n     (p, q, b) \\<and>\n     (q = (0::'b) \\<or> b \\<in> sqrt_irrat)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       \\<exists>p q b.\n          (case prod of\n           (p, q, b) \\<Rightarrow>\n             case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0::'a, inverse (of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (of_int s / of_int b, 0::'b, 0)) =\n          (p, q, b) \\<and>\n          (q = (0::'b) \\<or> b \\<in> sqrt_irrat)", "qed (auto simp: prod p Cons)"], ["proof (state)\nthis:\n  \\<exists>p q b.\n     (case prod of\n      (p, q, b) \\<Rightarrow>\n        case quotient_of p of\n        (a, b) \\<Rightarrow>\n          case sqrt_int \\<bar>a * b\\<bar> of\n          [] \\<Rightarrow>\n            (0::?'a1, inverse (of_int b), nat \\<bar>a * b\\<bar>)\n          | s # x \\<Rightarrow> (of_int s / of_int b, 0::?'b1, 0)) =\n     (p, q, b) \\<and>\n     (q = (0::?'b1) \\<or> b \\<in> sqrt_irrat)\n\ngoal:\nNo subgoals!", "qed"], ["", "lift_definition ma_equal :: \"mini_alg \\<Rightarrow> mini_alg \\<Rightarrow> bool\" is\n   \"\\<lambda> (p1,q1,b1) (p2,q2,b2).\n   p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)\""], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lift_definition ma_ge_0 :: \"mini_alg \\<Rightarrow> bool\" is\n  \"\\<lambda> (p,q,b). let bqq = of_nat b * q * q; pp = p * p in\n  0 \\<le> p \\<and> bqq \\<le> pp \\<or> 0 \\<le> q \\<and> pp \\<le> bqq\""], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lift_definition ma_is_rat :: \"mini_alg \\<Rightarrow> bool\" is\n  \"\\<lambda> (p,q,b). q = 0\""], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "definition ge_0 :: \"real \\<Rightarrow> bool\" where [code del]: \"ge_0 x = (x \\<ge> 0)\""], ["", "lemma ma_ge_0: \"ge_0 (real_of x) = ma_ge_0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ge_0 (real_of x) = ma_ge_0 x", "proof (transfer, unfold Let_def, clarsimp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "fix p' q' :: rat and b' :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "assume b': \"q' = 0 \\<or> b' \\<in> sqrt_irrat\""], ["proof (state)\nthis:\n  q' = 0 \\<or> b' \\<in> sqrt_irrat\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "define b where \"b = real_of_nat b'\""], ["proof (state)\nthis:\n  b = real b'\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "define p where \"p = real_of_rat p'\""], ["proof (state)\nthis:\n  p = real_of_rat p'\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "define q where \"q = real_of_rat q'\""], ["proof (state)\nthis:\n  q = real_of_rat q'\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "from b'"], ["proof (chain)\npicking this:\n  q' = 0 \\<or> b' \\<in> sqrt_irrat", "have b: \"0 \\<le> b\" \"q = 0 \\<or> b' \\<in> sqrt_irrat\""], ["proof (prove)\nusing this:\n  q' = 0 \\<or> b' \\<in> sqrt_irrat\n\ngoal (1 subgoal):\n 1. 0 \\<le> b &&& q = 0 \\<or> b' \\<in> sqrt_irrat", "unfolding b_def q_def"], ["proof (prove)\nusing this:\n  q' = 0 \\<or> b' \\<in> sqrt_irrat\n\ngoal (1 subgoal):\n 1. 0 \\<le> real b' &&& real_of_rat q' = 0 \\<or> b' \\<in> sqrt_irrat", "by auto"], ["proof (state)\nthis:\n  0 \\<le> b\n  q = 0 \\<or> b' \\<in> sqrt_irrat\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "define qb where \"qb = q * sqrt b\""], ["proof (state)\nthis:\n  qb = q * sqrt b\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "from b"], ["proof (chain)\npicking this:\n  0 \\<le> b\n  q = 0 \\<or> b' \\<in> sqrt_irrat", "have sqrt: \"sqrt b \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> b\n  q = 0 \\<or> b' \\<in> sqrt_irrat\n\ngoal (1 subgoal):\n 1. 0 \\<le> sqrt b", "by auto"], ["proof (state)\nthis:\n  0 \\<le> sqrt b\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "from b(2)"], ["proof (chain)\npicking this:\n  q = 0 \\<or> b' \\<in> sqrt_irrat", "have disj: \"q = 0 \\<or> b \\<noteq> 0\""], ["proof (prove)\nusing this:\n  q = 0 \\<or> b' \\<in> sqrt_irrat\n\ngoal (1 subgoal):\n 1. q = 0 \\<or> b \\<noteq> 0", "unfolding sqrt_irrat_def b_def"], ["proof (prove)\nusing this:\n  q = 0 \\<or> b' \\<in> {q. \\<nexists>p. p * p = rat_of_nat q}\n\ngoal (1 subgoal):\n 1. q = 0 \\<or> real b' \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  q = 0 \\<or> b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "have bdef: \"b = real_of_rat (of_nat b')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b = real_of_rat (rat_of_nat b')", "unfolding b_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real b' = real_of_rat (rat_of_nat b')", "by auto"], ["proof (state)\nthis:\n  b = real_of_rat (rat_of_nat b')\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "have \"(0 \\<le> p + q * sqrt b) = (0 \\<le> p + qb)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 \\<le> p + q * sqrt b) = (0 \\<le> p + qb)", "unfolding qb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 \\<le> p + q * sqrt b) = (0 \\<le> p + q * sqrt b)", "by simp"], ["proof (state)\nthis:\n  (0 \\<le> p + q * sqrt b) = (0 \\<le> p + qb)\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "also"], ["proof (state)\nthis:\n  (0 \\<le> p + q * sqrt b) = (0 \\<le> p + qb)\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "have \"\\<dots> \\<longleftrightarrow> (0 \\<le> p \\<and> abs qb \\<le> abs p \\<or> 0 \\<le> qb \\<and> abs p \\<le> abs qb)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 \\<le> p + qb) =\n    (0 \\<le> p \\<and> \\<bar>qb\\<bar> \\<le> \\<bar>p\\<bar> \\<or>\n     0 \\<le> qb \\<and> \\<bar>p\\<bar> \\<le> \\<bar>qb\\<bar>)", "by arith"], ["proof (state)\nthis:\n  (0 \\<le> p + qb) =\n  (0 \\<le> p \\<and> \\<bar>qb\\<bar> \\<le> \\<bar>p\\<bar> \\<or>\n   0 \\<le> qb \\<and> \\<bar>p\\<bar> \\<le> \\<bar>qb\\<bar>)\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "also"], ["proof (state)\nthis:\n  (0 \\<le> p + qb) =\n  (0 \\<le> p \\<and> \\<bar>qb\\<bar> \\<le> \\<bar>p\\<bar> \\<or>\n   0 \\<le> qb \\<and> \\<bar>p\\<bar> \\<le> \\<bar>qb\\<bar>)\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "have \"\\<dots> \\<longleftrightarrow> (0 \\<le> p \\<and> qb * qb \\<le> p * p \\<or> 0 \\<le> qb \\<and> p * p \\<le> qb * qb)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 \\<le> p \\<and> \\<bar>qb\\<bar> \\<le> \\<bar>p\\<bar> \\<or>\n     0 \\<le> qb \\<and> \\<bar>p\\<bar> \\<le> \\<bar>qb\\<bar>) =\n    (0 \\<le> p \\<and> qb * qb \\<le> p * p \\<or>\n     0 \\<le> qb \\<and> p * p \\<le> qb * qb)", "unfolding abs_lesseq_square"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 \\<le> p \\<and> qb * qb \\<le> p * p \\<or>\n     0 \\<le> qb \\<and> p * p \\<le> qb * qb) =\n    (0 \\<le> p \\<and> qb * qb \\<le> p * p \\<or>\n     0 \\<le> qb \\<and> p * p \\<le> qb * qb)", ".."], ["proof (state)\nthis:\n  (0 \\<le> p \\<and> \\<bar>qb\\<bar> \\<le> \\<bar>p\\<bar> \\<or>\n   0 \\<le> qb \\<and> \\<bar>p\\<bar> \\<le> \\<bar>qb\\<bar>) =\n  (0 \\<le> p \\<and> qb * qb \\<le> p * p \\<or>\n   0 \\<le> qb \\<and> p * p \\<le> qb * qb)\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "also"], ["proof (state)\nthis:\n  (0 \\<le> p \\<and> \\<bar>qb\\<bar> \\<le> \\<bar>p\\<bar> \\<or>\n   0 \\<le> qb \\<and> \\<bar>p\\<bar> \\<le> \\<bar>qb\\<bar>) =\n  (0 \\<le> p \\<and> qb * qb \\<le> p * p \\<or>\n   0 \\<le> qb \\<and> p * p \\<le> qb * qb)\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "have \"qb * qb = b * q * q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qb * qb = b * q * q", "unfolding qb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. q * sqrt b * (q * sqrt b) = b * q * q", "using b"], ["proof (prove)\nusing this:\n  0 \\<le> b\n  q = 0 \\<or> b' \\<in> sqrt_irrat\n\ngoal (1 subgoal):\n 1. q * sqrt b * (q * sqrt b) = b * q * q", "by auto"], ["proof (state)\nthis:\n  qb * qb = b * q * q\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "also"], ["proof (state)\nthis:\n  qb * qb = b * q * q\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "have \"0 \\<le> qb \\<longleftrightarrow> 0 \\<le> q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 \\<le> qb) = (0 \\<le> q)", "unfolding qb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 \\<le> q * sqrt b) = (0 \\<le> q)", "using sqrt disj"], ["proof (prove)\nusing this:\n  0 \\<le> sqrt b\n  q = 0 \\<or> b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (0 \\<le> q * sqrt b) = (0 \\<le> q)", "by (metis le_cases mult_eq_0_iff mult_nonneg_nonneg mult_nonpos_nonneg order_class.order.antisym  qb_def real_sqrt_eq_zero_cancel_iff)"], ["proof (state)\nthis:\n  (0 \\<le> qb) = (0 \\<le> q)\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "also"], ["proof (state)\nthis:\n  (0 \\<le> qb) = (0 \\<le> q)\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "have \"(0 \\<le> p \\<and> b * q * q \\<le> p * p \\<or> 0 \\<le> q \\<and> p * p \\<le> b * q * q)\n    \\<longleftrightarrow> (0 \\<le> p' \\<and> of_nat b' * q' * q' \\<le> p' * p' \\<or> 0 \\<le> q' \\<and> p' * p' \\<le> of_nat b' * q' * q')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 \\<le> p \\<and> b * q * q \\<le> p * p \\<or>\n     0 \\<le> q \\<and> p * p \\<le> b * q * q) =\n    (0 \\<le> p' \\<and> rat_of_nat b' * q' * q' \\<le> p' * p' \\<or>\n     0 \\<le> q' \\<and> p' * p' \\<le> rat_of_nat b' * q' * q')", "unfolding qb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 \\<le> p \\<and> b * q * q \\<le> p * p \\<or>\n     0 \\<le> q \\<and> p * p \\<le> b * q * q) =\n    (0 \\<le> p' \\<and> rat_of_nat b' * q' * q' \\<le> p' * p' \\<or>\n     0 \\<le> q' \\<and> p' * p' \\<le> rat_of_nat b' * q' * q')", "by (unfold bdef p_def q_def of_rat_mult[symmetric] of_rat_less_eq, simp)"], ["proof (state)\nthis:\n  (0 \\<le> p \\<and> b * q * q \\<le> p * p \\<or>\n   0 \\<le> q \\<and> p * p \\<le> b * q * q) =\n  (0 \\<le> p' \\<and> rat_of_nat b' * q' * q' \\<le> p' * p' \\<or>\n   0 \\<le> q' \\<and> p' * p' \\<le> rat_of_nat b' * q' * q')\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       ge_0 (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       (0 \\<le> p \\<and> rat_of_nat ba * q * q \\<le> p * p \\<or>\n        0 \\<le> q \\<and> p * p \\<le> rat_of_nat ba * q * q)", "finally"], ["proof (chain)\npicking this:\n  (0 \\<le> p + q * sqrt b) =\n  (0 \\<le> p' \\<and> rat_of_nat b' * q' * q' \\<le> p' * p' \\<or>\n   0 \\<le> q' \\<and> p' * p' \\<le> rat_of_nat b' * q' * q')", "show \"ge_0 (real_of_rat p' + real_of_rat q' * sqrt (of_nat b')) =\n       (0 \\<le> p' \\<and> of_nat b' * q' * q' \\<le> p' * p' \\<or> 0 \\<le> q' \\<and> p' * p' \\<le> of_nat b' * q' * q')\""], ["proof (prove)\nusing this:\n  (0 \\<le> p + q * sqrt b) =\n  (0 \\<le> p' \\<and> rat_of_nat b' * q' * q' \\<le> p' * p' \\<or>\n   0 \\<le> q' \\<and> p' * p' \\<le> rat_of_nat b' * q' * q')\n\ngoal (1 subgoal):\n 1. ge_0 (real_of_rat p' + real_of_rat q' * sqrt (real b')) =\n    (0 \\<le> p' \\<and> rat_of_nat b' * q' * q' \\<le> p' * p' \\<or>\n     0 \\<le> q' \\<and> p' * p' \\<le> rat_of_nat b' * q' * q')", "unfolding ge_0_def p_def b_def q_def"], ["proof (prove)\nusing this:\n  (0 \\<le> real_of_rat p' + real_of_rat q' * sqrt (real b')) =\n  (0 \\<le> p' \\<and> rat_of_nat b' * q' * q' \\<le> p' * p' \\<or>\n   0 \\<le> q' \\<and> p' * p' \\<le> rat_of_nat b' * q' * q')\n\ngoal (1 subgoal):\n 1. (0 \\<le> real_of_rat p' + real_of_rat q' * sqrt (real b')) =\n    (0 \\<le> p' \\<and> rat_of_nat b' * q' * q' \\<le> p' * p' \\<or>\n     0 \\<le> q' \\<and> p' * p' \\<le> rat_of_nat b' * q' * q')", "by (auto simp: of_rat_add of_rat_mult)"], ["proof (state)\nthis:\n  ge_0 (real_of_rat p' + real_of_rat q' * sqrt (real b')) =\n  (0 \\<le> p' \\<and> rat_of_nat b' * q' * q' \\<le> p' * p' \\<or>\n   0 \\<le> q' \\<and> p' * p' \\<le> rat_of_nat b' * q' * q')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ma_0: \"0 = real_of (ma_of_rat 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 = real_of (ma_of_rat 0)", "by (transfer, auto)"], ["", "lemma ma_1: \"1 = real_of (ma_of_rat 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 = real_of (ma_of_rat 1)", "by (transfer, auto)"], ["", "lemma ma_uminus:\n  \"- (real_of x) = real_of (ma_uminus x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - real_of x = real_of (ma_uminus x)", "by (transfer, auto simp: of_rat_minus)"], ["", "lemma ma_inverse: \"inverse (real_of r) = real_of (ma_inverse r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse (real_of r) = real_of (ma_inverse r)", "proof (transfer, unfold Let_def, clarsimp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       inverse (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       real_of_rat (p * inverse (p * p - rat_of_nat ba * q * q)) +\n       real_of_rat (- (q * inverse (p * p - rat_of_nat ba * q * q))) *\n       sqrt (real ba)", "fix p' q' :: rat and b' :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       inverse (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       real_of_rat (p * inverse (p * p - rat_of_nat ba * q * q)) +\n       real_of_rat (- (q * inverse (p * p - rat_of_nat ba * q * q))) *\n       sqrt (real ba)", "assume b': \"q' = 0 \\<or> b' \\<in> sqrt_irrat\""], ["proof (state)\nthis:\n  q' = 0 \\<or> b' \\<in> sqrt_irrat\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       inverse (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       real_of_rat (p * inverse (p * p - rat_of_nat ba * q * q)) +\n       real_of_rat (- (q * inverse (p * p - rat_of_nat ba * q * q))) *\n       sqrt (real ba)", "define b where \"b = real_of_nat b'\""], ["proof (state)\nthis:\n  b = real b'\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       inverse (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       real_of_rat (p * inverse (p * p - rat_of_nat ba * q * q)) +\n       real_of_rat (- (q * inverse (p * p - rat_of_nat ba * q * q))) *\n       sqrt (real ba)", "define p where \"p = real_of_rat p'\""], ["proof (state)\nthis:\n  p = real_of_rat p'\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       inverse (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       real_of_rat (p * inverse (p * p - rat_of_nat ba * q * q)) +\n       real_of_rat (- (q * inverse (p * p - rat_of_nat ba * q * q))) *\n       sqrt (real ba)", "define q where \"q = real_of_rat q'\""], ["proof (state)\nthis:\n  q = real_of_rat q'\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       inverse (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       real_of_rat (p * inverse (p * p - rat_of_nat ba * q * q)) +\n       real_of_rat (- (q * inverse (p * p - rat_of_nat ba * q * q))) *\n       sqrt (real ba)", "from b'"], ["proof (chain)\npicking this:\n  q' = 0 \\<or> b' \\<in> sqrt_irrat", "have b: \"b \\<ge> 0\" \"q = 0 \\<or> b' \\<in> sqrt_irrat\""], ["proof (prove)\nusing this:\n  q' = 0 \\<or> b' \\<in> sqrt_irrat\n\ngoal (1 subgoal):\n 1. 0 \\<le> b &&& q = 0 \\<or> b' \\<in> sqrt_irrat", "unfolding b_def q_def"], ["proof (prove)\nusing this:\n  q' = 0 \\<or> b' \\<in> sqrt_irrat\n\ngoal (1 subgoal):\n 1. 0 \\<le> real b' &&& real_of_rat q' = 0 \\<or> b' \\<in> sqrt_irrat", "by auto"], ["proof (state)\nthis:\n  0 \\<le> b\n  q = 0 \\<or> b' \\<in> sqrt_irrat\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       inverse (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       real_of_rat (p * inverse (p * p - rat_of_nat ba * q * q)) +\n       real_of_rat (- (q * inverse (p * p - rat_of_nat ba * q * q))) *\n       sqrt (real ba)", "have \"inverse (p + q * sqrt b) = (p - q * sqrt b) * inverse (p * p - b * (q * q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse (p + q * sqrt b) =\n    (p - q * sqrt b) * inverse (p * p - b * (q * q))", "proof (cases \"q = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    inverse (p + q * sqrt b) =\n    (p - q * sqrt b) * inverse (p * p - b * (q * q))\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    inverse (p + q * sqrt b) =\n    (p - q * sqrt b) * inverse (p * p - b * (q * q))", "case True"], ["proof (state)\nthis:\n  q = 0\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    inverse (p + q * sqrt b) =\n    (p - q * sqrt b) * inverse (p * p - b * (q * q))\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    inverse (p + q * sqrt b) =\n    (p - q * sqrt b) * inverse (p * p - b * (q * q))", "thus ?thesis"], ["proof (prove)\nusing this:\n  q = 0\n\ngoal (1 subgoal):\n 1. inverse (p + q * sqrt b) =\n    (p - q * sqrt b) * inverse (p * p - b * (q * q))", "by (cases \"p = 0\", auto simp: field_simps)"], ["proof (state)\nthis:\n  inverse (p + q * sqrt b) =\n  (p - q * sqrt b) * inverse (p * p - b * (q * q))\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    inverse (p + q * sqrt b) =\n    (p - q * sqrt b) * inverse (p * p - b * (q * q))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    inverse (p + q * sqrt b) =\n    (p - q * sqrt b) * inverse (p * p - b * (q * q))", "case False"], ["proof (state)\nthis:\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    inverse (p + q * sqrt b) =\n    (p - q * sqrt b) * inverse (p * p - b * (q * q))", "from sqrt_irrat[OF b', of p'] b_def p_def q_def False"], ["proof (chain)\npicking this:\n  real_of_rat p' + real_of_rat q' * sqrt (real b') = 0 \\<Longrightarrow>\n  q' = 0\n  b = real b'\n  p = real_of_rat p'\n  q = real_of_rat q'\n  q \\<noteq> 0", "have nnull: \"p + q * sqrt b \\<noteq> 0\""], ["proof (prove)\nusing this:\n  real_of_rat p' + real_of_rat q' * sqrt (real b') = 0 \\<Longrightarrow>\n  q' = 0\n  b = real b'\n  p = real_of_rat p'\n  q = real_of_rat q'\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p + q * sqrt b \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  p + q * sqrt b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    inverse (p + q * sqrt b) =\n    (p - q * sqrt b) * inverse (p * p - b * (q * q))", "have \"?thesis \\<longleftrightarrow> (p + q * sqrt b) * inverse (p + q * sqrt b) =\n      (p + q * sqrt b) * ((p - q * sqrt b) * inverse (p * p - b * (q * q)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (inverse (p + q * sqrt b) =\n     (p - q * sqrt b) * inverse (p * p - b * (q * q))) =\n    ((p + q * sqrt b) * inverse (p + q * sqrt b) =\n     (p + q * sqrt b) * ((p - q * sqrt b) * inverse (p * p - b * (q * q))))", "unfolding mult_left_cancel[OF nnull]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (inverse (p + q * sqrt b) =\n     (p - q * sqrt b) * inverse (p * p - b * (q * q))) =\n    (inverse (p + q * sqrt b) =\n     (p - q * sqrt b) * inverse (p * p - b * (q * q)))", "by auto"], ["proof (state)\nthis:\n  (inverse (p + q * sqrt b) =\n   (p - q * sqrt b) * inverse (p * p - b * (q * q))) =\n  ((p + q * sqrt b) * inverse (p + q * sqrt b) =\n   (p + q * sqrt b) * ((p - q * sqrt b) * inverse (p * p - b * (q * q))))\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    inverse (p + q * sqrt b) =\n    (p - q * sqrt b) * inverse (p * p - b * (q * q))", "also"], ["proof (state)\nthis:\n  (inverse (p + q * sqrt b) =\n   (p - q * sqrt b) * inverse (p * p - b * (q * q))) =\n  ((p + q * sqrt b) * inverse (p + q * sqrt b) =\n   (p + q * sqrt b) * ((p - q * sqrt b) * inverse (p * p - b * (q * q))))\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    inverse (p + q * sqrt b) =\n    (p - q * sqrt b) * inverse (p * p - b * (q * q))", "have \"(p + q * sqrt b) * inverse (p + q * sqrt b) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p + q * sqrt b) * inverse (p + q * sqrt b) = 1", "using nnull"], ["proof (prove)\nusing this:\n  p + q * sqrt b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (p + q * sqrt b) * inverse (p + q * sqrt b) = 1", "by auto"], ["proof (state)\nthis:\n  (p + q * sqrt b) * inverse (p + q * sqrt b) = 1\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    inverse (p + q * sqrt b) =\n    (p - q * sqrt b) * inverse (p * p - b * (q * q))", "also"], ["proof (state)\nthis:\n  (p + q * sqrt b) * inverse (p + q * sqrt b) = 1\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    inverse (p + q * sqrt b) =\n    (p - q * sqrt b) * inverse (p * p - b * (q * q))", "have \"(p + q * sqrt b) * ((p - q * sqrt b) * inverse (p * p - b * (q * q)))\n      = (p * p - b * (q * q)) * inverse (p * p - b * (q * q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p + q * sqrt b) * ((p - q * sqrt b) * inverse (p * p - b * (q * q))) =\n    (p * p - b * (q * q)) * inverse (p * p - b * (q * q))", "using b"], ["proof (prove)\nusing this:\n  0 \\<le> b\n  q = 0 \\<or> b' \\<in> sqrt_irrat\n\ngoal (1 subgoal):\n 1. (p + q * sqrt b) * ((p - q * sqrt b) * inverse (p * p - b * (q * q))) =\n    (p * p - b * (q * q)) * inverse (p * p - b * (q * q))", "by (auto simp: field_simps)"], ["proof (state)\nthis:\n  (p + q * sqrt b) * ((p - q * sqrt b) * inverse (p * p - b * (q * q))) =\n  (p * p - b * (q * q)) * inverse (p * p - b * (q * q))\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    inverse (p + q * sqrt b) =\n    (p - q * sqrt b) * inverse (p * p - b * (q * q))", "also"], ["proof (state)\nthis:\n  (p + q * sqrt b) * ((p - q * sqrt b) * inverse (p * p - b * (q * q))) =\n  (p * p - b * (q * q)) * inverse (p * p - b * (q * q))\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    inverse (p + q * sqrt b) =\n    (p - q * sqrt b) * inverse (p * p - b * (q * q))", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p * p - b * (q * q)) * inverse (p * p - b * (q * q)) = 1", "proof (rule right_inverse, rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. p * p - b * (q * q) = 0 \\<Longrightarrow> False", "assume eq: \"p * p - b * (q * q) = 0\""], ["proof (state)\nthis:\n  p * p - b * (q * q) = 0\n\ngoal (1 subgoal):\n 1. p * p - b * (q * q) = 0 \\<Longrightarrow> False", "have \"real_of_rat (p' * p' / (q' * q')) = p * p / (q * q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_rat (p' * p' / (q' * q')) = p * p / (q * q)", "unfolding p_def b_def q_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_rat (p' * p' / (q' * q')) =\n    real_of_rat p' * real_of_rat p' / (real_of_rat q' * real_of_rat q')", "by (auto simp: of_rat_mult of_rat_divide)"], ["proof (state)\nthis:\n  real_of_rat (p' * p' / (q' * q')) = p * p / (q * q)\n\ngoal (1 subgoal):\n 1. p * p - b * (q * q) = 0 \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  real_of_rat (p' * p' / (q' * q')) = p * p / (q * q)\n\ngoal (1 subgoal):\n 1. p * p - b * (q * q) = 0 \\<Longrightarrow> False", "have \"\\<dots> = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p * p / (q * q) = b", "using eq False"], ["proof (prove)\nusing this:\n  p * p - b * (q * q) = 0\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p * p / (q * q) = b", "by (auto simp: field_simps)"], ["proof (state)\nthis:\n  p * p / (q * q) = b\n\ngoal (1 subgoal):\n 1. p * p - b * (q * q) = 0 \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  p * p / (q * q) = b\n\ngoal (1 subgoal):\n 1. p * p - b * (q * q) = 0 \\<Longrightarrow> False", "have \"\\<dots> = real_of_rat (of_nat b')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b = real_of_rat (rat_of_nat b')", "unfolding b_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real b' = real_of_rat (rat_of_nat b')", "by auto"], ["proof (state)\nthis:\n  b = real_of_rat (rat_of_nat b')\n\ngoal (1 subgoal):\n 1. p * p - b * (q * q) = 0 \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  real_of_rat (p' * p' / (q' * q')) = real_of_rat (rat_of_nat b')", "have \"(p' / q') * (p' / q') = of_nat b'\""], ["proof (prove)\nusing this:\n  real_of_rat (p' * p' / (q' * q')) = real_of_rat (rat_of_nat b')\n\ngoal (1 subgoal):\n 1. p' / q' * (p' / q') = rat_of_nat b'", "unfolding of_rat_eq_iff"], ["proof (prove)\nusing this:\n  p' * p' / (q' * q') = rat_of_nat b'\n\ngoal (1 subgoal):\n 1. p' / q' * (p' / q') = rat_of_nat b'", "by simp"], ["proof (state)\nthis:\n  p' / q' * (p' / q') = rat_of_nat b'\n\ngoal (1 subgoal):\n 1. p * p - b * (q * q) = 0 \\<Longrightarrow> False", "with b False"], ["proof (chain)\npicking this:\n  0 \\<le> b\n  q = 0 \\<or> b' \\<in> sqrt_irrat\n  q \\<noteq> 0\n  p' / q' * (p' / q') = rat_of_nat b'", "show False"], ["proof (prove)\nusing this:\n  0 \\<le> b\n  q = 0 \\<or> b' \\<in> sqrt_irrat\n  q \\<noteq> 0\n  p' / q' * (p' / q') = rat_of_nat b'\n\ngoal (1 subgoal):\n 1. False", "unfolding sqrt_irrat_def"], ["proof (prove)\nusing this:\n  0 \\<le> b\n  q = 0 \\<or> b' \\<in> {q. \\<nexists>p. p * p = rat_of_nat q}\n  q \\<noteq> 0\n  p' / q' * (p' / q') = rat_of_nat b'\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (p * p - b * (q * q)) * inverse (p * p - b * (q * q)) = 1\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    inverse (p + q * sqrt b) =\n    (p - q * sqrt b) * inverse (p * p - b * (q * q))", "finally"], ["proof (chain)\npicking this:\n  (inverse (p + q * sqrt b) =\n   (p - q * sqrt b) * inverse (p * p - b * (q * q))) =\n  (1 = 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  (inverse (p + q * sqrt b) =\n   (p - q * sqrt b) * inverse (p * p - b * (q * q))) =\n  (1 = 1)\n\ngoal (1 subgoal):\n 1. inverse (p + q * sqrt b) =\n    (p - q * sqrt b) * inverse (p * p - b * (q * q))", "by simp"], ["proof (state)\nthis:\n  inverse (p + q * sqrt b) =\n  (p - q * sqrt b) * inverse (p * p - b * (q * q))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inverse (p + q * sqrt b) =\n  (p - q * sqrt b) * inverse (p * p - b * (q * q))\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       inverse (real_of_rat p + real_of_rat q * sqrt (real ba)) =\n       real_of_rat (p * inverse (p * p - rat_of_nat ba * q * q)) +\n       real_of_rat (- (q * inverse (p * p - rat_of_nat ba * q * q))) *\n       sqrt (real ba)", "thus \"inverse (real_of_rat p' + real_of_rat q' * sqrt (of_nat b')) =\n       real_of_rat (p' * inverse (p' * p' - of_nat b' * q' * q')) +\n       real_of_rat (- (q' * inverse (p' * p' - of_nat b' * q' * q'))) * sqrt (of_nat b')\""], ["proof (prove)\nusing this:\n  inverse (p + q * sqrt b) =\n  (p - q * sqrt b) * inverse (p * p - b * (q * q))\n\ngoal (1 subgoal):\n 1. inverse (real_of_rat p' + real_of_rat q' * sqrt (real b')) =\n    real_of_rat (p' * inverse (p' * p' - rat_of_nat b' * q' * q')) +\n    real_of_rat (- (q' * inverse (p' * p' - rat_of_nat b' * q' * q'))) *\n    sqrt (real b')", "by (simp add: divide_simps of_rat_mult of_rat_divide of_rat_diff of_rat_minus b_def p_def q_def\n             split: if_splits)"], ["proof (state)\nthis:\n  inverse (real_of_rat p' + real_of_rat q' * sqrt (real b')) =\n  real_of_rat (p' * inverse (p' * p' - rat_of_nat b' * q' * q')) +\n  real_of_rat (- (q' * inverse (p' * p' - rat_of_nat b' * q' * q'))) *\n  sqrt (real b')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ma_sqrt_main: \"ma_rat r \\<ge> 0 \\<Longrightarrow> ma_coeff r = 0 \\<Longrightarrow> sqrt (real_of r) = real_of (ma_sqrt r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> ma_rat r; ma_coeff r = 0\\<rbrakk>\n    \\<Longrightarrow> sqrt (real_of r) = real_of (ma_sqrt r)", "proof (transfer, unfold Let_def, clarsimp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       0 \\<le> p \\<Longrightarrow>\n       sqrt (real_of_rat p) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "fix p :: rat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       0 \\<le> p \\<Longrightarrow>\n       sqrt (real_of_rat p) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "assume p: \"0 \\<le> p\""], ["proof (state)\nthis:\n  0 \\<le> p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       0 \\<le> p \\<Longrightarrow>\n       sqrt (real_of_rat p) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "hence abs: \"abs p = p\""], ["proof (prove)\nusing this:\n  0 \\<le> p\n\ngoal (1 subgoal):\n 1. \\<bar>p\\<bar> = p", "by auto"], ["proof (state)\nthis:\n  \\<bar>p\\<bar> = p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       0 \\<le> p \\<Longrightarrow>\n       sqrt (real_of_rat p) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "obtain a b where ab: \"quotient_of p = (a,b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        quotient_of p = (a, b) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  quotient_of p = (a, b)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       0 \\<le> p \\<Longrightarrow>\n       sqrt (real_of_rat p) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "hence pab: \"p = of_int a / of_int b\""], ["proof (prove)\nusing this:\n  quotient_of p = (a, b)\n\ngoal (1 subgoal):\n 1. p = rat_of_int a / rat_of_int b", "by (rule quotient_of_div)"], ["proof (state)\nthis:\n  p = rat_of_int a / rat_of_int b\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       0 \\<le> p \\<Longrightarrow>\n       sqrt (real_of_rat p) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "from ab"], ["proof (chain)\npicking this:\n  quotient_of p = (a, b)", "have b: \"b > 0\""], ["proof (prove)\nusing this:\n  quotient_of p = (a, b)\n\ngoal (1 subgoal):\n 1. 0 < b", "by (rule quotient_of_denom_pos)"], ["proof (state)\nthis:\n  0 < b\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       0 \\<le> p \\<Longrightarrow>\n       sqrt (real_of_rat p) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "with p pab"], ["proof (chain)\npicking this:\n  0 \\<le> p\n  p = rat_of_int a / rat_of_int b\n  0 < b", "have abpos: \"a * b \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> p\n  p = rat_of_int a / rat_of_int b\n  0 < b\n\ngoal (1 subgoal):\n 1. 0 \\<le> a * b", "by (metis of_int_0_le_iff of_int_le_0_iff zero_le_divide_iff zero_le_mult_iff)"], ["proof (state)\nthis:\n  0 \\<le> a * b\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       0 \\<le> p \\<Longrightarrow>\n       sqrt (real_of_rat p) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "have rab: \"of_nat (nat (a * b)) = real_of_int a * real_of_int b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (nat (a * b)) = real_of_int a * real_of_int b", "using abpos"], ["proof (prove)\nusing this:\n  0 \\<le> a * b\n\ngoal (1 subgoal):\n 1. real (nat (a * b)) = real_of_int a * real_of_int b", "by simp"], ["proof (state)\nthis:\n  real (nat (a * b)) = real_of_int a * real_of_int b\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       0 \\<le> p \\<Longrightarrow>\n       sqrt (real_of_rat p) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "let ?lhs = \"sqrt (of_int a / of_int b)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       0 \\<le> p \\<Longrightarrow>\n       sqrt (real_of_rat p) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "let ?rhs = \"(case case quotient_of p of\n               (a, b) \\<Rightarrow> (case sqrt_int \\<bar>a * b\\<bar> of [] \\<Rightarrow> (0, inverse (of_int b), nat \\<bar>a * b\\<bar>)\n                 | s # x \\<Rightarrow> (of_int s / of_int b, 0, 0)) of\n          (p, q, b) \\<Rightarrow> of_rat p + of_rat q * sqrt (of_nat b))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       0 \\<le> p \\<Longrightarrow>\n       sqrt (real_of_rat p) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "have \"sqrt (real_of_rat p) = ?lhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (real_of_rat p) = sqrt (real_of_int a / real_of_int b)", "unfolding pab"], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (real_of_rat (rat_of_int a / rat_of_int b)) =\n    sqrt (real_of_int a / real_of_int b)", "by (metis of_rat_divide of_rat_of_int_eq)"], ["proof (state)\nthis:\n  sqrt (real_of_rat p) = sqrt (real_of_int a / real_of_int b)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       0 \\<le> p \\<Longrightarrow>\n       sqrt (real_of_rat p) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "also"], ["proof (state)\nthis:\n  sqrt (real_of_rat p) = sqrt (real_of_int a / real_of_int b)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       0 \\<le> p \\<Longrightarrow>\n       sqrt (real_of_rat p) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "have \"\\<dots> = ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (real_of_int a / real_of_int b) =\n    (case case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n     (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))", "proof (cases \"sqrt_int \\<bar>a * b\\<bar>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. sqrt_int \\<bar>a * b\\<bar> = [] \\<Longrightarrow>\n    sqrt (real_of_int a / real_of_int b) =\n    (case case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n     (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))\n 2. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       sqrt (real_of_int a / real_of_int b) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "case Nil"], ["proof (state)\nthis:\n  sqrt_int \\<bar>a * b\\<bar> = []\n\ngoal (2 subgoals):\n 1. sqrt_int \\<bar>a * b\\<bar> = [] \\<Longrightarrow>\n    sqrt (real_of_int a / real_of_int b) =\n    (case case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n     (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))\n 2. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       sqrt (real_of_int a / real_of_int b) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "define sb where \"sb = sqrt (of_int b)\""], ["proof (state)\nthis:\n  sb = sqrt (real_of_int b)\n\ngoal (2 subgoals):\n 1. sqrt_int \\<bar>a * b\\<bar> = [] \\<Longrightarrow>\n    sqrt (real_of_int a / real_of_int b) =\n    (case case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n     (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))\n 2. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       sqrt (real_of_int a / real_of_int b) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "define sa where \"sa = sqrt (of_int a)\""], ["proof (state)\nthis:\n  sa = sqrt (real_of_int a)\n\ngoal (2 subgoals):\n 1. sqrt_int \\<bar>a * b\\<bar> = [] \\<Longrightarrow>\n    sqrt (real_of_int a / real_of_int b) =\n    (case case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n     (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))\n 2. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       sqrt (real_of_int a / real_of_int b) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "from b sb_def"], ["proof (chain)\npicking this:\n  0 < b\n  sb = sqrt (real_of_int b)", "have sb: \"sb > 0\" \"real_of_int b > 0\""], ["proof (prove)\nusing this:\n  0 < b\n  sb = sqrt (real_of_int b)\n\ngoal (1 subgoal):\n 1. 0 < sb &&& 0 < real_of_int b", "by auto"], ["proof (state)\nthis:\n  0 < sb\n  0 < real_of_int b\n\ngoal (2 subgoals):\n 1. sqrt_int \\<bar>a * b\\<bar> = [] \\<Longrightarrow>\n    sqrt (real_of_int a / real_of_int b) =\n    (case case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n     (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))\n 2. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       sqrt (real_of_int a / real_of_int b) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "have sbb: \"sb * sb = real_of_int b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sb * sb = real_of_int b", "unfolding sb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (real_of_int b) * sqrt (real_of_int b) = real_of_int b", "by (rule sqrt_sqrt, insert b, auto)"], ["proof (state)\nthis:\n  sb * sb = real_of_int b\n\ngoal (2 subgoals):\n 1. sqrt_int \\<bar>a * b\\<bar> = [] \\<Longrightarrow>\n    sqrt (real_of_int a / real_of_int b) =\n    (case case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n     (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))\n 2. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       sqrt (real_of_int a / real_of_int b) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "from Nil"], ["proof (chain)\npicking this:\n  sqrt_int \\<bar>a * b\\<bar> = []", "have \"?thesis = (sa / sb =\n      inverse (of_int b) * (sa * sb))\""], ["proof (prove)\nusing this:\n  sqrt_int \\<bar>a * b\\<bar> = []\n\ngoal (1 subgoal):\n 1. (sqrt (real_of_int a / real_of_int b) =\n     (case case quotient_of p of\n           (a, b) \\<Rightarrow>\n             case sqrt_int \\<bar>a * b\\<bar> of\n             [] \\<Rightarrow>\n               (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n             | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n      (p, q, b) \\<Rightarrow>\n        real_of_rat p + real_of_rat q * sqrt (real b))) =\n    (sa / sb = inverse (real_of_int b) * (sa * sb))", "unfolding ab sa_def sb_def"], ["proof (prove)\nusing this:\n  sqrt_int \\<bar>a * b\\<bar> = []\n\ngoal (1 subgoal):\n 1. (sqrt (real_of_int a / real_of_int b) =\n     (case case (a, b) of\n           (a, b) \\<Rightarrow>\n             case sqrt_int \\<bar>a * b\\<bar> of\n             [] \\<Rightarrow>\n               (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n             | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n      (p, q, b) \\<Rightarrow>\n        real_of_rat p + real_of_rat q * sqrt (real b))) =\n    (sqrt (real_of_int a) / sqrt (real_of_int b) =\n     inverse (real_of_int b) *\n     (sqrt (real_of_int a) * sqrt (real_of_int b)))", "using abpos"], ["proof (prove)\nusing this:\n  sqrt_int \\<bar>a * b\\<bar> = []\n  0 \\<le> a * b\n\ngoal (1 subgoal):\n 1. (sqrt (real_of_int a / real_of_int b) =\n     (case case (a, b) of\n           (a, b) \\<Rightarrow>\n             case sqrt_int \\<bar>a * b\\<bar> of\n             [] \\<Rightarrow>\n               (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n             | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n      (p, q, b) \\<Rightarrow>\n        real_of_rat p + real_of_rat q * sqrt (real b))) =\n    (sqrt (real_of_int a) / sqrt (real_of_int b) =\n     inverse (real_of_int b) *\n     (sqrt (real_of_int a) * sqrt (real_of_int b)))", "by (simp add: rab of_rat_divide real_sqrt_mult real_sqrt_divide of_rat_inverse)"], ["proof (state)\nthis:\n  (sqrt (real_of_int a / real_of_int b) =\n   (case case quotient_of p of\n         (a, b) \\<Rightarrow>\n           case sqrt_int \\<bar>a * b\\<bar> of\n           [] \\<Rightarrow>\n             (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n           | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n    (p, q, b) \\<Rightarrow>\n      real_of_rat p + real_of_rat q * sqrt (real b))) =\n  (sa / sb = inverse (real_of_int b) * (sa * sb))\n\ngoal (2 subgoals):\n 1. sqrt_int \\<bar>a * b\\<bar> = [] \\<Longrightarrow>\n    sqrt (real_of_int a / real_of_int b) =\n    (case case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n     (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))\n 2. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       sqrt (real_of_int a / real_of_int b) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "also"], ["proof (state)\nthis:\n  (sqrt (real_of_int a / real_of_int b) =\n   (case case quotient_of p of\n         (a, b) \\<Rightarrow>\n           case sqrt_int \\<bar>a * b\\<bar> of\n           [] \\<Rightarrow>\n             (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n           | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n    (p, q, b) \\<Rightarrow>\n      real_of_rat p + real_of_rat q * sqrt (real b))) =\n  (sa / sb = inverse (real_of_int b) * (sa * sb))\n\ngoal (2 subgoals):\n 1. sqrt_int \\<bar>a * b\\<bar> = [] \\<Longrightarrow>\n    sqrt (real_of_int a / real_of_int b) =\n    (case case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n     (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))\n 2. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       sqrt (real_of_int a / real_of_int b) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "have \"\\<dots> = (sa = inverse (of_int b) * sa * (sb * sb))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sa / sb = inverse (real_of_int b) * (sa * sb)) =\n    (sa = inverse (real_of_int b) * sa * (sb * sb))", "using sb"], ["proof (prove)\nusing this:\n  0 < sb\n  0 < real_of_int b\n\ngoal (1 subgoal):\n 1. (sa / sb = inverse (real_of_int b) * (sa * sb)) =\n    (sa = inverse (real_of_int b) * sa * (sb * sb))", "by (metis b divide_real_def eq_divide_imp inverse_divide inverse_inverse_eq inverse_mult_distrib less_int_code(1) of_int_eq_0_iff real_sqrt_eq_zero_cancel_iff sb_def sbb times_divide_eq_right)"], ["proof (state)\nthis:\n  (sa / sb = inverse (real_of_int b) * (sa * sb)) =\n  (sa = inverse (real_of_int b) * sa * (sb * sb))\n\ngoal (2 subgoals):\n 1. sqrt_int \\<bar>a * b\\<bar> = [] \\<Longrightarrow>\n    sqrt (real_of_int a / real_of_int b) =\n    (case case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n     (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))\n 2. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       sqrt (real_of_int a / real_of_int b) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "also"], ["proof (state)\nthis:\n  (sa / sb = inverse (real_of_int b) * (sa * sb)) =\n  (sa = inverse (real_of_int b) * sa * (sb * sb))\n\ngoal (2 subgoals):\n 1. sqrt_int \\<bar>a * b\\<bar> = [] \\<Longrightarrow>\n    sqrt (real_of_int a / real_of_int b) =\n    (case case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n     (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))\n 2. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       sqrt (real_of_int a / real_of_int b) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "have \"\\<dots> = True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sa = inverse (real_of_int b) * sa * (sb * sb)) = True", "using sb(2)"], ["proof (prove)\nusing this:\n  0 < real_of_int b\n\ngoal (1 subgoal):\n 1. (sa = inverse (real_of_int b) * sa * (sb * sb)) = True", "unfolding sbb"], ["proof (prove)\nusing this:\n  0 < real_of_int b\n\ngoal (1 subgoal):\n 1. (sa = inverse (real_of_int b) * sa * real_of_int b) = True", "by auto"], ["proof (state)\nthis:\n  (sa = inverse (real_of_int b) * sa * (sb * sb)) = True\n\ngoal (2 subgoals):\n 1. sqrt_int \\<bar>a * b\\<bar> = [] \\<Longrightarrow>\n    sqrt (real_of_int a / real_of_int b) =\n    (case case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n     (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))\n 2. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       sqrt (real_of_int a / real_of_int b) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "finally"], ["proof (chain)\npicking this:\n  (sqrt (real_of_int a / real_of_int b) =\n   (case case quotient_of p of\n         (a, b) \\<Rightarrow>\n           case sqrt_int \\<bar>a * b\\<bar> of\n           [] \\<Rightarrow>\n             (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n           | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n    (p, q, b) \\<Rightarrow>\n      real_of_rat p + real_of_rat q * sqrt (real b))) =\n  True", "show \"?thesis\""], ["proof (prove)\nusing this:\n  (sqrt (real_of_int a / real_of_int b) =\n   (case case quotient_of p of\n         (a, b) \\<Rightarrow>\n           case sqrt_int \\<bar>a * b\\<bar> of\n           [] \\<Rightarrow>\n             (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n           | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n    (p, q, b) \\<Rightarrow>\n      real_of_rat p + real_of_rat q * sqrt (real b))) =\n  True\n\ngoal (1 subgoal):\n 1. sqrt (real_of_int a / real_of_int b) =\n    (case case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n     (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))", "by simp"], ["proof (state)\nthis:\n  sqrt (real_of_int a / real_of_int b) =\n  (case case quotient_of p of\n        (a, b) \\<Rightarrow>\n          case sqrt_int \\<bar>a * b\\<bar> of\n          [] \\<Rightarrow>\n            (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n          | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n   (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       sqrt (real_of_int a / real_of_int b) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       sqrt (real_of_int a / real_of_int b) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "case (Cons s x)"], ["proof (state)\nthis:\n  sqrt_int \\<bar>a * b\\<bar> = s # x\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       sqrt (real_of_int a / real_of_int b) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "from b"], ["proof (chain)\npicking this:\n  0 < b", "have b: \"real_of_int b > 0\""], ["proof (prove)\nusing this:\n  0 < b\n\ngoal (1 subgoal):\n 1. 0 < real_of_int b", "by auto"], ["proof (state)\nthis:\n  0 < real_of_int b\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       sqrt (real_of_int a / real_of_int b) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "from Cons sqrt_int[of \"abs (a * b)\"]"], ["proof (chain)\npicking this:\n  sqrt_int \\<bar>a * b\\<bar> = s # x\n  set (sqrt_int \\<bar>a * b\\<bar>) = {y. y * y = \\<bar>a * b\\<bar>}", "have \"s * s = abs (a * b)\""], ["proof (prove)\nusing this:\n  sqrt_int \\<bar>a * b\\<bar> = s # x\n  set (sqrt_int \\<bar>a * b\\<bar>) = {y. y * y = \\<bar>a * b\\<bar>}\n\ngoal (1 subgoal):\n 1. s * s = \\<bar>a * b\\<bar>", "by auto"], ["proof (state)\nthis:\n  s * s = \\<bar>a * b\\<bar>\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       sqrt (real_of_int a / real_of_int b) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "with sqrt_int_pos[OF Cons]"], ["proof (chain)\npicking this:\n  0 \\<le> s\n  s * s = \\<bar>a * b\\<bar>", "have \"sqrt (real_of_int (abs (a * b))) = of_int s\""], ["proof (prove)\nusing this:\n  0 \\<le> s\n  s * s = \\<bar>a * b\\<bar>\n\ngoal (1 subgoal):\n 1. sqrt (real_of_int \\<bar>a * b\\<bar>) = real_of_int s", "by (metis abs_of_nonneg of_int_mult of_int_abs real_sqrt_abs2)"], ["proof (state)\nthis:\n  sqrt (real_of_int \\<bar>a * b\\<bar>) = real_of_int s\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       sqrt (real_of_int a / real_of_int b) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "with abpos"], ["proof (chain)\npicking this:\n  0 \\<le> a * b\n  sqrt (real_of_int \\<bar>a * b\\<bar>) = real_of_int s", "have \"of_int s = sqrt (real_of_int (a * b))\""], ["proof (prove)\nusing this:\n  0 \\<le> a * b\n  sqrt (real_of_int \\<bar>a * b\\<bar>) = real_of_int s\n\ngoal (1 subgoal):\n 1. real_of_int s = sqrt (real_of_int (a * b))", "by auto"], ["proof (state)\nthis:\n  real_of_int s = sqrt (real_of_int (a * b))\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       sqrt_int \\<bar>a * b\\<bar> = aa # list \\<Longrightarrow>\n       sqrt (real_of_int a / real_of_int b) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "thus ?thesis"], ["proof (prove)\nusing this:\n  real_of_int s = sqrt (real_of_int (a * b))\n\ngoal (1 subgoal):\n 1. sqrt (real_of_int a / real_of_int b) =\n    (case case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n     (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))", "unfolding ab split"], ["proof (prove)\nusing this:\n  real_of_int s = sqrt (real_of_int (a * b))\n\ngoal (1 subgoal):\n 1. sqrt (real_of_int a / real_of_int b) =\n    (case case sqrt_int \\<bar>a * b\\<bar> of\n          [] \\<Rightarrow>\n            (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n          | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n     (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))", "using Cons b"], ["proof (prove)\nusing this:\n  real_of_int s = sqrt (real_of_int (a * b))\n  sqrt_int \\<bar>a * b\\<bar> = s # x\n  0 < real_of_int b\n\ngoal (1 subgoal):\n 1. sqrt (real_of_int a / real_of_int b) =\n    (case case sqrt_int \\<bar>a * b\\<bar> of\n          [] \\<Rightarrow>\n            (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n          | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n     (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))", "by (auto simp: of_rat_divide field_simps real_sqrt_divide real_sqrt_mult)"], ["proof (state)\nthis:\n  sqrt (real_of_int a / real_of_int b) =\n  (case case quotient_of p of\n        (a, b) \\<Rightarrow>\n          case sqrt_int \\<bar>a * b\\<bar> of\n          [] \\<Rightarrow>\n            (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n          | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n   (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sqrt (real_of_int a / real_of_int b) =\n  (case case quotient_of p of\n        (a, b) \\<Rightarrow>\n          case sqrt_int \\<bar>a * b\\<bar> of\n          [] \\<Rightarrow>\n            (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n          | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n   (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       0 \\<le> p \\<Longrightarrow>\n       sqrt (real_of_rat p) =\n       (case case quotient_of p of\n             (a, b) \\<Rightarrow>\n               case sqrt_int \\<bar>a * b\\<bar> of\n               [] \\<Rightarrow>\n                 (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n               | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n        (p, q, b) \\<Rightarrow>\n          real_of_rat p + real_of_rat q * sqrt (real b))", "finally"], ["proof (chain)\npicking this:\n  sqrt (real_of_rat p) =\n  (case case quotient_of p of\n        (a, b) \\<Rightarrow>\n          case sqrt_int \\<bar>a * b\\<bar> of\n          [] \\<Rightarrow>\n            (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n          | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n   (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))", "show \"sqrt (real_of_rat p) = ?rhs\""], ["proof (prove)\nusing this:\n  sqrt (real_of_rat p) =\n  (case case quotient_of p of\n        (a, b) \\<Rightarrow>\n          case sqrt_int \\<bar>a * b\\<bar> of\n          [] \\<Rightarrow>\n            (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n          | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n   (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))\n\ngoal (1 subgoal):\n 1. sqrt (real_of_rat p) =\n    (case case quotient_of p of\n          (a, b) \\<Rightarrow>\n            case sqrt_int \\<bar>a * b\\<bar> of\n            [] \\<Rightarrow>\n              (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n            | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n     (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))", "."], ["proof (state)\nthis:\n  sqrt (real_of_rat p) =\n  (case case quotient_of p of\n        (a, b) \\<Rightarrow>\n          case sqrt_int \\<bar>a * b\\<bar> of\n          [] \\<Rightarrow>\n            (0, inverse (rat_of_int b), nat \\<bar>a * b\\<bar>)\n          | s # x \\<Rightarrow> (rat_of_int s / rat_of_int b, 0, 0) of\n   (p, q, b) \\<Rightarrow> real_of_rat p + real_of_rat q * sqrt (real b))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ma_sqrt: \"sqrt (real_of r) = (if ma_coeff r = 0 then\n  (if ma_rat r \\<ge> 0 then real_of (ma_sqrt r) else - real_of (ma_sqrt (ma_uminus r)))\n  else Code.abort (STR ''cannot represent sqrt of irrational number'') (\\<lambda> _. sqrt (real_of r)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))", "proof (cases \"ma_coeff r = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. ma_coeff r = 0 \\<Longrightarrow>\n    sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))\n 2. ma_coeff r \\<noteq> 0 \\<Longrightarrow>\n    sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))", "case True"], ["proof (state)\nthis:\n  ma_coeff r = 0\n\ngoal (2 subgoals):\n 1. ma_coeff r = 0 \\<Longrightarrow>\n    sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))\n 2. ma_coeff r \\<noteq> 0 \\<Longrightarrow>\n    sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))", "note 0 = this"], ["proof (state)\nthis:\n  ma_coeff r = 0\n\ngoal (2 subgoals):\n 1. ma_coeff r = 0 \\<Longrightarrow>\n    sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))\n 2. ma_coeff r \\<noteq> 0 \\<Longrightarrow>\n    sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))", "hence 00: \"ma_coeff (ma_uminus r) = 0\""], ["proof (prove)\nusing this:\n  ma_coeff r = 0\n\ngoal (1 subgoal):\n 1. ma_coeff (ma_uminus r) = 0", "by (transfer, auto)"], ["proof (state)\nthis:\n  ma_coeff (ma_uminus r) = 0\n\ngoal (2 subgoals):\n 1. ma_coeff r = 0 \\<Longrightarrow>\n    sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))\n 2. ma_coeff r \\<noteq> 0 \\<Longrightarrow>\n    sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))", "proof (cases \"ma_rat r \\<ge> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> ma_rat r \\<Longrightarrow>\n    sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))\n 2. \\<not> 0 \\<le> ma_rat r \\<Longrightarrow>\n    sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))", "case True"], ["proof (state)\nthis:\n  0 \\<le> ma_rat r\n\ngoal (2 subgoals):\n 1. 0 \\<le> ma_rat r \\<Longrightarrow>\n    sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))\n 2. \\<not> 0 \\<le> ma_rat r \\<Longrightarrow>\n    sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))", "from ma_sqrt_main[OF this 0] 0 True"], ["proof (chain)\npicking this:\n  sqrt (real_of r) = real_of (ma_sqrt r)\n  ma_coeff r = 0\n  0 \\<le> ma_rat r", "show ?thesis"], ["proof (prove)\nusing this:\n  sqrt (real_of r) = real_of (ma_sqrt r)\n  ma_coeff r = 0\n  0 \\<le> ma_rat r\n\ngoal (1 subgoal):\n 1. sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))", "by auto"], ["proof (state)\nthis:\n  sqrt (real_of r) =\n  (if ma_coeff r = 0\n   then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n        else - real_of (ma_sqrt (ma_uminus r))\n   else Code.abort STR ''cannot represent sqrt of irrational number''\n         (\\<lambda>_. sqrt (real_of r)))\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> ma_rat r \\<Longrightarrow>\n    sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> ma_rat r \\<Longrightarrow>\n    sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))", "case False"], ["proof (state)\nthis:\n  \\<not> 0 \\<le> ma_rat r\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> ma_rat r \\<Longrightarrow>\n    sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))", "hence \"ma_rat (ma_uminus r) \\<ge> 0\""], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> ma_rat r\n\ngoal (1 subgoal):\n 1. 0 \\<le> ma_rat (ma_uminus r)", "by (transfer, auto)"], ["proof (state)\nthis:\n  0 \\<le> ma_rat (ma_uminus r)\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> ma_rat r \\<Longrightarrow>\n    sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))", "from ma_sqrt_main[OF this 00, folded ma_uminus, symmetric] False 0"], ["proof (chain)\npicking this:\n  real_of (ma_sqrt (ma_uminus r)) = sqrt (- real_of r)\n  \\<not> 0 \\<le> ma_rat r\n  ma_coeff r = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  real_of (ma_sqrt (ma_uminus r)) = sqrt (- real_of r)\n  \\<not> 0 \\<le> ma_rat r\n  ma_coeff r = 0\n\ngoal (1 subgoal):\n 1. sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))", "by (auto simp: real_sqrt_minus)"], ["proof (state)\nthis:\n  sqrt (real_of r) =\n  (if ma_coeff r = 0\n   then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n        else - real_of (ma_sqrt (ma_uminus r))\n   else Code.abort STR ''cannot represent sqrt of irrational number''\n         (\\<lambda>_. sqrt (real_of r)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sqrt (real_of r) =\n  (if ma_coeff r = 0\n   then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n        else - real_of (ma_sqrt (ma_uminus r))\n   else Code.abort STR ''cannot represent sqrt of irrational number''\n         (\\<lambda>_. sqrt (real_of r)))\n\ngoal (1 subgoal):\n 1. ma_coeff r \\<noteq> 0 \\<Longrightarrow>\n    sqrt (real_of r) =\n    (if ma_coeff r = 0\n     then if 0 \\<le> ma_rat r then real_of (ma_sqrt r)\n          else - real_of (ma_sqrt (ma_uminus r))\n     else Code.abort STR ''cannot represent sqrt of irrational number''\n           (\\<lambda>_. sqrt (real_of r)))", "qed auto"], ["", "lemma ma_plus:\n  \"(real_of r1 + real_of r2) = (if ma_compatible r1 r2\n    then real_of (ma_plus r1 r2) else\n    Code.abort (STR ''different base'') (\\<lambda> _. real_of r1 + real_of r2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of r1 + real_of r2 =\n    (if ma_compatible r1 r2 then real_of (ma_plus r1 r2)\n     else Code.abort STR ''different base''\n           (\\<lambda>_. real_of r1 + real_of r2))", "by transfer (auto split: prod.split simp: field_simps of_rat_add)"], ["", "lemma ma_times:\n  \"(real_of r1 * real_of r2) = (if ma_compatible r1 r2\n    then real_of (ma_times r1 r2) else\n    Code.abort (STR ''different base'') (\\<lambda> _. real_of r1 * real_of r2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of r1 * real_of r2 =\n    (if ma_compatible r1 r2 then real_of (ma_times r1 r2)\n     else Code.abort STR ''different base''\n           (\\<lambda>_. real_of r1 * real_of r2))", "by transfer (auto split: prod.split simp: field_simps of_rat_mult of_rat_add)"], ["", "lemma ma_equal:\n  \"HOL.equal (real_of r1) (real_of r2) = (if ma_compatible r1 r2\n    then ma_equal r1 r2 else\n    Code.abort (STR ''different base'') (\\<lambda> _. HOL.equal (real_of r1) (real_of r2)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equal_class.equal (real_of r1) (real_of r2) =\n    (if ma_compatible r1 r2 then ma_equal r1 r2\n     else Code.abort STR ''different base''\n           (\\<lambda>_. equal_class.equal (real_of r1) (real_of r2)))", "proof (transfer, unfold equal_real_def, clarsimp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p pa q qa bb bc.\n       \\<lbrakk>q = 0 \\<or> bb \\<in> sqrt_irrat;\n        qa = 0 \\<or> bc \\<in> sqrt_irrat;\n        q = 0 \\<or> qa = 0 \\<or> bb = bc\\<rbrakk>\n       \\<Longrightarrow> (real_of_rat p + real_of_rat q * sqrt (real bb) =\n                          real_of_rat pa +\n                          real_of_rat qa * sqrt (real bc)) =\n                         (p = pa \\<and> q = qa \\<and> (q = 0 \\<or> bb = bc))", "fix p1 q1 p2 q2 :: rat and b1 b2 :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p pa q qa bb bc.\n       \\<lbrakk>q = 0 \\<or> bb \\<in> sqrt_irrat;\n        qa = 0 \\<or> bc \\<in> sqrt_irrat;\n        q = 0 \\<or> qa = 0 \\<or> bb = bc\\<rbrakk>\n       \\<Longrightarrow> (real_of_rat p + real_of_rat q * sqrt (real bb) =\n                          real_of_rat pa +\n                          real_of_rat qa * sqrt (real bc)) =\n                         (p = pa \\<and> q = qa \\<and> (q = 0 \\<or> bb = bc))", "assume b1: \"q1 = 0 \\<or> b1 \\<in> sqrt_irrat\""], ["proof (state)\nthis:\n  q1 = 0 \\<or> b1 \\<in> sqrt_irrat\n\ngoal (1 subgoal):\n 1. \\<And>p pa q qa bb bc.\n       \\<lbrakk>q = 0 \\<or> bb \\<in> sqrt_irrat;\n        qa = 0 \\<or> bc \\<in> sqrt_irrat;\n        q = 0 \\<or> qa = 0 \\<or> bb = bc\\<rbrakk>\n       \\<Longrightarrow> (real_of_rat p + real_of_rat q * sqrt (real bb) =\n                          real_of_rat pa +\n                          real_of_rat qa * sqrt (real bc)) =\n                         (p = pa \\<and> q = qa \\<and> (q = 0 \\<or> bb = bc))", "assume b2: \"q2 = 0 \\<or> b2 \\<in> sqrt_irrat\""], ["proof (state)\nthis:\n  q2 = 0 \\<or> b2 \\<in> sqrt_irrat\n\ngoal (1 subgoal):\n 1. \\<And>p pa q qa bb bc.\n       \\<lbrakk>q = 0 \\<or> bb \\<in> sqrt_irrat;\n        qa = 0 \\<or> bc \\<in> sqrt_irrat;\n        q = 0 \\<or> qa = 0 \\<or> bb = bc\\<rbrakk>\n       \\<Longrightarrow> (real_of_rat p + real_of_rat q * sqrt (real bb) =\n                          real_of_rat pa +\n                          real_of_rat qa * sqrt (real bc)) =\n                         (p = pa \\<and> q = qa \\<and> (q = 0 \\<or> bb = bc))", "assume base: \"q1 = 0 \\<or> q2 = 0 \\<or> b1 = b2\""], ["proof (state)\nthis:\n  q1 = 0 \\<or> q2 = 0 \\<or> b1 = b2\n\ngoal (1 subgoal):\n 1. \\<And>p pa q qa bb bc.\n       \\<lbrakk>q = 0 \\<or> bb \\<in> sqrt_irrat;\n        qa = 0 \\<or> bc \\<in> sqrt_irrat;\n        q = 0 \\<or> qa = 0 \\<or> bb = bc\\<rbrakk>\n       \\<Longrightarrow> (real_of_rat p + real_of_rat q * sqrt (real bb) =\n                          real_of_rat pa +\n                          real_of_rat qa * sqrt (real bc)) =\n                         (p = pa \\<and> q = qa \\<and> (q = 0 \\<or> bb = bc))", "let ?l = \"real_of_rat p1 + real_of_rat q1 * sqrt (of_nat b1) =\n      real_of_rat p2 + real_of_rat q2 * sqrt (of_nat b2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p pa q qa bb bc.\n       \\<lbrakk>q = 0 \\<or> bb \\<in> sqrt_irrat;\n        qa = 0 \\<or> bc \\<in> sqrt_irrat;\n        q = 0 \\<or> qa = 0 \\<or> bb = bc\\<rbrakk>\n       \\<Longrightarrow> (real_of_rat p + real_of_rat q * sqrt (real bb) =\n                          real_of_rat pa +\n                          real_of_rat qa * sqrt (real bc)) =\n                         (p = pa \\<and> q = qa \\<and> (q = 0 \\<or> bb = bc))", "let ?m = \"real_of_rat q1 * sqrt (of_nat b1) = real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (of_nat b2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p pa q qa bb bc.\n       \\<lbrakk>q = 0 \\<or> bb \\<in> sqrt_irrat;\n        qa = 0 \\<or> bc \\<in> sqrt_irrat;\n        q = 0 \\<or> qa = 0 \\<or> bb = bc\\<rbrakk>\n       \\<Longrightarrow> (real_of_rat p + real_of_rat q * sqrt (real bb) =\n                          real_of_rat pa +\n                          real_of_rat qa * sqrt (real bc)) =\n                         (p = pa \\<and> q = qa \\<and> (q = 0 \\<or> bb = bc))", "let ?r = \"p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p pa q qa bb bc.\n       \\<lbrakk>q = 0 \\<or> bb \\<in> sqrt_irrat;\n        qa = 0 \\<or> bc \\<in> sqrt_irrat;\n        q = 0 \\<or> qa = 0 \\<or> bb = bc\\<rbrakk>\n       \\<Longrightarrow> (real_of_rat p + real_of_rat q * sqrt (real bb) =\n                          real_of_rat pa +\n                          real_of_rat qa * sqrt (real bc)) =\n                         (p = pa \\<and> q = qa \\<and> (q = 0 \\<or> bb = bc))", "have \"?l \\<longleftrightarrow> real_of_rat q1 * sqrt (of_nat b1) = real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (of_nat b2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (real_of_rat p1 + real_of_rat q1 * sqrt (real b1) =\n     real_of_rat p2 + real_of_rat q2 * sqrt (real b2)) =\n    (real_of_rat q1 * sqrt (real b1) =\n     real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2))", "by (auto simp: of_rat_add of_rat_diff of_rat_minus)"], ["proof (state)\nthis:\n  (real_of_rat p1 + real_of_rat q1 * sqrt (real b1) =\n   real_of_rat p2 + real_of_rat q2 * sqrt (real b2)) =\n  (real_of_rat q1 * sqrt (real b1) =\n   real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2))\n\ngoal (1 subgoal):\n 1. \\<And>p pa q qa bb bc.\n       \\<lbrakk>q = 0 \\<or> bb \\<in> sqrt_irrat;\n        qa = 0 \\<or> bc \\<in> sqrt_irrat;\n        q = 0 \\<or> qa = 0 \\<or> bb = bc\\<rbrakk>\n       \\<Longrightarrow> (real_of_rat p + real_of_rat q * sqrt (real bb) =\n                          real_of_rat pa +\n                          real_of_rat qa * sqrt (real bc)) =\n                         (p = pa \\<and> q = qa \\<and> (q = 0 \\<or> bb = bc))", "also"], ["proof (state)\nthis:\n  (real_of_rat p1 + real_of_rat q1 * sqrt (real b1) =\n   real_of_rat p2 + real_of_rat q2 * sqrt (real b2)) =\n  (real_of_rat q1 * sqrt (real b1) =\n   real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2))\n\ngoal (1 subgoal):\n 1. \\<And>p pa q qa bb bc.\n       \\<lbrakk>q = 0 \\<or> bb \\<in> sqrt_irrat;\n        qa = 0 \\<or> bc \\<in> sqrt_irrat;\n        q = 0 \\<or> qa = 0 \\<or> bb = bc\\<rbrakk>\n       \\<Longrightarrow> (real_of_rat p + real_of_rat q * sqrt (real bb) =\n                          real_of_rat pa +\n                          real_of_rat qa * sqrt (real bc)) =\n                         (p = pa \\<and> q = qa \\<and> (q = 0 \\<or> bb = bc))", "have \"\\<dots> \\<longleftrightarrow> p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (real_of_rat q1 * sqrt (real b1) =\n     real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2)) =\n    (p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. real_of_rat q1 * sqrt (real b1) =\n    real_of_rat (p2 - p1) +\n    real_of_rat q2 * sqrt (real b2) \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)\n 2. p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2) \\<Longrightarrow>\n    real_of_rat q1 * sqrt (real b1) =\n    real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2)", "assume ?m"], ["proof (state)\nthis:\n  real_of_rat q1 * sqrt (real b1) =\n  real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2)\n\ngoal (2 subgoals):\n 1. real_of_rat q1 * sqrt (real b1) =\n    real_of_rat (p2 - p1) +\n    real_of_rat q2 * sqrt (real b2) \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)\n 2. p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2) \\<Longrightarrow>\n    real_of_rat q1 * sqrt (real b1) =\n    real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2)", "from base"], ["proof (chain)\npicking this:\n  q1 = 0 \\<or> q2 = 0 \\<or> b1 = b2", "have \"q1 = 0 \\<or> q1 \\<noteq> 0 \\<and> q2 = 0 \\<or> q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2\""], ["proof (prove)\nusing this:\n  q1 = 0 \\<or> q2 = 0 \\<or> b1 = b2\n\ngoal (1 subgoal):\n 1. q1 = 0 \\<or>\n    q1 \\<noteq> 0 \\<and> q2 = 0 \\<or>\n    q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2", "by auto"], ["proof (state)\nthis:\n  q1 = 0 \\<or>\n  q1 \\<noteq> 0 \\<and> q2 = 0 \\<or>\n  q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2\n\ngoal (2 subgoals):\n 1. real_of_rat q1 * sqrt (real b1) =\n    real_of_rat (p2 - p1) +\n    real_of_rat q2 * sqrt (real b2) \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)\n 2. p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2) \\<Longrightarrow>\n    real_of_rat q1 * sqrt (real b1) =\n    real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2)", "thus \"p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)\""], ["proof (prove)\nusing this:\n  q1 = 0 \\<or>\n  q1 \\<noteq> 0 \\<and> q2 = 0 \\<or>\n  q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2\n\ngoal (1 subgoal):\n 1. p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. q1 = 0 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)\n 2. q1 \\<noteq> 0 \\<and> q2 = 0 \\<or>\n    q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "assume q1: \"q1 = 0\""], ["proof (state)\nthis:\n  q1 = 0\n\ngoal (2 subgoals):\n 1. q1 = 0 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)\n 2. q1 \\<noteq> 0 \\<and> q2 = 0 \\<or>\n    q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "with \\<open>?m\\<close>"], ["proof (chain)\npicking this:\n  real_of_rat q1 * sqrt (real b1) =\n  real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2)\n  q1 = 0", "have \"real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (of_nat b2) = 0\""], ["proof (prove)\nusing this:\n  real_of_rat q1 * sqrt (real b1) =\n  real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2)\n  q1 = 0\n\ngoal (1 subgoal):\n 1. real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2) = 0", "by auto"], ["proof (state)\nthis:\n  real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2) = 0\n\ngoal (2 subgoals):\n 1. q1 = 0 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)\n 2. q1 \\<noteq> 0 \\<and> q2 = 0 \\<or>\n    q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "with sqrt_irrat b2"], ["proof (chain)\npicking this:\n  \\<lbrakk>?q = 0 \\<or> ?b \\<in> sqrt_irrat;\n   real_of_rat ?p + real_of_rat ?q * sqrt (real ?b) = 0\\<rbrakk>\n  \\<Longrightarrow> ?q = 0\n  q2 = 0 \\<or> b2 \\<in> sqrt_irrat\n  real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2) = 0", "have q2: \"q2 = 0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?q = 0 \\<or> ?b \\<in> sqrt_irrat;\n   real_of_rat ?p + real_of_rat ?q * sqrt (real ?b) = 0\\<rbrakk>\n  \\<Longrightarrow> ?q = 0\n  q2 = 0 \\<or> b2 \\<in> sqrt_irrat\n  real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2) = 0\n\ngoal (1 subgoal):\n 1. q2 = 0", "by auto"], ["proof (state)\nthis:\n  q2 = 0\n\ngoal (2 subgoals):\n 1. q1 = 0 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)\n 2. q1 \\<noteq> 0 \\<and> q2 = 0 \\<or>\n    q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "with q1 \\<open>?m\\<close>"], ["proof (chain)\npicking this:\n  q1 = 0\n  real_of_rat q1 * sqrt (real b1) =\n  real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2)\n  q2 = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  q1 = 0\n  real_of_rat q1 * sqrt (real b1) =\n  real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2)\n  q2 = 0\n\ngoal (1 subgoal):\n 1. p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "by auto"], ["proof (state)\nthis:\n  p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)\n\ngoal (1 subgoal):\n 1. q1 \\<noteq> 0 \\<and> q2 = 0 \\<or>\n    q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. q1 \\<noteq> 0 \\<and> q2 = 0 \\<or>\n    q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "assume \"q1 \\<noteq> 0 \\<and> q2 = 0 \\<or> q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2\""], ["proof (state)\nthis:\n  q1 \\<noteq> 0 \\<and> q2 = 0 \\<or>\n  q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2\n\ngoal (1 subgoal):\n 1. q1 \\<noteq> 0 \\<and> q2 = 0 \\<or>\n    q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  q1 \\<noteq> 0 \\<and> q2 = 0 \\<or>\n  q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2\n\ngoal (1 subgoal):\n 1. p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. q1 \\<noteq> 0 \\<and> q2 = 0 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)\n 2. q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "assume ass: \"q1 \\<noteq> 0 \\<and> q2 = 0\""], ["proof (state)\nthis:\n  q1 \\<noteq> 0 \\<and> q2 = 0\n\ngoal (2 subgoals):\n 1. q1 \\<noteq> 0 \\<and> q2 = 0 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)\n 2. q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "with \\<open>?m\\<close>"], ["proof (chain)\npicking this:\n  real_of_rat q1 * sqrt (real b1) =\n  real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2)\n  q1 \\<noteq> 0 \\<and> q2 = 0", "have \"real_of_rat (p1 - p2) + real_of_rat q1 * sqrt (of_nat b1) = 0\""], ["proof (prove)\nusing this:\n  real_of_rat q1 * sqrt (real b1) =\n  real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2)\n  q1 \\<noteq> 0 \\<and> q2 = 0\n\ngoal (1 subgoal):\n 1. real_of_rat (p1 - p2) + real_of_rat q1 * sqrt (real b1) = 0", "by (auto simp: of_rat_diff)"], ["proof (state)\nthis:\n  real_of_rat (p1 - p2) + real_of_rat q1 * sqrt (real b1) = 0\n\ngoal (2 subgoals):\n 1. q1 \\<noteq> 0 \\<and> q2 = 0 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)\n 2. q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "with b1"], ["proof (chain)\npicking this:\n  q1 = 0 \\<or> b1 \\<in> sqrt_irrat\n  real_of_rat (p1 - p2) + real_of_rat q1 * sqrt (real b1) = 0", "have \"q1 = 0\""], ["proof (prove)\nusing this:\n  q1 = 0 \\<or> b1 \\<in> sqrt_irrat\n  real_of_rat (p1 - p2) + real_of_rat q1 * sqrt (real b1) = 0\n\ngoal (1 subgoal):\n 1. q1 = 0", "using sqrt_irrat"], ["proof (prove)\nusing this:\n  q1 = 0 \\<or> b1 \\<in> sqrt_irrat\n  real_of_rat (p1 - p2) + real_of_rat q1 * sqrt (real b1) = 0\n  \\<lbrakk>?q = 0 \\<or> ?b \\<in> sqrt_irrat;\n   real_of_rat ?p + real_of_rat ?q * sqrt (real ?b) = 0\\<rbrakk>\n  \\<Longrightarrow> ?q = 0\n\ngoal (1 subgoal):\n 1. q1 = 0", "by auto"], ["proof (state)\nthis:\n  q1 = 0\n\ngoal (2 subgoals):\n 1. q1 \\<noteq> 0 \\<and> q2 = 0 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)\n 2. q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "with ass"], ["proof (chain)\npicking this:\n  q1 \\<noteq> 0 \\<and> q2 = 0\n  q1 = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  q1 \\<noteq> 0 \\<and> q2 = 0\n  q1 = 0\n\ngoal (1 subgoal):\n 1. p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "by auto"], ["proof (state)\nthis:\n  p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)\n\ngoal (1 subgoal):\n 1. q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "assume ass: \"q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2\""], ["proof (state)\nthis:\n  q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2\n\ngoal (1 subgoal):\n 1. q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "with \\<open>?m\\<close>"], ["proof (chain)\npicking this:\n  real_of_rat q1 * sqrt (real b1) =\n  real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2)\n  q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2", "have *: \"real_of_rat (p2 - p1) + real_of_rat (q2 - q1) * sqrt (of_nat b2) = 0\""], ["proof (prove)\nusing this:\n  real_of_rat q1 * sqrt (real b1) =\n  real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2)\n  q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2\n\ngoal (1 subgoal):\n 1. real_of_rat (p2 - p1) + real_of_rat (q2 - q1) * sqrt (real b2) = 0", "by (auto simp: field_simps of_rat_diff)"], ["proof (state)\nthis:\n  real_of_rat (p2 - p1) + real_of_rat (q2 - q1) * sqrt (real b2) = 0\n\ngoal (1 subgoal):\n 1. q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "have \"q2 - q1 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q2 - q1 = 0", "by (rule sqrt_irrat[OF _ *], insert ass b2, auto)"], ["proof (state)\nthis:\n  q2 - q1 = 0\n\ngoal (1 subgoal):\n 1. q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2 \\<Longrightarrow>\n    p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "with * ass"], ["proof (chain)\npicking this:\n  real_of_rat (p2 - p1) + real_of_rat (q2 - q1) * sqrt (real b2) = 0\n  q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2\n  q2 - q1 = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  real_of_rat (p2 - p1) + real_of_rat (q2 - q1) * sqrt (real b2) = 0\n  q1 \\<noteq> 0 \\<and> q2 \\<noteq> 0 \\<and> b1 = b2\n  q2 - q1 = 0\n\ngoal (1 subgoal):\n 1. p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)", "by auto"], ["proof (state)\nthis:\n  p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2)\n\ngoal (1 subgoal):\n 1. p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2) \\<Longrightarrow>\n    real_of_rat q1 * sqrt (real b1) =\n    real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2)", "qed auto"], ["proof (state)\nthis:\n  (real_of_rat q1 * sqrt (real b1) =\n   real_of_rat (p2 - p1) + real_of_rat q2 * sqrt (real b2)) =\n  (p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2))\n\ngoal (1 subgoal):\n 1. \\<And>p pa q qa bb bc.\n       \\<lbrakk>q = 0 \\<or> bb \\<in> sqrt_irrat;\n        qa = 0 \\<or> bc \\<in> sqrt_irrat;\n        q = 0 \\<or> qa = 0 \\<or> bb = bc\\<rbrakk>\n       \\<Longrightarrow> (real_of_rat p + real_of_rat q * sqrt (real bb) =\n                          real_of_rat pa +\n                          real_of_rat qa * sqrt (real bc)) =\n                         (p = pa \\<and> q = qa \\<and> (q = 0 \\<or> bb = bc))", "finally"], ["proof (chain)\npicking this:\n  (real_of_rat p1 + real_of_rat q1 * sqrt (real b1) =\n   real_of_rat p2 + real_of_rat q2 * sqrt (real b2)) =\n  (p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2))", "show \"?l = ?r\""], ["proof (prove)\nusing this:\n  (real_of_rat p1 + real_of_rat q1 * sqrt (real b1) =\n   real_of_rat p2 + real_of_rat q2 * sqrt (real b2)) =\n  (p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2))\n\ngoal (1 subgoal):\n 1. (real_of_rat p1 + real_of_rat q1 * sqrt (real b1) =\n     real_of_rat p2 + real_of_rat q2 * sqrt (real b2)) =\n    (p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2))", "by simp"], ["proof (state)\nthis:\n  (real_of_rat p1 + real_of_rat q1 * sqrt (real b1) =\n   real_of_rat p2 + real_of_rat q2 * sqrt (real b2)) =\n  (p1 = p2 \\<and> q1 = q2 \\<and> (q1 = 0 \\<or> b1 = b2))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ma_floor: \"floor (real_of r) = ma_floor r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>real_of r\\<rfloor> = ma_floor r", "proof (transfer, unfold Let_def, clarsimp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "fix p q :: rat and b :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "obtain z1 n1 where qp: \"quotient_of p = (z1,n1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z1 n1.\n        quotient_of p = (z1, n1) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  quotient_of p = (z1, n1)\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "obtain z2 n2 where qq: \"quotient_of q = (z2,n2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z2 n2.\n        quotient_of q = (z2, n2) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  quotient_of q = (z2, n2)\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "from quotient_of_denom_pos[OF qp]"], ["proof (chain)\npicking this:\n  0 < n1", "have n1: \"0 < n1\""], ["proof (prove)\nusing this:\n  0 < n1\n\ngoal (1 subgoal):\n 1. 0 < n1", "."], ["proof (state)\nthis:\n  0 < n1\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "from quotient_of_denom_pos[OF qq]"], ["proof (chain)\npicking this:\n  0 < n2", "have n2: \"0 < n2\""], ["proof (prove)\nusing this:\n  0 < n2\n\ngoal (1 subgoal):\n 1. 0 < n2", "."], ["proof (state)\nthis:\n  0 < n2\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "from quotient_of_div[OF qp]"], ["proof (chain)\npicking this:\n  p = rat_of_int z1 / rat_of_int n1", "have p: \"p = of_int z1 / of_int n1\""], ["proof (prove)\nusing this:\n  p = rat_of_int z1 / rat_of_int n1\n\ngoal (1 subgoal):\n 1. p = rat_of_int z1 / rat_of_int n1", "."], ["proof (state)\nthis:\n  p = rat_of_int z1 / rat_of_int n1\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "from quotient_of_div[OF qq]"], ["proof (chain)\npicking this:\n  q = rat_of_int z2 / rat_of_int n2", "have q: \"q = of_int z2 / of_int n2\""], ["proof (prove)\nusing this:\n  q = rat_of_int z2 / rat_of_int n2\n\ngoal (1 subgoal):\n 1. q = rat_of_int z2 / rat_of_int n2", "."], ["proof (state)\nthis:\n  q = rat_of_int z2 / rat_of_int n2\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "have p: \"p = of_int (z1 * n2) / of_int (n1 * n2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = rat_of_int (z1 * n2) / rat_of_int (n1 * n2)", "unfolding p"], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int z1 / rat_of_int n1 =\n    rat_of_int (z1 * n2) / rat_of_int (n1 * n2)", "using n2"], ["proof (prove)\nusing this:\n  0 < n2\n\ngoal (1 subgoal):\n 1. rat_of_int z1 / rat_of_int n1 =\n    rat_of_int (z1 * n2) / rat_of_int (n1 * n2)", "by auto"], ["proof (state)\nthis:\n  p = rat_of_int (z1 * n2) / rat_of_int (n1 * n2)\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "have q: \"q = of_int (z2 * n1) / of_int (n1 * n2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q = rat_of_int (z2 * n1) / rat_of_int (n1 * n2)", "unfolding q"], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_int z2 / rat_of_int n2 =\n    rat_of_int (z2 * n1) / rat_of_int (n1 * n2)", "using n1"], ["proof (prove)\nusing this:\n  0 < n1\n\ngoal (1 subgoal):\n 1. rat_of_int z2 / rat_of_int n2 =\n    rat_of_int (z2 * n1) / rat_of_int (n1 * n2)", "by auto"], ["proof (state)\nthis:\n  q = rat_of_int (z2 * n1) / rat_of_int (n1 * n2)\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "define z1n2 where \"z1n2 = z1 * n2\""], ["proof (state)\nthis:\n  z1n2 = z1 * n2\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "define z2n1 where \"z2n1 = z2 * n1\""], ["proof (state)\nthis:\n  z2n1 = z2 * n1\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "define n12 where \"n12 = n1 * n2\""], ["proof (state)\nthis:\n  n12 = n1 * n2\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "define r_add where \"r_add = of_int (z2n1) * sqrt (real_of_int (int b))\""], ["proof (state)\nthis:\n  r_add = real_of_int z2n1 * sqrt (real_of_int (int b))\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "from n1 n2"], ["proof (chain)\npicking this:\n  0 < n1\n  0 < n2", "have n120: \"n12 > 0\""], ["proof (prove)\nusing this:\n  0 < n1\n  0 < n2\n\ngoal (1 subgoal):\n 1. 0 < n12", "unfolding n12_def"], ["proof (prove)\nusing this:\n  0 < n1\n  0 < n2\n\ngoal (1 subgoal):\n 1. 0 < n1 * n2", "by simp"], ["proof (state)\nthis:\n  0 < n12\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "have \"floor (of_rat p + of_rat q * sqrt (real_of_nat b)) = floor ((of_int z1n2 + r_add) / of_int n12)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real b)\\<rfloor> =\n    \\<lfloor>(real_of_int z1n2 + r_add) / real_of_int n12\\<rfloor>", "unfolding r_add_def n12_def z1n2_def z2n1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real b)\\<rfloor> =\n    \\<lfloor>(real_of_int (z1 * n2) +\n              real_of_int (z2 * n1) * sqrt (real_of_int (int b))) /\n             real_of_int (n1 * n2)\\<rfloor>", "unfolding p q add_divide_distrib of_rat_divide of_rat_of_int_eq of_int_of_nat_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>real_of_int (z1 * n2) / real_of_int (n1 * n2) +\n             real_of_int (z2 * n1) / real_of_int (n1 * n2) *\n             sqrt (real b)\\<rfloor> =\n    \\<lfloor>real_of_int (z1 * n2) / real_of_int (n1 * n2) +\n             real_of_int (z2 * n1) * sqrt (real b) /\n             real_of_int (n1 * n2)\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real b)\\<rfloor> =\n  \\<lfloor>(real_of_int z1n2 + r_add) / real_of_int n12\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "also"], ["proof (state)\nthis:\n  \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real b)\\<rfloor> =\n  \\<lfloor>(real_of_int z1n2 + r_add) / real_of_int n12\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "have \"\\<dots> = floor (of_int z1n2 + r_add) div n12\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>(real_of_int z1n2 + r_add) / real_of_int n12\\<rfloor> =\n    \\<lfloor>real_of_int z1n2 + r_add\\<rfloor> div n12", "by (rule floor_div_pos_int[OF n120])"], ["proof (state)\nthis:\n  \\<lfloor>(real_of_int z1n2 + r_add) / real_of_int n12\\<rfloor> =\n  \\<lfloor>real_of_int z1n2 + r_add\\<rfloor> div n12\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "also"], ["proof (state)\nthis:\n  \\<lfloor>(real_of_int z1n2 + r_add) / real_of_int n12\\<rfloor> =\n  \\<lfloor>real_of_int z1n2 + r_add\\<rfloor> div n12\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "have \"of_int z1n2 + r_add = r_add + of_int z1n2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int z1n2 + r_add = r_add + real_of_int z1n2", "by simp"], ["proof (state)\nthis:\n  real_of_int z1n2 + r_add = r_add + real_of_int z1n2\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "also"], ["proof (state)\nthis:\n  real_of_int z1n2 + r_add = r_add + real_of_int z1n2\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "have \"floor (\\<dots>) = floor r_add + z1n2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>r_add + real_of_int z1n2\\<rfloor> =\n    \\<lfloor>r_add\\<rfloor> + z1n2", "by simp"], ["proof (state)\nthis:\n  \\<lfloor>r_add + real_of_int z1n2\\<rfloor> =\n  \\<lfloor>r_add\\<rfloor> + z1n2\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "also"], ["proof (state)\nthis:\n  \\<lfloor>r_add + real_of_int z1n2\\<rfloor> =\n  \\<lfloor>r_add\\<rfloor> + z1n2\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "have \"\\<dots> = z1n2 + floor r_add\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>r_add\\<rfloor> + z1n2 = z1n2 + \\<lfloor>r_add\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  \\<lfloor>r_add\\<rfloor> + z1n2 = z1n2 + \\<lfloor>r_add\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "finally"], ["proof (chain)\npicking this:\n  \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real b)\\<rfloor> =\n  (z1n2 + \\<lfloor>r_add\\<rfloor>) div n12", "have id: \"\\<lfloor>of_rat p + of_rat q * sqrt (of_nat b)\\<rfloor> = (z1n2 + \\<lfloor>r_add\\<rfloor>) div n12\""], ["proof (prove)\nusing this:\n  \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real b)\\<rfloor> =\n  (z1n2 + \\<lfloor>r_add\\<rfloor>) div n12\n\ngoal (1 subgoal):\n 1. \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real b)\\<rfloor> =\n    (z1n2 + \\<lfloor>r_add\\<rfloor>) div n12", "."], ["proof (state)\nthis:\n  \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real b)\\<rfloor> =\n  (z1n2 + \\<lfloor>r_add\\<rfloor>) div n12\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real ba)\\<rfloor> =\n       (case quotient_of p of\n        (z1, n1) \\<Rightarrow>\n          case quotient_of q of\n          (z2, n2) \\<Rightarrow>\n            (z1 * n2 +\n             (if 0 \\<le> z2 * n1\n              then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int ba)\n              else - sqrt_int_ceiling_pos\n                      (z2 * n1 * (z2 * n1) * int ba))) div\n            (n1 * n2))", "show \"\\<lfloor>of_rat p + of_rat q * sqrt (of_nat b)\\<rfloor> =\n              (case quotient_of p of\n               (z1, n1) \\<Rightarrow>\n                 case quotient_of q of\n                 (z2, n2) \\<Rightarrow>\n                 (z1 * n2 + (if 0 \\<le> z2 * n1 then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b) else\n                    - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))) div (n1 * n2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real b)\\<rfloor> =\n    (case quotient_of p of\n     (z1, n1) \\<Rightarrow>\n       case quotient_of q of\n       (z2, n2) \\<Rightarrow>\n         (z1 * n2 +\n          (if 0 \\<le> z2 * n1\n           then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n           else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))) div\n         (n1 * n2))", "unfolding qp qq split id n12_def z1n2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (z1 * n2 + \\<lfloor>r_add\\<rfloor>) div (n1 * n2) =\n    (z1 * n2 +\n     (if 0 \\<le> z2 * n1\n      then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n      else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))) div\n    (n1 * n2)", "proof (rule arg_cong[of _ _ \"\\<lambda> x. ((z1 * n2) + x) div (n1 * n2)\"])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lfloor>r_add\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))", "have ge_int: \"z2 * n1 * (z2 * n1) * int b \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> z2 * n1 * (z2 * n1) * int b", "by (metis mult_nonneg_nonneg zero_le_square of_nat_0_le_iff)"], ["proof (state)\nthis:\n  0 \\<le> z2 * n1 * (z2 * n1) * int b\n\ngoal (1 subgoal):\n 1. \\<lfloor>r_add\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))", "show \"\\<lfloor>r_add\\<rfloor> = (if 0 \\<le> z2 * n1 then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b) else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>r_add\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))", "proof (cases \"z2 * n1 \\<ge> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> z2 * n1 \\<Longrightarrow>\n    \\<lfloor>r_add\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))\n 2. \\<not> 0 \\<le> z2 * n1 \\<Longrightarrow>\n    \\<lfloor>r_add\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))", "case True"], ["proof (state)\nthis:\n  0 \\<le> z2 * n1\n\ngoal (2 subgoals):\n 1. 0 \\<le> z2 * n1 \\<Longrightarrow>\n    \\<lfloor>r_add\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))\n 2. \\<not> 0 \\<le> z2 * n1 \\<Longrightarrow>\n    \\<lfloor>r_add\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))", "hence ge: \"real_of_int (z2 * n1) \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> z2 * n1\n\ngoal (1 subgoal):\n 1. 0 \\<le> real_of_int (z2 * n1)", "by (metis of_int_0_le_iff)"], ["proof (state)\nthis:\n  0 \\<le> real_of_int (z2 * n1)\n\ngoal (2 subgoals):\n 1. 0 \\<le> z2 * n1 \\<Longrightarrow>\n    \\<lfloor>r_add\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))\n 2. \\<not> 0 \\<le> z2 * n1 \\<Longrightarrow>\n    \\<lfloor>r_add\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))", "have radd: \"r_add = sqrt (of_int (z2 * n1 * (z2 * n1) * int b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r_add = sqrt (real_of_int (z2 * n1 * (z2 * n1) * int b))", "unfolding r_add_def z2n1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (z2 * n1) * sqrt (real_of_int (int b)) =\n    sqrt (real_of_int (z2 * n1 * (z2 * n1) * int b))", "using sqrt_sqrt[OF ge]"], ["proof (prove)\nusing this:\n  sqrt (real_of_int (z2 * n1)) * sqrt (real_of_int (z2 * n1)) =\n  real_of_int (z2 * n1)\n\ngoal (1 subgoal):\n 1. real_of_int (z2 * n1) * sqrt (real_of_int (int b)) =\n    sqrt (real_of_int (z2 * n1 * (z2 * n1) * int b))", "by (simp add: ac_simps real_sqrt_mult)"], ["proof (state)\nthis:\n  r_add = sqrt (real_of_int (z2 * n1 * (z2 * n1) * int b))\n\ngoal (2 subgoals):\n 1. 0 \\<le> z2 * n1 \\<Longrightarrow>\n    \\<lfloor>r_add\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))\n 2. \\<not> 0 \\<le> z2 * n1 \\<Longrightarrow>\n    \\<lfloor>r_add\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>r_add\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))", "unfolding radd sqrt_int_floor_pos[OF ge_int]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>sqrt (real_of_int (z2 * n1 * (z2 * n1) * int b))\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then \\<lfloor>sqrt (real_of_int (z2 * n1 * (z2 * n1) * int b))\\<rfloor>\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))", "using True"], ["proof (prove)\nusing this:\n  0 \\<le> z2 * n1\n\ngoal (1 subgoal):\n 1. \\<lfloor>sqrt (real_of_int (z2 * n1 * (z2 * n1) * int b))\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then \\<lfloor>sqrt (real_of_int (z2 * n1 * (z2 * n1) * int b))\\<rfloor>\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))", "by simp"], ["proof (state)\nthis:\n  \\<lfloor>r_add\\<rfloor> =\n  (if 0 \\<le> z2 * n1 then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n   else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> z2 * n1 \\<Longrightarrow>\n    \\<lfloor>r_add\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> z2 * n1 \\<Longrightarrow>\n    \\<lfloor>r_add\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))", "case False"], ["proof (state)\nthis:\n  \\<not> 0 \\<le> z2 * n1\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> z2 * n1 \\<Longrightarrow>\n    \\<lfloor>r_add\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))", "hence ge: \"real_of_int (- (z2 * n1)) \\<ge> 0\""], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> z2 * n1\n\ngoal (1 subgoal):\n 1. 0 \\<le> real_of_int (- (z2 * n1))", "by (metis mult_zero_left neg_0_le_iff_le of_int_0_le_iff order_refl zero_le_mult_iff)"], ["proof (state)\nthis:\n  0 \\<le> real_of_int (- (z2 * n1))\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> z2 * n1 \\<Longrightarrow>\n    \\<lfloor>r_add\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))", "have \"r_add = - sqrt (of_int (z2 * n1 * (z2 * n1) * int b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r_add = - sqrt (real_of_int (z2 * n1 * (z2 * n1) * int b))", "unfolding r_add_def z2n1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (z2 * n1) * sqrt (real_of_int (int b)) =\n    - sqrt (real_of_int (z2 * n1 * (z2 * n1) * int b))", "using sqrt_sqrt[OF ge]"], ["proof (prove)\nusing this:\n  sqrt (real_of_int (- (z2 * n1))) * sqrt (real_of_int (- (z2 * n1))) =\n  real_of_int (- (z2 * n1))\n\ngoal (1 subgoal):\n 1. real_of_int (z2 * n1) * sqrt (real_of_int (int b)) =\n    - sqrt (real_of_int (z2 * n1 * (z2 * n1) * int b))", "by (metis minus_minus minus_mult_commute minus_mult_right of_int_minus of_int_mult real_sqrt_minus real_sqrt_mult z2n1_def)"], ["proof (state)\nthis:\n  r_add = - sqrt (real_of_int (z2 * n1 * (z2 * n1) * int b))\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> z2 * n1 \\<Longrightarrow>\n    \\<lfloor>r_add\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))", "hence radd: \"floor r_add = - ceiling (sqrt (of_int (z2 * n1 * (z2 * n1) * int b)))\""], ["proof (prove)\nusing this:\n  r_add = - sqrt (real_of_int (z2 * n1 * (z2 * n1) * int b))\n\ngoal (1 subgoal):\n 1. \\<lfloor>r_add\\<rfloor> =\n    - \\<lceil>sqrt (real_of_int (z2 * n1 * (z2 * n1) * int b))\\<rceil>", "by (metis ceiling_def minus_minus)"], ["proof (state)\nthis:\n  \\<lfloor>r_add\\<rfloor> =\n  - \\<lceil>sqrt (real_of_int (z2 * n1 * (z2 * n1) * int b))\\<rceil>\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> z2 * n1 \\<Longrightarrow>\n    \\<lfloor>r_add\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>r_add\\<rfloor> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))", "unfolding radd sqrt_int_ceiling_pos[OF ge_int]"], ["proof (prove)\ngoal (1 subgoal):\n 1. - \\<lceil>sqrt (real_of_int (z2 * n1 * (z2 * n1) * int b))\\<rceil> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - \\<lceil>sqrt\n                     (real_of_int (z2 * n1 * (z2 * n1) * int b))\\<rceil>)", "using False"], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> z2 * n1\n\ngoal (1 subgoal):\n 1. - \\<lceil>sqrt (real_of_int (z2 * n1 * (z2 * n1) * int b))\\<rceil> =\n    (if 0 \\<le> z2 * n1\n     then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n     else - \\<lceil>sqrt\n                     (real_of_int (z2 * n1 * (z2 * n1) * int b))\\<rceil>)", "by simp"], ["proof (state)\nthis:\n  \\<lfloor>r_add\\<rfloor> =\n  (if 0 \\<le> z2 * n1 then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n   else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lfloor>r_add\\<rfloor> =\n  (if 0 \\<le> z2 * n1 then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n   else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lfloor>real_of_rat p + real_of_rat q * sqrt (real b)\\<rfloor> =\n  (case quotient_of p of\n   (z1, n1) \\<Rightarrow>\n     case quotient_of q of\n     (z2, n2) \\<Rightarrow>\n       (z1 * n2 +\n        (if 0 \\<le> z2 * n1\n         then sqrt_int_floor_pos (z2 * n1 * (z2 * n1) * int b)\n         else - sqrt_int_ceiling_pos (z2 * n1 * (z2 * n1) * int b))) div\n       (n1 * n2))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma comparison_impl:\n  \"(x :: real) \\<le> (y :: real) = ge_0 (y - x)\"\n  \"(x :: real) < (y :: real) = (x \\<noteq> y \\<and> ge_0 (y - x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<le> y) = ge_0 (y - x) &&&\n    (x < y) = (x \\<noteq> y \\<and> ge_0 (y - x))", "by (simp_all add: ge_0_def, linarith+)"], ["", "lemma ma_of_rat: \"real_of_rat r = real_of (ma_of_rat r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_rat r = real_of (ma_of_rat r)", "by (transfer, auto)"], ["", "definition is_rat :: \"real \\<Rightarrow> bool\" where\n  [code_abbrev]: \"is_rat x \\<longleftrightarrow> x \\<in> \\<rat>\""], ["", "lemma ma_is_rat: \"is_rat (real_of x) = ma_is_rat x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_rat (real_of x) = ma_is_rat x", "proof (transfer, unfold is_rat_def, clarsimp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       (real_of_rat p + real_of_rat q * sqrt (real ba) \\<in> \\<rat>) =\n       (q = 0)", "fix p q :: rat and b :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       (real_of_rat p + real_of_rat q * sqrt (real ba) \\<in> \\<rat>) =\n       (q = 0)", "let ?p = \"real_of_rat p\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       (real_of_rat p + real_of_rat q * sqrt (real ba) \\<in> \\<rat>) =\n       (q = 0)", "let ?q = \"real_of_rat q\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       (real_of_rat p + real_of_rat q * sqrt (real ba) \\<in> \\<rat>) =\n       (q = 0)", "let ?b = \"real_of_nat b\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       (real_of_rat p + real_of_rat q * sqrt (real ba) \\<in> \\<rat>) =\n       (q = 0)", "let ?b' = \"real_of_rat (of_nat b)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       (real_of_rat p + real_of_rat q * sqrt (real ba) \\<in> \\<rat>) =\n       (q = 0)", "assume b: \"q = 0 \\<or> b \\<in> sqrt_irrat\""], ["proof (state)\nthis:\n  q = 0 \\<or> b \\<in> sqrt_irrat\n\ngoal (1 subgoal):\n 1. \\<And>p q ba.\n       q = 0 \\<or> ba \\<in> sqrt_irrat \\<Longrightarrow>\n       (real_of_rat p + real_of_rat q * sqrt (real ba) \\<in> \\<rat>) =\n       (q = 0)", "show \"(?p + ?q * sqrt ?b \\<in> \\<rat>) = (q = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)", "proof (cases \"q = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)", "case False"], ["proof (state)\nthis:\n  q \\<noteq> 0\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)", "from False b"], ["proof (chain)\npicking this:\n  q \\<noteq> 0\n  q = 0 \\<or> b \\<in> sqrt_irrat", "have b: \"b \\<in> sqrt_irrat\""], ["proof (prove)\nusing this:\n  q \\<noteq> 0\n  q = 0 \\<or> b \\<in> sqrt_irrat\n\ngoal (1 subgoal):\n 1. b \\<in> sqrt_irrat", "by auto"], ["proof (state)\nthis:\n  b \\<in> sqrt_irrat\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)", "{"], ["proof (state)\nthis:\n  b \\<in> sqrt_irrat\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)", "assume \"?p + ?q * sqrt ?b \\<in> \\<rat>\""], ["proof (state)\nthis:\n  real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)", "from this[unfolded Rats_def]"], ["proof (chain)\npicking this:\n  real_of_rat p + real_of_rat q * sqrt (real b) \\<in> range real_of_rat", "obtain r where r: \"?p + ?q * sqrt ?b = real_of_rat r\""], ["proof (prove)\nusing this:\n  real_of_rat p + real_of_rat q * sqrt (real b) \\<in> range real_of_rat\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        real_of_rat p + real_of_rat q * sqrt (real b) =\n        real_of_rat r \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  real_of_rat p + real_of_rat q * sqrt (real b) = real_of_rat r\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)", "let ?r = \"real_of_rat r\""], ["proof (state)\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)", "from r"], ["proof (chain)\npicking this:\n  real_of_rat p + real_of_rat q * sqrt (real b) = real_of_rat r", "have \"real_of_rat (p - r) + ?q * sqrt ?b = 0\""], ["proof (prove)\nusing this:\n  real_of_rat p + real_of_rat q * sqrt (real b) = real_of_rat r\n\ngoal (1 subgoal):\n 1. real_of_rat (p - r) + real_of_rat q * sqrt (real b) = 0", "by (simp add: of_rat_diff)"], ["proof (state)\nthis:\n  real_of_rat (p - r) + real_of_rat q * sqrt (real b) = 0\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)", "from sqrt_irrat[OF disjI2[OF b] this] False"], ["proof (chain)\npicking this:\n  q = 0\n  q \\<noteq> 0", "have False"], ["proof (prove)\nusing this:\n  q = 0\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)", "}"], ["proof (state)\nthis:\n  real_of_rat p + real_of_rat q * sqrt (real b)\n  \\<in> \\<rat> \\<Longrightarrow>\n  False\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  real_of_rat p + real_of_rat q * sqrt (real b)\n  \\<in> \\<rat> \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)", "by auto"], ["proof (state)\nthis:\n  (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)\n\ngoal (1 subgoal):\n 1. q = 0 \\<Longrightarrow>\n    (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)", "qed auto"], ["proof (state)\nthis:\n  (real_of_rat p + real_of_rat q * sqrt (real b) \\<in> \\<rat>) = (q = 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* compute all numbers y for which y * y = x, if x \\<in> \\<rat>, otherwise return empty list.\n   of course, one could have returned [-sqrt x, sqrt x], but this might result in runtime errors,\n   e.g., if sqrt_real (sqrt 2) would be invoked. The current formulation is guaranteed to not crash. *)"], ["", "definition \"sqrt_real x = (if x \\<in> \\<rat> \\<and> x \\<ge> 0 then (if x = 0 then [0] else (let sx = sqrt x in [sx,-sx])) else [])\""], ["", "lemma sqrt_real[simp]: assumes x: \"x \\<in> \\<rat>\"\n  shows \"set (sqrt_real x) = {y . y * y = x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (sqrt_real x) = {y. y * y = x}", "proof (cases \"x \\<ge> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> x \\<Longrightarrow> set (sqrt_real x) = {y. y * y = x}\n 2. \\<not> 0 \\<le> x \\<Longrightarrow> set (sqrt_real x) = {y. y * y = x}", "case False"], ["proof (state)\nthis:\n  \\<not> 0 \\<le> x\n\ngoal (2 subgoals):\n 1. 0 \\<le> x \\<Longrightarrow> set (sqrt_real x) = {y. y * y = x}\n 2. \\<not> 0 \\<le> x \\<Longrightarrow> set (sqrt_real x) = {y. y * y = x}", "hence \"\\<And> y. y * y \\<noteq> x\""], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>y. y * y \\<noteq> x", "by auto"], ["proof (state)\nthis:\n  ?y * ?y \\<noteq> x\n\ngoal (2 subgoals):\n 1. 0 \\<le> x \\<Longrightarrow> set (sqrt_real x) = {y. y * y = x}\n 2. \\<not> 0 \\<le> x \\<Longrightarrow> set (sqrt_real x) = {y. y * y = x}", "with False"], ["proof (chain)\npicking this:\n  \\<not> 0 \\<le> x\n  ?y * ?y \\<noteq> x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> x\n  ?y * ?y \\<noteq> x\n\ngoal (1 subgoal):\n 1. set (sqrt_real x) = {y. y * y = x}", "unfolding sqrt_real_def"], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> x\n  ?y * ?y \\<noteq> x\n\ngoal (1 subgoal):\n 1. set (if x \\<in> \\<rat> \\<and> 0 \\<le> x\n         then if x = 0 then [0] else let sx = sqrt x in [sx, - sx]\n         else []) =\n    {y. y * y = x}", "by auto"], ["proof (state)\nthis:\n  set (sqrt_real x) = {y. y * y = x}\n\ngoal (1 subgoal):\n 1. 0 \\<le> x \\<Longrightarrow> set (sqrt_real x) = {y. y * y = x}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> x \\<Longrightarrow> set (sqrt_real x) = {y. y * y = x}", "case True"], ["proof (state)\nthis:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. 0 \\<le> x \\<Longrightarrow> set (sqrt_real x) = {y. y * y = x}", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. set (sqrt_real x) = {y. y * y = x}", "using x"], ["proof (prove)\nusing this:\n  0 \\<le> x\n  x \\<in> \\<rat>\n\ngoal (1 subgoal):\n 1. set (sqrt_real x) = {y. y * y = x}", "by (cases \"x = 0\", auto simp: Let_def sqrt_real_def)"], ["proof (state)\nthis:\n  set (sqrt_real x) = {y. y * y = x}\n\ngoal:\nNo subgoals!", "qed"], ["", "code_datatype real_of"], ["", "declare [[code drop:\n  \"plus :: real \\<Rightarrow> real \\<Rightarrow> real\"\n  \"uminus :: real \\<Rightarrow> real\"\n  \"times :: real \\<Rightarrow> real \\<Rightarrow> real\"\n  \"inverse :: real \\<Rightarrow> real\"\n  \"floor :: real \\<Rightarrow> int\"\n  sqrt\n  \"HOL.equal :: real \\<Rightarrow> real \\<Rightarrow> bool\"\n]]"], ["", "lemma [code]:\n  \"Ratreal = real_of \\<circ> ma_of_rat\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ratreal = real_of \\<circ> ma_of_rat", "by (simp add: fun_eq_iff) (transfer, simp)"], ["", "lemmas ma_code_eqns [code equation] = ma_ge_0 ma_floor ma_0 ma_1 ma_uminus ma_inverse ma_sqrt ma_plus ma_times ma_equal ma_is_rat\n  comparison_impl"], ["", "lemma [code equation]:\n  \"(x :: real) / (y :: real) = x * inverse y\"\n  \"(x :: real) - (y :: real) = x + (- y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x / y = x * inverse y &&& x - y = x + - y", "by (simp_all add: divide_inverse)"], ["", "text \\<open>Some tests with small numbers. To work on larger number, one should\n  additionally import the theories for efficient calculation on numbers\\<close>"], ["", "value \"\\<lfloor>101.1 * (3 * sqrt 2 + 6 * sqrt 0.5)\\<rfloor>\""], ["", "value \"\\<lfloor>606.2 * sqrt 2 + 0.001\\<rfloor>\""], ["", "value \"101.1 * (3 * sqrt 2 + 6 * sqrt 0.5) = 606.2 * sqrt 2 + 0.001\""], ["", "value \"101.1 * (3 * sqrt 2 + 6 * sqrt 0.5) > 606.2 * sqrt 2 + 0.001\""], ["", "value \"(sqrt 0.1 \\<in> \\<rat>, sqrt (- 0.09) \\<in> \\<rat>)\""], ["", "end"]]}