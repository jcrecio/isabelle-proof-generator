{"file_name": "/home/qj213/afp-2021-10-22/thys/ShortestPath/ShortestPathNeg.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/ShortestPath", "problem_names": ["lemma (in shortest_paths_locale_step1) pwalk_simps:\n  \"v = s \\<or> dist v = \\<infinity> \\<or> v \\<notin> verts G \\<Longrightarrow> pwalk v = []\"\n  \"v \\<noteq> s \\<Longrightarrow> dist v \\<noteq> \\<infinity> \\<Longrightarrow> v \\<in> verts G \\<Longrightarrow> \n    pwalk v = pwalk (tail G (the (parent_edge v))) @ [the (parent_edge v)]\"", "lemma (in shortest_paths_locale_step1) num_s_is_min:\n  assumes \"v \\<in> verts G\"\n  assumes \"v \\<noteq> s\"\n  assumes \"dist v \\<noteq> \\<infinity>\"\n  shows \"num v > 0\"", "lemma (in shortest_paths_locale_step1) path_from_root_Vr_ex:\n  fixes v :: 'a\n  assumes \"v \\<in> verts G\"\n  assumes \"v \\<noteq> s\"\n  assumes \"dist v \\<noteq> \\<infinity>\"\n  shows  \"\\<exists>e. s \\<rightarrow>\\<^sup>* tail G e \\<and>\n          e \\<in> arcs G \\<and> head G e = v \\<and> dist (tail G e) \\<noteq> \\<infinity> \\<and>\n          parent_edge v = Some e \\<and> num v = num (tail G e) + 1\"", "lemma (in shortest_paths_locale_step1) path_from_root_Vr:\n  fixes v :: 'a\n  assumes \"v \\<in> verts G\"\n  assumes \"dist v \\<noteq> \\<infinity>\"\n  shows \"s \\<rightarrow>\\<^sup>* v\"", "lemma (in shortest_paths_locale_step1) \\<mu>_V_less_inf:\n  fixes v :: 'a\n  assumes \"v \\<in> verts G\"\n  assumes \"dist v \\<noteq> \\<infinity>\"\n  shows \"\\<mu> c s v \\<noteq> \\<infinity>\"", "lemma (in shortest_paths_locale_step2) enum_not0:\n  assumes \"v \\<in> verts G\"\n  assumes \"v \\<noteq> s\"\n  assumes \"enum v \\<noteq> \\<infinity>\"\n  shows \"enum v \\<noteq> enat 0\"", "lemma (in shortest_paths_locale_step2) dist_Vf_\\<mu>:\n  fixes v :: 'a\n  assumes vG: \"v \\<in> verts G\"\n  assumes \"\\<exists>r. dist v = ereal r\"\n  shows \"dist v = \\<mu> c s v\"", "lemma (in shortest_paths_locale_step1) pwalk_awalk:\n  fixes v :: 'a\n  assumes \"v \\<in> verts G\"\n  assumes \"dist v \\<noteq> \\<infinity>\"\n  shows \"awalk s (pwalk v) v\"", "lemma (in shortest_paths_locale_step3) \\<mu>_ninf:\n  fixes v :: 'a\n  assumes \"v \\<in> verts G\"\n  assumes \"dist v = - \\<infinity>\"\n  shows \"\\<mu> c s v = - \\<infinity>\"", "lemma (in shortest_paths_locale_step3) correct_shortest_path:\n  fixes v :: 'a\n  assumes \"v \\<in> verts G\"\n  shows \"dist v = \\<mu> c s v\""], "translations": [["", "lemma (in shortest_paths_locale_step1) pwalk_simps:\n  \"v = s \\<or> dist v = \\<infinity> \\<or> v \\<notin> verts G \\<Longrightarrow> pwalk v = []\"\n  \"v \\<noteq> s \\<Longrightarrow> dist v \\<noteq> \\<infinity> \\<Longrightarrow> v \\<in> verts G \\<Longrightarrow> \n    pwalk v = pwalk (tail G (the (parent_edge v))) @ [the (parent_edge v)]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (v = s \\<or>\n     dist v = \\<infinity> \\<or> v \\<notin> verts G \\<Longrightarrow>\n     pwalk v = []) &&&\n    (\\<lbrakk>v \\<noteq> s; dist v \\<noteq> \\<infinity>;\n      v \\<in> verts G\\<rbrakk>\n     \\<Longrightarrow> pwalk v =\n                       pwalk (tail G (the (parent_edge v))) @\n                       [the (parent_edge v)])", "by auto"], ["", "definition (in shortest_paths_locale_step1) pwalk_verts :: \"'a  \\<Rightarrow> 'a set\" where \n  \"pwalk_verts v = {u. u \\<in> set (awalk_verts s (pwalk v))}\""], ["", "locale shortest_paths_locale_step3 =\n  shortest_paths_locale_step2 +\n  fixes C :: \"('a \\<times>('b awalk)) set\"\n  assumes C_se: \n    \"C \\<subseteq> {(u, p). dist u \\<noteq> \\<infinity> \\<and> awalk u p u \\<and> awalk_cost c p < 0}\"\n  assumes int_neg_cyc: \n    \"\\<And>v. v \\<in> verts G \\<Longrightarrow> dist v = -\\<infinity> \\<Longrightarrow> \n      (fst ` C) \\<inter> pwalk_verts v  \\<noteq> {}\""], ["", "locale shortest_paths_locale_step2_pred = \n  shortest_paths_locale_step1 +\n  fixes pred :: \"'a \\<Rightarrow> 'b option\" \n  assumes bj: \"basic_just_sp_pred G dist c s enum pred\" \n  assumes source_val: \"(\\<exists>v \\<in> verts G. enum v \\<noteq> \\<infinity>) \\<Longrightarrow> dist s = 0\"\n  assumes no_edge_Vm_Vf: \n    \"\\<And>e. e \\<in> arcs G \\<Longrightarrow> dist (tail G e) = - \\<infinity> \\<Longrightarrow> \\<forall> r. dist (head G e) \\<noteq> ereal r\""], ["", "(*\nsublocale shortest_paths_locale_step2_pred \\<subseteq> shortest_paths_locale_step2\nusing shortest_paths_locale_step2_pred_axioms \nunfolding shortest_paths_locale_step2_pred_def \n   shortest_paths_locale_step2_pred_axioms_def \n   shortest_paths_locale_step2_def \n   shortest_paths_locale_step2_axioms_def\ntry0\n*)"], ["", "lemma (in shortest_paths_locale_step1) num_s_is_min:\n  assumes \"v \\<in> verts G\"\n  assumes \"v \\<noteq> s\"\n  assumes \"dist v \\<noteq> \\<infinity>\"\n  shows \"num v > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < num v", "using parent_num_assms[OF assms]"], ["proof (prove)\nusing this:\n  \\<exists>e\\<in>arcs G.\n     parent_edge v = Some e \\<and>\n     head G e = v \\<and>\n     dist (tail G e) \\<noteq> \\<infinity> \\<and> num v = num (tail G e) + 1\n\ngoal (1 subgoal):\n 1. 0 < num v", "by fastforce"], ["", "lemma (in shortest_paths_locale_step1) path_from_root_Vr_ex:\n  fixes v :: 'a\n  assumes \"v \\<in> verts G\"\n  assumes \"v \\<noteq> s\"\n  assumes \"dist v \\<noteq> \\<infinity>\"\n  shows  \"\\<exists>e. s \\<rightarrow>\\<^sup>* tail G e \\<and>\n          e \\<in> arcs G \\<and> head G e = v \\<and> dist (tail G e) \\<noteq> \\<infinity> \\<and>\n          parent_edge v = Some e \\<and> num v = num (tail G e) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e.\n       s \\<rightarrow>\\<^sup>* tail G e \\<and>\n       e \\<in> arcs G \\<and>\n       head G e = v \\<and>\n       dist (tail G e) \\<noteq> \\<infinity> \\<and>\n       parent_edge v = Some e \\<and> num v = num (tail G e) + 1", "using assms"], ["proof (prove)\nusing this:\n  v \\<in> verts G\n  v \\<noteq> s\n  dist v \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<exists>e.\n       s \\<rightarrow>\\<^sup>* tail G e \\<and>\n       e \\<in> arcs G \\<and>\n       head G e = v \\<and>\n       dist (tail G e) \\<noteq> \\<infinity> \\<and>\n       parent_edge v = Some e \\<and> num v = num (tail G e) + 1", "proof(induct \"num v - 1\" arbitrary : v)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>0 = num v - 1; v \\<in> verts G; v \\<noteq> s;\n        dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            s \\<rightarrow>\\<^sup>* tail G e \\<and>\n                            e \\<in> arcs G \\<and>\n                            head G e = v \\<and>\n                            dist (tail G e) \\<noteq> \\<infinity> \\<and>\n                            parent_edge v = Some e \\<and>\n                            num v = num (tail G e) + 1\n 2. \\<And>x v.\n       \\<lbrakk>\\<And>v.\n                   \\<lbrakk>x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n                    dist v \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>e.\n  s \\<rightarrow>\\<^sup>* tail G e \\<and>\n  e \\<in> arcs G \\<and>\n  head G e = v \\<and>\n  dist (tail G e) \\<noteq> \\<infinity> \\<and>\n  parent_edge v = Some e \\<and> num v = num (tail G e) + 1;\n        Suc x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n        dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            s \\<rightarrow>\\<^sup>* tail G e \\<and>\n                            e \\<in> arcs G \\<and>\n                            head G e = v \\<and>\n                            dist (tail G e) \\<noteq> \\<infinity> \\<and>\n                            parent_edge v = Some e \\<and>\n                            num v = num (tail G e) + 1", "case 0"], ["proof (state)\nthis:\n  0 = num v - 1\n  v \\<in> verts G\n  v \\<noteq> s\n  dist v \\<noteq> \\<infinity>\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>0 = num v - 1; v \\<in> verts G; v \\<noteq> s;\n        dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            s \\<rightarrow>\\<^sup>* tail G e \\<and>\n                            e \\<in> arcs G \\<and>\n                            head G e = v \\<and>\n                            dist (tail G e) \\<noteq> \\<infinity> \\<and>\n                            parent_edge v = Some e \\<and>\n                            num v = num (tail G e) + 1\n 2. \\<And>x v.\n       \\<lbrakk>\\<And>v.\n                   \\<lbrakk>x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n                    dist v \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>e.\n  s \\<rightarrow>\\<^sup>* tail G e \\<and>\n  e \\<in> arcs G \\<and>\n  head G e = v \\<and>\n  dist (tail G e) \\<noteq> \\<infinity> \\<and>\n  parent_edge v = Some e \\<and> num v = num (tail G e) + 1;\n        Suc x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n        dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            s \\<rightarrow>\\<^sup>* tail G e \\<and>\n                            e \\<in> arcs G \\<and>\n                            head G e = v \\<and>\n                            dist (tail G e) \\<noteq> \\<infinity> \\<and>\n                            parent_edge v = Some e \\<and>\n                            num v = num (tail G e) + 1", "obtain e where ee:\n    \"e \\<in> arcs G\" \"head G e = v\" \"dist (tail G e) \\<noteq> \\<infinity>\" \n    \"parent_edge v = Some e\" \"num v = num (tail G e) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>e \\<in> arcs G; head G e = v;\n         dist (tail G e) \\<noteq> \\<infinity>; parent_edge v = Some e;\n         num v = num (tail G e) + 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using parent_num_assms[OF 0(2-4)]"], ["proof (prove)\nusing this:\n  \\<exists>e\\<in>arcs G.\n     parent_edge v = Some e \\<and>\n     head G e = v \\<and>\n     dist (tail G e) \\<noteq> \\<infinity> \\<and> num v = num (tail G e) + 1\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>e \\<in> arcs G; head G e = v;\n         dist (tail G e) \\<noteq> \\<infinity>; parent_edge v = Some e;\n         num v = num (tail G e) + 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  e \\<in> arcs G\n  head G e = v\n  dist (tail G e) \\<noteq> \\<infinity>\n  parent_edge v = Some e\n  num v = num (tail G e) + 1\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>0 = num v - 1; v \\<in> verts G; v \\<noteq> s;\n        dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            s \\<rightarrow>\\<^sup>* tail G e \\<and>\n                            e \\<in> arcs G \\<and>\n                            head G e = v \\<and>\n                            dist (tail G e) \\<noteq> \\<infinity> \\<and>\n                            parent_edge v = Some e \\<and>\n                            num v = num (tail G e) + 1\n 2. \\<And>x v.\n       \\<lbrakk>\\<And>v.\n                   \\<lbrakk>x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n                    dist v \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>e.\n  s \\<rightarrow>\\<^sup>* tail G e \\<and>\n  e \\<in> arcs G \\<and>\n  head G e = v \\<and>\n  dist (tail G e) \\<noteq> \\<infinity> \\<and>\n  parent_edge v = Some e \\<and> num v = num (tail G e) + 1;\n        Suc x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n        dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            s \\<rightarrow>\\<^sup>* tail G e \\<and>\n                            e \\<in> arcs G \\<and>\n                            head G e = v \\<and>\n                            dist (tail G e) \\<noteq> \\<infinity> \\<and>\n                            parent_edge v = Some e \\<and>\n                            num v = num (tail G e) + 1", "have \"tail G e = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tail G e = s", "using num_s_is_min[OF tail_in_verts [OF ee(1)] _ ee(3)] \n    ee(5) 0(1)"], ["proof (prove)\nusing this:\n  tail G e \\<noteq> s \\<Longrightarrow> 0 < num (tail G e)\n  num v = num (tail G e) + 1\n  0 = num v - 1\n\ngoal (1 subgoal):\n 1. tail G e = s", "by auto"], ["proof (state)\nthis:\n  tail G e = s\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>0 = num v - 1; v \\<in> verts G; v \\<noteq> s;\n        dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            s \\<rightarrow>\\<^sup>* tail G e \\<and>\n                            e \\<in> arcs G \\<and>\n                            head G e = v \\<and>\n                            dist (tail G e) \\<noteq> \\<infinity> \\<and>\n                            parent_edge v = Some e \\<and>\n                            num v = num (tail G e) + 1\n 2. \\<And>x v.\n       \\<lbrakk>\\<And>v.\n                   \\<lbrakk>x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n                    dist v \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>e.\n  s \\<rightarrow>\\<^sup>* tail G e \\<and>\n  e \\<in> arcs G \\<and>\n  head G e = v \\<and>\n  dist (tail G e) \\<noteq> \\<infinity> \\<and>\n  parent_edge v = Some e \\<and> num v = num (tail G e) + 1;\n        Suc x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n        dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            s \\<rightarrow>\\<^sup>* tail G e \\<and>\n                            e \\<in> arcs G \\<and>\n                            head G e = v \\<and>\n                            dist (tail G e) \\<noteq> \\<infinity> \\<and>\n                            parent_edge v = Some e \\<and>\n                            num v = num (tail G e) + 1", "then"], ["proof (chain)\npicking this:\n  tail G e = s", "show ?case"], ["proof (prove)\nusing this:\n  tail G e = s\n\ngoal (1 subgoal):\n 1. \\<exists>e.\n       s \\<rightarrow>\\<^sup>* tail G e \\<and>\n       e \\<in> arcs G \\<and>\n       head G e = v \\<and>\n       dist (tail G e) \\<noteq> \\<infinity> \\<and>\n       parent_edge v = Some e \\<and> num v = num (tail G e) + 1", "using ee"], ["proof (prove)\nusing this:\n  tail G e = s\n  e \\<in> arcs G\n  head G e = v\n  dist (tail G e) \\<noteq> \\<infinity>\n  parent_edge v = Some e\n  num v = num (tail G e) + 1\n\ngoal (1 subgoal):\n 1. \\<exists>e.\n       s \\<rightarrow>\\<^sup>* tail G e \\<and>\n       e \\<in> arcs G \\<and>\n       head G e = v \\<and>\n       dist (tail G e) \\<noteq> \\<infinity> \\<and>\n       parent_edge v = Some e \\<and> num v = num (tail G e) + 1", "by auto"], ["proof (state)\nthis:\n  \\<exists>e.\n     s \\<rightarrow>\\<^sup>* tail G e \\<and>\n     e \\<in> arcs G \\<and>\n     head G e = v \\<and>\n     dist (tail G e) \\<noteq> \\<infinity> \\<and>\n     parent_edge v = Some e \\<and> num v = num (tail G e) + 1\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>\\<And>v.\n                   \\<lbrakk>x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n                    dist v \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>e.\n  s \\<rightarrow>\\<^sup>* tail G e \\<and>\n  e \\<in> arcs G \\<and>\n  head G e = v \\<and>\n  dist (tail G e) \\<noteq> \\<infinity> \\<and>\n  parent_edge v = Some e \\<and> num v = num (tail G e) + 1;\n        Suc x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n        dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            s \\<rightarrow>\\<^sup>* tail G e \\<and>\n                            e \\<in> arcs G \\<and>\n                            head G e = v \\<and>\n                            dist (tail G e) \\<noteq> \\<infinity> \\<and>\n                            parent_edge v = Some e \\<and>\n                            num v = num (tail G e) + 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>\\<And>v.\n                   \\<lbrakk>x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n                    dist v \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>e.\n  s \\<rightarrow>\\<^sup>* tail G e \\<and>\n  e \\<in> arcs G \\<and>\n  head G e = v \\<and>\n  dist (tail G e) \\<noteq> \\<infinity> \\<and>\n  parent_edge v = Some e \\<and> num v = num (tail G e) + 1;\n        Suc x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n        dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            s \\<rightarrow>\\<^sup>* tail G e \\<and>\n                            e \\<in> arcs G \\<and>\n                            head G e = v \\<and>\n                            dist (tail G e) \\<noteq> \\<infinity> \\<and>\n                            parent_edge v = Some e \\<and>\n                            num v = num (tail G e) + 1", "case (Suc n')"], ["proof (state)\nthis:\n  \\<lbrakk>n' = num ?v1 - 1; ?v1 \\<in> verts G; ?v1 \\<noteq> s;\n   dist ?v1 \\<noteq> \\<infinity>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>e.\n                       s \\<rightarrow>\\<^sup>* tail G e \\<and>\n                       e \\<in> arcs G \\<and>\n                       head G e = ?v1 \\<and>\n                       dist (tail G e) \\<noteq> \\<infinity> \\<and>\n                       parent_edge ?v1 = Some e \\<and>\n                       num ?v1 = num (tail G e) + 1\n  Suc n' = num v - 1\n  v \\<in> verts G\n  v \\<noteq> s\n  dist v \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>\\<And>v.\n                   \\<lbrakk>x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n                    dist v \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>e.\n  s \\<rightarrow>\\<^sup>* tail G e \\<and>\n  e \\<in> arcs G \\<and>\n  head G e = v \\<and>\n  dist (tail G e) \\<noteq> \\<infinity> \\<and>\n  parent_edge v = Some e \\<and> num v = num (tail G e) + 1;\n        Suc x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n        dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            s \\<rightarrow>\\<^sup>* tail G e \\<and>\n                            e \\<in> arcs G \\<and>\n                            head G e = v \\<and>\n                            dist (tail G e) \\<noteq> \\<infinity> \\<and>\n                            parent_edge v = Some e \\<and>\n                            num v = num (tail G e) + 1", "obtain e where ee:\n    \"e \\<in> arcs G\" \"head G e = v\" \"dist (tail G e) \\<noteq> \\<infinity>\" \n    \"parent_edge v = Some e\" \"num v = num (tail G e) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>e \\<in> arcs G; head G e = v;\n         dist (tail G e) \\<noteq> \\<infinity>; parent_edge v = Some e;\n         num v = num (tail G e) + 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using parent_num_assms[OF Suc(3-5)]"], ["proof (prove)\nusing this:\n  \\<exists>e\\<in>arcs G.\n     parent_edge v = Some e \\<and>\n     head G e = v \\<and>\n     dist (tail G e) \\<noteq> \\<infinity> \\<and> num v = num (tail G e) + 1\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>e \\<in> arcs G; head G e = v;\n         dist (tail G e) \\<noteq> \\<infinity>; parent_edge v = Some e;\n         num v = num (tail G e) + 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  e \\<in> arcs G\n  head G e = v\n  dist (tail G e) \\<noteq> \\<infinity>\n  parent_edge v = Some e\n  num v = num (tail G e) + 1\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>\\<And>v.\n                   \\<lbrakk>x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n                    dist v \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>e.\n  s \\<rightarrow>\\<^sup>* tail G e \\<and>\n  e \\<in> arcs G \\<and>\n  head G e = v \\<and>\n  dist (tail G e) \\<noteq> \\<infinity> \\<and>\n  parent_edge v = Some e \\<and> num v = num (tail G e) + 1;\n        Suc x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n        dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            s \\<rightarrow>\\<^sup>* tail G e \\<and>\n                            e \\<in> arcs G \\<and>\n                            head G e = v \\<and>\n                            dist (tail G e) \\<noteq> \\<infinity> \\<and>\n                            parent_edge v = Some e \\<and>\n                            num v = num (tail G e) + 1", "then"], ["proof (chain)\npicking this:\n  e \\<in> arcs G\n  head G e = v\n  dist (tail G e) \\<noteq> \\<infinity>\n  parent_edge v = Some e\n  num v = num (tail G e) + 1", "have ss: \"tail G e \\<noteq> s\""], ["proof (prove)\nusing this:\n  e \\<in> arcs G\n  head G e = v\n  dist (tail G e) \\<noteq> \\<infinity>\n  parent_edge v = Some e\n  num v = num (tail G e) + 1\n\ngoal (1 subgoal):\n 1. tail G e \\<noteq> s", "using num_s_is_min tail_in_verts\n    Suc(2) s_assms(4)"], ["proof (prove)\nusing this:\n  e \\<in> arcs G\n  head G e = v\n  dist (tail G e) \\<noteq> \\<infinity>\n  parent_edge v = Some e\n  num v = num (tail G e) + 1\n  \\<lbrakk>?v \\<in> verts G; ?v \\<noteq> s;\n   dist ?v \\<noteq> \\<infinity>\\<rbrakk>\n  \\<Longrightarrow> 0 < num ?v\n  ?e \\<in> arcs G \\<Longrightarrow> tail G ?e \\<in> verts G\n  Suc n' = num v - 1\n  num s = 0\n\ngoal (1 subgoal):\n 1. tail G e \\<noteq> s", "by force"], ["proof (state)\nthis:\n  tail G e \\<noteq> s\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>\\<And>v.\n                   \\<lbrakk>x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n                    dist v \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>e.\n  s \\<rightarrow>\\<^sup>* tail G e \\<and>\n  e \\<in> arcs G \\<and>\n  head G e = v \\<and>\n  dist (tail G e) \\<noteq> \\<infinity> \\<and>\n  parent_edge v = Some e \\<and> num v = num (tail G e) + 1;\n        Suc x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n        dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            s \\<rightarrow>\\<^sup>* tail G e \\<and>\n                            e \\<in> arcs G \\<and>\n                            head G e = v \\<and>\n                            dist (tail G e) \\<noteq> \\<infinity> \\<and>\n                            parent_edge v = Some e \\<and>\n                            num v = num (tail G e) + 1", "have nst: \"n' = num (tail G e) - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n' = num (tail G e) - 1", "using ee(5) Suc(2)"], ["proof (prove)\nusing this:\n  num v = num (tail G e) + 1\n  Suc n' = num v - 1\n\ngoal (1 subgoal):\n 1. n' = num (tail G e) - 1", "by presburger"], ["proof (state)\nthis:\n  n' = num (tail G e) - 1\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>\\<And>v.\n                   \\<lbrakk>x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n                    dist v \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>e.\n  s \\<rightarrow>\\<^sup>* tail G e \\<and>\n  e \\<in> arcs G \\<and>\n  head G e = v \\<and>\n  dist (tail G e) \\<noteq> \\<infinity> \\<and>\n  parent_edge v = Some e \\<and> num v = num (tail G e) + 1;\n        Suc x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n        dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            s \\<rightarrow>\\<^sup>* tail G e \\<and>\n                            e \\<in> arcs G \\<and>\n                            head G e = v \\<and>\n                            dist (tail G e) \\<noteq> \\<infinity> \\<and>\n                            parent_edge v = Some e \\<and>\n                            num v = num (tail G e) + 1", "obtain e' where reach: \"s \\<rightarrow>\\<^sup>* tail G e'\" and\n    e': \"e' \\<in> arcs G\" \"head G e' = tail G e\" \"dist (tail G e') \\<noteq> \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>s \\<rightarrow>\\<^sup>* tail G e'; e' \\<in> arcs G;\n         head G e' = tail G e;\n         dist (tail G e') \\<noteq> \\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Suc(1)[OF nst tail_in_verts[OF ee(1)] ss ee(3)]"], ["proof (prove)\nusing this:\n  \\<exists>ea.\n     s \\<rightarrow>\\<^sup>* tail G ea \\<and>\n     ea \\<in> arcs G \\<and>\n     head G ea = tail G e \\<and>\n     dist (tail G ea) \\<noteq> \\<infinity> \\<and>\n     parent_edge (tail G e) = Some ea \\<and>\n     num (tail G e) = num (tail G ea) + 1\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>s \\<rightarrow>\\<^sup>* tail G e'; e' \\<in> arcs G;\n         head G e' = tail G e;\n         dist (tail G e') \\<noteq> \\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  s \\<rightarrow>\\<^sup>* tail G e'\n  e' \\<in> arcs G\n  head G e' = tail G e\n  dist (tail G e') \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>\\<And>v.\n                   \\<lbrakk>x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n                    dist v \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>e.\n  s \\<rightarrow>\\<^sup>* tail G e \\<and>\n  e \\<in> arcs G \\<and>\n  head G e = v \\<and>\n  dist (tail G e) \\<noteq> \\<infinity> \\<and>\n  parent_edge v = Some e \\<and> num v = num (tail G e) + 1;\n        Suc x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n        dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            s \\<rightarrow>\\<^sup>* tail G e \\<and>\n                            e \\<in> arcs G \\<and>\n                            head G e = v \\<and>\n                            dist (tail G e) \\<noteq> \\<infinity> \\<and>\n                            parent_edge v = Some e \\<and>\n                            num v = num (tail G e) + 1", "then"], ["proof (chain)\npicking this:\n  s \\<rightarrow>\\<^sup>* tail G e'\n  e' \\<in> arcs G\n  head G e' = tail G e\n  dist (tail G e') \\<noteq> \\<infinity>", "have \"s \\<rightarrow>\\<^sup>* tail G e\""], ["proof (prove)\nusing this:\n  s \\<rightarrow>\\<^sup>* tail G e'\n  e' \\<in> arcs G\n  head G e' = tail G e\n  dist (tail G e') \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. s \\<rightarrow>\\<^sup>* tail G e", "by (metis arc_implies_awalk reachable_awalk reachable_trans)"], ["proof (state)\nthis:\n  s \\<rightarrow>\\<^sup>* tail G e\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>\\<And>v.\n                   \\<lbrakk>x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n                    dist v \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>e.\n  s \\<rightarrow>\\<^sup>* tail G e \\<and>\n  e \\<in> arcs G \\<and>\n  head G e = v \\<and>\n  dist (tail G e) \\<noteq> \\<infinity> \\<and>\n  parent_edge v = Some e \\<and> num v = num (tail G e) + 1;\n        Suc x = num v - 1; v \\<in> verts G; v \\<noteq> s;\n        dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            s \\<rightarrow>\\<^sup>* tail G e \\<and>\n                            e \\<in> arcs G \\<and>\n                            head G e = v \\<and>\n                            dist (tail G e) \\<noteq> \\<infinity> \\<and>\n                            parent_edge v = Some e \\<and>\n                            num v = num (tail G e) + 1", "then"], ["proof (chain)\npicking this:\n  s \\<rightarrow>\\<^sup>* tail G e", "show ?case"], ["proof (prove)\nusing this:\n  s \\<rightarrow>\\<^sup>* tail G e\n\ngoal (1 subgoal):\n 1. \\<exists>e.\n       s \\<rightarrow>\\<^sup>* tail G e \\<and>\n       e \\<in> arcs G \\<and>\n       head G e = v \\<and>\n       dist (tail G e) \\<noteq> \\<infinity> \\<and>\n       parent_edge v = Some e \\<and> num v = num (tail G e) + 1", "using e' ee"], ["proof (prove)\nusing this:\n  s \\<rightarrow>\\<^sup>* tail G e\n  e' \\<in> arcs G\n  head G e' = tail G e\n  dist (tail G e') \\<noteq> \\<infinity>\n  e \\<in> arcs G\n  head G e = v\n  dist (tail G e) \\<noteq> \\<infinity>\n  parent_edge v = Some e\n  num v = num (tail G e) + 1\n\ngoal (1 subgoal):\n 1. \\<exists>e.\n       s \\<rightarrow>\\<^sup>* tail G e \\<and>\n       e \\<in> arcs G \\<and>\n       head G e = v \\<and>\n       dist (tail G e) \\<noteq> \\<infinity> \\<and>\n       parent_edge v = Some e \\<and> num v = num (tail G e) + 1", "by auto"], ["proof (state)\nthis:\n  \\<exists>e.\n     s \\<rightarrow>\\<^sup>* tail G e \\<and>\n     e \\<in> arcs G \\<and>\n     head G e = v \\<and>\n     dist (tail G e) \\<noteq> \\<infinity> \\<and>\n     parent_edge v = Some e \\<and> num v = num (tail G e) + 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in shortest_paths_locale_step1) path_from_root_Vr:\n  fixes v :: 'a\n  assumes \"v \\<in> verts G\"\n  assumes \"dist v \\<noteq> \\<infinity>\"\n  shows \"s \\<rightarrow>\\<^sup>* v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<rightarrow>\\<^sup>* v", "proof(cases \"v = s\")"], ["proof (state)\ngoal (2 subgoals):\n 1. v = s \\<Longrightarrow> s \\<rightarrow>\\<^sup>* v\n 2. v \\<noteq> s \\<Longrightarrow> s \\<rightarrow>\\<^sup>* v", "case True"], ["proof (state)\nthis:\n  v = s\n\ngoal (2 subgoals):\n 1. v = s \\<Longrightarrow> s \\<rightarrow>\\<^sup>* v\n 2. v \\<noteq> s \\<Longrightarrow> s \\<rightarrow>\\<^sup>* v", "thus ?thesis"], ["proof (prove)\nusing this:\n  v = s\n\ngoal (1 subgoal):\n 1. s \\<rightarrow>\\<^sup>* v", "using assms"], ["proof (prove)\nusing this:\n  v = s\n  v \\<in> verts G\n  dist v \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. s \\<rightarrow>\\<^sup>* v", "by simp"], ["proof (state)\nthis:\n  s \\<rightarrow>\\<^sup>* v\n\ngoal (1 subgoal):\n 1. v \\<noteq> s \\<Longrightarrow> s \\<rightarrow>\\<^sup>* v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<noteq> s \\<Longrightarrow> s \\<rightarrow>\\<^sup>* v", "case False"], ["proof (state)\nthis:\n  v \\<noteq> s\n\ngoal (1 subgoal):\n 1. v \\<noteq> s \\<Longrightarrow> s \\<rightarrow>\\<^sup>* v", "obtain e where \"s \\<rightarrow>\\<^sup>* tail G e\" \"e \\<in> arcs G\" \"head G e = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>s \\<rightarrow>\\<^sup>* tail G e; e \\<in> arcs G;\n         head G e = v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using path_from_root_Vr_ex[OF assms(1) False assms(2)]"], ["proof (prove)\nusing this:\n  \\<exists>e.\n     s \\<rightarrow>\\<^sup>* tail G e \\<and>\n     e \\<in> arcs G \\<and>\n     head G e = v \\<and>\n     dist (tail G e) \\<noteq> \\<infinity> \\<and>\n     parent_edge v = Some e \\<and> num v = num (tail G e) + 1\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>s \\<rightarrow>\\<^sup>* tail G e; e \\<in> arcs G;\n         head G e = v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  s \\<rightarrow>\\<^sup>* tail G e\n  e \\<in> arcs G\n  head G e = v\n\ngoal (1 subgoal):\n 1. v \\<noteq> s \\<Longrightarrow> s \\<rightarrow>\\<^sup>* v", "then"], ["proof (chain)\npicking this:\n  s \\<rightarrow>\\<^sup>* tail G e\n  e \\<in> arcs G\n  head G e = v", "have \"s \\<rightarrow>\\<^sup>* tail G e\" \"tail G e \\<rightarrow> v\""], ["proof (prove)\nusing this:\n  s \\<rightarrow>\\<^sup>* tail G e\n  e \\<in> arcs G\n  head G e = v\n\ngoal (1 subgoal):\n 1. s \\<rightarrow>\\<^sup>* tail G e &&& tail G e \\<rightarrow> v", "by (auto intro: in_arcs_imp_in_arcs_ends)"], ["proof (state)\nthis:\n  s \\<rightarrow>\\<^sup>* tail G e\n  tail G e \\<rightarrow> v\n\ngoal (1 subgoal):\n 1. v \\<noteq> s \\<Longrightarrow> s \\<rightarrow>\\<^sup>* v", "then"], ["proof (chain)\npicking this:\n  s \\<rightarrow>\\<^sup>* tail G e\n  tail G e \\<rightarrow> v", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<rightarrow>\\<^sup>* tail G e\n  tail G e \\<rightarrow> v\n\ngoal (1 subgoal):\n 1. s \\<rightarrow>\\<^sup>* v", "by (rule reachable_adj_trans)"], ["proof (state)\nthis:\n  s \\<rightarrow>\\<^sup>* v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in shortest_paths_locale_step1) \\<mu>_V_less_inf:\n  fixes v :: 'a\n  assumes \"v \\<in> verts G\"\n  assumes \"dist v \\<noteq> \\<infinity>\"\n  shows \"\\<mu> c s v \\<noteq> \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu> c s v \\<noteq> \\<infinity>", "using assms path_from_root_Vr \\<mu>_reach_conv"], ["proof (prove)\nusing this:\n  v \\<in> verts G\n  dist v \\<noteq> \\<infinity>\n  \\<lbrakk>?v \\<in> verts G; dist ?v \\<noteq> \\<infinity>\\<rbrakk>\n  \\<Longrightarrow> s \\<rightarrow>\\<^sup>* ?v\n  (\\<mu> ?f ?u ?v < \\<infinity>) = (?u \\<rightarrow>\\<^sup>* ?v)\n\ngoal (1 subgoal):\n 1. \\<mu> c s v \\<noteq> \\<infinity>", "by force"], ["", "lemma (in shortest_paths_locale_step2) enum_not0:\n  assumes \"v \\<in> verts G\"\n  assumes \"v \\<noteq> s\"\n  assumes \"enum v \\<noteq> \\<infinity>\"\n  shows \"enum v \\<noteq> enat 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enum v \\<noteq> enat 0", "using parent_num_assms[OF assms(1,2)] assms"], ["proof (prove)\nusing this:\n  dist v \\<noteq> \\<infinity> \\<Longrightarrow>\n  \\<exists>e\\<in>arcs G.\n     parent_edge v = Some e \\<and>\n     head G e = v \\<and>\n     dist (tail G e) \\<noteq> \\<infinity> \\<and> num v = num (tail G e) + 1\n  v \\<in> verts G\n  v \\<noteq> s\n  enum v \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. enum v \\<noteq> enat 0", "unfolding enum_def"], ["proof (prove)\nusing this:\n  dist v \\<noteq> \\<infinity> \\<Longrightarrow>\n  \\<exists>e\\<in>arcs G.\n     parent_edge v = Some e \\<and>\n     head G e = v \\<and>\n     dist (tail G e) \\<noteq> \\<infinity> \\<and> num v = num (tail G e) + 1\n  v \\<in> verts G\n  v \\<noteq> s\n  (if dist v = \\<infinity> \\<or> dist v = - \\<infinity> then \\<infinity>\n   else enat (num v)) \\<noteq>\n  \\<infinity>\n\ngoal (1 subgoal):\n 1. (if dist v = \\<infinity> \\<or> dist v = - \\<infinity> then \\<infinity>\n     else enat (num v)) \\<noteq>\n    enat 0", "by auto"], ["", "lemma (in shortest_paths_locale_step2) dist_Vf_\\<mu>:\n  fixes v :: 'a\n  assumes vG: \"v \\<in> verts G\"\n  assumes \"\\<exists>r. dist v = ereal r\"\n  shows \"dist v = \\<mu> c s v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist v = \\<mu> c s v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist v = \\<mu> c s v", "have ds: \"dist s =  0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist s = 0", "using assms source_val"], ["proof (prove)\nusing this:\n  v \\<in> verts G\n  \\<exists>r. dist v = ereal r\n  \\<exists>v\\<in>verts G. enum v \\<noteq> \\<infinity> \\<Longrightarrow>\n  dist s = 0\n\ngoal (1 subgoal):\n 1. dist s = 0", "unfolding enum_def"], ["proof (prove)\nusing this:\n  v \\<in> verts G\n  \\<exists>r. dist v = ereal r\n  \\<exists>v\\<in>verts G.\n     (if dist v = \\<infinity> \\<or> dist v = - \\<infinity> then \\<infinity>\n      else enat (num v)) \\<noteq>\n     \\<infinity> \\<Longrightarrow>\n  dist s = 0\n\ngoal (1 subgoal):\n 1. dist s = 0", "by force"], ["proof (state)\nthis:\n  dist s = 0\n\ngoal (1 subgoal):\n 1. dist v = \\<mu> c s v", "have ews:\"awalk s [] s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. awalk s [] s", "using s_assms(1)"], ["proof (prove)\nusing this:\n  s \\<in> verts G\n\ngoal (1 subgoal):\n 1. awalk s [] s", "unfolding awalk_def"], ["proof (prove)\nusing this:\n  s \\<in> verts G\n\ngoal (1 subgoal):\n 1. s \\<in> verts G \\<and> set [] \\<subseteq> arcs G \\<and> cas s [] s", "by simp"], ["proof (state)\nthis:\n  awalk s [] s\n\ngoal (1 subgoal):\n 1. dist v = \\<mu> c s v", "have mu: \"\\<mu> c s s = ereal 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu> c s s = ereal 0", "using min_cost_le_walk_cost[OF ews, where c=c] \n    awalk_cost_Nil ds  dist_le_\\<mu>[OF s_assms(1)] zero_ereal_def"], ["proof (prove)\nusing this:\n  \\<mu> c s s \\<le> ereal (awalk_cost c [])\n  awalk_cost ?f [] = 0\n  dist s = 0\n  dist s \\<le> \\<mu> c s s\n  0 = ereal 0\n\ngoal (1 subgoal):\n 1. \\<mu> c s s = ereal 0", "by simp"], ["proof (state)\nthis:\n  \\<mu> c s s = ereal 0\n\ngoal (1 subgoal):\n 1. dist v = \\<mu> c s v", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<mu> c s s = ereal 0\n\ngoal (1 subgoal):\n 1. dist v = \\<mu> c s v", "using ds assms dist_le_\\<mu>[OF vG] \n    dist_ge_\\<mu>[OF vG _ _ mu ds enum_not0]"], ["proof (prove)\nusing this:\n  \\<mu> c s s = ereal 0\n  dist s = 0\n  v \\<in> verts G\n  \\<exists>r. dist v = ereal r\n  dist v \\<le> \\<mu> c s v\n  \\<lbrakk>enum v \\<noteq> \\<infinity>; dist v \\<noteq> - \\<infinity>;\n   \\<And>u.\n      \\<lbrakk>u \\<in> verts G; u \\<noteq> s;\n       enum u \\<noteq> \\<infinity>\\<rbrakk>\n      \\<Longrightarrow> u \\<in> verts G;\n   \\<And>u.\n      \\<lbrakk>u \\<in> verts G; u \\<noteq> s;\n       enum u \\<noteq> \\<infinity>\\<rbrakk>\n      \\<Longrightarrow> u \\<noteq> s;\n   \\<And>u.\n      \\<lbrakk>u \\<in> verts G; u \\<noteq> s;\n       enum u \\<noteq> \\<infinity>\\<rbrakk>\n      \\<Longrightarrow> enum u \\<noteq> \\<infinity>\\<rbrakk>\n  \\<Longrightarrow> \\<mu> c s v \\<le> dist v\n\ngoal (1 subgoal):\n 1. dist v = \\<mu> c s v", "unfolding enum_def"], ["proof (prove)\nusing this:\n  \\<mu> c s s = ereal 0\n  dist s = 0\n  v \\<in> verts G\n  \\<exists>r. dist v = ereal r\n  dist v \\<le> \\<mu> c s v\n  \\<lbrakk>(if dist v = \\<infinity> \\<or> dist v = - \\<infinity>\n            then \\<infinity> else enat (num v)) \\<noteq>\n           \\<infinity>;\n   dist v \\<noteq> - \\<infinity>;\n   \\<And>u.\n      \\<lbrakk>u \\<in> verts G; u \\<noteq> s;\n       (if dist u = \\<infinity> \\<or> dist u = - \\<infinity>\n        then \\<infinity> else enat (num u)) \\<noteq>\n       \\<infinity>\\<rbrakk>\n      \\<Longrightarrow> u \\<in> verts G;\n   \\<And>u.\n      \\<lbrakk>u \\<in> verts G; u \\<noteq> s;\n       (if dist u = \\<infinity> \\<or> dist u = - \\<infinity>\n        then \\<infinity> else enat (num u)) \\<noteq>\n       \\<infinity>\\<rbrakk>\n      \\<Longrightarrow> u \\<noteq> s;\n   \\<And>u.\n      \\<lbrakk>u \\<in> verts G; u \\<noteq> s;\n       (if dist u = \\<infinity> \\<or> dist u = - \\<infinity>\n        then \\<infinity> else enat (num u)) \\<noteq>\n       \\<infinity>\\<rbrakk>\n      \\<Longrightarrow> (if dist u = \\<infinity> \\<or>\n                            dist u = - \\<infinity>\n                         then \\<infinity> else enat (num u)) \\<noteq>\n                        \\<infinity>\\<rbrakk>\n  \\<Longrightarrow> \\<mu> c s v \\<le> dist v\n\ngoal (1 subgoal):\n 1. dist v = \\<mu> c s v", "by fastforce"], ["proof (state)\nthis:\n  dist v = \\<mu> c s v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in shortest_paths_locale_step1) pwalk_awalk:\n  fixes v :: 'a\n  assumes \"v \\<in> verts G\"\n  assumes \"dist v \\<noteq> \\<infinity>\"\n  shows \"awalk s (pwalk v) v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. awalk s (pwalk v) v", "proof (cases \"v=s\")"], ["proof (state)\ngoal (2 subgoals):\n 1. v = s \\<Longrightarrow> awalk s (pwalk v) v\n 2. v \\<noteq> s \\<Longrightarrow> awalk s (pwalk v) v", "case True"], ["proof (state)\nthis:\n  v = s\n\ngoal (2 subgoals):\n 1. v = s \\<Longrightarrow> awalk s (pwalk v) v\n 2. v \\<noteq> s \\<Longrightarrow> awalk s (pwalk v) v", "thus ?thesis"], ["proof (prove)\nusing this:\n  v = s\n\ngoal (1 subgoal):\n 1. awalk s (pwalk v) v", "using assms pwalk.simps[where v=v] \n    awalk_Nil_iff"], ["proof (prove)\nusing this:\n  v = s\n  v \\<in> verts G\n  dist v \\<noteq> \\<infinity>\n  pwalk v =\n  (if v = s \\<or> dist v = \\<infinity> \\<or> v \\<notin> verts G then []\n   else pwalk (tail G (the (parent_edge v))) @ [the (parent_edge v)])\n  awalk ?u [] ?v = (?u = ?v \\<and> ?u \\<in> verts G)\n\ngoal (1 subgoal):\n 1. awalk s (pwalk v) v", "by presburger"], ["proof (state)\nthis:\n  awalk s (pwalk v) v\n\ngoal (1 subgoal):\n 1. v \\<noteq> s \\<Longrightarrow> awalk s (pwalk v) v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<noteq> s \\<Longrightarrow> awalk s (pwalk v) v", "case False"], ["proof (state)\nthis:\n  v \\<noteq> s\n\ngoal (1 subgoal):\n 1. v \\<noteq> s \\<Longrightarrow> awalk s (pwalk v) v", "from assms"], ["proof (chain)\npicking this:\n  v \\<in> verts G\n  dist v \\<noteq> \\<infinity>", "show ?thesis"], ["proof (prove)\nusing this:\n  v \\<in> verts G\n  dist v \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. awalk s (pwalk v) v", "proof (induct rule: pwalk.induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>\\<lbrakk>\\<not> (v = s \\<or>\n                                 dist v = \\<infinity> \\<or>\n                                 v \\<notin> verts G);\n                 tail G (the (parent_edge v)) \\<in> verts G;\n                 dist (tail G (the (parent_edge v))) \\<noteq>\n                 \\<infinity>\\<rbrakk>\n                \\<Longrightarrow> awalk s\n                                   (pwalk (tail G (the (parent_edge v))))\n                                   (tail G (the (parent_edge v)));\n        v \\<in> verts G; dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> awalk s (pwalk v) v", "fix v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>\\<lbrakk>\\<not> (v = s \\<or>\n                                 dist v = \\<infinity> \\<or>\n                                 v \\<notin> verts G);\n                 tail G (the (parent_edge v)) \\<in> verts G;\n                 dist (tail G (the (parent_edge v))) \\<noteq>\n                 \\<infinity>\\<rbrakk>\n                \\<Longrightarrow> awalk s\n                                   (pwalk (tail G (the (parent_edge v))))\n                                   (tail G (the (parent_edge v)));\n        v \\<in> verts G; dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> awalk s (pwalk v) v", "let ?e = \"the (parent_edge v)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>\\<lbrakk>\\<not> (v = s \\<or>\n                                 dist v = \\<infinity> \\<or>\n                                 v \\<notin> verts G);\n                 tail G (the (parent_edge v)) \\<in> verts G;\n                 dist (tail G (the (parent_edge v))) \\<noteq>\n                 \\<infinity>\\<rbrakk>\n                \\<Longrightarrow> awalk s\n                                   (pwalk (tail G (the (parent_edge v))))\n                                   (tail G (the (parent_edge v)));\n        v \\<in> verts G; dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> awalk s (pwalk v) v", "let ?u = \"tail G ?e\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>\\<lbrakk>\\<not> (v = s \\<or>\n                                 dist v = \\<infinity> \\<or>\n                                 v \\<notin> verts G);\n                 tail G (the (parent_edge v)) \\<in> verts G;\n                 dist (tail G (the (parent_edge v))) \\<noteq>\n                 \\<infinity>\\<rbrakk>\n                \\<Longrightarrow> awalk s\n                                   (pwalk (tail G (the (parent_edge v))))\n                                   (tail G (the (parent_edge v)));\n        v \\<in> verts G; dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> awalk s (pwalk v) v", "assume ewu: \"\\<not> (v = s \\<or> dist v = \\<infinity> \\<or> v \\<notin> verts G) \\<Longrightarrow> \n                 ?u \\<in> verts G \\<Longrightarrow> dist ?u \\<noteq> \\<infinity> \\<Longrightarrow> \n                 awalk s (pwalk ?u) ?u\""], ["proof (state)\nthis:\n  \\<lbrakk>\\<not> (v = s \\<or>\n                   dist v = \\<infinity> \\<or> v \\<notin> verts G);\n   tail G (the (parent_edge v)) \\<in> verts G;\n   dist (tail G (the (parent_edge v))) \\<noteq> \\<infinity>\\<rbrakk>\n  \\<Longrightarrow> awalk s (pwalk (tail G (the (parent_edge v))))\n                     (tail G (the (parent_edge v)))\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>\\<lbrakk>\\<not> (v = s \\<or>\n                                 dist v = \\<infinity> \\<or>\n                                 v \\<notin> verts G);\n                 tail G (the (parent_edge v)) \\<in> verts G;\n                 dist (tail G (the (parent_edge v))) \\<noteq>\n                 \\<infinity>\\<rbrakk>\n                \\<Longrightarrow> awalk s\n                                   (pwalk (tail G (the (parent_edge v))))\n                                   (tail G (the (parent_edge v)));\n        v \\<in> verts G; dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> awalk s (pwalk v) v", "assume vG: \"v \\<in> verts G\""], ["proof (state)\nthis:\n  v \\<in> verts G\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>\\<lbrakk>\\<not> (v = s \\<or>\n                                 dist v = \\<infinity> \\<or>\n                                 v \\<notin> verts G);\n                 tail G (the (parent_edge v)) \\<in> verts G;\n                 dist (tail G (the (parent_edge v))) \\<noteq>\n                 \\<infinity>\\<rbrakk>\n                \\<Longrightarrow> awalk s\n                                   (pwalk (tail G (the (parent_edge v))))\n                                   (tail G (the (parent_edge v)));\n        v \\<in> verts G; dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> awalk s (pwalk v) v", "assume dv: \"dist v \\<noteq> \\<infinity>\""], ["proof (state)\nthis:\n  dist v \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>\\<lbrakk>\\<not> (v = s \\<or>\n                                 dist v = \\<infinity> \\<or>\n                                 v \\<notin> verts G);\n                 tail G (the (parent_edge v)) \\<in> verts G;\n                 dist (tail G (the (parent_edge v))) \\<noteq>\n                 \\<infinity>\\<rbrakk>\n                \\<Longrightarrow> awalk s\n                                   (pwalk (tail G (the (parent_edge v))))\n                                   (tail G (the (parent_edge v)));\n        v \\<in> verts G; dist v \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> awalk s (pwalk v) v", "thus \"awalk s (pwalk v) v \""], ["proof (prove)\nusing this:\n  dist v \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. awalk s (pwalk v) v", "proof (cases \"v = s \\<or> dist v = \\<infinity> \\<or> v \\<notin> verts G\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>dist v \\<noteq> \\<infinity>;\n     v = s \\<or> dist v = \\<infinity> \\<or> v \\<notin> verts G\\<rbrakk>\n    \\<Longrightarrow> awalk s (pwalk v) v\n 2. \\<lbrakk>dist v \\<noteq> \\<infinity>;\n     \\<not> (v = s \\<or>\n             dist v = \\<infinity> \\<or> v \\<notin> verts G)\\<rbrakk>\n    \\<Longrightarrow> awalk s (pwalk v) v", "case True"], ["proof (state)\nthis:\n  v = s \\<or> dist v = \\<infinity> \\<or> v \\<notin> verts G\n\ngoal (2 subgoals):\n 1. \\<lbrakk>dist v \\<noteq> \\<infinity>;\n     v = s \\<or> dist v = \\<infinity> \\<or> v \\<notin> verts G\\<rbrakk>\n    \\<Longrightarrow> awalk s (pwalk v) v\n 2. \\<lbrakk>dist v \\<noteq> \\<infinity>;\n     \\<not> (v = s \\<or>\n             dist v = \\<infinity> \\<or> v \\<notin> verts G)\\<rbrakk>\n    \\<Longrightarrow> awalk s (pwalk v) v", "thus ?thesis"], ["proof (prove)\nusing this:\n  v = s \\<or> dist v = \\<infinity> \\<or> v \\<notin> verts G\n\ngoal (1 subgoal):\n 1. awalk s (pwalk v) v", "using pwalk.simps vG dv \n        awalk_Nil_iff"], ["proof (prove)\nusing this:\n  v = s \\<or> dist v = \\<infinity> \\<or> v \\<notin> verts G\n  pwalk ?v =\n  (if ?v = s \\<or> dist ?v = \\<infinity> \\<or> ?v \\<notin> verts G then []\n   else pwalk (tail G (the (parent_edge ?v))) @ [the (parent_edge ?v)])\n  v \\<in> verts G\n  dist v \\<noteq> \\<infinity>\n  awalk ?u [] ?v = (?u = ?v \\<and> ?u \\<in> verts G)\n\ngoal (1 subgoal):\n 1. awalk s (pwalk v) v", "by fastforce"], ["proof (state)\nthis:\n  awalk s (pwalk v) v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dist v \\<noteq> \\<infinity>;\n     \\<not> (v = s \\<or>\n             dist v = \\<infinity> \\<or> v \\<notin> verts G)\\<rbrakk>\n    \\<Longrightarrow> awalk s (pwalk v) v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>dist v \\<noteq> \\<infinity>;\n     \\<not> (v = s \\<or>\n             dist v = \\<infinity> \\<or> v \\<notin> verts G)\\<rbrakk>\n    \\<Longrightarrow> awalk s (pwalk v) v", "case False"], ["proof (state)\nthis:\n  \\<not> (v = s \\<or> dist v = \\<infinity> \\<or> v \\<notin> verts G)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dist v \\<noteq> \\<infinity>;\n     \\<not> (v = s \\<or>\n             dist v = \\<infinity> \\<or> v \\<notin> verts G)\\<rbrakk>\n    \\<Longrightarrow> awalk s (pwalk v) v", "obtain e  where ee:\n        \"e \\<in>arcs G\" \n        \"parent_edge v = Some e\" \n        \"head G e = v\" \n        \"dist (tail G e) \\<noteq> \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>e \\<in> arcs G; parent_edge v = Some e; head G e = v;\n         dist (tail G e) \\<noteq> \\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using parent_num_assms False"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> verts G; ?v \\<noteq> s;\n   dist ?v \\<noteq> \\<infinity>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>e\\<in>arcs G.\n                       parent_edge ?v = Some e \\<and>\n                       head G e = ?v \\<and>\n                       dist (tail G e) \\<noteq> \\<infinity> \\<and>\n                       num ?v = num (tail G e) + 1\n  \\<not> (v = s \\<or> dist v = \\<infinity> \\<or> v \\<notin> verts G)\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>e \\<in> arcs G; parent_edge v = Some e; head G e = v;\n         dist (tail G e) \\<noteq> \\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  e \\<in> arcs G\n  parent_edge v = Some e\n  head G e = v\n  dist (tail G e) \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dist v \\<noteq> \\<infinity>;\n     \\<not> (v = s \\<or>\n             dist v = \\<infinity> \\<or> v \\<notin> verts G)\\<rbrakk>\n    \\<Longrightarrow> awalk s (pwalk v) v", "hence \"awalk s (pwalk ?u) ?u\""], ["proof (prove)\nusing this:\n  e \\<in> arcs G\n  parent_edge v = Some e\n  head G e = v\n  dist (tail G e) \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. awalk s (pwalk (tail G (the (parent_edge v))))\n     (tail G (the (parent_edge v)))", "using ewu[OF False] tail_in_verts"], ["proof (prove)\nusing this:\n  e \\<in> arcs G\n  parent_edge v = Some e\n  head G e = v\n  dist (tail G e) \\<noteq> \\<infinity>\n  \\<lbrakk>tail G (the (parent_edge v)) \\<in> verts G;\n   dist (tail G (the (parent_edge v))) \\<noteq> \\<infinity>\\<rbrakk>\n  \\<Longrightarrow> awalk s (pwalk (tail G (the (parent_edge v))))\n                     (tail G (the (parent_edge v)))\n  ?e \\<in> arcs G \\<Longrightarrow> tail G ?e \\<in> verts G\n\ngoal (1 subgoal):\n 1. awalk s (pwalk (tail G (the (parent_edge v))))\n     (tail G (the (parent_edge v)))", "by simp"], ["proof (state)\nthis:\n  awalk s (pwalk (tail G (the (parent_edge v))))\n   (tail G (the (parent_edge v)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dist v \\<noteq> \\<infinity>;\n     \\<not> (v = s \\<or>\n             dist v = \\<infinity> \\<or> v \\<notin> verts G)\\<rbrakk>\n    \\<Longrightarrow> awalk s (pwalk v) v", "hence \"awalk s (pwalk (tail G e) @ [e]) v\""], ["proof (prove)\nusing this:\n  awalk s (pwalk (tail G (the (parent_edge v))))\n   (tail G (the (parent_edge v)))\n\ngoal (1 subgoal):\n 1. awalk s (pwalk (tail G e) @ [e]) v", "using ee(1-3) vG"], ["proof (prove)\nusing this:\n  awalk s (pwalk (tail G (the (parent_edge v))))\n   (tail G (the (parent_edge v)))\n  e \\<in> arcs G\n  parent_edge v = Some e\n  head G e = v\n  v \\<in> verts G\n\ngoal (1 subgoal):\n 1. awalk s (pwalk (tail G e) @ [e]) v", "by (auto simp: awalk_simps simp del: pwalk.simps)"], ["proof (state)\nthis:\n  awalk s (pwalk (tail G e) @ [e]) v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dist v \\<noteq> \\<infinity>;\n     \\<not> (v = s \\<or>\n             dist v = \\<infinity> \\<or> v \\<notin> verts G)\\<rbrakk>\n    \\<Longrightarrow> awalk s (pwalk v) v", "also"], ["proof (state)\nthis:\n  awalk s (pwalk (tail G e) @ [e]) v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dist v \\<noteq> \\<infinity>;\n     \\<not> (v = s \\<or>\n             dist v = \\<infinity> \\<or> v \\<notin> verts G)\\<rbrakk>\n    \\<Longrightarrow> awalk s (pwalk v) v", "have \"pwalk (tail G e) @ [e] = pwalk v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pwalk (tail G e) @ [e] = pwalk v", "using False ee(2)"], ["proof (prove)\nusing this:\n  \\<not> (v = s \\<or> dist v = \\<infinity> \\<or> v \\<notin> verts G)\n  parent_edge v = Some e\n\ngoal (1 subgoal):\n 1. pwalk (tail G e) @ [e] = pwalk v", "unfolding pwalk.simps[where v=v]"], ["proof (prove)\nusing this:\n  \\<not> (v = s \\<or> dist v = \\<infinity> \\<or> v \\<notin> verts G)\n  parent_edge v = Some e\n\ngoal (1 subgoal):\n 1. pwalk (tail G e) @ [e] =\n    (if v = s \\<or> dist v = \\<infinity> \\<or> v \\<notin> verts G then []\n     else pwalk (tail G (the (parent_edge v))) @ [the (parent_edge v)])", "by auto"], ["proof (state)\nthis:\n  pwalk (tail G e) @ [e] = pwalk v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dist v \\<noteq> \\<infinity>;\n     \\<not> (v = s \\<or>\n             dist v = \\<infinity> \\<or> v \\<notin> verts G)\\<rbrakk>\n    \\<Longrightarrow> awalk s (pwalk v) v", "finally"], ["proof (chain)\npicking this:\n  awalk s (pwalk v) v", "show ?thesis"], ["proof (prove)\nusing this:\n  awalk s (pwalk v) v\n\ngoal (1 subgoal):\n 1. awalk s (pwalk v) v", "."], ["proof (state)\nthis:\n  awalk s (pwalk v) v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  awalk s (pwalk v) v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  awalk s (pwalk v) v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in shortest_paths_locale_step3) \\<mu>_ninf:\n  fixes v :: 'a\n  assumes \"v \\<in> verts G\"\n  assumes \"dist v = - \\<infinity>\"\n  shows \"\\<mu> c s v = - \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu> c s v = - \\<infinity>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<mu> c s v = - \\<infinity>", "have \"awalk s (pwalk v) v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. awalk s (pwalk v) v", "using pwalk_awalk assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> verts G; dist ?v \\<noteq> \\<infinity>\\<rbrakk>\n  \\<Longrightarrow> awalk s (pwalk ?v) ?v\n  v \\<in> verts G\n  dist v = - \\<infinity>\n\ngoal (1 subgoal):\n 1. awalk s (pwalk v) v", "by force"], ["proof (state)\nthis:\n  awalk s (pwalk v) v\n\ngoal (1 subgoal):\n 1. \\<mu> c s v = - \\<infinity>", "moreover"], ["proof (state)\nthis:\n  awalk s (pwalk v) v\n\ngoal (1 subgoal):\n 1. \\<mu> c s v = - \\<infinity>", "obtain w where ww: \"w \\<in> fst ` C \\<inter> pwalk_verts v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>w.\n        w \\<in> fst ` C \\<inter> pwalk_verts v \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using int_neg_cyc[OF assms]"], ["proof (prove)\nusing this:\n  fst ` C \\<inter> pwalk_verts v \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        w \\<in> fst ` C \\<inter> pwalk_verts v \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  w \\<in> fst ` C \\<inter> pwalk_verts v\n\ngoal (1 subgoal):\n 1. \\<mu> c s v = - \\<infinity>", "then"], ["proof (chain)\npicking this:\n  w \\<in> fst ` C \\<inter> pwalk_verts v", "obtain q where \n     \"awalk w q w\" \n     \"awalk_cost c q < 0\""], ["proof (prove)\nusing this:\n  w \\<in> fst ` C \\<inter> pwalk_verts v\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>awalk w q w; awalk_cost c q < 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using C_se"], ["proof (prove)\nusing this:\n  w \\<in> fst ` C \\<inter> pwalk_verts v\n  C \\<subseteq> {(u, p).\n                 dist u \\<noteq> \\<infinity> \\<and>\n                 awalk u p u \\<and> awalk_cost c p < 0}\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>awalk w q w; awalk_cost c q < 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  awalk w q w\n  awalk_cost c q < 0\n\ngoal (1 subgoal):\n 1. \\<mu> c s v = - \\<infinity>", "moreover"], ["proof (state)\nthis:\n  awalk w q w\n  awalk_cost c q < 0\n\ngoal (1 subgoal):\n 1. \\<mu> c s v = - \\<infinity>", "have \"w \\<in> set (awalk_verts s (pwalk v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> set (awalk_verts s (pwalk v))", "using ww"], ["proof (prove)\nusing this:\n  w \\<in> fst ` C \\<inter> pwalk_verts v\n\ngoal (1 subgoal):\n 1. w \\<in> set (awalk_verts s (pwalk v))", "unfolding pwalk_verts_def"], ["proof (prove)\nusing this:\n  w \\<in> fst ` C \\<inter> {u. u \\<in> set (awalk_verts s (pwalk v))}\n\ngoal (1 subgoal):\n 1. w \\<in> set (awalk_verts s (pwalk v))", "by fast"], ["proof (state)\nthis:\n  w \\<in> set (awalk_verts s (pwalk v))\n\ngoal (1 subgoal):\n 1. \\<mu> c s v = - \\<infinity>", "ultimately"], ["proof (chain)\npicking this:\n  awalk s (pwalk v) v\n  awalk w q w\n  awalk_cost c q < 0\n  w \\<in> set (awalk_verts s (pwalk v))", "show ?thesis"], ["proof (prove)\nusing this:\n  awalk s (pwalk v) v\n  awalk w q w\n  awalk_cost c q < 0\n  w \\<in> set (awalk_verts s (pwalk v))\n\ngoal (1 subgoal):\n 1. \\<mu> c s v = - \\<infinity>", "using  neg_cycle_imp_inf_\\<mu>"], ["proof (prove)\nusing this:\n  awalk s (pwalk v) v\n  awalk w q w\n  awalk_cost c q < 0\n  w \\<in> set (awalk_verts s (pwalk v))\n  \\<lbrakk>awalk ?u ?p ?v; awalk ?w ?c ?w; ?w \\<in> set (awalk_verts ?u ?p);\n   awalk_cost ?f ?c < 0\\<rbrakk>\n  \\<Longrightarrow> \\<mu> ?f ?u ?v = - \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<mu> c s v = - \\<infinity>", "by force"], ["proof (state)\nthis:\n  \\<mu> c s v = - \\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in shortest_paths_locale_step3) correct_shortest_path:\n  fixes v :: 'a\n  assumes \"v \\<in> verts G\"\n  shows \"dist v = \\<mu> c s v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist v = \\<mu> c s v", "proof(cases \"dist v\")"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>r. dist v = ereal r \\<Longrightarrow> dist v = \\<mu> c s v\n 2. dist v = \\<infinity> \\<Longrightarrow> dist v = \\<mu> c s v\n 3. dist v = - \\<infinity> \\<Longrightarrow> dist v = \\<mu> c s v", "show \" \\<And>r. dist v = ereal r \\<Longrightarrow> dist v = \\<mu> c s v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r. dist v = ereal r \\<Longrightarrow> dist v = \\<mu> c s v", "using dist_Vf_\\<mu>[OF assms]"], ["proof (prove)\nusing this:\n  \\<exists>r. dist v = ereal r \\<Longrightarrow> dist v = \\<mu> c s v\n\ngoal (1 subgoal):\n 1. \\<And>r. dist v = ereal r \\<Longrightarrow> dist v = \\<mu> c s v", "by simp"], ["proof (state)\nthis:\n  dist v = ereal ?r1 \\<Longrightarrow> dist v = \\<mu> c s v\n\ngoal (2 subgoals):\n 1. dist v = \\<infinity> \\<Longrightarrow> dist v = \\<mu> c s v\n 2. dist v = - \\<infinity> \\<Longrightarrow> dist v = \\<mu> c s v", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. dist v = \\<infinity> \\<Longrightarrow> dist v = \\<mu> c s v\n 2. dist v = - \\<infinity> \\<Longrightarrow> dist v = \\<mu> c s v", "show \"dist v = \\<infinity> \\<Longrightarrow> dist v = \\<mu> c s v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist v = \\<infinity> \\<Longrightarrow> dist v = \\<mu> c s v", "using \\<mu>_V_less_inf[OF assms] \n  dist_le_\\<mu>[OF assms]"], ["proof (prove)\nusing this:\n  dist v \\<noteq> \\<infinity> \\<Longrightarrow>\n  \\<mu> c s v \\<noteq> \\<infinity>\n  dist v \\<le> \\<mu> c s v\n\ngoal (1 subgoal):\n 1. dist v = \\<infinity> \\<Longrightarrow> dist v = \\<mu> c s v", "by simp"], ["proof (state)\nthis:\n  dist v = \\<infinity> \\<Longrightarrow> dist v = \\<mu> c s v\n\ngoal (1 subgoal):\n 1. dist v = - \\<infinity> \\<Longrightarrow> dist v = \\<mu> c s v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. dist v = - \\<infinity> \\<Longrightarrow> dist v = \\<mu> c s v", "show \"dist v = -\\<infinity> \\<Longrightarrow> dist v = \\<mu> c s v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist v = - \\<infinity> \\<Longrightarrow> dist v = \\<mu> c s v", "using \\<mu>_ninf[OF assms]"], ["proof (prove)\nusing this:\n  dist v = - \\<infinity> \\<Longrightarrow> \\<mu> c s v = - \\<infinity>\n\ngoal (1 subgoal):\n 1. dist v = - \\<infinity> \\<Longrightarrow> dist v = \\<mu> c s v", "by simp"], ["proof (state)\nthis:\n  dist v = - \\<infinity> \\<Longrightarrow> dist v = \\<mu> c s v\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}